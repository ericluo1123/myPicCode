

Microchip Technology PIC LITE Macro Assembler V1.32 build 58300 
                                                                                               Tue Sep 09 09:15:51 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	16F1518
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK3,global,class=CODE,delta=2
     5                           	psect	idataBANK4,global,class=CODE,delta=2
     6                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     7                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1
    10                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    14                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    15                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    16                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1
    17                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1
    18                           	psect	clrtext,global,class=CODE,delta=2
    19                           	psect	inittext,global,class=CODE,delta=2
    20                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    21                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    22                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    23                           	psect	text1,local,class=CODE,merge=1,delta=2
    24                           	psect	text2,local,class=CODE,merge=1,delta=2
    25                           	psect	text3,local,class=CODE,merge=1,delta=2
    26                           	psect	text4,local,class=CODE,merge=1,delta=2
    27                           	psect	text5,local,class=CODE,merge=1,delta=2
    28                           	psect	text6,local,class=CODE,merge=1,delta=2
    29                           	psect	text7,local,class=CODE,merge=1,delta=2
    30                           	psect	text8,local,class=CODE,merge=1,delta=2
    31                           	psect	text9,local,class=CODE,merge=1,delta=2
    32                           	psect	text10,local,class=CODE,merge=1,delta=2
    33                           	psect	text11,local,class=CODE,merge=1,delta=2
    34                           	psect	text12,local,class=CODE,merge=1,delta=2
    35                           	psect	text13,local,class=CODE,merge=1,delta=2
    36                           	psect	text14,local,class=CODE,merge=1,delta=2
    37                           	psect	text15,local,class=CODE,merge=1,delta=2
    38                           	psect	text16,local,class=CODE,merge=1,delta=2
    39                           	psect	text17,local,class=CODE,merge=1,delta=2
    40                           	psect	text18,local,class=CODE,merge=1,delta=2
    41                           	psect	text19,local,class=CODE,merge=1,delta=2
    42                           	psect	text20,local,class=CODE,merge=1,delta=2
    43                           	psect	text21,local,class=CODE,merge=1,delta=2
    44                           	psect	text22,local,class=CODE,merge=1,delta=2
    45                           	psect	text23,local,class=CODE,merge=1,delta=2
    46                           	psect	text24,local,class=CODE,merge=1,delta=2
    47                           	psect	text25,local,class=CODE,merge=1,delta=2
    48                           	psect	text26,local,class=CODE,merge=1,delta=2
    49                           	psect	text27,local,class=CODE,merge=1,delta=2
    50                           	psect	text28,local,class=CODE,merge=1,delta=2
    51                           	psect	text29,local,class=CODE,merge=1,delta=2
    52                           	psect	text30,local,class=CODE,merge=1,delta=2
    53                           	psect	text31,local,class=CODE,merge=1,delta=2
    54                           	psect	text32,local,class=CODE,merge=1,delta=2
    55                           	psect	text33,local,class=CODE,merge=1,delta=2
    56                           	psect	text34,local,class=CODE,merge=1,delta=2
    57                           	psect	text35,local,class=CODE,merge=1,delta=2
    58                           	psect	text36,local,class=CODE,merge=1,delta=2
    59                           	psect	text37,local,class=CODE,merge=1,delta=2
    60                           	psect	text38,local,class=CODE,merge=1,delta=2
    61                           	psect	text39,local,class=CODE,merge=1,delta=2
    62                           	psect	text40,local,class=CODE,merge=1,delta=2
    63                           	psect	text41,local,class=CODE,merge=1,delta=2
    64                           	psect	text42,local,class=CODE,merge=1,delta=2
    65                           	psect	text43,local,class=CODE,merge=1,delta=2
    66                           	psect	text44,local,class=CODE,merge=1,delta=2
    67                           	psect	text45,local,class=CODE,merge=1,delta=2
    68                           	psect	text46,local,class=CODE,merge=1,delta=2
    69                           	psect	text47,local,class=CODE,merge=1,delta=2
    70                           	psect	text48,local,class=CODE,merge=1,delta=2
    71                           	psect	text49,local,class=CODE,merge=1,delta=2
    72                           	psect	text50,local,class=CODE,merge=1,delta=2
    73                           	psect	text51,local,class=CODE,merge=1,delta=2
    74                           	psect	text52,local,class=CODE,merge=1,delta=2
    75                           	psect	text53,local,class=CODE,merge=1,delta=2
    76                           	psect	text54,local,class=CODE,merge=1,delta=2
    77                           	psect	text55,local,class=CODE,merge=1,delta=2
    78                           	psect	text56,local,class=CODE,merge=1,delta=2
    79                           	psect	text57,local,class=CODE,merge=1,delta=2
    80                           	psect	text58,local,class=CODE,merge=1,delta=2
    81                           	psect	text59,local,class=CODE,merge=1,delta=2
    82                           	psect	text60,local,class=CODE,merge=1,delta=2
    83                           	psect	text61,local,class=CODE,merge=1,delta=2
    84                           	psect	text62,local,class=CODE,merge=1,delta=2
    85                           	psect	text63,local,class=CODE,merge=1,delta=2
    86                           	psect	text64,local,class=CODE,merge=1,delta=2
    87                           	psect	text65,local,class=CODE,merge=1,delta=2
    88                           	psect	text66,local,class=CODE,merge=1,delta=2
    89                           	psect	text67,local,class=CODE,merge=1,delta=2
    90                           	psect	text68,local,class=CODE,merge=1,delta=2
    91                           	psect	text69,local,class=CODE,merge=1,delta=2
    92                           	psect	text70,local,class=CODE,merge=1,delta=2
    93                           	psect	text71,local,class=CODE,merge=1,delta=2
    94                           	psect	text72,local,class=CODE,merge=1,delta=2
    95                           	psect	text73,local,class=CODE,merge=1,delta=2
    96                           	psect	text74,local,class=CODE,merge=1,delta=2
    97                           	psect	text75,local,class=CODE,merge=1,delta=2
    98                           	psect	text76,local,class=CODE,merge=1,delta=2
    99                           	psect	text77,local,class=CODE,merge=1,delta=2
   100                           	psect	text78,local,class=CODE,merge=1,delta=2
   101                           	psect	text79,local,class=CODE,merge=1,delta=2
   102                           	psect	text80,local,class=CODE,merge=1,delta=2
   103                           	psect	text81,local,class=CODE,merge=1,delta=2
   104                           	psect	text82,local,class=CODE,merge=1,delta=2
   105                           	psect	text83,local,class=CODE,merge=1,delta=2
   106                           	psect	text84,local,class=CODE,merge=1,delta=2
   107                           	psect	text85,local,class=CODE,merge=1,delta=2
   108                           	psect	text86,local,class=CODE,merge=1,delta=2
   109                           	psect	text87,local,class=CODE,merge=1,delta=2
   110                           	psect	text88,local,class=CODE,merge=1,delta=2
   111                           	psect	text89,local,class=CODE,merge=1,delta=2
   112                           	psect	text90,local,class=CODE,merge=1,delta=2
   113                           	psect	text91,local,class=CODE,merge=1,delta=2
   114                           	psect	text92,local,class=CODE,merge=1,delta=2
   115                           	psect	text93,local,class=CODE,merge=1,delta=2
   116                           	psect	text94,local,class=CODE,merge=1,delta=2
   117                           	psect	text95,local,class=CODE,merge=1,delta=2
   118                           	psect	text96,local,class=CODE,merge=1,delta=2
   119                           	psect	text97,local,class=CODE,merge=1,delta=2
   120                           	psect	text98,local,class=CODE,merge=1,delta=2
   121                           	psect	text99,local,class=CODE,merge=1,delta=2
   122                           	psect	text100,local,class=CODE,merge=1,delta=2
   123                           	psect	text101,local,class=CODE,merge=1,delta=2
   124                           	psect	text102,local,class=CODE,merge=1,delta=2
   125                           	psect	text103,local,class=CODE,merge=1,delta=2
   126                           	psect	text104,local,class=CODE,merge=1,delta=2
   127                           	psect	text105,local,class=CODE,merge=1,delta=2
   128                           	psect	text106,local,class=CODE,merge=1,delta=2
   129                           	psect	text107,local,class=CODE,merge=1,delta=2
   130                           	psect	text108,local,class=CODE,merge=1,delta=2
   131                           	psect	text109,local,class=CODE,merge=1,delta=2
   132                           	psect	text110,local,class=CODE,merge=1,delta=2
   133                           	psect	text111,local,class=CODE,merge=1,delta=2
   134                           	psect	text112,local,class=CODE,merge=1,delta=2
   135                           	psect	text113,local,class=CODE,merge=1,delta=2
   136                           	psect	text114,local,class=CODE,merge=1,delta=2
   137                           	psect	text115,local,class=CODE,merge=1,delta=2
   138                           	psect	text116,local,class=CODE,merge=1,delta=2
   139                           	psect	text117,local,class=CODE,merge=1,delta=2
   140                           	psect	text118,local,class=CODE,merge=1,delta=2
   141                           	psect	text119,local,class=CODE,merge=1,delta=2
   142                           	psect	text120,local,class=CODE,merge=1,delta=2
   143                           	psect	text121,local,class=CODE,merge=1,delta=2
   144                           	psect	text122,local,class=CODE,merge=1,delta=2
   145                           	psect	text123,local,class=CODE,merge=1,delta=2
   146                           	psect	text124,local,class=CODE,merge=1,delta=2
   147                           	psect	text125,local,class=CODE,merge=1,delta=2
   148                           	psect	text126,local,class=CODE,merge=1,delta=2
   149                           	psect	text127,local,class=CODE,merge=1,delta=2
   150                           	psect	text128,local,class=CODE,merge=1,delta=2
   151                           	psect	text129,local,class=CODE,merge=1,delta=2
   152                           	psect	text130,local,class=CODE,merge=1,delta=2
   153                           	psect	text131,local,class=CODE,merge=1,delta=2
   154                           	psect	text132,local,class=CODE,merge=1,delta=2
   155                           	psect	text133,local,class=CODE,merge=1,delta=2
   156                           	psect	text134,local,class=CODE,merge=1,delta=2
   157                           	psect	text135,local,class=CODE,merge=1,delta=2
   158                           	psect	text136,local,class=CODE,merge=1,delta=2
   159                           	psect	text137,local,class=CODE,merge=1,delta=2
   160                           	psect	text138,local,class=CODE,merge=1,delta=2
   161                           	psect	text139,local,class=CODE,merge=1,delta=2
   162                           	psect	text140,local,class=CODE,merge=1,delta=2
   163                           	psect	text141,local,class=CODE,merge=1,delta=2
   164                           	psect	text142,local,class=CODE,merge=1,delta=2
   165                           	psect	text143,local,class=CODE,merge=1,delta=2
   166                           	psect	text144,local,class=CODE,merge=1,delta=2
   167                           	psect	text145,local,class=CODE,merge=1,delta=2
   168                           	psect	text146,local,class=CODE,merge=1,delta=2
   169                           	psect	text147,local,class=CODE,merge=1,delta=2
   170                           	psect	text148,local,class=CODE,merge=1,delta=2
   171                           	psect	text149,local,class=CODE,merge=1,delta=2
   172                           	psect	text150,local,class=CODE,merge=1,delta=2
   173                           	psect	text151,local,class=CODE,merge=1,delta=2
   174                           	psect	text152,local,class=CODE,merge=1,delta=2
   175                           	psect	text153,local,class=CODE,merge=1,delta=2
   176                           	psect	intentry,global,class=CODE,delta=2
   177                           	psect	text155,local,class=CODE,merge=1,delta=2
   178                           	psect	text156,local,class=CODE,merge=1,delta=2
   179                           	psect	text157,local,class=CODE,merge=1,delta=2
   180                           	psect	text158,local,class=CODE,merge=1,delta=2
   181                           	psect	text159,local,class=CODE,merge=1,delta=2
   182                           	psect	text160,local,class=CODE,merge=1,delta=2
   183                           	psect	text161,local,class=CODE,merge=1,delta=2
   184                           	psect	text162,local,class=CODE,merge=1,delta=2
   185                           	dabs	1,0x7E,2
   186  0000                     	;# 
   187  0001                     	;# 
   188  0002                     	;# 
   189  0003                     	;# 
   190  0004                     	;# 
   191  0005                     	;# 
   192  0006                     	;# 
   193  0007                     	;# 
   194  0008                     	;# 
   195  0009                     	;# 
   196  000A                     	;# 
   197  000B                     	;# 
   198  000C                     	;# 
   199  000D                     	;# 
   200  000E                     	;# 
   201  0010                     	;# 
   202  0011                     	;# 
   203  0012                     	;# 
   204  0015                     	;# 
   205  0016                     	;# 
   206  0016                     	;# 
   207  0017                     	;# 
   208  0018                     	;# 
   209  0019                     	;# 
   210  001A                     	;# 
   211  001B                     	;# 
   212  001C                     	;# 
   213  008C                     	;# 
   214  008D                     	;# 
   215  008E                     	;# 
   216  0090                     	;# 
   217  0091                     	;# 
   218  0092                     	;# 
   219  0095                     	;# 
   220  0096                     	;# 
   221  0097                     	;# 
   222  0099                     	;# 
   223  009A                     	;# 
   224  009B                     	;# 
   225  009B                     	;# 
   226  009C                     	;# 
   227  009D                     	;# 
   228  009E                     	;# 
   229  010C                     	;# 
   230  010D                     	;# 
   231  010E                     	;# 
   232  0116                     	;# 
   233  0117                     	;# 
   234  011D                     	;# 
   235  018C                     	;# 
   236  018D                     	;# 
   237  018E                     	;# 
   238  0191                     	;# 
   239  0191                     	;# 
   240  0192                     	;# 
   241  0193                     	;# 
   242  0193                     	;# 
   243  0194                     	;# 
   244  0195                     	;# 
   245  0196                     	;# 
   246  0197                     	;# 
   247  0199                     	;# 
   248  019A                     	;# 
   249  019B                     	;# 
   250  019B                     	;# 
   251  019B                     	;# 
   252  019B                     	;# 
   253  019C                     	;# 
   254  019C                     	;# 
   255  019D                     	;# 
   256  019E                     	;# 
   257  019F                     	;# 
   258  020D                     	;# 
   259  0210                     	;# 
   260  0211                     	;# 
   261  0211                     	;# 
   262  0212                     	;# 
   263  0212                     	;# 
   264  0213                     	;# 
   265  0213                     	;# 
   266  0214                     	;# 
   267  0214                     	;# 
   268  0215                     	;# 
   269  0215                     	;# 
   270  0215                     	;# 
   271  0216                     	;# 
   272  0216                     	;# 
   273  0217                     	;# 
   274  0217                     	;# 
   275  0291                     	;# 
   276  0291                     	;# 
   277  0292                     	;# 
   278  0293                     	;# 
   279  0298                     	;# 
   280  0298                     	;# 
   281  0299                     	;# 
   282  029A                     	;# 
   283  0394                     	;# 
   284  0395                     	;# 
   285  0396                     	;# 
   286  0FE4                     	;# 
   287  0FE5                     	;# 
   288  0FE6                     	;# 
   289  0FE7                     	;# 
   290  0FE8                     	;# 
   291  0FE9                     	;# 
   292  0FEA                     	;# 
   293  0FEB                     	;# 
   294  0FED                     	;# 
   295  0FEE                     	;# 
   296  0FEF                     	;# 
   297  0000                     	;# 
   298  0001                     	;# 
   299  0002                     	;# 
   300  0003                     	;# 
   301  0004                     	;# 
   302  0005                     	;# 
   303  0006                     	;# 
   304  0007                     	;# 
   305  0008                     	;# 
   306  0009                     	;# 
   307  000A                     	;# 
   308  000B                     	;# 
   309  000C                     	;# 
   310  000D                     	;# 
   311  000E                     	;# 
   312  0010                     	;# 
   313  0011                     	;# 
   314  0012                     	;# 
   315  0015                     	;# 
   316  0016                     	;# 
   317  0016                     	;# 
   318  0017                     	;# 
   319  0018                     	;# 
   320  0019                     	;# 
   321  001A                     	;# 
   322  001B                     	;# 
   323  001C                     	;# 
   324  008C                     	;# 
   325  008D                     	;# 
   326  008E                     	;# 
   327  0090                     	;# 
   328  0091                     	;# 
   329  0092                     	;# 
   330  0095                     	;# 
   331  0096                     	;# 
   332  0097                     	;# 
   333  0099                     	;# 
   334  009A                     	;# 
   335  009B                     	;# 
   336  009B                     	;# 
   337  009C                     	;# 
   338  009D                     	;# 
   339  009E                     	;# 
   340  010C                     	;# 
   341  010D                     	;# 
   342  010E                     	;# 
   343  0116                     	;# 
   344  0117                     	;# 
   345  011D                     	;# 
   346  018C                     	;# 
   347  018D                     	;# 
   348  018E                     	;# 
   349  0191                     	;# 
   350  0191                     	;# 
   351  0192                     	;# 
   352  0193                     	;# 
   353  0193                     	;# 
   354  0194                     	;# 
   355  0195                     	;# 
   356  0196                     	;# 
   357  0197                     	;# 
   358  0199                     	;# 
   359  019A                     	;# 
   360  019B                     	;# 
   361  019B                     	;# 
   362  019B                     	;# 
   363  019B                     	;# 
   364  019C                     	;# 
   365  019C                     	;# 
   366  019D                     	;# 
   367  019E                     	;# 
   368  019F                     	;# 
   369  020D                     	;# 
   370  0210                     	;# 
   371  0211                     	;# 
   372  0211                     	;# 
   373  0212                     	;# 
   374  0212                     	;# 
   375  0213                     	;# 
   376  0213                     	;# 
   377  0214                     	;# 
   378  0214                     	;# 
   379  0215                     	;# 
   380  0215                     	;# 
   381  0215                     	;# 
   382  0216                     	;# 
   383  0216                     	;# 
   384  0217                     	;# 
   385  0217                     	;# 
   386  0291                     	;# 
   387  0291                     	;# 
   388  0292                     	;# 
   389  0293                     	;# 
   390  0298                     	;# 
   391  0298                     	;# 
   392  0299                     	;# 
   393  029A                     	;# 
   394  0394                     	;# 
   395  0395                     	;# 
   396  0396                     	;# 
   397  0FE4                     	;# 
   398  0FE5                     	;# 
   399  0FE6                     	;# 
   400  0FE7                     	;# 
   401  0FE8                     	;# 
   402  0FE9                     	;# 
   403  0FEA                     	;# 
   404  0FEB                     	;# 
   405  0FED                     	;# 
   406  0FEE                     	;# 
   407  0FEF                     	;# 
   408  0000                     	;# 
   409  0001                     	;# 
   410  0002                     	;# 
   411  0003                     	;# 
   412  0004                     	;# 
   413  0005                     	;# 
   414  0006                     	;# 
   415  0007                     	;# 
   416  0008                     	;# 
   417  0009                     	;# 
   418  000A                     	;# 
   419  000B                     	;# 
   420  000C                     	;# 
   421  000D                     	;# 
   422  000E                     	;# 
   423  0010                     	;# 
   424  0011                     	;# 
   425  0012                     	;# 
   426  0015                     	;# 
   427  0016                     	;# 
   428  0016                     	;# 
   429  0017                     	;# 
   430  0018                     	;# 
   431  0019                     	;# 
   432  001A                     	;# 
   433  001B                     	;# 
   434  001C                     	;# 
   435  008C                     	;# 
   436  008D                     	;# 
   437  008E                     	;# 
   438  0090                     	;# 
   439  0091                     	;# 
   440  0092                     	;# 
   441  0095                     	;# 
   442  0096                     	;# 
   443  0097                     	;# 
   444  0099                     	;# 
   445  009A                     	;# 
   446  009B                     	;# 
   447  009B                     	;# 
   448  009C                     	;# 
   449  009D                     	;# 
   450  009E                     	;# 
   451  010C                     	;# 
   452  010D                     	;# 
   453  010E                     	;# 
   454  0116                     	;# 
   455  0117                     	;# 
   456  011D                     	;# 
   457  018C                     	;# 
   458  018D                     	;# 
   459  018E                     	;# 
   460  0191                     	;# 
   461  0191                     	;# 
   462  0192                     	;# 
   463  0193                     	;# 
   464  0193                     	;# 
   465  0194                     	;# 
   466  0195                     	;# 
   467  0196                     	;# 
   468  0197                     	;# 
   469  0199                     	;# 
   470  019A                     	;# 
   471  019B                     	;# 
   472  019B                     	;# 
   473  019B                     	;# 
   474  019B                     	;# 
   475  019C                     	;# 
   476  019C                     	;# 
   477  019D                     	;# 
   478  019E                     	;# 
   479  019F                     	;# 
   480  020D                     	;# 
   481  0210                     	;# 
   482  0211                     	;# 
   483  0211                     	;# 
   484  0212                     	;# 
   485  0212                     	;# 
   486  0213                     	;# 
   487  0213                     	;# 
   488  0214                     	;# 
   489  0214                     	;# 
   490  0215                     	;# 
   491  0215                     	;# 
   492  0215                     	;# 
   493  0216                     	;# 
   494  0216                     	;# 
   495  0217                     	;# 
   496  0217                     	;# 
   497  0291                     	;# 
   498  0291                     	;# 
   499  0292                     	;# 
   500  0293                     	;# 
   501  0298                     	;# 
   502  0298                     	;# 
   503  0299                     	;# 
   504  029A                     	;# 
   505  0394                     	;# 
   506  0395                     	;# 
   507  0396                     	;# 
   508  0FE4                     	;# 
   509  0FE5                     	;# 
   510  0FE6                     	;# 
   511  0FE7                     	;# 
   512  0FE8                     	;# 
   513  0FE9                     	;# 
   514  0FEA                     	;# 
   515  0FEB                     	;# 
   516  0FED                     	;# 
   517  0FEE                     	;# 
   518  0FEF                     	;# 
   519  0000                     	;# 
   520  0001                     	;# 
   521  0002                     	;# 
   522  0003                     	;# 
   523  0004                     	;# 
   524  0005                     	;# 
   525  0006                     	;# 
   526  0007                     	;# 
   527  0008                     	;# 
   528  0009                     	;# 
   529  000A                     	;# 
   530  000B                     	;# 
   531  000C                     	;# 
   532  000D                     	;# 
   533  000E                     	;# 
   534  0010                     	;# 
   535  0011                     	;# 
   536  0012                     	;# 
   537  0015                     	;# 
   538  0016                     	;# 
   539  0016                     	;# 
   540  0017                     	;# 
   541  0018                     	;# 
   542  0019                     	;# 
   543  001A                     	;# 
   544  001B                     	;# 
   545  001C                     	;# 
   546  008C                     	;# 
   547  008D                     	;# 
   548  008E                     	;# 
   549  0090                     	;# 
   550  0091                     	;# 
   551  0092                     	;# 
   552  0095                     	;# 
   553  0096                     	;# 
   554  0097                     	;# 
   555  0099                     	;# 
   556  009A                     	;# 
   557  009B                     	;# 
   558  009B                     	;# 
   559  009C                     	;# 
   560  009D                     	;# 
   561  009E                     	;# 
   562  010C                     	;# 
   563  010D                     	;# 
   564  010E                     	;# 
   565  0116                     	;# 
   566  0117                     	;# 
   567  011D                     	;# 
   568  018C                     	;# 
   569  018D                     	;# 
   570  018E                     	;# 
   571  0191                     	;# 
   572  0191                     	;# 
   573  0192                     	;# 
   574  0193                     	;# 
   575  0193                     	;# 
   576  0194                     	;# 
   577  0195                     	;# 
   578  0196                     	;# 
   579  0197                     	;# 
   580  0199                     	;# 
   581  019A                     	;# 
   582  019B                     	;# 
   583  019B                     	;# 
   584  019B                     	;# 
   585  019B                     	;# 
   586  019C                     	;# 
   587  019C                     	;# 
   588  019D                     	;# 
   589  019E                     	;# 
   590  019F                     	;# 
   591  020D                     	;# 
   592  0210                     	;# 
   593  0211                     	;# 
   594  0211                     	;# 
   595  0212                     	;# 
   596  0212                     	;# 
   597  0213                     	;# 
   598  0213                     	;# 
   599  0214                     	;# 
   600  0214                     	;# 
   601  0215                     	;# 
   602  0215                     	;# 
   603  0215                     	;# 
   604  0216                     	;# 
   605  0216                     	;# 
   606  0217                     	;# 
   607  0217                     	;# 
   608  0291                     	;# 
   609  0291                     	;# 
   610  0292                     	;# 
   611  0293                     	;# 
   612  0298                     	;# 
   613  0298                     	;# 
   614  0299                     	;# 
   615  029A                     	;# 
   616  0394                     	;# 
   617  0395                     	;# 
   618  0396                     	;# 
   619  0FE4                     	;# 
   620  0FE5                     	;# 
   621  0FE6                     	;# 
   622  0FE7                     	;# 
   623  0FE8                     	;# 
   624  0FE9                     	;# 
   625  0FEA                     	;# 
   626  0FEB                     	;# 
   627  0FED                     	;# 
   628  0FEE                     	;# 
   629  0FEF                     	;# 
   630  0000                     	;# 
   631  0001                     	;# 
   632  0002                     	;# 
   633  0003                     	;# 
   634  0004                     	;# 
   635  0005                     	;# 
   636  0006                     	;# 
   637  0007                     	;# 
   638  0008                     	;# 
   639  0009                     	;# 
   640  000A                     	;# 
   641  000B                     	;# 
   642  000C                     	;# 
   643  000D                     	;# 
   644  000E                     	;# 
   645  0010                     	;# 
   646  0011                     	;# 
   647  0012                     	;# 
   648  0015                     	;# 
   649  0016                     	;# 
   650  0016                     	;# 
   651  0017                     	;# 
   652  0018                     	;# 
   653  0019                     	;# 
   654  001A                     	;# 
   655  001B                     	;# 
   656  001C                     	;# 
   657  008C                     	;# 
   658  008D                     	;# 
   659  008E                     	;# 
   660  0090                     	;# 
   661  0091                     	;# 
   662  0092                     	;# 
   663  0095                     	;# 
   664  0096                     	;# 
   665  0097                     	;# 
   666  0099                     	;# 
   667  009A                     	;# 
   668  009B                     	;# 
   669  009B                     	;# 
   670  009C                     	;# 
   671  009D                     	;# 
   672  009E                     	;# 
   673  010C                     	;# 
   674  010D                     	;# 
   675  010E                     	;# 
   676  0116                     	;# 
   677  0117                     	;# 
   678  011D                     	;# 
   679  018C                     	;# 
   680  018D                     	;# 
   681  018E                     	;# 
   682  0191                     	;# 
   683  0191                     	;# 
   684  0192                     	;# 
   685  0193                     	;# 
   686  0193                     	;# 
   687  0194                     	;# 
   688  0195                     	;# 
   689  0196                     	;# 
   690  0197                     	;# 
   691  0199                     	;# 
   692  019A                     	;# 
   693  019B                     	;# 
   694  019B                     	;# 
   695  019B                     	;# 
   696  019B                     	;# 
   697  019C                     	;# 
   698  019C                     	;# 
   699  019D                     	;# 
   700  019E                     	;# 
   701  019F                     	;# 
   702  020D                     	;# 
   703  0210                     	;# 
   704  0211                     	;# 
   705  0211                     	;# 
   706  0212                     	;# 
   707  0212                     	;# 
   708  0213                     	;# 
   709  0213                     	;# 
   710  0214                     	;# 
   711  0214                     	;# 
   712  0215                     	;# 
   713  0215                     	;# 
   714  0215                     	;# 
   715  0216                     	;# 
   716  0216                     	;# 
   717  0217                     	;# 
   718  0217                     	;# 
   719  0291                     	;# 
   720  0291                     	;# 
   721  0292                     	;# 
   722  0293                     	;# 
   723  0298                     	;# 
   724  0298                     	;# 
   725  0299                     	;# 
   726  029A                     	;# 
   727  0394                     	;# 
   728  0395                     	;# 
   729  0396                     	;# 
   730  0FE4                     	;# 
   731  0FE5                     	;# 
   732  0FE6                     	;# 
   733  0FE7                     	;# 
   734  0FE8                     	;# 
   735  0FE9                     	;# 
   736  0FEA                     	;# 
   737  0FEB                     	;# 
   738  0FED                     	;# 
   739  0FEE                     	;# 
   740  0FEF                     	;# 
   741  0000                     	;# 
   742  0001                     	;# 
   743  0002                     	;# 
   744  0003                     	;# 
   745  0004                     	;# 
   746  0005                     	;# 
   747  0006                     	;# 
   748  0007                     	;# 
   749  0008                     	;# 
   750  0009                     	;# 
   751  000A                     	;# 
   752  000B                     	;# 
   753  000C                     	;# 
   754  000D                     	;# 
   755  000E                     	;# 
   756  0010                     	;# 
   757  0011                     	;# 
   758  0012                     	;# 
   759  0015                     	;# 
   760  0016                     	;# 
   761  0016                     	;# 
   762  0017                     	;# 
   763  0018                     	;# 
   764  0019                     	;# 
   765  001A                     	;# 
   766  001B                     	;# 
   767  001C                     	;# 
   768  008C                     	;# 
   769  008D                     	;# 
   770  008E                     	;# 
   771  0090                     	;# 
   772  0091                     	;# 
   773  0092                     	;# 
   774  0095                     	;# 
   775  0096                     	;# 
   776  0097                     	;# 
   777  0099                     	;# 
   778  009A                     	;# 
   779  009B                     	;# 
   780  009B                     	;# 
   781  009C                     	;# 
   782  009D                     	;# 
   783  009E                     	;# 
   784  010C                     	;# 
   785  010D                     	;# 
   786  010E                     	;# 
   787  0116                     	;# 
   788  0117                     	;# 
   789  011D                     	;# 
   790  018C                     	;# 
   791  018D                     	;# 
   792  018E                     	;# 
   793  0191                     	;# 
   794  0191                     	;# 
   795  0192                     	;# 
   796  0193                     	;# 
   797  0193                     	;# 
   798  0194                     	;# 
   799  0195                     	;# 
   800  0196                     	;# 
   801  0197                     	;# 
   802  0199                     	;# 
   803  019A                     	;# 
   804  019B                     	;# 
   805  019B                     	;# 
   806  019B                     	;# 
   807  019B                     	;# 
   808  019C                     	;# 
   809  019C                     	;# 
   810  019D                     	;# 
   811  019E                     	;# 
   812  019F                     	;# 
   813  020D                     	;# 
   814  0210                     	;# 
   815  0211                     	;# 
   816  0211                     	;# 
   817  0212                     	;# 
   818  0212                     	;# 
   819  0213                     	;# 
   820  0213                     	;# 
   821  0214                     	;# 
   822  0214                     	;# 
   823  0215                     	;# 
   824  0215                     	;# 
   825  0215                     	;# 
   826  0216                     	;# 
   827  0216                     	;# 
   828  0217                     	;# 
   829  0217                     	;# 
   830  0291                     	;# 
   831  0291                     	;# 
   832  0292                     	;# 
   833  0293                     	;# 
   834  0298                     	;# 
   835  0298                     	;# 
   836  0299                     	;# 
   837  029A                     	;# 
   838  0394                     	;# 
   839  0395                     	;# 
   840  0396                     	;# 
   841  0FE4                     	;# 
   842  0FE5                     	;# 
   843  0FE6                     	;# 
   844  0FE7                     	;# 
   845  0FE8                     	;# 
   846  0FE9                     	;# 
   847  0FEA                     	;# 
   848  0FEB                     	;# 
   849  0FED                     	;# 
   850  0FEE                     	;# 
   851  0FEF                     	;# 
   852  0000                     	;# 
   853  0001                     	;# 
   854  0002                     	;# 
   855  0003                     	;# 
   856  0004                     	;# 
   857  0005                     	;# 
   858  0006                     	;# 
   859  0007                     	;# 
   860  0008                     	;# 
   861  0009                     	;# 
   862  000A                     	;# 
   863  000B                     	;# 
   864  000C                     	;# 
   865  000D                     	;# 
   866  000E                     	;# 
   867  0010                     	;# 
   868  0011                     	;# 
   869  0012                     	;# 
   870  0015                     	;# 
   871  0016                     	;# 
   872  0016                     	;# 
   873  0017                     	;# 
   874  0018                     	;# 
   875  0019                     	;# 
   876  001A                     	;# 
   877  001B                     	;# 
   878  001C                     	;# 
   879  008C                     	;# 
   880  008D                     	;# 
   881  008E                     	;# 
   882  0090                     	;# 
   883  0091                     	;# 
   884  0092                     	;# 
   885  0095                     	;# 
   886  0096                     	;# 
   887  0097                     	;# 
   888  0099                     	;# 
   889  009A                     	;# 
   890  009B                     	;# 
   891  009B                     	;# 
   892  009C                     	;# 
   893  009D                     	;# 
   894  009E                     	;# 
   895  010C                     	;# 
   896  010D                     	;# 
   897  010E                     	;# 
   898  0116                     	;# 
   899  0117                     	;# 
   900  011D                     	;# 
   901  018C                     	;# 
   902  018D                     	;# 
   903  018E                     	;# 
   904  0191                     	;# 
   905  0191                     	;# 
   906  0192                     	;# 
   907  0193                     	;# 
   908  0193                     	;# 
   909  0194                     	;# 
   910  0195                     	;# 
   911  0196                     	;# 
   912  0197                     	;# 
   913  0199                     	;# 
   914  019A                     	;# 
   915  019B                     	;# 
   916  019B                     	;# 
   917  019B                     	;# 
   918  019B                     	;# 
   919  019C                     	;# 
   920  019C                     	;# 
   921  019D                     	;# 
   922  019E                     	;# 
   923  019F                     	;# 
   924  020D                     	;# 
   925  0210                     	;# 
   926  0211                     	;# 
   927  0211                     	;# 
   928  0212                     	;# 
   929  0212                     	;# 
   930  0213                     	;# 
   931  0213                     	;# 
   932  0214                     	;# 
   933  0214                     	;# 
   934  0215                     	;# 
   935  0215                     	;# 
   936  0215                     	;# 
   937  0216                     	;# 
   938  0216                     	;# 
   939  0217                     	;# 
   940  0217                     	;# 
   941  0291                     	;# 
   942  0291                     	;# 
   943  0292                     	;# 
   944  0293                     	;# 
   945  0298                     	;# 
   946  0298                     	;# 
   947  0299                     	;# 
   948  029A                     	;# 
   949  0394                     	;# 
   950  0395                     	;# 
   951  0396                     	;# 
   952  0FE4                     	;# 
   953  0FE5                     	;# 
   954  0FE6                     	;# 
   955  0FE7                     	;# 
   956  0FE8                     	;# 
   957  0FE9                     	;# 
   958  0FEA                     	;# 
   959  0FEB                     	;# 
   960  0FED                     	;# 
   961  0FEE                     	;# 
   962  0FEF                     	;# 
   963  0000                     	;# 
   964  0001                     	;# 
   965  0002                     	;# 
   966  0003                     	;# 
   967  0004                     	;# 
   968  0005                     	;# 
   969  0006                     	;# 
   970  0007                     	;# 
   971  0008                     	;# 
   972  0009                     	;# 
   973  000A                     	;# 
   974  000B                     	;# 
   975  000C                     	;# 
   976  000D                     	;# 
   977  000E                     	;# 
   978  0010                     	;# 
   979  0011                     	;# 
   980  0012                     	;# 
   981  0015                     	;# 
   982  0016                     	;# 
   983  0016                     	;# 
   984  0017                     	;# 
   985  0018                     	;# 
   986  0019                     	;# 
   987  001A                     	;# 
   988  001B                     	;# 
   989  001C                     	;# 
   990  008C                     	;# 
   991  008D                     	;# 
   992  008E                     	;# 
   993  0090                     	;# 
   994  0091                     	;# 
   995  0092                     	;# 
   996  0095                     	;# 
   997  0096                     	;# 
   998  0097                     	;# 
   999  0099                     	;# 
  1000  009A                     	;# 
  1001  009B                     	;# 
  1002  009B                     	;# 
  1003  009C                     	;# 
  1004  009D                     	;# 
  1005  009E                     	;# 
  1006  010C                     	;# 
  1007  010D                     	;# 
  1008  010E                     	;# 
  1009  0116                     	;# 
  1010  0117                     	;# 
  1011  011D                     	;# 
  1012  018C                     	;# 
  1013  018D                     	;# 
  1014  018E                     	;# 
  1015  0191                     	;# 
  1016  0191                     	;# 
  1017  0192                     	;# 
  1018  0193                     	;# 
  1019  0193                     	;# 
  1020  0194                     	;# 
  1021  0195                     	;# 
  1022  0196                     	;# 
  1023  0197                     	;# 
  1024  0199                     	;# 
  1025  019A                     	;# 
  1026  019B                     	;# 
  1027  019B                     	;# 
  1028  019B                     	;# 
  1029  019B                     	;# 
  1030  019C                     	;# 
  1031  019C                     	;# 
  1032  019D                     	;# 
  1033  019E                     	;# 
  1034  019F                     	;# 
  1035  020D                     	;# 
  1036  0210                     	;# 
  1037  0211                     	;# 
  1038  0211                     	;# 
  1039  0212                     	;# 
  1040  0212                     	;# 
  1041  0213                     	;# 
  1042  0213                     	;# 
  1043  0214                     	;# 
  1044  0214                     	;# 
  1045  0215                     	;# 
  1046  0215                     	;# 
  1047  0215                     	;# 
  1048  0216                     	;# 
  1049  0216                     	;# 
  1050  0217                     	;# 
  1051  0217                     	;# 
  1052  0291                     	;# 
  1053  0291                     	;# 
  1054  0292                     	;# 
  1055  0293                     	;# 
  1056  0298                     	;# 
  1057  0298                     	;# 
  1058  0299                     	;# 
  1059  029A                     	;# 
  1060  0394                     	;# 
  1061  0395                     	;# 
  1062  0396                     	;# 
  1063  0FE4                     	;# 
  1064  0FE5                     	;# 
  1065  0FE6                     	;# 
  1066  0FE7                     	;# 
  1067  0FE8                     	;# 
  1068  0FE9                     	;# 
  1069  0FEA                     	;# 
  1070  0FEB                     	;# 
  1071  0FED                     	;# 
  1072  0FEE                     	;# 
  1073  0FEF                     	;# 
  1074  0000                     	;# 
  1075  0001                     	;# 
  1076  0002                     	;# 
  1077  0003                     	;# 
  1078  0004                     	;# 
  1079  0005                     	;# 
  1080  0006                     	;# 
  1081  0007                     	;# 
  1082  0008                     	;# 
  1083  0009                     	;# 
  1084  000A                     	;# 
  1085  000B                     	;# 
  1086  000C                     	;# 
  1087  000D                     	;# 
  1088  000E                     	;# 
  1089  0010                     	;# 
  1090  0011                     	;# 
  1091  0012                     	;# 
  1092  0015                     	;# 
  1093  0016                     	;# 
  1094  0016                     	;# 
  1095  0017                     	;# 
  1096  0018                     	;# 
  1097  0019                     	;# 
  1098  001A                     	;# 
  1099  001B                     	;# 
  1100  001C                     	;# 
  1101  008C                     	;# 
  1102  008D                     	;# 
  1103  008E                     	;# 
  1104  0090                     	;# 
  1105  0091                     	;# 
  1106  0092                     	;# 
  1107  0095                     	;# 
  1108  0096                     	;# 
  1109  0097                     	;# 
  1110  0099                     	;# 
  1111  009A                     	;# 
  1112  009B                     	;# 
  1113  009B                     	;# 
  1114  009C                     	;# 
  1115  009D                     	;# 
  1116  009E                     	;# 
  1117  010C                     	;# 
  1118  010D                     	;# 
  1119  010E                     	;# 
  1120  0116                     	;# 
  1121  0117                     	;# 
  1122  011D                     	;# 
  1123  018C                     	;# 
  1124  018D                     	;# 
  1125  018E                     	;# 
  1126  0191                     	;# 
  1127  0191                     	;# 
  1128  0192                     	;# 
  1129  0193                     	;# 
  1130  0193                     	;# 
  1131  0194                     	;# 
  1132  0195                     	;# 
  1133  0196                     	;# 
  1134  0197                     	;# 
  1135  0199                     	;# 
  1136  019A                     	;# 
  1137  019B                     	;# 
  1138  019B                     	;# 
  1139  019B                     	;# 
  1140  019B                     	;# 
  1141  019C                     	;# 
  1142  019C                     	;# 
  1143  019D                     	;# 
  1144  019E                     	;# 
  1145  019F                     	;# 
  1146  020D                     	;# 
  1147  0210                     	;# 
  1148  0211                     	;# 
  1149  0211                     	;# 
  1150  0212                     	;# 
  1151  0212                     	;# 
  1152  0213                     	;# 
  1153  0213                     	;# 
  1154  0214                     	;# 
  1155  0214                     	;# 
  1156  0215                     	;# 
  1157  0215                     	;# 
  1158  0215                     	;# 
  1159  0216                     	;# 
  1160  0216                     	;# 
  1161  0217                     	;# 
  1162  0217                     	;# 
  1163  0291                     	;# 
  1164  0291                     	;# 
  1165  0292                     	;# 
  1166  0293                     	;# 
  1167  0298                     	;# 
  1168  0298                     	;# 
  1169  0299                     	;# 
  1170  029A                     	;# 
  1171  0394                     	;# 
  1172  0395                     	;# 
  1173  0396                     	;# 
  1174  0FE4                     	;# 
  1175  0FE5                     	;# 
  1176  0FE6                     	;# 
  1177  0FE7                     	;# 
  1178  0FE8                     	;# 
  1179  0FE9                     	;# 
  1180  0FEA                     	;# 
  1181  0FEB                     	;# 
  1182  0FED                     	;# 
  1183  0FEE                     	;# 
  1184  0FEF                     	;# 
  1185  0000                     	;# 
  1186  0001                     	;# 
  1187  0002                     	;# 
  1188  0003                     	;# 
  1189  0004                     	;# 
  1190  0005                     	;# 
  1191  0006                     	;# 
  1192  0007                     	;# 
  1193  0008                     	;# 
  1194  0009                     	;# 
  1195  000A                     	;# 
  1196  000B                     	;# 
  1197  000C                     	;# 
  1198  000D                     	;# 
  1199  000E                     	;# 
  1200  0010                     	;# 
  1201  0011                     	;# 
  1202  0012                     	;# 
  1203  0015                     	;# 
  1204  0016                     	;# 
  1205  0016                     	;# 
  1206  0017                     	;# 
  1207  0018                     	;# 
  1208  0019                     	;# 
  1209  001A                     	;# 
  1210  001B                     	;# 
  1211  001C                     	;# 
  1212  008C                     	;# 
  1213  008D                     	;# 
  1214  008E                     	;# 
  1215  0090                     	;# 
  1216  0091                     	;# 
  1217  0092                     	;# 
  1218  0095                     	;# 
  1219  0096                     	;# 
  1220  0097                     	;# 
  1221  0099                     	;# 
  1222  009A                     	;# 
  1223  009B                     	;# 
  1224  009B                     	;# 
  1225  009C                     	;# 
  1226  009D                     	;# 
  1227  009E                     	;# 
  1228  010C                     	;# 
  1229  010D                     	;# 
  1230  010E                     	;# 
  1231  0116                     	;# 
  1232  0117                     	;# 
  1233  011D                     	;# 
  1234  018C                     	;# 
  1235  018D                     	;# 
  1236  018E                     	;# 
  1237  0191                     	;# 
  1238  0191                     	;# 
  1239  0192                     	;# 
  1240  0193                     	;# 
  1241  0193                     	;# 
  1242  0194                     	;# 
  1243  0195                     	;# 
  1244  0196                     	;# 
  1245  0197                     	;# 
  1246  0199                     	;# 
  1247  019A                     	;# 
  1248  019B                     	;# 
  1249  019B                     	;# 
  1250  019B                     	;# 
  1251  019B                     	;# 
  1252  019C                     	;# 
  1253  019C                     	;# 
  1254  019D                     	;# 
  1255  019E                     	;# 
  1256  019F                     	;# 
  1257  020D                     	;# 
  1258  0210                     	;# 
  1259  0211                     	;# 
  1260  0211                     	;# 
  1261  0212                     	;# 
  1262  0212                     	;# 
  1263  0213                     	;# 
  1264  0213                     	;# 
  1265  0214                     	;# 
  1266  0214                     	;# 
  1267  0215                     	;# 
  1268  0215                     	;# 
  1269  0215                     	;# 
  1270  0216                     	;# 
  1271  0216                     	;# 
  1272  0217                     	;# 
  1273  0217                     	;# 
  1274  0291                     	;# 
  1275  0291                     	;# 
  1276  0292                     	;# 
  1277  0293                     	;# 
  1278  0298                     	;# 
  1279  0298                     	;# 
  1280  0299                     	;# 
  1281  029A                     	;# 
  1282  0394                     	;# 
  1283  0395                     	;# 
  1284  0396                     	;# 
  1285  0FE4                     	;# 
  1286  0FE5                     	;# 
  1287  0FE6                     	;# 
  1288  0FE7                     	;# 
  1289  0FE8                     	;# 
  1290  0FE9                     	;# 
  1291  0FEA                     	;# 
  1292  0FEB                     	;# 
  1293  0FED                     	;# 
  1294  0FEE                     	;# 
  1295  0FEF                     	;# 
  1296  0000                     	;# 
  1297  0001                     	;# 
  1298  0002                     	;# 
  1299  0003                     	;# 
  1300  0004                     	;# 
  1301  0005                     	;# 
  1302  0006                     	;# 
  1303  0007                     	;# 
  1304  0008                     	;# 
  1305  0009                     	;# 
  1306  000A                     	;# 
  1307  000B                     	;# 
  1308  000C                     	;# 
  1309  000D                     	;# 
  1310  000E                     	;# 
  1311  0010                     	;# 
  1312  0011                     	;# 
  1313  0012                     	;# 
  1314  0015                     	;# 
  1315  0016                     	;# 
  1316  0016                     	;# 
  1317  0017                     	;# 
  1318  0018                     	;# 
  1319  0019                     	;# 
  1320  001A                     	;# 
  1321  001B                     	;# 
  1322  001C                     	;# 
  1323  008C                     	;# 
  1324  008D                     	;# 
  1325  008E                     	;# 
  1326  0090                     	;# 
  1327  0091                     	;# 
  1328  0092                     	;# 
  1329  0095                     	;# 
  1330  0096                     	;# 
  1331  0097                     	;# 
  1332  0099                     	;# 
  1333  009A                     	;# 
  1334  009B                     	;# 
  1335  009B                     	;# 
  1336  009C                     	;# 
  1337  009D                     	;# 
  1338  009E                     	;# 
  1339  010C                     	;# 
  1340  010D                     	;# 
  1341  010E                     	;# 
  1342  0116                     	;# 
  1343  0117                     	;# 
  1344  011D                     	;# 
  1345  018C                     	;# 
  1346  018D                     	;# 
  1347  018E                     	;# 
  1348  0191                     	;# 
  1349  0191                     	;# 
  1350  0192                     	;# 
  1351  0193                     	;# 
  1352  0193                     	;# 
  1353  0194                     	;# 
  1354  0195                     	;# 
  1355  0196                     	;# 
  1356  0197                     	;# 
  1357  0199                     	;# 
  1358  019A                     	;# 
  1359  019B                     	;# 
  1360  019B                     	;# 
  1361  019B                     	;# 
  1362  019B                     	;# 
  1363  019C                     	;# 
  1364  019C                     	;# 
  1365  019D                     	;# 
  1366  019E                     	;# 
  1367  019F                     	;# 
  1368  020D                     	;# 
  1369  0210                     	;# 
  1370  0211                     	;# 
  1371  0211                     	;# 
  1372  0212                     	;# 
  1373  0212                     	;# 
  1374  0213                     	;# 
  1375  0213                     	;# 
  1376  0214                     	;# 
  1377  0214                     	;# 
  1378  0215                     	;# 
  1379  0215                     	;# 
  1380  0215                     	;# 
  1381  0216                     	;# 
  1382  0216                     	;# 
  1383  0217                     	;# 
  1384  0217                     	;# 
  1385  0291                     	;# 
  1386  0291                     	;# 
  1387  0292                     	;# 
  1388  0293                     	;# 
  1389  0298                     	;# 
  1390  0298                     	;# 
  1391  0299                     	;# 
  1392  029A                     	;# 
  1393  0394                     	;# 
  1394  0395                     	;# 
  1395  0396                     	;# 
  1396  0FE4                     	;# 
  1397  0FE5                     	;# 
  1398  0FE6                     	;# 
  1399  0FE7                     	;# 
  1400  0FE8                     	;# 
  1401  0FE9                     	;# 
  1402  0FEA                     	;# 
  1403  0FEB                     	;# 
  1404  0FED                     	;# 
  1405  0FEE                     	;# 
  1406  0FEF                     	;# 
  1407  0000                     	;# 
  1408  0001                     	;# 
  1409  0002                     	;# 
  1410  0003                     	;# 
  1411  0004                     	;# 
  1412  0005                     	;# 
  1413  0006                     	;# 
  1414  0007                     	;# 
  1415  0008                     	;# 
  1416  0009                     	;# 
  1417  000A                     	;# 
  1418  000B                     	;# 
  1419  000C                     	;# 
  1420  000D                     	;# 
  1421  000E                     	;# 
  1422  0010                     	;# 
  1423  0011                     	;# 
  1424  0012                     	;# 
  1425  0015                     	;# 
  1426  0016                     	;# 
  1427  0016                     	;# 
  1428  0017                     	;# 
  1429  0018                     	;# 
  1430  0019                     	;# 
  1431  001A                     	;# 
  1432  001B                     	;# 
  1433  001C                     	;# 
  1434  008C                     	;# 
  1435  008D                     	;# 
  1436  008E                     	;# 
  1437  0090                     	;# 
  1438  0091                     	;# 
  1439  0092                     	;# 
  1440  0095                     	;# 
  1441  0096                     	;# 
  1442  0097                     	;# 
  1443  0099                     	;# 
  1444  009A                     	;# 
  1445  009B                     	;# 
  1446  009B                     	;# 
  1447  009C                     	;# 
  1448  009D                     	;# 
  1449  009E                     	;# 
  1450  010C                     	;# 
  1451  010D                     	;# 
  1452  010E                     	;# 
  1453  0116                     	;# 
  1454  0117                     	;# 
  1455  011D                     	;# 
  1456  018C                     	;# 
  1457  018D                     	;# 
  1458  018E                     	;# 
  1459  0191                     	;# 
  1460  0191                     	;# 
  1461  0192                     	;# 
  1462  0193                     	;# 
  1463  0193                     	;# 
  1464  0194                     	;# 
  1465  0195                     	;# 
  1466  0196                     	;# 
  1467  0197                     	;# 
  1468  0199                     	;# 
  1469  019A                     	;# 
  1470  019B                     	;# 
  1471  019B                     	;# 
  1472  019B                     	;# 
  1473  019B                     	;# 
  1474  019C                     	;# 
  1475  019C                     	;# 
  1476  019D                     	;# 
  1477  019E                     	;# 
  1478  019F                     	;# 
  1479  020D                     	;# 
  1480  0210                     	;# 
  1481  0211                     	;# 
  1482  0211                     	;# 
  1483  0212                     	;# 
  1484  0212                     	;# 
  1485  0213                     	;# 
  1486  0213                     	;# 
  1487  0214                     	;# 
  1488  0214                     	;# 
  1489  0215                     	;# 
  1490  0215                     	;# 
  1491  0215                     	;# 
  1492  0216                     	;# 
  1493  0216                     	;# 
  1494  0217                     	;# 
  1495  0217                     	;# 
  1496  0291                     	;# 
  1497  0291                     	;# 
  1498  0292                     	;# 
  1499  0293                     	;# 
  1500  0298                     	;# 
  1501  0298                     	;# 
  1502  0299                     	;# 
  1503  029A                     	;# 
  1504  0394                     	;# 
  1505  0395                     	;# 
  1506  0396                     	;# 
  1507  0FE4                     	;# 
  1508  0FE5                     	;# 
  1509  0FE6                     	;# 
  1510  0FE7                     	;# 
  1511  0FE8                     	;# 
  1512  0FE9                     	;# 
  1513  0FEA                     	;# 
  1514  0FEB                     	;# 
  1515  0FED                     	;# 
  1516  0FEE                     	;# 
  1517  0FEF                     	;# 
  1518  0000                     	;# 
  1519  0001                     	;# 
  1520  0002                     	;# 
  1521  0003                     	;# 
  1522  0004                     	;# 
  1523  0005                     	;# 
  1524  0006                     	;# 
  1525  0007                     	;# 
  1526  0008                     	;# 
  1527  0009                     	;# 
  1528  000A                     	;# 
  1529  000B                     	;# 
  1530  000C                     	;# 
  1531  000D                     	;# 
  1532  000E                     	;# 
  1533  0010                     	;# 
  1534  0011                     	;# 
  1535  0012                     	;# 
  1536  0015                     	;# 
  1537  0016                     	;# 
  1538  0016                     	;# 
  1539  0017                     	;# 
  1540  0018                     	;# 
  1541  0019                     	;# 
  1542  001A                     	;# 
  1543  001B                     	;# 
  1544  001C                     	;# 
  1545  008C                     	;# 
  1546  008D                     	;# 
  1547  008E                     	;# 
  1548  0090                     	;# 
  1549  0091                     	;# 
  1550  0092                     	;# 
  1551  0095                     	;# 
  1552  0096                     	;# 
  1553  0097                     	;# 
  1554  0099                     	;# 
  1555  009A                     	;# 
  1556  009B                     	;# 
  1557  009B                     	;# 
  1558  009C                     	;# 
  1559  009D                     	;# 
  1560  009E                     	;# 
  1561  010C                     	;# 
  1562  010D                     	;# 
  1563  010E                     	;# 
  1564  0116                     	;# 
  1565  0117                     	;# 
  1566  011D                     	;# 
  1567  018C                     	;# 
  1568  018D                     	;# 
  1569  018E                     	;# 
  1570  0191                     	;# 
  1571  0191                     	;# 
  1572  0192                     	;# 
  1573  0193                     	;# 
  1574  0193                     	;# 
  1575  0194                     	;# 
  1576  0195                     	;# 
  1577  0196                     	;# 
  1578  0197                     	;# 
  1579  0199                     	;# 
  1580  019A                     	;# 
  1581  019B                     	;# 
  1582  019B                     	;# 
  1583  019B                     	;# 
  1584  019B                     	;# 
  1585  019C                     	;# 
  1586  019C                     	;# 
  1587  019D                     	;# 
  1588  019E                     	;# 
  1589  019F                     	;# 
  1590  020D                     	;# 
  1591  0210                     	;# 
  1592  0211                     	;# 
  1593  0211                     	;# 
  1594  0212                     	;# 
  1595  0212                     	;# 
  1596  0213                     	;# 
  1597  0213                     	;# 
  1598  0214                     	;# 
  1599  0214                     	;# 
  1600  0215                     	;# 
  1601  0215                     	;# 
  1602  0215                     	;# 
  1603  0216                     	;# 
  1604  0216                     	;# 
  1605  0217                     	;# 
  1606  0217                     	;# 
  1607  0291                     	;# 
  1608  0291                     	;# 
  1609  0292                     	;# 
  1610  0293                     	;# 
  1611  0298                     	;# 
  1612  0298                     	;# 
  1613  0299                     	;# 
  1614  029A                     	;# 
  1615  0394                     	;# 
  1616  0395                     	;# 
  1617  0396                     	;# 
  1618  0FE4                     	;# 
  1619  0FE5                     	;# 
  1620  0FE6                     	;# 
  1621  0FE7                     	;# 
  1622  0FE8                     	;# 
  1623  0FE9                     	;# 
  1624  0FEA                     	;# 
  1625  0FEB                     	;# 
  1626  0FED                     	;# 
  1627  0FEE                     	;# 
  1628  0FEF                     	;# 
  1629  0000                     	;# 
  1630  0001                     	;# 
  1631  0002                     	;# 
  1632  0003                     	;# 
  1633  0004                     	;# 
  1634  0005                     	;# 
  1635  0006                     	;# 
  1636  0007                     	;# 
  1637  0008                     	;# 
  1638  0009                     	;# 
  1639  000A                     	;# 
  1640  000B                     	;# 
  1641  000C                     	;# 
  1642  000D                     	;# 
  1643  000E                     	;# 
  1644  0010                     	;# 
  1645  0011                     	;# 
  1646  0012                     	;# 
  1647  0015                     	;# 
  1648  0016                     	;# 
  1649  0016                     	;# 
  1650  0017                     	;# 
  1651  0018                     	;# 
  1652  0019                     	;# 
  1653  001A                     	;# 
  1654  001B                     	;# 
  1655  001C                     	;# 
  1656  008C                     	;# 
  1657  008D                     	;# 
  1658  008E                     	;# 
  1659  0090                     	;# 
  1660  0091                     	;# 
  1661  0092                     	;# 
  1662  0095                     	;# 
  1663  0096                     	;# 
  1664  0097                     	;# 
  1665  0099                     	;# 
  1666  009A                     	;# 
  1667  009B                     	;# 
  1668  009B                     	;# 
  1669  009C                     	;# 
  1670  009D                     	;# 
  1671  009E                     	;# 
  1672  010C                     	;# 
  1673  010D                     	;# 
  1674  010E                     	;# 
  1675  0116                     	;# 
  1676  0117                     	;# 
  1677  011D                     	;# 
  1678  018C                     	;# 
  1679  018D                     	;# 
  1680  018E                     	;# 
  1681  0191                     	;# 
  1682  0191                     	;# 
  1683  0192                     	;# 
  1684  0193                     	;# 
  1685  0193                     	;# 
  1686  0194                     	;# 
  1687  0195                     	;# 
  1688  0196                     	;# 
  1689  0197                     	;# 
  1690  0199                     	;# 
  1691  019A                     	;# 
  1692  019B                     	;# 
  1693  019B                     	;# 
  1694  019B                     	;# 
  1695  019B                     	;# 
  1696  019C                     	;# 
  1697  019C                     	;# 
  1698  019D                     	;# 
  1699  019E                     	;# 
  1700  019F                     	;# 
  1701  020D                     	;# 
  1702  0210                     	;# 
  1703  0211                     	;# 
  1704  0211                     	;# 
  1705  0212                     	;# 
  1706  0212                     	;# 
  1707  0213                     	;# 
  1708  0213                     	;# 
  1709  0214                     	;# 
  1710  0214                     	;# 
  1711  0215                     	;# 
  1712  0215                     	;# 
  1713  0215                     	;# 
  1714  0216                     	;# 
  1715  0216                     	;# 
  1716  0217                     	;# 
  1717  0217                     	;# 
  1718  0291                     	;# 
  1719  0291                     	;# 
  1720  0292                     	;# 
  1721  0293                     	;# 
  1722  0298                     	;# 
  1723  0298                     	;# 
  1724  0299                     	;# 
  1725  029A                     	;# 
  1726  0394                     	;# 
  1727  0395                     	;# 
  1728  0396                     	;# 
  1729  0FE4                     	;# 
  1730  0FE5                     	;# 
  1731  0FE6                     	;# 
  1732  0FE7                     	;# 
  1733  0FE8                     	;# 
  1734  0FE9                     	;# 
  1735  0FEA                     	;# 
  1736  0FEB                     	;# 
  1737  0FED                     	;# 
  1738  0FEE                     	;# 
  1739  0FEF                     	;# 
  1740  0000                     	;# 
  1741  0001                     	;# 
  1742  0002                     	;# 
  1743  0003                     	;# 
  1744  0004                     	;# 
  1745  0005                     	;# 
  1746  0006                     	;# 
  1747  0007                     	;# 
  1748  0008                     	;# 
  1749  0009                     	;# 
  1750  000A                     	;# 
  1751  000B                     	;# 
  1752  000C                     	;# 
  1753  000D                     	;# 
  1754  000E                     	;# 
  1755  0010                     	;# 
  1756  0011                     	;# 
  1757  0012                     	;# 
  1758  0015                     	;# 
  1759  0016                     	;# 
  1760  0016                     	;# 
  1761  0017                     	;# 
  1762  0018                     	;# 
  1763  0019                     	;# 
  1764  001A                     	;# 
  1765  001B                     	;# 
  1766  001C                     	;# 
  1767  008C                     	;# 
  1768  008D                     	;# 
  1769  008E                     	;# 
  1770  0090                     	;# 
  1771  0091                     	;# 
  1772  0092                     	;# 
  1773  0095                     	;# 
  1774  0096                     	;# 
  1775  0097                     	;# 
  1776  0099                     	;# 
  1777  009A                     	;# 
  1778  009B                     	;# 
  1779  009B                     	;# 
  1780  009C                     	;# 
  1781  009D                     	;# 
  1782  009E                     	;# 
  1783  010C                     	;# 
  1784  010D                     	;# 
  1785  010E                     	;# 
  1786  0116                     	;# 
  1787  0117                     	;# 
  1788  011D                     	;# 
  1789  018C                     	;# 
  1790  018D                     	;# 
  1791  018E                     	;# 
  1792  0191                     	;# 
  1793  0191                     	;# 
  1794  0192                     	;# 
  1795  0193                     	;# 
  1796  0193                     	;# 
  1797  0194                     	;# 
  1798  0195                     	;# 
  1799  0196                     	;# 
  1800  0197                     	;# 
  1801  0199                     	;# 
  1802  019A                     	;# 
  1803  019B                     	;# 
  1804  019B                     	;# 
  1805  019B                     	;# 
  1806  019B                     	;# 
  1807  019C                     	;# 
  1808  019C                     	;# 
  1809  019D                     	;# 
  1810  019E                     	;# 
  1811  019F                     	;# 
  1812  020D                     	;# 
  1813  0210                     	;# 
  1814  0211                     	;# 
  1815  0211                     	;# 
  1816  0212                     	;# 
  1817  0212                     	;# 
  1818  0213                     	;# 
  1819  0213                     	;# 
  1820  0214                     	;# 
  1821  0214                     	;# 
  1822  0215                     	;# 
  1823  0215                     	;# 
  1824  0215                     	;# 
  1825  0216                     	;# 
  1826  0216                     	;# 
  1827  0217                     	;# 
  1828  0217                     	;# 
  1829  0291                     	;# 
  1830  0291                     	;# 
  1831  0292                     	;# 
  1832  0293                     	;# 
  1833  0298                     	;# 
  1834  0298                     	;# 
  1835  0299                     	;# 
  1836  029A                     	;# 
  1837  0394                     	;# 
  1838  0395                     	;# 
  1839  0396                     	;# 
  1840  0FE4                     	;# 
  1841  0FE5                     	;# 
  1842  0FE6                     	;# 
  1843  0FE7                     	;# 
  1844  0FE8                     	;# 
  1845  0FE9                     	;# 
  1846  0FEA                     	;# 
  1847  0FEB                     	;# 
  1848  0FED                     	;# 
  1849  0FEE                     	;# 
  1850  0FEF                     	;# 
  1851  0000                     	;# 
  1852  0001                     	;# 
  1853  0002                     	;# 
  1854  0003                     	;# 
  1855  0004                     	;# 
  1856  0005                     	;# 
  1857  0006                     	;# 
  1858  0007                     	;# 
  1859  0008                     	;# 
  1860  0009                     	;# 
  1861  000A                     	;# 
  1862  000B                     	;# 
  1863  000C                     	;# 
  1864  000D                     	;# 
  1865  000E                     	;# 
  1866  0010                     	;# 
  1867  0011                     	;# 
  1868  0012                     	;# 
  1869  0015                     	;# 
  1870  0016                     	;# 
  1871  0016                     	;# 
  1872  0017                     	;# 
  1873  0018                     	;# 
  1874  0019                     	;# 
  1875  001A                     	;# 
  1876  001B                     	;# 
  1877  001C                     	;# 
  1878  008C                     	;# 
  1879  008D                     	;# 
  1880  008E                     	;# 
  1881  0090                     	;# 
  1882  0091                     	;# 
  1883  0092                     	;# 
  1884  0095                     	;# 
  1885  0096                     	;# 
  1886  0097                     	;# 
  1887  0099                     	;# 
  1888  009A                     	;# 
  1889  009B                     	;# 
  1890  009B                     	;# 
  1891  009C                     	;# 
  1892  009D                     	;# 
  1893  009E                     	;# 
  1894  010C                     	;# 
  1895  010D                     	;# 
  1896  010E                     	;# 
  1897  0116                     	;# 
  1898  0117                     	;# 
  1899  011D                     	;# 
  1900  018C                     	;# 
  1901  018D                     	;# 
  1902  018E                     	;# 
  1903  0191                     	;# 
  1904  0191                     	;# 
  1905  0192                     	;# 
  1906  0193                     	;# 
  1907  0193                     	;# 
  1908  0194                     	;# 
  1909  0195                     	;# 
  1910  0196                     	;# 
  1911  0197                     	;# 
  1912  0199                     	;# 
  1913  019A                     	;# 
  1914  019B                     	;# 
  1915  019B                     	;# 
  1916  019B                     	;# 
  1917  019B                     	;# 
  1918  019C                     	;# 
  1919  019C                     	;# 
  1920  019D                     	;# 
  1921  019E                     	;# 
  1922  019F                     	;# 
  1923  020D                     	;# 
  1924  0210                     	;# 
  1925  0211                     	;# 
  1926  0211                     	;# 
  1927  0212                     	;# 
  1928  0212                     	;# 
  1929  0213                     	;# 
  1930  0213                     	;# 
  1931  0214                     	;# 
  1932  0214                     	;# 
  1933  0215                     	;# 
  1934  0215                     	;# 
  1935  0215                     	;# 
  1936  0216                     	;# 
  1937  0216                     	;# 
  1938  0217                     	;# 
  1939  0217                     	;# 
  1940  0291                     	;# 
  1941  0291                     	;# 
  1942  0292                     	;# 
  1943  0293                     	;# 
  1944  0298                     	;# 
  1945  0298                     	;# 
  1946  0299                     	;# 
  1947  029A                     	;# 
  1948  0394                     	;# 
  1949  0395                     	;# 
  1950  0396                     	;# 
  1951  0FE4                     	;# 
  1952  0FE5                     	;# 
  1953  0FE6                     	;# 
  1954  0FE7                     	;# 
  1955  0FE8                     	;# 
  1956  0FE9                     	;# 
  1957  0FEA                     	;# 
  1958  0FEB                     	;# 
  1959  0FED                     	;# 
  1960  0FEE                     	;# 
  1961  0FEF                     	;# 
  1962                           
  1963                           	psect	idataBANK3
  1964  2642                     __pidataBANK3:	
  1965                           
  1966                           ;initializer for _VarProduct
  1967  2642  3463               	retlw	99
  1968  2643  3402               	retlw	2
  1969  2644  3400               	retlw	0
  1970  2645  3400               	retlw	0
  1971  2646  3400               	retlw	0
  1972  2647  3400               	retlw	0
  1973  2648  3400               	retlw	0
  1974  2649  3400               	retlw	0
  1975  264A  3400               	retlw	0
  1976  264B  3400               	retlw	0
  1977  264C  3400               	retlw	0
  1978  264D  3400               	retlw	0
  1979  264E  34FF               	retlw	255
  1980  264F  34FF               	retlw	255
  1981  2650  34FF               	retlw	255
  1982  2651  3400               	retlw	0
  1983  2652  3400               	retlw	0
  1984  2653  3400               	retlw	0
  1985  2654  3400               	retlw	0
  1986  2655  3400               	retlw	0
  1987  2656  3402               	retlw	2
  1988  2657  3400               	retlw	0
  1989  2658  3400               	retlw	0
  1990  2659  3400               	retlw	0
  1991  265A  3400               	retlw	0
  1992  265B  3400               	retlw	0
  1993  265C  3400               	retlw	0
  1994  265D  3400               	retlw	0
  1995  265E  3400               	retlw	0
  1996  265F  3400               	retlw	0
  1997                           
  1998                           	psect	idataBANK4
  1999  278F                     __pidataBANK4:	
  2000                           
  2001                           ;initializer for _VarMemory
  2002  278F  34FF               	retlw	255
  2003  2790  34FF               	retlw	255
  2004  2791  34FF               	retlw	255
  2005  2792  3400               	retlw	0
  2006  2793  3400               	retlw	0
  2007  2794  3400               	retlw	0
  2008  2795  3400               	retlw	0
  2009  2796  3400               	retlw	0
  2010  2797  3400               	retlw	0
  2011  2798  3400               	retlw	0
  2012  2799  3400               	retlw	0
  2013  279A  3400               	retlw	0
  2014  279B  3400               	retlw	0
  2015  279C  3400               	retlw	0
  2016  279D  3400               	retlw	0
  2017  279E  3400               	retlw	0
  2018  279F  3400               	retlw	0
  2019  27A0  3400               	retlw	0
  2020  27A1  3400               	retlw	0
  2021  27A2  3400               	retlw	0
  2022  27A3  3400               	retlw	0
  2023  27A4  3400               	retlw	0
  2024  27A5  3400               	retlw	0
  2025  27A6  3400               	retlw	0
  2026  27A7  3400               	retlw	0
  2027  27A8  3400               	retlw	0
  2028  27A9  3400               	retlw	0
  2029  27AA  3400               	retlw	0
  2030  27AB  3400               	retlw	0
  2031  27AC  3400               	retlw	0
  2032  27AD  3400               	retlw	0
  2033  27AE  34AA               	retlw	170
  2034  27AF  3400               	retlw	0
  2035  27B0  3400               	retlw	0
  2036  27B1  3400               	retlw	0
  2037  27B2  3400               	retlw	0
  2038  27B3  3400               	retlw	0
  2039                           
  2040                           	psect	stringtext
  2041  1800                     __pstringtext:	
  2042  1800                     _CC2500_registers_address:	
  2043  1800  3403               	retlw	3
  2044  1801  3416               	retlw	22
  2045  1802  3417               	retlw	23
  2046  1803  341E               	retlw	30
  2047  1804  341F               	retlw	31
  2048  1805  3420               	retlw	32
  2049  1806  342A               	retlw	42
  2050  1807  342B               	retlw	43
  2051  1808  340B               	retlw	11
  2052  1809  340C               	retlw	12
  2053  180A  340D               	retlw	13
  2054  180B  340E               	retlw	14
  2055  180C  340F               	retlw	15
  2056  180D  3410               	retlw	16
  2057  180E  3411               	retlw	17
  2058  180F  3412               	retlw	18
  2059  1810  3413               	retlw	19
  2060  1811  3414               	retlw	20
  2061  1812  340A               	retlw	10
  2062  1813  3415               	retlw	21
  2063  1814  3421               	retlw	33
  2064  1815  3422               	retlw	34
  2065  1816  3418               	retlw	24
  2066  1817  3419               	retlw	25
  2067  1818  341A               	retlw	26
  2068  1819  341B               	retlw	27
  2069  181A  341C               	retlw	28
  2070  181B  341D               	retlw	29
  2071  181C  3423               	retlw	35
  2072  181D  3424               	retlw	36
  2073  181E  3425               	retlw	37
  2074  181F  3426               	retlw	38
  2075  1820  3429               	retlw	41
  2076  1821  342C               	retlw	44
  2077  1822  342D               	retlw	45
  2078  1823  342E               	retlw	46
  2079  1824  3400               	retlw	0
  2080  1825  3401               	retlw	1
  2081  1826  3402               	retlw	2
  2082  1827  3407               	retlw	7
  2083  1828  3408               	retlw	8
  2084  1829  3409               	retlw	9
  2085  182A  3406               	retlw	6
  2086  182B  3404               	retlw	4
  2087  182C  3405               	retlw	5
  2088  182D  3427               	retlw	39
  2089  182E  3428               	retlw	40
  2090  182F                     __end_of_CC2500_registers_address:	
  2091  182F                     _CC2500_rfSettings:	
  2092  182F  3407               	retlw	7
  2093  1830  3407               	retlw	7
  2094  1831  3430               	retlw	48
  2095  1832  3487               	retlw	135
  2096  1833  346B               	retlw	107
  2097  1834  34F8               	retlw	248
  2098  1835  347F               	retlw	127
  2099  1836  343F               	retlw	63
  2100  1837  3409               	retlw	9
  2101  1838  3400               	retlw	0
  2102  1839  345C               	retlw	92
  2103  183A  34A7               	retlw	167
  2104  183B  3462               	retlw	98
  2105  183C  3486               	retlw	134
  2106  183D  3483               	retlw	131
  2107  183E  3403               	retlw	3
  2108  183F  3422               	retlw	34
  2109  1840  34F8               	retlw	248
  2110  1841  3400               	retlw	0
  2111  1842  3444               	retlw	68
  2112  1843  34B6               	retlw	182
  2113  1844  3410               	retlw	16
  2114  1845  3418               	retlw	24
  2115  1846  341D               	retlw	29
  2116  1847  341C               	retlw	28
  2117  1848  34C7               	retlw	199
  2118  1849  3400               	retlw	0
  2119  184A  34B2               	retlw	178
  2120  184B  34EA               	retlw	234
  2121  184C  340A               	retlw	10
  2122  184D  3400               	retlw	0
  2123  184E  3411               	retlw	17
  2124  184F  3459               	retlw	89
  2125  1850  3488               	retlw	136
  2126  1851  3431               	retlw	49
  2127  1852  340B               	retlw	11
  2128  1853  342F               	retlw	47
  2129  1854  342E               	retlw	46
  2130  1855  3406               	retlw	6
  2131  1856  3404               	retlw	4
  2132  1857  3405               	retlw	5
  2133  1858  3400               	retlw	0
  2134  1859  3430               	retlw	48
  2135  185A  34D3               	retlw	211
  2136  185B  3491               	retlw	145
  2137  185C  3441               	retlw	65
  2138  185D  3400               	retlw	0
  2139  185E                     __end_of_CC2500_rfSettings:	
  2140  185E                     _CC2500_patable_vaule:	
  2141  185E  34FE               	retlw	254
  2142  185F  34FE               	retlw	254
  2143  1860  34FE               	retlw	254
  2144  1861  34FE               	retlw	254
  2145  1862  34FE               	retlw	254
  2146  1863  34FE               	retlw	254
  2147  1864  34FE               	retlw	254
  2148  1865  34FE               	retlw	254
  2149  1866                     __end_of_CC2500_patable_vaule:	
  2150                           
  2151                           	psect	nvBANK1
  2152  00EB                     __pnvBANK1:	
  2153  00EB                     _Memory:	
  2154  00EB                     	ds	1
  2155  00EC                     _Product:	
  2156  00EC                     	ds	1
  2157  00ED                     _TMain:	
  2158  00ED                     	ds	1
  2159  00EE                     _Timer0:	
  2160  00EE                     	ds	1
  2161  000C                     _PORTA	set	12
  2162  000D                     _PORTB	set	13
  2163  000E                     _PORTC	set	14
  2164  0015                     _TMR0	set	21
  2165  005F                     _GIE	set	95
  2166  005C                     _INTE	set	92
  2167  0059                     _INTF	set	89
  2168  005B                     _IOCIE	set	91
  2169  0058                     _IOCIF	set	88
  2170  005E                     _PEIE	set	94
  2171  0060                     _RA0	set	96
  2172  0063                     _RA3	set	99
  2173  0064                     _RA4	set	100
  2174  0066                     _RA6	set	102
  2175  0067                     _RA7	set	103
  2176  0068                     _RB0	set	104
  2177  0069                     _RB1	set	105
  2178  006A                     _RB2	set	106
  2179  006B                     _RB3	set	107
  2180  006C                     _RB4	set	108
  2181  006D                     _RB5	set	109
  2182  0070                     _RC0	set	112
  2183  0071                     _RC1	set	113
  2184  0072                     _RC2	set	114
  2185  0074                     _RC4	set	116
  2186  0075                     _RC5	set	117
  2187  0077                     _RC7	set	119
  2188  005D                     _TMR0IE	set	93
  2189  005A                     _TMR0IF	set	90
  2190  009D                     _ADCON0	set	157
  2191  009E                     _ADCON1	set	158
  2192  009C                     _ADRESH	set	156
  2193  009B                     _ADRESL	set	155
  2194  0095                     _OPTION_REG	set	149
  2195  0099                     _OSCCON	set	153
  2196  008C                     _TRISA	set	140
  2197  008D                     _TRISB	set	141
  2198  008E                     _TRISC	set	142
  2199  04E9                     _GO_nDONE	set	1257
  2200  0117                     _FVRCON	set	279
  2201  010C                     _LATA	set	268
  2202  010D                     _LATB	set	269
  2203  010E                     _LATC	set	270
  2204  018C                     _ANSELA	set	396
  2205  018D                     _ANSELB	set	397
  2206  018E                     _ANSELC	set	398
  2207  0192                     _PMADRH	set	402
  2208  0191                     _PMADRL	set	401
  2209  0196                     _PMCON2	set	406
  2210  0194                     _PMDATH	set	404
  2211  0193                     _PMDATL	set	403
  2212  0CAE                     _CFGS	set	3246
  2213  0CAC                     _FREE	set	3244
  2214  0CAD                     _LWLO	set	3245
  2215  0CA8                     _RD	set	3240
  2216  0CA9                     _WR	set	3241
  2217  0CAA                     _WREN	set	3242
  2218  1068                     _WPUB0	set	4200
  2219  1069                     _WPUB1	set	4201
  2220  106A                     _WPUB2	set	4202
  2221  0396                     _IOCBF	set	918
  2222  0395                     _IOCBN	set	917
  2223  0394                     _IOCBP	set	916
  2224  1CB2                     _IOCBF2	set	7346
  2225                           
  2226                           ; #config settings
  2227  0000                     
  2228                           	psect	cinit
  2229  0018                     start_initialization:	
  2230  0018                     __initialization:	
  2231                           
  2232                           ; Clear objects allocated to BITCOMMON
  2233  0018  01FA               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
  2234                           
  2235                           ; Clear objects allocated to COMMON
  2236  0019  01FB               	clrf	__pbssCOMMON& (0+127)
  2237  001A  01FC               	clrf	(__pbssCOMMON+1)& (0+127)
  2238  001B  01FD               	clrf	(__pbssCOMMON+2)& (0+127)
  2239                           
  2240                           ; Clear objects allocated to BANK0
  2241  001C  01ED               	clrf	__pbssBANK0& (0+127)
  2242  001D  01EE               	clrf	(__pbssBANK0+1)& (0+127)
  2243  001E  01EF               	clrf	(__pbssBANK0+2)& (0+127)
  2244                           
  2245                           ; Clear objects allocated to BANK1
  2246  001F  30A0               	movlw	low __pbssBANK1
  2247  0020  0084               	movwf	4
  2248  0021  3000               	movlw	high __pbssBANK1
  2249  0022  0085               	movwf	5
  2250  0023  304B               	movlw	75
  2251  0024  31A1  21C8  3180   	fcall	clear_ram0
  2252                           
  2253                           ; Clear objects allocated to BANK2
  2254  0027  3020               	movlw	low __pbssBANK2
  2255  0028  0084               	movwf	4
  2256  0029  3001               	movlw	high __pbssBANK2
  2257  002A  0085               	movwf	5
  2258  002B  304E               	movlw	78
  2259  002C  31A1  21C8  3180   	fcall	clear_ram0
  2260                           
  2261                           ; Clear objects allocated to BANK3
  2262  002F  30BE               	movlw	low __pbssBANK3
  2263  0030  0084               	movwf	4
  2264  0031  3001               	movlw	high __pbssBANK3
  2265  0032  0085               	movwf	5
  2266  0033  3010               	movlw	16
  2267  0034  31A1  21C8  3180   	fcall	clear_ram0
  2268                           
  2269                           ; Clear objects allocated to BANK5
  2270  0037  30A0               	movlw	low __pbssBANK5
  2271  0038  0084               	movwf	4
  2272  0039  3002               	movlw	high __pbssBANK5
  2273  003A  0085               	movwf	5
  2274  003B  3047               	movlw	71
  2275  003C  31A1  21C8  3180   	fcall	clear_ram0
  2276                           
  2277                           ; Initialize objects allocated to BANK3
  2278  003F  3042               	movlw	low __pidataBANK3
  2279  0040  0084               	movwf	4
  2280  0041  30A6               	movlw	(high __pidataBANK3)| (0+128)
  2281  0042  0085               	movwf	5
  2282  0043  30A0               	movlw	low __pdataBANK3
  2283  0044  0086               	movwf	6
  2284  0045  3001               	movlw	high __pdataBANK3
  2285  0046  0087               	movwf	7
  2286  0047  301E               	movlw	30
  2287  0048  31A1  21C2  3180   	fcall	init_ram
  2288                           
  2289                           ; Initialize objects allocated to BANK4
  2290  004B  308F               	movlw	low __pidataBANK4
  2291  004C  0084               	movwf	4
  2292  004D  30A7               	movlw	(high __pidataBANK4)| (0+128)
  2293  004E  0085               	movwf	5
  2294  004F  3020               	movlw	low __pdataBANK4
  2295  0050  0086               	movwf	6
  2296  0051  3002               	movlw	high __pdataBANK4
  2297  0052  0087               	movwf	7
  2298  0053  3025               	movlw	37
  2299  0054  31A1  21C2         	fcall	init_ram
  2300  0056                     end_of_initialization:	
  2301                           ;End of C runtime variable initialization code
  2302                           
  2303  0056                     __end_of__initialization:	
  2304  0056  107E               	bcf	pic14e$flags,0	;clear compiler interrupt flag
  2305  0057  0020               	movlb	0
  2306  0058  3194  2C0B         	ljmp	_main	;jump to C main() function
  2307                           
  2308                           	psect	bitbssCOMMON
  2309  03D0                     __pbitbssCOMMON:	
  2310  03D0                     _CC2500_Enable:	
  2311  03D0                     	ds	1
  2312  03D1                     _Receive_GO:	
  2313  03D1                     	ds	1
  2314  03D2                     _Receive_OK:	
  2315  03D2                     	ds	1
  2316  03D3                     _RxStatus:	
  2317  03D3                     	ds	1
  2318  03D4                     _Transceive_GO:	
  2319  03D4                     	ds	1
  2320  03D5                     _Transceive_OK:	
  2321  03D5                     	ds	1
  2322  03D6                     _TxStatus:	
  2323  03D6                     	ds	1
  2324                           
  2325                           	psect	bssCOMMON
  2326  007B                     __pbssCOMMON:	
  2327  007B                     _DimmerLights11:	
  2328  007B                     	ds	1
  2329  007C                     _DimmerLights22:	
  2330  007C                     	ds	1
  2331  007D                     _Temp:	
  2332  007D                     	ds	1
  2333                           
  2334                           	psect	bssBANK0
  2335  006D                     __pbssBANK0:	
  2336  006D                     _DimmerLights:	
  2337  006D                     	ds	1
  2338  006E                     _Sw:	
  2339  006E                     	ds	1
  2340  006F                     _Load:	
  2341  006F                     	ds	1
  2342                           
  2343                           	psect	bssBANK1
  2344  00A0                     __pbssBANK1:	
  2345  00A0                     _RF_Data:	
  2346  00A0                     	ds	21
  2347  00B5                     _RF_Count:	
  2348  00B5                     	ds	2
  2349  00B7                     _Buz:	
  2350  00B7                     	ds	1
  2351  00B8                     _CRC:	
  2352  00B8                     	ds	1
  2353  00B9                     _DelayOff:	
  2354  00B9                     	ds	1
  2355  00BA                     _Dimmer:	
  2356  00BA                     	ds	1
  2357  00BB                     _DimmerLightsIntr:	
  2358  00BB                     	ds	1
  2359  00BC                     _LED:	
  2360  00BC                     	ds	1
  2361  00BD                     _PF:	
  2362  00BD                     	ds	1
  2363  00BE                     _RF:	
  2364  00BE                     	ds	1
  2365  00BF                     _RFSW:	
  2366  00BF                     	ds	1
  2367  00C0                     _RSSI:	
  2368  00C0                     	ds	1
  2369  00C1                     _Rx_Length:	
  2370  00C1                     	ds	1
  2371  00C2                     _SPI0Buffer:	
  2372  00C2                     	ds	1
  2373  00C3                     _Tx_Length:	
  2374  00C3                     	ds	1
  2375  00C4                     _r_address:	
  2376  00C4                     	ds	1
  2377  00C5                     _r_data:	
  2378  00C5                     	ds	1
  2379  00C6                     _s_data:	
  2380  00C6                     	ds	1
  2381  00C7                     _VarTimer0:	
  2382  00C7                     	ds	7
  2383  00CE                     _DlySw1:	
  2384  00CE                     	ds	5
  2385  00D3                     _DlySw2:	
  2386  00D3                     	ds	5
  2387  00D8                     _VarErrLED:	
  2388  00D8                     	ds	4
  2389  00DC                     _VarLED1:	
  2390  00DC                     	ds	4
  2391  00E0                     _VarLED2:	
  2392  00E0                     	ds	4
  2393  00E4                     _Dimmer1:	
  2394  00E4                     	ds	3
  2395  00E7                     _RF1:	
  2396  00E7                     	ds	2
  2397  00E9                     _RFSW1:	
  2398  00E9                     	ds	1
  2399  00EA                     _RFSW2:	
  2400  00EA                     	ds	1
  2401                           
  2402                           	psect	bssBANK2
  2403  0120                     __pbssBANK2:	
  2404  0120                     _Temp1:	
  2405  0120                     	ds	14
  2406  012E                     _DimmerLights1:	
  2407  012E                     	ds	13
  2408  013B                     _DimmerLights2:	
  2409  013B                     	ds	13
  2410  0148                     _Buz1:	
  2411  0148                     	ds	12
  2412  0154                     _Sw1:	
  2413  0154                     	ds	9
  2414  015D                     _Sw2:	
  2415  015D                     	ds	9
  2416  0166                     _PF1:	
  2417  0166                     	ds	8
  2418                           
  2419                           	psect	bssBANK3
  2420  01BE                     __pbssBANK3:	
  2421  01BE                     _VarTMain:	
  2422  01BE                     	ds	16
  2423                           
  2424                           	psect	dataBANK3
  2425  01A0                     __pdataBANK3:	
  2426  01A0                     _VarProduct:	
  2427  01A0                     	ds	30
  2428                           
  2429                           	psect	dataBANK4
  2430  0220                     __pdataBANK4:	
  2431  0220                     _VarMemory:	
  2432  0220                     	ds	37
  2433                           
  2434                           	psect	bssBANK5
  2435  02A0                     __pbssBANK5:	
  2436  02A0                     _Load1:	
  2437  02A0                     	ds	71
  2438                           
  2439                           	psect	clrtext
  2440  21C8                     clear_ram0:	
  2441                           ;	Called with FSR0 containing the base address, and
  2442                           ;	WREG with the size to clear
  2443                           
  2444  21C8  0064               	clrwdt	;clear the watchdog before getting into this loop
  2445  21C9                     clrloop0:	
  2446  21C9  0180               	clrf	0	;clear RAM location pointed to by FSR
  2447  21CA  3101               	addfsr 0,1
  2448  21CB  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2449  21CC  29C9               	goto	clrloop0	;have we reached the end yet?
  2450  21CD  3400               	retlw	0	;all done for this memory range, return
  2451                           
  2452                           	psect	inittext
  2453  21C2                     init_ram:	
  2454  21C2  00FE               	movwf	126
  2455  21C3                     initloop:	
  2456  21C3  0012               	moviw fsr0++
  2457  21C4  001E               	movwi fsr1++
  2458  21C5  0BFE               	decfsz	126,f
  2459  21C6  29C3               	goto	initloop
  2460  21C7  3400               	retlw	0
  2461                           
  2462                           	psect	cstackCOMMON
  2463  0070                     __pcstackCOMMON:	
  2464  0070                     ?_setBuz_Initialization:	
  2465  0070                     ?_setBuz_Main:	
  2466                           ; 0 bytes @ 0x0
  2467                           
  2468  0070                     ?_CC2500_WriteByte:	
  2469                           ; 0 bytes @ 0x0
  2470                           
  2471  0070                     ?_CC2500_WriteCommand:	
  2472                           ; 0 bytes @ 0x0
  2473                           
  2474  0070                     ?_CC2500_ReadStatus:	
  2475                           ; 0 bytes @ 0x0
  2476                           
  2477  0070                     ?_CC2500_ReadByte:	
  2478                           ; 0 bytes @ 0x0
  2479                           
  2480  0070                     ?_CC2500_PowerRST:	
  2481                           ; 0 bytes @ 0x0
  2482                           
  2483  0070                     ?_CC2500_InitSetREG:	
  2484                           ; 0 bytes @ 0x0
  2485                           
  2486  0070                     ?_CC2500_InitPATable:	
  2487                           ; 0 bytes @ 0x0
  2488                           
  2489  0070                     ?_CC2500_ClearTXFIFO:	
  2490                           ; 0 bytes @ 0x0
  2491                           
  2492  0070                     ?_CC2500_ClearRXFIFO:	
  2493                           ; 0 bytes @ 0x0
  2494                           
  2495  0070                     ?_CC2500_FrequencyCabr:	
  2496                           ; 0 bytes @ 0x0
  2497                           
  2498  0070                     ?_CC2500_SIDLEMode:	
  2499                           ; 0 bytes @ 0x0
  2500                           
  2501  0070                     ?_DlyOff_Initialization:	
  2502                           ; 0 bytes @ 0x0
  2503                           
  2504  0070                     ?_DlyOff_Main:	
  2505                           ; 0 bytes @ 0x0
  2506                           
  2507  0070                     ?_setTxData:	
  2508                           ; 0 bytes @ 0x0
  2509                           
  2510  0070                     ?_setDimmerLights_Initialization:	
  2511                           ; 0 bytes @ 0x0
  2512                           
  2513  0070                     ?_setDimmerLights_Main:	
  2514                           ; 0 bytes @ 0x0
  2515                           
  2516  0070                     ?_setDimmerLights_ERROR:	
  2517                           ; 0 bytes @ 0x0
  2518                           
  2519  0070                     ?_setLED_Initialization:	
  2520                           ; 0 bytes @ 0x0
  2521                           
  2522  0070                     ?_setLED_Main:	
  2523                           ; 0 bytes @ 0x0
  2524                           
  2525  0070                     ?_MainT_Initialization:	
  2526                           ; 0 bytes @ 0x0
  2527                           
  2528  0070                     ?_Mcu_Initialization:	
  2529                           ; 0 bytes @ 0x0
  2530                           
  2531  0070                     ?_Flash_Memory_Initialization:	
  2532                           ; 0 bytes @ 0x0
  2533                           
  2534  0070                     ?_Temp_Initialization:	
  2535                           ; 0 bytes @ 0x0
  2536                           
  2537  0070                     ?_Load_Initialization:	
  2538                           ; 0 bytes @ 0x0
  2539                           
  2540  0070                     ?_PowerFault_Initialization:	
  2541                           ; 0 bytes @ 0x0
  2542                           
  2543  0070                     ?_Switch_Initialization:	
  2544                           ; 0 bytes @ 0x0
  2545                           
  2546  0070                     ?_RF_Initialization:	
  2547                           ; 0 bytes @ 0x0
  2548                           
  2549  0070                     ?_MainT:	
  2550                           ; 0 bytes @ 0x0
  2551                           
  2552  0070                     ?_Flash_Memory_Main:	
  2553                           ; 0 bytes @ 0x0
  2554                           
  2555  0070                     ?_Temp_Main:	
  2556                           ; 0 bytes @ 0x0
  2557                           
  2558  0070                     ?_Load_Main:	
  2559                           ; 0 bytes @ 0x0
  2560                           
  2561  0070                     ?_PowerFault_Main:	
  2562                           ; 0 bytes @ 0x0
  2563                           
  2564  0070                     ?_Switch_Main:	
  2565                           ; 0 bytes @ 0x0
  2566                           
  2567  0070                     ?_RF_Main:	
  2568                           ; 0 bytes @ 0x0
  2569                           
  2570  0070                     ?_IO_Set:	
  2571                           ; 0 bytes @ 0x0
  2572                           
  2573  0070                     ?_TMR0_Set:	
  2574                           ; 0 bytes @ 0x0
  2575                           
  2576  0070                     ?_ADC_Set:	
  2577                           ; 0 bytes @ 0x0
  2578                           
  2579  0070                     ?_INT_Set:	
  2580                           ; 0 bytes @ 0x0
  2581                           
  2582  0070                     ?_IOC_Set:	
  2583                           ; 0 bytes @ 0x0
  2584                           
  2585  0070                     ?_IOC_ISR:	
  2586                           ; 0 bytes @ 0x0
  2587                           
  2588  0070                     ??_IOC_ISR:	
  2589                           ; 0 bytes @ 0x0
  2590                           
  2591  0070                     ?_TMR0_ISR:	
  2592                           ; 0 bytes @ 0x0
  2593                           
  2594  0070                     ?_INT_ISR:	
  2595                           ; 0 bytes @ 0x0
  2596                           
  2597  0070                     ?_Flash_Memory_Write:	
  2598                           ; 0 bytes @ 0x0
  2599                           
  2600  0070                     ?_Flash_Memory_Modify:	
  2601                           ; 0 bytes @ 0x0
  2602                           
  2603  0070                     ?_setLoad_Initialization:	
  2604                           ; 0 bytes @ 0x0
  2605                           
  2606  0070                     ?_setLoad_Main:	
  2607                           ; 0 bytes @ 0x0
  2608                           
  2609  0070                     ?_setLoad_AH_AL_Restore:	
  2610                           ; 0 bytes @ 0x0
  2611                           
  2612  0070                     ?_setTemp_Main:	
  2613                           ; 0 bytes @ 0x0
  2614                           
  2615  0070                     ?_setTemp_Initialization:	
  2616                           ; 0 bytes @ 0x0
  2617                           
  2618  0070                     ?_setPowerFault_Initialization:	
  2619                           ; 0 bytes @ 0x0
  2620                           
  2621  0070                     ?_setPowerFault_Main:	
  2622                           ; 0 bytes @ 0x0
  2623                           
  2624  0070                     ?_setRF_Initialization:	
  2625                           ; 0 bytes @ 0x0
  2626                           
  2627  0070                     ?_setRF_Main:	
  2628                           ; 0 bytes @ 0x0
  2629                           
  2630  0070                     ?_RF_RxDisable:	
  2631                           ; 0 bytes @ 0x0
  2632                           
  2633  0070                     ?_getRxData:	
  2634                           ; 0 bytes @ 0x0
  2635                           
  2636  0070                     ?_setLog_Code:	
  2637                           ; 0 bytes @ 0x0
  2638                           
  2639  0070                     ?_setControl_Lights_Table:	
  2640                           ; 0 bytes @ 0x0
  2641                           
  2642  0070                     ?_setRFSW_Control:	
  2643                           ; 0 bytes @ 0x0
  2644                           
  2645  0070                     ?_setRFSW_AdjControl:	
  2646                           ; 0 bytes @ 0x0
  2647                           
  2648  0070                     ?_setRF_DimmerValue:	
  2649                           ; 0 bytes @ 0x0
  2650                           
  2651  0070                     ?_setSw_Initialization:	
  2652                           ; 0 bytes @ 0x0
  2653                           
  2654  0070                     ?_setSw_Main:	
  2655                           ; 0 bytes @ 0x0
  2656                           
  2657  0070                     ?_Sw_DimmerOnFunc:	
  2658                           ; 0 bytes @ 0x0
  2659                           
  2660  0070                     ?_Sw_DimmerAdjFunc:	
  2661                           ; 0 bytes @ 0x0
  2662                           
  2663  0070                     ?_Sw_DimmerOffFunc:	
  2664                           ; 0 bytes @ 0x0
  2665                           
  2666  0070                     ?_BuzPointSelect:	
  2667                           ; 0 bytes @ 0x0
  2668                           
  2669  0070                     ?_Buzzer_Initialization:	
  2670                           ; 0 bytes @ 0x0
  2671                           
  2672  0070                     ?_Buzzer_Main:	
  2673                           ; 0 bytes @ 0x0
  2674                           
  2675  0070                     ?_CC2500_TxData:	
  2676                           ; 0 bytes @ 0x0
  2677                           
  2678  0070                     ?_CC2500_RxData:	
  2679                           ; 0 bytes @ 0x0
  2680                           
  2681  0070                     ?_CC2500_PowerOnInitial:	
  2682                           ; 0 bytes @ 0x0
  2683                           
  2684  0070                     ?_DelayOffPointSelect:	
  2685                           ; 0 bytes @ 0x0
  2686                           
  2687  0070                     ?_DelayOff_Initialization:	
  2688                           ; 0 bytes @ 0x0
  2689                           
  2690  0070                     ?_DelayOff_Main:	
  2691                           ; 0 bytes @ 0x0
  2692                           
  2693  0070                     ?_DimmerLightsPointSelect:	
  2694                           ; 0 bytes @ 0x0
  2695                           
  2696  0070                     ?_DimmerLights_Initialization:	
  2697                           ; 0 bytes @ 0x0
  2698                           
  2699  0070                     ?_DimmerLights_Close:	
  2700                           ; 0 bytes @ 0x0
  2701                           
  2702  0070                     ?_DimmerLights_Main:	
  2703                           ; 0 bytes @ 0x0
  2704                           
  2705  0070                     ?_DimmerLights_ERROR:	
  2706                           ; 0 bytes @ 0x0
  2707                           
  2708  0070                     ?_setDimmerLights_AdjRF:	
  2709                           ; 0 bytes @ 0x0
  2710                           
  2711  0070                     ?_DimmerPointSelect:	
  2712                           ; 0 bytes @ 0x0
  2713                           
  2714  0070                     ?_LedPointSelect:	
  2715                           ; 0 bytes @ 0x0
  2716                           
  2717  0070                     ?_LED_Initialization:	
  2718                           ; 0 bytes @ 0x0
  2719                           
  2720  0070                     ?_LED_Main:	
  2721                           ; 0 bytes @ 0x0
  2722                           
  2723  0070                     ?_main:	
  2724                           ; 0 bytes @ 0x0
  2725                           
  2726  0070                     ?_ISR:	
  2727                           ; 0 bytes @ 0x0
  2728                           
  2729  0070                     ?_setDimmerReClock:	
  2730                           ; 0 bytes @ 0x0
  2731                           
  2732  0070                     ??_setDimmerReClock:	
  2733                           ; 0 bytes @ 0x0
  2734                           
  2735  0070                     ?_setINT_GO:	
  2736                           ; 0 bytes @ 0x0
  2737                           
  2738  0070                     ?_Flash_Memory_Unlock:	
  2739                           ; 0 bytes @ 0x0
  2740                           
  2741  0070                     ?_Flash_Memory_Erasing:	
  2742                           ; 0 bytes @ 0x0
  2743                           
  2744  0070                     ?_LoadPointSelect:	
  2745                           ; 0 bytes @ 0x0
  2746                           
  2747  0070                     ?_TempPointSelect:	
  2748                           ; 0 bytes @ 0x0
  2749                           
  2750  0070                     ?_PowerFaultPointSelect:	
  2751                           ; 0 bytes @ 0x0
  2752                           
  2753  0070                     ?_RfPointSelect:	
  2754                           ; 0 bytes @ 0x0
  2755                           
  2756  0070                     ?_RfSWPointSelect:	
  2757                           ; 0 bytes @ 0x0
  2758                           
  2759  0070                     ?_TouchPower:	
  2760                           ; 0 bytes @ 0x0
  2761                           
  2762  0070                     ?_SwPointSelect:	
  2763                           ; 0 bytes @ 0x0
  2764                           
  2765  0070                     ?i1_LoadPointSelect:	
  2766                           ; 0 bytes @ 0x0
  2767                           
  2768  0070                     ??i1_LoadPointSelect:	
  2769                           ; 0 bytes @ 0x0
  2770                           
  2771  0070                     ?i1_RfPointSelect:	
  2772                           ; 0 bytes @ 0x0
  2773                           
  2774  0070                     ??i1_RfPointSelect:	
  2775                           ; 0 bytes @ 0x0
  2776                           
  2777  0070                     ?_DelayTimejudge:	
  2778                           ; 0 bytes @ 0x0
  2779                           
  2780  0070                     ?_getPercentValue:	
  2781                           ; 1 bytes @ 0x0
  2782                           
  2783  0070                     ?_getDimmer_Detect:	
  2784                           ; 1 bytes @ 0x0
  2785                           
  2786  0070                     ?_getDimmerLights_StatusFlag:	
  2787                           ; 1 bytes @ 0x0
  2788                           
  2789  0070                     ?_getDimmerLights_Trigger:	
  2790                           ; 1 bytes @ 0x0
  2791                           
  2792  0070                     ?_getDimmer_TempERROR:	
  2793                           ; 1 bytes @ 0x0
  2794                           
  2795  0070                     ?_getDimmer_LoadERROR:	
  2796                           ; 1 bytes @ 0x0
  2797                           
  2798  0070                     ?_getDimmer_PFERROR:	
  2799                           ; 1 bytes @ 0x0
  2800                           
  2801  0070                     ?_setPercentValue:	
  2802                           ; 1 bytes @ 0x0
  2803                           
  2804  0070                     ?_Flash_Memory_Read:	
  2805                           ; 1 bytes @ 0x0
  2806                           
  2807  0070                     ?_getTemp_Safe:	
  2808                           ; 1 bytes @ 0x0
  2809                           
  2810  0070                     ?_getPF_Safe:	
  2811                           ; 1 bytes @ 0x0
  2812                           
  2813  0070                     ?_getLoad_Safe:	
  2814                           ; 1 bytes @ 0x0
  2815                           
  2816  0070                     setBuz_Initialization@buz:	
  2817                           ; 1 bytes @ 0x0
  2818                           
  2819  0070                     setLoad_Count@load:	
  2820                           ; 1 bytes @ 0x0
  2821                           
  2822  0070                     setLoad_AH_AL_Restore@load:	
  2823                           ; 1 bytes @ 0x0
  2824                           
  2825  0070                     TempPointSelect@temp:	
  2826                           ; 1 bytes @ 0x0
  2827                           
  2828  0070                     PowerFaultPointSelect@pf:	
  2829                           ; 1 bytes @ 0x0
  2830                           
  2831  0070                     setRF_Initialization@rf:	
  2832                           ; 1 bytes @ 0x0
  2833                           
  2834                           
  2835                           ; 1 bytes @ 0x0
  2836  0070                     	ds	1
  2837  0071                     i1LoadPointSelect@load:	
  2838  0071                     i1RfPointSelect@rf:	
  2839                           ; 1 bytes @ 0x1
  2840                           
  2841                           
  2842                           ; 1 bytes @ 0x1
  2843  0071                     	ds	1
  2844  0072                     ?_setRF_ReceiveGO:	
  2845  0072                     ?i1_setLoad_StatusOff:	
  2846                           ; 0 bytes @ 0x2
  2847                           
  2848  0072                     setRF_ReceiveGO@command:	
  2849                           ; 0 bytes @ 0x2
  2850                           
  2851  0072                     i1setLoad_StatusOff@lights:	
  2852                           ; 1 bytes @ 0x2
  2853                           
  2854                           
  2855                           ; 1 bytes @ 0x2
  2856  0072                     	ds	1
  2857  0073                     ??_setRF_ReceiveGO:	
  2858  0073                     setRF_ReceiveGO@rf:	
  2859                           ; 0 bytes @ 0x3
  2860                           
  2861  0073                     i1setLoad_StatusOff@command:	
  2862                           ; 1 bytes @ 0x3
  2863                           
  2864                           
  2865                           ; 1 bytes @ 0x3
  2866  0073                     	ds	1
  2867  0074                     ??_INT_ISR:	
  2868  0074                     ??i1_setLoad_StatusOff:	
  2869                           ; 0 bytes @ 0x4
  2870                           
  2871  0074                     i1setLoad_StatusOff@load:	
  2872                           ; 0 bytes @ 0x4
  2873                           
  2874                           
  2875                           ; 1 bytes @ 0x4
  2876  0074                     	ds	1
  2877  0075                     ??_TMR0_ISR:	
  2878                           
  2879                           ; 0 bytes @ 0x5
  2880  0075                     	ds	4
  2881  0079                     ??_ISR:	
  2882                           
  2883                           ; 0 bytes @ 0x9
  2884  0079                     	ds	1
  2885                           
  2886                           	psect	cstackBANK0
  2887  0020                     __pcstackBANK0:	
  2888  0020                     ??_CC2500_WriteByte:	
  2889  0020                     ??_CC2500_ReadByte:	
  2890                           ; 0 bytes @ 0x0
  2891                           
  2892  0020                     ?_DelayTime_1us:	
  2893                           ; 0 bytes @ 0x0
  2894                           
  2895  0020                     ?_setRF_DimmerLights:	
  2896                           ; 0 bytes @ 0x0
  2897                           
  2898  0020                     ??_DelayTimejudge:	
  2899                           ; 0 bytes @ 0x0
  2900                           
  2901  0020                     ?_setLoad_Count:	
  2902                           ; 0 bytes @ 0x0
  2903                           
  2904  0020                     ??_MainT_Initialization:	
  2905                           ; 0 bytes @ 0x0
  2906                           
  2907  0020                     ??_IO_Set:	
  2908                           ; 0 bytes @ 0x0
  2909                           
  2910  0020                     ??_TMR0_Set:	
  2911                           ; 0 bytes @ 0x0
  2912                           
  2913  0020                     ??_ADC_Set:	
  2914                           ; 0 bytes @ 0x0
  2915                           
  2916  0020                     ??_INT_Set:	
  2917                           ; 0 bytes @ 0x0
  2918                           
  2919  0020                     ??_IOC_Set:	
  2920                           ; 0 bytes @ 0x0
  2921                           
  2922  0020                     ??_Flash_Memory_Read:	
  2923                           ; 0 bytes @ 0x0
  2924                           
  2925  0020                     ??_Flash_Memory_Write:	
  2926                           ; 0 bytes @ 0x0
  2927                           
  2928  0020                     ??_setLoad_AH_AL_Restore:	
  2929                           ; 0 bytes @ 0x0
  2930                           
  2931  0020                     ??_setRF_Initialization:	
  2932                           ; 0 bytes @ 0x0
  2933                           
  2934  0020                     ??_BuzPointSelect:	
  2935                           ; 0 bytes @ 0x0
  2936                           
  2937  0020                     ??_DelayOffPointSelect:	
  2938                           ; 0 bytes @ 0x0
  2939                           
  2940  0020                     ??_DimmerLightsPointSelect:	
  2941                           ; 0 bytes @ 0x0
  2942                           
  2943  0020                     ??_DimmerPointSelect:	
  2944                           ; 0 bytes @ 0x0
  2945                           
  2946  0020                     ??_LedPointSelect:	
  2947                           ; 0 bytes @ 0x0
  2948                           
  2949  0020                     ??_setINT_GO:	
  2950                           ; 0 bytes @ 0x0
  2951                           
  2952  0020                     ??_Flash_Memory_Unlock:	
  2953                           ; 0 bytes @ 0x0
  2954                           
  2955  0020                     ??_Flash_Memory_Erasing:	
  2956                           ; 0 bytes @ 0x0
  2957                           
  2958  0020                     ??_LoadPointSelect:	
  2959                           ; 0 bytes @ 0x0
  2960                           
  2961  0020                     ??_TempPointSelect:	
  2962                           ; 0 bytes @ 0x0
  2963                           
  2964  0020                     ??_PowerFaultPointSelect:	
  2965                           ; 0 bytes @ 0x0
  2966                           
  2967  0020                     ??_RfPointSelect:	
  2968                           ; 0 bytes @ 0x0
  2969                           
  2970  0020                     ??_RfSWPointSelect:	
  2971                           ; 0 bytes @ 0x0
  2972                           
  2973  0020                     ??_TouchPower:	
  2974                           ; 0 bytes @ 0x0
  2975                           
  2976  0020                     ??_SwPointSelect:	
  2977                           ; 0 bytes @ 0x0
  2978                           
  2979  0020                     ?_getAD:	
  2980                           ; 0 bytes @ 0x0
  2981                           
  2982  0020                     ?___wmul:	
  2983                           ; 2 bytes @ 0x0
  2984                           
  2985  0020                     ?___lwdiv:	
  2986                           ; 2 bytes @ 0x0
  2987                           
  2988  0020                     ?___ftpack:	
  2989                           ; 2 bytes @ 0x0
  2990                           
  2991  0020                     setINT_GO@command:	
  2992                           ; 3 bytes @ 0x0
  2993                           
  2994  0020                     getAD@adcon1:	
  2995                           ; 1 bytes @ 0x0
  2996                           
  2997  0020                     setLoad_Count@command:	
  2998                           ; 1 bytes @ 0x0
  2999                           
  3000  0020                     setRF_DimmerLights@on:	
  3001                           ; 1 bytes @ 0x0
  3002                           
  3003  0020                     DelayTime_1us@count:	
  3004                           ; 1 bytes @ 0x0
  3005                           
  3006  0020                     ___wmul@multiplier:	
  3007                           ; 2 bytes @ 0x0
  3008                           
  3009  0020                     ___lwdiv@divisor:	
  3010                           ; 2 bytes @ 0x0
  3011                           
  3012  0020                     ___ftpack@arg:	
  3013                           ; 2 bytes @ 0x0
  3014                           
  3015                           
  3016                           ; 3 bytes @ 0x0
  3017  0020                     	ds	1
  3018  0021                     ??_setRF_DimmerLights:	
  3019  0021                     ??_setLoad_Count:	
  3020                           ; 0 bytes @ 0x1
  3021                           
  3022  0021                     ??_Mcu_Initialization:	
  3023                           ; 0 bytes @ 0x1
  3024                           
  3025  0021                     ??_RF_Initialization:	
  3026                           ; 0 bytes @ 0x1
  3027                           
  3028  0021                     ?_setTemp_Enable:	
  3029                           ; 0 bytes @ 0x1
  3030                           
  3031  0021                     ??_getTemp_Safe:	
  3032                           ; 0 bytes @ 0x1
  3033                           
  3034  0021                     ??_getPF_Safe:	
  3035                           ; 0 bytes @ 0x1
  3036                           
  3037  0021                     ??_setTemp_Initialization:	
  3038                           ; 0 bytes @ 0x1
  3039                           
  3040  0021                     ??_setPowerFault_Initialization:	
  3041                           ; 0 bytes @ 0x1
  3042                           
  3043  0021                     BuzPointSelect@buz:	
  3044                           ; 0 bytes @ 0x1
  3045                           
  3046  0021                     CC2500_WriteByte@loop_a:	
  3047                           ; 1 bytes @ 0x1
  3048                           
  3049  0021                     CC2500_ReadByte@loop_b:	
  3050                           ; 1 bytes @ 0x1
  3051                           
  3052  0021                     DelayOffPointSelect@sw:	
  3053                           ; 1 bytes @ 0x1
  3054                           
  3055  0021                     DelayTimejudge@i:	
  3056                           ; 1 bytes @ 0x1
  3057                           
  3058  0021                     DimmerLightsPointSelect@lights:	
  3059                           ; 1 bytes @ 0x1
  3060                           
  3061  0021                     DimmerPointSelect@dimmer:	
  3062                           ; 1 bytes @ 0x1
  3063                           
  3064  0021                     LedPointSelect@led:	
  3065                           ; 1 bytes @ 0x1
  3066                           
  3067  0021                     Flash_Memory_Read@i:	
  3068                           ; 1 bytes @ 0x1
  3069                           
  3070  0021                     Flash_Memory_Write@i:	
  3071                           ; 1 bytes @ 0x1
  3072                           
  3073  0021                     LoadPointSelect@load:	
  3074                           ; 1 bytes @ 0x1
  3075                           
  3076  0021                     setLoad_AH_AL_Restore@i:	
  3077                           ; 1 bytes @ 0x1
  3078                           
  3079  0021                     setTemp_Enable@command:	
  3080                           ; 1 bytes @ 0x1
  3081                           
  3082  0021                     getTemp_Safe@temp:	
  3083                           ; 1 bytes @ 0x1
  3084                           
  3085  0021                     setTemp_Initialization@temp:	
  3086                           ; 1 bytes @ 0x1
  3087                           
  3088  0021                     setPowerFault_Initialization@pf:	
  3089                           ; 1 bytes @ 0x1
  3090                           
  3091  0021                     getPF_Safe@pf:	
  3092                           ; 1 bytes @ 0x1
  3093                           
  3094  0021                     RfPointSelect@rf:	
  3095                           ; 1 bytes @ 0x1
  3096                           
  3097  0021                     RfSWPointSelect@sw:	
  3098                           ; 1 bytes @ 0x1
  3099                           
  3100  0021                     SwPointSelect@sw:	
  3101                           ; 1 bytes @ 0x1
  3102                           
  3103                           
  3104                           ; 1 bytes @ 0x1
  3105  0021                     	ds	1
  3106  0022                     ??_setBuz_Main:	
  3107  0022                     ??_CC2500_WriteCommand:	
  3108                           ; 0 bytes @ 0x2
  3109                           
  3110  0022                     ??_CC2500_ReadStatus:	
  3111                           ; 0 bytes @ 0x2
  3112                           
  3113  0022                     ?_setRF_RxStatus:	
  3114                           ; 0 bytes @ 0x2
  3115                           
  3116  0022                     ??_DelayTime_1us:	
  3117                           ; 0 bytes @ 0x2
  3118                           
  3119  0022                     ?_CC2500_WriteREG:	
  3120                           ; 0 bytes @ 0x2
  3121                           
  3122  0022                     ??_DlyOff_Initialization:	
  3123                           ; 0 bytes @ 0x2
  3124                           
  3125  0022                     ?_setSw_Status:	
  3126                           ; 0 bytes @ 0x2
  3127                           
  3128  0022                     ?_setRFSW_Status:	
  3129                           ; 0 bytes @ 0x2
  3130                           
  3131  0022                     ?_setDimmerLights_Trigger:	
  3132                           ; 0 bytes @ 0x2
  3133                           
  3134  0022                     ?_setDimmerLights_Switch:	
  3135                           ; 0 bytes @ 0x2
  3136                           
  3137  0022                     ??_setTxData:	
  3138                           ; 0 bytes @ 0x2
  3139                           
  3140  0022                     ??_getDimmer_Detect:	
  3141                           ; 0 bytes @ 0x2
  3142                           
  3143  0022                     ?_setDimmer_Detect:	
  3144                           ; 0 bytes @ 0x2
  3145                           
  3146  0022                     ??_getDimmerLights_StatusFlag:	
  3147                           ; 0 bytes @ 0x2
  3148                           
  3149  0022                     ?_setLoad_GO:	
  3150                           ; 0 bytes @ 0x2
  3151                           
  3152  0022                     ??_getDimmerLights_Trigger:	
  3153                           ; 0 bytes @ 0x2
  3154                           
  3155  0022                     ??_getDimmer_TempERROR:	
  3156                           ; 0 bytes @ 0x2
  3157                           
  3158  0022                     ??_getDimmer_LoadERROR:	
  3159                           ; 0 bytes @ 0x2
  3160                           
  3161  0022                     ??_getDimmer_PFERROR:	
  3162                           ; 0 bytes @ 0x2
  3163                           
  3164  0022                     ?_setDimmerLights_TriggerERROR:	
  3165                           ; 0 bytes @ 0x2
  3166                           
  3167  0022                     ?_setLoad_StatusOff:	
  3168                           ; 0 bytes @ 0x2
  3169                           
  3170  0022                     ?_setLED:	
  3171                           ; 0 bytes @ 0x2
  3172                           
  3173  0022                     ?_setLoad_StatusOn:	
  3174                           ; 0 bytes @ 0x2
  3175                           
  3176  0022                     ?_setLoad_LightsStatus:	
  3177                           ; 0 bytes @ 0x2
  3178                           
  3179  0022                     ??_setLED_Main:	
  3180                           ; 0 bytes @ 0x2
  3181                           
  3182  0022                     ??_Temp_Initialization:	
  3183                           ; 0 bytes @ 0x2
  3184                           
  3185  0022                     ??_PowerFault_Initialization:	
  3186                           ; 0 bytes @ 0x2
  3187                           
  3188  0022                     ??_setTemp_Enable:	
  3189                           ; 0 bytes @ 0x2
  3190                           
  3191  0022                     ?_setLoad_Enable:	
  3192                           ; 0 bytes @ 0x2
  3193                           
  3194  0022                     ?_setSw_Enable:	
  3195                           ; 0 bytes @ 0x2
  3196                           
  3197  0022                     ??_setLoad_Initialization:	
  3198                           ; 0 bytes @ 0x2
  3199                           
  3200  0022                     ?_setBuz_Enable:	
  3201                           ; 0 bytes @ 0x2
  3202                           
  3203  0022                     ?_setDimmerLights_AdjGo:	
  3204                           ; 0 bytes @ 0x2
  3205                           
  3206  0022                     ?_setDimmerLights_TriggerAdj:	
  3207                           ; 0 bytes @ 0x2
  3208                           
  3209  0022                     ?_setDimmerLights_Clear:	
  3210                           ; 0 bytes @ 0x2
  3211                           
  3212  0022                     ?_setDimmer_TempERROR:	
  3213                           ; 0 bytes @ 0x2
  3214                           
  3215  0022                     ?_setDimmer_LoadERROR:	
  3216                           ; 0 bytes @ 0x2
  3217                           
  3218  0022                     ?_setDimmer_PFERROR:	
  3219                           ; 0 bytes @ 0x2
  3220                           
  3221  0022                     ??_getLoad_Safe:	
  3222                           ; 0 bytes @ 0x2
  3223                           
  3224  0022                     ?_setRF_Learn:	
  3225                           ; 0 bytes @ 0x2
  3226                           
  3227  0022                     setBuz_Enable@command:	
  3228                           ; 0 bytes @ 0x2
  3229                           
  3230  0022                     CC2500_WriteREG@value:	
  3231                           ; 1 bytes @ 0x2
  3232                           
  3233  0022                     DlyOff_Initialization@sw:	
  3234                           ; 1 bytes @ 0x2
  3235                           
  3236  0022                     DelayTimejudge@value:	
  3237                           ; 1 bytes @ 0x2
  3238                           
  3239  0022                     setDimmerLights_TriggerERROR@command:	
  3240                           ; 1 bytes @ 0x2
  3241                           
  3242  0022                     setDimmerLights_Switch@command:	
  3243                           ; 1 bytes @ 0x2
  3244                           
  3245  0022                     setDimmerLights_AdjGo@command:	
  3246                           ; 1 bytes @ 0x2
  3247                           
  3248  0022                     setDimmerLights_Trigger@command:	
  3249                           ; 1 bytes @ 0x2
  3250                           
  3251  0022                     setDimmerLights_TriggerAdj@command:	
  3252                           ; 1 bytes @ 0x2
  3253                           
  3254  0022                     setDimmerLights_Clear@command:	
  3255                           ; 1 bytes @ 0x2
  3256                           
  3257  0022                     setDimmer_TempERROR@command:	
  3258                           ; 1 bytes @ 0x2
  3259                           
  3260  0022                     setDimmer_LoadERROR@command:	
  3261                           ; 1 bytes @ 0x2
  3262                           
  3263  0022                     setDimmer_PFERROR@command:	
  3264                           ; 1 bytes @ 0x2
  3265                           
  3266  0022                     setDimmer_Detect@command:	
  3267                           ; 1 bytes @ 0x2
  3268                           
  3269  0022                     getDimmer_TempERROR@dimmer:	
  3270                           ; 1 bytes @ 0x2
  3271                           
  3272  0022                     getDimmer_LoadERROR@dimmer:	
  3273                           ; 1 bytes @ 0x2
  3274                           
  3275  0022                     getDimmer_PFERROR@dimmer:	
  3276                           ; 1 bytes @ 0x2
  3277                           
  3278  0022                     setLED@command:	
  3279                           ; 1 bytes @ 0x2
  3280                           
  3281  0022                     Flash_Memory_Read@address:	
  3282                           ; 1 bytes @ 0x2
  3283                           
  3284  0022                     setLoad_Initialization@load:	
  3285                           ; 1 bytes @ 0x2
  3286                           
  3287  0022                     setLoad_LightsStatus@lights:	
  3288                           ; 1 bytes @ 0x2
  3289                           
  3290  0022                     setLoad_Enable@command:	
  3291                           ; 1 bytes @ 0x2
  3292                           
  3293  0022                     setLoad_GO@command:	
  3294                           ; 1 bytes @ 0x2
  3295                           
  3296  0022                     setLoad_StatusOn@command:	
  3297                           ; 1 bytes @ 0x2
  3298                           
  3299  0022                     setLoad_StatusOff@lights:	
  3300                           ; 1 bytes @ 0x2
  3301                           
  3302  0022                     setTemp_Enable@temp:	
  3303                           ; 1 bytes @ 0x2
  3304                           
  3305  0022                     setRF_Learn@command:	
  3306                           ; 1 bytes @ 0x2
  3307                           
  3308  0022                     setRF_RxStatus@command:	
  3309                           ; 1 bytes @ 0x2
  3310                           
  3311  0022                     setRFSW_Status@command:	
  3312                           ; 1 bytes @ 0x2
  3313                           
  3314  0022                     setSw_Enable@command:	
  3315                           ; 1 bytes @ 0x2
  3316                           
  3317  0022                     setSw_Status@command:	
  3318                           ; 1 bytes @ 0x2
  3319                           
  3320  0022                     DelayTime_1us@i:	
  3321                           ; 1 bytes @ 0x2
  3322                           
  3323  0022                     ___wmul@multiplicand:	
  3324                           ; 2 bytes @ 0x2
  3325                           
  3326  0022                     ___lwdiv@dividend:	
  3327                           ; 2 bytes @ 0x2
  3328                           
  3329                           
  3330                           ; 2 bytes @ 0x2
  3331  0022                     	ds	1
  3332  0023                     ??_setRF_RxStatus:	
  3333  0023                     ??_CC2500_WriteREG:	
  3334                           ; 0 bytes @ 0x3
  3335                           
  3336  0023                     ??_setSw_Status:	
  3337                           ; 0 bytes @ 0x3
  3338                           
  3339  0023                     ??_setRFSW_Status:	
  3340                           ; 0 bytes @ 0x3
  3341                           
  3342  0023                     ??_setDimmerLights_Trigger:	
  3343                           ; 0 bytes @ 0x3
  3344                           
  3345  0023                     ??_setDimmerLights_Switch:	
  3346                           ; 0 bytes @ 0x3
  3347                           
  3348  0023                     ??_setDimmer_Detect:	
  3349                           ; 0 bytes @ 0x3
  3350                           
  3351  0023                     ??_setLoad_GO:	
  3352                           ; 0 bytes @ 0x3
  3353                           
  3354  0023                     ??_setDimmerLights_TriggerERROR:	
  3355                           ; 0 bytes @ 0x3
  3356                           
  3357  0023                     ??_setLED:	
  3358                           ; 0 bytes @ 0x3
  3359                           
  3360  0023                     ??_setLoad_StatusOn:	
  3361                           ; 0 bytes @ 0x3
  3362                           
  3363  0023                     ??_Load_Initialization:	
  3364                           ; 0 bytes @ 0x3
  3365                           
  3366  0023                     ??_setLoad_Enable:	
  3367                           ; 0 bytes @ 0x3
  3368                           
  3369  0023                     ??_setSw_Enable:	
  3370                           ; 0 bytes @ 0x3
  3371                           
  3372  0023                     ??_setBuz_Enable:	
  3373                           ; 0 bytes @ 0x3
  3374                           
  3375  0023                     ??_DelayOff_Initialization:	
  3376                           ; 0 bytes @ 0x3
  3377                           
  3378  0023                     ?_setDelayOff_GO:	
  3379                           ; 0 bytes @ 0x3
  3380                           
  3381  0023                     ??_setDimmerLights_AdjGo:	
  3382                           ; 0 bytes @ 0x3
  3383                           
  3384  0023                     ??_setDimmerLights_TriggerAdj:	
  3385                           ; 0 bytes @ 0x3
  3386                           
  3387  0023                     ??_setDimmerLights_Clear:	
  3388                           ; 0 bytes @ 0x3
  3389                           
  3390  0023                     ??_setDimmer_TempERROR:	
  3391                           ; 0 bytes @ 0x3
  3392                           
  3393  0023                     ??_setDimmer_LoadERROR:	
  3394                           ; 0 bytes @ 0x3
  3395                           
  3396  0023                     ??_setDimmer_PFERROR:	
  3397                           ; 0 bytes @ 0x3
  3398                           
  3399  0023                     ??_getAD:	
  3400                           ; 0 bytes @ 0x3
  3401                           
  3402  0023                     ??_setRF_Learn:	
  3403                           ; 0 bytes @ 0x3
  3404                           
  3405  0023                     setBuz_Enable@buz:	
  3406                           ; 0 bytes @ 0x3
  3407                           
  3408  0023                     CC2500_WriteCommand@command:	
  3409                           ; 1 bytes @ 0x3
  3410                           
  3411  0023                     CC2500_ReadStatus@status_addr:	
  3412                           ; 1 bytes @ 0x3
  3413                           
  3414  0023                     setDelayOff_GO@command:	
  3415                           ; 1 bytes @ 0x3
  3416                           
  3417  0023                     getDimmerLights_StatusFlag@length:	
  3418                           ; 1 bytes @ 0x3
  3419                           
  3420  0023                     getDimmerLights_Trigger@length:	
  3421                           ; 1 bytes @ 0x3
  3422                           
  3423  0023                     setDimmerLights_TriggerERROR@lights:	
  3424                           ; 1 bytes @ 0x3
  3425                           
  3426  0023                     setDimmerLights_Switch@lights:	
  3427                           ; 1 bytes @ 0x3
  3428                           
  3429  0023                     setDimmerLights_AdjGo@lights:	
  3430                           ; 1 bytes @ 0x3
  3431                           
  3432  0023                     setDimmerLights_Trigger@lights:	
  3433                           ; 1 bytes @ 0x3
  3434                           
  3435  0023                     setDimmerLights_TriggerAdj@lights:	
  3436                           ; 1 bytes @ 0x3
  3437                           
  3438  0023                     setDimmerLights_Clear@lights:	
  3439                           ; 1 bytes @ 0x3
  3440                           
  3441  0023                     setDimmer_TempERROR@dimmer:	
  3442                           ; 1 bytes @ 0x3
  3443                           
  3444  0023                     setDimmer_LoadERROR@dimmer:	
  3445                           ; 1 bytes @ 0x3
  3446                           
  3447  0023                     setDimmer_PFERROR@dimmer:	
  3448                           ; 1 bytes @ 0x3
  3449                           
  3450  0023                     setDimmer_Detect@dimmer:	
  3451                           ; 1 bytes @ 0x3
  3452                           
  3453  0023                     getDimmer_Detect@dimmer:	
  3454                           ; 1 bytes @ 0x3
  3455                           
  3456  0023                     setLED@led:	
  3457                           ; 1 bytes @ 0x3
  3458                           
  3459  0023                     getAD@adcon0:	
  3460                           ; 1 bytes @ 0x3
  3461                           
  3462  0023                     Flash_Memory_Read@ret:	
  3463                           ; 1 bytes @ 0x3
  3464                           
  3465  0023                     setLoad_LightsStatus@command:	
  3466                           ; 1 bytes @ 0x3
  3467                           
  3468  0023                     setLoad_Enable@load:	
  3469                           ; 1 bytes @ 0x3
  3470                           
  3471  0023                     setLoad_GO@load:	
  3472                           ; 1 bytes @ 0x3
  3473                           
  3474  0023                     setLoad_StatusOn@load:	
  3475                           ; 1 bytes @ 0x3
  3476                           
  3477  0023                     setLoad_StatusOff@command:	
  3478                           ; 1 bytes @ 0x3
  3479                           
  3480  0023                     getLoad_Safe@load:	
  3481                           ; 1 bytes @ 0x3
  3482                           
  3483  0023                     setRF_Learn@rf:	
  3484                           ; 1 bytes @ 0x3
  3485                           
  3486  0023                     setRF_RxStatus@rf:	
  3487                           ; 1 bytes @ 0x3
  3488                           
  3489  0023                     setRFSW_Status@sw:	
  3490                           ; 1 bytes @ 0x3
  3491                           
  3492  0023                     setRF_DimmerLights@status:	
  3493                           ; 1 bytes @ 0x3
  3494                           
  3495  0023                     setSw_Enable@sw:	
  3496                           ; 1 bytes @ 0x3
  3497                           
  3498  0023                     setSw_Status@sw:	
  3499                           ; 1 bytes @ 0x3
  3500                           
  3501  0023                     ___ftpack@exp:	
  3502                           ; 1 bytes @ 0x3
  3503                           
  3504                           
  3505                           ; 1 bytes @ 0x3
  3506  0023                     	ds	1
  3507  0024                     ??_setBuz_Initialization:	
  3508  0024                     ??_CC2500_ClearTXFIFO:	
  3509                           ; 0 bytes @ 0x4
  3510                           
  3511  0024                     ??_CC2500_ClearRXFIFO:	
  3512                           ; 0 bytes @ 0x4
  3513                           
  3514  0024                     ??_CC2500_SIDLEMode:	
  3515                           ; 0 bytes @ 0x4
  3516                           
  3517  0024                     ??_setLoad_StatusOff:	
  3518                           ; 0 bytes @ 0x4
  3519                           
  3520  0024                     ??_setLoad_LightsStatus:	
  3521                           ; 0 bytes @ 0x4
  3522                           
  3523  0024                     ??_setLED_Initialization:	
  3524                           ; 0 bytes @ 0x4
  3525                           
  3526  0024                     ?_getLoad_AD:	
  3527                           ; 0 bytes @ 0x4
  3528                           
  3529  0024                     ?_getTemp_AD:	
  3530                           ; 0 bytes @ 0x4
  3531                           
  3532  0024                     ?_getPowerFault_AD:	
  3533                           ; 0 bytes @ 0x4
  3534                           
  3535  0024                     ??_Flash_Memory_Modify:	
  3536                           ; 0 bytes @ 0x4
  3537                           
  3538  0024                     ??_RF_RxDisable:	
  3539                           ; 0 bytes @ 0x4
  3540                           
  3541  0024                     ??_setSw_Initialization:	
  3542                           ; 0 bytes @ 0x4
  3543                           
  3544  0024                     ??_Sw_DimmerAdjFunc:	
  3545                           ; 0 bytes @ 0x4
  3546                           
  3547  0024                     ??_Buzzer_Initialization:	
  3548                           ; 0 bytes @ 0x4
  3549                           
  3550  0024                     ??_CC2500_TxData:	
  3551                           ; 0 bytes @ 0x4
  3552                           
  3553  0024                     ??_CC2500_RxData:	
  3554                           ; 0 bytes @ 0x4
  3555                           
  3556  0024                     ??___wmul:	
  3557                           ; 0 bytes @ 0x4
  3558                           
  3559  0024                     ??___lwdiv:	
  3560                           ; 0 bytes @ 0x4
  3561                           
  3562  0024                     CC2500_WriteREG@w_addr:	
  3563                           ; 0 bytes @ 0x4
  3564                           
  3565  0024                     setDelayOff_GO@value:	
  3566                           ; 1 bytes @ 0x4
  3567                           
  3568  0024                     getDimmerLights_StatusFlag@Status:	
  3569                           ; 1 bytes @ 0x4
  3570                           
  3571  0024                     getDimmerLights_Trigger@Status:	
  3572                           ; 1 bytes @ 0x4
  3573                           
  3574  0024                     setLED_Initialization@led:	
  3575                           ; 1 bytes @ 0x4
  3576                           
  3577  0024                     setLED_Main@led:	
  3578                           ; 1 bytes @ 0x4
  3579                           
  3580  0024                     getLoad_AD@channel:	
  3581                           ; 1 bytes @ 0x4
  3582                           
  3583  0024                     setLoad_StatusOff@load:	
  3584                           ; 1 bytes @ 0x4
  3585                           
  3586  0024                     getTemp_AD@channel:	
  3587                           ; 1 bytes @ 0x4
  3588                           
  3589  0024                     getPowerFault_AD@channel:	
  3590                           ; 1 bytes @ 0x4
  3591                           
  3592  0024                     setTxData@rf:	
  3593                           ; 1 bytes @ 0x4
  3594                           
  3595  0024                     RF_RxDisable@rf:	
  3596                           ; 1 bytes @ 0x4
  3597                           
  3598  0024                     setRF_DimmerLights@lights:	
  3599                           ; 1 bytes @ 0x4
  3600                           
  3601  0024                     setSw_Initialization@sw:	
  3602                           ; 1 bytes @ 0x4
  3603                           
  3604  0024                     Sw_DimmerAdjFunc@sw:	
  3605                           ; 1 bytes @ 0x4
  3606                           
  3607  0024                     ___ftpack@sign:	
  3608                           ; 1 bytes @ 0x4
  3609                           
  3610  0024                     DelayTime_1us@j:	
  3611                           ; 1 bytes @ 0x4
  3612                           
  3613  0024                     ___wmul@product:	
  3614                           ; 2 bytes @ 0x4
  3615                           
  3616                           
  3617                           ; 2 bytes @ 0x4
  3618  0024                     	ds	1
  3619  0025                     ??_CC2500_InitSetREG:	
  3620  0025                     ??_CC2500_InitPATable:	
  3621                           ; 0 bytes @ 0x5
  3622                           
  3623  0025                     ??_setDimmerLights_ERROR:	
  3624                           ; 0 bytes @ 0x5
  3625                           
  3626  0025                     ??_Switch_Initialization:	
  3627                           ; 0 bytes @ 0x5
  3628                           
  3629  0025                     ??_getLoad_AD:	
  3630                           ; 0 bytes @ 0x5
  3631                           
  3632  0025                     ??_getTemp_AD:	
  3633                           ; 0 bytes @ 0x5
  3634                           
  3635  0025                     ??_getPowerFault_AD:	
  3636                           ; 0 bytes @ 0x5
  3637                           
  3638  0025                     ?_setRF_Enable:	
  3639                           ; 0 bytes @ 0x5
  3640                           
  3641  0025                     ??___ftpack:	
  3642                           ; 0 bytes @ 0x5
  3643                           
  3644  0025                     ??_setDelayOff_GO:	
  3645                           ; 0 bytes @ 0x5
  3646                           
  3647  0025                     ??_LED_Initialization:	
  3648                           ; 0 bytes @ 0x5
  3649                           
  3650  0025                     ??_LED_Main:	
  3651                           ; 0 bytes @ 0x5
  3652                           
  3653  0025                     CC2500_TxData@loop_e:	
  3654                           ; 0 bytes @ 0x5
  3655                           
  3656  0025                     CC2500_RxData@loop_f:	
  3657                           ; 1 bytes @ 0x5
  3658                           
  3659  0025                     getDimmerLights_StatusFlag@i:	
  3660                           ; 1 bytes @ 0x5
  3661                           
  3662  0025                     getDimmerLights_Trigger@i:	
  3663                           ; 1 bytes @ 0x5
  3664                           
  3665  0025                     setLoad_LightsStatus@load:	
  3666                           ; 1 bytes @ 0x5
  3667                           
  3668  0025                     setTxData@i:	
  3669                           ; 1 bytes @ 0x5
  3670                           
  3671  0025                     setRF_Enable@command:	
  3672                           ; 1 bytes @ 0x5
  3673                           
  3674  0025                     ___lwdiv@quotient:	
  3675                           ; 1 bytes @ 0x5
  3676                           
  3677                           
  3678                           ; 2 bytes @ 0x5
  3679  0025                     	ds	1
  3680  0026                     ??_CC2500_PowerRST:	
  3681  0026                     ??_CC2500_FrequencyCabr:	
  3682                           ; 0 bytes @ 0x6
  3683                           
  3684  0026                     ?_setDimmerLights:	
  3685                           ; 0 bytes @ 0x6
  3686                           
  3687  0026                     ??_setRF_Enable:	
  3688                           ; 0 bytes @ 0x6
  3689                           
  3690  0026                     ??_Sw_DimmerOnFunc:	
  3691                           ; 0 bytes @ 0x6
  3692                           
  3693  0026                     ?_setBuz:	
  3694                           ; 0 bytes @ 0x6
  3695                           
  3696  0026                     ??_DimmerLights_Close:	
  3697                           ; 0 bytes @ 0x6
  3698                           
  3699  0026                     setBuz@count:	
  3700                           ; 0 bytes @ 0x6
  3701                           
  3702  0026                     setBuz_Main@buz:	
  3703                           ; 1 bytes @ 0x6
  3704                           
  3705  0026                     CC2500_InitSetREG@temp1:	
  3706                           ; 1 bytes @ 0x6
  3707                           
  3708  0026                     CC2500_InitPATable@temp:	
  3709                           ; 1 bytes @ 0x6
  3710                           
  3711  0026                     setDelayOff_GO@sw:	
  3712                           ; 1 bytes @ 0x6
  3713                           
  3714  0026                     setDimmerLights_ERROR@lights:	
  3715                           ; 1 bytes @ 0x6
  3716                           
  3717  0026                     setDimmerLights@status:	
  3718                           ; 1 bytes @ 0x6
  3719                           
  3720  0026                     Flash_Memory_Modify@i:	
  3721                           ; 1 bytes @ 0x6
  3722                           
  3723  0026                     setRF_Enable@rf:	
  3724                           ; 1 bytes @ 0x6
  3725                           
  3726  0026                     Sw_DimmerOnFunc@sw:	
  3727                           ; 1 bytes @ 0x6
  3728                           
  3729                           
  3730                           ; 1 bytes @ 0x6
  3731  0026                     	ds	1
  3732  0027                     ??_setDimmerLights:	
  3733  0027                     ??_Flash_Memory_Main:	
  3734                           ; 0 bytes @ 0x7
  3735                           
  3736  0027                     ??_Sw_DimmerOffFunc:	
  3737                           ; 0 bytes @ 0x7
  3738                           
  3739  0027                     ??_Buzzer_Main:	
  3740                           ; 0 bytes @ 0x7
  3741                           
  3742  0027                     CC2500_InitSetREG@temp2:	
  3743                           ; 0 bytes @ 0x7
  3744                           
  3745  0027                     CC2500_InitPATable@loop_d:	
  3746                           ; 1 bytes @ 0x7
  3747                           
  3748  0027                     ___lwdiv@counter:	
  3749                           ; 1 bytes @ 0x7
  3750                           
  3751  0027                     setBuz@time:	
  3752                           ; 1 bytes @ 0x7
  3753                           
  3754                           
  3755                           ; 2 bytes @ 0x7
  3756  0027                     	ds	1
  3757  0028                     ?___awtoft:	
  3758  0028                     CC2500_InitSetREG@loop_c:	
  3759                           ; 3 bytes @ 0x8
  3760                           
  3761  0028                     setDimmerLights@lights:	
  3762                           ; 1 bytes @ 0x8
  3763                           
  3764  0028                     ___awtoft@c:	
  3765                           ; 1 bytes @ 0x8
  3766                           
  3767                           
  3768                           ; 2 bytes @ 0x8
  3769  0028                     	ds	1
  3770  0029                     ??_setBuz:	
  3771  0029                     ??_CC2500_PowerOnInitial:	
  3772                           ; 0 bytes @ 0x9
  3773                           
  3774  0029                     getTemp_AD@temp:	
  3775                           ; 0 bytes @ 0x9
  3776                           
  3777  0029                     getPowerFault_AD@pf:	
  3778                           ; 1 bytes @ 0x9
  3779                           
  3780  0029                     Sw_DimmerOffFunc@sw:	
  3781                           ; 1 bytes @ 0x9
  3782                           
  3783                           
  3784                           ; 1 bytes @ 0x9
  3785  0029                     	ds	1
  3786  002A                     setBuz@buz:	
  3787  002A                     getLoad_AD@load:	
  3788                           ; 1 bytes @ 0xA
  3789                           
  3790                           
  3791                           ; 1 bytes @ 0xA
  3792  002A                     	ds	1
  3793  002B                     ??_DlyOff_Main:	
  3794  002B                     ??_MainT:	
  3795                           ; 0 bytes @ 0xB
  3796                           
  3797  002B                     ??_setLog_Code:	
  3798                           ; 0 bytes @ 0xB
  3799                           
  3800  002B                     ??_setRFSW_Control:	
  3801                           ; 0 bytes @ 0xB
  3802                           
  3803  002B                     ??_setSw_Main:	
  3804                           ; 0 bytes @ 0xB
  3805                           
  3806  002B                     ??_DimmerLights_ERROR:	
  3807                           ; 0 bytes @ 0xB
  3808                           
  3809  002B                     ??___awtoft:	
  3810                           ; 0 bytes @ 0xB
  3811                           
  3812  002B                     getLoad_AD@j:	
  3813                           ; 0 bytes @ 0xB
  3814                           
  3815                           
  3816                           ; 1 bytes @ 0xB
  3817  002B                     	ds	1
  3818  002C                     ?_setLoad_ERROR:	
  3819  002C                     ?_setOverTemp_ERROR:	
  3820                           ; 0 bytes @ 0xC
  3821                           
  3822  002C                     ?_setPowerFault_ERROR:	
  3823                           ; 0 bytes @ 0xC
  3824                           
  3825  002C                     getLoad_AD@i:	
  3826                           ; 0 bytes @ 0xC
  3827                           
  3828  002C                     setLoad_ERROR@command:	
  3829                           ; 1 bytes @ 0xC
  3830                           
  3831  002C                     setOverTemp_ERROR@command:	
  3832                           ; 1 bytes @ 0xC
  3833                           
  3834  002C                     setPowerFault_ERROR@command:	
  3835                           ; 1 bytes @ 0xC
  3836                           
  3837  002C                     setLog_Code@rf:	
  3838                           ; 1 bytes @ 0xC
  3839                           
  3840                           
  3841                           ; 1 bytes @ 0xC
  3842  002C                     	ds	1
  3843  002D                     ??_setLoad_ERROR:	
  3844  002D                     ??_setOverTemp_ERROR:	
  3845                           ; 0 bytes @ 0xD
  3846                           
  3847  002D                     ??_setPowerFault_ERROR:	
  3848                           ; 0 bytes @ 0xD
  3849                           
  3850  002D                     DlyOff_Main@sw:	
  3851                           ; 0 bytes @ 0xD
  3852                           
  3853  002D                     setRFSW_Control@sw:	
  3854                           ; 1 bytes @ 0xD
  3855                           
  3856  002D                     _setSw_Main$4431:	
  3857                           ; 1 bytes @ 0xD
  3858                           
  3859  002D                     ___awtoft@sign:	
  3860                           ; 1 bytes @ 0xD
  3861                           
  3862                           
  3863                           ; 1 bytes @ 0xD
  3864  002D                     	ds	1
  3865  002E                     ??_DelayOff_Main:	
  3866  002E                     ?___ftdiv:	
  3867                           ; 0 bytes @ 0xE
  3868                           
  3869  002E                     ?___ftmul:	
  3870                           ; 3 bytes @ 0xE
  3871                           
  3872  002E                     setLoad_ERROR@load:	
  3873                           ; 3 bytes @ 0xE
  3874                           
  3875  002E                     setOverTemp_ERROR@temp:	
  3876                           ; 1 bytes @ 0xE
  3877                           
  3878  002E                     setPowerFault_ERROR@pf:	
  3879                           ; 1 bytes @ 0xE
  3880                           
  3881  002E                     _setSw_Main$4432:	
  3882                           ; 1 bytes @ 0xE
  3883                           
  3884  002E                     ___ftdiv@f2:	
  3885                           ; 1 bytes @ 0xE
  3886                           
  3887  002E                     ___ftmul@f1:	
  3888                           ; 3 bytes @ 0xE
  3889                           
  3890                           
  3891                           ; 3 bytes @ 0xE
  3892  002E                     	ds	1
  3893  002F                     ??_setLoad_Main:	
  3894  002F                     ??_setTemp_Main:	
  3895                           ; 0 bytes @ 0xF
  3896                           
  3897  002F                     ??_setPowerFault_Main:	
  3898                           ; 0 bytes @ 0xF
  3899                           
  3900  002F                     setSw_Main@sw:	
  3901                           ; 0 bytes @ 0xF
  3902                           
  3903                           
  3904                           ; 1 bytes @ 0xF
  3905  002F                     	ds	1
  3906  0030                     ??_Switch_Main:	
  3907                           
  3908                           ; 0 bytes @ 0x10
  3909  0030                     	ds	1
  3910  0031                     setPowerFault_Main@pf:	
  3911  0031                     ___ftdiv@f1:	
  3912                           ; 1 bytes @ 0x11
  3913                           
  3914  0031                     ___ftmul@f2:	
  3915                           ; 3 bytes @ 0x11
  3916                           
  3917                           
  3918                           ; 3 bytes @ 0x11
  3919  0031                     	ds	1
  3920  0032                     ??_PowerFault_Main:	
  3921  0032                     setTemp_Main@temp:	
  3922                           ; 0 bytes @ 0x12
  3923                           
  3924                           
  3925                           ; 1 bytes @ 0x12
  3926  0032                     	ds	1
  3927  0033                     ??_Temp_Main:	
  3928  0033                     setLoad_Main@load:	
  3929                           ; 0 bytes @ 0x13
  3930                           
  3931                           
  3932                           ; 1 bytes @ 0x13
  3933  0033                     	ds	1
  3934  0034                     ??_Load_Main:	
  3935  0034                     ??___ftdiv:	
  3936                           ; 0 bytes @ 0x14
  3937                           
  3938  0034                     ??___ftmul:	
  3939                           ; 0 bytes @ 0x14
  3940                           
  3941                           
  3942                           ; 0 bytes @ 0x14
  3943  0034                     	ds	4
  3944  0038                     ___ftdiv@cntr:	
  3945  0038                     ___ftmul@exp:	
  3946                           ; 1 bytes @ 0x18
  3947                           
  3948                           
  3949                           ; 1 bytes @ 0x18
  3950  0038                     	ds	1
  3951  0039                     ___ftdiv@f3:	
  3952  0039                     ___ftmul@f3_as_product:	
  3953                           ; 3 bytes @ 0x19
  3954                           
  3955                           
  3956                           ; 3 bytes @ 0x19
  3957  0039                     	ds	3
  3958  003C                     ___ftdiv@exp:	
  3959  003C                     ___ftmul@cntr:	
  3960                           ; 1 bytes @ 0x1C
  3961                           
  3962                           
  3963                           ; 1 bytes @ 0x1C
  3964  003C                     	ds	1
  3965  003D                     ___ftdiv@sign:	
  3966  003D                     ___ftmul@sign:	
  3967                           ; 1 bytes @ 0x1D
  3968                           
  3969                           
  3970                           ; 1 bytes @ 0x1D
  3971  003D                     	ds	1
  3972  003E                     ?___ftadd:	
  3973  003E                     ___ftadd@f1:	
  3974                           ; 3 bytes @ 0x1E
  3975                           
  3976                           
  3977                           ; 3 bytes @ 0x1E
  3978  003E                     	ds	3
  3979  0041                     ___ftadd@f2:	
  3980                           
  3981                           ; 3 bytes @ 0x21
  3982  0041                     	ds	3
  3983  0044                     ??___ftadd:	
  3984                           
  3985                           ; 0 bytes @ 0x24
  3986  0044                     	ds	4
  3987  0048                     ___ftadd@sign:	
  3988                           
  3989                           ; 1 bytes @ 0x28
  3990  0048                     	ds	1
  3991  0049                     ___ftadd@exp2:	
  3992                           
  3993                           ; 1 bytes @ 0x29
  3994  0049                     	ds	1
  3995  004A                     ___ftadd@exp1:	
  3996                           
  3997                           ; 1 bytes @ 0x2A
  3998  004A                     	ds	1
  3999  004B                     ?___fttol:	
  4000  004B                     ___fttol@f1:	
  4001                           ; 4 bytes @ 0x2B
  4002                           
  4003                           
  4004                           ; 3 bytes @ 0x2B
  4005  004B                     	ds	4
  4006  004F                     ??___fttol:	
  4007                           
  4008                           ; 0 bytes @ 0x2F
  4009  004F                     	ds	4
  4010  0053                     ___fttol@sign1:	
  4011                           
  4012                           ; 1 bytes @ 0x33
  4013  0053                     	ds	1
  4014  0054                     ___fttol@lval:	
  4015                           
  4016                           ; 4 bytes @ 0x34
  4017  0054                     	ds	4
  4018  0058                     ___fttol@exp1:	
  4019                           
  4020                           ; 1 bytes @ 0x38
  4021  0058                     	ds	1
  4022  0059                     ??_getPercentValue:	
  4023  0059                     ??_setPercentValue:	
  4024                           ; 0 bytes @ 0x39
  4025                           
  4026  0059                     setPercentValue@value:	
  4027                           ; 0 bytes @ 0x39
  4028                           
  4029                           
  4030                           ; 1 bytes @ 0x39
  4031  0059                     	ds	1
  4032  005A                     setPercentValue@i:	
  4033                           
  4034                           ; 3 bytes @ 0x3A
  4035  005A                     	ds	1
  4036  005B                     getPercentValue@value:	
  4037                           
  4038                           ; 1 bytes @ 0x3B
  4039  005B                     	ds	1
  4040  005C                     getPercentValue@i:	
  4041                           
  4042                           ; 3 bytes @ 0x3C
  4043  005C                     	ds	1
  4044  005D                     ?_setDimmerLights_Adj:	
  4045  005D                     ??_Flash_Memory_Initialization:	
  4046                           ; 0 bytes @ 0x3D
  4047                           
  4048  005D                     setDimmerLights_Adj@status:	
  4049                           ; 0 bytes @ 0x3D
  4050                           
  4051                           
  4052                           ; 1 bytes @ 0x3D
  4053  005D                     	ds	1
  4054  005E                     ??_setDimmerLights_Adj:	
  4055  005E                     Flash_Memory_Initialization@i:	
  4056                           ; 0 bytes @ 0x3E
  4057                           
  4058                           
  4059                           ; 1 bytes @ 0x3E
  4060  005E                     	ds	1
  4061  005F                     ??_setDimmerLights_Initialization:	
  4062  005F                     ??_setDimmerLights_AdjRF:	
  4063                           ; 0 bytes @ 0x3F
  4064                           
  4065                           
  4066                           ; 0 bytes @ 0x3F
  4067  005F                     	ds	1
  4068  0060                     setDimmerLights_Adj@lights:	
  4069  0060                     setDimmerLights_AdjRF@lights:	
  4070                           ; 1 bytes @ 0x40
  4071                           
  4072                           
  4073                           ; 1 bytes @ 0x40
  4074  0060                     	ds	1
  4075  0061                     ??_setDimmerLights_Main:	
  4076  0061                     ??_setRF_DimmerValue:	
  4077                           ; 0 bytes @ 0x41
  4078                           
  4079  0061                     setDimmerLights_Initialization@lights:	
  4080                           ; 0 bytes @ 0x41
  4081                           
  4082  0061                     setDimmerLights_Main@clear:	
  4083                           ; 1 bytes @ 0x41
  4084                           
  4085                           
  4086                           ; 1 bytes @ 0x41
  4087  0061                     	ds	1
  4088  0062                     ??_DimmerLights_Initialization:	
  4089  0062                     setDimmerLights_Main@lights:	
  4090                           ; 0 bytes @ 0x42
  4091                           
  4092                           
  4093                           ; 1 bytes @ 0x42
  4094  0062                     	ds	1
  4095  0063                     ??_DimmerLights_Main:	
  4096  0063                     setRF_DimmerValue@lights:	
  4097                           ; 0 bytes @ 0x43
  4098                           
  4099                           
  4100                           ; 1 bytes @ 0x43
  4101  0063                     	ds	1
  4102  0064                     ??_setRFSW_AdjControl:	
  4103                           
  4104                           ; 0 bytes @ 0x44
  4105  0064                     	ds	2
  4106  0066                     setRFSW_AdjControl@sw:	
  4107                           
  4108                           ; 1 bytes @ 0x46
  4109  0066                     	ds	1
  4110  0067                     ??_setControl_Lights_Table:	
  4111  0067                     setControl_Lights_Table@rf:	
  4112                           ; 0 bytes @ 0x47
  4113                           
  4114                           
  4115                           ; 1 bytes @ 0x47
  4116  0067                     	ds	1
  4117  0068                     ??_getRxData:	
  4118  0068                     getRxData@rf:	
  4119                           ; 0 bytes @ 0x48
  4120                           
  4121                           
  4122                           ; 1 bytes @ 0x48
  4123  0068                     	ds	1
  4124  0069                     ??_setRF_Main:	
  4125                           
  4126                           ; 0 bytes @ 0x49
  4127  0069                     	ds	1
  4128  006A                     setRF_Main@rf:	
  4129                           
  4130                           ; 1 bytes @ 0x4A
  4131  006A                     	ds	1
  4132  006B                     _setRF_Main$4076:	
  4133                           
  4134                           ; 1 bytes @ 0x4B
  4135  006B                     	ds	1
  4136  006C                     ??_RF_Main:	
  4137  006C                     ??_main:	
  4138                           ; 0 bytes @ 0x4C
  4139                           
  4140                           
  4141                           ; 0 bytes @ 0x4C
  4142  006C                     	ds	1
  4143                           
  4144                           	psect	maintext
  4145  140B                     __pmaintext:	
  4146 ;;
  4147 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  4148 ;;
  4149 ;; *************** function _main *****************
  4150 ;; Defined at:
  4151 ;;		line 7 in file "G:\Program\PIC\Source_File\main.c"
  4152 ;; Parameters:    Size  Location     Type
  4153 ;;		None
  4154 ;; Auto vars:     Size  Location     Type
  4155 ;;		None
  4156 ;; Return value:  Size  Location     Type
  4157 ;;		None               void
  4158 ;; Registers used:
  4159 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4160 ;; Tracked objects:
  4161 ;;		On entry : 17F/0
  4162 ;;		On exit  : 0/0
  4163 ;;		Unchanged: 0/0
  4164 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4165 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4166 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4167 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4168 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4169 ;;Total ram usage:        1 bytes
  4170 ;; Hardware stack levels required when called:   14
  4171 ;; This function calls:
  4172 ;;		_Buzzer_Initialization
  4173 ;;		_Buzzer_Main
  4174 ;;		_CC2500_PowerOnInitial
  4175 ;;		_DelayOff_Initialization
  4176 ;;		_DelayOff_Main
  4177 ;;		_DimmerLights_Initialization
  4178 ;;		_DimmerLights_Main
  4179 ;;		_Flash_Memory_Initialization
  4180 ;;		_Flash_Memory_Main
  4181 ;;		_LED_Initialization
  4182 ;;		_LED_Main
  4183 ;;		_Load_Initialization
  4184 ;;		_Load_Main
  4185 ;;		_MainT
  4186 ;;		_MainT_Initialization
  4187 ;;		_Mcu_Initialization
  4188 ;;		_PowerFault_Initialization
  4189 ;;		_PowerFault_Main
  4190 ;;		_RF_Initialization
  4191 ;;		_RF_Main
  4192 ;;		_Switch_Initialization
  4193 ;;		_Switch_Main
  4194 ;;		_Temp_Initialization
  4195 ;;		_Temp_Main
  4196 ;;		_getLoad_AD
  4197 ;;		_getPowerFault_AD
  4198 ;;		_getTemp_AD
  4199 ;; This function is called by:
  4200 ;;		Startup code after reset
  4201 ;; This function uses a non-reentrant model
  4202 ;;
  4203                           
  4204                           
  4205                           ;psect for function _main
  4206  140B                     _main:	
  4207                           
  4208                           ;main.c: 9: MainT_Initialization();
  4209                           
  4210                           ;incstack = 0
  4211                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4212  140B  31A5  253E  3194   	fcall	_MainT_Initialization
  4213                           
  4214                           ;main.c: 10: Mcu_Initialization();
  4215  140E  31A5  2556  3194   	fcall	_Mcu_Initialization
  4216                           
  4217                           ;main.c: 11: Flash_Memory_Initialization();
  4218  1411  318B  2325  3194   	fcall	_Flash_Memory_Initialization
  4219                           
  4220                           ;main.c: 12: LED_Initialization();
  4221  1414  31A2  229D  3194   	fcall	_LED_Initialization
  4222                           
  4223                           ;main.c: 13: Buzzer_Initialization();
  4224  1417  31A1  217E  3194   	fcall	_Buzzer_Initialization
  4225                           
  4226                           ;main.c: 15: ;;
  4227                           ;main.c: 16: Temp_Initialization();
  4228  141A  31A1  21AA  3194   	fcall	_Temp_Initialization
  4229                           
  4230                           ;main.c: 17: Load_Initialization();
  4231  141D  31A1  2192  3194   	fcall	_Load_Initialization
  4232                           
  4233                           ;main.c: 18: PowerFault_Initialization();
  4234  1420  31A1  219A  3194   	fcall	_PowerFault_Initialization
  4235                           
  4236                           ;main.c: 19: DelayOff_Initialization();
  4237  1423  31A1  21EA  3194   	fcall	_DelayOff_Initialization
  4238                           
  4239                           ;main.c: 21: DimmerLights_Initialization();
  4240  1426  31A4  2485  3194   	fcall	_DimmerLights_Initialization
  4241                           
  4242                           ;main.c: 22: ;;
  4243                           ;main.c: 23: ;;
  4244                           ;main.c: 24: ;;
  4245                           ;main.c: 26: Switch_Initialization();
  4246  1429  31A3  2301  3194   	fcall	_Switch_Initialization
  4247                           
  4248                           ;main.c: 27: RF_Initialization();
  4249  142C  31A1  21A2  3194   	fcall	_RF_Initialization
  4250                           
  4251                           ;main.c: 28: CC2500_PowerOnInitial();
  4252  142F  31A4  24E6  3194   	fcall	_CC2500_PowerOnInitial
  4253  1432                     l9021:	
  4254                           ;main.c: 30: while(1)
  4255                           
  4256                           
  4257                           ;main.c: 31: {
  4258                           ;main.c: 32: if(TMain->PowerON)
  4259  1432  0021               	movlb	1	; select bank1
  4260  1433  086D               	movf	_TMain^(0+128),w
  4261  1434  0086               	movwf	6
  4262  1435  3001               	movlw	1	; select bank2/3
  4263  1436  0087               	movwf	7
  4264  1437  1C01               	btfss	1,0
  4265  1438  2C57               	goto	l9025
  4266                           
  4267                           ;main.c: 33: {
  4268                           ;main.c: 35: ;;
  4269                           ;main.c: 39: getLoad_AD(1,0x05);
  4270  1439  3005               	movlw	5
  4271  143A  0020               	movlb	0	; select bank0
  4272  143B  00EC               	movwf	??_main
  4273  143C  086C               	movf	??_main,w
  4274  143D  00A4               	movwf	getLoad_AD@channel
  4275  143E  3001               	movlw	1
  4276  143F  3188  2090  3194   	fcall	_getLoad_AD
  4277                           
  4278                           ;main.c: 43: getTemp_AD(1,0x09);
  4279  1442  3009               	movlw	9
  4280  1443  0020               	movlb	0	; select bank0
  4281  1444  00EC               	movwf	??_main
  4282  1445  086C               	movf	??_main,w
  4283  1446  00A4               	movwf	getTemp_AD@channel
  4284  1447  3001               	movlw	1
  4285  1448  3191  2145  3194   	fcall	_getTemp_AD
  4286                           
  4287                           ;main.c: 47: getPowerFault_AD(1,0x11);
  4288  144B  3011               	movlw	17
  4289  144C  0020               	movlb	0	; select bank0
  4290  144D  00EC               	movwf	??_main
  4291  144E  086C               	movf	??_main,w
  4292  144F  00A4               	movwf	getPowerFault_AD@channel
  4293  1450  3001               	movlw	1
  4294  1451  319D  252C  3194   	fcall	_getPowerFault_AD
  4295                           
  4296                           ;main.c: 59: Buzzer_Main();
  4297  1454  31A1  2182  3194   	fcall	_Buzzer_Main
  4298  1457                     l9025:	
  4299                           
  4300                           ;main.c: 61: }
  4301                           ;main.c: 63: if(TMain->T0_Timerout)
  4302  1457  0021               	movlb	1	; select bank1
  4303  1458  086D               	movf	_TMain^(0+128),w
  4304  1459  0086               	movwf	6
  4305  145A  3001               	movlw	1	; select bank2/3
  4306  145B  0087               	movwf	7
  4307  145C  1C81               	btfss	1,1
  4308  145D  2C32               	goto	l9021
  4309                           
  4310                           ;main.c: 64: {
  4311                           ;main.c: 65: TMain->T0_Timerout = 0;
  4312  145E  086D               	movf	_TMain^(0+128),w
  4313  145F  0086               	movwf	6
  4314  1460  3001               	movlw	1	; select bank2/3
  4315  1461  0087               	movwf	7
  4316  1462  1081               	bcf	1,1
  4317                           
  4318                           ;main.c: 66: MainT();
  4319  1463  3197  2769  3194   	fcall	_MainT
  4320                           
  4321                           ;main.c: 67: if(TMain->PowerON)
  4322  1466  0021               	movlb	1	; select bank1
  4323  1467  086D               	movf	_TMain^(0+128),w
  4324  1468  0086               	movwf	6
  4325  1469  3001               	movlw	1	; select bank2/3
  4326  146A  0087               	movwf	7
  4327  146B  1C01               	btfss	1,0
  4328  146C  2C32               	goto	l9021
  4329                           
  4330                           ;main.c: 68: {
  4331                           ;main.c: 69: Flash_Memory_Main();
  4332  146D  319B  23C3  3194   	fcall	_Flash_Memory_Main
  4333                           
  4334                           ;main.c: 71: LED_Main();
  4335  1470  31A2  22A9  3194   	fcall	_LED_Main
  4336                           
  4337                           ;main.c: 73: ;;
  4338                           ;main.c: 74: Temp_Main();
  4339  1473  31A1  21AE  3194   	fcall	_Temp_Main
  4340                           
  4341                           ;main.c: 75: Load_Main();
  4342  1476  31A1  2196  3194   	fcall	_Load_Main
  4343                           
  4344                           ;main.c: 76: PowerFault_Main();
  4345  1479  31A1  219E  3194   	fcall	_PowerFault_Main
  4346                           
  4347                           ;main.c: 78: ;;
  4348                           ;main.c: 79: DimmerLights_Main();
  4349  147C  31A2  223F  3194   	fcall	_DimmerLights_Main
  4350                           
  4351                           ;main.c: 80: Switch_Main();
  4352  147F  31A2  2202  3194   	fcall	_Switch_Main
  4353                           
  4354                           ;main.c: 81: ;;
  4355                           ;main.c: 82: ;;
  4356                           ;main.c: 84: RF_Main();
  4357  1482  31A1  21A6  3194   	fcall	_RF_Main
  4358                           
  4359                           ;main.c: 85: DelayOff_Main();
  4360  1485  31A1  21F2  3194   	fcall	_DelayOff_Main
  4361  1488  2C32               	goto	l9021
  4362  1489                     __end_of_main:	
  4363                           
  4364                           	psect	text1
  4365  1145                     __ptext1:	
  4366 ;; *************** function _getTemp_AD *****************
  4367 ;; Defined at:
  4368 ;;		line 45 in file "G:\Program\PIC\Source_File\OverTemperature_B1.c"
  4369 ;; Parameters:    Size  Location     Type
  4370 ;;  temp            1    wreg     unsigned char 
  4371 ;;  channel         1    4[BANK0 ] unsigned char 
  4372 ;; Auto vars:     Size  Location     Type
  4373 ;;  temp            1    9[BANK0 ] unsigned char 
  4374 ;; Return value:  Size  Location     Type
  4375 ;;		None               void
  4376 ;; Registers used:
  4377 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4378 ;; Tracked objects:
  4379 ;;		On entry : 0/0
  4380 ;;		On exit  : 0/0
  4381 ;;		Unchanged: 0/0
  4382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4383 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4384 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4385 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4386 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4387 ;;Total ram usage:        6 bytes
  4388 ;; Hardware stack levels used:    1
  4389 ;; Hardware stack levels required when called:    5
  4390 ;; This function calls:
  4391 ;;		_TempPointSelect
  4392 ;;		_getAD
  4393 ;; This function is called by:
  4394 ;;		_main
  4395 ;; This function uses a non-reentrant model
  4396 ;;
  4397                           
  4398                           
  4399                           ;psect for function _getTemp_AD
  4400  1145                     _getTemp_AD:	
  4401                           
  4402                           ;incstack = 0
  4403                           ; Regs used in _getTemp_AD: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4404                           ;getTemp_AD@temp stored from wreg
  4405  1145  0020               	movlb	0	; select bank0
  4406  1146  00A9               	movwf	getTemp_AD@temp
  4407                           
  4408                           ;OverTemperature_B1.c: 47: TempPointSelect(temp);
  4409  1147  0829               	movf	getTemp_AD@temp,w
  4410  1148  31A1  21BC  3191   	fcall	_TempPointSelect
  4411                           
  4412                           ;OverTemperature_B1.c: 48: if(Temp->ADtoGO)
  4413  114B  087D               	movf	_Temp,w
  4414  114C  0086               	movwf	6
  4415  114D  3001               	movlw	1	; select bank2/3
  4416  114E  0087               	movwf	7
  4417  114F  1D01               	btfss	1,2
  4418  1150  0008               	return
  4419                           
  4420                           ;OverTemperature_B1.c: 49: {
  4421                           ;OverTemperature_B1.c: 50: Temp->ADRES=getAD(channel,0xf0);
  4422  1151  30F0               	movlw	240
  4423  1152  0020               	movlb	0	; select bank0
  4424  1153  00A5               	movwf	??_getTemp_AD
  4425  1154  0825               	movf	??_getTemp_AD,w
  4426  1155  00A0               	movwf	getAD@adcon1
  4427  1156  0824               	movf	getTemp_AD@channel,w
  4428  1157  31A5  2511  3191   	fcall	_getAD
  4429  115A  087D               	movf	_Temp,w
  4430  115B  3E0A               	addlw	10
  4431  115C  0086               	movwf	6
  4432  115D  3001               	movlw	1	; select bank2/3
  4433  115E  0087               	movwf	7
  4434  115F  0020               	movlb	0	; select bank0
  4435  1160  0820               	movf	?_getAD,w
  4436  1161  3FC0               	movwi [0]fsr1
  4437  1162  0821               	movf	?_getAD+1,w
  4438  1163  3FC1               	movwi [1]fsr1
  4439                           
  4440                           ;OverTemperature_B1.c: 51: if(Temp->ADH[0] < Temp->ADRES)
  4441  1164  087D               	movf	_Temp,w
  4442  1165  3E0A               	addlw	10
  4443  1166  0086               	movwf	6
  4444  1167  3001               	movlw	1	; select bank2/3
  4445  1168  0087               	movwf	7
  4446  1169  3F40               	moviw [0]fsr1
  4447  116A  00A5               	movwf	??_getTemp_AD
  4448  116B  3F41               	moviw [1]fsr1
  4449  116C  00A6               	movwf	??_getTemp_AD+1
  4450  116D  087D               	movf	_Temp,w
  4451  116E  3E06               	addlw	6
  4452  116F  0086               	movwf	6
  4453  1170  3001               	movlw	1	; select bank2/3
  4454  1171  0087               	movwf	7
  4455  1172  3F40               	moviw [0]fsr1
  4456  1173  00A7               	movwf	??_getTemp_AD+2
  4457  1174  3F41               	moviw [1]fsr1
  4458  1175  00A8               	movwf	??_getTemp_AD+3
  4459  1176  0826               	movf	??_getTemp_AD+1,w
  4460  1177  0228               	subwf	??_getTemp_AD+3,w
  4461  1178  1D03               	skipz
  4462  1179  297C               	goto	u7595
  4463  117A  0825               	movf	??_getTemp_AD,w
  4464  117B  0227               	subwf	??_getTemp_AD+2,w
  4465  117C                     u7595:	
  4466  117C  1803               	skipnc
  4467  117D  298D               	goto	l8687
  4468                           
  4469                           ;OverTemperature_B1.c: 52: {
  4470                           ;OverTemperature_B1.c: 53: Temp->ADH[0]=Temp->ADRES;
  4471  117E  087D               	movf	_Temp,w
  4472  117F  3E0A               	addlw	10
  4473  1180  0086               	movwf	6
  4474  1181  3001               	movlw	1	; select bank2/3
  4475  1182  0087               	movwf	7
  4476  1183  087D               	movf	_Temp,w
  4477  1184  3E06               	addlw	6
  4478  1185  0084               	movwf	4
  4479  1186  3001               	movlw	1	; select bank2/3
  4480  1187  0085               	movwf	5
  4481  1188  3F40               	moviw [0]fsr1
  4482  1189  3F80               	movwi [0]fsr0
  4483  118A  3F41               	moviw [1]fsr1
  4484  118B  3F81               	movwi [1]fsr0
  4485                           
  4486                           ;OverTemperature_B1.c: 54: }
  4487  118C  0008               	return
  4488  118D                     l8687:	
  4489                           
  4490                           ;OverTemperature_B1.c: 55: else if(Temp->ADH[1] < Temp->ADRES)
  4491  118D  087D               	movf	_Temp,w
  4492  118E  3E0A               	addlw	10
  4493  118F  0086               	movwf	6
  4494  1190  3001               	movlw	1	; select bank2/3
  4495  1191  0087               	movwf	7
  4496  1192  3F40               	moviw [0]fsr1
  4497  1193  00A5               	movwf	??_getTemp_AD
  4498  1194  3F41               	moviw [1]fsr1
  4499  1195  00A6               	movwf	??_getTemp_AD+1
  4500  1196  087D               	movf	_Temp,w
  4501  1197  3E08               	addlw	8
  4502  1198  0086               	movwf	6
  4503  1199  3001               	movlw	1	; select bank2/3
  4504  119A  0087               	movwf	7
  4505  119B  3F40               	moviw [0]fsr1
  4506  119C  00A7               	movwf	??_getTemp_AD+2
  4507  119D  3F41               	moviw [1]fsr1
  4508  119E  00A8               	movwf	??_getTemp_AD+3
  4509  119F  0826               	movf	??_getTemp_AD+1,w
  4510  11A0  0228               	subwf	??_getTemp_AD+3,w
  4511  11A1  1D03               	skipz
  4512  11A2  29A5               	goto	u7605
  4513  11A3  0825               	movf	??_getTemp_AD,w
  4514  11A4  0227               	subwf	??_getTemp_AD+2,w
  4515  11A5                     u7605:	
  4516  11A5  1803               	skipnc
  4517  11A6  0008               	return
  4518                           
  4519                           ;OverTemperature_B1.c: 56: {
  4520                           ;OverTemperature_B1.c: 57: Temp->ADH[1]=Temp->ADRES;
  4521  11A7  087D               	movf	_Temp,w
  4522  11A8  3E0A               	addlw	10
  4523  11A9  0086               	movwf	6
  4524  11AA  3001               	movlw	1	; select bank2/3
  4525  11AB  0087               	movwf	7
  4526  11AC  087D               	movf	_Temp,w
  4527  11AD  3E08               	addlw	8
  4528  11AE  0084               	movwf	4
  4529  11AF  3001               	movlw	1	; select bank2/3
  4530  11B0  0085               	movwf	5
  4531  11B1  3F40               	moviw [0]fsr1
  4532  11B2  3F80               	movwi [0]fsr0
  4533  11B3  3F41               	moviw [1]fsr1
  4534  11B4  3F81               	movwi [1]fsr0
  4535  11B5  0008               	return
  4536  11B6                     __end_of_getTemp_AD:	
  4537                           
  4538                           	psect	text2
  4539  1D2C                     __ptext2:	
  4540 ;; *************** function _getPowerFault_AD *****************
  4541 ;; Defined at:
  4542 ;;		line 52 in file "G:\Program\PIC\Source_File\PowerFault_B1.c"
  4543 ;; Parameters:    Size  Location     Type
  4544 ;;  pf              1    wreg     unsigned char 
  4545 ;;  channel         1    4[BANK0 ] unsigned char 
  4546 ;; Auto vars:     Size  Location     Type
  4547 ;;  pf              1    9[BANK0 ] unsigned char 
  4548 ;; Return value:  Size  Location     Type
  4549 ;;		None               void
  4550 ;; Registers used:
  4551 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4552 ;; Tracked objects:
  4553 ;;		On entry : 0/0
  4554 ;;		On exit  : 0/0
  4555 ;;		Unchanged: 0/0
  4556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4557 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4558 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4559 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4560 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4561 ;;Total ram usage:        6 bytes
  4562 ;; Hardware stack levels used:    1
  4563 ;; Hardware stack levels required when called:    5
  4564 ;; This function calls:
  4565 ;;		_PowerFaultPointSelect
  4566 ;;		_getAD
  4567 ;; This function is called by:
  4568 ;;		_main
  4569 ;; This function uses a non-reentrant model
  4570 ;;
  4571                           
  4572                           
  4573                           ;psect for function _getPowerFault_AD
  4574  1D2C                     _getPowerFault_AD:	
  4575                           
  4576                           ;incstack = 0
  4577                           ; Regs used in _getPowerFault_AD: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4578                           ;getPowerFault_AD@pf stored from wreg
  4579  1D2C  0020               	movlb	0	; select bank0
  4580  1D2D  00A9               	movwf	getPowerFault_AD@pf
  4581                           
  4582                           ;PowerFault_B1.c: 54: PowerFaultPointSelect(pf);
  4583  1D2E  0829               	movf	getPowerFault_AD@pf,w
  4584  1D2F  31A1  21D5  319D   	fcall	_PowerFaultPointSelect
  4585                           
  4586                           ;PowerFault_B1.c: 55: if(PF->ADtoGO)
  4587  1D32  0021               	movlb	1	; select bank1
  4588  1D33  083D               	movf	_PF^(0+128),w
  4589  1D34  0086               	movwf	6
  4590  1D35  3001               	movlw	1	; select bank2/3
  4591  1D36  0087               	movwf	7
  4592  1D37  1D81               	btfss	1,3
  4593  1D38  0008               	return
  4594                           
  4595                           ;PowerFault_B1.c: 56: {
  4596                           ;PowerFault_B1.c: 57: PF->ADRES=getAD(channel,0xf0);
  4597  1D39  30F0               	movlw	240
  4598  1D3A  0020               	movlb	0	; select bank0
  4599  1D3B  00A5               	movwf	??_getPowerFault_AD
  4600  1D3C  0825               	movf	??_getPowerFault_AD,w
  4601  1D3D  00A0               	movwf	getAD@adcon1
  4602  1D3E  0824               	movf	getPowerFault_AD@channel,w
  4603  1D3F  31A5  2511  319D   	fcall	_getAD
  4604  1D42  0021               	movlb	1	; select bank1
  4605  1D43  083D               	movf	_PF^(0+128),w
  4606  1D44  3E03               	addlw	3
  4607  1D45  0086               	movwf	6
  4608  1D46  3001               	movlw	1	; select bank2/3
  4609  1D47  0087               	movwf	7
  4610  1D48  0020               	movlb	0	; select bank0
  4611  1D49  0820               	movf	?_getAD,w
  4612  1D4A  3FC0               	movwi [0]fsr1
  4613  1D4B  0821               	movf	?_getAD+1,w
  4614  1D4C  3FC1               	movwi [1]fsr1
  4615                           
  4616                           ;PowerFault_B1.c: 58: if(PF->AD < PF->ADRES)
  4617  1D4D  0021               	movlb	1	; select bank1
  4618  1D4E  083D               	movf	_PF^(0+128),w
  4619  1D4F  3E03               	addlw	3
  4620  1D50  0086               	movwf	6
  4621  1D51  3001               	movlw	1	; select bank2/3
  4622  1D52  0087               	movwf	7
  4623  1D53  3F40               	moviw [0]fsr1
  4624  1D54  0020               	movlb	0	; select bank0
  4625  1D55  00A5               	movwf	??_getPowerFault_AD
  4626  1D56  3F41               	moviw [1]fsr1
  4627  1D57  00A6               	movwf	??_getPowerFault_AD+1
  4628  1D58  0021               	movlb	1	; select bank1
  4629  1D59  0A3D               	incf	_PF^(0+128),w
  4630  1D5A  0086               	movwf	6
  4631  1D5B  3001               	movlw	1	; select bank2/3
  4632  1D5C  0087               	movwf	7
  4633  1D5D  3F40               	moviw [0]fsr1
  4634  1D5E  0020               	movlb	0	; select bank0
  4635  1D5F  00A7               	movwf	??_getPowerFault_AD+2
  4636  1D60  3F41               	moviw [1]fsr1
  4637  1D61  00A8               	movwf	??_getPowerFault_AD+3
  4638  1D62  0826               	movf	??_getPowerFault_AD+1,w
  4639  1D63  0228               	subwf	??_getPowerFault_AD+3,w
  4640  1D64  1D03               	skipz
  4641  1D65  2D68               	goto	u7625
  4642  1D66  0825               	movf	??_getPowerFault_AD,w
  4643  1D67  0227               	subwf	??_getPowerFault_AD+2,w
  4644  1D68                     u7625:	
  4645  1D68  1803               	skipnc
  4646  1D69  0008               	return
  4647                           
  4648                           ;PowerFault_B1.c: 59: {
  4649                           ;PowerFault_B1.c: 60: PF->AD=PF->ADRES;
  4650  1D6A  0021               	movlb	1	; select bank1
  4651  1D6B  083D               	movf	_PF^(0+128),w
  4652  1D6C  3E03               	addlw	3
  4653  1D6D  0086               	movwf	6
  4654  1D6E  3001               	movlw	1	; select bank2/3
  4655  1D6F  0087               	movwf	7
  4656  1D70  0A3D               	incf	_PF^(0+128),w
  4657  1D71  0084               	movwf	4
  4658  1D72  3001               	movlw	1	; select bank2/3
  4659  1D73  0085               	movwf	5
  4660  1D74  3F40               	moviw [0]fsr1
  4661  1D75  3F80               	movwi [0]fsr0
  4662  1D76  3F41               	moviw [1]fsr1
  4663  1D77  3F81               	movwi [1]fsr0
  4664  1D78  0008               	return
  4665  1D79                     __end_of_getPowerFault_AD:	
  4666                           
  4667                           	psect	text3
  4668  0890                     __ptext3:	
  4669 ;; *************** function _getLoad_AD *****************
  4670 ;; Defined at:
  4671 ;;		line 38 in file "G:\Program\PIC\Source_File\OverLoad_B1.c"
  4672 ;; Parameters:    Size  Location     Type
  4673 ;;  load            1    wreg     unsigned char 
  4674 ;;  channel         1    4[BANK0 ] unsigned char 
  4675 ;; Auto vars:     Size  Location     Type
  4676 ;;  load            1   10[BANK0 ] unsigned char 
  4677 ;;  i               1   12[BANK0 ] unsigned char 
  4678 ;;  j               1   11[BANK0 ] unsigned char 
  4679 ;; Return value:  Size  Location     Type
  4680 ;;		None               void
  4681 ;; Registers used:
  4682 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4683 ;; Tracked objects:
  4684 ;;		On entry : 0/0
  4685 ;;		On exit  : 0/0
  4686 ;;		Unchanged: 0/0
  4687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4688 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4689 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4690 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4691 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4692 ;;Total ram usage:        9 bytes
  4693 ;; Hardware stack levels used:    1
  4694 ;; Hardware stack levels required when called:    5
  4695 ;; This function calls:
  4696 ;;		_LoadPointSelect
  4697 ;;		_getAD
  4698 ;; This function is called by:
  4699 ;;		_main
  4700 ;; This function uses a non-reentrant model
  4701 ;;
  4702                           
  4703                           
  4704                           ;psect for function _getLoad_AD
  4705  0890                     _getLoad_AD:	
  4706                           
  4707                           ;incstack = 0
  4708                           ; Regs used in _getLoad_AD: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4709                           ;getLoad_AD@load stored from wreg
  4710  0890  0020               	movlb	0	; select bank0
  4711  0891  00AA               	movwf	getLoad_AD@load
  4712                           
  4713                           ;OverLoad_B1.c: 40: char i=0,j=0;
  4714  0892  01AC               	clrf	getLoad_AD@i
  4715  0893  01AB               	clrf	getLoad_AD@j
  4716                           
  4717                           ;OverLoad_B1.c: 41: LoadPointSelect(load);
  4718  0894  082A               	movf	getLoad_AD@load,w
  4719  0895  31A2  2234  3188   	fcall	_LoadPointSelect
  4720                           
  4721                           ;OverLoad_B1.c: 42: if(Load->ADtoGO)
  4722  0898  0020               	movlb	0	; select bank0
  4723  0899  086F               	movf	_Load,w
  4724  089A  0086               	movwf	6
  4725  089B  3002               	movlw	2	; select bank4/5
  4726  089C  0087               	movwf	7
  4727  089D  1E01               	btfss	1,4
  4728  089E  0008               	return
  4729                           
  4730                           ;OverLoad_B1.c: 43: {
  4731                           ;OverLoad_B1.c: 44: Load->ADRES=getAD(channel,0xc0);
  4732  089F  30C0               	movlw	192
  4733  08A0  00A5               	movwf	??_getLoad_AD
  4734  08A1  0825               	movf	??_getLoad_AD,w
  4735  08A2  00A0               	movwf	getAD@adcon1
  4736  08A3  0824               	movf	getLoad_AD@channel,w
  4737  08A4  31A5  2511  3188   	fcall	_getAD
  4738  08A7  0020               	movlb	0	; select bank0
  4739  08A8  086F               	movf	_Load,w
  4740  08A9  3E32               	addlw	50
  4741  08AA  0086               	movwf	6
  4742  08AB  3002               	movlw	2	; select bank4/5
  4743  08AC  0087               	movwf	7
  4744  08AD  0820               	movf	?_getAD,w
  4745  08AE  3FC0               	movwi [0]fsr1
  4746  08AF  0821               	movf	?_getAD+1,w
  4747  08B0  3FC1               	movwi [1]fsr1
  4748                           
  4749                           ;OverLoad_B1.c: 45: for(i=0 ; i<5 ;i++)
  4750  08B1  01AC               	clrf	getLoad_AD@i
  4751  08B2  3005               	movlw	5
  4752  08B3  022C               	subwf	getLoad_AD@i,w
  4753  08B4  1803               	btfsc	3,0
  4754  08B5  28EF               	goto	l8661
  4755  08B6                     l8651:	
  4756                           
  4757                           ;OverLoad_B1.c: 46: {
  4758                           ;OverLoad_B1.c: 47: if(Load->AH[i] < Load->ADRES)
  4759  08B6  086F               	movf	_Load,w
  4760  08B7  3E32               	addlw	50
  4761  08B8  0086               	movwf	6
  4762  08B9  3002               	movlw	2	; select bank4/5
  4763  08BA  0087               	movwf	7
  4764  08BB  3F40               	moviw [0]fsr1
  4765  08BC  00A5               	movwf	??_getLoad_AD
  4766  08BD  3F41               	moviw [1]fsr1
  4767  08BE  00A6               	movwf	??_getLoad_AD+1
  4768  08BF  352C               	lslf	getLoad_AD@i,w
  4769  08C0  3E08               	addlw	8
  4770  08C1  076F               	addwf	_Load,w
  4771  08C2  00A7               	movwf	??_getLoad_AD+2
  4772  08C3  0827               	movf	??_getLoad_AD+2,w
  4773  08C4  0086               	movwf	6
  4774  08C5  3002               	movlw	2	; select bank4/5
  4775  08C6  0087               	movwf	7
  4776  08C7  3F40               	moviw [0]fsr1
  4777  08C8  00A8               	movwf	??_getLoad_AD+3
  4778  08C9  3F41               	moviw [1]fsr1
  4779  08CA  00A9               	movwf	??_getLoad_AD+4
  4780  08CB  0826               	movf	??_getLoad_AD+1,w
  4781  08CC  0229               	subwf	??_getLoad_AD+4,w
  4782  08CD  1D03               	skipz
  4783  08CE  28D1               	goto	u7525
  4784  08CF  0825               	movf	??_getLoad_AD,w
  4785  08D0  0228               	subwf	??_getLoad_AD+3,w
  4786  08D1                     u7525:	
  4787  08D1  1803               	skipnc
  4788  08D2  28E7               	goto	l8657
  4789                           
  4790                           ;OverLoad_B1.c: 48: {
  4791                           ;OverLoad_B1.c: 49: Load->AH[i]=Load->ADRES;
  4792  08D3  086F               	movf	_Load,w
  4793  08D4  3E32               	addlw	50
  4794  08D5  0086               	movwf	6
  4795  08D6  3002               	movlw	2	; select bank4/5
  4796  08D7  0087               	movwf	7
  4797  08D8  352C               	lslf	getLoad_AD@i,w
  4798  08D9  3E08               	addlw	8
  4799  08DA  076F               	addwf	_Load,w
  4800  08DB  00A5               	movwf	??_getLoad_AD
  4801  08DC  0825               	movf	??_getLoad_AD,w
  4802  08DD  0084               	movwf	4
  4803  08DE  3002               	movlw	2	; select bank4/5
  4804  08DF  0085               	movwf	5
  4805  08E0  3F40               	moviw [0]fsr1
  4806  08E1  3F80               	movwi [0]fsr0
  4807  08E2  3F41               	moviw [1]fsr1
  4808  08E3  3F81               	movwi [1]fsr0
  4809                           
  4810                           ;OverLoad_B1.c: 50: j=1;
  4811  08E4  01AB               	clrf	getLoad_AD@j
  4812  08E5  0AAB               	incf	getLoad_AD@j,f
  4813                           
  4814                           ;OverLoad_B1.c: 51: break;
  4815  08E6  28EF               	goto	l8661
  4816  08E7                     l8657:	
  4817  08E7  3001               	movlw	1
  4818  08E8  00A5               	movwf	??_getLoad_AD
  4819  08E9  0825               	movf	??_getLoad_AD,w
  4820  08EA  07AC               	addwf	getLoad_AD@i,f
  4821  08EB  3005               	movlw	5
  4822  08EC  022C               	subwf	getLoad_AD@i,w
  4823  08ED  1C03               	skipc
  4824  08EE  28B6               	goto	l8651
  4825  08EF                     l8661:	
  4826                           
  4827                           ;OverLoad_B1.c: 52: }
  4828                           ;OverLoad_B1.c: 53: }
  4829                           ;OverLoad_B1.c: 54: if(j == 0)
  4830  08EF  08AB               	movf	getLoad_AD@j,f
  4831  08F0  1D03               	skipz
  4832  08F1  0008               	return
  4833                           
  4834                           ;OverLoad_B1.c: 55: {
  4835                           ;OverLoad_B1.c: 56: for(i=0 ; i<5 ;i++)
  4836  08F2  01AC               	clrf	getLoad_AD@i
  4837  08F3                     L1:	
  4838  08F3  3005               	movlw	5
  4839  08F4  022C               	subwf	getLoad_AD@i,w
  4840  08F5  1803               	btfsc	3,0
  4841  08F6  0008               	return
  4842                           
  4843                           ;OverLoad_B1.c: 57: {
  4844                           ;OverLoad_B1.c: 58: if(Load->AL[i] > Load->ADRES)
  4845  08F7  352C               	lslf	getLoad_AD@i,w
  4846  08F8  3E1A               	addlw	26
  4847  08F9  076F               	addwf	_Load,w
  4848  08FA  00A5               	movwf	??_getLoad_AD
  4849  08FB  0825               	movf	??_getLoad_AD,w
  4850  08FC  0086               	movwf	6
  4851  08FD  3002               	movlw	2	; select bank4/5
  4852  08FE  0087               	movwf	7
  4853  08FF  3F40               	moviw [0]fsr1
  4854  0900  00A6               	movwf	??_getLoad_AD+1
  4855  0901  3F41               	moviw [1]fsr1
  4856  0902  00A7               	movwf	??_getLoad_AD+2
  4857  0903  086F               	movf	_Load,w
  4858  0904  3E32               	addlw	50
  4859  0905  0086               	movwf	6
  4860  0906  3002               	movlw	2	; select bank4/5
  4861  0907  0087               	movwf	7
  4862  0908  3F40               	moviw [0]fsr1
  4863  0909  00A8               	movwf	??_getLoad_AD+3
  4864  090A  3F41               	moviw [1]fsr1
  4865  090B  00A9               	movwf	??_getLoad_AD+4
  4866  090C  0827               	movf	??_getLoad_AD+2,w
  4867  090D  0229               	subwf	??_getLoad_AD+4,w
  4868  090E  1D03               	skipz
  4869  090F  2912               	goto	u7565
  4870  0910  0826               	movf	??_getLoad_AD+1,w
  4871  0911  0228               	subwf	??_getLoad_AD+3,w
  4872  0912                     u7565:	
  4873  0912  1803               	skipnc
  4874  0913  2926               	goto	l8673
  4875                           
  4876                           ;OverLoad_B1.c: 59: {
  4877                           ;OverLoad_B1.c: 60: Load->AL[i]=Load->ADRES;
  4878  0914  086F               	movf	_Load,w
  4879  0915  3E32               	addlw	50
  4880  0916  0086               	movwf	6
  4881  0917  3002               	movlw	2	; select bank4/5
  4882  0918  0087               	movwf	7
  4883  0919  352C               	lslf	getLoad_AD@i,w
  4884  091A  3E1A               	addlw	26
  4885  091B  076F               	addwf	_Load,w
  4886  091C  00A5               	movwf	??_getLoad_AD
  4887  091D  0825               	movf	??_getLoad_AD,w
  4888  091E  0084               	movwf	4
  4889  091F  3002               	movlw	2	; select bank4/5
  4890  0920  0085               	movwf	5
  4891  0921  3F40               	moviw [0]fsr1
  4892  0922  3F80               	movwi [0]fsr0
  4893  0923  3F41               	moviw [1]fsr1
  4894  0924  3F81               	movwi [1]fsr0
  4895                           
  4896                           ;OverLoad_B1.c: 61: break;
  4897  0925  0008               	return
  4898  0926                     l8673:	
  4899  0926  3001               	movlw	1
  4900  0927  00A5               	movwf	??_getLoad_AD
  4901  0928  0825               	movf	??_getLoad_AD,w
  4902  0929  07AC               	addwf	getLoad_AD@i,f
  4903  092A  28F3               	goto	L1
  4904  092B                     __end_of_getLoad_AD:	
  4905                           
  4906                           	psect	text4
  4907  2511                     __ptext4:	
  4908 ;; *************** function _getAD *****************
  4909 ;; Defined at:
  4910 ;;		line 309 in file "G:\Program\PIC\Source_File\MCU_16f1518_B1.c"
  4911 ;; Parameters:    Size  Location     Type
  4912 ;;  adcon0          1    wreg     unsigned char 
  4913 ;;  adcon1          1    0[BANK0 ] unsigned char 
  4914 ;; Auto vars:     Size  Location     Type
  4915 ;;  adcon0          1    3[BANK0 ] unsigned char 
  4916 ;; Return value:  Size  Location     Type
  4917 ;;                  2    0[BANK0 ] int 
  4918 ;; Registers used:
  4919 ;;		wreg, status,2, status,0
  4920 ;; Tracked objects:
  4921 ;;		On entry : 0/0
  4922 ;;		On exit  : 0/0
  4923 ;;		Unchanged: 0/0
  4924 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4925 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4926 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4928 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4929 ;;Total ram usage:        4 bytes
  4930 ;; Hardware stack levels used:    1
  4931 ;; Hardware stack levels required when called:    4
  4932 ;; This function calls:
  4933 ;;		Nothing
  4934 ;; This function is called by:
  4935 ;;		_getLoad_AD
  4936 ;;		_getTemp_AD
  4937 ;;		_getPowerFault_AD
  4938 ;; This function uses a non-reentrant model
  4939 ;;
  4940                           
  4941                           
  4942                           ;psect for function _getAD
  4943  2511                     _getAD:	
  4944                           
  4945                           ;incstack = 0
  4946                           ; Regs used in _getAD: [wreg+status,2+status,0]
  4947                           ;getAD@adcon0 stored from wreg
  4948  2511  0020               	movlb	0	; select bank0
  4949  2512  00A3               	movwf	getAD@adcon0
  4950                           
  4951                           ;MCU_16f1518_B1.c: 311: ADCON0=adcon0;
  4952  2513  0823               	movf	getAD@adcon0,w
  4953  2514  0021               	movlb	1	; select bank1
  4954  2515  009D               	movwf	29	;volatile
  4955                           
  4956                           ;MCU_16f1518_B1.c: 312: ADCON1=adcon1;
  4957  2516  0020               	movlb	0	; select bank0
  4958  2517  0820               	movf	getAD@adcon1,w
  4959  2518  0021               	movlb	1	; select bank1
  4960  2519  009E               	movwf	30	;volatile
  4961                           
  4962                           ;MCU_16f1518_B1.c: 313: GO_nDONE=1;
  4963  251A  149D               	bsf	29,1	;volatile
  4964  251B                     l1663:	
  4965                           ;MCU_16f1518_B1.c: 314: while(GO_nDONE);
  4966                           
  4967  251B  189D               	btfsc	29,1	;volatile
  4968  251C  2D1B               	goto	l1663
  4969                           
  4970                           ;MCU_16f1518_B1.c: 315: return ((ADRESH*256)+ADRESL);
  4971  251D  081C               	movf	28,w	;volatile
  4972  251E  0020               	movlb	0	; select bank0
  4973  251F  01A1               	clrf	?_getAD+1
  4974  2520  07A1               	addwf	?_getAD+1,f
  4975  2521  0021               	movlb	1	; select bank1
  4976  2522  081B               	movf	27,w	;volatile
  4977  2523  0020               	movlb	0	; select bank0
  4978  2524  01A0               	clrf	?_getAD
  4979  2525  07A0               	addwf	?_getAD,f
  4980  2526  0008               	return
  4981  2527                     __end_of_getAD:	
  4982                           
  4983                           	psect	text5
  4984  21AE                     __ptext5:	
  4985 ;; *************** function _Temp_Main *****************
  4986 ;; Defined at:
  4987 ;;		line 15 in file "G:\Program\PIC\Source_File\OverTemperature_B1.c"
  4988 ;; Parameters:    Size  Location     Type
  4989 ;;		None
  4990 ;; Auto vars:     Size  Location     Type
  4991 ;;		None
  4992 ;; Return value:  Size  Location     Type
  4993 ;;		None               void
  4994 ;; Registers used:
  4995 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4996 ;; Tracked objects:
  4997 ;;		On entry : 0/0
  4998 ;;		On exit  : 0/0
  4999 ;;		Unchanged: 0/0
  5000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5001 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5002 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5004 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5005 ;;Total ram usage:        0 bytes
  5006 ;; Hardware stack levels used:    1
  5007 ;; Hardware stack levels required when called:   10
  5008 ;; This function calls:
  5009 ;;		_setTemp_Main
  5010 ;; This function is called by:
  5011 ;;		_main
  5012 ;; This function uses a non-reentrant model
  5013 ;;
  5014                           
  5015                           
  5016                           ;psect for function _Temp_Main
  5017  21AE                     _Temp_Main:	
  5018                           
  5019                           ;OverTemperature_B1.c: 18: setTemp_Main(1);
  5020                           
  5021                           ;incstack = 0
  5022                           ; Regs used in _Temp_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5023  21AE  3001               	movlw	1
  5024  21AF  318E  26CE         	fcall	_setTemp_Main
  5025  21B1  0008               	return
  5026  21B2                     __end_of_Temp_Main:	
  5027                           
  5028                           	psect	text6
  5029  0ECE                     __ptext6:	
  5030 ;; *************** function _setTemp_Main *****************
  5031 ;; Defined at:
  5032 ;;		line 68 in file "G:\Program\PIC\Source_File\OverTemperature_B1.c"
  5033 ;; Parameters:    Size  Location     Type
  5034 ;;  temp            1    wreg     unsigned char 
  5035 ;; Auto vars:     Size  Location     Type
  5036 ;;  temp            1   18[BANK0 ] unsigned char 
  5037 ;; Return value:  Size  Location     Type
  5038 ;;		None               void
  5039 ;; Registers used:
  5040 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5041 ;; Tracked objects:
  5042 ;;		On entry : 0/0
  5043 ;;		On exit  : 0/0
  5044 ;;		Unchanged: 0/0
  5045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5046 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5047 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5048 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5049 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5050 ;;Total ram usage:        4 bytes
  5051 ;; Hardware stack levels used:    1
  5052 ;; Hardware stack levels required when called:    9
  5053 ;; This function calls:
  5054 ;;		_TempPointSelect
  5055 ;;		_getLoad_Safe
  5056 ;;		_getPF_Safe
  5057 ;;		_setOverTemp_ERROR
  5058 ;; This function is called by:
  5059 ;;		_Temp_Main
  5060 ;; This function uses a non-reentrant model
  5061 ;;
  5062                           
  5063                           
  5064                           ;psect for function _setTemp_Main
  5065  0ECE                     _setTemp_Main:	
  5066                           
  5067                           ;incstack = 0
  5068                           ; Regs used in _setTemp_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5069                           ;setTemp_Main@temp stored from wreg
  5070  0ECE  0020               	movlb	0	; select bank0
  5071  0ECF  00B2               	movwf	setTemp_Main@temp
  5072                           
  5073                           ;OverTemperature_B1.c: 70: TempPointSelect(temp);
  5074  0ED0  0832               	movf	setTemp_Main@temp,w
  5075  0ED1  31A1  21BC  318E   	fcall	_TempPointSelect
  5076                           
  5077                           ;OverTemperature_B1.c: 71: if(Temp->Enable)
  5078  0ED4  087D               	movf	_Temp,w
  5079  0ED5  0086               	movwf	6
  5080  0ED6  3001               	movlw	1	; select bank2/3
  5081  0ED7  0087               	movwf	7
  5082  0ED8  1C01               	btfss	1,0
  5083  0ED9  0008               	return
  5084                           
  5085                           ;OverTemperature_B1.c: 72: {
  5086                           ;OverTemperature_B1.c: 73: if(Temp->ADtoGO == 0)
  5087  0EDA  087D               	movf	_Temp,w
  5088  0EDB  0086               	movwf	6
  5089  0EDC  3001               	movlw	1	; select bank2/3
  5090  0EDD  0087               	movwf	7
  5091  0EDE  1901               	btfsc	1,2
  5092  0EDF  2F22               	goto	l8253
  5093                           
  5094                           ;OverTemperature_B1.c: 74: {
  5095                           ;OverTemperature_B1.c: 75: Temp->Time++;
  5096  0EE0  0A7D               	incf	_Temp,w
  5097  0EE1  0086               	movwf	6
  5098  0EE2  3001               	movlw	1	; select bank2/3
  5099  0EE3  0087               	movwf	7
  5100  0EE4  3001               	movlw	1
  5101  0EE5  0781               	addwf	1,f
  5102  0EE6  3141               	addfsr 1,1
  5103  0EE7  1803               	skipnc
  5104  0EE8  0A81               	incf	1,f
  5105                           
  5106                           ;OverTemperature_B1.c: 76: if(Temp->Time >= 500)
  5107  0EE9  0A7D               	incf	_Temp,w
  5108  0EEA  0086               	movwf	6
  5109  0EEB  3001               	movlw	1	; select bank2/3
  5110  0EEC  0087               	movwf	7
  5111  0EED  3F40               	moviw [0]fsr1
  5112  0EEE  0020               	movlb	0	; select bank0
  5113  0EEF  00AF               	movwf	??_setTemp_Main
  5114  0EF0  3F41               	moviw [1]fsr1
  5115  0EF1  00B0               	movwf	??_setTemp_Main+1
  5116  0EF2  3001               	movlw	1
  5117  0EF3  0230               	subwf	??_setTemp_Main+1,w
  5118  0EF4  30F4               	movlw	244
  5119  0EF5  1903               	skipnz
  5120  0EF6  022F               	subwf	??_setTemp_Main,w
  5121  0EF7  1C03               	skipc
  5122  0EF8  0008               	return
  5123                           
  5124                           ;OverTemperature_B1.c: 77: {
  5125                           ;OverTemperature_B1.c: 78: if(getLoad_Safe(1) && getPF_Safe(1))
  5126  0EF9  3001               	movlw	1
  5127  0EFA  31A4  2433  318E   	fcall	_getLoad_Safe
  5128  0EFD  3A00               	xorlw	0
  5129  0EFE  1903               	skipnz
  5130  0EFF  2F19               	goto	l8251
  5131  0F00  3001               	movlw	1
  5132  0F01  3198  2066  318E   	fcall	_getPF_Safe
  5133  0F04  3A00               	xorlw	0
  5134  0F05  1903               	skipnz
  5135  0F06  2F19               	goto	l8251
  5136                           
  5137                           ;OverTemperature_B1.c: 79: {
  5138                           ;OverTemperature_B1.c: 80: Temp->Time=0;
  5139  0F07  0A7D               	incf	_Temp,w
  5140  0F08  0086               	movwf	6
  5141  0F09  3001               	movlw	1	; select bank2/3
  5142  0F0A  0087               	movwf	7
  5143  0F0B  3000               	movlw	0
  5144  0F0C  3FC0               	movwi [0]fsr1
  5145  0F0D  3FC1               	movwi [1]fsr1
  5146                           
  5147                           ;OverTemperature_B1.c: 81: Temp->ADtoGO=1;
  5148  0F0E  087D               	movf	_Temp,w
  5149  0F0F  0086               	movwf	6
  5150  0F10  3001               	movlw	1	; select bank2/3
  5151  0F11  0087               	movwf	7
  5152  0F12  1501               	bsf	1,2
  5153                           
  5154                           ;OverTemperature_B1.c: 82: Temp->Safe=0;
  5155  0F13  087D               	movf	_Temp,w
  5156  0F14  0086               	movwf	6
  5157  0F15  3001               	movlw	1	; select bank2/3
  5158  0F16  0087               	movwf	7
  5159  0F17  1201               	bcf	1,4
  5160                           
  5161                           ;OverTemperature_B1.c: 83: }
  5162  0F18  0008               	return
  5163  0F19                     l8251:	
  5164                           
  5165                           ;OverTemperature_B1.c: 84: else
  5166                           ;OverTemperature_B1.c: 85: {
  5167                           ;OverTemperature_B1.c: 86: Temp->Time=1000;
  5168  0F19  0A7D               	incf	_Temp,w
  5169  0F1A  0086               	movwf	6
  5170  0F1B  3001               	movlw	1	; select bank2/3
  5171  0F1C  0087               	movwf	7
  5172  0F1D  30E8               	movlw	232
  5173  0F1E  3FC0               	movwi [0]fsr1
  5174  0F1F  3003               	movlw	3
  5175  0F20  3FC1               	movwi [1]fsr1
  5176                           
  5177                           ;OverTemperature_B1.c: 87: }
  5178                           ;OverTemperature_B1.c: 88: }
  5179                           ;OverTemperature_B1.c: 89: }
  5180  0F21  0008               	return
  5181  0F22                     l8253:	
  5182                           
  5183                           ;OverTemperature_B1.c: 90: else
  5184                           ;OverTemperature_B1.c: 91: {
  5185                           ;OverTemperature_B1.c: 92: Temp->Time++;
  5186  0F22  0A7D               	incf	_Temp,w
  5187  0F23  0086               	movwf	6
  5188  0F24  3001               	movlw	1	; select bank2/3
  5189  0F25  0087               	movwf	7
  5190  0F26  3001               	movlw	1
  5191  0F27  0781               	addwf	1,f
  5192  0F28  3141               	addfsr 1,1
  5193  0F29  1803               	skipnc
  5194  0F2A  0A81               	incf	1,f
  5195                           
  5196                           ;OverTemperature_B1.c: 93: if(Temp->Time >= 4)
  5197  0F2B  0A7D               	incf	_Temp,w
  5198  0F2C  0086               	movwf	6
  5199  0F2D  3001               	movlw	1	; select bank2/3
  5200  0F2E  0087               	movwf	7
  5201  0F2F  3F40               	moviw [0]fsr1
  5202  0F30  0020               	movlb	0	; select bank0
  5203  0F31  00AF               	movwf	??_setTemp_Main
  5204  0F32  3F41               	moviw [1]fsr1
  5205  0F33  00B0               	movwf	??_setTemp_Main+1
  5206  0F34  3000               	movlw	0
  5207  0F35  0230               	subwf	??_setTemp_Main+1,w
  5208  0F36  3004               	movlw	4
  5209  0F37  1903               	skipnz
  5210  0F38  022F               	subwf	??_setTemp_Main,w
  5211  0F39  1C03               	skipc
  5212  0F3A  0008               	return
  5213                           
  5214                           ;OverTemperature_B1.c: 94: {
  5215                           ;OverTemperature_B1.c: 95: Temp->Time=0;
  5216  0F3B  0A7D               	incf	_Temp,w
  5217  0F3C  0086               	movwf	6
  5218  0F3D  3001               	movlw	1	; select bank2/3
  5219  0F3E  0087               	movwf	7
  5220  0F3F  3000               	movlw	0
  5221  0F40  3FC0               	movwi [0]fsr1
  5222  0F41  3FC1               	movwi [1]fsr1
  5223                           
  5224                           ;OverTemperature_B1.c: 96: Temp->ADtoGO=0;
  5225  0F42  087D               	movf	_Temp,w
  5226  0F43  0086               	movwf	6
  5227  0F44  3001               	movlw	1	; select bank2/3
  5228  0F45  0087               	movwf	7
  5229  0F46  1101               	bcf	1,2
  5230                           
  5231                           ;OverTemperature_B1.c: 97: Temp->AD=Temp->ADH[1];
  5232  0F47  087D               	movf	_Temp,w
  5233  0F48  3E08               	addlw	8
  5234  0F49  0086               	movwf	6
  5235  0F4A  3001               	movlw	1	; select bank2/3
  5236  0F4B  0087               	movwf	7
  5237  0F4C  087D               	movf	_Temp,w
  5238  0F4D  3E04               	addlw	4
  5239  0F4E  0084               	movwf	4
  5240  0F4F  3001               	movlw	1	; select bank2/3
  5241  0F50  0085               	movwf	5
  5242  0F51  3F40               	moviw [0]fsr1
  5243  0F52  3F80               	movwi [0]fsr0
  5244  0F53  3F41               	moviw [1]fsr1
  5245  0F54  3F81               	movwi [1]fsr0
  5246                           
  5247                           ;OverTemperature_B1.c: 98: if(Temp->ERROR)
  5248  0F55  087D               	movf	_Temp,w
  5249  0F56  0086               	movwf	6
  5250  0F57  3001               	movlw	1	; select bank2/3
  5251  0F58  0087               	movwf	7
  5252  0F59  1C81               	btfss	1,1
  5253  0F5A  2F89               	goto	l8275
  5254                           
  5255                           ;OverTemperature_B1.c: 99: {
  5256                           ;OverTemperature_B1.c: 100: if(Temp->AD >= 540)
  5257  0F5B  087D               	movf	_Temp,w
  5258  0F5C  3E04               	addlw	4
  5259  0F5D  0086               	movwf	6
  5260  0F5E  3001               	movlw	1	; select bank2/3
  5261  0F5F  0087               	movwf	7
  5262  0F60  3F40               	moviw [0]fsr1
  5263  0F61  00AF               	movwf	??_setTemp_Main
  5264  0F62  3F41               	moviw [1]fsr1
  5265  0F63  00B0               	movwf	??_setTemp_Main+1
  5266  0F64  3002               	movlw	2
  5267  0F65  0230               	subwf	??_setTemp_Main+1,w
  5268  0F66  301C               	movlw	28
  5269  0F67  1903               	skipnz
  5270  0F68  022F               	subwf	??_setTemp_Main,w
  5271  0F69  1C03               	skipc
  5272  0F6A  2FB9               	goto	l8285
  5273                           
  5274                           ;OverTemperature_B1.c: 101: {
  5275                           ;OverTemperature_B1.c: 102: Temp->Count++;
  5276  0F6B  3001               	movlw	1
  5277  0F6C  00AF               	movwf	??_setTemp_Main
  5278  0F6D  087D               	movf	_Temp,w
  5279  0F6E  3E03               	addlw	3
  5280  0F6F  0086               	movwf	6
  5281  0F70  3001               	movlw	1	; select bank2/3
  5282  0F71  0087               	movwf	7
  5283  0F72  082F               	movf	??_setTemp_Main,w
  5284  0F73  0781               	addwf	1,f
  5285                           
  5286                           ;OverTemperature_B1.c: 103: if(Temp->Count >= 3)
  5287  0F74  087D               	movf	_Temp,w
  5288  0F75  3E03               	addlw	3
  5289  0F76  0086               	movwf	6
  5290  0F77  3001               	movlw	1	; select bank2/3
  5291  0F78  0087               	movwf	7
  5292  0F79  3003               	movlw	3
  5293  0F7A  0201               	subwf	1,w
  5294  0F7B  1C03               	skipc
  5295  0F7C  2FBF               	goto	l8287
  5296                           
  5297                           ;OverTemperature_B1.c: 104: {
  5298                           ;OverTemperature_B1.c: 105: Temp->Count=0;
  5299  0F7D  087D               	movf	_Temp,w
  5300  0F7E  3E03               	addlw	3
  5301  0F7F  0086               	movwf	6
  5302  0F80  3001               	movlw	1	; select bank2/3
  5303  0F81  0087               	movwf	7
  5304  0F82  0181               	clrf	1
  5305                           
  5306                           ;OverTemperature_B1.c: 106: setOverTemp_ERROR(1,0);
  5307  0F83  01AC               	clrf	setOverTemp_ERROR@command
  5308  0F84  3001               	movlw	1
  5309  0F85  3190  200C  318E   	fcall	_setOverTemp_ERROR
  5310                           
  5311                           ;OverTemperature_B1.c: 107: }
  5312                           ;OverTemperature_B1.c: 108: }
  5313  0F88  2FBF               	goto	l8287
  5314  0F89                     l8275:	
  5315                           ;OverTemperature_B1.c: 112: }
  5316                           ;OverTemperature_B1.c: 113: }
  5317                           
  5318                           ;OverTemperature_B1.c: 109: else
  5319                           ;OverTemperature_B1.c: 110: {
  5320                           ;OverTemperature_B1.c: 111: Temp->Count=0;
  5321                           
  5322                           
  5323                           ;OverTemperature_B1.c: 114: else
  5324                           ;OverTemperature_B1.c: 115: {
  5325                           ;OverTemperature_B1.c: 116: if(Temp->AD <= 475)
  5326  0F89  087D               	movf	_Temp,w
  5327  0F8A  3E04               	addlw	4
  5328  0F8B  0086               	movwf	6
  5329  0F8C  3001               	movlw	1	; select bank2/3
  5330  0F8D  0087               	movwf	7
  5331  0F8E  3F40               	moviw [0]fsr1
  5332  0F8F  0020               	movlb	0	; select bank0
  5333  0F90  00AF               	movwf	??_setTemp_Main
  5334  0F91  3F41               	moviw [1]fsr1
  5335  0F92  00B0               	movwf	??_setTemp_Main+1
  5336  0F93  3001               	movlw	1
  5337  0F94  0230               	subwf	??_setTemp_Main+1,w
  5338  0F95  30DC               	movlw	220
  5339  0F96  1903               	skipnz
  5340  0F97  022F               	subwf	??_setTemp_Main,w
  5341  0F98  1803               	skipnc
  5342  0F99  2FB9               	goto	l8285
  5343                           
  5344                           ;OverTemperature_B1.c: 117: {
  5345                           ;OverTemperature_B1.c: 118: Temp->Count++;
  5346  0F9A  3001               	movlw	1
  5347  0F9B  00AF               	movwf	??_setTemp_Main
  5348  0F9C  087D               	movf	_Temp,w
  5349  0F9D  3E03               	addlw	3
  5350  0F9E  0086               	movwf	6
  5351  0F9F  3001               	movlw	1	; select bank2/3
  5352  0FA0  0087               	movwf	7
  5353  0FA1  082F               	movf	??_setTemp_Main,w
  5354  0FA2  0781               	addwf	1,f
  5355                           
  5356                           ;OverTemperature_B1.c: 119: if(Temp->Count >= 3)
  5357  0FA3  087D               	movf	_Temp,w
  5358  0FA4  3E03               	addlw	3
  5359  0FA5  0086               	movwf	6
  5360  0FA6  3001               	movlw	1	; select bank2/3
  5361  0FA7  0087               	movwf	7
  5362  0FA8  3003               	movlw	3
  5363  0FA9  0201               	subwf	1,w
  5364  0FAA  1C03               	skipc
  5365  0FAB  2FBF               	goto	l8287
  5366                           
  5367                           ;OverTemperature_B1.c: 120: {
  5368                           ;OverTemperature_B1.c: 121: Temp->Count=0;
  5369  0FAC  087D               	movf	_Temp,w
  5370  0FAD  3E03               	addlw	3
  5371  0FAE  0086               	movwf	6
  5372  0FAF  3001               	movlw	1	; select bank2/3
  5373  0FB0  0087               	movwf	7
  5374  0FB1  0181               	clrf	1
  5375                           
  5376                           ;OverTemperature_B1.c: 122: setOverTemp_ERROR(1,1);
  5377  0FB2  01AC               	clrf	setOverTemp_ERROR@command
  5378  0FB3  0AAC               	incf	setOverTemp_ERROR@command,f
  5379  0FB4  3001               	movlw	1
  5380  0FB5  3190  200C  318E   	fcall	_setOverTemp_ERROR
  5381                           
  5382                           ;OverTemperature_B1.c: 123: }
  5383                           ;OverTemperature_B1.c: 124: }
  5384  0FB8  2FBF               	goto	l8287
  5385  0FB9                     l8285:	
  5386                           
  5387                           ;OverTemperature_B1.c: 125: else
  5388                           ;OverTemperature_B1.c: 126: {
  5389                           ;OverTemperature_B1.c: 127: Temp->Count=0;
  5390  0FB9  087D               	movf	_Temp,w
  5391  0FBA  3E03               	addlw	3
  5392  0FBB  0086               	movwf	6
  5393  0FBC  3001               	movlw	1	; select bank2/3
  5394  0FBD  0087               	movwf	7
  5395  0FBE  0181               	clrf	1
  5396  0FBF                     l8287:	
  5397                           
  5398                           ;OverTemperature_B1.c: 128: }
  5399                           ;OverTemperature_B1.c: 129: }
  5400                           ;OverTemperature_B1.c: 130: if(Temp->ERROR == 0)
  5401  0FBF  087D               	movf	_Temp,w
  5402  0FC0  0086               	movwf	6
  5403  0FC1  3001               	movlw	1	; select bank2/3
  5404  0FC2  0087               	movwf	7
  5405  0FC3  1881               	btfsc	1,1
  5406  0FC4  2FCA               	goto	l8291
  5407                           
  5408                           ;OverTemperature_B1.c: 131: {
  5409                           ;OverTemperature_B1.c: 132: Temp->Safe=1;
  5410  0FC5  087D               	movf	_Temp,w
  5411  0FC6  0086               	movwf	6
  5412  0FC7  3001               	movlw	1	; select bank2/3
  5413  0FC8  0087               	movwf	7
  5414  0FC9  1601               	bsf	1,4
  5415  0FCA                     l8291:	
  5416                           
  5417                           ;OverTemperature_B1.c: 133: }
  5418                           ;OverTemperature_B1.c: 134: Product->Data[24]=Temp->AD >> 8;
  5419  0FCA  087D               	movf	_Temp,w
  5420  0FCB  3E04               	addlw	4
  5421  0FCC  0086               	movwf	6
  5422  0FCD  3001               	movlw	1	; select bank2/3
  5423  0FCE  0087               	movwf	7
  5424  0FCF  3F40               	moviw [0]fsr1
  5425  0FD0  0020               	movlb	0	; select bank0
  5426  0FD1  00AF               	movwf	??_setTemp_Main
  5427  0FD2  3F41               	moviw [1]fsr1
  5428  0FD3  00B0               	movwf	??_setTemp_Main+1
  5429  0FD4  0830               	movf	??_setTemp_Main+1,w
  5430  0FD5  00B1               	movwf	??_setTemp_Main+2
  5431  0FD6  0021               	movlb	1	; select bank1
  5432  0FD7  086C               	movf	_Product^(0+128),w
  5433  0FD8  3E18               	addlw	24
  5434  0FD9  0086               	movwf	6
  5435  0FDA  3001               	movlw	1	; select bank2/3
  5436  0FDB  0087               	movwf	7
  5437  0FDC  0020               	movlb	0	; select bank0
  5438  0FDD  0831               	movf	??_setTemp_Main+2,w
  5439  0FDE  0081               	movwf	1
  5440                           
  5441                           ;OverTemperature_B1.c: 135: Product->Data[25]=Temp->AD;
  5442  0FDF  087D               	movf	_Temp,w
  5443  0FE0  3E04               	addlw	4
  5444  0FE1  0086               	movwf	6
  5445  0FE2  3001               	movlw	1	; select bank2/3
  5446  0FE3  0087               	movwf	7
  5447  0FE4  0801               	movf	1,w
  5448  0FE5  00AF               	movwf	??_setTemp_Main
  5449  0FE6  0021               	movlb	1	; select bank1
  5450  0FE7  086C               	movf	_Product^(0+128),w
  5451  0FE8  3E19               	addlw	25
  5452  0FE9  0086               	movwf	6
  5453  0FEA  3001               	movlw	1	; select bank2/3
  5454  0FEB  0087               	movwf	7
  5455  0FEC  0020               	movlb	0	; select bank0
  5456  0FED  082F               	movf	??_setTemp_Main,w
  5457  0FEE  0081               	movwf	1
  5458                           
  5459                           ;OverTemperature_B1.c: 136: Temp->ADH[0]=0;
  5460  0FEF  087D               	movf	_Temp,w
  5461  0FF0  3E06               	addlw	6
  5462  0FF1  0086               	movwf	6
  5463  0FF2  3001               	movlw	1	; select bank2/3
  5464  0FF3  0087               	movwf	7
  5465  0FF4  3000               	movlw	0
  5466  0FF5  3FC0               	movwi [0]fsr1
  5467  0FF6  3FC1               	movwi [1]fsr1
  5468                           
  5469                           ;OverTemperature_B1.c: 137: Temp->ADH[1]=0;
  5470  0FF7  087D               	movf	_Temp,w
  5471  0FF8  3E08               	addlw	8
  5472  0FF9  0086               	movwf	6
  5473  0FFA  3001               	movlw	1	; select bank2/3
  5474  0FFB  0087               	movwf	7
  5475  0FFC  3000               	movlw	0
  5476  0FFD  3FC0               	movwi [0]fsr1
  5477  0FFE  3FC1               	movwi [1]fsr1
  5478  0FFF  0008               	return
  5479  1000                     __end_of_setTemp_Main:	
  5480                           
  5481                           	psect	text7
  5482  100C                     __ptext7:	
  5483 ;; *************** function _setOverTemp_ERROR *****************
  5484 ;; Defined at:
  5485 ;;		line 143 in file "G:\Program\PIC\Source_File\OverTemperature_B1.c"
  5486 ;; Parameters:    Size  Location     Type
  5487 ;;  temp            1    wreg     unsigned char 
  5488 ;;  command         1   12[BANK0 ] unsigned char 
  5489 ;; Auto vars:     Size  Location     Type
  5490 ;;  temp            1   14[BANK0 ] unsigned char 
  5491 ;; Return value:  Size  Location     Type
  5492 ;;		None               void
  5493 ;; Registers used:
  5494 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5495 ;; Tracked objects:
  5496 ;;		On entry : 0/0
  5497 ;;		On exit  : 0/0
  5498 ;;		Unchanged: 0/0
  5499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5500 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5501 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5502 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5503 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5504 ;;Total ram usage:        3 bytes
  5505 ;; Hardware stack levels used:    1
  5506 ;; Hardware stack levels required when called:    8
  5507 ;; This function calls:
  5508 ;;		_DimmerLights_ERROR
  5509 ;;		_TempPointSelect
  5510 ;;		_setDimmer_TempERROR
  5511 ;;		_setLED
  5512 ;;		_setRF_Enable
  5513 ;;		_setSw_Enable
  5514 ;; This function is called by:
  5515 ;;		_setTemp_Main
  5516 ;; This function uses a non-reentrant model
  5517 ;;
  5518                           
  5519                           
  5520                           ;psect for function _setOverTemp_ERROR
  5521  100C                     _setOverTemp_ERROR:	
  5522                           
  5523                           ;incstack = 0
  5524                           ; Regs used in _setOverTemp_ERROR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5525                           ;setOverTemp_ERROR@temp stored from wreg
  5526  100C  0020               	movlb	0	; select bank0
  5527  100D  00AE               	movwf	setOverTemp_ERROR@temp
  5528                           
  5529                           ;OverTemperature_B1.c: 145: TempPointSelect(temp);
  5530  100E  082E               	movf	setOverTemp_ERROR@temp,w
  5531  100F  31A1  21BC  3190   	fcall	_TempPointSelect
  5532                           
  5533                           ;OverTemperature_B1.c: 146: if(command)
  5534  1012  0020               	movlb	0	; select bank0
  5535  1013  082C               	movf	setOverTemp_ERROR@command,w
  5536  1014  1903               	btfsc	3,2
  5537  1015  283F               	goto	l7621
  5538                           
  5539                           ;OverTemperature_B1.c: 147: {
  5540                           ;OverTemperature_B1.c: 148: Temp->ERROR=1;
  5541  1016  087D               	movf	_Temp,w
  5542  1017  0086               	movwf	6
  5543  1018  3001               	movlw	1	; select bank2/3
  5544  1019  0087               	movwf	7
  5545  101A  1481               	bsf	1,1
  5546                           
  5547                           ;OverTemperature_B1.c: 149: setDimmer_TempERROR(1,1);
  5548  101B  01A2               	clrf	setDimmer_TempERROR@command
  5549  101C  0AA2               	incf	setDimmer_TempERROR@command,f
  5550  101D  3001               	movlw	1
  5551  101E  31A3  23A4  3190   	fcall	_setDimmer_TempERROR
  5552                           
  5553                           ;OverTemperature_B1.c: 150: DimmerLights_ERROR();
  5554  1021  3191  21B6  3190   	fcall	_DimmerLights_ERROR
  5555                           
  5556                           ;OverTemperature_B1.c: 152: setLED(99,11);
  5557  1024  300B               	movlw	11
  5558  1025  0020               	movlb	0	; select bank0
  5559  1026  00AD               	movwf	??_setOverTemp_ERROR
  5560  1027  082D               	movf	??_setOverTemp_ERROR,w
  5561  1028  00A2               	movwf	setLED@command
  5562  1029  3063               	movlw	99
  5563  102A  319E  2679  3190   	fcall	_setLED
  5564                           
  5565                           ;OverTemperature_B1.c: 155: setSw_Enable(1,0);
  5566  102D  0020               	movlb	0	; select bank0
  5567  102E  01A2               	clrf	setSw_Enable@command
  5568  102F  3001               	movlw	1
  5569  1030  31A3  2359  3190   	fcall	_setSw_Enable
  5570                           
  5571                           ;OverTemperature_B1.c: 158: setSw_Enable(2,0);
  5572  1033  0020               	movlb	0	; select bank0
  5573  1034  01A2               	clrf	setSw_Enable@command
  5574  1035  3002               	movlw	2
  5575  1036  31A3  2359  3190   	fcall	_setSw_Enable
  5576                           
  5577                           ;OverTemperature_B1.c: 165: setRF_Enable(1,0);
  5578  1039  0020               	movlb	0	; select bank0
  5579  103A  01A5               	clrf	setRF_Enable@command
  5580  103B  3001               	movlw	1
  5581  103C  31A7  27DA         	fcall	_setRF_Enable
  5582                           
  5583                           ;OverTemperature_B1.c: 167: }
  5584  103E  0008               	return
  5585  103F                     l7621:	
  5586                           
  5587                           ;OverTemperature_B1.c: 168: else if(command == 0)
  5588  103F  0020               	movlb	0	; select bank0
  5589  1040  08AC               	movf	setOverTemp_ERROR@command,f
  5590  1041  1D03               	skipz
  5591  1042  0008               	return
  5592                           
  5593                           ;OverTemperature_B1.c: 169: {
  5594                           ;OverTemperature_B1.c: 170: Temp->ERROR=0;
  5595  1043  087D               	movf	_Temp,w
  5596  1044  0086               	movwf	6
  5597  1045  3001               	movlw	1	; select bank2/3
  5598  1046  0087               	movwf	7
  5599  1047  1081               	bcf	1,1
  5600                           
  5601                           ;OverTemperature_B1.c: 171: setDimmer_TempERROR(1,0);
  5602  1048  01A2               	clrf	setDimmer_TempERROR@command
  5603  1049  3001               	movlw	1
  5604  104A  31A3  23A4  3190   	fcall	_setDimmer_TempERROR
  5605                           
  5606                           ;OverTemperature_B1.c: 172: Temp->Safe=1;
  5607  104D  087D               	movf	_Temp,w
  5608  104E  0086               	movwf	6
  5609  104F  3001               	movlw	1	; select bank2/3
  5610  1050  0087               	movwf	7
  5611  1051  1601               	bsf	1,4
  5612                           
  5613                           ;OverTemperature_B1.c: 173: setLED(99,10);
  5614  1052  300A               	movlw	10
  5615  1053  0020               	movlb	0	; select bank0
  5616  1054  00AD               	movwf	??_setOverTemp_ERROR
  5617  1055  082D               	movf	??_setOverTemp_ERROR,w
  5618  1056  00A2               	movwf	setLED@command
  5619  1057  3063               	movlw	99
  5620  1058  319E  2679  3190   	fcall	_setLED
  5621                           
  5622                           ;OverTemperature_B1.c: 177: setSw_Enable(1,1);
  5623  105B  0020               	movlb	0	; select bank0
  5624  105C  01A2               	clrf	setSw_Enable@command
  5625  105D  0AA2               	incf	setSw_Enable@command,f
  5626  105E  3001               	movlw	1
  5627  105F  31A3  2359  3190   	fcall	_setSw_Enable
  5628                           
  5629                           ;OverTemperature_B1.c: 181: setSw_Enable(2,1);
  5630  1062  0020               	movlb	0	; select bank0
  5631  1063  01A2               	clrf	setSw_Enable@command
  5632  1064  0AA2               	incf	setSw_Enable@command,f
  5633  1065  3002               	movlw	2
  5634  1066  31A3  2359  3190   	fcall	_setSw_Enable
  5635                           
  5636                           ;OverTemperature_B1.c: 189: setRF_Enable(1,1);
  5637  1069  0020               	movlb	0	; select bank0
  5638  106A  01A5               	clrf	setRF_Enable@command
  5639  106B  0AA5               	incf	setRF_Enable@command,f
  5640  106C  3001               	movlw	1
  5641  106D  31A7  27DA         	fcall	_setRF_Enable
  5642  106F  0008               	return
  5643  1070                     __end_of_setOverTemp_ERROR:	
  5644                           
  5645                           	psect	text8
  5646  23A4                     __ptext8:	
  5647 ;; *************** function _setDimmer_TempERROR *****************
  5648 ;; Defined at:
  5649 ;;		line 531 in file "G:\Program\PIC\Source_File\Dimmer_B1.c"
  5650 ;; Parameters:    Size  Location     Type
  5651 ;;  dimmer          1    wreg     unsigned char 
  5652 ;;  command         1    2[BANK0 ] unsigned char 
  5653 ;; Auto vars:     Size  Location     Type
  5654 ;;  dimmer          1    3[BANK0 ] unsigned char 
  5655 ;; Return value:  Size  Location     Type
  5656 ;;		None               void
  5657 ;; Registers used:
  5658 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5659 ;; Tracked objects:
  5660 ;;		On entry : 0/0
  5661 ;;		On exit  : 0/0
  5662 ;;		Unchanged: 0/0
  5663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5664 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5665 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5667 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5668 ;;Total ram usage:        2 bytes
  5669 ;; Hardware stack levels used:    1
  5670 ;; Hardware stack levels required when called:    5
  5671 ;; This function calls:
  5672 ;;		_DimmerPointSelect
  5673 ;; This function is called by:
  5674 ;;		_setOverTemp_ERROR
  5675 ;; This function uses a non-reentrant model
  5676 ;;
  5677                           
  5678                           
  5679                           ;psect for function _setDimmer_TempERROR
  5680  23A4                     _setDimmer_TempERROR:	
  5681                           
  5682                           ;incstack = 0
  5683                           ; Regs used in _setDimmer_TempERROR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5684                           ;setDimmer_TempERROR@dimmer stored from wreg
  5685  23A4  0020               	movlb	0	; select bank0
  5686  23A5  00A3               	movwf	setDimmer_TempERROR@dimmer
  5687                           
  5688                           ;Dimmer_B1.c: 533: DimmerPointSelect(dimmer);
  5689  23A6  0823               	movf	setDimmer_TempERROR@dimmer,w
  5690  23A7  31A2  2285         	fcall	_DimmerPointSelect
  5691                           
  5692                           ;Dimmer_B1.c: 534: Dimmer->TempERROR=command;
  5693  23A9  0021               	movlb	1	; select bank1
  5694  23AA  083A               	movf	_Dimmer^(0+128),w
  5695  23AB  0086               	movwf	6
  5696  23AC  0187               	clrf	7
  5697  23AD  0020               	movlb	0	; select bank0
  5698  23AE  0822               	movf	setDimmer_TempERROR@command,w
  5699  23AF  1081               	bcf	1,1
  5700  23B0  1D03               	skipz
  5701  23B1  1481               	bsf	1,1
  5702  23B2  0008               	return
  5703  23B3                     __end_of_setDimmer_TempERROR:	
  5704                           
  5705                           	psect	text9
  5706  21AA                     __ptext9:	
  5707 ;; *************** function _Temp_Initialization *****************
  5708 ;; Defined at:
  5709 ;;		line 22 in file "G:\Program\PIC\Source_File\OverTemperature_B1.c"
  5710 ;; Parameters:    Size  Location     Type
  5711 ;;		None
  5712 ;; Auto vars:     Size  Location     Type
  5713 ;;		None
  5714 ;; Return value:  Size  Location     Type
  5715 ;;		None               void
  5716 ;; Registers used:
  5717 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5718 ;; Tracked objects:
  5719 ;;		On entry : 0/0
  5720 ;;		On exit  : 0/0
  5721 ;;		Unchanged: 0/0
  5722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5723 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5724 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5726 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5727 ;;Total ram usage:        0 bytes
  5728 ;; Hardware stack levels used:    1
  5729 ;; Hardware stack levels required when called:    6
  5730 ;; This function calls:
  5731 ;;		_setTemp_Initialization
  5732 ;; This function is called by:
  5733 ;;		_main
  5734 ;; This function uses a non-reentrant model
  5735 ;;
  5736                           
  5737                           
  5738                           ;psect for function _Temp_Initialization
  5739  21AA                     _Temp_Initialization:	
  5740                           
  5741                           ;OverTemperature_B1.c: 25: setTemp_Initialization(1);
  5742                           
  5743                           ;incstack = 0
  5744                           ; Regs used in _Temp_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5745  21AA  3001               	movlw	1
  5746  21AB  31A2  224A         	fcall	_setTemp_Initialization
  5747  21AD  0008               	return
  5748  21AE                     __end_of_Temp_Initialization:	
  5749                           
  5750                           	psect	text10
  5751  224A                     __ptext10:	
  5752 ;; *************** function _setTemp_Initialization *****************
  5753 ;; Defined at:
  5754 ;;		line 62 in file "G:\Program\PIC\Source_File\OverTemperature_B1.c"
  5755 ;; Parameters:    Size  Location     Type
  5756 ;;  temp            1    wreg     unsigned char 
  5757 ;; Auto vars:     Size  Location     Type
  5758 ;;  temp            1    1[BANK0 ] unsigned char 
  5759 ;; Return value:  Size  Location     Type
  5760 ;;		None               void
  5761 ;; Registers used:
  5762 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5763 ;; Tracked objects:
  5764 ;;		On entry : 0/0
  5765 ;;		On exit  : 0/0
  5766 ;;		Unchanged: 0/0
  5767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5768 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5769 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5771 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5772 ;;Total ram usage:        1 bytes
  5773 ;; Hardware stack levels used:    1
  5774 ;; Hardware stack levels required when called:    5
  5775 ;; This function calls:
  5776 ;;		_TempPointSelect
  5777 ;; This function is called by:
  5778 ;;		_Temp_Initialization
  5779 ;; This function uses a non-reentrant model
  5780 ;;
  5781                           
  5782                           
  5783                           ;psect for function _setTemp_Initialization
  5784  224A                     _setTemp_Initialization:	
  5785                           
  5786                           ;incstack = 0
  5787                           ; Regs used in _setTemp_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
  5788                           ;setTemp_Initialization@temp stored from wreg
  5789  224A  0020               	movlb	0	; select bank0
  5790  224B  00A1               	movwf	setTemp_Initialization@temp
  5791                           
  5792                           ;OverTemperature_B1.c: 64: TempPointSelect(temp);
  5793  224C  0821               	movf	setTemp_Initialization@temp,w
  5794  224D  31A1  21BC         	fcall	_TempPointSelect
  5795                           
  5796                           ;OverTemperature_B1.c: 65: Temp->Safe=1;
  5797  224F  087D               	movf	_Temp,w
  5798  2250  0086               	movwf	6
  5799  2251  3001               	movlw	1	; select bank2/3
  5800  2252  0087               	movwf	7
  5801  2253  1601               	bsf	1,4
  5802  2254  0008               	return
  5803  2255                     __end_of_setTemp_Initialization:	
  5804                           
  5805                           	psect	text11
  5806  2202                     __ptext11:	
  5807 ;; *************** function _Switch_Main *****************
  5808 ;; Defined at:
  5809 ;;		line 62 in file "G:\Program\PIC\Source_File\Switch_B1.c"
  5810 ;; Parameters:    Size  Location     Type
  5811 ;;		None
  5812 ;; Auto vars:     Size  Location     Type
  5813 ;;		None
  5814 ;; Return value:  Size  Location     Type
  5815 ;;		None               void
  5816 ;; Registers used:
  5817 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5818 ;; Tracked objects:
  5819 ;;		On entry : 0/0
  5820 ;;		On exit  : 0/0
  5821 ;;		Unchanged: 0/0
  5822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5823 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5824 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5826 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5827 ;;Total ram usage:        0 bytes
  5828 ;; Hardware stack levels used:    1
  5829 ;; Hardware stack levels required when called:    8
  5830 ;; This function calls:
  5831 ;;		_setSw_Main
  5832 ;; This function is called by:
  5833 ;;		_main
  5834 ;; This function uses a non-reentrant model
  5835 ;;
  5836                           
  5837                           
  5838                           ;psect for function _Switch_Main
  5839  2202                     _Switch_Main:	
  5840                           
  5841                           ;Switch_B1.c: 65: setSw_Main(1);
  5842                           
  5843                           ;incstack = 0
  5844                           ; Regs used in _Switch_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5845  2202  3001               	movlw	1
  5846  2203  3186  267A  31A2   	fcall	_setSw_Main
  5847                           
  5848                           ;Switch_B1.c: 69: setSw_Main(2);
  5849  2206  3002               	movlw	2
  5850  2207  3186  267A         	fcall	_setSw_Main
  5851  2209  0008               	return
  5852  220A                     __end_of_Switch_Main:	
  5853                           
  5854                           	psect	text12
  5855  067A                     __ptext12:	
  5856 ;; *************** function _setSw_Main *****************
  5857 ;; Defined at:
  5858 ;;		line 98 in file "G:\Program\PIC\Source_File\Switch_B1.c"
  5859 ;; Parameters:    Size  Location     Type
  5860 ;;  sw              1    wreg     unsigned char 
  5861 ;; Auto vars:     Size  Location     Type
  5862 ;;  sw              1   15[BANK0 ] unsigned char 
  5863 ;; Return value:  Size  Location     Type
  5864 ;;		None               void
  5865 ;; Registers used:
  5866 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5867 ;; Tracked objects:
  5868 ;;		On entry : 0/0
  5869 ;;		On exit  : 0/0
  5870 ;;		Unchanged: 0/0
  5871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5873 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5874 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5875 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5876 ;;Total ram usage:        5 bytes
  5877 ;; Hardware stack levels used:    1
  5878 ;; Hardware stack levels required when called:    7
  5879 ;; This function calls:
  5880 ;;		_SwPointSelect
  5881 ;;		_Sw_DimmerAdjFunc
  5882 ;;		_Sw_DimmerOffFunc
  5883 ;;		_Sw_DimmerOnFunc
  5884 ;;		_setBuz
  5885 ;;		_setRF_Learn
  5886 ;; This function is called by:
  5887 ;;		_Switch_Main
  5888 ;; This function uses a non-reentrant model
  5889 ;;
  5890                           
  5891                           
  5892                           ;psect for function _setSw_Main
  5893  067A                     _setSw_Main:	
  5894                           
  5895                           ;incstack = 0
  5896                           ; Regs used in _setSw_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5897                           ;setSw_Main@sw stored from wreg
  5898  067A  0020               	movlb	0	; select bank0
  5899  067B  00AF               	movwf	setSw_Main@sw
  5900                           
  5901                           ;Switch_B1.c: 100: SwPointSelect(sw);
  5902  067C  082F               	movf	setSw_Main@sw,w
  5903  067D  31A4  24AA  3186   	fcall	_SwPointSelect
  5904                           
  5905                           ;Switch_B1.c: 117: if(sw == 1)
  5906  0680  0020               	movlb	0	; select bank0
  5907  0681  082F               	movf	setSw_Main@sw,w
  5908  0682  3A01               	xorlw	1
  5909  0683  1D03               	skipz
  5910  0684  2E91               	goto	l8443
  5911                           
  5912                           ;Switch_B1.c: 118: {
  5913                           ;Switch_B1.c: 119: Sw->Touch=(RA0 || RB1)?1:0;
  5914  0685  01AD               	clrf	_setSw_Main$4431
  5915  0686  0AAD               	incf	_setSw_Main$4431,f
  5916  0687  1C0C               	btfss	12,0	;volatile
  5917  0688  188D               	btfsc	13,1	;volatile
  5918  0689  2E8B               	goto	l8441
  5919  068A  01AD               	clrf	_setSw_Main$4431
  5920  068B                     l8441:	
  5921  068B  086E               	movf	_Sw,w
  5922  068C  0086               	movwf	6
  5923  068D  3001               	movlw	1	; select bank2/3
  5924  068E  0087               	movwf	7
  5925  068F  082D               	movf	_setSw_Main$4431,w
  5926  0690  2EA0               	goto	L2
  5927  0691                     l8443:	
  5928                           ;Switch_B1.c: 120: }
  5929                           
  5930                           
  5931                           ;Switch_B1.c: 121: else if(sw == 2)
  5932  0691  082F               	movf	setSw_Main@sw,w
  5933  0692  3A02               	xorlw	2
  5934  0693  1D03               	skipz
  5935  0694  2EA3               	goto	l8453
  5936                           
  5937                           ;Switch_B1.c: 122: {
  5938                           ;Switch_B1.c: 123: Sw->Touch=(RA6 || RA4)?1:0;
  5939  0695  01AE               	clrf	_setSw_Main$4432
  5940  0696  0AAE               	incf	_setSw_Main$4432,f
  5941  0697  1F0C               	btfss	12,6	;volatile
  5942  0698  1A0C               	btfsc	12,4	;volatile
  5943  0699  2E9B               	goto	l8451
  5944  069A  01AE               	clrf	_setSw_Main$4432
  5945  069B                     l8451:	
  5946  069B  086E               	movf	_Sw,w
  5947  069C  0086               	movwf	6
  5948  069D  3001               	movlw	1	; select bank2/3
  5949  069E  0087               	movwf	7
  5950  069F  082E               	movf	_setSw_Main$4432,w
  5951  06A0                     L2:	
  5952  06A0  1081               	bcf	1,1
  5953  06A1  1D03               	skipz
  5954  06A2  1481               	bsf	1,1
  5955  06A3                     l8453:	
  5956                           
  5957                           ;Switch_B1.c: 124: }
  5958                           ;Switch_B1.c: 131: if(Sw->Enable)
  5959  06A3  086E               	movf	_Sw,w
  5960  06A4  0086               	movwf	6
  5961  06A5  3001               	movlw	1	; select bank2/3
  5962  06A6  0087               	movwf	7
  5963  06A7  1C01               	btfss	1,0
  5964  06A8  0008               	return
  5965                           
  5966                           ;Switch_B1.c: 132: {
  5967                           ;Switch_B1.c: 133: if(Sw->Touch)
  5968  06A9  086E               	movf	_Sw,w
  5969  06AA  0086               	movwf	6
  5970  06AB  3001               	movlw	1	; select bank2/3
  5971  06AC  0087               	movwf	7
  5972  06AD  1C81               	btfss	1,1
  5973  06AE  2F7A               	goto	l8501
  5974                           
  5975                           ;Switch_B1.c: 134: {
  5976                           ;Switch_B1.c: 135: if(!Sw->Debounce)
  5977  06AF  086E               	movf	_Sw,w
  5978  06B0  0086               	movwf	6
  5979  06B1  3001               	movlw	1	; select bank2/3
  5980  06B2  0087               	movwf	7
  5981  06B3  1901               	btfsc	1,2
  5982  06B4  2EE1               	goto	l8471
  5983                           
  5984                           ;Switch_B1.c: 136: {
  5985                           ;Switch_B1.c: 137: Sw->DebounceTime++;
  5986  06B5  3001               	movlw	1
  5987  06B6  00AB               	movwf	??_setSw_Main
  5988  06B7  086E               	movf	_Sw,w
  5989  06B8  3E02               	addlw	2
  5990  06B9  0086               	movwf	6
  5991  06BA  3001               	movlw	1	; select bank2/3
  5992  06BB  0087               	movwf	7
  5993  06BC  082B               	movf	??_setSw_Main,w
  5994  06BD  0781               	addwf	1,f
  5995                           
  5996                           ;Switch_B1.c: 138: if(Sw->DebounceTime >= 5)
  5997  06BE  086E               	movf	_Sw,w
  5998  06BF  3E02               	addlw	2
  5999  06C0  0086               	movwf	6
  6000  06C1  3001               	movlw	1	; select bank2/3
  6001  06C2  0087               	movwf	7
  6002  06C3  3005               	movlw	5
  6003  06C4  0201               	subwf	1,w
  6004  06C5  1C03               	skipc
  6005  06C6  0008               	return
  6006                           
  6007                           ;Switch_B1.c: 139: {
  6008                           ;Switch_B1.c: 140: Sw->DebounceTime=0;
  6009  06C7  086E               	movf	_Sw,w
  6010  06C8  3E02               	addlw	2
  6011  06C9  0086               	movwf	6
  6012  06CA  3001               	movlw	1	; select bank2/3
  6013  06CB  0087               	movwf	7
  6014  06CC  0181               	clrf	1
  6015                           
  6016                           ;Switch_B1.c: 141: Sw->Debounce=1;
  6017  06CD  086E               	movf	_Sw,w
  6018  06CE  0086               	movwf	6
  6019  06CF  3001               	movlw	1	; select bank2/3
  6020  06D0  0087               	movwf	7
  6021  06D1  1501               	bsf	1,2
  6022                           
  6023                           ;Switch_B1.c: 142: setBuz(1,1,100);
  6024  06D2  01A6               	clrf	setBuz@count
  6025  06D3  0AA6               	incf	setBuz@count,f
  6026  06D4  3064               	movlw	100
  6027  06D5  00A7               	movwf	setBuz@time
  6028  06D6  3000               	movlw	0
  6029  06D7  00A8               	movwf	setBuz@time+1
  6030  06D8  3001               	movlw	1
  6031  06D9  3195  25AB  3186   	fcall	_setBuz
  6032                           
  6033                           ;Switch_B1.c: 145: Sw_DimmerOnFunc(sw);
  6034  06DC  0020               	movlb	0	; select bank0
  6035  06DD  082F               	movf	setSw_Main@sw,w
  6036  06DE  319C  2496         	fcall	_Sw_DimmerOnFunc
  6037                           
  6038                           ;Switch_B1.c: 148: }
  6039                           ;Switch_B1.c: 149: }
  6040  06E0  0008               	return
  6041  06E1                     l8471:	
  6042                           
  6043                           ;Switch_B1.c: 150: else
  6044                           ;Switch_B1.c: 151: {
  6045                           ;Switch_B1.c: 152: if(!Sw->Hold1)
  6046  06E1  0020               	movlb	0	; select bank0
  6047  06E2  086E               	movf	_Sw,w
  6048  06E3  0086               	movwf	6
  6049  06E4  3001               	movlw	1	; select bank2/3
  6050  06E5  0087               	movwf	7
  6051  06E6  1981               	btfsc	1,3
  6052  06E7  2F13               	goto	l8481
  6053                           
  6054                           ;Switch_B1.c: 153: {
  6055                           ;Switch_B1.c: 154: Sw->Hold1Time++;
  6056  06E8  086E               	movf	_Sw,w
  6057  06E9  3E03               	addlw	3
  6058  06EA  0086               	movwf	6
  6059  06EB  3001               	movlw	1	; select bank2/3
  6060  06EC  0087               	movwf	7
  6061  06ED  3001               	movlw	1
  6062  06EE  0781               	addwf	1,f
  6063  06EF  3141               	addfsr 1,1
  6064  06F0  1803               	skipnc
  6065  06F1  0A81               	incf	1,f
  6066                           
  6067                           ;Switch_B1.c: 155: if(Sw->Hold1Time >= 150)
  6068  06F2  086E               	movf	_Sw,w
  6069  06F3  3E03               	addlw	3
  6070  06F4  0086               	movwf	6
  6071  06F5  3001               	movlw	1	; select bank2/3
  6072  06F6  0087               	movwf	7
  6073  06F7  3F40               	moviw [0]fsr1
  6074  06F8  00AB               	movwf	??_setSw_Main
  6075  06F9  3F41               	moviw [1]fsr1
  6076  06FA  00AC               	movwf	??_setSw_Main+1
  6077  06FB  3000               	movlw	0
  6078  06FC  022C               	subwf	??_setSw_Main+1,w
  6079  06FD  3096               	movlw	150
  6080  06FE  1903               	skipnz
  6081  06FF  022B               	subwf	??_setSw_Main,w
  6082  0700  1C03               	skipc
  6083  0701  0008               	return
  6084                           
  6085                           ;Switch_B1.c: 156: {
  6086                           ;Switch_B1.c: 157: Sw->Hold1Time=0;
  6087  0702  086E               	movf	_Sw,w
  6088  0703  3E03               	addlw	3
  6089  0704  0086               	movwf	6
  6090  0705  3001               	movlw	1	; select bank2/3
  6091  0706  0087               	movwf	7
  6092  0707  3000               	movlw	0
  6093  0708  3FC0               	movwi [0]fsr1
  6094  0709  3FC1               	movwi [1]fsr1
  6095                           
  6096                           ;Switch_B1.c: 158: Sw->Hold1=1;
  6097  070A  086E               	movf	_Sw,w
  6098  070B  0086               	movwf	6
  6099  070C  3001               	movlw	1	; select bank2/3
  6100  070D  0087               	movwf	7
  6101  070E  1581               	bsf	1,3
  6102                           
  6103                           ;Switch_B1.c: 161: Sw_DimmerAdjFunc(sw);
  6104  070F  082F               	movf	setSw_Main@sw,w
  6105  0710  3198  2074         	fcall	_Sw_DimmerAdjFunc
  6106                           
  6107                           ;Switch_B1.c: 164: }
  6108                           ;Switch_B1.c: 165: }
  6109  0712  0008               	return
  6110  0713                     l8481:	
  6111                           
  6112                           ;Switch_B1.c: 166: else
  6113                           ;Switch_B1.c: 167: {
  6114                           ;Switch_B1.c: 168: if(!Sw->Hold2)
  6115  0713  0020               	movlb	0	; select bank0
  6116  0714  086E               	movf	_Sw,w
  6117  0715  0086               	movwf	6
  6118  0716  3001               	movlw	1	; select bank2/3
  6119  0717  0087               	movwf	7
  6120  0718  1A01               	btfsc	1,4
  6121  0719  2F47               	goto	l8491
  6122                           
  6123                           ;Switch_B1.c: 169: {
  6124                           ;Switch_B1.c: 170: Sw->Hold2Time++;
  6125  071A  086E               	movf	_Sw,w
  6126  071B  3E05               	addlw	5
  6127  071C  0086               	movwf	6
  6128  071D  3001               	movlw	1	; select bank2/3
  6129  071E  0087               	movwf	7
  6130  071F  3001               	movlw	1
  6131  0720  0781               	addwf	1,f
  6132  0721  3141               	addfsr 1,1
  6133  0722  1803               	skipnc
  6134  0723  0A81               	incf	1,f
  6135                           
  6136                           ;Switch_B1.c: 171: if(Sw->Hold2Time >= 150)
  6137  0724  086E               	movf	_Sw,w
  6138  0725  3E05               	addlw	5
  6139  0726  0086               	movwf	6
  6140  0727  3001               	movlw	1	; select bank2/3
  6141  0728  0087               	movwf	7
  6142  0729  3F40               	moviw [0]fsr1
  6143  072A  00AB               	movwf	??_setSw_Main
  6144  072B  3F41               	moviw [1]fsr1
  6145  072C  00AC               	movwf	??_setSw_Main+1
  6146  072D  3000               	movlw	0
  6147  072E  022C               	subwf	??_setSw_Main+1,w
  6148  072F  3096               	movlw	150
  6149  0730  1903               	skipnz
  6150  0731  022B               	subwf	??_setSw_Main,w
  6151  0732  1C03               	skipc
  6152  0733  0008               	return
  6153                           
  6154                           ;Switch_B1.c: 172: {
  6155                           ;Switch_B1.c: 173: Sw->Hold2Time=0;
  6156  0734  086E               	movf	_Sw,w
  6157  0735  3E05               	addlw	5
  6158  0736  0086               	movwf	6
  6159  0737  3001               	movlw	1	; select bank2/3
  6160  0738  0087               	movwf	7
  6161  0739  3000               	movlw	0
  6162  073A  3FC0               	movwi [0]fsr1
  6163  073B  3FC1               	movwi [1]fsr1
  6164                           
  6165                           ;Switch_B1.c: 174: Sw->Hold2=1;
  6166  073C  086E               	movf	_Sw,w
  6167  073D  0086               	movwf	6
  6168  073E  3001               	movlw	1	; select bank2/3
  6169  073F  0087               	movwf	7
  6170  0740  1601               	bsf	1,4
  6171                           
  6172                           ;Switch_B1.c: 176: setRF_Learn(1,1);
  6173  0741  01A2               	clrf	setRF_Learn@command
  6174  0742  0AA2               	incf	setRF_Learn@command,f
  6175  0743  3001               	movlw	1
  6176  0744  31A3  2395         	fcall	_setRF_Learn
  6177                           
  6178                           ;Switch_B1.c: 184: }
  6179                           ;Switch_B1.c: 185: }
  6180  0746  0008               	return
  6181  0747                     l8491:	
  6182                           
  6183                           ;Switch_B1.c: 186: else
  6184                           ;Switch_B1.c: 187: {
  6185                           ;Switch_B1.c: 188: if(!Sw->Hold3)
  6186  0747  0020               	movlb	0	; select bank0
  6187  0748  086E               	movf	_Sw,w
  6188  0749  0086               	movwf	6
  6189  074A  3001               	movlw	1	; select bank2/3
  6190  074B  0087               	movwf	7
  6191  074C  1A81               	btfsc	1,5
  6192  074D  0008               	return
  6193                           
  6194                           ;Switch_B1.c: 189: {
  6195                           ;Switch_B1.c: 190: Sw->Hold3Time++;
  6196  074E  086E               	movf	_Sw,w
  6197  074F  3E07               	addlw	7
  6198  0750  0086               	movwf	6
  6199  0751  3001               	movlw	1	; select bank2/3
  6200  0752  0087               	movwf	7
  6201  0753  3001               	movlw	1
  6202  0754  0781               	addwf	1,f
  6203  0755  3141               	addfsr 1,1
  6204  0756  1803               	skipnc
  6205  0757  0A81               	incf	1,f
  6206                           
  6207                           ;Switch_B1.c: 191: if(Sw->Hold3Time >= 300)
  6208  0758  086E               	movf	_Sw,w
  6209  0759  3E07               	addlw	7
  6210  075A  0086               	movwf	6
  6211  075B  3001               	movlw	1	; select bank2/3
  6212  075C  0087               	movwf	7
  6213  075D  3F40               	moviw [0]fsr1
  6214  075E  00AB               	movwf	??_setSw_Main
  6215  075F  3F41               	moviw [1]fsr1
  6216  0760  00AC               	movwf	??_setSw_Main+1
  6217  0761  3001               	movlw	1
  6218  0762  022C               	subwf	??_setSw_Main+1,w
  6219  0763  302C               	movlw	44
  6220  0764  1903               	skipnz
  6221  0765  022B               	subwf	??_setSw_Main,w
  6222  0766  1C03               	skipc
  6223  0767  0008               	return
  6224                           
  6225                           ;Switch_B1.c: 192: {
  6226                           ;Switch_B1.c: 193: Sw->Hold3Time=0;
  6227  0768  086E               	movf	_Sw,w
  6228  0769  3E07               	addlw	7
  6229  076A  0086               	movwf	6
  6230  076B  3001               	movlw	1	; select bank2/3
  6231  076C  0087               	movwf	7
  6232  076D  3000               	movlw	0
  6233  076E  3FC0               	movwi [0]fsr1
  6234  076F  3FC1               	movwi [1]fsr1
  6235                           
  6236                           ;Switch_B1.c: 194: Sw->Hold3=1;
  6237  0770  086E               	movf	_Sw,w
  6238  0771  0086               	movwf	6
  6239  0772  3001               	movlw	1	; select bank2/3
  6240  0773  0087               	movwf	7
  6241  0774  1681               	bsf	1,5
  6242                           
  6243                           ;Switch_B1.c: 196: setRF_Learn(1,0);
  6244  0775  01A2               	clrf	setRF_Learn@command
  6245  0776  3001               	movlw	1
  6246  0777  31A3  2395         	fcall	_setRF_Learn
  6247                           
  6248                           ;Switch_B1.c: 198: }
  6249                           ;Switch_B1.c: 199: }
  6250                           ;Switch_B1.c: 200: }
  6251                           ;Switch_B1.c: 201: }
  6252                           ;Switch_B1.c: 202: }
  6253                           ;Switch_B1.c: 203: }
  6254  0779  0008               	return
  6255  077A                     l8501:	
  6256                           
  6257                           ;Switch_B1.c: 204: else
  6258                           ;Switch_B1.c: 205: {
  6259                           ;Switch_B1.c: 206: if(Sw->Debounce)
  6260  077A  0020               	movlb	0	; select bank0
  6261  077B  086E               	movf	_Sw,w
  6262  077C  0086               	movwf	6
  6263  077D  3001               	movlw	1	; select bank2/3
  6264  077E  0087               	movwf	7
  6265  077F  1D01               	btfss	1,2
  6266  0780  0008               	return
  6267                           
  6268                           ;Switch_B1.c: 207: {
  6269                           ;Switch_B1.c: 208: Sw->DebounceTime++;
  6270  0781  3001               	movlw	1
  6271  0782  00AB               	movwf	??_setSw_Main
  6272  0783  086E               	movf	_Sw,w
  6273  0784  3E02               	addlw	2
  6274  0785  0086               	movwf	6
  6275  0786  3001               	movlw	1	; select bank2/3
  6276  0787  0087               	movwf	7
  6277  0788  082B               	movf	??_setSw_Main,w
  6278  0789  0781               	addwf	1,f
  6279                           
  6280                           ;Switch_B1.c: 209: if(Sw->DebounceTime >= 5)
  6281  078A  086E               	movf	_Sw,w
  6282  078B  3E02               	addlw	2
  6283  078C  0086               	movwf	6
  6284  078D  3001               	movlw	1	; select bank2/3
  6285  078E  0087               	movwf	7
  6286  078F  3005               	movlw	5
  6287  0790  0201               	subwf	1,w
  6288  0791  1C03               	skipc
  6289  0792  0008               	return
  6290                           
  6291                           ;Switch_B1.c: 210: {
  6292                           ;Switch_B1.c: 211: Sw->DebounceTime=0;
  6293  0793  086E               	movf	_Sw,w
  6294  0794  3E02               	addlw	2
  6295  0795  0086               	movwf	6
  6296  0796  3001               	movlw	1	; select bank2/3
  6297  0797  0087               	movwf	7
  6298  0798  0181               	clrf	1
  6299                           
  6300                           ;Switch_B1.c: 212: Sw->Debounce=0;
  6301  0799  086E               	movf	_Sw,w
  6302  079A  0086               	movwf	6
  6303  079B  3001               	movlw	1	; select bank2/3
  6304  079C  0087               	movwf	7
  6305  079D  1101               	bcf	1,2
  6306                           
  6307                           ;Switch_B1.c: 213: Sw->Hold1Time=0;
  6308  079E  086E               	movf	_Sw,w
  6309  079F  3E03               	addlw	3
  6310  07A0  0086               	movwf	6
  6311  07A1  3001               	movlw	1	; select bank2/3
  6312  07A2  0087               	movwf	7
  6313  07A3  3000               	movlw	0
  6314  07A4  3FC0               	movwi [0]fsr1
  6315  07A5  3FC1               	movwi [1]fsr1
  6316                           
  6317                           ;Switch_B1.c: 214: Sw->Hold1=0;
  6318  07A6  086E               	movf	_Sw,w
  6319  07A7  0086               	movwf	6
  6320  07A8  3001               	movlw	1	; select bank2/3
  6321  07A9  0087               	movwf	7
  6322  07AA  1181               	bcf	1,3
  6323                           
  6324                           ;Switch_B1.c: 215: Sw->Hold2Time=0;
  6325  07AB  086E               	movf	_Sw,w
  6326  07AC  3E05               	addlw	5
  6327  07AD  0086               	movwf	6
  6328  07AE  3001               	movlw	1	; select bank2/3
  6329  07AF  0087               	movwf	7
  6330  07B0  3000               	movlw	0
  6331  07B1  3FC0               	movwi [0]fsr1
  6332  07B2  3FC1               	movwi [1]fsr1
  6333                           
  6334                           ;Switch_B1.c: 216: Sw->Hold2=0;
  6335  07B3  086E               	movf	_Sw,w
  6336  07B4  0086               	movwf	6
  6337  07B5  3001               	movlw	1	; select bank2/3
  6338  07B6  0087               	movwf	7
  6339  07B7  1201               	bcf	1,4
  6340                           
  6341                           ;Switch_B1.c: 217: Sw->Hold3Time=0;
  6342  07B8  086E               	movf	_Sw,w
  6343  07B9  3E07               	addlw	7
  6344  07BA  0086               	movwf	6
  6345  07BB  3001               	movlw	1	; select bank2/3
  6346  07BC  0087               	movwf	7
  6347  07BD  3000               	movlw	0
  6348  07BE  3FC0               	movwi [0]fsr1
  6349  07BF  3FC1               	movwi [1]fsr1
  6350                           
  6351                           ;Switch_B1.c: 218: Sw->Hold3=0;
  6352  07C0  086E               	movf	_Sw,w
  6353  07C1  0086               	movwf	6
  6354  07C2  3001               	movlw	1	; select bank2/3
  6355  07C3  0087               	movwf	7
  6356  07C4  1281               	bcf	1,5
  6357                           
  6358                           ;Switch_B1.c: 219: setRF_Learn(1,0);
  6359  07C5  01A2               	clrf	setRF_Learn@command
  6360  07C6  3001               	movlw	1
  6361  07C7  31A3  2395  3186   	fcall	_setRF_Learn
  6362                           
  6363                           ;Switch_B1.c: 222: Sw_DimmerOffFunc(sw);
  6364  07CA  0020               	movlb	0	; select bank0
  6365  07CB  082F               	movf	setSw_Main@sw,w
  6366  07CC  3192  2229         	fcall	_Sw_DimmerOffFunc
  6367  07CE  0008               	return
  6368  07CF                     __end_of_setSw_Main:	
  6369                           
  6370                           	psect	text13
  6371  2395                     __ptext13:	
  6372 ;; *************** function _setRF_Learn *****************
  6373 ;; Defined at:
  6374 ;;		line 31 in file "G:\Program\PIC\Source_File\RF_Control_B1.c"
  6375 ;; Parameters:    Size  Location     Type
  6376 ;;  rf              1    wreg     unsigned char 
  6377 ;;  command         1    2[BANK0 ] unsigned char 
  6378 ;; Auto vars:     Size  Location     Type
  6379 ;;  rf              1    3[BANK0 ] unsigned char 
  6380 ;; Return value:  Size  Location     Type
  6381 ;;		None               void
  6382 ;; Registers used:
  6383 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6384 ;; Tracked objects:
  6385 ;;		On entry : 0/0
  6386 ;;		On exit  : 0/0
  6387 ;;		Unchanged: 0/0
  6388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6389 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6390 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6392 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6393 ;;Total ram usage:        2 bytes
  6394 ;; Hardware stack levels used:    1
  6395 ;; Hardware stack levels required when called:    5
  6396 ;; This function calls:
  6397 ;;		_RfPointSelect
  6398 ;; This function is called by:
  6399 ;;		_setSw_Main
  6400 ;; This function uses a non-reentrant model
  6401 ;;
  6402                           
  6403                           
  6404                           ;psect for function _setRF_Learn
  6405  2395                     _setRF_Learn:	
  6406                           
  6407                           ;incstack = 0
  6408                           ; Regs used in _setRF_Learn: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6409                           ;setRF_Learn@rf stored from wreg
  6410  2395  0020               	movlb	0	; select bank0
  6411  2396  00A3               	movwf	setRF_Learn@rf
  6412                           
  6413                           ;RF_Control_B1.c: 33: RfPointSelect(rf);
  6414  2397  0823               	movf	setRF_Learn@rf,w
  6415  2398  31A2  2279         	fcall	_RfPointSelect
  6416                           
  6417                           ;RF_Control_B1.c: 34: RF->Learn=command;
  6418  239A  0021               	movlb	1	; select bank1
  6419  239B  083E               	movf	_RF^(0+128),w
  6420  239C  0086               	movwf	6
  6421  239D  0187               	clrf	7
  6422  239E  0020               	movlb	0	; select bank0
  6423  239F  0822               	movf	setRF_Learn@command,w
  6424  23A0  1301               	bcf	1,6
  6425  23A1  1D03               	skipz
  6426  23A2  1701               	bsf	1,6
  6427  23A3  0008               	return
  6428  23A4                     __end_of_setRF_Learn:	
  6429                           
  6430                           	psect	text14
  6431  1C96                     __ptext14:	
  6432 ;; *************** function _Sw_DimmerOnFunc *****************
  6433 ;; Defined at:
  6434 ;;		line 231 in file "G:\Program\PIC\Source_File\Switch_B1.c"
  6435 ;; Parameters:    Size  Location     Type
  6436 ;;  sw              1    wreg     unsigned char 
  6437 ;; Auto vars:     Size  Location     Type
  6438 ;;  sw              1    6[BANK0 ] unsigned char 
  6439 ;; Return value:  Size  Location     Type
  6440 ;;		None               void
  6441 ;; Registers used:
  6442 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6443 ;; Tracked objects:
  6444 ;;		On entry : 0/0
  6445 ;;		On exit  : 0/0
  6446 ;;		Unchanged: 0/0
  6447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6448 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6449 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6451 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6452 ;;Total ram usage:        1 bytes
  6453 ;; Hardware stack levels used:    1
  6454 ;; Hardware stack levels required when called:    6
  6455 ;; This function calls:
  6456 ;;		_setDimmerLights_Switch
  6457 ;;		_setDimmerLights_Trigger
  6458 ;;		_setRFSW_Status
  6459 ;;		_setRF_DimmerLights
  6460 ;;		_setTxData
  6461 ;; This function is called by:
  6462 ;;		_setSw_Main
  6463 ;; This function uses a non-reentrant model
  6464 ;;
  6465                           
  6466                           
  6467                           ;psect for function _Sw_DimmerOnFunc
  6468  1C96                     _Sw_DimmerOnFunc:	
  6469                           
  6470                           ;incstack = 0
  6471                           ; Regs used in _Sw_DimmerOnFunc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6472                           ;Sw_DimmerOnFunc@sw stored from wreg
  6473  1C96  0020               	movlb	0	; select bank0
  6474  1C97  00A6               	movwf	Sw_DimmerOnFunc@sw
  6475                           
  6476                           ;Switch_B1.c: 233: Sw->Flag=1;
  6477  1C98  086E               	movf	_Sw,w
  6478  1C99  0086               	movwf	6
  6479  1C9A  3001               	movlw	1	; select bank2/3
  6480  1C9B  0087               	movwf	7
  6481  1C9C  1781               	bsf	1,7
  6482                           
  6483                           ;Switch_B1.c: 234: if(!Sw->Status)
  6484  1C9D  086E               	movf	_Sw,w
  6485  1C9E  0086               	movwf	6
  6486  1C9F  3001               	movlw	1	; select bank2/3
  6487  1CA0  0087               	movwf	7
  6488  1CA1  1B01               	btfsc	1,6
  6489  1CA2  2CCD               	goto	l7719
  6490                           
  6491                           ;Switch_B1.c: 235: {
  6492                           ;Switch_B1.c: 236: Sw->Status=1;
  6493  1CA3  086E               	movf	_Sw,w
  6494  1CA4  0086               	movwf	6
  6495  1CA5  3001               	movlw	1	; select bank2/3
  6496  1CA6  0087               	movwf	7
  6497  1CA7  1701               	bsf	1,6
  6498                           
  6499                           ;Switch_B1.c: 237: setRFSW_Status(sw,1);
  6500  1CA8  01A2               	clrf	setRFSW_Status@command
  6501  1CA9  0AA2               	incf	setRFSW_Status@command,f
  6502  1CAA  0826               	movf	Sw_DimmerOnFunc@sw,w
  6503  1CAB  31A3  230E  319C   	fcall	_setRFSW_Status
  6504                           
  6505                           ;Switch_B1.c: 239: setDimmerLights_Trigger(sw,1);
  6506  1CAE  0020               	movlb	0	; select bank0
  6507  1CAF  01A2               	clrf	setDimmerLights_Trigger@command
  6508  1CB0  0AA2               	incf	setDimmerLights_Trigger@command,f
  6509  1CB1  0826               	movf	Sw_DimmerOnFunc@sw,w
  6510  1CB2  31A3  23E3  319C   	fcall	_setDimmerLights_Trigger
  6511                           
  6512                           ;Switch_B1.c: 240: setDimmerLights_Switch(sw,1);
  6513  1CB5  0020               	movlb	0	; select bank0
  6514  1CB6  01A2               	clrf	setDimmerLights_Switch@command
  6515  1CB7  0AA2               	incf	setDimmerLights_Switch@command,f
  6516  1CB8  0826               	movf	Sw_DimmerOnFunc@sw,w
  6517  1CB9  31A3  23D3  319C   	fcall	_setDimmerLights_Switch
  6518                           
  6519                           ;Switch_B1.c: 242: setRF_DimmerLights(sw,Sw->Status);
  6520  1CBC  0020               	movlb	0	; select bank0
  6521  1CBD  086E               	movf	_Sw,w
  6522  1CBE  0086               	movwf	6
  6523  1CBF  3001               	movlw	1	; select bank2/3
  6524  1CC0  0087               	movwf	7
  6525  1CC1  3000               	movlw	0
  6526  1CC2  1B01               	btfsc	1,6
  6527  1CC3  3001               	movlw	1
  6528  1CC4  00A0               	movwf	setRF_DimmerLights@on
  6529  1CC5  0826               	movf	Sw_DimmerOnFunc@sw,w
  6530  1CC6  3190  20D8  319C   	fcall	_setRF_DimmerLights
  6531                           
  6532                           ;Switch_B1.c: 243: setTxData(1);
  6533  1CC9  3001               	movlw	1
  6534  1CCA  319A  227A         	fcall	_setTxData
  6535                           
  6536                           ;Switch_B1.c: 244: }
  6537  1CCC  0008               	return
  6538  1CCD                     l7719:	
  6539                           
  6540                           ;Switch_B1.c: 245: else
  6541                           ;Switch_B1.c: 246: {
  6542                           ;Switch_B1.c: 247: Sw->Status=0;
  6543  1CCD  0020               	movlb	0	; select bank0
  6544  1CCE  086E               	movf	_Sw,w
  6545  1CCF  0086               	movwf	6
  6546  1CD0  3001               	movlw	1	; select bank2/3
  6547  1CD1  0087               	movwf	7
  6548  1CD2  1301               	bcf	1,6
  6549                           
  6550                           ;Switch_B1.c: 248: setRFSW_Status(sw,Sw->Status);
  6551  1CD3  086E               	movf	_Sw,w
  6552  1CD4  0086               	movwf	6
  6553  1CD5  3001               	movlw	1	; select bank2/3
  6554  1CD6  0087               	movwf	7
  6555  1CD7  3000               	movlw	0
  6556  1CD8  1B01               	btfsc	1,6
  6557  1CD9  3001               	movlw	1
  6558  1CDA  00A2               	movwf	setRFSW_Status@command
  6559  1CDB  0826               	movf	Sw_DimmerOnFunc@sw,w
  6560  1CDC  31A3  230E         	fcall	_setRFSW_Status
  6561  1CDE  0008               	return
  6562  1CDF                     __end_of_Sw_DimmerOnFunc:	
  6563                           
  6564                           	psect	text15
  6565  1229                     __ptext15:	
  6566 ;; *************** function _Sw_DimmerOffFunc *****************
  6567 ;; Defined at:
  6568 ;;		line 252 in file "G:\Program\PIC\Source_File\Switch_B1.c"
  6569 ;; Parameters:    Size  Location     Type
  6570 ;;  sw              1    wreg     unsigned char 
  6571 ;; Auto vars:     Size  Location     Type
  6572 ;;  sw              1    9[BANK0 ] unsigned char 
  6573 ;; Return value:  Size  Location     Type
  6574 ;;		None               void
  6575 ;; Registers used:
  6576 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6577 ;; Tracked objects:
  6578 ;;		On entry : 0/0
  6579 ;;		On exit  : 0/0
  6580 ;;		Unchanged: 0/0
  6581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6583 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6584 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6585 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6586 ;;Total ram usage:        3 bytes
  6587 ;; Hardware stack levels used:    1
  6588 ;; Hardware stack levels required when called:    6
  6589 ;; This function calls:
  6590 ;;		_setDelayOff_GO
  6591 ;;		_setDimmerLights_AdjGo
  6592 ;;		_setDimmerLights_Switch
  6593 ;;		_setDimmerLights_Trigger
  6594 ;;		_setDimmerLights_TriggerAdj
  6595 ;;		_setRF_DimmerLights
  6596 ;;		_setTxData
  6597 ;; This function is called by:
  6598 ;;		_setSw_Main
  6599 ;; This function uses a non-reentrant model
  6600 ;;
  6601                           
  6602                           
  6603                           ;psect for function _Sw_DimmerOffFunc
  6604  1229                     _Sw_DimmerOffFunc:	
  6605                           
  6606                           ;incstack = 0
  6607                           ; Regs used in _Sw_DimmerOffFunc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6608                           ;Sw_DimmerOffFunc@sw stored from wreg
  6609  1229  0020               	movlb	0	; select bank0
  6610  122A  00A9               	movwf	Sw_DimmerOffFunc@sw
  6611                           
  6612                           ;Switch_B1.c: 254: if(Sw->Flag)
  6613  122B  086E               	movf	_Sw,w
  6614  122C  0086               	movwf	6
  6615  122D  3001               	movlw	1	; select bank2/3
  6616  122E  0087               	movwf	7
  6617  122F  1F81               	btfss	1,7
  6618  1230  0008               	return
  6619                           
  6620                           ;Switch_B1.c: 255: {
  6621                           ;Switch_B1.c: 256: Sw->Flag=0;
  6622  1231  086E               	movf	_Sw,w
  6623  1232  0086               	movwf	6
  6624  1233  3001               	movlw	1	; select bank2/3
  6625  1234  0087               	movwf	7
  6626  1235  1381               	bcf	1,7
  6627                           
  6628                           ;Switch_B1.c: 257: if(Sw->Status)
  6629  1236  086E               	movf	_Sw,w
  6630  1237  0086               	movwf	6
  6631  1238  3001               	movlw	1	; select bank2/3
  6632  1239  0087               	movwf	7
  6633  123A  1F01               	btfss	1,6
  6634  123B  2A79               	goto	l7751
  6635                           
  6636                           ;Switch_B1.c: 258: {
  6637                           ;Switch_B1.c: 259: if(Sw->Adj)
  6638  123C  0A6E               	incf	_Sw,w
  6639  123D  0086               	movwf	6
  6640  123E  3001               	movlw	1	; select bank2/3
  6641  123F  0087               	movwf	7
  6642  1240  1C01               	btfss	1,0
  6643  1241  0008               	return
  6644                           
  6645                           ;Switch_B1.c: 260: {
  6646                           ;Switch_B1.c: 261: Sw->Adj=0;
  6647  1242  0A6E               	incf	_Sw,w
  6648  1243  0086               	movwf	6
  6649  1244  3001               	movlw	1	; select bank2/3
  6650  1245  0087               	movwf	7
  6651  1246  1001               	bcf	1,0
  6652                           
  6653                           ;Switch_B1.c: 262: setDimmerLights_TriggerAdj(sw,1);
  6654  1247  01A2               	clrf	setDimmerLights_TriggerAdj@command
  6655  1248  0AA2               	incf	setDimmerLights_TriggerAdj@command,f
  6656  1249  0829               	movf	Sw_DimmerOffFunc@sw,w
  6657  124A  31A4  2453  3192   	fcall	_setDimmerLights_TriggerAdj
  6658                           
  6659                           ;Switch_B1.c: 263: setDimmerLights_AdjGo(sw,0);
  6660  124D  0020               	movlb	0	; select bank0
  6661  124E  01A2               	clrf	setDimmerLights_AdjGo@command
  6662  124F  0829               	movf	Sw_DimmerOffFunc@sw,w
  6663  1250  31A4  2443  3192   	fcall	_setDimmerLights_AdjGo
  6664                           
  6665                           ;Switch_B1.c: 265: Product->Data[17]=Product->Data[26+sw];
  6666  1253  0020               	movlb	0	; select bank0
  6667  1254  0829               	movf	Sw_DimmerOffFunc@sw,w
  6668  1255  3E1A               	addlw	26
  6669  1256  0021               	movlb	1	; select bank1
  6670  1257  076C               	addwf	_Product^(0+128),w
  6671  1258  0020               	movlb	0	; select bank0
  6672  1259  00A7               	movwf	??_Sw_DimmerOffFunc
  6673  125A  0827               	movf	??_Sw_DimmerOffFunc,w
  6674  125B  0086               	movwf	6
  6675  125C  3001               	movlw	1	; select bank2/3
  6676  125D  0087               	movwf	7
  6677  125E  0801               	movf	1,w
  6678  125F  00A8               	movwf	??_Sw_DimmerOffFunc+1
  6679  1260  0021               	movlb	1	; select bank1
  6680  1261  086C               	movf	_Product^(0+128),w
  6681  1262  3E11               	addlw	17
  6682  1263  0086               	movwf	6
  6683  1264  3001               	movlw	1	; select bank2/3
  6684  1265  0087               	movwf	7
  6685  1266  0020               	movlb	0	; select bank0
  6686  1267  0828               	movf	??_Sw_DimmerOffFunc+1,w
  6687  1268  0081               	movwf	1
  6688                           
  6689                           ;Switch_B1.c: 266: setRF_DimmerLights(sw,Sw->Status);
  6690  1269  086E               	movf	_Sw,w
  6691  126A  0086               	movwf	6
  6692  126B  3001               	movlw	1	; select bank2/3
  6693  126C  0087               	movwf	7
  6694  126D  3000               	movlw	0
  6695  126E  1B01               	btfsc	1,6
  6696  126F  3001               	movlw	1
  6697  1270  00A0               	movwf	setRF_DimmerLights@on
  6698  1271  0829               	movf	Sw_DimmerOffFunc@sw,w
  6699  1272  3190  20D8  3192   	fcall	_setRF_DimmerLights
  6700                           
  6701                           ;Switch_B1.c: 267: setTxData(1);
  6702  1275  3001               	movlw	1
  6703  1276  319A  227A         	fcall	_setTxData
  6704                           
  6705                           ;Switch_B1.c: 269: }
  6706                           ;Switch_B1.c: 270: }
  6707  1278  0008               	return
  6708  1279                     l7751:	
  6709                           
  6710                           ;Switch_B1.c: 271: else
  6711                           ;Switch_B1.c: 272: {
  6712                           ;Switch_B1.c: 273: setDimmerLights_Trigger(sw,1);
  6713  1279  0020               	movlb	0	; select bank0
  6714  127A  01A2               	clrf	setDimmerLights_Trigger@command
  6715  127B  0AA2               	incf	setDimmerLights_Trigger@command,f
  6716  127C  0829               	movf	Sw_DimmerOffFunc@sw,w
  6717  127D  31A3  23E3  3192   	fcall	_setDimmerLights_Trigger
  6718                           
  6719                           ;Switch_B1.c: 274: setDimmerLights_Switch(sw,0);
  6720  1280  0020               	movlb	0	; select bank0
  6721  1281  01A2               	clrf	setDimmerLights_Switch@command
  6722  1282  0829               	movf	Sw_DimmerOffFunc@sw,w
  6723  1283  31A3  23D3  3192   	fcall	_setDimmerLights_Switch
  6724                           
  6725                           ;Switch_B1.c: 276: setRF_DimmerLights(sw,Sw->Status);
  6726  1286  0020               	movlb	0	; select bank0
  6727  1287  086E               	movf	_Sw,w
  6728  1288  0086               	movwf	6
  6729  1289  3001               	movlw	1	; select bank2/3
  6730  128A  0087               	movwf	7
  6731  128B  3000               	movlw	0
  6732  128C  1B01               	btfsc	1,6
  6733  128D  3001               	movlw	1
  6734  128E  00A0               	movwf	setRF_DimmerLights@on
  6735  128F  0829               	movf	Sw_DimmerOffFunc@sw,w
  6736  1290  3190  20D8  3192   	fcall	_setRF_DimmerLights
  6737                           
  6738                           ;Switch_B1.c: 277: setDelayOff_GO(sw,0,0);
  6739  1293  0020               	movlb	0	; select bank0
  6740  1294  01A3               	clrf	setDelayOff_GO@command
  6741  1295  01A4               	clrf	setDelayOff_GO@value
  6742  1296  0829               	movf	Sw_DimmerOffFunc@sw,w
  6743  1297  319A  22FA  3192   	fcall	_setDelayOff_GO
  6744                           
  6745                           ;Switch_B1.c: 278: setTxData(1);
  6746  129A  3001               	movlw	1
  6747  129B  319A  227A         	fcall	_setTxData
  6748  129D  0008               	return
  6749  129E                     __end_of_Sw_DimmerOffFunc:	
  6750                           
  6751                           	psect	text16
  6752  1874                     __ptext16:	
  6753 ;; *************** function _Sw_DimmerAdjFunc *****************
  6754 ;; Defined at:
  6755 ;;		line 283 in file "G:\Program\PIC\Source_File\Switch_B1.c"
  6756 ;; Parameters:    Size  Location     Type
  6757 ;;  sw              1    wreg     unsigned char 
  6758 ;; Auto vars:     Size  Location     Type
  6759 ;;  sw              1    4[BANK0 ] unsigned char 
  6760 ;; Return value:  Size  Location     Type
  6761 ;;		None               void
  6762 ;; Registers used:
  6763 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6764 ;; Tracked objects:
  6765 ;;		On entry : 0/0
  6766 ;;		On exit  : 0/0
  6767 ;;		Unchanged: 0/0
  6768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6770 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6772 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6773 ;;Total ram usage:        1 bytes
  6774 ;; Hardware stack levels used:    1
  6775 ;; Hardware stack levels required when called:    6
  6776 ;; This function calls:
  6777 ;;		_setDimmerLights_AdjGo
  6778 ;;		_setDimmerLights_TriggerAdj
  6779 ;;		_setRFSW_Status
  6780 ;; This function is called by:
  6781 ;;		_setSw_Main
  6782 ;; This function uses a non-reentrant model
  6783 ;;
  6784                           
  6785                           
  6786                           ;psect for function _Sw_DimmerAdjFunc
  6787  1874                     _Sw_DimmerAdjFunc:	
  6788                           
  6789                           ;incstack = 0
  6790                           ; Regs used in _Sw_DimmerAdjFunc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6791                           ;Sw_DimmerAdjFunc@sw stored from wreg
  6792  1874  0020               	movlb	0	; select bank0
  6793  1875  00A4               	movwf	Sw_DimmerAdjFunc@sw
  6794                           
  6795                           ;Switch_B1.c: 285: if(Sw->Flag)
  6796  1876  086E               	movf	_Sw,w
  6797  1877  0086               	movwf	6
  6798  1878  3001               	movlw	1	; select bank2/3
  6799  1879  0087               	movwf	7
  6800  187A  1F81               	btfss	1,7
  6801  187B  0008               	return
  6802                           
  6803                           ;Switch_B1.c: 286: {
  6804                           ;Switch_B1.c: 287: Sw->Adj=1;
  6805  187C  0A6E               	incf	_Sw,w
  6806  187D  0086               	movwf	6
  6807  187E  3001               	movlw	1	; select bank2/3
  6808  187F  0087               	movwf	7
  6809  1880  1401               	bsf	1,0
  6810                           
  6811                           ;Switch_B1.c: 288: Sw->Status=1;
  6812  1881  086E               	movf	_Sw,w
  6813  1882  0086               	movwf	6
  6814  1883  3001               	movlw	1	; select bank2/3
  6815  1884  0087               	movwf	7
  6816  1885  1701               	bsf	1,6
  6817                           
  6818                           ;Switch_B1.c: 289: setRFSW_Status(sw,1);
  6819  1886  01A2               	clrf	setRFSW_Status@command
  6820  1887  0AA2               	incf	setRFSW_Status@command,f
  6821  1888  0824               	movf	Sw_DimmerAdjFunc@sw,w
  6822  1889  31A3  230E  3198   	fcall	_setRFSW_Status
  6823                           
  6824                           ;Switch_B1.c: 291: setDimmerLights_TriggerAdj(sw,1);
  6825  188C  0020               	movlb	0	; select bank0
  6826  188D  01A2               	clrf	setDimmerLights_TriggerAdj@command
  6827  188E  0AA2               	incf	setDimmerLights_TriggerAdj@command,f
  6828  188F  0824               	movf	Sw_DimmerAdjFunc@sw,w
  6829  1890  31A4  2453  3198   	fcall	_setDimmerLights_TriggerAdj
  6830                           
  6831                           ;Switch_B1.c: 292: setDimmerLights_AdjGo(sw,1);
  6832  1893  0020               	movlb	0	; select bank0
  6833  1894  01A2               	clrf	setDimmerLights_AdjGo@command
  6834  1895  0AA2               	incf	setDimmerLights_AdjGo@command,f
  6835  1896  0824               	movf	Sw_DimmerAdjFunc@sw,w
  6836  1897  31A4  2443         	fcall	_setDimmerLights_AdjGo
  6837  1899  0008               	return
  6838  189A                     __end_of_Sw_DimmerAdjFunc:	
  6839                           
  6840                           	psect	text17
  6841  2453                     __ptext17:	
  6842 ;; *************** function _setDimmerLights_TriggerAdj *****************
  6843 ;; Defined at:
  6844 ;;		line 451 in file "G:\Program\PIC\Source_File\Dimmer_B1.c"
  6845 ;; Parameters:    Size  Location     Type
  6846 ;;  lights          1    wreg     unsigned char 
  6847 ;;  command         1    2[BANK0 ] unsigned char 
  6848 ;; Auto vars:     Size  Location     Type
  6849 ;;  lights          1    3[BANK0 ] unsigned char 
  6850 ;; Return value:  Size  Location     Type
  6851 ;;		None               void
  6852 ;; Registers used:
  6853 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6854 ;; Tracked objects:
  6855 ;;		On entry : 0/0
  6856 ;;		On exit  : 0/0
  6857 ;;		Unchanged: 0/0
  6858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6859 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6860 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6862 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6863 ;;Total ram usage:        2 bytes
  6864 ;; Hardware stack levels used:    1
  6865 ;; Hardware stack levels required when called:    5
  6866 ;; This function calls:
  6867 ;;		_DimmerLightsPointSelect
  6868 ;; This function is called by:
  6869 ;;		_Sw_DimmerOffFunc
  6870 ;;		_Sw_DimmerAdjFunc
  6871 ;; This function uses a non-reentrant model
  6872 ;;
  6873                           
  6874                           
  6875                           ;psect for function _setDimmerLights_TriggerAdj
  6876  2453                     _setDimmerLights_TriggerAdj:	
  6877                           
  6878                           ;incstack = 0
  6879                           ; Regs used in _setDimmerLights_TriggerAdj: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  6880                           ;setDimmerLights_TriggerAdj@lights stored from wreg
  6881  2453  0020               	movlb	0	; select bank0
  6882  2454  00A3               	movwf	setDimmerLights_TriggerAdj@lights
  6883                           
  6884                           ;Dimmer_B1.c: 453: DimmerLightsPointSelect(lights);
  6885  2455  0823               	movf	setDimmerLights_TriggerAdj@lights,w
  6886  2456  31A4  2497         	fcall	_DimmerLightsPointSelect
  6887                           
  6888                           ;Dimmer_B1.c: 454: DimmerLights->TriggerAdj=command;
  6889  2458  0020               	movlb	0	; select bank0
  6890  2459  086D               	movf	_DimmerLights,w
  6891  245A  3E09               	addlw	9
  6892  245B  0086               	movwf	6
  6893  245C  3001               	movlw	1	; select bank2/3
  6894  245D  0087               	movwf	7
  6895  245E  0822               	movf	setDimmerLights_TriggerAdj@command,w
  6896  245F  1181               	bcf	1,3
  6897  2460  1D03               	skipz
  6898  2461  1581               	bsf	1,3
  6899  2462  0008               	return
  6900  2463                     __end_of_setDimmerLights_TriggerAdj:	
  6901                           
  6902                           	psect	text18
  6903  2443                     __ptext18:	
  6904 ;; *************** function _setDimmerLights_AdjGo *****************
  6905 ;; Defined at:
  6906 ;;		line 441 in file "G:\Program\PIC\Source_File\Dimmer_B1.c"
  6907 ;; Parameters:    Size  Location     Type
  6908 ;;  lights          1    wreg     unsigned char 
  6909 ;;  command         1    2[BANK0 ] unsigned char 
  6910 ;; Auto vars:     Size  Location     Type
  6911 ;;  lights          1    3[BANK0 ] unsigned char 
  6912 ;; Return value:  Size  Location     Type
  6913 ;;		None               void
  6914 ;; Registers used:
  6915 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6916 ;; Tracked objects:
  6917 ;;		On entry : 0/0
  6918 ;;		On exit  : 0/0
  6919 ;;		Unchanged: 0/0
  6920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6921 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6922 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6924 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6925 ;;Total ram usage:        2 bytes
  6926 ;; Hardware stack levels used:    1
  6927 ;; Hardware stack levels required when called:    5
  6928 ;; This function calls:
  6929 ;;		_DimmerLightsPointSelect
  6930 ;; This function is called by:
  6931 ;;		_Sw_DimmerOffFunc
  6932 ;;		_Sw_DimmerAdjFunc
  6933 ;; This function uses a non-reentrant model
  6934 ;;
  6935                           
  6936                           
  6937                           ;psect for function _setDimmerLights_AdjGo
  6938  2443                     _setDimmerLights_AdjGo:	
  6939                           
  6940                           ;incstack = 0
  6941                           ; Regs used in _setDimmerLights_AdjGo: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  6942                           ;setDimmerLights_AdjGo@lights stored from wreg
  6943  2443  0020               	movlb	0	; select bank0
  6944  2444  00A3               	movwf	setDimmerLights_AdjGo@lights
  6945                           
  6946                           ;Dimmer_B1.c: 443: DimmerLightsPointSelect(lights);
  6947  2445  0823               	movf	setDimmerLights_AdjGo@lights,w
  6948  2446  31A4  2497         	fcall	_DimmerLightsPointSelect
  6949                           
  6950                           ;Dimmer_B1.c: 444: DimmerLights->AdjGo=command;
  6951  2448  0020               	movlb	0	; select bank0
  6952  2449  086D               	movf	_DimmerLights,w
  6953  244A  3E09               	addlw	9
  6954  244B  0086               	movwf	6
  6955  244C  3001               	movlw	1	; select bank2/3
  6956  244D  0087               	movwf	7
  6957  244E  0822               	movf	setDimmerLights_AdjGo@command,w
  6958  244F  1101               	bcf	1,2
  6959  2450  1D03               	skipz
  6960  2451  1501               	bsf	1,2
  6961  2452  0008               	return
  6962  2453                     __end_of_setDimmerLights_AdjGo:	
  6963                           
  6964                           	psect	text19
  6965  2301                     __ptext19:	
  6966 ;; *************** function _Switch_Initialization *****************
  6967 ;; Defined at:
  6968 ;;		line 38 in file "G:\Program\PIC\Source_File\Switch_B1.c"
  6969 ;; Parameters:    Size  Location     Type
  6970 ;;		None
  6971 ;; Auto vars:     Size  Location     Type
  6972 ;;		None
  6973 ;; Return value:  Size  Location     Type
  6974 ;;		None               void
  6975 ;; Registers used:
  6976 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6977 ;; Tracked objects:
  6978 ;;		On entry : 0/0
  6979 ;;		On exit  : 0/0
  6980 ;;		Unchanged: 0/0
  6981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6985 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6986 ;;Total ram usage:        0 bytes
  6987 ;; Hardware stack levels used:    1
  6988 ;; Hardware stack levels required when called:    7
  6989 ;; This function calls:
  6990 ;;		_TouchPower
  6991 ;;		_setSw_Initialization
  6992 ;; This function is called by:
  6993 ;;		_main
  6994 ;; This function uses a non-reentrant model
  6995 ;;
  6996                           
  6997                           
  6998                           ;psect for function _Switch_Initialization
  6999  2301                     _Switch_Initialization:	
  7000                           
  7001                           ;Switch_B1.c: 40: TouchPower();
  7002                           
  7003                           ;incstack = 0
  7004                           ; Regs used in _Switch_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  7005  2301  31A1  21B7  31A3   	fcall	_TouchPower
  7006                           
  7007                           ;Switch_B1.c: 42: WPUB1=0;
  7008  2304  0024               	movlb	4	; select bank4
  7009  2305  108D               	bcf	13,1	;volatile
  7010                           
  7011                           ;Switch_B1.c: 51: setSw_Initialization(1);
  7012  2306  3001               	movlw	1
  7013  2307  31A1  21FA  31A3   	fcall	_setSw_Initialization
  7014                           
  7015                           ;Switch_B1.c: 54: setSw_Initialization(2);
  7016  230A  3002               	movlw	2
  7017  230B  31A1  21FA         	fcall	_setSw_Initialization
  7018  230D  0008               	return
  7019  230E                     __end_of_Switch_Initialization:	
  7020                           
  7021                           	psect	text20
  7022  21FA                     __ptext20:	
  7023 ;; *************** function _setSw_Initialization *****************
  7024 ;; Defined at:
  7025 ;;		line 78 in file "G:\Program\PIC\Source_File\Switch_B1.c"
  7026 ;; Parameters:    Size  Location     Type
  7027 ;;  sw              1    wreg     unsigned char 
  7028 ;; Auto vars:     Size  Location     Type
  7029 ;;  sw              1    4[BANK0 ] unsigned char 
  7030 ;; Return value:  Size  Location     Type
  7031 ;;		None               void
  7032 ;; Registers used:
  7033 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7034 ;; Tracked objects:
  7035 ;;		On entry : 0/0
  7036 ;;		On exit  : 0/0
  7037 ;;		Unchanged: 0/0
  7038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7039 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7040 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7042 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7043 ;;Total ram usage:        1 bytes
  7044 ;; Hardware stack levels used:    1
  7045 ;; Hardware stack levels required when called:    6
  7046 ;; This function calls:
  7047 ;;		_setLED
  7048 ;; This function is called by:
  7049 ;;		_Switch_Initialization
  7050 ;; This function uses a non-reentrant model
  7051 ;;
  7052                           
  7053                           
  7054                           ;psect for function _setSw_Initialization
  7055  21FA                     _setSw_Initialization:	
  7056                           
  7057                           ;incstack = 0
  7058                           ; Regs used in _setSw_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7059                           ;setSw_Initialization@sw stored from wreg
  7060  21FA  0020               	movlb	0	; select bank0
  7061  21FB  00A4               	movwf	setSw_Initialization@sw
  7062                           
  7063                           ;Switch_B1.c: 80: setLED(sw,1);
  7064  21FC  01A2               	clrf	setLED@command
  7065  21FD  0AA2               	incf	setLED@command,f
  7066  21FE  0824               	movf	setSw_Initialization@sw,w
  7067  21FF  319E  2679         	fcall	_setLED
  7068  2201  0008               	return
  7069  2202                     __end_of_setSw_Initialization:	
  7070                           
  7071                           	psect	text21
  7072  21B7                     __ptext21:	
  7073 ;; *************** function _TouchPower *****************
  7074 ;; Defined at:
  7075 ;;		line 9 in file "G:\Program\PIC\Source_File\Switch_B1.c"
  7076 ;; Parameters:    Size  Location     Type
  7077 ;;		None
  7078 ;; Auto vars:     Size  Location     Type
  7079 ;;		None
  7080 ;; Return value:  Size  Location     Type
  7081 ;;		None               void
  7082 ;; Registers used:
  7083 ;;		None
  7084 ;; Tracked objects:
  7085 ;;		On entry : 0/0
  7086 ;;		On exit  : 0/0
  7087 ;;		Unchanged: 0/0
  7088 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7090 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7092 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7093 ;;Total ram usage:        0 bytes
  7094 ;; Hardware stack levels used:    1
  7095 ;; Hardware stack levels required when called:    4
  7096 ;; This function calls:
  7097 ;;		Nothing
  7098 ;; This function is called by:
  7099 ;;		_Switch_Initialization
  7100 ;; This function uses a non-reentrant model
  7101 ;;
  7102                           
  7103                           
  7104                           ;psect for function _TouchPower
  7105  21B7                     _TouchPower:	
  7106  21B7                     l2796:	
  7107                           ;Switch_B1.c: 11: while(RC5 == 0)
  7108                           
  7109                           ;incstack = 0
  7110                           ; Regs used in _TouchPower: []
  7111                           
  7112  21B7  0020               	movlb	0	; select bank0
  7113  21B8  1A8E               	btfsc	14,5	;volatile
  7114  21B9  0008               	return
  7115                           
  7116                           ;Switch_B1.c: 12: RC5=1;
  7117  21BA  168E               	bsf	14,5	;volatile
  7118  21BB  29B7               	goto	l2796
  7119  21BC                     __end_of_TouchPower:	
  7120                           
  7121                           	psect	text22
  7122  21A6                     __ptext22:	
  7123 ;; *************** function _RF_Main *****************
  7124 ;; Defined at:
  7125 ;;		line 24 in file "G:\Program\PIC\Source_File\RF_Control_B1.c"
  7126 ;; Parameters:    Size  Location     Type
  7127 ;;		None
  7128 ;; Auto vars:     Size  Location     Type
  7129 ;;		None
  7130 ;; Return value:  Size  Location     Type
  7131 ;;		None               void
  7132 ;; Registers used:
  7133 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7134 ;; Tracked objects:
  7135 ;;		On entry : 0/0
  7136 ;;		On exit  : 0/0
  7137 ;;		Unchanged: 0/0
  7138 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7139 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7140 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7141 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7142 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7143 ;;Total ram usage:        0 bytes
  7144 ;; Hardware stack levels used:    1
  7145 ;; Hardware stack levels required when called:   13
  7146 ;; This function calls:
  7147 ;;		_setRF_Main
  7148 ;; This function is called by:
  7149 ;;		_main
  7150 ;; This function uses a non-reentrant model
  7151 ;;
  7152                           
  7153                           
  7154                           ;psect for function _RF_Main
  7155  21A6                     _RF_Main:	
  7156                           
  7157                           ;RF_Control_B1.c: 27: setRF_Main(1);
  7158                           
  7159                           ;incstack = 0
  7160                           ; Regs used in _RF_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7161  21A6  3001               	movlw	1
  7162  21A7  3195  251A         	fcall	_setRF_Main
  7163  21A9  0008               	return
  7164  21AA                     __end_of_RF_Main:	
  7165                           
  7166                           	psect	text23
  7167  151A                     __ptext23:	
  7168 ;; *************** function _setRF_Main *****************
  7169 ;; Defined at:
  7170 ;;		line 58 in file "G:\Program\PIC\Source_File\RF_Control_B1.c"
  7171 ;; Parameters:    Size  Location     Type
  7172 ;;  rf              1    wreg     unsigned char 
  7173 ;; Auto vars:     Size  Location     Type
  7174 ;;  rf              1   74[BANK0 ] unsigned char 
  7175 ;; Return value:  Size  Location     Type
  7176 ;;		None               void
  7177 ;; Registers used:
  7178 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7179 ;; Tracked objects:
  7180 ;;		On entry : 0/0
  7181 ;;		On exit  : 0/0
  7182 ;;		Unchanged: 0/0
  7183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7185 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7186 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7187 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7188 ;;Total ram usage:        3 bytes
  7189 ;; Hardware stack levels used:    1
  7190 ;; Hardware stack levels required when called:   12
  7191 ;; This function calls:
  7192 ;;		_CC2500_RxData
  7193 ;;		_CC2500_TxData
  7194 ;;		_CC2500_WriteCommand
  7195 ;;		_RF_RxDisable
  7196 ;;		_RfPointSelect
  7197 ;;		_getRxData
  7198 ;;		_setINT_GO
  7199 ;; This function is called by:
  7200 ;;		_RF_Main
  7201 ;; This function uses a non-reentrant model
  7202 ;;
  7203                           
  7204                           
  7205                           ;psect for function _setRF_Main
  7206  151A                     _setRF_Main:	
  7207                           
  7208                           ;incstack = 0
  7209                           ; Regs used in _setRF_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7210                           ;setRF_Main@rf stored from wreg
  7211  151A  0020               	movlb	0	; select bank0
  7212  151B  00EA               	movwf	setRF_Main@rf
  7213                           
  7214                           ;RF_Control_B1.c: 60: RfPointSelect(rf);
  7215  151C  086A               	movf	setRF_Main@rf,w
  7216  151D  31A2  2279  3195   	fcall	_RfPointSelect
  7217                           
  7218                           ;RF_Control_B1.c: 61: if(RF->Enable)
  7219  1520  0021               	movlb	1	; select bank1
  7220  1521  083E               	movf	_RF^(0+128),w
  7221  1522  0086               	movwf	6
  7222  1523  0187               	clrf	7
  7223  1524  1C01               	btfss	1,0
  7224  1525  0008               	return
  7225                           
  7226                           ;RF_Control_B1.c: 62: {
  7227                           ;RF_Control_B1.c: 68: RF->Key=((RA0 || RB1 || RA6 || RA4 ) && RF->Learn == 0)?1:0;
  7228  1526  0020               	movlb	0	; select bank0
  7229  1527  01EB               	clrf	_setRF_Main$4076
  7230  1528  1C0C               	btfss	12,0	;volatile
  7231  1529  188D               	btfsc	13,1	;volatile
  7232  152A  2D2F               	goto	l8381
  7233  152B  1B0C               	btfsc	12,6	;volatile
  7234  152C  2D2F               	goto	l8381
  7235  152D  1E0C               	btfss	12,4	;volatile
  7236  152E  2D38               	goto	l8385
  7237  152F                     l8381:	
  7238  152F  0021               	movlb	1	; select bank1
  7239  1530  083E               	movf	_RF^(0+128),w
  7240  1531  0086               	movwf	6
  7241  1532  0187               	clrf	7
  7242  1533  1B01               	btfsc	1,6
  7243  1534  2D38               	goto	l8385
  7244  1535  0020               	movlb	0	; select bank0
  7245  1536  01EB               	clrf	_setRF_Main$4076
  7246  1537  0AEB               	incf	_setRF_Main$4076,f
  7247  1538                     l8385:	
  7248  1538  0021               	movlb	1	; select bank1
  7249  1539  083E               	movf	_RF^(0+128),w
  7250  153A  0086               	movwf	6
  7251  153B  0187               	clrf	7
  7252  153C  0020               	movlb	0	; select bank0
  7253  153D  086B               	movf	_setRF_Main$4076,w
  7254  153E  1381               	bcf	1,7
  7255  153F  1D03               	skipz
  7256  1540  1781               	bsf	1,7
  7257                           
  7258                           ;RF_Control_B1.c: 75: if(RF->Key)
  7259  1541  0021               	movlb	1	; select bank1
  7260  1542  083E               	movf	_RF^(0+128),w
  7261  1543  0086               	movwf	6
  7262  1544  0187               	clrf	7
  7263  1545  1F81               	btfss	1,7
  7264  1546  2D4B               	goto	l8389
  7265                           
  7266                           ;RF_Control_B1.c: 76: {
  7267                           ;RF_Control_B1.c: 77: RF_RxDisable(1);
  7268  1547  3001               	movlw	1
  7269  1548  3198  20EF         	fcall	_RF_RxDisable
  7270                           
  7271                           ;RF_Control_B1.c: 78: }
  7272  154A  0008               	return
  7273  154B                     l8389:	
  7274                           
  7275                           ;RF_Control_B1.c: 79: else
  7276                           ;RF_Control_B1.c: 80: {
  7277                           ;RF_Control_B1.c: 81: if(RF->ReceiveGO)
  7278  154B  0021               	movlb	1	; select bank1
  7279  154C  083E               	movf	_RF^(0+128),w
  7280  154D  0086               	movwf	6
  7281  154E  0187               	clrf	7
  7282  154F  1C81               	btfss	1,1
  7283  1550  2D5F               	goto	l8399
  7284                           
  7285                           ;RF_Control_B1.c: 82: {
  7286                           ;RF_Control_B1.c: 83: RF->ReceiveGO=0;
  7287  1551  083E               	movf	_RF^(0+128),w
  7288  1552  0086               	movwf	6
  7289  1553  0187               	clrf	7
  7290  1554  1081               	bcf	1,1
  7291                           
  7292                           ;RF_Control_B1.c: 84: CC2500_RxData();
  7293  1555  319F  279C  3195   	fcall	_CC2500_RxData
  7294                           
  7295                           ;RF_Control_B1.c: 90: getRxData(1);
  7296  1558  3001               	movlw	1
  7297  1559  319C  24DF         	fcall	_getRxData
  7298                           
  7299                           ;RF_Control_B1.c: 91: RB5=~RB5;
  7300  155B  3020               	movlw	32
  7301  155C  0020               	movlb	0	; select bank0
  7302  155D  068D               	xorwf	13,f
  7303                           
  7304                           ;RF_Control_B1.c: 93: }
  7305  155E  0008               	return
  7306  155F                     l8399:	
  7307                           
  7308                           ;RF_Control_B1.c: 94: else
  7309                           ;RF_Control_B1.c: 95: {
  7310                           ;RF_Control_B1.c: 96: if(RF->TransceiveGO)
  7311  155F  0021               	movlb	1	; select bank1
  7312  1560  083E               	movf	_RF^(0+128),w
  7313  1561  0086               	movwf	6
  7314  1562  0187               	clrf	7
  7315  1563  1D01               	btfss	1,2
  7316  1564  2D95               	goto	l8417
  7317                           
  7318                           ;RF_Control_B1.c: 97: {
  7319                           ;RF_Control_B1.c: 98: RF_RxDisable(1);
  7320  1565  3001               	movlw	1
  7321  1566  3198  20EF  3195   	fcall	_RF_RxDisable
  7322                           
  7323                           ;RF_Control_B1.c: 99: if(RF->Debounce == 0)
  7324  1569  0021               	movlb	1	; select bank1
  7325  156A  083E               	movf	_RF^(0+128),w
  7326  156B  0086               	movwf	6
  7327  156C  0187               	clrf	7
  7328  156D  1A81               	btfsc	1,5
  7329  156E  2D8A               	goto	l8413
  7330                           
  7331                           ;RF_Control_B1.c: 100: {
  7332                           ;RF_Control_B1.c: 101: RF->DebounceTime++;
  7333  156F  3001               	movlw	1
  7334  1570  0020               	movlb	0	; select bank0
  7335  1571  00E9               	movwf	??_setRF_Main
  7336  1572  0021               	movlb	1	; select bank1
  7337  1573  0A3E               	incf	_RF^(0+128),w
  7338  1574  0086               	movwf	6
  7339  1575  0187               	clrf	7
  7340  1576  0020               	movlb	0	; select bank0
  7341  1577  0869               	movf	??_setRF_Main,w
  7342  1578  0781               	addwf	1,f
  7343                           
  7344                           ;RF_Control_B1.c: 102: if(RF->DebounceTime == 25)
  7345  1579  0021               	movlb	1	; select bank1
  7346  157A  0A3E               	incf	_RF^(0+128),w
  7347  157B  0086               	movwf	6
  7348  157C  0187               	clrf	7
  7349  157D  0801               	movf	1,w
  7350  157E  3A19               	xorlw	25
  7351  157F  1D03               	skipz
  7352  1580  0008               	return
  7353                           
  7354                           ;RF_Control_B1.c: 103: {
  7355                           ;RF_Control_B1.c: 104: RF->DebounceTime=0;
  7356  1581  0A3E               	incf	_RF^(0+128),w
  7357  1582  0086               	movwf	6
  7358  1583  0187               	clrf	7
  7359  1584  0181               	clrf	1
  7360                           
  7361                           ;RF_Control_B1.c: 105: RF->Debounce=1;
  7362  1585  083E               	movf	_RF^(0+128),w
  7363  1586  0086               	movwf	6
  7364  1587  0187               	clrf	7
  7365  1588  1681               	bsf	1,5
  7366                           
  7367                           ;RF_Control_B1.c: 106: }
  7368                           ;RF_Control_B1.c: 107: }
  7369  1589  0008               	return
  7370  158A                     l8413:	
  7371                           
  7372                           ;RF_Control_B1.c: 108: else
  7373                           ;RF_Control_B1.c: 109: {
  7374                           ;RF_Control_B1.c: 110: RF->Debounce=0;
  7375  158A  083E               	movf	_RF^(0+128),w
  7376  158B  0086               	movwf	6
  7377  158C  0187               	clrf	7
  7378  158D  1281               	bcf	1,5
  7379                           
  7380                           ;RF_Control_B1.c: 111: RF->TransceiveGO=0;
  7381  158E  083E               	movf	_RF^(0+128),w
  7382  158F  0086               	movwf	6
  7383  1590  0187               	clrf	7
  7384  1591  1101               	bcf	1,2
  7385                           
  7386                           ;RF_Control_B1.c: 112: CC2500_TxData();
  7387  1592  319B  237F         	fcall	_CC2500_TxData
  7388                           
  7389                           ;RF_Control_B1.c: 113: }
  7390                           ;RF_Control_B1.c: 114: }
  7391  1594  0008               	return
  7392  1595                     l8417:	
  7393                           
  7394                           ;RF_Control_B1.c: 115: else
  7395                           ;RF_Control_B1.c: 116: {
  7396                           ;RF_Control_B1.c: 117: if(RF->RxStatus == 0 && 1)
  7397  1595  0021               	movlb	1	; select bank1
  7398  1596  083E               	movf	_RF^(0+128),w
  7399  1597  0086               	movwf	6
  7400  1598  0187               	clrf	7
  7401  1599  1981               	btfsc	1,3
  7402  159A  0008               	return
  7403                           
  7404                           ;RF_Control_B1.c: 118: {
  7405                           ;RF_Control_B1.c: 119: RF->RxStatus=1;
  7406  159B  083E               	movf	_RF^(0+128),w
  7407  159C  0086               	movwf	6
  7408  159D  0187               	clrf	7
  7409  159E  1581               	bsf	1,3
  7410                           
  7411                           ;RF_Control_B1.c: 120: CC2500_WriteCommand(0x36);
  7412  159F  3036               	movlw	54
  7413  15A0  31A3  23C3  3195   	fcall	_CC2500_WriteCommand
  7414                           
  7415                           ;RF_Control_B1.c: 121: CC2500_WriteCommand(0x34);
  7416  15A3  3034               	movlw	52
  7417  15A4  31A3  23C3  3195   	fcall	_CC2500_WriteCommand
  7418                           
  7419                           ;RF_Control_B1.c: 122: setINT_GO(1);
  7420  15A7  3001               	movlw	1
  7421  15A8  3188  2000         	fcall	_setINT_GO
  7422  15AA  0008               	return
  7423  15AB                     __end_of_setRF_Main:	
  7424                           
  7425                           	psect	text24
  7426  1CDF                     __ptext24:	
  7427 ;; *************** function _getRxData *****************
  7428 ;; Defined at:
  7429 ;;		line 206 in file "G:\Program\PIC\Source_File\RF_Control_B1.c"
  7430 ;; Parameters:    Size  Location     Type
  7431 ;;  rf              1    wreg     unsigned char 
  7432 ;; Auto vars:     Size  Location     Type
  7433 ;;  rf              1   72[BANK0 ] unsigned char 
  7434 ;;  i               1    0        unsigned char 
  7435 ;; Return value:  Size  Location     Type
  7436 ;;		None               void
  7437 ;; Registers used:
  7438 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7439 ;; Tracked objects:
  7440 ;;		On entry : 0/0
  7441 ;;		On exit  : 0/0
  7442 ;;		Unchanged: 0/0
  7443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7445 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7447 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7448 ;;Total ram usage:        1 bytes
  7449 ;; Hardware stack levels used:    1
  7450 ;; Hardware stack levels required when called:   11
  7451 ;; This function calls:
  7452 ;;		_RfPointSelect
  7453 ;;		_setControl_Lights_Table
  7454 ;;		_setLog_Code
  7455 ;; This function is called by:
  7456 ;;		_setRF_Main
  7457 ;; This function uses a non-reentrant model
  7458 ;;
  7459                           
  7460                           
  7461                           ;psect for function _getRxData
  7462  1CDF                     _getRxData:	
  7463                           
  7464                           ;incstack = 0
  7465                           ; Regs used in _getRxData: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7466                           ;getRxData@rf stored from wreg
  7467  1CDF  0020               	movlb	0	; select bank0
  7468  1CE0  00E8               	movwf	getRxData@rf
  7469                           
  7470                           ;RF_Control_B1.c: 208: unsigned char i;
  7471                           ;RF_Control_B1.c: 209: RfPointSelect(rf);
  7472  1CE1  0868               	movf	getRxData@rf,w
  7473  1CE2  31A2  2279  319C   	fcall	_RfPointSelect
  7474                           
  7475                           ;RF_Control_B1.c: 210: if(RF->Learn)
  7476  1CE5  0021               	movlb	1	; select bank1
  7477  1CE6  083E               	movf	_RF^(0+128),w
  7478  1CE7  0086               	movwf	6
  7479  1CE8  0187               	clrf	7
  7480  1CE9  1F01               	btfss	1,6
  7481  1CEA  2CF6               	goto	l7675
  7482                           
  7483                           ;RF_Control_B1.c: 211: {
  7484                           ;RF_Control_B1.c: 212: if(RF_Data[0] == 0x0 && RF_Data[1] == 0x64)
  7485  1CEB  08A0               	movf	_RF_Data^(0+128),f
  7486  1CEC  1D03               	skipz
  7487  1CED  0008               	return
  7488  1CEE  0821               	movf	(_RF_Data^(0+128)+1),w
  7489  1CEF  3A64               	xorlw	100
  7490  1CF0  1D03               	skipz
  7491  1CF1  0008               	return
  7492                           
  7493                           ;RF_Control_B1.c: 213: {
  7494                           ;RF_Control_B1.c: 214: setLog_Code(1);
  7495  1CF2  3001               	movlw	1
  7496  1CF3  319D  2579         	fcall	_setLog_Code
  7497                           
  7498                           ;RF_Control_B1.c: 215: }
  7499                           ;RF_Control_B1.c: 216: }
  7500  1CF5  0008               	return
  7501  1CF6                     l7675:	
  7502                           
  7503                           ;RF_Control_B1.c: 217: else
  7504                           ;RF_Control_B1.c: 218: {
  7505                           ;RF_Control_B1.c: 219: if(RF_Data[0] == 0x00 && RF_Data[1] == 0x02)
  7506  1CF6  0021               	movlb	1	; select bank1
  7507  1CF7  08A0               	movf	_RF_Data^(0+128),f
  7508  1CF8  1D03               	skipz
  7509  1CF9  0008               	return
  7510  1CFA  0821               	movf	(_RF_Data^(0+128)+1),w
  7511  1CFB  3A02               	xorlw	2
  7512  1CFC  1D03               	skipz
  7513  1CFD  0008               	return
  7514                           
  7515                           ;RF_Control_B1.c: 220: {
  7516                           ;RF_Control_B1.c: 221: if(RF_Data[12] == 0xff && RF_Data[13] == 0xff && RF_Data[14] == 0
      +                          xff)
  7517  1CFE  082C               	movf	(_RF_Data^(0+128)+12),w
  7518  1CFF  3AFF               	xorlw	255
  7519  1D00  1D03               	skipz
  7520  1D01  2D0C               	goto	l7687
  7521  1D02  082D               	movf	(_RF_Data^(0+128)+13),w
  7522  1D03  3AFF               	xorlw	255
  7523  1D04  1D03               	skipz
  7524  1D05  2D0C               	goto	l7687
  7525  1D06  082E               	movf	(_RF_Data^(0+128)+14),w
  7526  1D07  3AFF               	xorlw	255
  7527  1D08  1D03               	skipz
  7528  1D09  2D0C               	goto	l7687
  7529                           
  7530                           ;RF_Control_B1.c: 222: {
  7531                           ;RF_Control_B1.c: 223: __nop();
  7532  1D0A  0000               	nop
  7533                           
  7534                           ;RF_Control_B1.c: 224: }
  7535  1D0B  0008               	return
  7536  1D0C                     l7687:	
  7537                           
  7538                           ;RF_Control_B1.c: 225: else
  7539                           ;RF_Control_B1.c: 226: {
  7540                           ;RF_Control_B1.c: 227: if(RF_Data[12] == Product->Data[12] && RF_Data[13] == Product->Da
      +                          ta[13] && RF_Data[14] == Product->Data[14])
  7541  1D0C  0021               	movlb	1	; select bank1
  7542  1D0D  086C               	movf	_Product^(0+128),w
  7543  1D0E  3E0C               	addlw	12
  7544  1D0F  0086               	movwf	6
  7545  1D10  3001               	movlw	1	; select bank2/3
  7546  1D11  0087               	movwf	7
  7547  1D12  082C               	movf	(_RF_Data^(0+128)+12),w
  7548  1D13  0601               	xorwf	1,w
  7549  1D14  1D03               	skipz
  7550  1D15  0008               	return
  7551  1D16  086C               	movf	_Product^(0+128),w
  7552  1D17  3E0D               	addlw	13
  7553  1D18  0086               	movwf	6
  7554  1D19  3001               	movlw	1	; select bank2/3
  7555  1D1A  0087               	movwf	7
  7556  1D1B  082D               	movf	(_RF_Data^(0+128)+13),w
  7557  1D1C  0601               	xorwf	1,w
  7558  1D1D  1D03               	skipz
  7559  1D1E  0008               	return
  7560  1D1F  086C               	movf	_Product^(0+128),w
  7561  1D20  3E0E               	addlw	14
  7562  1D21  0086               	movwf	6
  7563  1D22  3001               	movlw	1	; select bank2/3
  7564  1D23  0087               	movwf	7
  7565  1D24  082E               	movf	(_RF_Data^(0+128)+14),w
  7566  1D25  0601               	xorwf	1,w
  7567  1D26  1D03               	skipz
  7568  1D27  0008               	return
  7569                           
  7570                           ;RF_Control_B1.c: 228: {
  7571                           ;RF_Control_B1.c: 229: setControl_Lights_Table(1);
  7572  1D28  3001               	movlw	1
  7573  1D29  3196  263D         	fcall	_setControl_Lights_Table
  7574                           
  7575                           ;RF_Control_B1.c: 238: {
  7576                           ;RF_Control_B1.c: 239: ;
  7577                           
  7578                           ;RF_Control_B1.c: 234: {
  7579                           ;RF_Control_B1.c: 235: ;
  7580                           ;RF_Control_B1.c: 236: }
  7581                           
  7582                           ;RF_Control_B1.c: 230: }
  7583                           ;RF_Control_B1.c: 231: }
  7584                           ;RF_Control_B1.c: 232: }
  7585  1D2B  0008               	return
  7586  1D2C                     __end_of_getRxData:	
  7587                           
  7588                           	psect	text25
  7589  1D79                     __ptext25:	
  7590 ;; *************** function _setLog_Code *****************
  7591 ;; Defined at:
  7592 ;;		line 248 in file "G:\Program\PIC\Source_File\RF_Control_B1.c"
  7593 ;; Parameters:    Size  Location     Type
  7594 ;;  rf              1    wreg     unsigned char 
  7595 ;; Auto vars:     Size  Location     Type
  7596 ;;  rf              1   12[BANK0 ] unsigned char 
  7597 ;; Return value:  Size  Location     Type
  7598 ;;		None               void
  7599 ;; Registers used:
  7600 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7601 ;; Tracked objects:
  7602 ;;		On entry : 0/0
  7603 ;;		On exit  : 0/0
  7604 ;;		Unchanged: 0/0
  7605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7606 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7607 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7608 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7609 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7610 ;;Total ram usage:        2 bytes
  7611 ;; Hardware stack levels used:    1
  7612 ;; Hardware stack levels required when called:    6
  7613 ;; This function calls:
  7614 ;;		_RfPointSelect
  7615 ;;		_setBuz
  7616 ;; This function is called by:
  7617 ;;		_getRxData
  7618 ;; This function uses a non-reentrant model
  7619 ;;
  7620                           
  7621                           
  7622                           ;psect for function _setLog_Code
  7623  1D79                     _setLog_Code:	
  7624                           
  7625                           ;incstack = 0
  7626                           ; Regs used in _setLog_Code: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7627                           ;setLog_Code@rf stored from wreg
  7628  1D79  0020               	movlb	0	; select bank0
  7629  1D7A  00AC               	movwf	setLog_Code@rf
  7630                           
  7631                           ;RF_Control_B1.c: 250: RfPointSelect(rf);
  7632  1D7B  082C               	movf	setLog_Code@rf,w
  7633  1D7C  31A2  2279  319D   	fcall	_RfPointSelect
  7634                           
  7635                           ;RF_Control_B1.c: 251: Product->Data[12]=RF_Data[12];
  7636  1D7F  0021               	movlb	1	; select bank1
  7637  1D80  082C               	movf	(_RF_Data^(0+128)+12),w
  7638  1D81  0020               	movlb	0	; select bank0
  7639  1D82  00AB               	movwf	??_setLog_Code
  7640  1D83  0021               	movlb	1	; select bank1
  7641  1D84  086C               	movf	_Product^(0+128),w
  7642  1D85  3E0C               	addlw	12
  7643  1D86  0086               	movwf	6
  7644  1D87  3001               	movlw	1	; select bank2/3
  7645  1D88  0087               	movwf	7
  7646  1D89  0020               	movlb	0	; select bank0
  7647  1D8A  082B               	movf	??_setLog_Code,w
  7648  1D8B  0081               	movwf	1
  7649                           
  7650                           ;RF_Control_B1.c: 252: Product->Data[13]=RF_Data[13];
  7651  1D8C  0021               	movlb	1	; select bank1
  7652  1D8D  082D               	movf	(_RF_Data^(0+128)+13),w
  7653  1D8E  0020               	movlb	0	; select bank0
  7654  1D8F  00AB               	movwf	??_setLog_Code
  7655  1D90  0021               	movlb	1	; select bank1
  7656  1D91  086C               	movf	_Product^(0+128),w
  7657  1D92  3E0D               	addlw	13
  7658  1D93  0086               	movwf	6
  7659  1D94  3001               	movlw	1	; select bank2/3
  7660  1D95  0087               	movwf	7
  7661  1D96  0020               	movlb	0	; select bank0
  7662  1D97  082B               	movf	??_setLog_Code,w
  7663  1D98  0081               	movwf	1
  7664                           
  7665                           ;RF_Control_B1.c: 253: Product->Data[14]=RF_Data[14];
  7666  1D99  0021               	movlb	1	; select bank1
  7667  1D9A  082E               	movf	(_RF_Data^(0+128)+14),w
  7668  1D9B  0020               	movlb	0	; select bank0
  7669  1D9C  00AB               	movwf	??_setLog_Code
  7670  1D9D  0021               	movlb	1	; select bank1
  7671  1D9E  086C               	movf	_Product^(0+128),w
  7672  1D9F  3E0E               	addlw	14
  7673  1DA0  0086               	movwf	6
  7674  1DA1  3001               	movlw	1	; select bank2/3
  7675  1DA2  0087               	movwf	7
  7676  1DA3  0020               	movlb	0	; select bank0
  7677  1DA4  082B               	movf	??_setLog_Code,w
  7678  1DA5  0081               	movwf	1
  7679                           
  7680                           ;RF_Control_B1.c: 254: setBuz(1,1,100);
  7681  1DA6  01A6               	clrf	setBuz@count
  7682  1DA7  0AA6               	incf	setBuz@count,f
  7683  1DA8  3064               	movlw	100
  7684  1DA9  00A7               	movwf	setBuz@time
  7685  1DAA  3000               	movlw	0
  7686  1DAB  00A8               	movwf	setBuz@time+1
  7687  1DAC  3001               	movlw	1
  7688  1DAD  3195  25AB  319D   	fcall	_setBuz
  7689                           
  7690                           ;RF_Control_B1.c: 255: RF->Learn=0;
  7691  1DB0  0021               	movlb	1	; select bank1
  7692  1DB1  083E               	movf	_RF^(0+128),w
  7693  1DB2  0086               	movwf	6
  7694  1DB3  0187               	clrf	7
  7695  1DB4  1301               	bcf	1,6
  7696                           
  7697                           ;RF_Control_B1.c: 256: if(TMain->First)
  7698  1DB5  086D               	movf	_TMain^(0+128),w
  7699  1DB6  3E03               	addlw	3
  7700  1DB7  0086               	movwf	6
  7701  1DB8  3001               	movlw	1	; select bank2/3
  7702  1DB9  0087               	movwf	7
  7703  1DBA  1C81               	btfss	1,1
  7704  1DBB  2DC2               	goto	l2580
  7705                           
  7706                           ;RF_Control_B1.c: 257: {
  7707                           ;RF_Control_B1.c: 258: Memory->LoopSave=1;
  7708  1DBC  086B               	movf	_Memory^(0+128),w
  7709  1DBD  3E22               	addlw	34
  7710  1DBE  0086               	movwf	6
  7711  1DBF  3002               	movlw	2	; select bank4/5
  7712  1DC0  0087               	movwf	7
  7713  1DC1  1501               	bsf	1,2
  7714  1DC2                     l2580:	
  7715                           
  7716                           ;RF_Control_B1.c: 259: }
  7717                           ;RF_Control_B1.c: 260: Memory->Modify=1;
  7718  1DC2  086B               	movf	_Memory^(0+128),w
  7719  1DC3  3E22               	addlw	34
  7720  1DC4  0086               	movwf	6
  7721  1DC5  3002               	movlw	2	; select bank4/5
  7722  1DC6  0087               	movwf	7
  7723  1DC7  1401               	bsf	1,0
  7724  1DC8  0008               	return
  7725  1DC9                     __end_of_setLog_Code:	
  7726                           
  7727                           	psect	text26
  7728  163D                     __ptext26:	
  7729 ;; *************** function _setControl_Lights_Table *****************
  7730 ;; Defined at:
  7731 ;;		line 263 in file "G:\Program\PIC\Source_File\RF_Control_B1.c"
  7732 ;; Parameters:    Size  Location     Type
  7733 ;;  rf              1    wreg     unsigned char 
  7734 ;; Auto vars:     Size  Location     Type
  7735 ;;  rf              1   71[BANK0 ] unsigned char 
  7736 ;; Return value:  Size  Location     Type
  7737 ;;		None               void
  7738 ;; Registers used:
  7739 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7740 ;; Tracked objects:
  7741 ;;		On entry : 0/0
  7742 ;;		On exit  : 0/0
  7743 ;;		Unchanged: 0/0
  7744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7746 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7748 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7749 ;;Total ram usage:        1 bytes
  7750 ;; Hardware stack levels used:    1
  7751 ;; Hardware stack levels required when called:   10
  7752 ;; This function calls:
  7753 ;;		_RfPointSelect
  7754 ;;		_setBuz
  7755 ;;		_setDimmerLights
  7756 ;;		_setRFSW_AdjControl
  7757 ;;		_setRFSW_Control
  7758 ;;		_setRFSW_Status
  7759 ;;		_setSw_Status
  7760 ;;		_setTxData
  7761 ;; This function is called by:
  7762 ;;		_getRxData
  7763 ;; This function uses a non-reentrant model
  7764 ;;
  7765                           
  7766                           
  7767                           ;psect for function _setControl_Lights_Table
  7768  163D                     _setControl_Lights_Table:	
  7769                           
  7770                           ;incstack = 0
  7771                           ; Regs used in _setControl_Lights_Table: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
  7772                           ;setControl_Lights_Table@rf stored from wreg
  7773  163D  0020               	movlb	0	; select bank0
  7774  163E  00E7               	movwf	setControl_Lights_Table@rf
  7775                           
  7776                           ;RF_Control_B1.c: 265: RfPointSelect(rf);
  7777  163F  0867               	movf	setControl_Lights_Table@rf,w
  7778  1640  31A2  2279  3196   	fcall	_RfPointSelect
  7779                           
  7780                           ;RF_Control_B1.c: 266: if(RF_Data[15] == 0x00)
  7781  1643  0021               	movlb	1	; select bank1
  7782  1644  08AF               	movf	(_RF_Data^(0+128)+15),f
  7783  1645  1D03               	skipz
  7784  1646  2E93               	goto	l7305
  7785                           
  7786                           ;RF_Control_B1.c: 267: {
  7787                           ;RF_Control_B1.c: 269: setDimmerLights(1,0);
  7788  1647  0020               	movlb	0	; select bank0
  7789  1648  01A6               	clrf	setDimmerLights@status
  7790  1649  3001               	movlw	1
  7791  164A  3196  26D2  3196   	fcall	_setDimmerLights
  7792                           
  7793                           ;RF_Control_B1.c: 270: setRFSW_Status(1,0);
  7794  164D  0020               	movlb	0	; select bank0
  7795  164E  01A2               	clrf	setRFSW_Status@command
  7796  164F  3001               	movlw	1
  7797  1650  31A3  230E  3196   	fcall	_setRFSW_Status
  7798                           
  7799                           ;RF_Control_B1.c: 271: setSw_Status(1,0);
  7800  1653  0020               	movlb	0	; select bank0
  7801  1654  01A2               	clrf	setSw_Status@command
  7802  1655  3001               	movlw	1
  7803  1656  31A3  231D  3196   	fcall	_setSw_Status
  7804                           
  7805                           ;RF_Control_B1.c: 274: setDimmerLights(2,0);
  7806  1659  0020               	movlb	0	; select bank0
  7807  165A  01A6               	clrf	setDimmerLights@status
  7808  165B  3002               	movlw	2
  7809  165C  3196  26D2  3196   	fcall	_setDimmerLights
  7810                           
  7811                           ;RF_Control_B1.c: 275: setRFSW_Status(2,0);
  7812  165F  0020               	movlb	0	; select bank0
  7813  1660  01A2               	clrf	setRFSW_Status@command
  7814  1661  3002               	movlw	2
  7815  1662  31A3  230E  3196   	fcall	_setRFSW_Status
  7816                           
  7817                           ;RF_Control_B1.c: 276: setSw_Status(2,0);
  7818  1665  0020               	movlb	0	; select bank0
  7819  1666  01A2               	clrf	setSw_Status@command
  7820  1667  3002               	movlw	2
  7821  1668  31A3  231D  3196   	fcall	_setSw_Status
  7822                           
  7823                           ;RF_Control_B1.c: 284: Product->Data[9]=0;
  7824  166B  0021               	movlb	1	; select bank1
  7825  166C  086C               	movf	_Product^(0+128),w
  7826  166D  3E09               	addlw	9
  7827  166E  0086               	movwf	6
  7828  166F  3001               	movlw	1	; select bank2/3
  7829  1670  0087               	movwf	7
  7830  1671  0181               	clrf	1
  7831                           
  7832                           ;RF_Control_B1.c: 285: Product->Data[11]=0;
  7833  1672  086C               	movf	_Product^(0+128),w
  7834  1673  3E0B               	addlw	11
  7835  1674  0086               	movwf	6
  7836  1675  3001               	movlw	1	; select bank2/3
  7837  1676  0087               	movwf	7
  7838  1677  0181               	clrf	1
  7839                           
  7840                           ;RF_Control_B1.c: 286: Product->Data[15]=0;
  7841  1678  086C               	movf	_Product^(0+128),w
  7842  1679  3E0F               	addlw	15
  7843  167A  0086               	movwf	6
  7844  167B  3001               	movlw	1	; select bank2/3
  7845  167C  0087               	movwf	7
  7846  167D  0181               	clrf	1
  7847                           
  7848                           ;RF_Control_B1.c: 287: Product->Data[17]=0;
  7849  167E  086C               	movf	_Product^(0+128),w
  7850  167F  3E11               	addlw	17
  7851  1680  0086               	movwf	6
  7852  1681  3001               	movlw	1	; select bank2/3
  7853  1682  0087               	movwf	7
  7854  1683  0181               	clrf	1
  7855                           
  7856                           ;RF_Control_B1.c: 288: setBuz(1,1,100);
  7857  1684  0020               	movlb	0	; select bank0
  7858  1685  01A6               	clrf	setBuz@count
  7859  1686  0AA6               	incf	setBuz@count,f
  7860  1687  3064               	movlw	100
  7861  1688  00A7               	movwf	setBuz@time
  7862  1689  3000               	movlw	0
  7863  168A  00A8               	movwf	setBuz@time+1
  7864  168B  3001               	movlw	1
  7865  168C  3195  25AB  3196   	fcall	_setBuz
  7866                           
  7867                           ;RF_Control_B1.c: 289: setTxData(1);
  7868  168F  3001               	movlw	1
  7869  1690  319A  227A         	fcall	_setTxData
  7870                           
  7871                           ;RF_Control_B1.c: 290: }
  7872  1692  0008               	return
  7873  1693                     l7305:	
  7874                           
  7875                           ;RF_Control_B1.c: 291: else if(RF_Data[15] == 0x20)
  7876  1693  0021               	movlb	1	; select bank1
  7877  1694  082F               	movf	(_RF_Data^(0+128)+15),w
  7878  1695  3A20               	xorlw	32
  7879  1696  1D03               	skipz
  7880  1697  2EAE               	goto	l7311
  7881                           
  7882                           ;RF_Control_B1.c: 292: {
  7883                           ;RF_Control_B1.c: 293: Product->Data[9]=0;
  7884  1698  086C               	movf	_Product^(0+128),w
  7885  1699  3E09               	addlw	9
  7886  169A  0086               	movwf	6
  7887  169B  3001               	movlw	1	; select bank2/3
  7888  169C  0087               	movwf	7
  7889  169D  0181               	clrf	1
  7890                           
  7891                           ;RF_Control_B1.c: 294: Product->Data[11]=0;
  7892  169E  086C               	movf	_Product^(0+128),w
  7893  169F  3E0B               	addlw	11
  7894  16A0  0086               	movwf	6
  7895  16A1  3001               	movlw	1	; select bank2/3
  7896  16A2  0087               	movwf	7
  7897  16A3  0181               	clrf	1
  7898                           
  7899                           ;RF_Control_B1.c: 295: Product->Data[17]=0;
  7900  16A4  086C               	movf	_Product^(0+128),w
  7901  16A5  3E11               	addlw	17
  7902  16A6  0086               	movwf	6
  7903  16A7  3001               	movlw	1	; select bank2/3
  7904  16A8  0087               	movwf	7
  7905  16A9  0181               	clrf	1
  7906                           
  7907                           ;RF_Control_B1.c: 296: setTxData(1);
  7908  16AA  3001               	movlw	1
  7909  16AB  319A  227A         	fcall	_setTxData
  7910                           
  7911                           ;RF_Control_B1.c: 297: }
  7912  16AD  0008               	return
  7913  16AE                     l7311:	
  7914                           
  7915                           ;RF_Control_B1.c: 299: else if(RF_Data[15] == 0x01)
  7916  16AE  0021               	movlb	1	; select bank1
  7917  16AF  082F               	movf	(_RF_Data^(0+128)+15),w
  7918  16B0  3A01               	xorlw	1
  7919  16B1  1D03               	skipz
  7920  16B2  2EB7               	goto	l7315
  7921                           
  7922                           ;RF_Control_B1.c: 300: {
  7923                           ;RF_Control_B1.c: 301: setRFSW_Control(1);
  7924  16B3  3001               	movlw	1
  7925  16B4  3189  212B         	fcall	_setRFSW_Control
  7926                           
  7927                           ;RF_Control_B1.c: 302: }
  7928  16B6  0008               	return
  7929  16B7                     l7315:	
  7930                           
  7931                           ;RF_Control_B1.c: 304: else if(RF_Data[15] == 0x11)
  7932  16B7  0021               	movlb	1	; select bank1
  7933  16B8  082F               	movf	(_RF_Data^(0+128)+15),w
  7934  16B9  3A11               	xorlw	17
  7935  16BA  1D03               	skipz
  7936  16BB  2EC0               	goto	l7319
  7937                           
  7938                           ;RF_Control_B1.c: 305: {
  7939                           ;RF_Control_B1.c: 306: setRFSW_AdjControl(1);
  7940  16BC  3001               	movlw	1
  7941  16BD  319C  244E         	fcall	_setRFSW_AdjControl
  7942                           
  7943                           ;RF_Control_B1.c: 307: }
  7944  16BF  0008               	return
  7945  16C0                     l7319:	
  7946                           
  7947                           ;RF_Control_B1.c: 312: else if(RF_Data[15] == 0x02)
  7948  16C0  0021               	movlb	1	; select bank1
  7949  16C1  082F               	movf	(_RF_Data^(0+128)+15),w
  7950  16C2  3A02               	xorlw	2
  7951  16C3  1D03               	skipz
  7952  16C4  2EC9               	goto	l7323
  7953                           
  7954                           ;RF_Control_B1.c: 313: {
  7955                           ;RF_Control_B1.c: 314: setRFSW_Control(2);
  7956  16C5  3002               	movlw	2
  7957  16C6  3189  212B         	fcall	_setRFSW_Control
  7958                           
  7959                           ;RF_Control_B1.c: 315: }
  7960  16C8  0008               	return
  7961  16C9                     l7323:	
  7962                           
  7963                           ;RF_Control_B1.c: 317: else if(RF_Data[15] == 0x21)
  7964  16C9  0021               	movlb	1	; select bank1
  7965  16CA  082F               	movf	(_RF_Data^(0+128)+15),w
  7966  16CB  3A21               	xorlw	33
  7967  16CC  1D03               	skipz
  7968  16CD  0008               	return
  7969                           
  7970                           ;RF_Control_B1.c: 318: {
  7971                           ;RF_Control_B1.c: 319: setRFSW_AdjControl(2);
  7972  16CE  3002               	movlw	2
  7973  16CF  319C  244E         	fcall	_setRFSW_AdjControl
  7974  16D1  0008               	return
  7975  16D2                     __end_of_setControl_Lights_Table:	
  7976                           
  7977                           	psect	text27
  7978  092B                     __ptext27:	
  7979 ;; *************** function _setRFSW_Control *****************
  7980 ;; Defined at:
  7981 ;;		line 360 in file "G:\Program\PIC\Source_File\RF_Control_B1.c"
  7982 ;; Parameters:    Size  Location     Type
  7983 ;;  sw              1    wreg     unsigned char 
  7984 ;; Auto vars:     Size  Location     Type
  7985 ;;  sw              1   13[BANK0 ] unsigned char 
  7986 ;; Return value:  Size  Location     Type
  7987 ;;		None               void
  7988 ;; Registers used:
  7989 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7990 ;; Tracked objects:
  7991 ;;		On entry : 0/0
  7992 ;;		On exit  : 0/0
  7993 ;;		Unchanged: 0/0
  7994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7996 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7997 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7998 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7999 ;;Total ram usage:        3 bytes
  8000 ;; Hardware stack levels used:    1
  8001 ;; Hardware stack levels required when called:    6
  8002 ;; This function calls:
  8003 ;;		_RfSWPointSelect
  8004 ;;		_setBuz
  8005 ;;		_setDelayOff_GO
  8006 ;;		_setDimmerLights_Switch
  8007 ;;		_setDimmerLights_Trigger
  8008 ;;		_setRF_DimmerLights
  8009 ;;		_setSw_Status
  8010 ;;		_setTxData
  8011 ;; This function is called by:
  8012 ;;		_setControl_Lights_Table
  8013 ;; This function uses a non-reentrant model
  8014 ;;
  8015                           
  8016                           
  8017                           ;psect for function _setRFSW_Control
  8018  092B                     _setRFSW_Control:	
  8019                           
  8020                           ;incstack = 0
  8021                           ; Regs used in _setRFSW_Control: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8022                           ;setRFSW_Control@sw stored from wreg
  8023  092B  0020               	movlb	0	; select bank0
  8024  092C  00AD               	movwf	setRFSW_Control@sw
  8025                           
  8026                           ;RF_Control_B1.c: 362: RfSWPointSelect(sw);
  8027  092D  082D               	movf	setRFSW_Control@sw,w
  8028  092E  31A4  24FB  3189   	fcall	_RfSWPointSelect
  8029                           
  8030                           ;RF_Control_B1.c: 363: if(RF_Data[16] == 0x80)
  8031  0931  0021               	movlb	1	; select bank1
  8032  0932  0830               	movf	(_RF_Data^(0+128)+16),w
  8033  0933  3A80               	xorlw	128
  8034  0934  1D03               	skipz
  8035  0935  2953               	goto	l7139
  8036                           
  8037                           ;RF_Control_B1.c: 364: {
  8038                           ;RF_Control_B1.c: 365: setDelayOff_GO(sw,1,RF_Data[17]);
  8039  0936  0020               	movlb	0	; select bank0
  8040  0937  01A3               	clrf	setDelayOff_GO@command
  8041  0938  0AA3               	incf	setDelayOff_GO@command,f
  8042  0939  0021               	movlb	1	; select bank1
  8043  093A  0831               	movf	(_RF_Data^(0+128)+17),w
  8044  093B  0020               	movlb	0	; select bank0
  8045  093C  00AB               	movwf	??_setRFSW_Control
  8046  093D  082B               	movf	??_setRFSW_Control,w
  8047  093E  00A4               	movwf	setDelayOff_GO@value
  8048  093F  082D               	movf	setRFSW_Control@sw,w
  8049  0940  319A  22FA  3189   	fcall	_setDelayOff_GO
  8050                           
  8051                           ;RF_Control_B1.c: 366: Product->Data[26+sw]=RF_Data[17];
  8052  0943  0021               	movlb	1	; select bank1
  8053  0944  0831               	movf	(_RF_Data^(0+128)+17),w
  8054  0945  0020               	movlb	0	; select bank0
  8055  0946  00AB               	movwf	??_setRFSW_Control
  8056  0947  082D               	movf	setRFSW_Control@sw,w
  8057  0948  3E1A               	addlw	26
  8058  0949  0021               	movlb	1	; select bank1
  8059  094A  076C               	addwf	_Product^(0+128),w
  8060  094B  0020               	movlb	0	; select bank0
  8061  094C  00AC               	movwf	??_setRFSW_Control+1
  8062  094D  082C               	movf	??_setRFSW_Control+1,w
  8063  094E  0086               	movwf	6
  8064  094F  3001               	movlw	1	; select bank2/3
  8065  0950  0087               	movwf	7
  8066  0951  082B               	movf	??_setRFSW_Control,w
  8067  0952  0081               	movwf	1
  8068  0953                     l7139:	
  8069                           
  8070                           ;RF_Control_B1.c: 367: }
  8071                           ;RF_Control_B1.c: 368: if(RFSW->Status == 0)
  8072  0953  0021               	movlb	1	; select bank1
  8073  0954  083F               	movf	_RFSW^(0+128),w
  8074  0955  0086               	movwf	6
  8075  0956  0187               	clrf	7
  8076  0957  1801               	btfsc	1,0
  8077  0958  2980               	goto	l7151
  8078                           
  8079                           ;RF_Control_B1.c: 369: {
  8080                           ;RF_Control_B1.c: 370: RFSW->Status=1;
  8081  0959  083F               	movf	_RFSW^(0+128),w
  8082  095A  0086               	movwf	6
  8083  095B  0187               	clrf	7
  8084  095C  1401               	bsf	1,0
  8085                           
  8086                           ;RF_Control_B1.c: 371: setSw_Status(sw,1);
  8087  095D  0020               	movlb	0	; select bank0
  8088  095E  01A2               	clrf	setSw_Status@command
  8089  095F  0AA2               	incf	setSw_Status@command,f
  8090  0960  082D               	movf	setRFSW_Control@sw,w
  8091  0961  31A3  231D  3189   	fcall	_setSw_Status
  8092                           
  8093                           ;RF_Control_B1.c: 373: setDimmerLights_Trigger(sw,1);
  8094  0964  0020               	movlb	0	; select bank0
  8095  0965  01A2               	clrf	setDimmerLights_Trigger@command
  8096  0966  0AA2               	incf	setDimmerLights_Trigger@command,f
  8097  0967  082D               	movf	setRFSW_Control@sw,w
  8098  0968  31A3  23E3  3189   	fcall	_setDimmerLights_Trigger
  8099                           
  8100                           ;RF_Control_B1.c: 374: setDimmerLights_Switch(sw,1);
  8101  096B  0020               	movlb	0	; select bank0
  8102  096C  01A2               	clrf	setDimmerLights_Switch@command
  8103  096D  0AA2               	incf	setDimmerLights_Switch@command,f
  8104  096E  082D               	movf	setRFSW_Control@sw,w
  8105  096F  31A3  23D3  3189   	fcall	_setDimmerLights_Switch
  8106                           
  8107                           ;RF_Control_B1.c: 375: setRF_DimmerLights(sw,RFSW->Status);
  8108  0972  0021               	movlb	1	; select bank1
  8109  0973  083F               	movf	_RFSW^(0+128),w
  8110  0974  0086               	movwf	6
  8111  0975  0187               	clrf	7
  8112  0976  3000               	movlw	0
  8113  0977  1801               	btfsc	1,0
  8114  0978  3001               	movlw	1
  8115  0979  0020               	movlb	0	; select bank0
  8116  097A  00A0               	movwf	setRF_DimmerLights@on
  8117  097B  082D               	movf	setRFSW_Control@sw,w
  8118  097C  3190  20D8  3189   	fcall	_setRF_DimmerLights
  8119                           
  8120                           ;RF_Control_B1.c: 376: }
  8121  097F  29B9               	goto	l7167
  8122  0980                     l7151:	
  8123                           
  8124                           ;RF_Control_B1.c: 377: else
  8125                           ;RF_Control_B1.c: 378: {
  8126                           ;RF_Control_B1.c: 379: if(RF_Data[16] == 0x80)
  8127  0980  0021               	movlb	1	; select bank1
  8128  0981  0830               	movf	(_RF_Data^(0+128)+16),w
  8129  0982  3A80               	xorlw	128
  8130  0983  1D03               	skipz
  8131  0984  298D               	goto	l7155
  8132                           
  8133                           ;RF_Control_B1.c: 380: {
  8134                           ;RF_Control_B1.c: 381: setRF_DimmerLights(sw,1);
  8135  0985  0020               	movlb	0	; select bank0
  8136  0986  01A0               	clrf	setRF_DimmerLights@on
  8137  0987  0AA0               	incf	setRF_DimmerLights@on,f
  8138  0988  082D               	movf	setRFSW_Control@sw,w
  8139  0989  3190  20D8  3189   	fcall	_setRF_DimmerLights
  8140                           
  8141                           ;RF_Control_B1.c: 382: }
  8142  098C  29B9               	goto	l7167
  8143  098D                     l7155:	
  8144                           
  8145                           ;RF_Control_B1.c: 383: else
  8146                           ;RF_Control_B1.c: 384: {
  8147                           ;RF_Control_B1.c: 385: RFSW->Status=0;
  8148  098D  0021               	movlb	1	; select bank1
  8149  098E  083F               	movf	_RFSW^(0+128),w
  8150  098F  0086               	movwf	6
  8151  0990  0187               	clrf	7
  8152  0991  1001               	bcf	1,0
  8153                           
  8154                           ;RF_Control_B1.c: 386: setSw_Status(sw,0);
  8155  0992  0020               	movlb	0	; select bank0
  8156  0993  01A2               	clrf	setSw_Status@command
  8157  0994  082D               	movf	setRFSW_Control@sw,w
  8158  0995  31A3  231D  3189   	fcall	_setSw_Status
  8159                           
  8160                           ;RF_Control_B1.c: 388: setDimmerLights_Trigger(sw,1);
  8161  0998  0020               	movlb	0	; select bank0
  8162  0999  01A2               	clrf	setDimmerLights_Trigger@command
  8163  099A  0AA2               	incf	setDimmerLights_Trigger@command,f
  8164  099B  082D               	movf	setRFSW_Control@sw,w
  8165  099C  31A3  23E3  3189   	fcall	_setDimmerLights_Trigger
  8166                           
  8167                           ;RF_Control_B1.c: 389: setDimmerLights_Switch(sw,RFSW->Status);
  8168  099F  0021               	movlb	1	; select bank1
  8169  09A0  083F               	movf	_RFSW^(0+128),w
  8170  09A1  0086               	movwf	6
  8171  09A2  0187               	clrf	7
  8172  09A3  3000               	movlw	0
  8173  09A4  1801               	btfsc	1,0
  8174  09A5  3001               	movlw	1
  8175  09A6  0020               	movlb	0	; select bank0
  8176  09A7  00A2               	movwf	setDimmerLights_Switch@command
  8177  09A8  082D               	movf	setRFSW_Control@sw,w
  8178  09A9  31A3  23D3  3189   	fcall	_setDimmerLights_Switch
  8179                           
  8180                           ;RF_Control_B1.c: 391: setRF_DimmerLights(sw,0);
  8181  09AC  0020               	movlb	0	; select bank0
  8182  09AD  01A0               	clrf	setRF_DimmerLights@on
  8183  09AE  082D               	movf	setRFSW_Control@sw,w
  8184  09AF  3190  20D8  3189   	fcall	_setRF_DimmerLights
  8185                           
  8186                           ;RF_Control_B1.c: 392: setDelayOff_GO(sw,0,0);
  8187  09B2  0020               	movlb	0	; select bank0
  8188  09B3  01A3               	clrf	setDelayOff_GO@command
  8189  09B4  01A4               	clrf	setDelayOff_GO@value
  8190  09B5  082D               	movf	setRFSW_Control@sw,w
  8191  09B6  319A  22FA  3189   	fcall	_setDelayOff_GO
  8192  09B9                     l7167:	
  8193                           
  8194                           ;RF_Control_B1.c: 393: }
  8195                           ;RF_Control_B1.c: 394: }
  8196                           ;RF_Control_B1.c: 395: setBuz(1,1,100);
  8197  09B9  0020               	movlb	0	; select bank0
  8198  09BA  01A6               	clrf	setBuz@count
  8199  09BB  0AA6               	incf	setBuz@count,f
  8200  09BC  3064               	movlw	100
  8201  09BD  00A7               	movwf	setBuz@time
  8202  09BE  3000               	movlw	0
  8203  09BF  00A8               	movwf	setBuz@time+1
  8204  09C0  3001               	movlw	1
  8205  09C1  3195  25AB  3189   	fcall	_setBuz
  8206                           
  8207                           ;RF_Control_B1.c: 396: setTxData(1);
  8208  09C4  3001               	movlw	1
  8209  09C5  319A  227A         	fcall	_setTxData
  8210  09C7  0008               	return
  8211  09C8                     __end_of_setRFSW_Control:	
  8212                           
  8213                           	psect	text28
  8214  1AFA                     __ptext28:	
  8215 ;; *************** function _setDelayOff_GO *****************
  8216 ;; Defined at:
  8217 ;;		line 92 in file "G:\Program\PIC\Source_File\DelayOff_B1.c"
  8218 ;; Parameters:    Size  Location     Type
  8219 ;;  sw              1    wreg     unsigned char 
  8220 ;;  command         1    3[BANK0 ] unsigned char 
  8221 ;;  value           1    4[BANK0 ] unsigned char 
  8222 ;; Auto vars:     Size  Location     Type
  8223 ;;  sw              1    6[BANK0 ] unsigned char 
  8224 ;; Return value:  Size  Location     Type
  8225 ;;		None               void
  8226 ;; Registers used:
  8227 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8228 ;; Tracked objects:
  8229 ;;		On entry : 0/0
  8230 ;;		On exit  : 0/0
  8231 ;;		Unchanged: 0/0
  8232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8233 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8234 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8235 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8236 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8237 ;;Total ram usage:        4 bytes
  8238 ;; Hardware stack levels used:    1
  8239 ;; Hardware stack levels required when called:    5
  8240 ;; This function calls:
  8241 ;;		_DelayOffPointSelect
  8242 ;;		_DelayTimejudge
  8243 ;; This function is called by:
  8244 ;;		_setRFSW_Control
  8245 ;;		_Sw_DimmerOffFunc
  8246 ;; This function uses a non-reentrant model
  8247 ;;
  8248                           
  8249                           
  8250                           ;psect for function _setDelayOff_GO
  8251  1AFA                     _setDelayOff_GO:	
  8252                           
  8253                           ;incstack = 0
  8254                           ; Regs used in _setDelayOff_GO: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8255                           ;setDelayOff_GO@sw stored from wreg
  8256  1AFA  0020               	movlb	0	; select bank0
  8257  1AFB  00A6               	movwf	setDelayOff_GO@sw
  8258                           
  8259                           ;DelayOff_B1.c: 94: DelayOffPointSelect(sw);
  8260  1AFC  0826               	movf	setDelayOff_GO@sw,w
  8261  1AFD  31A5  2527  319A   	fcall	_DelayOffPointSelect
  8262                           
  8263                           ;DelayOff_B1.c: 95: if(DelayOff->Enable)
  8264  1B00  0021               	movlb	1	; select bank1
  8265  1B01  0839               	movf	_DelayOff^(0+128),w
  8266  1B02  0086               	movwf	6
  8267  1B03  0187               	clrf	7
  8268  1B04  1C01               	btfss	1,0
  8269  1B05  0008               	return
  8270                           
  8271                           ;DelayOff_B1.c: 96: {
  8272                           ;DelayOff_B1.c: 97: DelayOff->GO=command;
  8273  1B06  0839               	movf	_DelayOff^(0+128),w
  8274  1B07  0086               	movwf	6
  8275  1B08  0187               	clrf	7
  8276  1B09  0020               	movlb	0	; select bank0
  8277  1B0A  0823               	movf	setDelayOff_GO@command,w
  8278  1B0B  1081               	bcf	1,1
  8279  1B0C  1D03               	skipz
  8280  1B0D  1481               	bsf	1,1
  8281                           
  8282                           ;DelayOff_B1.c: 98: if(command)
  8283  1B0E  0823               	movf	setDelayOff_GO@command,w
  8284  1B0F  1903               	btfsc	3,2
  8285  1B10  2B1F               	goto	l6883
  8286                           
  8287                           ;DelayOff_B1.c: 99: {
  8288                           ;DelayOff_B1.c: 100: DelayOff->Value=DelayTimejudge(value);
  8289  1B11  0824               	movf	setDelayOff_GO@value,w
  8290  1B12  3199  214A  319A   	fcall	_DelayTimejudge
  8291  1B15  0020               	movlb	0	; select bank0
  8292  1B16  00A5               	movwf	??_setDelayOff_GO
  8293  1B17  0021               	movlb	1	; select bank1
  8294  1B18  0A39               	incf	_DelayOff^(0+128),w
  8295  1B19  0086               	movwf	6
  8296  1B1A  0187               	clrf	7
  8297  1B1B  0020               	movlb	0	; select bank0
  8298  1B1C  0825               	movf	??_setDelayOff_GO,w
  8299  1B1D  0081               	movwf	1
  8300                           
  8301                           ;DelayOff_B1.c: 101: }
  8302  1B1E  2B2D               	goto	l6887
  8303  1B1F                     l6883:	
  8304                           
  8305                           ;DelayOff_B1.c: 102: else if(command == 0)
  8306  1B1F  08A3               	movf	setDelayOff_GO@command,f
  8307  1B20  1D03               	skipz
  8308  1B21  2B2D               	goto	l6887
  8309                           
  8310                           ;DelayOff_B1.c: 103: {
  8311                           ;DelayOff_B1.c: 104: Product->Data[sw+26]=0;
  8312  1B22  0826               	movf	setDelayOff_GO@sw,w
  8313  1B23  3E1A               	addlw	26
  8314  1B24  0021               	movlb	1	; select bank1
  8315  1B25  076C               	addwf	_Product^(0+128),w
  8316  1B26  0020               	movlb	0	; select bank0
  8317  1B27  00A5               	movwf	??_setDelayOff_GO
  8318  1B28  0825               	movf	??_setDelayOff_GO,w
  8319  1B29  0086               	movwf	6
  8320  1B2A  3001               	movlw	1	; select bank2/3
  8321  1B2B  0087               	movwf	7
  8322  1B2C  0181               	clrf	1
  8323  1B2D                     l6887:	
  8324                           
  8325                           ;DelayOff_B1.c: 105: }
  8326                           ;DelayOff_B1.c: 106: DelayOff->SecondTime=0;
  8327  1B2D  0021               	movlb	1	; select bank1
  8328  1B2E  0839               	movf	_DelayOff^(0+128),w
  8329  1B2F  3E02               	addlw	2
  8330  1B30  0086               	movwf	6
  8331  1B31  0187               	clrf	7
  8332  1B32  3000               	movlw	0
  8333  1B33  3FC0               	movwi [0]fsr1
  8334  1B34  3FC1               	movwi [1]fsr1
  8335                           
  8336                           ;DelayOff_B1.c: 107: DelayOff->MinuteTime=0;
  8337  1B35  0839               	movf	_DelayOff^(0+128),w
  8338  1B36  3E04               	addlw	4
  8339  1B37  0086               	movwf	6
  8340  1B38  0187               	clrf	7
  8341  1B39  0181               	clrf	1
  8342  1B3A  0008               	return
  8343  1B3B                     __end_of_setDelayOff_GO:	
  8344                           
  8345                           	psect	text29
  8346  194A                     __ptext29:	
  8347 ;; *************** function _DelayTimejudge *****************
  8348 ;; Defined at:
  8349 ;;		line 111 in file "G:\Program\PIC\Source_File\DelayOff_B1.c"
  8350 ;; Parameters:    Size  Location     Type
  8351 ;;  value           1    wreg     unsigned char 
  8352 ;; Auto vars:     Size  Location     Type
  8353 ;;  value           1    2[BANK0 ] unsigned char 
  8354 ;;  i               1    1[BANK0 ] unsigned char 
  8355 ;; Return value:  Size  Location     Type
  8356 ;;                  1    wreg      unsigned char 
  8357 ;; Registers used:
  8358 ;;		wreg
  8359 ;; Tracked objects:
  8360 ;;		On entry : 0/0
  8361 ;;		On exit  : 0/0
  8362 ;;		Unchanged: 0/0
  8363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8365 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8366 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8367 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8368 ;;Total ram usage:        3 bytes
  8369 ;; Hardware stack levels used:    1
  8370 ;; Hardware stack levels required when called:    4
  8371 ;; This function calls:
  8372 ;;		Nothing
  8373 ;; This function is called by:
  8374 ;;		_setDelayOff_GO
  8375 ;; This function uses a non-reentrant model
  8376 ;;
  8377                           
  8378                           
  8379                           ;psect for function _DelayTimejudge
  8380  194A                     _DelayTimejudge:	
  8381                           
  8382                           ;incstack = 0
  8383                           ; Regs used in _DelayTimejudge: [wreg]
  8384                           ;DelayTimejudge@value stored from wreg
  8385  194A  0020               	movlb	0	; select bank0
  8386  194B  00A2               	movwf	DelayTimejudge@value
  8387                           
  8388                           ;DelayOff_B1.c: 113: char i=5;
  8389  194C  3005               	movlw	5
  8390  194D  00A0               	movwf	??_DelayTimejudge
  8391  194E  0820               	movf	??_DelayTimejudge,w
  8392  194F  00A1               	movwf	DelayTimejudge@i
  8393                           
  8394                           ;DelayOff_B1.c: 114: if(value == 0x05)
  8395  1950  0822               	movf	DelayTimejudge@value,w
  8396  1951  3A05               	xorlw	5
  8397  1952  1D03               	skipz
  8398  1953  2956               	goto	l6709
  8399                           
  8400                           ;DelayOff_B1.c: 115: {
  8401                           ;DelayOff_B1.c: 116: i=5;
  8402  1954  3005               	movlw	5
  8403  1955  2973               	goto	L7
  8404  1956                     l6709:	
  8405                           ;DelayOff_B1.c: 117: }
  8406                           
  8407                           
  8408                           ;DelayOff_B1.c: 118: else if(value == 0x10)
  8409  1956  0822               	movf	DelayTimejudge@value,w
  8410  1957  3A10               	xorlw	16
  8411  1958  1D03               	skipz
  8412  1959  295C               	goto	l6713
  8413                           
  8414                           ;DelayOff_B1.c: 119: {
  8415                           ;DelayOff_B1.c: 120: i=10;
  8416  195A  300A               	movlw	10
  8417  195B  2973               	goto	L7
  8418  195C                     l6713:	
  8419                           ;DelayOff_B1.c: 121: }
  8420                           
  8421                           
  8422                           ;DelayOff_B1.c: 122: else if(value == 0x15)
  8423  195C  0822               	movf	DelayTimejudge@value,w
  8424  195D  3A15               	xorlw	21
  8425  195E  1D03               	skipz
  8426  195F  2962               	goto	l6717
  8427                           
  8428                           ;DelayOff_B1.c: 123: {
  8429                           ;DelayOff_B1.c: 124: i=15;
  8430  1960  300F               	movlw	15
  8431  1961  2973               	goto	L7
  8432  1962                     l6717:	
  8433                           ;DelayOff_B1.c: 125: }
  8434                           
  8435                           
  8436                           ;DelayOff_B1.c: 126: else if(value == 0x20)
  8437  1962  0822               	movf	DelayTimejudge@value,w
  8438  1963  3A20               	xorlw	32
  8439  1964  1D03               	skipz
  8440  1965  2968               	goto	l6721
  8441                           
  8442                           ;DelayOff_B1.c: 127: {
  8443                           ;DelayOff_B1.c: 128: i=20;
  8444  1966  3014               	movlw	20
  8445  1967  2973               	goto	L7
  8446  1968                     l6721:	
  8447                           ;DelayOff_B1.c: 129: }
  8448                           
  8449                           
  8450                           ;DelayOff_B1.c: 130: else if(value == 0x25)
  8451  1968  0822               	movf	DelayTimejudge@value,w
  8452  1969  3A25               	xorlw	37
  8453  196A  1D03               	skipz
  8454  196B  296E               	goto	l6725
  8455                           
  8456                           ;DelayOff_B1.c: 131: {
  8457                           ;DelayOff_B1.c: 132: i=25;
  8458  196C  3019               	movlw	25
  8459  196D  2973               	goto	L7
  8460  196E                     l6725:	
  8461                           ;DelayOff_B1.c: 133: }
  8462                           
  8463                           
  8464                           ;DelayOff_B1.c: 134: else if(value == 0x30)
  8465  196E  0822               	movf	DelayTimejudge@value,w
  8466  196F  3A30               	xorlw	48
  8467  1970  1D03               	skipz
  8468  1971  2976               	goto	l601
  8469                           
  8470                           ;DelayOff_B1.c: 135: {
  8471                           ;DelayOff_B1.c: 136: i=30;
  8472  1972  301E               	movlw	30
  8473  1973                     L7:	
  8474  1973  00A0               	movwf	??_DelayTimejudge
  8475  1974  0820               	movf	??_DelayTimejudge,w
  8476  1975  00A1               	movwf	DelayTimejudge@i
  8477  1976                     l601:	
  8478                           
  8479                           ;DelayOff_B1.c: 137: }
  8480                           ;DelayOff_B1.c: 138: return i;
  8481  1976  0821               	movf	DelayTimejudge@i,w
  8482  1977  0008               	return
  8483  1978                     __end_of_DelayTimejudge:	
  8484                           
  8485                           	psect	text30
  8486  1C4E                     __ptext30:	
  8487 ;; *************** function _setRFSW_AdjControl *****************
  8488 ;; Defined at:
  8489 ;;		line 399 in file "G:\Program\PIC\Source_File\RF_Control_B1.c"
  8490 ;; Parameters:    Size  Location     Type
  8491 ;;  sw              1    wreg     unsigned char 
  8492 ;; Auto vars:     Size  Location     Type
  8493 ;;  sw              1   70[BANK0 ] unsigned char 
  8494 ;; Return value:  Size  Location     Type
  8495 ;;		None               void
  8496 ;; Registers used:
  8497 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8498 ;; Tracked objects:
  8499 ;;		On entry : 0/0
  8500 ;;		On exit  : 0/0
  8501 ;;		Unchanged: 0/0
  8502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8504 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8505 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8506 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8507 ;;Total ram usage:        3 bytes
  8508 ;; Hardware stack levels used:    1
  8509 ;; Hardware stack levels required when called:    9
  8510 ;; This function calls:
  8511 ;;		_RfSWPointSelect
  8512 ;;		_setRF_DimmerValue
  8513 ;;		_setTxData
  8514 ;; This function is called by:
  8515 ;;		_setControl_Lights_Table
  8516 ;; This function uses a non-reentrant model
  8517 ;;
  8518                           
  8519                           
  8520                           ;psect for function _setRFSW_AdjControl
  8521  1C4E                     _setRFSW_AdjControl:	
  8522                           
  8523                           ;incstack = 0
  8524                           ; Regs used in _setRFSW_AdjControl: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8525                           ;setRFSW_AdjControl@sw stored from wreg
  8526  1C4E  0020               	movlb	0	; select bank0
  8527  1C4F  00E6               	movwf	setRFSW_AdjControl@sw
  8528                           
  8529                           ;RF_Control_B1.c: 401: RfSWPointSelect(sw);
  8530  1C50  0866               	movf	setRFSW_AdjControl@sw,w
  8531  1C51  31A4  24FB  319C   	fcall	_RfSWPointSelect
  8532                           
  8533                           ;RF_Control_B1.c: 402: if(RFSW->Status)
  8534  1C54  0021               	movlb	1	; select bank1
  8535  1C55  083F               	movf	_RFSW^(0+128),w
  8536  1C56  0086               	movwf	6
  8537  1C57  0187               	clrf	7
  8538  1C58  1C01               	btfss	1,0
  8539  1C59  2C66               	goto	l7179
  8540                           
  8541                           ;RF_Control_B1.c: 403: {
  8542                           ;RF_Control_B1.c: 404: Memory->Modify=1;
  8543  1C5A  086B               	movf	_Memory^(0+128),w
  8544  1C5B  3E22               	addlw	34
  8545  1C5C  0086               	movwf	6
  8546  1C5D  3002               	movlw	2	; select bank4/5
  8547  1C5E  0087               	movwf	7
  8548  1C5F  1401               	bsf	1,0
  8549                           
  8550                           ;RF_Control_B1.c: 405: setRF_DimmerValue(sw);
  8551  1C60  0020               	movlb	0	; select bank0
  8552  1C61  0866               	movf	setRFSW_AdjControl@sw,w
  8553  1C62  319A  223D  319C   	fcall	_setRF_DimmerValue
  8554                           
  8555                           ;RF_Control_B1.c: 406: }
  8556  1C65  2C7C               	goto	l2612
  8557  1C66                     l7179:	
  8558                           
  8559                           ;RF_Control_B1.c: 407: else
  8560                           ;RF_Control_B1.c: 408: {
  8561                           ;RF_Control_B1.c: 409: Product->Data[9]=Product->Data[20+sw];
  8562  1C66  0020               	movlb	0	; select bank0
  8563  1C67  0866               	movf	setRFSW_AdjControl@sw,w
  8564  1C68  3E14               	addlw	20
  8565  1C69  0021               	movlb	1	; select bank1
  8566  1C6A  076C               	addwf	_Product^(0+128),w
  8567  1C6B  0020               	movlb	0	; select bank0
  8568  1C6C  00E4               	movwf	??_setRFSW_AdjControl
  8569  1C6D  0864               	movf	??_setRFSW_AdjControl,w
  8570  1C6E  0086               	movwf	6
  8571  1C6F  3001               	movlw	1	; select bank2/3
  8572  1C70  0087               	movwf	7
  8573  1C71  0801               	movf	1,w
  8574  1C72  00E5               	movwf	??_setRFSW_AdjControl+1
  8575  1C73  0021               	movlb	1	; select bank1
  8576  1C74  086C               	movf	_Product^(0+128),w
  8577  1C75  3E09               	addlw	9
  8578  1C76  0086               	movwf	6
  8579  1C77  3001               	movlw	1	; select bank2/3
  8580  1C78  0087               	movwf	7
  8581  1C79  0020               	movlb	0	; select bank0
  8582  1C7A  0865               	movf	??_setRFSW_AdjControl+1,w
  8583  1C7B  0081               	movwf	1
  8584  1C7C                     l2612:	
  8585                           
  8586                           ;RF_Control_B1.c: 410: }
  8587                           ;RF_Control_B1.c: 411: Product->Data[17]=Product->Data[26+sw];
  8588  1C7C  0020               	movlb	0	; select bank0
  8589  1C7D  0866               	movf	setRFSW_AdjControl@sw,w
  8590  1C7E  3E1A               	addlw	26
  8591  1C7F  0021               	movlb	1	; select bank1
  8592  1C80  076C               	addwf	_Product^(0+128),w
  8593  1C81  0020               	movlb	0	; select bank0
  8594  1C82  00E4               	movwf	??_setRFSW_AdjControl
  8595  1C83  0864               	movf	??_setRFSW_AdjControl,w
  8596  1C84  0086               	movwf	6
  8597  1C85  3001               	movlw	1	; select bank2/3
  8598  1C86  0087               	movwf	7
  8599  1C87  0801               	movf	1,w
  8600  1C88  00E5               	movwf	??_setRFSW_AdjControl+1
  8601  1C89  0021               	movlb	1	; select bank1
  8602  1C8A  086C               	movf	_Product^(0+128),w
  8603  1C8B  3E11               	addlw	17
  8604  1C8C  0086               	movwf	6
  8605  1C8D  3001               	movlw	1	; select bank2/3
  8606  1C8E  0087               	movwf	7
  8607  1C8F  0020               	movlb	0	; select bank0
  8608  1C90  0865               	movf	??_setRFSW_AdjControl+1,w
  8609  1C91  0081               	movwf	1
  8610                           
  8611                           ;RF_Control_B1.c: 412: setTxData(1);
  8612  1C92  3001               	movlw	1
  8613  1C93  319A  227A         	fcall	_setTxData
  8614  1C95  0008               	return
  8615  1C96                     __end_of_setRFSW_AdjControl:	
  8616                           
  8617                           	psect	text31
  8618  1A3D                     __ptext31:	
  8619 ;; *************** function _setRF_DimmerValue *****************
  8620 ;; Defined at:
  8621 ;;		line 423 in file "G:\Program\PIC\Source_File\RF_Control_B1.c"
  8622 ;; Parameters:    Size  Location     Type
  8623 ;;  lights          1    wreg     unsigned char 
  8624 ;; Auto vars:     Size  Location     Type
  8625 ;;  lights          1   67[BANK0 ] unsigned char 
  8626 ;; Return value:  Size  Location     Type
  8627 ;;		None               void
  8628 ;; Registers used:
  8629 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8630 ;; Tracked objects:
  8631 ;;		On entry : 0/0
  8632 ;;		On exit  : 0/0
  8633 ;;		Unchanged: 0/0
  8634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8636 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8637 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8638 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8639 ;;Total ram usage:        3 bytes
  8640 ;; Hardware stack levels used:    1
  8641 ;; Hardware stack levels required when called:    8
  8642 ;; This function calls:
  8643 ;;		_setDimmerLights_AdjRF
  8644 ;; This function is called by:
  8645 ;;		_setRFSW_AdjControl
  8646 ;; This function uses a non-reentrant model
  8647 ;;
  8648                           
  8649                           
  8650                           ;psect for function _setRF_DimmerValue
  8651  1A3D                     _setRF_DimmerValue:	
  8652                           
  8653                           ;incstack = 0
  8654                           ; Regs used in _setRF_DimmerValue: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8655                           ;setRF_DimmerValue@lights stored from wreg
  8656  1A3D  0020               	movlb	0	; select bank0
  8657  1A3E  00E3               	movwf	setRF_DimmerValue@lights
  8658                           
  8659                           ;RF_Control_B1.c: 425: if(RF_Data[9] > 0x64)
  8660  1A3F  3065               	movlw	101
  8661  1A40  0021               	movlb	1	; select bank1
  8662  1A41  0229               	subwf	(_RF_Data^(0+128)+9),w
  8663  1A42  1C03               	skipc
  8664  1A43  2A4A               	goto	l6993
  8665                           
  8666                           ;RF_Control_B1.c: 426: {
  8667                           ;RF_Control_B1.c: 427: RF_Data[9]=0x64;
  8668  1A44  3064               	movlw	100
  8669  1A45  0020               	movlb	0	; select bank0
  8670  1A46  00E1               	movwf	??_setRF_DimmerValue
  8671  1A47  0861               	movf	??_setRF_DimmerValue,w
  8672  1A48  0021               	movlb	1	; select bank1
  8673  1A49  00A9               	movwf	(_RF_Data^(0+128)+9)
  8674  1A4A                     l6993:	
  8675                           
  8676                           ;RF_Control_B1.c: 428: }
  8677                           ;RF_Control_B1.c: 429: Product->Data[9]=RF_Data[9];
  8678  1A4A  0829               	movf	(_RF_Data^(0+128)+9),w
  8679  1A4B  0020               	movlb	0	; select bank0
  8680  1A4C  00E1               	movwf	??_setRF_DimmerValue
  8681  1A4D  0021               	movlb	1	; select bank1
  8682  1A4E  086C               	movf	_Product^(0+128),w
  8683  1A4F  3E09               	addlw	9
  8684  1A50  0086               	movwf	6
  8685  1A51  3001               	movlw	1	; select bank2/3
  8686  1A52  0087               	movwf	7
  8687  1A53  0020               	movlb	0	; select bank0
  8688  1A54  0861               	movf	??_setRF_DimmerValue,w
  8689  1A55  0081               	movwf	1
  8690                           
  8691                           ;RF_Control_B1.c: 430: Product->Data[11]=lights;
  8692  1A56  0863               	movf	setRF_DimmerValue@lights,w
  8693  1A57  00E1               	movwf	??_setRF_DimmerValue
  8694  1A58  0021               	movlb	1	; select bank1
  8695  1A59  086C               	movf	_Product^(0+128),w
  8696  1A5A  3E0B               	addlw	11
  8697  1A5B  0086               	movwf	6
  8698  1A5C  3001               	movlw	1	; select bank2/3
  8699  1A5D  0087               	movwf	7
  8700  1A5E  0020               	movlb	0	; select bank0
  8701  1A5F  0861               	movf	??_setRF_DimmerValue,w
  8702  1A60  0081               	movwf	1
  8703                           
  8704                           ;RF_Control_B1.c: 431: Product->Data[(20+lights)]=Product->Data[9];
  8705  1A61  0021               	movlb	1	; select bank1
  8706  1A62  086C               	movf	_Product^(0+128),w
  8707  1A63  3E09               	addlw	9
  8708  1A64  0086               	movwf	6
  8709  1A65  3001               	movlw	1	; select bank2/3
  8710  1A66  0087               	movwf	7
  8711  1A67  0801               	movf	1,w
  8712  1A68  0020               	movlb	0	; select bank0
  8713  1A69  00E1               	movwf	??_setRF_DimmerValue
  8714  1A6A  0863               	movf	setRF_DimmerValue@lights,w
  8715  1A6B  3E14               	addlw	20
  8716  1A6C  0021               	movlb	1	; select bank1
  8717  1A6D  076C               	addwf	_Product^(0+128),w
  8718  1A6E  0020               	movlb	0	; select bank0
  8719  1A6F  00E2               	movwf	??_setRF_DimmerValue+1
  8720  1A70  0862               	movf	??_setRF_DimmerValue+1,w
  8721  1A71  0086               	movwf	6
  8722  1A72  3001               	movlw	1	; select bank2/3
  8723  1A73  0087               	movwf	7
  8724  1A74  0861               	movf	??_setRF_DimmerValue,w
  8725  1A75  0081               	movwf	1
  8726                           
  8727                           ;RF_Control_B1.c: 432: setDimmerLights_AdjRF(lights);
  8728  1A76  0863               	movf	setRF_DimmerValue@lights,w
  8729  1A77  31A7  2746         	fcall	_setDimmerLights_AdjRF
  8730  1A79  0008               	return
  8731  1A7A                     __end_of_setRF_DimmerValue:	
  8732                           
  8733                           	psect	text32
  8734  2746                     __ptext32:	
  8735 ;; *************** function _setDimmerLights_AdjRF *****************
  8736 ;; Defined at:
  8737 ;;		line 424 in file "G:\Program\PIC\Source_File\Dimmer_B1.c"
  8738 ;; Parameters:    Size  Location     Type
  8739 ;;  lights          1    wreg     unsigned char 
  8740 ;; Auto vars:     Size  Location     Type
  8741 ;;  lights          1   64[BANK0 ] unsigned char 
  8742 ;; Return value:  Size  Location     Type
  8743 ;;		None               void
  8744 ;; Registers used:
  8745 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8746 ;; Tracked objects:
  8747 ;;		On entry : 0/0
  8748 ;;		On exit  : 0/0
  8749 ;;		Unchanged: 0/0
  8750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8752 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8753 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8754 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8755 ;;Total ram usage:        2 bytes
  8756 ;; Hardware stack levels used:    1
  8757 ;; Hardware stack levels required when called:    7
  8758 ;; This function calls:
  8759 ;;		_DimmerLightsPointSelect
  8760 ;;		_getPercentValue
  8761 ;; This function is called by:
  8762 ;;		_setRF_DimmerValue
  8763 ;; This function uses a non-reentrant model
  8764 ;;
  8765                           
  8766                           
  8767                           ;psect for function _setDimmerLights_AdjRF
  8768  2746                     _setDimmerLights_AdjRF:	
  8769                           
  8770                           ;incstack = 0
  8771                           ; Regs used in _setDimmerLights_AdjRF: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  8772                           ;setDimmerLights_AdjRF@lights stored from wreg
  8773  2746  0020               	movlb	0	; select bank0
  8774  2747  00E0               	movwf	setDimmerLights_AdjRF@lights
  8775                           
  8776                           ;Dimmer_B1.c: 426: DimmerLightsPointSelect(lights);
  8777  2748  0860               	movf	setDimmerLights_AdjRF@lights,w
  8778  2749  31A4  2497  31A7   	fcall	_DimmerLightsPointSelect
  8779                           
  8780                           ;Dimmer_B1.c: 427: DimmerLights->AdjRF=1;
  8781  274C  0020               	movlb	0	; select bank0
  8782  274D  086D               	movf	_DimmerLights,w
  8783  274E  0086               	movwf	6
  8784  274F  3001               	movlw	1	; select bank2/3
  8785  2750  0087               	movwf	7
  8786  2751  1501               	bsf	1,2
  8787                           
  8788                           ;Dimmer_B1.c: 428: DimmerLights->Signal=1;
  8789  2752  086D               	movf	_DimmerLights,w
  8790  2753  0086               	movwf	6
  8791  2754  3001               	movlw	1	; select bank2/3
  8792  2755  0087               	movwf	7
  8793  2756  1481               	bsf	1,1
  8794                           
  8795                           ;Dimmer_B1.c: 429: DimmerLights->MaxmumValue=getPercentValue(Product->Data[9]);
  8796  2757  0021               	movlb	1	; select bank1
  8797  2758  086C               	movf	_Product^(0+128),w
  8798  2759  3E09               	addlw	9
  8799  275A  0086               	movwf	6
  8800  275B  3001               	movlw	1	; select bank2/3
  8801  275C  0087               	movwf	7
  8802  275D  0801               	movf	1,w
  8803  275E  319E  261E         	fcall	_getPercentValue
  8804  2760  0020               	movlb	0	; select bank0
  8805  2761  00DF               	movwf	??_setDimmerLights_AdjRF
  8806  2762  086D               	movf	_DimmerLights,w
  8807  2763  3E05               	addlw	5
  8808  2764  0086               	movwf	6
  8809  2765  3001               	movlw	1	; select bank2/3
  8810  2766  0087               	movwf	7
  8811  2767  085F               	movf	??_setDimmerLights_AdjRF,w
  8812  2768  0081               	movwf	1
  8813  2769  0008               	return
  8814  276A                     __end_of_setDimmerLights_AdjRF:	
  8815                           
  8816                           	psect	text33
  8817  1B7F                     __ptext33:	
  8818 ;; *************** function _CC2500_TxData *****************
  8819 ;; Defined at:
  8820 ;;		line 30 in file "G:\Program\PIC\Source_File\CC2500_B1.c"
  8821 ;; Parameters:    Size  Location     Type
  8822 ;;		None
  8823 ;; Auto vars:     Size  Location     Type
  8824 ;;  loop_e          1    5[BANK0 ] unsigned char 
  8825 ;; Return value:  Size  Location     Type
  8826 ;;		None               void
  8827 ;; Registers used:
  8828 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8829 ;; Tracked objects:
  8830 ;;		On entry : 0/0
  8831 ;;		On exit  : 0/0
  8832 ;;		Unchanged: 0/0
  8833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8835 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8836 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8837 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8838 ;;Total ram usage:        2 bytes
  8839 ;; Hardware stack levels used:    1
  8840 ;; Hardware stack levels required when called:    6
  8841 ;; This function calls:
  8842 ;;		_CC2500_WriteByte
  8843 ;;		_CC2500_WriteCommand
  8844 ;; This function is called by:
  8845 ;;		_setRF_Main
  8846 ;; This function uses a non-reentrant model
  8847 ;;
  8848                           
  8849                           
  8850                           ;psect for function _CC2500_TxData
  8851  1B7F                     _CC2500_TxData:	
  8852                           
  8853                           ;CC2500_B1.c: 32: unsigned char loop_e;
  8854                           ;CC2500_B1.c: 34: RC4=0;
  8855                           
  8856                           ;incstack = 0
  8857                           ; Regs used in _CC2500_TxData: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8858  1B7F  0020               	movlb	0	; select bank0
  8859  1B80  120E               	bcf	14,4	;volatile
  8860                           
  8861                           ;CC2500_B1.c: 35: SPI0Buffer=0x3F+0x40;
  8862  1B81  307F               	movlw	127
  8863  1B82  00A4               	movwf	??_CC2500_TxData
  8864  1B83  0824               	movf	??_CC2500_TxData,w
  8865  1B84  0021               	movlb	1	; select bank1
  8866  1B85  00C2               	movwf	_SPI0Buffer^(0+128)
  8867  1B86                     l324:	
  8868                           ;CC2500_B1.c: 36: while(RC2==1);
  8869                           
  8870  1B86  0020               	movlb	0	; select bank0
  8871  1B87  190E               	btfsc	14,2	;volatile
  8872  1B88  2B86               	goto	l324
  8873                           
  8874                           ;CC2500_B1.c: 37: CC2500_WriteByte();
  8875  1B89  31A5  256E  319B   	fcall	_CC2500_WriteByte
  8876                           
  8877                           ;CC2500_B1.c: 38: SPI0Buffer=Tx_Length;
  8878  1B8C  0021               	movlb	1	; select bank1
  8879  1B8D  0843               	movf	_Tx_Length^(0+128),w
  8880  1B8E  0020               	movlb	0	; select bank0
  8881  1B8F  00A4               	movwf	??_CC2500_TxData
  8882  1B90  0824               	movf	??_CC2500_TxData,w
  8883  1B91  0021               	movlb	1	; select bank1
  8884  1B92  00C2               	movwf	_SPI0Buffer^(0+128)
  8885                           
  8886                           ;CC2500_B1.c: 39: CC2500_WriteByte();
  8887  1B93  31A5  256E  319B   	fcall	_CC2500_WriteByte
  8888                           
  8889                           ;CC2500_B1.c: 40: for(loop_e=0;loop_e<Tx_Length;loop_e++)
  8890  1B96  0020               	movlb	0	; select bank0
  8891  1B97  01A5               	clrf	CC2500_TxData@loop_e
  8892  1B98                     l7349:	
  8893  1B98  0021               	movlb	1	; select bank1
  8894  1B99  0843               	movf	_Tx_Length^(0+128),w
  8895  1B9A  0020               	movlb	0	; select bank0
  8896  1B9B  0225               	subwf	CC2500_TxData@loop_e,w
  8897  1B9C  1803               	btfsc	3,0
  8898  1B9D  2BB0               	goto	l329
  8899                           
  8900                           ;CC2500_B1.c: 41: {
  8901                           ;CC2500_B1.c: 42: SPI0Buffer=RF_Data[loop_e];
  8902  1B9E  0825               	movf	CC2500_TxData@loop_e,w
  8903  1B9F  3EA0               	addlw	_RF_Data& (0+255)
  8904  1BA0  0086               	movwf	6
  8905  1BA1  0187               	clrf	7
  8906  1BA2  0801               	movf	1,w
  8907  1BA3  00A4               	movwf	??_CC2500_TxData
  8908  1BA4  0824               	movf	??_CC2500_TxData,w
  8909  1BA5  0021               	movlb	1	; select bank1
  8910  1BA6  00C2               	movwf	_SPI0Buffer^(0+128)
  8911                           
  8912                           ;CC2500_B1.c: 43: CC2500_WriteByte();
  8913  1BA7  31A5  256E  319B   	fcall	_CC2500_WriteByte
  8914  1BAA  3001               	movlw	1
  8915  1BAB  0020               	movlb	0	; select bank0
  8916  1BAC  00A4               	movwf	??_CC2500_TxData
  8917  1BAD  0824               	movf	??_CC2500_TxData,w
  8918  1BAE  07A5               	addwf	CC2500_TxData@loop_e,f
  8919  1BAF  2B98               	goto	l7349
  8920  1BB0                     l329:	
  8921                           
  8922                           ;CC2500_B1.c: 44: }
  8923                           ;CC2500_B1.c: 45: RC4=1;
  8924  1BB0  160E               	bsf	14,4	;volatile
  8925                           
  8926                           ;CC2500_B1.c: 46: CC2500_WriteCommand(0x35);
  8927  1BB1  3035               	movlw	53
  8928  1BB2  31A3  23C3  319B   	fcall	_CC2500_WriteCommand
  8929  1BB5                     l330:	
  8930                           ;CC2500_B1.c: 47: while(RB0==0);
  8931                           
  8932  1BB5  0020               	movlb	0	; select bank0
  8933  1BB6  1C0D               	btfss	13,0	;volatile
  8934  1BB7  2BB5               	goto	l330
  8935  1BB8                     l333:	
  8936                           ;CC2500_B1.c: 48: while(RB0==1);
  8937                           
  8938  1BB8  180D               	btfsc	13,0	;volatile
  8939  1BB9  2BB8               	goto	l333
  8940                           
  8941                           ;CC2500_B1.c: 49: CC2500_WriteCommand(0x36);
  8942  1BBA  3036               	movlw	54
  8943  1BBB  31A3  23C3  319B   	fcall	_CC2500_WriteCommand
  8944                           
  8945                           ;CC2500_B1.c: 50: CC2500_WriteCommand(0x3B);
  8946  1BBE  303B               	movlw	59
  8947  1BBF  31A3  23C3         	fcall	_CC2500_WriteCommand
  8948                           
  8949                           ;CC2500_B1.c: 51: Transceive_OK=1;
  8950  1BC1  16FA               	bsf	_Transceive_OK/(0+8),_Transceive_OK& (0+7)
  8951  1BC2  0008               	return
  8952  1BC3                     __end_of_CC2500_TxData:	
  8953                           
  8954                           	psect	text34
  8955  1F9C                     __ptext34:	
  8956 ;; *************** function _CC2500_RxData *****************
  8957 ;; Defined at:
  8958 ;;		line 56 in file "G:\Program\PIC\Source_File\CC2500_B1.c"
  8959 ;; Parameters:    Size  Location     Type
  8960 ;;		None
  8961 ;; Auto vars:     Size  Location     Type
  8962 ;;  loop_f          1    5[BANK0 ] unsigned char 
  8963 ;; Return value:  Size  Location     Type
  8964 ;;		None               void
  8965 ;; Registers used:
  8966 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8967 ;; Tracked objects:
  8968 ;;		On entry : 0/0
  8969 ;;		On exit  : 0/0
  8970 ;;		Unchanged: 0/0
  8971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8973 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8974 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8975 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8976 ;;Total ram usage:        2 bytes
  8977 ;; Hardware stack levels used:    1
  8978 ;; Hardware stack levels required when called:    6
  8979 ;; This function calls:
  8980 ;;		_CC2500_ReadByte
  8981 ;;		_CC2500_ReadStatus
  8982 ;;		_CC2500_WriteByte
  8983 ;;		_CC2500_WriteCommand
  8984 ;;		_setRF_RxStatus
  8985 ;; This function is called by:
  8986 ;;		_setRF_Main
  8987 ;; This function uses a non-reentrant model
  8988 ;;
  8989                           
  8990                           
  8991                           ;psect for function _CC2500_RxData
  8992  1F9C                     _CC2500_RxData:	
  8993                           
  8994                           ;CC2500_B1.c: 58: unsigned char loop_f;
  8995                           ;CC2500_B1.c: 62: if(RB0 == 1)
  8996                           
  8997                           ;incstack = 0
  8998                           ; Regs used in _CC2500_RxData: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8999  1F9C  0020               	movlb	0	; select bank0
  9000  1F9D  180D               	btfsc	13,0	;volatile
  9001  1F9E                     l340:	
  9002                           ;CC2500_B1.c: 63: {
  9003                           ;CC2500_B1.c: 64: while(RB0 == 1);
  9004                           
  9005  1F9E  180D               	btfsc	13,0	;volatile
  9006  1F9F  2F9E               	goto	l340
  9007                           
  9008                           ;CC2500_B1.c: 65: }
  9009                           ;CC2500_B1.c: 66: CC2500_ReadStatus(0x3B);
  9010  1FA0  303B               	movlw	59
  9011  1FA1  31A5  25EC  319F   	fcall	_CC2500_ReadStatus
  9012                           
  9013                           ;CC2500_B1.c: 67: if(s_data != 0)
  9014  1FA4  0021               	movlb	1	; select bank1
  9015  1FA5  0846               	movf	_s_data^(0+128),w
  9016  1FA6  1903               	btfsc	3,2
  9017  1FA7  2FF2               	goto	l7395
  9018                           
  9019                           ;CC2500_B1.c: 69: {
  9020                           ;CC2500_B1.c: 70: RC4=0;
  9021  1FA8  0020               	movlb	0	; select bank0
  9022  1FA9  120E               	bcf	14,4	;volatile
  9023                           
  9024                           ;CC2500_B1.c: 71: SPI0Buffer=0x3F+0xC0;
  9025  1FAA  30FF               	movlw	255
  9026  1FAB  00A4               	movwf	??_CC2500_RxData
  9027  1FAC  0824               	movf	??_CC2500_RxData,w
  9028  1FAD  0021               	movlb	1	; select bank1
  9029  1FAE  00C2               	movwf	_SPI0Buffer^(0+128)
  9030  1FAF                     l344:	
  9031                           ;CC2500_B1.c: 72: while(RC2==1);
  9032                           
  9033  1FAF  0020               	movlb	0	; select bank0
  9034  1FB0  190E               	btfsc	14,2	;volatile
  9035  1FB1  2FAF               	goto	l344
  9036                           
  9037                           ;CC2500_B1.c: 73: CC2500_WriteByte();
  9038  1FB2  31A5  256E  319F   	fcall	_CC2500_WriteByte
  9039                           
  9040                           ;CC2500_B1.c: 75: CC2500_ReadByte();
  9041  1FB5  31A6  2607  319F   	fcall	_CC2500_ReadByte
  9042                           
  9043                           ;CC2500_B1.c: 76: Rx_Length=SPI0Buffer;
  9044  1FB8  0021               	movlb	1	; select bank1
  9045  1FB9  0842               	movf	_SPI0Buffer^(0+128),w
  9046  1FBA  0020               	movlb	0	; select bank0
  9047  1FBB  00A4               	movwf	??_CC2500_RxData
  9048  1FBC  0824               	movf	??_CC2500_RxData,w
  9049  1FBD  0021               	movlb	1	; select bank1
  9050  1FBE  00C1               	movwf	_Rx_Length^(0+128)
  9051                           
  9052                           ;CC2500_B1.c: 77: for(loop_f=0;loop_f<Rx_Length;loop_f++)
  9053  1FBF  0020               	movlb	0	; select bank0
  9054  1FC0  01A5               	clrf	CC2500_RxData@loop_f
  9055  1FC1                     l7381:	
  9056  1FC1  0021               	movlb	1	; select bank1
  9057  1FC2  0841               	movf	_Rx_Length^(0+128),w
  9058  1FC3  0020               	movlb	0	; select bank0
  9059  1FC4  0225               	subwf	CC2500_RxData@loop_f,w
  9060  1FC5  1803               	btfsc	3,0
  9061  1FC6  2FD9               	goto	l7383
  9062                           
  9063                           ;CC2500_B1.c: 78: {
  9064                           ;CC2500_B1.c: 79: CC2500_ReadByte();
  9065  1FC7  31A6  2607  319F   	fcall	_CC2500_ReadByte
  9066                           
  9067                           ;CC2500_B1.c: 80: RF_Data[loop_f]=SPI0Buffer;
  9068  1FCA  0021               	movlb	1	; select bank1
  9069  1FCB  0842               	movf	_SPI0Buffer^(0+128),w
  9070  1FCC  0020               	movlb	0	; select bank0
  9071  1FCD  00A4               	movwf	??_CC2500_RxData
  9072  1FCE  0825               	movf	CC2500_RxData@loop_f,w
  9073  1FCF  3EA0               	addlw	_RF_Data& (0+255)
  9074  1FD0  0086               	movwf	6
  9075  1FD1  0187               	clrf	7
  9076  1FD2  0824               	movf	??_CC2500_RxData,w
  9077  1FD3  0081               	movwf	1
  9078  1FD4  3001               	movlw	1
  9079  1FD5  00A4               	movwf	??_CC2500_RxData
  9080  1FD6  0824               	movf	??_CC2500_RxData,w
  9081  1FD7  07A5               	addwf	CC2500_RxData@loop_f,f
  9082  1FD8  2FC1               	goto	l7381
  9083  1FD9                     l7383:	
  9084                           
  9085                           ;CC2500_B1.c: 81: }
  9086                           ;CC2500_B1.c: 82: CC2500_ReadByte();
  9087  1FD9  31A6  2607  319F   	fcall	_CC2500_ReadByte
  9088                           
  9089                           ;CC2500_B1.c: 83: RSSI=SPI0Buffer;
  9090  1FDC  0021               	movlb	1	; select bank1
  9091  1FDD  0842               	movf	_SPI0Buffer^(0+128),w
  9092  1FDE  0020               	movlb	0	; select bank0
  9093  1FDF  00A4               	movwf	??_CC2500_RxData
  9094  1FE0  0824               	movf	??_CC2500_RxData,w
  9095  1FE1  0021               	movlb	1	; select bank1
  9096  1FE2  00C0               	movwf	_RSSI^(0+128)
  9097                           
  9098                           ;CC2500_B1.c: 84: CC2500_ReadByte();
  9099  1FE3  31A6  2607  319F   	fcall	_CC2500_ReadByte
  9100                           
  9101                           ;CC2500_B1.c: 85: CRC=SPI0Buffer;
  9102  1FE6  0021               	movlb	1	; select bank1
  9103  1FE7  0842               	movf	_SPI0Buffer^(0+128),w
  9104  1FE8  0020               	movlb	0	; select bank0
  9105  1FE9  00A4               	movwf	??_CC2500_RxData
  9106  1FEA  0824               	movf	??_CC2500_RxData,w
  9107  1FEB  0021               	movlb	1	; select bank1
  9108  1FEC  00B8               	movwf	_CRC^(0+128)
  9109                           
  9110                           ;CC2500_B1.c: 86: RC4=1;
  9111  1FED  0020               	movlb	0	; select bank0
  9112  1FEE  160E               	bsf	14,4	;volatile
  9113                           
  9114                           ;CC2500_B1.c: 87: if(CRC & 0x80)
  9115  1FEF  0021               	movlb	1	; select bank1
  9116  1FF0  1BB8               	btfsc	_CRC^(0+128),7
  9117                           
  9118                           ;CC2500_B1.c: 88: Receive_OK=1;
  9119  1FF1  157A               	bsf	_Receive_OK/(0+8),_Receive_OK& (0+7)
  9120  1FF2                     l7395:	
  9121                           
  9122                           ;CC2500_B1.c: 89: }
  9123                           ;CC2500_B1.c: 90: CC2500_WriteCommand(0x36);
  9124  1FF2  3036               	movlw	54
  9125  1FF3  31A3  23C3  319F   	fcall	_CC2500_WriteCommand
  9126                           
  9127                           ;CC2500_B1.c: 91: CC2500_WriteCommand(0x3A);
  9128  1FF6  303A               	movlw	58
  9129  1FF7  31A3  23C3  319F   	fcall	_CC2500_WriteCommand
  9130                           
  9131                           ;CC2500_B1.c: 92: setRF_RxStatus(1,0);
  9132  1FFA  0020               	movlb	0	; select bank0
  9133  1FFB  01A2               	clrf	setRF_RxStatus@command
  9134  1FFC  3001               	movlw	1
  9135  1FFD  31A3  2386         	fcall	_setRF_RxStatus
  9136  1FFF  0008               	return
  9137  2000                     __end_of_CC2500_RxData:	
  9138                           
  9139                           	psect	text35
  9140  2386                     __ptext35:	
  9141 ;; *************** function _setRF_RxStatus *****************
  9142 ;; Defined at:
  9143 ;;		line 43 in file "G:\Program\PIC\Source_File\RF_Control_B1.c"
  9144 ;; Parameters:    Size  Location     Type
  9145 ;;  rf              1    wreg     unsigned char 
  9146 ;;  command         1    2[BANK0 ] unsigned char 
  9147 ;; Auto vars:     Size  Location     Type
  9148 ;;  rf              1    3[BANK0 ] unsigned char 
  9149 ;; Return value:  Size  Location     Type
  9150 ;;		None               void
  9151 ;; Registers used:
  9152 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9153 ;; Tracked objects:
  9154 ;;		On entry : 0/0
  9155 ;;		On exit  : 0/0
  9156 ;;		Unchanged: 0/0
  9157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9158 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9159 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9161 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9162 ;;Total ram usage:        2 bytes
  9163 ;; Hardware stack levels used:    1
  9164 ;; Hardware stack levels required when called:    5
  9165 ;; This function calls:
  9166 ;;		_RfPointSelect
  9167 ;; This function is called by:
  9168 ;;		_CC2500_RxData
  9169 ;; This function uses a non-reentrant model
  9170 ;;
  9171                           
  9172                           
  9173                           ;psect for function _setRF_RxStatus
  9174  2386                     _setRF_RxStatus:	
  9175                           
  9176                           ;incstack = 0
  9177                           ; Regs used in _setRF_RxStatus: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9178                           ;setRF_RxStatus@rf stored from wreg
  9179  2386  0020               	movlb	0	; select bank0
  9180  2387  00A3               	movwf	setRF_RxStatus@rf
  9181                           
  9182                           ;RF_Control_B1.c: 45: RfPointSelect(rf);
  9183  2388  0823               	movf	setRF_RxStatus@rf,w
  9184  2389  31A2  2279         	fcall	_RfPointSelect
  9185                           
  9186                           ;RF_Control_B1.c: 46: RF->RxStatus=command;
  9187  238B  0021               	movlb	1	; select bank1
  9188  238C  083E               	movf	_RF^(0+128),w
  9189  238D  0086               	movwf	6
  9190  238E  0187               	clrf	7
  9191  238F  0020               	movlb	0	; select bank0
  9192  2390  0822               	movf	setRF_RxStatus@command,w
  9193  2391  1181               	bcf	1,3
  9194  2392  1D03               	skipz
  9195  2393  1581               	bsf	1,3
  9196  2394  0008               	return
  9197  2395                     __end_of_setRF_RxStatus:	
  9198                           
  9199                           	psect	text36
  9200  25EC                     __ptext36:	
  9201 ;; *************** function _CC2500_ReadStatus *****************
  9202 ;; Defined at:
  9203 ;;		line 267 in file "G:\Program\PIC\Source_File\CC2500_B1.c"
  9204 ;; Parameters:    Size  Location     Type
  9205 ;;  status_addr     1    wreg     unsigned char 
  9206 ;; Auto vars:     Size  Location     Type
  9207 ;;  status_addr     1    3[BANK0 ] unsigned char 
  9208 ;; Return value:  Size  Location     Type
  9209 ;;		None               void
  9210 ;; Registers used:
  9211 ;;		wreg, status,2, status,0, pclath, cstack
  9212 ;; Tracked objects:
  9213 ;;		On entry : 0/0
  9214 ;;		On exit  : 0/0
  9215 ;;		Unchanged: 0/0
  9216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9218 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9219 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9220 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9221 ;;Total ram usage:        2 bytes
  9222 ;; Hardware stack levels used:    1
  9223 ;; Hardware stack levels required when called:    5
  9224 ;; This function calls:
  9225 ;;		_CC2500_ReadByte
  9226 ;;		_CC2500_WriteByte
  9227 ;; This function is called by:
  9228 ;;		_CC2500_RxData
  9229 ;; This function uses a non-reentrant model
  9230 ;;
  9231                           
  9232                           
  9233                           ;psect for function _CC2500_ReadStatus
  9234  25EC                     _CC2500_ReadStatus:	
  9235                           
  9236                           ;incstack = 0
  9237                           ; Regs used in _CC2500_ReadStatus: [wreg+status,2+status,0+pclath+cstack]
  9238                           ;CC2500_ReadStatus@status_addr stored from wreg
  9239  25EC  0020               	movlb	0	; select bank0
  9240  25ED  00A3               	movwf	CC2500_ReadStatus@status_addr
  9241                           
  9242                           ;CC2500_B1.c: 269: RC4=0;
  9243  25EE  120E               	bcf	14,4	;volatile
  9244                           
  9245                           ;CC2500_B1.c: 270: SPI0Buffer=status_addr+0xC0;
  9246  25EF  0823               	movf	CC2500_ReadStatus@status_addr,w
  9247  25F0  3EC0               	addlw	192
  9248  25F1  00A2               	movwf	??_CC2500_ReadStatus
  9249  25F2  0822               	movf	??_CC2500_ReadStatus,w
  9250  25F3  0021               	movlb	1	; select bank1
  9251  25F4  00C2               	movwf	_SPI0Buffer^(0+128)
  9252  25F5                     l420:	
  9253                           ;CC2500_B1.c: 272: while(RC2==1);
  9254                           
  9255  25F5  0020               	movlb	0	; select bank0
  9256  25F6  190E               	btfsc	14,2	;volatile
  9257  25F7  2DF5               	goto	l420
  9258                           
  9259                           ;CC2500_B1.c: 274: CC2500_WriteByte();
  9260  25F8  31A5  256E  31A5   	fcall	_CC2500_WriteByte
  9261                           
  9262                           ;CC2500_B1.c: 275: CC2500_ReadByte();
  9263  25FB  31A6  2607         	fcall	_CC2500_ReadByte
  9264                           
  9265                           ;CC2500_B1.c: 276: RC4=1;
  9266  25FD  0020               	movlb	0	; select bank0
  9267  25FE  160E               	bsf	14,4	;volatile
  9268                           
  9269                           ;CC2500_B1.c: 278: s_data=SPI0Buffer;
  9270  25FF  0021               	movlb	1	; select bank1
  9271  2600  0842               	movf	_SPI0Buffer^(0+128),w
  9272  2601  0020               	movlb	0	; select bank0
  9273  2602  00A2               	movwf	??_CC2500_ReadStatus
  9274  2603  0822               	movf	??_CC2500_ReadStatus,w
  9275  2604  0021               	movlb	1	; select bank1
  9276  2605  00C6               	movwf	_s_data^(0+128)
  9277  2606  0008               	return
  9278  2607                     __end_of_CC2500_ReadStatus:	
  9279                           
  9280                           	psect	text37
  9281  2607                     __ptext37:	
  9282 ;; *************** function _CC2500_ReadByte *****************
  9283 ;; Defined at:
  9284 ;;		line 210 in file "G:\Program\PIC\Source_File\CC2500_B1.c"
  9285 ;; Parameters:    Size  Location     Type
  9286 ;;		None
  9287 ;; Auto vars:     Size  Location     Type
  9288 ;;  loop_b          1    1[BANK0 ] unsigned char 
  9289 ;; Return value:  Size  Location     Type
  9290 ;;		None               void
  9291 ;; Registers used:
  9292 ;;		wreg, status,2, status,0
  9293 ;; Tracked objects:
  9294 ;;		On entry : 0/0
  9295 ;;		On exit  : 0/0
  9296 ;;		Unchanged: 0/0
  9297 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9298 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9299 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9300 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9301 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9302 ;;Total ram usage:        2 bytes
  9303 ;; Hardware stack levels used:    1
  9304 ;; Hardware stack levels required when called:    4
  9305 ;; This function calls:
  9306 ;;		Nothing
  9307 ;; This function is called by:
  9308 ;;		_CC2500_RxData
  9309 ;;		_CC2500_ReadStatus
  9310 ;;		_CC2500_ReadREG
  9311 ;; This function uses a non-reentrant model
  9312 ;;
  9313                           
  9314                           
  9315                           ;psect for function _CC2500_ReadByte
  9316  2607                     _CC2500_ReadByte:	
  9317                           
  9318                           ;CC2500_B1.c: 212: unsigned char loop_b;
  9319                           ;CC2500_B1.c: 213: for(loop_b=0;loop_b<8;loop_b++)
  9320                           
  9321                           ;incstack = 0
  9322                           ; Regs used in _CC2500_ReadByte: [wreg+status,2+status,0]
  9323  2607  0020               	movlb	0	; select bank0
  9324  2608  01A1               	clrf	CC2500_ReadByte@loop_b
  9325  2609                     L8:	
  9326  2609  3008               	movlw	8
  9327  260A  0221               	subwf	CC2500_ReadByte@loop_b,w
  9328  260B  1803               	btfsc	3,0
  9329  260C  0008               	return
  9330                           
  9331                           ;CC2500_B1.c: 214: {
  9332                           ;CC2500_B1.c: 215: RC1=1;
  9333  260D  148E               	bsf	14,1	;volatile
  9334                           
  9335                           ;CC2500_B1.c: 216: SPI0Buffer<<=1;
  9336  260E  1003               	clrc
  9337  260F  0021               	movlb	1	; select bank1
  9338  2610  0DC2               	rlf	_SPI0Buffer^(0+128),f
  9339                           
  9340                           ;CC2500_B1.c: 217: if(RC2 == 1)
  9341  2611  0020               	movlb	0	; select bank0
  9342  2612  1D0E               	btfss	14,2	;volatile
  9343  2613  2E17               	goto	l7013
  9344                           
  9345                           ;CC2500_B1.c: 218: SPI0Buffer |= 0x01;
  9346  2614  0021               	movlb	1	; select bank1
  9347  2615  1442               	bsf	_SPI0Buffer^(0+128),0
  9348  2616  2E1D               	goto	l7015
  9349  2617                     l7013:	
  9350                           
  9351                           ;CC2500_B1.c: 219: else
  9352                           ;CC2500_B1.c: 220: SPI0Buffer &= 0xFE;
  9353  2617  30FE               	movlw	254
  9354  2618  0020               	movlb	0	; select bank0
  9355  2619  00A0               	movwf	??_CC2500_ReadByte
  9356  261A  0820               	movf	??_CC2500_ReadByte,w
  9357  261B  0021               	movlb	1	; select bank1
  9358  261C  05C2               	andwf	_SPI0Buffer^(0+128),f
  9359  261D                     l7015:	
  9360                           
  9361                           ;CC2500_B1.c: 221: RC1=0;
  9362  261D  0020               	movlb	0	; select bank0
  9363  261E  108E               	bcf	14,1	;volatile
  9364  261F  3001               	movlw	1
  9365  2620  00A0               	movwf	??_CC2500_ReadByte
  9366  2621  0820               	movf	??_CC2500_ReadByte,w
  9367  2622  07A1               	addwf	CC2500_ReadByte@loop_b,f
  9368  2623  2E09               	goto	L8
  9369  2624                     __end_of_CC2500_ReadByte:	
  9370                           
  9371                           	psect	text38
  9372  21A2                     __ptext38:	
  9373 ;; *************** function _RF_Initialization *****************
  9374 ;; Defined at:
  9375 ;;		line 17 in file "G:\Program\PIC\Source_File\RF_Control_B1.c"
  9376 ;; Parameters:    Size  Location     Type
  9377 ;;		None
  9378 ;; Auto vars:     Size  Location     Type
  9379 ;;		None
  9380 ;; Return value:  Size  Location     Type
  9381 ;;		None               void
  9382 ;; Registers used:
  9383 ;;		wreg, status,2, status,0, pclath, cstack
  9384 ;; Tracked objects:
  9385 ;;		On entry : 0/0
  9386 ;;		On exit  : 0/0
  9387 ;;		Unchanged: 0/0
  9388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9392 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9393 ;;Total ram usage:        0 bytes
  9394 ;; Hardware stack levels used:    1
  9395 ;; Hardware stack levels required when called:    5
  9396 ;; This function calls:
  9397 ;;		_setRF_Initialization
  9398 ;; This function is called by:
  9399 ;;		_main
  9400 ;; This function uses a non-reentrant model
  9401 ;;
  9402                           
  9403                           
  9404                           ;psect for function _RF_Initialization
  9405  21A2                     _RF_Initialization:	
  9406                           
  9407                           ;RF_Control_B1.c: 20: setRF_Initialization(1);
  9408                           
  9409                           ;incstack = 0
  9410                           ; Regs used in _RF_Initialization: [wreg+status,2+status,0+pclath+cstack]
  9411  21A2  3001               	movlw	1
  9412  21A3  31A1  21E3         	fcall	_setRF_Initialization
  9413  21A5  0008               	return
  9414  21A6                     __end_of_RF_Initialization:	
  9415                           
  9416                           	psect	text39
  9417  21E3                     __ptext39:	
  9418 ;; *************** function _setRF_Initialization *****************
  9419 ;; Defined at:
  9420 ;;		line 50 in file "G:\Program\PIC\Source_File\RF_Control_B1.c"
  9421 ;; Parameters:    Size  Location     Type
  9422 ;;  rf              1    wreg     unsigned char 
  9423 ;; Auto vars:     Size  Location     Type
  9424 ;;  rf              1    0[COMMON] unsigned char 
  9425 ;; Return value:  Size  Location     Type
  9426 ;;		None               void
  9427 ;; Registers used:
  9428 ;;		wreg
  9429 ;; Tracked objects:
  9430 ;;		On entry : 0/0
  9431 ;;		On exit  : 0/0
  9432 ;;		Unchanged: 0/0
  9433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9434 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9435 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9436 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9437 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9438 ;;Total ram usage:        1 bytes
  9439 ;; Hardware stack levels used:    1
  9440 ;; Hardware stack levels required when called:    4
  9441 ;; This function calls:
  9442 ;;		Nothing
  9443 ;; This function is called by:
  9444 ;;		_RF_Initialization
  9445 ;; This function uses a non-reentrant model
  9446 ;;
  9447                           
  9448                           
  9449                           ;psect for function _setRF_Initialization
  9450  21E3                     _setRF_Initialization:	
  9451                           
  9452                           ;RF_Control_B1.c: 54: Tx_Length=21;
  9453                           
  9454                           ;incstack = 0
  9455                           ; Regs used in _setRF_Initialization: [wreg]
  9456  21E3  3015               	movlw	21
  9457  21E4  0020               	movlb	0	; select bank0
  9458  21E5  00A0               	movwf	??_setRF_Initialization
  9459  21E6  0820               	movf	??_setRF_Initialization,w
  9460  21E7  0021               	movlb	1	; select bank1
  9461  21E8  00C3               	movwf	_Tx_Length^(0+128)
  9462  21E9  0008               	return
  9463  21EA                     __end_of_setRF_Initialization:	
  9464                           
  9465                           	psect	text40
  9466  219E                     __ptext40:	
  9467 ;; *************** function _PowerFault_Main *****************
  9468 ;; Defined at:
  9469 ;;		line 22 in file "G:\Program\PIC\Source_File\PowerFault_B1.c"
  9470 ;; Parameters:    Size  Location     Type
  9471 ;;		None
  9472 ;; Auto vars:     Size  Location     Type
  9473 ;;		None
  9474 ;; Return value:  Size  Location     Type
  9475 ;;		None               void
  9476 ;; Registers used:
  9477 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9478 ;; Tracked objects:
  9479 ;;		On entry : 0/0
  9480 ;;		On exit  : 0/0
  9481 ;;		Unchanged: 0/0
  9482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9483 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9484 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9486 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9487 ;;Total ram usage:        0 bytes
  9488 ;; Hardware stack levels used:    1
  9489 ;; Hardware stack levels required when called:   10
  9490 ;; This function calls:
  9491 ;;		_setPowerFault_Main
  9492 ;; This function is called by:
  9493 ;;		_main
  9494 ;; This function uses a non-reentrant model
  9495 ;;
  9496                           
  9497                           
  9498                           ;psect for function _PowerFault_Main
  9499  219E                     _PowerFault_Main:	
  9500                           
  9501                           ;PowerFault_B1.c: 25: setPowerFault_Main(1);
  9502                           
  9503                           ;incstack = 0
  9504                           ; Regs used in _PowerFault_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9505  219E  3001               	movlw	1
  9506  219F  318D  25A2         	fcall	_setPowerFault_Main
  9507  21A1  0008               	return
  9508  21A2                     __end_of_PowerFault_Main:	
  9509                           
  9510                           	psect	text41
  9511  0DA2                     __ptext41:	
  9512 ;; *************** function _setPowerFault_Main *****************
  9513 ;; Defined at:
  9514 ;;		line 65 in file "G:\Program\PIC\Source_File\PowerFault_B1.c"
  9515 ;; Parameters:    Size  Location     Type
  9516 ;;  pf              1    wreg     unsigned char 
  9517 ;; Auto vars:     Size  Location     Type
  9518 ;;  pf              1   17[BANK0 ] unsigned char 
  9519 ;; Return value:  Size  Location     Type
  9520 ;;		None               void
  9521 ;; Registers used:
  9522 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9523 ;; Tracked objects:
  9524 ;;		On entry : 0/0
  9525 ;;		On exit  : 0/0
  9526 ;;		Unchanged: 0/0
  9527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9529 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9530 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9531 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9532 ;;Total ram usage:        3 bytes
  9533 ;; Hardware stack levels used:    1
  9534 ;; Hardware stack levels required when called:    9
  9535 ;; This function calls:
  9536 ;;		_PowerFaultPointSelect
  9537 ;;		_getLoad_Safe
  9538 ;;		_getTemp_Safe
  9539 ;;		_setPowerFault_ERROR
  9540 ;; This function is called by:
  9541 ;;		_PowerFault_Main
  9542 ;; This function uses a non-reentrant model
  9543 ;;
  9544                           
  9545                           
  9546                           ;psect for function _setPowerFault_Main
  9547  0DA2                     _setPowerFault_Main:	
  9548                           
  9549                           ;incstack = 0
  9550                           ; Regs used in _setPowerFault_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9551                           ;setPowerFault_Main@pf stored from wreg
  9552  0DA2  0020               	movlb	0	; select bank0
  9553  0DA3  00B1               	movwf	setPowerFault_Main@pf
  9554                           
  9555                           ;PowerFault_B1.c: 67: PowerFaultPointSelect(pf);
  9556  0DA4  0831               	movf	setPowerFault_Main@pf,w
  9557  0DA5  31A1  21D5  318D   	fcall	_PowerFaultPointSelect
  9558                           
  9559                           ;PowerFault_B1.c: 68: if(PF->Enable)
  9560  0DA8  0021               	movlb	1	; select bank1
  9561  0DA9  083D               	movf	_PF^(0+128),w
  9562  0DAA  0086               	movwf	6
  9563  0DAB  3001               	movlw	1	; select bank2/3
  9564  0DAC  0087               	movwf	7
  9565  0DAD  1C01               	btfss	1,0
  9566  0DAE  0008               	return
  9567                           
  9568                           ;PowerFault_B1.c: 69: {
  9569                           ;PowerFault_B1.c: 70: if(PF->ADtoGO == 0)
  9570  0DAF  083D               	movf	_PF^(0+128),w
  9571  0DB0  0086               	movwf	6
  9572  0DB1  3001               	movlw	1	; select bank2/3
  9573  0DB2  0087               	movwf	7
  9574  0DB3  1981               	btfsc	1,3
  9575  0DB4  2DFD               	goto	l8327
  9576                           
  9577                           ;PowerFault_B1.c: 71: {
  9578                           ;PowerFault_B1.c: 72: PF->Time++;
  9579  0DB5  083D               	movf	_PF^(0+128),w
  9580  0DB6  3E06               	addlw	6
  9581  0DB7  0086               	movwf	6
  9582  0DB8  3001               	movlw	1	; select bank2/3
  9583  0DB9  0087               	movwf	7
  9584  0DBA  3001               	movlw	1
  9585  0DBB  0781               	addwf	1,f
  9586  0DBC  3141               	addfsr 1,1
  9587  0DBD  1803               	skipnc
  9588  0DBE  0A81               	incf	1,f
  9589                           
  9590                           ;PowerFault_B1.c: 73: if(PF->Time >= 700)
  9591  0DBF  083D               	movf	_PF^(0+128),w
  9592  0DC0  3E06               	addlw	6
  9593  0DC1  0086               	movwf	6
  9594  0DC2  3001               	movlw	1	; select bank2/3
  9595  0DC3  0087               	movwf	7
  9596  0DC4  3F40               	moviw [0]fsr1
  9597  0DC5  0020               	movlb	0	; select bank0
  9598  0DC6  00AF               	movwf	??_setPowerFault_Main
  9599  0DC7  3F41               	moviw [1]fsr1
  9600  0DC8  00B0               	movwf	??_setPowerFault_Main+1
  9601  0DC9  3002               	movlw	2
  9602  0DCA  0230               	subwf	??_setPowerFault_Main+1,w
  9603  0DCB  30BC               	movlw	188
  9604  0DCC  1903               	skipnz
  9605  0DCD  022F               	subwf	??_setPowerFault_Main,w
  9606  0DCE  1C03               	skipc
  9607  0DCF  0008               	return
  9608                           
  9609                           ;PowerFault_B1.c: 74: {
  9610                           ;PowerFault_B1.c: 75: if(getLoad_Safe(1) && getTemp_Safe(1))
  9611  0DD0  3001               	movlw	1
  9612  0DD1  31A4  2433  318D   	fcall	_getLoad_Safe
  9613  0DD4  3A00               	xorlw	0
  9614  0DD5  1903               	skipnz
  9615  0DD6  2DF2               	goto	l8325
  9616  0DD7  3001               	movlw	1
  9617  0DD8  31A2  22B5  318D   	fcall	_getTemp_Safe
  9618  0DDB  3A00               	xorlw	0
  9619  0DDC  1903               	skipnz
  9620  0DDD  2DF2               	goto	l8325
  9621                           
  9622                           ;PowerFault_B1.c: 76: {
  9623                           ;PowerFault_B1.c: 77: PF->Time=0;
  9624  0DDE  0021               	movlb	1	; select bank1
  9625  0DDF  083D               	movf	_PF^(0+128),w
  9626  0DE0  3E06               	addlw	6
  9627  0DE1  0086               	movwf	6
  9628  0DE2  3001               	movlw	1	; select bank2/3
  9629  0DE3  0087               	movwf	7
  9630  0DE4  3000               	movlw	0
  9631  0DE5  3FC0               	movwi [0]fsr1
  9632  0DE6  3FC1               	movwi [1]fsr1
  9633                           
  9634                           ;PowerFault_B1.c: 78: PF->ADtoGO=1;
  9635  0DE7  083D               	movf	_PF^(0+128),w
  9636  0DE8  0086               	movwf	6
  9637  0DE9  3001               	movlw	1	; select bank2/3
  9638  0DEA  0087               	movwf	7
  9639  0DEB  1581               	bsf	1,3
  9640                           
  9641                           ;PowerFault_B1.c: 79: PF->Safe=0;
  9642  0DEC  083D               	movf	_PF^(0+128),w
  9643  0DED  0086               	movwf	6
  9644  0DEE  3001               	movlw	1	; select bank2/3
  9645  0DEF  0087               	movwf	7
  9646  0DF0  1101               	bcf	1,2
  9647                           
  9648                           ;PowerFault_B1.c: 80: }
  9649  0DF1  0008               	return
  9650  0DF2                     l8325:	
  9651                           
  9652                           ;PowerFault_B1.c: 81: else
  9653                           ;PowerFault_B1.c: 82: {
  9654                           ;PowerFault_B1.c: 83: PF->Time=700;
  9655  0DF2  0021               	movlb	1	; select bank1
  9656  0DF3  083D               	movf	_PF^(0+128),w
  9657  0DF4  3E06               	addlw	6
  9658  0DF5  0086               	movwf	6
  9659  0DF6  3001               	movlw	1	; select bank2/3
  9660  0DF7  0087               	movwf	7
  9661  0DF8  30BC               	movlw	188
  9662  0DF9  3FC0               	movwi [0]fsr1
  9663  0DFA  3002               	movlw	2
  9664  0DFB  3FC1               	movwi [1]fsr1
  9665                           
  9666                           ;PowerFault_B1.c: 84: }
  9667                           ;PowerFault_B1.c: 85: }
  9668                           ;PowerFault_B1.c: 86: }
  9669  0DFC  0008               	return
  9670  0DFD                     l8327:	
  9671                           
  9672                           ;PowerFault_B1.c: 87: else
  9673                           ;PowerFault_B1.c: 88: {
  9674                           ;PowerFault_B1.c: 89: PF->Time++;
  9675  0DFD  083D               	movf	_PF^(0+128),w
  9676  0DFE  3E06               	addlw	6
  9677  0DFF  0086               	movwf	6
  9678  0E00  3001               	movlw	1	; select bank2/3
  9679  0E01  0087               	movwf	7
  9680  0E02  3001               	movlw	1
  9681  0E03  0781               	addwf	1,f
  9682  0E04  3141               	addfsr 1,1
  9683  0E05  1803               	skipnc
  9684  0E06  0A81               	incf	1,f
  9685                           
  9686                           ;PowerFault_B1.c: 90: if(PF->Time >= 2)
  9687  0E07  083D               	movf	_PF^(0+128),w
  9688  0E08  3E06               	addlw	6
  9689  0E09  0086               	movwf	6
  9690  0E0A  3001               	movlw	1	; select bank2/3
  9691  0E0B  0087               	movwf	7
  9692  0E0C  3F40               	moviw [0]fsr1
  9693  0E0D  0020               	movlb	0	; select bank0
  9694  0E0E  00AF               	movwf	??_setPowerFault_Main
  9695  0E0F  3F41               	moviw [1]fsr1
  9696  0E10  00B0               	movwf	??_setPowerFault_Main+1
  9697  0E11  3000               	movlw	0
  9698  0E12  0230               	subwf	??_setPowerFault_Main+1,w
  9699  0E13  3002               	movlw	2
  9700  0E14  1903               	skipnz
  9701  0E15  022F               	subwf	??_setPowerFault_Main,w
  9702  0E16  1C03               	skipc
  9703  0E17  0008               	return
  9704                           
  9705                           ;PowerFault_B1.c: 91: {
  9706                           ;PowerFault_B1.c: 92: PF->Time=0;
  9707  0E18  0021               	movlb	1	; select bank1
  9708  0E19  083D               	movf	_PF^(0+128),w
  9709  0E1A  3E06               	addlw	6
  9710  0E1B  0086               	movwf	6
  9711  0E1C  3001               	movlw	1	; select bank2/3
  9712  0E1D  0087               	movwf	7
  9713  0E1E  3000               	movlw	0
  9714  0E1F  3FC0               	movwi [0]fsr1
  9715  0E20  3FC1               	movwi [1]fsr1
  9716                           
  9717                           ;PowerFault_B1.c: 93: PF->ADtoGO=0;
  9718  0E21  083D               	movf	_PF^(0+128),w
  9719  0E22  0086               	movwf	6
  9720  0E23  3001               	movlw	1	; select bank2/3
  9721  0E24  0087               	movwf	7
  9722  0E25  1181               	bcf	1,3
  9723                           
  9724                           ;PowerFault_B1.c: 95: if(PF->ERROR)
  9725  0E26  083D               	movf	_PF^(0+128),w
  9726  0E27  0086               	movwf	6
  9727  0E28  3001               	movlw	1	; select bank2/3
  9728  0E29  0087               	movwf	7
  9729  0E2A  1C81               	btfss	1,1
  9730  0E2B  2E6F               	goto	l8347
  9731                           
  9732                           ;PowerFault_B1.c: 96: {
  9733                           ;PowerFault_B1.c: 97: if(PF->AD <= (300+100) && PF->AD >= (300-100))
  9734  0E2C  0A3D               	incf	_PF^(0+128),w
  9735  0E2D  0086               	movwf	6
  9736  0E2E  3001               	movlw	1	; select bank2/3
  9737  0E2F  0087               	movwf	7
  9738  0E30  3F40               	moviw [0]fsr1
  9739  0E31  0020               	movlb	0	; select bank0
  9740  0E32  00AF               	movwf	??_setPowerFault_Main
  9741  0E33  3F41               	moviw [1]fsr1
  9742  0E34  00B0               	movwf	??_setPowerFault_Main+1
  9743  0E35  3001               	movlw	1
  9744  0E36  0230               	subwf	??_setPowerFault_Main+1,w
  9745  0E37  3091               	movlw	145
  9746  0E38  1903               	skipnz
  9747  0E39  022F               	subwf	??_setPowerFault_Main,w
  9748  0E3A  1803               	skipnc
  9749  0E3B  2EB3               	goto	l8359
  9750  0E3C  0021               	movlb	1	; select bank1
  9751  0E3D  0A3D               	incf	_PF^(0+128),w
  9752  0E3E  0086               	movwf	6
  9753  0E3F  3001               	movlw	1	; select bank2/3
  9754  0E40  0087               	movwf	7
  9755  0E41  3F40               	moviw [0]fsr1
  9756  0E42  0020               	movlb	0	; select bank0
  9757  0E43  00AF               	movwf	??_setPowerFault_Main
  9758  0E44  3F41               	moviw [1]fsr1
  9759  0E45  00B0               	movwf	??_setPowerFault_Main+1
  9760  0E46  3000               	movlw	0
  9761  0E47  0230               	subwf	??_setPowerFault_Main+1,w
  9762  0E48  30C8               	movlw	200
  9763  0E49  1903               	skipnz
  9764  0E4A  022F               	subwf	??_setPowerFault_Main,w
  9765  0E4B  1C03               	skipc
  9766  0E4C  2EB3               	goto	l8359
  9767                           
  9768                           ;PowerFault_B1.c: 98: {
  9769                           ;PowerFault_B1.c: 99: PF->Count++;
  9770  0E4D  3001               	movlw	1
  9771  0E4E  00AF               	movwf	??_setPowerFault_Main
  9772  0E4F  0021               	movlb	1	; select bank1
  9773  0E50  083D               	movf	_PF^(0+128),w
  9774  0E51  3E05               	addlw	5
  9775  0E52  0086               	movwf	6
  9776  0E53  3001               	movlw	1	; select bank2/3
  9777  0E54  0087               	movwf	7
  9778  0E55  0020               	movlb	0	; select bank0
  9779  0E56  082F               	movf	??_setPowerFault_Main,w
  9780  0E57  0781               	addwf	1,f
  9781                           
  9782                           ;PowerFault_B1.c: 100: if(PF->Count > 1)
  9783  0E58  0021               	movlb	1	; select bank1
  9784  0E59  083D               	movf	_PF^(0+128),w
  9785  0E5A  3E05               	addlw	5
  9786  0E5B  0086               	movwf	6
  9787  0E5C  3001               	movlw	1	; select bank2/3
  9788  0E5D  0087               	movwf	7
  9789  0E5E  3002               	movlw	2
  9790  0E5F  0201               	subwf	1,w
  9791  0E60  1C03               	skipc
  9792  0E61  2EBA               	goto	l8361
  9793                           
  9794                           ;PowerFault_B1.c: 101: {
  9795                           ;PowerFault_B1.c: 102: PF->Count=0;
  9796  0E62  083D               	movf	_PF^(0+128),w
  9797  0E63  3E05               	addlw	5
  9798  0E64  0086               	movwf	6
  9799  0E65  3001               	movlw	1	; select bank2/3
  9800  0E66  0087               	movwf	7
  9801  0E67  0181               	clrf	1
  9802                           
  9803                           ;PowerFault_B1.c: 103: setPowerFault_ERROR(1,0);
  9804  0E68  0020               	movlb	0	; select bank0
  9805  0E69  01AC               	clrf	setPowerFault_ERROR@command
  9806  0E6A  3001               	movlw	1
  9807  0E6B  3190  2070  318D   	fcall	_setPowerFault_ERROR
  9808                           
  9809                           ;PowerFault_B1.c: 104: }
  9810                           ;PowerFault_B1.c: 105: }
  9811  0E6E  2EBA               	goto	l8361
  9812  0E6F                     l8347:	
  9813                           ;PowerFault_B1.c: 109: }
  9814                           ;PowerFault_B1.c: 110: }
  9815                           
  9816                           ;PowerFault_B1.c: 106: else
  9817                           ;PowerFault_B1.c: 107: {
  9818                           ;PowerFault_B1.c: 108: PF->Count=0;
  9819                           
  9820                           
  9821                           ;PowerFault_B1.c: 111: else
  9822                           ;PowerFault_B1.c: 112: {
  9823                           ;PowerFault_B1.c: 113: if(PF->AD >= (300+100) || PF->AD <= (310-100))
  9824  0E6F  0A3D               	incf	_PF^(0+128),w
  9825  0E70  0086               	movwf	6
  9826  0E71  3001               	movlw	1	; select bank2/3
  9827  0E72  0087               	movwf	7
  9828  0E73  3F40               	moviw [0]fsr1
  9829  0E74  0020               	movlb	0	; select bank0
  9830  0E75  00AF               	movwf	??_setPowerFault_Main
  9831  0E76  3F41               	moviw [1]fsr1
  9832  0E77  00B0               	movwf	??_setPowerFault_Main+1
  9833  0E78  3001               	movlw	1
  9834  0E79  0230               	subwf	??_setPowerFault_Main+1,w
  9835  0E7A  3090               	movlw	144
  9836  0E7B  1903               	skipnz
  9837  0E7C  022F               	subwf	??_setPowerFault_Main,w
  9838  0E7D  1803               	skipnc
  9839  0E7E  2E90               	goto	l8351
  9840  0E7F  0021               	movlb	1	; select bank1
  9841  0E80  0A3D               	incf	_PF^(0+128),w
  9842  0E81  0086               	movwf	6
  9843  0E82  3001               	movlw	1	; select bank2/3
  9844  0E83  0087               	movwf	7
  9845  0E84  3F40               	moviw [0]fsr1
  9846  0E85  0020               	movlb	0	; select bank0
  9847  0E86  00AF               	movwf	??_setPowerFault_Main
  9848  0E87  3F41               	moviw [1]fsr1
  9849  0E88  00B0               	movwf	??_setPowerFault_Main+1
  9850  0E89  3000               	movlw	0
  9851  0E8A  0230               	subwf	??_setPowerFault_Main+1,w
  9852  0E8B  30D3               	movlw	211
  9853  0E8C  1903               	skipnz
  9854  0E8D  022F               	subwf	??_setPowerFault_Main,w
  9855  0E8E  1803               	skipnc
  9856  0E8F  2EB3               	goto	l8359
  9857  0E90                     l8351:	
  9858                           
  9859                           ;PowerFault_B1.c: 114: {
  9860                           ;PowerFault_B1.c: 115: PF->Count++;
  9861  0E90  3001               	movlw	1
  9862  0E91  00AF               	movwf	??_setPowerFault_Main
  9863  0E92  0021               	movlb	1	; select bank1
  9864  0E93  083D               	movf	_PF^(0+128),w
  9865  0E94  3E05               	addlw	5
  9866  0E95  0086               	movwf	6
  9867  0E96  3001               	movlw	1	; select bank2/3
  9868  0E97  0087               	movwf	7
  9869  0E98  0020               	movlb	0	; select bank0
  9870  0E99  082F               	movf	??_setPowerFault_Main,w
  9871  0E9A  0781               	addwf	1,f
  9872                           
  9873                           ;PowerFault_B1.c: 116: if(PF->Count > 1)
  9874  0E9B  0021               	movlb	1	; select bank1
  9875  0E9C  083D               	movf	_PF^(0+128),w
  9876  0E9D  3E05               	addlw	5
  9877  0E9E  0086               	movwf	6
  9878  0E9F  3001               	movlw	1	; select bank2/3
  9879  0EA0  0087               	movwf	7
  9880  0EA1  3002               	movlw	2
  9881  0EA2  0201               	subwf	1,w
  9882  0EA3  1C03               	skipc
  9883  0EA4  2EBA               	goto	l8361
  9884                           
  9885                           ;PowerFault_B1.c: 117: {
  9886                           ;PowerFault_B1.c: 118: PF->Count=0;
  9887  0EA5  083D               	movf	_PF^(0+128),w
  9888  0EA6  3E05               	addlw	5
  9889  0EA7  0086               	movwf	6
  9890  0EA8  3001               	movlw	1	; select bank2/3
  9891  0EA9  0087               	movwf	7
  9892  0EAA  0181               	clrf	1
  9893                           
  9894                           ;PowerFault_B1.c: 119: setPowerFault_ERROR(1,1);
  9895  0EAB  0020               	movlb	0	; select bank0
  9896  0EAC  01AC               	clrf	setPowerFault_ERROR@command
  9897  0EAD  0AAC               	incf	setPowerFault_ERROR@command,f
  9898  0EAE  3001               	movlw	1
  9899  0EAF  3190  2070  318D   	fcall	_setPowerFault_ERROR
  9900                           
  9901                           ;PowerFault_B1.c: 120: }
  9902                           ;PowerFault_B1.c: 121: }
  9903  0EB2  2EBA               	goto	l8361
  9904  0EB3                     l8359:	
  9905                           
  9906                           ;PowerFault_B1.c: 122: else
  9907                           ;PowerFault_B1.c: 123: {
  9908                           ;PowerFault_B1.c: 124: PF->Count=0;
  9909  0EB3  0021               	movlb	1	; select bank1
  9910  0EB4  083D               	movf	_PF^(0+128),w
  9911  0EB5  3E05               	addlw	5
  9912  0EB6  0086               	movwf	6
  9913  0EB7  3001               	movlw	1	; select bank2/3
  9914  0EB8  0087               	movwf	7
  9915  0EB9  0181               	clrf	1
  9916  0EBA                     l8361:	
  9917                           
  9918                           ;PowerFault_B1.c: 125: }
  9919                           ;PowerFault_B1.c: 127: }
  9920                           ;PowerFault_B1.c: 128: if(PF->ERROR == 0)
  9921  0EBA  0021               	movlb	1	; select bank1
  9922  0EBB  083D               	movf	_PF^(0+128),w
  9923  0EBC  0086               	movwf	6
  9924  0EBD  3001               	movlw	1	; select bank2/3
  9925  0EBE  0087               	movwf	7
  9926  0EBF  1881               	btfsc	1,1
  9927  0EC0  2EC6               	goto	l2327
  9928                           
  9929                           ;PowerFault_B1.c: 129: {
  9930                           ;PowerFault_B1.c: 130: PF->Safe=1;
  9931  0EC1  083D               	movf	_PF^(0+128),w
  9932  0EC2  0086               	movwf	6
  9933  0EC3  3001               	movlw	1	; select bank2/3
  9934  0EC4  0087               	movwf	7
  9935  0EC5  1501               	bsf	1,2
  9936  0EC6                     l2327:	
  9937                           
  9938                           ;PowerFault_B1.c: 131: }
  9939                           ;PowerFault_B1.c: 132: PF->AD=0;
  9940  0EC6  0A3D               	incf	_PF^(0+128),w
  9941  0EC7  0086               	movwf	6
  9942  0EC8  3001               	movlw	1	; select bank2/3
  9943  0EC9  0087               	movwf	7
  9944  0ECA  3000               	movlw	0
  9945  0ECB  3FC0               	movwi [0]fsr1
  9946  0ECC  3FC1               	movwi [1]fsr1
  9947  0ECD  0008               	return
  9948  0ECE                     __end_of_setPowerFault_Main:	
  9949                           
  9950                           	psect	text42
  9951  1070                     __ptext42:	
  9952 ;; *************** function _setPowerFault_ERROR *****************
  9953 ;; Defined at:
  9954 ;;		line 138 in file "G:\Program\PIC\Source_File\PowerFault_B1.c"
  9955 ;; Parameters:    Size  Location     Type
  9956 ;;  pf              1    wreg     unsigned char 
  9957 ;;  command         1   12[BANK0 ] unsigned char 
  9958 ;; Auto vars:     Size  Location     Type
  9959 ;;  pf              1   14[BANK0 ] unsigned char 
  9960 ;; Return value:  Size  Location     Type
  9961 ;;		None               void
  9962 ;; Registers used:
  9963 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9964 ;; Tracked objects:
  9965 ;;		On entry : 0/0
  9966 ;;		On exit  : 0/0
  9967 ;;		Unchanged: 0/0
  9968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9969 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9970 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9971 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9972 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9973 ;;Total ram usage:        3 bytes
  9974 ;; Hardware stack levels used:    1
  9975 ;; Hardware stack levels required when called:    8
  9976 ;; This function calls:
  9977 ;;		_DimmerLights_ERROR
  9978 ;;		_PowerFaultPointSelect
  9979 ;;		_setDimmer_PFERROR
  9980 ;;		_setLED
  9981 ;;		_setRF_Enable
  9982 ;;		_setSw_Enable
  9983 ;; This function is called by:
  9984 ;;		_setPowerFault_Main
  9985 ;; This function uses a non-reentrant model
  9986 ;;
  9987                           
  9988                           
  9989                           ;psect for function _setPowerFault_ERROR
  9990  1070                     _setPowerFault_ERROR:	
  9991                           
  9992                           ;incstack = 0
  9993                           ; Regs used in _setPowerFault_ERROR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9994                           ;setPowerFault_ERROR@pf stored from wreg
  9995  1070  0020               	movlb	0	; select bank0
  9996  1071  00AE               	movwf	setPowerFault_ERROR@pf
  9997                           
  9998                           ;PowerFault_B1.c: 140: PowerFaultPointSelect(pf);
  9999  1072  082E               	movf	setPowerFault_ERROR@pf,w
 10000  1073  31A1  21D5  3190   	fcall	_PowerFaultPointSelect
 10001                           
 10002                           ;PowerFault_B1.c: 141: if(command == 1)
 10003  1076  0020               	movlb	0	; select bank0
 10004  1077  082C               	movf	setPowerFault_ERROR@command,w
 10005  1078  3A01               	xorlw	1
 10006  1079  1D03               	skipz
 10007  107A  28A6               	goto	l7647
 10008                           
 10009                           ;PowerFault_B1.c: 142: {
 10010                           ;PowerFault_B1.c: 143: PF->ERROR=1;
 10011  107B  0021               	movlb	1	; select bank1
 10012  107C  083D               	movf	_PF^(0+128),w
 10013  107D  0086               	movwf	6
 10014  107E  3001               	movlw	1	; select bank2/3
 10015  107F  0087               	movwf	7
 10016  1080  1481               	bsf	1,1
 10017                           
 10018                           ;PowerFault_B1.c: 144: setDimmer_PFERROR(1,1);
 10019  1081  0020               	movlb	0	; select bank0
 10020  1082  01A2               	clrf	setDimmer_PFERROR@command
 10021  1083  0AA2               	incf	setDimmer_PFERROR@command,f
 10022  1084  3001               	movlw	1
 10023  1085  31A3  2377  3190   	fcall	_setDimmer_PFERROR
 10024                           
 10025                           ;PowerFault_B1.c: 145: DimmerLights_ERROR();
 10026  1088  3191  21B6  3190   	fcall	_DimmerLights_ERROR
 10027                           
 10028                           ;PowerFault_B1.c: 146: setLED(99,11);
 10029  108B  300B               	movlw	11
 10030  108C  0020               	movlb	0	; select bank0
 10031  108D  00AD               	movwf	??_setPowerFault_ERROR
 10032  108E  082D               	movf	??_setPowerFault_ERROR,w
 10033  108F  00A2               	movwf	setLED@command
 10034  1090  3063               	movlw	99
 10035  1091  319E  2679  3190   	fcall	_setLED
 10036                           
 10037                           ;PowerFault_B1.c: 149: setSw_Enable(1,0);
 10038  1094  0020               	movlb	0	; select bank0
 10039  1095  01A2               	clrf	setSw_Enable@command
 10040  1096  3001               	movlw	1
 10041  1097  31A3  2359  3190   	fcall	_setSw_Enable
 10042                           
 10043                           ;PowerFault_B1.c: 152: setSw_Enable(2,0);
 10044  109A  0020               	movlb	0	; select bank0
 10045  109B  01A2               	clrf	setSw_Enable@command
 10046  109C  3002               	movlw	2
 10047  109D  31A3  2359  3190   	fcall	_setSw_Enable
 10048                           
 10049                           ;PowerFault_B1.c: 159: setRF_Enable(1,0);
 10050  10A0  0020               	movlb	0	; select bank0
 10051  10A1  01A5               	clrf	setRF_Enable@command
 10052  10A2  3001               	movlw	1
 10053  10A3  31A7  27DA         	fcall	_setRF_Enable
 10054                           
 10055                           ;PowerFault_B1.c: 161: }
 10056  10A5  0008               	return
 10057  10A6                     l7647:	
 10058                           
 10059                           ;PowerFault_B1.c: 162: else
 10060                           ;PowerFault_B1.c: 163: {
 10061                           ;PowerFault_B1.c: 164: PF->ERROR=0;
 10062  10A6  0021               	movlb	1	; select bank1
 10063  10A7  083D               	movf	_PF^(0+128),w
 10064  10A8  0086               	movwf	6
 10065  10A9  3001               	movlw	1	; select bank2/3
 10066  10AA  0087               	movwf	7
 10067  10AB  1081               	bcf	1,1
 10068                           
 10069                           ;PowerFault_B1.c: 165: PF->Safe=1;
 10070  10AC  083D               	movf	_PF^(0+128),w
 10071  10AD  0086               	movwf	6
 10072  10AE  3001               	movlw	1	; select bank2/3
 10073  10AF  0087               	movwf	7
 10074  10B0  1501               	bsf	1,2
 10075                           
 10076                           ;PowerFault_B1.c: 166: setDimmer_PFERROR(1,0);
 10077  10B1  0020               	movlb	0	; select bank0
 10078  10B2  01A2               	clrf	setDimmer_PFERROR@command
 10079  10B3  3001               	movlw	1
 10080  10B4  31A3  2377  3190   	fcall	_setDimmer_PFERROR
 10081                           
 10082                           ;PowerFault_B1.c: 167: DimmerLights_ERROR();
 10083  10B7  3191  21B6  3190   	fcall	_DimmerLights_ERROR
 10084                           
 10085                           ;PowerFault_B1.c: 168: setLED(99,10);
 10086  10BA  300A               	movlw	10
 10087  10BB  0020               	movlb	0	; select bank0
 10088  10BC  00AD               	movwf	??_setPowerFault_ERROR
 10089  10BD  082D               	movf	??_setPowerFault_ERROR,w
 10090  10BE  00A2               	movwf	setLED@command
 10091  10BF  3063               	movlw	99
 10092  10C0  319E  2679  3190   	fcall	_setLED
 10093                           
 10094                           ;PowerFault_B1.c: 171: setSw_Enable(1,1);
 10095  10C3  0020               	movlb	0	; select bank0
 10096  10C4  01A2               	clrf	setSw_Enable@command
 10097  10C5  0AA2               	incf	setSw_Enable@command,f
 10098  10C6  3001               	movlw	1
 10099  10C7  31A3  2359  3190   	fcall	_setSw_Enable
 10100                           
 10101                           ;PowerFault_B1.c: 175: setSw_Enable(2,1);
 10102  10CA  0020               	movlb	0	; select bank0
 10103  10CB  01A2               	clrf	setSw_Enable@command
 10104  10CC  0AA2               	incf	setSw_Enable@command,f
 10105  10CD  3002               	movlw	2
 10106  10CE  31A3  2359  3190   	fcall	_setSw_Enable
 10107                           
 10108                           ;PowerFault_B1.c: 182: setRF_Enable(1,1);
 10109  10D1  0020               	movlb	0	; select bank0
 10110  10D2  01A5               	clrf	setRF_Enable@command
 10111  10D3  0AA5               	incf	setRF_Enable@command,f
 10112  10D4  3001               	movlw	1
 10113  10D5  31A7  27DA         	fcall	_setRF_Enable
 10114  10D7  0008               	return
 10115  10D8                     __end_of_setPowerFault_ERROR:	
 10116                           
 10117                           	psect	text43
 10118  2377                     __ptext43:	
 10119 ;; *************** function _setDimmer_PFERROR *****************
 10120 ;; Defined at:
 10121 ;;		line 541 in file "G:\Program\PIC\Source_File\Dimmer_B1.c"
 10122 ;; Parameters:    Size  Location     Type
 10123 ;;  dimmer          1    wreg     unsigned char 
 10124 ;;  command         1    2[BANK0 ] unsigned char 
 10125 ;; Auto vars:     Size  Location     Type
 10126 ;;  dimmer          1    3[BANK0 ] unsigned char 
 10127 ;; Return value:  Size  Location     Type
 10128 ;;		None               void
 10129 ;; Registers used:
 10130 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10131 ;; Tracked objects:
 10132 ;;		On entry : 0/0
 10133 ;;		On exit  : 0/0
 10134 ;;		Unchanged: 0/0
 10135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10136 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10137 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10139 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10140 ;;Total ram usage:        2 bytes
 10141 ;; Hardware stack levels used:    1
 10142 ;; Hardware stack levels required when called:    5
 10143 ;; This function calls:
 10144 ;;		_DimmerPointSelect
 10145 ;; This function is called by:
 10146 ;;		_setPowerFault_ERROR
 10147 ;; This function uses a non-reentrant model
 10148 ;;
 10149                           
 10150                           
 10151                           ;psect for function _setDimmer_PFERROR
 10152  2377                     _setDimmer_PFERROR:	
 10153                           
 10154                           ;incstack = 0
 10155                           ; Regs used in _setDimmer_PFERROR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10156                           ;setDimmer_PFERROR@dimmer stored from wreg
 10157  2377  0020               	movlb	0	; select bank0
 10158  2378  00A3               	movwf	setDimmer_PFERROR@dimmer
 10159                           
 10160                           ;Dimmer_B1.c: 543: DimmerPointSelect(dimmer);
 10161  2379  0823               	movf	setDimmer_PFERROR@dimmer,w
 10162  237A  31A2  2285         	fcall	_DimmerPointSelect
 10163                           
 10164                           ;Dimmer_B1.c: 544: Dimmer->PFERROR=command;
 10165  237C  0021               	movlb	1	; select bank1
 10166  237D  083A               	movf	_Dimmer^(0+128),w
 10167  237E  0086               	movwf	6
 10168  237F  0187               	clrf	7
 10169  2380  0020               	movlb	0	; select bank0
 10170  2381  0822               	movf	setDimmer_PFERROR@command,w
 10171  2382  1101               	bcf	1,2
 10172  2383  1D03               	skipz
 10173  2384  1501               	bsf	1,2
 10174  2385  0008               	return
 10175  2386                     __end_of_setDimmer_PFERROR:	
 10176                           
 10177                           	psect	text44
 10178  2433                     __ptext44:	
 10179 ;; *************** function _getLoad_Safe *****************
 10180 ;; Defined at:
 10181 ;;		line 364 in file "G:\Program\PIC\Source_File\OverLoad_B1.c"
 10182 ;; Parameters:    Size  Location     Type
 10183 ;;  load            1    wreg     unsigned char 
 10184 ;; Auto vars:     Size  Location     Type
 10185 ;;  load            1    3[BANK0 ] unsigned char 
 10186 ;; Return value:  Size  Location     Type
 10187 ;;                  1    wreg      unsigned char 
 10188 ;; Registers used:
 10189 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10190 ;; Tracked objects:
 10191 ;;		On entry : 0/0
 10192 ;;		On exit  : 0/0
 10193 ;;		Unchanged: 0/0
 10194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10195 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10196 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10197 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10198 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10199 ;;Total ram usage:        2 bytes
 10200 ;; Hardware stack levels used:    1
 10201 ;; Hardware stack levels required when called:    5
 10202 ;; This function calls:
 10203 ;;		_LoadPointSelect
 10204 ;; This function is called by:
 10205 ;;		_setTemp_Main
 10206 ;;		_setPowerFault_Main
 10207 ;; This function uses a non-reentrant model
 10208 ;;
 10209                           
 10210                           
 10211                           ;psect for function _getLoad_Safe
 10212  2433                     _getLoad_Safe:	
 10213                           
 10214                           ;incstack = 0
 10215                           ; Regs used in _getLoad_Safe: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10216                           ;getLoad_Safe@load stored from wreg
 10217  2433  0020               	movlb	0	; select bank0
 10218  2434  00A3               	movwf	getLoad_Safe@load
 10219                           
 10220                           ;OverLoad_B1.c: 366: LoadPointSelect(load);
 10221  2435  0823               	movf	getLoad_Safe@load,w
 10222  2436  31A2  2234         	fcall	_LoadPointSelect
 10223                           
 10224                           ;OverLoad_B1.c: 367: return Load->Safe;
 10225  2438  0020               	movlb	0	; select bank0
 10226  2439  086F               	movf	_Load,w
 10227  243A  0086               	movwf	6
 10228  243B  3002               	movlw	2	; select bank4/5
 10229  243C  0087               	movwf	7
 10230  243D  0C01               	rrf	1,w
 10231  243E  00A2               	movwf	??_getLoad_Safe
 10232  243F  0CA2               	rrf	??_getLoad_Safe,f
 10233  2440  0C22               	rrf	??_getLoad_Safe,w
 10234  2441  3901               	andlw	1
 10235  2442  0008               	return
 10236  2443                     __end_of_getLoad_Safe:	
 10237                           
 10238                           	psect	text45
 10239  219A                     __ptext45:	
 10240 ;; *************** function _PowerFault_Initialization *****************
 10241 ;; Defined at:
 10242 ;;		line 15 in file "G:\Program\PIC\Source_File\PowerFault_B1.c"
 10243 ;; Parameters:    Size  Location     Type
 10244 ;;		None
 10245 ;; Auto vars:     Size  Location     Type
 10246 ;;		None
 10247 ;; Return value:  Size  Location     Type
 10248 ;;		None               void
 10249 ;; Registers used:
 10250 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10251 ;; Tracked objects:
 10252 ;;		On entry : 0/0
 10253 ;;		On exit  : 0/0
 10254 ;;		Unchanged: 0/0
 10255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10256 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10259 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10260 ;;Total ram usage:        0 bytes
 10261 ;; Hardware stack levels used:    1
 10262 ;; Hardware stack levels required when called:    6
 10263 ;; This function calls:
 10264 ;;		_setPowerFault_Initialization
 10265 ;; This function is called by:
 10266 ;;		_main
 10267 ;; This function uses a non-reentrant model
 10268 ;;
 10269                           
 10270                           
 10271                           ;psect for function _PowerFault_Initialization
 10272  219A                     _PowerFault_Initialization:	
 10273                           
 10274                           ;PowerFault_B1.c: 18: setPowerFault_Initialization(1);
 10275                           
 10276                           ;incstack = 0
 10277                           ; Regs used in _PowerFault_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cs
      +                          tack]
 10278  219A  3001               	movlw	1
 10279  219B  31A4  2474         	fcall	_setPowerFault_Initialization
 10280  219D  0008               	return
 10281  219E                     __end_of_PowerFault_Initialization:	
 10282                           
 10283                           	psect	text46
 10284  2474                     __ptext46:	
 10285 ;; *************** function _setPowerFault_Initialization *****************
 10286 ;; Defined at:
 10287 ;;		line 29 in file "G:\Program\PIC\Source_File\PowerFault_B1.c"
 10288 ;; Parameters:    Size  Location     Type
 10289 ;;  pf              1    wreg     unsigned char 
 10290 ;; Auto vars:     Size  Location     Type
 10291 ;;  pf              1    1[BANK0 ] unsigned char 
 10292 ;; Return value:  Size  Location     Type
 10293 ;;		None               void
 10294 ;; Registers used:
 10295 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10296 ;; Tracked objects:
 10297 ;;		On entry : 0/0
 10298 ;;		On exit  : 0/0
 10299 ;;		Unchanged: 0/0
 10300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10302 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10304 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10305 ;;Total ram usage:        1 bytes
 10306 ;; Hardware stack levels used:    1
 10307 ;; Hardware stack levels required when called:    5
 10308 ;; This function calls:
 10309 ;;		_PowerFaultPointSelect
 10310 ;; This function is called by:
 10311 ;;		_PowerFault_Initialization
 10312 ;; This function uses a non-reentrant model
 10313 ;;
 10314                           
 10315                           
 10316                           ;psect for function _setPowerFault_Initialization
 10317  2474                     _setPowerFault_Initialization:	
 10318                           
 10319                           ;incstack = 0
 10320                           ; Regs used in _setPowerFault_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath
      +                          +cstack]
 10321                           ;setPowerFault_Initialization@pf stored from wreg
 10322  2474  0020               	movlb	0	; select bank0
 10323  2475  00A1               	movwf	setPowerFault_Initialization@pf
 10324                           
 10325                           ;PowerFault_B1.c: 31: PowerFaultPointSelect(pf);
 10326  2476  0821               	movf	setPowerFault_Initialization@pf,w
 10327  2477  31A1  21D5         	fcall	_PowerFaultPointSelect
 10328                           
 10329                           ;PowerFault_B1.c: 32: PF->Enable=1;
 10330  2479  0021               	movlb	1	; select bank1
 10331  247A  083D               	movf	_PF^(0+128),w
 10332  247B  0086               	movwf	6
 10333  247C  3001               	movlw	1	; select bank2/3
 10334  247D  0087               	movwf	7
 10335  247E  1401               	bsf	1,0
 10336                           
 10337                           ;PowerFault_B1.c: 33: PF->Safe=1;
 10338  247F  083D               	movf	_PF^(0+128),w
 10339  2480  0086               	movwf	6
 10340  2481  3001               	movlw	1	; select bank2/3
 10341  2482  0087               	movwf	7
 10342  2483  1501               	bsf	1,2
 10343  2484  0008               	return
 10344  2485                     __end_of_setPowerFault_Initialization:	
 10345                           
 10346                           	psect	text47
 10347  2556                     __ptext47:	
 10348 ;; *************** function _Mcu_Initialization *****************
 10349 ;; Defined at:
 10350 ;;		line 11 in file "G:\Program\PIC\Source_File\MCU_16f1518_B1.c"
 10351 ;; Parameters:    Size  Location     Type
 10352 ;;		None
 10353 ;; Auto vars:     Size  Location     Type
 10354 ;;		None
 10355 ;; Return value:  Size  Location     Type
 10356 ;;		None               void
 10357 ;; Registers used:
 10358 ;;		wreg, status,2, status,0, pclath, cstack
 10359 ;; Tracked objects:
 10360 ;;		On entry : 0/0
 10361 ;;		On exit  : 0/0
 10362 ;;		Unchanged: 0/0
 10363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10366 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10367 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10368 ;;Total ram usage:        1 bytes
 10369 ;; Hardware stack levels used:    1
 10370 ;; Hardware stack levels required when called:    5
 10371 ;; This function calls:
 10372 ;;		_ADC_Set
 10373 ;;		_INT_Set
 10374 ;;		_IOC_Set
 10375 ;;		_IO_Set
 10376 ;;		_TMR0_Set
 10377 ;; This function is called by:
 10378 ;;		_main
 10379 ;; This function uses a non-reentrant model
 10380 ;;
 10381                           
 10382                           
 10383                           ;psect for function _Mcu_Initialization
 10384  2556                     _Mcu_Initialization:	
 10385                           
 10386                           ;MCU_16f1518_B1.c: 14: OSCCON=0x78; ;;
 10387                           
 10388                           ;incstack = 0
 10389                           ; Regs used in _Mcu_Initialization: [wreg+status,2+status,0+pclath+cstack]
 10390  2556  3078               	movlw	120
 10391  2557  0021               	movlb	1	; select bank1
 10392  2558  0099               	movwf	25	;volatile
 10393                           
 10394                           ;MCU_16f1518_B1.c: 16: IO_Set();
 10395  2559  31A5  25B9  31A5   	fcall	_IO_Set
 10396                           
 10397                           ;MCU_16f1518_B1.c: 18: TMR0_Set();
 10398  255C  31A2  22F4  31A5   	fcall	_TMR0_Set
 10399                           
 10400                           ;MCU_16f1518_B1.c: 20: ;;
 10401                           ;MCU_16f1518_B1.c: 22: ADC_Set();
 10402  255F  31A1  21DC  31A5   	fcall	_ADC_Set
 10403                           
 10404                           ;MCU_16f1518_B1.c: 26: INT_Set();
 10405  2562  31A1  21B2  31A5   	fcall	_INT_Set
 10406                           
 10407                           ;MCU_16f1518_B1.c: 28: IOC_Set();
 10408  2565  31A2  22E7         	fcall	_IOC_Set
 10409                           
 10410                           ;MCU_16f1518_B1.c: 30: ;;
 10411                           ;MCU_16f1518_B1.c: 32: ;;
 10412                           ;MCU_16f1518_B1.c: 34: Memory=&VarMemory;
 10413  2567  3020               	movlw	_VarMemory& (0+255)
 10414  2568  0020               	movlb	0	; select bank0
 10415  2569  00A1               	movwf	??_Mcu_Initialization
 10416  256A  0821               	movf	??_Mcu_Initialization,w
 10417  256B  0021               	movlb	1	; select bank1
 10418  256C  00EB               	movwf	_Memory^(0+128)
 10419  256D  0008               	return
 10420  256E                     __end_of_Mcu_Initialization:	
 10421                           
 10422                           	psect	text48
 10423  22F4                     __ptext48:	
 10424 ;; *************** function _TMR0_Set *****************
 10425 ;; Defined at:
 10426 ;;		line 73 in file "G:\Program\PIC\Source_File\MCU_16f1518_B1.c"
 10427 ;; Parameters:    Size  Location     Type
 10428 ;;		None
 10429 ;; Auto vars:     Size  Location     Type
 10430 ;;		None
 10431 ;; Return value:  Size  Location     Type
 10432 ;;		None               void
 10433 ;; Registers used:
 10434 ;;		wreg, status,2
 10435 ;; Tracked objects:
 10436 ;;		On entry : 0/0
 10437 ;;		On exit  : 0/0
 10438 ;;		Unchanged: 0/0
 10439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10440 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10441 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10442 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10443 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10444 ;;Total ram usage:        1 bytes
 10445 ;; Hardware stack levels used:    1
 10446 ;; Hardware stack levels required when called:    4
 10447 ;; This function calls:
 10448 ;;		Nothing
 10449 ;; This function is called by:
 10450 ;;		_Mcu_Initialization
 10451 ;; This function uses a non-reentrant model
 10452 ;;
 10453                           
 10454                           
 10455                           ;psect for function _TMR0_Set
 10456  22F4                     _TMR0_Set:	
 10457                           
 10458                           ;MCU_16f1518_B1.c: 75: Timer0=&VarTimer0;
 10459                           
 10460                           ;incstack = 0
 10461                           ; Regs used in _TMR0_Set: [wreg+status,2]
 10462  22F4  30C7               	movlw	_VarTimer0& (0+255)
 10463  22F5  0020               	movlb	0	; select bank0
 10464  22F6  00A0               	movwf	??_TMR0_Set
 10465  22F7  0820               	movf	??_TMR0_Set,w
 10466  22F8  0021               	movlb	1	; select bank1
 10467  22F9  00EE               	movwf	_Timer0^(0+128)
 10468                           
 10469                           ;MCU_16f1518_B1.c: 76: OPTION_REG=0x00;
 10470  22FA  0195               	clrf	21	;volatile
 10471                           
 10472                           ;MCU_16f1518_B1.c: 77: TMR0=(256-90);
 10473  22FB  30A6               	movlw	166
 10474  22FC  0020               	movlb	0	; select bank0
 10475  22FD  0095               	movwf	21	;volatile
 10476                           
 10477                           ;MCU_16f1518_B1.c: 78: TMR0IE=1;
 10478  22FE  168B               	bsf	11,5	;volatile
 10479                           
 10480                           ;MCU_16f1518_B1.c: 79: GIE=1;
 10481  22FF  178B               	bsf	11,7	;volatile
 10482  2300  0008               	return
 10483  2301                     __end_of_TMR0_Set:	
 10484                           
 10485                           	psect	text49
 10486  25B9                     __ptext49:	
 10487 ;; *************** function _IO_Set *****************
 10488 ;; Defined at:
 10489 ;;		line 37 in file "G:\Program\PIC\Source_File\MCU_16f1518_B1.c"
 10490 ;; Parameters:    Size  Location     Type
 10491 ;;		None
 10492 ;; Auto vars:     Size  Location     Type
 10493 ;;		None
 10494 ;; Return value:  Size  Location     Type
 10495 ;;		None               void
 10496 ;; Registers used:
 10497 ;;		wreg, status,2
 10498 ;; Tracked objects:
 10499 ;;		On entry : 0/0
 10500 ;;		On exit  : 0/0
 10501 ;;		Unchanged: 0/0
 10502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10506 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10507 ;;Total ram usage:        0 bytes
 10508 ;; Hardware stack levels used:    1
 10509 ;; Hardware stack levels required when called:    4
 10510 ;; This function calls:
 10511 ;;		Nothing
 10512 ;; This function is called by:
 10513 ;;		_Mcu_Initialization
 10514 ;; This function uses a non-reentrant model
 10515 ;;
 10516                           
 10517                           
 10518                           ;psect for function _IO_Set
 10519  25B9                     _IO_Set:	
 10520                           
 10521                           ;MCU_16f1518_B1.c: 39: TRISA=0b01110111;;
 10522                           
 10523                           ;incstack = 0
 10524                           ; Regs used in _IO_Set: [wreg+status,2]
 10525  25B9  3077               	movlw	119
 10526  25BA  0021               	movlb	1	; select bank1
 10527  25BB  008C               	movwf	12	;volatile
 10528                           
 10529                           ;MCU_16f1518_B1.c: 40: TRISB=0b00000111;;
 10530  25BC  3007               	movlw	7
 10531  25BD  008D               	movwf	13	;volatile
 10532                           
 10533                           ;MCU_16f1518_B1.c: 41: TRISC=0b00001100;;
 10534  25BE  300C               	movlw	12
 10535  25BF  008E               	movwf	14	;volatile
 10536                           
 10537                           ;MCU_16f1518_B1.c: 42: LATA=0b00000000;;
 10538  25C0  0022               	movlb	2	; select bank2
 10539  25C1  018C               	clrf	12	;volatile
 10540                           
 10541                           ;MCU_16f1518_B1.c: 43: LATB=0b00000010;;
 10542  25C2  3002               	movlw	2
 10543  25C3  008D               	movwf	13	;volatile
 10544                           
 10545                           ;MCU_16f1518_B1.c: 44: LATC=0b00000000;;
 10546  25C4  018E               	clrf	14	;volatile
 10547                           
 10548                           ;MCU_16f1518_B1.c: 45: ANSELA=0b00100010;;
 10549  25C5  3022               	movlw	34
 10550  25C6  0023               	movlb	3	; select bank3
 10551  25C7  008C               	movwf	12	;volatile
 10552                           
 10553                           ;MCU_16f1518_B1.c: 46: ANSELB=0b00000000;;
 10554  25C8  018D               	clrf	13	;volatile
 10555                           
 10556                           ;MCU_16f1518_B1.c: 47: ANSELC=0b00000000;;
 10557  25C9  018E               	clrf	14	;volatile
 10558                           
 10559                           ;MCU_16f1518_B1.c: 48: PORTA=0b01110111;;
 10560  25CA  3077               	movlw	119
 10561  25CB  0020               	movlb	0	; select bank0
 10562  25CC  008C               	movwf	12	;volatile
 10563                           
 10564                           ;MCU_16f1518_B1.c: 49: PORTB=0b00000111;;
 10565  25CD  3007               	movlw	7
 10566  25CE  008D               	movwf	13	;volatile
 10567                           
 10568                           ;MCU_16f1518_B1.c: 50: PORTC=0b00001100;;
 10569  25CF  300C               	movlw	12
 10570  25D0  008E               	movwf	14	;volatile
 10571  25D1  0008               	return
 10572  25D2                     __end_of_IO_Set:	
 10573                           
 10574                           	psect	text50
 10575  22E7                     __ptext50:	
 10576 ;; *************** function _IOC_Set *****************
 10577 ;; Defined at:
 10578 ;;		line 246 in file "G:\Program\PIC\Source_File\MCU_16f1518_B1.c"
 10579 ;; Parameters:    Size  Location     Type
 10580 ;;		None
 10581 ;; Auto vars:     Size  Location     Type
 10582 ;;		None
 10583 ;; Return value:  Size  Location     Type
 10584 ;;		None               void
 10585 ;; Registers used:
 10586 ;;		wreg, status,2
 10587 ;; Tracked objects:
 10588 ;;		On entry : 0/0
 10589 ;;		On exit  : 0/0
 10590 ;;		Unchanged: 0/0
 10591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10593 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10595 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10596 ;;Total ram usage:        0 bytes
 10597 ;; Hardware stack levels used:    1
 10598 ;; Hardware stack levels required when called:    4
 10599 ;; This function calls:
 10600 ;;		Nothing
 10601 ;; This function is called by:
 10602 ;;		_Mcu_Initialization
 10603 ;; This function uses a non-reentrant model
 10604 ;;
 10605                           
 10606                           
 10607                           ;psect for function _IOC_Set
 10608  22E7                     _IOC_Set:	
 10609                           
 10610                           ;MCU_16f1518_B1.c: 248: WPUB2=0;
 10611                           
 10612                           ;incstack = 0
 10613                           ; Regs used in _IOC_Set: [wreg+status,2]
 10614  22E7  0024               	movlb	4	; select bank4
 10615  22E8  110D               	bcf	13,2	;volatile
 10616                           
 10617                           ;MCU_16f1518_B1.c: 250: IOCBP=0b00000100;
 10618  22E9  3004               	movlw	4
 10619  22EA  0027               	movlb	7	; select bank7
 10620  22EB  0094               	movwf	20	;volatile
 10621                           
 10622                           ;MCU_16f1518_B1.c: 251: IOCBN=0b00000100;
 10623  22EC  3004               	movlw	4
 10624  22ED  0095               	movwf	21	;volatile
 10625                           
 10626                           ;MCU_16f1518_B1.c: 259: IOCBF=0b00000000;
 10627  22EE  0196               	clrf	22	;volatile
 10628                           
 10629                           ;MCU_16f1518_B1.c: 261: IOCIE=1;
 10630  22EF  158B               	bsf	11,3	;volatile
 10631                           
 10632                           ;MCU_16f1518_B1.c: 262: IOCIF=0;
 10633  22F0  100B               	bcf	11,0	;volatile
 10634                           
 10635                           ;MCU_16f1518_B1.c: 263: PEIE=1;
 10636  22F1  170B               	bsf	11,6	;volatile
 10637                           
 10638                           ;MCU_16f1518_B1.c: 264: GIE=1;
 10639  22F2  178B               	bsf	11,7	;volatile
 10640  22F3  0008               	return
 10641  22F4                     __end_of_IOC_Set:	
 10642                           
 10643                           	psect	text51
 10644  21B2                     __ptext51:	
 10645 ;; *************** function _INT_Set *****************
 10646 ;; Defined at:
 10647 ;;		line 217 in file "G:\Program\PIC\Source_File\MCU_16f1518_B1.c"
 10648 ;; Parameters:    Size  Location     Type
 10649 ;;		None
 10650 ;; Auto vars:     Size  Location     Type
 10651 ;;		None
 10652 ;; Return value:  Size  Location     Type
 10653 ;;		None               void
 10654 ;; Registers used:
 10655 ;;		None
 10656 ;; Tracked objects:
 10657 ;;		On entry : 0/0
 10658 ;;		On exit  : 0/0
 10659 ;;		Unchanged: 0/0
 10660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10661 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10664 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10665 ;;Total ram usage:        0 bytes
 10666 ;; Hardware stack levels used:    1
 10667 ;; Hardware stack levels required when called:    4
 10668 ;; This function calls:
 10669 ;;		Nothing
 10670 ;; This function is called by:
 10671 ;;		_Mcu_Initialization
 10672 ;; This function uses a non-reentrant model
 10673 ;;
 10674                           
 10675                           
 10676                           ;psect for function _INT_Set
 10677  21B2                     _INT_Set:	
 10678                           
 10679                           ;MCU_16f1518_B1.c: 219: WPUB0=0;
 10680                           
 10681                           ;incstack = 0
 10682                           ; Regs used in _INT_Set: []
 10683  21B2  0024               	movlb	4	; select bank4
 10684  21B3  100D               	bcf	13,0	;volatile
 10685                           
 10686                           ;MCU_16f1518_B1.c: 221: PEIE=1;
 10687  21B4  170B               	bsf	11,6	;volatile
 10688                           
 10689                           ;MCU_16f1518_B1.c: 222: GIE=1;
 10690  21B5  178B               	bsf	11,7	;volatile
 10691  21B6  0008               	return
 10692  21B7                     __end_of_INT_Set:	
 10693                           
 10694                           	psect	text52
 10695  21DC                     __ptext52:	
 10696 ;; *************** function _ADC_Set *****************
 10697 ;; Defined at:
 10698 ;;		line 303 in file "G:\Program\PIC\Source_File\MCU_16f1518_B1.c"
 10699 ;; Parameters:    Size  Location     Type
 10700 ;;		None
 10701 ;; Auto vars:     Size  Location     Type
 10702 ;;		None
 10703 ;; Return value:  Size  Location     Type
 10704 ;;		None               void
 10705 ;; Registers used:
 10706 ;;		wreg
 10707 ;; Tracked objects:
 10708 ;;		On entry : 0/0
 10709 ;;		On exit  : 0/0
 10710 ;;		Unchanged: 0/0
 10711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10712 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10713 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10715 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10716 ;;Total ram usage:        0 bytes
 10717 ;; Hardware stack levels used:    1
 10718 ;; Hardware stack levels required when called:    4
 10719 ;; This function calls:
 10720 ;;		Nothing
 10721 ;; This function is called by:
 10722 ;;		_Mcu_Initialization
 10723 ;; This function uses a non-reentrant model
 10724 ;;
 10725                           
 10726                           
 10727                           ;psect for function _ADC_Set
 10728  21DC                     _ADC_Set:	
 10729                           
 10730                           ;MCU_16f1518_B1.c: 305: ADCON1=0xf2;
 10731                           
 10732                           ;incstack = 0
 10733                           ; Regs used in _ADC_Set: [wreg]
 10734  21DC  30F2               	movlw	242
 10735  21DD  0021               	movlb	1	; select bank1
 10736  21DE  009E               	movwf	30	;volatile
 10737                           
 10738                           ;MCU_16f1518_B1.c: 306: FVRCON=0xc0;
 10739  21DF  30C0               	movlw	192
 10740  21E0  0022               	movlb	2	; select bank2
 10741  21E1  0097               	movwf	23	;volatile
 10742  21E2  0008               	return
 10743  21E3                     __end_of_ADC_Set:	
 10744                           
 10745                           	psect	text53
 10746  253E                     __ptext53:	
 10747 ;; *************** function _MainT_Initialization *****************
 10748 ;; Defined at:
 10749 ;;		line 92 in file "G:\Program\PIC\Source_File\main.c"
 10750 ;; Parameters:    Size  Location     Type
 10751 ;;		None
 10752 ;; Auto vars:     Size  Location     Type
 10753 ;;		None
 10754 ;; Return value:  Size  Location     Type
 10755 ;;		None               void
 10756 ;; Registers used:
 10757 ;;		wreg, fsr1l, fsr1h
 10758 ;; Tracked objects:
 10759 ;;		On entry : 0/0
 10760 ;;		On exit  : 0/0
 10761 ;;		Unchanged: 0/0
 10762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10764 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10765 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10766 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10767 ;;Total ram usage:        1 bytes
 10768 ;; Hardware stack levels used:    1
 10769 ;; Hardware stack levels required when called:    4
 10770 ;; This function calls:
 10771 ;;		Nothing
 10772 ;; This function is called by:
 10773 ;;		_main
 10774 ;; This function uses a non-reentrant model
 10775 ;;
 10776                           
 10777                           
 10778                           ;psect for function _MainT_Initialization
 10779  253E                     _MainT_Initialization:	
 10780                           
 10781                           ;main.c: 95: Product=&VarProduct;
 10782                           
 10783                           ;incstack = 0
 10784                           ; Regs used in _MainT_Initialization: [wregfsr1]
 10785  253E  30A0               	movlw	_VarProduct& (0+255)
 10786  253F  0020               	movlb	0	; select bank0
 10787  2540  00A0               	movwf	??_MainT_Initialization
 10788  2541  0820               	movf	??_MainT_Initialization,w
 10789  2542  0021               	movlb	1	; select bank1
 10790  2543  00EC               	movwf	_Product^(0+128)
 10791                           
 10792                           ;main.c: 98: TMain=&VarTMain;
 10793  2544  30BE               	movlw	_VarTMain& (0+255)
 10794  2545  0020               	movlb	0	; select bank0
 10795  2546  00A0               	movwf	??_MainT_Initialization
 10796  2547  0820               	movf	??_MainT_Initialization,w
 10797  2548  0021               	movlb	1	; select bank1
 10798  2549  00ED               	movwf	_TMain^(0+128)
 10799                           
 10800                           ;main.c: 99: TMain->FirstOpen=1;
 10801  254A  086D               	movf	_TMain^(0+128),w
 10802  254B  0086               	movwf	6
 10803  254C  3001               	movlw	1	; select bank2/3
 10804  254D  0087               	movwf	7
 10805  254E  1681               	bsf	1,5
 10806                           
 10807                           ;main.c: 100: TMain->First=1;
 10808  254F  086D               	movf	_TMain^(0+128),w
 10809  2550  3E03               	addlw	3
 10810  2551  0086               	movwf	6
 10811  2552  3001               	movlw	1	; select bank2/3
 10812  2553  0087               	movwf	7
 10813  2554  1481               	bsf	1,1
 10814  2555  0008               	return
 10815  2556                     __end_of_MainT_Initialization:	
 10816                           
 10817                           	psect	text54
 10818  1769                     __ptext54:	
 10819 ;; *************** function _MainT *****************
 10820 ;; Defined at:
 10821 ;;		line 103 in file "G:\Program\PIC\Source_File\main.c"
 10822 ;; Parameters:    Size  Location     Type
 10823 ;;		None
 10824 ;; Auto vars:     Size  Location     Type
 10825 ;;		None
 10826 ;; Return value:  Size  Location     Type
 10827 ;;		None               void
 10828 ;; Registers used:
 10829 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10830 ;; Tracked objects:
 10831 ;;		On entry : 0/0
 10832 ;;		On exit  : 0/0
 10833 ;;		Unchanged: 0/0
 10834 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10836 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10837 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10838 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10839 ;;Total ram usage:        1 bytes
 10840 ;; Hardware stack levels used:    1
 10841 ;; Hardware stack levels required when called:    8
 10842 ;; This function calls:
 10843 ;;		_setBuz
 10844 ;;		_setLED
 10845 ;;		_setLoad_Enable
 10846 ;;		_setRF_Enable
 10847 ;;		_setSw_Enable
 10848 ;;		_setTemp_Enable
 10849 ;; This function is called by:
 10850 ;;		_main
 10851 ;; This function uses a non-reentrant model
 10852 ;;
 10853                           
 10854                           
 10855                           ;psect for function _MainT
 10856  1769                     _MainT:	
 10857                           
 10858                           ;main.c: 106: if(!TMain->PowerON)
 10859                           
 10860                           ;incstack = 0
 10861                           ; Regs used in _MainT: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10862  1769  0021               	movlb	1	; select bank1
 10863  176A  086D               	movf	_TMain^(0+128),w
 10864  176B  0086               	movwf	6
 10865  176C  3001               	movlw	1	; select bank2/3
 10866  176D  0087               	movwf	7
 10867  176E  1801               	btfsc	1,0
 10868  176F  2FC8               	goto	l8717
 10869                           
 10870                           ;main.c: 107: {
 10871                           ;main.c: 108: TMain->PowerCount++;
 10872  1770  0A6D               	incf	_TMain^(0+128),w
 10873  1771  0086               	movwf	6
 10874  1772  3001               	movlw	1	; select bank2/3
 10875  1773  0087               	movwf	7
 10876  1774  3001               	movlw	1
 10877  1775  0781               	addwf	1,f
 10878  1776  3141               	addfsr 1,1
 10879  1777  1803               	skipnc
 10880  1778  0A81               	incf	1,f
 10881                           
 10882                           ;main.c: 109: if(TMain->PowerCount == 150)
 10883  1779  0A6D               	incf	_TMain^(0+128),w
 10884  177A  0086               	movwf	6
 10885  177B  3001               	movlw	1	; select bank2/3
 10886  177C  0087               	movwf	7
 10887  177D  3F40               	moviw [0]fsr1
 10888  177E  3A96               	xorlw	150
 10889  177F  1D03               	skipz
 10890  1780  2F83               	goto	u7645
 10891  1781  3F41               	moviw [1]fsr1
 10892  1782  3A00               	xorlw	0
 10893  1783                     u7645:	
 10894  1783  1D03               	skipz
 10895  1784  0008               	return
 10896                           
 10897                           ;main.c: 110: {
 10898                           ;main.c: 111: TMain->PowerCount=0;
 10899  1785  0A6D               	incf	_TMain^(0+128),w
 10900  1786  0086               	movwf	6
 10901  1787  3001               	movlw	1	; select bank2/3
 10902  1788  0087               	movwf	7
 10903  1789  3000               	movlw	0
 10904  178A  3FC0               	movwi [0]fsr1
 10905  178B  3FC1               	movwi [1]fsr1
 10906                           
 10907                           ;main.c: 112: TMain->PowerON=1;
 10908  178C  086D               	movf	_TMain^(0+128),w
 10909  178D  0086               	movwf	6
 10910  178E  3001               	movlw	1	; select bank2/3
 10911  178F  0087               	movwf	7
 10912  1790  1401               	bsf	1,0
 10913                           
 10914                           ;main.c: 115: setTemp_Enable(1,1);
 10915  1791  0020               	movlb	0	; select bank0
 10916  1792  01A1               	clrf	setTemp_Enable@command
 10917  1793  0AA1               	incf	setTemp_Enable@command,f
 10918  1794  3001               	movlw	1
 10919  1795  31A3  2368  3197   	fcall	_setTemp_Enable
 10920                           
 10921                           ;main.c: 119: setLoad_Enable(1,1);
 10922  1798  0020               	movlb	0	; select bank0
 10923  1799  01A2               	clrf	setLoad_Enable@command
 10924  179A  0AA2               	incf	setLoad_Enable@command,f
 10925  179B  3001               	movlw	1
 10926  179C  31A4  24D2  3197   	fcall	_setLoad_Enable
 10927                           
 10928                           ;main.c: 125: setBuz(1,3,50);
 10929  179F  3003               	movlw	3
 10930  17A0  0020               	movlb	0	; select bank0
 10931  17A1  00AB               	movwf	??_MainT
 10932  17A2  082B               	movf	??_MainT,w
 10933  17A3  00A6               	movwf	setBuz@count
 10934  17A4  3032               	movlw	50
 10935  17A5  00A7               	movwf	setBuz@time
 10936  17A6  3000               	movlw	0
 10937  17A7  00A8               	movwf	setBuz@time+1
 10938  17A8  3001               	movlw	1
 10939  17A9  3195  25AB  3197   	fcall	_setBuz
 10940                           
 10941                           ;main.c: 126: TMain->SelfTest=1;
 10942  17AC  0021               	movlb	1	; select bank1
 10943  17AD  086D               	movf	_TMain^(0+128),w
 10944  17AE  3E03               	addlw	3
 10945  17AF  0086               	movwf	6
 10946  17B0  3001               	movlw	1	; select bank2/3
 10947  17B1  0087               	movwf	7
 10948  17B2  1401               	bsf	1,0
 10949                           
 10950                           ;main.c: 129: setSw_Enable(1,1);
 10951  17B3  0020               	movlb	0	; select bank0
 10952  17B4  01A2               	clrf	setSw_Enable@command
 10953  17B5  0AA2               	incf	setSw_Enable@command,f
 10954  17B6  3001               	movlw	1
 10955  17B7  31A3  2359  3197   	fcall	_setSw_Enable
 10956                           
 10957                           ;main.c: 133: setSw_Enable(2,1);
 10958  17BA  0020               	movlb	0	; select bank0
 10959  17BB  01A2               	clrf	setSw_Enable@command
 10960  17BC  0AA2               	incf	setSw_Enable@command,f
 10961  17BD  3002               	movlw	2
 10962  17BE  31A3  2359  3197   	fcall	_setSw_Enable
 10963                           
 10964                           ;main.c: 141: setRF_Enable(1,1);
 10965  17C1  0020               	movlb	0	; select bank0
 10966  17C2  01A5               	clrf	setRF_Enable@command
 10967  17C3  0AA5               	incf	setRF_Enable@command,f
 10968  17C4  3001               	movlw	1
 10969  17C5  31A7  27DA         	fcall	_setRF_Enable
 10970                           
 10971                           ;main.c: 145: }
 10972                           ;main.c: 146: }
 10973  17C7  0008               	return
 10974  17C8                     l8717:	
 10975                           
 10976                           ;main.c: 147: else
 10977                           ;main.c: 148: {
 10978                           ;main.c: 156: TMain->Count1++;
 10979  17C8  0021               	movlb	1	; select bank1
 10980  17C9  086D               	movf	_TMain^(0+128),w
 10981  17CA  3E06               	addlw	6
 10982  17CB  0086               	movwf	6
 10983  17CC  3001               	movlw	1	; select bank2/3
 10984  17CD  0087               	movwf	7
 10985  17CE  3001               	movlw	1
 10986  17CF  0781               	addwf	1,f
 10987  17D0  3141               	addfsr 1,1
 10988  17D1  1803               	skipnc
 10989  17D2  0A81               	incf	1,f
 10990                           
 10991                           ;main.c: 157: if(TMain->Count1 == 100)
 10992  17D3  086D               	movf	_TMain^(0+128),w
 10993  17D4  3E06               	addlw	6
 10994  17D5  0086               	movwf	6
 10995  17D6  3001               	movlw	1	; select bank2/3
 10996  17D7  0087               	movwf	7
 10997  17D8  3F40               	moviw [0]fsr1
 10998  17D9  3A64               	xorlw	100
 10999  17DA  1D03               	skipz
 11000  17DB  2FDE               	goto	u7655
 11001  17DC  3F41               	moviw [1]fsr1
 11002  17DD  3A00               	xorlw	0
 11003  17DE                     u7655:	
 11004  17DE  1D03               	skipz
 11005  17DF  0008               	return
 11006                           
 11007                           ;main.c: 158: {
 11008                           ;main.c: 159: TMain->Count1=0;
 11009  17E0  086D               	movf	_TMain^(0+128),w
 11010  17E1  3E06               	addlw	6
 11011  17E2  0086               	movwf	6
 11012  17E3  3001               	movlw	1	; select bank2/3
 11013  17E4  0087               	movwf	7
 11014  17E5  3000               	movlw	0
 11015  17E6  3FC0               	movwi [0]fsr1
 11016  17E7  3FC1               	movwi [1]fsr1
 11017                           
 11018                           ;main.c: 160: RB5=~RB5;
 11019  17E8  3020               	movlw	32
 11020  17E9  0020               	movlb	0	; select bank0
 11021  17EA  068D               	xorwf	13,f
 11022                           
 11023                           ;main.c: 171: if(TMain->Flag)
 11024  17EB  0021               	movlb	1	; select bank1
 11025  17EC  086D               	movf	_TMain^(0+128),w
 11026  17ED  0086               	movwf	6
 11027  17EE  3001               	movlw	1	; select bank2/3
 11028  17EF  0087               	movwf	7
 11029  17F0  1981               	btfsc	1,3
 11030  17F1  0008               	return
 11031                           
 11032                           ;main.c: 181: else
 11033                           ;main.c: 182: {
 11034                           ;main.c: 183: TMain->Flag=1;
 11035                           
 11036                           ;main.c: 172: {
 11037                           ;main.c: 180: }
 11038  17F2  086D               	movf	_TMain^(0+128),w
 11039  17F3  0086               	movwf	6
 11040  17F4  3001               	movlw	1	; select bank2/3
 11041  17F5  0087               	movwf	7
 11042  17F6  1581               	bsf	1,3
 11043                           
 11044                           ;main.c: 184: setLED(99,11);
 11045  17F7  300B               	movlw	11
 11046  17F8  0020               	movlb	0	; select bank0
 11047  17F9  00AB               	movwf	??_MainT
 11048  17FA  082B               	movf	??_MainT,w
 11049  17FB  00A2               	movwf	setLED@command
 11050  17FC  3063               	movlw	99
 11051  17FD  319E  2679         	fcall	_setLED
 11052  17FF  0008               	return
 11053  1800                     __end_of_MainT:	
 11054                           
 11055                           	psect	text55
 11056  2368                     __ptext55:	
 11057 ;; *************** function _setTemp_Enable *****************
 11058 ;; Defined at:
 11059 ;;		line 29 in file "G:\Program\PIC\Source_File\OverTemperature_B1.c"
 11060 ;; Parameters:    Size  Location     Type
 11061 ;;  temp            1    wreg     unsigned char 
 11062 ;;  command         1    1[BANK0 ] unsigned char 
 11063 ;; Auto vars:     Size  Location     Type
 11064 ;;  temp            1    2[BANK0 ] unsigned char 
 11065 ;; Return value:  Size  Location     Type
 11066 ;;		None               void
 11067 ;; Registers used:
 11068 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11069 ;; Tracked objects:
 11070 ;;		On entry : 0/0
 11071 ;;		On exit  : 0/0
 11072 ;;		Unchanged: 0/0
 11073 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11074 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11075 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11077 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11078 ;;Total ram usage:        2 bytes
 11079 ;; Hardware stack levels used:    1
 11080 ;; Hardware stack levels required when called:    5
 11081 ;; This function calls:
 11082 ;;		_TempPointSelect
 11083 ;; This function is called by:
 11084 ;;		_MainT
 11085 ;; This function uses a non-reentrant model
 11086 ;;
 11087                           
 11088                           
 11089                           ;psect for function _setTemp_Enable
 11090  2368                     _setTemp_Enable:	
 11091                           
 11092                           ;incstack = 0
 11093                           ; Regs used in _setTemp_Enable: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11094                           ;setTemp_Enable@temp stored from wreg
 11095  2368  0020               	movlb	0	; select bank0
 11096  2369  00A2               	movwf	setTemp_Enable@temp
 11097                           
 11098                           ;OverTemperature_B1.c: 31: TempPointSelect(temp);
 11099  236A  0822               	movf	setTemp_Enable@temp,w
 11100  236B  31A1  21BC         	fcall	_TempPointSelect
 11101                           
 11102                           ;OverTemperature_B1.c: 32: Temp->Enable=command;
 11103  236D  087D               	movf	_Temp,w
 11104  236E  0086               	movwf	6
 11105  236F  3001               	movlw	1	; select bank2/3
 11106  2370  0087               	movwf	7
 11107  2371  0020               	movlb	0	; select bank0
 11108  2372  0821               	movf	setTemp_Enable@command,w
 11109  2373  1001               	bcf	1,0
 11110  2374  1D03               	skipz
 11111  2375  1401               	bsf	1,0
 11112  2376  0008               	return
 11113  2377                     __end_of_setTemp_Enable:	
 11114                           
 11115                           	psect	text56
 11116  24D2                     __ptext56:	
 11117 ;; *************** function _setLoad_Enable *****************
 11118 ;; Defined at:
 11119 ;;		line 330 in file "G:\Program\PIC\Source_File\OverLoad_B1.c"
 11120 ;; Parameters:    Size  Location     Type
 11121 ;;  load            1    wreg     unsigned char 
 11122 ;;  command         1    2[BANK0 ] unsigned char 
 11123 ;; Auto vars:     Size  Location     Type
 11124 ;;  load            1    3[BANK0 ] unsigned char 
 11125 ;; Return value:  Size  Location     Type
 11126 ;;		None               void
 11127 ;; Registers used:
 11128 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11129 ;; Tracked objects:
 11130 ;;		On entry : 0/0
 11131 ;;		On exit  : 0/0
 11132 ;;		Unchanged: 0/0
 11133 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11134 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11135 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11137 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11138 ;;Total ram usage:        2 bytes
 11139 ;; Hardware stack levels used:    1
 11140 ;; Hardware stack levels required when called:    5
 11141 ;; This function calls:
 11142 ;;		_LoadPointSelect
 11143 ;; This function is called by:
 11144 ;;		_MainT
 11145 ;; This function uses a non-reentrant model
 11146 ;;
 11147                           
 11148                           
 11149                           ;psect for function _setLoad_Enable
 11150  24D2                     _setLoad_Enable:	
 11151                           
 11152                           ;incstack = 0
 11153                           ; Regs used in _setLoad_Enable: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11154                           ;setLoad_Enable@load stored from wreg
 11155  24D2  0020               	movlb	0	; select bank0
 11156  24D3  00A3               	movwf	setLoad_Enable@load
 11157                           
 11158                           ;OverLoad_B1.c: 332: LoadPointSelect(load);
 11159  24D4  0823               	movf	setLoad_Enable@load,w
 11160  24D5  31A2  2234         	fcall	_LoadPointSelect
 11161                           
 11162                           ;OverLoad_B1.c: 333: Load->Enable=command;
 11163  24D7  0020               	movlb	0	; select bank0
 11164  24D8  086F               	movf	_Load,w
 11165  24D9  0086               	movwf	6
 11166  24DA  3002               	movlw	2	; select bank4/5
 11167  24DB  0087               	movwf	7
 11168  24DC  0822               	movf	setLoad_Enable@command,w
 11169  24DD  1001               	bcf	1,0
 11170  24DE  1D03               	skipz
 11171  24DF  1401               	bsf	1,0
 11172                           
 11173                           ;OverLoad_B1.c: 334: Load->GO=0;
 11174  24E0  086F               	movf	_Load,w
 11175  24E1  0086               	movwf	6
 11176  24E2  3002               	movlw	2	; select bank4/5
 11177  24E3  0087               	movwf	7
 11178  24E4  1081               	bcf	1,1
 11179  24E5  0008               	return
 11180  24E6                     __end_of_setLoad_Enable:	
 11181                           
 11182                           	psect	text57
 11183  2196                     __ptext57:	
 11184 ;; *************** function _Load_Main *****************
 11185 ;; Defined at:
 11186 ;;		line 24 in file "G:\Program\PIC\Source_File\OverLoad_B1.c"
 11187 ;; Parameters:    Size  Location     Type
 11188 ;;		None
 11189 ;; Auto vars:     Size  Location     Type
 11190 ;;		None
 11191 ;; Return value:  Size  Location     Type
 11192 ;;		None               void
 11193 ;; Registers used:
 11194 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11195 ;; Tracked objects:
 11196 ;;		On entry : 0/0
 11197 ;;		On exit  : 0/0
 11198 ;;		Unchanged: 0/0
 11199 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11200 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11201 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11202 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11203 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11204 ;;Total ram usage:        0 bytes
 11205 ;; Hardware stack levels used:    1
 11206 ;; Hardware stack levels required when called:   10
 11207 ;; This function calls:
 11208 ;;		_setLoad_Main
 11209 ;; This function is called by:
 11210 ;;		_main
 11211 ;; This function uses a non-reentrant model
 11212 ;;
 11213                           
 11214                           
 11215                           ;psect for function _Load_Main
 11216  2196                     _Load_Main:	
 11217                           
 11218                           ;OverLoad_B1.c: 27: setLoad_Main(1);
 11219                           
 11220                           ;incstack = 0
 11221                           ; Regs used in _Load_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11222  2196  3001               	movlw	1
 11223  2197  3183  23AB         	fcall	_setLoad_Main
 11224  2199  0008               	return
 11225  219A                     __end_of_Load_Main:	
 11226                           
 11227                           	psect	text58
 11228  03AB                     __ptext58:	
 11229 ;; *************** function _setLoad_Main *****************
 11230 ;; Defined at:
 11231 ;;		line 68 in file "G:\Program\PIC\Source_File\OverLoad_B1.c"
 11232 ;; Parameters:    Size  Location     Type
 11233 ;;  load            1    wreg     unsigned char 
 11234 ;; Auto vars:     Size  Location     Type
 11235 ;;  load            1   19[BANK0 ] unsigned char 
 11236 ;;  i               1    0        unsigned char 
 11237 ;; Return value:  Size  Location     Type
 11238 ;;		None               void
 11239 ;; Registers used:
 11240 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11241 ;; Tracked objects:
 11242 ;;		On entry : 0/0
 11243 ;;		On exit  : 0/0
 11244 ;;		Unchanged: 0/0
 11245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11247 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11248 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11249 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11250 ;;Total ram usage:        5 bytes
 11251 ;; Hardware stack levels used:    1
 11252 ;; Hardware stack levels required when called:    9
 11253 ;; This function calls:
 11254 ;;		_LoadPointSelect
 11255 ;;		___lwdiv
 11256 ;;		___wmul
 11257 ;;		_getPF_Safe
 11258 ;;		_getTemp_Safe
 11259 ;;		_setDimmerLights_Clear
 11260 ;;		_setLoad_AH_AL_Restore
 11261 ;;		_setLoad_ERROR
 11262 ;; This function is called by:
 11263 ;;		_Load_Main
 11264 ;; This function uses a non-reentrant model
 11265 ;;
 11266                           
 11267                           
 11268                           ;psect for function _setLoad_Main
 11269  03AB                     _setLoad_Main:	
 11270                           
 11271                           ;incstack = 0
 11272                           ; Regs used in _setLoad_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11273                           ;setLoad_Main@load stored from wreg
 11274  03AB  0020               	movlb	0	; select bank0
 11275  03AC  00B3               	movwf	setLoad_Main@load
 11276                           
 11277                           ;OverLoad_B1.c: 70: char i;
 11278                           ;OverLoad_B1.c: 71: LoadPointSelect(load);
 11279  03AD  0833               	movf	setLoad_Main@load,w
 11280  03AE  31A2  2234  3183   	fcall	_LoadPointSelect
 11281                           
 11282                           ;OverLoad_B1.c: 72: if(Load->ERROR)
 11283  03B1  0020               	movlb	0	; select bank0
 11284  03B2  086F               	movf	_Load,w
 11285  03B3  0086               	movwf	6
 11286  03B4  3002               	movlw	2	; select bank4/5
 11287  03B5  0087               	movwf	7
 11288  03B6  1E81               	btfss	1,5
 11289  03B7  2BDF               	goto	l8127
 11290                           
 11291                           ;OverLoad_B1.c: 73: {
 11292                           ;OverLoad_B1.c: 74: Load->ErrorTime++;
 11293  03B8  086F               	movf	_Load,w
 11294  03B9  3E03               	addlw	3
 11295  03BA  0086               	movwf	6
 11296  03BB  3002               	movlw	2	; select bank4/5
 11297  03BC  0087               	movwf	7
 11298  03BD  3001               	movlw	1
 11299  03BE  0781               	addwf	1,f
 11300  03BF  3141               	addfsr 1,1
 11301  03C0  1803               	skipnc
 11302  03C1  0A81               	incf	1,f
 11303                           
 11304                           ;OverLoad_B1.c: 75: if(Load->ErrorTime >= 1000)
 11305  03C2  086F               	movf	_Load,w
 11306  03C3  3E03               	addlw	3
 11307  03C4  0086               	movwf	6
 11308  03C5  3002               	movlw	2	; select bank4/5
 11309  03C6  0087               	movwf	7
 11310  03C7  3F40               	moviw [0]fsr1
 11311  03C8  00AF               	movwf	??_setLoad_Main
 11312  03C9  3F41               	moviw [1]fsr1
 11313  03CA  00B0               	movwf	??_setLoad_Main+1
 11314  03CB  3003               	movlw	3
 11315  03CC  0230               	subwf	??_setLoad_Main+1,w
 11316  03CD  30E8               	movlw	232
 11317  03CE  1903               	skipnz
 11318  03CF  022F               	subwf	??_setLoad_Main,w
 11319  03D0  1C03               	skipc
 11320  03D1  0008               	return
 11321                           
 11322                           ;OverLoad_B1.c: 76: {
 11323                           ;OverLoad_B1.c: 77: Load->ErrorTime=0;
 11324  03D2  086F               	movf	_Load,w
 11325  03D3  3E03               	addlw	3
 11326  03D4  0086               	movwf	6
 11327  03D5  3002               	movlw	2	; select bank4/5
 11328  03D6  0087               	movwf	7
 11329  03D7  3000               	movlw	0
 11330  03D8  3FC0               	movwi [0]fsr1
 11331  03D9  3FC1               	movwi [1]fsr1
 11332                           
 11333                           ;OverLoad_B1.c: 78: setLoad_ERROR(load,0);
 11334  03DA  01AC               	clrf	setLoad_ERROR@command
 11335  03DB  0833               	movf	setLoad_Main@load,w
 11336  03DC  3192  229E         	fcall	_setLoad_ERROR
 11337                           
 11338                           ;OverLoad_B1.c: 79: }
 11339                           ;OverLoad_B1.c: 80: }
 11340  03DE  0008               	return
 11341  03DF                     l8127:	
 11342                           
 11343                           ;OverLoad_B1.c: 81: else
 11344                           ;OverLoad_B1.c: 82: {
 11345                           ;OverLoad_B1.c: 83: if(Load->ADtoGO)
 11346  03DF  0020               	movlb	0	; select bank0
 11347  03E0  086F               	movf	_Load,w
 11348  03E1  0086               	movwf	6
 11349  03E2  3002               	movlw	2	; select bank4/5
 11350  03E3  0087               	movwf	7
 11351  03E4  1E01               	btfss	1,4
 11352  03E5  2E06               	goto	l8203
 11353                           
 11354                           ;OverLoad_B1.c: 84: {
 11355                           ;OverLoad_B1.c: 85: Load->LightsCount=Load->Lights1Status+Load->Lights2Status+Load->Ligh
      +                          ts3Status;
 11356  03E6  086F               	movf	_Load,w
 11357  03E7  3E45               	addlw	69
 11358  03E8  0086               	movwf	6
 11359  03E9  3002               	movlw	2	; select bank4/5
 11360  03EA  0087               	movwf	7
 11361  03EB  086F               	movf	_Load,w
 11362  03EC  3E44               	addlw	68
 11363  03ED  0084               	movwf	4
 11364  03EE  3002               	movlw	2	; select bank4/5
 11365  03EF  0085               	movwf	5
 11366  03F0  0800               	movf	0,w
 11367  03F1  00AF               	movwf	??_setLoad_Main
 11368  03F2  086F               	movf	_Load,w
 11369  03F3  3E43               	addlw	67
 11370  03F4  0084               	movwf	4
 11371  03F5  3002               	movlw	2	; select bank4/5
 11372  03F6  0085               	movwf	5
 11373  03F7  0800               	movf	0,w
 11374  03F8  072F               	addwf	??_setLoad_Main,w
 11375  03F9  0701               	addwf	1,w
 11376  03FA  00B0               	movwf	??_setLoad_Main+1
 11377  03FB  086F               	movf	_Load,w
 11378  03FC  3E3E               	addlw	62
 11379  03FD  0086               	movwf	6
 11380  03FE  3002               	movlw	2	; select bank4/5
 11381  03FF  0087               	movwf	7
 11382  0400  0830               	movf	??_setLoad_Main+1,w
 11383  0401  0081               	movwf	1
 11384                           
 11385                           ;OverLoad_B1.c: 86: Load->Time++;
 11386  0402  0A6F               	incf	_Load,w
 11387  0403  0086               	movwf	6
 11388  0404  3002               	movlw	2	; select bank4/5
 11389  0405  0087               	movwf	7
 11390  0406  3001               	movlw	1
 11391  0407  0781               	addwf	1,f
 11392  0408  3141               	addfsr 1,1
 11393  0409  1803               	skipnc
 11394  040A  0A81               	incf	1,f
 11395                           
 11396                           ;OverLoad_B1.c: 87: if(Load->Time >= 4)
 11397  040B  0A6F               	incf	_Load,w
 11398  040C  0086               	movwf	6
 11399  040D  3002               	movlw	2	; select bank4/5
 11400  040E  0087               	movwf	7
 11401  040F  3F40               	moviw [0]fsr1
 11402  0410  00AF               	movwf	??_setLoad_Main
 11403  0411  3F41               	moviw [1]fsr1
 11404  0412  00B0               	movwf	??_setLoad_Main+1
 11405  0413  3000               	movlw	0
 11406  0414  0230               	subwf	??_setLoad_Main+1,w
 11407  0415  3004               	movlw	4
 11408  0416  1903               	skipnz
 11409  0417  022F               	subwf	??_setLoad_Main,w
 11410  0418  1C03               	skipc
 11411  0419  0008               	return
 11412                           
 11413                           ;OverLoad_B1.c: 88: {
 11414                           ;OverLoad_B1.c: 89: Load->Time=0;
 11415  041A  0A6F               	incf	_Load,w
 11416  041B  0086               	movwf	6
 11417  041C  3002               	movlw	2	; select bank4/5
 11418  041D  0087               	movwf	7
 11419  041E  3000               	movlw	0
 11420  041F  3FC0               	movwi [0]fsr1
 11421  0420  3FC1               	movwi [1]fsr1
 11422                           
 11423                           ;OverLoad_B1.c: 90: Load->ADtoGO=0;
 11424  0421  086F               	movf	_Load,w
 11425  0422  0086               	movwf	6
 11426  0423  3002               	movlw	2	; select bank4/5
 11427  0424  0087               	movwf	7
 11428  0425  1201               	bcf	1,4
 11429                           
 11430                           ;OverLoad_B1.c: 91: Load->ADH=((Load->AH[2]+Load->AH[3]+Load->AH[4])/3);
 11431  0426  3003               	movlw	3
 11432  0427  00A0               	movwf	___lwdiv@divisor
 11433  0428  3000               	movlw	0
 11434  0429  00A1               	movwf	___lwdiv@divisor+1
 11435  042A  086F               	movf	_Load,w
 11436  042B  3E10               	addlw	16
 11437  042C  0086               	movwf	6
 11438  042D  3002               	movlw	2	; select bank4/5
 11439  042E  0087               	movwf	7
 11440  042F  086F               	movf	_Load,w
 11441  0430  3E0C               	addlw	12
 11442  0431  0084               	movwf	4
 11443  0432  3002               	movlw	2	; select bank4/5
 11444  0433  0085               	movwf	5
 11445  0434  3F00               	moviw [0]fsr0
 11446  0435  00AF               	movwf	??_setLoad_Main
 11447  0436  3F01               	moviw [1]fsr0
 11448  0437  00B0               	movwf	??_setLoad_Main+1
 11449  0438  086F               	movf	_Load,w
 11450  0439  3E0E               	addlw	14
 11451  043A  0084               	movwf	4
 11452  043B  3002               	movlw	2	; select bank4/5
 11453  043C  0085               	movwf	5
 11454  043D  3F00               	moviw [0]fsr0
 11455  043E  072F               	addwf	??_setLoad_Main,w
 11456  043F  00B1               	movwf	??_setLoad_Main+2
 11457  0440  3F01               	moviw [1]fsr0
 11458  0441  3D30               	addwfc	??_setLoad_Main+1,w
 11459  0442  00B2               	movwf	??_setLoad_Main+3
 11460  0443  3F40               	moviw [0]fsr1
 11461  0444  0731               	addwf	??_setLoad_Main+2,w
 11462  0445  00A2               	movwf	___lwdiv@dividend
 11463  0446  3F41               	moviw [1]fsr1
 11464  0447  3D32               	addwfc	??_setLoad_Main+3,w
 11465  0448  00A3               	movwf	___lwdiv@dividend+1
 11466  0449  319A  2206  3183   	fcall	___lwdiv
 11467  044C  0020               	movlb	0	; select bank0
 11468  044D  086F               	movf	_Load,w
 11469  044E  3E2E               	addlw	46
 11470  044F  0086               	movwf	6
 11471  0450  3002               	movlw	2	; select bank4/5
 11472  0451  0087               	movwf	7
 11473  0452  0820               	movf	?___lwdiv,w
 11474  0453  3FC0               	movwi [0]fsr1
 11475  0454  0821               	movf	?___lwdiv+1,w
 11476  0455  3FC1               	movwi [1]fsr1
 11477                           
 11478                           ;OverLoad_B1.c: 92: Load->ADL=((Load->AL[2]+Load->AL[3]+Load->AL[4])/3);
 11479  0456  3003               	movlw	3
 11480  0457  00A0               	movwf	___lwdiv@divisor
 11481  0458  3000               	movlw	0
 11482  0459  00A1               	movwf	___lwdiv@divisor+1
 11483  045A  086F               	movf	_Load,w
 11484  045B  3E22               	addlw	34
 11485  045C  0086               	movwf	6
 11486  045D  3002               	movlw	2	; select bank4/5
 11487  045E  0087               	movwf	7
 11488  045F  086F               	movf	_Load,w
 11489  0460  3E1E               	addlw	30
 11490  0461  0084               	movwf	4
 11491  0462  3002               	movlw	2	; select bank4/5
 11492  0463  0085               	movwf	5
 11493  0464  3F00               	moviw [0]fsr0
 11494  0465  00AF               	movwf	??_setLoad_Main
 11495  0466  3F01               	moviw [1]fsr0
 11496  0467  00B0               	movwf	??_setLoad_Main+1
 11497  0468  086F               	movf	_Load,w
 11498  0469  3E20               	addlw	32
 11499  046A  0084               	movwf	4
 11500  046B  3002               	movlw	2	; select bank4/5
 11501  046C  0085               	movwf	5
 11502  046D  3F00               	moviw [0]fsr0
 11503  046E  072F               	addwf	??_setLoad_Main,w
 11504  046F  00B1               	movwf	??_setLoad_Main+2
 11505  0470  3F01               	moviw [1]fsr0
 11506  0471  3D30               	addwfc	??_setLoad_Main+1,w
 11507  0472  00B2               	movwf	??_setLoad_Main+3
 11508  0473  3F40               	moviw [0]fsr1
 11509  0474  0731               	addwf	??_setLoad_Main+2,w
 11510  0475  00A2               	movwf	___lwdiv@dividend
 11511  0476  3F41               	moviw [1]fsr1
 11512  0477  3D32               	addwfc	??_setLoad_Main+3,w
 11513  0478  00A3               	movwf	___lwdiv@dividend+1
 11514  0479  319A  2206  3183   	fcall	___lwdiv
 11515  047C  0020               	movlb	0	; select bank0
 11516  047D  086F               	movf	_Load,w
 11517  047E  3E30               	addlw	48
 11518  047F  0086               	movwf	6
 11519  0480  3002               	movlw	2	; select bank4/5
 11520  0481  0087               	movwf	7
 11521  0482  0820               	movf	?___lwdiv,w
 11522  0483  3FC0               	movwi [0]fsr1
 11523  0484  0821               	movf	?___lwdiv+1,w
 11524  0485  3FC1               	movwi [1]fsr1
 11525                           
 11526                           ;OverLoad_B1.c: 93: if(Load->ADH > Load->ADL)
 11527  0486  086F               	movf	_Load,w
 11528  0487  3E2E               	addlw	46
 11529  0488  0086               	movwf	6
 11530  0489  3002               	movlw	2	; select bank4/5
 11531  048A  0087               	movwf	7
 11532  048B  3F40               	moviw [0]fsr1
 11533  048C  00AF               	movwf	??_setLoad_Main
 11534  048D  3F41               	moviw [1]fsr1
 11535  048E  00B0               	movwf	??_setLoad_Main+1
 11536  048F  086F               	movf	_Load,w
 11537  0490  3E30               	addlw	48
 11538  0491  0086               	movwf	6
 11539  0492  3002               	movlw	2	; select bank4/5
 11540  0493  0087               	movwf	7
 11541  0494  3F40               	moviw [0]fsr1
 11542  0495  00B1               	movwf	??_setLoad_Main+2
 11543  0496  3F41               	moviw [1]fsr1
 11544  0497  00B2               	movwf	??_setLoad_Main+3
 11545  0498  0830               	movf	??_setLoad_Main+1,w
 11546  0499  0232               	subwf	??_setLoad_Main+3,w
 11547  049A  1D03               	skipz
 11548  049B  2C9E               	goto	u6715
 11549  049C  082F               	movf	??_setLoad_Main,w
 11550  049D  0231               	subwf	??_setLoad_Main+2,w
 11551  049E                     u6715:	
 11552  049E  1803               	skipnc
 11553  049F  2E01               	goto	l8201
 11554                           
 11555                           ;OverLoad_B1.c: 94: {
 11556                           ;OverLoad_B1.c: 95: Load->AD=(Load->ADH-Load->ADL);
 11557  04A0  086F               	movf	_Load,w
 11558  04A1  3E2E               	addlw	46
 11559  04A2  0086               	movwf	6
 11560  04A3  3002               	movlw	2	; select bank4/5
 11561  04A4  0087               	movwf	7
 11562  04A5  086F               	movf	_Load,w
 11563  04A6  3E30               	addlw	48
 11564  04A7  0084               	movwf	4
 11565  04A8  3002               	movlw	2	; select bank4/5
 11566  04A9  0085               	movwf	5
 11567  04AA  3F00               	moviw [0]fsr0
 11568  04AB  00AF               	movwf	??_setLoad_Main
 11569  04AC  3F01               	moviw [1]fsr0
 11570  04AD  00B0               	movwf	??_setLoad_Main+1
 11571  04AE  09AF               	comf	??_setLoad_Main,f
 11572  04AF  09B0               	comf	??_setLoad_Main+1,f
 11573  04B0  0AAF               	incf	??_setLoad_Main,f
 11574  04B1  1903               	skipnz
 11575  04B2  0AB0               	incf	??_setLoad_Main+1,f
 11576  04B3  3F40               	moviw [0]fsr1
 11577  04B4  072F               	addwf	??_setLoad_Main,w
 11578  04B5  00B1               	movwf	??_setLoad_Main+2
 11579  04B6  3F41               	moviw [1]fsr1
 11580  04B7  3D30               	addwfc	??_setLoad_Main+1,w
 11581  04B8  00B2               	movwf	??_setLoad_Main+3
 11582  04B9  086F               	movf	_Load,w
 11583  04BA  3E2C               	addlw	44
 11584  04BB  0086               	movwf	6
 11585  04BC  3002               	movlw	2	; select bank4/5
 11586  04BD  0087               	movwf	7
 11587  04BE  0831               	movf	??_setLoad_Main+2,w
 11588  04BF  3FC0               	movwi [0]fsr1
 11589  04C0  0832               	movf	??_setLoad_Main+3,w
 11590  04C1  3FC1               	movwi [1]fsr1
 11591                           
 11592                           ;OverLoad_B1.c: 96: if(Load->Count < 10)
 11593  04C2  086F               	movf	_Load,w
 11594  04C3  3E3A               	addlw	58
 11595  04C4  0086               	movwf	6
 11596  04C5  3002               	movlw	2	; select bank4/5
 11597  04C6  0087               	movwf	7
 11598  04C7  300A               	movlw	10
 11599  04C8  0201               	subwf	1,w
 11600  04C9  1803               	skipnc
 11601  04CA  2D1A               	goto	l8159
 11602                           
 11603                           ;OverLoad_B1.c: 97: {
 11604                           ;OverLoad_B1.c: 98: Load->Count++;
 11605  04CB  3001               	movlw	1
 11606  04CC  00AF               	movwf	??_setLoad_Main
 11607  04CD  086F               	movf	_Load,w
 11608  04CE  3E3A               	addlw	58
 11609  04CF  0086               	movwf	6
 11610  04D0  3002               	movlw	2	; select bank4/5
 11611  04D1  0087               	movwf	7
 11612  04D2  082F               	movf	??_setLoad_Main,w
 11613  04D3  0781               	addwf	1,f
 11614                           
 11615                           ;OverLoad_B1.c: 99: if(Load->Count == 1)
 11616  04D4  086F               	movf	_Load,w
 11617  04D5  3E3A               	addlw	58
 11618  04D6  0086               	movwf	6
 11619  04D7  3002               	movlw	2	; select bank4/5
 11620  04D8  0087               	movwf	7
 11621  04D9  0801               	movf	1,w
 11622  04DA  3A01               	xorlw	1
 11623  04DB  1D03               	skipz
 11624  04DC  2CE6               	goto	l8151
 11625                           
 11626                           ;OverLoad_B1.c: 100: {
 11627                           ;OverLoad_B1.c: 101: Load->JudgeValue=255;
 11628  04DD  086F               	movf	_Load,w
 11629  04DE  3E36               	addlw	54
 11630  04DF  0086               	movwf	6
 11631  04E0  3002               	movlw	2	; select bank4/5
 11632  04E1  0087               	movwf	7
 11633  04E2  30FF               	movlw	255
 11634  04E3  3FC0               	movwi [0]fsr1
 11635  04E4  3000               	movlw	0
 11636  04E5  3FC1               	movwi [1]fsr1
 11637  04E6                     l8151:	
 11638                           
 11639                           ;OverLoad_B1.c: 102: }
 11640                           ;OverLoad_B1.c: 103: if(Load->Count == 3)
 11641  04E6  086F               	movf	_Load,w
 11642  04E7  3E3A               	addlw	58
 11643  04E8  0086               	movwf	6
 11644  04E9  3002               	movlw	2	; select bank4/5
 11645  04EA  0087               	movwf	7
 11646  04EB  0801               	movf	1,w
 11647  04EC  3A03               	xorlw	3
 11648  04ED  1D03               	skipz
 11649  04EE  2D1A               	goto	l8159
 11650                           
 11651                           ;OverLoad_B1.c: 104: {
 11652                           ;OverLoad_B1.c: 105: if(Load->LightsCount == 1)
 11653  04EF  086F               	movf	_Load,w
 11654  04F0  3E3E               	addlw	62
 11655  04F1  0086               	movwf	6
 11656  04F2  3002               	movlw	2	; select bank4/5
 11657  04F3  0087               	movwf	7
 11658  04F4  0801               	movf	1,w
 11659  04F5  3A01               	xorlw	1
 11660  04F6  1D03               	skipz
 11661  04F7  2D02               	goto	l8157
 11662                           
 11663                           ;OverLoad_B1.c: 106: {
 11664                           ;OverLoad_B1.c: 107: Load->JudgeValue=0xffff;
 11665  04F8  086F               	movf	_Load,w
 11666  04F9  3E36               	addlw	54
 11667  04FA  0086               	movwf	6
 11668  04FB  3002               	movlw	2	; select bank4/5
 11669  04FC  0087               	movwf	7
 11670  04FD  30FF               	movlw	255
 11671  04FE  3FC0               	movwi [0]fsr1
 11672  04FF  30FF               	movlw	255
 11673  0500  3FC1               	movwi [1]fsr1
 11674                           
 11675                           ;OverLoad_B1.c: 108: }
 11676  0501  2D1A               	goto	l8159
 11677  0502                     l8157:	
 11678                           
 11679                           ;OverLoad_B1.c: 109: else
 11680                           ;OverLoad_B1.c: 110: {
 11681                           ;OverLoad_B1.c: 111: Load->JudgeValue=0xffff+Load->TotalLoad;
 11682  0502  086F               	movf	_Load,w
 11683  0503  3E06               	addlw	6
 11684  0504  0086               	movwf	6
 11685  0505  3002               	movlw	2	; select bank4/5
 11686  0506  0087               	movwf	7
 11687  0507  3F40               	moviw [0]fsr1
 11688  0508  00AF               	movwf	??_setLoad_Main
 11689  0509  3F41               	moviw [1]fsr1
 11690  050A  00B0               	movwf	??_setLoad_Main+1
 11691  050B  082F               	movf	??_setLoad_Main,w
 11692  050C  3EFF               	addlw	255
 11693  050D  00B1               	movwf	??_setLoad_Main+2
 11694  050E  30FF               	movlw	255
 11695  050F  3D30               	addwfc	??_setLoad_Main+1,w
 11696  0510  00B2               	movwf	??_setLoad_Main+3
 11697  0511  086F               	movf	_Load,w
 11698  0512  3E36               	addlw	54
 11699  0513  0086               	movwf	6
 11700  0514  3002               	movlw	2	; select bank4/5
 11701  0515  0087               	movwf	7
 11702  0516  0831               	movf	??_setLoad_Main+2,w
 11703  0517  3FC0               	movwi [0]fsr1
 11704  0518  0832               	movf	??_setLoad_Main+3,w
 11705  0519  3FC1               	movwi [1]fsr1
 11706  051A                     l8159:	
 11707                           
 11708                           ;OverLoad_B1.c: 112: }
 11709                           ;OverLoad_B1.c: 113: }
 11710                           ;OverLoad_B1.c: 114: }
 11711                           ;OverLoad_B1.c: 115: if(Load->AD >= Load->JudgeValue)
 11712  051A  086F               	movf	_Load,w
 11713  051B  3E36               	addlw	54
 11714  051C  0086               	movwf	6
 11715  051D  3002               	movlw	2	; select bank4/5
 11716  051E  0087               	movwf	7
 11717  051F  3F40               	moviw [0]fsr1
 11718  0520  00AF               	movwf	??_setLoad_Main
 11719  0521  3F41               	moviw [1]fsr1
 11720  0522  00B0               	movwf	??_setLoad_Main+1
 11721  0523  086F               	movf	_Load,w
 11722  0524  3E2C               	addlw	44
 11723  0525  0086               	movwf	6
 11724  0526  3002               	movlw	2	; select bank4/5
 11725  0527  0087               	movwf	7
 11726  0528  3F40               	moviw [0]fsr1
 11727  0529  00B1               	movwf	??_setLoad_Main+2
 11728  052A  3F41               	moviw [1]fsr1
 11729  052B  00B2               	movwf	??_setLoad_Main+3
 11730  052C  0830               	movf	??_setLoad_Main+1,w
 11731  052D  0232               	subwf	??_setLoad_Main+3,w
 11732  052E  1D03               	skipz
 11733  052F  2D32               	goto	u6765
 11734  0530  082F               	movf	??_setLoad_Main,w
 11735  0531  0231               	subwf	??_setLoad_Main+2,w
 11736  0532                     u6765:	
 11737  0532  1C03               	skipc
 11738  0533  2D53               	goto	l8169
 11739                           
 11740                           ;OverLoad_B1.c: 116: {
 11741                           ;OverLoad_B1.c: 117: Load->ErrorCount++;
 11742  0534  3001               	movlw	1
 11743  0535  00AF               	movwf	??_setLoad_Main
 11744  0536  086F               	movf	_Load,w
 11745  0537  3E3C               	addlw	60
 11746  0538  0086               	movwf	6
 11747  0539  3002               	movlw	2	; select bank4/5
 11748  053A  0087               	movwf	7
 11749  053B  082F               	movf	??_setLoad_Main,w
 11750  053C  0781               	addwf	1,f
 11751                           
 11752                           ;OverLoad_B1.c: 118: if(Load->ErrorCount >2)
 11753  053D  086F               	movf	_Load,w
 11754  053E  3E3C               	addlw	60
 11755  053F  0086               	movwf	6
 11756  0540  3002               	movlw	2	; select bank4/5
 11757  0541  0087               	movwf	7
 11758  0542  3003               	movlw	3
 11759  0543  0201               	subwf	1,w
 11760  0544  1C03               	skipc
 11761  0545  2E01               	goto	l8201
 11762                           
 11763                           ;OverLoad_B1.c: 119: {
 11764                           ;OverLoad_B1.c: 120: Load->ErrorCount=0;
 11765  0546  086F               	movf	_Load,w
 11766  0547  3E3C               	addlw	60
 11767  0548  0086               	movwf	6
 11768  0549  3002               	movlw	2	; select bank4/5
 11769  054A  0087               	movwf	7
 11770  054B  0181               	clrf	1
 11771                           
 11772                           ;OverLoad_B1.c: 121: setLoad_ERROR(load,1);
 11773  054C  01AC               	clrf	setLoad_ERROR@command
 11774  054D  0AAC               	incf	setLoad_ERROR@command,f
 11775  054E  0833               	movf	setLoad_Main@load,w
 11776  054F  3192  229E  3183   	fcall	_setLoad_ERROR
 11777                           
 11778                           ;OverLoad_B1.c: 128: }
 11779                           ;OverLoad_B1.c: 129: }
 11780  0552  2E01               	goto	l8201
 11781  0553                     l8169:	
 11782                           
 11783                           ;OverLoad_B1.c: 130: else
 11784                           ;OverLoad_B1.c: 131: {
 11785                           ;OverLoad_B1.c: 132: Load->ErrorCount=0;
 11786  0553  0020               	movlb	0	; select bank0
 11787  0554  086F               	movf	_Load,w
 11788  0555  3E3C               	addlw	60
 11789  0556  0086               	movwf	6
 11790  0557  3002               	movlw	2	; select bank4/5
 11791  0558  0087               	movwf	7
 11792  0559  0181               	clrf	1
 11793                           
 11794                           ;OverLoad_B1.c: 133: if(Load->Count > 5)
 11795  055A  086F               	movf	_Load,w
 11796  055B  3E3A               	addlw	58
 11797  055C  0086               	movwf	6
 11798  055D  3002               	movlw	2	; select bank4/5
 11799  055E  0087               	movwf	7
 11800  055F  3006               	movlw	6
 11801  0560  0201               	subwf	1,w
 11802  0561  1C03               	skipc
 11803  0562  2E01               	goto	l8201
 11804                           
 11805                           ;OverLoad_B1.c: 134: {
 11806                           ;OverLoad_B1.c: 135: if(Load->SafeCount < 6)
 11807  0563  086F               	movf	_Load,w
 11808  0564  3E42               	addlw	66
 11809  0565  0086               	movwf	6
 11810  0566  3002               	movlw	2	; select bank4/5
 11811  0567  0087               	movwf	7
 11812  0568  3006               	movlw	6
 11813  0569  0201               	subwf	1,w
 11814  056A  1803               	skipnc
 11815  056B  2D75               	goto	l8177
 11816                           
 11817                           ;OverLoad_B1.c: 136: {
 11818                           ;OverLoad_B1.c: 137: Load->SafeCount++;
 11819  056C  3001               	movlw	1
 11820  056D  00AF               	movwf	??_setLoad_Main
 11821  056E  086F               	movf	_Load,w
 11822  056F  3E42               	addlw	66
 11823  0570  0086               	movwf	6
 11824  0571  3002               	movlw	2	; select bank4/5
 11825  0572  0087               	movwf	7
 11826  0573  082F               	movf	??_setLoad_Main,w
 11827  0574  0781               	addwf	1,f
 11828  0575                     l8177:	
 11829                           
 11830                           ;OverLoad_B1.c: 138: }
 11831                           ;OverLoad_B1.c: 139: if(Load->SafeCount > 6-5)
 11832  0575  086F               	movf	_Load,w
 11833  0576  3E42               	addlw	66
 11834  0577  0086               	movwf	6
 11835  0578  3002               	movlw	2	; select bank4/5
 11836  0579  0087               	movwf	7
 11837  057A  3002               	movlw	2
 11838  057B  0201               	subwf	1,w
 11839  057C  1C03               	skipc
 11840  057D  2DC8               	goto	l8193
 11841                           
 11842                           ;OverLoad_B1.c: 140: {
 11843                           ;OverLoad_B1.c: 141: if(Load->StatusOn)
 11844  057E  086F               	movf	_Load,w
 11845  057F  3E46               	addlw	70
 11846  0580  0086               	movwf	6
 11847  0581  3002               	movlw	2	; select bank4/5
 11848  0582  0087               	movwf	7
 11849  0583  1C01               	btfss	1,0
 11850  0584  2DB6               	goto	l8187
 11851                           
 11852                           ;OverLoad_B1.c: 142: {
 11853                           ;OverLoad_B1.c: 143: Load->StatusOn=0;
 11854  0585  086F               	movf	_Load,w
 11855  0586  3E46               	addlw	70
 11856  0587  0086               	movwf	6
 11857  0588  3002               	movlw	2	; select bank4/5
 11858  0589  0087               	movwf	7
 11859  058A  1001               	bcf	1,0
 11860                           
 11861                           ;OverLoad_B1.c: 144: Load->TotalLoad=Load->AD;
 11862  058B  086F               	movf	_Load,w
 11863  058C  3E2C               	addlw	44
 11864  058D  0086               	movwf	6
 11865  058E  3002               	movlw	2	; select bank4/5
 11866  058F  0087               	movwf	7
 11867  0590  086F               	movf	_Load,w
 11868  0591  3E06               	addlw	6
 11869  0592  0084               	movwf	4
 11870  0593  3002               	movlw	2	; select bank4/5
 11871  0594  0085               	movwf	5
 11872  0595  3F40               	moviw [0]fsr1
 11873  0596  3F80               	movwi [0]fsr0
 11874  0597  3F41               	moviw [1]fsr1
 11875  0598  3F81               	movwi [1]fsr0
 11876                           
 11877                           ;OverLoad_B1.c: 145: Load->JudgeValue=0xffff*Load->LightsCount;
 11878  0599  086F               	movf	_Load,w
 11879  059A  3E3E               	addlw	62
 11880  059B  0086               	movwf	6
 11881  059C  3002               	movlw	2	; select bank4/5
 11882  059D  0087               	movwf	7
 11883  059E  0801               	movf	1,w
 11884  059F  00AF               	movwf	??_setLoad_Main
 11885  05A0  01B0               	clrf	??_setLoad_Main+1
 11886  05A1  082F               	movf	??_setLoad_Main,w
 11887  05A2  00A0               	movwf	___wmul@multiplier
 11888  05A3  0830               	movf	??_setLoad_Main+1,w
 11889  05A4  00A1               	movwf	___wmul@multiplier+1
 11890  05A5  30FF               	movlw	255
 11891  05A6  00A2               	movwf	___wmul@multiplicand
 11892  05A7  30FF               	movlw	255
 11893  05A8  00A3               	movwf	___wmul@multiplicand+1
 11894  05A9  31A6  2624  3183   	fcall	___wmul
 11895  05AC  0020               	movlb	0	; select bank0
 11896  05AD  086F               	movf	_Load,w
 11897  05AE  3E36               	addlw	54
 11898  05AF  0086               	movwf	6
 11899  05B0  3002               	movlw	2	; select bank4/5
 11900  05B1  0087               	movwf	7
 11901  05B2  0820               	movf	?___wmul,w
 11902  05B3  3FC0               	movwi [0]fsr1
 11903  05B4  0821               	movf	?___wmul+1,w
 11904  05B5  3FC1               	movwi [1]fsr1
 11905  05B6                     l8187:	
 11906                           
 11907                           ;OverLoad_B1.c: 146: }
 11908                           ;OverLoad_B1.c: 147: Load->Safe=1;
 11909  05B6  086F               	movf	_Load,w
 11910  05B7  0086               	movwf	6
 11911  05B8  3002               	movlw	2	; select bank4/5
 11912  05B9  0087               	movwf	7
 11913  05BA  1581               	bsf	1,3
 11914                           
 11915                           ;OverLoad_B1.c: 149: setDimmerLights_Clear(1,1);
 11916  05BB  01A2               	clrf	setDimmerLights_Clear@command
 11917  05BC  0AA2               	incf	setDimmerLights_Clear@command,f
 11918  05BD  3001               	movlw	1
 11919  05BE  31A4  2423  3183   	fcall	_setDimmerLights_Clear
 11920                           
 11921                           ;OverLoad_B1.c: 153: setDimmerLights_Clear(2,1);
 11922  05C1  0020               	movlb	0	; select bank0
 11923  05C2  01A2               	clrf	setDimmerLights_Clear@command
 11924  05C3  0AA2               	incf	setDimmerLights_Clear@command,f
 11925  05C4  3002               	movlw	2
 11926  05C5  31A4  2423  3183   	fcall	_setDimmerLights_Clear
 11927  05C8                     l8193:	
 11928                           
 11929                           ;OverLoad_B1.c: 159: }
 11930                           ;OverLoad_B1.c: 160: if(Load->StatusOff)
 11931  05C8  0020               	movlb	0	; select bank0
 11932  05C9  086F               	movf	_Load,w
 11933  05CA  3E46               	addlw	70
 11934  05CB  0086               	movwf	6
 11935  05CC  3002               	movlw	2	; select bank4/5
 11936  05CD  0087               	movwf	7
 11937  05CE  1C81               	btfss	1,1
 11938  05CF  2E01               	goto	l8201
 11939                           
 11940                           ;OverLoad_B1.c: 161: {
 11941                           ;OverLoad_B1.c: 162: Load->StatusOff=0;
 11942  05D0  086F               	movf	_Load,w
 11943  05D1  3E46               	addlw	70
 11944  05D2  0086               	movwf	6
 11945  05D3  3002               	movlw	2	; select bank4/5
 11946  05D4  0087               	movwf	7
 11947  05D5  1081               	bcf	1,1
 11948                           
 11949                           ;OverLoad_B1.c: 163: Load->TotalLoad=Load->AD;
 11950  05D6  086F               	movf	_Load,w
 11951  05D7  3E2C               	addlw	44
 11952  05D8  0086               	movwf	6
 11953  05D9  3002               	movlw	2	; select bank4/5
 11954  05DA  0087               	movwf	7
 11955  05DB  086F               	movf	_Load,w
 11956  05DC  3E06               	addlw	6
 11957  05DD  0084               	movwf	4
 11958  05DE  3002               	movlw	2	; select bank4/5
 11959  05DF  0085               	movwf	5
 11960  05E0  3F40               	moviw [0]fsr1
 11961  05E1  3F80               	movwi [0]fsr0
 11962  05E2  3F41               	moviw [1]fsr1
 11963  05E3  3F81               	movwi [1]fsr0
 11964                           
 11965                           ;OverLoad_B1.c: 164: Load->JudgeValue=0xffff*Load->LightsCount;
 11966  05E4  086F               	movf	_Load,w
 11967  05E5  3E3E               	addlw	62
 11968  05E6  0086               	movwf	6
 11969  05E7  3002               	movlw	2	; select bank4/5
 11970  05E8  0087               	movwf	7
 11971  05E9  0801               	movf	1,w
 11972  05EA  00AF               	movwf	??_setLoad_Main
 11973  05EB  01B0               	clrf	??_setLoad_Main+1
 11974  05EC  082F               	movf	??_setLoad_Main,w
 11975  05ED  00A0               	movwf	___wmul@multiplier
 11976  05EE  0830               	movf	??_setLoad_Main+1,w
 11977  05EF  00A1               	movwf	___wmul@multiplier+1
 11978  05F0  30FF               	movlw	255
 11979  05F1  00A2               	movwf	___wmul@multiplicand
 11980  05F2  30FF               	movlw	255
 11981  05F3  00A3               	movwf	___wmul@multiplicand+1
 11982  05F4  31A6  2624  3183   	fcall	___wmul
 11983  05F7  0020               	movlb	0	; select bank0
 11984  05F8  086F               	movf	_Load,w
 11985  05F9  3E36               	addlw	54
 11986  05FA  0086               	movwf	6
 11987  05FB  3002               	movlw	2	; select bank4/5
 11988  05FC  0087               	movwf	7
 11989  05FD  0820               	movf	?___wmul,w
 11990  05FE  3FC0               	movwi [0]fsr1
 11991  05FF  0821               	movf	?___wmul+1,w
 11992  0600  3FC1               	movwi [1]fsr1
 11993  0601                     l8201:	
 11994                           
 11995                           ;OverLoad_B1.c: 165: }
 11996                           ;OverLoad_B1.c: 166: }
 11997                           ;OverLoad_B1.c: 167: }
 11998                           ;OverLoad_B1.c: 168: }
 11999                           ;OverLoad_B1.c: 169: setLoad_AH_AL_Restore(load);
 12000  0601  0020               	movlb	0	; select bank0
 12001  0602  0833               	movf	setLoad_Main@load,w
 12002  0603  31A7  2724         	fcall	_setLoad_AH_AL_Restore
 12003                           
 12004                           ;OverLoad_B1.c: 180: }
 12005                           ;OverLoad_B1.c: 181: }
 12006  0605  0008               	return
 12007  0606                     l8203:	
 12008                           
 12009                           ;OverLoad_B1.c: 182: else
 12010                           ;OverLoad_B1.c: 183: {
 12011                           ;OverLoad_B1.c: 184: if(Load->GO)
 12012  0606  0020               	movlb	0	; select bank0
 12013  0607  086F               	movf	_Load,w
 12014  0608  0086               	movwf	6
 12015  0609  3002               	movlw	2	; select bank4/5
 12016  060A  0087               	movwf	7
 12017  060B  1C81               	btfss	1,1
 12018  060C  2E32               	goto	l8215
 12019                           
 12020                           ;OverLoad_B1.c: 185: {
 12021                           ;OverLoad_B1.c: 186: if(Load->LightsON == 0)
 12022  060D  086F               	movf	_Load,w
 12023  060E  0086               	movwf	6
 12024  060F  3002               	movlw	2	; select bank4/5
 12025  0610  0087               	movwf	7
 12026  0611  1901               	btfsc	1,2
 12027  0612  2E1D               	goto	l8209
 12028                           
 12029                           ;OverLoad_B1.c: 187: {
 12030                           ;OverLoad_B1.c: 188: Load->LightsON=1;
 12031  0613  086F               	movf	_Load,w
 12032  0614  0086               	movwf	6
 12033  0615  3002               	movlw	2	; select bank4/5
 12034  0616  0087               	movwf	7
 12035  0617  1501               	bsf	1,2
 12036                           
 12037                           ;OverLoad_B1.c: 189: Load->Safe=0;
 12038  0618  086F               	movf	_Load,w
 12039  0619  0086               	movwf	6
 12040  061A  3002               	movlw	2	; select bank4/5
 12041  061B  0087               	movwf	7
 12042  061C  1181               	bcf	1,3
 12043  061D                     l8209:	
 12044                           
 12045                           ;OverLoad_B1.c: 190: }
 12046                           ;OverLoad_B1.c: 191: if(getTemp_Safe(1) && getPF_Safe(1))
 12047  061D  3001               	movlw	1
 12048  061E  31A2  22B5  3183   	fcall	_getTemp_Safe
 12049  0621  3A00               	xorlw	0
 12050  0622  1903               	skipnz
 12051  0623  0008               	return
 12052  0624  3001               	movlw	1
 12053  0625  3198  2066  3183   	fcall	_getPF_Safe
 12054  0628  3A00               	xorlw	0
 12055  0629  1903               	skipnz
 12056  062A  0008               	return
 12057                           
 12058                           ;OverLoad_B1.c: 192: {
 12059                           ;OverLoad_B1.c: 193: Load->ADtoGO=1;
 12060  062B  0020               	movlb	0	; select bank0
 12061  062C  086F               	movf	_Load,w
 12062  062D  0086               	movwf	6
 12063  062E  3002               	movlw	2	; select bank4/5
 12064  062F  0087               	movwf	7
 12065  0630  1601               	bsf	1,4
 12066                           
 12067                           ;OverLoad_B1.c: 194: }
 12068                           ;OverLoad_B1.c: 195: }
 12069  0631  0008               	return
 12070  0632                     l8215:	
 12071                           
 12072                           ;OverLoad_B1.c: 196: else
 12073                           ;OverLoad_B1.c: 197: {
 12074                           ;OverLoad_B1.c: 198: if(Load->LightsON)
 12075  0632  086F               	movf	_Load,w
 12076  0633  0086               	movwf	6
 12077  0634  3002               	movlw	2	; select bank4/5
 12078  0635  0087               	movwf	7
 12079  0636  1D01               	btfss	1,2
 12080  0637  0008               	return
 12081                           
 12082                           ;OverLoad_B1.c: 199: {
 12083                           ;OverLoad_B1.c: 200: Load->LightsON=0;
 12084  0638  086F               	movf	_Load,w
 12085  0639  0086               	movwf	6
 12086  063A  3002               	movlw	2	; select bank4/5
 12087  063B  0087               	movwf	7
 12088  063C  1101               	bcf	1,2
 12089                           
 12090                           ;OverLoad_B1.c: 201: Load->Safe=1;
 12091  063D  086F               	movf	_Load,w
 12092  063E  0086               	movwf	6
 12093  063F  3002               	movlw	2	; select bank4/5
 12094  0640  0087               	movwf	7
 12095  0641  1581               	bsf	1,3
 12096                           
 12097                           ;OverLoad_B1.c: 202: Load->ErrorCount=0;
 12098  0642  086F               	movf	_Load,w
 12099  0643  3E3C               	addlw	60
 12100  0644  0086               	movwf	6
 12101  0645  3002               	movlw	2	; select bank4/5
 12102  0646  0087               	movwf	7
 12103  0647  0181               	clrf	1
 12104                           
 12105                           ;OverLoad_B1.c: 203: Load->Count=0;
 12106  0648  086F               	movf	_Load,w
 12107  0649  3E3A               	addlw	58
 12108  064A  0086               	movwf	6
 12109  064B  3002               	movlw	2	; select bank4/5
 12110  064C  0087               	movwf	7
 12111  064D  0181               	clrf	1
 12112                           
 12113                           ;OverLoad_B1.c: 204: Load->TotalLoad=0;
 12114  064E  086F               	movf	_Load,w
 12115  064F  3E06               	addlw	6
 12116  0650  0086               	movwf	6
 12117  0651  3002               	movlw	2	; select bank4/5
 12118  0652  0087               	movwf	7
 12119  0653  3000               	movlw	0
 12120  0654  3FC0               	movwi [0]fsr1
 12121  0655  3FC1               	movwi [1]fsr1
 12122                           
 12123                           ;OverLoad_B1.c: 205: Load->NumberCount=0;
 12124  0656  086F               	movf	_Load,w
 12125  0657  3E3F               	addlw	63
 12126  0658  0086               	movwf	6
 12127  0659  3002               	movlw	2	; select bank4/5
 12128  065A  0087               	movwf	7
 12129  065B  0181               	clrf	1
 12130                           
 12131                           ;OverLoad_B1.c: 206: Load->StatusOn=0;
 12132  065C  086F               	movf	_Load,w
 12133  065D  3E46               	addlw	70
 12134  065E  0086               	movwf	6
 12135  065F  3002               	movlw	2	; select bank4/5
 12136  0660  0087               	movwf	7
 12137  0661  1001               	bcf	1,0
 12138                           
 12139                           ;OverLoad_B1.c: 207: Load->StatusOff=0;
 12140  0662  086F               	movf	_Load,w
 12141  0663  3E46               	addlw	70
 12142  0664  0086               	movwf	6
 12143  0665  3002               	movlw	2	; select bank4/5
 12144  0666  0087               	movwf	7
 12145  0667  1081               	bcf	1,1
 12146                           
 12147                           ;OverLoad_B1.c: 208: setLoad_AH_AL_Restore(1);
 12148  0668  3001               	movlw	1
 12149  0669  31A7  2724  3183   	fcall	_setLoad_AH_AL_Restore
 12150                           
 12151                           ;OverLoad_B1.c: 211: setDimmerLights_Clear(1,1);
 12152  066C  0020               	movlb	0	; select bank0
 12153  066D  01A2               	clrf	setDimmerLights_Clear@command
 12154  066E  0AA2               	incf	setDimmerLights_Clear@command,f
 12155  066F  3001               	movlw	1
 12156  0670  31A4  2423  3183   	fcall	_setDimmerLights_Clear
 12157                           
 12158                           ;OverLoad_B1.c: 215: setDimmerLights_Clear(2,1);
 12159  0673  0020               	movlb	0	; select bank0
 12160  0674  01A2               	clrf	setDimmerLights_Clear@command
 12161  0675  0AA2               	incf	setDimmerLights_Clear@command,f
 12162  0676  3002               	movlw	2
 12163  0677  31A4  2423         	fcall	_setDimmerLights_Clear
 12164  0679  0008               	return
 12165  067A                     __end_of_setLoad_Main:	
 12166                           
 12167                           	psect	text59
 12168  129E                     __ptext59:	
 12169 ;; *************** function _setLoad_ERROR *****************
 12170 ;; Defined at:
 12171 ;;		line 241 in file "G:\Program\PIC\Source_File\OverLoad_B1.c"
 12172 ;; Parameters:    Size  Location     Type
 12173 ;;  load            1    wreg     unsigned char 
 12174 ;;  command         1   12[BANK0 ] unsigned char 
 12175 ;; Auto vars:     Size  Location     Type
 12176 ;;  load            1   14[BANK0 ] unsigned char 
 12177 ;; Return value:  Size  Location     Type
 12178 ;;		None               void
 12179 ;; Registers used:
 12180 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12181 ;; Tracked objects:
 12182 ;;		On entry : 0/0
 12183 ;;		On exit  : 0/0
 12184 ;;		Unchanged: 0/0
 12185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12186 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12187 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12188 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12189 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12190 ;;Total ram usage:        3 bytes
 12191 ;; Hardware stack levels used:    1
 12192 ;; Hardware stack levels required when called:    8
 12193 ;; This function calls:
 12194 ;;		_DimmerLights_ERROR
 12195 ;;		_LoadPointSelect
 12196 ;;		_setDimmer_LoadERROR
 12197 ;;		_setLED
 12198 ;;		_setRF_Enable
 12199 ;;		_setSw_Enable
 12200 ;; This function is called by:
 12201 ;;		_setLoad_Main
 12202 ;; This function uses a non-reentrant model
 12203 ;;
 12204                           
 12205                           
 12206                           ;psect for function _setLoad_ERROR
 12207  129E                     _setLoad_ERROR:	
 12208                           
 12209                           ;incstack = 0
 12210                           ; Regs used in _setLoad_ERROR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12211                           ;setLoad_ERROR@load stored from wreg
 12212  129E  0020               	movlb	0	; select bank0
 12213  129F  00AE               	movwf	setLoad_ERROR@load
 12214                           
 12215                           ;OverLoad_B1.c: 243: LoadPointSelect(load);
 12216  12A0  082E               	movf	setLoad_ERROR@load,w
 12217  12A1  31A2  2234  3192   	fcall	_LoadPointSelect
 12218                           
 12219                           ;OverLoad_B1.c: 244: if(command)
 12220  12A4  0020               	movlb	0	; select bank0
 12221  12A5  082C               	movf	setLoad_ERROR@command,w
 12222  12A6  1903               	btfsc	3,2
 12223  12A7  2ADE               	goto	l7567
 12224                           
 12225                           ;OverLoad_B1.c: 245: {
 12226                           ;OverLoad_B1.c: 246: setDimmer_LoadERROR(1,1);
 12227  12A8  01A2               	clrf	setDimmer_LoadERROR@command
 12228  12A9  0AA2               	incf	setDimmer_LoadERROR@command,f
 12229  12AA  3001               	movlw	1
 12230  12AB  31A3  234A  3192   	fcall	_setDimmer_LoadERROR
 12231                           
 12232                           ;OverLoad_B1.c: 247: Load->ERROR=1;
 12233  12AE  0020               	movlb	0	; select bank0
 12234  12AF  086F               	movf	_Load,w
 12235  12B0  0086               	movwf	6
 12236  12B1  3002               	movlw	2	; select bank4/5
 12237  12B2  0087               	movwf	7
 12238  12B3  1681               	bsf	1,5
 12239                           
 12240                           ;OverLoad_B1.c: 248: Load->ErrorStatus=1;
 12241  12B4  086F               	movf	_Load,w
 12242  12B5  3E05               	addlw	5
 12243  12B6  0086               	movwf	6
 12244  12B7  3002               	movlw	2	; select bank4/5
 12245  12B8  0087               	movwf	7
 12246  12B9  0181               	clrf	1
 12247  12BA  0A81               	incf	1,f
 12248                           
 12249                           ;OverLoad_B1.c: 249: Load->Safe=0;
 12250  12BB  086F               	movf	_Load,w
 12251  12BC  0086               	movwf	6
 12252  12BD  3002               	movlw	2	; select bank4/5
 12253  12BE  0087               	movwf	7
 12254  12BF  1181               	bcf	1,3
 12255                           
 12256                           ;OverLoad_B1.c: 250: DimmerLights_ERROR();
 12257  12C0  3191  21B6  3192   	fcall	_DimmerLights_ERROR
 12258                           
 12259                           ;OverLoad_B1.c: 251: setLED(99,11);
 12260  12C3  300B               	movlw	11
 12261  12C4  0020               	movlb	0	; select bank0
 12262  12C5  00AD               	movwf	??_setLoad_ERROR
 12263  12C6  082D               	movf	??_setLoad_ERROR,w
 12264  12C7  00A2               	movwf	setLED@command
 12265  12C8  3063               	movlw	99
 12266  12C9  319E  2679  3192   	fcall	_setLED
 12267                           
 12268                           ;OverLoad_B1.c: 254: setSw_Enable(1,0);
 12269  12CC  0020               	movlb	0	; select bank0
 12270  12CD  01A2               	clrf	setSw_Enable@command
 12271  12CE  3001               	movlw	1
 12272  12CF  31A3  2359  3192   	fcall	_setSw_Enable
 12273                           
 12274                           ;OverLoad_B1.c: 258: setSw_Enable(2,0);
 12275  12D2  0020               	movlb	0	; select bank0
 12276  12D3  01A2               	clrf	setSw_Enable@command
 12277  12D4  3002               	movlw	2
 12278  12D5  31A3  2359  3192   	fcall	_setSw_Enable
 12279                           
 12280                           ;OverLoad_B1.c: 266: setRF_Enable(1,0);
 12281  12D8  0020               	movlb	0	; select bank0
 12282  12D9  01A5               	clrf	setRF_Enable@command
 12283  12DA  3001               	movlw	1
 12284  12DB  31A7  27DA         	fcall	_setRF_Enable
 12285                           
 12286                           ;OverLoad_B1.c: 268: }
 12287  12DD  0008               	return
 12288  12DE                     l7567:	
 12289                           
 12290                           ;OverLoad_B1.c: 269: else if(command == 0)
 12291  12DE  0020               	movlb	0	; select bank0
 12292  12DF  08AC               	movf	setLoad_ERROR@command,f
 12293  12E0  1D03               	skipz
 12294  12E1  0008               	return
 12295                           
 12296                           ;OverLoad_B1.c: 270: {
 12297                           ;OverLoad_B1.c: 271: setDimmer_LoadERROR(1,0);
 12298  12E2  01A2               	clrf	setDimmer_LoadERROR@command
 12299  12E3  3001               	movlw	1
 12300  12E4  31A3  234A  3192   	fcall	_setDimmer_LoadERROR
 12301                           
 12302                           ;OverLoad_B1.c: 272: Load->ERROR=0;
 12303  12E7  0020               	movlb	0	; select bank0
 12304  12E8  086F               	movf	_Load,w
 12305  12E9  0086               	movwf	6
 12306  12EA  3002               	movlw	2	; select bank4/5
 12307  12EB  0087               	movwf	7
 12308  12EC  1281               	bcf	1,5
 12309                           
 12310                           ;OverLoad_B1.c: 273: Load->ErrorStatus=0;
 12311  12ED  086F               	movf	_Load,w
 12312  12EE  3E05               	addlw	5
 12313  12EF  0086               	movwf	6
 12314  12F0  3002               	movlw	2	; select bank4/5
 12315  12F1  0087               	movwf	7
 12316  12F2  0181               	clrf	1
 12317                           
 12318                           ;OverLoad_B1.c: 274: Load->Safe=1;
 12319  12F3  086F               	movf	_Load,w
 12320  12F4  0086               	movwf	6
 12321  12F5  3002               	movlw	2	; select bank4/5
 12322  12F6  0087               	movwf	7
 12323  12F7  1581               	bsf	1,3
 12324                           
 12325                           ;OverLoad_B1.c: 275: setLED(99,10);
 12326  12F8  300A               	movlw	10
 12327  12F9  00AD               	movwf	??_setLoad_ERROR
 12328  12FA  082D               	movf	??_setLoad_ERROR,w
 12329  12FB  00A2               	movwf	setLED@command
 12330  12FC  3063               	movlw	99
 12331  12FD  319E  2679  3192   	fcall	_setLED
 12332                           
 12333                           ;OverLoad_B1.c: 278: setSw_Enable(1,1);
 12334  1300  0020               	movlb	0	; select bank0
 12335  1301  01A2               	clrf	setSw_Enable@command
 12336  1302  0AA2               	incf	setSw_Enable@command,f
 12337  1303  3001               	movlw	1
 12338  1304  31A3  2359  3192   	fcall	_setSw_Enable
 12339                           
 12340                           ;OverLoad_B1.c: 282: setSw_Enable(2,1);
 12341  1307  0020               	movlb	0	; select bank0
 12342  1308  01A2               	clrf	setSw_Enable@command
 12343  1309  0AA2               	incf	setSw_Enable@command,f
 12344  130A  3002               	movlw	2
 12345  130B  31A3  2359  3192   	fcall	_setSw_Enable
 12346                           
 12347                           ;OverLoad_B1.c: 290: setRF_Enable(1,1);
 12348  130E  0020               	movlb	0	; select bank0
 12349  130F  01A5               	clrf	setRF_Enable@command
 12350  1310  0AA5               	incf	setRF_Enable@command,f
 12351  1311  3001               	movlw	1
 12352  1312  31A7  27DA         	fcall	_setRF_Enable
 12353  1314  0008               	return
 12354  1315                     __end_of_setLoad_ERROR:	
 12355                           
 12356                           	psect	text60
 12357  2359                     __ptext60:	
 12358 ;; *************** function _setSw_Enable *****************
 12359 ;; Defined at:
 12360 ;;		line 86 in file "G:\Program\PIC\Source_File\Switch_B1.c"
 12361 ;; Parameters:    Size  Location     Type
 12362 ;;  sw              1    wreg     unsigned char 
 12363 ;;  command         1    2[BANK0 ] unsigned char 
 12364 ;; Auto vars:     Size  Location     Type
 12365 ;;  sw              1    3[BANK0 ] unsigned char 
 12366 ;; Return value:  Size  Location     Type
 12367 ;;		None               void
 12368 ;; Registers used:
 12369 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12370 ;; Tracked objects:
 12371 ;;		On entry : 0/0
 12372 ;;		On exit  : 0/0
 12373 ;;		Unchanged: 0/0
 12374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12375 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12376 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12378 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12379 ;;Total ram usage:        2 bytes
 12380 ;; Hardware stack levels used:    1
 12381 ;; Hardware stack levels required when called:    5
 12382 ;; This function calls:
 12383 ;;		_SwPointSelect
 12384 ;; This function is called by:
 12385 ;;		_MainT
 12386 ;;		_setLoad_ERROR
 12387 ;;		_setOverTemp_ERROR
 12388 ;;		_setPowerFault_ERROR
 12389 ;; This function uses a non-reentrant model
 12390 ;;
 12391                           
 12392                           
 12393                           ;psect for function _setSw_Enable
 12394  2359                     _setSw_Enable:	
 12395                           
 12396                           ;incstack = 0
 12397                           ; Regs used in _setSw_Enable: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12398                           ;setSw_Enable@sw stored from wreg
 12399  2359  0020               	movlb	0	; select bank0
 12400  235A  00A3               	movwf	setSw_Enable@sw
 12401                           
 12402                           ;Switch_B1.c: 88: SwPointSelect(sw);
 12403  235B  0823               	movf	setSw_Enable@sw,w
 12404  235C  31A4  24AA         	fcall	_SwPointSelect
 12405                           
 12406                           ;Switch_B1.c: 89: Sw->Enable=command;
 12407  235E  0020               	movlb	0	; select bank0
 12408  235F  086E               	movf	_Sw,w
 12409  2360  0086               	movwf	6
 12410  2361  3001               	movlw	1	; select bank2/3
 12411  2362  0087               	movwf	7
 12412  2363  0822               	movf	setSw_Enable@command,w
 12413  2364  1001               	bcf	1,0
 12414  2365  1D03               	skipz
 12415  2366  1401               	bsf	1,0
 12416  2367  0008               	return
 12417  2368                     __end_of_setSw_Enable:	
 12418                           
 12419                           	psect	text61
 12420  27DA                     __ptext61:	
 12421 ;; *************** function _setRF_Enable *****************
 12422 ;; Defined at:
 12423 ;;		line 173 in file "G:\Program\PIC\Source_File\RF_Control_B1.c"
 12424 ;; Parameters:    Size  Location     Type
 12425 ;;  rf              1    wreg     unsigned char 
 12426 ;;  command         1    5[BANK0 ] unsigned char 
 12427 ;; Auto vars:     Size  Location     Type
 12428 ;;  rf              1    6[BANK0 ] unsigned char 
 12429 ;; Return value:  Size  Location     Type
 12430 ;;		None               void
 12431 ;; Registers used:
 12432 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12433 ;; Tracked objects:
 12434 ;;		On entry : 0/0
 12435 ;;		On exit  : 0/0
 12436 ;;		Unchanged: 0/0
 12437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12438 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12439 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12441 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12442 ;;Total ram usage:        2 bytes
 12443 ;; Hardware stack levels used:    1
 12444 ;; Hardware stack levels required when called:    7
 12445 ;; This function calls:
 12446 ;;		_CC2500_WriteCommand
 12447 ;;		_RF_RxDisable
 12448 ;;		_RfPointSelect
 12449 ;; This function is called by:
 12450 ;;		_MainT
 12451 ;;		_setLoad_ERROR
 12452 ;;		_setOverTemp_ERROR
 12453 ;;		_setPowerFault_ERROR
 12454 ;; This function uses a non-reentrant model
 12455 ;;
 12456                           
 12457                           
 12458                           ;psect for function _setRF_Enable
 12459  27DA                     _setRF_Enable:	
 12460                           
 12461                           ;incstack = 0
 12462                           ; Regs used in _setRF_Enable: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12463                           ;setRF_Enable@rf stored from wreg
 12464  27DA  0020               	movlb	0	; select bank0
 12465  27DB  00A6               	movwf	setRF_Enable@rf
 12466                           
 12467                           ;RF_Control_B1.c: 175: RfPointSelect(rf);
 12468  27DC  0826               	movf	setRF_Enable@rf,w
 12469  27DD  31A2  2279  31A7   	fcall	_RfPointSelect
 12470                           
 12471                           ;RF_Control_B1.c: 176: if(command)
 12472  27E0  0020               	movlb	0	; select bank0
 12473  27E1  0825               	movf	setRF_Enable@command,w
 12474  27E2  1903               	btfsc	3,2
 12475  27E3  2FEA               	goto	l7253
 12476                           
 12477                           ;RF_Control_B1.c: 177: {
 12478                           ;RF_Control_B1.c: 178: RF->Enable=1;
 12479  27E4  0021               	movlb	1	; select bank1
 12480  27E5  083E               	movf	_RF^(0+128),w
 12481  27E6  0086               	movwf	6
 12482  27E7  0187               	clrf	7
 12483  27E8  1401               	bsf	1,0
 12484                           
 12485                           ;RF_Control_B1.c: 179: }
 12486  27E9  0008               	return
 12487  27EA                     l7253:	
 12488                           
 12489                           ;RF_Control_B1.c: 180: else
 12490                           ;RF_Control_B1.c: 181: {
 12491                           ;RF_Control_B1.c: 182: RF->Enable=0;
 12492  27EA  0021               	movlb	1	; select bank1
 12493  27EB  083E               	movf	_RF^(0+128),w
 12494  27EC  0086               	movwf	6
 12495  27ED  0187               	clrf	7
 12496  27EE  1001               	bcf	1,0
 12497                           
 12498                           ;RF_Control_B1.c: 183: RF->Learn=0;
 12499  27EF  083E               	movf	_RF^(0+128),w
 12500  27F0  0086               	movwf	6
 12501  27F1  0187               	clrf	7
 12502  27F2  1301               	bcf	1,6
 12503                           
 12504                           ;RF_Control_B1.c: 184: Transceive_GO=0;
 12505  27F3  127A               	bcf	_Transceive_GO/(0+8),_Transceive_GO& (0+7)
 12506                           
 12507                           ;RF_Control_B1.c: 185: CC2500_WriteCommand(0x36);
 12508  27F4  3036               	movlw	54
 12509  27F5  31A3  23C3  31A7   	fcall	_CC2500_WriteCommand
 12510                           
 12511                           ;RF_Control_B1.c: 186: CC2500_WriteCommand(0x3B);
 12512  27F8  303B               	movlw	59
 12513  27F9  31A3  23C3  31A7   	fcall	_CC2500_WriteCommand
 12514                           
 12515                           ;RF_Control_B1.c: 187: RF_RxDisable(1);
 12516  27FC  3001               	movlw	1
 12517  27FD  3198  20EF         	fcall	_RF_RxDisable
 12518  27FF  0008               	return
 12519  2800                     __end_of_setRF_Enable:	
 12520                           
 12521                           	psect	text62
 12522  18EF                     __ptext62:	
 12523 ;; *************** function _RF_RxDisable *****************
 12524 ;; Defined at:
 12525 ;;		line 191 in file "G:\Program\PIC\Source_File\RF_Control_B1.c"
 12526 ;; Parameters:    Size  Location     Type
 12527 ;;  rf              1    wreg     unsigned char 
 12528 ;; Auto vars:     Size  Location     Type
 12529 ;;  rf              1    4[BANK0 ] unsigned char 
 12530 ;; Return value:  Size  Location     Type
 12531 ;;		None               void
 12532 ;; Registers used:
 12533 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12534 ;; Tracked objects:
 12535 ;;		On entry : 0/0
 12536 ;;		On exit  : 0/0
 12537 ;;		Unchanged: 0/0
 12538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12539 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12540 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12542 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12543 ;;Total ram usage:        1 bytes
 12544 ;; Hardware stack levels used:    1
 12545 ;; Hardware stack levels required when called:    6
 12546 ;; This function calls:
 12547 ;;		_CC2500_WriteCommand
 12548 ;;		_RfPointSelect
 12549 ;;		_setINT_GO
 12550 ;; This function is called by:
 12551 ;;		_setRF_Main
 12552 ;;		_setRF_Enable
 12553 ;; This function uses a non-reentrant model
 12554 ;;
 12555                           
 12556                           
 12557                           ;psect for function _RF_RxDisable
 12558  18EF                     _RF_RxDisable:	
 12559                           
 12560                           ;incstack = 0
 12561                           ; Regs used in _RF_RxDisable: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12562                           ;RF_RxDisable@rf stored from wreg
 12563  18EF  0020               	movlb	0	; select bank0
 12564  18F0  00A4               	movwf	RF_RxDisable@rf
 12565                           
 12566                           ;RF_Control_B1.c: 193: RfPointSelect(rf);
 12567  18F1  0824               	movf	RF_RxDisable@rf,w
 12568  18F2  31A2  2279  3198   	fcall	_RfPointSelect
 12569                           
 12570                           ;RF_Control_B1.c: 194: if(RF->RxStatus || RF->ReceiveGO)
 12571  18F5  0021               	movlb	1	; select bank1
 12572  18F6  083E               	movf	_RF^(0+128),w
 12573  18F7  0086               	movwf	6
 12574  18F8  0187               	clrf	7
 12575  18F9  1981               	btfsc	1,3
 12576  18FA  2900               	goto	l7119
 12577  18FB  083E               	movf	_RF^(0+128),w
 12578  18FC  0086               	movwf	6
 12579  18FD  0187               	clrf	7
 12580  18FE  1C81               	btfss	1,1
 12581  18FF  0008               	return
 12582  1900                     l7119:	
 12583                           
 12584                           ;RF_Control_B1.c: 195: {
 12585                           ;RF_Control_B1.c: 196: RF->RxStatus=0;
 12586  1900  083E               	movf	_RF^(0+128),w
 12587  1901  0086               	movwf	6
 12588  1902  0187               	clrf	7
 12589  1903  1181               	bcf	1,3
 12590                           
 12591                           ;RF_Control_B1.c: 197: RF->ReceiveGO=0;
 12592  1904  083E               	movf	_RF^(0+128),w
 12593  1905  0086               	movwf	6
 12594  1906  0187               	clrf	7
 12595  1907  1081               	bcf	1,1
 12596                           
 12597                           ;RF_Control_B1.c: 198: RF->DebounceTime=0;
 12598  1908  0A3E               	incf	_RF^(0+128),w
 12599  1909  0086               	movwf	6
 12600  190A  0187               	clrf	7
 12601  190B  0181               	clrf	1
 12602                           
 12603                           ;RF_Control_B1.c: 199: RF->Debounce=0;
 12604  190C  083E               	movf	_RF^(0+128),w
 12605  190D  0086               	movwf	6
 12606  190E  0187               	clrf	7
 12607  190F  1281               	bcf	1,5
 12608                           
 12609                           ;RF_Control_B1.c: 200: CC2500_WriteCommand(0x36);
 12610  1910  3036               	movlw	54
 12611  1911  31A3  23C3  3198   	fcall	_CC2500_WriteCommand
 12612                           
 12613                           ;RF_Control_B1.c: 201: CC2500_WriteCommand(0x3A);
 12614  1914  303A               	movlw	58
 12615  1915  31A3  23C3  3198   	fcall	_CC2500_WriteCommand
 12616                           
 12617                           ;RF_Control_B1.c: 202: setINT_GO(0);
 12618  1918  3000               	movlw	0
 12619  1919  3188  2000         	fcall	_setINT_GO
 12620  191B  0008               	return
 12621  191C                     __end_of_RF_RxDisable:	
 12622                           
 12623                           	psect	text63
 12624  0800                     __ptext63:	
 12625 ;; *************** function _setINT_GO *****************
 12626 ;; Defined at:
 12627 ;;		line 235 in file "G:\Program\PIC\Source_File\MCU_16f1518_B1.c"
 12628 ;; Parameters:    Size  Location     Type
 12629 ;;  command         1    wreg     unsigned char 
 12630 ;; Auto vars:     Size  Location     Type
 12631 ;;  command         1    0[BANK0 ] unsigned char 
 12632 ;; Return value:  Size  Location     Type
 12633 ;;		None               void
 12634 ;; Registers used:
 12635 ;;		wreg
 12636 ;; Tracked objects:
 12637 ;;		On entry : 0/0
 12638 ;;		On exit  : 0/0
 12639 ;;		Unchanged: 0/0
 12640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12642 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12644 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12645 ;;Total ram usage:        1 bytes
 12646 ;; Hardware stack levels used:    1
 12647 ;; Hardware stack levels required when called:    4
 12648 ;; This function calls:
 12649 ;;		Nothing
 12650 ;; This function is called by:
 12651 ;;		_setRF_Main
 12652 ;;		_RF_RxDisable
 12653 ;; This function uses a non-reentrant model
 12654 ;;
 12655                           
 12656                           
 12657                           ;psect for function _setINT_GO
 12658  0800                     _setINT_GO:	
 12659                           
 12660                           ;incstack = 0
 12661                           ; Regs used in _setINT_GO: [wreg]
 12662                           ;setINT_GO@command stored from wreg
 12663  0800  0020               	movlb	0	; select bank0
 12664  0801  00A0               	movwf	setINT_GO@command
 12665                           
 12666                           ;MCU_16f1518_B1.c: 237: INTF=0;
 12667  0802  108B               	bcf	11,1	;volatile
 12668                           
 12669                           ;MCU_16f1518_B1.c: 238: INTE=command;
 12670  0803  1C20               	btfss	setINT_GO@command,0
 12671  0804  2807               	goto	u5430
 12672  0805  160B               	bsf	11,4	;volatile
 12673  0806  0008               	return
 12674  0807                     u5430:	
 12675  0807  120B               	bcf	11,4	;volatile
 12676  0808  0008               	return
 12677  0809                     __end_of_setINT_GO:	
 12678                           
 12679                           	psect	text64
 12680  234A                     __ptext64:	
 12681 ;; *************** function _setDimmer_LoadERROR *****************
 12682 ;; Defined at:
 12683 ;;		line 536 in file "G:\Program\PIC\Source_File\Dimmer_B1.c"
 12684 ;; Parameters:    Size  Location     Type
 12685 ;;  dimmer          1    wreg     unsigned char 
 12686 ;;  command         1    2[BANK0 ] unsigned char 
 12687 ;; Auto vars:     Size  Location     Type
 12688 ;;  dimmer          1    3[BANK0 ] unsigned char 
 12689 ;; Return value:  Size  Location     Type
 12690 ;;		None               void
 12691 ;; Registers used:
 12692 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12693 ;; Tracked objects:
 12694 ;;		On entry : 0/0
 12695 ;;		On exit  : 0/0
 12696 ;;		Unchanged: 0/0
 12697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12698 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12699 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12701 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12702 ;;Total ram usage:        2 bytes
 12703 ;; Hardware stack levels used:    1
 12704 ;; Hardware stack levels required when called:    5
 12705 ;; This function calls:
 12706 ;;		_DimmerPointSelect
 12707 ;; This function is called by:
 12708 ;;		_setLoad_ERROR
 12709 ;; This function uses a non-reentrant model
 12710 ;;
 12711                           
 12712                           
 12713                           ;psect for function _setDimmer_LoadERROR
 12714  234A                     _setDimmer_LoadERROR:	
 12715                           
 12716                           ;incstack = 0
 12717                           ; Regs used in _setDimmer_LoadERROR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12718                           ;setDimmer_LoadERROR@dimmer stored from wreg
 12719  234A  0020               	movlb	0	; select bank0
 12720  234B  00A3               	movwf	setDimmer_LoadERROR@dimmer
 12721                           
 12722                           ;Dimmer_B1.c: 538: DimmerPointSelect(dimmer);
 12723  234C  0823               	movf	setDimmer_LoadERROR@dimmer,w
 12724  234D  31A2  2285         	fcall	_DimmerPointSelect
 12725                           
 12726                           ;Dimmer_B1.c: 539: Dimmer->LoadERROR=command;
 12727  234F  0021               	movlb	1	; select bank1
 12728  2350  083A               	movf	_Dimmer^(0+128),w
 12729  2351  0086               	movwf	6
 12730  2352  0187               	clrf	7
 12731  2353  0020               	movlb	0	; select bank0
 12732  2354  0822               	movf	setDimmer_LoadERROR@command,w
 12733  2355  1001               	bcf	1,0
 12734  2356  1D03               	skipz
 12735  2357  1401               	bsf	1,0
 12736  2358  0008               	return
 12737  2359                     __end_of_setDimmer_LoadERROR:	
 12738                           
 12739                           	psect	text65
 12740  11B6                     __ptext65:	
 12741 ;; *************** function _DimmerLights_ERROR *****************
 12742 ;; Defined at:
 12743 ;;		line 255 in file "G:\Program\PIC\Source_File\Dimmer_B1.c"
 12744 ;; Parameters:    Size  Location     Type
 12745 ;;		None
 12746 ;; Auto vars:     Size  Location     Type
 12747 ;;		None
 12748 ;; Return value:  Size  Location     Type
 12749 ;;		None               void
 12750 ;; Registers used:
 12751 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12752 ;; Tracked objects:
 12753 ;;		On entry : 0/0
 12754 ;;		On exit  : 0/0
 12755 ;;		Unchanged: 0/0
 12756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12759 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12760 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12761 ;;Total ram usage:        1 bytes
 12762 ;; Hardware stack levels used:    1
 12763 ;; Hardware stack levels required when called:    7
 12764 ;; This function calls:
 12765 ;;		_getDimmerLights_StatusFlag
 12766 ;;		_getDimmer_LoadERROR
 12767 ;;		_getDimmer_PFERROR
 12768 ;;		_getDimmer_TempERROR
 12769 ;;		_setBuz
 12770 ;;		_setDimmerLights_ERROR
 12771 ;;		_setDimmerLights_TriggerERROR
 12772 ;; This function is called by:
 12773 ;;		_setLoad_ERROR
 12774 ;;		_setOverTemp_ERROR
 12775 ;;		_setPowerFault_ERROR
 12776 ;; This function uses a non-reentrant model
 12777 ;;
 12778                           
 12779                           
 12780                           ;psect for function _DimmerLights_ERROR
 12781  11B6                     _DimmerLights_ERROR:	
 12782                           
 12783                           ;Dimmer_B1.c: 257: if(getDimmer_TempERROR(1))
 12784                           
 12785                           ;incstack = 0
 12786                           ; Regs used in _DimmerLights_ERROR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12787  11B6  3001               	movlw	1
 12788  11B7  3190  2000  3191   	fcall	_getDimmer_TempERROR
 12789  11BA  3A00               	xorlw	0
 12790  11BB  1903               	skipnz
 12791  11BC  29D1               	goto	l7203
 12792                           
 12793                           ;Dimmer_B1.c: 258: {
 12794                           ;Dimmer_B1.c: 259: if(getDimmerLights_StatusFlag())
 12795  11BD  31A6  267F  3191   	fcall	_getDimmerLights_StatusFlag
 12796  11C0  3A00               	xorlw	0
 12797  11C1  1903               	skipnz
 12798  11C2  29F2               	goto	l7209
 12799                           
 12800                           ;Dimmer_B1.c: 260: {
 12801                           ;Dimmer_B1.c: 261: setBuz(1,10,300);
 12802  11C3  300A               	movlw	10
 12803  11C4  0020               	movlb	0	; select bank0
 12804  11C5  00AB               	movwf	??_DimmerLights_ERROR
 12805  11C6  082B               	movf	??_DimmerLights_ERROR,w
 12806  11C7  00A6               	movwf	setBuz@count
 12807  11C8  302C               	movlw	44
 12808  11C9  00A7               	movwf	setBuz@time
 12809  11CA  3001               	movlw	1
 12810  11CB  00A8               	movwf	setBuz@time+1
 12811  11CC  3001               	movlw	1
 12812  11CD  3195  25AB  3191   	fcall	_setBuz
 12813  11D0  29F2               	goto	l7209
 12814  11D1                     l7203:	
 12815                           ;Dimmer_B1.c: 273: }
 12816                           
 12817                           ;Dimmer_B1.c: 268: setDimmerLights_ERROR(2);
 12818                           
 12819                           ;Dimmer_B1.c: 262: }
 12820                           ;Dimmer_B1.c: 265: setDimmerLights_ERROR(1);
 12821                           
 12822                           
 12823                           ;Dimmer_B1.c: 274: else if(getDimmer_LoadERROR(1))
 12824  11D1  3001               	movlw	1
 12825  11D2  31A2  22C1  3191   	fcall	_getDimmer_LoadERROR
 12826  11D5  3A00               	xorlw	0
 12827  11D6  1903               	skipnz
 12828  11D7  29EB               	goto	l7207
 12829                           
 12830                           ;Dimmer_B1.c: 275: {
 12831                           ;Dimmer_B1.c: 276: setBuz(1,5,300);
 12832  11D8  3005               	movlw	5
 12833  11D9  0020               	movlb	0	; select bank0
 12834  11DA  00AB               	movwf	??_DimmerLights_ERROR
 12835  11DB  082B               	movf	??_DimmerLights_ERROR,w
 12836  11DC  00A6               	movwf	setBuz@count
 12837  11DD  302C               	movlw	44
 12838  11DE  00A7               	movwf	setBuz@time
 12839  11DF  3001               	movlw	1
 12840  11E0  00A8               	movwf	setBuz@time+1
 12841  11E1  3001               	movlw	1
 12842  11E2  3195  25AB  3191   	fcall	_setBuz
 12843                           
 12844                           ;Dimmer_B1.c: 277: setDimmerLights_ERROR(Dimmer->Load);
 12845  11E5  0021               	movlb	1	; select bank1
 12846  11E6  0A3A               	incf	_Dimmer^(0+128),w
 12847  11E7  0086               	movwf	6
 12848  11E8  0187               	clrf	7
 12849  11E9  0801               	movf	1,w
 12850  11EA  29F7               	goto	L9
 12851  11EB                     l7207:	
 12852                           ;Dimmer_B1.c: 278: }
 12853                           
 12854                           
 12855                           ;Dimmer_B1.c: 279: else if(getDimmer_PFERROR(1))
 12856  11EB  3001               	movlw	1
 12857  11EC  31A2  22DA  3191   	fcall	_getDimmer_PFERROR
 12858  11EF  3A00               	xorlw	0
 12859  11F0  1903               	skipnz
 12860  11F1  29FA               	goto	l836
 12861  11F2                     l7209:	
 12862                           
 12863                           ;Dimmer_B1.c: 280: {
 12864                           ;Dimmer_B1.c: 282: setDimmerLights_ERROR(1);
 12865  11F2  3001               	movlw	1
 12866  11F3  319D  25C9  3191   	fcall	_setDimmerLights_ERROR
 12867                           
 12868                           ;Dimmer_B1.c: 285: setDimmerLights_ERROR(2);
 12869  11F6  3002               	movlw	2
 12870  11F7                     L9:	
 12871  11F7  319D  25C9  3191   	fcall	_setDimmerLights_ERROR
 12872  11FA                     l836:	
 12873                           
 12874                           ;Dimmer_B1.c: 290: }
 12875                           ;Dimmer_B1.c: 292: setDimmerLights_TriggerERROR(1,0);
 12876  11FA  0020               	movlb	0	; select bank0
 12877  11FB  01A2               	clrf	setDimmerLights_TriggerERROR@command
 12878  11FC  3001               	movlw	1
 12879  11FD  3198  20C4  3191   	fcall	_setDimmerLights_TriggerERROR
 12880                           
 12881                           ;Dimmer_B1.c: 295: setDimmerLights_TriggerERROR(2,0);
 12882  1200  0020               	movlb	0	; select bank0
 12883  1201  01A2               	clrf	setDimmerLights_TriggerERROR@command
 12884  1202  3002               	movlw	2
 12885  1203  3198  20C4  3191   	fcall	_setDimmerLights_TriggerERROR
 12886                           
 12887                           ;Dimmer_B1.c: 301: if(TMain->SelfTest == 0)
 12888  1206  0021               	movlb	1	; select bank1
 12889  1207  086D               	movf	_TMain^(0+128),w
 12890  1208  3E03               	addlw	3
 12891  1209  0086               	movwf	6
 12892  120A  3001               	movlw	1	; select bank2/3
 12893  120B  0087               	movwf	7
 12894  120C  1801               	btfsc	1,0
 12895  120D  0008               	return
 12896                           
 12897                           ;Dimmer_B1.c: 302: {
 12898                           ;Dimmer_B1.c: 303: TMain->i=0;
 12899  120E  086D               	movf	_TMain^(0+128),w
 12900  120F  3E0E               	addlw	14
 12901  1210  0086               	movwf	6
 12902  1211  3001               	movlw	1	; select bank2/3
 12903  1212  0087               	movwf	7
 12904  1213  1001               	bcf	1,0
 12905                           
 12906                           ;Dimmer_B1.c: 304: TMain->j=0;
 12907  1214  086D               	movf	_TMain^(0+128),w
 12908  1215  3E0E               	addlw	14
 12909  1216  0086               	movwf	6
 12910  1217  3001               	movlw	1	; select bank2/3
 12911  1218  0087               	movwf	7
 12912  1219  1081               	bcf	1,1
 12913                           
 12914                           ;Dimmer_B1.c: 305: TMain->k=1;
 12915  121A  086D               	movf	_TMain^(0+128),w
 12916  121B  3E0E               	addlw	14
 12917  121C  0086               	movwf	6
 12918  121D  3001               	movlw	1	; select bank2/3
 12919  121E  0087               	movwf	7
 12920  121F  1501               	bsf	1,2
 12921                           
 12922                           ;Dimmer_B1.c: 306: TMain->Count2=0;
 12923  1220  086D               	movf	_TMain^(0+128),w
 12924  1221  3E08               	addlw	8
 12925  1222  0086               	movwf	6
 12926  1223  3001               	movlw	1	; select bank2/3
 12927  1224  0087               	movwf	7
 12928  1225  3000               	movlw	0
 12929  1226  3FC0               	movwi [0]fsr1
 12930  1227  3FC1               	movwi [1]fsr1
 12931  1228  0008               	return
 12932  1229                     __end_of_DimmerLights_ERROR:	
 12933                           
 12934                           	psect	text66
 12935  18C4                     __ptext66:	
 12936 ;; *************** function _setDimmerLights_TriggerERROR *****************
 12937 ;; Defined at:
 12938 ;;		line 327 in file "G:\Program\PIC\Source_File\Dimmer_B1.c"
 12939 ;; Parameters:    Size  Location     Type
 12940 ;;  lights          1    wreg     unsigned char 
 12941 ;;  command         1    2[BANK0 ] unsigned char 
 12942 ;; Auto vars:     Size  Location     Type
 12943 ;;  lights          1    3[BANK0 ] unsigned char 
 12944 ;; Return value:  Size  Location     Type
 12945 ;;		None               void
 12946 ;; Registers used:
 12947 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12948 ;; Tracked objects:
 12949 ;;		On entry : 0/0
 12950 ;;		On exit  : 0/0
 12951 ;;		Unchanged: 0/0
 12952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12953 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12954 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12956 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12957 ;;Total ram usage:        2 bytes
 12958 ;; Hardware stack levels used:    1
 12959 ;; Hardware stack levels required when called:    5
 12960 ;; This function calls:
 12961 ;;		_DimmerLightsPointSelect
 12962 ;; This function is called by:
 12963 ;;		_DimmerLights_ERROR
 12964 ;; This function uses a non-reentrant model
 12965 ;;
 12966                           
 12967                           
 12968                           ;psect for function _setDimmerLights_TriggerERROR
 12969  18C4                     _setDimmerLights_TriggerERROR:	
 12970                           
 12971                           ;incstack = 0
 12972                           ; Regs used in _setDimmerLights_TriggerERROR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath
      +                          +cstack]
 12973                           ;setDimmerLights_TriggerERROR@lights stored from wreg
 12974  18C4  0020               	movlb	0	; select bank0
 12975  18C5  00A3               	movwf	setDimmerLights_TriggerERROR@lights
 12976                           
 12977                           ;Dimmer_B1.c: 329: DimmerLightsPointSelect(lights);
 12978  18C6  0823               	movf	setDimmerLights_TriggerERROR@lights,w
 12979  18C7  31A4  2497         	fcall	_DimmerLightsPointSelect
 12980                           
 12981                           ;Dimmer_B1.c: 330: DimmerLights->Trigger=command;
 12982  18C9  0020               	movlb	0	; select bank0
 12983  18CA  086D               	movf	_DimmerLights,w
 12984  18CB  3E09               	addlw	9
 12985  18CC  0086               	movwf	6
 12986  18CD  3001               	movlw	1	; select bank2/3
 12987  18CE  0087               	movwf	7
 12988  18CF  0822               	movf	setDimmerLights_TriggerERROR@command,w
 12989  18D0  1081               	bcf	1,1
 12990  18D1  1D03               	skipz
 12991  18D2  1481               	bsf	1,1
 12992                           
 12993                           ;Dimmer_B1.c: 331: DimmerLights->Switch=command;
 12994  18D3  086D               	movf	_DimmerLights,w
 12995  18D4  3E09               	addlw	9
 12996  18D5  0086               	movwf	6
 12997  18D6  3001               	movlw	1	; select bank2/3
 12998  18D7  0087               	movwf	7
 12999  18D8  0822               	movf	setDimmerLights_TriggerERROR@command,w
 13000  18D9  1001               	bcf	1,0
 13001  18DA  1D03               	skipz
 13002  18DB  1401               	bsf	1,0
 13003                           
 13004                           ;Dimmer_B1.c: 332: DimmerLights->TriggerAdj=command;
 13005  18DC  086D               	movf	_DimmerLights,w
 13006  18DD  3E09               	addlw	9
 13007  18DE  0086               	movwf	6
 13008  18DF  3001               	movlw	1	; select bank2/3
 13009  18E0  0087               	movwf	7
 13010  18E1  0822               	movf	setDimmerLights_TriggerERROR@command,w
 13011  18E2  1181               	bcf	1,3
 13012  18E3  1D03               	skipz
 13013  18E4  1581               	bsf	1,3
 13014                           
 13015                           ;Dimmer_B1.c: 333: DimmerLights->AdjGo=command;
 13016  18E5  086D               	movf	_DimmerLights,w
 13017  18E6  3E09               	addlw	9
 13018  18E7  0086               	movwf	6
 13019  18E8  3001               	movlw	1	; select bank2/3
 13020  18E9  0087               	movwf	7
 13021  18EA  0822               	movf	setDimmerLights_TriggerERROR@command,w
 13022  18EB  1101               	bcf	1,2
 13023  18EC  1D03               	skipz
 13024  18ED  1501               	bsf	1,2
 13025  18EE  0008               	return
 13026  18EF                     __end_of_setDimmerLights_TriggerERROR:	
 13027                           
 13028                           	psect	text67
 13029  1DC9                     __ptext67:	
 13030 ;; *************** function _setDimmerLights_ERROR *****************
 13031 ;; Defined at:
 13032 ;;		line 310 in file "G:\Program\PIC\Source_File\Dimmer_B1.c"
 13033 ;; Parameters:    Size  Location     Type
 13034 ;;  lights          1    wreg     unsigned char 
 13035 ;; Auto vars:     Size  Location     Type
 13036 ;;  lights          1    6[BANK0 ] unsigned char 
 13037 ;; Return value:  Size  Location     Type
 13038 ;;		None               void
 13039 ;; Registers used:
 13040 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13041 ;; Tracked objects:
 13042 ;;		On entry : 0/0
 13043 ;;		On exit  : 0/0
 13044 ;;		Unchanged: 0/0
 13045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13046 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13047 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13048 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13049 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13050 ;;Total ram usage:        2 bytes
 13051 ;; Hardware stack levels used:    1
 13052 ;; Hardware stack levels required when called:    6
 13053 ;; This function calls:
 13054 ;;		_DimmerLightsPointSelect
 13055 ;;		_setLED
 13056 ;;		_setLoad_StatusOff
 13057 ;;		_setRFSW_Status
 13058 ;;		_setSw_Status
 13059 ;; This function is called by:
 13060 ;;		_DimmerLights_ERROR
 13061 ;; This function uses a non-reentrant model
 13062 ;;
 13063                           
 13064                           
 13065                           ;psect for function _setDimmerLights_ERROR
 13066  1DC9                     _setDimmerLights_ERROR:	
 13067                           
 13068                           ;incstack = 0
 13069                           ; Regs used in _setDimmerLights_ERROR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 13070                           ;setDimmerLights_ERROR@lights stored from wreg
 13071  1DC9  0020               	movlb	0	; select bank0
 13072  1DCA  00A6               	movwf	setDimmerLights_ERROR@lights
 13073                           
 13074                           ;Dimmer_B1.c: 312: DimmerLightsPointSelect(lights);
 13075  1DCB  0826               	movf	setDimmerLights_ERROR@lights,w
 13076  1DCC  31A4  2497  319D   	fcall	_DimmerLightsPointSelect
 13077                           
 13078                           ;Dimmer_B1.c: 313: if(DimmerLights->Status)
 13079  1DCF  0020               	movlb	0	; select bank0
 13080  1DD0  086D               	movf	_DimmerLights,w
 13081  1DD1  0086               	movwf	6
 13082  1DD2  3001               	movlw	1	; select bank2/3
 13083  1DD3  0087               	movwf	7
 13084  1DD4  1E81               	btfss	1,5
 13085  1DD5  0008               	return
 13086                           
 13087                           ;Dimmer_B1.c: 314: {
 13088                           ;Dimmer_B1.c: 315: DimmerLights->Signal=0;
 13089  1DD6  086D               	movf	_DimmerLights,w
 13090  1DD7  0086               	movwf	6
 13091  1DD8  3001               	movlw	1	; select bank2/3
 13092  1DD9  0087               	movwf	7
 13093  1DDA  1081               	bcf	1,1
 13094                           
 13095                           ;Dimmer_B1.c: 316: DimmerLights->AdjFlag=0;
 13096  1DDB  086D               	movf	_DimmerLights,w
 13097  1DDC  0086               	movwf	6
 13098  1DDD  3001               	movlw	1	; select bank2/3
 13099  1DDE  0087               	movwf	7
 13100  1DDF  1181               	bcf	1,3
 13101                           
 13102                           ;Dimmer_B1.c: 317: DimmerLights->AdjStatus=0;
 13103  1DE0  086D               	movf	_DimmerLights,w
 13104  1DE1  0086               	movwf	6
 13105  1DE2  3001               	movlw	1	; select bank2/3
 13106  1DE3  0087               	movwf	7
 13107  1DE4  1201               	bcf	1,4
 13108                           
 13109                           ;Dimmer_B1.c: 318: DimmerLights->StatusFlag=0;
 13110  1DE5  086D               	movf	_DimmerLights,w
 13111  1DE6  0086               	movwf	6
 13112  1DE7  3001               	movlw	1	; select bank2/3
 13113  1DE8  0087               	movwf	7
 13114  1DE9  1301               	bcf	1,6
 13115                           
 13116                           ;Dimmer_B1.c: 319: DimmerLights->DimmingTimeValue=3;
 13117  1DEA  3003               	movlw	3
 13118  1DEB  00A5               	movwf	??_setDimmerLights_ERROR
 13119  1DEC  086D               	movf	_DimmerLights,w
 13120  1DED  3E02               	addlw	2
 13121  1DEE  0086               	movwf	6
 13122  1DEF  3001               	movlw	1	; select bank2/3
 13123  1DF0  0087               	movwf	7
 13124  1DF1  0825               	movf	??_setDimmerLights_ERROR,w
 13125  1DF2  0081               	movwf	1
 13126                           
 13127                           ;Dimmer_B1.c: 320: DimmerLights->DimmingValue=DimmerLights->MinimumValue;
 13128  1DF3  086D               	movf	_DimmerLights,w
 13129  1DF4  3E06               	addlw	6
 13130  1DF5  0086               	movwf	6
 13131  1DF6  3001               	movlw	1	; select bank2/3
 13132  1DF7  0087               	movwf	7
 13133  1DF8  0801               	movf	1,w
 13134  1DF9  00A5               	movwf	??_setDimmerLights_ERROR
 13135  1DFA  086D               	movf	_DimmerLights,w
 13136  1DFB  3E04               	addlw	4
 13137  1DFC  0086               	movwf	6
 13138  1DFD  3001               	movlw	1	; select bank2/3
 13139  1DFE  0087               	movwf	7
 13140  1DFF  0825               	movf	??_setDimmerLights_ERROR,w
 13141  1E00  0081               	movwf	1
 13142                           
 13143                           ;Dimmer_B1.c: 321: setLoad_StatusOff(1,lights,1);
 13144  1E01  0826               	movf	setDimmerLights_ERROR@lights,w
 13145  1E02  00A5               	movwf	??_setDimmerLights_ERROR
 13146  1E03  0825               	movf	??_setDimmerLights_ERROR,w
 13147  1E04  00A2               	movwf	setLoad_StatusOff@lights
 13148  1E05  01A3               	clrf	setLoad_StatusOff@command
 13149  1E06  0AA3               	incf	setLoad_StatusOff@command,f
 13150  1E07  3001               	movlw	1
 13151  1E08  3199  21A7  319D   	fcall	_setLoad_StatusOff
 13152                           
 13153                           ;Dimmer_B1.c: 322: setLED(lights,1);
 13154  1E0B  0020               	movlb	0	; select bank0
 13155  1E0C  01A2               	clrf	setLED@command
 13156  1E0D  0AA2               	incf	setLED@command,f
 13157  1E0E  0826               	movf	setDimmerLights_ERROR@lights,w
 13158  1E0F  319E  2679  319D   	fcall	_setLED
 13159                           
 13160                           ;Dimmer_B1.c: 323: setSw_Status(lights,0);
 13161  1E12  0020               	movlb	0	; select bank0
 13162  1E13  01A2               	clrf	setSw_Status@command
 13163  1E14  0826               	movf	setDimmerLights_ERROR@lights,w
 13164  1E15  31A3  231D  319D   	fcall	_setSw_Status
 13165                           
 13166                           ;Dimmer_B1.c: 324: setRFSW_Status(lights,0);
 13167  1E18  0020               	movlb	0	; select bank0
 13168  1E19  01A2               	clrf	setRFSW_Status@command
 13169  1E1A  0826               	movf	setDimmerLights_ERROR@lights,w
 13170  1E1B  31A3  230E         	fcall	_setRFSW_Status
 13171  1E1D  0008               	return
 13172  1E1E                     __end_of_setDimmerLights_ERROR:	
 13173                           
 13174                           	psect	text68
 13175  1000                     __ptext68:	
 13176 ;; *************** function _getDimmer_TempERROR *****************
 13177 ;; Defined at:
 13178 ;;		line 551 in file "G:\Program\PIC\Source_File\Dimmer_B1.c"
 13179 ;; Parameters:    Size  Location     Type
 13180 ;;  dimmer          1    wreg     unsigned char 
 13181 ;; Auto vars:     Size  Location     Type
 13182 ;;  dimmer          1    2[BANK0 ] unsigned char 
 13183 ;; Return value:  Size  Location     Type
 13184 ;;                  1    wreg      unsigned char 
 13185 ;; Registers used:
 13186 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13187 ;; Tracked objects:
 13188 ;;		On entry : 0/0
 13189 ;;		On exit  : 0/0
 13190 ;;		Unchanged: 0/0
 13191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13193 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13195 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13196 ;;Total ram usage:        1 bytes
 13197 ;; Hardware stack levels used:    1
 13198 ;; Hardware stack levels required when called:    5
 13199 ;; This function calls:
 13200 ;;		_DimmerPointSelect
 13201 ;; This function is called by:
 13202 ;;		_DimmerLights_ERROR
 13203 ;; This function uses a non-reentrant model
 13204 ;;
 13205                           
 13206                           
 13207                           ;psect for function _getDimmer_TempERROR
 13208  1000                     _getDimmer_TempERROR:	
 13209                           
 13210                           ;incstack = 0
 13211                           ; Regs used in _getDimmer_TempERROR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13212                           ;getDimmer_TempERROR@dimmer stored from wreg
 13213  1000  0020               	movlb	0	; select bank0
 13214  1001  00A2               	movwf	getDimmer_TempERROR@dimmer
 13215                           
 13216                           ;Dimmer_B1.c: 553: DimmerPointSelect(dimmer);
 13217  1002  0822               	movf	getDimmer_TempERROR@dimmer,w
 13218  1003  31A2  2285         	fcall	_DimmerPointSelect
 13219                           
 13220                           ;Dimmer_B1.c: 554: return Dimmer->TempERROR;
 13221  1005  0021               	movlb	1	; select bank1
 13222  1006  083A               	movf	_Dimmer^(0+128),w
 13223  1007  0086               	movwf	6
 13224  1008  0187               	clrf	7
 13225  1009  0C01               	rrf	1,w
 13226  100A  3901               	andlw	1
 13227  100B  0008               	return
 13228  100C                     __end_of_getDimmer_TempERROR:	
 13229                           
 13230                           	psect	text69
 13231  22DA                     __ptext69:	
 13232 ;; *************** function _getDimmer_PFERROR *****************
 13233 ;; Defined at:
 13234 ;;		line 561 in file "G:\Program\PIC\Source_File\Dimmer_B1.c"
 13235 ;; Parameters:    Size  Location     Type
 13236 ;;  dimmer          1    wreg     unsigned char 
 13237 ;; Auto vars:     Size  Location     Type
 13238 ;;  dimmer          1    2[BANK0 ] unsigned char 
 13239 ;; Return value:  Size  Location     Type
 13240 ;;                  1    wreg      unsigned char 
 13241 ;; Registers used:
 13242 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13243 ;; Tracked objects:
 13244 ;;		On entry : 0/0
 13245 ;;		On exit  : 0/0
 13246 ;;		Unchanged: 0/0
 13247 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13248 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13249 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13251 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13252 ;;Total ram usage:        1 bytes
 13253 ;; Hardware stack levels used:    1
 13254 ;; Hardware stack levels required when called:    5
 13255 ;; This function calls:
 13256 ;;		_DimmerPointSelect
 13257 ;; This function is called by:
 13258 ;;		_DimmerLights_ERROR
 13259 ;; This function uses a non-reentrant model
 13260 ;;
 13261                           
 13262                           
 13263                           ;psect for function _getDimmer_PFERROR
 13264  22DA                     _getDimmer_PFERROR:	
 13265                           
 13266                           ;incstack = 0
 13267                           ; Regs used in _getDimmer_PFERROR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13268                           ;getDimmer_PFERROR@dimmer stored from wreg
 13269  22DA  0020               	movlb	0	; select bank0
 13270  22DB  00A2               	movwf	getDimmer_PFERROR@dimmer
 13271                           
 13272                           ;Dimmer_B1.c: 563: DimmerPointSelect(dimmer);
 13273  22DC  0822               	movf	getDimmer_PFERROR@dimmer,w
 13274  22DD  31A2  2285         	fcall	_DimmerPointSelect
 13275                           
 13276                           ;Dimmer_B1.c: 564: return Dimmer->PFERROR;
 13277  22DF  0021               	movlb	1	; select bank1
 13278  22E0  083A               	movf	_Dimmer^(0+128),w
 13279  22E1  0086               	movwf	6
 13280  22E2  0187               	clrf	7
 13281  22E3  0C01               	rrf	1,w
 13282  22E4  0C89               	rrf	9,f
 13283  22E5  3901               	andlw	1
 13284  22E6  0008               	return
 13285  22E7                     __end_of_getDimmer_PFERROR:	
 13286                           
 13287                           	psect	text70
 13288  22C1                     __ptext70:	
 13289 ;; *************** function _getDimmer_LoadERROR *****************
 13290 ;; Defined at:
 13291 ;;		line 556 in file "G:\Program\PIC\Source_File\Dimmer_B1.c"
 13292 ;; Parameters:    Size  Location     Type
 13293 ;;  dimmer          1    wreg     unsigned char 
 13294 ;; Auto vars:     Size  Location     Type
 13295 ;;  dimmer          1    2[BANK0 ] unsigned char 
 13296 ;; Return value:  Size  Location     Type
 13297 ;;                  1    wreg      unsigned char 
 13298 ;; Registers used:
 13299 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13300 ;; Tracked objects:
 13301 ;;		On entry : 0/0
 13302 ;;		On exit  : 0/0
 13303 ;;		Unchanged: 0/0
 13304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13305 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13306 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13308 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13309 ;;Total ram usage:        1 bytes
 13310 ;; Hardware stack levels used:    1
 13311 ;; Hardware stack levels required when called:    5
 13312 ;; This function calls:
 13313 ;;		_DimmerPointSelect
 13314 ;; This function is called by:
 13315 ;;		_DimmerLights_ERROR
 13316 ;; This function uses a non-reentrant model
 13317 ;;
 13318                           
 13319                           
 13320                           ;psect for function _getDimmer_LoadERROR
 13321  22C1                     _getDimmer_LoadERROR:	
 13322                           
 13323                           ;incstack = 0
 13324                           ; Regs used in _getDimmer_LoadERROR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13325                           ;getDimmer_LoadERROR@dimmer stored from wreg
 13326  22C1  0020               	movlb	0	; select bank0
 13327  22C2  00A2               	movwf	getDimmer_LoadERROR@dimmer
 13328                           
 13329                           ;Dimmer_B1.c: 558: DimmerPointSelect(dimmer);
 13330  22C3  0822               	movf	getDimmer_LoadERROR@dimmer,w
 13331  22C4  31A2  2285         	fcall	_DimmerPointSelect
 13332                           
 13333                           ;Dimmer_B1.c: 559: return Dimmer->LoadERROR;
 13334  22C6  0021               	movlb	1	; select bank1
 13335  22C7  083A               	movf	_Dimmer^(0+128),w
 13336  22C8  0086               	movwf	6
 13337  22C9  0187               	clrf	7
 13338  22CA  0801               	movf	1,w
 13339  22CB  3901               	andlw	1
 13340  22CC  0008               	return
 13341  22CD                     __end_of_getDimmer_LoadERROR:	
 13342                           
 13343                           	psect	text71
 13344  2423                     __ptext71:	
 13345 ;; *************** function _setDimmerLights_Clear *****************
 13346 ;; Defined at:
 13347 ;;		line 457 in file "G:\Program\PIC\Source_File\Dimmer_B1.c"
 13348 ;; Parameters:    Size  Location     Type
 13349 ;;  lights          1    wreg     unsigned char 
 13350 ;;  command         1    2[BANK0 ] unsigned char 
 13351 ;; Auto vars:     Size  Location     Type
 13352 ;;  lights          1    3[BANK0 ] unsigned char 
 13353 ;; Return value:  Size  Location     Type
 13354 ;;		None               void
 13355 ;; Registers used:
 13356 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13357 ;; Tracked objects:
 13358 ;;		On entry : 0/0
 13359 ;;		On exit  : 0/0
 13360 ;;		Unchanged: 0/0
 13361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13362 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13363 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13365 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13366 ;;Total ram usage:        2 bytes
 13367 ;; Hardware stack levels used:    1
 13368 ;; Hardware stack levels required when called:    5
 13369 ;; This function calls:
 13370 ;;		_DimmerLightsPointSelect
 13371 ;; This function is called by:
 13372 ;;		_setLoad_Main
 13373 ;; This function uses a non-reentrant model
 13374 ;;
 13375                           
 13376                           
 13377                           ;psect for function _setDimmerLights_Clear
 13378  2423                     _setDimmerLights_Clear:	
 13379                           
 13380                           ;incstack = 0
 13381                           ; Regs used in _setDimmerLights_Clear: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 13382                           ;setDimmerLights_Clear@lights stored from wreg
 13383  2423  0020               	movlb	0	; select bank0
 13384  2424  00A3               	movwf	setDimmerLights_Clear@lights
 13385                           
 13386                           ;Dimmer_B1.c: 459: DimmerLightsPointSelect(lights);
 13387  2425  0823               	movf	setDimmerLights_Clear@lights,w
 13388  2426  31A4  2497         	fcall	_DimmerLightsPointSelect
 13389                           
 13390                           ;Dimmer_B1.c: 460: DimmerLights->Clear=command;
 13391  2428  0020               	movlb	0	; select bank0
 13392  2429  086D               	movf	_DimmerLights,w
 13393  242A  3E0C               	addlw	12
 13394  242B  0086               	movwf	6
 13395  242C  3001               	movlw	1	; select bank2/3
 13396  242D  0087               	movwf	7
 13397  242E  0822               	movf	setDimmerLights_Clear@command,w
 13398  242F  1001               	bcf	1,0
 13399  2430  1D03               	skipz
 13400  2431  1401               	bsf	1,0
 13401  2432  0008               	return
 13402  2433                     __end_of_setDimmerLights_Clear:	
 13403                           
 13404                           	psect	text72
 13405  22B5                     __ptext72:	
 13406 ;; *************** function _getTemp_Safe *****************
 13407 ;; Defined at:
 13408 ;;		line 34 in file "G:\Program\PIC\Source_File\OverTemperature_B1.c"
 13409 ;; Parameters:    Size  Location     Type
 13410 ;;  temp            1    wreg     unsigned char 
 13411 ;; Auto vars:     Size  Location     Type
 13412 ;;  temp            1    1[BANK0 ] unsigned char 
 13413 ;; Return value:  Size  Location     Type
 13414 ;;                  1    wreg      unsigned char 
 13415 ;; Registers used:
 13416 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13417 ;; Tracked objects:
 13418 ;;		On entry : 0/0
 13419 ;;		On exit  : 0/0
 13420 ;;		Unchanged: 0/0
 13421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13423 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13425 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13426 ;;Total ram usage:        1 bytes
 13427 ;; Hardware stack levels used:    1
 13428 ;; Hardware stack levels required when called:    5
 13429 ;; This function calls:
 13430 ;;		_TempPointSelect
 13431 ;; This function is called by:
 13432 ;;		_setLoad_Main
 13433 ;;		_setPowerFault_Main
 13434 ;; This function uses a non-reentrant model
 13435 ;;
 13436                           
 13437                           
 13438                           ;psect for function _getTemp_Safe
 13439  22B5                     _getTemp_Safe:	
 13440                           
 13441                           ;incstack = 0
 13442                           ; Regs used in _getTemp_Safe: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13443                           ;getTemp_Safe@temp stored from wreg
 13444  22B5  0020               	movlb	0	; select bank0
 13445  22B6  00A1               	movwf	getTemp_Safe@temp
 13446                           
 13447                           ;OverTemperature_B1.c: 36: TempPointSelect(temp);
 13448  22B7  0821               	movf	getTemp_Safe@temp,w
 13449  22B8  31A1  21BC         	fcall	_TempPointSelect
 13450                           
 13451                           ;OverTemperature_B1.c: 37: return Temp->Safe;
 13452  22BA  087D               	movf	_Temp,w
 13453  22BB  0086               	movwf	6
 13454  22BC  3001               	movlw	1	; select bank2/3
 13455  22BD  0087               	movwf	7
 13456  22BE  0E01               	swapf	1,w
 13457  22BF  3901               	andlw	1
 13458  22C0  0008               	return
 13459  22C1                     __end_of_getTemp_Safe:	
 13460                           
 13461                           	psect	text73
 13462  21BC                     __ptext73:	
 13463 ;; *************** function _TempPointSelect *****************
 13464 ;; Defined at:
 13465 ;;		line 8 in file "G:\Program\PIC\Source_File\OverTemperature_B1.c"
 13466 ;; Parameters:    Size  Location     Type
 13467 ;;  temp            1    wreg     unsigned char 
 13468 ;; Auto vars:     Size  Location     Type
 13469 ;;  temp            1    0[COMMON] unsigned char 
 13470 ;; Return value:  Size  Location     Type
 13471 ;;		None               void
 13472 ;; Registers used:
 13473 ;;		wreg
 13474 ;; Tracked objects:
 13475 ;;		On entry : 0/0
 13476 ;;		On exit  : 0/0
 13477 ;;		Unchanged: 0/0
 13478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13479 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13480 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13481 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13482 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13483 ;;Total ram usage:        1 bytes
 13484 ;; Hardware stack levels used:    1
 13485 ;; Hardware stack levels required when called:    4
 13486 ;; This function calls:
 13487 ;;		Nothing
 13488 ;; This function is called by:
 13489 ;;		_setTemp_Enable
 13490 ;;		_getTemp_Safe
 13491 ;;		_getTemp_AD
 13492 ;;		_setTemp_Initialization
 13493 ;;		_setTemp_Main
 13494 ;;		_setOverTemp_ERROR
 13495 ;;		_getTemp_ERROR
 13496 ;; This function uses a non-reentrant model
 13497 ;;
 13498                           
 13499                           
 13500                           ;psect for function _TempPointSelect
 13501  21BC                     _TempPointSelect:	
 13502                           
 13503                           ;OverTemperature_B1.c: 11: Temp=&Temp1;
 13504                           
 13505                           ;incstack = 0
 13506                           ; Regs used in _TempPointSelect: [wreg]
 13507  21BC  3020               	movlw	_Temp1& (0+255)
 13508  21BD  0020               	movlb	0	; select bank0
 13509  21BE  00A0               	movwf	??_TempPointSelect
 13510  21BF  0820               	movf	??_TempPointSelect,w
 13511  21C0  00FD               	movwf	_Temp
 13512  21C1  0008               	return
 13513  21C2                     __end_of_TempPointSelect:	
 13514                           
 13515                           	psect	text74
 13516  1866                     __ptext74:	
 13517 ;; *************** function _getPF_Safe *****************
 13518 ;; Defined at:
 13519 ;;		line 41 in file "G:\Program\PIC\Source_File\PowerFault_B1.c"
 13520 ;; Parameters:    Size  Location     Type
 13521 ;;  pf              1    wreg     unsigned char 
 13522 ;; Auto vars:     Size  Location     Type
 13523 ;;  pf              1    1[BANK0 ] unsigned char 
 13524 ;; Return value:  Size  Location     Type
 13525 ;;                  1    wreg      unsigned char 
 13526 ;; Registers used:
 13527 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13528 ;; Tracked objects:
 13529 ;;		On entry : 0/0
 13530 ;;		On exit  : 0/0
 13531 ;;		Unchanged: 0/0
 13532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13534 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13536 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13537 ;;Total ram usage:        1 bytes
 13538 ;; Hardware stack levels used:    1
 13539 ;; Hardware stack levels required when called:    5
 13540 ;; This function calls:
 13541 ;;		_PowerFaultPointSelect
 13542 ;; This function is called by:
 13543 ;;		_setLoad_Main
 13544 ;;		_setTemp_Main
 13545 ;; This function uses a non-reentrant model
 13546 ;;
 13547                           
 13548                           
 13549                           ;psect for function _getPF_Safe
 13550  1866                     _getPF_Safe:	
 13551                           
 13552                           ;incstack = 0
 13553                           ; Regs used in _getPF_Safe: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13554                           ;getPF_Safe@pf stored from wreg
 13555  1866  0020               	movlb	0	; select bank0
 13556  1867  00A1               	movwf	getPF_Safe@pf
 13557                           
 13558                           ;PowerFault_B1.c: 43: PowerFaultPointSelect(pf);
 13559  1868  0821               	movf	getPF_Safe@pf,w
 13560  1869  31A1  21D5         	fcall	_PowerFaultPointSelect
 13561                           
 13562                           ;PowerFault_B1.c: 44: return PF->Safe;
 13563  186B  0021               	movlb	1	; select bank1
 13564  186C  083D               	movf	_PF^(0+128),w
 13565  186D  0086               	movwf	6
 13566  186E  3001               	movlw	1	; select bank2/3
 13567  186F  0087               	movwf	7
 13568  1870  0C01               	rrf	1,w
 13569  1871  0C89               	rrf	9,f
 13570  1872  3901               	andlw	1
 13571  1873  0008               	return
 13572  1874                     __end_of_getPF_Safe:	
 13573                           
 13574                           	psect	text75
 13575  21D5                     __ptext75:	
 13576 ;; *************** function _PowerFaultPointSelect *****************
 13577 ;; Defined at:
 13578 ;;		line 8 in file "G:\Program\PIC\Source_File\PowerFault_B1.c"
 13579 ;; Parameters:    Size  Location     Type
 13580 ;;  pf              1    wreg     unsigned char 
 13581 ;; Auto vars:     Size  Location     Type
 13582 ;;  pf              1    0[COMMON] unsigned char 
 13583 ;; Return value:  Size  Location     Type
 13584 ;;		None               void
 13585 ;; Registers used:
 13586 ;;		wreg
 13587 ;; Tracked objects:
 13588 ;;		On entry : 0/0
 13589 ;;		On exit  : 0/0
 13590 ;;		Unchanged: 0/0
 13591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13593 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13594 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13595 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13596 ;;Total ram usage:        1 bytes
 13597 ;; Hardware stack levels used:    1
 13598 ;; Hardware stack levels required when called:    4
 13599 ;; This function calls:
 13600 ;;		Nothing
 13601 ;; This function is called by:
 13602 ;;		_setPowerFault_Initialization
 13603 ;;		_getPF_Safe
 13604 ;;		_getPowerFault_AD
 13605 ;;		_setPowerFault_Main
 13606 ;;		_setPowerFault_ERROR
 13607 ;;		_setPF_Enable
 13608 ;;		_getPF_ERROR
 13609 ;; This function uses a non-reentrant model
 13610 ;;
 13611                           
 13612                           
 13613                           ;psect for function _PowerFaultPointSelect
 13614  21D5                     _PowerFaultPointSelect:	
 13615                           
 13616                           ;PowerFault_B1.c: 11: PF=&PF1;
 13617                           
 13618                           ;incstack = 0
 13619                           ; Regs used in _PowerFaultPointSelect: [wreg]
 13620  21D5  3066               	movlw	_PF1& (0+255)
 13621  21D6  0020               	movlb	0	; select bank0
 13622  21D7  00A0               	movwf	??_PowerFaultPointSelect
 13623  21D8  0820               	movf	??_PowerFaultPointSelect,w
 13624  21D9  0021               	movlb	1	; select bank1
 13625  21DA  00BD               	movwf	_PF^(0+128)
 13626  21DB  0008               	return
 13627  21DC                     __end_of_PowerFaultPointSelect:	
 13628                           
 13629                           	psect	text76
 13630  1A06                     __ptext76:	
 13631 ;; *************** function ___lwdiv *****************
 13632 ;; Defined at:
 13633 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\lwdiv.c"
 13634 ;; Parameters:    Size  Location     Type
 13635 ;;  divisor         2    0[BANK0 ] unsigned int 
 13636 ;;  dividend        2    2[BANK0 ] unsigned int 
 13637 ;; Auto vars:     Size  Location     Type
 13638 ;;  quotient        2    5[BANK0 ] unsigned int 
 13639 ;;  counter         1    7[BANK0 ] unsigned char 
 13640 ;; Return value:  Size  Location     Type
 13641 ;;                  2    0[BANK0 ] unsigned int 
 13642 ;; Registers used:
 13643 ;;		wreg, status,2, status,0
 13644 ;; Tracked objects:
 13645 ;;		On entry : 0/0
 13646 ;;		On exit  : 0/0
 13647 ;;		Unchanged: 0/0
 13648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13649 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13650 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13651 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13652 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13653 ;;Total ram usage:        8 bytes
 13654 ;; Hardware stack levels used:    1
 13655 ;; Hardware stack levels required when called:    4
 13656 ;; This function calls:
 13657 ;;		Nothing
 13658 ;; This function is called by:
 13659 ;;		_setLoad_Main
 13660 ;; This function uses a non-reentrant model
 13661 ;;
 13662                           
 13663                           
 13664                           ;psect for function ___lwdiv
 13665  1A06                     ___lwdiv:	
 13666                           
 13667                           ;incstack = 0
 13668                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 13669  1A06  0020               	movlb	0	; select bank0
 13670  1A07  01A5               	clrf	___lwdiv@quotient
 13671  1A08  01A6               	clrf	___lwdiv@quotient+1
 13672  1A09  0821               	movf	___lwdiv@divisor+1,w
 13673  1A0A  0420               	iorwf	___lwdiv@divisor,w
 13674  1A0B  1903               	skipnz
 13675  1A0C  2A36               	goto	l7775
 13676  1A0D  01A7               	clrf	___lwdiv@counter
 13677  1A0E  0AA7               	incf	___lwdiv@counter,f
 13678  1A0F                     l7763:	
 13679  1A0F  1BA1               	btfsc	___lwdiv@divisor+1,7
 13680  1A10  2A1B               	goto	l7765
 13681  1A11  3001               	movlw	1
 13682  1A12                     u6185:	
 13683  1A12  35A0               	lslf	___lwdiv@divisor,f
 13684  1A13  0DA1               	rlf	___lwdiv@divisor+1,f
 13685  1A14  0B89               	decfsz	9,f
 13686  1A15  2A12               	goto	u6185
 13687  1A16  3001               	movlw	1
 13688  1A17  00A4               	movwf	??___lwdiv
 13689  1A18  0824               	movf	??___lwdiv,w
 13690  1A19  07A7               	addwf	___lwdiv@counter,f
 13691  1A1A  2A0F               	goto	l7763
 13692  1A1B                     l7765:	
 13693  1A1B  3001               	movlw	1
 13694  1A1C                     u6205:	
 13695  1A1C  35A5               	lslf	___lwdiv@quotient,f
 13696  1A1D  0DA6               	rlf	___lwdiv@quotient+1,f
 13697  1A1E  0B89               	decfsz	9,f
 13698  1A1F  2A1C               	goto	u6205
 13699  1A20  0821               	movf	___lwdiv@divisor+1,w
 13700  1A21  0223               	subwf	___lwdiv@dividend+1,w
 13701  1A22  1D03               	skipz
 13702  1A23  2A26               	goto	u6215
 13703  1A24  0820               	movf	___lwdiv@divisor,w
 13704  1A25  0222               	subwf	___lwdiv@dividend,w
 13705  1A26                     u6215:	
 13706  1A26  1C03               	skipc
 13707  1A27  2A2D               	goto	l7771
 13708  1A28  0820               	movf	___lwdiv@divisor,w
 13709  1A29  02A2               	subwf	___lwdiv@dividend,f
 13710  1A2A  0821               	movf	___lwdiv@divisor+1,w
 13711  1A2B  3BA3               	subwfb	___lwdiv@dividend+1,f
 13712  1A2C  1425               	bsf	___lwdiv@quotient,0
 13713  1A2D                     l7771:	
 13714  1A2D  3001               	movlw	1
 13715  1A2E                     u6225:	
 13716  1A2E  36A1               	lsrf	___lwdiv@divisor+1,f
 13717  1A2F  0CA0               	rrf	___lwdiv@divisor,f
 13718  1A30  0B89               	decfsz	9,f
 13719  1A31  2A2E               	goto	u6225
 13720  1A32  3001               	movlw	1
 13721  1A33  02A7               	subwf	___lwdiv@counter,f
 13722  1A34  1D03               	btfss	3,2
 13723  1A35  2A1B               	goto	l7765
 13724  1A36                     l7775:	
 13725  1A36  0826               	movf	___lwdiv@quotient+1,w
 13726  1A37  01A1               	clrf	?___lwdiv+1
 13727  1A38  07A1               	addwf	?___lwdiv+1,f
 13728  1A39  0825               	movf	___lwdiv@quotient,w
 13729  1A3A  01A0               	clrf	?___lwdiv
 13730  1A3B  07A0               	addwf	?___lwdiv,f
 13731  1A3C  0008               	return
 13732  1A3D                     __end_of___lwdiv:	
 13733                           
 13734                           	psect	text77
 13735  2192                     __ptext77:	
 13736 ;; *************** function _Load_Initialization *****************
 13737 ;; Defined at:
 13738 ;;		line 17 in file "G:\Program\PIC\Source_File\OverLoad_B1.c"
 13739 ;; Parameters:    Size  Location     Type
 13740 ;;		None
 13741 ;; Auto vars:     Size  Location     Type
 13742 ;;		None
 13743 ;; Return value:  Size  Location     Type
 13744 ;;		None               void
 13745 ;; Registers used:
 13746 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13747 ;; Tracked objects:
 13748 ;;		On entry : 0/0
 13749 ;;		On exit  : 0/0
 13750 ;;		Unchanged: 0/0
 13751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13753 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13755 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13756 ;;Total ram usage:        0 bytes
 13757 ;; Hardware stack levels used:    1
 13758 ;; Hardware stack levels required when called:    6
 13759 ;; This function calls:
 13760 ;;		_setLoad_Initialization
 13761 ;; This function is called by:
 13762 ;;		_main
 13763 ;; This function uses a non-reentrant model
 13764 ;;
 13765                           
 13766                           
 13767                           ;psect for function _Load_Initialization
 13768  2192                     _Load_Initialization:	
 13769                           
 13770                           ;OverLoad_B1.c: 20: setLoad_Initialization(1);
 13771                           
 13772                           ;incstack = 0
 13773                           ; Regs used in _Load_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13774  2192  3001               	movlw	1
 13775  2193  31A4  2413         	fcall	_setLoad_Initialization
 13776  2195  0008               	return
 13777  2196                     __end_of_Load_Initialization:	
 13778                           
 13779                           	psect	text78
 13780  2413                     __ptext78:	
 13781 ;; *************** function _setLoad_Initialization *****************
 13782 ;; Defined at:
 13783 ;;		line 31 in file "G:\Program\PIC\Source_File\OverLoad_B1.c"
 13784 ;; Parameters:    Size  Location     Type
 13785 ;;  load            1    wreg     unsigned char 
 13786 ;; Auto vars:     Size  Location     Type
 13787 ;;  load            1    2[BANK0 ] unsigned char 
 13788 ;; Return value:  Size  Location     Type
 13789 ;;		None               void
 13790 ;; Registers used:
 13791 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13792 ;; Tracked objects:
 13793 ;;		On entry : 0/0
 13794 ;;		On exit  : 0/0
 13795 ;;		Unchanged: 0/0
 13796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13798 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13800 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13801 ;;Total ram usage:        1 bytes
 13802 ;; Hardware stack levels used:    1
 13803 ;; Hardware stack levels required when called:    5
 13804 ;; This function calls:
 13805 ;;		_LoadPointSelect
 13806 ;;		_setLoad_AH_AL_Restore
 13807 ;; This function is called by:
 13808 ;;		_Load_Initialization
 13809 ;; This function uses a non-reentrant model
 13810 ;;
 13811                           
 13812                           
 13813                           ;psect for function _setLoad_Initialization
 13814  2413                     _setLoad_Initialization:	
 13815                           
 13816                           ;incstack = 0
 13817                           ; Regs used in _setLoad_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
 13818                           ;setLoad_Initialization@load stored from wreg
 13819  2413  0020               	movlb	0	; select bank0
 13820  2414  00A2               	movwf	setLoad_Initialization@load
 13821                           
 13822                           ;OverLoad_B1.c: 33: LoadPointSelect(load);
 13823  2415  0822               	movf	setLoad_Initialization@load,w
 13824  2416  31A2  2234  31A4   	fcall	_LoadPointSelect
 13825                           
 13826                           ;OverLoad_B1.c: 34: Load->Safe=1;
 13827  2419  0020               	movlb	0	; select bank0
 13828  241A  086F               	movf	_Load,w
 13829  241B  0086               	movwf	6
 13830  241C  3002               	movlw	2	; select bank4/5
 13831  241D  0087               	movwf	7
 13832  241E  1581               	bsf	1,3
 13833                           
 13834                           ;OverLoad_B1.c: 35: setLoad_AH_AL_Restore(load);
 13835  241F  0822               	movf	setLoad_Initialization@load,w
 13836  2420  31A7  2724         	fcall	_setLoad_AH_AL_Restore
 13837  2422  0008               	return
 13838  2423                     __end_of_setLoad_Initialization:	
 13839                           
 13840                           	psect	text79
 13841  2724                     __ptext79:	
 13842 ;; *************** function _setLoad_AH_AL_Restore *****************
 13843 ;; Defined at:
 13844 ;;		line 375 in file "G:\Program\PIC\Source_File\OverLoad_B1.c"
 13845 ;; Parameters:    Size  Location     Type
 13846 ;;  load            1    wreg     unsigned char 
 13847 ;; Auto vars:     Size  Location     Type
 13848 ;;  load            1    0[COMMON] unsigned char 
 13849 ;;  i               1    1[BANK0 ] unsigned char 
 13850 ;; Return value:  Size  Location     Type
 13851 ;;		None               void
 13852 ;; Registers used:
 13853 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13854 ;; Tracked objects:
 13855 ;;		On entry : 0/0
 13856 ;;		On exit  : 0/0
 13857 ;;		Unchanged: 0/0
 13858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13860 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13861 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13862 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13863 ;;Total ram usage:        2 bytes
 13864 ;; Hardware stack levels used:    1
 13865 ;; Hardware stack levels required when called:    4
 13866 ;; This function calls:
 13867 ;;		Nothing
 13868 ;; This function is called by:
 13869 ;;		_setLoad_Initialization
 13870 ;;		_setLoad_Main
 13871 ;; This function uses a non-reentrant model
 13872 ;;
 13873                           
 13874                           
 13875                           ;psect for function _setLoad_AH_AL_Restore
 13876  2724                     _setLoad_AH_AL_Restore:	
 13877                           
 13878                           ;OverLoad_B1.c: 378: char i;
 13879                           ;OverLoad_B1.c: 379: for(i=0 ; i<5 ;i++)
 13880                           
 13881                           ;incstack = 0
 13882                           ; Regs used in _setLoad_AH_AL_Restore: [wreg+fsr1l+fsr1h+status,2+status,0]
 13883  2724  0020               	movlb	0	; select bank0
 13884  2725  01A1               	clrf	setLoad_AH_AL_Restore@i
 13885  2726                     L10:	
 13886  2726  3005               	movlw	5
 13887  2727  0221               	subwf	setLoad_AH_AL_Restore@i,w
 13888  2728  1803               	btfsc	3,0
 13889  2729  0008               	return
 13890                           
 13891                           ;OverLoad_B1.c: 380: {
 13892                           ;OverLoad_B1.c: 381: Load->AH[i]=0;
 13893  272A  3521               	lslf	setLoad_AH_AL_Restore@i,w
 13894  272B  3E08               	addlw	8
 13895  272C  076F               	addwf	_Load,w
 13896  272D  00A0               	movwf	??_setLoad_AH_AL_Restore
 13897  272E  0820               	movf	??_setLoad_AH_AL_Restore,w
 13898  272F  0086               	movwf	6
 13899  2730  3002               	movlw	2	; select bank4/5
 13900  2731  0087               	movwf	7
 13901  2732  3000               	movlw	0
 13902  2733  3FC0               	movwi [0]fsr1
 13903  2734  3FC1               	movwi [1]fsr1
 13904                           
 13905                           ;OverLoad_B1.c: 382: Load->AL[i]=0xffff;
 13906  2735  3521               	lslf	setLoad_AH_AL_Restore@i,w
 13907  2736  3E1A               	addlw	26
 13908  2737  076F               	addwf	_Load,w
 13909  2738  00A0               	movwf	??_setLoad_AH_AL_Restore
 13910  2739  0820               	movf	??_setLoad_AH_AL_Restore,w
 13911  273A  0086               	movwf	6
 13912  273B  3002               	movlw	2	; select bank4/5
 13913  273C  0087               	movwf	7
 13914  273D  30FF               	movlw	255
 13915  273E  3FC0               	movwi [0]fsr1
 13916  273F  30FF               	movlw	255
 13917  2740  3FC1               	movwi [1]fsr1
 13918  2741  3001               	movlw	1
 13919  2742  00A0               	movwf	??_setLoad_AH_AL_Restore
 13920  2743  0820               	movf	??_setLoad_AH_AL_Restore,w
 13921  2744  07A1               	addwf	setLoad_AH_AL_Restore@i,f
 13922  2745  2F26               	goto	L10
 13923  2746                     __end_of_setLoad_AH_AL_Restore:	
 13924                           
 13925                           	psect	text80
 13926  22A9                     __ptext80:	
 13927 ;; *************** function _LED_Main *****************
 13928 ;; Defined at:
 13929 ;;		line 51 in file "G:\Program\PIC\Source_File\LED_B1.c"
 13930 ;; Parameters:    Size  Location     Type
 13931 ;;		None
 13932 ;; Auto vars:     Size  Location     Type
 13933 ;;		None
 13934 ;; Return value:  Size  Location     Type
 13935 ;;		None               void
 13936 ;; Registers used:
 13937 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13938 ;; Tracked objects:
 13939 ;;		On entry : 0/0
 13940 ;;		On exit  : 0/0
 13941 ;;		Unchanged: 0/0
 13942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13943 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13944 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13946 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13947 ;;Total ram usage:        0 bytes
 13948 ;; Hardware stack levels used:    1
 13949 ;; Hardware stack levels required when called:    6
 13950 ;; This function calls:
 13951 ;;		_setLED_Main
 13952 ;; This function is called by:
 13953 ;;		_main
 13954 ;; This function uses a non-reentrant model
 13955 ;;
 13956                           
 13957                           
 13958                           ;psect for function _LED_Main
 13959  22A9                     _LED_Main:	
 13960                           
 13961                           ;LED_B1.c: 54: setLED_Main(1);
 13962                           
 13963                           ;incstack = 0
 13964                           ; Regs used in _LED_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13965  22A9  3001               	movlw	1
 13966  22AA  319A  22BA  31A2   	fcall	_setLED_Main
 13967                           
 13968                           ;LED_B1.c: 57: setLED_Main(2);
 13969  22AD  3002               	movlw	2
 13970  22AE  319A  22BA  31A2   	fcall	_setLED_Main
 13971                           
 13972                           ;LED_B1.c: 63: setLED_Main(99);
 13973  22B1  3063               	movlw	99
 13974  22B2  319A  22BA         	fcall	_setLED_Main
 13975  22B4  0008               	return
 13976  22B5                     __end_of_LED_Main:	
 13977                           
 13978                           	psect	text81
 13979  1ABA                     __ptext81:	
 13980 ;; *************** function _setLED_Main *****************
 13981 ;; Defined at:
 13982 ;;		line 214 in file "G:\Program\PIC\Source_File\LED_B1.c"
 13983 ;; Parameters:    Size  Location     Type
 13984 ;;  led             1    wreg     unsigned char 
 13985 ;; Auto vars:     Size  Location     Type
 13986 ;;  led             1    4[BANK0 ] unsigned char 
 13987 ;; Return value:  Size  Location     Type
 13988 ;;		None               void
 13989 ;; Registers used:
 13990 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13991 ;; Tracked objects:
 13992 ;;		On entry : 0/0
 13993 ;;		On exit  : 0/0
 13994 ;;		Unchanged: 0/0
 13995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13996 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13997 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13998 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13999 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14000 ;;Total ram usage:        3 bytes
 14001 ;; Hardware stack levels used:    1
 14002 ;; Hardware stack levels required when called:    5
 14003 ;; This function calls:
 14004 ;;		_LedPointSelect
 14005 ;; This function is called by:
 14006 ;;		_LED_Main
 14007 ;; This function uses a non-reentrant model
 14008 ;;
 14009                           
 14010                           
 14011                           ;psect for function _setLED_Main
 14012  1ABA                     _setLED_Main:	
 14013                           
 14014                           ;incstack = 0
 14015                           ; Regs used in _setLED_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14016                           ;setLED_Main@led stored from wreg
 14017  1ABA  0020               	movlb	0	; select bank0
 14018  1ABB  00A4               	movwf	setLED_Main@led
 14019                           
 14020                           ;LED_B1.c: 216: LedPointSelect(led);
 14021  1ABC  0824               	movf	setLED_Main@led,w
 14022  1ABD  31A7  2702  319A   	fcall	_LedPointSelect
 14023                           
 14024                           ;LED_B1.c: 217: if(LED->GO)
 14025  1AC0  0021               	movlb	1	; select bank1
 14026  1AC1  083C               	movf	_LED^(0+128),w
 14027  1AC2  0086               	movwf	6
 14028  1AC3  0187               	clrf	7
 14029  1AC4  1C81               	btfss	1,1
 14030  1AC5  0008               	return
 14031                           
 14032                           ;LED_B1.c: 218: {
 14033                           ;LED_B1.c: 219: LED->Time++;
 14034  1AC6  0A3C               	incf	_LED^(0+128),w
 14035  1AC7  0086               	movwf	6
 14036  1AC8  0187               	clrf	7
 14037  1AC9  3001               	movlw	1
 14038  1ACA  0781               	addwf	1,f
 14039  1ACB  3141               	addfsr 1,1
 14040  1ACC  1803               	skipnc
 14041  1ACD  0A81               	incf	1,f
 14042                           
 14043                           ;LED_B1.c: 220: if(LED->Time >= 500)
 14044  1ACE  0A3C               	incf	_LED^(0+128),w
 14045  1ACF  0086               	movwf	6
 14046  1AD0  0187               	clrf	7
 14047  1AD1  3F40               	moviw [0]fsr1
 14048  1AD2  0020               	movlb	0	; select bank0
 14049  1AD3  00A2               	movwf	??_setLED_Main
 14050  1AD4  3F41               	moviw [1]fsr1
 14051  1AD5  00A3               	movwf	??_setLED_Main+1
 14052  1AD6  3001               	movlw	1
 14053  1AD7  0223               	subwf	??_setLED_Main+1,w
 14054  1AD8  30F4               	movlw	244
 14055  1AD9  1903               	skipnz
 14056  1ADA  0222               	subwf	??_setLED_Main,w
 14057  1ADB  1C03               	skipc
 14058  1ADC  0008               	return
 14059                           
 14060                           ;LED_B1.c: 221: {
 14061                           ;LED_B1.c: 222: LED->Time=0;
 14062  1ADD  0021               	movlb	1	; select bank1
 14063  1ADE  0A3C               	incf	_LED^(0+128),w
 14064  1ADF  0086               	movwf	6
 14065  1AE0  0187               	clrf	7
 14066  1AE1  3000               	movlw	0
 14067  1AE2  3FC0               	movwi [0]fsr1
 14068  1AE3  3FC1               	movwi [1]fsr1
 14069                           
 14070                           ;LED_B1.c: 224: if(led == 1)
 14071  1AE4  0020               	movlb	0	; select bank0
 14072  1AE5  0824               	movf	setLED_Main@led,w
 14073  1AE6  3A01               	xorlw	1
 14074  1AE7  1D03               	skipz
 14075  1AE8  2AEC               	goto	l8001
 14076                           
 14077                           ;LED_B1.c: 225: {
 14078                           ;LED_B1.c: 226: RC7=~RC7;
 14079  1AE9  3080               	movlw	128
 14080  1AEA  068E               	xorwf	14,f
 14081                           
 14082                           ;LED_B1.c: 227: }
 14083  1AEB  0008               	return
 14084  1AEC                     l8001:	
 14085                           
 14086                           ;LED_B1.c: 230: else if(led == 2)
 14087  1AEC  0824               	movf	setLED_Main@led,w
 14088  1AED  3A02               	xorlw	2
 14089  1AEE  1D03               	skipz
 14090  1AEF  2AF3               	goto	l8005
 14091                           
 14092                           ;LED_B1.c: 231: {
 14093                           ;LED_B1.c: 232: RA3=~RA3;
 14094  1AF0  3008               	movlw	8
 14095  1AF1  068C               	xorwf	12,f
 14096                           
 14097                           ;LED_B1.c: 233: }
 14098  1AF2  0008               	return
 14099  1AF3                     l8005:	
 14100                           
 14101                           ;LED_B1.c: 242: else if(led == 99)
 14102  1AF3  0824               	movf	setLED_Main@led,w
 14103  1AF4  3A63               	xorlw	99
 14104  1AF5  1D03               	skipz
 14105  1AF6  0008               	return
 14106                           
 14107                           ;LED_B1.c: 243: {
 14108                           ;LED_B1.c: 244: RB5=~RB5;
 14109  1AF7  3020               	movlw	32
 14110  1AF8  068D               	xorwf	13,f
 14111  1AF9  0008               	return
 14112  1AFA                     __end_of_setLED_Main:	
 14113                           
 14114                           	psect	text82
 14115  229D                     __ptext82:	
 14116 ;; *************** function _LED_Initialization *****************
 14117 ;; Defined at:
 14118 ;;		line 35 in file "G:\Program\PIC\Source_File\LED_B1.c"
 14119 ;; Parameters:    Size  Location     Type
 14120 ;;		None
 14121 ;; Auto vars:     Size  Location     Type
 14122 ;;		None
 14123 ;; Return value:  Size  Location     Type
 14124 ;;		None               void
 14125 ;; Registers used:
 14126 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14127 ;; Tracked objects:
 14128 ;;		On entry : 0/0
 14129 ;;		On exit  : 0/0
 14130 ;;		Unchanged: 0/0
 14131 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14135 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14136 ;;Total ram usage:        0 bytes
 14137 ;; Hardware stack levels used:    1
 14138 ;; Hardware stack levels required when called:    7
 14139 ;; This function calls:
 14140 ;;		_setLED_Initialization
 14141 ;; This function is called by:
 14142 ;;		_main
 14143 ;; This function uses a non-reentrant model
 14144 ;;
 14145                           
 14146                           
 14147                           ;psect for function _LED_Initialization
 14148  229D                     _LED_Initialization:	
 14149                           
 14150                           ;LED_B1.c: 38: setLED_Initialization(1);
 14151                           
 14152                           ;incstack = 0
 14153                           ; Regs used in _LED_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14154  229D  3001               	movlw	1
 14155  229E  31A4  2463  31A2   	fcall	_setLED_Initialization
 14156                           
 14157                           ;LED_B1.c: 41: setLED_Initialization(2);
 14158  22A1  3002               	movlw	2
 14159  22A2  31A4  2463  31A2   	fcall	_setLED_Initialization
 14160                           
 14161                           ;LED_B1.c: 47: setLED_Initialization(99);
 14162  22A5  3063               	movlw	99
 14163  22A6  31A4  2463         	fcall	_setLED_Initialization
 14164  22A8  0008               	return
 14165  22A9                     __end_of_LED_Initialization:	
 14166                           
 14167                           	psect	text83
 14168  2463                     __ptext83:	
 14169 ;; *************** function _setLED_Initialization *****************
 14170 ;; Defined at:
 14171 ;;		line 67 in file "G:\Program\PIC\Source_File\LED_B1.c"
 14172 ;; Parameters:    Size  Location     Type
 14173 ;;  led             1    wreg     unsigned char 
 14174 ;; Auto vars:     Size  Location     Type
 14175 ;;  led             1    4[BANK0 ] unsigned char 
 14176 ;; Return value:  Size  Location     Type
 14177 ;;		None               void
 14178 ;; Registers used:
 14179 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14180 ;; Tracked objects:
 14181 ;;		On entry : 0/0
 14182 ;;		On exit  : 0/0
 14183 ;;		Unchanged: 0/0
 14184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14185 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14186 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14188 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14189 ;;Total ram usage:        1 bytes
 14190 ;; Hardware stack levels used:    1
 14191 ;; Hardware stack levels required when called:    6
 14192 ;; This function calls:
 14193 ;;		_LedPointSelect
 14194 ;;		_setLED
 14195 ;; This function is called by:
 14196 ;;		_LED_Initialization
 14197 ;; This function uses a non-reentrant model
 14198 ;;
 14199                           
 14200                           
 14201                           ;psect for function _setLED_Initialization
 14202  2463                     _setLED_Initialization:	
 14203                           
 14204                           ;incstack = 0
 14205                           ; Regs used in _setLED_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 14206                           ;setLED_Initialization@led stored from wreg
 14207  2463  0020               	movlb	0	; select bank0
 14208  2464  00A4               	movwf	setLED_Initialization@led
 14209                           
 14210                           ;LED_B1.c: 69: LedPointSelect(led);
 14211  2465  0824               	movf	setLED_Initialization@led,w
 14212  2466  31A7  2702  31A4   	fcall	_LedPointSelect
 14213                           
 14214                           ;LED_B1.c: 70: LED->Enable=1;
 14215  2469  0021               	movlb	1	; select bank1
 14216  246A  083C               	movf	_LED^(0+128),w
 14217  246B  0086               	movwf	6
 14218  246C  0187               	clrf	7
 14219  246D  1401               	bsf	1,0
 14220                           
 14221                           ;LED_B1.c: 71: setLED(led,0);
 14222  246E  0020               	movlb	0	; select bank0
 14223  246F  01A2               	clrf	setLED@command
 14224  2470  0824               	movf	setLED_Initialization@led,w
 14225  2471  319E  2679         	fcall	_setLED
 14226  2473  0008               	return
 14227  2474                     __end_of_setLED_Initialization:	
 14228                           
 14229                           	psect	text84
 14230  1BC3                     __ptext84:	
 14231 ;; *************** function _Flash_Memory_Main *****************
 14232 ;; Defined at:
 14233 ;;		line 468 in file "G:\Program\PIC\Source_File\MCU_16f1518_B1.c"
 14234 ;; Parameters:    Size  Location     Type
 14235 ;;		None
 14236 ;; Auto vars:     Size  Location     Type
 14237 ;;		None
 14238 ;; Return value:  Size  Location     Type
 14239 ;;		None               void
 14240 ;; Registers used:
 14241 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14242 ;; Tracked objects:
 14243 ;;		On entry : 0/0
 14244 ;;		On exit  : 0/0
 14245 ;;		Unchanged: 0/0
 14246 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14250 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14251 ;;Total ram usage:        0 bytes
 14252 ;; Hardware stack levels used:    1
 14253 ;; Hardware stack levels required when called:    7
 14254 ;; This function calls:
 14255 ;;		_Flash_Memory_Modify
 14256 ;; This function is called by:
 14257 ;;		_main
 14258 ;; This function uses a non-reentrant model
 14259 ;;
 14260                           
 14261                           
 14262                           ;psect for function _Flash_Memory_Main
 14263  1BC3                     _Flash_Memory_Main:	
 14264                           
 14265                           ;MCU_16f1518_B1.c: 470: if(Memory->GO)
 14266                           
 14267                           ;incstack = 0
 14268                           ; Regs used in _Flash_Memory_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14269  1BC3  0021               	movlb	1	; select bank1
 14270  1BC4  086B               	movf	_Memory^(0+128),w
 14271  1BC5  3E22               	addlw	34
 14272  1BC6  0086               	movwf	6
 14273  1BC7  3002               	movlw	2	; select bank4/5
 14274  1BC8  0087               	movwf	7
 14275  1BC9  1C81               	btfss	1,1
 14276  1BCA  0008               	return
 14277                           
 14278                           ;MCU_16f1518_B1.c: 471: {
 14279                           ;MCU_16f1518_B1.c: 472: if(Memory->Modify)
 14280  1BCB  086B               	movf	_Memory^(0+128),w
 14281  1BCC  3E22               	addlw	34
 14282  1BCD  0086               	movwf	6
 14283  1BCE  3002               	movlw	2	; select bank4/5
 14284  1BCF  0087               	movwf	7
 14285  1BD0  1C01               	btfss	1,0
 14286  1BD1  2C00               	goto	l8745
 14287                           
 14288                           ;MCU_16f1518_B1.c: 473: {
 14289                           ;MCU_16f1518_B1.c: 474: Memory->Time++;
 14290  1BD2  086B               	movf	_Memory^(0+128),w
 14291  1BD3  3E23               	addlw	35
 14292  1BD4  0086               	movwf	6
 14293  1BD5  3002               	movlw	2	; select bank4/5
 14294  1BD6  0087               	movwf	7
 14295  1BD7  3001               	movlw	1
 14296  1BD8  0781               	addwf	1,f
 14297  1BD9  3141               	addfsr 1,1
 14298  1BDA  1803               	skipnc
 14299  1BDB  0A81               	incf	1,f
 14300                           
 14301                           ;MCU_16f1518_B1.c: 475: if(Memory->Time == 50)
 14302  1BDC  086B               	movf	_Memory^(0+128),w
 14303  1BDD  3E23               	addlw	35
 14304  1BDE  0086               	movwf	6
 14305  1BDF  3002               	movlw	2	; select bank4/5
 14306  1BE0  0087               	movwf	7
 14307  1BE1  3F40               	moviw [0]fsr1
 14308  1BE2  3A32               	xorlw	50
 14309  1BE3  1D03               	skipz
 14310  1BE4  2BE7               	goto	u7695
 14311  1BE5  3F41               	moviw [1]fsr1
 14312  1BE6  3A00               	xorlw	0
 14313  1BE7                     u7695:	
 14314  1BE7  1D03               	skipz
 14315  1BE8  0008               	return
 14316                           
 14317                           ;MCU_16f1518_B1.c: 476: {
 14318                           ;MCU_16f1518_B1.c: 477: Memory->Time=0;
 14319  1BE9  086B               	movf	_Memory^(0+128),w
 14320  1BEA  3E23               	addlw	35
 14321  1BEB  0086               	movwf	6
 14322  1BEC  3002               	movlw	2	; select bank4/5
 14323  1BED  0087               	movwf	7
 14324  1BEE  3000               	movlw	0
 14325  1BEF  3FC0               	movwi [0]fsr1
 14326  1BF0  3FC1               	movwi [1]fsr1
 14327                           
 14328                           ;MCU_16f1518_B1.c: 478: Memory->Modify=0;
 14329  1BF1  086B               	movf	_Memory^(0+128),w
 14330  1BF2  3E22               	addlw	34
 14331  1BF3  0086               	movwf	6
 14332  1BF4  3002               	movlw	2	; select bank4/5
 14333  1BF5  0087               	movwf	7
 14334  1BF6  1001               	bcf	1,0
 14335                           
 14336                           ;MCU_16f1518_B1.c: 479: Memory->GO=0;
 14337  1BF7  086B               	movf	_Memory^(0+128),w
 14338  1BF8  3E22               	addlw	34
 14339  1BF9  0086               	movwf	6
 14340  1BFA  3002               	movlw	2	; select bank4/5
 14341  1BFB  0087               	movwf	7
 14342  1BFC  1081               	bcf	1,1
 14343                           
 14344                           ;MCU_16f1518_B1.c: 480: Flash_Memory_Modify();
 14345  1BFD  3193  2390         	fcall	_Flash_Memory_Modify
 14346                           
 14347                           ;MCU_16f1518_B1.c: 481: }
 14348                           ;MCU_16f1518_B1.c: 482: }
 14349  1BFF  0008               	return
 14350  1C00                     l8745:	
 14351                           
 14352                           ;MCU_16f1518_B1.c: 483: else
 14353                           ;MCU_16f1518_B1.c: 484: {
 14354                           ;MCU_16f1518_B1.c: 485: Memory->GO=0;
 14355  1C00  0021               	movlb	1	; select bank1
 14356  1C01  086B               	movf	_Memory^(0+128),w
 14357  1C02  3E22               	addlw	34
 14358  1C03  0086               	movwf	6
 14359  1C04  3002               	movlw	2	; select bank4/5
 14360  1C05  0087               	movwf	7
 14361  1C06  1081               	bcf	1,1
 14362  1C07  0008               	return
 14363  1C08                     __end_of_Flash_Memory_Main:	
 14364                           
 14365                           	psect	text85
 14366  1390                     __ptext85:	
 14367 ;; *************** function _Flash_Memory_Modify *****************
 14368 ;; Defined at:
 14369 ;;		line 542 in file "G:\Program\PIC\Source_File\MCU_16f1518_B1.c"
 14370 ;; Parameters:    Size  Location     Type
 14371 ;;		None
 14372 ;; Auto vars:     Size  Location     Type
 14373 ;;  i               1    6[BANK0 ] unsigned char 
 14374 ;; Return value:  Size  Location     Type
 14375 ;;		None               void
 14376 ;; Registers used:
 14377 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14378 ;; Tracked objects:
 14379 ;;		On entry : 0/0
 14380 ;;		On exit  : 0/0
 14381 ;;		Unchanged: 0/0
 14382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14384 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14385 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14386 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14387 ;;Total ram usage:        3 bytes
 14388 ;; Hardware stack levels used:    1
 14389 ;; Hardware stack levels required when called:    6
 14390 ;; This function calls:
 14391 ;;		_Flash_Memory_Erasing
 14392 ;;		_Flash_Memory_Read
 14393 ;;		_Flash_Memory_Write
 14394 ;; This function is called by:
 14395 ;;		_Flash_Memory_Main
 14396 ;; This function uses a non-reentrant model
 14397 ;;
 14398                           
 14399                           
 14400                           ;psect for function _Flash_Memory_Modify
 14401  1390                     _Flash_Memory_Modify:	
 14402                           
 14403                           ;MCU_16f1518_B1.c: 544: char i;
 14404                           ;MCU_16f1518_B1.c: 545: for(i=0;i<32;i++)
 14405                           
 14406                           ;incstack = 0
 14407                           ; Regs used in _Flash_Memory_Modify: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14408  1390  0020               	movlb	0	; select bank0
 14409  1391  01A6               	clrf	Flash_Memory_Modify@i
 14410  1392  3020               	movlw	32
 14411  1393  0226               	subwf	Flash_Memory_Modify@i,w
 14412  1394  1803               	btfsc	3,0
 14413  1395  2BAF               	goto	l8097
 14414  1396                     l8091:	
 14415                           
 14416                           ;MCU_16f1518_B1.c: 546: {
 14417                           ;MCU_16f1518_B1.c: 547: Memory->Data[i]=Flash_Memory_Read(i);
 14418  1396  0826               	movf	Flash_Memory_Modify@i,w
 14419  1397  31A5  25A0  3193   	fcall	_Flash_Memory_Read
 14420  139A  0020               	movlb	0	; select bank0
 14421  139B  00A4               	movwf	??_Flash_Memory_Modify
 14422  139C  0826               	movf	Flash_Memory_Modify@i,w
 14423  139D  0021               	movlb	1	; select bank1
 14424  139E  076B               	addwf	_Memory^(0+128),w
 14425  139F  0020               	movlb	0	; select bank0
 14426  13A0  00A5               	movwf	??_Flash_Memory_Modify+1
 14427  13A1  0825               	movf	??_Flash_Memory_Modify+1,w
 14428  13A2  0086               	movwf	6
 14429  13A3  3002               	movlw	2	; select bank4/5
 14430  13A4  0087               	movwf	7
 14431  13A5  0824               	movf	??_Flash_Memory_Modify,w
 14432  13A6  0081               	movwf	1
 14433  13A7  3001               	movlw	1
 14434  13A8  00A4               	movwf	??_Flash_Memory_Modify
 14435  13A9  0824               	movf	??_Flash_Memory_Modify,w
 14436  13AA  07A6               	addwf	Flash_Memory_Modify@i,f
 14437  13AB  3020               	movlw	32
 14438  13AC  0226               	subwf	Flash_Memory_Modify@i,w
 14439  13AD  1C03               	skipc
 14440  13AE  2B96               	goto	l8091
 14441  13AF                     l8097:	
 14442                           
 14443                           ;MCU_16f1518_B1.c: 548: }
 14444                           ;MCU_16f1518_B1.c: 549: Memory->Data[0]=Product->Data[12];
 14445  13AF  0021               	movlb	1	; select bank1
 14446  13B0  086C               	movf	_Product^(0+128),w
 14447  13B1  3E0C               	addlw	12
 14448  13B2  0086               	movwf	6
 14449  13B3  3001               	movlw	1	; select bank2/3
 14450  13B4  0087               	movwf	7
 14451  13B5  0801               	movf	1,w
 14452  13B6  0020               	movlb	0	; select bank0
 14453  13B7  00A4               	movwf	??_Flash_Memory_Modify
 14454  13B8  0021               	movlb	1	; select bank1
 14455  13B9  086B               	movf	_Memory^(0+128),w
 14456  13BA  0086               	movwf	6
 14457  13BB  3002               	movlw	2	; select bank4/5
 14458  13BC  0087               	movwf	7
 14459  13BD  0020               	movlb	0	; select bank0
 14460  13BE  0824               	movf	??_Flash_Memory_Modify,w
 14461  13BF  0081               	movwf	1
 14462                           
 14463                           ;MCU_16f1518_B1.c: 550: Memory->Data[1]=Product->Data[13];
 14464  13C0  0021               	movlb	1	; select bank1
 14465  13C1  086C               	movf	_Product^(0+128),w
 14466  13C2  3E0D               	addlw	13
 14467  13C3  0086               	movwf	6
 14468  13C4  3001               	movlw	1	; select bank2/3
 14469  13C5  0087               	movwf	7
 14470  13C6  0801               	movf	1,w
 14471  13C7  0020               	movlb	0	; select bank0
 14472  13C8  00A4               	movwf	??_Flash_Memory_Modify
 14473  13C9  0021               	movlb	1	; select bank1
 14474  13CA  0A6B               	incf	_Memory^(0+128),w
 14475  13CB  0086               	movwf	6
 14476  13CC  3002               	movlw	2	; select bank4/5
 14477  13CD  0087               	movwf	7
 14478  13CE  0020               	movlb	0	; select bank0
 14479  13CF  0824               	movf	??_Flash_Memory_Modify,w
 14480  13D0  0081               	movwf	1
 14481                           
 14482                           ;MCU_16f1518_B1.c: 551: Memory->Data[2]=Product->Data[14];
 14483  13D1  0021               	movlb	1	; select bank1
 14484  13D2  086C               	movf	_Product^(0+128),w
 14485  13D3  3E0E               	addlw	14
 14486  13D4  0086               	movwf	6
 14487  13D5  3001               	movlw	1	; select bank2/3
 14488  13D6  0087               	movwf	7
 14489  13D7  0801               	movf	1,w
 14490  13D8  0020               	movlb	0	; select bank0
 14491  13D9  00A4               	movwf	??_Flash_Memory_Modify
 14492  13DA  0021               	movlb	1	; select bank1
 14493  13DB  086B               	movf	_Memory^(0+128),w
 14494  13DC  3E02               	addlw	2
 14495  13DD  0086               	movwf	6
 14496  13DE  3002               	movlw	2	; select bank4/5
 14497  13DF  0087               	movwf	7
 14498  13E0  0020               	movlb	0	; select bank0
 14499  13E1  0824               	movf	??_Flash_Memory_Modify,w
 14500  13E2  0081               	movwf	1
 14501                           
 14502                           ;MCU_16f1518_B1.c: 557: if(Memory->LoopSave)
 14503  13E3  0021               	movlb	1	; select bank1
 14504  13E4  086B               	movf	_Memory^(0+128),w
 14505  13E5  3E22               	addlw	34
 14506  13E6  0086               	movwf	6
 14507  13E7  3002               	movlw	2	; select bank4/5
 14508  13E8  0087               	movwf	7
 14509  13E9  1D01               	btfss	1,2
 14510  13EA  2C03               	goto	l8101
 14511                           
 14512                           ;MCU_16f1518_B1.c: 558: {
 14513                           ;MCU_16f1518_B1.c: 559: Memory->LoopSave=0;
 14514  13EB  086B               	movf	_Memory^(0+128),w
 14515  13EC  3E22               	addlw	34
 14516  13ED  0086               	movwf	6
 14517  13EE  3002               	movlw	2	; select bank4/5
 14518  13EF  0087               	movwf	7
 14519  13F0  1101               	bcf	1,2
 14520                           
 14521                           ;MCU_16f1518_B1.c: 560: TMain->FirstOpen=0;
 14522  13F1  086D               	movf	_TMain^(0+128),w
 14523  13F2  0086               	movwf	6
 14524  13F3  3001               	movlw	1	; select bank2/3
 14525  13F4  0087               	movwf	7
 14526  13F5  1281               	bcf	1,5
 14527                           
 14528                           ;MCU_16f1518_B1.c: 561: TMain->First=0;
 14529  13F6  086D               	movf	_TMain^(0+128),w
 14530  13F7  3E03               	addlw	3
 14531  13F8  0086               	movwf	6
 14532  13F9  3001               	movlw	1	; select bank2/3
 14533  13FA  0087               	movwf	7
 14534  13FB  1081               	bcf	1,1
 14535                           
 14536                           ;MCU_16f1518_B1.c: 562: Memory->Data[30]=1;
 14537  13FC  086B               	movf	_Memory^(0+128),w
 14538  13FD  3E1E               	addlw	30
 14539  13FE  0086               	movwf	6
 14540  13FF  3002               	movlw	2	; select bank4/5
 14541  1400  0087               	movwf	7
 14542  1401  0181               	clrf	1
 14543  1402  0A81               	incf	1,f
 14544  1403                     l8101:	
 14545                           
 14546                           ;MCU_16f1518_B1.c: 563: }
 14547                           ;MCU_16f1518_B1.c: 564: GIE=0;
 14548  1403  138B               	bcf	11,7	;volatile
 14549                           
 14550                           ;MCU_16f1518_B1.c: 565: Flash_Memory_Erasing();
 14551  1404  31A2  2291  3193   	fcall	_Flash_Memory_Erasing
 14552                           
 14553                           ;MCU_16f1518_B1.c: 566: Flash_Memory_Write();
 14554  1407  3187  27CF         	fcall	_Flash_Memory_Write
 14555                           
 14556                           ;MCU_16f1518_B1.c: 567: GIE=1;
 14557  1409  178B               	bsf	11,7	;volatile
 14558  140A  0008               	return
 14559  140B                     __end_of_Flash_Memory_Modify:	
 14560                           
 14561                           	psect	text86
 14562  2291                     __ptext86:	
 14563 ;; *************** function _Flash_Memory_Erasing *****************
 14564 ;; Defined at:
 14565 ;;		line 531 in file "G:\Program\PIC\Source_File\MCU_16f1518_B1.c"
 14566 ;; Parameters:    Size  Location     Type
 14567 ;;		None
 14568 ;; Auto vars:     Size  Location     Type
 14569 ;;		None
 14570 ;; Return value:  Size  Location     Type
 14571 ;;		None               void
 14572 ;; Registers used:
 14573 ;;		wreg, status,2, status,0, pclath, cstack
 14574 ;; Tracked objects:
 14575 ;;		On entry : 0/0
 14576 ;;		On exit  : 0/0
 14577 ;;		Unchanged: 0/0
 14578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14582 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14583 ;;Total ram usage:        0 bytes
 14584 ;; Hardware stack levels used:    1
 14585 ;; Hardware stack levels required when called:    5
 14586 ;; This function calls:
 14587 ;;		_Flash_Memory_Unlock
 14588 ;; This function is called by:
 14589 ;;		_Flash_Memory_Modify
 14590 ;; This function uses a non-reentrant model
 14591 ;;
 14592                           
 14593                           
 14594                           ;psect for function _Flash_Memory_Erasing
 14595  2291                     _Flash_Memory_Erasing:	
 14596                           
 14597                           ;MCU_16f1518_B1.c: 533: CFGS=0;
 14598                           
 14599                           ;incstack = 0
 14600                           ; Regs used in _Flash_Memory_Erasing: [wreg+status,2+status,0+pclath+cstack]
 14601  2291  0023               	movlb	3	; select bank3
 14602  2292  1315               	bcf	21,6	;volatile
 14603                           
 14604                           ;MCU_16f1518_B1.c: 534: PMADRH=0x30;
 14605  2293  3030               	movlw	48
 14606  2294  0092               	movwf	18	;volatile
 14607                           
 14608                           ;MCU_16f1518_B1.c: 535: PMADRL=0x00;
 14609  2295  0191               	clrf	17	;volatile
 14610                           
 14611                           ;MCU_16f1518_B1.c: 536: FREE=1;
 14612  2296  1615               	bsf	21,4	;volatile
 14613                           
 14614                           ;MCU_16f1518_B1.c: 537: WREN=1;
 14615  2297  1515               	bsf	21,2	;volatile
 14616                           
 14617                           ;MCU_16f1518_B1.c: 538: Flash_Memory_Unlock();
 14618  2298  31A2  220A         	fcall	_Flash_Memory_Unlock
 14619                           
 14620                           ;MCU_16f1518_B1.c: 539: WREN=0;
 14621  229A  0023               	movlb	3	; select bank3
 14622  229B  1115               	bcf	21,2	;volatile
 14623  229C  0008               	return
 14624  229D                     __end_of_Flash_Memory_Erasing:	
 14625                           
 14626                           	psect	text87
 14627  0B25                     __ptext87:	
 14628 ;; *************** function _Flash_Memory_Initialization *****************
 14629 ;; Defined at:
 14630 ;;		line 429 in file "G:\Program\PIC\Source_File\MCU_16f1518_B1.c"
 14631 ;; Parameters:    Size  Location     Type
 14632 ;;		None
 14633 ;; Auto vars:     Size  Location     Type
 14634 ;;  i               1   62[BANK0 ] unsigned char 
 14635 ;; Return value:  Size  Location     Type
 14636 ;;		None               void
 14637 ;; Registers used:
 14638 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14639 ;; Tracked objects:
 14640 ;;		On entry : 0/0
 14641 ;;		On exit  : 0/0
 14642 ;;		Unchanged: 0/0
 14643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14645 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14646 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14647 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14648 ;;Total ram usage:        2 bytes
 14649 ;; Hardware stack levels used:    1
 14650 ;; Hardware stack levels required when called:    7
 14651 ;; This function calls:
 14652 ;;		_Flash_Memory_Read
 14653 ;;		_Flash_Memory_Write
 14654 ;;		_setPercentValue
 14655 ;; This function is called by:
 14656 ;;		_main
 14657 ;; This function uses a non-reentrant model
 14658 ;;
 14659                           
 14660                           
 14661                           ;psect for function _Flash_Memory_Initialization
 14662  0B25                     _Flash_Memory_Initialization:	
 14663                           
 14664                           ;MCU_16f1518_B1.c: 431: char i;
 14665                           ;MCU_16f1518_B1.c: 432: if(Flash_Memory_Read(31) == 0xaa)
 14666                           
 14667                           ;incstack = 0
 14668                           ; Regs used in _Flash_Memory_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 14669  0B25  301F               	movlw	31
 14670  0B26  31A5  25A0  318B   	fcall	_Flash_Memory_Read
 14671  0B29  3AAA               	xorlw	170
 14672  0B2A  1D03               	skipz
 14673  0B2B  2B96               	goto	l8601
 14674                           
 14675                           ;MCU_16f1518_B1.c: 433: {
 14676                           ;MCU_16f1518_B1.c: 434: Product->Data[12]=Flash_Memory_Read(0);
 14677  0B2C  3000               	movlw	0
 14678  0B2D  31A5  25A0  318B   	fcall	_Flash_Memory_Read
 14679  0B30  0020               	movlb	0	; select bank0
 14680  0B31  00DD               	movwf	??_Flash_Memory_Initialization
 14681  0B32  0021               	movlb	1	; select bank1
 14682  0B33  086C               	movf	_Product^(0+128),w
 14683  0B34  3E0C               	addlw	12
 14684  0B35  0086               	movwf	6
 14685  0B36  3001               	movlw	1	; select bank2/3
 14686  0B37  0087               	movwf	7
 14687  0B38  0020               	movlb	0	; select bank0
 14688  0B39  085D               	movf	??_Flash_Memory_Initialization,w
 14689  0B3A  0081               	movwf	1
 14690                           
 14691                           ;MCU_16f1518_B1.c: 435: Product->Data[13]=Flash_Memory_Read(1);
 14692  0B3B  3001               	movlw	1
 14693  0B3C  31A5  25A0  318B   	fcall	_Flash_Memory_Read
 14694  0B3F  0020               	movlb	0	; select bank0
 14695  0B40  00DD               	movwf	??_Flash_Memory_Initialization
 14696  0B41  0021               	movlb	1	; select bank1
 14697  0B42  086C               	movf	_Product^(0+128),w
 14698  0B43  3E0D               	addlw	13
 14699  0B44  0086               	movwf	6
 14700  0B45  3001               	movlw	1	; select bank2/3
 14701  0B46  0087               	movwf	7
 14702  0B47  0020               	movlb	0	; select bank0
 14703  0B48  085D               	movf	??_Flash_Memory_Initialization,w
 14704  0B49  0081               	movwf	1
 14705                           
 14706                           ;MCU_16f1518_B1.c: 436: Product->Data[14]=Flash_Memory_Read(2);
 14707  0B4A  3002               	movlw	2
 14708  0B4B  31A5  25A0  318B   	fcall	_Flash_Memory_Read
 14709  0B4E  0020               	movlb	0	; select bank0
 14710  0B4F  00DD               	movwf	??_Flash_Memory_Initialization
 14711  0B50  0021               	movlb	1	; select bank1
 14712  0B51  086C               	movf	_Product^(0+128),w
 14713  0B52  3E0E               	addlw	14
 14714  0B53  0086               	movwf	6
 14715  0B54  3001               	movlw	1	; select bank2/3
 14716  0B55  0087               	movwf	7
 14717  0B56  0020               	movlb	0	; select bank0
 14718  0B57  085D               	movf	??_Flash_Memory_Initialization,w
 14719  0B58  0081               	movwf	1
 14720                           
 14721                           ;MCU_16f1518_B1.c: 442: i=setPercentValue(((char)((100-60)*1.5)));
 14722  0B59  303C               	movlw	60
 14723  0B5A  319C  2408  318B   	fcall	_setPercentValue
 14724  0B5D  0020               	movlb	0	; select bank0
 14725  0B5E  00DD               	movwf	??_Flash_Memory_Initialization
 14726  0B5F  085D               	movf	??_Flash_Memory_Initialization,w
 14727  0B60  00DE               	movwf	Flash_Memory_Initialization@i
 14728                           
 14729                           ;MCU_16f1518_B1.c: 443: Product->Data[21]=i;
 14730  0B61  085E               	movf	Flash_Memory_Initialization@i,w
 14731  0B62  00DD               	movwf	??_Flash_Memory_Initialization
 14732  0B63  0021               	movlb	1	; select bank1
 14733  0B64  086C               	movf	_Product^(0+128),w
 14734  0B65  3E15               	addlw	21
 14735  0B66  0086               	movwf	6
 14736  0B67  3001               	movlw	1	; select bank2/3
 14737  0B68  0087               	movwf	7
 14738  0B69  0020               	movlb	0	; select bank0
 14739  0B6A  085D               	movf	??_Flash_Memory_Initialization,w
 14740  0B6B  0081               	movwf	1
 14741                           
 14742                           ;MCU_16f1518_B1.c: 444: Product->Data[22]=i;
 14743  0B6C  085E               	movf	Flash_Memory_Initialization@i,w
 14744  0B6D  00DD               	movwf	??_Flash_Memory_Initialization
 14745  0B6E  0021               	movlb	1	; select bank1
 14746  0B6F  086C               	movf	_Product^(0+128),w
 14747  0B70  3E16               	addlw	22
 14748  0B71  0086               	movwf	6
 14749  0B72  3001               	movlw	1	; select bank2/3
 14750  0B73  0087               	movwf	7
 14751  0B74  0020               	movlb	0	; select bank0
 14752  0B75  085D               	movf	??_Flash_Memory_Initialization,w
 14753  0B76  0081               	movwf	1
 14754                           
 14755                           ;MCU_16f1518_B1.c: 445: Product->Data[23]=i;
 14756  0B77  085E               	movf	Flash_Memory_Initialization@i,w
 14757  0B78  00DD               	movwf	??_Flash_Memory_Initialization
 14758  0B79  0021               	movlb	1	; select bank1
 14759  0B7A  086C               	movf	_Product^(0+128),w
 14760  0B7B  3E17               	addlw	23
 14761  0B7C  0086               	movwf	6
 14762  0B7D  3001               	movlw	1	; select bank2/3
 14763  0B7E  0087               	movwf	7
 14764  0B7F  0020               	movlb	0	; select bank0
 14765  0B80  085D               	movf	??_Flash_Memory_Initialization,w
 14766  0B81  0081               	movwf	1
 14767                           
 14768                           ;MCU_16f1518_B1.c: 447: if(Flash_Memory_Read(30) == 1)
 14769  0B82  301E               	movlw	30
 14770  0B83  31A5  25A0  318B   	fcall	_Flash_Memory_Read
 14771  0B86  3A01               	xorlw	1
 14772  0B87  1D03               	skipz
 14773  0B88  0008               	return
 14774                           
 14775                           ;MCU_16f1518_B1.c: 448: {
 14776                           ;MCU_16f1518_B1.c: 449: TMain->FirstOpen=0;
 14777  0B89  0021               	movlb	1	; select bank1
 14778  0B8A  086D               	movf	_TMain^(0+128),w
 14779  0B8B  0086               	movwf	6
 14780  0B8C  3001               	movlw	1	; select bank2/3
 14781  0B8D  0087               	movwf	7
 14782  0B8E  1281               	bcf	1,5
 14783                           
 14784                           ;MCU_16f1518_B1.c: 450: TMain->First=0;
 14785  0B8F  086D               	movf	_TMain^(0+128),w
 14786  0B90  3E03               	addlw	3
 14787  0B91  0086               	movwf	6
 14788  0B92  3001               	movlw	1	; select bank2/3
 14789  0B93  0087               	movwf	7
 14790  0B94  1081               	bcf	1,1
 14791                           
 14792                           ;MCU_16f1518_B1.c: 451: }
 14793                           ;MCU_16f1518_B1.c: 452: }
 14794  0B95  0008               	return
 14795  0B96                     l8601:	
 14796                           
 14797                           ;MCU_16f1518_B1.c: 453: else
 14798                           ;MCU_16f1518_B1.c: 454: {
 14799                           ;MCU_16f1518_B1.c: 455: i=setPercentValue(((char)((100-60)*1.5)));
 14800  0B96  303C               	movlw	60
 14801  0B97  319C  2408  318B   	fcall	_setPercentValue
 14802  0B9A  0020               	movlb	0	; select bank0
 14803  0B9B  00DD               	movwf	??_Flash_Memory_Initialization
 14804  0B9C  085D               	movf	??_Flash_Memory_Initialization,w
 14805  0B9D  00DE               	movwf	Flash_Memory_Initialization@i
 14806                           
 14807                           ;MCU_16f1518_B1.c: 456: Memory->Data[3]=i;
 14808  0B9E  085E               	movf	Flash_Memory_Initialization@i,w
 14809  0B9F  00DD               	movwf	??_Flash_Memory_Initialization
 14810  0BA0  0021               	movlb	1	; select bank1
 14811  0BA1  086B               	movf	_Memory^(0+128),w
 14812  0BA2  3E03               	addlw	3
 14813  0BA3  0086               	movwf	6
 14814  0BA4  3002               	movlw	2	; select bank4/5
 14815  0BA5  0087               	movwf	7
 14816  0BA6  0020               	movlb	0	; select bank0
 14817  0BA7  085D               	movf	??_Flash_Memory_Initialization,w
 14818  0BA8  0081               	movwf	1
 14819                           
 14820                           ;MCU_16f1518_B1.c: 457: Memory->Data[4]=i;
 14821  0BA9  085E               	movf	Flash_Memory_Initialization@i,w
 14822  0BAA  00DD               	movwf	??_Flash_Memory_Initialization
 14823  0BAB  0021               	movlb	1	; select bank1
 14824  0BAC  086B               	movf	_Memory^(0+128),w
 14825  0BAD  3E04               	addlw	4
 14826  0BAE  0086               	movwf	6
 14827  0BAF  3002               	movlw	2	; select bank4/5
 14828  0BB0  0087               	movwf	7
 14829  0BB1  0020               	movlb	0	; select bank0
 14830  0BB2  085D               	movf	??_Flash_Memory_Initialization,w
 14831  0BB3  0081               	movwf	1
 14832                           
 14833                           ;MCU_16f1518_B1.c: 458: Memory->Data[5]=i;
 14834  0BB4  085E               	movf	Flash_Memory_Initialization@i,w
 14835  0BB5  00DD               	movwf	??_Flash_Memory_Initialization
 14836  0BB6  0021               	movlb	1	; select bank1
 14837  0BB7  086B               	movf	_Memory^(0+128),w
 14838  0BB8  3E05               	addlw	5
 14839  0BB9  0086               	movwf	6
 14840  0BBA  3002               	movlw	2	; select bank4/5
 14841  0BBB  0087               	movwf	7
 14842  0BBC  0020               	movlb	0	; select bank0
 14843  0BBD  085D               	movf	??_Flash_Memory_Initialization,w
 14844  0BBE  0081               	movwf	1
 14845                           
 14846                           ;MCU_16f1518_B1.c: 459: Product->Data[21]=i;
 14847  0BBF  085E               	movf	Flash_Memory_Initialization@i,w
 14848  0BC0  00DD               	movwf	??_Flash_Memory_Initialization
 14849  0BC1  0021               	movlb	1	; select bank1
 14850  0BC2  086C               	movf	_Product^(0+128),w
 14851  0BC3  3E15               	addlw	21
 14852  0BC4  0086               	movwf	6
 14853  0BC5  3001               	movlw	1	; select bank2/3
 14854  0BC6  0087               	movwf	7
 14855  0BC7  0020               	movlb	0	; select bank0
 14856  0BC8  085D               	movf	??_Flash_Memory_Initialization,w
 14857  0BC9  0081               	movwf	1
 14858                           
 14859                           ;MCU_16f1518_B1.c: 460: Product->Data[22]=i;
 14860  0BCA  085E               	movf	Flash_Memory_Initialization@i,w
 14861  0BCB  00DD               	movwf	??_Flash_Memory_Initialization
 14862  0BCC  0021               	movlb	1	; select bank1
 14863  0BCD  086C               	movf	_Product^(0+128),w
 14864  0BCE  3E16               	addlw	22
 14865  0BCF  0086               	movwf	6
 14866  0BD0  3001               	movlw	1	; select bank2/3
 14867  0BD1  0087               	movwf	7
 14868  0BD2  0020               	movlb	0	; select bank0
 14869  0BD3  085D               	movf	??_Flash_Memory_Initialization,w
 14870  0BD4  0081               	movwf	1
 14871                           
 14872                           ;MCU_16f1518_B1.c: 461: Product->Data[23]=i;
 14873  0BD5  085E               	movf	Flash_Memory_Initialization@i,w
 14874  0BD6  00DD               	movwf	??_Flash_Memory_Initialization
 14875  0BD7  0021               	movlb	1	; select bank1
 14876  0BD8  086C               	movf	_Product^(0+128),w
 14877  0BD9  3E17               	addlw	23
 14878  0BDA  0086               	movwf	6
 14879  0BDB  3001               	movlw	1	; select bank2/3
 14880  0BDC  0087               	movwf	7
 14881  0BDD  0020               	movlb	0	; select bank0
 14882  0BDE  085D               	movf	??_Flash_Memory_Initialization,w
 14883  0BDF  0081               	movwf	1
 14884                           
 14885                           ;MCU_16f1518_B1.c: 462: GIE=0;
 14886  0BE0  138B               	bcf	11,7	;volatile
 14887                           
 14888                           ;MCU_16f1518_B1.c: 463: Flash_Memory_Write();
 14889  0BE1  3187  27CF         	fcall	_Flash_Memory_Write
 14890                           
 14891                           ;MCU_16f1518_B1.c: 464: GIE=1;
 14892  0BE3  178B               	bsf	11,7	;volatile
 14893  0BE4  0008               	return
 14894  0BE5                     __end_of_Flash_Memory_Initialization:	
 14895                           
 14896                           	psect	text88
 14897  07CF                     __ptext88:	
 14898 ;; *************** function _Flash_Memory_Write *****************
 14899 ;; Defined at:
 14900 ;;		line 511 in file "G:\Program\PIC\Source_File\MCU_16f1518_B1.c"
 14901 ;; Parameters:    Size  Location     Type
 14902 ;;		None
 14903 ;; Auto vars:     Size  Location     Type
 14904 ;;  i               1    1[BANK0 ] unsigned char 
 14905 ;; Return value:  Size  Location     Type
 14906 ;;		None               void
 14907 ;; Registers used:
 14908 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14909 ;; Tracked objects:
 14910 ;;		On entry : 0/0
 14911 ;;		On exit  : 0/0
 14912 ;;		Unchanged: 0/0
 14913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14914 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14915 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14916 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14917 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14918 ;;Total ram usage:        2 bytes
 14919 ;; Hardware stack levels used:    1
 14920 ;; Hardware stack levels required when called:    5
 14921 ;; This function calls:
 14922 ;;		_Flash_Memory_Unlock
 14923 ;; This function is called by:
 14924 ;;		_Flash_Memory_Initialization
 14925 ;;		_Flash_Memory_Modify
 14926 ;; This function uses a non-reentrant model
 14927 ;;
 14928                           
 14929                           
 14930                           ;psect for function _Flash_Memory_Write
 14931  07CF                     _Flash_Memory_Write:	
 14932                           
 14933                           ;MCU_16f1518_B1.c: 513: char i;
 14934                           ;MCU_16f1518_B1.c: 514: CFGS=0;
 14935                           
 14936                           ;incstack = 0
 14937                           ; Regs used in _Flash_Memory_Write: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14938  07CF  0023               	movlb	3	; select bank3
 14939  07D0  1315               	bcf	21,6	;volatile
 14940                           
 14941                           ;MCU_16f1518_B1.c: 515: PMADRH=0x30;
 14942  07D1  3030               	movlw	48
 14943  07D2  0092               	movwf	18	;volatile
 14944                           
 14945                           ;MCU_16f1518_B1.c: 516: PMDATH=0;
 14946  07D3  0194               	clrf	20	;volatile
 14947                           
 14948                           ;MCU_16f1518_B1.c: 517: FREE=0;
 14949  07D4  1215               	bcf	21,4	;volatile
 14950                           
 14951                           ;MCU_16f1518_B1.c: 518: LWLO=1;
 14952  07D5  1695               	bsf	21,5	;volatile
 14953                           
 14954                           ;MCU_16f1518_B1.c: 519: WREN=1;
 14955  07D6  1515               	bsf	21,2	;volatile
 14956                           
 14957                           ;MCU_16f1518_B1.c: 520: for(i=0 ; i<32 ; i++)
 14958  07D7  0020               	movlb	0	; select bank0
 14959  07D8  01A1               	clrf	Flash_Memory_Write@i
 14960  07D9  3020               	movlw	32
 14961  07DA  0221               	subwf	Flash_Memory_Write@i,w
 14962  07DB  1803               	btfsc	3,0
 14963  07DC  2FF9               	goto	l1695
 14964  07DD                     l7505:	
 14965                           
 14966                           ;MCU_16f1518_B1.c: 521: {
 14967                           ;MCU_16f1518_B1.c: 522: PMADRL=i;
 14968  07DD  0821               	movf	Flash_Memory_Write@i,w
 14969  07DE  0023               	movlb	3	; select bank3
 14970  07DF  0091               	movwf	17	;volatile
 14971                           
 14972                           ;MCU_16f1518_B1.c: 523: PMDATL=Memory->Data[i];
 14973  07E0  0020               	movlb	0	; select bank0
 14974  07E1  0821               	movf	Flash_Memory_Write@i,w
 14975  07E2  0021               	movlb	1	; select bank1
 14976  07E3  076B               	addwf	_Memory^(0+128),w
 14977  07E4  0020               	movlb	0	; select bank0
 14978  07E5  00A0               	movwf	??_Flash_Memory_Write
 14979  07E6  0820               	movf	??_Flash_Memory_Write,w
 14980  07E7  0086               	movwf	6
 14981  07E8  3002               	movlw	2	; select bank4/5
 14982  07E9  0087               	movwf	7
 14983  07EA  0801               	movf	1,w
 14984  07EB  0023               	movlb	3	; select bank3
 14985  07EC  0093               	movwf	19	;volatile
 14986                           
 14987                           ;MCU_16f1518_B1.c: 524: Flash_Memory_Unlock();
 14988  07ED  31A2  220A  3187   	fcall	_Flash_Memory_Unlock
 14989  07F0  3001               	movlw	1
 14990  07F1  0020               	movlb	0	; select bank0
 14991  07F2  00A0               	movwf	??_Flash_Memory_Write
 14992  07F3  0820               	movf	??_Flash_Memory_Write,w
 14993  07F4  07A1               	addwf	Flash_Memory_Write@i,f
 14994  07F5  3020               	movlw	32
 14995  07F6  0221               	subwf	Flash_Memory_Write@i,w
 14996  07F7  1C03               	skipc
 14997  07F8  2FDD               	goto	l7505
 14998  07F9                     l1695:	
 14999                           
 15000                           ;MCU_16f1518_B1.c: 525: }
 15001                           ;MCU_16f1518_B1.c: 526: LWLO=0;
 15002  07F9  0023               	movlb	3	; select bank3
 15003  07FA  1295               	bcf	21,5	;volatile
 15004                           
 15005                           ;MCU_16f1518_B1.c: 527: Flash_Memory_Unlock();
 15006  07FB  31A2  220A         	fcall	_Flash_Memory_Unlock
 15007                           
 15008                           ;MCU_16f1518_B1.c: 528: WREN=0;
 15009  07FD  0023               	movlb	3	; select bank3
 15010  07FE  1115               	bcf	21,2	;volatile
 15011  07FF  0008               	return
 15012  0800                     __end_of_Flash_Memory_Write:	
 15013                           
 15014                           	psect	text89
 15015  220A                     __ptext89:	
 15016 ;; *************** function _Flash_Memory_Unlock *****************
 15017 ;; Defined at:
 15018 ;;		line 490 in file "G:\Program\PIC\Source_File\MCU_16f1518_B1.c"
 15019 ;; Parameters:    Size  Location     Type
 15020 ;;		None
 15021 ;; Auto vars:     Size  Location     Type
 15022 ;;		None
 15023 ;; Return value:  Size  Location     Type
 15024 ;;		None               void
 15025 ;; Registers used:
 15026 ;;		wreg
 15027 ;; Tracked objects:
 15028 ;;		On entry : 0/0
 15029 ;;		On exit  : 0/0
 15030 ;;		Unchanged: 0/0
 15031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15035 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15036 ;;Total ram usage:        0 bytes
 15037 ;; Hardware stack levels used:    1
 15038 ;; Hardware stack levels required when called:    4
 15039 ;; This function calls:
 15040 ;;		Nothing
 15041 ;; This function is called by:
 15042 ;;		_Flash_Memory_Write
 15043 ;;		_Flash_Memory_Erasing
 15044 ;; This function uses a non-reentrant model
 15045 ;;
 15046                           
 15047                           
 15048                           ;psect for function _Flash_Memory_Unlock
 15049  220A                     _Flash_Memory_Unlock:	
 15050                           
 15051                           ;MCU_16f1518_B1.c: 492: PMCON2=0x55;
 15052                           
 15053                           ;incstack = 0
 15054                           ; Regs used in _Flash_Memory_Unlock: [wreg]
 15055  220A  3055               	movlw	85
 15056  220B  0023               	movlb	3	; select bank3
 15057  220C  0096               	movwf	22	;volatile
 15058                           
 15059                           ;MCU_16f1518_B1.c: 493: PMCON2=0xaa;
 15060  220D  30AA               	movlw	170
 15061  220E  0096               	movwf	22	;volatile
 15062                           
 15063                           ;MCU_16f1518_B1.c: 494: WR=1;
 15064  220F  1495               	bsf	21,1	;volatile
 15065                           
 15066                           ;MCU_16f1518_B1.c: 495: __nop();
 15067  2210  0000               	nop
 15068                           
 15069                           ;MCU_16f1518_B1.c: 496: __nop();
 15070  2211  0000               	nop
 15071  2212  0008               	return
 15072  2213                     __end_of_Flash_Memory_Unlock:	
 15073                           
 15074                           	psect	text90
 15075  25A0                     __ptext90:	
 15076 ;; *************** function _Flash_Memory_Read *****************
 15077 ;; Defined at:
 15078 ;;		line 499 in file "G:\Program\PIC\Source_File\MCU_16f1518_B1.c"
 15079 ;; Parameters:    Size  Location     Type
 15080 ;;  address         1    wreg     unsigned char 
 15081 ;; Auto vars:     Size  Location     Type
 15082 ;;  address         1    2[BANK0 ] unsigned char 
 15083 ;;  ret             1    3[BANK0 ] unsigned char 
 15084 ;;  i               1    1[BANK0 ] unsigned char 
 15085 ;; Return value:  Size  Location     Type
 15086 ;;                  1    wreg      unsigned char 
 15087 ;; Registers used:
 15088 ;;		wreg, status,2
 15089 ;; Tracked objects:
 15090 ;;		On entry : 0/0
 15091 ;;		On exit  : 0/0
 15092 ;;		Unchanged: 0/0
 15093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15094 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15095 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15096 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15097 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15098 ;;Total ram usage:        4 bytes
 15099 ;; Hardware stack levels used:    1
 15100 ;; Hardware stack levels required when called:    4
 15101 ;; This function calls:
 15102 ;;		Nothing
 15103 ;; This function is called by:
 15104 ;;		_Flash_Memory_Initialization
 15105 ;;		_Flash_Memory_Modify
 15106 ;; This function uses a non-reentrant model
 15107 ;;
 15108                           
 15109                           
 15110                           ;psect for function _Flash_Memory_Read
 15111  25A0                     _Flash_Memory_Read:	
 15112                           
 15113                           ;incstack = 0
 15114                           ; Regs used in _Flash_Memory_Read: [wreg+status,2]
 15115                           ;Flash_Memory_Read@address stored from wreg
 15116  25A0  0020               	movlb	0	; select bank0
 15117  25A1  00A2               	movwf	Flash_Memory_Read@address
 15118                           
 15119                           ;MCU_16f1518_B1.c: 501: char i,ret=0;
 15120  25A2  01A3               	clrf	Flash_Memory_Read@ret
 15121                           
 15122                           ;MCU_16f1518_B1.c: 502: PMADRH=0x30;
 15123  25A3  3030               	movlw	48
 15124  25A4  0023               	movlb	3	; select bank3
 15125  25A5  0092               	movwf	18	;volatile
 15126                           
 15127                           ;MCU_16f1518_B1.c: 503: PMADRL=address;
 15128  25A6  0020               	movlb	0	; select bank0
 15129  25A7  0822               	movf	Flash_Memory_Read@address,w
 15130  25A8  0023               	movlb	3	; select bank3
 15131  25A9  0091               	movwf	17	;volatile
 15132                           
 15133                           ;MCU_16f1518_B1.c: 504: CFGS=0;
 15134  25AA  1315               	bcf	21,6	;volatile
 15135                           
 15136                           ;MCU_16f1518_B1.c: 505: RD=1;
 15137  25AB  1415               	bsf	21,0	;volatile
 15138                           
 15139                           ;MCU_16f1518_B1.c: 506: i=PMDATH;
 15140  25AC  0814               	movf	20,w	;volatile
 15141  25AD  0020               	movlb	0	; select bank0
 15142  25AE  00A0               	movwf	??_Flash_Memory_Read
 15143  25AF  0820               	movf	??_Flash_Memory_Read,w
 15144  25B0  00A1               	movwf	Flash_Memory_Read@i
 15145                           
 15146                           ;MCU_16f1518_B1.c: 507: ret=PMDATL;
 15147  25B1  0023               	movlb	3	; select bank3
 15148  25B2  0813               	movf	19,w	;volatile
 15149  25B3  0020               	movlb	0	; select bank0
 15150  25B4  00A0               	movwf	??_Flash_Memory_Read
 15151  25B5  0820               	movf	??_Flash_Memory_Read,w
 15152  25B6  00A3               	movwf	Flash_Memory_Read@ret
 15153                           
 15154                           ;MCU_16f1518_B1.c: 508: return ret;
 15155  25B7  0823               	movf	Flash_Memory_Read@ret,w
 15156  25B8  0008               	return
 15157  25B9                     __end_of_Flash_Memory_Read:	
 15158                           
 15159                           	psect	text91
 15160  223F                     __ptext91:	
 15161 ;; *************** function _DimmerLights_Main *****************
 15162 ;; Defined at:
 15163 ;;		line 98 in file "G:\Program\PIC\Source_File\Dimmer_B1.c"
 15164 ;; Parameters:    Size  Location     Type
 15165 ;;		None
 15166 ;; Auto vars:     Size  Location     Type
 15167 ;;		None
 15168 ;; Return value:  Size  Location     Type
 15169 ;;		None               void
 15170 ;; Registers used:
 15171 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15172 ;; Tracked objects:
 15173 ;;		On entry : 0/0
 15174 ;;		On exit  : 0/0
 15175 ;;		Unchanged: 0/0
 15176 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15177 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15180 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15181 ;;Total ram usage:        0 bytes
 15182 ;; Hardware stack levels used:    1
 15183 ;; Hardware stack levels required when called:    9
 15184 ;; This function calls:
 15185 ;;		_DimmerLights_Close
 15186 ;;		_setDimmerLights_Main
 15187 ;; This function is called by:
 15188 ;;		_main
 15189 ;; This function uses a non-reentrant model
 15190 ;;
 15191                           
 15192                           
 15193                           ;psect for function _DimmerLights_Main
 15194  223F                     _DimmerLights_Main:	
 15195                           
 15196                           ;Dimmer_B1.c: 101: setDimmerLights_Main(1);
 15197                           
 15198                           ;incstack = 0
 15199                           ; Regs used in _DimmerLights_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15200  223F  3001               	movlw	1
 15201  2240  3194  2489  31A2   	fcall	_setDimmerLights_Main
 15202                           
 15203                           ;Dimmer_B1.c: 105: setDimmerLights_Main(2);
 15204  2243  3002               	movlw	2
 15205  2244  3194  2489  31A2   	fcall	_setDimmerLights_Main
 15206                           
 15207                           ;Dimmer_B1.c: 112: DimmerLights_Close();
 15208  2247  31A6  269F         	fcall	_DimmerLights_Close
 15209  2249  0008               	return
 15210  224A                     __end_of_DimmerLights_Main:	
 15211                           
 15212                           	psect	text92
 15213  1489                     __ptext92:	
 15214 ;; *************** function _setDimmerLights_Main *****************
 15215 ;; Defined at:
 15216 ;;		line 115 in file "G:\Program\PIC\Source_File\Dimmer_B1.c"
 15217 ;; Parameters:    Size  Location     Type
 15218 ;;  lights          1    wreg     unsigned char 
 15219 ;; Auto vars:     Size  Location     Type
 15220 ;;  lights          1   66[BANK0 ] unsigned char 
 15221 ;;  clear           1   65[BANK0 ] unsigned char 
 15222 ;; Return value:  Size  Location     Type
 15223 ;;		None               void
 15224 ;; Registers used:
 15225 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15226 ;; Tracked objects:
 15227 ;;		On entry : 0/0
 15228 ;;		On exit  : 0/0
 15229 ;;		Unchanged: 0/0
 15230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15232 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15234 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15235 ;;Total ram usage:        2 bytes
 15236 ;; Hardware stack levels used:    1
 15237 ;; Hardware stack levels required when called:    8
 15238 ;; This function calls:
 15239 ;;		_DimmerLightsPointSelect
 15240 ;;		_getDimmerLights_Trigger
 15241 ;;		_setBuz
 15242 ;;		_setDimmerLights
 15243 ;;		_setDimmerLights_Adj
 15244 ;; This function is called by:
 15245 ;;		_DimmerLights_Main
 15246 ;; This function uses a non-reentrant model
 15247 ;;
 15248                           
 15249                           
 15250                           ;psect for function _setDimmerLights_Main
 15251  1489                     _setDimmerLights_Main:	
 15252                           
 15253                           ;incstack = 0
 15254                           ; Regs used in _setDimmerLights_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15255                           ;setDimmerLights_Main@lights stored from wreg
 15256  1489  0020               	movlb	0	; select bank0
 15257  148A  00E2               	movwf	setDimmerLights_Main@lights
 15258                           
 15259                           ;Dimmer_B1.c: 117: char clear=1;
 15260  148B  01E1               	clrf	setDimmerLights_Main@clear
 15261  148C  0AE1               	incf	setDimmerLights_Main@clear,f
 15262                           
 15263                           ;Dimmer_B1.c: 118: DimmerLightsPointSelect(lights);
 15264  148D  0862               	movf	setDimmerLights_Main@lights,w
 15265  148E  31A4  2497  3194   	fcall	_DimmerLightsPointSelect
 15266                           
 15267                           ;Dimmer_B1.c: 119: if(DimmerLights->Trigger)
 15268  1491  0020               	movlb	0	; select bank0
 15269  1492  086D               	movf	_DimmerLights,w
 15270  1493  3E09               	addlw	9
 15271  1494  0086               	movwf	6
 15272  1495  3001               	movlw	1	; select bank2/3
 15273  1496  0087               	movwf	7
 15274  1497  1C81               	btfss	1,1
 15275  1498  2CDF               	goto	l7967
 15276                           
 15277                           ;Dimmer_B1.c: 120: {
 15278                           ;Dimmer_B1.c: 146: if(lights == 1)
 15279  1499  0862               	movf	setDimmerLights_Main@lights,w
 15280  149A  3A01               	xorlw	1
 15281  149B  1D03               	skipz
 15282  149C  2C9F               	goto	l7945
 15283                           
 15284                           ;Dimmer_B1.c: 147: {
 15285                           ;Dimmer_B1.c: 148: if(!DimmerLights22->Clear)
 15286  149D  087C               	movf	_DimmerLights22,w
 15287  149E  2CA4               	goto	L11
 15288  149F                     l7945:	
 15289                           ;Dimmer_B1.c: 151: }
 15290                           ;Dimmer_B1.c: 152: }
 15291                           
 15292                           ;Dimmer_B1.c: 149: {
 15293                           ;Dimmer_B1.c: 150: clear=0;
 15294                           
 15295                           
 15296                           ;Dimmer_B1.c: 153: else if(lights == 2)
 15297  149F  0862               	movf	setDimmerLights_Main@lights,w
 15298  14A0  3A02               	xorlw	2
 15299  14A1  1D03               	skipz
 15300  14A2  2CAA               	goto	l7951
 15301                           
 15302                           ;Dimmer_B1.c: 154: {
 15303                           ;Dimmer_B1.c: 155: if(!DimmerLights11->Clear)
 15304  14A3  087B               	movf	_DimmerLights11,w
 15305  14A4                     L11:	
 15306  14A4  3E0C               	addlw	12
 15307  14A5  0086               	movwf	6
 15308  14A6  3001               	movlw	1	; select bank2/3
 15309  14A7  0087               	movwf	7
 15310  14A8  1C01               	btfss	1,0
 15311                           
 15312                           ;Dimmer_B1.c: 156: {
 15313                           ;Dimmer_B1.c: 157: clear=0;
 15314  14A9  01E1               	clrf	setDimmerLights_Main@clear
 15315  14AA                     l7951:	
 15316                           
 15317                           ;Dimmer_B1.c: 158: }
 15318                           ;Dimmer_B1.c: 159: }
 15319                           ;Dimmer_B1.c: 162: if(clear)
 15320  14AA  0861               	movf	setDimmerLights_Main@clear,w
 15321  14AB  1903               	btfsc	3,2
 15322  14AC  0008               	return
 15323                           
 15324                           ;Dimmer_B1.c: 163: {
 15325                           ;Dimmer_B1.c: 164: if(DimmerLights->Switch)
 15326  14AD  086D               	movf	_DimmerLights,w
 15327  14AE  3E09               	addlw	9
 15328  14AF  0086               	movwf	6
 15329  14B0  3001               	movlw	1	; select bank2/3
 15330  14B1  0087               	movwf	7
 15331  14B2  1C01               	btfss	1,0
 15332  14B3  2CCD               	goto	l7961
 15333                           
 15334                           ;Dimmer_B1.c: 165: {
 15335                           ;Dimmer_B1.c: 166: DimmerLights->Trigger=0;
 15336  14B4  086D               	movf	_DimmerLights,w
 15337  14B5  3E09               	addlw	9
 15338  14B6  0086               	movwf	6
 15339  14B7  3001               	movlw	1	; select bank2/3
 15340  14B8  0087               	movwf	7
 15341  14B9  1081               	bcf	1,1
 15342                           
 15343                           ;Dimmer_B1.c: 167: DimmerLights->Clear=0;
 15344  14BA  086D               	movf	_DimmerLights,w
 15345  14BB  3E0C               	addlw	12
 15346  14BC  0086               	movwf	6
 15347  14BD  3001               	movlw	1	; select bank2/3
 15348  14BE  0087               	movwf	7
 15349  14BF  1001               	bcf	1,0
 15350                           
 15351                           ;Dimmer_B1.c: 168: setDimmerLights(lights,1);
 15352  14C0  01A6               	clrf	setDimmerLights@status
 15353  14C1  0AA6               	incf	setDimmerLights@status,f
 15354  14C2  0862               	movf	setDimmerLights_Main@lights,w
 15355  14C3  3196  26D2         	fcall	_setDimmerLights
 15356                           
 15357                           ;Dimmer_B1.c: 171: DimmerLights->Clear=0;
 15358  14C5  0020               	movlb	0	; select bank0
 15359  14C6  086D               	movf	_DimmerLights,w
 15360  14C7  3E0C               	addlw	12
 15361  14C8  0086               	movwf	6
 15362  14C9  3001               	movlw	1	; select bank2/3
 15363  14CA  0087               	movwf	7
 15364  14CB  1001               	bcf	1,0
 15365                           
 15366                           ;Dimmer_B1.c: 173: }
 15367  14CC  0008               	return
 15368  14CD                     l7961:	
 15369                           
 15370                           ;Dimmer_B1.c: 174: else
 15371                           ;Dimmer_B1.c: 175: {
 15372                           ;Dimmer_B1.c: 176: DimmerLights->Trigger=0;
 15373  14CD  086D               	movf	_DimmerLights,w
 15374  14CE  3E09               	addlw	9
 15375  14CF  0086               	movwf	6
 15376  14D0  3001               	movlw	1	; select bank2/3
 15377  14D1  0087               	movwf	7
 15378  14D2  1081               	bcf	1,1
 15379                           
 15380                           ;Dimmer_B1.c: 177: setDimmerLights(lights,0);
 15381  14D3  01A6               	clrf	setDimmerLights@status
 15382  14D4  0862               	movf	setDimmerLights_Main@lights,w
 15383  14D5  3196  26D2         	fcall	_setDimmerLights
 15384                           
 15385                           ;Dimmer_B1.c: 179: DimmerLights->Clear=0;
 15386  14D7  0020               	movlb	0	; select bank0
 15387  14D8  086D               	movf	_DimmerLights,w
 15388  14D9  3E0C               	addlw	12
 15389  14DA  0086               	movwf	6
 15390  14DB  3001               	movlw	1	; select bank2/3
 15391  14DC  0087               	movwf	7
 15392  14DD  1001               	bcf	1,0
 15393                           
 15394                           ;Dimmer_B1.c: 181: }
 15395                           ;Dimmer_B1.c: 182: }
 15396                           ;Dimmer_B1.c: 183: }
 15397  14DE  0008               	return
 15398  14DF                     l7967:	
 15399                           
 15400                           ;Dimmer_B1.c: 184: else
 15401                           ;Dimmer_B1.c: 185: {
 15402                           ;Dimmer_B1.c: 186: if(DimmerLights->TriggerAdj)
 15403  14DF  086D               	movf	_DimmerLights,w
 15404  14E0  3E09               	addlw	9
 15405  14E1  0086               	movwf	6
 15406  14E2  3001               	movlw	1	; select bank2/3
 15407  14E3  0087               	movwf	7
 15408  14E4  1D81               	btfss	1,3
 15409  14E5  0008               	return
 15410                           
 15411                           ;Dimmer_B1.c: 187: {
 15412                           ;Dimmer_B1.c: 188: if(!getDimmerLights_Trigger())
 15413  14E6  31A6  26BF  3194   	fcall	_getDimmerLights_Trigger
 15414  14E9  3800               	iorlw	0
 15415  14EA  1903               	btfsc	3,2
 15416  14EB  2CEE               	goto	l7971
 15417  14EC  0020               	movlb	0	; select bank0
 15418  14ED  0008               	return
 15419  14EE                     l7971:	
 15420                           
 15421                           ;Dimmer_B1.c: 189: {
 15422                           ;Dimmer_B1.c: 190: DimmerLightsPointSelect(lights);
 15423  14EE  0020               	movlb	0	; select bank0
 15424  14EF  0862               	movf	setDimmerLights_Main@lights,w
 15425  14F0  31A4  2497  3194   	fcall	_DimmerLightsPointSelect
 15426                           
 15427                           ;Dimmer_B1.c: 191: DimmerLights->TriggerAdj=0;
 15428  14F3  0020               	movlb	0	; select bank0
 15429  14F4  086D               	movf	_DimmerLights,w
 15430  14F5  3E09               	addlw	9
 15431  14F6  0086               	movwf	6
 15432  14F7  3001               	movlw	1	; select bank2/3
 15433  14F8  0087               	movwf	7
 15434  14F9  1181               	bcf	1,3
 15435                           
 15436                           ;Dimmer_B1.c: 192: if(DimmerLights->AdjGo)
 15437  14FA  086D               	movf	_DimmerLights,w
 15438  14FB  3E09               	addlw	9
 15439  14FC  0086               	movwf	6
 15440  14FD  3001               	movlw	1	; select bank2/3
 15441  14FE  0087               	movwf	7
 15442  14FF  1D01               	btfss	1,2
 15443  1500  2D13               	goto	l7979
 15444                           
 15445                           ;Dimmer_B1.c: 193: {
 15446                           ;Dimmer_B1.c: 194: setDimmerLights_Adj(lights,1);
 15447  1501  01DD               	clrf	setDimmerLights_Adj@status
 15448  1502  0ADD               	incf	setDimmerLights_Adj@status,f
 15449  1503  0862               	movf	setDimmerLights_Main@lights,w
 15450  1504  319F  2738  3194   	fcall	_setDimmerLights_Adj
 15451                           
 15452                           ;Dimmer_B1.c: 195: setBuz(1,1,100);
 15453  1507  0020               	movlb	0	; select bank0
 15454  1508  01A6               	clrf	setBuz@count
 15455  1509  0AA6               	incf	setBuz@count,f
 15456  150A  3064               	movlw	100
 15457  150B  00A7               	movwf	setBuz@time
 15458  150C  3000               	movlw	0
 15459  150D  00A8               	movwf	setBuz@time+1
 15460  150E  3001               	movlw	1
 15461  150F  3195  25AB         	fcall	_setBuz
 15462                           
 15463                           ;Dimmer_B1.c: 196: }
 15464  1511  0020               	movlb	0	; select bank0
 15465  1512  0008               	return
 15466  1513                     l7979:	
 15467                           
 15468                           ;Dimmer_B1.c: 197: else
 15469                           ;Dimmer_B1.c: 198: {
 15470                           ;Dimmer_B1.c: 199: setDimmerLights_Adj(lights,0);
 15471  1513  0020               	movlb	0	; select bank0
 15472  1514  01DD               	clrf	setDimmerLights_Adj@status
 15473  1515  0862               	movf	setDimmerLights_Main@lights,w
 15474  1516  319F  2738         	fcall	_setDimmerLights_Adj
 15475  1518  0020               	movlb	0	; select bank0
 15476  1519  0008               	return
 15477  151A                     __end_of_setDimmerLights_Main:	
 15478                           
 15479                           	psect	text93
 15480  1F38                     __ptext93:	
 15481 ;; *************** function _setDimmerLights_Adj *****************
 15482 ;; Defined at:
 15483 ;;		line 394 in file "G:\Program\PIC\Source_File\Dimmer_B1.c"
 15484 ;; Parameters:    Size  Location     Type
 15485 ;;  lights          1    wreg     unsigned char 
 15486 ;;  status          1   61[BANK0 ] unsigned char 
 15487 ;; Auto vars:     Size  Location     Type
 15488 ;;  lights          1   64[BANK0 ] unsigned char 
 15489 ;; Return value:  Size  Location     Type
 15490 ;;		None               void
 15491 ;; Registers used:
 15492 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15493 ;; Tracked objects:
 15494 ;;		On entry : 0/0
 15495 ;;		On exit  : 0/0
 15496 ;;		Unchanged: 0/0
 15497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15498 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15499 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15500 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15501 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15502 ;;Total ram usage:        4 bytes
 15503 ;; Hardware stack levels used:    1
 15504 ;; Hardware stack levels required when called:    7
 15505 ;; This function calls:
 15506 ;;		_DimmerLightsPointSelect
 15507 ;;		_setLoad_StatusOff
 15508 ;;		_setPercentValue
 15509 ;;		_setRF_DimmerLights
 15510 ;;		_setTxData
 15511 ;; This function is called by:
 15512 ;;		_setDimmerLights_Main
 15513 ;; This function uses a non-reentrant model
 15514 ;;
 15515                           
 15516                           
 15517                           ;psect for function _setDimmerLights_Adj
 15518  1F38                     _setDimmerLights_Adj:	
 15519                           
 15520                           ;incstack = 0
 15521                           ; Regs used in _setDimmerLights_Adj: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15522                           ;setDimmerLights_Adj@lights stored from wreg
 15523  1F38  0020               	movlb	0	; select bank0
 15524  1F39  00E0               	movwf	setDimmerLights_Adj@lights
 15525                           
 15526                           ;Dimmer_B1.c: 396: DimmerLightsPointSelect(lights);
 15527  1F3A  0860               	movf	setDimmerLights_Adj@lights,w
 15528  1F3B  31A4  2497  319F   	fcall	_DimmerLightsPointSelect
 15529                           
 15530                           ;Dimmer_B1.c: 397: if(status)
 15531  1F3E  0020               	movlb	0	; select bank0
 15532  1F3F  085D               	movf	setDimmerLights_Adj@status,w
 15533  1F40  1903               	btfsc	3,2
 15534  1F41  2F4D               	goto	l7455
 15535                           
 15536                           ;Dimmer_B1.c: 398: {
 15537                           ;Dimmer_B1.c: 399: DimmerLights->AdjFlag=1;
 15538  1F42  086D               	movf	_DimmerLights,w
 15539  1F43  0086               	movwf	6
 15540  1F44  3001               	movlw	1	; select bank2/3
 15541  1F45  0087               	movwf	7
 15542  1F46  1581               	bsf	1,3
 15543                           
 15544                           ;Dimmer_B1.c: 400: DimmerLights->Signal=1;
 15545  1F47  086D               	movf	_DimmerLights,w
 15546  1F48  0086               	movwf	6
 15547  1F49  3001               	movlw	1	; select bank2/3
 15548  1F4A  0087               	movwf	7
 15549  1F4B  1481               	bsf	1,1
 15550                           
 15551                           ;Dimmer_B1.c: 401: }
 15552  1F4C  0008               	return
 15553  1F4D                     l7455:	
 15554                           
 15555                           ;Dimmer_B1.c: 402: else
 15556                           ;Dimmer_B1.c: 403: {
 15557                           ;Dimmer_B1.c: 404: if(DimmerLights->AdjFlag)
 15558  1F4D  086D               	movf	_DimmerLights,w
 15559  1F4E  0086               	movwf	6
 15560  1F4F  3001               	movlw	1	; select bank2/3
 15561  1F50  0087               	movwf	7
 15562  1F51  1D81               	btfss	1,3
 15563  1F52  0008               	return
 15564                           
 15565                           ;Dimmer_B1.c: 405: {
 15566                           ;Dimmer_B1.c: 406: DimmerLights->Signal=0;
 15567  1F53  086D               	movf	_DimmerLights,w
 15568  1F54  0086               	movwf	6
 15569  1F55  3001               	movlw	1	; select bank2/3
 15570  1F56  0087               	movwf	7
 15571  1F57  1081               	bcf	1,1
 15572                           
 15573                           ;Dimmer_B1.c: 407: DimmerLights->AdjFlag=0;
 15574  1F58  086D               	movf	_DimmerLights,w
 15575  1F59  0086               	movwf	6
 15576  1F5A  3001               	movlw	1	; select bank2/3
 15577  1F5B  0087               	movwf	7
 15578  1F5C  1181               	bcf	1,3
 15579                           
 15580                           ;Dimmer_B1.c: 408: setLoad_StatusOff(1,0,1);
 15581  1F5D  01A2               	clrf	setLoad_StatusOff@lights
 15582  1F5E  01A3               	clrf	setLoad_StatusOff@command
 15583  1F5F  0AA3               	incf	setLoad_StatusOff@command,f
 15584  1F60  3001               	movlw	1
 15585  1F61  3199  21A7  319F   	fcall	_setLoad_StatusOff
 15586                           
 15587                           ;Dimmer_B1.c: 409: DimmerLights->MaxmumValue=DimmerLights->DimmingValue;
 15588  1F64  0020               	movlb	0	; select bank0
 15589  1F65  086D               	movf	_DimmerLights,w
 15590  1F66  3E04               	addlw	4
 15591  1F67  0086               	movwf	6
 15592  1F68  3001               	movlw	1	; select bank2/3
 15593  1F69  0087               	movwf	7
 15594  1F6A  0801               	movf	1,w
 15595  1F6B  00DE               	movwf	??_setDimmerLights_Adj
 15596  1F6C  086D               	movf	_DimmerLights,w
 15597  1F6D  3E05               	addlw	5
 15598  1F6E  0086               	movwf	6
 15599  1F6F  3001               	movlw	1	; select bank2/3
 15600  1F70  0087               	movwf	7
 15601  1F71  085E               	movf	??_setDimmerLights_Adj,w
 15602  1F72  0081               	movwf	1
 15603                           
 15604                           ;Dimmer_B1.c: 410: setRF_DimmerLights(lights,1);
 15605  1F73  01A0               	clrf	setRF_DimmerLights@on
 15606  1F74  0AA0               	incf	setRF_DimmerLights@on,f
 15607  1F75  0860               	movf	setDimmerLights_Adj@lights,w
 15608  1F76  3190  20D8  319F   	fcall	_setRF_DimmerLights
 15609                           
 15610                           ;Dimmer_B1.c: 411: setTxData(1);
 15611  1F79  3001               	movlw	1
 15612  1F7A  319A  227A  319F   	fcall	_setTxData
 15613                           
 15614                           ;Dimmer_B1.c: 412: Memory->Modify=1;
 15615  1F7D  0021               	movlb	1	; select bank1
 15616  1F7E  086B               	movf	_Memory^(0+128),w
 15617  1F7F  3E22               	addlw	34
 15618  1F80  0086               	movwf	6
 15619  1F81  3002               	movlw	2	; select bank4/5
 15620  1F82  0087               	movwf	7
 15621  1F83  1401               	bsf	1,0
 15622                           
 15623                           ;Dimmer_B1.c: 413: Product->Data[(20+lights)]=setPercentValue(DimmerLights->MaxmumValue)
      +                          ;
 15624  1F84  0020               	movlb	0	; select bank0
 15625  1F85  086D               	movf	_DimmerLights,w
 15626  1F86  3E05               	addlw	5
 15627  1F87  0086               	movwf	6
 15628  1F88  3001               	movlw	1	; select bank2/3
 15629  1F89  0087               	movwf	7
 15630  1F8A  0801               	movf	1,w
 15631  1F8B  319C  2408         	fcall	_setPercentValue
 15632  1F8D  0020               	movlb	0	; select bank0
 15633  1F8E  00DE               	movwf	??_setDimmerLights_Adj
 15634  1F8F  0860               	movf	setDimmerLights_Adj@lights,w
 15635  1F90  3E14               	addlw	20
 15636  1F91  0021               	movlb	1	; select bank1
 15637  1F92  076C               	addwf	_Product^(0+128),w
 15638  1F93  0020               	movlb	0	; select bank0
 15639  1F94  00DF               	movwf	??_setDimmerLights_Adj+1
 15640  1F95  085F               	movf	??_setDimmerLights_Adj+1,w
 15641  1F96  0086               	movwf	6
 15642  1F97  3001               	movlw	1	; select bank2/3
 15643  1F98  0087               	movwf	7
 15644  1F99  085E               	movf	??_setDimmerLights_Adj,w
 15645  1F9A  0081               	movwf	1
 15646  1F9B  0008               	return
 15647  1F9C                     __end_of_setDimmerLights_Adj:	
 15648                           
 15649                           	psect	text94
 15650  1C08                     __ptext94:	
 15651 ;; *************** function _setPercentValue *****************
 15652 ;; Defined at:
 15653 ;;		line 506 in file "G:\Program\PIC\Source_File\Dimmer_B1.c"
 15654 ;; Parameters:    Size  Location     Type
 15655 ;;  value           1    wreg     unsigned char 
 15656 ;; Auto vars:     Size  Location     Type
 15657 ;;  value           1   57[BANK0 ] unsigned char 
 15658 ;;  i               3   58[BANK0 ] float 
 15659 ;; Return value:  Size  Location     Type
 15660 ;;                  1    wreg      unsigned char 
 15661 ;; Registers used:
 15662 ;;		wreg, status,2, status,0, pclath, cstack
 15663 ;; Tracked objects:
 15664 ;;		On entry : 0/0
 15665 ;;		On exit  : 0/0
 15666 ;;		Unchanged: 0/0
 15667 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15668 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15669 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15671 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15672 ;;Total ram usage:        4 bytes
 15673 ;; Hardware stack levels used:    1
 15674 ;; Hardware stack levels required when called:    6
 15675 ;; This function calls:
 15676 ;;		___awtoft
 15677 ;;		___ftdiv
 15678 ;;		___fttol
 15679 ;; This function is called by:
 15680 ;;		_setDimmerLights_Adj
 15681 ;;		_Flash_Memory_Initialization
 15682 ;; This function uses a non-reentrant model
 15683 ;;
 15684                           
 15685                           
 15686                           ;psect for function _setPercentValue
 15687  1C08                     _setPercentValue:	
 15688                           
 15689                           ;incstack = 0
 15690                           ; Regs used in _setPercentValue: [wreg+status,2+status,0+pclath+cstack]
 15691                           ;setPercentValue@value stored from wreg
 15692  1C08  0020               	movlb	0	; select bank0
 15693  1C09  00D9               	movwf	setPercentValue@value
 15694                           
 15695                           ;Dimmer_B1.c: 509: float i=((char)((100-20)*1.5))-((char)((100-60)*1.5));
 15696  1C0A  3000               	movlw	0
 15697  1C0B  00DA               	movwf	setPercentValue@i
 15698  1C0C  3070               	movlw	112
 15699  1C0D  00DB               	movwf	setPercentValue@i+1
 15700  1C0E  3042               	movlw	66
 15701  1C0F  00DC               	movwf	setPercentValue@i+2
 15702                           
 15703                           ;Dimmer_B1.c: 510: i/=100;
 15704  1C10  3000               	movlw	0
 15705  1C11  00AE               	movwf	___ftdiv@f2
 15706  1C12  30C8               	movlw	200
 15707  1C13  00AF               	movwf	___ftdiv@f2+1
 15708  1C14  3042               	movlw	66
 15709  1C15  00B0               	movwf	___ftdiv@f2+2
 15710  1C16  085A               	movf	setPercentValue@i,w
 15711  1C17  00B1               	movwf	___ftdiv@f1
 15712  1C18  085B               	movf	setPercentValue@i+1,w
 15713  1C19  00B2               	movwf	___ftdiv@f1+1
 15714  1C1A  085C               	movf	setPercentValue@i+2,w
 15715  1C1B  00B3               	movwf	___ftdiv@f1+2
 15716  1C1C  3189  21C8  319C   	fcall	___ftdiv
 15717  1C1F  0020               	movlb	0	; select bank0
 15718  1C20  082E               	movf	?___ftdiv,w
 15719  1C21  00DA               	movwf	setPercentValue@i
 15720  1C22  082F               	movf	?___ftdiv+1,w
 15721  1C23  00DB               	movwf	setPercentValue@i+1
 15722  1C24  0830               	movf	?___ftdiv+2,w
 15723  1C25  00DC               	movwf	setPercentValue@i+2
 15724                           
 15725                           ;Dimmer_B1.c: 511: return (100-(char)((value-((char)((100-60)*1.5)))/i));
 15726  1C26  0859               	movf	setPercentValue@value,w
 15727  1C27  3EC4               	addlw	196
 15728  1C28  00A8               	movwf	___awtoft@c
 15729  1C29  30FF               	movlw	255
 15730  1C2A  1803               	skipnc
 15731  1C2B  3000               	movlw	0
 15732  1C2C  00A9               	movwf	___awtoft@c+1
 15733  1C2D  31A6  26E0  319C   	fcall	___awtoft
 15734  1C30  0020               	movlb	0	; select bank0
 15735  1C31  0828               	movf	?___awtoft,w
 15736  1C32  00B1               	movwf	___ftdiv@f1
 15737  1C33  0829               	movf	?___awtoft+1,w
 15738  1C34  00B2               	movwf	___ftdiv@f1+1
 15739  1C35  082A               	movf	?___awtoft+2,w
 15740  1C36  00B3               	movwf	___ftdiv@f1+2
 15741  1C37  085A               	movf	setPercentValue@i,w
 15742  1C38  00AE               	movwf	___ftdiv@f2
 15743  1C39  085B               	movf	setPercentValue@i+1,w
 15744  1C3A  00AF               	movwf	___ftdiv@f2+1
 15745  1C3B  085C               	movf	setPercentValue@i+2,w
 15746  1C3C  00B0               	movwf	___ftdiv@f2+2
 15747  1C3D  3189  21C8  319C   	fcall	___ftdiv
 15748  1C40  0020               	movlb	0	; select bank0
 15749  1C41  082E               	movf	?___ftdiv,w
 15750  1C42  00CB               	movwf	___fttol@f1
 15751  1C43  082F               	movf	?___ftdiv+1,w
 15752  1C44  00CC               	movwf	___fttol@f1+1
 15753  1C45  0830               	movf	?___ftdiv+2,w
 15754  1C46  00CD               	movwf	___fttol@f1+2
 15755  1C47  3188  2009         	fcall	___fttol
 15756  1C49  0020               	movlb	0	; select bank0
 15757  1C4A  034B               	decf	?___fttol,w
 15758  1C4B  3AFF               	xorlw	255
 15759  1C4C  3E64               	addlw	100
 15760  1C4D  0008               	return
 15761  1C4E                     __end_of_setPercentValue:	
 15762                           
 15763                           	psect	text95
 15764  19A7                     __ptext95:	
 15765 ;; *************** function _setLoad_StatusOff *****************
 15766 ;; Defined at:
 15767 ;;		line 346 in file "G:\Program\PIC\Source_File\OverLoad_B1.c"
 15768 ;; Parameters:    Size  Location     Type
 15769 ;;  load            1    wreg     unsigned char 
 15770 ;;  lights          1    2[BANK0 ] unsigned char 
 15771 ;;  command         1    3[BANK0 ] unsigned char 
 15772 ;; Auto vars:     Size  Location     Type
 15773 ;;  load            1    4[BANK0 ] unsigned char 
 15774 ;; Return value:  Size  Location     Type
 15775 ;;		None               void
 15776 ;; Registers used:
 15777 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15778 ;; Tracked objects:
 15779 ;;		On entry : 0/0
 15780 ;;		On exit  : 0/0
 15781 ;;		Unchanged: 0/0
 15782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15783 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15784 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15786 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15787 ;;Total ram usage:        3 bytes
 15788 ;; Hardware stack levels used:    1
 15789 ;; Hardware stack levels required when called:    5
 15790 ;; This function calls:
 15791 ;;		_LoadPointSelect
 15792 ;; This function is called by:
 15793 ;;		_setDimmerLights_ERROR
 15794 ;;		_setDimmerLights_Adj
 15795 ;; This function uses a non-reentrant model
 15796 ;;
 15797                           
 15798                           
 15799                           ;psect for function _setLoad_StatusOff
 15800  19A7                     _setLoad_StatusOff:	
 15801                           
 15802                           ;incstack = 0
 15803                           ; Regs used in _setLoad_StatusOff: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15804                           ;setLoad_StatusOff@load stored from wreg
 15805  19A7  0020               	movlb	0	; select bank0
 15806  19A8  00A4               	movwf	setLoad_StatusOff@load
 15807                           
 15808                           ;OverLoad_B1.c: 348: LoadPointSelect(load);
 15809  19A9  0824               	movf	setLoad_StatusOff@load,w
 15810  19AA  31A2  2234  3199   	fcall	_LoadPointSelect
 15811                           
 15812                           ;OverLoad_B1.c: 349: Load->StatusOff=command;
 15813  19AD  0020               	movlb	0	; select bank0
 15814  19AE  086F               	movf	_Load,w
 15815  19AF  3E46               	addlw	70
 15816  19B0  0086               	movwf	6
 15817  19B1  3002               	movlw	2	; select bank4/5
 15818  19B2  0087               	movwf	7
 15819  19B3  0823               	movf	setLoad_StatusOff@command,w
 15820  19B4  1081               	bcf	1,1
 15821  19B5  1D03               	skipz
 15822  19B6  1481               	bsf	1,1
 15823                           
 15824                           ;OverLoad_B1.c: 351: if(lights == 1)
 15825  19B7  0822               	movf	setLoad_StatusOff@lights,w
 15826  19B8  3A01               	xorlw	1
 15827  19B9  1D03               	skipz
 15828  19BA  29C1               	goto	l6907
 15829                           
 15830                           ;OverLoad_B1.c: 352: {
 15831                           ;OverLoad_B1.c: 353: Load->Lights1Status=0;
 15832  19BB  086F               	movf	_Load,w
 15833  19BC  3E43               	addlw	67
 15834  19BD  0086               	movwf	6
 15835  19BE  3002               	movlw	2	; select bank4/5
 15836  19BF  0087               	movwf	7
 15837  19C0  0181               	clrf	1
 15838  19C1                     l6907:	
 15839                           
 15840                           ;OverLoad_B1.c: 354: }
 15841                           ;OverLoad_B1.c: 355: if(lights == 2)
 15842  19C1  0822               	movf	setLoad_StatusOff@lights,w
 15843  19C2  3A02               	xorlw	2
 15844  19C3  1D03               	skipz
 15845  19C4  29CB               	goto	l6911
 15846                           
 15847                           ;OverLoad_B1.c: 356: {
 15848                           ;OverLoad_B1.c: 357: Load->Lights2Status=0;
 15849  19C5  086F               	movf	_Load,w
 15850  19C6  3E44               	addlw	68
 15851  19C7  0086               	movwf	6
 15852  19C8  3002               	movlw	2	; select bank4/5
 15853  19C9  0087               	movwf	7
 15854  19CA  0181               	clrf	1
 15855  19CB                     l6911:	
 15856                           
 15857                           ;OverLoad_B1.c: 358: }
 15858                           ;OverLoad_B1.c: 359: if(lights == 3)
 15859  19CB  0822               	movf	setLoad_StatusOff@lights,w
 15860  19CC  3A03               	xorlw	3
 15861  19CD  1D03               	skipz
 15862  19CE  0008               	return
 15863                           
 15864                           ;OverLoad_B1.c: 360: {
 15865                           ;OverLoad_B1.c: 361: Load->Lights3Status=0;
 15866  19CF  086F               	movf	_Load,w
 15867  19D0  3E45               	addlw	69
 15868  19D1  0086               	movwf	6
 15869  19D2  3002               	movlw	2	; select bank4/5
 15870  19D3  0087               	movwf	7
 15871  19D4  0181               	clrf	1
 15872  19D5  0008               	return
 15873  19D6                     __end_of_setLoad_StatusOff:	
 15874                           
 15875                           	psect	text96
 15876  16D2                     __ptext96:	
 15877 ;; *************** function _setDimmerLights *****************
 15878 ;; Defined at:
 15879 ;;		line 337 in file "G:\Program\PIC\Source_File\Dimmer_B1.c"
 15880 ;; Parameters:    Size  Location     Type
 15881 ;;  lights          1    wreg     unsigned char 
 15882 ;;  status          1    6[BANK0 ] unsigned char 
 15883 ;; Auto vars:     Size  Location     Type
 15884 ;;  lights          1    8[BANK0 ] unsigned char 
 15885 ;; Return value:  Size  Location     Type
 15886 ;;		None               void
 15887 ;; Registers used:
 15888 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15889 ;; Tracked objects:
 15890 ;;		On entry : 0/0
 15891 ;;		On exit  : 0/0
 15892 ;;		Unchanged: 0/0
 15893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15894 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15895 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15896 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15897 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15898 ;;Total ram usage:        3 bytes
 15899 ;; Hardware stack levels used:    1
 15900 ;; Hardware stack levels required when called:    6
 15901 ;; This function calls:
 15902 ;;		_DimmerLightsPointSelect
 15903 ;;		_setDimmer_Detect
 15904 ;;		_setLED
 15905 ;;		_setLoad_Count
 15906 ;;		_setLoad_GO
 15907 ;;		_setLoad_LightsStatus
 15908 ;;		_setLoad_StatusOn
 15909 ;; This function is called by:
 15910 ;;		_setDimmerLights_Main
 15911 ;;		_setControl_Lights_Table
 15912 ;; This function uses a non-reentrant model
 15913 ;;
 15914                           
 15915                           
 15916                           ;psect for function _setDimmerLights
 15917  16D2                     _setDimmerLights:	
 15918                           
 15919                           ;incstack = 0
 15920                           ; Regs used in _setDimmerLights: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15921                           ;setDimmerLights@lights stored from wreg
 15922  16D2  0020               	movlb	0	; select bank0
 15923  16D3  00A8               	movwf	setDimmerLights@lights
 15924                           
 15925                           ;Dimmer_B1.c: 339: DimmerLightsPointSelect(lights);
 15926  16D4  0828               	movf	setDimmerLights@lights,w
 15927  16D5  31A4  2497  3196   	fcall	_DimmerLightsPointSelect
 15928                           
 15929                           ;Dimmer_B1.c: 340: Dimmer->Load=lights;
 15930  16D8  0020               	movlb	0	; select bank0
 15931  16D9  0828               	movf	setDimmerLights@lights,w
 15932  16DA  00A7               	movwf	??_setDimmerLights
 15933  16DB  0021               	movlb	1	; select bank1
 15934  16DC  0A3A               	incf	_Dimmer^(0+128),w
 15935  16DD  0086               	movwf	6
 15936  16DE  0187               	clrf	7
 15937  16DF  0020               	movlb	0	; select bank0
 15938  16E0  0827               	movf	??_setDimmerLights,w
 15939  16E1  0081               	movwf	1
 15940                           
 15941                           ;Dimmer_B1.c: 341: if(status)
 15942  16E2  0826               	movf	setDimmerLights@status,w
 15943  16E3  1903               	btfsc	3,2
 15944  16E4  2F3D               	goto	l7069
 15945                           
 15946                           ;Dimmer_B1.c: 342: {
 15947                           ;Dimmer_B1.c: 343: DimmerLights->Status=1;
 15948  16E5  086D               	movf	_DimmerLights,w
 15949  16E6  0086               	movwf	6
 15950  16E7  3001               	movlw	1	; select bank2/3
 15951  16E8  0087               	movwf	7
 15952  16E9  1681               	bsf	1,5
 15953                           
 15954                           ;Dimmer_B1.c: 344: setLED(lights,0);
 15955  16EA  01A2               	clrf	setLED@command
 15956  16EB  0828               	movf	setDimmerLights@lights,w
 15957  16EC  319E  2679  3196   	fcall	_setLED
 15958                           
 15959                           ;Dimmer_B1.c: 346: setLoad_StatusOn(1,1);
 15960  16EF  0020               	movlb	0	; select bank0
 15961  16F0  01A2               	clrf	setLoad_StatusOn@command
 15962  16F1  0AA2               	incf	setLoad_StatusOn@command,f
 15963  16F2  3001               	movlw	1
 15964  16F3  31A4  2403  3196   	fcall	_setLoad_StatusOn
 15965                           
 15966                           ;Dimmer_B1.c: 347: setLoad_Count(1,0);
 15967  16F6  0020               	movlb	0	; select bank0
 15968  16F7  01A0               	clrf	setLoad_Count@command
 15969  16F8  3001               	movlw	1
 15970  16F9  31A4  24BE  3196   	fcall	_setLoad_Count
 15971                           
 15972                           ;Dimmer_B1.c: 349: DimmerLights->Signal=1;
 15973  16FC  0020               	movlb	0	; select bank0
 15974  16FD  086D               	movf	_DimmerLights,w
 15975  16FE  0086               	movwf	6
 15976  16FF  3001               	movlw	1	; select bank2/3
 15977  1700  0087               	movwf	7
 15978  1701  1481               	bsf	1,1
 15979                           
 15980                           ;Dimmer_B1.c: 350: DimmerLights->DimmingTimeValue=3;
 15981  1702  3003               	movlw	3
 15982  1703  00A7               	movwf	??_setDimmerLights
 15983  1704  086D               	movf	_DimmerLights,w
 15984  1705  3E02               	addlw	2
 15985  1706  0086               	movwf	6
 15986  1707  3001               	movlw	1	; select bank2/3
 15987  1708  0087               	movwf	7
 15988  1709  0827               	movf	??_setDimmerLights,w
 15989  170A  0081               	movwf	1
 15990                           
 15991                           ;Dimmer_B1.c: 352: if(!DimmerLights->StatusFlag)
 15992  170B  086D               	movf	_DimmerLights,w
 15993  170C  0086               	movwf	6
 15994  170D  3001               	movlw	1	; select bank2/3
 15995  170E  0087               	movwf	7
 15996  170F  1B01               	btfsc	1,6
 15997  1710  0008               	return
 15998                           
 15999                           ;Dimmer_B1.c: 353: {
 16000                           ;Dimmer_B1.c: 354: DimmerLights->StatusFlag=1;
 16001  1711  086D               	movf	_DimmerLights,w
 16002  1712  0086               	movwf	6
 16003  1713  3001               	movlw	1	; select bank2/3
 16004  1714  0087               	movwf	7
 16005  1715  1701               	bsf	1,6
 16006                           
 16007                           ;Dimmer_B1.c: 355: setDimmer_Detect(1,1);
 16008  1716  01A2               	clrf	setDimmer_Detect@command
 16009  1717  0AA2               	incf	setDimmer_Detect@command,f
 16010  1718  3001               	movlw	1
 16011  1719  31A3  232C  3196   	fcall	_setDimmer_Detect
 16012                           
 16013                           ;Dimmer_B1.c: 356: setLoad_GO(1,1);
 16014  171C  0020               	movlb	0	; select bank0
 16015  171D  01A2               	clrf	setLoad_GO@command
 16016  171E  0AA2               	incf	setLoad_GO@command,f
 16017  171F  3001               	movlw	1
 16018  1720  31A3  233B  3196   	fcall	_setLoad_GO
 16019                           
 16020                           ;Dimmer_B1.c: 357: setLoad_LightsStatus(1,lights,1);
 16021  1723  0020               	movlb	0	; select bank0
 16022  1724  0828               	movf	setDimmerLights@lights,w
 16023  1725  00A7               	movwf	??_setDimmerLights
 16024  1726  0827               	movf	??_setDimmerLights,w
 16025  1727  00A2               	movwf	setLoad_LightsStatus@lights
 16026  1728  01A3               	clrf	setLoad_LightsStatus@command
 16027  1729  0AA3               	incf	setLoad_LightsStatus@command,f
 16028  172A  3001               	movlw	1
 16029  172B  3199  2178         	fcall	_setLoad_LightsStatus
 16030                           
 16031                           ;Dimmer_B1.c: 360: DimmerLights->DimmingValue=DimmerLights->MaxmumValue;
 16032  172D  0020               	movlb	0	; select bank0
 16033  172E  086D               	movf	_DimmerLights,w
 16034  172F  3E05               	addlw	5
 16035  1730  0086               	movwf	6
 16036  1731  3001               	movlw	1	; select bank2/3
 16037  1732  0087               	movwf	7
 16038  1733  0801               	movf	1,w
 16039  1734  00A7               	movwf	??_setDimmerLights
 16040  1735  086D               	movf	_DimmerLights,w
 16041  1736  3E04               	addlw	4
 16042  1737  0086               	movwf	6
 16043  1738  3001               	movlw	1	; select bank2/3
 16044  1739  0087               	movwf	7
 16045  173A  0827               	movf	??_setDimmerLights,w
 16046  173B  0081               	movwf	1
 16047                           
 16048                           ;Dimmer_B1.c: 362: }
 16049                           ;Dimmer_B1.c: 363: }
 16050  173C  0008               	return
 16051  173D                     l7069:	
 16052                           
 16053                           ;Dimmer_B1.c: 364: else
 16054                           ;Dimmer_B1.c: 365: {
 16055                           ;Dimmer_B1.c: 366: DimmerLights->Status=0;
 16056  173D  086D               	movf	_DimmerLights,w
 16057  173E  0086               	movwf	6
 16058  173F  3001               	movlw	1	; select bank2/3
 16059  1740  0087               	movwf	7
 16060  1741  1281               	bcf	1,5
 16061                           
 16062                           ;Dimmer_B1.c: 368: DimmerLights->DimmingValue=DimmerLights->MinimumValue;
 16063  1742  086D               	movf	_DimmerLights,w
 16064  1743  3E06               	addlw	6
 16065  1744  0086               	movwf	6
 16066  1745  3001               	movlw	1	; select bank2/3
 16067  1746  0087               	movwf	7
 16068  1747  0801               	movf	1,w
 16069  1748  00A7               	movwf	??_setDimmerLights
 16070  1749  086D               	movf	_DimmerLights,w
 16071  174A  3E04               	addlw	4
 16072  174B  0086               	movwf	6
 16073  174C  3001               	movlw	1	; select bank2/3
 16074  174D  0087               	movwf	7
 16075  174E  0827               	movf	??_setDimmerLights,w
 16076  174F  0081               	movwf	1
 16077                           
 16078                           ;Dimmer_B1.c: 375: DimmerLights->Signal=1;
 16079  1750  086D               	movf	_DimmerLights,w
 16080  1751  0086               	movwf	6
 16081  1752  3001               	movlw	1	; select bank2/3
 16082  1753  0087               	movwf	7
 16083  1754  1481               	bsf	1,1
 16084                           
 16085                           ;Dimmer_B1.c: 376: DimmerLights->AdjFlag=0;
 16086  1755  086D               	movf	_DimmerLights,w
 16087  1756  0086               	movwf	6
 16088  1757  3001               	movlw	1	; select bank2/3
 16089  1758  0087               	movwf	7
 16090  1759  1181               	bcf	1,3
 16091                           
 16092                           ;Dimmer_B1.c: 377: DimmerLights->AdjStatus=0;
 16093  175A  086D               	movf	_DimmerLights,w
 16094  175B  0086               	movwf	6
 16095  175C  3001               	movlw	1	; select bank2/3
 16096  175D  0087               	movwf	7
 16097  175E  1201               	bcf	1,4
 16098                           
 16099                           ;Dimmer_B1.c: 378: DimmerLights->DimmingTimeValue=3;
 16100  175F  3003               	movlw	3
 16101  1760  00A7               	movwf	??_setDimmerLights
 16102  1761  086D               	movf	_DimmerLights,w
 16103  1762  3E02               	addlw	2
 16104  1763  0086               	movwf	6
 16105  1764  3001               	movlw	1	; select bank2/3
 16106  1765  0087               	movwf	7
 16107  1766  0827               	movf	??_setDimmerLights,w
 16108  1767  0081               	movwf	1
 16109  1768  0008               	return
 16110  1769                     __end_of_setDimmerLights:	
 16111                           
 16112                           	psect	text97
 16113  2403                     __ptext97:	
 16114 ;; *************** function _setLoad_StatusOn *****************
 16115 ;; Defined at:
 16116 ;;		line 341 in file "G:\Program\PIC\Source_File\OverLoad_B1.c"
 16117 ;; Parameters:    Size  Location     Type
 16118 ;;  load            1    wreg     unsigned char 
 16119 ;;  command         1    2[BANK0 ] unsigned char 
 16120 ;; Auto vars:     Size  Location     Type
 16121 ;;  load            1    3[BANK0 ] unsigned char 
 16122 ;; Return value:  Size  Location     Type
 16123 ;;		None               void
 16124 ;; Registers used:
 16125 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16126 ;; Tracked objects:
 16127 ;;		On entry : 0/0
 16128 ;;		On exit  : 0/0
 16129 ;;		Unchanged: 0/0
 16130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16131 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16132 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16134 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16135 ;;Total ram usage:        2 bytes
 16136 ;; Hardware stack levels used:    1
 16137 ;; Hardware stack levels required when called:    5
 16138 ;; This function calls:
 16139 ;;		_LoadPointSelect
 16140 ;; This function is called by:
 16141 ;;		_setDimmerLights
 16142 ;; This function uses a non-reentrant model
 16143 ;;
 16144                           
 16145                           
 16146                           ;psect for function _setLoad_StatusOn
 16147  2403                     _setLoad_StatusOn:	
 16148                           
 16149                           ;incstack = 0
 16150                           ; Regs used in _setLoad_StatusOn: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 16151                           ;setLoad_StatusOn@load stored from wreg
 16152  2403  0020               	movlb	0	; select bank0
 16153  2404  00A3               	movwf	setLoad_StatusOn@load
 16154                           
 16155                           ;OverLoad_B1.c: 343: LoadPointSelect(load);
 16156  2405  0823               	movf	setLoad_StatusOn@load,w
 16157  2406  31A2  2234         	fcall	_LoadPointSelect
 16158                           
 16159                           ;OverLoad_B1.c: 344: Load->StatusOn=command;
 16160  2408  0020               	movlb	0	; select bank0
 16161  2409  086F               	movf	_Load,w
 16162  240A  3E46               	addlw	70
 16163  240B  0086               	movwf	6
 16164  240C  3002               	movlw	2	; select bank4/5
 16165  240D  0087               	movwf	7
 16166  240E  0822               	movf	setLoad_StatusOn@command,w
 16167  240F  1001               	bcf	1,0
 16168  2410  1D03               	skipz
 16169  2411  1401               	bsf	1,0
 16170  2412  0008               	return
 16171  2413                     __end_of_setLoad_StatusOn:	
 16172                           
 16173                           	psect	text98
 16174  1978                     __ptext98:	
 16175 ;; *************** function _setLoad_LightsStatus *****************
 16176 ;; Defined at:
 16177 ;;		line 308 in file "G:\Program\PIC\Source_File\OverLoad_B1.c"
 16178 ;; Parameters:    Size  Location     Type
 16179 ;;  load            1    wreg     unsigned char 
 16180 ;;  lights          1    2[BANK0 ] unsigned char 
 16181 ;;  command         1    3[BANK0 ] unsigned char 
 16182 ;; Auto vars:     Size  Location     Type
 16183 ;;  load            1    5[BANK0 ] unsigned char 
 16184 ;; Return value:  Size  Location     Type
 16185 ;;		None               void
 16186 ;; Registers used:
 16187 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16188 ;; Tracked objects:
 16189 ;;		On entry : 0/0
 16190 ;;		On exit  : 0/0
 16191 ;;		Unchanged: 0/0
 16192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16193 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16194 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16195 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16196 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16197 ;;Total ram usage:        4 bytes
 16198 ;; Hardware stack levels used:    1
 16199 ;; Hardware stack levels required when called:    5
 16200 ;; This function calls:
 16201 ;;		_LoadPointSelect
 16202 ;; This function is called by:
 16203 ;;		_setDimmerLights
 16204 ;; This function uses a non-reentrant model
 16205 ;;
 16206                           
 16207                           
 16208                           ;psect for function _setLoad_LightsStatus
 16209  1978                     _setLoad_LightsStatus:	
 16210                           
 16211                           ;incstack = 0
 16212                           ; Regs used in _setLoad_LightsStatus: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 16213                           ;setLoad_LightsStatus@load stored from wreg
 16214  1978  0020               	movlb	0	; select bank0
 16215  1979  00A5               	movwf	setLoad_LightsStatus@load
 16216                           
 16217                           ;OverLoad_B1.c: 310: LoadPointSelect(load);
 16218  197A  0825               	movf	setLoad_LightsStatus@load,w
 16219  197B  31A2  2234  3199   	fcall	_LoadPointSelect
 16220                           
 16221                           ;OverLoad_B1.c: 311: if(lights == 1)
 16222  197E  0020               	movlb	0	; select bank0
 16223  197F  0822               	movf	setLoad_LightsStatus@lights,w
 16224  1980  3A01               	xorlw	1
 16225  1981  1D03               	skipz
 16226  1982  298C               	goto	l6977
 16227                           
 16228                           ;OverLoad_B1.c: 312: {
 16229                           ;OverLoad_B1.c: 313: Load->Lights1Status=command;
 16230  1983  0823               	movf	setLoad_LightsStatus@command,w
 16231  1984  00A4               	movwf	??_setLoad_LightsStatus
 16232  1985  086F               	movf	_Load,w
 16233  1986  3E43               	addlw	67
 16234  1987  0086               	movwf	6
 16235  1988  3002               	movlw	2	; select bank4/5
 16236  1989  0087               	movwf	7
 16237  198A  0824               	movf	??_setLoad_LightsStatus,w
 16238  198B  0081               	movwf	1
 16239  198C                     l6977:	
 16240                           
 16241                           ;OverLoad_B1.c: 314: }
 16242                           ;OverLoad_B1.c: 315: if(lights == 2)
 16243  198C  0822               	movf	setLoad_LightsStatus@lights,w
 16244  198D  3A02               	xorlw	2
 16245  198E  1D03               	skipz
 16246  198F  2999               	goto	l6981
 16247                           
 16248                           ;OverLoad_B1.c: 316: {
 16249                           ;OverLoad_B1.c: 317: Load->Lights2Status=command;
 16250  1990  0823               	movf	setLoad_LightsStatus@command,w
 16251  1991  00A4               	movwf	??_setLoad_LightsStatus
 16252  1992  086F               	movf	_Load,w
 16253  1993  3E44               	addlw	68
 16254  1994  0086               	movwf	6
 16255  1995  3002               	movlw	2	; select bank4/5
 16256  1996  0087               	movwf	7
 16257  1997  0824               	movf	??_setLoad_LightsStatus,w
 16258  1998  0081               	movwf	1
 16259  1999                     l6981:	
 16260                           
 16261                           ;OverLoad_B1.c: 318: }
 16262                           ;OverLoad_B1.c: 319: if(lights == 3)
 16263  1999  0822               	movf	setLoad_LightsStatus@lights,w
 16264  199A  3A03               	xorlw	3
 16265  199B  1D03               	skipz
 16266  199C  0008               	return
 16267                           
 16268                           ;OverLoad_B1.c: 320: {
 16269                           ;OverLoad_B1.c: 321: Load->Lights3Status=command;
 16270  199D  0823               	movf	setLoad_LightsStatus@command,w
 16271  199E  00A4               	movwf	??_setLoad_LightsStatus
 16272  199F  086F               	movf	_Load,w
 16273  19A0  3E45               	addlw	69
 16274  19A1  0086               	movwf	6
 16275  19A2  3002               	movlw	2	; select bank4/5
 16276  19A3  0087               	movwf	7
 16277  19A4  0824               	movf	??_setLoad_LightsStatus,w
 16278  19A5  0081               	movwf	1
 16279  19A6  0008               	return
 16280  19A7                     __end_of_setLoad_LightsStatus:	
 16281                           
 16282                           	psect	text99
 16283  24BE                     __ptext99:	
 16284 ;; *************** function _setLoad_Count *****************
 16285 ;; Defined at:
 16286 ;;		line 324 in file "G:\Program\PIC\Source_File\OverLoad_B1.c"
 16287 ;; Parameters:    Size  Location     Type
 16288 ;;  load            1    wreg     unsigned char 
 16289 ;;  command         1    0[BANK0 ] unsigned char 
 16290 ;; Auto vars:     Size  Location     Type
 16291 ;;  load            1    0[COMMON] unsigned char 
 16292 ;; Return value:  Size  Location     Type
 16293 ;;		None               void
 16294 ;; Registers used:
 16295 ;;		wreg, fsr1l, fsr1h
 16296 ;; Tracked objects:
 16297 ;;		On entry : 0/0
 16298 ;;		On exit  : 0/0
 16299 ;;		Unchanged: 0/0
 16300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16301 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16303 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16304 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16305 ;;Total ram usage:        2 bytes
 16306 ;; Hardware stack levels used:    1
 16307 ;; Hardware stack levels required when called:    4
 16308 ;; This function calls:
 16309 ;;		Nothing
 16310 ;; This function is called by:
 16311 ;;		_setDimmerLights
 16312 ;; This function uses a non-reentrant model
 16313 ;;
 16314                           
 16315                           
 16316                           ;psect for function _setLoad_Count
 16317  24BE                     _setLoad_Count:	
 16318                           
 16319                           ;OverLoad_B1.c: 326: Load->Count=command;
 16320                           
 16321                           ;incstack = 0
 16322                           ; Regs used in _setLoad_Count: [wregfsr1]
 16323  24BE  0020               	movlb	0	; select bank0
 16324  24BF  0820               	movf	setLoad_Count@command,w
 16325  24C0  00A1               	movwf	??_setLoad_Count
 16326  24C1  086F               	movf	_Load,w
 16327  24C2  3E3A               	addlw	58
 16328  24C3  0086               	movwf	6
 16329  24C4  3002               	movlw	2	; select bank4/5
 16330  24C5  0087               	movwf	7
 16331  24C6  0821               	movf	??_setLoad_Count,w
 16332  24C7  0081               	movwf	1
 16333                           
 16334                           ;OverLoad_B1.c: 327: Load->SafeCount=command;
 16335  24C8  0820               	movf	setLoad_Count@command,w
 16336  24C9  00A1               	movwf	??_setLoad_Count
 16337  24CA  086F               	movf	_Load,w
 16338  24CB  3E42               	addlw	66
 16339  24CC  0086               	movwf	6
 16340  24CD  3002               	movlw	2	; select bank4/5
 16341  24CE  0087               	movwf	7
 16342  24CF  0821               	movf	??_setLoad_Count,w
 16343  24D0  0081               	movwf	1
 16344  24D1  0008               	return
 16345  24D2                     __end_of_setLoad_Count:	
 16346                           
 16347                           	psect	text100
 16348  1E79                     __ptext100:	
 16349 ;; *************** function _setLED *****************
 16350 ;; Defined at:
 16351 ;;		line 74 in file "G:\Program\PIC\Source_File\LED_B1.c"
 16352 ;; Parameters:    Size  Location     Type
 16353 ;;  led             1    wreg     unsigned char 
 16354 ;;  command         1    2[BANK0 ] unsigned char 
 16355 ;; Auto vars:     Size  Location     Type
 16356 ;;  led             1    3[BANK0 ] unsigned char 
 16357 ;; Return value:  Size  Location     Type
 16358 ;;		None               void
 16359 ;; Registers used:
 16360 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16361 ;; Tracked objects:
 16362 ;;		On entry : 0/0
 16363 ;;		On exit  : 0/0
 16364 ;;		Unchanged: 0/0
 16365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16366 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16367 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16369 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16370 ;;Total ram usage:        2 bytes
 16371 ;; Hardware stack levels used:    1
 16372 ;; Hardware stack levels required when called:    5
 16373 ;; This function calls:
 16374 ;;		_LedPointSelect
 16375 ;; This function is called by:
 16376 ;;		_setDimmerLights_ERROR
 16377 ;;		_setDimmerLights
 16378 ;;		_setLED_Initialization
 16379 ;;		_MainT
 16380 ;;		_setLoad_ERROR
 16381 ;;		_setOverTemp_ERROR
 16382 ;;		_setPowerFault_ERROR
 16383 ;;		_setSw_Initialization
 16384 ;; This function uses a non-reentrant model
 16385 ;;
 16386                           
 16387                           
 16388                           ;psect for function _setLED
 16389  1E79                     _setLED:	
 16390                           
 16391                           ;incstack = 0
 16392                           ; Regs used in _setLED: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 16393                           ;setLED@led stored from wreg
 16394  1E79  0020               	movlb	0	; select bank0
 16395  1E7A  00A3               	movwf	setLED@led
 16396                           
 16397                           ;LED_B1.c: 76: LedPointSelect(led);
 16398  1E7B  0823               	movf	setLED@led,w
 16399  1E7C  31A7  2702  319E   	fcall	_LedPointSelect
 16400                           
 16401                           ;LED_B1.c: 77: if(command == 0)
 16402  1E7F  0020               	movlb	0	; select bank0
 16403  1E80  08A2               	movf	setLED@command,f
 16404  1E81  1D03               	skipz
 16405  1E82  2E95               	goto	l6931
 16406                           
 16407                           ;LED_B1.c: 78: {
 16408                           ;LED_B1.c: 80: if(led == 1)
 16409  1E83  0823               	movf	setLED@led,w
 16410  1E84  3A01               	xorlw	1
 16411  1E85  1D03               	skipz
 16412  1E86  2E89               	goto	l6923
 16413                           
 16414                           ;LED_B1.c: 81: {
 16415                           ;LED_B1.c: 85: RC7=1;
 16416  1E87  178E               	bsf	14,7	;volatile
 16417                           
 16418                           ;LED_B1.c: 87: }
 16419  1E88  0008               	return
 16420  1E89                     l6923:	
 16421                           
 16422                           ;LED_B1.c: 90: else if(led == 2)
 16423  1E89  0823               	movf	setLED@led,w
 16424  1E8A  3A02               	xorlw	2
 16425  1E8B  1D03               	skipz
 16426  1E8C  2E8F               	goto	l6927
 16427                           
 16428                           ;LED_B1.c: 91: {
 16429                           ;LED_B1.c: 95: RA3=1;
 16430  1E8D  158C               	bsf	12,3	;volatile
 16431                           
 16432                           ;LED_B1.c: 97: }
 16433  1E8E  0008               	return
 16434  1E8F                     l6927:	
 16435                           
 16436                           ;LED_B1.c: 110: else if(led == 99)
 16437  1E8F  0823               	movf	setLED@led,w
 16438  1E90  3A63               	xorlw	99
 16439  1E91  1D03               	skipz
 16440  1E92  0008               	return
 16441                           
 16442                           ;LED_B1.c: 111: {
 16443                           ;LED_B1.c: 115: RB5=1;
 16444  1E93  168D               	bsf	13,5	;volatile
 16445                           
 16446                           ;LED_B1.c: 117: }
 16447                           ;LED_B1.c: 119: }
 16448  1E94  0008               	return
 16449  1E95                     l6931:	
 16450                           
 16451                           ;LED_B1.c: 120: else if(command == 1)
 16452  1E95  0822               	movf	setLED@command,w
 16453  1E96  3A01               	xorlw	1
 16454  1E97  1D03               	skipz
 16455  1E98  2EAB               	goto	l6945
 16456                           
 16457                           ;LED_B1.c: 121: {
 16458                           ;LED_B1.c: 123: if(led == 1)
 16459  1E99  0823               	movf	setLED@led,w
 16460  1E9A  3A01               	xorlw	1
 16461  1E9B  1D03               	skipz
 16462  1E9C  2E9F               	goto	l6937
 16463                           
 16464                           ;LED_B1.c: 124: {
 16465                           ;LED_B1.c: 128: RC7=0;
 16466  1E9D  138E               	bcf	14,7	;volatile
 16467                           
 16468                           ;LED_B1.c: 130: }
 16469  1E9E  0008               	return
 16470  1E9F                     l6937:	
 16471                           
 16472                           ;LED_B1.c: 133: else if(led == 2)
 16473  1E9F  0823               	movf	setLED@led,w
 16474  1EA0  3A02               	xorlw	2
 16475  1EA1  1D03               	skipz
 16476  1EA2  2EA5               	goto	l6941
 16477                           
 16478                           ;LED_B1.c: 134: {
 16479                           ;LED_B1.c: 138: RA3=0;
 16480  1EA3  118C               	bcf	12,3	;volatile
 16481                           
 16482                           ;LED_B1.c: 140: }
 16483  1EA4  0008               	return
 16484  1EA5                     l6941:	
 16485                           
 16486                           ;LED_B1.c: 153: else if(led == 99)
 16487  1EA5  0823               	movf	setLED@led,w
 16488  1EA6  3A63               	xorlw	99
 16489  1EA7  1D03               	skipz
 16490  1EA8  0008               	return
 16491                           
 16492                           ;LED_B1.c: 154: {
 16493                           ;LED_B1.c: 158: RB5=0;
 16494  1EA9  128D               	bcf	13,5	;volatile
 16495                           
 16496                           ;LED_B1.c: 160: }
 16497                           ;LED_B1.c: 162: }
 16498  1EAA  0008               	return
 16499  1EAB                     l6945:	
 16500                           
 16501                           ;LED_B1.c: 163: else if(command == 10)
 16502  1EAB  0822               	movf	setLED@command,w
 16503  1EAC  3A0A               	xorlw	10
 16504  1EAD  1D03               	skipz
 16505  1EAE  2ECD               	goto	l6961
 16506                           
 16507                           ;LED_B1.c: 164: {
 16508                           ;LED_B1.c: 165: LED->GO=0;
 16509  1EAF  0021               	movlb	1	; select bank1
 16510  1EB0  083C               	movf	_LED^(0+128),w
 16511  1EB1  0086               	movwf	6
 16512  1EB2  0187               	clrf	7
 16513  1EB3  1081               	bcf	1,1
 16514                           
 16515                           ;LED_B1.c: 166: LED->Time=0;
 16516  1EB4  0A3C               	incf	_LED^(0+128),w
 16517  1EB5  0086               	movwf	6
 16518  1EB6  0187               	clrf	7
 16519  1EB7  3000               	movlw	0
 16520  1EB8  3FC0               	movwi [0]fsr1
 16521  1EB9  3FC1               	movwi [1]fsr1
 16522                           
 16523                           ;LED_B1.c: 168: if(led == 1)
 16524  1EBA  0020               	movlb	0	; select bank0
 16525  1EBB  0823               	movf	setLED@led,w
 16526  1EBC  3A01               	xorlw	1
 16527  1EBD  1D03               	skipz
 16528  1EBE  2EC1               	goto	l6953
 16529                           
 16530                           ;LED_B1.c: 169: {
 16531                           ;LED_B1.c: 173: RC7=1;
 16532  1EBF  178E               	bsf	14,7	;volatile
 16533                           
 16534                           ;LED_B1.c: 175: }
 16535  1EC0  0008               	return
 16536  1EC1                     l6953:	
 16537                           
 16538                           ;LED_B1.c: 178: else if(led == 2)
 16539  1EC1  0823               	movf	setLED@led,w
 16540  1EC2  3A02               	xorlw	2
 16541  1EC3  1D03               	skipz
 16542  1EC4  2EC7               	goto	l6957
 16543                           
 16544                           ;LED_B1.c: 179: {
 16545                           ;LED_B1.c: 183: RA3=1;
 16546  1EC5  158C               	bsf	12,3	;volatile
 16547                           
 16548                           ;LED_B1.c: 185: }
 16549  1EC6  0008               	return
 16550  1EC7                     l6957:	
 16551                           
 16552                           ;LED_B1.c: 198: else if(led == 99)
 16553  1EC7  0823               	movf	setLED@led,w
 16554  1EC8  3A63               	xorlw	99
 16555  1EC9  1D03               	skipz
 16556  1ECA  0008               	return
 16557                           
 16558                           ;LED_B1.c: 199: {
 16559                           ;LED_B1.c: 203: RB5=1;
 16560  1ECB  168D               	bsf	13,5	;volatile
 16561                           
 16562                           ;LED_B1.c: 205: }
 16563                           ;LED_B1.c: 207: }
 16564  1ECC  0008               	return
 16565  1ECD                     l6961:	
 16566                           
 16567                           ;LED_B1.c: 208: else if(command == 11)
 16568  1ECD  0822               	movf	setLED@command,w
 16569  1ECE  3A0B               	xorlw	11
 16570  1ECF  1D03               	skipz
 16571  1ED0  0008               	return
 16572                           
 16573                           ;LED_B1.c: 209: {
 16574                           ;LED_B1.c: 210: LED->GO=1;
 16575  1ED1  0021               	movlb	1	; select bank1
 16576  1ED2  083C               	movf	_LED^(0+128),w
 16577  1ED3  0086               	movwf	6
 16578  1ED4  0187               	clrf	7
 16579  1ED5  1481               	bsf	1,1
 16580  1ED6  0008               	return
 16581  1ED7                     __end_of_setLED:	
 16582                           
 16583                           	psect	text101
 16584  2702                     __ptext101:	
 16585 ;; *************** function _LedPointSelect *****************
 16586 ;; Defined at:
 16587 ;;		line 7 in file "G:\Program\PIC\Source_File\LED_B1.c"
 16588 ;; Parameters:    Size  Location     Type
 16589 ;;  led             1    wreg     unsigned char 
 16590 ;; Auto vars:     Size  Location     Type
 16591 ;;  led             1    1[BANK0 ] unsigned char 
 16592 ;; Return value:  Size  Location     Type
 16593 ;;		None               void
 16594 ;; Registers used:
 16595 ;;		wreg
 16596 ;; Tracked objects:
 16597 ;;		On entry : 0/0
 16598 ;;		On exit  : 0/0
 16599 ;;		Unchanged: 0/0
 16600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16601 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16602 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16603 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16604 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16605 ;;Total ram usage:        2 bytes
 16606 ;; Hardware stack levels used:    1
 16607 ;; Hardware stack levels required when called:    4
 16608 ;; This function calls:
 16609 ;;		Nothing
 16610 ;; This function is called by:
 16611 ;;		_setLED_Initialization
 16612 ;;		_setLED
 16613 ;;		_setLED_Main
 16614 ;; This function uses a non-reentrant model
 16615 ;;
 16616                           
 16617                           
 16618                           ;psect for function _LedPointSelect
 16619  2702                     _LedPointSelect:	
 16620                           
 16621                           ;incstack = 0
 16622                           ; Regs used in _LedPointSelect: [wreg]
 16623                           ;LedPointSelect@led stored from wreg
 16624  2702  0020               	movlb	0	; select bank0
 16625  2703  00A1               	movwf	LedPointSelect@led
 16626                           
 16627                           ;LED_B1.c: 10: if(led == 1)
 16628  2704  0821               	movf	LedPointSelect@led,w
 16629  2705  3A01               	xorlw	1
 16630  2706  1D03               	skipz
 16631  2707  2F0E               	goto	l6747
 16632                           
 16633                           ;LED_B1.c: 11: {
 16634                           ;LED_B1.c: 12: LED=&VarLED1;
 16635  2708  30DC               	movlw	_VarLED1& (0+255)
 16636  2709  00A0               	movwf	??_LedPointSelect
 16637  270A  0820               	movf	??_LedPointSelect,w
 16638  270B  0021               	movlb	1	; select bank1
 16639  270C  00BC               	movwf	_LED^(0+128)
 16640                           
 16641                           ;LED_B1.c: 13: }
 16642  270D  0008               	return
 16643  270E                     l6747:	
 16644                           
 16645                           ;LED_B1.c: 16: else if(led == 2)
 16646  270E  0020               	movlb	0	; select bank0
 16647  270F  0821               	movf	LedPointSelect@led,w
 16648  2710  3A02               	xorlw	2
 16649  2711  1D03               	skipz
 16650  2712  2F19               	goto	l6751
 16651                           
 16652                           ;LED_B1.c: 17: {
 16653                           ;LED_B1.c: 18: LED=&VarLED2;
 16654  2713  30E0               	movlw	_VarLED2& (0+255)
 16655  2714  00A0               	movwf	??_LedPointSelect
 16656  2715  0820               	movf	??_LedPointSelect,w
 16657  2716  0021               	movlb	1	; select bank1
 16658  2717  00BC               	movwf	_LED^(0+128)
 16659                           
 16660                           ;LED_B1.c: 19: }
 16661  2718  0008               	return
 16662  2719                     l6751:	
 16663                           
 16664                           ;LED_B1.c: 28: else if(led == 99)
 16665  2719  0020               	movlb	0	; select bank0
 16666  271A  0821               	movf	LedPointSelect@led,w
 16667  271B  3A63               	xorlw	99
 16668  271C  1D03               	skipz
 16669  271D  0008               	return
 16670                           
 16671                           ;LED_B1.c: 29: {
 16672                           ;LED_B1.c: 30: LED=&VarErrLED;
 16673  271E  30D8               	movlw	_VarErrLED& (0+255)
 16674  271F  00A0               	movwf	??_LedPointSelect
 16675  2720  0820               	movf	??_LedPointSelect,w
 16676  2721  0021               	movlb	1	; select bank1
 16677  2722  00BC               	movwf	_LED^(0+128)
 16678  2723  0008               	return
 16679  2724                     __end_of_LedPointSelect:	
 16680                           
 16681                           	psect	text102
 16682  26BF                     __ptext102:	
 16683 ;; *************** function _getDimmerLights_Trigger *****************
 16684 ;; Defined at:
 16685 ;;		line 231 in file "G:\Program\PIC\Source_File\Dimmer_B1.c"
 16686 ;; Parameters:    Size  Location     Type
 16687 ;;		None
 16688 ;; Auto vars:     Size  Location     Type
 16689 ;;  i               1    5[BANK0 ] unsigned char 
 16690 ;;  Status          1    4[BANK0 ] unsigned char 
 16691 ;;  length          1    3[BANK0 ] unsigned char 
 16692 ;; Return value:  Size  Location     Type
 16693 ;;                  1    wreg      unsigned char 
 16694 ;; Registers used:
 16695 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16696 ;; Tracked objects:
 16697 ;;		On entry : 0/0
 16698 ;;		On exit  : 0/0
 16699 ;;		Unchanged: 0/0
 16700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16701 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16702 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16703 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16704 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16705 ;;Total ram usage:        4 bytes
 16706 ;; Hardware stack levels used:    1
 16707 ;; Hardware stack levels required when called:    5
 16708 ;; This function calls:
 16709 ;;		_DimmerLightsPointSelect
 16710 ;; This function is called by:
 16711 ;;		_setDimmerLights_Main
 16712 ;; This function uses a non-reentrant model
 16713 ;;
 16714                           
 16715                           
 16716                           ;psect for function _getDimmerLights_Trigger
 16717  26BF                     _getDimmerLights_Trigger:	
 16718                           
 16719                           ;Dimmer_B1.c: 233: char Status=0,i,length;
 16720                           
 16721                           ;incstack = 0
 16722                           ; Regs used in _getDimmerLights_Trigger: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 16723  26BF  0020               	movlb	0	; select bank0
 16724  26C0  01A4               	clrf	getDimmerLights_Trigger@Status
 16725                           
 16726                           ;Dimmer_B1.c: 238: length=2;
 16727  26C1  3002               	movlw	2
 16728  26C2  00A2               	movwf	??_getDimmerLights_Trigger
 16729  26C3  0822               	movf	??_getDimmerLights_Trigger,w
 16730  26C4  00A3               	movwf	getDimmerLights_Trigger@length
 16731                           
 16732                           ;Dimmer_B1.c: 244: for(i=0 ; i<length ; i++)
 16733  26C5  01A5               	clrf	getDimmerLights_Trigger@i
 16734  26C6                     l7443:	
 16735  26C6  0823               	movf	getDimmerLights_Trigger@length,w
 16736  26C7  0225               	subwf	getDimmerLights_Trigger@i,w
 16737  26C8  1803               	btfsc	3,0
 16738  26C9  2EDE               	goto	l7445
 16739                           
 16740                           ;Dimmer_B1.c: 245: {
 16741                           ;Dimmer_B1.c: 246: DimmerLightsPointSelect(i+1);
 16742  26CA  0825               	movf	getDimmerLights_Trigger@i,w
 16743  26CB  3E01               	addlw	1
 16744  26CC  31A4  2497  31A6   	fcall	_DimmerLightsPointSelect
 16745                           
 16746                           ;Dimmer_B1.c: 247: if(DimmerLights->Trigger)
 16747  26CF  0020               	movlb	0	; select bank0
 16748  26D0  086D               	movf	_DimmerLights,w
 16749  26D1  3E09               	addlw	9
 16750  26D2  0086               	movwf	6
 16751  26D3  3001               	movlw	1	; select bank2/3
 16752  26D4  0087               	movwf	7
 16753  26D5  1C81               	btfss	1,1
 16754  26D6  2ED9               	goto	l7441
 16755                           
 16756                           ;Dimmer_B1.c: 248: {
 16757                           ;Dimmer_B1.c: 249: Status=1;
 16758  26D7  01A4               	clrf	getDimmerLights_Trigger@Status
 16759  26D8  0AA4               	incf	getDimmerLights_Trigger@Status,f
 16760  26D9                     l7441:	
 16761  26D9  3001               	movlw	1
 16762  26DA  00A2               	movwf	??_getDimmerLights_Trigger
 16763  26DB  0822               	movf	??_getDimmerLights_Trigger,w
 16764  26DC  07A5               	addwf	getDimmerLights_Trigger@i,f
 16765  26DD  2EC6               	goto	l7443
 16766  26DE                     l7445:	
 16767                           
 16768                           ;Dimmer_B1.c: 250: }
 16769                           ;Dimmer_B1.c: 251: }
 16770                           ;Dimmer_B1.c: 252: return Status;
 16771  26DE  0824               	movf	getDimmerLights_Trigger@Status,w
 16772  26DF  0008               	return
 16773  26E0                     __end_of_getDimmerLights_Trigger:	
 16774                           
 16775                           	psect	text103
 16776  269F                     __ptext103:	
 16777 ;; *************** function _DimmerLights_Close *****************
 16778 ;; Defined at:
 16779 ;;		line 85 in file "G:\Program\PIC\Source_File\Dimmer_B1.c"
 16780 ;; Parameters:    Size  Location     Type
 16781 ;;		None
 16782 ;; Auto vars:     Size  Location     Type
 16783 ;;		None
 16784 ;; Return value:  Size  Location     Type
 16785 ;;		None               void
 16786 ;; Registers used:
 16787 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16788 ;; Tracked objects:
 16789 ;;		On entry : 0/0
 16790 ;;		On exit  : 0/0
 16791 ;;		Unchanged: 0/0
 16792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16794 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16796 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16797 ;;Total ram usage:        0 bytes
 16798 ;; Hardware stack levels used:    1
 16799 ;; Hardware stack levels required when called:    6
 16800 ;; This function calls:
 16801 ;;		_getDimmerLights_StatusFlag
 16802 ;;		_getDimmer_Detect
 16803 ;;		_setDimmer_Detect
 16804 ;;		_setLoad_GO
 16805 ;; This function is called by:
 16806 ;;		_DimmerLights_Main
 16807 ;; This function uses a non-reentrant model
 16808 ;;
 16809                           
 16810                           
 16811                           ;psect for function _DimmerLights_Close
 16812  269F                     _DimmerLights_Close:	
 16813                           
 16814                           ;Dimmer_B1.c: 87: if(getDimmer_Detect(1))
 16815                           
 16816                           ;incstack = 0
 16817                           ; Regs used in _DimmerLights_Close: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 16818  269F  3001               	movlw	1
 16819  26A0  31A3  23F3  31A6   	fcall	_getDimmer_Detect
 16820  26A3  3A00               	xorlw	0
 16821  26A4  1903               	skipnz
 16822  26A5  0008               	return
 16823                           
 16824                           ;Dimmer_B1.c: 88: {
 16825                           ;Dimmer_B1.c: 89: setDimmer_Detect(1,0);
 16826  26A6  0020               	movlb	0	; select bank0
 16827  26A7  01A2               	clrf	setDimmer_Detect@command
 16828  26A8  3001               	movlw	1
 16829  26A9  31A3  232C  31A6   	fcall	_setDimmer_Detect
 16830                           
 16831                           ;Dimmer_B1.c: 90: if(!getDimmerLights_StatusFlag())
 16832  26AC  31A6  267F  31A6   	fcall	_getDimmerLights_StatusFlag
 16833  26AF  3800               	iorlw	0
 16834  26B0  1D03               	skipz
 16835  26B1  0008               	return
 16836                           
 16837                           ;Dimmer_B1.c: 91: {
 16838                           ;Dimmer_B1.c: 92: setLoad_GO(1,0);
 16839  26B2  0020               	movlb	0	; select bank0
 16840  26B3  01A2               	clrf	setLoad_GO@command
 16841  26B4  3001               	movlw	1
 16842  26B5  31A3  233B         	fcall	_setLoad_GO
 16843                           
 16844                           ;Dimmer_B1.c: 93: Memory->GO=1;
 16845  26B7  0021               	movlb	1	; select bank1
 16846  26B8  086B               	movf	_Memory^(0+128),w
 16847  26B9  3E22               	addlw	34
 16848  26BA  0086               	movwf	6
 16849  26BB  3002               	movlw	2	; select bank4/5
 16850  26BC  0087               	movwf	7
 16851  26BD  1481               	bsf	1,1
 16852  26BE  0008               	return
 16853  26BF                     __end_of_DimmerLights_Close:	
 16854                           
 16855                           	psect	text104
 16856  233B                     __ptext104:	
 16857 ;; *************** function _setLoad_GO *****************
 16858 ;; Defined at:
 16859 ;;		line 336 in file "G:\Program\PIC\Source_File\OverLoad_B1.c"
 16860 ;; Parameters:    Size  Location     Type
 16861 ;;  load            1    wreg     unsigned char 
 16862 ;;  command         1    2[BANK0 ] unsigned char 
 16863 ;; Auto vars:     Size  Location     Type
 16864 ;;  load            1    3[BANK0 ] unsigned char 
 16865 ;; Return value:  Size  Location     Type
 16866 ;;		None               void
 16867 ;; Registers used:
 16868 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16869 ;; Tracked objects:
 16870 ;;		On entry : 0/0
 16871 ;;		On exit  : 0/0
 16872 ;;		Unchanged: 0/0
 16873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16874 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16875 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16877 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16878 ;;Total ram usage:        2 bytes
 16879 ;; Hardware stack levels used:    1
 16880 ;; Hardware stack levels required when called:    5
 16881 ;; This function calls:
 16882 ;;		_LoadPointSelect
 16883 ;; This function is called by:
 16884 ;;		_DimmerLights_Close
 16885 ;;		_setDimmerLights
 16886 ;; This function uses a non-reentrant model
 16887 ;;
 16888                           
 16889                           
 16890                           ;psect for function _setLoad_GO
 16891  233B                     _setLoad_GO:	
 16892                           
 16893                           ;incstack = 0
 16894                           ; Regs used in _setLoad_GO: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 16895                           ;setLoad_GO@load stored from wreg
 16896  233B  0020               	movlb	0	; select bank0
 16897  233C  00A3               	movwf	setLoad_GO@load
 16898                           
 16899                           ;OverLoad_B1.c: 338: LoadPointSelect(load);
 16900  233D  0823               	movf	setLoad_GO@load,w
 16901  233E  31A2  2234         	fcall	_LoadPointSelect
 16902                           
 16903                           ;OverLoad_B1.c: 339: Load->GO=command;
 16904  2340  0020               	movlb	0	; select bank0
 16905  2341  086F               	movf	_Load,w
 16906  2342  0086               	movwf	6
 16907  2343  3002               	movlw	2	; select bank4/5
 16908  2344  0087               	movwf	7
 16909  2345  0822               	movf	setLoad_GO@command,w
 16910  2346  1081               	bcf	1,1
 16911  2347  1D03               	skipz
 16912  2348  1481               	bsf	1,1
 16913  2349  0008               	return
 16914  234A                     __end_of_setLoad_GO:	
 16915                           
 16916                           	psect	text105
 16917  2234                     __ptext105:	
 16918 ;; *************** function _LoadPointSelect *****************
 16919 ;; Defined at:
 16920 ;;		line 7 in file "G:\Program\PIC\Source_File\OverLoad_B1.c"
 16921 ;; Parameters:    Size  Location     Type
 16922 ;;  load            1    wreg     unsigned char 
 16923 ;; Auto vars:     Size  Location     Type
 16924 ;;  load            1    1[BANK0 ] unsigned char 
 16925 ;; Return value:  Size  Location     Type
 16926 ;;		None               void
 16927 ;; Registers used:
 16928 ;;		wreg
 16929 ;; Tracked objects:
 16930 ;;		On entry : 0/0
 16931 ;;		On exit  : 0/0
 16932 ;;		Unchanged: 0/0
 16933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16935 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16936 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16937 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16938 ;;Total ram usage:        2 bytes
 16939 ;; Hardware stack levels used:    1
 16940 ;; Hardware stack levels required when called:    4
 16941 ;; This function calls:
 16942 ;;		Nothing
 16943 ;; This function is called by:
 16944 ;;		_setLoad_Initialization
 16945 ;;		_getLoad_AD
 16946 ;;		_setLoad_Main
 16947 ;;		_setLoad_ERROR
 16948 ;;		_setLoad_LightsStatus
 16949 ;;		_setLoad_Enable
 16950 ;;		_setLoad_GO
 16951 ;;		_setLoad_StatusOn
 16952 ;;		_setLoad_StatusOff
 16953 ;;		_getLoad_Safe
 16954 ;;		_setLoad_LightsCount
 16955 ;;		_getLoad_ERROR
 16956 ;; This function uses a non-reentrant model
 16957 ;;
 16958                           
 16959                           
 16960                           ;psect for function _LoadPointSelect
 16961  2234                     _LoadPointSelect:	
 16962                           
 16963                           ;incstack = 0
 16964                           ; Regs used in _LoadPointSelect: [wreg]
 16965                           ;LoadPointSelect@load stored from wreg
 16966  2234  0020               	movlb	0	; select bank0
 16967  2235  00A1               	movwf	LoadPointSelect@load
 16968                           
 16969                           ;OverLoad_B1.c: 10: if(load == 1)
 16970  2236  0821               	movf	LoadPointSelect@load,w
 16971  2237  3A01               	xorlw	1
 16972  2238  1D03               	skipz
 16973  2239  0008               	return
 16974                           
 16975                           ;OverLoad_B1.c: 11: {
 16976                           ;OverLoad_B1.c: 12: Load=&Load1;
 16977  223A  30A0               	movlw	_Load1& (0+255)
 16978  223B  00A0               	movwf	??_LoadPointSelect
 16979  223C  0820               	movf	??_LoadPointSelect,w
 16980  223D  00EF               	movwf	_Load
 16981  223E  0008               	return
 16982  223F                     __end_of_LoadPointSelect:	
 16983                           
 16984                           	psect	text106
 16985  232C                     __ptext106:	
 16986 ;; *************** function _setDimmer_Detect *****************
 16987 ;; Defined at:
 16988 ;;		line 546 in file "G:\Program\PIC\Source_File\Dimmer_B1.c"
 16989 ;; Parameters:    Size  Location     Type
 16990 ;;  dimmer          1    wreg     unsigned char 
 16991 ;;  command         1    2[BANK0 ] unsigned char 
 16992 ;; Auto vars:     Size  Location     Type
 16993 ;;  dimmer          1    3[BANK0 ] unsigned char 
 16994 ;; Return value:  Size  Location     Type
 16995 ;;		None               void
 16996 ;; Registers used:
 16997 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16998 ;; Tracked objects:
 16999 ;;		On entry : 0/0
 17000 ;;		On exit  : 0/0
 17001 ;;		Unchanged: 0/0
 17002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17003 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17004 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17006 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17007 ;;Total ram usage:        2 bytes
 17008 ;; Hardware stack levels used:    1
 17009 ;; Hardware stack levels required when called:    5
 17010 ;; This function calls:
 17011 ;;		_DimmerPointSelect
 17012 ;; This function is called by:
 17013 ;;		_DimmerLights_Close
 17014 ;;		_setDimmerLights
 17015 ;; This function uses a non-reentrant model
 17016 ;;
 17017                           
 17018                           
 17019                           ;psect for function _setDimmer_Detect
 17020  232C                     _setDimmer_Detect:	
 17021                           
 17022                           ;incstack = 0
 17023                           ; Regs used in _setDimmer_Detect: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 17024                           ;setDimmer_Detect@dimmer stored from wreg
 17025  232C  0020               	movlb	0	; select bank0
 17026  232D  00A3               	movwf	setDimmer_Detect@dimmer
 17027                           
 17028                           ;Dimmer_B1.c: 548: DimmerPointSelect(dimmer);
 17029  232E  0823               	movf	setDimmer_Detect@dimmer,w
 17030  232F  31A2  2285         	fcall	_DimmerPointSelect
 17031                           
 17032                           ;Dimmer_B1.c: 549: Dimmer->Detect=command;
 17033  2331  0021               	movlb	1	; select bank1
 17034  2332  083A               	movf	_Dimmer^(0+128),w
 17035  2333  0086               	movwf	6
 17036  2334  0187               	clrf	7
 17037  2335  0020               	movlb	0	; select bank0
 17038  2336  0822               	movf	setDimmer_Detect@command,w
 17039  2337  1181               	bcf	1,3
 17040  2338  1D03               	skipz
 17041  2339  1581               	bsf	1,3
 17042  233A  0008               	return
 17043  233B                     __end_of_setDimmer_Detect:	
 17044                           
 17045                           	psect	text107
 17046  23F3                     __ptext107:	
 17047 ;; *************** function _getDimmer_Detect *****************
 17048 ;; Defined at:
 17049 ;;		line 566 in file "G:\Program\PIC\Source_File\Dimmer_B1.c"
 17050 ;; Parameters:    Size  Location     Type
 17051 ;;  dimmer          1    wreg     unsigned char 
 17052 ;; Auto vars:     Size  Location     Type
 17053 ;;  dimmer          1    3[BANK0 ] unsigned char 
 17054 ;; Return value:  Size  Location     Type
 17055 ;;                  1    wreg      unsigned char 
 17056 ;; Registers used:
 17057 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17058 ;; Tracked objects:
 17059 ;;		On entry : 0/0
 17060 ;;		On exit  : 0/0
 17061 ;;		Unchanged: 0/0
 17062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17063 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17064 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17065 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17066 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17067 ;;Total ram usage:        2 bytes
 17068 ;; Hardware stack levels used:    1
 17069 ;; Hardware stack levels required when called:    5
 17070 ;; This function calls:
 17071 ;;		_DimmerPointSelect
 17072 ;; This function is called by:
 17073 ;;		_DimmerLights_Close
 17074 ;; This function uses a non-reentrant model
 17075 ;;
 17076                           
 17077                           
 17078                           ;psect for function _getDimmer_Detect
 17079  23F3                     _getDimmer_Detect:	
 17080                           
 17081                           ;incstack = 0
 17082                           ; Regs used in _getDimmer_Detect: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 17083                           ;getDimmer_Detect@dimmer stored from wreg
 17084  23F3  0020               	movlb	0	; select bank0
 17085  23F4  00A3               	movwf	getDimmer_Detect@dimmer
 17086                           
 17087                           ;Dimmer_B1.c: 568: DimmerPointSelect(dimmer);
 17088  23F5  0823               	movf	getDimmer_Detect@dimmer,w
 17089  23F6  31A2  2285         	fcall	_DimmerPointSelect
 17090                           
 17091                           ;Dimmer_B1.c: 569: return Dimmer->Detect;
 17092  23F8  0021               	movlb	1	; select bank1
 17093  23F9  083A               	movf	_Dimmer^(0+128),w
 17094  23FA  0086               	movwf	6
 17095  23FB  0187               	clrf	7
 17096  23FC  0C01               	rrf	1,w
 17097  23FD  0020               	movlb	0	; select bank0
 17098  23FE  00A2               	movwf	??_getDimmer_Detect
 17099  23FF  0CA2               	rrf	??_getDimmer_Detect,f
 17100  2400  0C22               	rrf	??_getDimmer_Detect,w
 17101  2401  3901               	andlw	1
 17102  2402  0008               	return
 17103  2403                     __end_of_getDimmer_Detect:	
 17104                           
 17105                           	psect	text108
 17106  2285                     __ptext108:	
 17107 ;; *************** function _DimmerPointSelect *****************
 17108 ;; Defined at:
 17109 ;;		line 521 in file "G:\Program\PIC\Source_File\Dimmer_B1.c"
 17110 ;; Parameters:    Size  Location     Type
 17111 ;;  dimmer          1    wreg     unsigned char 
 17112 ;; Auto vars:     Size  Location     Type
 17113 ;;  dimmer          1    1[BANK0 ] unsigned char 
 17114 ;; Return value:  Size  Location     Type
 17115 ;;		None               void
 17116 ;; Registers used:
 17117 ;;		wreg
 17118 ;; Tracked objects:
 17119 ;;		On entry : 0/0
 17120 ;;		On exit  : 0/0
 17121 ;;		Unchanged: 0/0
 17122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17124 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17125 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17126 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17127 ;;Total ram usage:        2 bytes
 17128 ;; Hardware stack levels used:    1
 17129 ;; Hardware stack levels required when called:    4
 17130 ;; This function calls:
 17131 ;;		Nothing
 17132 ;; This function is called by:
 17133 ;;		_setDimmer_TempERROR
 17134 ;;		_setDimmer_LoadERROR
 17135 ;;		_setDimmer_PFERROR
 17136 ;;		_setDimmer_Detect
 17137 ;;		_getDimmer_TempERROR
 17138 ;;		_getDimmer_LoadERROR
 17139 ;;		_getDimmer_PFERROR
 17140 ;;		_getDimmer_Detect
 17141 ;; This function uses a non-reentrant model
 17142 ;;
 17143                           
 17144                           
 17145                           ;psect for function _DimmerPointSelect
 17146  2285                     _DimmerPointSelect:	
 17147                           
 17148                           ;incstack = 0
 17149                           ; Regs used in _DimmerPointSelect: [wreg]
 17150                           ;DimmerPointSelect@dimmer stored from wreg
 17151  2285  0020               	movlb	0	; select bank0
 17152  2286  00A1               	movwf	DimmerPointSelect@dimmer
 17153                           
 17154                           ;Dimmer_B1.c: 525: if(dimmer == 1)
 17155  2287  0821               	movf	DimmerPointSelect@dimmer,w
 17156  2288  3A01               	xorlw	1
 17157  2289  1D03               	skipz
 17158  228A  0008               	return
 17159                           
 17160                           ;Dimmer_B1.c: 526: {
 17161                           ;Dimmer_B1.c: 527: Dimmer=&Dimmer1;
 17162  228B  30E4               	movlw	_Dimmer1& (0+255)
 17163  228C  00A0               	movwf	??_DimmerPointSelect
 17164  228D  0820               	movf	??_DimmerPointSelect,w
 17165  228E  0021               	movlb	1	; select bank1
 17166  228F  00BA               	movwf	_Dimmer^(0+128)
 17167  2290  0008               	return
 17168  2291                     __end_of_DimmerPointSelect:	
 17169                           
 17170                           	psect	text109
 17171  267F                     __ptext109:	
 17172 ;; *************** function _getDimmerLights_StatusFlag *****************
 17173 ;; Defined at:
 17174 ;;		line 206 in file "G:\Program\PIC\Source_File\Dimmer_B1.c"
 17175 ;; Parameters:    Size  Location     Type
 17176 ;;		None
 17177 ;; Auto vars:     Size  Location     Type
 17178 ;;  i               1    5[BANK0 ] unsigned char 
 17179 ;;  Status          1    4[BANK0 ] unsigned char 
 17180 ;;  length          1    3[BANK0 ] unsigned char 
 17181 ;; Return value:  Size  Location     Type
 17182 ;;                  1    wreg      unsigned char 
 17183 ;; Registers used:
 17184 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17185 ;; Tracked objects:
 17186 ;;		On entry : 0/0
 17187 ;;		On exit  : 0/0
 17188 ;;		Unchanged: 0/0
 17189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17191 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17192 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17193 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17194 ;;Total ram usage:        4 bytes
 17195 ;; Hardware stack levels used:    1
 17196 ;; Hardware stack levels required when called:    5
 17197 ;; This function calls:
 17198 ;;		_DimmerLightsPointSelect
 17199 ;; This function is called by:
 17200 ;;		_DimmerLights_Close
 17201 ;;		_DimmerLights_ERROR
 17202 ;; This function uses a non-reentrant model
 17203 ;;
 17204                           
 17205                           
 17206                           ;psect for function _getDimmerLights_StatusFlag
 17207  267F                     _getDimmerLights_StatusFlag:	
 17208                           
 17209                           ;Dimmer_B1.c: 208: char Status=0,i,length;
 17210                           
 17211                           ;incstack = 0
 17212                           ; Regs used in _getDimmerLights_StatusFlag: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 17213  267F  0020               	movlb	0	; select bank0
 17214  2680  01A4               	clrf	getDimmerLights_StatusFlag@Status
 17215                           
 17216                           ;Dimmer_B1.c: 213: length=2;
 17217  2681  3002               	movlw	2
 17218  2682  00A2               	movwf	??_getDimmerLights_StatusFlag
 17219  2683  0822               	movf	??_getDimmerLights_StatusFlag,w
 17220  2684  00A3               	movwf	getDimmerLights_StatusFlag@length
 17221                           
 17222                           ;Dimmer_B1.c: 220: for(i=0 ; i<length ; i++)
 17223  2685  01A5               	clrf	getDimmerLights_StatusFlag@i
 17224  2686                     l7033:	
 17225  2686  0823               	movf	getDimmerLights_StatusFlag@length,w
 17226  2687  0225               	subwf	getDimmerLights_StatusFlag@i,w
 17227  2688  1803               	btfsc	3,0
 17228  2689  2E9D               	goto	l7035
 17229                           
 17230                           ;Dimmer_B1.c: 221: {
 17231                           ;Dimmer_B1.c: 222: DimmerLightsPointSelect(i+1);
 17232  268A  0825               	movf	getDimmerLights_StatusFlag@i,w
 17233  268B  3E01               	addlw	1
 17234  268C  31A4  2497  31A6   	fcall	_DimmerLightsPointSelect
 17235                           
 17236                           ;Dimmer_B1.c: 223: if(DimmerLights->StatusFlag)
 17237  268F  0020               	movlb	0	; select bank0
 17238  2690  086D               	movf	_DimmerLights,w
 17239  2691  0086               	movwf	6
 17240  2692  3001               	movlw	1	; select bank2/3
 17241  2693  0087               	movwf	7
 17242  2694  1F01               	btfss	1,6
 17243  2695  2E98               	goto	l7031
 17244                           
 17245                           ;Dimmer_B1.c: 224: {
 17246                           ;Dimmer_B1.c: 225: Status=1;
 17247  2696  01A4               	clrf	getDimmerLights_StatusFlag@Status
 17248  2697  0AA4               	incf	getDimmerLights_StatusFlag@Status,f
 17249  2698                     l7031:	
 17250  2698  3001               	movlw	1
 17251  2699  00A2               	movwf	??_getDimmerLights_StatusFlag
 17252  269A  0822               	movf	??_getDimmerLights_StatusFlag,w
 17253  269B  07A5               	addwf	getDimmerLights_StatusFlag@i,f
 17254  269C  2E86               	goto	l7033
 17255  269D                     l7035:	
 17256                           
 17257                           ;Dimmer_B1.c: 226: }
 17258                           ;Dimmer_B1.c: 227: }
 17259                           ;Dimmer_B1.c: 228: return Status;
 17260  269D  0824               	movf	getDimmerLights_StatusFlag@Status,w
 17261  269E  0008               	return
 17262  269F                     __end_of_getDimmerLights_StatusFlag:	
 17263                           
 17264                           	psect	text110
 17265  2485                     __ptext110:	
 17266 ;; *************** function _DimmerLights_Initialization *****************
 17267 ;; Defined at:
 17268 ;;		line 32 in file "G:\Program\PIC\Source_File\Dimmer_B1.c"
 17269 ;; Parameters:    Size  Location     Type
 17270 ;;		None
 17271 ;; Auto vars:     Size  Location     Type
 17272 ;;		None
 17273 ;; Return value:  Size  Location     Type
 17274 ;;		None               void
 17275 ;; Registers used:
 17276 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17277 ;; Tracked objects:
 17278 ;;		On entry : 0/0
 17279 ;;		On exit  : 0/0
 17280 ;;		Unchanged: 0/0
 17281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17282 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17283 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17284 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17285 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17286 ;;Total ram usage:        1 bytes
 17287 ;; Hardware stack levels used:    1
 17288 ;; Hardware stack levels required when called:    8
 17289 ;; This function calls:
 17290 ;;		_setDimmerLights_Initialization
 17291 ;; This function is called by:
 17292 ;;		_main
 17293 ;; This function uses a non-reentrant model
 17294 ;;
 17295                           
 17296                           
 17297                           ;psect for function _DimmerLights_Initialization
 17298  2485                     _DimmerLights_Initialization:	
 17299                           
 17300                           ;Dimmer_B1.c: 35: DimmerLights11=&DimmerLights1;
 17301                           
 17302                           ;incstack = 0
 17303                           ; Regs used in _DimmerLights_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 17304  2485  302E               	movlw	_DimmerLights1& (0+255)
 17305  2486  0020               	movlb	0	; select bank0
 17306  2487  00E2               	movwf	??_DimmerLights_Initialization
 17307  2488  0862               	movf	??_DimmerLights_Initialization,w
 17308  2489  00FB               	movwf	_DimmerLights11
 17309                           
 17310                           ;Dimmer_B1.c: 36: setDimmerLights_Initialization(1);
 17311  248A  3001               	movlw	1
 17312  248B  319B  233B  31A4   	fcall	_setDimmerLights_Initialization
 17313                           
 17314                           ;Dimmer_B1.c: 40: DimmerLights22=&DimmerLights2;
 17315  248E  303B               	movlw	_DimmerLights2& (0+255)
 17316  248F  0020               	movlb	0	; select bank0
 17317  2490  00E2               	movwf	??_DimmerLights_Initialization
 17318  2491  0862               	movf	??_DimmerLights_Initialization,w
 17319  2492  00FC               	movwf	_DimmerLights22
 17320                           
 17321                           ;Dimmer_B1.c: 41: setDimmerLights_Initialization(2);
 17322  2493  3002               	movlw	2
 17323  2494  319B  233B         	fcall	_setDimmerLights_Initialization
 17324  2496  0008               	return
 17325  2497                     __end_of_DimmerLights_Initialization:	
 17326                           
 17327                           	psect	text111
 17328  1B3B                     __ptext111:	
 17329 ;; *************** function _setDimmerLights_Initialization *****************
 17330 ;; Defined at:
 17331 ;;		line 49 in file "G:\Program\PIC\Source_File\Dimmer_B1.c"
 17332 ;; Parameters:    Size  Location     Type
 17333 ;;  lights          1    wreg     unsigned char 
 17334 ;; Auto vars:     Size  Location     Type
 17335 ;;  lights          1   65[BANK0 ] unsigned char 
 17336 ;; Return value:  Size  Location     Type
 17337 ;;		None               void
 17338 ;; Registers used:
 17339 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17340 ;; Tracked objects:
 17341 ;;		On entry : 0/0
 17342 ;;		On exit  : 0/0
 17343 ;;		Unchanged: 0/0
 17344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17346 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17347 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17348 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17349 ;;Total ram usage:        3 bytes
 17350 ;; Hardware stack levels used:    1
 17351 ;; Hardware stack levels required when called:    7
 17352 ;; This function calls:
 17353 ;;		_DimmerLightsPointSelect
 17354 ;;		_getPercentValue
 17355 ;; This function is called by:
 17356 ;;		_DimmerLights_Initialization
 17357 ;; This function uses a non-reentrant model
 17358 ;;
 17359                           
 17360                           
 17361                           ;psect for function _setDimmerLights_Initialization
 17362  1B3B                     _setDimmerLights_Initialization:	
 17363                           
 17364                           ;incstack = 0
 17365                           ; Regs used in _setDimmerLights_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pcla
      +                          th+cstack]
 17366                           ;setDimmerLights_Initialization@lights stored from wreg
 17367  1B3B  0020               	movlb	0	; select bank0
 17368  1B3C  00E1               	movwf	setDimmerLights_Initialization@lights
 17369                           
 17370                           ;Dimmer_B1.c: 51: DimmerLightsPointSelect(lights);
 17371  1B3D  0861               	movf	setDimmerLights_Initialization@lights,w
 17372  1B3E  31A4  2497  319B   	fcall	_DimmerLightsPointSelect
 17373                           
 17374                           ;Dimmer_B1.c: 53: DimmerLights->MaxmumValue=((char)((100-60)*1.5));
 17375  1B41  303C               	movlw	60
 17376  1B42  0020               	movlb	0	; select bank0
 17377  1B43  00DF               	movwf	??_setDimmerLights_Initialization
 17378  1B44  086D               	movf	_DimmerLights,w
 17379  1B45  3E05               	addlw	5
 17380  1B46  0086               	movwf	6
 17381  1B47  3001               	movlw	1	; select bank2/3
 17382  1B48  0087               	movwf	7
 17383  1B49  085F               	movf	??_setDimmerLights_Initialization,w
 17384  1B4A  0081               	movwf	1
 17385                           
 17386                           ;Dimmer_B1.c: 54: DimmerLights->MinimumValue=((char)((100-20)*1.5));
 17387  1B4B  3078               	movlw	120
 17388  1B4C  00DF               	movwf	??_setDimmerLights_Initialization
 17389  1B4D  086D               	movf	_DimmerLights,w
 17390  1B4E  3E06               	addlw	6
 17391  1B4F  0086               	movwf	6
 17392  1B50  3001               	movlw	1	; select bank2/3
 17393  1B51  0087               	movwf	7
 17394  1B52  085F               	movf	??_setDimmerLights_Initialization,w
 17395  1B53  0081               	movwf	1
 17396                           
 17397                           ;Dimmer_B1.c: 55: DimmerLights->Clear=1;
 17398  1B54  086D               	movf	_DimmerLights,w
 17399  1B55  3E0C               	addlw	12
 17400  1B56  0086               	movwf	6
 17401  1B57  3001               	movlw	1	; select bank2/3
 17402  1B58  0087               	movwf	7
 17403  1B59  1401               	bsf	1,0
 17404                           
 17405                           ;Dimmer_B1.c: 61: DimmerLights->DimmingValue=DimmerLights->MinimumValue;
 17406  1B5A  086D               	movf	_DimmerLights,w
 17407  1B5B  3E06               	addlw	6
 17408  1B5C  0086               	movwf	6
 17409  1B5D  3001               	movlw	1	; select bank2/3
 17410  1B5E  0087               	movwf	7
 17411  1B5F  0801               	movf	1,w
 17412  1B60  00DF               	movwf	??_setDimmerLights_Initialization
 17413  1B61  086D               	movf	_DimmerLights,w
 17414  1B62  3E04               	addlw	4
 17415  1B63  0086               	movwf	6
 17416  1B64  3001               	movlw	1	; select bank2/3
 17417  1B65  0087               	movwf	7
 17418  1B66  085F               	movf	??_setDimmerLights_Initialization,w
 17419  1B67  0081               	movwf	1
 17420                           
 17421                           ;Dimmer_B1.c: 79: DimmerLights->MaxmumValue=getPercentValue(Product->Data[(20+lights)]);
 17422  1B68  0861               	movf	setDimmerLights_Initialization@lights,w
 17423  1B69  3E14               	addlw	20
 17424  1B6A  0021               	movlb	1	; select bank1
 17425  1B6B  076C               	addwf	_Product^(0+128),w
 17426  1B6C  0020               	movlb	0	; select bank0
 17427  1B6D  00DF               	movwf	??_setDimmerLights_Initialization
 17428  1B6E  085F               	movf	??_setDimmerLights_Initialization,w
 17429  1B6F  0086               	movwf	6
 17430  1B70  3001               	movlw	1	; select bank2/3
 17431  1B71  0087               	movwf	7
 17432  1B72  0801               	movf	1,w
 17433  1B73  319E  261E         	fcall	_getPercentValue
 17434  1B75  0020               	movlb	0	; select bank0
 17435  1B76  00E0               	movwf	??_setDimmerLights_Initialization+1
 17436  1B77  086D               	movf	_DimmerLights,w
 17437  1B78  3E05               	addlw	5
 17438  1B79  0086               	movwf	6
 17439  1B7A  3001               	movlw	1	; select bank2/3
 17440  1B7B  0087               	movwf	7
 17441  1B7C  0860               	movf	??_setDimmerLights_Initialization+1,w
 17442  1B7D  0081               	movwf	1
 17443  1B7E  0008               	return
 17444  1B7F                     __end_of_setDimmerLights_Initialization:	
 17445                           
 17446                           	psect	text112
 17447  1E1E                     __ptext112:	
 17448 ;; *************** function _getPercentValue *****************
 17449 ;; Defined at:
 17450 ;;		line 491 in file "G:\Program\PIC\Source_File\Dimmer_B1.c"
 17451 ;; Parameters:    Size  Location     Type
 17452 ;;  value           1    wreg     unsigned char 
 17453 ;; Auto vars:     Size  Location     Type
 17454 ;;  value           1   59[BANK0 ] unsigned char 
 17455 ;;  i               3   60[BANK0 ] float 
 17456 ;; Return value:  Size  Location     Type
 17457 ;;                  1    wreg      unsigned char 
 17458 ;; Registers used:
 17459 ;;		wreg, status,2, status,0, pclath, cstack
 17460 ;; Tracked objects:
 17461 ;;		On entry : 0/0
 17462 ;;		On exit  : 0/0
 17463 ;;		Unchanged: 0/0
 17464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17466 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17467 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17468 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17469 ;;Total ram usage:        6 bytes
 17470 ;; Hardware stack levels used:    1
 17471 ;; Hardware stack levels required when called:    6
 17472 ;; This function calls:
 17473 ;;		___awtoft
 17474 ;;		___ftadd
 17475 ;;		___ftdiv
 17476 ;;		___ftmul
 17477 ;;		___fttol
 17478 ;; This function is called by:
 17479 ;;		_setDimmerLights_Initialization
 17480 ;;		_setDimmerLights_AdjRF
 17481 ;; This function uses a non-reentrant model
 17482 ;;
 17483                           
 17484                           
 17485                           ;psect for function _getPercentValue
 17486  1E1E                     _getPercentValue:	
 17487                           
 17488                           ;incstack = 0
 17489                           ; Regs used in _getPercentValue: [wreg+status,2+status,0+pclath+cstack]
 17490                           ;getPercentValue@value stored from wreg
 17491  1E1E  0020               	movlb	0	; select bank0
 17492  1E1F  00DB               	movwf	getPercentValue@value
 17493                           
 17494                           ;Dimmer_B1.c: 494: float i=((char)((100-20)*1.5))-((char)((100-60)*1.5));
 17495  1E20  3000               	movlw	0
 17496  1E21  00DC               	movwf	getPercentValue@i
 17497  1E22  3070               	movlw	112
 17498  1E23  00DD               	movwf	getPercentValue@i+1
 17499  1E24  3042               	movlw	66
 17500  1E25  00DE               	movwf	getPercentValue@i+2
 17501                           
 17502                           ;Dimmer_B1.c: 495: i/=100;
 17503  1E26  3000               	movlw	0
 17504  1E27  00AE               	movwf	___ftdiv@f2
 17505  1E28  30C8               	movlw	200
 17506  1E29  00AF               	movwf	___ftdiv@f2+1
 17507  1E2A  3042               	movlw	66
 17508  1E2B  00B0               	movwf	___ftdiv@f2+2
 17509  1E2C  085C               	movf	getPercentValue@i,w
 17510  1E2D  00B1               	movwf	___ftdiv@f1
 17511  1E2E  085D               	movf	getPercentValue@i+1,w
 17512  1E2F  00B2               	movwf	___ftdiv@f1+1
 17513  1E30  085E               	movf	getPercentValue@i+2,w
 17514  1E31  00B3               	movwf	___ftdiv@f1+2
 17515  1E32  3189  21C8  319E   	fcall	___ftdiv
 17516  1E35  0020               	movlb	0	; select bank0
 17517  1E36  082E               	movf	?___ftdiv,w
 17518  1E37  00DC               	movwf	getPercentValue@i
 17519  1E38  082F               	movf	?___ftdiv+1,w
 17520  1E39  00DD               	movwf	getPercentValue@i+1
 17521  1E3A  0830               	movf	?___ftdiv+2,w
 17522  1E3B  00DE               	movwf	getPercentValue@i+2
 17523                           
 17524                           ;Dimmer_B1.c: 496: return (char)(((100-value)*i)+((char)((100-60)*1.5)));
 17525  1E3C  085B               	movf	getPercentValue@value,w
 17526  1E3D  00D9               	movwf	??_getPercentValue
 17527  1E3E  01DA               	clrf	??_getPercentValue+1
 17528  1E3F  09D9               	comf	??_getPercentValue,f
 17529  1E40  09DA               	comf	??_getPercentValue+1,f
 17530  1E41  0AD9               	incf	??_getPercentValue,f
 17531  1E42  1903               	skipnz
 17532  1E43  0ADA               	incf	??_getPercentValue+1,f
 17533  1E44  0859               	movf	??_getPercentValue,w
 17534  1E45  3E64               	addlw	100
 17535  1E46  00A8               	movwf	___awtoft@c
 17536  1E47  3000               	movlw	0
 17537  1E48  3D5A               	addwfc	??_getPercentValue+1,w
 17538  1E49  00A9               	movwf	___awtoft@c+1
 17539  1E4A  31A6  26E0  319E   	fcall	___awtoft
 17540  1E4D  0020               	movlb	0	; select bank0
 17541  1E4E  0828               	movf	?___awtoft,w
 17542  1E4F  00B1               	movwf	___ftmul@f2
 17543  1E50  0829               	movf	?___awtoft+1,w
 17544  1E51  00B2               	movwf	___ftmul@f2+1
 17545  1E52  082A               	movf	?___awtoft+2,w
 17546  1E53  00B3               	movwf	___ftmul@f2+2
 17547  1E54  085C               	movf	getPercentValue@i,w
 17548  1E55  00AE               	movwf	___ftmul@f1
 17549  1E56  085D               	movf	getPercentValue@i+1,w
 17550  1E57  00AF               	movwf	___ftmul@f1+1
 17551  1E58  085E               	movf	getPercentValue@i+2,w
 17552  1E59  00B0               	movwf	___ftmul@f1+2
 17553  1E5A  318A  2271  319E   	fcall	___ftmul
 17554  1E5D  0020               	movlb	0	; select bank0
 17555  1E5E  082E               	movf	?___ftmul,w
 17556  1E5F  00C1               	movwf	___ftadd@f2
 17557  1E60  082F               	movf	?___ftmul+1,w
 17558  1E61  00C2               	movwf	___ftadd@f2+1
 17559  1E62  0830               	movf	?___ftmul+2,w
 17560  1E63  00C3               	movwf	___ftadd@f2+2
 17561  1E64  3000               	movlw	0
 17562  1E65  00BE               	movwf	___ftadd@f1
 17563  1E66  3070               	movlw	112
 17564  1E67  00BF               	movwf	___ftadd@f1+1
 17565  1E68  3042               	movlw	66
 17566  1E69  00C0               	movwf	___ftadd@f1+2
 17567  1E6A  318C  24AC  319E   	fcall	___ftadd
 17568  1E6D  0020               	movlb	0	; select bank0
 17569  1E6E  083E               	movf	?___ftadd,w
 17570  1E6F  00CB               	movwf	___fttol@f1
 17571  1E70  083F               	movf	?___ftadd+1,w
 17572  1E71  00CC               	movwf	___fttol@f1+1
 17573  1E72  0840               	movf	?___ftadd+2,w
 17574  1E73  00CD               	movwf	___fttol@f1+2
 17575  1E74  3188  2009         	fcall	___fttol
 17576  1E76  0020               	movlb	0	; select bank0
 17577  1E77  084B               	movf	?___fttol,w
 17578  1E78  0008               	return
 17579  1E79                     __end_of_getPercentValue:	
 17580                           
 17581                           	psect	text113
 17582  0809                     __ptext113:	
 17583 ;; *************** function ___fttol *****************
 17584 ;; Defined at:
 17585 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\fttol.c"
 17586 ;; Parameters:    Size  Location     Type
 17587 ;;  f1              3   43[BANK0 ] float 
 17588 ;; Auto vars:     Size  Location     Type
 17589 ;;  lval            4   52[BANK0 ] unsigned long 
 17590 ;;  exp1            1   56[BANK0 ] unsigned char 
 17591 ;;  sign1           1   51[BANK0 ] unsigned char 
 17592 ;; Return value:  Size  Location     Type
 17593 ;;                  4   43[BANK0 ] long 
 17594 ;; Registers used:
 17595 ;;		wreg, status,2, status,0
 17596 ;; Tracked objects:
 17597 ;;		On entry : 0/0
 17598 ;;		On exit  : 0/0
 17599 ;;		Unchanged: 0/0
 17600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17601 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17602 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17603 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17604 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17605 ;;Total ram usage:       14 bytes
 17606 ;; Hardware stack levels used:    1
 17607 ;; Hardware stack levels required when called:    4
 17608 ;; This function calls:
 17609 ;;		Nothing
 17610 ;; This function is called by:
 17611 ;;		_getPercentValue
 17612 ;;		_setPercentValue
 17613 ;; This function uses a non-reentrant model
 17614 ;;
 17615                           
 17616                           
 17617                           ;psect for function ___fttol
 17618  0809                     ___fttol:	
 17619                           
 17620                           ;incstack = 0
 17621                           ; Regs used in ___fttol: [wreg+status,2+status,0]
 17622  0809  0020               	movlb	0	; select bank0
 17623  080A  084B               	movf	___fttol@f1,w
 17624  080B  00CF               	movwf	??___fttol
 17625  080C  084C               	movf	___fttol@f1+1,w
 17626  080D  00D0               	movwf	??___fttol+1
 17627  080E  084D               	movf	___fttol@f1+2,w
 17628  080F  00D1               	movwf	??___fttol+2
 17629  0810  1003               	clrc
 17630  0811  0D50               	rlf	??___fttol+1,w
 17631  0812  0D51               	rlf	??___fttol+2,w
 17632  0813  00D2               	movwf	??___fttol+3
 17633  0814  0852               	movf	??___fttol+3,w
 17634  0815  00D8               	movwf	___fttol@exp1
 17635  0816  08D8               	movf	___fttol@exp1,f
 17636  0817  1D03               	skipz
 17637  0818  2822               	goto	l6625
 17638  0819  3000               	movlw	0
 17639  081A  00CE               	movwf	?___fttol+3
 17640  081B  3000               	movlw	0
 17641  081C  00CD               	movwf	?___fttol+2
 17642  081D  3000               	movlw	0
 17643  081E  00CC               	movwf	?___fttol+1
 17644  081F  3000               	movlw	0
 17645  0820  00CB               	movwf	?___fttol
 17646  0821  0008               	return
 17647  0822                     l6625:	
 17648  0822  084B               	movf	___fttol@f1,w
 17649  0823  00CF               	movwf	??___fttol
 17650  0824  084C               	movf	___fttol@f1+1,w
 17651  0825  00D0               	movwf	??___fttol+1
 17652  0826  084D               	movf	___fttol@f1+2,w
 17653  0827  00D1               	movwf	??___fttol+2
 17654  0828  3017               	movlw	23
 17655  0829                     u4725:	
 17656  0829  36D1               	lsrf	??___fttol+2,f
 17657  082A  0CD0               	rrf	??___fttol+1,f
 17658  082B  0CCF               	rrf	??___fttol,f
 17659  082C  0B89               	decfsz	9,f
 17660  082D  2829               	goto	u4725
 17661  082E  084F               	movf	??___fttol,w
 17662  082F  00D2               	movwf	??___fttol+3
 17663  0830  0852               	movf	??___fttol+3,w
 17664  0831  00D3               	movwf	___fttol@sign1
 17665  0832  17CC               	bsf	___fttol@f1+1,7
 17666  0833  30FF               	movlw	255
 17667  0834  05CB               	andwf	___fttol@f1,f
 17668  0835  30FF               	movlw	255
 17669  0836  05CC               	andwf	___fttol@f1+1,f
 17670  0837  3000               	movlw	0
 17671  0838  05CD               	andwf	___fttol@f1+2,f
 17672  0839  084B               	movf	___fttol@f1,w
 17673  083A  00D4               	movwf	___fttol@lval
 17674  083B  084C               	movf	___fttol@f1+1,w
 17675  083C  00D5               	movwf	___fttol@lval+1
 17676  083D  084D               	movf	___fttol@f1+2,w
 17677  083E  00D6               	movwf	___fttol@lval+2
 17678  083F  01D7               	clrf	___fttol@lval+3
 17679  0840  308E               	movlw	142
 17680  0841  02D8               	subwf	___fttol@exp1,f
 17681  0842  1FD8               	btfss	___fttol@exp1,7
 17682  0843  2860               	goto	l6645
 17683  0844  0858               	movf	___fttol@exp1,w
 17684  0845  3A80               	xorlw	128
 17685  0846  3E8F               	addlw	143
 17686  0847  1803               	skipnc
 17687  0848  2852               	goto	l6643
 17688  0849  3000               	movlw	0
 17689  084A  00CE               	movwf	?___fttol+3
 17690  084B  3000               	movlw	0
 17691  084C  00CD               	movwf	?___fttol+2
 17692  084D  3000               	movlw	0
 17693  084E  00CC               	movwf	?___fttol+1
 17694  084F  3000               	movlw	0
 17695  0850  00CB               	movwf	?___fttol
 17696  0851  0008               	return
 17697  0852                     l6643:	
 17698  0852  3001               	movlw	1
 17699  0853                     u4755:	
 17700  0853  36D7               	lsrf	___fttol@lval+3,f
 17701  0854  0CD6               	rrf	___fttol@lval+2,f
 17702  0855  0CD5               	rrf	___fttol@lval+1,f
 17703  0856  0CD4               	rrf	___fttol@lval,f
 17704  0857  0B89               	decfsz	9,f
 17705  0858  2853               	goto	u4755
 17706  0859  3001               	movlw	1
 17707  085A  00CF               	movwf	??___fttol
 17708  085B  084F               	movf	??___fttol,w
 17709  085C  07D8               	addwf	___fttol@exp1,f
 17710  085D  1903               	btfsc	3,2
 17711  085E  2879               	goto	l6655
 17712  085F  2852               	goto	l6643
 17713  0860                     l6645:	
 17714  0860  3018               	movlw	24
 17715  0861  0258               	subwf	___fttol@exp1,w
 17716  0862  1C03               	skipc
 17717  0863  2876               	goto	l6653
 17718  0864  3000               	movlw	0
 17719  0865  00CE               	movwf	?___fttol+3
 17720  0866  3000               	movlw	0
 17721  0867  00CD               	movwf	?___fttol+2
 17722  0868  3000               	movlw	0
 17723  0869  00CC               	movwf	?___fttol+1
 17724  086A  3000               	movlw	0
 17725  086B  00CB               	movwf	?___fttol
 17726  086C  0008               	return
 17727  086D                     l6651:	
 17728  086D  3001               	movlw	1
 17729  086E                     u4785:	
 17730  086E  35D4               	lslf	___fttol@lval,f
 17731  086F  0DD5               	rlf	___fttol@lval+1,f
 17732  0870  0DD6               	rlf	___fttol@lval+2,f
 17733  0871  0DD7               	rlf	___fttol@lval+3,f
 17734  0872  0B89               	decfsz	9,f
 17735  0873  286E               	goto	u4785
 17736  0874  3001               	movlw	1
 17737  0875  02D8               	subwf	___fttol@exp1,f
 17738  0876                     l6653:	
 17739  0876  08D8               	movf	___fttol@exp1,f
 17740  0877  1D03               	skipz
 17741  0878  286D               	goto	l6651
 17742  0879                     l6655:	
 17743  0879  0853               	movf	___fttol@sign1,w
 17744  087A  1903               	btfsc	3,2
 17745  087B  2887               	goto	l6659
 17746  087C  09D4               	comf	___fttol@lval,f
 17747  087D  09D5               	comf	___fttol@lval+1,f
 17748  087E  09D6               	comf	___fttol@lval+2,f
 17749  087F  09D7               	comf	___fttol@lval+3,f
 17750  0880  0AD4               	incf	___fttol@lval,f
 17751  0881  1903               	skipnz
 17752  0882  0AD5               	incf	___fttol@lval+1,f
 17753  0883  1903               	skipnz
 17754  0884  0AD6               	incf	___fttol@lval+2,f
 17755  0885  1903               	skipnz
 17756  0886  0AD7               	incf	___fttol@lval+3,f
 17757  0887                     l6659:	
 17758  0887  0857               	movf	___fttol@lval+3,w
 17759  0888  00CE               	movwf	?___fttol+3
 17760  0889  0856               	movf	___fttol@lval+2,w
 17761  088A  00CD               	movwf	?___fttol+2
 17762  088B  0855               	movf	___fttol@lval+1,w
 17763  088C  00CC               	movwf	?___fttol+1
 17764  088D  0854               	movf	___fttol@lval,w
 17765  088E  00CB               	movwf	?___fttol
 17766  088F  0008               	return
 17767  0890                     __end_of___fttol:	
 17768                           
 17769                           	psect	text114
 17770  0A71                     __ptext114:	
 17771 ;; *************** function ___ftmul *****************
 17772 ;; Defined at:
 17773 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\ftmul.c"
 17774 ;; Parameters:    Size  Location     Type
 17775 ;;  f1              3   14[BANK0 ] float 
 17776 ;;  f2              3   17[BANK0 ] float 
 17777 ;; Auto vars:     Size  Location     Type
 17778 ;;  f3_as_produc    3   25[BANK0 ] unsigned um
 17779 ;;  sign            1   29[BANK0 ] unsigned char 
 17780 ;;  cntr            1   28[BANK0 ] unsigned char 
 17781 ;;  exp             1   24[BANK0 ] unsigned char 
 17782 ;; Return value:  Size  Location     Type
 17783 ;;                  3   14[BANK0 ] float 
 17784 ;; Registers used:
 17785 ;;		wreg, status,2, status,0, pclath, cstack
 17786 ;; Tracked objects:
 17787 ;;		On entry : 0/0
 17788 ;;		On exit  : 0/0
 17789 ;;		Unchanged: 0/0
 17790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17791 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17792 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17793 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17794 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17795 ;;Total ram usage:       16 bytes
 17796 ;; Hardware stack levels used:    1
 17797 ;; Hardware stack levels required when called:    5
 17798 ;; This function calls:
 17799 ;;		___ftpack
 17800 ;; This function is called by:
 17801 ;;		_getPercentValue
 17802 ;; This function uses a non-reentrant model
 17803 ;;
 17804                           
 17805                           
 17806                           ;psect for function ___ftmul
 17807  0A71                     ___ftmul:	
 17808                           
 17809                           ;incstack = 0
 17810                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
 17811  0A71  0020               	movlb	0	; select bank0
 17812  0A72  082E               	movf	___ftmul@f1,w
 17813  0A73  00B4               	movwf	??___ftmul
 17814  0A74  082F               	movf	___ftmul@f1+1,w
 17815  0A75  00B5               	movwf	??___ftmul+1
 17816  0A76  0830               	movf	___ftmul@f1+2,w
 17817  0A77  00B6               	movwf	??___ftmul+2
 17818  0A78  1003               	clrc
 17819  0A79  0D35               	rlf	??___ftmul+1,w
 17820  0A7A  0D36               	rlf	??___ftmul+2,w
 17821  0A7B  00B7               	movwf	??___ftmul+3
 17822  0A7C  0837               	movf	??___ftmul+3,w
 17823  0A7D  00B8               	movwf	___ftmul@exp
 17824  0A7E  08B8               	movf	___ftmul@exp,f
 17825  0A7F  1D03               	skipz
 17826  0A80  2A88               	goto	l6575
 17827  0A81  3000               	movlw	0
 17828  0A82  00AE               	movwf	?___ftmul
 17829  0A83  3000               	movlw	0
 17830  0A84  00AF               	movwf	?___ftmul+1
 17831  0A85  3000               	movlw	0
 17832  0A86  00B0               	movwf	?___ftmul+2
 17833  0A87  0008               	return
 17834  0A88                     l6575:	
 17835  0A88  0831               	movf	___ftmul@f2,w
 17836  0A89  00B4               	movwf	??___ftmul
 17837  0A8A  0832               	movf	___ftmul@f2+1,w
 17838  0A8B  00B5               	movwf	??___ftmul+1
 17839  0A8C  0833               	movf	___ftmul@f2+2,w
 17840  0A8D  00B6               	movwf	??___ftmul+2
 17841  0A8E  1003               	clrc
 17842  0A8F  0D35               	rlf	??___ftmul+1,w
 17843  0A90  0D36               	rlf	??___ftmul+2,w
 17844  0A91  00B7               	movwf	??___ftmul+3
 17845  0A92  0837               	movf	??___ftmul+3,w
 17846  0A93  00BD               	movwf	___ftmul@sign
 17847  0A94  08BD               	movf	___ftmul@sign,f
 17848  0A95  1D03               	skipz
 17849  0A96  2A9E               	goto	l6581
 17850  0A97  3000               	movlw	0
 17851  0A98  00AE               	movwf	?___ftmul
 17852  0A99  3000               	movlw	0
 17853  0A9A  00AF               	movwf	?___ftmul+1
 17854  0A9B  3000               	movlw	0
 17855  0A9C  00B0               	movwf	?___ftmul+2
 17856  0A9D  0008               	return
 17857  0A9E                     l6581:	
 17858  0A9E  083D               	movf	___ftmul@sign,w
 17859  0A9F  3E7B               	addlw	123
 17860  0AA0  00B4               	movwf	??___ftmul
 17861  0AA1  0834               	movf	??___ftmul,w
 17862  0AA2  07B8               	addwf	___ftmul@exp,f
 17863  0AA3  082E               	movf	___ftmul@f1,w
 17864  0AA4  00B4               	movwf	??___ftmul
 17865  0AA5  082F               	movf	___ftmul@f1+1,w
 17866  0AA6  00B5               	movwf	??___ftmul+1
 17867  0AA7  0830               	movf	___ftmul@f1+2,w
 17868  0AA8  00B6               	movwf	??___ftmul+2
 17869  0AA9  3010               	movlw	16
 17870  0AAA                     u4615:	
 17871  0AAA  36B6               	lsrf	??___ftmul+2,f
 17872  0AAB  0CB5               	rrf	??___ftmul+1,f
 17873  0AAC  0CB4               	rrf	??___ftmul,f
 17874  0AAD  0B89               	decfsz	9,f
 17875  0AAE  2AAA               	goto	u4615
 17876  0AAF  0834               	movf	??___ftmul,w
 17877  0AB0  00B7               	movwf	??___ftmul+3
 17878  0AB1  0837               	movf	??___ftmul+3,w
 17879  0AB2  00BD               	movwf	___ftmul@sign
 17880  0AB3  0831               	movf	___ftmul@f2,w
 17881  0AB4  00B4               	movwf	??___ftmul
 17882  0AB5  0832               	movf	___ftmul@f2+1,w
 17883  0AB6  00B5               	movwf	??___ftmul+1
 17884  0AB7  0833               	movf	___ftmul@f2+2,w
 17885  0AB8  00B6               	movwf	??___ftmul+2
 17886  0AB9  3010               	movlw	16
 17887  0ABA                     u4625:	
 17888  0ABA  36B6               	lsrf	??___ftmul+2,f
 17889  0ABB  0CB5               	rrf	??___ftmul+1,f
 17890  0ABC  0CB4               	rrf	??___ftmul,f
 17891  0ABD  0B89               	decfsz	9,f
 17892  0ABE  2ABA               	goto	u4625
 17893  0ABF  0834               	movf	??___ftmul,w
 17894  0AC0  00B7               	movwf	??___ftmul+3
 17895  0AC1  0837               	movf	??___ftmul+3,w
 17896  0AC2  06BD               	xorwf	___ftmul@sign,f
 17897  0AC3  3080               	movlw	128
 17898  0AC4  00B4               	movwf	??___ftmul
 17899  0AC5  0834               	movf	??___ftmul,w
 17900  0AC6  05BD               	andwf	___ftmul@sign,f
 17901  0AC7  17AF               	bsf	___ftmul@f1+1,7
 17902  0AC8  17B2               	bsf	___ftmul@f2+1,7
 17903  0AC9  30FF               	movlw	255
 17904  0ACA  05B1               	andwf	___ftmul@f2,f
 17905  0ACB  30FF               	movlw	255
 17906  0ACC  05B2               	andwf	___ftmul@f2+1,f
 17907  0ACD  3000               	movlw	0
 17908  0ACE  05B3               	andwf	___ftmul@f2+2,f
 17909  0ACF  3000               	movlw	0
 17910  0AD0  00B9               	movwf	___ftmul@f3_as_product
 17911  0AD1  3000               	movlw	0
 17912  0AD2  00BA               	movwf	___ftmul@f3_as_product+1
 17913  0AD3  3000               	movlw	0
 17914  0AD4  00BB               	movwf	___ftmul@f3_as_product+2
 17915  0AD5  3007               	movlw	7
 17916  0AD6  00B4               	movwf	??___ftmul
 17917  0AD7  0834               	movf	??___ftmul,w
 17918  0AD8  00BC               	movwf	___ftmul@cntr
 17919  0AD9                     l6593:	
 17920  0AD9  1C2E               	btfss	___ftmul@f1,0
 17921  0ADA  2AE1               	goto	l6597
 17922  0ADB  0831               	movf	___ftmul@f2,w
 17923  0ADC  07B9               	addwf	___ftmul@f3_as_product,f
 17924  0ADD  0832               	movf	___ftmul@f2+1,w
 17925  0ADE  3DBA               	addwfc	___ftmul@f3_as_product+1,f
 17926  0ADF  0833               	movf	___ftmul@f2+2,w
 17927  0AE0  3DBB               	addwfc	___ftmul@f3_as_product+2,f
 17928  0AE1                     l6597:	
 17929  0AE1  3001               	movlw	1
 17930  0AE2                     u4645:	
 17931  0AE2  36B0               	lsrf	___ftmul@f1+2,f
 17932  0AE3  0CAF               	rrf	___ftmul@f1+1,f
 17933  0AE4  0CAE               	rrf	___ftmul@f1,f
 17934  0AE5  0B89               	decfsz	9,f
 17935  0AE6  2AE2               	goto	u4645
 17936  0AE7  3001               	movlw	1
 17937  0AE8                     u4655:	
 17938  0AE8  35B1               	lslf	___ftmul@f2,f
 17939  0AE9  0DB2               	rlf	___ftmul@f2+1,f
 17940  0AEA  0DB3               	rlf	___ftmul@f2+2,f
 17941  0AEB  0B89               	decfsz	9,f
 17942  0AEC  2AE8               	goto	u4655
 17943  0AED  3001               	movlw	1
 17944  0AEE  02BC               	subwf	___ftmul@cntr,f
 17945  0AEF  1D03               	btfss	3,2
 17946  0AF0  2AD9               	goto	l6593
 17947  0AF1  3009               	movlw	9
 17948  0AF2  00B4               	movwf	??___ftmul
 17949  0AF3  0834               	movf	??___ftmul,w
 17950  0AF4  00BC               	movwf	___ftmul@cntr
 17951  0AF5                     l6605:	
 17952  0AF5  1C2E               	btfss	___ftmul@f1,0
 17953  0AF6  2AFD               	goto	l6609
 17954  0AF7  0831               	movf	___ftmul@f2,w
 17955  0AF8  07B9               	addwf	___ftmul@f3_as_product,f
 17956  0AF9  0832               	movf	___ftmul@f2+1,w
 17957  0AFA  3DBA               	addwfc	___ftmul@f3_as_product+1,f
 17958  0AFB  0833               	movf	___ftmul@f2+2,w
 17959  0AFC  3DBB               	addwfc	___ftmul@f3_as_product+2,f
 17960  0AFD                     l6609:	
 17961  0AFD  3001               	movlw	1
 17962  0AFE                     u4685:	
 17963  0AFE  36B0               	lsrf	___ftmul@f1+2,f
 17964  0AFF  0CAF               	rrf	___ftmul@f1+1,f
 17965  0B00  0CAE               	rrf	___ftmul@f1,f
 17966  0B01  0B89               	decfsz	9,f
 17967  0B02  2AFE               	goto	u4685
 17968  0B03  3001               	movlw	1
 17969  0B04                     u4695:	
 17970  0B04  36BB               	lsrf	___ftmul@f3_as_product+2,f
 17971  0B05  0CBA               	rrf	___ftmul@f3_as_product+1,f
 17972  0B06  0CB9               	rrf	___ftmul@f3_as_product,f
 17973  0B07  0B89               	decfsz	9,f
 17974  0B08  2B04               	goto	u4695
 17975  0B09  3001               	movlw	1
 17976  0B0A  02BC               	subwf	___ftmul@cntr,f
 17977  0B0B  1D03               	btfss	3,2
 17978  0B0C  2AF5               	goto	l6605
 17979  0B0D  0839               	movf	___ftmul@f3_as_product,w
 17980  0B0E  00A0               	movwf	___ftpack@arg
 17981  0B0F  083A               	movf	___ftmul@f3_as_product+1,w
 17982  0B10  00A1               	movwf	___ftpack@arg+1
 17983  0B11  083B               	movf	___ftmul@f3_as_product+2,w
 17984  0B12  00A2               	movwf	___ftpack@arg+2
 17985  0B13  0838               	movf	___ftmul@exp,w
 17986  0B14  00B4               	movwf	??___ftmul
 17987  0B15  0834               	movf	??___ftmul,w
 17988  0B16  00A3               	movwf	___ftpack@exp
 17989  0B17  083D               	movf	___ftmul@sign,w
 17990  0B18  00B5               	movwf	??___ftmul+1
 17991  0B19  0835               	movf	??___ftmul+1,w
 17992  0B1A  00A4               	movwf	___ftpack@sign
 17993  0B1B  319E  26D7         	fcall	___ftpack
 17994  0B1D  0020               	movlb	0	; select bank0
 17995  0B1E  0820               	movf	?___ftpack,w
 17996  0B1F  00AE               	movwf	?___ftmul
 17997  0B20  0821               	movf	?___ftpack+1,w
 17998  0B21  00AF               	movwf	?___ftmul+1
 17999  0B22  0822               	movf	?___ftpack+2,w
 18000  0B23  00B0               	movwf	?___ftmul+2
 18001  0B24  0008               	return
 18002  0B25                     __end_of___ftmul:	
 18003                           
 18004                           	psect	text115
 18005  09C8                     __ptext115:	
 18006 ;; *************** function ___ftdiv *****************
 18007 ;; Defined at:
 18008 ;;		line 49 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic\ftdiv.c"
 18009 ;; Parameters:    Size  Location     Type
 18010 ;;  f2              3   14[BANK0 ] float 
 18011 ;;  f1              3   17[BANK0 ] float 
 18012 ;; Auto vars:     Size  Location     Type
 18013 ;;  f3              3   25[BANK0 ] float 
 18014 ;;  sign            1   29[BANK0 ] unsigned char 
 18015 ;;  exp             1   28[BANK0 ] unsigned char 
 18016 ;;  cntr            1   24[BANK0 ] unsigned char 
 18017 ;; Return value:  Size  Location     Type
 18018 ;;                  3   14[BANK0 ] float 
 18019 ;; Registers used:
 18020 ;;		wreg, status,2, status,0, pclath, cstack
 18021 ;; Tracked objects:
 18022 ;;		On entry : 0/0
 18023 ;;		On exit  : 0/0
 18024 ;;		Unchanged: 0/0
 18025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18026 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18027 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18028 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18029 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18030 ;;Total ram usage:       16 bytes
 18031 ;; Hardware stack levels used:    1
 18032 ;; Hardware stack levels required when called:    5
 18033 ;; This function calls:
 18034 ;;		___ftpack
 18035 ;; This function is called by:
 18036 ;;		_getPercentValue
 18037 ;;		_setPercentValue
 18038 ;; This function uses a non-reentrant model
 18039 ;;
 18040                           
 18041                           
 18042                           ;psect for function ___ftdiv
 18043  09C8                     ___ftdiv:	
 18044                           
 18045                           ;incstack = 0
 18046                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
 18047  09C8  0020               	movlb	0	; select bank0
 18048  09C9  0831               	movf	___ftdiv@f1,w
 18049  09CA  00B4               	movwf	??___ftdiv
 18050  09CB  0832               	movf	___ftdiv@f1+1,w
 18051  09CC  00B5               	movwf	??___ftdiv+1
 18052  09CD  0833               	movf	___ftdiv@f1+2,w
 18053  09CE  00B6               	movwf	??___ftdiv+2
 18054  09CF  1003               	clrc
 18055  09D0  0D35               	rlf	??___ftdiv+1,w
 18056  09D1  0D36               	rlf	??___ftdiv+2,w
 18057  09D2  00B7               	movwf	??___ftdiv+3
 18058  09D3  0837               	movf	??___ftdiv+3,w
 18059  09D4  00BC               	movwf	___ftdiv@exp
 18060  09D5  08BC               	movf	___ftdiv@exp,f
 18061  09D6  1D03               	skipz
 18062  09D7  29DF               	goto	l6533
 18063  09D8  3000               	movlw	0
 18064  09D9  00AE               	movwf	?___ftdiv
 18065  09DA  3000               	movlw	0
 18066  09DB  00AF               	movwf	?___ftdiv+1
 18067  09DC  3000               	movlw	0
 18068  09DD  00B0               	movwf	?___ftdiv+2
 18069  09DE  0008               	return
 18070  09DF                     l6533:	
 18071  09DF  082E               	movf	___ftdiv@f2,w
 18072  09E0  00B4               	movwf	??___ftdiv
 18073  09E1  082F               	movf	___ftdiv@f2+1,w
 18074  09E2  00B5               	movwf	??___ftdiv+1
 18075  09E3  0830               	movf	___ftdiv@f2+2,w
 18076  09E4  00B6               	movwf	??___ftdiv+2
 18077  09E5  1003               	clrc
 18078  09E6  0D35               	rlf	??___ftdiv+1,w
 18079  09E7  0D36               	rlf	??___ftdiv+2,w
 18080  09E8  00B7               	movwf	??___ftdiv+3
 18081  09E9  0837               	movf	??___ftdiv+3,w
 18082  09EA  00BD               	movwf	___ftdiv@sign
 18083  09EB  08BD               	movf	___ftdiv@sign,f
 18084  09EC  1D03               	skipz
 18085  09ED  29F5               	goto	l6539
 18086  09EE  3000               	movlw	0
 18087  09EF  00AE               	movwf	?___ftdiv
 18088  09F0  3000               	movlw	0
 18089  09F1  00AF               	movwf	?___ftdiv+1
 18090  09F2  3000               	movlw	0
 18091  09F3  00B0               	movwf	?___ftdiv+2
 18092  09F4  0008               	return
 18093  09F5                     l6539:	
 18094  09F5  3000               	movlw	0
 18095  09F6  00B9               	movwf	___ftdiv@f3
 18096  09F7  3000               	movlw	0
 18097  09F8  00BA               	movwf	___ftdiv@f3+1
 18098  09F9  3000               	movlw	0
 18099  09FA  00BB               	movwf	___ftdiv@f3+2
 18100  09FB  3089               	movlw	137
 18101  09FC  073D               	addwf	___ftdiv@sign,w
 18102  09FD  00B4               	movwf	??___ftdiv
 18103  09FE  0834               	movf	??___ftdiv,w
 18104  09FF  02BC               	subwf	___ftdiv@exp,f
 18105  0A00  0831               	movf	___ftdiv@f1,w
 18106  0A01  00B4               	movwf	??___ftdiv
 18107  0A02  0832               	movf	___ftdiv@f1+1,w
 18108  0A03  00B5               	movwf	??___ftdiv+1
 18109  0A04  0833               	movf	___ftdiv@f1+2,w
 18110  0A05  00B6               	movwf	??___ftdiv+2
 18111  0A06  3010               	movlw	16
 18112  0A07                     u4535:	
 18113  0A07  36B6               	lsrf	??___ftdiv+2,f
 18114  0A08  0CB5               	rrf	??___ftdiv+1,f
 18115  0A09  0CB4               	rrf	??___ftdiv,f
 18116  0A0A  0B89               	decfsz	9,f
 18117  0A0B  2A07               	goto	u4535
 18118  0A0C  0834               	movf	??___ftdiv,w
 18119  0A0D  00B7               	movwf	??___ftdiv+3
 18120  0A0E  0837               	movf	??___ftdiv+3,w
 18121  0A0F  00BD               	movwf	___ftdiv@sign
 18122  0A10  082E               	movf	___ftdiv@f2,w
 18123  0A11  00B4               	movwf	??___ftdiv
 18124  0A12  082F               	movf	___ftdiv@f2+1,w
 18125  0A13  00B5               	movwf	??___ftdiv+1
 18126  0A14  0830               	movf	___ftdiv@f2+2,w
 18127  0A15  00B6               	movwf	??___ftdiv+2
 18128  0A16  3010               	movlw	16
 18129  0A17                     u4545:	
 18130  0A17  36B6               	lsrf	??___ftdiv+2,f
 18131  0A18  0CB5               	rrf	??___ftdiv+1,f
 18132  0A19  0CB4               	rrf	??___ftdiv,f
 18133  0A1A  0B89               	decfsz	9,f
 18134  0A1B  2A17               	goto	u4545
 18135  0A1C  0834               	movf	??___ftdiv,w
 18136  0A1D  00B7               	movwf	??___ftdiv+3
 18137  0A1E  0837               	movf	??___ftdiv+3,w
 18138  0A1F  06BD               	xorwf	___ftdiv@sign,f
 18139  0A20  3080               	movlw	128
 18140  0A21  00B4               	movwf	??___ftdiv
 18141  0A22  0834               	movf	??___ftdiv,w
 18142  0A23  05BD               	andwf	___ftdiv@sign,f
 18143  0A24  17B2               	bsf	___ftdiv@f1+1,7
 18144  0A25  30FF               	movlw	255
 18145  0A26  05B1               	andwf	___ftdiv@f1,f
 18146  0A27  30FF               	movlw	255
 18147  0A28  05B2               	andwf	___ftdiv@f1+1,f
 18148  0A29  3000               	movlw	0
 18149  0A2A  05B3               	andwf	___ftdiv@f1+2,f
 18150  0A2B  17AF               	bsf	___ftdiv@f2+1,7
 18151  0A2C  30FF               	movlw	255
 18152  0A2D  05AE               	andwf	___ftdiv@f2,f
 18153  0A2E  30FF               	movlw	255
 18154  0A2F  05AF               	andwf	___ftdiv@f2+1,f
 18155  0A30  3000               	movlw	0
 18156  0A31  05B0               	andwf	___ftdiv@f2+2,f
 18157  0A32  3018               	movlw	24
 18158  0A33  00B4               	movwf	??___ftdiv
 18159  0A34  0834               	movf	??___ftdiv,w
 18160  0A35  00B8               	movwf	___ftdiv@cntr
 18161  0A36                     l6553:	
 18162  0A36  3001               	movlw	1
 18163  0A37                     u4555:	
 18164  0A37  35B9               	lslf	___ftdiv@f3,f
 18165  0A38  0DBA               	rlf	___ftdiv@f3+1,f
 18166  0A39  0DBB               	rlf	___ftdiv@f3+2,f
 18167  0A3A  0B89               	decfsz	9,f
 18168  0A3B  2A37               	goto	u4555
 18169  0A3C  0830               	movf	___ftdiv@f2+2,w
 18170  0A3D  0233               	subwf	___ftdiv@f1+2,w
 18171  0A3E  1D03               	skipz
 18172  0A3F  2A46               	goto	u4565
 18173  0A40  082F               	movf	___ftdiv@f2+1,w
 18174  0A41  0232               	subwf	___ftdiv@f1+1,w
 18175  0A42  1D03               	skipz
 18176  0A43  2A46               	goto	u4565
 18177  0A44  082E               	movf	___ftdiv@f2,w
 18178  0A45  0231               	subwf	___ftdiv@f1,w
 18179  0A46                     u4565:	
 18180  0A46  1C03               	skipc
 18181  0A47  2A4F               	goto	l6561
 18182  0A48  082E               	movf	___ftdiv@f2,w
 18183  0A49  02B1               	subwf	___ftdiv@f1,f
 18184  0A4A  082F               	movf	___ftdiv@f2+1,w
 18185  0A4B  3BB2               	subwfb	___ftdiv@f1+1,f
 18186  0A4C  0830               	movf	___ftdiv@f2+2,w
 18187  0A4D  3BB3               	subwfb	___ftdiv@f1+2,f
 18188  0A4E  1439               	bsf	___ftdiv@f3,0
 18189  0A4F                     l6561:	
 18190  0A4F  3001               	movlw	1
 18191  0A50                     u4575:	
 18192  0A50  35B1               	lslf	___ftdiv@f1,f
 18193  0A51  0DB2               	rlf	___ftdiv@f1+1,f
 18194  0A52  0DB3               	rlf	___ftdiv@f1+2,f
 18195  0A53  0B89               	decfsz	9,f
 18196  0A54  2A50               	goto	u4575
 18197  0A55  3001               	movlw	1
 18198  0A56  02B8               	subwf	___ftdiv@cntr,f
 18199  0A57  1D03               	btfss	3,2
 18200  0A58  2A36               	goto	l6553
 18201  0A59  0839               	movf	___ftdiv@f3,w
 18202  0A5A  00A0               	movwf	___ftpack@arg
 18203  0A5B  083A               	movf	___ftdiv@f3+1,w
 18204  0A5C  00A1               	movwf	___ftpack@arg+1
 18205  0A5D  083B               	movf	___ftdiv@f3+2,w
 18206  0A5E  00A2               	movwf	___ftpack@arg+2
 18207  0A5F  083C               	movf	___ftdiv@exp,w
 18208  0A60  00B4               	movwf	??___ftdiv
 18209  0A61  0834               	movf	??___ftdiv,w
 18210  0A62  00A3               	movwf	___ftpack@exp
 18211  0A63  083D               	movf	___ftdiv@sign,w
 18212  0A64  00B5               	movwf	??___ftdiv+1
 18213  0A65  0835               	movf	??___ftdiv+1,w
 18214  0A66  00A4               	movwf	___ftpack@sign
 18215  0A67  319E  26D7         	fcall	___ftpack
 18216  0A69  0020               	movlb	0	; select bank0
 18217  0A6A  0820               	movf	?___ftpack,w
 18218  0A6B  00AE               	movwf	?___ftdiv
 18219  0A6C  0821               	movf	?___ftpack+1,w
 18220  0A6D  00AF               	movwf	?___ftdiv+1
 18221  0A6E  0822               	movf	?___ftpack+2,w
 18222  0A6F  00B0               	movwf	?___ftdiv+2
 18223  0A70  0008               	return
 18224  0A71                     __end_of___ftdiv:	
 18225                           
 18226                           	psect	text116
 18227  0CAC                     __ptext116:	
 18228 ;; *************** function ___ftadd *****************
 18229 ;; Defined at:
 18230 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\ftadd.c"
 18231 ;; Parameters:    Size  Location     Type
 18232 ;;  f1              3   30[BANK0 ] float 
 18233 ;;  f2              3   33[BANK0 ] float 
 18234 ;; Auto vars:     Size  Location     Type
 18235 ;;  exp1            1   42[BANK0 ] unsigned char 
 18236 ;;  exp2            1   41[BANK0 ] unsigned char 
 18237 ;;  sign            1   40[BANK0 ] unsigned char 
 18238 ;; Return value:  Size  Location     Type
 18239 ;;                  3   30[BANK0 ] float 
 18240 ;; Registers used:
 18241 ;;		wreg, status,2, status,0, pclath, cstack
 18242 ;; Tracked objects:
 18243 ;;		On entry : 0/0
 18244 ;;		On exit  : 0/0
 18245 ;;		Unchanged: 0/0
 18246 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18247 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18248 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18249 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18250 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18251 ;;Total ram usage:       13 bytes
 18252 ;; Hardware stack levels used:    1
 18253 ;; Hardware stack levels required when called:    5
 18254 ;; This function calls:
 18255 ;;		___ftpack
 18256 ;; This function is called by:
 18257 ;;		_getPercentValue
 18258 ;; This function uses a non-reentrant model
 18259 ;;
 18260                           
 18261                           
 18262                           ;psect for function ___ftadd
 18263  0CAC                     ___ftadd:	
 18264                           
 18265                           ;incstack = 0
 18266                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
 18267  0CAC  0020               	movlb	0	; select bank0
 18268  0CAD  083E               	movf	___ftadd@f1,w
 18269  0CAE  00C4               	movwf	??___ftadd
 18270  0CAF  083F               	movf	___ftadd@f1+1,w
 18271  0CB0  00C5               	movwf	??___ftadd+1
 18272  0CB1  0840               	movf	___ftadd@f1+2,w
 18273  0CB2  00C6               	movwf	??___ftadd+2
 18274  0CB3  1003               	clrc
 18275  0CB4  0D45               	rlf	??___ftadd+1,w
 18276  0CB5  0D46               	rlf	??___ftadd+2,w
 18277  0CB6  00C7               	movwf	??___ftadd+3
 18278  0CB7  0847               	movf	??___ftadd+3,w
 18279  0CB8  00CA               	movwf	___ftadd@exp1
 18280  0CB9  0841               	movf	___ftadd@f2,w
 18281  0CBA  00C4               	movwf	??___ftadd
 18282  0CBB  0842               	movf	___ftadd@f2+1,w
 18283  0CBC  00C5               	movwf	??___ftadd+1
 18284  0CBD  0843               	movf	___ftadd@f2+2,w
 18285  0CBE  00C6               	movwf	??___ftadd+2
 18286  0CBF  1003               	clrc
 18287  0CC0  0D45               	rlf	??___ftadd+1,w
 18288  0CC1  0D46               	rlf	??___ftadd+2,w
 18289  0CC2  00C7               	movwf	??___ftadd+3
 18290  0CC3  0847               	movf	??___ftadd+3,w
 18291  0CC4  00C9               	movwf	___ftadd@exp2
 18292  0CC5  084A               	movf	___ftadd@exp1,w
 18293  0CC6  1903               	btfsc	3,2
 18294  0CC7  2CD4               	goto	l6463
 18295  0CC8  0849               	movf	___ftadd@exp2,w
 18296  0CC9  024A               	subwf	___ftadd@exp1,w
 18297  0CCA  1803               	skipnc
 18298  0CCB  2CDB               	goto	l6467
 18299  0CCC  034A               	decf	___ftadd@exp1,w
 18300  0CCD  3AFF               	xorlw	255
 18301  0CCE  0749               	addwf	___ftadd@exp2,w
 18302  0CCF  00C4               	movwf	??___ftadd
 18303  0CD0  3019               	movlw	25
 18304  0CD1  0244               	subwf	??___ftadd,w
 18305  0CD2  1C03               	skipc
 18306  0CD3  2CDB               	goto	l6467
 18307  0CD4                     l6463:	
 18308  0CD4  0841               	movf	___ftadd@f2,w
 18309  0CD5  00BE               	movwf	?___ftadd
 18310  0CD6  0842               	movf	___ftadd@f2+1,w
 18311  0CD7  00BF               	movwf	?___ftadd+1
 18312  0CD8  0843               	movf	___ftadd@f2+2,w
 18313  0CD9  00C0               	movwf	?___ftadd+2
 18314  0CDA  0008               	return
 18315  0CDB                     l6467:	
 18316  0CDB  0849               	movf	___ftadd@exp2,w
 18317  0CDC  1903               	btfsc	3,2
 18318  0CDD  0008               	return
 18319  0CDE  084A               	movf	___ftadd@exp1,w
 18320  0CDF  0249               	subwf	___ftadd@exp2,w
 18321  0CE0  1803               	skipnc
 18322  0CE1  2CEA               	goto	l6473
 18323  0CE2  0349               	decf	___ftadd@exp2,w
 18324  0CE3  3AFF               	xorlw	255
 18325  0CE4  074A               	addwf	___ftadd@exp1,w
 18326  0CE5  00C4               	movwf	??___ftadd
 18327  0CE6  3019               	movlw	25
 18328  0CE7  0244               	subwf	??___ftadd,w
 18329  0CE8  1803               	btfsc	3,0
 18330  0CE9  0008               	return
 18331  0CEA                     l6473:	
 18332  0CEA  3006               	movlw	6
 18333  0CEB  00C4               	movwf	??___ftadd
 18334  0CEC  0844               	movf	??___ftadd,w
 18335  0CED  00C8               	movwf	___ftadd@sign
 18336  0CEE  1BC0               	btfsc	___ftadd@f1+2,7
 18337  0CEF  17C8               	bsf	___ftadd@sign,7
 18338  0CF0  1BC3               	btfsc	___ftadd@f2+2,7
 18339  0CF1  1748               	bsf	___ftadd@sign,6
 18340  0CF2  17BF               	bsf	___ftadd@f1+1,7
 18341  0CF3  30FF               	movlw	255
 18342  0CF4  05BE               	andwf	___ftadd@f1,f
 18343  0CF5  30FF               	movlw	255
 18344  0CF6  05BF               	andwf	___ftadd@f1+1,f
 18345  0CF7  3000               	movlw	0
 18346  0CF8  05C0               	andwf	___ftadd@f1+2,f
 18347  0CF9  17C2               	bsf	___ftadd@f2+1,7
 18348  0CFA  30FF               	movlw	255
 18349  0CFB  05C1               	andwf	___ftadd@f2,f
 18350  0CFC  30FF               	movlw	255
 18351  0CFD  05C2               	andwf	___ftadd@f2+1,f
 18352  0CFE  3000               	movlw	0
 18353  0CFF  05C3               	andwf	___ftadd@f2+2,f
 18354  0D00  0849               	movf	___ftadd@exp2,w
 18355  0D01  024A               	subwf	___ftadd@exp1,w
 18356  0D02  1803               	skipnc
 18357  0D03  2D26               	goto	l6495
 18358  0D04                     l6485:	
 18359  0D04  3001               	movlw	1
 18360  0D05                     u4375:	
 18361  0D05  35C1               	lslf	___ftadd@f2,f
 18362  0D06  0DC2               	rlf	___ftadd@f2+1,f
 18363  0D07  0DC3               	rlf	___ftadd@f2+2,f
 18364  0D08  0B89               	decfsz	9,f
 18365  0D09  2D05               	goto	u4375
 18366  0D0A  3001               	movlw	1
 18367  0D0B  02C9               	subwf	___ftadd@exp2,f
 18368  0D0C  0849               	movf	___ftadd@exp2,w
 18369  0D0D  064A               	xorwf	___ftadd@exp1,w
 18370  0D0E  1903               	skipnz
 18371  0D0F  2D21               	goto	l6493
 18372  0D10  3001               	movlw	1
 18373  0D11  02C8               	subwf	___ftadd@sign,f
 18374  0D12  0848               	movf	___ftadd@sign,w
 18375  0D13  3907               	andlw	7
 18376  0D14  1903               	btfsc	3,2
 18377  0D15  2D21               	goto	l6493
 18378  0D16  2D04               	goto	l6485
 18379  0D17                     l6491:	
 18380  0D17  3001               	movlw	1
 18381  0D18                     u4405:	
 18382  0D18  36C0               	lsrf	___ftadd@f1+2,f
 18383  0D19  0CBF               	rrf	___ftadd@f1+1,f
 18384  0D1A  0CBE               	rrf	___ftadd@f1,f
 18385  0D1B  0B89               	decfsz	9,f
 18386  0D1C  2D18               	goto	u4405
 18387  0D1D  3001               	movlw	1
 18388  0D1E  00C4               	movwf	??___ftadd
 18389  0D1F  0844               	movf	??___ftadd,w
 18390  0D20  07CA               	addwf	___ftadd@exp1,f
 18391  0D21                     l6493:	
 18392  0D21  084A               	movf	___ftadd@exp1,w
 18393  0D22  0649               	xorwf	___ftadd@exp2,w
 18394  0D23  1903               	btfsc	3,2
 18395  0D24  2D4B               	goto	l3534
 18396  0D25  2D17               	goto	l6491
 18397  0D26                     l6495:	
 18398  0D26  084A               	movf	___ftadd@exp1,w
 18399  0D27  0249               	subwf	___ftadd@exp2,w
 18400  0D28  1803               	skipnc
 18401  0D29  2D4B               	goto	l3534
 18402  0D2A                     l6497:	
 18403  0D2A  3001               	movlw	1
 18404  0D2B                     u4435:	
 18405  0D2B  35BE               	lslf	___ftadd@f1,f
 18406  0D2C  0DBF               	rlf	___ftadd@f1+1,f
 18407  0D2D  0DC0               	rlf	___ftadd@f1+2,f
 18408  0D2E  0B89               	decfsz	9,f
 18409  0D2F  2D2B               	goto	u4435
 18410  0D30  3001               	movlw	1
 18411  0D31  02CA               	subwf	___ftadd@exp1,f
 18412  0D32  0849               	movf	___ftadd@exp2,w
 18413  0D33  064A               	xorwf	___ftadd@exp1,w
 18414  0D34  1903               	skipnz
 18415  0D35  2D47               	goto	l6505
 18416  0D36  3001               	movlw	1
 18417  0D37  02C8               	subwf	___ftadd@sign,f
 18418  0D38  0848               	movf	___ftadd@sign,w
 18419  0D39  3907               	andlw	7
 18420  0D3A  1903               	btfsc	3,2
 18421  0D3B  2D47               	goto	l6505
 18422  0D3C  2D2A               	goto	l6497
 18423  0D3D                     l6503:	
 18424  0D3D  3001               	movlw	1
 18425  0D3E                     u4465:	
 18426  0D3E  36C3               	lsrf	___ftadd@f2+2,f
 18427  0D3F  0CC2               	rrf	___ftadd@f2+1,f
 18428  0D40  0CC1               	rrf	___ftadd@f2,f
 18429  0D41  0B89               	decfsz	9,f
 18430  0D42  2D3E               	goto	u4465
 18431  0D43  3001               	movlw	1
 18432  0D44  00C4               	movwf	??___ftadd
 18433  0D45  0844               	movf	??___ftadd,w
 18434  0D46  07C9               	addwf	___ftadd@exp2,f
 18435  0D47                     l6505:	
 18436  0D47  084A               	movf	___ftadd@exp1,w
 18437  0D48  0649               	xorwf	___ftadd@exp2,w
 18438  0D49  1D03               	skipz
 18439  0D4A  2D3D               	goto	l6503
 18440  0D4B                     l3534:	
 18441  0D4B  1FC8               	btfss	___ftadd@sign,7
 18442  0D4C  2D5D               	goto	l6509
 18443  0D4D  30FF               	movlw	255
 18444  0D4E  06BE               	xorwf	___ftadd@f1,f
 18445  0D4F  30FF               	movlw	255
 18446  0D50  06BF               	xorwf	___ftadd@f1+1,f
 18447  0D51  30FF               	movlw	255
 18448  0D52  06C0               	xorwf	___ftadd@f1+2,f
 18449  0D53  3001               	movlw	1
 18450  0D54  07BE               	addwf	___ftadd@f1,f
 18451  0D55  3000               	movlw	0
 18452  0D56  1803               	skipnc
 18453  0D57  3001               	movlw	1
 18454  0D58  07BF               	addwf	___ftadd@f1+1,f
 18455  0D59  3000               	movlw	0
 18456  0D5A  1803               	skipnc
 18457  0D5B  3001               	movlw	1
 18458  0D5C  07C0               	addwf	___ftadd@f1+2,f
 18459  0D5D                     l6509:	
 18460  0D5D  1F48               	btfss	___ftadd@sign,6
 18461  0D5E  2D6F               	goto	l6513
 18462  0D5F  30FF               	movlw	255
 18463  0D60  06C1               	xorwf	___ftadd@f2,f
 18464  0D61  30FF               	movlw	255
 18465  0D62  06C2               	xorwf	___ftadd@f2+1,f
 18466  0D63  30FF               	movlw	255
 18467  0D64  06C3               	xorwf	___ftadd@f2+2,f
 18468  0D65  3001               	movlw	1
 18469  0D66  07C1               	addwf	___ftadd@f2,f
 18470  0D67  3000               	movlw	0
 18471  0D68  1803               	skipnc
 18472  0D69  3001               	movlw	1
 18473  0D6A  07C2               	addwf	___ftadd@f2+1,f
 18474  0D6B  3000               	movlw	0
 18475  0D6C  1803               	skipnc
 18476  0D6D  3001               	movlw	1
 18477  0D6E  07C3               	addwf	___ftadd@f2+2,f
 18478  0D6F                     l6513:	
 18479  0D6F  01C8               	clrf	___ftadd@sign
 18480  0D70  083E               	movf	___ftadd@f1,w
 18481  0D71  07C1               	addwf	___ftadd@f2,f
 18482  0D72  083F               	movf	___ftadd@f1+1,w
 18483  0D73  3DC2               	addwfc	___ftadd@f2+1,f
 18484  0D74  0840               	movf	___ftadd@f1+2,w
 18485  0D75  3DC3               	addwfc	___ftadd@f2+2,f
 18486  0D76  1FC3               	btfss	___ftadd@f2+2,7
 18487  0D77  2D8A               	goto	l6523
 18488  0D78  30FF               	movlw	255
 18489  0D79  06C1               	xorwf	___ftadd@f2,f
 18490  0D7A  30FF               	movlw	255
 18491  0D7B  06C2               	xorwf	___ftadd@f2+1,f
 18492  0D7C  30FF               	movlw	255
 18493  0D7D  06C3               	xorwf	___ftadd@f2+2,f
 18494  0D7E  3001               	movlw	1
 18495  0D7F  07C1               	addwf	___ftadd@f2,f
 18496  0D80  3000               	movlw	0
 18497  0D81  1803               	skipnc
 18498  0D82  3001               	movlw	1
 18499  0D83  07C2               	addwf	___ftadd@f2+1,f
 18500  0D84  3000               	movlw	0
 18501  0D85  1803               	skipnc
 18502  0D86  3001               	movlw	1
 18503  0D87  07C3               	addwf	___ftadd@f2+2,f
 18504  0D88  01C8               	clrf	___ftadd@sign
 18505  0D89  0AC8               	incf	___ftadd@sign,f
 18506  0D8A                     l6523:	
 18507  0D8A  0841               	movf	___ftadd@f2,w
 18508  0D8B  00A0               	movwf	___ftpack@arg
 18509  0D8C  0842               	movf	___ftadd@f2+1,w
 18510  0D8D  00A1               	movwf	___ftpack@arg+1
 18511  0D8E  0843               	movf	___ftadd@f2+2,w
 18512  0D8F  00A2               	movwf	___ftpack@arg+2
 18513  0D90  084A               	movf	___ftadd@exp1,w
 18514  0D91  00C4               	movwf	??___ftadd
 18515  0D92  0844               	movf	??___ftadd,w
 18516  0D93  00A3               	movwf	___ftpack@exp
 18517  0D94  0848               	movf	___ftadd@sign,w
 18518  0D95  00C5               	movwf	??___ftadd+1
 18519  0D96  0845               	movf	??___ftadd+1,w
 18520  0D97  00A4               	movwf	___ftpack@sign
 18521  0D98  319E  26D7         	fcall	___ftpack
 18522  0D9A  0020               	movlb	0	; select bank0
 18523  0D9B  0820               	movf	?___ftpack,w
 18524  0D9C  00BE               	movwf	?___ftadd
 18525  0D9D  0821               	movf	?___ftpack+1,w
 18526  0D9E  00BF               	movwf	?___ftadd+1
 18527  0D9F  0822               	movf	?___ftpack+2,w
 18528  0DA0  00C0               	movwf	?___ftadd+2
 18529  0DA1  0008               	return
 18530  0DA2                     __end_of___ftadd:	
 18531                           
 18532                           	psect	text117
 18533  26E0                     __ptext117:	
 18534 ;; *************** function ___awtoft *****************
 18535 ;; Defined at:
 18536 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\awtoft.c"
 18537 ;; Parameters:    Size  Location     Type
 18538 ;;  c               2    8[BANK0 ] int 
 18539 ;; Auto vars:     Size  Location     Type
 18540 ;;  sign            1   13[BANK0 ] unsigned char 
 18541 ;; Return value:  Size  Location     Type
 18542 ;;                  3    8[BANK0 ] float 
 18543 ;; Registers used:
 18544 ;;		wreg, status,2, status,0, pclath, cstack
 18545 ;; Tracked objects:
 18546 ;;		On entry : 0/0
 18547 ;;		On exit  : 0/0
 18548 ;;		Unchanged: 0/0
 18549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18550 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18551 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18552 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18553 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18554 ;;Total ram usage:        6 bytes
 18555 ;; Hardware stack levels used:    1
 18556 ;; Hardware stack levels required when called:    5
 18557 ;; This function calls:
 18558 ;;		___ftpack
 18559 ;; This function is called by:
 18560 ;;		_getPercentValue
 18561 ;;		_setPercentValue
 18562 ;; This function uses a non-reentrant model
 18563 ;;
 18564                           
 18565                           
 18566                           ;psect for function ___awtoft
 18567  26E0                     ___awtoft:	
 18568                           
 18569                           ;incstack = 0
 18570                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
 18571  26E0  0020               	movlb	0	; select bank0
 18572  26E1  01AD               	clrf	___awtoft@sign
 18573  26E2  1FA9               	btfss	___awtoft@c+1,7
 18574  26E3  2EEB               	goto	l6451
 18575  26E4  09A8               	comf	___awtoft@c,f
 18576  26E5  09A9               	comf	___awtoft@c+1,f
 18577  26E6  0AA8               	incf	___awtoft@c,f
 18578  26E7  1903               	skipnz
 18579  26E8  0AA9               	incf	___awtoft@c+1,f
 18580  26E9  01AD               	clrf	___awtoft@sign
 18581  26EA  0AAD               	incf	___awtoft@sign,f
 18582  26EB                     l6451:	
 18583  26EB  0828               	movf	___awtoft@c,w
 18584  26EC  00A0               	movwf	___ftpack@arg
 18585  26ED  0829               	movf	___awtoft@c+1,w
 18586  26EE  00A1               	movwf	___ftpack@arg+1
 18587  26EF  01A2               	clrf	___ftpack@arg+2
 18588  26F0  308E               	movlw	142
 18589  26F1  00AB               	movwf	??___awtoft
 18590  26F2  082B               	movf	??___awtoft,w
 18591  26F3  00A3               	movwf	___ftpack@exp
 18592  26F4  082D               	movf	___awtoft@sign,w
 18593  26F5  00AC               	movwf	??___awtoft+1
 18594  26F6  082C               	movf	??___awtoft+1,w
 18595  26F7  00A4               	movwf	___ftpack@sign
 18596  26F8  319E  26D7         	fcall	___ftpack
 18597  26FA  0020               	movlb	0	; select bank0
 18598  26FB  0820               	movf	?___ftpack,w
 18599  26FC  00A8               	movwf	?___awtoft
 18600  26FD  0821               	movf	?___ftpack+1,w
 18601  26FE  00A9               	movwf	?___awtoft+1
 18602  26FF  0822               	movf	?___ftpack+2,w
 18603  2700  00AA               	movwf	?___awtoft+2
 18604  2701  0008               	return
 18605  2702                     __end_of___awtoft:	
 18606                           
 18607                           	psect	text118
 18608  1ED7                     __ptext118:	
 18609 ;; *************** function ___ftpack *****************
 18610 ;; Defined at:
 18611 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\float.c"
 18612 ;; Parameters:    Size  Location     Type
 18613 ;;  arg             3    0[BANK0 ] unsigned um
 18614 ;;  exp             1    3[BANK0 ] unsigned char 
 18615 ;;  sign            1    4[BANK0 ] unsigned char 
 18616 ;; Auto vars:     Size  Location     Type
 18617 ;;		None
 18618 ;; Return value:  Size  Location     Type
 18619 ;;                  3    0[BANK0 ] float 
 18620 ;; Registers used:
 18621 ;;		wreg, status,2, status,0
 18622 ;; Tracked objects:
 18623 ;;		On entry : 0/0
 18624 ;;		On exit  : 0/0
 18625 ;;		Unchanged: 0/0
 18626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18627 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18628 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18629 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18630 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18631 ;;Total ram usage:        8 bytes
 18632 ;; Hardware stack levels used:    1
 18633 ;; Hardware stack levels required when called:    4
 18634 ;; This function calls:
 18635 ;;		Nothing
 18636 ;; This function is called by:
 18637 ;;		___awtoft
 18638 ;;		___ftadd
 18639 ;;		___ftdiv
 18640 ;;		___ftmul
 18641 ;; This function uses a non-reentrant model
 18642 ;;
 18643                           
 18644                           
 18645                           ;psect for function ___ftpack
 18646  1ED7                     ___ftpack:	
 18647                           
 18648                           ;incstack = 0
 18649                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
 18650  1ED7  0020               	movlb	0	; select bank0
 18651  1ED8  0823               	movf	___ftpack@exp,w
 18652  1ED9  1903               	btfsc	3,2
 18653  1EDA  2EE0               	goto	l6417
 18654  1EDB  0822               	movf	___ftpack@arg+2,w
 18655  1EDC  0421               	iorwf	___ftpack@arg+1,w
 18656  1EDD  0420               	iorwf	___ftpack@arg,w
 18657  1EDE  1D03               	skipz
 18658  1EDF  2EF1               	goto	l6423
 18659  1EE0                     l6417:	
 18660  1EE0  3000               	movlw	0
 18661  1EE1  00A0               	movwf	?___ftpack
 18662  1EE2  3000               	movlw	0
 18663  1EE3  00A1               	movwf	?___ftpack+1
 18664  1EE4  3000               	movlw	0
 18665  1EE5  00A2               	movwf	?___ftpack+2
 18666  1EE6  0008               	return
 18667  1EE7                     l6421:	
 18668  1EE7  3001               	movlw	1
 18669  1EE8  00A5               	movwf	??___ftpack
 18670  1EE9  0825               	movf	??___ftpack,w
 18671  1EEA  07A3               	addwf	___ftpack@exp,f
 18672  1EEB  3001               	movlw	1
 18673  1EEC                     u4185:	
 18674  1EEC  36A2               	lsrf	___ftpack@arg+2,f
 18675  1EED  0CA1               	rrf	___ftpack@arg+1,f
 18676  1EEE  0CA0               	rrf	___ftpack@arg,f
 18677  1EEF  0B89               	decfsz	9,f
 18678  1EF0  2EEC               	goto	u4185
 18679  1EF1                     l6423:	
 18680  1EF1  30FE               	movlw	254
 18681  1EF2  0522               	andwf	___ftpack@arg+2,w
 18682  1EF3  1903               	btfsc	3,2
 18683  1EF4  2F0A               	goto	l3505
 18684  1EF5  2EE7               	goto	l6421
 18685  1EF6                     l6425:	
 18686  1EF6  3001               	movlw	1
 18687  1EF7  00A5               	movwf	??___ftpack
 18688  1EF8  0825               	movf	??___ftpack,w
 18689  1EF9  07A3               	addwf	___ftpack@exp,f
 18690  1EFA  3001               	movlw	1
 18691  1EFB  07A0               	addwf	___ftpack@arg,f
 18692  1EFC  3000               	movlw	0
 18693  1EFD  1803               	skipnc
 18694  1EFE  3001               	movlw	1
 18695  1EFF  07A1               	addwf	___ftpack@arg+1,f
 18696  1F00  3000               	movlw	0
 18697  1F01  1803               	skipnc
 18698  1F02  3001               	movlw	1
 18699  1F03  07A2               	addwf	___ftpack@arg+2,f
 18700  1F04  3001               	movlw	1
 18701  1F05                     u4205:	
 18702  1F05  36A2               	lsrf	___ftpack@arg+2,f
 18703  1F06  0CA1               	rrf	___ftpack@arg+1,f
 18704  1F07  0CA0               	rrf	___ftpack@arg,f
 18705  1F08  0B89               	decfsz	9,f
 18706  1F09  2F05               	goto	u4205
 18707  1F0A                     l3505:	
 18708  1F0A  30FF               	movlw	255
 18709  1F0B  0522               	andwf	___ftpack@arg+2,w
 18710  1F0C  1903               	btfsc	3,2
 18711  1F0D  2F17               	goto	l6433
 18712  1F0E  2EF6               	goto	l6425
 18713  1F0F                     l6431:	
 18714  1F0F  3001               	movlw	1
 18715  1F10  02A3               	subwf	___ftpack@exp,f
 18716  1F11  3001               	movlw	1
 18717  1F12                     u4225:	
 18718  1F12  35A0               	lslf	___ftpack@arg,f
 18719  1F13  0DA1               	rlf	___ftpack@arg+1,f
 18720  1F14  0DA2               	rlf	___ftpack@arg+2,f
 18721  1F15  0B89               	decfsz	9,f
 18722  1F16  2F12               	goto	u4225
 18723  1F17                     l6433:	
 18724  1F17  1FA1               	btfss	___ftpack@arg+1,7
 18725  1F18  2F0F               	goto	l6431
 18726  1F19  1823               	btfsc	___ftpack@exp,0
 18727  1F1A  2F21               	goto	l3511
 18728  1F1B  30FF               	movlw	255
 18729  1F1C  05A0               	andwf	___ftpack@arg,f
 18730  1F1D  307F               	movlw	127
 18731  1F1E  05A1               	andwf	___ftpack@arg+1,f
 18732  1F1F  30FF               	movlw	255
 18733  1F20  05A2               	andwf	___ftpack@arg+2,f
 18734  1F21                     l3511:	
 18735  1F21  1003               	clrc
 18736  1F22  0CA3               	rrf	___ftpack@exp,f
 18737  1F23  0823               	movf	___ftpack@exp,w
 18738  1F24  00A5               	movwf	??___ftpack
 18739  1F25  01A6               	clrf	??___ftpack+1
 18740  1F26  01A7               	clrf	??___ftpack+2
 18741  1F27  3010               	movlw	16
 18742  1F28                     u4255:	
 18743  1F28  35A5               	lslf	??___ftpack,f
 18744  1F29  0DA6               	rlf	??___ftpack+1,f
 18745  1F2A  0DA7               	rlf	??___ftpack+2,f
 18746  1F2B  0B89               	decfsz	9,f
 18747  1F2C  2F28               	goto	u4255
 18748  1F2D  0825               	movf	??___ftpack,w
 18749  1F2E  04A0               	iorwf	___ftpack@arg,f
 18750  1F2F  0826               	movf	??___ftpack+1,w
 18751  1F30  04A1               	iorwf	___ftpack@arg+1,f
 18752  1F31  0827               	movf	??___ftpack+2,w
 18753  1F32  04A2               	iorwf	___ftpack@arg+2,f
 18754  1F33  0824               	movf	___ftpack@sign,w
 18755  1F34  1903               	btfsc	3,2
 18756  1F35  0008               	return
 18757  1F36  17A2               	bsf	___ftpack@arg+2,7
 18758  1F37  0008               	return
 18759  1F38                     __end_of___ftpack:	
 18760                           
 18761                           	psect	text119
 18762  21F2                     __ptext119:	
 18763 ;; *************** function _DelayOff_Main *****************
 18764 ;; Defined at:
 18765 ;;		line 45 in file "G:\Program\PIC\Source_File\DelayOff_B1.c"
 18766 ;; Parameters:    Size  Location     Type
 18767 ;;		None
 18768 ;; Auto vars:     Size  Location     Type
 18769 ;;		None
 18770 ;; Return value:  Size  Location     Type
 18771 ;;		None               void
 18772 ;; Registers used:
 18773 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18774 ;; Tracked objects:
 18775 ;;		On entry : 0/0
 18776 ;;		On exit  : 0/0
 18777 ;;		Unchanged: 0/0
 18778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18782 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18783 ;;Total ram usage:        0 bytes
 18784 ;; Hardware stack levels used:    1
 18785 ;; Hardware stack levels required when called:    7
 18786 ;; This function calls:
 18787 ;;		_DlyOff_Main
 18788 ;; This function is called by:
 18789 ;;		_main
 18790 ;; This function uses a non-reentrant model
 18791 ;;
 18792                           
 18793                           
 18794                           ;psect for function _DelayOff_Main
 18795  21F2                     _DelayOff_Main:	
 18796                           
 18797                           ;DelayOff_B1.c: 48: DlyOff_Main(1);
 18798                           
 18799                           ;incstack = 0
 18800                           ; Regs used in _DelayOff_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18801  21F2  3001               	movlw	1
 18802  21F3  3193  2315  31A1   	fcall	_DlyOff_Main
 18803                           
 18804                           ;DelayOff_B1.c: 52: DlyOff_Main(2);
 18805  21F6  3002               	movlw	2
 18806  21F7  3193  2315         	fcall	_DlyOff_Main
 18807  21F9  0008               	return
 18808  21FA                     __end_of_DelayOff_Main:	
 18809                           
 18810                           	psect	text120
 18811  1315                     __ptext120:	
 18812 ;; *************** function _DlyOff_Main *****************
 18813 ;; Defined at:
 18814 ;;		line 66 in file "G:\Program\PIC\Source_File\DelayOff_B1.c"
 18815 ;; Parameters:    Size  Location     Type
 18816 ;;  sw              1    wreg     unsigned char 
 18817 ;; Auto vars:     Size  Location     Type
 18818 ;;  sw              1   13[BANK0 ] unsigned char 
 18819 ;; Return value:  Size  Location     Type
 18820 ;;		None               void
 18821 ;; Registers used:
 18822 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18823 ;; Tracked objects:
 18824 ;;		On entry : 0/0
 18825 ;;		On exit  : 0/0
 18826 ;;		Unchanged: 0/0
 18827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18828 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18829 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18830 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18831 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18832 ;;Total ram usage:        3 bytes
 18833 ;; Hardware stack levels used:    1
 18834 ;; Hardware stack levels required when called:    6
 18835 ;; This function calls:
 18836 ;;		_DelayOffPointSelect
 18837 ;;		_setBuz
 18838 ;;		_setDimmerLights_Switch
 18839 ;;		_setDimmerLights_Trigger
 18840 ;;		_setRFSW_Status
 18841 ;;		_setRF_DimmerLights
 18842 ;;		_setSw_Status
 18843 ;;		_setTxData
 18844 ;; This function is called by:
 18845 ;;		_DelayOff_Main
 18846 ;; This function uses a non-reentrant model
 18847 ;;
 18848                           
 18849                           
 18850                           ;psect for function _DlyOff_Main
 18851  1315                     _DlyOff_Main:	
 18852                           
 18853                           ;incstack = 0
 18854                           ; Regs used in _DlyOff_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18855                           ;DlyOff_Main@sw stored from wreg
 18856  1315  0020               	movlb	0	; select bank0
 18857  1316  00AD               	movwf	DlyOff_Main@sw
 18858                           
 18859                           ;DelayOff_B1.c: 68: DelayOffPointSelect(sw);
 18860  1317  082D               	movf	DlyOff_Main@sw,w
 18861  1318  31A5  2527  3193   	fcall	_DelayOffPointSelect
 18862                           
 18863                           ;DelayOff_B1.c: 69: if(DelayOff->GO)
 18864  131B  0021               	movlb	1	; select bank1
 18865  131C  0839               	movf	_DelayOff^(0+128),w
 18866  131D  0086               	movwf	6
 18867  131E  0187               	clrf	7
 18868  131F  1C81               	btfss	1,1
 18869  1320  0008               	return
 18870                           
 18871                           ;DelayOff_B1.c: 70: {
 18872                           ;DelayOff_B1.c: 71: DelayOff->SecondTime++;
 18873  1321  0839               	movf	_DelayOff^(0+128),w
 18874  1322  3E02               	addlw	2
 18875  1323  0086               	movwf	6
 18876  1324  0187               	clrf	7
 18877  1325  3001               	movlw	1
 18878  1326  0781               	addwf	1,f
 18879  1327  3141               	addfsr 1,1
 18880  1328  1803               	skipnc
 18881  1329  0A81               	incf	1,f
 18882                           
 18883                           ;DelayOff_B1.c: 72: if(DelayOff->SecondTime >= 5400)
 18884  132A  0839               	movf	_DelayOff^(0+128),w
 18885  132B  3E02               	addlw	2
 18886  132C  0086               	movwf	6
 18887  132D  0187               	clrf	7
 18888  132E  3F40               	moviw [0]fsr1
 18889  132F  0020               	movlb	0	; select bank0
 18890  1330  00AB               	movwf	??_DlyOff_Main
 18891  1331  3F41               	moviw [1]fsr1
 18892  1332  00AC               	movwf	??_DlyOff_Main+1
 18893  1333  3015               	movlw	21
 18894  1334  022C               	subwf	??_DlyOff_Main+1,w
 18895  1335  3018               	movlw	24
 18896  1336  1903               	skipnz
 18897  1337  022B               	subwf	??_DlyOff_Main,w
 18898  1338  1C03               	skipc
 18899  1339  0008               	return
 18900                           
 18901                           ;DelayOff_B1.c: 73: {
 18902                           ;DelayOff_B1.c: 74: DelayOff->SecondTime=0;
 18903  133A  0021               	movlb	1	; select bank1
 18904  133B  0839               	movf	_DelayOff^(0+128),w
 18905  133C  3E02               	addlw	2
 18906  133D  0086               	movwf	6
 18907  133E  0187               	clrf	7
 18908  133F  3000               	movlw	0
 18909  1340  3FC0               	movwi [0]fsr1
 18910  1341  3FC1               	movwi [1]fsr1
 18911                           
 18912                           ;DelayOff_B1.c: 75: DelayOff->MinuteTime++;
 18913  1342  3001               	movlw	1
 18914  1343  0020               	movlb	0	; select bank0
 18915  1344  00AB               	movwf	??_DlyOff_Main
 18916  1345  0021               	movlb	1	; select bank1
 18917  1346  0839               	movf	_DelayOff^(0+128),w
 18918  1347  3E04               	addlw	4
 18919  1348  0086               	movwf	6
 18920  1349  0187               	clrf	7
 18921  134A  0020               	movlb	0	; select bank0
 18922  134B  082B               	movf	??_DlyOff_Main,w
 18923  134C  0781               	addwf	1,f
 18924                           
 18925                           ;DelayOff_B1.c: 76: if(DelayOff->MinuteTime >= DelayOff->Value)
 18926  134D  0021               	movlb	1	; select bank1
 18927  134E  0839               	movf	_DelayOff^(0+128),w
 18928  134F  3E04               	addlw	4
 18929  1350  0086               	movwf	6
 18930  1351  0187               	clrf	7
 18931  1352  0A39               	incf	_DelayOff^(0+128),w
 18932  1353  0084               	movwf	4
 18933  1354  0185               	clrf	5
 18934  1355  0800               	movf	0,w
 18935  1356  0201               	subwf	1,w
 18936  1357  1C03               	skipc
 18937  1358  0008               	return
 18938                           
 18939                           ;DelayOff_B1.c: 77: {
 18940                           ;DelayOff_B1.c: 78: DelayOff->MinuteTime=0;
 18941  1359  0839               	movf	_DelayOff^(0+128),w
 18942  135A  3E04               	addlw	4
 18943  135B  0086               	movwf	6
 18944  135C  0187               	clrf	7
 18945  135D  0181               	clrf	1
 18946                           
 18947                           ;DelayOff_B1.c: 79: DelayOff->GO=0;
 18948  135E  0839               	movf	_DelayOff^(0+128),w
 18949  135F  0086               	movwf	6
 18950  1360  0187               	clrf	7
 18951  1361  1081               	bcf	1,1
 18952                           
 18953                           ;DelayOff_B1.c: 80: setSw_Status(sw,0);
 18954  1362  0020               	movlb	0	; select bank0
 18955  1363  01A2               	clrf	setSw_Status@command
 18956  1364  082D               	movf	DlyOff_Main@sw,w
 18957  1365  31A3  231D  3193   	fcall	_setSw_Status
 18958                           
 18959                           ;DelayOff_B1.c: 81: setRFSW_Status(sw,0);
 18960  1368  0020               	movlb	0	; select bank0
 18961  1369  01A2               	clrf	setRFSW_Status@command
 18962  136A  082D               	movf	DlyOff_Main@sw,w
 18963  136B  31A3  230E  3193   	fcall	_setRFSW_Status
 18964                           
 18965                           ;DelayOff_B1.c: 82: setRF_DimmerLights(sw,0);
 18966  136E  0020               	movlb	0	; select bank0
 18967  136F  01A0               	clrf	setRF_DimmerLights@on
 18968  1370  082D               	movf	DlyOff_Main@sw,w
 18969  1371  3190  20D8  3193   	fcall	_setRF_DimmerLights
 18970                           
 18971                           ;DelayOff_B1.c: 83: setDimmerLights_Trigger(sw,1);
 18972  1374  0020               	movlb	0	; select bank0
 18973  1375  01A2               	clrf	setDimmerLights_Trigger@command
 18974  1376  0AA2               	incf	setDimmerLights_Trigger@command,f
 18975  1377  082D               	movf	DlyOff_Main@sw,w
 18976  1378  31A3  23E3  3193   	fcall	_setDimmerLights_Trigger
 18977                           
 18978                           ;DelayOff_B1.c: 84: setDimmerLights_Switch(sw,0);
 18979  137B  0020               	movlb	0	; select bank0
 18980  137C  01A2               	clrf	setDimmerLights_Switch@command
 18981  137D  082D               	movf	DlyOff_Main@sw,w
 18982  137E  31A3  23D3  3193   	fcall	_setDimmerLights_Switch
 18983                           
 18984                           ;DelayOff_B1.c: 85: setTxData(1);
 18985  1381  3001               	movlw	1
 18986  1382  319A  227A  3193   	fcall	_setTxData
 18987                           
 18988                           ;DelayOff_B1.c: 86: setBuz(1,1,100);
 18989  1385  0020               	movlb	0	; select bank0
 18990  1386  01A6               	clrf	setBuz@count
 18991  1387  0AA6               	incf	setBuz@count,f
 18992  1388  3064               	movlw	100
 18993  1389  00A7               	movwf	setBuz@time
 18994  138A  3000               	movlw	0
 18995  138B  00A8               	movwf	setBuz@time+1
 18996  138C  3001               	movlw	1
 18997  138D  3195  25AB         	fcall	_setBuz
 18998  138F  0008               	return
 18999  1390                     __end_of_DlyOff_Main:	
 19000                           
 19001                           	psect	text121
 19002  1A7A                     __ptext121:	
 19003 ;; *************** function _setTxData *****************
 19004 ;; Defined at:
 19005 ;;		line 130 in file "G:\Program\PIC\Source_File\RF_Control_B1.c"
 19006 ;; Parameters:    Size  Location     Type
 19007 ;;  rf              1    wreg     unsigned char 
 19008 ;; Auto vars:     Size  Location     Type
 19009 ;;  rf              1    4[BANK0 ] unsigned char 
 19010 ;;  i               1    5[BANK0 ] unsigned char 
 19011 ;; Return value:  Size  Location     Type
 19012 ;;		None               void
 19013 ;; Registers used:
 19014 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19015 ;; Tracked objects:
 19016 ;;		On entry : 0/0
 19017 ;;		On exit  : 0/0
 19018 ;;		Unchanged: 0/0
 19019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19020 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19021 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19022 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19023 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19024 ;;Total ram usage:        4 bytes
 19025 ;; Hardware stack levels used:    1
 19026 ;; Hardware stack levels required when called:    5
 19027 ;; This function calls:
 19028 ;;		_RfPointSelect
 19029 ;; This function is called by:
 19030 ;;		_DlyOff_Main
 19031 ;;		_setDimmerLights_Adj
 19032 ;;		_setControl_Lights_Table
 19033 ;;		_setRFSW_Control
 19034 ;;		_setRFSW_AdjControl
 19035 ;;		_Sw_DimmerOnFunc
 19036 ;;		_Sw_DimmerOffFunc
 19037 ;; This function uses a non-reentrant model
 19038 ;;
 19039                           
 19040                           
 19041                           ;psect for function _setTxData
 19042  1A7A                     _setTxData:	
 19043                           
 19044                           ;incstack = 0
 19045                           ; Regs used in _setTxData: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 19046                           ;setTxData@rf stored from wreg
 19047  1A7A  0020               	movlb	0	; select bank0
 19048  1A7B  00A4               	movwf	setTxData@rf
 19049                           
 19050                           ;RF_Control_B1.c: 132: char i;
 19051                           ;RF_Control_B1.c: 133: RfPointSelect(rf);
 19052  1A7C  0824               	movf	setTxData@rf,w
 19053  1A7D  31A2  2279  319A   	fcall	_RfPointSelect
 19054                           
 19055                           ;RF_Control_B1.c: 134: if(RF->Enable)
 19056  1A80  0021               	movlb	1	; select bank1
 19057  1A81  083E               	movf	_RF^(0+128),w
 19058  1A82  0086               	movwf	6
 19059  1A83  0187               	clrf	7
 19060  1A84  1C01               	btfss	1,0
 19061  1A85  0008               	return
 19062                           
 19063                           ;RF_Control_B1.c: 135: {
 19064                           ;RF_Control_B1.c: 136: if(RF->TransceiveGO == 0 && 1)
 19065  1A86  083E               	movf	_RF^(0+128),w
 19066  1A87  0086               	movwf	6
 19067  1A88  0187               	clrf	7
 19068  1A89  1901               	btfsc	1,2
 19069  1A8A  0008               	return
 19070                           
 19071                           ;RF_Control_B1.c: 137: {
 19072                           ;RF_Control_B1.c: 139: RF->TransceiveGO=1;
 19073  1A8B  083E               	movf	_RF^(0+128),w
 19074  1A8C  0086               	movwf	6
 19075  1A8D  0187               	clrf	7
 19076  1A8E  1501               	bsf	1,2
 19077                           
 19078                           ;RF_Control_B1.c: 140: RF_Data[0]=0x63;
 19079  1A8F  3063               	movlw	99
 19080  1A90  0020               	movlb	0	; select bank0
 19081  1A91  00A2               	movwf	??_setTxData
 19082  1A92  0822               	movf	??_setTxData,w
 19083  1A93  0021               	movlb	1	; select bank1
 19084  1A94  00A0               	movwf	_RF_Data^(0+128)
 19085                           
 19086                           ;RF_Control_B1.c: 141: RF_Data[1]=0x02;
 19087  1A95  3002               	movlw	2
 19088  1A96  0020               	movlb	0	; select bank0
 19089  1A97  00A2               	movwf	??_setTxData
 19090  1A98  0822               	movf	??_setTxData,w
 19091  1A99  0021               	movlb	1	; select bank1
 19092  1A9A  00A1               	movwf	(_RF_Data^(0+128)+1)
 19093                           
 19094                           ;RF_Control_B1.c: 142: for(i=2 ;i< 21 ;i++)
 19095  1A9B  3002               	movlw	2
 19096  1A9C  0020               	movlb	0	; select bank0
 19097  1A9D  00A2               	movwf	??_setTxData
 19098  1A9E  0822               	movf	??_setTxData,w
 19099  1A9F  00A5               	movwf	setTxData@i
 19100  1AA0                     L12:	
 19101  1AA0  3015               	movlw	21
 19102  1AA1  0225               	subwf	setTxData@i,w
 19103  1AA2  1803               	btfsc	3,0
 19104  1AA3  0008               	return
 19105                           
 19106                           ;RF_Control_B1.c: 143: {
 19107                           ;RF_Control_B1.c: 144: RF_Data[i]=Product->Data[i];
 19108  1AA4  0825               	movf	setTxData@i,w
 19109  1AA5  0021               	movlb	1	; select bank1
 19110  1AA6  076C               	addwf	_Product^(0+128),w
 19111  1AA7  0020               	movlb	0	; select bank0
 19112  1AA8  00A2               	movwf	??_setTxData
 19113  1AA9  0822               	movf	??_setTxData,w
 19114  1AAA  0086               	movwf	6
 19115  1AAB  3001               	movlw	1	; select bank2/3
 19116  1AAC  0087               	movwf	7
 19117  1AAD  0801               	movf	1,w
 19118  1AAE  00A3               	movwf	??_setTxData+1
 19119  1AAF  0825               	movf	setTxData@i,w
 19120  1AB0  3EA0               	addlw	_RF_Data& (0+255)
 19121  1AB1  0086               	movwf	6
 19122  1AB2  0187               	clrf	7
 19123  1AB3  0823               	movf	??_setTxData+1,w
 19124  1AB4  0081               	movwf	1
 19125  1AB5  3001               	movlw	1
 19126  1AB6  00A2               	movwf	??_setTxData
 19127  1AB7  0822               	movf	??_setTxData,w
 19128  1AB8  07A5               	addwf	setTxData@i,f
 19129  1AB9  2AA0               	goto	L12
 19130  1ABA                     __end_of_setTxData:	
 19131                           
 19132                           	psect	text122
 19133  2279                     __ptext122:	
 19134 ;; *************** function _RfPointSelect *****************
 19135 ;; Defined at:
 19136 ;;		line 7 in file "G:\Program\PIC\Source_File\RF_Control_B1.c"
 19137 ;; Parameters:    Size  Location     Type
 19138 ;;  rf              1    wreg     unsigned char 
 19139 ;; Auto vars:     Size  Location     Type
 19140 ;;  rf              1    1[BANK0 ] unsigned char 
 19141 ;; Return value:  Size  Location     Type
 19142 ;;		None               void
 19143 ;; Registers used:
 19144 ;;		wreg
 19145 ;; Tracked objects:
 19146 ;;		On entry : 0/0
 19147 ;;		On exit  : 0/0
 19148 ;;		Unchanged: 0/0
 19149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19150 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19151 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19152 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19153 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19154 ;;Total ram usage:        2 bytes
 19155 ;; Hardware stack levels used:    1
 19156 ;; Hardware stack levels required when called:    4
 19157 ;; This function calls:
 19158 ;;		Nothing
 19159 ;; This function is called by:
 19160 ;;		_setRF_Learn
 19161 ;;		_setRF_RxStatus
 19162 ;;		_setRF_Main
 19163 ;;		_setTxData
 19164 ;;		_setRF_Enable
 19165 ;;		_RF_RxDisable
 19166 ;;		_getRxData
 19167 ;;		_setLog_Code
 19168 ;;		_setControl_Lights_Table
 19169 ;; This function uses a non-reentrant model
 19170 ;;
 19171                           
 19172                           
 19173                           ;psect for function _RfPointSelect
 19174  2279                     _RfPointSelect:	
 19175                           
 19176                           ;incstack = 0
 19177                           ; Regs used in _RfPointSelect: [wreg]
 19178                           ;RfPointSelect@rf stored from wreg
 19179  2279  0020               	movlb	0	; select bank0
 19180  227A  00A1               	movwf	RfPointSelect@rf
 19181                           
 19182                           ;RF_Control_B1.c: 10: if(rf == 1)
 19183  227B  0821               	movf	RfPointSelect@rf,w
 19184  227C  3A01               	xorlw	1
 19185  227D  1D03               	skipz
 19186  227E  0008               	return
 19187                           
 19188                           ;RF_Control_B1.c: 11: {
 19189                           ;RF_Control_B1.c: 12: RF=&RF1;
 19190  227F  30E7               	movlw	_RF1& (0+255)
 19191  2280  00A0               	movwf	??_RfPointSelect
 19192  2281  0820               	movf	??_RfPointSelect,w
 19193  2282  0021               	movlb	1	; select bank1
 19194  2283  00BE               	movwf	_RF^(0+128)
 19195  2284  0008               	return
 19196  2285                     __end_of_RfPointSelect:	
 19197                           
 19198                           	psect	text123
 19199  231D                     __ptext123:	
 19200 ;; *************** function _setSw_Status *****************
 19201 ;; Defined at:
 19202 ;;		line 92 in file "G:\Program\PIC\Source_File\Switch_B1.c"
 19203 ;; Parameters:    Size  Location     Type
 19204 ;;  sw              1    wreg     unsigned char 
 19205 ;;  command         1    2[BANK0 ] unsigned char 
 19206 ;; Auto vars:     Size  Location     Type
 19207 ;;  sw              1    3[BANK0 ] unsigned char 
 19208 ;; Return value:  Size  Location     Type
 19209 ;;		None               void
 19210 ;; Registers used:
 19211 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19212 ;; Tracked objects:
 19213 ;;		On entry : 0/0
 19214 ;;		On exit  : 0/0
 19215 ;;		Unchanged: 0/0
 19216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19217 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19218 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19220 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19221 ;;Total ram usage:        2 bytes
 19222 ;; Hardware stack levels used:    1
 19223 ;; Hardware stack levels required when called:    5
 19224 ;; This function calls:
 19225 ;;		_SwPointSelect
 19226 ;; This function is called by:
 19227 ;;		_DlyOff_Main
 19228 ;;		_setDimmerLights_ERROR
 19229 ;;		_setControl_Lights_Table
 19230 ;;		_setRFSW_Control
 19231 ;; This function uses a non-reentrant model
 19232 ;;
 19233                           
 19234                           
 19235                           ;psect for function _setSw_Status
 19236  231D                     _setSw_Status:	
 19237                           
 19238                           ;incstack = 0
 19239                           ; Regs used in _setSw_Status: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 19240                           ;setSw_Status@sw stored from wreg
 19241  231D  0020               	movlb	0	; select bank0
 19242  231E  00A3               	movwf	setSw_Status@sw
 19243                           
 19244                           ;Switch_B1.c: 94: SwPointSelect(sw);
 19245  231F  0823               	movf	setSw_Status@sw,w
 19246  2320  31A4  24AA         	fcall	_SwPointSelect
 19247                           
 19248                           ;Switch_B1.c: 95: Sw->Status=command;
 19249  2322  0020               	movlb	0	; select bank0
 19250  2323  086E               	movf	_Sw,w
 19251  2324  0086               	movwf	6
 19252  2325  3001               	movlw	1	; select bank2/3
 19253  2326  0087               	movwf	7
 19254  2327  0822               	movf	setSw_Status@command,w
 19255  2328  1301               	bcf	1,6
 19256  2329  1D03               	skipz
 19257  232A  1701               	bsf	1,6
 19258  232B  0008               	return
 19259  232C                     __end_of_setSw_Status:	
 19260                           
 19261                           	psect	text124
 19262  24AA                     __ptext124:	
 19263 ;; *************** function _SwPointSelect *****************
 19264 ;; Defined at:
 19265 ;;		line 16 in file "G:\Program\PIC\Source_File\Switch_B1.c"
 19266 ;; Parameters:    Size  Location     Type
 19267 ;;  sw              1    wreg     unsigned char 
 19268 ;; Auto vars:     Size  Location     Type
 19269 ;;  sw              1    1[BANK0 ] unsigned char 
 19270 ;; Return value:  Size  Location     Type
 19271 ;;		None               void
 19272 ;; Registers used:
 19273 ;;		wreg
 19274 ;; Tracked objects:
 19275 ;;		On entry : 0/0
 19276 ;;		On exit  : 0/0
 19277 ;;		Unchanged: 0/0
 19278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19280 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19281 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19282 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19283 ;;Total ram usage:        2 bytes
 19284 ;; Hardware stack levels used:    1
 19285 ;; Hardware stack levels required when called:    4
 19286 ;; This function calls:
 19287 ;;		Nothing
 19288 ;; This function is called by:
 19289 ;;		_setSw_Enable
 19290 ;;		_setSw_Status
 19291 ;;		_setSw_Main
 19292 ;;		_Sw_Detect
 19293 ;; This function uses a non-reentrant model
 19294 ;;
 19295                           
 19296                           
 19297                           ;psect for function _SwPointSelect
 19298  24AA                     _SwPointSelect:	
 19299                           
 19300                           ;incstack = 0
 19301                           ; Regs used in _SwPointSelect: [wreg]
 19302                           ;SwPointSelect@sw stored from wreg
 19303  24AA  0020               	movlb	0	; select bank0
 19304  24AB  00A1               	movwf	SwPointSelect@sw
 19305                           
 19306                           ;Switch_B1.c: 19: if(sw == 1)
 19307  24AC  0821               	movf	SwPointSelect@sw,w
 19308  24AD  3A01               	xorlw	1
 19309  24AE  1D03               	skipz
 19310  24AF  2CB5               	goto	l6773
 19311                           
 19312                           ;Switch_B1.c: 20: {
 19313                           ;Switch_B1.c: 21: Sw=&Sw1;
 19314  24B0  3054               	movlw	_Sw1& (0+255)
 19315  24B1  00A0               	movwf	??_SwPointSelect
 19316  24B2  0820               	movf	??_SwPointSelect,w
 19317  24B3  00EE               	movwf	_Sw
 19318                           
 19319                           ;Switch_B1.c: 22: }
 19320  24B4  0008               	return
 19321  24B5                     l6773:	
 19322                           
 19323                           ;Switch_B1.c: 25: else if(sw == 2)
 19324  24B5  0821               	movf	SwPointSelect@sw,w
 19325  24B6  3A02               	xorlw	2
 19326  24B7  1D03               	skipz
 19327  24B8  0008               	return
 19328                           
 19329                           ;Switch_B1.c: 26: {
 19330                           ;Switch_B1.c: 27: Sw=&Sw2;
 19331  24B9  305D               	movlw	_Sw2& (0+255)
 19332  24BA  00A0               	movwf	??_SwPointSelect
 19333  24BB  0820               	movf	??_SwPointSelect,w
 19334  24BC  00EE               	movwf	_Sw
 19335  24BD  0008               	return
 19336  24BE                     __end_of_SwPointSelect:	
 19337                           
 19338                           	psect	text125
 19339  10D8                     __ptext125:	
 19340 ;; *************** function _setRF_DimmerLights *****************
 19341 ;; Defined at:
 19342 ;;		line 435 in file "G:\Program\PIC\Source_File\RF_Control_B1.c"
 19343 ;; Parameters:    Size  Location     Type
 19344 ;;  lights          1    wreg     unsigned char 
 19345 ;;  on              1    0[BANK0 ] unsigned char 
 19346 ;; Auto vars:     Size  Location     Type
 19347 ;;  lights          1    4[BANK0 ] unsigned char 
 19348 ;;  status          1    3[BANK0 ] unsigned char 
 19349 ;; Return value:  Size  Location     Type
 19350 ;;		None               void
 19351 ;; Registers used:
 19352 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 19353 ;; Tracked objects:
 19354 ;;		On entry : 0/0
 19355 ;;		On exit  : 0/0
 19356 ;;		Unchanged: 0/0
 19357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19358 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19359 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19360 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19361 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19362 ;;Total ram usage:        5 bytes
 19363 ;; Hardware stack levels used:    1
 19364 ;; Hardware stack levels required when called:    4
 19365 ;; This function calls:
 19366 ;;		Nothing
 19367 ;; This function is called by:
 19368 ;;		_DlyOff_Main
 19369 ;;		_setDimmerLights_Adj
 19370 ;;		_setRFSW_Control
 19371 ;;		_Sw_DimmerOnFunc
 19372 ;;		_Sw_DimmerOffFunc
 19373 ;; This function uses a non-reentrant model
 19374 ;;
 19375                           
 19376                           
 19377                           ;psect for function _setRF_DimmerLights
 19378  10D8                     _setRF_DimmerLights:	
 19379                           
 19380                           ;incstack = 0
 19381                           ; Regs used in _setRF_DimmerLights: [wreg+fsr1l+fsr1h+status,2+status,0]
 19382                           ;setRF_DimmerLights@lights stored from wreg
 19383  10D8  0020               	movlb	0	; select bank0
 19384  10D9  00A4               	movwf	setRF_DimmerLights@lights
 19385                           
 19386                           ;RF_Control_B1.c: 437: char status;
 19387                           ;RF_Control_B1.c: 438: status=1;
 19388  10DA  01A3               	clrf	setRF_DimmerLights@status
 19389  10DB  0AA3               	incf	setRF_DimmerLights@status,f
 19390                           
 19391                           ;RF_Control_B1.c: 439: status<<=(lights-1);
 19392  10DC  0824               	movf	setRF_DimmerLights@lights,w
 19393  10DD  3EFF               	addlw	-1
 19394  10DE  0A89               	incf	9,f
 19395  10DF  28E2               	goto	u5150
 19396  10E0                     u5155:	
 19397  10E0  1003               	clrc
 19398  10E1  0DA3               	rlf	setRF_DimmerLights@status,f
 19399  10E2                     u5150:	
 19400  10E2  3EFF               	addlw	-1
 19401  10E3  1D03               	skipz
 19402  10E4  28E0               	goto	u5155
 19403                           
 19404                           ;RF_Control_B1.c: 440: Product->Data[11]=lights;
 19405  10E5  0824               	movf	setRF_DimmerLights@lights,w
 19406  10E6  00A1               	movwf	??_setRF_DimmerLights
 19407  10E7  0021               	movlb	1	; select bank1
 19408  10E8  086C               	movf	_Product^(0+128),w
 19409  10E9  3E0B               	addlw	11
 19410  10EA  0086               	movwf	6
 19411  10EB  3001               	movlw	1	; select bank2/3
 19412  10EC  0087               	movwf	7
 19413  10ED  0020               	movlb	0	; select bank0
 19414  10EE  0821               	movf	??_setRF_DimmerLights,w
 19415  10EF  0081               	movwf	1
 19416                           
 19417                           ;RF_Control_B1.c: 441: Product->Data[9]=Product->Data[20+lights];
 19418  10F0  0824               	movf	setRF_DimmerLights@lights,w
 19419  10F1  3E14               	addlw	20
 19420  10F2  0021               	movlb	1	; select bank1
 19421  10F3  076C               	addwf	_Product^(0+128),w
 19422  10F4  0020               	movlb	0	; select bank0
 19423  10F5  00A1               	movwf	??_setRF_DimmerLights
 19424  10F6  0821               	movf	??_setRF_DimmerLights,w
 19425  10F7  0086               	movwf	6
 19426  10F8  3001               	movlw	1	; select bank2/3
 19427  10F9  0087               	movwf	7
 19428  10FA  0801               	movf	1,w
 19429  10FB  00A2               	movwf	??_setRF_DimmerLights+1
 19430  10FC  0021               	movlb	1	; select bank1
 19431  10FD  086C               	movf	_Product^(0+128),w
 19432  10FE  3E09               	addlw	9
 19433  10FF  0086               	movwf	6
 19434  1100  3001               	movlw	1	; select bank2/3
 19435  1101  0087               	movwf	7
 19436  1102  0020               	movlb	0	; select bank0
 19437  1103  0822               	movf	??_setRF_DimmerLights+1,w
 19438  1104  0081               	movwf	1
 19439                           
 19440                           ;RF_Control_B1.c: 442: Product->Data[17]=Product->Data[26+lights];
 19441  1105  0824               	movf	setRF_DimmerLights@lights,w
 19442  1106  3E1A               	addlw	26
 19443  1107  0021               	movlb	1	; select bank1
 19444  1108  076C               	addwf	_Product^(0+128),w
 19445  1109  0020               	movlb	0	; select bank0
 19446  110A  00A1               	movwf	??_setRF_DimmerLights
 19447  110B  0821               	movf	??_setRF_DimmerLights,w
 19448  110C  0086               	movwf	6
 19449  110D  3001               	movlw	1	; select bank2/3
 19450  110E  0087               	movwf	7
 19451  110F  0801               	movf	1,w
 19452  1110  00A2               	movwf	??_setRF_DimmerLights+1
 19453  1111  0021               	movlb	1	; select bank1
 19454  1112  086C               	movf	_Product^(0+128),w
 19455  1113  3E11               	addlw	17
 19456  1114  0086               	movwf	6
 19457  1115  3001               	movlw	1	; select bank2/3
 19458  1116  0087               	movwf	7
 19459  1117  0020               	movlb	0	; select bank0
 19460  1118  0822               	movf	??_setRF_DimmerLights+1,w
 19461  1119  0081               	movwf	1
 19462                           
 19463                           ;RF_Control_B1.c: 443: if(on)
 19464  111A  0820               	movf	setRF_DimmerLights@on,w
 19465  111B  1903               	btfsc	3,2
 19466  111C  2931               	goto	l6839
 19467                           
 19468                           ;RF_Control_B1.c: 444: {
 19469                           ;RF_Control_B1.c: 445: Product->Data[15]=(Product->Data[15]|status);
 19470  111D  0021               	movlb	1	; select bank1
 19471  111E  086C               	movf	_Product^(0+128),w
 19472  111F  3E0F               	addlw	15
 19473  1120  0086               	movwf	6
 19474  1121  3001               	movlw	1	; select bank2/3
 19475  1122  0087               	movwf	7
 19476  1123  0801               	movf	1,w
 19477  1124  0020               	movlb	0	; select bank0
 19478  1125  0423               	iorwf	setRF_DimmerLights@status,w
 19479  1126  00A1               	movwf	??_setRF_DimmerLights
 19480  1127  0021               	movlb	1	; select bank1
 19481  1128  086C               	movf	_Product^(0+128),w
 19482  1129  3E0F               	addlw	15
 19483  112A  0086               	movwf	6
 19484  112B  3001               	movlw	1	; select bank2/3
 19485  112C  0087               	movwf	7
 19486  112D  0020               	movlb	0	; select bank0
 19487  112E  0821               	movf	??_setRF_DimmerLights,w
 19488  112F  0081               	movwf	1
 19489                           
 19490                           ;RF_Control_B1.c: 446: }
 19491  1130  0008               	return
 19492  1131                     l6839:	
 19493                           
 19494                           ;RF_Control_B1.c: 447: else
 19495                           ;RF_Control_B1.c: 448: {
 19496                           ;RF_Control_B1.c: 449: Product->Data[15]=(Product->Data[15]&(~status));
 19497  1131  0021               	movlb	1	; select bank1
 19498  1132  086C               	movf	_Product^(0+128),w
 19499  1133  3E0F               	addlw	15
 19500  1134  0086               	movwf	6
 19501  1135  3001               	movlw	1	; select bank2/3
 19502  1136  0087               	movwf	7
 19503  1137  0020               	movlb	0	; select bank0
 19504  1138  0923               	comf	setRF_DimmerLights@status,w
 19505  1139  0501               	andwf	1,w
 19506  113A  00A1               	movwf	??_setRF_DimmerLights
 19507  113B  0021               	movlb	1	; select bank1
 19508  113C  086C               	movf	_Product^(0+128),w
 19509  113D  3E0F               	addlw	15
 19510  113E  0086               	movwf	6
 19511  113F  3001               	movlw	1	; select bank2/3
 19512  1140  0087               	movwf	7
 19513  1141  0020               	movlb	0	; select bank0
 19514  1142  0821               	movf	??_setRF_DimmerLights,w
 19515  1143  0081               	movwf	1
 19516  1144  0008               	return
 19517  1145                     __end_of_setRF_DimmerLights:	
 19518                           
 19519                           	psect	text126
 19520  230E                     __ptext126:	
 19521 ;; *************** function _setRFSW_Status *****************
 19522 ;; Defined at:
 19523 ;;		line 415 in file "G:\Program\PIC\Source_File\RF_Control_B1.c"
 19524 ;; Parameters:    Size  Location     Type
 19525 ;;  sw              1    wreg     unsigned char 
 19526 ;;  command         1    2[BANK0 ] unsigned char 
 19527 ;; Auto vars:     Size  Location     Type
 19528 ;;  sw              1    3[BANK0 ] unsigned char 
 19529 ;; Return value:  Size  Location     Type
 19530 ;;		None               void
 19531 ;; Registers used:
 19532 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19533 ;; Tracked objects:
 19534 ;;		On entry : 0/0
 19535 ;;		On exit  : 0/0
 19536 ;;		Unchanged: 0/0
 19537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19538 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19539 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19541 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19542 ;;Total ram usage:        2 bytes
 19543 ;; Hardware stack levels used:    1
 19544 ;; Hardware stack levels required when called:    5
 19545 ;; This function calls:
 19546 ;;		_RfSWPointSelect
 19547 ;; This function is called by:
 19548 ;;		_DlyOff_Main
 19549 ;;		_setDimmerLights_ERROR
 19550 ;;		_setControl_Lights_Table
 19551 ;;		_Sw_DimmerOnFunc
 19552 ;;		_Sw_DimmerAdjFunc
 19553 ;; This function uses a non-reentrant model
 19554 ;;
 19555                           
 19556                           
 19557                           ;psect for function _setRFSW_Status
 19558  230E                     _setRFSW_Status:	
 19559                           
 19560                           ;incstack = 0
 19561                           ; Regs used in _setRFSW_Status: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 19562                           ;setRFSW_Status@sw stored from wreg
 19563  230E  0020               	movlb	0	; select bank0
 19564  230F  00A3               	movwf	setRFSW_Status@sw
 19565                           
 19566                           ;RF_Control_B1.c: 417: RfSWPointSelect(sw);
 19567  2310  0823               	movf	setRFSW_Status@sw,w
 19568  2311  31A4  24FB         	fcall	_RfSWPointSelect
 19569                           
 19570                           ;RF_Control_B1.c: 418: RFSW->Status=command;
 19571  2313  0021               	movlb	1	; select bank1
 19572  2314  083F               	movf	_RFSW^(0+128),w
 19573  2315  0086               	movwf	6
 19574  2316  0187               	clrf	7
 19575  2317  0020               	movlb	0	; select bank0
 19576  2318  0822               	movf	setRFSW_Status@command,w
 19577  2319  1001               	bcf	1,0
 19578  231A  1D03               	skipz
 19579  231B  1401               	bsf	1,0
 19580  231C  0008               	return
 19581  231D                     __end_of_setRFSW_Status:	
 19582                           
 19583                           	psect	text127
 19584  24FB                     __ptext127:	
 19585 ;; *************** function _RfSWPointSelect *****************
 19586 ;; Defined at:
 19587 ;;		line 338 in file "G:\Program\PIC\Source_File\RF_Control_B1.c"
 19588 ;; Parameters:    Size  Location     Type
 19589 ;;  sw              1    wreg     unsigned char 
 19590 ;; Auto vars:     Size  Location     Type
 19591 ;;  sw              1    1[BANK0 ] unsigned char 
 19592 ;; Return value:  Size  Location     Type
 19593 ;;		None               void
 19594 ;; Registers used:
 19595 ;;		wreg
 19596 ;; Tracked objects:
 19597 ;;		On entry : 0/0
 19598 ;;		On exit  : 0/0
 19599 ;;		Unchanged: 0/0
 19600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19601 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19602 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19603 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19604 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19605 ;;Total ram usage:        2 bytes
 19606 ;; Hardware stack levels used:    1
 19607 ;; Hardware stack levels required when called:    4
 19608 ;; This function calls:
 19609 ;;		Nothing
 19610 ;; This function is called by:
 19611 ;;		_setRFSW_Control
 19612 ;;		_setRFSW_AdjControl
 19613 ;;		_setRFSW_Status
 19614 ;; This function uses a non-reentrant model
 19615 ;;
 19616                           
 19617                           
 19618                           ;psect for function _RfSWPointSelect
 19619  24FB                     _RfSWPointSelect:	
 19620                           
 19621                           ;incstack = 0
 19622                           ; Regs used in _RfSWPointSelect: [wreg]
 19623                           ;RfSWPointSelect@sw stored from wreg
 19624  24FB  0020               	movlb	0	; select bank0
 19625  24FC  00A1               	movwf	RfSWPointSelect@sw
 19626                           
 19627                           ;RF_Control_B1.c: 341: if(sw == 1)
 19628  24FD  0821               	movf	RfSWPointSelect@sw,w
 19629  24FE  3A01               	xorlw	1
 19630  24FF  1D03               	skipz
 19631  2500  2D06               	goto	l2598
 19632                           
 19633                           ;RF_Control_B1.c: 342: {
 19634                           ;RF_Control_B1.c: 343: RFSW=&RFSW1;
 19635  2501  30E9               	movlw	_RFSW1& (0+255)
 19636  2502  00A0               	movwf	??_RfSWPointSelect
 19637  2503  0820               	movf	??_RfSWPointSelect,w
 19638  2504  0021               	movlb	1	; select bank1
 19639  2505  00BF               	movwf	_RFSW^(0+128)
 19640  2506                     l2598:	
 19641                           
 19642                           ;RF_Control_B1.c: 344: }
 19643                           ;RF_Control_B1.c: 347: if(sw == 2)
 19644  2506  0020               	movlb	0	; select bank0
 19645  2507  0821               	movf	RfSWPointSelect@sw,w
 19646  2508  3A02               	xorlw	2
 19647  2509  1D03               	skipz
 19648  250A  0008               	return
 19649                           
 19650                           ;RF_Control_B1.c: 348: {
 19651                           ;RF_Control_B1.c: 349: RFSW=&RFSW2;
 19652  250B  30EA               	movlw	_RFSW2& (0+255)
 19653  250C  00A0               	movwf	??_RfSWPointSelect
 19654  250D  0820               	movf	??_RfSWPointSelect,w
 19655  250E  0021               	movlb	1	; select bank1
 19656  250F  00BF               	movwf	_RFSW^(0+128)
 19657  2510  0008               	return
 19658  2511                     __end_of_RfSWPointSelect:	
 19659                           
 19660                           	psect	text128
 19661  23E3                     __ptext128:	
 19662 ;; *************** function _setDimmerLights_Trigger *****************
 19663 ;; Defined at:
 19664 ;;		line 446 in file "G:\Program\PIC\Source_File\Dimmer_B1.c"
 19665 ;; Parameters:    Size  Location     Type
 19666 ;;  lights          1    wreg     unsigned char 
 19667 ;;  command         1    2[BANK0 ] unsigned char 
 19668 ;; Auto vars:     Size  Location     Type
 19669 ;;  lights          1    3[BANK0 ] unsigned char 
 19670 ;; Return value:  Size  Location     Type
 19671 ;;		None               void
 19672 ;; Registers used:
 19673 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19674 ;; Tracked objects:
 19675 ;;		On entry : 0/0
 19676 ;;		On exit  : 0/0
 19677 ;;		Unchanged: 0/0
 19678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19679 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19680 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19682 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19683 ;;Total ram usage:        2 bytes
 19684 ;; Hardware stack levels used:    1
 19685 ;; Hardware stack levels required when called:    5
 19686 ;; This function calls:
 19687 ;;		_DimmerLightsPointSelect
 19688 ;; This function is called by:
 19689 ;;		_DlyOff_Main
 19690 ;;		_setRFSW_Control
 19691 ;;		_Sw_DimmerOnFunc
 19692 ;;		_Sw_DimmerOffFunc
 19693 ;; This function uses a non-reentrant model
 19694 ;;
 19695                           
 19696                           
 19697                           ;psect for function _setDimmerLights_Trigger
 19698  23E3                     _setDimmerLights_Trigger:	
 19699                           
 19700                           ;incstack = 0
 19701                           ; Regs used in _setDimmerLights_Trigger: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 19702                           ;setDimmerLights_Trigger@lights stored from wreg
 19703  23E3  0020               	movlb	0	; select bank0
 19704  23E4  00A3               	movwf	setDimmerLights_Trigger@lights
 19705                           
 19706                           ;Dimmer_B1.c: 448: DimmerLightsPointSelect(lights);
 19707  23E5  0823               	movf	setDimmerLights_Trigger@lights,w
 19708  23E6  31A4  2497         	fcall	_DimmerLightsPointSelect
 19709                           
 19710                           ;Dimmer_B1.c: 449: DimmerLights->Trigger=command;
 19711  23E8  0020               	movlb	0	; select bank0
 19712  23E9  086D               	movf	_DimmerLights,w
 19713  23EA  3E09               	addlw	9
 19714  23EB  0086               	movwf	6
 19715  23EC  3001               	movlw	1	; select bank2/3
 19716  23ED  0087               	movwf	7
 19717  23EE  0822               	movf	setDimmerLights_Trigger@command,w
 19718  23EF  1081               	bcf	1,1
 19719  23F0  1D03               	skipz
 19720  23F1  1481               	bsf	1,1
 19721  23F2  0008               	return
 19722  23F3                     __end_of_setDimmerLights_Trigger:	
 19723                           
 19724                           	psect	text129
 19725  23D3                     __ptext129:	
 19726 ;; *************** function _setDimmerLights_Switch *****************
 19727 ;; Defined at:
 19728 ;;		line 436 in file "G:\Program\PIC\Source_File\Dimmer_B1.c"
 19729 ;; Parameters:    Size  Location     Type
 19730 ;;  lights          1    wreg     unsigned char 
 19731 ;;  command         1    2[BANK0 ] unsigned char 
 19732 ;; Auto vars:     Size  Location     Type
 19733 ;;  lights          1    3[BANK0 ] unsigned char 
 19734 ;; Return value:  Size  Location     Type
 19735 ;;		None               void
 19736 ;; Registers used:
 19737 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19738 ;; Tracked objects:
 19739 ;;		On entry : 0/0
 19740 ;;		On exit  : 0/0
 19741 ;;		Unchanged: 0/0
 19742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19743 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19744 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19746 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19747 ;;Total ram usage:        2 bytes
 19748 ;; Hardware stack levels used:    1
 19749 ;; Hardware stack levels required when called:    5
 19750 ;; This function calls:
 19751 ;;		_DimmerLightsPointSelect
 19752 ;; This function is called by:
 19753 ;;		_DlyOff_Main
 19754 ;;		_setRFSW_Control
 19755 ;;		_Sw_DimmerOnFunc
 19756 ;;		_Sw_DimmerOffFunc
 19757 ;; This function uses a non-reentrant model
 19758 ;;
 19759                           
 19760                           
 19761                           ;psect for function _setDimmerLights_Switch
 19762  23D3                     _setDimmerLights_Switch:	
 19763                           
 19764                           ;incstack = 0
 19765                           ; Regs used in _setDimmerLights_Switch: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
 19766                           ;setDimmerLights_Switch@lights stored from wreg
 19767  23D3  0020               	movlb	0	; select bank0
 19768  23D4  00A3               	movwf	setDimmerLights_Switch@lights
 19769                           
 19770                           ;Dimmer_B1.c: 438: DimmerLightsPointSelect(lights);
 19771  23D5  0823               	movf	setDimmerLights_Switch@lights,w
 19772  23D6  31A4  2497         	fcall	_DimmerLightsPointSelect
 19773                           
 19774                           ;Dimmer_B1.c: 439: DimmerLights->Switch=command;
 19775  23D8  0020               	movlb	0	; select bank0
 19776  23D9  086D               	movf	_DimmerLights,w
 19777  23DA  3E09               	addlw	9
 19778  23DB  0086               	movwf	6
 19779  23DC  3001               	movlw	1	; select bank2/3
 19780  23DD  0087               	movwf	7
 19781  23DE  0822               	movf	setDimmerLights_Switch@command,w
 19782  23DF  1001               	bcf	1,0
 19783  23E0  1D03               	skipz
 19784  23E1  1401               	bsf	1,0
 19785  23E2  0008               	return
 19786  23E3                     __end_of_setDimmerLights_Switch:	
 19787                           
 19788                           	psect	text130
 19789  2497                     __ptext130:	
 19790 ;; *************** function _DimmerLightsPointSelect *****************
 19791 ;; Defined at:
 19792 ;;		line 7 in file "G:\Program\PIC\Source_File\Dimmer_B1.c"
 19793 ;; Parameters:    Size  Location     Type
 19794 ;;  lights          1    wreg     unsigned char 
 19795 ;; Auto vars:     Size  Location     Type
 19796 ;;  lights          1    1[BANK0 ] unsigned char 
 19797 ;; Return value:  Size  Location     Type
 19798 ;;		None               void
 19799 ;; Registers used:
 19800 ;;		wreg
 19801 ;; Tracked objects:
 19802 ;;		On entry : 0/0
 19803 ;;		On exit  : 0/0
 19804 ;;		Unchanged: 0/0
 19805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19807 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19808 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19809 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19810 ;;Total ram usage:        2 bytes
 19811 ;; Hardware stack levels used:    1
 19812 ;; Hardware stack levels required when called:    4
 19813 ;; This function calls:
 19814 ;;		Nothing
 19815 ;; This function is called by:
 19816 ;;		_setDimmerLights_Initialization
 19817 ;;		_setDimmerLights_Main
 19818 ;;		_getDimmerLights_StatusFlag
 19819 ;;		_getDimmerLights_Trigger
 19820 ;;		_setDimmerLights_ERROR
 19821 ;;		_setDimmerLights_TriggerERROR
 19822 ;;		_setDimmerLights
 19823 ;;		_setDimmerLights_Adj
 19824 ;;		_setDimmerLights_AdjRF
 19825 ;;		_setDimmerLights_Switch
 19826 ;;		_setDimmerLights_AdjGo
 19827 ;;		_setDimmerLights_Trigger
 19828 ;;		_setDimmerLights_TriggerAdj
 19829 ;;		_setDimmerLights_Clear
 19830 ;;		_setDimmerLights_GO
 19831 ;;		_setDimmerLights_MaxmumValue
 19832 ;;		_getDimmerLights_Clear
 19833 ;; This function uses a non-reentrant model
 19834 ;;
 19835                           
 19836                           
 19837                           ;psect for function _DimmerLightsPointSelect
 19838  2497                     _DimmerLightsPointSelect:	
 19839                           
 19840                           ;incstack = 0
 19841                           ; Regs used in _DimmerLightsPointSelect: [wreg]
 19842                           ;DimmerLightsPointSelect@lights stored from wreg
 19843  2497  0020               	movlb	0	; select bank0
 19844  2498  00A1               	movwf	DimmerLightsPointSelect@lights
 19845                           
 19846                           ;Dimmer_B1.c: 10: if(lights == 1)
 19847  2499  0821               	movf	DimmerLightsPointSelect@lights,w
 19848  249A  3A01               	xorlw	1
 19849  249B  1D03               	skipz
 19850  249C  2CA1               	goto	l784
 19851                           
 19852                           ;Dimmer_B1.c: 11: {
 19853                           ;Dimmer_B1.c: 12: DimmerLights=&DimmerLights1;
 19854  249D  302E               	movlw	_DimmerLights1& (0+255)
 19855  249E  00A0               	movwf	??_DimmerLightsPointSelect
 19856  249F  0820               	movf	??_DimmerLightsPointSelect,w
 19857  24A0  00ED               	movwf	_DimmerLights
 19858  24A1                     l784:	
 19859                           
 19860                           ;Dimmer_B1.c: 13: }
 19861                           ;Dimmer_B1.c: 17: if(lights == 2)
 19862  24A1  0821               	movf	DimmerLightsPointSelect@lights,w
 19863  24A2  3A02               	xorlw	2
 19864  24A3  1D03               	skipz
 19865  24A4  0008               	return
 19866                           
 19867                           ;Dimmer_B1.c: 18: {
 19868                           ;Dimmer_B1.c: 19: DimmerLights=&DimmerLights2;
 19869  24A5  303B               	movlw	_DimmerLights2& (0+255)
 19870  24A6  00A0               	movwf	??_DimmerLightsPointSelect
 19871  24A7  0820               	movf	??_DimmerLightsPointSelect,w
 19872  24A8  00ED               	movwf	_DimmerLights
 19873  24A9  0008               	return
 19874  24AA                     __end_of_DimmerLightsPointSelect:	
 19875                           
 19876                           	psect	text131
 19877  15AB                     __ptext131:	
 19878 ;; *************** function _setBuz *****************
 19879 ;; Defined at:
 19880 ;;		line 44 in file "G:\Program\PIC\Source_File\Buzzer_B1.c"
 19881 ;; Parameters:    Size  Location     Type
 19882 ;;  buz             1    wreg     unsigned char 
 19883 ;;  count           1    6[BANK0 ] unsigned char 
 19884 ;;  time            2    7[BANK0 ] int 
 19885 ;; Auto vars:     Size  Location     Type
 19886 ;;  buz             1   10[BANK0 ] unsigned char 
 19887 ;; Return value:  Size  Location     Type
 19888 ;;		None               void
 19889 ;; Registers used:
 19890 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19891 ;; Tracked objects:
 19892 ;;		On entry : 0/0
 19893 ;;		On exit  : 0/0
 19894 ;;		Unchanged: 0/0
 19895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19896 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19897 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19898 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19899 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19900 ;;Total ram usage:        5 bytes
 19901 ;; Hardware stack levels used:    1
 19902 ;; Hardware stack levels required when called:    5
 19903 ;; This function calls:
 19904 ;;		_BuzPointSelect
 19905 ;;		___wmul
 19906 ;; This function is called by:
 19907 ;;		_DlyOff_Main
 19908 ;;		_setDimmerLights_Main
 19909 ;;		_DimmerLights_ERROR
 19910 ;;		_MainT
 19911 ;;		_setLog_Code
 19912 ;;		_setControl_Lights_Table
 19913 ;;		_setRFSW_Control
 19914 ;;		_setSw_Main
 19915 ;; This function uses a non-reentrant model
 19916 ;;
 19917                           
 19918                           
 19919                           ;psect for function _setBuz
 19920  15AB                     _setBuz:	
 19921                           
 19922                           ;incstack = 0
 19923                           ; Regs used in _setBuz: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 19924                           ;setBuz@buz stored from wreg
 19925  15AB  0020               	movlb	0	; select bank0
 19926  15AC  00AA               	movwf	setBuz@buz
 19927                           
 19928                           ;Buzzer_B1.c: 46: BuzPointSelect(buz);
 19929  15AD  082A               	movf	setBuz@buz,w
 19930  15AE  31A2  2261  3195   	fcall	_BuzPointSelect
 19931                           
 19932                           ;Buzzer_B1.c: 47: time*=20;
 19933  15B1  3014               	movlw	20
 19934  15B2  0020               	movlb	0	; select bank0
 19935  15B3  00A0               	movwf	___wmul@multiplier
 19936  15B4  3000               	movlw	0
 19937  15B5  00A1               	movwf	___wmul@multiplier+1
 19938  15B6  0828               	movf	setBuz@time+1,w
 19939  15B7  01A3               	clrf	___wmul@multiplicand+1
 19940  15B8  07A3               	addwf	___wmul@multiplicand+1,f
 19941  15B9  0827               	movf	setBuz@time,w
 19942  15BA  01A2               	clrf	___wmul@multiplicand
 19943  15BB  07A2               	addwf	___wmul@multiplicand,f
 19944  15BC  31A6  2624  3195   	fcall	___wmul
 19945  15BF  0020               	movlb	0	; select bank0
 19946  15C0  0821               	movf	?___wmul+1,w
 19947  15C1  01A8               	clrf	setBuz@time+1
 19948  15C2  07A8               	addwf	setBuz@time+1,f
 19949  15C3  0820               	movf	?___wmul,w
 19950  15C4  01A7               	clrf	setBuz@time
 19951  15C5  07A7               	addwf	setBuz@time,f
 19952                           
 19953                           ;Buzzer_B1.c: 48: if(Buz->Enable)
 19954  15C6  0021               	movlb	1	; select bank1
 19955  15C7  0837               	movf	_Buz^(0+128),w
 19956  15C8  0086               	movwf	6
 19957  15C9  3001               	movlw	1	; select bank2/3
 19958  15CA  0087               	movwf	7
 19959  15CB  1C01               	btfss	1,0
 19960  15CC  0008               	return
 19961                           
 19962                           ;Buzzer_B1.c: 49: {
 19963                           ;Buzzer_B1.c: 50: if(!Buz->GO)
 19964  15CD  0837               	movf	_Buz^(0+128),w
 19965  15CE  0086               	movwf	6
 19966  15CF  3001               	movlw	1	; select bank2/3
 19967  15D0  0087               	movwf	7
 19968  15D1  1881               	btfsc	1,1
 19969  15D2  2DF5               	goto	l6801
 19970                           
 19971                           ;Buzzer_B1.c: 51: {
 19972                           ;Buzzer_B1.c: 52: Buz->GO=1;
 19973  15D3  0837               	movf	_Buz^(0+128),w
 19974  15D4  0086               	movwf	6
 19975  15D5  3001               	movlw	1	; select bank2/3
 19976  15D6  0087               	movwf	7
 19977  15D7  1481               	bsf	1,1
 19978                           
 19979                           ;Buzzer_B1.c: 53: Buz->Count=count;
 19980  15D8  0020               	movlb	0	; select bank0
 19981  15D9  0826               	movf	setBuz@count,w
 19982  15DA  00A9               	movwf	??_setBuz
 19983  15DB  0021               	movlb	1	; select bank1
 19984  15DC  0837               	movf	_Buz^(0+128),w
 19985  15DD  3E03               	addlw	3
 19986  15DE  0086               	movwf	6
 19987  15DF  3001               	movlw	1	; select bank2/3
 19988  15E0  0087               	movwf	7
 19989  15E1  0020               	movlb	0	; select bank0
 19990  15E2  0829               	movf	??_setBuz,w
 19991  15E3  0081               	movwf	1
 19992                           
 19993                           ;Buzzer_B1.c: 54: Buz->TimeValue=time;
 19994  15E4  0021               	movlb	1	; select bank1
 19995  15E5  0837               	movf	_Buz^(0+128),w
 19996  15E6  3E06               	addlw	6
 19997  15E7  0086               	movwf	6
 19998  15E8  3001               	movlw	1	; select bank2/3
 19999  15E9  0087               	movwf	7
 20000  15EA  0020               	movlb	0	; select bank0
 20001  15EB  0827               	movf	setBuz@time,w
 20002  15EC  3FC0               	movwi [0]fsr1
 20003  15ED  0828               	movf	setBuz@time+1,w
 20004  15EE  3FC1               	movwi [1]fsr1
 20005                           
 20006                           ;Buzzer_B1.c: 56: if(buz == 1)
 20007  15EF  082A               	movf	setBuz@buz,w
 20008  15F0  3A01               	xorlw	1
 20009  15F1  1D03               	skipz
 20010  15F2  0008               	return
 20011                           
 20012                           ;Buzzer_B1.c: 57: {
 20013                           ;Buzzer_B1.c: 58: RB3=1;
 20014  15F3  158D               	bsf	13,3	;volatile
 20015                           
 20016                           ;Buzzer_B1.c: 59: }
 20017                           ;Buzzer_B1.c: 61: }
 20018  15F4  0008               	return
 20019  15F5                     l6801:	
 20020                           
 20021                           ;Buzzer_B1.c: 62: else
 20022                           ;Buzzer_B1.c: 63: {
 20023                           ;Buzzer_B1.c: 64: if(!Buz->BufferStatus1)
 20024  15F5  0021               	movlb	1	; select bank1
 20025  15F6  0837               	movf	_Buz^(0+128),w
 20026  15F7  0086               	movwf	6
 20027  15F8  3001               	movlw	1	; select bank2/3
 20028  15F9  0087               	movwf	7
 20029  15FA  1981               	btfsc	1,3
 20030  15FB  2E19               	goto	l6805
 20031                           
 20032                           ;Buzzer_B1.c: 65: {
 20033                           ;Buzzer_B1.c: 66: Buz->BufferStatus1=1;
 20034  15FC  0837               	movf	_Buz^(0+128),w
 20035  15FD  0086               	movwf	6
 20036  15FE  3001               	movlw	1	; select bank2/3
 20037  15FF  0087               	movwf	7
 20038  1600  1581               	bsf	1,3
 20039                           
 20040                           ;Buzzer_B1.c: 67: Buz->CountBuffer1=count;
 20041  1601  0020               	movlb	0	; select bank0
 20042  1602  0826               	movf	setBuz@count,w
 20043  1603  00A9               	movwf	??_setBuz
 20044  1604  0021               	movlb	1	; select bank1
 20045  1605  0837               	movf	_Buz^(0+128),w
 20046  1606  3E04               	addlw	4
 20047  1607  0086               	movwf	6
 20048  1608  3001               	movlw	1	; select bank2/3
 20049  1609  0087               	movwf	7
 20050  160A  0020               	movlb	0	; select bank0
 20051  160B  0829               	movf	??_setBuz,w
 20052  160C  0081               	movwf	1
 20053                           
 20054                           ;Buzzer_B1.c: 68: Buz->TimeValueBuffer1=time;
 20055  160D  0021               	movlb	1	; select bank1
 20056  160E  0837               	movf	_Buz^(0+128),w
 20057  160F  3E08               	addlw	8
 20058  1610  0086               	movwf	6
 20059  1611  3001               	movlw	1	; select bank2/3
 20060  1612  0087               	movwf	7
 20061  1613  0020               	movlb	0	; select bank0
 20062  1614  0827               	movf	setBuz@time,w
 20063  1615  3FC0               	movwi [0]fsr1
 20064  1616  0828               	movf	setBuz@time+1,w
 20065  1617  3FC1               	movwi [1]fsr1
 20066                           
 20067                           ;Buzzer_B1.c: 69: }
 20068  1618  0008               	return
 20069  1619                     l6805:	
 20070                           
 20071                           ;Buzzer_B1.c: 70: else if(!Buz->BufferStatus2)
 20072  1619  0021               	movlb	1	; select bank1
 20073  161A  0837               	movf	_Buz^(0+128),w
 20074  161B  0086               	movwf	6
 20075  161C  3001               	movlw	1	; select bank2/3
 20076  161D  0087               	movwf	7
 20077  161E  1A01               	btfsc	1,4
 20078  161F  0008               	return
 20079                           
 20080                           ;Buzzer_B1.c: 71: {
 20081                           ;Buzzer_B1.c: 72: Buz->BufferStatus2=1;
 20082  1620  0837               	movf	_Buz^(0+128),w
 20083  1621  0086               	movwf	6
 20084  1622  3001               	movlw	1	; select bank2/3
 20085  1623  0087               	movwf	7
 20086  1624  1601               	bsf	1,4
 20087                           
 20088                           ;Buzzer_B1.c: 73: Buz->CountBuffer2=count;
 20089  1625  0020               	movlb	0	; select bank0
 20090  1626  0826               	movf	setBuz@count,w
 20091  1627  00A9               	movwf	??_setBuz
 20092  1628  0021               	movlb	1	; select bank1
 20093  1629  0837               	movf	_Buz^(0+128),w
 20094  162A  3E05               	addlw	5
 20095  162B  0086               	movwf	6
 20096  162C  3001               	movlw	1	; select bank2/3
 20097  162D  0087               	movwf	7
 20098  162E  0020               	movlb	0	; select bank0
 20099  162F  0829               	movf	??_setBuz,w
 20100  1630  0081               	movwf	1
 20101                           
 20102                           ;Buzzer_B1.c: 74: Buz->TimeValueBuffer2=time;
 20103  1631  0021               	movlb	1	; select bank1
 20104  1632  0837               	movf	_Buz^(0+128),w
 20105  1633  3E0A               	addlw	10
 20106  1634  0086               	movwf	6
 20107  1635  3001               	movlw	1	; select bank2/3
 20108  1636  0087               	movwf	7
 20109  1637  0020               	movlb	0	; select bank0
 20110  1638  0827               	movf	setBuz@time,w
 20111  1639  3FC0               	movwi [0]fsr1
 20112  163A  0828               	movf	setBuz@time+1,w
 20113  163B  3FC1               	movwi [1]fsr1
 20114  163C  0008               	return
 20115  163D                     __end_of_setBuz:	
 20116                           
 20117                           	psect	text132
 20118  2624                     __ptext132:	
 20119 ;; *************** function ___wmul *****************
 20120 ;; Defined at:
 20121 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\Umul16.c"
 20122 ;; Parameters:    Size  Location     Type
 20123 ;;  multiplier      2    0[BANK0 ] unsigned int 
 20124 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 20125 ;; Auto vars:     Size  Location     Type
 20126 ;;  product         2    4[BANK0 ] unsigned int 
 20127 ;; Return value:  Size  Location     Type
 20128 ;;                  2    0[BANK0 ] unsigned int 
 20129 ;; Registers used:
 20130 ;;		wreg, status,2, status,0
 20131 ;; Tracked objects:
 20132 ;;		On entry : 0/0
 20133 ;;		On exit  : 0/0
 20134 ;;		Unchanged: 0/0
 20135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20136 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20137 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20139 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20140 ;;Total ram usage:        6 bytes
 20141 ;; Hardware stack levels used:    1
 20142 ;; Hardware stack levels required when called:    4
 20143 ;; This function calls:
 20144 ;;		Nothing
 20145 ;; This function is called by:
 20146 ;;		_setBuz
 20147 ;;		_setLoad_Main
 20148 ;; This function uses a non-reentrant model
 20149 ;;
 20150                           
 20151                           
 20152                           ;psect for function ___wmul
 20153  2624                     ___wmul:	
 20154                           
 20155                           ;incstack = 0
 20156                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 20157  2624  0020               	movlb	0	; select bank0
 20158  2625  01A4               	clrf	___wmul@product
 20159  2626  01A5               	clrf	___wmul@product+1
 20160  2627                     l6779:	
 20161  2627  1C20               	btfss	___wmul@multiplier,0
 20162  2628  2E2D               	goto	l3344
 20163  2629  0822               	movf	___wmul@multiplicand,w
 20164  262A  07A4               	addwf	___wmul@product,f
 20165  262B  0823               	movf	___wmul@multiplicand+1,w
 20166  262C  3DA5               	addwfc	___wmul@product+1,f
 20167  262D                     l3344:	
 20168  262D  3001               	movlw	1
 20169  262E                     u5065:	
 20170  262E  35A2               	lslf	___wmul@multiplicand,f
 20171  262F  0DA3               	rlf	___wmul@multiplicand+1,f
 20172  2630  0B89               	decfsz	9,f
 20173  2631  2E2E               	goto	u5065
 20174  2632  3001               	movlw	1
 20175  2633                     u5075:	
 20176  2633  36A1               	lsrf	___wmul@multiplier+1,f
 20177  2634  0CA0               	rrf	___wmul@multiplier,f
 20178  2635  0B89               	decfsz	9,f
 20179  2636  2E33               	goto	u5075
 20180  2637  0821               	movf	___wmul@multiplier+1,w
 20181  2638  0420               	iorwf	___wmul@multiplier,w
 20182  2639  1D03               	skipz
 20183  263A  2E27               	goto	l6779
 20184  263B  0825               	movf	___wmul@product+1,w
 20185  263C  01A1               	clrf	?___wmul+1
 20186  263D  07A1               	addwf	?___wmul+1,f
 20187  263E  0824               	movf	___wmul@product,w
 20188  263F  01A0               	clrf	?___wmul
 20189  2640  07A0               	addwf	?___wmul,f
 20190  2641  0008               	return
 20191  2642                     __end_of___wmul:	
 20192                           
 20193                           	psect	text133
 20194  21EA                     __ptext133:	
 20195 ;; *************** function _DelayOff_Initialization *****************
 20196 ;; Defined at:
 20197 ;;		line 30 in file "G:\Program\PIC\Source_File\DelayOff_B1.c"
 20198 ;; Parameters:    Size  Location     Type
 20199 ;;		None
 20200 ;; Auto vars:     Size  Location     Type
 20201 ;;		None
 20202 ;; Return value:  Size  Location     Type
 20203 ;;		None               void
 20204 ;; Registers used:
 20205 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20206 ;; Tracked objects:
 20207 ;;		On entry : 0/0
 20208 ;;		On exit  : 0/0
 20209 ;;		Unchanged: 0/0
 20210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20214 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20215 ;;Total ram usage:        0 bytes
 20216 ;; Hardware stack levels used:    1
 20217 ;; Hardware stack levels required when called:    6
 20218 ;; This function calls:
 20219 ;;		_DlyOff_Initialization
 20220 ;; This function is called by:
 20221 ;;		_main
 20222 ;; This function uses a non-reentrant model
 20223 ;;
 20224                           
 20225                           
 20226                           ;psect for function _DelayOff_Initialization
 20227  21EA                     _DelayOff_Initialization:	
 20228                           
 20229                           ;DelayOff_B1.c: 33: DlyOff_Initialization(1);
 20230                           
 20231                           ;incstack = 0
 20232                           ; Regs used in _DelayOff_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 20233  21EA  3001               	movlw	1
 20234  21EB  31A2  2229  31A1   	fcall	_DlyOff_Initialization
 20235                           
 20236                           ;DelayOff_B1.c: 37: DlyOff_Initialization(2);
 20237  21EE  3002               	movlw	2
 20238  21EF  31A2  2229         	fcall	_DlyOff_Initialization
 20239  21F1  0008               	return
 20240  21F2                     __end_of_DelayOff_Initialization:	
 20241                           
 20242                           	psect	text134
 20243  2229                     __ptext134:	
 20244 ;; *************** function _DlyOff_Initialization *****************
 20245 ;; Defined at:
 20246 ;;		line 60 in file "G:\Program\PIC\Source_File\DelayOff_B1.c"
 20247 ;; Parameters:    Size  Location     Type
 20248 ;;  sw              1    wreg     unsigned char 
 20249 ;; Auto vars:     Size  Location     Type
 20250 ;;  sw              1    2[BANK0 ] unsigned char 
 20251 ;; Return value:  Size  Location     Type
 20252 ;;		None               void
 20253 ;; Registers used:
 20254 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20255 ;; Tracked objects:
 20256 ;;		On entry : 0/0
 20257 ;;		On exit  : 0/0
 20258 ;;		Unchanged: 0/0
 20259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20260 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20261 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20263 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20264 ;;Total ram usage:        1 bytes
 20265 ;; Hardware stack levels used:    1
 20266 ;; Hardware stack levels required when called:    5
 20267 ;; This function calls:
 20268 ;;		_DelayOffPointSelect
 20269 ;; This function is called by:
 20270 ;;		_DelayOff_Initialization
 20271 ;; This function uses a non-reentrant model
 20272 ;;
 20273                           
 20274                           
 20275                           ;psect for function _DlyOff_Initialization
 20276  2229                     _DlyOff_Initialization:	
 20277                           
 20278                           ;incstack = 0
 20279                           ; Regs used in _DlyOff_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 20280                           ;DlyOff_Initialization@sw stored from wreg
 20281  2229  0020               	movlb	0	; select bank0
 20282  222A  00A2               	movwf	DlyOff_Initialization@sw
 20283                           
 20284                           ;DelayOff_B1.c: 62: DelayOffPointSelect(sw);
 20285  222B  0822               	movf	DlyOff_Initialization@sw,w
 20286  222C  31A5  2527         	fcall	_DelayOffPointSelect
 20287                           
 20288                           ;DelayOff_B1.c: 63: DelayOff->Enable=1;
 20289  222E  0021               	movlb	1	; select bank1
 20290  222F  0839               	movf	_DelayOff^(0+128),w
 20291  2230  0086               	movwf	6
 20292  2231  0187               	clrf	7
 20293  2232  1401               	bsf	1,0
 20294  2233  0008               	return
 20295  2234                     __end_of_DlyOff_Initialization:	
 20296                           
 20297                           	psect	text135
 20298  2527                     __ptext135:	
 20299 ;; *************** function _DelayOffPointSelect *****************
 20300 ;; Defined at:
 20301 ;;		line 8 in file "G:\Program\PIC\Source_File\DelayOff_B1.c"
 20302 ;; Parameters:    Size  Location     Type
 20303 ;;  sw              1    wreg     unsigned char 
 20304 ;; Auto vars:     Size  Location     Type
 20305 ;;  sw              1    1[BANK0 ] unsigned char 
 20306 ;; Return value:  Size  Location     Type
 20307 ;;		None               void
 20308 ;; Registers used:
 20309 ;;		wreg
 20310 ;; Tracked objects:
 20311 ;;		On entry : 0/0
 20312 ;;		On exit  : 0/0
 20313 ;;		Unchanged: 0/0
 20314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20316 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20317 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20318 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20319 ;;Total ram usage:        2 bytes
 20320 ;; Hardware stack levels used:    1
 20321 ;; Hardware stack levels required when called:    4
 20322 ;; This function calls:
 20323 ;;		Nothing
 20324 ;; This function is called by:
 20325 ;;		_DlyOff_Initialization
 20326 ;;		_DlyOff_Main
 20327 ;;		_setDelayOff_GO
 20328 ;; This function uses a non-reentrant model
 20329 ;;
 20330                           
 20331                           
 20332                           ;psect for function _DelayOffPointSelect
 20333  2527                     _DelayOffPointSelect:	
 20334                           
 20335                           ;incstack = 0
 20336                           ; Regs used in _DelayOffPointSelect: [wreg]
 20337                           ;DelayOffPointSelect@sw stored from wreg
 20338  2527  0020               	movlb	0	; select bank0
 20339  2528  00A1               	movwf	DelayOffPointSelect@sw
 20340                           
 20341                           ;DelayOff_B1.c: 11: if(sw == 1)
 20342  2529  0821               	movf	DelayOffPointSelect@sw,w
 20343  252A  3A01               	xorlw	1
 20344  252B  1D03               	skipz
 20345  252C  2D33               	goto	l6701
 20346                           
 20347                           ;DelayOff_B1.c: 12: {
 20348                           ;DelayOff_B1.c: 13: DelayOff=&DlySw1;
 20349  252D  30CE               	movlw	_DlySw1& (0+255)
 20350  252E  00A0               	movwf	??_DelayOffPointSelect
 20351  252F  0820               	movf	??_DelayOffPointSelect,w
 20352  2530  0021               	movlb	1	; select bank1
 20353  2531  00B9               	movwf	_DelayOff^(0+128)
 20354                           
 20355                           ;DelayOff_B1.c: 14: }
 20356  2532  0008               	return
 20357  2533                     l6701:	
 20358                           
 20359                           ;DelayOff_B1.c: 17: else if(sw == 2)
 20360  2533  0020               	movlb	0	; select bank0
 20361  2534  0821               	movf	DelayOffPointSelect@sw,w
 20362  2535  3A02               	xorlw	2
 20363  2536  1D03               	skipz
 20364  2537  0008               	return
 20365                           
 20366                           ;DelayOff_B1.c: 18: {
 20367                           ;DelayOff_B1.c: 19: DelayOff=&DlySw2;
 20368  2538  30D3               	movlw	_DlySw2& (0+255)
 20369  2539  00A0               	movwf	??_DelayOffPointSelect
 20370  253A  0820               	movf	??_DelayOffPointSelect,w
 20371  253B  0021               	movlb	1	; select bank1
 20372  253C  00B9               	movwf	_DelayOff^(0+128)
 20373  253D  0008               	return
 20374  253E                     __end_of_DelayOffPointSelect:	
 20375                           
 20376                           	psect	text136
 20377  24E6                     __ptext136:	
 20378 ;; *************** function _CC2500_PowerOnInitial *****************
 20379 ;; Defined at:
 20380 ;;		line 97 in file "G:\Program\PIC\Source_File\CC2500_B1.c"
 20381 ;; Parameters:    Size  Location     Type
 20382 ;;		None
 20383 ;; Auto vars:     Size  Location     Type
 20384 ;;		None
 20385 ;; Return value:  Size  Location     Type
 20386 ;;		None               void
 20387 ;; Registers used:
 20388 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 20389 ;; Tracked objects:
 20390 ;;		On entry : 0/0
 20391 ;;		On exit  : 0/0
 20392 ;;		Unchanged: 0/0
 20393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20397 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20398 ;;Total ram usage:        0 bytes
 20399 ;; Hardware stack levels used:    1
 20400 ;; Hardware stack levels required when called:    7
 20401 ;; This function calls:
 20402 ;;		_CC2500_ClearRXFIFO
 20403 ;;		_CC2500_ClearTXFIFO
 20404 ;;		_CC2500_FrequencyCabr
 20405 ;;		_CC2500_InitPATable
 20406 ;;		_CC2500_InitSetREG
 20407 ;;		_CC2500_PowerRST
 20408 ;;		_CC2500_SIDLEMode
 20409 ;; This function is called by:
 20410 ;;		_main
 20411 ;; This function uses a non-reentrant model
 20412 ;;
 20413                           
 20414                           
 20415                           ;psect for function _CC2500_PowerOnInitial
 20416  24E6                     _CC2500_PowerOnInitial:	
 20417                           
 20418                           ;CC2500_B1.c: 99: CC2500_PowerRST();
 20419                           
 20420                           ;incstack = 0
 20421                           ; Regs used in _CC2500_PowerOnInitial: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 20422  24E6  3199  21D6  31A4   	fcall	_CC2500_PowerRST
 20423                           
 20424                           ;CC2500_B1.c: 100: CC2500_InitSetREG();
 20425  24E9  3198  209A  31A4   	fcall	_CC2500_InitSetREG
 20426                           
 20427                           ;CC2500_B1.c: 101: CC2500_InitPATable();
 20428  24EC  31A6  2660  31A4   	fcall	_CC2500_InitPATable
 20429                           
 20430                           ;CC2500_B1.c: 102: CC2500_ClearTXFIFO();
 20431  24EF  31A1  218A  31A4   	fcall	_CC2500_ClearTXFIFO
 20432                           
 20433                           ;CC2500_B1.c: 103: CC2500_ClearRXFIFO();
 20434  24F2  31A1  2186  31A4   	fcall	_CC2500_ClearRXFIFO
 20435                           
 20436                           ;CC2500_B1.c: 104: CC2500_FrequencyCabr();
 20437  24F5  31A2  226D  31A4   	fcall	_CC2500_FrequencyCabr
 20438                           
 20439                           ;CC2500_B1.c: 105: CC2500_SIDLEMode();
 20440  24F8  31A1  218E         	fcall	_CC2500_SIDLEMode
 20441  24FA  0008               	return
 20442  24FB                     __end_of_CC2500_PowerOnInitial:	
 20443                           
 20444                           	psect	text137
 20445  218E                     __ptext137:	
 20446 ;; *************** function _CC2500_SIDLEMode *****************
 20447 ;; Defined at:
 20448 ;;		line 183 in file "G:\Program\PIC\Source_File\CC2500_B1.c"
 20449 ;; Parameters:    Size  Location     Type
 20450 ;;		None
 20451 ;; Auto vars:     Size  Location     Type
 20452 ;;		None
 20453 ;; Return value:  Size  Location     Type
 20454 ;;		None               void
 20455 ;; Registers used:
 20456 ;;		wreg, status,2, status,0, pclath, cstack
 20457 ;; Tracked objects:
 20458 ;;		On entry : 0/0
 20459 ;;		On exit  : 0/0
 20460 ;;		Unchanged: 0/0
 20461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20462 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20465 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20466 ;;Total ram usage:        0 bytes
 20467 ;; Hardware stack levels used:    1
 20468 ;; Hardware stack levels required when called:    6
 20469 ;; This function calls:
 20470 ;;		_CC2500_WriteCommand
 20471 ;; This function is called by:
 20472 ;;		_CC2500_PowerOnInitial
 20473 ;; This function uses a non-reentrant model
 20474 ;;
 20475                           
 20476                           
 20477                           ;psect for function _CC2500_SIDLEMode
 20478  218E                     _CC2500_SIDLEMode:	
 20479                           
 20480                           ;CC2500_B1.c: 185: CC2500_WriteCommand(0x36);
 20481                           
 20482                           ;incstack = 0
 20483                           ; Regs used in _CC2500_SIDLEMode: [wreg+status,2+status,0+pclath+cstack]
 20484  218E  3036               	movlw	54
 20485  218F  31A3  23C3         	fcall	_CC2500_WriteCommand
 20486  2191  0008               	return
 20487  2192                     __end_of_CC2500_SIDLEMode:	
 20488                           
 20489                           	psect	text138
 20490  19D6                     __ptext138:	
 20491 ;; *************** function _CC2500_PowerRST *****************
 20492 ;; Defined at:
 20493 ;;		line 110 in file "G:\Program\PIC\Source_File\CC2500_B1.c"
 20494 ;; Parameters:    Size  Location     Type
 20495 ;;		None
 20496 ;; Auto vars:     Size  Location     Type
 20497 ;;		None
 20498 ;; Return value:  Size  Location     Type
 20499 ;;		None               void
 20500 ;; Registers used:
 20501 ;;		wreg, status,2, status,0, pclath, cstack
 20502 ;; Tracked objects:
 20503 ;;		On entry : 0/0
 20504 ;;		On exit  : 0/0
 20505 ;;		Unchanged: 0/0
 20506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20507 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20509 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20510 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20511 ;;Total ram usage:        1 bytes
 20512 ;; Hardware stack levels used:    1
 20513 ;; Hardware stack levels required when called:    5
 20514 ;; This function calls:
 20515 ;;		_CC2500_WriteByte
 20516 ;;		_DelayTime_1us
 20517 ;; This function is called by:
 20518 ;;		_CC2500_PowerOnInitial
 20519 ;; This function uses a non-reentrant model
 20520 ;;
 20521                           
 20522                           
 20523                           ;psect for function _CC2500_PowerRST
 20524  19D6                     _CC2500_PowerRST:	
 20525                           
 20526                           ;CC2500_B1.c: 112: RC1=0;
 20527                           
 20528                           ;incstack = 0
 20529                           ; Regs used in _CC2500_PowerRST: [wreg+status,2+status,0+pclath+cstack]
 20530  19D6  0020               	movlb	0	; select bank0
 20531  19D7  108E               	bcf	14,1	;volatile
 20532                           
 20533                           ;CC2500_B1.c: 113: RC0=0;
 20534  19D8  100E               	bcf	14,0	;volatile
 20535                           
 20536                           ;CC2500_B1.c: 114: RC4=1;
 20537  19D9  160E               	bsf	14,4	;volatile
 20538                           
 20539                           ;CC2500_B1.c: 115: DelayTime_1us(10);
 20540  19DA  300A               	movlw	10
 20541  19DB  00A0               	movwf	DelayTime_1us@count
 20542  19DC  3000               	movlw	0
 20543  19DD  00A1               	movwf	DelayTime_1us@count+1
 20544  19DE  31A7  27B4  3199   	fcall	_DelayTime_1us
 20545                           
 20546                           ;CC2500_B1.c: 116: RC4=0;
 20547  19E1  0020               	movlb	0	; select bank0
 20548  19E2  120E               	bcf	14,4	;volatile
 20549                           
 20550                           ;CC2500_B1.c: 117: DelayTime_1us(10);
 20551  19E3  300A               	movlw	10
 20552  19E4  00A0               	movwf	DelayTime_1us@count
 20553  19E5  3000               	movlw	0
 20554  19E6  00A1               	movwf	DelayTime_1us@count+1
 20555  19E7  31A7  27B4  3199   	fcall	_DelayTime_1us
 20556                           
 20557                           ;CC2500_B1.c: 118: RC4=1;
 20558  19EA  0020               	movlb	0	; select bank0
 20559  19EB  160E               	bsf	14,4	;volatile
 20560                           
 20561                           ;CC2500_B1.c: 119: DelayTime_1us(40);
 20562  19EC  3028               	movlw	40
 20563  19ED  00A0               	movwf	DelayTime_1us@count
 20564  19EE  3000               	movlw	0
 20565  19EF  00A1               	movwf	DelayTime_1us@count+1
 20566  19F0  31A7  27B4  3199   	fcall	_DelayTime_1us
 20567                           
 20568                           ;CC2500_B1.c: 120: RC4=0;
 20569  19F3  0020               	movlb	0	; select bank0
 20570  19F4  120E               	bcf	14,4	;volatile
 20571                           
 20572                           ;CC2500_B1.c: 121: SPI0Buffer=0x30;
 20573  19F5  3030               	movlw	48
 20574  19F6  00A6               	movwf	??_CC2500_PowerRST
 20575  19F7  0826               	movf	??_CC2500_PowerRST,w
 20576  19F8  0021               	movlb	1	; select bank1
 20577  19F9  00C2               	movwf	_SPI0Buffer^(0+128)
 20578  19FA                     l357:	
 20579                           ;CC2500_B1.c: 122: while(RC2==1);
 20580                           
 20581  19FA  0020               	movlb	0	; select bank0
 20582  19FB  190E               	btfsc	14,2	;volatile
 20583  19FC  29FA               	goto	l357
 20584                           
 20585                           ;CC2500_B1.c: 123: CC2500_WriteByte();
 20586  19FD  31A5  256E  3199   	fcall	_CC2500_WriteByte
 20587  1A00                     l360:	
 20588                           ;CC2500_B1.c: 124: while(RC2==1);
 20589                           
 20590  1A00  0020               	movlb	0	; select bank0
 20591  1A01  190E               	btfsc	14,2	;volatile
 20592  1A02  2A00               	goto	l360
 20593                           
 20594                           ;CC2500_B1.c: 125: RC0=0;
 20595  1A03  100E               	bcf	14,0	;volatile
 20596                           
 20597                           ;CC2500_B1.c: 126: RC4=1;
 20598  1A04  160E               	bsf	14,4	;volatile
 20599  1A05  0008               	return
 20600  1A06                     __end_of_CC2500_PowerRST:	
 20601                           
 20602                           	psect	text139
 20603  189A                     __ptext139:	
 20604 ;; *************** function _CC2500_InitSetREG *****************
 20605 ;; Defined at:
 20606 ;;		line 131 in file "G:\Program\PIC\Source_File\CC2500_B1.c"
 20607 ;; Parameters:    Size  Location     Type
 20608 ;;		None
 20609 ;; Auto vars:     Size  Location     Type
 20610 ;;  loop_c          1    8[BANK0 ] unsigned char 
 20611 ;;  temp2           1    7[BANK0 ] unsigned char 
 20612 ;;  temp1           1    6[BANK0 ] unsigned char 
 20613 ;; Return value:  Size  Location     Type
 20614 ;;		None               void
 20615 ;; Registers used:
 20616 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 20617 ;; Tracked objects:
 20618 ;;		On entry : 0/0
 20619 ;;		On exit  : 0/0
 20620 ;;		Unchanged: 0/0
 20621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20622 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20623 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20624 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20625 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20626 ;;Total ram usage:        4 bytes
 20627 ;; Hardware stack levels used:    1
 20628 ;; Hardware stack levels required when called:    6
 20629 ;; This function calls:
 20630 ;;		_CC2500_WriteREG
 20631 ;; This function is called by:
 20632 ;;		_CC2500_PowerOnInitial
 20633 ;; This function uses a non-reentrant model
 20634 ;;
 20635                           
 20636                           
 20637                           ;psect for function _CC2500_InitSetREG
 20638  189A                     _CC2500_InitSetREG:	
 20639                           
 20640                           ;CC2500_B1.c: 133: unsigned char loop_c;
 20641                           ;CC2500_B1.c: 134: unsigned char temp1,temp2;
 20642                           ;CC2500_B1.c: 136: for(loop_c=0;loop_c<47;loop_c++)
 20643                           
 20644                           ;incstack = 0
 20645                           ; Regs used in _CC2500_InitSetREG: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 20646  189A  0020               	movlb	0	; select bank0
 20647  189B  01A8               	clrf	CC2500_InitSetREG@loop_c
 20648  189C                     L13:	
 20649  189C  302F               	movlw	47
 20650  189D  0228               	subwf	CC2500_InitSetREG@loop_c,w
 20651  189E  1803               	btfsc	3,0
 20652  189F  0008               	return
 20653                           
 20654                           ;CC2500_B1.c: 137: {
 20655                           ;CC2500_B1.c: 138: temp1 = CC2500_registers_address[loop_c];
 20656  18A0  0828               	movf	CC2500_InitSetREG@loop_c,w
 20657  18A1  3E00               	addlw	low (_CC2500_registers_address| (0+32768))
 20658  18A2  0084               	movwf	4
 20659  18A3  3098               	movlw	high (_CC2500_registers_address| (0+32768))
 20660  18A4  1803               	skipnc
 20661  18A5  3E01               	addlw	1
 20662  18A6  0085               	movwf	5
 20663  18A7  0800               	movf	0,w	;code access
 20664  18A8  00A5               	movwf	??_CC2500_InitSetREG
 20665  18A9  0825               	movf	??_CC2500_InitSetREG,w
 20666  18AA  00A6               	movwf	CC2500_InitSetREG@temp1
 20667                           
 20668                           ;CC2500_B1.c: 139: temp2 = CC2500_rfSettings[loop_c];
 20669  18AB  0828               	movf	CC2500_InitSetREG@loop_c,w
 20670  18AC  3E2F               	addlw	low (_CC2500_rfSettings| (0+32768))
 20671  18AD  0084               	movwf	4
 20672  18AE  3098               	movlw	high (_CC2500_rfSettings| (0+32768))
 20673  18AF  1803               	skipnc
 20674  18B0  3E01               	addlw	1
 20675  18B1  0085               	movwf	5
 20676  18B2  0800               	movf	0,w	;code access
 20677  18B3  00A5               	movwf	??_CC2500_InitSetREG
 20678  18B4  0825               	movf	??_CC2500_InitSetREG,w
 20679  18B5  00A7               	movwf	CC2500_InitSetREG@temp2
 20680                           
 20681                           ;CC2500_B1.c: 141: CC2500_WriteREG(temp1,temp2);
 20682  18B6  0827               	movf	CC2500_InitSetREG@temp2,w
 20683  18B7  00A5               	movwf	??_CC2500_InitSetREG
 20684  18B8  0825               	movf	??_CC2500_InitSetREG,w
 20685  18B9  00A2               	movwf	CC2500_WriteREG@value
 20686  18BA  0826               	movf	CC2500_InitSetREG@temp1,w
 20687  18BB  31A5  2587  3198   	fcall	_CC2500_WriteREG
 20688  18BE  3001               	movlw	1
 20689  18BF  0020               	movlb	0	; select bank0
 20690  18C0  00A5               	movwf	??_CC2500_InitSetREG
 20691  18C1  0825               	movf	??_CC2500_InitSetREG,w
 20692  18C2  07A8               	addwf	CC2500_InitSetREG@loop_c,f
 20693  18C3  289C               	goto	L13
 20694  18C4                     __end_of_CC2500_InitSetREG:	
 20695                           
 20696                           	psect	text140
 20697  2660                     __ptext140:	
 20698 ;; *************** function _CC2500_InitPATable *****************
 20699 ;; Defined at:
 20700 ;;		line 147 in file "G:\Program\PIC\Source_File\CC2500_B1.c"
 20701 ;; Parameters:    Size  Location     Type
 20702 ;;		None
 20703 ;; Auto vars:     Size  Location     Type
 20704 ;;  loop_d          1    7[BANK0 ] unsigned char 
 20705 ;;  temp            1    6[BANK0 ] unsigned char 
 20706 ;; Return value:  Size  Location     Type
 20707 ;;		None               void
 20708 ;; Registers used:
 20709 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 20710 ;; Tracked objects:
 20711 ;;		On entry : 0/0
 20712 ;;		On exit  : 0/0
 20713 ;;		Unchanged: 0/0
 20714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20716 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20717 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20718 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20719 ;;Total ram usage:        3 bytes
 20720 ;; Hardware stack levels used:    1
 20721 ;; Hardware stack levels required when called:    6
 20722 ;; This function calls:
 20723 ;;		_CC2500_WriteREG
 20724 ;; This function is called by:
 20725 ;;		_CC2500_PowerOnInitial
 20726 ;; This function uses a non-reentrant model
 20727 ;;
 20728                           
 20729                           
 20730                           ;psect for function _CC2500_InitPATable
 20731  2660                     _CC2500_InitPATable:	
 20732                           
 20733                           ;CC2500_B1.c: 149: unsigned char loop_d;
 20734                           ;CC2500_B1.c: 150: unsigned char temp;
 20735                           ;CC2500_B1.c: 152: for(loop_d=0;loop_d<8;loop_d++)
 20736                           
 20737                           ;incstack = 0
 20738                           ; Regs used in _CC2500_InitPATable: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 20739  2660  0020               	movlb	0	; select bank0
 20740  2661  01A7               	clrf	CC2500_InitPATable@loop_d
 20741  2662                     L14:	
 20742  2662  3008               	movlw	8
 20743  2663  0227               	subwf	CC2500_InitPATable@loop_d,w
 20744  2664  1803               	btfsc	3,0
 20745  2665  0008               	return
 20746                           
 20747                           ;CC2500_B1.c: 153: {
 20748                           ;CC2500_B1.c: 154: temp=CC2500_patable_vaule[loop_d];
 20749  2666  0827               	movf	CC2500_InitPATable@loop_d,w
 20750  2667  3E5E               	addlw	low (_CC2500_patable_vaule| (0+32768))
 20751  2668  0084               	movwf	4
 20752  2669  3098               	movlw	high (_CC2500_patable_vaule| (0+32768))
 20753  266A  1803               	skipnc
 20754  266B  3E01               	addlw	1
 20755  266C  0085               	movwf	5
 20756  266D  0800               	movf	0,w	;code access
 20757  266E  00A5               	movwf	??_CC2500_InitPATable
 20758  266F  0825               	movf	??_CC2500_InitPATable,w
 20759  2670  00A6               	movwf	CC2500_InitPATable@temp
 20760                           
 20761                           ;CC2500_B1.c: 155: CC2500_WriteREG(0x3E,temp);
 20762  2671  0826               	movf	CC2500_InitPATable@temp,w
 20763  2672  00A5               	movwf	??_CC2500_InitPATable
 20764  2673  0825               	movf	??_CC2500_InitPATable,w
 20765  2674  00A2               	movwf	CC2500_WriteREG@value
 20766  2675  303E               	movlw	62
 20767  2676  31A5  2587  31A6   	fcall	_CC2500_WriteREG
 20768  2679  3001               	movlw	1
 20769  267A  0020               	movlb	0	; select bank0
 20770  267B  00A5               	movwf	??_CC2500_InitPATable
 20771  267C  0825               	movf	??_CC2500_InitPATable,w
 20772  267D  07A7               	addwf	CC2500_InitPATable@loop_d,f
 20773  267E  2E62               	goto	L14
 20774  267F                     __end_of_CC2500_InitPATable:	
 20775                           
 20776                           	psect	text141
 20777  2587                     __ptext141:	
 20778 ;; *************** function _CC2500_WriteREG *****************
 20779 ;; Defined at:
 20780 ;;		line 227 in file "G:\Program\PIC\Source_File\CC2500_B1.c"
 20781 ;; Parameters:    Size  Location     Type
 20782 ;;  w_addr          1    wreg     unsigned char 
 20783 ;;  value           1    2[BANK0 ] unsigned char 
 20784 ;; Auto vars:     Size  Location     Type
 20785 ;;  w_addr          1    4[BANK0 ] unsigned char 
 20786 ;; Return value:  Size  Location     Type
 20787 ;;		None               void
 20788 ;; Registers used:
 20789 ;;		wreg, status,2, status,0, pclath, cstack
 20790 ;; Tracked objects:
 20791 ;;		On entry : 0/0
 20792 ;;		On exit  : 0/0
 20793 ;;		Unchanged: 0/0
 20794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20795 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20796 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20797 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20798 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20799 ;;Total ram usage:        3 bytes
 20800 ;; Hardware stack levels used:    1
 20801 ;; Hardware stack levels required when called:    5
 20802 ;; This function calls:
 20803 ;;		_CC2500_WriteByte
 20804 ;; This function is called by:
 20805 ;;		_CC2500_InitSetREG
 20806 ;;		_CC2500_InitPATable
 20807 ;; This function uses a non-reentrant model
 20808 ;;
 20809                           
 20810                           
 20811                           ;psect for function _CC2500_WriteREG
 20812  2587                     _CC2500_WriteREG:	
 20813                           
 20814                           ;incstack = 0
 20815                           ; Regs used in _CC2500_WriteREG: [wreg+status,2+status,0+pclath+cstack]
 20816                           ;CC2500_WriteREG@w_addr stored from wreg
 20817  2587  0020               	movlb	0	; select bank0
 20818  2588  00A4               	movwf	CC2500_WriteREG@w_addr
 20819                           
 20820                           ;CC2500_B1.c: 229: RC4=0;
 20821  2589  120E               	bcf	14,4	;volatile
 20822                           
 20823                           ;CC2500_B1.c: 230: SPI0Buffer=w_addr;
 20824  258A  0824               	movf	CC2500_WriteREG@w_addr,w
 20825  258B  00A3               	movwf	??_CC2500_WriteREG
 20826  258C  0823               	movf	??_CC2500_WriteREG,w
 20827  258D  0021               	movlb	1	; select bank1
 20828  258E  00C2               	movwf	_SPI0Buffer^(0+128)
 20829  258F                     l402:	
 20830                           ;CC2500_B1.c: 231: while(RC2==1);
 20831                           
 20832  258F  0020               	movlb	0	; select bank0
 20833  2590  190E               	btfsc	14,2	;volatile
 20834  2591  2D8F               	goto	l402
 20835                           
 20836                           ;CC2500_B1.c: 232: CC2500_WriteByte();
 20837  2592  31A5  256E  31A5   	fcall	_CC2500_WriteByte
 20838                           
 20839                           ;CC2500_B1.c: 233: SPI0Buffer=value;
 20840  2595  0020               	movlb	0	; select bank0
 20841  2596  0822               	movf	CC2500_WriteREG@value,w
 20842  2597  00A3               	movwf	??_CC2500_WriteREG
 20843  2598  0823               	movf	??_CC2500_WriteREG,w
 20844  2599  0021               	movlb	1	; select bank1
 20845  259A  00C2               	movwf	_SPI0Buffer^(0+128)
 20846                           
 20847                           ;CC2500_B1.c: 234: CC2500_WriteByte();
 20848  259B  31A5  256E         	fcall	_CC2500_WriteByte
 20849                           
 20850                           ;CC2500_B1.c: 235: RC4=1;
 20851  259D  0020               	movlb	0	; select bank0
 20852  259E  160E               	bsf	14,4	;volatile
 20853  259F  0008               	return
 20854  25A0                     __end_of_CC2500_WriteREG:	
 20855                           
 20856                           	psect	text142
 20857  226D                     __ptext142:	
 20858 ;; *************** function _CC2500_FrequencyCabr *****************
 20859 ;; Defined at:
 20860 ;;		line 175 in file "G:\Program\PIC\Source_File\CC2500_B1.c"
 20861 ;; Parameters:    Size  Location     Type
 20862 ;;		None
 20863 ;; Auto vars:     Size  Location     Type
 20864 ;;		None
 20865 ;; Return value:  Size  Location     Type
 20866 ;;		None               void
 20867 ;; Registers used:
 20868 ;;		wreg, status,2, status,0, pclath, cstack
 20869 ;; Tracked objects:
 20870 ;;		On entry : 0/0
 20871 ;;		On exit  : 0/0
 20872 ;;		Unchanged: 0/0
 20873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20875 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20877 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20878 ;;Total ram usage:        0 bytes
 20879 ;; Hardware stack levels used:    1
 20880 ;; Hardware stack levels required when called:    6
 20881 ;; This function calls:
 20882 ;;		_CC2500_WriteCommand
 20883 ;;		_DelayTime_1us
 20884 ;; This function is called by:
 20885 ;;		_CC2500_PowerOnInitial
 20886 ;; This function uses a non-reentrant model
 20887 ;;
 20888                           
 20889                           
 20890                           ;psect for function _CC2500_FrequencyCabr
 20891  226D                     _CC2500_FrequencyCabr:	
 20892                           
 20893                           ;CC2500_B1.c: 177: CC2500_WriteCommand(0x33);
 20894                           
 20895                           ;incstack = 0
 20896                           ; Regs used in _CC2500_FrequencyCabr: [wreg+status,2+status,0+pclath+cstack]
 20897  226D  3033               	movlw	51
 20898  226E  31A3  23C3  31A2   	fcall	_CC2500_WriteCommand
 20899                           
 20900                           ;CC2500_B1.c: 178: DelayTime_1us(1000);
 20901  2271  30E8               	movlw	232
 20902  2272  0020               	movlb	0	; select bank0
 20903  2273  00A0               	movwf	DelayTime_1us@count
 20904  2274  3003               	movlw	3
 20905  2275  00A1               	movwf	DelayTime_1us@count+1
 20906  2276  31A7  27B4         	fcall	_DelayTime_1us
 20907  2278  0008               	return
 20908  2279                     __end_of_CC2500_FrequencyCabr:	
 20909                           
 20910                           	psect	text143
 20911  27B4                     __ptext143:	
 20912 ;; *************** function _DelayTime_1us *****************
 20913 ;; Defined at:
 20914 ;;		line 283 in file "G:\Program\PIC\Source_File\CC2500_B1.c"
 20915 ;; Parameters:    Size  Location     Type
 20916 ;;  count           2    0[BANK0 ] int 
 20917 ;; Auto vars:     Size  Location     Type
 20918 ;;  j               2    4[BANK0 ] unsigned int 
 20919 ;;  i               2    2[BANK0 ] unsigned int 
 20920 ;; Return value:  Size  Location     Type
 20921 ;;		None               void
 20922 ;; Registers used:
 20923 ;;		wreg, status,2
 20924 ;; Tracked objects:
 20925 ;;		On entry : 0/0
 20926 ;;		On exit  : 0/0
 20927 ;;		Unchanged: 0/0
 20928 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20929 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20930 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20932 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20933 ;;Total ram usage:        6 bytes
 20934 ;; Hardware stack levels used:    1
 20935 ;; Hardware stack levels required when called:    4
 20936 ;; This function calls:
 20937 ;;		Nothing
 20938 ;; This function is called by:
 20939 ;;		_CC2500_PowerRST
 20940 ;;		_CC2500_FrequencyCabr
 20941 ;; This function uses a non-reentrant model
 20942 ;;
 20943                           
 20944                           
 20945                           ;psect for function _DelayTime_1us
 20946  27B4                     _DelayTime_1us:	
 20947                           
 20948                           ;CC2500_B1.c: 285: unsigned int i,j;
 20949                           ;CC2500_B1.c: 286: for(i=1;i<count;i++)
 20950                           
 20951                           ;incstack = 0
 20952                           ; Regs used in _DelayTime_1us: [wreg+status,2]
 20953  27B4  3001               	movlw	1
 20954  27B5  0020               	movlb	0	; select bank0
 20955  27B6  00A2               	movwf	DelayTime_1us@i
 20956  27B7  3000               	movlw	0
 20957  27B8  00A3               	movwf	DelayTime_1us@i+1
 20958  27B9                     l426:	
 20959  27B9  0821               	movf	DelayTime_1us@count+1,w
 20960  27BA  0223               	subwf	DelayTime_1us@i+1,w
 20961  27BB  1D03               	skipz
 20962  27BC  2FBF               	goto	u5865
 20963  27BD  0820               	movf	DelayTime_1us@count,w
 20964  27BE  0222               	subwf	DelayTime_1us@i,w
 20965  27BF                     u5865:	
 20966  27BF  1803               	btfsc	3,0
 20967  27C0  0008               	return
 20968                           
 20969                           ;CC2500_B1.c: 287: for(j=0;j<=1;j++);
 20970  27C1  01A4               	clrf	DelayTime_1us@j
 20971  27C2  01A5               	clrf	DelayTime_1us@j+1
 20972  27C3  3000               	movlw	0
 20973  27C4  0225               	subwf	DelayTime_1us@j+1,w
 20974  27C5  3002               	movlw	2
 20975  27C6  1903               	skipnz
 20976  27C7  0224               	subwf	DelayTime_1us@j,w
 20977  27C8  1803               	btfsc	3,0
 20978  27C9  2FD5               	goto	l7409
 20979  27CA                     l7407:	
 20980  27CA  3001               	movlw	1
 20981  27CB  07A4               	addwf	DelayTime_1us@j,f
 20982  27CC  3000               	movlw	0
 20983  27CD  3DA5               	addwfc	DelayTime_1us@j+1,f
 20984  27CE  3000               	movlw	0
 20985  27CF  0225               	subwf	DelayTime_1us@j+1,w
 20986  27D0  3002               	movlw	2
 20987  27D1  1903               	skipnz
 20988  27D2  0224               	subwf	DelayTime_1us@j,w
 20989  27D3  1C03               	skipc
 20990  27D4  2FCA               	goto	l7407
 20991  27D5                     l7409:	
 20992  27D5  3001               	movlw	1
 20993  27D6  07A2               	addwf	DelayTime_1us@i,f
 20994  27D7  3000               	movlw	0
 20995  27D8  3DA3               	addwfc	DelayTime_1us@i+1,f
 20996  27D9  2FB9               	goto	l426
 20997  27DA                     __end_of_DelayTime_1us:	
 20998                           
 20999                           	psect	text144
 21000  218A                     __ptext144:	
 21001 ;; *************** function _CC2500_ClearTXFIFO *****************
 21002 ;; Defined at:
 21003 ;;		line 161 in file "G:\Program\PIC\Source_File\CC2500_B1.c"
 21004 ;; Parameters:    Size  Location     Type
 21005 ;;		None
 21006 ;; Auto vars:     Size  Location     Type
 21007 ;;		None
 21008 ;; Return value:  Size  Location     Type
 21009 ;;		None               void
 21010 ;; Registers used:
 21011 ;;		wreg, status,2, status,0, pclath, cstack
 21012 ;; Tracked objects:
 21013 ;;		On entry : 0/0
 21014 ;;		On exit  : 0/0
 21015 ;;		Unchanged: 0/0
 21016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21017 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21018 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21020 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21021 ;;Total ram usage:        0 bytes
 21022 ;; Hardware stack levels used:    1
 21023 ;; Hardware stack levels required when called:    6
 21024 ;; This function calls:
 21025 ;;		_CC2500_WriteCommand
 21026 ;; This function is called by:
 21027 ;;		_CC2500_PowerOnInitial
 21028 ;; This function uses a non-reentrant model
 21029 ;;
 21030                           
 21031                           
 21032                           ;psect for function _CC2500_ClearTXFIFO
 21033  218A                     _CC2500_ClearTXFIFO:	
 21034                           
 21035                           ;CC2500_B1.c: 163: CC2500_WriteCommand(0x3B);
 21036                           
 21037                           ;incstack = 0
 21038                           ; Regs used in _CC2500_ClearTXFIFO: [wreg+status,2+status,0+pclath+cstack]
 21039  218A  303B               	movlw	59
 21040  218B  31A3  23C3         	fcall	_CC2500_WriteCommand
 21041  218D  0008               	return
 21042  218E                     __end_of_CC2500_ClearTXFIFO:	
 21043                           
 21044                           	psect	text145
 21045  2186                     __ptext145:	
 21046 ;; *************** function _CC2500_ClearRXFIFO *****************
 21047 ;; Defined at:
 21048 ;;		line 168 in file "G:\Program\PIC\Source_File\CC2500_B1.c"
 21049 ;; Parameters:    Size  Location     Type
 21050 ;;		None
 21051 ;; Auto vars:     Size  Location     Type
 21052 ;;		None
 21053 ;; Return value:  Size  Location     Type
 21054 ;;		None               void
 21055 ;; Registers used:
 21056 ;;		wreg, status,2, status,0, pclath, cstack
 21057 ;; Tracked objects:
 21058 ;;		On entry : 0/0
 21059 ;;		On exit  : 0/0
 21060 ;;		Unchanged: 0/0
 21061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21065 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21066 ;;Total ram usage:        0 bytes
 21067 ;; Hardware stack levels used:    1
 21068 ;; Hardware stack levels required when called:    6
 21069 ;; This function calls:
 21070 ;;		_CC2500_WriteCommand
 21071 ;; This function is called by:
 21072 ;;		_CC2500_PowerOnInitial
 21073 ;; This function uses a non-reentrant model
 21074 ;;
 21075                           
 21076                           
 21077                           ;psect for function _CC2500_ClearRXFIFO
 21078  2186                     _CC2500_ClearRXFIFO:	
 21079                           
 21080                           ;CC2500_B1.c: 170: CC2500_WriteCommand(0x3A);
 21081                           
 21082                           ;incstack = 0
 21083                           ; Regs used in _CC2500_ClearRXFIFO: [wreg+status,2+status,0+pclath+cstack]
 21084  2186  303A               	movlw	58
 21085  2187  31A3  23C3         	fcall	_CC2500_WriteCommand
 21086  2189  0008               	return
 21087  218A                     __end_of_CC2500_ClearRXFIFO:	
 21088                           
 21089                           	psect	text146
 21090  23C3                     __ptext146:	
 21091 ;; *************** function _CC2500_WriteCommand *****************
 21092 ;; Defined at:
 21093 ;;		line 253 in file "G:\Program\PIC\Source_File\CC2500_B1.c"
 21094 ;; Parameters:    Size  Location     Type
 21095 ;;  command         1    wreg     unsigned char 
 21096 ;; Auto vars:     Size  Location     Type
 21097 ;;  command         1    3[BANK0 ] unsigned char 
 21098 ;; Return value:  Size  Location     Type
 21099 ;;		None               void
 21100 ;; Registers used:
 21101 ;;		wreg, status,2, status,0, pclath, cstack
 21102 ;; Tracked objects:
 21103 ;;		On entry : 0/0
 21104 ;;		On exit  : 0/0
 21105 ;;		Unchanged: 0/0
 21106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21107 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21108 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21109 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21110 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21111 ;;Total ram usage:        2 bytes
 21112 ;; Hardware stack levels used:    1
 21113 ;; Hardware stack levels required when called:    5
 21114 ;; This function calls:
 21115 ;;		_CC2500_WriteByte
 21116 ;; This function is called by:
 21117 ;;		_CC2500_TxData
 21118 ;;		_CC2500_RxData
 21119 ;;		_CC2500_ClearTXFIFO
 21120 ;;		_CC2500_ClearRXFIFO
 21121 ;;		_CC2500_FrequencyCabr
 21122 ;;		_CC2500_SIDLEMode
 21123 ;;		_setRF_Main
 21124 ;;		_setRF_Enable
 21125 ;;		_RF_RxDisable
 21126 ;; This function uses a non-reentrant model
 21127 ;;
 21128                           
 21129                           
 21130                           ;psect for function _CC2500_WriteCommand
 21131  23C3                     _CC2500_WriteCommand:	
 21132                           
 21133                           ;incstack = 0
 21134                           ; Regs used in _CC2500_WriteCommand: [wreg+status,2+status,0+pclath+cstack]
 21135                           ;CC2500_WriteCommand@command stored from wreg
 21136  23C3  0020               	movlb	0	; select bank0
 21137  23C4  00A3               	movwf	CC2500_WriteCommand@command
 21138                           
 21139                           ;CC2500_B1.c: 255: RC4=0;
 21140  23C5  120E               	bcf	14,4	;volatile
 21141                           
 21142                           ;CC2500_B1.c: 256: SPI0Buffer=command;
 21143  23C6  0823               	movf	CC2500_WriteCommand@command,w
 21144  23C7  00A2               	movwf	??_CC2500_WriteCommand
 21145  23C8  0822               	movf	??_CC2500_WriteCommand,w
 21146  23C9  0021               	movlb	1	; select bank1
 21147  23CA  00C2               	movwf	_SPI0Buffer^(0+128)
 21148  23CB                     l414:	
 21149                           ;CC2500_B1.c: 258: while(RC2==1);
 21150                           
 21151  23CB  0020               	movlb	0	; select bank0
 21152  23CC  190E               	btfsc	14,2	;volatile
 21153  23CD  2BCB               	goto	l414
 21154                           
 21155                           ;CC2500_B1.c: 260: CC2500_WriteByte();
 21156  23CE  31A5  256E         	fcall	_CC2500_WriteByte
 21157                           
 21158                           ;CC2500_B1.c: 261: RC4=1;
 21159  23D0  0020               	movlb	0	; select bank0
 21160  23D1  160E               	bsf	14,4	;volatile
 21161  23D2  0008               	return
 21162  23D3                     __end_of_CC2500_WriteCommand:	
 21163                           
 21164                           	psect	text147
 21165  256E                     __ptext147:	
 21166 ;; *************** function _CC2500_WriteByte *****************
 21167 ;; Defined at:
 21168 ;;		line 193 in file "G:\Program\PIC\Source_File\CC2500_B1.c"
 21169 ;; Parameters:    Size  Location     Type
 21170 ;;		None
 21171 ;; Auto vars:     Size  Location     Type
 21172 ;;  loop_a          1    1[BANK0 ] unsigned char 
 21173 ;; Return value:  Size  Location     Type
 21174 ;;		None               void
 21175 ;; Registers used:
 21176 ;;		wreg, status,2, status,0
 21177 ;; Tracked objects:
 21178 ;;		On entry : 0/0
 21179 ;;		On exit  : 0/0
 21180 ;;		Unchanged: 0/0
 21181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21183 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21184 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21185 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21186 ;;Total ram usage:        2 bytes
 21187 ;; Hardware stack levels used:    1
 21188 ;; Hardware stack levels required when called:    4
 21189 ;; This function calls:
 21190 ;;		Nothing
 21191 ;; This function is called by:
 21192 ;;		_CC2500_TxData
 21193 ;;		_CC2500_RxData
 21194 ;;		_CC2500_PowerRST
 21195 ;;		_CC2500_WriteREG
 21196 ;;		_CC2500_WriteCommand
 21197 ;;		_CC2500_ReadStatus
 21198 ;;		_CC2500_ReadREG
 21199 ;; This function uses a non-reentrant model
 21200 ;;
 21201                           
 21202                           
 21203                           ;psect for function _CC2500_WriteByte
 21204  256E                     _CC2500_WriteByte:	
 21205                           
 21206                           ;CC2500_B1.c: 195: unsigned char loop_a;
 21207                           ;CC2500_B1.c: 196: for(loop_a=0;loop_a<8;loop_a++)
 21208                           
 21209                           ;incstack = 0
 21210                           ; Regs used in _CC2500_WriteByte: [wreg+status,2+status,0]
 21211  256E  0020               	movlb	0	; select bank0
 21212  256F  01A1               	clrf	CC2500_WriteByte@loop_a
 21213  2570                     L15:	
 21214  2570  3008               	movlw	8
 21215  2571  0221               	subwf	CC2500_WriteByte@loop_a,w
 21216  2572  1803               	btfsc	3,0
 21217  2573  0008               	return
 21218                           
 21219                           ;CC2500_B1.c: 197: {
 21220                           ;CC2500_B1.c: 198: if(SPI0Buffer&0x80)
 21221  2574  0021               	movlb	1	; select bank1
 21222  2575  1FC2               	btfss	_SPI0Buffer^(0+128),7
 21223  2576  2D7A               	goto	l390
 21224                           
 21225                           ;CC2500_B1.c: 199: RC0=1;
 21226  2577  0020               	movlb	0	; select bank0
 21227  2578  140E               	bsf	14,0	;volatile
 21228  2579  2D7C               	goto	l391
 21229  257A                     l390:	
 21230                           
 21231                           ;CC2500_B1.c: 200: else
 21232                           ;CC2500_B1.c: 201: RC0=0;
 21233  257A  0020               	movlb	0	; select bank0
 21234  257B  100E               	bcf	14,0	;volatile
 21235  257C                     l391:	
 21236                           
 21237                           ;CC2500_B1.c: 202: RC1=1;
 21238  257C  148E               	bsf	14,1	;volatile
 21239                           
 21240                           ;CC2500_B1.c: 203: SPI0Buffer<<=1;
 21241  257D  1003               	clrc
 21242  257E  0021               	movlb	1	; select bank1
 21243  257F  0DC2               	rlf	_SPI0Buffer^(0+128),f
 21244                           
 21245                           ;CC2500_B1.c: 204: RC1=0;
 21246  2580  0020               	movlb	0	; select bank0
 21247  2581  108E               	bcf	14,1	;volatile
 21248  2582  3001               	movlw	1
 21249  2583  00A0               	movwf	??_CC2500_WriteByte
 21250  2584  0820               	movf	??_CC2500_WriteByte,w
 21251  2585  07A1               	addwf	CC2500_WriteByte@loop_a,f
 21252  2586  2D70               	goto	L15
 21253  2587                     __end_of_CC2500_WriteByte:	
 21254                           
 21255                           	psect	text148
 21256  2182                     __ptext148:	
 21257 ;; *************** function _Buzzer_Main *****************
 21258 ;; Defined at:
 21259 ;;		line 26 in file "G:\Program\PIC\Source_File\Buzzer_B1.c"
 21260 ;; Parameters:    Size  Location     Type
 21261 ;;		None
 21262 ;; Auto vars:     Size  Location     Type
 21263 ;;		None
 21264 ;; Return value:  Size  Location     Type
 21265 ;;		None               void
 21266 ;; Registers used:
 21267 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21268 ;; Tracked objects:
 21269 ;;		On entry : 0/0
 21270 ;;		On exit  : 0/0
 21271 ;;		Unchanged: 0/0
 21272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21276 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21277 ;;Total ram usage:        0 bytes
 21278 ;; Hardware stack levels used:    1
 21279 ;; Hardware stack levels required when called:    6
 21280 ;; This function calls:
 21281 ;;		_setBuz_Main
 21282 ;; This function is called by:
 21283 ;;		_main
 21284 ;; This function uses a non-reentrant model
 21285 ;;
 21286                           
 21287                           
 21288                           ;psect for function _Buzzer_Main
 21289  2182                     _Buzzer_Main:	
 21290                           
 21291                           ;Buzzer_B1.c: 29: setBuz_Main(1);
 21292                           
 21293                           ;incstack = 0
 21294                           ; Regs used in _Buzzer_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 21295  2182  3001               	movlw	1
 21296  2183  318B  23E5         	fcall	_setBuz_Main
 21297  2185  0008               	return
 21298  2186                     __end_of_Buzzer_Main:	
 21299                           
 21300                           	psect	text149
 21301  0BE5                     __ptext149:	
 21302 ;; *************** function _setBuz_Main *****************
 21303 ;; Defined at:
 21304 ;;		line 80 in file "G:\Program\PIC\Source_File\Buzzer_B1.c"
 21305 ;; Parameters:    Size  Location     Type
 21306 ;;  buz             1    wreg     unsigned char 
 21307 ;; Auto vars:     Size  Location     Type
 21308 ;;  buz             1    6[BANK0 ] unsigned char 
 21309 ;; Return value:  Size  Location     Type
 21310 ;;		None               void
 21311 ;; Registers used:
 21312 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21313 ;; Tracked objects:
 21314 ;;		On entry : 0/0
 21315 ;;		On exit  : 0/0
 21316 ;;		Unchanged: 0/0
 21317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21318 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21319 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21320 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21321 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21322 ;;Total ram usage:        5 bytes
 21323 ;; Hardware stack levels used:    1
 21324 ;; Hardware stack levels required when called:    5
 21325 ;; This function calls:
 21326 ;;		_BuzPointSelect
 21327 ;; This function is called by:
 21328 ;;		_Buzzer_Main
 21329 ;; This function uses a non-reentrant model
 21330 ;;
 21331                           
 21332                           
 21333                           ;psect for function _setBuz_Main
 21334  0BE5                     _setBuz_Main:	
 21335                           
 21336                           ;incstack = 0
 21337                           ; Regs used in _setBuz_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 21338                           ;setBuz_Main@buz stored from wreg
 21339  0BE5  0020               	movlb	0	; select bank0
 21340  0BE6  00A6               	movwf	setBuz_Main@buz
 21341                           
 21342                           ;Buzzer_B1.c: 82: BuzPointSelect(buz);
 21343  0BE7  0826               	movf	setBuz_Main@buz,w
 21344  0BE8  31A2  2261  318B   	fcall	_BuzPointSelect
 21345                           
 21346                           ;Buzzer_B1.c: 84: if(buz == 1)
 21347  0BEB  0020               	movlb	0	; select bank0
 21348  0BEC  0826               	movf	setBuz_Main@buz,w
 21349  0BED  3A01               	xorlw	1
 21350  0BEE  1D03               	skipz
 21351  0BEF  2BF9               	goto	l153
 21352                           
 21353                           ;Buzzer_B1.c: 85: {
 21354                           ;Buzzer_B1.c: 86: Buz->Switch=(RB3)?1:0;
 21355  0BF0  0021               	movlb	1	; select bank1
 21356  0BF1  0837               	movf	_Buz^(0+128),w
 21357  0BF2  0086               	movwf	6
 21358  0BF3  3001               	movlw	1	; select bank2/3
 21359  0BF4  0087               	movwf	7
 21360  0BF5  1281               	bcf	1,5
 21361  0BF6  0020               	movlb	0	; select bank0
 21362  0BF7  198D               	btfsc	13,3	;volatile
 21363  0BF8  1681               	bsf	1,5
 21364  0BF9                     l153:	
 21365                           
 21366                           ;Buzzer_B1.c: 87: }
 21367                           ;Buzzer_B1.c: 89: if(Buz->GO)
 21368  0BF9  0021               	movlb	1	; select bank1
 21369  0BFA  0837               	movf	_Buz^(0+128),w
 21370  0BFB  0086               	movwf	6
 21371  0BFC  3001               	movlw	1	; select bank2/3
 21372  0BFD  0087               	movwf	7
 21373  0BFE  1C81               	btfss	1,1
 21374  0BFF  0008               	return
 21375                           
 21376                           ;Buzzer_B1.c: 90: {
 21377                           ;Buzzer_B1.c: 92: if(Buz->Time >= Buz->TimeValue)
 21378  0C00  0837               	movf	_Buz^(0+128),w
 21379  0C01  3E06               	addlw	6
 21380  0C02  0086               	movwf	6
 21381  0C03  3001               	movlw	1	; select bank2/3
 21382  0C04  0087               	movwf	7
 21383  0C05  3F40               	moviw [0]fsr1
 21384  0C06  0020               	movlb	0	; select bank0
 21385  0C07  00A2               	movwf	??_setBuz_Main
 21386  0C08  3F41               	moviw [1]fsr1
 21387  0C09  00A3               	movwf	??_setBuz_Main+1
 21388  0C0A  0021               	movlb	1	; select bank1
 21389  0C0B  0A37               	incf	_Buz^(0+128),w
 21390  0C0C  0086               	movwf	6
 21391  0C0D  3001               	movlw	1	; select bank2/3
 21392  0C0E  0087               	movwf	7
 21393  0C0F  3F40               	moviw [0]fsr1
 21394  0C10  0020               	movlb	0	; select bank0
 21395  0C11  00A4               	movwf	??_setBuz_Main+2
 21396  0C12  3F41               	moviw [1]fsr1
 21397  0C13  00A5               	movwf	??_setBuz_Main+3
 21398  0C14  0823               	movf	??_setBuz_Main+1,w
 21399  0C15  0225               	subwf	??_setBuz_Main+3,w
 21400  0C16  1D03               	skipz
 21401  0C17  2C1A               	goto	u6295
 21402  0C18  0822               	movf	??_setBuz_Main,w
 21403  0C19  0224               	subwf	??_setBuz_Main+2,w
 21404  0C1A                     u6295:	
 21405  0C1A  1C03               	skipc
 21406  0C1B  0008               	return
 21407                           
 21408                           ;Buzzer_B1.c: 93: {
 21409                           ;Buzzer_B1.c: 94: Buz->Time=0;
 21410  0C1C  0021               	movlb	1	; select bank1
 21411  0C1D  0A37               	incf	_Buz^(0+128),w
 21412  0C1E  0086               	movwf	6
 21413  0C1F  3001               	movlw	1	; select bank2/3
 21414  0C20  0087               	movwf	7
 21415  0C21  3000               	movlw	0
 21416  0C22  3FC0               	movwi [0]fsr1
 21417  0C23  3FC1               	movwi [1]fsr1
 21418                           
 21419                           ;Buzzer_B1.c: 95: if(!Buz->Switch)
 21420  0C24  0837               	movf	_Buz^(0+128),w
 21421  0C25  0086               	movwf	6
 21422  0C26  3001               	movlw	1	; select bank2/3
 21423  0C27  0087               	movwf	7
 21424  0C28  1A81               	btfsc	1,5
 21425  0C29  2C98               	goto	l7819
 21426                           
 21427                           ;Buzzer_B1.c: 96: {
 21428                           ;Buzzer_B1.c: 97: if(Buz->Count == 0)
 21429  0C2A  0837               	movf	_Buz^(0+128),w
 21430  0C2B  3E03               	addlw	3
 21431  0C2C  0086               	movwf	6
 21432  0C2D  3001               	movlw	1	; select bank2/3
 21433  0C2E  0087               	movwf	7
 21434  0C2F  0881               	movf	1,f
 21435  0C30  1D03               	skipz
 21436  0C31  2C90               	goto	l7815
 21437                           
 21438                           ;Buzzer_B1.c: 98: {
 21439                           ;Buzzer_B1.c: 99: if(Buz->BufferStatus1)
 21440  0C32  0837               	movf	_Buz^(0+128),w
 21441  0C33  0086               	movwf	6
 21442  0C34  3001               	movlw	1	; select bank2/3
 21443  0C35  0087               	movwf	7
 21444  0C36  1D81               	btfss	1,3
 21445  0C37  2C5E               	goto	l7807
 21446                           
 21447                           ;Buzzer_B1.c: 100: {
 21448                           ;Buzzer_B1.c: 101: Buz->BufferStatus1=0;
 21449  0C38  0837               	movf	_Buz^(0+128),w
 21450  0C39  0086               	movwf	6
 21451  0C3A  3001               	movlw	1	; select bank2/3
 21452  0C3B  0087               	movwf	7
 21453  0C3C  1181               	bcf	1,3
 21454                           
 21455                           ;Buzzer_B1.c: 102: Buz->Count=Buz->CountBuffer1;
 21456  0C3D  0837               	movf	_Buz^(0+128),w
 21457  0C3E  3E04               	addlw	4
 21458  0C3F  0086               	movwf	6
 21459  0C40  3001               	movlw	1	; select bank2/3
 21460  0C41  0087               	movwf	7
 21461  0C42  0801               	movf	1,w
 21462  0C43  0020               	movlb	0	; select bank0
 21463  0C44  00A2               	movwf	??_setBuz_Main
 21464  0C45  0021               	movlb	1	; select bank1
 21465  0C46  0837               	movf	_Buz^(0+128),w
 21466  0C47  3E03               	addlw	3
 21467  0C48  0086               	movwf	6
 21468  0C49  3001               	movlw	1	; select bank2/3
 21469  0C4A  0087               	movwf	7
 21470  0C4B  0020               	movlb	0	; select bank0
 21471  0C4C  0822               	movf	??_setBuz_Main,w
 21472  0C4D  0081               	movwf	1
 21473                           
 21474                           ;Buzzer_B1.c: 103: Buz->TimeValue=Buz->TimeValueBuffer1;
 21475  0C4E  0021               	movlb	1	; select bank1
 21476  0C4F  0837               	movf	_Buz^(0+128),w
 21477  0C50  3E08               	addlw	8
 21478  0C51  0086               	movwf	6
 21479  0C52  3001               	movlw	1	; select bank2/3
 21480  0C53  0087               	movwf	7
 21481  0C54  0837               	movf	_Buz^(0+128),w
 21482  0C55  3E06               	addlw	6
 21483  0C56  0084               	movwf	4
 21484  0C57  3001               	movlw	1	; select bank2/3
 21485  0C58  0085               	movwf	5
 21486  0C59  3F40               	moviw [0]fsr1
 21487  0C5A  3F80               	movwi [0]fsr0
 21488  0C5B  3F41               	moviw [1]fsr1
 21489  0C5C  3F81               	movwi [1]fsr0
 21490                           
 21491                           ;Buzzer_B1.c: 104: }
 21492  0C5D  0008               	return
 21493  0C5E                     l7807:	
 21494                           
 21495                           ;Buzzer_B1.c: 105: else if(Buz->BufferStatus2)
 21496  0C5E  0837               	movf	_Buz^(0+128),w
 21497  0C5F  0086               	movwf	6
 21498  0C60  3001               	movlw	1	; select bank2/3
 21499  0C61  0087               	movwf	7
 21500  0C62  1E01               	btfss	1,4
 21501  0C63  2C8A               	goto	l7813
 21502                           
 21503                           ;Buzzer_B1.c: 106: {
 21504                           ;Buzzer_B1.c: 107: Buz->BufferStatus2=0;
 21505  0C64  0837               	movf	_Buz^(0+128),w
 21506  0C65  0086               	movwf	6
 21507  0C66  3001               	movlw	1	; select bank2/3
 21508  0C67  0087               	movwf	7
 21509  0C68  1201               	bcf	1,4
 21510                           
 21511                           ;Buzzer_B1.c: 108: Buz->Count=Buz->CountBuffer2;
 21512  0C69  0837               	movf	_Buz^(0+128),w
 21513  0C6A  3E05               	addlw	5
 21514  0C6B  0086               	movwf	6
 21515  0C6C  3001               	movlw	1	; select bank2/3
 21516  0C6D  0087               	movwf	7
 21517  0C6E  0801               	movf	1,w
 21518  0C6F  0020               	movlb	0	; select bank0
 21519  0C70  00A2               	movwf	??_setBuz_Main
 21520  0C71  0021               	movlb	1	; select bank1
 21521  0C72  0837               	movf	_Buz^(0+128),w
 21522  0C73  3E03               	addlw	3
 21523  0C74  0086               	movwf	6
 21524  0C75  3001               	movlw	1	; select bank2/3
 21525  0C76  0087               	movwf	7
 21526  0C77  0020               	movlb	0	; select bank0
 21527  0C78  0822               	movf	??_setBuz_Main,w
 21528  0C79  0081               	movwf	1
 21529                           
 21530                           ;Buzzer_B1.c: 109: Buz->TimeValue=Buz->TimeValueBuffer2;
 21531  0C7A  0021               	movlb	1	; select bank1
 21532  0C7B  0837               	movf	_Buz^(0+128),w
 21533  0C7C  3E0A               	addlw	10
 21534  0C7D  0086               	movwf	6
 21535  0C7E  3001               	movlw	1	; select bank2/3
 21536  0C7F  0087               	movwf	7
 21537  0C80  0837               	movf	_Buz^(0+128),w
 21538  0C81  3E06               	addlw	6
 21539  0C82  0084               	movwf	4
 21540  0C83  3001               	movlw	1	; select bank2/3
 21541  0C84  0085               	movwf	5
 21542  0C85  3F40               	moviw [0]fsr1
 21543  0C86  3F80               	movwi [0]fsr0
 21544  0C87  3F41               	moviw [1]fsr1
 21545  0C88  3F81               	movwi [1]fsr0
 21546                           
 21547                           ;Buzzer_B1.c: 110: }
 21548  0C89  0008               	return
 21549  0C8A                     l7813:	
 21550                           
 21551                           ;Buzzer_B1.c: 111: else
 21552                           ;Buzzer_B1.c: 112: {
 21553                           ;Buzzer_B1.c: 113: Buz->GO=0;
 21554  0C8A  0837               	movf	_Buz^(0+128),w
 21555  0C8B  0086               	movwf	6
 21556  0C8C  3001               	movlw	1	; select bank2/3
 21557  0C8D  0087               	movwf	7
 21558  0C8E  1081               	bcf	1,1
 21559                           
 21560                           ;Buzzer_B1.c: 114: }
 21561                           ;Buzzer_B1.c: 115: }
 21562  0C8F  0008               	return
 21563  0C90                     l7815:	
 21564                           
 21565                           ;Buzzer_B1.c: 116: else
 21566                           ;Buzzer_B1.c: 117: {
 21567                           ;Buzzer_B1.c: 118: Buz->Switch=1;
 21568  0C90  0837               	movf	_Buz^(0+128),w
 21569  0C91  0086               	movwf	6
 21570  0C92  3001               	movlw	1	; select bank2/3
 21571  0C93  0087               	movwf	7
 21572  0C94  1681               	bsf	1,5
 21573                           
 21574                           ;Buzzer_B1.c: 120: RB3=1;
 21575  0C95  0020               	movlb	0	; select bank0
 21576  0C96  158D               	bsf	13,3	;volatile
 21577                           
 21578                           ;Buzzer_B1.c: 122: }
 21579                           ;Buzzer_B1.c: 123: }
 21580  0C97  0008               	return
 21581  0C98                     l7819:	
 21582                           
 21583                           ;Buzzer_B1.c: 124: else
 21584                           ;Buzzer_B1.c: 125: {
 21585                           ;Buzzer_B1.c: 126: Buz->Switch=0;
 21586  0C98  0021               	movlb	1	; select bank1
 21587  0C99  0837               	movf	_Buz^(0+128),w
 21588  0C9A  0086               	movwf	6
 21589  0C9B  3001               	movlw	1	; select bank2/3
 21590  0C9C  0087               	movwf	7
 21591  0C9D  1281               	bcf	1,5
 21592                           
 21593                           ;Buzzer_B1.c: 128: if(buz == 1)
 21594  0C9E  0020               	movlb	0	; select bank0
 21595  0C9F  0826               	movf	setBuz_Main@buz,w
 21596  0CA0  3A01               	xorlw	1
 21597  0CA1  1903               	btfsc	3,2
 21598                           
 21599                           ;Buzzer_B1.c: 129: {
 21600                           ;Buzzer_B1.c: 130: RB3=0;
 21601  0CA2  118D               	bcf	13,3	;volatile
 21602                           
 21603                           ;Buzzer_B1.c: 131: }
 21604                           ;Buzzer_B1.c: 133: Buz->Count--;
 21605  0CA3  0021               	movlb	1	; select bank1
 21606  0CA4  0837               	movf	_Buz^(0+128),w
 21607  0CA5  3E03               	addlw	3
 21608  0CA6  0086               	movwf	6
 21609  0CA7  3001               	movlw	1	; select bank2/3
 21610  0CA8  0087               	movwf	7
 21611  0CA9  3001               	movlw	1
 21612  0CAA  0281               	subwf	1,f
 21613  0CAB  0008               	return
 21614  0CAC                     __end_of_setBuz_Main:	
 21615                           
 21616                           	psect	text150
 21617  217E                     __ptext150:	
 21618 ;; *************** function _Buzzer_Initialization *****************
 21619 ;; Defined at:
 21620 ;;		line 19 in file "G:\Program\PIC\Source_File\Buzzer_B1.c"
 21621 ;; Parameters:    Size  Location     Type
 21622 ;;		None
 21623 ;; Auto vars:     Size  Location     Type
 21624 ;;		None
 21625 ;; Return value:  Size  Location     Type
 21626 ;;		None               void
 21627 ;; Registers used:
 21628 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21629 ;; Tracked objects:
 21630 ;;		On entry : 0/0
 21631 ;;		On exit  : 0/0
 21632 ;;		Unchanged: 0/0
 21633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21634 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21635 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21636 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21637 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21638 ;;Total ram usage:        0 bytes
 21639 ;; Hardware stack levels used:    1
 21640 ;; Hardware stack levels required when called:    7
 21641 ;; This function calls:
 21642 ;;		_setBuz_Initialization
 21643 ;; This function is called by:
 21644 ;;		_main
 21645 ;; This function uses a non-reentrant model
 21646 ;;
 21647                           
 21648                           
 21649                           ;psect for function _Buzzer_Initialization
 21650  217E                     _Buzzer_Initialization:	
 21651                           
 21652                           ;Buzzer_B1.c: 22: setBuz_Initialization(1);
 21653                           
 21654                           ;incstack = 0
 21655                           ; Regs used in _Buzzer_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 21656  217E  3001               	movlw	1
 21657  217F  31A1  21CE         	fcall	_setBuz_Initialization
 21658  2181  0008               	return
 21659  2182                     __end_of_Buzzer_Initialization:	
 21660                           
 21661                           	psect	text151
 21662  21CE                     __ptext151:	
 21663 ;; *************** function _setBuz_Initialization *****************
 21664 ;; Defined at:
 21665 ;;		line 39 in file "G:\Program\PIC\Source_File\Buzzer_B1.c"
 21666 ;; Parameters:    Size  Location     Type
 21667 ;;  buz             1    wreg     unsigned char 
 21668 ;; Auto vars:     Size  Location     Type
 21669 ;;  buz             1    0[COMMON] unsigned char 
 21670 ;; Return value:  Size  Location     Type
 21671 ;;		None               void
 21672 ;; Registers used:
 21673 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21674 ;; Tracked objects:
 21675 ;;		On entry : 0/0
 21676 ;;		On exit  : 0/0
 21677 ;;		Unchanged: 0/0
 21678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21679 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21680 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21682 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21683 ;;Total ram usage:        0 bytes
 21684 ;; Hardware stack levels used:    1
 21685 ;; Hardware stack levels required when called:    6
 21686 ;; This function calls:
 21687 ;;		_setBuz_Enable
 21688 ;; This function is called by:
 21689 ;;		_Buzzer_Initialization
 21690 ;; This function uses a non-reentrant model
 21691 ;;
 21692                           
 21693                           
 21694                           ;psect for function _setBuz_Initialization
 21695  21CE                     _setBuz_Initialization:	
 21696                           
 21697                           ;Buzzer_B1.c: 41: setBuz_Enable(1,1);
 21698                           
 21699                           ;incstack = 0
 21700                           ; Regs used in _setBuz_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 21701  21CE  0020               	movlb	0	; select bank0
 21702  21CF  01A2               	clrf	setBuz_Enable@command
 21703  21D0  0AA2               	incf	setBuz_Enable@command,f
 21704  21D1  3001               	movlw	1
 21705  21D2  31A3  23B3         	fcall	_setBuz_Enable
 21706  21D4  0008               	return
 21707  21D5                     __end_of_setBuz_Initialization:	
 21708                           
 21709                           	psect	text152
 21710  23B3                     __ptext152:	
 21711 ;; *************** function _setBuz_Enable *****************
 21712 ;; Defined at:
 21713 ;;		line 33 in file "G:\Program\PIC\Source_File\Buzzer_B1.c"
 21714 ;; Parameters:    Size  Location     Type
 21715 ;;  buz             1    wreg     unsigned char 
 21716 ;;  command         1    2[BANK0 ] unsigned char 
 21717 ;; Auto vars:     Size  Location     Type
 21718 ;;  buz             1    3[BANK0 ] unsigned char 
 21719 ;; Return value:  Size  Location     Type
 21720 ;;		None               void
 21721 ;; Registers used:
 21722 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21723 ;; Tracked objects:
 21724 ;;		On entry : 0/0
 21725 ;;		On exit  : 0/0
 21726 ;;		Unchanged: 0/0
 21727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21728 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21729 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21731 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21732 ;;Total ram usage:        2 bytes
 21733 ;; Hardware stack levels used:    1
 21734 ;; Hardware stack levels required when called:    5
 21735 ;; This function calls:
 21736 ;;		_BuzPointSelect
 21737 ;; This function is called by:
 21738 ;;		_setBuz_Initialization
 21739 ;; This function uses a non-reentrant model
 21740 ;;
 21741                           
 21742                           
 21743                           ;psect for function _setBuz_Enable
 21744  23B3                     _setBuz_Enable:	
 21745                           
 21746                           ;incstack = 0
 21747                           ; Regs used in _setBuz_Enable: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 21748                           ;setBuz_Enable@buz stored from wreg
 21749  23B3  0020               	movlb	0	; select bank0
 21750  23B4  00A3               	movwf	setBuz_Enable@buz
 21751                           
 21752                           ;Buzzer_B1.c: 35: BuzPointSelect(buz);
 21753  23B5  0823               	movf	setBuz_Enable@buz,w
 21754  23B6  31A2  2261         	fcall	_BuzPointSelect
 21755                           
 21756                           ;Buzzer_B1.c: 36: Buz->Enable=command;
 21757  23B8  0021               	movlb	1	; select bank1
 21758  23B9  0837               	movf	_Buz^(0+128),w
 21759  23BA  0086               	movwf	6
 21760  23BB  3001               	movlw	1	; select bank2/3
 21761  23BC  0087               	movwf	7
 21762  23BD  0020               	movlb	0	; select bank0
 21763  23BE  0822               	movf	setBuz_Enable@command,w
 21764  23BF  1001               	bcf	1,0
 21765  23C0  1D03               	skipz
 21766  23C1  1401               	bsf	1,0
 21767  23C2  0008               	return
 21768  23C3                     __end_of_setBuz_Enable:	
 21769                           
 21770                           	psect	text153
 21771  2261                     __ptext153:	
 21772 ;; *************** function _BuzPointSelect *****************
 21773 ;; Defined at:
 21774 ;;		line 9 in file "G:\Program\PIC\Source_File\Buzzer_B1.c"
 21775 ;; Parameters:    Size  Location     Type
 21776 ;;  buz             1    wreg     unsigned char 
 21777 ;; Auto vars:     Size  Location     Type
 21778 ;;  buz             1    1[BANK0 ] unsigned char 
 21779 ;; Return value:  Size  Location     Type
 21780 ;;		None               void
 21781 ;; Registers used:
 21782 ;;		wreg
 21783 ;; Tracked objects:
 21784 ;;		On entry : 0/0
 21785 ;;		On exit  : 0/0
 21786 ;;		Unchanged: 0/0
 21787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21789 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21790 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21791 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21792 ;;Total ram usage:        2 bytes
 21793 ;; Hardware stack levels used:    1
 21794 ;; Hardware stack levels required when called:    4
 21795 ;; This function calls:
 21796 ;;		Nothing
 21797 ;; This function is called by:
 21798 ;;		_setBuz_Enable
 21799 ;;		_setBuz
 21800 ;;		_setBuz_Main
 21801 ;; This function uses a non-reentrant model
 21802 ;;
 21803                           
 21804                           
 21805                           ;psect for function _BuzPointSelect
 21806  2261                     _BuzPointSelect:	
 21807                           
 21808                           ;incstack = 0
 21809                           ; Regs used in _BuzPointSelect: [wreg]
 21810                           ;BuzPointSelect@buz stored from wreg
 21811  2261  0020               	movlb	0	; select bank0
 21812  2262  00A1               	movwf	BuzPointSelect@buz
 21813                           
 21814                           ;Buzzer_B1.c: 12: if(buz == 1)
 21815  2263  0821               	movf	BuzPointSelect@buz,w
 21816  2264  3A01               	xorlw	1
 21817  2265  1D03               	skipz
 21818  2266  0008               	return
 21819                           
 21820                           ;Buzzer_B1.c: 13: {
 21821                           ;Buzzer_B1.c: 14: Buz=&Buz1;
 21822  2267  3048               	movlw	_Buz1& (0+255)
 21823  2268  00A0               	movwf	??_BuzPointSelect
 21824  2269  0820               	movf	??_BuzPointSelect,w
 21825  226A  0021               	movlb	1	; select bank1
 21826  226B  00B7               	movwf	_Buz^(0+128)
 21827  226C  0008               	return
 21828  226D                     __end_of_BuzPointSelect:	
 21829                           
 21830                           	psect	intentry
 21831  0004                     __pintentry:	
 21832 ;; *************** function _ISR *****************
 21833 ;; Defined at:
 21834 ;;		line 56 in file "G:\Program\PIC\Source_File\MCU_16f1518_B1.c"
 21835 ;; Parameters:    Size  Location     Type
 21836 ;;		None
 21837 ;; Auto vars:     Size  Location     Type
 21838 ;;		None
 21839 ;; Return value:  Size  Location     Type
 21840 ;;		None               void
 21841 ;; Registers used:
 21842 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21843 ;; Tracked objects:
 21844 ;;		On entry : 0/0
 21845 ;;		On exit  : 0/0
 21846 ;;		Unchanged: 0/0
 21847 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21848 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21849 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21850 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21851 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21852 ;;Total ram usage:        1 bytes
 21853 ;; Hardware stack levels used:    1
 21854 ;; Hardware stack levels required when called:    3
 21855 ;; This function calls:
 21856 ;;		_INT_ISR
 21857 ;;		_IOC_ISR
 21858 ;;		_TMR0_ISR
 21859 ;; This function is called by:
 21860 ;;		Interrupt level 1
 21861 ;; This function uses a non-reentrant model
 21862 ;;
 21863                           
 21864  0004                     _ISR:	
 21865                           
 21866                           ;incstack = 0
 21867                           ; Regs used in _ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 21868  0004  147E               	bsf	126,0	;set compiler interrupt flag
 21869  0005  3180               	pagesel	$
 21870  0006  0020               	movlb	0	; select bank0
 21871  0007  087F               	movf	127,w
 21872  0008  00F9               	movwf	??_ISR
 21873                           
 21874                           ;MCU_16f1518_B1.c: 58: IOC_ISR();
 21875  0009  31A7  276A  3180   	fcall	_IOC_ISR
 21876                           
 21877                           ;MCU_16f1518_B1.c: 60: TMR0_ISR();
 21878  000C  3180  205A  3180   	fcall	_TMR0_ISR
 21879                           
 21880                           ;MCU_16f1518_B1.c: 62: ;;
 21881                           ;MCU_16f1518_B1.c: 66: INT_ISR();
 21882  000F  31A2  2255         	fcall	_INT_ISR
 21883  0011  0879               	movf	??_ISR,w
 21884  0012  0020               	movlb	0	; select bank0
 21885  0013  00FF               	movwf	127
 21886  0014  107E               	bcf	126,0	;clear compiler interrupt flag
 21887  0015  0009               	retfie
 21888  0016                     __end_of_ISR:	
 21889                           
 21890                           	psect	text155
 21891  005A                     __ptext155:	
 21892 ;; *************** function _TMR0_ISR *****************
 21893 ;; Defined at:
 21894 ;;		line 82 in file "G:\Program\PIC\Source_File\MCU_16f1518_B1.c"
 21895 ;; Parameters:    Size  Location     Type
 21896 ;;		None
 21897 ;; Auto vars:     Size  Location     Type
 21898 ;;		None
 21899 ;; Return value:  Size  Location     Type
 21900 ;;		None               void
 21901 ;; Registers used:
 21902 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21903 ;; Tracked objects:
 21904 ;;		On entry : 0/0
 21905 ;;		On exit  : 0/0
 21906 ;;		Unchanged: 0/0
 21907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21908 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21909 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21910 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21911 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21912 ;;Total ram usage:        4 bytes
 21913 ;; Hardware stack levels used:    1
 21914 ;; Hardware stack levels required when called:    2
 21915 ;; This function calls:
 21916 ;;		i1_setLoad_StatusOff
 21917 ;; This function is called by:
 21918 ;;		_ISR
 21919 ;; This function uses a non-reentrant model
 21920 ;;
 21921                           
 21922                           
 21923                           ;psect for function _TMR0_ISR
 21924  005A                     _TMR0_ISR:	
 21925                           
 21926                           ;MCU_16f1518_B1.c: 84: if(TMR0IE && TMR0IF)
 21927                           
 21928                           ;incstack = 0
 21929                           ; Regs used in _TMR0_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 21930  005A  1E8B               	btfss	11,5	;volatile
 21931  005B  0008               	return
 21932  005C  1D0B               	btfss	11,2	;volatile
 21933  005D  0008               	return
 21934                           
 21935                           ;MCU_16f1518_B1.c: 85: {
 21936                           ;MCU_16f1518_B1.c: 86: TMR0=(256-90);
 21937  005E  30A6               	movlw	166
 21938  005F  0020               	movlb	0	; select bank0
 21939  0060  0095               	movwf	21	;volatile
 21940                           
 21941                           ;MCU_16f1518_B1.c: 87: TMR0IF=0;
 21942  0061  110B               	bcf	11,2	;volatile
 21943                           
 21944                           ;MCU_16f1518_B1.c: 100: if(DimmerLights11->GO) { DimmerLights11->Count++; if(DimmerLight
      +                          s11->Count >= (DimmerLights11->DimmingValue-Dimmer->Correction)) { DimmerLights11->Count
      +                          =0; DimmerLights11->GO=0; DimmerLights11->Flag=1; if(DimmerLights11->StatusFlag) { RB4=1
      +                          ; ;; } } }
 21945  0062  087B               	movf	_DimmerLights11,w
 21946  0063  0086               	movwf	6
 21947  0064  3001               	movlw	1	; select bank2/3
 21948  0065  0087               	movwf	7
 21949  0066  1C01               	btfss	1,0
 21950  0067  28B2               	goto	i1l8795
 21951  0068  3001               	movlw	1
 21952  0069  00F5               	movwf	??_TMR0_ISR
 21953  006A  087B               	movf	_DimmerLights11,w
 21954  006B  3E03               	addlw	3
 21955  006C  0086               	movwf	6
 21956  006D  3001               	movlw	1	; select bank2/3
 21957  006E  0087               	movwf	7
 21958  006F  0875               	movf	??_TMR0_ISR,w
 21959  0070  0781               	addwf	1,f
 21960  0071  0021               	movlb	1	; select bank1
 21961  0072  083A               	movf	_Dimmer^(0+128),w
 21962  0073  3E02               	addlw	2
 21963  0074  0086               	movwf	6
 21964  0075  0187               	clrf	7
 21965  0076  0801               	movf	1,w
 21966  0077  00F5               	movwf	??_TMR0_ISR
 21967  0078  01F6               	clrf	??_TMR0_ISR+1
 21968  0079  09F5               	comf	??_TMR0_ISR,f
 21969  007A  09F6               	comf	??_TMR0_ISR+1,f
 21970  007B  0AF5               	incf	??_TMR0_ISR,f
 21971  007C  1903               	skipnz
 21972  007D  0AF6               	incf	??_TMR0_ISR+1,f
 21973  007E  087B               	movf	_DimmerLights11,w
 21974  007F  3E04               	addlw	4
 21975  0080  0086               	movwf	6
 21976  0081  3001               	movlw	1	; select bank2/3
 21977  0082  0087               	movwf	7
 21978  0083  0801               	movf	1,w
 21979  0084  0775               	addwf	??_TMR0_ISR,w
 21980  0085  00F7               	movwf	??_TMR0_ISR+2
 21981  0086  0876               	movf	??_TMR0_ISR+1,w
 21982  0087  1803               	skipnc
 21983  0088  0A76               	incf	??_TMR0_ISR+1,w
 21984  0089  00F8               	movwf	??_TMR0_ISR+3
 21985  008A  087B               	movf	_DimmerLights11,w
 21986  008B  3E03               	addlw	3
 21987  008C  0086               	movwf	6
 21988  008D  3001               	movlw	1	; select bank2/3
 21989  008E  0087               	movwf	7
 21990  008F  0878               	movf	??_TMR0_ISR+3,w
 21991  0090  3A80               	xorlw	128
 21992  0091  3C80               	sublw	128
 21993  0092  1D03               	skipz
 21994  0093  2896               	goto	u777_25
 21995  0094  0877               	movf	??_TMR0_ISR+2,w
 21996  0095  0201               	subwf	1,w
 21997  0096                     u777_25:	
 21998  0096  1C03               	skipc
 21999  0097  29EE               	goto	i1l8861
 22000  0098  087B               	movf	_DimmerLights11,w
 22001  0099  3E03               	addlw	3
 22002  009A  0086               	movwf	6
 22003  009B  3001               	movlw	1	; select bank2/3
 22004  009C  0087               	movwf	7
 22005  009D  0181               	clrf	1
 22006  009E  087B               	movf	_DimmerLights11,w
 22007  009F  0086               	movwf	6
 22008  00A0  3001               	movlw	1	; select bank2/3
 22009  00A1  0087               	movwf	7
 22010  00A2  1001               	bcf	1,0
 22011  00A3  087B               	movf	_DimmerLights11,w
 22012  00A4  3E07               	addlw	7
 22013  00A5  0086               	movwf	6
 22014  00A6  3001               	movlw	1	; select bank2/3
 22015  00A7  0087               	movwf	7
 22016  00A8  1401               	bsf	1,0
 22017  00A9  087B               	movf	_DimmerLights11,w
 22018  00AA  0086               	movwf	6
 22019  00AB  3001               	movlw	1	; select bank2/3
 22020  00AC  0087               	movwf	7
 22021  00AD  1F01               	btfss	1,6
 22022  00AE  29EE               	goto	i1l8861
 22023  00AF  0020               	movlb	0	; select bank0
 22024  00B0  160D               	bsf	13,4	;volatile
 22025  00B1  29EE               	goto	i1l8861
 22026  00B2                     i1l8795:	
 22027  00B2  087B               	movf	_DimmerLights11,w
 22028  00B3  3E07               	addlw	7
 22029  00B4  0086               	movwf	6
 22030  00B5  3001               	movlw	1	; select bank2/3
 22031  00B6  0087               	movwf	7
 22032  00B7  1C01               	btfss	1,0
 22033  00B8  29B9               	goto	i1l8853
 22034  00B9  087B               	movf	_DimmerLights11,w
 22035  00BA  3E07               	addlw	7
 22036  00BB  0086               	movwf	6
 22037  00BC  3001               	movlw	1	; select bank2/3
 22038  00BD  0087               	movwf	7
 22039  00BE  1001               	bcf	1,0
 22040  00BF  087B               	movf	_DimmerLights11,w
 22041  00C0  0086               	movwf	6
 22042  00C1  3001               	movlw	1	; select bank2/3
 22043  00C2  0087               	movwf	7
 22044  00C3  1C81               	btfss	1,1
 22045  00C4  29B9               	goto	i1l8853
 22046  00C5  3001               	movlw	1
 22047  00C6  00F5               	movwf	??_TMR0_ISR
 22048  00C7  0A7B               	incf	_DimmerLights11,w
 22049  00C8  0086               	movwf	6
 22050  00C9  3001               	movlw	1	; select bank2/3
 22051  00CA  0087               	movwf	7
 22052  00CB  0875               	movf	??_TMR0_ISR,w
 22053  00CC  0781               	addwf	1,f
 22054  00CD  0A7B               	incf	_DimmerLights11,w
 22055  00CE  0086               	movwf	6
 22056  00CF  3001               	movlw	1	; select bank2/3
 22057  00D0  0087               	movwf	7
 22058  00D1  087B               	movf	_DimmerLights11,w
 22059  00D2  3E02               	addlw	2
 22060  00D3  0084               	movwf	4
 22061  00D4  3001               	movlw	1	; select bank2/3
 22062  00D5  0085               	movwf	5
 22063  00D6  0800               	movf	0,w
 22064  00D7  0201               	subwf	1,w
 22065  00D8  1C03               	skipc
 22066  00D9  29B9               	goto	i1l8853
 22067  00DA  0A7B               	incf	_DimmerLights11,w
 22068  00DB  0086               	movwf	6
 22069  00DC  3001               	movlw	1	; select bank2/3
 22070  00DD  0087               	movwf	7
 22071  00DE  0181               	clrf	1
 22072  00DF  087B               	movf	_DimmerLights11,w
 22073  00E0  0086               	movwf	6
 22074  00E1  3001               	movlw	1	; select bank2/3
 22075  00E2  0087               	movwf	7
 22076  00E3  1D81               	btfss	1,3
 22077  00E4  291B               	goto	i1l8821
 22078  00E5  087B               	movf	_DimmerLights11,w
 22079  00E6  0086               	movwf	6
 22080  00E7  3001               	movlw	1	; select bank2/3
 22081  00E8  0087               	movwf	7
 22082  00E9  1A01               	btfsc	1,4
 22083  00EA  2902               	goto	i1l8815
 22084  00EB  087B               	movf	_DimmerLights11,w
 22085  00EC  3E04               	addlw	4
 22086  00ED  0086               	movwf	6
 22087  00EE  3001               	movlw	1	; select bank2/3
 22088  00EF  0087               	movwf	7
 22089  00F0  303D               	movlw	61
 22090  00F1  0201               	subwf	1,w
 22091  00F2  1C03               	skipc
 22092  00F3  28FC               	goto	i1l8813
 22093  00F4  087B               	movf	_DimmerLights11,w
 22094  00F5  3E04               	addlw	4
 22095  00F6  0086               	movwf	6
 22096  00F7  3001               	movlw	1	; select bank2/3
 22097  00F8  0087               	movwf	7
 22098  00F9  3001               	movlw	1
 22099  00FA  0281               	subwf	1,f
 22100  00FB  29B9               	goto	i1l8853
 22101  00FC                     i1l8813:	
 22102  00FC  087B               	movf	_DimmerLights11,w
 22103  00FD  0086               	movwf	6
 22104  00FE  3001               	movlw	1	; select bank2/3
 22105  00FF  0087               	movwf	7
 22106  0100  1601               	bsf	1,4
 22107  0101  29B9               	goto	i1l8853
 22108  0102                     i1l8815:	
 22109  0102  087B               	movf	_DimmerLights11,w
 22110  0103  3E04               	addlw	4
 22111  0104  0086               	movwf	6
 22112  0105  3001               	movlw	1	; select bank2/3
 22113  0106  0087               	movwf	7
 22114  0107  3078               	movlw	120
 22115  0108  0201               	subwf	1,w
 22116  0109  1803               	skipnc
 22117  010A  2915               	goto	i1l8819
 22118  010B  3001               	movlw	1
 22119  010C  00F5               	movwf	??_TMR0_ISR
 22120  010D  087B               	movf	_DimmerLights11,w
 22121  010E  3E04               	addlw	4
 22122  010F  0086               	movwf	6
 22123  0110  3001               	movlw	1	; select bank2/3
 22124  0111  0087               	movwf	7
 22125  0112  0875               	movf	??_TMR0_ISR,w
 22126  0113  0781               	addwf	1,f
 22127  0114  29B9               	goto	i1l8853
 22128  0115                     i1l8819:	
 22129  0115  087B               	movf	_DimmerLights11,w
 22130  0116  0086               	movwf	6
 22131  0117  3001               	movlw	1	; select bank2/3
 22132  0118  0087               	movwf	7
 22133  0119  1201               	bcf	1,4
 22134  011A  29B9               	goto	i1l8853
 22135  011B                     i1l8821:	
 22136  011B  087B               	movf	_DimmerLights11,w
 22137  011C  0086               	movwf	6
 22138  011D  3001               	movlw	1	; select bank2/3
 22139  011E  0087               	movwf	7
 22140  011F  1D01               	btfss	1,2
 22141  0120  2962               	goto	i1l8835
 22142  0121  087B               	movf	_DimmerLights11,w
 22143  0122  3E05               	addlw	5
 22144  0123  0086               	movwf	6
 22145  0124  3001               	movlw	1	; select bank2/3
 22146  0125  0087               	movwf	7
 22147  0126  087B               	movf	_DimmerLights11,w
 22148  0127  3E04               	addlw	4
 22149  0128  0084               	movwf	4
 22150  0129  3001               	movlw	1	; select bank2/3
 22151  012A  0085               	movwf	5
 22152  012B  0800               	movf	0,w
 22153  012C  0201               	subwf	1,w
 22154  012D  1803               	skipnc
 22155  012E  2937               	goto	i1l8827
 22156  012F  087B               	movf	_DimmerLights11,w
 22157  0130  3E04               	addlw	4
 22158  0131  0086               	movwf	6
 22159  0132  3001               	movlw	1	; select bank2/3
 22160  0133  0087               	movwf	7
 22161  0134  3001               	movlw	1
 22162  0135  0281               	subwf	1,f
 22163  0136  294E               	goto	i1l8831
 22164  0137                     i1l8827:	
 22165  0137  087B               	movf	_DimmerLights11,w
 22166  0138  3E04               	addlw	4
 22167  0139  0086               	movwf	6
 22168  013A  3001               	movlw	1	; select bank2/3
 22169  013B  0087               	movwf	7
 22170  013C  087B               	movf	_DimmerLights11,w
 22171  013D  3E05               	addlw	5
 22172  013E  0084               	movwf	4
 22173  013F  3001               	movlw	1	; select bank2/3
 22174  0140  0085               	movwf	5
 22175  0141  0800               	movf	0,w
 22176  0142  0201               	subwf	1,w
 22177  0143  1803               	skipnc
 22178  0144  294E               	goto	i1l8831
 22179  0145  3001               	movlw	1
 22180  0146  00F5               	movwf	??_TMR0_ISR
 22181  0147  087B               	movf	_DimmerLights11,w
 22182  0148  3E04               	addlw	4
 22183  0149  0086               	movwf	6
 22184  014A  3001               	movlw	1	; select bank2/3
 22185  014B  0087               	movwf	7
 22186  014C  0875               	movf	??_TMR0_ISR,w
 22187  014D  0781               	addwf	1,f
 22188  014E                     i1l8831:	
 22189  014E  087B               	movf	_DimmerLights11,w
 22190  014F  3E05               	addlw	5
 22191  0150  0086               	movwf	6
 22192  0151  3001               	movlw	1	; select bank2/3
 22193  0152  0087               	movwf	7
 22194  0153  087B               	movf	_DimmerLights11,w
 22195  0154  3E04               	addlw	4
 22196  0155  0084               	movwf	4
 22197  0156  3001               	movlw	1	; select bank2/3
 22198  0157  0085               	movwf	5
 22199  0158  0800               	movf	0,w
 22200  0159  0601               	xorwf	1,w
 22201  015A  1D03               	skipz
 22202  015B  29B9               	goto	i1l8853
 22203  015C  087B               	movf	_DimmerLights11,w
 22204  015D  0086               	movwf	6
 22205  015E  3001               	movlw	1	; select bank2/3
 22206  015F  0087               	movwf	7
 22207  0160  1101               	bcf	1,2
 22208  0161  297D               	goto	i1l8841
 22209  0162                     i1l8835:	
 22210  0162  087B               	movf	_DimmerLights11,w
 22211  0163  0086               	movwf	6
 22212  0164  3001               	movlw	1	; select bank2/3
 22213  0165  0087               	movwf	7
 22214  0166  1E81               	btfss	1,5
 22215  0167  2983               	goto	i1l8843
 22216  0168  087B               	movf	_DimmerLights11,w
 22217  0169  3E04               	addlw	4
 22218  016A  0086               	movwf	6
 22219  016B  3001               	movlw	1	; select bank2/3
 22220  016C  0087               	movwf	7
 22221  016D  3001               	movlw	1
 22222  016E  0281               	subwf	1,f
 22223  016F  087B               	movf	_DimmerLights11,w
 22224  0170  3E05               	addlw	5
 22225  0171  0086               	movwf	6
 22226  0172  3001               	movlw	1	; select bank2/3
 22227  0173  0087               	movwf	7
 22228  0174  087B               	movf	_DimmerLights11,w
 22229  0175  3E04               	addlw	4
 22230  0176  0084               	movwf	4
 22231  0177  3001               	movlw	1	; select bank2/3
 22232  0178  0085               	movwf	5
 22233  0179  0800               	movf	0,w
 22234  017A  0201               	subwf	1,w
 22235  017B  1C03               	skipc
 22236  017C  29B9               	goto	i1l8853
 22237  017D                     i1l8841:	
 22238  017D  087B               	movf	_DimmerLights11,w
 22239  017E  0086               	movwf	6
 22240  017F  3001               	movlw	1	; select bank2/3
 22241  0180  0087               	movwf	7
 22242  0181  1081               	bcf	1,1
 22243  0182  29B9               	goto	i1l8853
 22244  0183                     i1l8843:	
 22245  0183  3001               	movlw	1
 22246  0184  00F5               	movwf	??_TMR0_ISR
 22247  0185  087B               	movf	_DimmerLights11,w
 22248  0186  3E04               	addlw	4
 22249  0187  0086               	movwf	6
 22250  0188  3001               	movlw	1	; select bank2/3
 22251  0189  0087               	movwf	7
 22252  018A  0875               	movf	??_TMR0_ISR,w
 22253  018B  0781               	addwf	1,f
 22254  018C  087B               	movf	_DimmerLights11,w
 22255  018D  3E04               	addlw	4
 22256  018E  0086               	movwf	6
 22257  018F  3001               	movlw	1	; select bank2/3
 22258  0190  0087               	movwf	7
 22259  0191  087B               	movf	_DimmerLights11,w
 22260  0192  3E06               	addlw	6
 22261  0193  0084               	movwf	4
 22262  0194  3001               	movlw	1	; select bank2/3
 22263  0195  0085               	movwf	5
 22264  0196  0800               	movf	0,w
 22265  0197  0201               	subwf	1,w
 22266  0198  1C03               	skipc
 22267  0199  29B9               	goto	i1l8853
 22268  019A  087B               	movf	_DimmerLights11,w
 22269  019B  0086               	movwf	6
 22270  019C  3001               	movlw	1	; select bank2/3
 22271  019D  0087               	movwf	7
 22272  019E  1081               	bcf	1,1
 22273  019F  087B               	movf	_DimmerLights11,w
 22274  01A0  0086               	movwf	6
 22275  01A1  3001               	movlw	1	; select bank2/3
 22276  01A2  0087               	movwf	7
 22277  01A3  1301               	bcf	1,6
 22278  01A4  087B               	movf	_DimmerLights11,w
 22279  01A5  3E0C               	addlw	12
 22280  01A6  0086               	movwf	6
 22281  01A7  3001               	movlw	1	; select bank2/3
 22282  01A8  0087               	movwf	7
 22283  01A9  1401               	bsf	1,0
 22284  01AA  0021               	movlb	1	; select bank1
 22285  01AB  083A               	movf	_Dimmer^(0+128),w
 22286  01AC  0086               	movwf	6
 22287  01AD  0187               	clrf	7
 22288  01AE  1581               	bsf	1,3
 22289  01AF  0020               	movlb	0	; select bank0
 22290  01B0  138E               	bcf	14,7	;volatile
 22291  01B1  01F2               	clrf	i1setLoad_StatusOff@lights
 22292  01B2  0AF2               	incf	i1setLoad_StatusOff@lights,f
 22293  01B3  01F3               	clrf	i1setLoad_StatusOff@command
 22294  01B4  0AF3               	incf	i1setLoad_StatusOff@command,f
 22295  01B5  3001               	movlw	1
 22296  01B6  3199  211C  3180   	fcall	i1_setLoad_StatusOff
 22297  01B9                     i1l8853:	
 22298  01B9  0020               	movlb	0	; select bank0
 22299  01BA  1E0D               	btfss	13,4	;volatile
 22300  01BB  29EE               	goto	i1l8861
 22301  01BC  3001               	movlw	1
 22302  01BD  00F5               	movwf	??_TMR0_ISR
 22303  01BE  087B               	movf	_DimmerLights11,w
 22304  01BF  3E08               	addlw	8
 22305  01C0  0086               	movwf	6
 22306  01C1  3001               	movlw	1	; select bank2/3
 22307  01C2  0087               	movwf	7
 22308  01C3  0875               	movf	??_TMR0_ISR,w
 22309  01C4  0781               	addwf	1,f
 22310  01C5  087B               	movf	_DimmerLights11,w
 22311  01C6  3E04               	addlw	4
 22312  01C7  0086               	movwf	6
 22313  01C8  3001               	movlw	1	; select bank2/3
 22314  01C9  0087               	movwf	7
 22315  01CA  0801               	movf	1,w
 22316  01CB  00F5               	movwf	??_TMR0_ISR
 22317  01CC  01F6               	clrf	??_TMR0_ISR+1
 22318  01CD  09F5               	comf	??_TMR0_ISR,f
 22319  01CE  09F6               	comf	??_TMR0_ISR+1,f
 22320  01CF  0AF5               	incf	??_TMR0_ISR,f
 22321  01D0  1903               	skipnz
 22322  01D1  0AF6               	incf	??_TMR0_ISR+1,f
 22323  01D2  0875               	movf	??_TMR0_ISR,w
 22324  01D3  3E78               	addlw	120
 22325  01D4  00F7               	movwf	??_TMR0_ISR+2
 22326  01D5  3000               	movlw	0
 22327  01D6  3D76               	addwfc	??_TMR0_ISR+1,w
 22328  01D7  00F8               	movwf	??_TMR0_ISR+3
 22329  01D8  087B               	movf	_DimmerLights11,w
 22330  01D9  3E08               	addlw	8
 22331  01DA  0086               	movwf	6
 22332  01DB  3001               	movlw	1	; select bank2/3
 22333  01DC  0087               	movwf	7
 22334  01DD  0878               	movf	??_TMR0_ISR+3,w
 22335  01DE  3A80               	xorlw	128
 22336  01DF  3C80               	sublw	128
 22337  01E0  1D03               	skipz
 22338  01E1  29E4               	goto	u794_25
 22339  01E2  0877               	movf	??_TMR0_ISR+2,w
 22340  01E3  0201               	subwf	1,w
 22341  01E4                     u794_25:	
 22342  01E4  1C03               	skipc
 22343  01E5  29EE               	goto	i1l8861
 22344  01E6  087B               	movf	_DimmerLights11,w
 22345  01E7  3E08               	addlw	8
 22346  01E8  0086               	movwf	6
 22347  01E9  3001               	movlw	1	; select bank2/3
 22348  01EA  0087               	movwf	7
 22349  01EB  0181               	clrf	1
 22350  01EC  0020               	movlb	0	; select bank0
 22351  01ED  120D               	bcf	13,4	;volatile
 22352  01EE                     i1l8861:	
 22353                           
 22354                           ;MCU_16f1518_B1.c: 104: if(DimmerLights22->GO) { DimmerLights22->Count++; if(DimmerLight
      +                          s22->Count >= (DimmerLights22->DimmingValue-Dimmer->Correction)) { DimmerLights22->Count
      +                          =0; DimmerLights22->GO=0; DimmerLights22->Flag=1; if(DimmerLights22->StatusFlag) { RA7=1
      +                          ; } } } el
 22355  01EE  087C               	movf	_DimmerLights22,w
 22356  01EF  0086               	movwf	6
 22357  01F0  3001               	movlw	1	; select bank2/3
 22358  01F1  0087               	movwf	7
 22359  01F2  1C01               	btfss	1,0
 22360  01F3  2A3E               	goto	i1l8875
 22361  01F4  3001               	movlw	1
 22362  01F5  00F5               	movwf	??_TMR0_ISR
 22363  01F6  087C               	movf	_DimmerLights22,w
 22364  01F7  3E03               	addlw	3
 22365  01F8  0086               	movwf	6
 22366  01F9  3001               	movlw	1	; select bank2/3
 22367  01FA  0087               	movwf	7
 22368  01FB  0875               	movf	??_TMR0_ISR,w
 22369  01FC  0781               	addwf	1,f
 22370  01FD  0021               	movlb	1	; select bank1
 22371  01FE  083A               	movf	_Dimmer^(0+128),w
 22372  01FF  3E02               	addlw	2
 22373  0200  0086               	movwf	6
 22374  0201  0187               	clrf	7
 22375  0202  0801               	movf	1,w
 22376  0203  00F5               	movwf	??_TMR0_ISR
 22377  0204  01F6               	clrf	??_TMR0_ISR+1
 22378  0205  09F5               	comf	??_TMR0_ISR,f
 22379  0206  09F6               	comf	??_TMR0_ISR+1,f
 22380  0207  0AF5               	incf	??_TMR0_ISR,f
 22381  0208  1903               	skipnz
 22382  0209  0AF6               	incf	??_TMR0_ISR+1,f
 22383  020A  087C               	movf	_DimmerLights22,w
 22384  020B  3E04               	addlw	4
 22385  020C  0086               	movwf	6
 22386  020D  3001               	movlw	1	; select bank2/3
 22387  020E  0087               	movwf	7
 22388  020F  0801               	movf	1,w
 22389  0210  0775               	addwf	??_TMR0_ISR,w
 22390  0211  00F7               	movwf	??_TMR0_ISR+2
 22391  0212  0876               	movf	??_TMR0_ISR+1,w
 22392  0213  1803               	skipnc
 22393  0214  0A76               	incf	??_TMR0_ISR+1,w
 22394  0215  00F8               	movwf	??_TMR0_ISR+3
 22395  0216  087C               	movf	_DimmerLights22,w
 22396  0217  3E03               	addlw	3
 22397  0218  0086               	movwf	6
 22398  0219  3001               	movlw	1	; select bank2/3
 22399  021A  0087               	movwf	7
 22400  021B  0878               	movf	??_TMR0_ISR+3,w
 22401  021C  3A80               	xorlw	128
 22402  021D  3C80               	sublw	128
 22403  021E  1D03               	skipz
 22404  021F  2A22               	goto	u796_25
 22405  0220  0877               	movf	??_TMR0_ISR+2,w
 22406  0221  0201               	subwf	1,w
 22407  0222                     u796_25:	
 22408  0222  1C03               	skipc
 22409  0223  2B7C               	goto	i1l8941
 22410  0224  087C               	movf	_DimmerLights22,w
 22411  0225  3E03               	addlw	3
 22412  0226  0086               	movwf	6
 22413  0227  3001               	movlw	1	; select bank2/3
 22414  0228  0087               	movwf	7
 22415  0229  0181               	clrf	1
 22416  022A  087C               	movf	_DimmerLights22,w
 22417  022B  0086               	movwf	6
 22418  022C  3001               	movlw	1	; select bank2/3
 22419  022D  0087               	movwf	7
 22420  022E  1001               	bcf	1,0
 22421  022F  087C               	movf	_DimmerLights22,w
 22422  0230  3E07               	addlw	7
 22423  0231  0086               	movwf	6
 22424  0232  3001               	movlw	1	; select bank2/3
 22425  0233  0087               	movwf	7
 22426  0234  1401               	bsf	1,0
 22427  0235  087C               	movf	_DimmerLights22,w
 22428  0236  0086               	movwf	6
 22429  0237  3001               	movlw	1	; select bank2/3
 22430  0238  0087               	movwf	7
 22431  0239  1F01               	btfss	1,6
 22432  023A  2B7C               	goto	i1l8941
 22433  023B  0020               	movlb	0	; select bank0
 22434  023C  178C               	bsf	12,7	;volatile
 22435  023D  2B7C               	goto	i1l8941
 22436  023E                     i1l8875:	
 22437  023E  087C               	movf	_DimmerLights22,w
 22438  023F  3E07               	addlw	7
 22439  0240  0086               	movwf	6
 22440  0241  3001               	movlw	1	; select bank2/3
 22441  0242  0087               	movwf	7
 22442  0243  1C01               	btfss	1,0
 22443  0244  2B47               	goto	i1l8933
 22444  0245  087C               	movf	_DimmerLights22,w
 22445  0246  3E07               	addlw	7
 22446  0247  0086               	movwf	6
 22447  0248  3001               	movlw	1	; select bank2/3
 22448  0249  0087               	movwf	7
 22449  024A  1001               	bcf	1,0
 22450  024B  087C               	movf	_DimmerLights22,w
 22451  024C  0086               	movwf	6
 22452  024D  3001               	movlw	1	; select bank2/3
 22453  024E  0087               	movwf	7
 22454  024F  1C81               	btfss	1,1
 22455  0250  2B47               	goto	i1l8933
 22456  0251  3001               	movlw	1
 22457  0252  00F5               	movwf	??_TMR0_ISR
 22458  0253  0A7C               	incf	_DimmerLights22,w
 22459  0254  0086               	movwf	6
 22460  0255  3001               	movlw	1	; select bank2/3
 22461  0256  0087               	movwf	7
 22462  0257  0875               	movf	??_TMR0_ISR,w
 22463  0258  0781               	addwf	1,f
 22464  0259  0A7C               	incf	_DimmerLights22,w
 22465  025A  0086               	movwf	6
 22466  025B  3001               	movlw	1	; select bank2/3
 22467  025C  0087               	movwf	7
 22468  025D  087C               	movf	_DimmerLights22,w
 22469  025E  3E02               	addlw	2
 22470  025F  0084               	movwf	4
 22471  0260  3001               	movlw	1	; select bank2/3
 22472  0261  0085               	movwf	5
 22473  0262  0800               	movf	0,w
 22474  0263  0201               	subwf	1,w
 22475  0264  1C03               	skipc
 22476  0265  2B47               	goto	i1l8933
 22477  0266  0A7C               	incf	_DimmerLights22,w
 22478  0267  0086               	movwf	6
 22479  0268  3001               	movlw	1	; select bank2/3
 22480  0269  0087               	movwf	7
 22481  026A  0181               	clrf	1
 22482  026B  087C               	movf	_DimmerLights22,w
 22483  026C  0086               	movwf	6
 22484  026D  3001               	movlw	1	; select bank2/3
 22485  026E  0087               	movwf	7
 22486  026F  1D81               	btfss	1,3
 22487  0270  2AA7               	goto	i1l8901
 22488  0271  087C               	movf	_DimmerLights22,w
 22489  0272  0086               	movwf	6
 22490  0273  3001               	movlw	1	; select bank2/3
 22491  0274  0087               	movwf	7
 22492  0275  1A01               	btfsc	1,4
 22493  0276  2A8E               	goto	i1l8895
 22494  0277  087C               	movf	_DimmerLights22,w
 22495  0278  3E04               	addlw	4
 22496  0279  0086               	movwf	6
 22497  027A  3001               	movlw	1	; select bank2/3
 22498  027B  0087               	movwf	7
 22499  027C  303D               	movlw	61
 22500  027D  0201               	subwf	1,w
 22501  027E  1C03               	skipc
 22502  027F  2A88               	goto	i1l8893
 22503  0280  087C               	movf	_DimmerLights22,w
 22504  0281  3E04               	addlw	4
 22505  0282  0086               	movwf	6
 22506  0283  3001               	movlw	1	; select bank2/3
 22507  0284  0087               	movwf	7
 22508  0285  3001               	movlw	1
 22509  0286  0281               	subwf	1,f
 22510  0287  2B47               	goto	i1l8933
 22511  0288                     i1l8893:	
 22512  0288  087C               	movf	_DimmerLights22,w
 22513  0289  0086               	movwf	6
 22514  028A  3001               	movlw	1	; select bank2/3
 22515  028B  0087               	movwf	7
 22516  028C  1601               	bsf	1,4
 22517  028D  2B47               	goto	i1l8933
 22518  028E                     i1l8895:	
 22519  028E  087C               	movf	_DimmerLights22,w
 22520  028F  3E04               	addlw	4
 22521  0290  0086               	movwf	6
 22522  0291  3001               	movlw	1	; select bank2/3
 22523  0292  0087               	movwf	7
 22524  0293  3078               	movlw	120
 22525  0294  0201               	subwf	1,w
 22526  0295  1803               	skipnc
 22527  0296  2AA1               	goto	i1l8899
 22528  0297  3001               	movlw	1
 22529  0298  00F5               	movwf	??_TMR0_ISR
 22530  0299  087C               	movf	_DimmerLights22,w
 22531  029A  3E04               	addlw	4
 22532  029B  0086               	movwf	6
 22533  029C  3001               	movlw	1	; select bank2/3
 22534  029D  0087               	movwf	7
 22535  029E  0875               	movf	??_TMR0_ISR,w
 22536  029F  0781               	addwf	1,f
 22537  02A0  2B47               	goto	i1l8933
 22538  02A1                     i1l8899:	
 22539  02A1  087C               	movf	_DimmerLights22,w
 22540  02A2  0086               	movwf	6
 22541  02A3  3001               	movlw	1	; select bank2/3
 22542  02A4  0087               	movwf	7
 22543  02A5  1201               	bcf	1,4
 22544  02A6  2B47               	goto	i1l8933
 22545  02A7                     i1l8901:	
 22546  02A7  087C               	movf	_DimmerLights22,w
 22547  02A8  0086               	movwf	6
 22548  02A9  3001               	movlw	1	; select bank2/3
 22549  02AA  0087               	movwf	7
 22550  02AB  1D01               	btfss	1,2
 22551  02AC  2AEE               	goto	i1l8915
 22552  02AD  087C               	movf	_DimmerLights22,w
 22553  02AE  3E05               	addlw	5
 22554  02AF  0086               	movwf	6
 22555  02B0  3001               	movlw	1	; select bank2/3
 22556  02B1  0087               	movwf	7
 22557  02B2  087C               	movf	_DimmerLights22,w
 22558  02B3  3E04               	addlw	4
 22559  02B4  0084               	movwf	4
 22560  02B5  3001               	movlw	1	; select bank2/3
 22561  02B6  0085               	movwf	5
 22562  02B7  0800               	movf	0,w
 22563  02B8  0201               	subwf	1,w
 22564  02B9  1803               	skipnc
 22565  02BA  2AC3               	goto	i1l8907
 22566  02BB  087C               	movf	_DimmerLights22,w
 22567  02BC  3E04               	addlw	4
 22568  02BD  0086               	movwf	6
 22569  02BE  3001               	movlw	1	; select bank2/3
 22570  02BF  0087               	movwf	7
 22571  02C0  3001               	movlw	1
 22572  02C1  0281               	subwf	1,f
 22573  02C2  2ADA               	goto	i1l8911
 22574  02C3                     i1l8907:	
 22575  02C3  087C               	movf	_DimmerLights22,w
 22576  02C4  3E04               	addlw	4
 22577  02C5  0086               	movwf	6
 22578  02C6  3001               	movlw	1	; select bank2/3
 22579  02C7  0087               	movwf	7
 22580  02C8  087C               	movf	_DimmerLights22,w
 22581  02C9  3E05               	addlw	5
 22582  02CA  0084               	movwf	4
 22583  02CB  3001               	movlw	1	; select bank2/3
 22584  02CC  0085               	movwf	5
 22585  02CD  0800               	movf	0,w
 22586  02CE  0201               	subwf	1,w
 22587  02CF  1803               	skipnc
 22588  02D0  2ADA               	goto	i1l8911
 22589  02D1  3001               	movlw	1
 22590  02D2  00F5               	movwf	??_TMR0_ISR
 22591  02D3  087C               	movf	_DimmerLights22,w
 22592  02D4  3E04               	addlw	4
 22593  02D5  0086               	movwf	6
 22594  02D6  3001               	movlw	1	; select bank2/3
 22595  02D7  0087               	movwf	7
 22596  02D8  0875               	movf	??_TMR0_ISR,w
 22597  02D9  0781               	addwf	1,f
 22598  02DA                     i1l8911:	
 22599  02DA  087C               	movf	_DimmerLights22,w
 22600  02DB  3E05               	addlw	5
 22601  02DC  0086               	movwf	6
 22602  02DD  3001               	movlw	1	; select bank2/3
 22603  02DE  0087               	movwf	7
 22604  02DF  087C               	movf	_DimmerLights22,w
 22605  02E0  3E04               	addlw	4
 22606  02E1  0084               	movwf	4
 22607  02E2  3001               	movlw	1	; select bank2/3
 22608  02E3  0085               	movwf	5
 22609  02E4  0800               	movf	0,w
 22610  02E5  0601               	xorwf	1,w
 22611  02E6  1D03               	skipz
 22612  02E7  2B47               	goto	i1l8933
 22613  02E8  087C               	movf	_DimmerLights22,w
 22614  02E9  0086               	movwf	6
 22615  02EA  3001               	movlw	1	; select bank2/3
 22616  02EB  0087               	movwf	7
 22617  02EC  1101               	bcf	1,2
 22618  02ED  2B09               	goto	i1l8921
 22619  02EE                     i1l8915:	
 22620  02EE  087C               	movf	_DimmerLights22,w
 22621  02EF  0086               	movwf	6
 22622  02F0  3001               	movlw	1	; select bank2/3
 22623  02F1  0087               	movwf	7
 22624  02F2  1E81               	btfss	1,5
 22625  02F3  2B0F               	goto	i1l8923
 22626  02F4  087C               	movf	_DimmerLights22,w
 22627  02F5  3E04               	addlw	4
 22628  02F6  0086               	movwf	6
 22629  02F7  3001               	movlw	1	; select bank2/3
 22630  02F8  0087               	movwf	7
 22631  02F9  3001               	movlw	1
 22632  02FA  0281               	subwf	1,f
 22633  02FB  087C               	movf	_DimmerLights22,w
 22634  02FC  3E05               	addlw	5
 22635  02FD  0086               	movwf	6
 22636  02FE  3001               	movlw	1	; select bank2/3
 22637  02FF  0087               	movwf	7
 22638  0300  087C               	movf	_DimmerLights22,w
 22639  0301  3E04               	addlw	4
 22640  0302  0084               	movwf	4
 22641  0303  3001               	movlw	1	; select bank2/3
 22642  0304  0085               	movwf	5
 22643  0305  0800               	movf	0,w
 22644  0306  0201               	subwf	1,w
 22645  0307  1C03               	skipc
 22646  0308  2B47               	goto	i1l8933
 22647  0309                     i1l8921:	
 22648  0309  087C               	movf	_DimmerLights22,w
 22649  030A  0086               	movwf	6
 22650  030B  3001               	movlw	1	; select bank2/3
 22651  030C  0087               	movwf	7
 22652  030D  1081               	bcf	1,1
 22653  030E  2B47               	goto	i1l8933
 22654  030F                     i1l8923:	
 22655  030F  3001               	movlw	1
 22656  0310  00F5               	movwf	??_TMR0_ISR
 22657  0311  087C               	movf	_DimmerLights22,w
 22658  0312  3E04               	addlw	4
 22659  0313  0086               	movwf	6
 22660  0314  3001               	movlw	1	; select bank2/3
 22661  0315  0087               	movwf	7
 22662  0316  0875               	movf	??_TMR0_ISR,w
 22663  0317  0781               	addwf	1,f
 22664  0318  087C               	movf	_DimmerLights22,w
 22665  0319  3E04               	addlw	4
 22666  031A  0086               	movwf	6
 22667  031B  3001               	movlw	1	; select bank2/3
 22668  031C  0087               	movwf	7
 22669  031D  087C               	movf	_DimmerLights22,w
 22670  031E  3E06               	addlw	6
 22671  031F  0084               	movwf	4
 22672  0320  3001               	movlw	1	; select bank2/3
 22673  0321  0085               	movwf	5
 22674  0322  0800               	movf	0,w
 22675  0323  0201               	subwf	1,w
 22676  0324  1C03               	skipc
 22677  0325  2B47               	goto	i1l8933
 22678  0326  087C               	movf	_DimmerLights22,w
 22679  0327  0086               	movwf	6
 22680  0328  3001               	movlw	1	; select bank2/3
 22681  0329  0087               	movwf	7
 22682  032A  1081               	bcf	1,1
 22683  032B  087C               	movf	_DimmerLights22,w
 22684  032C  0086               	movwf	6
 22685  032D  3001               	movlw	1	; select bank2/3
 22686  032E  0087               	movwf	7
 22687  032F  1301               	bcf	1,6
 22688  0330  087C               	movf	_DimmerLights22,w
 22689  0331  3E0C               	addlw	12
 22690  0332  0086               	movwf	6
 22691  0333  3001               	movlw	1	; select bank2/3
 22692  0334  0087               	movwf	7
 22693  0335  1401               	bsf	1,0
 22694  0336  0021               	movlb	1	; select bank1
 22695  0337  083A               	movf	_Dimmer^(0+128),w
 22696  0338  0086               	movwf	6
 22697  0339  0187               	clrf	7
 22698  033A  1581               	bsf	1,3
 22699  033B  0020               	movlb	0	; select bank0
 22700  033C  118C               	bcf	12,3	;volatile
 22701  033D  3002               	movlw	2
 22702  033E  00F5               	movwf	??_TMR0_ISR
 22703  033F  0875               	movf	??_TMR0_ISR,w
 22704  0340  00F2               	movwf	i1setLoad_StatusOff@lights
 22705  0341  01F3               	clrf	i1setLoad_StatusOff@command
 22706  0342  0AF3               	incf	i1setLoad_StatusOff@command,f
 22707  0343  3001               	movlw	1
 22708  0344  3199  211C  3180   	fcall	i1_setLoad_StatusOff
 22709  0347                     i1l8933:	
 22710  0347  0020               	movlb	0	; select bank0
 22711  0348  1F8C               	btfss	12,7	;volatile
 22712  0349  2B7C               	goto	i1l8941
 22713  034A  3001               	movlw	1
 22714  034B  00F5               	movwf	??_TMR0_ISR
 22715  034C  087C               	movf	_DimmerLights22,w
 22716  034D  3E08               	addlw	8
 22717  034E  0086               	movwf	6
 22718  034F  3001               	movlw	1	; select bank2/3
 22719  0350  0087               	movwf	7
 22720  0351  0875               	movf	??_TMR0_ISR,w
 22721  0352  0781               	addwf	1,f
 22722  0353  087C               	movf	_DimmerLights22,w
 22723  0354  3E04               	addlw	4
 22724  0355  0086               	movwf	6
 22725  0356  3001               	movlw	1	; select bank2/3
 22726  0357  0087               	movwf	7
 22727  0358  0801               	movf	1,w
 22728  0359  00F5               	movwf	??_TMR0_ISR
 22729  035A  01F6               	clrf	??_TMR0_ISR+1
 22730  035B  09F5               	comf	??_TMR0_ISR,f
 22731  035C  09F6               	comf	??_TMR0_ISR+1,f
 22732  035D  0AF5               	incf	??_TMR0_ISR,f
 22733  035E  1903               	skipnz
 22734  035F  0AF6               	incf	??_TMR0_ISR+1,f
 22735  0360  0875               	movf	??_TMR0_ISR,w
 22736  0361  3E78               	addlw	120
 22737  0362  00F7               	movwf	??_TMR0_ISR+2
 22738  0363  3000               	movlw	0
 22739  0364  3D76               	addwfc	??_TMR0_ISR+1,w
 22740  0365  00F8               	movwf	??_TMR0_ISR+3
 22741  0366  087C               	movf	_DimmerLights22,w
 22742  0367  3E08               	addlw	8
 22743  0368  0086               	movwf	6
 22744  0369  3001               	movlw	1	; select bank2/3
 22745  036A  0087               	movwf	7
 22746  036B  0878               	movf	??_TMR0_ISR+3,w
 22747  036C  3A80               	xorlw	128
 22748  036D  3C80               	sublw	128
 22749  036E  1D03               	skipz
 22750  036F  2B72               	goto	u813_25
 22751  0370  0877               	movf	??_TMR0_ISR+2,w
 22752  0371  0201               	subwf	1,w
 22753  0372                     u813_25:	
 22754  0372  1C03               	skipc
 22755  0373  2B7C               	goto	i1l8941
 22756  0374  087C               	movf	_DimmerLights22,w
 22757  0375  3E08               	addlw	8
 22758  0376  0086               	movwf	6
 22759  0377  3001               	movlw	1	; select bank2/3
 22760  0378  0087               	movwf	7
 22761  0379  0181               	clrf	1
 22762  037A  0020               	movlb	0	; select bank0
 22763  037B  138C               	bcf	12,7	;volatile
 22764  037C                     i1l8941:	
 22765                           
 22766                           ;MCU_16f1518_B1.c: 113: Timer0->Count++;
 22767  037C  0021               	movlb	1	; select bank1
 22768  037D  0A6E               	incf	_Timer0^(0+128),w
 22769  037E  0086               	movwf	6
 22770  037F  0187               	clrf	7
 22771  0380  3001               	movlw	1
 22772  0381  0781               	addwf	1,f
 22773  0382  3141               	addfsr 1,1
 22774  0383  1803               	skipnc
 22775  0384  0A81               	incf	1,f
 22776                           
 22777                           ;MCU_16f1518_B1.c: 114: if(Timer0->Count == 200)
 22778  0385  0A6E               	incf	_Timer0^(0+128),w
 22779  0386  0086               	movwf	6
 22780  0387  0187               	clrf	7
 22781  0388  3F40               	moviw [0]fsr1
 22782  0389  3AC8               	xorlw	200
 22783  038A  1D03               	skipz
 22784  038B  2B8E               	goto	u814_25
 22785  038C  3F41               	moviw [1]fsr1
 22786  038D  3A00               	xorlw	0
 22787  038E                     u814_25:	
 22788  038E  1D03               	skipz
 22789  038F  2B9B               	goto	i1l1630
 22790                           
 22791                           ;MCU_16f1518_B1.c: 115: {
 22792                           ;MCU_16f1518_B1.c: 116: Timer0->Count=0;
 22793  0390  0A6E               	incf	_Timer0^(0+128),w
 22794  0391  0086               	movwf	6
 22795  0392  0187               	clrf	7
 22796  0393  3000               	movlw	0
 22797  0394  3FC0               	movwi [0]fsr1
 22798  0395  3FC1               	movwi [1]fsr1
 22799                           
 22800                           ;MCU_16f1518_B1.c: 117: TMain->T0_Timerout=1;
 22801  0396  086D               	movf	_TMain^(0+128),w
 22802  0397  0086               	movwf	6
 22803  0398  3001               	movlw	1	; select bank2/3
 22804  0399  0087               	movwf	7
 22805  039A  1481               	bsf	1,1
 22806  039B                     i1l1630:	
 22807                           
 22808                           ;MCU_16f1518_B1.c: 118: }
 22809                           ;MCU_16f1518_B1.c: 121: if(Buz->GO)
 22810  039B  0837               	movf	_Buz^(0+128),w
 22811  039C  0086               	movwf	6
 22812  039D  3001               	movlw	1	; select bank2/3
 22813  039E  0087               	movwf	7
 22814  039F  1C81               	btfss	1,1
 22815  03A0  0008               	return
 22816                           
 22817                           ;MCU_16f1518_B1.c: 122: {
 22818                           ;MCU_16f1518_B1.c: 123: Buz->Time++;
 22819  03A1  0A37               	incf	_Buz^(0+128),w
 22820  03A2  0086               	movwf	6
 22821  03A3  3001               	movlw	1	; select bank2/3
 22822  03A4  0087               	movwf	7
 22823  03A5  3001               	movlw	1
 22824  03A6  0781               	addwf	1,f
 22825  03A7  3141               	addfsr 1,1
 22826  03A8  1803               	skipnc
 22827  03A9  0A81               	incf	1,f
 22828  03AA  0008               	return
 22829  03AB                     __end_of_TMR0_ISR:	
 22830                           
 22831                           	psect	text156
 22832  191C                     __ptext156:	
 22833 ;; *************** function i1_setLoad_StatusOff *****************
 22834 ;; Defined at:
 22835 ;;		line 346 in file "G:\Program\PIC\Source_File\OverLoad_B1.c"
 22836 ;; Parameters:    Size  Location     Type
 22837 ;;  load            1    wreg     unsigned char 
 22838 ;;  lights          1    2[COMMON] unsigned char 
 22839 ;;  command         1    3[COMMON] unsigned char 
 22840 ;; Auto vars:     Size  Location     Type
 22841 ;;  load            1    4[COMMON] unsigned char 
 22842 ;; Return value:  Size  Location     Type
 22843 ;;		None               void
 22844 ;; Registers used:
 22845 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22846 ;; Tracked objects:
 22847 ;;		On entry : 0/0
 22848 ;;		On exit  : 0/0
 22849 ;;		Unchanged: 0/0
 22850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22851 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22852 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22854 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22855 ;;Total ram usage:        3 bytes
 22856 ;; Hardware stack levels used:    1
 22857 ;; Hardware stack levels required when called:    1
 22858 ;; This function calls:
 22859 ;;		i1_LoadPointSelect
 22860 ;; This function is called by:
 22861 ;;		_TMR0_ISR
 22862 ;; This function uses a non-reentrant model
 22863 ;;
 22864                           
 22865                           
 22866                           ;psect for function i1_setLoad_StatusOff
 22867  191C                     i1_setLoad_StatusOff:	
 22868                           
 22869                           ;incstack = 0
 22870                           ; Regs used in i1_setLoad_StatusOff: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 22871                           ;i1setLoad_StatusOff@load stored from wreg
 22872  191C  00F4               	movwf	i1setLoad_StatusOff@load
 22873                           
 22874                           ;OverLoad_B1.c: 348: LoadPointSelect(load);
 22875  191D  0874               	movf	i1setLoad_StatusOff@load,w
 22876  191E  31A2  221E  3199   	fcall	i1_LoadPointSelect
 22877                           
 22878                           ;OverLoad_B1.c: 349: Load->StatusOff=command;
 22879  1921  0020               	movlb	0	; select bank0
 22880  1922  086F               	movf	_Load,w
 22881  1923  3E46               	addlw	70
 22882  1924  0086               	movwf	6
 22883  1925  3002               	movlw	2	; select bank4/5
 22884  1926  0087               	movwf	7
 22885  1927  0873               	movf	i1setLoad_StatusOff@command,w
 22886  1928  1081               	bcf	1,1
 22887  1929  1D03               	skipz
 22888  192A  1481               	bsf	1,1
 22889                           
 22890                           ;OverLoad_B1.c: 351: if(lights == 1)
 22891  192B  0872               	movf	i1setLoad_StatusOff@lights,w
 22892  192C  3A01               	xorlw	1
 22893  192D  1D03               	skipz
 22894  192E  2935               	goto	i1l8535
 22895                           
 22896                           ;OverLoad_B1.c: 352: {
 22897                           ;OverLoad_B1.c: 353: Load->Lights1Status=0;
 22898  192F  086F               	movf	_Load,w
 22899  1930  3E43               	addlw	67
 22900  1931  0086               	movwf	6
 22901  1932  3002               	movlw	2	; select bank4/5
 22902  1933  0087               	movwf	7
 22903  1934  0181               	clrf	1
 22904  1935                     i1l8535:	
 22905                           
 22906                           ;OverLoad_B1.c: 354: }
 22907                           ;OverLoad_B1.c: 355: if(lights == 2)
 22908  1935  0872               	movf	i1setLoad_StatusOff@lights,w
 22909  1936  3A02               	xorlw	2
 22910  1937  1D03               	skipz
 22911  1938  293F               	goto	i1l8539
 22912                           
 22913                           ;OverLoad_B1.c: 356: {
 22914                           ;OverLoad_B1.c: 357: Load->Lights2Status=0;
 22915  1939  086F               	movf	_Load,w
 22916  193A  3E44               	addlw	68
 22917  193B  0086               	movwf	6
 22918  193C  3002               	movlw	2	; select bank4/5
 22919  193D  0087               	movwf	7
 22920  193E  0181               	clrf	1
 22921  193F                     i1l8539:	
 22922                           
 22923                           ;OverLoad_B1.c: 358: }
 22924                           ;OverLoad_B1.c: 359: if(lights == 3)
 22925  193F  0872               	movf	i1setLoad_StatusOff@lights,w
 22926  1940  3A03               	xorlw	3
 22927  1941  1D03               	skipz
 22928  1942  0008               	return
 22929                           
 22930                           ;OverLoad_B1.c: 360: {
 22931                           ;OverLoad_B1.c: 361: Load->Lights3Status=0;
 22932  1943  086F               	movf	_Load,w
 22933  1944  3E45               	addlw	69
 22934  1945  0086               	movwf	6
 22935  1946  3002               	movlw	2	; select bank4/5
 22936  1947  0087               	movwf	7
 22937  1948  0181               	clrf	1
 22938  1949  0008               	return
 22939  194A                     __end_ofi1_setLoad_StatusOff:	
 22940                           
 22941                           	psect	text157
 22942  221E                     __ptext157:	
 22943 ;; *************** function i1_LoadPointSelect *****************
 22944 ;; Defined at:
 22945 ;;		line 7 in file "G:\Program\PIC\Source_File\OverLoad_B1.c"
 22946 ;; Parameters:    Size  Location     Type
 22947 ;;  load            1    wreg     unsigned char 
 22948 ;; Auto vars:     Size  Location     Type
 22949 ;;  load            1    1[COMMON] unsigned char 
 22950 ;; Return value:  Size  Location     Type
 22951 ;;		None               void
 22952 ;; Registers used:
 22953 ;;		wreg
 22954 ;; Tracked objects:
 22955 ;;		On entry : 0/0
 22956 ;;		On exit  : 0/0
 22957 ;;		Unchanged: 0/0
 22958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22960 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22961 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22962 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22963 ;;Total ram usage:        2 bytes
 22964 ;; Hardware stack levels used:    1
 22965 ;; This function calls:
 22966 ;;		Nothing
 22967 ;; This function is called by:
 22968 ;;		i1_setLoad_StatusOff
 22969 ;; This function uses a non-reentrant model
 22970 ;;
 22971                           
 22972                           
 22973                           ;psect for function i1_LoadPointSelect
 22974  221E                     i1_LoadPointSelect:	
 22975                           
 22976                           ;incstack = 0
 22977                           ; Regs used in i1_LoadPointSelect: [wreg]
 22978                           ;i1LoadPointSelect@load stored from wreg
 22979  221E  00F1               	movwf	i1LoadPointSelect@load
 22980                           
 22981                           ;OverLoad_B1.c: 10: if(load == 1)
 22982  221F  0871               	movf	i1LoadPointSelect@load,w
 22983  2220  3A01               	xorlw	1
 22984  2221  1D03               	skipz
 22985  2222  0008               	return
 22986                           
 22987                           ;OverLoad_B1.c: 11: {
 22988                           ;OverLoad_B1.c: 12: Load=&Load1;
 22989  2223  30A0               	movlw	_Load1& (0+255)
 22990  2224  00F0               	movwf	??i1_LoadPointSelect
 22991  2225  0870               	movf	??i1_LoadPointSelect,w
 22992  2226  0020               	movlb	0	; select bank0
 22993  2227  00EF               	movwf	_Load
 22994  2228  0008               	return
 22995  2229                     __end_ofi1_LoadPointSelect:	
 22996                           
 22997                           	psect	text158
 22998  276A                     __ptext158:	
 22999 ;; *************** function _IOC_ISR *****************
 23000 ;; Defined at:
 23001 ;;		line 267 in file "G:\Program\PIC\Source_File\MCU_16f1518_B1.c"
 23002 ;; Parameters:    Size  Location     Type
 23003 ;;		None
 23004 ;; Auto vars:     Size  Location     Type
 23005 ;;		None
 23006 ;; Return value:  Size  Location     Type
 23007 ;;		None               void
 23008 ;; Registers used:
 23009 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23010 ;; Tracked objects:
 23011 ;;		On entry : 0/0
 23012 ;;		On exit  : 0/0
 23013 ;;		Unchanged: 0/0
 23014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 23015 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23016 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23017 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23018 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23019 ;;Total ram usage:        1 bytes
 23020 ;; Hardware stack levels used:    1
 23021 ;; Hardware stack levels required when called:    1
 23022 ;; This function calls:
 23023 ;;		_setDimmerReClock
 23024 ;; This function is called by:
 23025 ;;		_ISR
 23026 ;; This function uses a non-reentrant model
 23027 ;;
 23028                           
 23029                           
 23030                           ;psect for function _IOC_ISR
 23031  276A                     _IOC_ISR:	
 23032                           
 23033                           ;MCU_16f1518_B1.c: 269: if(IOCIE && IOCBF2)
 23034                           
 23035                           ;incstack = 0
 23036                           ; Regs used in _IOC_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 23037  276A  1D8B               	btfss	11,3	;volatile
 23038  276B  0008               	return
 23039  276C  0027               	movlb	7	; select bank7
 23040  276D  1D16               	btfss	22,2	;volatile
 23041  276E  0008               	return
 23042                           
 23043                           ;MCU_16f1518_B1.c: 270: {
 23044                           ;MCU_16f1518_B1.c: 271: IOCBF2=0;
 23045  276F  1116               	bcf	22,2	;volatile
 23046                           
 23047                           ;MCU_16f1518_B1.c: 272: IOCIF=0;
 23048  2770  100B               	bcf	11,0	;volatile
 23049                           
 23050                           ;MCU_16f1518_B1.c: 273: if(TMain->PowerON)
 23051  2771  0021               	movlb	1	; select bank1
 23052  2772  086D               	movf	_TMain^(0+128),w
 23053  2773  0086               	movwf	6
 23054  2774  3001               	movlw	1	; select bank2/3
 23055  2775  0087               	movwf	7
 23056  2776  1C01               	btfss	1,0
 23057  2777  0008               	return
 23058                           
 23059                           ;MCU_16f1518_B1.c: 274: {
 23060                           ;MCU_16f1518_B1.c: 278: setDimmerReClock();
 23061  2778  31A5  25D2  31A7   	fcall	_setDimmerReClock
 23062                           
 23063                           ;MCU_16f1518_B1.c: 279: if(RB2)
 23064  277B  0020               	movlb	0	; select bank0
 23065  277C  1D0D               	btfss	13,2	;volatile
 23066  277D  2F85               	goto	i1l8771
 23067                           
 23068                           ;MCU_16f1518_B1.c: 280: {
 23069                           ;MCU_16f1518_B1.c: 281: Dimmer->Correction=0;
 23070  277E  0021               	movlb	1	; select bank1
 23071  277F  083A               	movf	_Dimmer^(0+128),w
 23072  2780  3E02               	addlw	2
 23073  2781  0086               	movwf	6
 23074  2782  0187               	clrf	7
 23075  2783  0181               	clrf	1
 23076                           
 23077                           ;MCU_16f1518_B1.c: 282: }
 23078  2784  0008               	return
 23079  2785                     i1l8771:	
 23080                           
 23081                           ;MCU_16f1518_B1.c: 283: else
 23082                           ;MCU_16f1518_B1.c: 284: {
 23083                           ;MCU_16f1518_B1.c: 285: Dimmer->Correction=8;
 23084  2785  3008               	movlw	8
 23085  2786  00F0               	movwf	??_IOC_ISR
 23086  2787  0021               	movlb	1	; select bank1
 23087  2788  083A               	movf	_Dimmer^(0+128),w
 23088  2789  3E02               	addlw	2
 23089  278A  0086               	movwf	6
 23090  278B  0187               	clrf	7
 23091  278C  0870               	movf	??_IOC_ISR,w
 23092  278D  0081               	movwf	1
 23093  278E  0008               	return
 23094  278F                     __end_of_IOC_ISR:	
 23095                           
 23096                           	psect	text159
 23097  25D2                     __ptext159:	
 23098 ;; *************** function _setDimmerReClock *****************
 23099 ;; Defined at:
 23100 ;;		line 129 in file "G:\Program\PIC\Source_File\MCU_16f1518_B1.c"
 23101 ;; Parameters:    Size  Location     Type
 23102 ;;		None
 23103 ;; Auto vars:     Size  Location     Type
 23104 ;;		None
 23105 ;; Return value:  Size  Location     Type
 23106 ;;		None               void
 23107 ;; Registers used:
 23108 ;;		wreg, fsr1l, fsr1h
 23109 ;; Tracked objects:
 23110 ;;		On entry : 0/0
 23111 ;;		On exit  : 0/0
 23112 ;;		Unchanged: 0/0
 23113 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 23114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23117 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23118 ;;Total ram usage:        0 bytes
 23119 ;; Hardware stack levels used:    1
 23120 ;; This function calls:
 23121 ;;		Nothing
 23122 ;; This function is called by:
 23123 ;;		_IOC_ISR
 23124 ;; This function uses a non-reentrant model
 23125 ;;
 23126                           
 23127                           
 23128                           ;psect for function _setDimmerReClock
 23129  25D2                     _setDimmerReClock:	
 23130                           
 23131                           ;MCU_16f1518_B1.c: 131: TMR0=255;
 23132                           
 23133                           ;incstack = 0
 23134                           ; Regs used in _setDimmerReClock: [wregfsr1]
 23135  25D2  30FF               	movlw	255
 23136  25D3  0020               	movlb	0	; select bank0
 23137  25D4  0095               	movwf	21	;volatile
 23138                           
 23139                           ;MCU_16f1518_B1.c: 136: if(!DimmerLights11->GO)
 23140  25D5  087B               	movf	_DimmerLights11,w
 23141  25D6  0086               	movwf	6
 23142  25D7  3001               	movlw	1	; select bank2/3
 23143  25D8  0087               	movwf	7
 23144  25D9  1801               	btfsc	1,0
 23145  25DA  2DE0               	goto	i1l1635
 23146                           
 23147                           ;MCU_16f1518_B1.c: 137: {
 23148                           ;MCU_16f1518_B1.c: 138: DimmerLights11->GO=1;
 23149  25DB  087B               	movf	_DimmerLights11,w
 23150  25DC  0086               	movwf	6
 23151  25DD  3001               	movlw	1	; select bank2/3
 23152  25DE  0087               	movwf	7
 23153  25DF  1401               	bsf	1,0
 23154  25E0                     i1l1635:	
 23155                           
 23156                           ;MCU_16f1518_B1.c: 139: }
 23157                           ;MCU_16f1518_B1.c: 158: if(!DimmerLights22->GO)
 23158  25E0  087C               	movf	_DimmerLights22,w
 23159  25E1  0086               	movwf	6
 23160  25E2  3001               	movlw	1	; select bank2/3
 23161  25E3  0087               	movwf	7
 23162  25E4  1801               	btfsc	1,0
 23163  25E5  0008               	return
 23164                           
 23165                           ;MCU_16f1518_B1.c: 159: {
 23166                           ;MCU_16f1518_B1.c: 160: DimmerLights22->GO=1;
 23167  25E6  087C               	movf	_DimmerLights22,w
 23168  25E7  0086               	movwf	6
 23169  25E8  3001               	movlw	1	; select bank2/3
 23170  25E9  0087               	movwf	7
 23171  25EA  1401               	bsf	1,0
 23172  25EB  0008               	return
 23173  25EC                     __end_of_setDimmerReClock:	
 23174                           
 23175                           	psect	text160
 23176  2255                     __ptext160:	
 23177 ;; *************** function _INT_ISR *****************
 23178 ;; Defined at:
 23179 ;;		line 225 in file "G:\Program\PIC\Source_File\MCU_16f1518_B1.c"
 23180 ;; Parameters:    Size  Location     Type
 23181 ;;		None
 23182 ;; Auto vars:     Size  Location     Type
 23183 ;;		None
 23184 ;; Return value:  Size  Location     Type
 23185 ;;		None               void
 23186 ;; Registers used:
 23187 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23188 ;; Tracked objects:
 23189 ;;		On entry : 0/0
 23190 ;;		On exit  : 0/0
 23191 ;;		Unchanged: 0/0
 23192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 23193 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23194 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23196 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23197 ;;Total ram usage:        0 bytes
 23198 ;; Hardware stack levels used:    1
 23199 ;; Hardware stack levels required when called:    2
 23200 ;; This function calls:
 23201 ;;		_setRF_ReceiveGO
 23202 ;; This function is called by:
 23203 ;;		_ISR
 23204 ;; This function uses a non-reentrant model
 23205 ;;
 23206                           
 23207                           
 23208                           ;psect for function _INT_ISR
 23209  2255                     _INT_ISR:	
 23210                           
 23211                           ;MCU_16f1518_B1.c: 227: if(INTE && INTF)
 23212                           
 23213                           ;incstack = 0
 23214                           ; Regs used in _INT_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 23215  2255  1E0B               	btfss	11,4	;volatile
 23216  2256  0008               	return
 23217  2257  1C8B               	btfss	11,1	;volatile
 23218  2258  0008               	return
 23219                           
 23220                           ;MCU_16f1518_B1.c: 228: {
 23221                           ;MCU_16f1518_B1.c: 229: INTF=0;
 23222  2259  108B               	bcf	11,1	;volatile
 23223                           
 23224                           ;MCU_16f1518_B1.c: 230: INTE=0;
 23225  225A  120B               	bcf	11,4	;volatile
 23226                           
 23227                           ;MCU_16f1518_B1.c: 231: setRF_ReceiveGO(1,1);
 23228  225B  01F2               	clrf	setRF_ReceiveGO@command
 23229  225C  0AF2               	incf	setRF_ReceiveGO@command,f
 23230  225D  3001               	movlw	1
 23231  225E  31A2  22CD         	fcall	_setRF_ReceiveGO
 23232  2260  0008               	return
 23233  2261                     __end_of_INT_ISR:	
 23234                           
 23235                           	psect	text161
 23236  22CD                     __ptext161:	
 23237 ;; *************** function _setRF_ReceiveGO *****************
 23238 ;; Defined at:
 23239 ;;		line 37 in file "G:\Program\PIC\Source_File\RF_Control_B1.c"
 23240 ;; Parameters:    Size  Location     Type
 23241 ;;  rf              1    wreg     unsigned char 
 23242 ;;  command         1    2[COMMON] unsigned char 
 23243 ;; Auto vars:     Size  Location     Type
 23244 ;;  rf              1    3[COMMON] unsigned char 
 23245 ;; Return value:  Size  Location     Type
 23246 ;;		None               void
 23247 ;; Registers used:
 23248 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23249 ;; Tracked objects:
 23250 ;;		On entry : 0/0
 23251 ;;		On exit  : 0/0
 23252 ;;		Unchanged: 0/0
 23253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 23254 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23255 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23257 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23258 ;;Total ram usage:        2 bytes
 23259 ;; Hardware stack levels used:    1
 23260 ;; Hardware stack levels required when called:    1
 23261 ;; This function calls:
 23262 ;;		i1_RfPointSelect
 23263 ;; This function is called by:
 23264 ;;		_INT_ISR
 23265 ;; This function uses a non-reentrant model
 23266 ;;
 23267                           
 23268                           
 23269                           ;psect for function _setRF_ReceiveGO
 23270  22CD                     _setRF_ReceiveGO:	
 23271                           
 23272                           ;incstack = 0
 23273                           ; Regs used in _setRF_ReceiveGO: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 23274                           ;setRF_ReceiveGO@rf stored from wreg
 23275  22CD  00F3               	movwf	setRF_ReceiveGO@rf
 23276                           
 23277                           ;RF_Control_B1.c: 39: RfPointSelect(rf);
 23278  22CE  0873               	movf	setRF_ReceiveGO@rf,w
 23279  22CF  31A2  2213         	fcall	i1_RfPointSelect
 23280                           
 23281                           ;RF_Control_B1.c: 40: RF->ReceiveGO=command;
 23282  22D1  0021               	movlb	1	; select bank1
 23283  22D2  083E               	movf	_RF^(0+128),w
 23284  22D3  0086               	movwf	6
 23285  22D4  0187               	clrf	7
 23286  22D5  0872               	movf	setRF_ReceiveGO@command,w
 23287  22D6  1081               	bcf	1,1
 23288  22D7  1D03               	skipz
 23289  22D8  1481               	bsf	1,1
 23290  22D9  0008               	return
 23291  22DA                     __end_of_setRF_ReceiveGO:	
 23292                           
 23293                           	psect	text162
 23294  2213                     __ptext162:	
 23295 ;; *************** function i1_RfPointSelect *****************
 23296 ;; Defined at:
 23297 ;;		line 7 in file "G:\Program\PIC\Source_File\RF_Control_B1.c"
 23298 ;; Parameters:    Size  Location     Type
 23299 ;;  rf              1    wreg     unsigned char 
 23300 ;; Auto vars:     Size  Location     Type
 23301 ;;  rf              1    1[COMMON] unsigned char 
 23302 ;; Return value:  Size  Location     Type
 23303 ;;		None               void
 23304 ;; Registers used:
 23305 ;;		wreg
 23306 ;; Tracked objects:
 23307 ;;		On entry : 0/0
 23308 ;;		On exit  : 0/0
 23309 ;;		Unchanged: 0/0
 23310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 23311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23312 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23313 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23314 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23315 ;;Total ram usage:        2 bytes
 23316 ;; Hardware stack levels used:    1
 23317 ;; This function calls:
 23318 ;;		Nothing
 23319 ;; This function is called by:
 23320 ;;		_setRF_ReceiveGO
 23321 ;; This function uses a non-reentrant model
 23322 ;;
 23323                           
 23324                           
 23325                           ;psect for function i1_RfPointSelect
 23326  2213                     i1_RfPointSelect:	
 23327                           
 23328                           ;incstack = 0
 23329                           ; Regs used in i1_RfPointSelect: [wreg]
 23330                           ;i1RfPointSelect@rf stored from wreg
 23331  2213  00F1               	movwf	i1RfPointSelect@rf
 23332                           
 23333                           ;RF_Control_B1.c: 10: if(rf == 1)
 23334  2214  0871               	movf	i1RfPointSelect@rf,w
 23335  2215  3A01               	xorlw	1
 23336  2216  1D03               	skipz
 23337  2217  0008               	return
 23338                           
 23339                           ;RF_Control_B1.c: 11: {
 23340                           ;RF_Control_B1.c: 12: RF=&RF1;
 23341  2218  30E7               	movlw	_RF1& (0+255)
 23342  2219  00F0               	movwf	??i1_RfPointSelect
 23343  221A  0870               	movf	??i1_RfPointSelect,w
 23344  221B  0021               	movlb	1	; select bank1
 23345  221C  00BE               	movwf	_RF^(0+128)
 23346  221D  0008               	return
 23347  221E                     __end_ofi1_RfPointSelect:	
 23348  007E                     btemp	set	126	;btemp
 23349  007E                     pic14e$flags	set	126
 23350  007E                     wtemp	set	126
 23351  007E                     wtemp0	set	126
 23352  0080                     wtemp1	set	128
 23353  0082                     wtemp2	set	130
 23354  0084                     wtemp3	set	132
 23355  0086                     wtemp4	set	134
 23356  0088                     wtemp5	set	136
 23357  007F                     wtemp6	set	127
 23358  007E                     ttemp	set	126
 23359  007E                     ttemp0	set	126
 23360  0081                     ttemp1	set	129
 23361  0084                     ttemp2	set	132
 23362  0087                     ttemp3	set	135
 23363  007F                     ttemp4	set	127
 23364  007E                     ltemp	set	126
 23365  007E                     ltemp0	set	126
 23366  0082                     ltemp1	set	130
 23367  0086                     ltemp2	set	134
 23368  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    102
    Data        67
    BSS         246
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      14
    BANK0            80     77      80
    BANK1            80      0      79
    BANK2            80      0      78
    BANK3            80      0      46
    BANK4            80      0      37
    BANK5            80      0      71
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    DimmerLightsIntr	PTR struct DimmerLights size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    Sw	PTR struct Switch size(1) Largest target is 9
		 -> NULL(NULL[0]), Sw2(BANK2[9]), Sw1(BANK2[9]), 

    RFSW	PTR struct RFSW size(1) Largest target is 1
		 -> NULL(NULL[0]), RFSW2(BANK1[1]), RFSW1(BANK1[1]), 

    RF	PTR struct RF size(1) Largest target is 2
		 -> NULL(NULL[0]), RF1(BANK1[2]), 

    PF	PTR struct PF size(1) Largest target is 8
		 -> NULL(NULL[0]), PF1(BANK2[8]), 

    Temp	PTR struct OverTemp size(1) Largest target is 14
		 -> NULL(NULL[0]), Temp1(BANK2[14]), 

    Load	PTR struct OverLoad size(1) Largest target is 71
		 -> NULL(NULL[0]), Load1(BANK5[71]), 

    Timer0	PTR struct Timer0 size(1) Largest target is 7
		 -> NULL(NULL[0]), VarTimer0(BANK1[7]), 

    LED	PTR struct LED size(1) Largest target is 4
		 -> NULL(NULL[0]), VarErrLED(BANK1[4]), VarLED2(BANK1[4]), VarLED1(BANK1[4]), 

    TMain	PTR struct TMain size(1) Largest target is 16
		 -> NULL(NULL[0]), VarTMain(BANK3[16]), 

    Dimmer	PTR struct Dimmer size(1) Largest target is 3
		 -> NULL(NULL[0]), Dimmer1(BANK1[3]), 

    Memory	PTR struct FlashMemory size(1) Largest target is 37
		 -> NULL(NULL[0]), VarMemory(BANK4[37]), 

    DimmerLights22	PTR struct DimmerLights size(1) Largest target is 13
		 -> NULL(NULL[0]), DimmerLights2(BANK2[13]), 

    DimmerLights11	PTR struct DimmerLights size(1) Largest target is 13
		 -> NULL(NULL[0]), DimmerLights1(BANK2[13]), 

    DimmerLights	PTR struct DimmerLights size(1) Largest target is 13
		 -> NULL(NULL[0]), DimmerLights2(BANK2[13]), DimmerLights1(BANK2[13]), 

    Product	PTR struct Product size(1) Largest target is 30
		 -> NULL(NULL[0]), VarProduct(BANK3[30]), 

    DelayOff	PTR struct DelayOff size(1) Largest target is 5
		 -> NULL(NULL[0]), DlySw2(BANK1[5]), DlySw1(BANK1[5]), 

    Buz	PTR struct Buzzer size(1) Largest target is 12
		 -> NULL(NULL[0]), Buz1(BANK2[12]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_TMR0_ISR
    _TMR0_ISR->i1_setLoad_StatusOff
    i1_setLoad_StatusOff->i1_LoadPointSelect
    _INT_ISR->_setRF_ReceiveGO
    _setRF_ReceiveGO->i1_RfPointSelect

Critical Paths under _main in BANK0

    _getTemp_AD->_getAD
    _getPowerFault_AD->_getAD
    _getLoad_AD->_getAD
    _Temp_Main->_setTemp_Main
    _setTemp_Main->_setOverTemp_ERROR
    _setOverTemp_ERROR->_DimmerLights_ERROR
    _setDimmer_TempERROR->_DimmerPointSelect
    _Temp_Initialization->_setTemp_Initialization
    _setTemp_Initialization->_TempPointSelect
    _Switch_Main->_setSw_Main
    _setSw_Main->_setBuz
    _setRF_Learn->_RfPointSelect
    _Sw_DimmerOnFunc->_setTxData
    _Sw_DimmerOffFunc->_setDelayOff_GO
    _Sw_DimmerAdjFunc->_setDimmerLights_AdjGo
    _Sw_DimmerAdjFunc->_setDimmerLights_TriggerAdj
    _Sw_DimmerAdjFunc->_setRFSW_Status
    _setDimmerLights_TriggerAdj->_DimmerLightsPointSelect
    _setDimmerLights_AdjGo->_DimmerLightsPointSelect
    _Switch_Initialization->_setSw_Initialization
    _setSw_Initialization->_setLED
    _RF_Main->_setRF_Main
    _setRF_Main->_getRxData
    _getRxData->_setControl_Lights_Table
    _setLog_Code->_setBuz
    _setControl_Lights_Table->_setRFSW_AdjControl
    _setRFSW_Control->_setBuz
    _setDelayOff_GO->_DelayTimejudge
    _setRFSW_AdjControl->_setRF_DimmerValue
    _setRF_DimmerValue->_setDimmerLights_AdjRF
    _setDimmerLights_AdjRF->_getPercentValue
    _CC2500_TxData->_CC2500_WriteCommand
    _CC2500_RxData->_CC2500_ReadStatus
    _CC2500_RxData->_CC2500_WriteCommand
    _CC2500_RxData->_setRF_RxStatus
    _setRF_RxStatus->_RfPointSelect
    _CC2500_ReadStatus->_CC2500_ReadByte
    _CC2500_ReadStatus->_CC2500_WriteByte
    _RF_Initialization->_setRF_Initialization
    _PowerFault_Main->_setPowerFault_Main
    _setPowerFault_Main->_setPowerFault_ERROR
    _setPowerFault_ERROR->_DimmerLights_ERROR
    _setDimmer_PFERROR->_DimmerPointSelect
    _getLoad_Safe->_LoadPointSelect
    _PowerFault_Initialization->_setPowerFault_Initialization
    _setPowerFault_Initialization->_PowerFaultPointSelect
    _Mcu_Initialization->_TMR0_Set
    _MainT->_setBuz
    _setTemp_Enable->_TempPointSelect
    _setLoad_Enable->_LoadPointSelect
    _Load_Main->_setLoad_Main
    _setLoad_Main->_setLoad_ERROR
    _setLoad_ERROR->_DimmerLights_ERROR
    _setSw_Enable->_SwPointSelect
    _setRF_Enable->_RF_RxDisable
    _RF_RxDisable->_CC2500_WriteCommand
    _setDimmer_LoadERROR->_DimmerPointSelect
    _DimmerLights_ERROR->_setBuz
    _setDimmerLights_TriggerERROR->_DimmerLightsPointSelect
    _setDimmerLights_ERROR->_setLoad_StatusOff
    _getDimmer_TempERROR->_DimmerPointSelect
    _getDimmer_PFERROR->_DimmerPointSelect
    _getDimmer_LoadERROR->_DimmerPointSelect
    _setDimmerLights_Clear->_DimmerLightsPointSelect
    _getTemp_Safe->_TempPointSelect
    _getPF_Safe->_PowerFaultPointSelect
    _Load_Initialization->_setLoad_Initialization
    _setLoad_Initialization->_LoadPointSelect
    _setLoad_Initialization->_setLoad_AH_AL_Restore
    _LED_Main->_setLED_Main
    _setLED_Main->_LedPointSelect
    _LED_Initialization->_setLED_Initialization
    _setLED_Initialization->_setLED
    _Flash_Memory_Main->_Flash_Memory_Modify
    _Flash_Memory_Modify->_Flash_Memory_Read
    _Flash_Memory_Initialization->_setPercentValue
    _DimmerLights_Main->_setDimmerLights_Main
    _setDimmerLights_Main->_setDimmerLights_Adj
    _setDimmerLights_Adj->_setPercentValue
    _setPercentValue->___fttol
    _setLoad_StatusOff->_LoadPointSelect
    _setDimmerLights->_setLoad_LightsStatus
    _setLoad_StatusOn->_LoadPointSelect
    _setLoad_LightsStatus->_LoadPointSelect
    _setLED->_LedPointSelect
    _getDimmerLights_Trigger->_DimmerLightsPointSelect
    _DimmerLights_Close->_getDimmerLights_StatusFlag
    _setLoad_GO->_LoadPointSelect
    _setDimmer_Detect->_DimmerPointSelect
    _getDimmer_Detect->_DimmerPointSelect
    _getDimmerLights_StatusFlag->_DimmerLightsPointSelect
    _DimmerLights_Initialization->_setDimmerLights_Initialization
    _setDimmerLights_Initialization->_getPercentValue
    _getPercentValue->___fttol
    ___fttol->___ftadd
    ___ftmul->___awtoft
    ___ftdiv->___awtoft
    ___ftadd->___ftmul
    ___awtoft->___ftpack
    _DelayOff_Main->_DlyOff_Main
    _DlyOff_Main->_setBuz
    _setTxData->_RfPointSelect
    _setSw_Status->_SwPointSelect
    _setRFSW_Status->_RfSWPointSelect
    _setDimmerLights_Trigger->_DimmerLightsPointSelect
    _setDimmerLights_Switch->_DimmerLightsPointSelect
    _setBuz->___wmul
    _DelayOff_Initialization->_DlyOff_Initialization
    _DlyOff_Initialization->_DelayOffPointSelect
    _CC2500_PowerOnInitial->_CC2500_InitSetREG
    _CC2500_SIDLEMode->_CC2500_WriteCommand
    _CC2500_PowerRST->_DelayTime_1us
    _CC2500_InitSetREG->_CC2500_WriteREG
    _CC2500_InitPATable->_CC2500_WriteREG
    _CC2500_WriteREG->_CC2500_WriteByte
    _CC2500_FrequencyCabr->_DelayTime_1us
    _CC2500_ClearTXFIFO->_CC2500_WriteCommand
    _CC2500_ClearRXFIFO->_CC2500_WriteCommand
    _CC2500_WriteCommand->_CC2500_WriteByte
    _Buzzer_Main->_setBuz_Main
    _setBuz_Main->_BuzPointSelect
    _setBuz_Initialization->_setBuz_Enable
    _setBuz_Enable->_BuzPointSelect

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0  104750
                                             76 BANK0      1     1      0
              _Buzzer_Initialization
                        _Buzzer_Main
              _CC2500_PowerOnInitial
            _DelayOff_Initialization
                      _DelayOff_Main
        _DimmerLights_Initialization
                  _DimmerLights_Main
        _Flash_Memory_Initialization
                  _Flash_Memory_Main
                 _LED_Initialization
                           _LED_Main
                _Load_Initialization
                          _Load_Main
                              _MainT
               _MainT_Initialization
                 _Mcu_Initialization
          _PowerFault_Initialization
                    _PowerFault_Main
                  _RF_Initialization
                            _RF_Main
              _Switch_Initialization
                        _Switch_Main
                _Temp_Initialization
                          _Temp_Main
                         _getLoad_AD
                   _getPowerFault_AD
                         _getTemp_AD
 ---------------------------------------------------------------------------------
 (1) _getTemp_AD                                           6     5      1     344
                                              4 BANK0      6     5      1
                    _TempPointSelect
                              _getAD
 ---------------------------------------------------------------------------------
 (1) _getPowerFault_AD                                     6     5      1     344
                                              4 BANK0      6     5      1
              _PowerFaultPointSelect
                              _getAD
 ---------------------------------------------------------------------------------
 (1) _getLoad_AD                                           9     8      1     571
                                              4 BANK0      9     8      1
                    _LoadPointSelect
                              _getAD
 ---------------------------------------------------------------------------------
 (2) _getAD                                                4     1      3     236
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (1) _Temp_Main                                            0     0      0    8434
                       _setTemp_Main
 ---------------------------------------------------------------------------------
 (2) _setTemp_Main                                         4     4      0    8434
                                             15 BANK0      4     4      0
                    _TempPointSelect
                       _getLoad_Safe
                         _getPF_Safe
                  _setOverTemp_ERROR
 ---------------------------------------------------------------------------------
 (3) _setOverTemp_ERROR                                    3     2      1    8346
                                             12 BANK0      3     2      1
                 _DimmerLights_ERROR
                    _TempPointSelect
                _setDimmer_TempERROR
                             _setLED
                       _setRF_Enable
                       _setSw_Enable
 ---------------------------------------------------------------------------------
 (4) _setDimmer_TempERROR                                  2     1      1     194
                                              2 BANK0      2     1      1
                  _DimmerPointSelect
 ---------------------------------------------------------------------------------
 (1) _Temp_Initialization                                  0     0      0      22
             _setTemp_Initialization
 ---------------------------------------------------------------------------------
 (2) _setTemp_Initialization                               1     1      0      22
                                              1 BANK0      1     1      0
                    _TempPointSelect
 ---------------------------------------------------------------------------------
 (1) _Switch_Main                                          0     0      0    8576
                         _setSw_Main
 ---------------------------------------------------------------------------------
 (2) _setSw_Main                                           5     5      0    8576
                                             11 BANK0      5     5      0
                      _SwPointSelect
                   _Sw_DimmerAdjFunc
                   _Sw_DimmerOffFunc
                    _Sw_DimmerOnFunc
                             _setBuz
                        _setRF_Learn
 ---------------------------------------------------------------------------------
 (3) _setRF_Learn                                          2     1      1     258
                                              2 BANK0      2     1      1
                      _RfPointSelect
 ---------------------------------------------------------------------------------
 (3) _Sw_DimmerOnFunc                                      1     1      0    2264
                                              6 BANK0      1     1      0
             _setDimmerLights_Switch
            _setDimmerLights_Trigger
                     _setRFSW_Status
                 _setRF_DimmerLights
                          _setTxData
 ---------------------------------------------------------------------------------
 (3) _Sw_DimmerOffFunc                                     3     3      0    2947
                                              7 BANK0      3     3      0
                     _setDelayOff_GO
              _setDimmerLights_AdjGo
             _setDimmerLights_Switch
            _setDimmerLights_Trigger
         _setDimmerLights_TriggerAdj
                 _setRF_DimmerLights
                          _setTxData
 ---------------------------------------------------------------------------------
 (3) _Sw_DimmerAdjFunc                                     1     1      0    1034
                                              4 BANK0      1     1      0
              _setDimmerLights_AdjGo
         _setDimmerLights_TriggerAdj
                     _setRFSW_Status
 ---------------------------------------------------------------------------------
 (4) _setDimmerLights_TriggerAdj                           2     1      1     216
                                              2 BANK0      2     1      1
            _DimmerLightsPointSelect
 ---------------------------------------------------------------------------------
 (4) _setDimmerLights_AdjGo                                2     1      1     216
                                              2 BANK0      2     1      1
            _DimmerLightsPointSelect
 ---------------------------------------------------------------------------------
 (1) _Switch_Initialization                                0     0      0    1100
                         _TouchPower
               _setSw_Initialization
 ---------------------------------------------------------------------------------
 (2) _setSw_Initialization                                 1     1      0    1100
                                              4 BANK0      1     1      0
                             _setLED
 ---------------------------------------------------------------------------------
 (2) _TouchPower                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RF_Main                                              0     0      0   24727
                         _setRF_Main
 ---------------------------------------------------------------------------------
 (2) _setRF_Main                                           3     3      0   24727
                                             73 BANK0      3     3      0
                      _CC2500_RxData
                      _CC2500_TxData
                _CC2500_WriteCommand
                       _RF_RxDisable
                      _RfPointSelect
                          _getRxData
                          _setINT_GO
 ---------------------------------------------------------------------------------
 (3) _getRxData                                            2     2      0   23825
                                             72 BANK0      1     1      0
                      _RfPointSelect
            _setControl_Lights_Table
                        _setLog_Code
 ---------------------------------------------------------------------------------
 (4) _setLog_Code                                          2     2      0    1893
                                             11 BANK0      2     2      0
                      _RfPointSelect
                             _setBuz
 ---------------------------------------------------------------------------------
 (4) _setControl_Lights_Table                              1     1      0   21888
                                             71 BANK0      1     1      0
                      _RfPointSelect
                             _setBuz
                    _setDimmerLights
                 _setRFSW_AdjControl
                    _setRFSW_Control
                     _setRFSW_Status
                       _setSw_Status
                          _setTxData
 ---------------------------------------------------------------------------------
 (5) _setRFSW_Control                                      3     3      0    4990
                                             11 BANK0      3     3      0
                    _RfSWPointSelect
                             _setBuz
                     _setDelayOff_GO
             _setDimmerLights_Switch
            _setDimmerLights_Trigger
                 _setRF_DimmerLights
                       _setSw_Status
                          _setTxData
 ---------------------------------------------------------------------------------
 (4) _setDelayOff_GO                                       4     2      2     721
                                              3 BANK0      4     2      2
                _DelayOffPointSelect
                     _DelayTimejudge
 ---------------------------------------------------------------------------------
 (5) _DelayTimejudge                                       3     3      0     161
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (5) _setRFSW_AdjControl                                   3     3      0   11445
                                             68 BANK0      3     3      0
                    _RfSWPointSelect
                  _setRF_DimmerValue
                          _setTxData
 ---------------------------------------------------------------------------------
 (6) _setRF_DimmerValue                                    3     3      0   11179
                                             65 BANK0      3     3      0
              _setDimmerLights_AdjRF
 ---------------------------------------------------------------------------------
 (7) _setDimmerLights_AdjRF                                2     2      0   11113
                                             63 BANK0      2     2      0
            _DimmerLightsPointSelect
                    _getPercentValue
 ---------------------------------------------------------------------------------
 (3) _CC2500_TxData                                        2     2      0     160
                                              4 BANK0      2     2      0
                   _CC2500_WriteByte
                _CC2500_WriteCommand
 ---------------------------------------------------------------------------------
 (3) _CC2500_RxData                                        2     2      0     450
                                              4 BANK0      2     2      0
                    _CC2500_ReadByte
                  _CC2500_ReadStatus
                   _CC2500_WriteByte
                _CC2500_WriteCommand
                     _setRF_RxStatus
 ---------------------------------------------------------------------------------
 (4) _setRF_RxStatus                                       2     1      1     130
                                              2 BANK0      2     1      1
                      _RfPointSelect
 ---------------------------------------------------------------------------------
 (4) _CC2500_ReadStatus                                    2     2      0     114
                                              2 BANK0      2     2      0
                    _CC2500_ReadByte
                   _CC2500_WriteByte
 ---------------------------------------------------------------------------------
 (5) _CC2500_ReadByte                                      2     2      0      46
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _RF_Initialization                                    0     0      0       0
               _setRF_Initialization
 ---------------------------------------------------------------------------------
 (2) _setRF_Initialization                                 2     2      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _PowerFault_Main                                      0     0      0    8412
                 _setPowerFault_Main
 ---------------------------------------------------------------------------------
 (2) _setPowerFault_Main                                   3     3      0    8412
                                             15 BANK0      3     3      0
              _PowerFaultPointSelect
                       _getLoad_Safe
                       _getTemp_Safe
                _setPowerFault_ERROR
 ---------------------------------------------------------------------------------
 (3) _setPowerFault_ERROR                                  3     2      1    8324
                                             12 BANK0      3     2      1
                 _DimmerLights_ERROR
              _PowerFaultPointSelect
                  _setDimmer_PFERROR
                             _setLED
                       _setRF_Enable
                       _setSw_Enable
 ---------------------------------------------------------------------------------
 (4) _setDimmer_PFERROR                                    2     1      1     194
                                              2 BANK0      2     1      1
                  _DimmerPointSelect
 ---------------------------------------------------------------------------------
 (3) _getLoad_Safe                                         2     2      0      44
                                              2 BANK0      2     2      0
                    _LoadPointSelect
 ---------------------------------------------------------------------------------
 (1) _PowerFault_Initialization                            0     0      0      22
       _setPowerFault_Initialization
 ---------------------------------------------------------------------------------
 (2) _setPowerFault_Initialization                         1     1      0      22
                                              1 BANK0      1     1      0
              _PowerFaultPointSelect
 ---------------------------------------------------------------------------------
 (1) _Mcu_Initialization                                   1     1      0       0
                                              1 BANK0      1     1      0
                            _ADC_Set
                            _INT_Set
                            _IOC_Set
                             _IO_Set
                           _TMR0_Set
 ---------------------------------------------------------------------------------
 (2) _TMR0_Set                                             1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _IO_Set                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _IOC_Set                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INT_Set                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Set                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MainT_Initialization                                 1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _MainT                                                1     1      0    4865
                                             11 BANK0      1     1      0
                             _setBuz
                             _setLED
                     _setLoad_Enable
                       _setRF_Enable
                       _setSw_Enable
                     _setTemp_Enable
 ---------------------------------------------------------------------------------
 (2) _setTemp_Enable                                       2     1      1     108
                                              1 BANK0      2     1      1
                    _TempPointSelect
 ---------------------------------------------------------------------------------
 (2) _setLoad_Enable                                       2     1      1     130
                                              2 BANK0      2     1      1
                    _LoadPointSelect
 ---------------------------------------------------------------------------------
 (1) _Load_Main                                            0     0      0    9850
                       _setLoad_Main
 ---------------------------------------------------------------------------------
 (2) _setLoad_Main                                         6     6      0    9850
                                             15 BANK0      5     5      0
                    _LoadPointSelect
                            ___lwdiv
                             ___wmul
                         _getPF_Safe
                       _getTemp_Safe
              _setDimmerLights_Clear
              _setLoad_AH_AL_Restore
                      _setLoad_ERROR
 ---------------------------------------------------------------------------------
 (3) _setLoad_ERROR                                        3     2      1    8368
                                             12 BANK0      3     2      1
                 _DimmerLights_ERROR
                    _LoadPointSelect
                _setDimmer_LoadERROR
                             _setLED
                       _setRF_Enable
                       _setSw_Enable
 ---------------------------------------------------------------------------------
 (4) _setSw_Enable                                         2     1      1     984
                                              2 BANK0      2     1      1
                      _SwPointSelect
 ---------------------------------------------------------------------------------
 (4) _setRF_Enable                                         2     1      1     716
                                              5 BANK0      2     1      1
                _CC2500_WriteCommand
                       _RF_RxDisable
                      _RfPointSelect
 ---------------------------------------------------------------------------------
 (5) _RF_RxDisable                                         1     1      0     134
                                              4 BANK0      1     1      0
                _CC2500_WriteCommand
                      _RfPointSelect
                          _setINT_GO
 ---------------------------------------------------------------------------------
 (6) _setINT_GO                                            1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _setDimmer_LoadERROR                                  2     1      1     194
                                              2 BANK0      2     1      1
                  _DimmerPointSelect
 ---------------------------------------------------------------------------------
 (4) _DimmerLights_ERROR                                   1     1      0    5180
                                             11 BANK0      1     1      0
         _getDimmerLights_StatusFlag
                _getDimmer_LoadERROR
                  _getDimmer_PFERROR
                _getDimmer_TempERROR
                             _setBuz
              _setDimmerLights_ERROR
       _setDimmerLights_TriggerERROR
 ---------------------------------------------------------------------------------
 (5) _setDimmerLights_TriggerERROR                         2     1      1     282
                                              2 BANK0      2     1      1
            _DimmerLightsPointSelect
 ---------------------------------------------------------------------------------
 (5) _setDimmerLights_ERROR                                2     2      0    2780
                                              5 BANK0      2     2      0
            _DimmerLightsPointSelect
                             _setLED
                  _setLoad_StatusOff
                     _setRFSW_Status
                       _setSw_Status
 ---------------------------------------------------------------------------------
 (5) _getDimmer_TempERROR                                  1     1      0      44
                                              2 BANK0      1     1      0
                  _DimmerPointSelect
 ---------------------------------------------------------------------------------
 (5) _getDimmer_PFERROR                                    1     1      0      44
                                              2 BANK0      1     1      0
                  _DimmerPointSelect
 ---------------------------------------------------------------------------------
 (5) _getDimmer_LoadERROR                                  1     1      0      44
                                              2 BANK0      1     1      0
                  _DimmerPointSelect
 ---------------------------------------------------------------------------------
 (3) _setDimmerLights_Clear                                2     1      1     344
                                              2 BANK0      2     1      1
            _DimmerLightsPointSelect
 ---------------------------------------------------------------------------------
 (3) _getTemp_Safe                                         1     1      0      22
                                              1 BANK0      1     1      0
                    _TempPointSelect
 ---------------------------------------------------------------------------------
 (2) _TempPointSelect                                      2     2      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _getPF_Safe                                           1     1      0      22
                                              1 BANK0      1     1      0
              _PowerFaultPointSelect
 ---------------------------------------------------------------------------------
 (2) _PowerFaultPointSelect                                2     2      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     418
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _Load_Initialization                                  0     0      0     156
             _setLoad_Initialization
 ---------------------------------------------------------------------------------
 (2) _setLoad_Initialization                               1     1      0     156
                                              2 BANK0      1     1      0
                    _LoadPointSelect
              _setLoad_AH_AL_Restore
 ---------------------------------------------------------------------------------
 (3) _setLoad_AH_AL_Restore                                3     3      0      90
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _LED_Main                                             0     0      0     154
                        _setLED_Main
 ---------------------------------------------------------------------------------
 (2) _setLED_Main                                          3     3      0     154
                                              2 BANK0      3     3      0
                     _LedPointSelect
 ---------------------------------------------------------------------------------
 (1) _LED_Initialization                                   0     0      0    1188
              _setLED_Initialization
 ---------------------------------------------------------------------------------
 (2) _setLED_Initialization                                1     1      0    1188
                                              4 BANK0      1     1      0
                     _LedPointSelect
                             _setLED
 ---------------------------------------------------------------------------------
 (1) _Flash_Memory_Main                                    0     0      0     227
                _Flash_Memory_Modify
 ---------------------------------------------------------------------------------
 (2) _Flash_Memory_Modify                                  3     3      0     227
                                              4 BANK0      3     3      0
               _Flash_Memory_Erasing
                  _Flash_Memory_Read
                 _Flash_Memory_Write
 ---------------------------------------------------------------------------------
 (3) _Flash_Memory_Erasing                                 0     0      0       0
                _Flash_Memory_Unlock
 ---------------------------------------------------------------------------------
 (1) _Flash_Memory_Initialization                          2     2      0    5764
                                             61 BANK0      2     2      0
                  _Flash_Memory_Read
                 _Flash_Memory_Write
                    _setPercentValue
 ---------------------------------------------------------------------------------
 (3) _Flash_Memory_Write                                   2     2      0      90
                                              0 BANK0      2     2      0
                _Flash_Memory_Unlock
 ---------------------------------------------------------------------------------
 (4) _Flash_Memory_Unlock                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Flash_Memory_Read                                    4     4      0      47
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _DimmerLights_Main                                    0     0      0   12247
                 _DimmerLights_Close
               _setDimmerLights_Main
 ---------------------------------------------------------------------------------
 (2) _setDimmerLights_Main                                 2     2      0   11678
                                             65 BANK0      2     2      0
            _DimmerLightsPointSelect
            _getDimmerLights_Trigger
                             _setBuz
                    _setDimmerLights
                _setDimmerLights_Adj
 ---------------------------------------------------------------------------------
 (3) _setDimmerLights_Adj                                  4     3      1    7029
                                             61 BANK0      4     3      1
            _DimmerLightsPointSelect
                  _setLoad_StatusOff
                    _setPercentValue
                 _setRF_DimmerLights
                          _setTxData
 ---------------------------------------------------------------------------------
 (2) _setPercentValue                                      4     4      0    5427
                                             57 BANK0      4     4      0
                           ___awtoft
                            ___ftdiv
                            ___fttol
 ---------------------------------------------------------------------------------
 (6) _setLoad_StatusOff                                    3     1      2     540
                                              2 BANK0      3     1      2
                    _LoadPointSelect
 ---------------------------------------------------------------------------------
 (5) _setDimmerLights                                      3     2      1    2418
                                              6 BANK0      3     2      1
            _DimmerLightsPointSelect
                   _setDimmer_Detect
                             _setLED
                      _setLoad_Count
                         _setLoad_GO
               _setLoad_LightsStatus
                   _setLoad_StatusOn
 ---------------------------------------------------------------------------------
 (6) _setLoad_StatusOn                                     2     1      1     130
                                              2 BANK0      2     1      1
                    _LoadPointSelect
 ---------------------------------------------------------------------------------
 (6) _setLoad_LightsStatus                                 4     2      2     304
                                              2 BANK0      4     2      2
                    _LoadPointSelect
 ---------------------------------------------------------------------------------
 (6) _setLoad_Count                                        3     2      1     108
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (4) _setLED                                               2     1      1    1078
                                              2 BANK0      2     1      1
                     _LedPointSelect
 ---------------------------------------------------------------------------------
 (5) _LedPointSelect                                       2     2      0      66
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _getDimmerLights_Trigger                              4     4      0     137
                                              2 BANK0      4     4      0
            _DimmerLightsPointSelect
 ---------------------------------------------------------------------------------
 (2) _DimmerLights_Close                                   0     0      0     569
         _getDimmerLights_StatusFlag
                   _getDimmer_Detect
                   _setDimmer_Detect
                         _setLoad_GO
 ---------------------------------------------------------------------------------
 (6) _setLoad_GO                                           2     1      1     194
                                              2 BANK0      2     1      1
                    _LoadPointSelect
 ---------------------------------------------------------------------------------
 (2) _LoadPointSelect                                      2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (6) _setDimmer_Detect                                     2     1      1     194
                                              2 BANK0      2     1      1
                  _DimmerPointSelect
 ---------------------------------------------------------------------------------
 (3) _getDimmer_Detect                                     2     2      0      44
                                              2 BANK0      2     2      0
                  _DimmerPointSelect
 ---------------------------------------------------------------------------------
 (5) _DimmerPointSelect                                    2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (5) _getDimmerLights_StatusFlag                           4     4      0     137
                                              2 BANK0      4     4      0
            _DimmerLightsPointSelect
 ---------------------------------------------------------------------------------
 (1) _DimmerLights_Initialization                          1     1      0   11135
                                             66 BANK0      1     1      0
     _setDimmerLights_Initialization
 ---------------------------------------------------------------------------------
 (2) _setDimmerLights_Initialization                       3     3      0   11135
                                             63 BANK0      3     3      0
            _DimmerLightsPointSelect
                    _getPercentValue
 ---------------------------------------------------------------------------------
 (8) _getPercentValue                                      6     6      0   11047
                                             57 BANK0      6     6      0
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___fttol
 ---------------------------------------------------------------------------------
 (9) ___fttol                                             14    10      4     380
                                             43 BANK0     14    10      4
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (9) ___ftmul                                             16    10      6    2502
                                             14 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (9) ___ftdiv                                             16    10      6    2712
                                             14 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (9) ___ftadd                                             13     7      6    3118
                                             30 BANK0     13     7      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (9) ___awtoft                                             6     3      3    2267
                                              8 BANK0      6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (10) ___ftpack                                            8     3      5    2048
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (1) _DelayOff_Main                                        0     0      0    4651
                        _DlyOff_Main
 ---------------------------------------------------------------------------------
 (2) _DlyOff_Main                                          3     3      0    4651
                                             11 BANK0      3     3      0
                _DelayOffPointSelect
                             _setBuz
             _setDimmerLights_Switch
            _setDimmerLights_Trigger
                     _setRFSW_Status
                 _setRF_DimmerLights
                       _setSw_Status
                          _setTxData
 ---------------------------------------------------------------------------------
 (4) _setTxData                                            4     4      0     134
                                              2 BANK0      4     4      0
                      _RfPointSelect
 ---------------------------------------------------------------------------------
 (5) _RfPointSelect                                        2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (6) _setSw_Status                                         2     1      1     472
                                              2 BANK0      2     1      1
                      _SwPointSelect
 ---------------------------------------------------------------------------------
 (5) _SwPointSelect                                        2     2      0      44
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _setRF_DimmerLights                                   5     4      1     668
                                              0 BANK0      5     4      1
 ---------------------------------------------------------------------------------
 (6) _setRFSW_Status                                       2     1      1     536
                                              2 BANK0      2     1      1
                    _RfSWPointSelect
 ---------------------------------------------------------------------------------
 (7) _RfSWPointSelect                                      2     2      0      44
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _setDimmerLights_Trigger                              2     1      1     408
                                              2 BANK0      2     1      1
            _DimmerLightsPointSelect
 ---------------------------------------------------------------------------------
 (4) _setDimmerLights_Switch                               2     1      1     408
                                              2 BANK0      2     1      1
            _DimmerLightsPointSelect
 ---------------------------------------------------------------------------------
 (6) _DimmerLightsPointSelect                              2     2      0      44
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (5) _setBuz                                               5     2      3    1849
                                              6 BANK0      5     2      3
                     _BuzPointSelect
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     476
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _DelayOff_Initialization                              0     0      0      66
              _DlyOff_Initialization
 ---------------------------------------------------------------------------------
 (2) _DlyOff_Initialization                                1     1      0      66
                                              2 BANK0      1     1      0
                _DelayOffPointSelect
 ---------------------------------------------------------------------------------
 (5) _DelayOffPointSelect                                  2     2      0      44
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _CC2500_PowerOnInitial                                0     0      0    1677
                 _CC2500_ClearRXFIFO
                 _CC2500_ClearTXFIFO
               _CC2500_FrequencyCabr
                 _CC2500_InitPATable
                  _CC2500_InitSetREG
                    _CC2500_PowerRST
                   _CC2500_SIDLEMode
 ---------------------------------------------------------------------------------
 (2) _CC2500_SIDLEMode                                     0     0      0      68
                _CC2500_WriteCommand
 ---------------------------------------------------------------------------------
 (2) _CC2500_PowerRST                                      1     1      0     394
                                              6 BANK0      1     1      0
                   _CC2500_WriteByte
                      _DelayTime_1us
 ---------------------------------------------------------------------------------
 (2) _CC2500_InitSetREG                                    4     4      0     354
                                              5 BANK0      4     4      0
                    _CC2500_WriteREG
 ---------------------------------------------------------------------------------
 (2) _CC2500_InitPATable                                   3     3      0     309
                                              5 BANK0      3     3      0
                    _CC2500_WriteREG
 ---------------------------------------------------------------------------------
 (3) _CC2500_WriteREG                                      3     2      1     218
                                              2 BANK0      3     2      1
                   _CC2500_WriteByte
 ---------------------------------------------------------------------------------
 (2) _CC2500_FrequencyCabr                                 0     0      0     416
                _CC2500_WriteCommand
                      _DelayTime_1us
 ---------------------------------------------------------------------------------
 (3) _DelayTime_1us                                        6     4      2     348
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (2) _CC2500_ClearTXFIFO                                   0     0      0      68
                _CC2500_WriteCommand
 ---------------------------------------------------------------------------------
 (2) _CC2500_ClearRXFIFO                                   0     0      0      68
                _CC2500_WriteCommand
 ---------------------------------------------------------------------------------
 (6) _CC2500_WriteCommand                                  2     2      0      68
                                              2 BANK0      2     2      0
                   _CC2500_WriteByte
 ---------------------------------------------------------------------------------
 (7) _CC2500_WriteByte                                     2     2      0      46
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _Buzzer_Main                                          0     0      0      88
                        _setBuz_Main
 ---------------------------------------------------------------------------------
 (2) _setBuz_Main                                          5     5      0      88
                                              2 BANK0      5     5      0
                     _BuzPointSelect
 ---------------------------------------------------------------------------------
 (1) _Buzzer_Initialization                                0     0      0     130
              _setBuz_Initialization
 ---------------------------------------------------------------------------------
 (2) _setBuz_Initialization                                1     1      0     130
                      _setBuz_Enable
 ---------------------------------------------------------------------------------
 (3) _setBuz_Enable                                        2     1      1     130
                                              2 BANK0      2     1      1
                     _BuzPointSelect
 ---------------------------------------------------------------------------------
 (6) _BuzPointSelect                                       2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _ISR                                                 1     1      0     366
                                              9 COMMON     1     1      0
                            _INT_ISR
                            _IOC_ISR
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (12) _TMR0_ISR                                            4     4      0     236
                                              5 COMMON     4     4      0
                i1_setLoad_StatusOff
 ---------------------------------------------------------------------------------
 (13) i1_setLoad_StatusOff                                 3     1      2     236
                                              2 COMMON     3     1      2
                  i1_LoadPointSelect
 ---------------------------------------------------------------------------------
 (14) i1_LoadPointSelect                                   2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (12) _IOC_ISR                                             1     1      0       0
                                              0 COMMON     1     1      0
                   _setDimmerReClock
 ---------------------------------------------------------------------------------
 (13) _setDimmerReClock                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _INT_ISR                                             0     0      0     130
                    _setRF_ReceiveGO
 ---------------------------------------------------------------------------------
 (13) _setRF_ReceiveGO                                     2     1      1     130
                                              2 COMMON     2     1      1
                    i1_RfPointSelect
 ---------------------------------------------------------------------------------
 (14) i1_RfPointSelect                                     2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Buzzer_Initialization
     _setBuz_Initialization
       _setBuz_Enable
         _BuzPointSelect
   _Buzzer_Main
     _setBuz_Main
       _BuzPointSelect
   _CC2500_PowerOnInitial
     _CC2500_ClearRXFIFO
       _CC2500_WriteCommand
         _CC2500_WriteByte
     _CC2500_ClearTXFIFO
       _CC2500_WriteCommand
         _CC2500_WriteByte
     _CC2500_FrequencyCabr
       _CC2500_WriteCommand
         _CC2500_WriteByte
       _DelayTime_1us
     _CC2500_InitPATable
       _CC2500_WriteREG
         _CC2500_WriteByte
     _CC2500_InitSetREG
       _CC2500_WriteREG
         _CC2500_WriteByte
     _CC2500_PowerRST
       _CC2500_WriteByte
       _DelayTime_1us
     _CC2500_SIDLEMode
       _CC2500_WriteCommand
         _CC2500_WriteByte
   _DelayOff_Initialization
     _DlyOff_Initialization
       _DelayOffPointSelect
   _DelayOff_Main
     _DlyOff_Main
       _DelayOffPointSelect
       _setBuz
         _BuzPointSelect
         ___wmul
       _setDimmerLights_Switch
         _DimmerLightsPointSelect
       _setDimmerLights_Trigger
         _DimmerLightsPointSelect
       _setRFSW_Status
         _RfSWPointSelect
       _setRF_DimmerLights
       _setSw_Status
         _SwPointSelect
       _setTxData
         _RfPointSelect
   _DimmerLights_Initialization
     _setDimmerLights_Initialization
       _DimmerLightsPointSelect
       _getPercentValue
         ___awtoft
           ___ftpack
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftdiv
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___fttol
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
   _DimmerLights_Main
     _DimmerLights_Close
       _getDimmerLights_StatusFlag
         _DimmerLightsPointSelect
       _getDimmer_Detect
         _DimmerPointSelect
       _setDimmer_Detect
         _DimmerPointSelect
       _setLoad_GO
         _LoadPointSelect
     _setDimmerLights_Main
       _DimmerLightsPointSelect
       _getDimmerLights_Trigger
         _DimmerLightsPointSelect
       _setBuz
         _BuzPointSelect
         ___wmul
       _setDimmerLights
         _DimmerLightsPointSelect
         _setDimmer_Detect
           _DimmerPointSelect
         _setLED
           _LedPointSelect
         _setLoad_Count
         _setLoad_GO
           _LoadPointSelect
         _setLoad_LightsStatus
           _LoadPointSelect
         _setLoad_StatusOn
           _LoadPointSelect
       _setDimmerLights_Adj
         _DimmerLightsPointSelect
         _setLoad_StatusOff
           _LoadPointSelect
         _setPercentValue
           ___awtoft
             ___ftpack
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
         _setRF_DimmerLights
         _setTxData
           _RfPointSelect
   _Flash_Memory_Initialization
     _Flash_Memory_Read
     _Flash_Memory_Write
       _Flash_Memory_Unlock
     _setPercentValue
       ___awtoft
         ___ftpack
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
   _Flash_Memory_Main
     _Flash_Memory_Modify
       _Flash_Memory_Erasing
         _Flash_Memory_Unlock
       _Flash_Memory_Read
       _Flash_Memory_Write
         _Flash_Memory_Unlock
   _LED_Initialization
     _setLED_Initialization
       _LedPointSelect
       _setLED
         _LedPointSelect
   _LED_Main
     _setLED_Main
       _LedPointSelect
   _Load_Initialization
     _setLoad_Initialization
       _LoadPointSelect
       _setLoad_AH_AL_Restore
   _Load_Main
     _setLoad_Main
       _LoadPointSelect
       ___lwdiv
       ___wmul
       _getPF_Safe
         _PowerFaultPointSelect
       _getTemp_Safe
         _TempPointSelect
       _setDimmerLights_Clear
         _DimmerLightsPointSelect
       _setLoad_AH_AL_Restore
       _setLoad_ERROR
         _DimmerLights_ERROR
           _getDimmerLights_StatusFlag
             _DimmerLightsPointSelect
           _getDimmer_LoadERROR
             _DimmerPointSelect
           _getDimmer_PFERROR
             _DimmerPointSelect
           _getDimmer_TempERROR
             _DimmerPointSelect
           _setBuz
             _BuzPointSelect
             ___wmul
           _setDimmerLights_ERROR
             _DimmerLightsPointSelect
             _setLED
               _LedPointSelect
             _setLoad_StatusOff
               _LoadPointSelect
             _setRFSW_Status
               _RfSWPointSelect
             _setSw_Status
               _SwPointSelect
           _setDimmerLights_TriggerERROR
             _DimmerLightsPointSelect
         _LoadPointSelect
         _setDimmer_LoadERROR
           _DimmerPointSelect
         _setLED
           _LedPointSelect
         _setRF_Enable
           _CC2500_WriteCommand
             _CC2500_WriteByte
           _RF_RxDisable
             _CC2500_WriteCommand
               _CC2500_WriteByte
             _RfPointSelect
             _setINT_GO
           _RfPointSelect
         _setSw_Enable
           _SwPointSelect
   _MainT
     _setBuz
       _BuzPointSelect
       ___wmul
     _setLED
       _LedPointSelect
     _setLoad_Enable
       _LoadPointSelect
     _setRF_Enable
       _CC2500_WriteCommand
         _CC2500_WriteByte
       _RF_RxDisable
         _CC2500_WriteCommand
           _CC2500_WriteByte
         _RfPointSelect
         _setINT_GO
       _RfPointSelect
     _setSw_Enable
       _SwPointSelect
     _setTemp_Enable
       _TempPointSelect
   _MainT_Initialization
   _Mcu_Initialization
     _ADC_Set
     _INT_Set
     _IOC_Set
     _IO_Set
     _TMR0_Set
   _PowerFault_Initialization
     _setPowerFault_Initialization
       _PowerFaultPointSelect
   _PowerFault_Main
     _setPowerFault_Main
       _PowerFaultPointSelect
       _getLoad_Safe
         _LoadPointSelect
       _getTemp_Safe
         _TempPointSelect
       _setPowerFault_ERROR
         _DimmerLights_ERROR
           _getDimmerLights_StatusFlag
             _DimmerLightsPointSelect
           _getDimmer_LoadERROR
             _DimmerPointSelect
           _getDimmer_PFERROR
             _DimmerPointSelect
           _getDimmer_TempERROR
             _DimmerPointSelect
           _setBuz
             _BuzPointSelect
             ___wmul
           _setDimmerLights_ERROR
             _DimmerLightsPointSelect
             _setLED
               _LedPointSelect
             _setLoad_StatusOff
               _LoadPointSelect
             _setRFSW_Status
               _RfSWPointSelect
             _setSw_Status
               _SwPointSelect
           _setDimmerLights_TriggerERROR
             _DimmerLightsPointSelect
         _PowerFaultPointSelect
         _setDimmer_PFERROR
           _DimmerPointSelect
         _setLED
           _LedPointSelect
         _setRF_Enable
           _CC2500_WriteCommand
             _CC2500_WriteByte
           _RF_RxDisable
             _CC2500_WriteCommand
               _CC2500_WriteByte
             _RfPointSelect
             _setINT_GO
           _RfPointSelect
         _setSw_Enable
           _SwPointSelect
   _RF_Initialization
     _setRF_Initialization
   _RF_Main
     _setRF_Main
       _CC2500_RxData
         _CC2500_ReadByte
         _CC2500_ReadStatus
           _CC2500_ReadByte
           _CC2500_WriteByte
         _CC2500_WriteByte
         _CC2500_WriteCommand
           _CC2500_WriteByte
         _setRF_RxStatus
           _RfPointSelect
       _CC2500_TxData
         _CC2500_WriteByte
         _CC2500_WriteCommand
           _CC2500_WriteByte
       _CC2500_WriteCommand
         _CC2500_WriteByte
       _RF_RxDisable
         _CC2500_WriteCommand
           _CC2500_WriteByte
         _RfPointSelect
         _setINT_GO
       _RfPointSelect
       _getRxData
         _RfPointSelect
         _setControl_Lights_Table
           _RfPointSelect
           _setBuz
             _BuzPointSelect
             ___wmul
           _setDimmerLights
             _DimmerLightsPointSelect
             _setDimmer_Detect
               _DimmerPointSelect
             _setLED
               _LedPointSelect
             _setLoad_Count
             _setLoad_GO
               _LoadPointSelect
             _setLoad_LightsStatus
               _LoadPointSelect
             _setLoad_StatusOn
               _LoadPointSelect
           _setRFSW_AdjControl
             _RfSWPointSelect
             _setRF_DimmerValue
               _setDimmerLights_AdjRF
                 _DimmerLightsPointSelect
                 _getPercentValue
                   ___awtoft
                     ___ftpack
                   ___ftadd
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftmul (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                     ___ftpack (ARG)
                   ___ftdiv
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                   ___ftmul
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                   ___fttol
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftadd (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftmul (ARG)
                         ___awtoft (ARG)
                           ___ftpack
                         ___ftpack (ARG)
                       ___ftpack (ARG)
                     ___ftdiv (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                     ___ftmul (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
             _setTxData
               _RfPointSelect
           _setRFSW_Control
             _RfSWPointSelect
             _setBuz
               _BuzPointSelect
               ___wmul
             _setDelayOff_GO
               _DelayOffPointSelect
               _DelayTimejudge
             _setDimmerLights_Switch
               _DimmerLightsPointSelect
             _setDimmerLights_Trigger
               _DimmerLightsPointSelect
             _setRF_DimmerLights
             _setSw_Status
               _SwPointSelect
             _setTxData
               _RfPointSelect
           _setRFSW_Status
             _RfSWPointSelect
           _setSw_Status
             _SwPointSelect
           _setTxData
             _RfPointSelect
         _setLog_Code
           _RfPointSelect
           _setBuz
             _BuzPointSelect
             ___wmul
       _setINT_GO
   _Switch_Initialization
     _TouchPower
     _setSw_Initialization
       _setLED
         _LedPointSelect
   _Switch_Main
     _setSw_Main
       _SwPointSelect
       _Sw_DimmerAdjFunc
         _setDimmerLights_AdjGo
           _DimmerLightsPointSelect
         _setDimmerLights_TriggerAdj
           _DimmerLightsPointSelect
         _setRFSW_Status
           _RfSWPointSelect
       _Sw_DimmerOffFunc
         _setDelayOff_GO
           _DelayOffPointSelect
           _DelayTimejudge
         _setDimmerLights_AdjGo
           _DimmerLightsPointSelect
         _setDimmerLights_Switch
           _DimmerLightsPointSelect
         _setDimmerLights_Trigger
           _DimmerLightsPointSelect
         _setDimmerLights_TriggerAdj
           _DimmerLightsPointSelect
         _setRF_DimmerLights
         _setTxData
           _RfPointSelect
       _Sw_DimmerOnFunc
         _setDimmerLights_Switch
           _DimmerLightsPointSelect
         _setDimmerLights_Trigger
           _DimmerLightsPointSelect
         _setRFSW_Status
           _RfSWPointSelect
         _setRF_DimmerLights
         _setTxData
           _RfPointSelect
       _setBuz
         _BuzPointSelect
         ___wmul
       _setRF_Learn
         _RfPointSelect
   _Temp_Initialization
     _setTemp_Initialization
       _TempPointSelect
   _Temp_Main
     _setTemp_Main
       _TempPointSelect
       _getLoad_Safe
         _LoadPointSelect
       _getPF_Safe
         _PowerFaultPointSelect
       _setOverTemp_ERROR
         _DimmerLights_ERROR
           _getDimmerLights_StatusFlag
             _DimmerLightsPointSelect
           _getDimmer_LoadERROR
             _DimmerPointSelect
           _getDimmer_PFERROR
             _DimmerPointSelect
           _getDimmer_TempERROR
             _DimmerPointSelect
           _setBuz
             _BuzPointSelect
             ___wmul
           _setDimmerLights_ERROR
             _DimmerLightsPointSelect
             _setLED
               _LedPointSelect
             _setLoad_StatusOff
               _LoadPointSelect
             _setRFSW_Status
               _RfSWPointSelect
             _setSw_Status
               _SwPointSelect
           _setDimmerLights_TriggerERROR
             _DimmerLightsPointSelect
         _TempPointSelect
         _setDimmer_TempERROR
           _DimmerPointSelect
         _setLED
           _LedPointSelect
         _setRF_Enable
           _CC2500_WriteCommand
             _CC2500_WriteByte
           _RF_RxDisable
             _CC2500_WriteCommand
               _CC2500_WriteByte
             _RfPointSelect
             _setINT_GO
           _RfPointSelect
         _setSw_Enable
           _SwPointSelect
   _getLoad_AD
     _LoadPointSelect
     _getAD
   _getPowerFault_AD
     _PowerFaultPointSelect
     _getAD
   _getTemp_AD
     _TempPointSelect
     _getAD

 _ISR (ROOT)
   _INT_ISR
     _setRF_ReceiveGO
       i1_RfPointSelect
   _IOC_ISR
     _setDimmerReClock
   _TMR0_ISR
     i1_setLoad_StatusOff
       i1_LoadPointSelect

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       1       1        7.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4D      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      4F       7       98.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      4E       9       97.5%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      2E      11       57.5%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      25      13       46.3%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0      47      15       88.8%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     195      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     195      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Tue Sep 09 09:15:51 2014

                   __size_of_Switch_Main 0008                    ?_Flash_Memory_Erasing 0070  
             __size_ofi1_LoadPointSelect 000B                       getPowerFault_AD@pf 0029  
           ??_setDimmerLights_TriggerAdj 0023                        ??_TempPointSelect 0020  
                                     _PF 00BD                                       _RD 0CA8  
                                     _RF 00BE                  __end_of_CC2500_WriteREG 25A0  
                                     _WR 0CA9                                       _Sw 006E  
     __end_of_getDimmerLights_StatusFlag 269F               _getDimmerLights_StatusFlag 267F  
                    ___wmul@multiplicand 0022                   __end_of_setDelayOff_GO 1B3B  
                           ___ftadd@exp1 004A                             ___ftadd@exp2 0049  
              setDimmerLights_Adj@lights 0060                __end_of_setLoad_StatusOff 19D6  
                   _setDimmerLights_Main 1489                             ___ftadd@sign 0048  
                                    l153 0BF9                                      l402 258F  
                                    l330 1BB5                                      l420 25F5  
                                    l340 1F9E                                      l324 1B86  
                                    l333 1BB8                                      l414 23CB  
                                    l360 1A00                                      l344 1FAF  
                                    l329 1BB0                                      l601 1976  
                                    l426 27B9                                      l357 19FA  
                                    l390 257A                                      l391 257C  
                                    l836 11FA                                      l784 24A1  
                                    _GIE 005F                                      _CRC 00B8  
                                    _RA0 0060                                      _RB0 0068  
   __size_of_DimmerLights_Initialization 0012                                      _RB1 0069  
                                    _RA3 0063                                      _PF1 0166  
                                    _RC0 0070                                      _RB2 006A  
                                    _RA4 0064                                      _LED 00BC  
                                    _RC1 0071                                      _RB3 006B  
                                    _RC2 0072                                      _RB4 006C  
                                    _RA6 0066                                      _RB5 006D  
                                    _RA7 0067                                      _RC4 0074  
                                    _RC5 0075                                      _RC7 0077  
                                    _RF1 00E7                                      _ISR 0004  
                                    _Sw1 0154                                      _Sw2 015D  
                                    _Buz 00B7                setDimmerLights_Adj@status 005D  
               __end_of_CC2500_WriteByte 2587           ??_setDimmerLights_TriggerERROR 0023  
                  _Buzzer_Initialization 217E                          __end_of_ADC_Set 21E3  
                        ?_DelayTimejudge 0070                                      wreg 0009  
   setDimmerLights_Initialization@lights 0061                          _setDimmerLights 16D2  
                  _setDimmerLights_ERROR 1DC9                    _setDimmerLights_AdjRF 2746  
                  _setDimmerLights_AdjGo 2443                          ?_BuzPointSelect 0070  
                ??_PowerFaultPointSelect 0020                  __size_of_setTemp_Enable 000F  
                  _setDimmerLights_Clear 2423                                     ?_ISR 0070  
                         setSw_Enable@sw 0023                          _PowerFault_Main 219E  
                           ___ftdiv@cntr 0038                          __end_of_IOC_ISR 278F  
                           ___ftdiv@sign 003D                 ?_DimmerLightsPointSelect 0070  
                                   l2327 0EC6                                     l2612 1C7C  
                        __end_of_IOC_Set 22F4                                     l3511 1F21  
                                   l1663 251B                                     l3344 262D  
                                   l3505 1F0A                                     l2580 1DC2  
                                   l3534 0D4B                                     l1695 07F9  
                                   l7013 2617                                     l2598 2506  
                                   l7031 2698                                     l7015 261D  
                                   l7033 2686                                     l8001 1AEC  
                                   l7035 269D                                     l7203 11D1  
                                   l2796 21B7                                     l6421 1EE7  
                                   l8101 1403                                     l8005 1AF3  
                                   l6431 1F0F                                     l6423 1EF1  
                                   l6503 0D3D                                     l7207 11EB  
                                   l7119 1900                                     l7151 0980  
                                   l7311 16AE                                     l6433 1F17  
                                   l6425 1EF6                                     l6417 1EE0  
                                   l6513 0D6F                                     l6505 0D47  
                                   l7209 11F2                                     l8201 0601  
                                   l7305 1693                                     l6451 26EB  
                                   l6523 0D8A                                     l8203 0606  
                                   l7155 098D                                     l7139 0953  
                                   l7323 16C9                                     l7315 16B7  
                                   l6701 2533                                     l6509 0D5D  
                                   l6533 09DF                                     l6605 0AF5  
                                   l7069 173D                                     l7253 27EA  
                                   l9021 1432                                     l7407 27CA  
                                   l6463 0CD4                                     l8215 0632  
                                   l8151 04E6                                     l8127 03DF  
                                   l7167 09B9                                     l7319 16C0  
                                   l7409 27D5                                     l6801 15F5  
                                   l6473 0CEA                                     l6561 0A4F  
                                   l6553 0A36                                     l6609 0AFD  
                                   l6625 0822                                     l7441 26D9  
                                   l7505 07DD                                     l8209 061D  
                                   l6721 1968                                     l6713 195C  
                                   l9025 1457                                     l6491 0D17  
                                   l6467 0CDB                                     l6539 09F5  
                                   l6651 086D                                     l6643 0852  
                                   l7443 26C6                                     l8091 1396  
                                   l7179 1C66                                     l8251 0F19  
                                   l6805 1619                                     l6493 0D21  
                                   l6485 0D04                                     l6581 0A9E  
                                   l6653 0876                                     l6645 0860  
                                   l7445 26DE                                     l8157 0502  
                                   l8325 0DF2                                     l7381 1FC1  
                                   l7349 1B98                                     l6725 196E  
                                   l6717 1962                                     l6709 1956  
                                   l8413 158A                                     l8501 077A  
                                   l7621 103F                                     l8253 0F22  
                                   l6495 0D26                                     l6575 0A88  
                                   l6655 0879                                     l6751 2719  
                                   l6911 19CB                                     l7455 1F4D  
                                   l8159 051A                                     l8351 0E90  
                                   l8327 0DFD                                     l7383 1FD9  
                                   l6497 0D2A                                     l6593 0AD9  
                                   l8601 0B96                                     l8097 13AF  
                                   l8193 05C8                                     l8177 0575  
                                   l8169 0553                                     l8361 0EBA  
                                   l8417 1595                                     l8441 068B  
                                   l6659 0887                                     l6747 270E  
                                   l6923 1E89                                     l6931 1E95  
                                   l6907 19C1                                     l8187 05B6  
                                   l8347 0E6F                                     l7395 1FF2  
                                   l8451 069B                                     l8443 0691  
                                   l8291 0FCA                                     l8275 0F89  
                                   l7813 0C8A                                     l6773 24B5  
                                   l6597 0AE1                                     l6941 1EA5  
                                   l8381 152F                                     l8453 06A3  
                                   l8285 0FB9                                     l7807 0C5E  
                                   l7815 0C90                                     l6839 1131  
                                   l6927 1E8F                                     l7567 12DE  
                                   l7647 10A6                                     l8359 0EB3  
                                   l7751 1279                                     l7719 1CCD  
                                   l8471 06E1                                     l8287 0FBF  
                                   l6953 1EC1                                     l6961 1ECD  
                                   l6937 1E9F                                     l6945 1EAB  
                                   l8385 1538                                     l8481 0713  
                                   l7819 0C98                                     l6779 2627  
                                   l7771 1A2D                                     l7763 1A0F  
                                   l6883 1B1F                                     l7675 1CF6  
                                   l8491 0747                                     l8651 08B6  
                                   l6957 1EC7                                     l6981 1999  
                                   l7765 1A1B                                     l8717 17C8  
                                   l8389 154B                                     l8661 08EF  
                                   l7951 14AA                                     l7775 1A36  
                                   l6887 1B2D                                     l7687 1D0C  
                                   l8399 155F                                     l6977 198C  
                                   l7961 14CD                                     l7945 149F  
                                   l8745 1C00                                     l6993 1A4A  
                                   l8673 0926                                     l8657 08E7  
                                   l7971 14EE                                     l7967 14DF  
                                   l8687 118D                                     _CFGS 0CAE  
                                   l7979 1513                                     _FREE 0CAC  
                                   _LATA 010C                                     _LATB 010D  
                        __end_of_INT_ISR 2261                                     _LATC 010E  
                                   u4205 1F05                                     u4225 1F12  
                  _setBuz_Initialization 21CE                                     u4405 0D18  
                                   u5150 10E2                                     u4255 1F28  
                                   u5065 262E                                     u4185 1EEC  
                                   u5075 2633                                     u5155 10E0  
                                   u4435 0D2B                                     _PEIE 005E  
                                   u6205 1A1C                                     _INTE 005C  
                                   u5430 0807                                     _INTF 0059  
                                   u4375 0D05                                     u4535 0A07  
                                   u4615 0AAA                                     u6215 1A26  
                                   u4465 0D3E                                     u4545 0A17  
                                   u4625 0ABA                                     u6225 1A2E  
                                   u4555 0A37                                     u4565 0A46  
                                   u4645 0AE2                                     u4725 0829  
                                   u4575 0A50                                     u4655 0AE8  
                                   u6185 1A12                                     u4755 0853  
                                   u4685 0AFE                                     u6295 0C1A  
                                   u4695 0B04                                     u4785 086E  
                                   u6715 049E                                     u7525 08D1  
                                   u7605 11A5                                     u5865 27BF  
                                   u7625 1D68                                     u6765 0532  
                                   u7645 1783                                     u7565 0912  
                                   u7655 17DE                                     u7595 117C  
                                   u7695 1BE7                                     _LWLO 0CAD  
                                   _RFSW 00BF                                     _TMR0 0015  
                        __end_of_INT_Set 21B7                                     _RSSI 00C0  
                                   _WREN 0CAA                                     _Buz1 0148  
                       setLoad_Main@load 0033                                     _Load 006F  
                                   _Temp 007D                                     _main 140B  
                           ___ftpack@arg 0020        __end_of_PowerFault_Initialization 219E  
                    __end_of_DlyOff_Main 1390                          __end_of_RF_Main 21AA  
                           ___ftpack@exp 0023                                     fsr0h 0005  
                                   fsr1h 0007                                     fsr0l 0004  
                                   indf0 0000                                     indf1 0001  
                                   fsr1l 0006      __size_of_setDimmerLights_TriggerAdj 0010  
                                   btemp 007E                     setLoad_ERROR@command 002C  
                                   ltemp 007E            __size_of_setRF_Initialization 0007  
                       _setDimmerReClock 25D2                getDimmer_LoadERROR@dimmer 0022  
                                   start 0016                                     ttemp 007E  
                                   wtemp 007E                      DelayTimejudge@value 0022  
                          _RfPointSelect 2279               __end_of_setRFSW_AdjControl 1C96  
                       _setDimmer_Detect 232C                         setTemp_Main@temp 0032  
                       getLoad_Safe@load 0023                             ___ftmul@cntr 003C  
                  __end_of_setBuz_Enable 23C3                        ?_getDimmer_Detect 0070  
                           ___ftmul@sign 003D             __size_of_Temp_Initialization 0004  
        __size_of_setLoad_Initialization 0010              __size_of_setPowerFault_Main 012C  
                                  ??_ISR 0079                     setPowerFault_Main@pf 0031  
                           ___fttol@exp1 0058                       ??_getDimmer_Detect 0022  
                           ___fttol@lval 0054                    __end_of_setLoad_ERROR 1315  
                       __end_of_LED_Main 22B5                         getTemp_Safe@temp 0021  
                  ?_setDimmerLights_Main 0070                          ?_setDelayOff_GO 0023  
                  __end_of_setLoad_Count 24D2                                    ?_main 0070  
              setControl_Lights_Table@rf 0067                          __end_of___ftadd 0DA2  
                          __CFG_WDTE$OFF 0000                          __end_of___ftdiv 0A71  
                        __end_of___ftmul 0B25                          __end_of___fttol 0890  
           setDimmerLights_AdjGo@command 0022                                    _IOCBF 0396  
                                  _IOCBN 0395                                    _IOCBP 0394  
                                  _IOCIE 005B                                    _IOCIF 0058  
                        __end_of___lwdiv 1A3D                   _setDimmerLights_Switch 23D3  
          __size_of_CC2500_FrequencyCabr 000C                                    _RFSW1 00E9  
                                  _RFSW2 00EA                                    _PORTA 000C  
                                  _PORTB 000D                                    _PORTC 000E  
                           ?_setLED_Main 0070                       setRF_Learn@command 0022  
                  setPowerFault_ERROR@pf 002E                                    _TRISA 008C  
                                  _TRISB 008D                                    _TRISC 008E  
           __size_ofi1_setLoad_StatusOff 002E                                    _WPUB0 1068  
                                  _WPUB1 1069                                    _WPUB2 106A  
                                  _TMain 00ED                            setRF_Learn@rf 0023  
                                  _MainT 1769                                    _Load1 02A0  
                          __CFG_WRT$BOOT 0000               setDimmer_LoadERROR@command 0022  
                                  _Temp1 0120             __end_of_setLoad_LightsStatus 19A7  
                       __end_of_TMR0_ISR 03AB             __size_of_CC2500_WriteCommand 0010  
                       __end_of_TMR0_Set 2301                                    _getAD 2511  
                          ___awtoft@sign 002D                        _getDimmer_PFERROR 22DA  
                      _setDimmer_PFERROR 2377                            ___ftpack@sign 0024  
                         _setLoad_Enable 24D2              __size_of_CC2500_ClearRXFIFO 0004  
                          ??_Buzzer_Main 0027              __size_of_CC2500_ClearTXFIFO 0004  
                    CC2500_RxData@loop_f 0025                           __pbitbssCOMMON 03D0  
                         __CFG_BOREN$OFF 0000                       Flash_Memory_Read@i 0021  
                      setLoad_Count@load 0070                         ?_CC2500_ReadByte 0070  
                                  ltemp0 007E                                    ltemp1 0082  
                                  ltemp2 0086                                    ltemp3 0080  
                     ?_getDimmer_PFERROR 0070                       ?_setDimmer_PFERROR 0022  
         __size_of_setLED_Initialization 0011            __end_of_setLED_Initialization 2474  
                                  ttemp0 007E                                    ttemp1 0081  
                                  ttemp2 0084                                    ttemp3 0087  
                                  ttemp4 007F                             ?_setRF_Learn 0022  
                                  status 0003                                    wtemp0 007E  
                                  wtemp1 0080                                    wtemp2 0082  
                                  wtemp3 0084                                    wtemp4 0086  
                                  wtemp5 0088                                    wtemp6 007F  
              getDimmer_TempERROR@dimmer 0022                       _setRF_DimmerLights 10D8  
            __size_of_Flash_Memory_Write 0031                   ??_MainT_Initialization 0020  
                      ?_CC2500_SIDLEMode 0070               __size_of_RF_Initialization 0004  
                         ?_RfPointSelect 0070                           setSw_Status@sw 0023  
               setLoad_StatusOff@command 0023         __size_of_DelayOff_Initialization 0008  
                 ?_setLoad_AH_AL_Restore 0070                setDimmerLights_Main@clear 0061  
                  setLoad_Enable@command 0022                   ??_Flash_Memory_Erasing 0020  
                    ??_getDimmer_PFERROR 0022                      ??_setDimmer_PFERROR 0023  
                        _getPercentValue 1E1E                       ??_CC2500_SIDLEMode 0024  
                        __initialization 0018                         ?_CC2500_PowerRST 0070  
                      ??_Sw_DimmerOnFunc 0026             __size_of_setPowerFault_ERROR 0068  
                   __end_of_getLoad_Safe 2443                        ??_setPercentValue 0059  
                           __end_of_main 1489                      ?_setRF_DimmerLights 0020  
                     setLoad_Enable@load 0023                         ?_CC2500_WriteREG 0022  
                              ??_ADC_Set 0020                  __end_of_setDimmerLights 1769  
                   _setSw_Initialization 21FA                             ?_setBuz_Main 0070  
             __size_of_setLoad_StatusOff 002F                                   ??_main 006C  
                          ___fttol@sign1 0053                  _getDimmerLights_Trigger 26BF  
                           ?_setLog_Code 0070                  _setControl_Lights_Table 163D  
                 ?_Buzzer_Initialization 0070                  ??_DlyOff_Initialization 0022  
                __end_of_PowerFault_Main 21A2                               _Receive_GO 03D1  
                             _Receive_OK 03D2                                ??_IOC_ISR 0070  
                 ?_setDimmerLights_ERROR 0070                                ??_IOC_Set 0020  
        __end_of_DimmerLightsPointSelect 24AA                                   ?_MainT 0070  
                 ?_setDimmerLights_AdjRF 0070                                ??_INT_ISR 0074  
                 ?_setDimmerLights_AdjGo 0022                 __size_of_setRFSW_Control 009D  
              __end_of_getDimmer_PFERROR 22E7                __end_of_setDimmer_PFERROR 2386  
                       ??_setRFSW_Status 0023                                ??_INT_Set 0020  
                 ?_setDimmerLights_Clear 0022                  ??_Switch_Initialization 0025  
                 __end_of_setLoad_Enable 24E6                   _setLoad_Initialization 2413  
                   __end_of_getTemp_Safe 22C1                        _setOverTemp_ERROR 100C  
                      i1RfPointSelect@rf 0071                     ??_setRF_DimmerLights 0021  
                                 ?_getAD 0020                              _DlyOff_Main 1315  
                                 _ADCON0 009D                                   _ADCON1 009E  
                 ?_setBuz_Initialization 0070                                ??_RF_Main 006C  
                                 _ADRESH 009C                                   _ADRESL 009B  
             i1setLoad_StatusOff@command 0073                        ?_getPowerFault_AD 0024  
                         setRF_Enable@rf 0026                         __end_of___awtoft 2702  
                                 _ANSELA 018C                                   _ANSELB 018D  
                                 _ANSELC 018E                         __end_of___ftpack 1F38  
                     ?_setOverTemp_ERROR 002C                                   _IOCBF2 1CB2  
                _setDimmerLights_Trigger 23E3                                   i1l1630 039B  
                                 i1l1635 25E0                                   i1l8535 1935  
                                 i1l8539 193F                                   i1l8901 02A7  
                                 i1l8813 00FC                                   i1l8821 011B  
                                 i1l8911 02DA                                   i1l8831 014E  
                                 i1l8815 0102                                   i1l8921 0309  
                                 i1l8841 017D                                   i1l8771 2785  
                                 i1l8923 030F                                   i1l8907 02C3  
                                 i1l8915 02EE                                   i1l8843 0183  
                                 i1l8827 0137                                   i1l8835 0162  
                                 i1l8819 0115                                   i1l8933 0347  
                                 i1l8941 037C                                   i1l8853 01B9  
                                 i1l8861 01EE                                   i1l8875 023E  
                                 i1l8795 00B2                                   i1l8893 0288  
                                 i1l8895 028E                                   _FVRCON 0117  
                                 i1l8899 02A1                                   _PMADRH 0192  
                                 _PMADRL 0191                                   _PMDATH 0194  
                                 _PMDATL 0193                                   _PMCON2 0196  
                     ??_getPowerFault_AD 0025                                   _OSCCON 0099  
                                 u813_25 0372                       __size_of_Load_Main 0004  
                                 u814_25 038E                                   _TMR0IE 005D  
                                 _TMR0IF 005A                                   _IO_Set 25B9  
                                 u777_25 0096                                   u794_25 01E4  
                                 u796_25 0222                       DelayTime_1us@count 0020  
                             _VarProduct 01A0           __size_of_CC2500_PowerOnInitial 0015  
          __end_of_CC2500_PowerOnInitial 24FB                                   _Dimmer 00BA  
                    ??_setOverTemp_ERROR 002D                                   _DlySw1 00CE  
                                 _DlySw2 00D3               __end_of_Mcu_Initialization 256E  
                    __end_of_Buzzer_Main 2186                                   _Memory 00EB  
                                 _Timer0 00EE       __end_of_setDimmerLights_TriggerAdj 2463  
             _setDimmerLights_TriggerAdj 2453            setDimmerLights_Switch@command 0022  
                     setTemp_Enable@temp 0022                                   ___wmul 2624  
                              ??___ftadd 0044             __size_of_DelayOffPointSelect 0017  
                              ??___ftdiv 0034                    setDimmerLights@lights 0028  
                              ??___ftmul 0034                                ??___fttol 004F  
           ?_Flash_Memory_Initialization 0070                                ??___lwdiv 0024  
                        i1_RfPointSelect 2213              setDimmerLights_AdjRF@lights 0060  
                 ??_setDimmerLights_Main 0061                                   _r_data 00C5  
                                 _s_data 00C6                                   _setLED 1E79  
                       _DimmerLightsIntr 00BB                    ?_setSw_Initialization 0070  
                  setDimmerLights@status 0026                                   _setBuz 15AB  
                     __size_of_Temp_Main 0004              __end_of_Load_Initialization 2196  
       ??_setDimmerLights_Initialization 005F          ?_setDimmerLights_Initialization 0070  
                        _LoadPointSelect 2234                    ___ftmul@f3_as_product 0039  
             setDimmer_TempERROR@command 0022                __end_of_setOverTemp_ERROR 1070  
           ??_getDimmerLights_StatusFlag 0022                 Flash_Memory_Read@address 0022  
                      RfSWPointSelect@sw 0021                         ??_setRF_RxStatus 0023  
                getDimmer_PFERROR@dimmer 0022              __size_of_DimmerLights_ERROR 0073  
                  __end_of_SwPointSelect 24BE                          ?_setLoad_Enable 0022  
                getPowerFault_AD@channel 0024                            ?_setRF_Enable 0025  
                         _setTemp_Enable 2368                          _RfSWPointSelect 24FB  
           __size_of_Flash_Memory_Modify 007B              __size_of_DimmerLights_Close 0020  
                __size_of_LedPointSelect 0022           setPowerFault_Initialization@pf 0021  
                    Flash_Memory_Write@i 0021             __size_of_Flash_Memory_Unlock 0009  
                             _TouchPower 21B7                        ?_Sw_DimmerAdjFunc 0070  
            __size_of_CC2500_InitPATable 001F                      CC2500_TxData@loop_e 0025  
                __end_of_getPercentValue 1E79         __end_of_CC2500_registers_address 182F  
   __end_of_setPowerFault_Initialization 2485    __size_of_setPowerFault_Initialization 0011  
           _setPowerFault_Initialization 2474                  __end_of__initialization 0056  
            ??_PowerFault_Initialization 0022                          ??_RfPointSelect 0020  
                        _TempPointSelect 21BC              setDimmerLights_AdjGo@lights 0023  
              setDimmer_LoadERROR@dimmer 0023                                ?_LED_Main 0070  
                             ___ftadd@f1 003E                               ___ftadd@f2 0041  
                     ??_Sw_DimmerAdjFunc 0024                      setSw_Enable@command 0022  
                             ___ftdiv@f1 0031                               ___ftdiv@f2 002E  
                             ___ftdiv@f3 0039                        ?_Sw_DimmerOffFunc 0070  
                             ___awtoft@c 0028             ?_DimmerLights_Initialization 0070  
                             ___ftmul@f1 002E                               ___ftmul@f2 0031  
                          __end_of_MainT 1800                               ___fttol@f1 004B  
                         __pcstackCOMMON 0070                       ??_Sw_DimmerOffFunc 0027  
                   _setLoad_LightsStatus 1978                             __pidataBANK3 2642  
                           __pidataBANK4 278F                            __end_of_getAD 2527  
                              ?_TMR0_ISR 0070                                ?_TMR0_Set 0070  
                 setLoad_AH_AL_Restore@i 0021             __size_of_setDimmerLights_Adj 0064  
                     _LED_Initialization 229D                ??_getDimmerLights_Trigger 0022  
              ??_setControl_Lights_Table 0067                         ??_DelayTimejudge 0020  
            ?_getDimmerLights_StatusFlag 0070                __size_of_setLoad_StatusOn 0010  
                setDimmer_PFERROR@dimmer 0023            ??_Flash_Memory_Initialization 005D  
               __size_of_setRF_ReceiveGO 000D                         ?_setDimmerLights 0026  
                      __end_of_Load_Main 219A                         ??_BuzPointSelect 0020  
                       ?_PowerFault_Main 0070                 __end_of_setDimmerReClock 25EC  
                     __size_of_getRxData 004D                      ?_LED_Initialization 0070  
                 __end_of_setTemp_Enable 2377                        ?_CC2500_WriteByte 0070  
                                ??_MainT 002B                 __end_of_setDimmer_Detect 233B  
             __size_of_getDimmer_PFERROR 000D               __size_of_setDimmer_PFERROR 000F  
                         ??_setRF_Enable 0026                 setOverTemp_ERROR@command 002C  
           __size_of_getDimmer_LoadERROR 000C             __size_of_setDimmer_LoadERROR 000F  
                         _DimmerLights11 007B                           _DimmerLights22 007C  
                   __size_of_setLED_Main 0040                ??_setDimmerLights_Trigger 0023  
                                ??_getAD 0023                      _Temp_Initialization 21AA  
                     ??_CC2500_WriteByte 0020             setDimmerLights_Switch@lights 0023  
                          ?_setLoad_Main 0070           __size_of_PowerFaultPointSelect 0007  
                             __pbssBANK0 006D                               __pbssBANK1 00A0  
                             __pbssBANK2 0120                               __pbssBANK3 01BE  
                             __pbssBANK5 02A0            __end_of_PowerFaultPointSelect 21DC  
                            _Buzzer_Main 2182                        ??_setRFSW_Control 002B  
              setDimmer_TempERROR@dimmer 0023                        __end_of_Temp_Main 21B2  
                                ?_IO_Set 0070                               ??_LED_Main 0025  
                _DelayOff_Initialization 21EA                    __size_of_getLoad_Safe 0010  
          ?_setPowerFault_Initialization 0070                               _getPF_Safe 1866  
                          ??_Switch_Main 0030                           DelayTime_1us@i 0022  
                         DelayTime_1us@j 0024                     ??_LED_Initialization 0025  
                           _DimmerLights 006D                        LedPointSelect@led 0021  
                __end_ofi1_RfPointSelect 221E                      i1_setLoad_StatusOff 191C  
                     __size_of_setINT_GO 0009                   __size_of_DelayOff_Main 0008  
                   __size_of_setRF_Learn 000F                              setBuz@count 0026  
           __size_of_getDimmer_TempERROR 000C             __size_of_setDimmer_TempERROR 000F  
                             __pmaintext 140B                    ?_setLoad_LightsStatus 0022  
                    _CC2500_WriteCommand 23C3                     ?_Temp_Initialization 0070  
       __size_of_DimmerLightsPointSelect 0013                         ??_setDelayOff_GO 0025  
                __end_of_LoadPointSelect 223F            ??_DimmerLights_Initialization 0062  
                                ?___wmul 0020                               ??_TMR0_ISR 0075  
                          ?_setTemp_Main 0070                               ??_TMR0_Set 0020  
                             _getLoad_AD 0890                               __pintentry 0004  
                 ??_setSw_Initialization 0024                      LoadPointSelect@load 0021  
                          ?_setSw_Enable 0022                       __size_of_setTxData 0040  
                    TempPointSelect@temp 0070                  ?_setDimmerLights_Switch 0022  
                                ?_setLED 0022                   __size_of_DelayTime_1us 0026  
                                _ADC_Set 21DC                _PowerFault_Initialization 219A  
                                ?_setBuz 0026                                ?___awtoft 0028  
                              ?___ftpack 0020                               _getTemp_AD 1145  
           __end_of_setRF_Initialization 21EA                    __size_of_getTemp_Safe 000C  
                          ?_setSw_Status 0022                       _setRFSW_AdjControl 1C4E  
                __end_of_RfSWPointSelect 2511                        Sw_DimmerOnFunc@sw 0026  
                   ?i1_setLoad_StatusOff 0072               __size_of_setOverTemp_ERROR 0064  
                   __size_of_setBuz_Main 00C7                                  _IOC_ISR 276A  
                        ?_setTemp_Enable 0021                                  _IOC_Set 22E7  
                   __size_of_setLog_Code 0050                                  _INT_ISR 2255  
              __size_of_getDimmer_Detect 0010                                  _INT_Set 21B2  
                   ?_CC2500_WriteCommand 0070                        _Flash_Memory_Main 1BC3  
                      _Flash_Memory_Read 25A0                   __size_of_CC2500_RxData 0064  
                __end_of_TempPointSelect 21C2                      _setPowerFault_ERROR 1070  
                 __size_of_CC2500_TxData 0044                      ?_setRFSW_AdjControl 0070  
    setDimmerLights_TriggerERROR@command 0022                             _getLoad_Safe 2433  
                            setTxData@rf 0024                                  _RF_Data 00A0  
                         ??_setLoad_Main 002F                                  _RF_Main 21A6  
                     ?_Flash_Memory_Main 0070                       ?_Flash_Memory_Read 0070  
        __end_of_getDimmerLights_Trigger 26E0          __end_of_setControl_Lights_Table 16D2  
                            ?_TouchPower 0070                          _Sw_DimmerOnFunc 1C96  
                        _setPercentValue 1C08                  ??_setLoad_AH_AL_Restore 0020  
                          setLog_Code@rf 002C                         ?_getPercentValue 0070  
                                _Dimmer1 00E4             __end_of_CC2500_FrequencyCabr 2279  
                        __size_of_IO_Set 0019                      ??_Flash_Memory_Main 0027  
                    ??_Flash_Memory_Read 0020                                  _VarLED1 00DC  
                                _VarLED2 00E0                        __end_of_getRxData 1D2C  
             __end_of_setPowerFault_Main 0ECE                 _CC2500_registers_address 1800  
                         RF_RxDisable@rf 0024                    ??_Temp_Initialization 0022  
        __end_of_setDimmerLights_Trigger 23F3                     ?_setPowerFault_ERROR 002C  
                                _Product 00EC                     ??_setRFSW_AdjControl 0064  
                           _getTemp_Safe 22B5                           ??_setTemp_Main 002F  
         __end_of_setDimmerLights_Switch 23E3                                  ___ftadd 0CAC  
                         ??_setSw_Enable 0023                                  ___ftdiv 09C8  
                        __size_of___wmul 001E                                  ___ftmul 0A71  
                                ___fttol 0809                      __end_of_Switch_Main 220A  
                                ___lwdiv 1A06                  ??_Buzzer_Initialization 0024  
                             ??___awtoft 002B                               ??___ftpack 0025  
                        __size_of_setLED 005E                     setRFSW_AdjControl@sw 0066  
                ??_setDimmerLights_ERROR 0025                          __size_of_setBuz 0092  
                         ??_setSw_Status 0023                                  __ptext1 1145  
                                __ptext2 1D2C                                  __ptext3 0890  
                                __ptext4 2511                                  __ptext5 21AE  
                                __ptext6 0ECE                                  __ptext7 100C  
                                __ptext8 23A4                                  __ptext9 21AA  
                ??_setDimmerLights_AdjRF 005F                  ??_setDimmerLights_AdjGo 0023  
              __size_of_CC2500_SIDLEMode 0004                  ??_setDimmerLights_Clear 0023  
                  ??i1_setLoad_StatusOff 0074                             __size_of_ISR 0012  
                ?_setLoad_Initialization 0070                __end_of_Flash_Memory_Main 1C08  
              __end_of_Flash_Memory_Read 25B9                               _setRF_Main 151A  
                          _DelayOff_Main 21F2                  ??_setBuz_Initialization 0024  
                      _DimmerLights_Main 223F                        __end_of_setINT_GO 0809  
         __size_of_DlyOff_Initialization 000B                    ??_CC2500_WriteCommand 0022  
          __end_of_DlyOff_Initialization 2234                        ??_setRF_ReceiveGO 0073  
             __end_of_CC2500_ClearRXFIFO 218A                 ??_setTemp_Initialization 0021  
             __end_of_CC2500_ClearTXFIFO 218E            DimmerLightsPointSelect@lights 0021  
                           ?_DlyOff_Main 0070                       ?_DimmerLights_Main 0070  
                   setBuz_Enable@command 0022                           _LedPointSelect 2702  
                 __size_of_setBuz_Enable 0010                      _DelayOffPointSelect 2527  
                                clrloop0 21C9           __size_of_Switch_Initialization 000D  
          __end_of_Switch_Initialization 230E                     end_of_initialization 0056  
              ??_DelayOff_Initialization 0023                               _setLoad_GO 233B  
                      _CC2500_InitSetREG 189A                            _DelayTime_1us 27B4  
                      __end_of_setTxData 1ABA               __end_of_Flash_Memory_Write 0800  
                 __size_of_setLoad_ERROR 0077                                  init_ram 21C2  
                     ?_CC2500_InitSetREG 0070                      ??_DimmerLights_Main 0063  
                   Flash_Memory_Read@ret 0023                                  initloop 21C3  
                             _setSw_Main 067A                    CC2500_ReadByte@loop_b 0021  
                      _CC2500_ReadStatus 25EC                              ?_getPF_Safe 0070  
                 __size_of_setLoad_Count 0014                     Flash_Memory_Modify@i 0026  
                  _setLED_Initialization 2463                            _CC2500_Enable 03D0  
                 getDimmer_Detect@dimmer 0023                         ?i1_RfPointSelect 0070  
                 ??_setLoad_LightsStatus 0024                       ?_CC2500_ReadStatus 0070  
                       setRFSW_Status@sw 0023            __size_of_MainT_Initialization 0018  
                  ??_setPowerFault_ERROR 002D                 __size_of_CC2500_ReadByte 001D  
                          _CC2500_RxData 1F9C                            _CC2500_TxData 1B7F  
                    ??_CC2500_InitSetREG 0025                     __end_of_setRF_Enable 2800  
         ??_setPowerFault_Initialization 0021              ?_setDimmerLights_TriggerAdj 0022  
              __size_of_getPowerFault_AD 004D            __size_of_Flash_Memory_Erasing 000C  
                   ?_DelayOffPointSelect 0070                      _Flash_Memory_Modify 1390  
                       ?_LoadPointSelect 0070                              ?_getLoad_AD 0024  
                         getLoad_AD@load 002A                             __pstringtext 1800  
                    _Flash_Memory_Unlock 220A                      ??_CC2500_ReadStatus 0022  
                 setRF_Initialization@rf 0070                         _setLoad_StatusOn 2403  
       getDimmerLights_StatusFlag@Status 0024                  CC2500_InitSetREG@loop_c 0028  
                            ?_getTemp_AD 0024           __end_of_setLoad_Initialization 2423  
                    __size_of_TouchPower 0005                 setLED_Initialization@led 0024  
                 setDimmer_Detect@dimmer 0023                   setSw_Initialization@sw 0024  
              __end_of_DimmerLights_Main 224A                       _Mcu_Initialization 2556  
                       ??_setLoad_Enable 0023                 __size_of_CC2500_PowerRST 0030  
                         ?_DelayOff_Main 0070                         ?_RfSWPointSelect 0070  
                        _setSw_Main$4431 002D                          _setSw_Main$4432 002E  
       getDimmerLights_StatusFlag@length 0023                         __CFG_FOSC$INTOSC 0000  
                 __end_of_LedPointSelect 2724                  __end_of_Sw_DimmerOnFunc 1CDF  
                __end_of_setPercentValue 1C4E                 __size_of_CC2500_WriteREG 0019  
              __end_of_CC2500_InitSetREG 18C4                      ?_Mcu_Initialization 0070  
                       ?_TempPointSelect 0070                     ?_Flash_Memory_Modify 0070  
            __size_of_setRF_DimmerLights 006D                           ?_DelayTime_1us 0020  
                    _setDimmerLights_Adj 1F38                     ?_Flash_Memory_Unlock 0070  
            getDimmerLights_StatusFlag@i 0025                __end_of_CC2500_ReadStatus 2607  
                          ?_RF_RxDisable 0070                              ___ftdiv@exp 003C  
                         __end_of_IO_Set 25D2                     _setRF_Initialization 21E3  
                            _Switch_Main 2202              setDimmerLights_Clear@lights 0023  
                      __size_of_LED_Main 000C                           ?_CC2500_RxData 0070  
                         ?_CC2500_TxData 0070                  _DimmerLightsPointSelect 2497  
                    _getDimmer_LoadERROR 22C1                              ___ftmul@exp 0038  
                  _CC2500_PowerOnInitial 24E6                      _setDimmer_LoadERROR 234A  
                   ??_Mcu_Initialization 0021                    ??_DelayOffPointSelect 0020  
                          _setBuz_Enable 23B3                    setOverTemp_ERROR@temp 002E  
                   ?_setDimmerLights_Adj 005D                     __end_of_setLoad_Main 067A  
              __size_of_Sw_DimmerAdjFunc 0026                     setRF_DimmerLights@on 0020  
                         __end_of___wmul 2642                             setRF_Main@rf 006A  
                          _setLoad_ERROR 129E                        __size_of_TMR0_ISR 0351  
                      __size_of_TMR0_Set 000D            __size_of_setDimmerLights_Main 0091  
                         __end_of_setLED 1ED7                           __end_of_setBuz 163D  
                          _setLoad_Count 24BE                        _DimmerPointSelect 2285  
                   _CC2500_FrequencyCabr 226D               __end_of_DimmerLights_ERROR 1229  
                setLoad_StatusOn@command 0022                __size_of_Sw_DimmerOffFunc 0075  
             __size_of_Flash_Memory_Main 0045               __size_of_Flash_Memory_Read 0019  
                            ?_setRF_Main 0070                          _setRFSW_Control 092B  
                    __size_of_getPF_Safe 000E            getDimmerLights_Trigger@Status 0024  
                      ?_setDimmerReClock 0070                      start_initialization 0018  
                      _setRF_DimmerValue 1A3D                          ?_LedPointSelect 0070  
                       _getDimmer_Detect 23F3               __end_of_DimmerLights_Close 26BF  
                              _Load_Main 2196                      _getDimmer_TempERROR 1000  
               setDimmer_PFERROR@command 0022                     ?_getDimmer_LoadERROR 0070  
                     ?_DimmerPointSelect 0070                  setLoad_StatusOff@lights 0022  
                            __end_of_ISR 0016                      _setDimmer_TempERROR 23A4  
                   ?_setDimmer_LoadERROR 0022                        ?_setDimmer_Detect 0022  
                  ??_Flash_Memory_Modify 0024             __size_of_Load_Initialization 0004  
     __size_of_PowerFault_Initialization 0004                       ??_setDimmerReClock 0070  
                     ?_setRF_DimmerValue 0070               __end_of_CC2500_InitPATable 267F  
        __size_of_setTemp_Initialization 000B            getDimmerLights_Trigger@length 0023  
                  ??_Flash_Memory_Unlock 0020                     __end_of_setTemp_Main 1000  
                     ??_setDimmer_Detect 0023                              ?_setLoad_GO 0022  
                         ??_RF_RxDisable 0024                     __end_of_setSw_Enable 2368  
                        RfPointSelect@rf 0021                      __size_of_getLoad_AD 009B  
                           ?_Buzzer_Main 0070                      ??_DimmerPointSelect 0020  
                               ??_IO_Set 0020                                _VarErrLED 00D8  
                            ?_setSw_Main 0070                      ??_setRF_DimmerValue 0061  
                    __size_of_getTemp_AD 0071                   ?_setLED_Initialization 0070  
                   __end_of_setSw_Status 232C                       Sw_DimmerAdjFunc@sw 0024  
                  ?_setRF_Initialization 0070                i1setLoad_StatusOff@lights 0072  
                              _VarMemory 0220                  __size_of_setRFSW_Status 000F  
                  __end_of_RfPointSelect 2285                __size_of_CC2500_WriteByte 0019  
                              _VarTimer0 00C7                                _Temp_Main 21AE  
                   ?_getDimmer_TempERROR 0070                     ?_setDimmer_TempERROR 0022  
                              _Rx_Length 00C1                           ?_setBuz_Enable 0022  
                setRF_DimmerValue@lights 0063                    ??_setDimmerLights_Adj 005E  
                               ??___wmul 0024                   __size_of_SwPointSelect 0014  
                              _Tx_Length 00C3                              __pdataBANK3 01A0  
                            __pdataBANK4 0220                           ?_setLoad_ERROR 002C  
                               ??_setLED 0023                         ??_setTemp_Enable 0022  
                               ?_ADC_Set 0070                                 ??_setBuz 0029  
              __end_of_DimmerPointSelect 2291                          ??_DelayOff_Main 002E  
                      ??_CC2500_ReadByte 0020                           ?_setLoad_Count 0020  
                       _CC2500_SIDLEMode 218E               __size_of_DimmerLights_Main 000B  
              __end_of_setRF_DimmerValue 1A7A                    ?_CC2500_FrequencyCabr 0070  
                       setINT_GO@command 0020                            ??_setLED_Main 0022  
                      __size_of___awtoft 0022                        __size_of___ftpack 0061  
                               ?_IOC_ISR 0070                          _setRF_Main$4076 006B  
                  ??_getDimmer_LoadERROR 0022                              __pbssCOMMON 007B  
                               ?_IOC_Set 0070                    ??_setDimmer_LoadERROR 0023  
                              ___latbits 0003                               ?_Load_Main 0070  
                  setTemp_Enable@command 0021                                 ?_INT_ISR 0070  
                    setRF_Enable@command 0025                         ?_Sw_DimmerOnFunc 0070  
                          __pcstackBANK0 0020                                 ?_INT_Set 0070  
                       ?_setPercentValue 0070                          ??_DelayTime_1us 0022  
             __size_of_CC2500_InitSetREG 002A                 __size_of_setDimmerLights 0097  
                          DlyOff_Main@sw 002D                        ??_CC2500_PowerRST 0026  
                               ?_RF_Main 0070             setDimmerLights_Clear@command 0022  
                           ??_TouchPower 0020                 __size_of_PowerFault_Main 0004  
                   __size_of_DlyOff_Main 007B               __size_of_CC2500_ReadStatus 001B  
                          ??_setRF_Learn 0023                        ??_CC2500_WriteREG 0023  
                          _DimmerLights1 012E                            _DimmerLights2 013B  
                  CC2500_WriteREG@w_addr 0024               setLoad_Initialization@load 0022  
                  setDelayOff_GO@command 0023                ??_DimmerLightsPointSelect 0020  
         __size_of_setLoad_AH_AL_Restore 0022                    __size_of_setRF_Enable 0026  
                  _PowerFaultPointSelect 21D5                          ??_CC2500_RxData 0024  
          __end_of_setLoad_AH_AL_Restore 2746                  __size_of_setRF_RxStatus 000F  
                        ??_CC2500_TxData 0024                                __pnvBANK1 00EB  
            __size_of_LED_Initialization 000C                    ??_getDimmer_TempERROR 0022  
                 ?_CC2500_PowerOnInitial 0070                    ??_setDimmer_TempERROR 0023  
                             ?_Temp_Main 0070                      __size_of_setRF_Main 0091  
                       ___lwdiv@dividend 0022                    DelayOffPointSelect@sw 0021  
               ?_getDimmerLights_Trigger 0070                               setBuz@time 0027  
                    setDelayOff_GO@value 0024                 ?_setControl_Lights_Table 0070  
                 _setTemp_Initialization 224A                         _getPowerFault_AD 1D2C  
    __end_of_Flash_Memory_Initialization 0BE5              _Flash_Memory_Initialization 0B25  
                              __ptext100 1E79                                __ptext101 2702  
                              __ptext110 2485                                __ptext102 26BF  
                              __ptext111 1B3B                                __ptext103 269F  
                              __ptext120 1315                                __ptext112 1E1E  
                              __ptext104 233B                                __ptext121 1A7A  
                              __ptext113 0809                                __ptext105 2234  
                              __ptext130 2497                                __ptext122 2279  
                              __ptext114 0A71                                __ptext106 232C  
                              __ptext131 15AB                                __ptext123 231D  
                              __ptext115 09C8                                __ptext107 23F3  
                              __ptext140 2660                                __ptext132 2624  
                              __ptext124 24AA                                __ptext116 0CAC  
                              __ptext108 2285                                __ptext141 2587  
                              __ptext133 21EA                                __ptext125 10D8  
                              __ptext117 26E0                                __ptext109 267F  
                               ?___ftadd 003E                                __ptext150 217E  
                              __ptext142 226D                                __ptext134 2229  
                              __ptext126 230E                                __ptext118 1ED7  
                              __ptext151 21CE                                __ptext143 27B4  
                              __ptext135 2527                                __ptext127 24FB  
                              __ptext119 21F2                                __ptext160 2255  
                              __ptext152 23B3                                __ptext144 218A  
                              __ptext136 24E6                                __ptext128 23E3  
                              __ptext161 22CD                                __ptext153 2261  
                              __ptext145 2186                                __ptext137 218E  
                              __ptext129 23D3                                __ptext162 2213  
                              __ptext146 23C3                                __ptext138 19D6  
                              __ptext155 005A                                __ptext147 256E  
                              __ptext139 189A                                __ptext156 191C  
                              __ptext148 2182                                __ptext157 221E  
                              __ptext149 0BE5                                __ptext158 276A  
                              __ptext159 25D2                                _getRxData 1CDF  
                               ?___ftdiv 002E                                 ?___ftmul 002E  
                               ?___fttol 004B                                 ?___lwdiv 0020  
                __end_of_setRFSW_Control 09C8                          _setRF_ReceiveGO 22CD  
                    __size_of_setLoad_GO 000F                            ??_setBuz_Main 0022  
          __size_of_setSw_Initialization 0008           __size_of_Buzzer_Initialization 0004  
             setTemp_Initialization@temp 0021            __end_of_Buzzer_Initialization 2182  
                             setTxData@i 0025                         getPercentValue@i 005C  
                       setPercentValue@i 005A                            ??_setLog_Code 002B  
                     __end_of_TouchPower 21BC                       _setPowerFault_Main 0DA2  
     setDimmerLights_TriggerERROR@lights 0023           __size_of_setDimmerLights_ERROR 0055  
               ?_setDimmerLights_Trigger 0022                          DelayTimejudge@i 0021  
                    __size_of_setSw_Main 0155            __end_of_setDimmerLights_ERROR 1E1E  
           CC2500_ReadStatus@status_addr 0023           __size_of_setDimmerLights_AdjRF 0024  
         __size_of_setDimmerLights_AdjGo 0010            __end_of_setDimmerLights_AdjRF 276A  
          __end_of_setDimmerLights_AdjGo 2453                   CC2500_WriteByte@loop_a 0021  
         __size_of_setDimmerLights_Clear 0010            __end_of_setDimmerLights_Clear 2433  
                         __size_of_MainT 0097                                _r_address 00C4  
                         setBuz_Main@buz 0026             __end_of_CC2500_patable_vaule 1866  
         __size_of_setBuz_Initialization 0007            __end_of_setBuz_Initialization 21D5  
                    ?_setPowerFault_Main 0070                           __size_of_getAD 0016  
                           _setRF_Enable 27DA                         ___lwdiv@quotient 0025  
                __size_of_DelayTimejudge 002E                            _SwPointSelect 24AA  
                     Sw_DimmerOffFunc@sw 0029                                _setINT_GO 0800  
                    __end_of_setLED_Main 1AFA                  __size_of_BuzPointSelect 000C  
               __end_of_setLoad_StatusOn 2413                   ??_setRF_Initialization 0020  
            __end_of_Temp_Initialization 21AE                        _CC2500_rfSettings 182F  
                         ___wmul@product 0024                                 _LED_Main 22A9  
                           getPF_Safe@pf 0021                             ??_getPF_Safe 0021  
                        SwPointSelect@sw 0021                                clear_ram0 21C8  
               CC2500_InitPATable@loop_d 0027                                _setTxData 1A7A  
    __end_of_DimmerLights_Initialization 2497              _DimmerLights_Initialization 2485  
                        ??_setBuz_Enable 0023                       _CC2500_ClearRXFIFO 2186  
                  __size_of_setLoad_Main 02CF                       _CC2500_ClearTXFIFO 218A  
         setDimmerLights_Trigger@command 0022                           getTemp_AD@temp 0029  
               setRF_DimmerLights@lights 0024                                 _GO_nDONE 04E9  
                    __end_of_setRF_Learn 23A4                     ??_setPowerFault_Main 002F  
               __size_of_getPercentValue 005B                           setLoad_GO@load 0023  
               setRF_DimmerLights@status 0023                          ??_setLoad_ERROR 002D  
                 setRF_ReceiveGO@command 0072              __size_of_setRFSW_AdjControl 0048  
                     _Flash_Memory_Write 07CF                               ?_getRxData 0070  
                               _TMR0_ISR 005A                             ??_getLoad_AD 0025  
                 CC2500_InitSetREG@temp1 0026                   CC2500_InitSetREG@temp2 0027  
            __end_ofi1_setLoad_StatusOff 194A                        setRF_ReceiveGO@rf 0073  
                               _TMR0_Set 22F4                         _Sw_DimmerAdjFunc 1874  
                    ?_CC2500_ClearRXFIFO 0070                 getDimmerLights_Trigger@i 0025  
                    ?_CC2500_ClearTXFIFO 0070                          ??_setLoad_Count 0021  
      setDimmerLights_TriggerAdj@command 0022                                 _RF_Count 00B5  
                   __end_of_RF_RxDisable 191C                             ??_getTemp_AD 0025  
             __size_of_DimmerPointSelect 000C              __end_of_CC2500_WriteCommand 23D3  
                 ??_CC2500_FrequencyCabr 0026                  i1setLoad_StatusOff@load 0074  
                DlyOff_Initialization@sw 0022                         __size_of_ADC_Set 0007  
                      ___wmul@multiplier 0020               __size_of_setRF_DimmerValue 003D  
                    ?_Flash_Memory_Write 0070                         _Sw_DimmerOffFunc 1229  
             setPowerFault_ERROR@command 002C                    __size_of_setTemp_Main 0132  
           __end_of_MainT_Initialization 2556                  __size_of_setDelayOff_GO 0041  
                  __size_of_setSw_Enable 000F                                 _DelayOff 00B9  
                           setSw_Main@sw 002F                              ??_Load_Main 0034  
                     __end_of_getPF_Safe 1874                         __size_of_IOC_ISR 0025  
                       __size_of_IOC_Set 000D                      __end_of_setBuz_Main 0CAC  
           __end_of_Flash_Memory_Erasing 229D                           ?_SwPointSelect 0070  
                            getAD@adcon0 0023                              getAD@adcon1 0020  
                       __size_of_INT_ISR 000C                           setLED_Main@led 0024  
                       __size_of_INT_Set 0005                      __end_of_setLog_Code 1DC9  
                  _DlyOff_Initialization 2229                    __size_of_setSw_Status 000F  
                             ?_setINT_GO 0070                     ??_CC2500_ClearRXFIFO 0024  
                   ??_CC2500_ClearTXFIFO 0024                         setBuz_Enable@buz 0023  
              __end_of_CC2500_rfSettings 185E                             _setLoad_Main 03AB  
                       __size_of_RF_Main 0004                       __end_of_getLoad_AD 092B  
                 ?_PowerFaultPointSelect 0070              __end_of_setPowerFault_ERROR 10D8  
                  _Switch_Initialization 2301                     ??_Flash_Memory_Write 0020  
                      ??_setDimmerLights 0027                           _setRFSW_Status 230E  
                   __size_of_Buzzer_Main 0004                       __end_of_getTemp_AD 11B6  
                             ?_setTxData 0070                             ?_Switch_Main 0070  
                       _CC2500_WriteByte 256E                                 _VarTMain 01BE  
                      getLoad_AD@channel 0024             Flash_Memory_Initialization@i 005E  
                __end_of_setRF_ReceiveGO 22DA                              ??_Temp_Main 0033  
                      ??_PowerFault_Main 0032                setLoad_AH_AL_Restore@load 0070  
               __end_of_getDimmer_Detect 2403                        setRFSW_Control@sw 002D  
               setLoad_LightsStatus@load 0025                      _Load_Initialization 2192  
                              setLED@led 0023            __size_of_setLoad_LightsStatus 002F  
                               _RxStatus 03D3                  PowerFaultPointSelect@pf 0070  
   __end_of_setDimmerLights_TriggerERROR 18EF    __size_of_setDimmerLights_TriggerERROR 002B  
           _setDimmerLights_TriggerERROR 18C4                    i1LoadPointSelect@load 0071  
                               _TxStatus 03D6                             _setTemp_Main 0ECE  
                       __size_of___ftadd 00F6                         ?_setRFSW_Control 0070  
                      i1_LoadPointSelect 221E                         __size_of___ftdiv 00A9  
                           _setSw_Enable 2359                         __size_of___ftmul 00B4  
                       __size_of___fttol 0087                         __size_of___lwdiv 0037  
               __size_ofi1_RfPointSelect 000B                                 ___awtoft 26E0  
                       ??_LedPointSelect 0020                                 ___ftpack 1ED7  
                     ?i1_LoadPointSelect 0070                             _setSw_Status 231D  
                      getTemp_AD@channel 0024                             ??_setRF_Main 0069  
               __size_of_LoadPointSelect 000B                     CC2500_WriteREG@value 0022  
                            _setLED_Main 1ABA                    setRFSW_Status@command 0022  
             __end_of_setRF_DimmerLights 1145                 ?_DelayOff_Initialization 0070  
                              setBuz@buz 002A                         setDelayOff_GO@sw 0026  
                        ___lwdiv@divisor 0020                     ?_Load_Initialization 0070  
                        ___lwdiv@counter 0027                      ??i1_LoadPointSelect 0070  
                               __ptext10 224A                                 __ptext11 2202  
                               __ptext20 21FA                                 __ptext12 067A  
                               __ptext21 21B7                                 __ptext13 2395  
                               __ptext30 1C4E                                 __ptext22 21A6  
                               __ptext14 1C96                                 __ptext31 1A3D  
                               __ptext23 151A                                 __ptext15 1229  
                               __ptext40 219E                                 __ptext32 2746  
                               __ptext24 1CDF                                 __ptext16 1874  
                               __ptext41 0DA2                                 __ptext33 1B7F  
                               __ptext25 1D79                                 __ptext17 2453  
                               __ptext50 22E7                                 __ptext42 1070  
                               __ptext34 1F9C                                 __ptext26 163D  
                               __ptext18 2443                                 __ptext51 21B2  
                               __ptext43 2377                                 __ptext35 2386  
                               __ptext27 092B                                 __ptext19 2301  
                               __ptext60 2359                                 __ptext52 21DC  
                               __ptext44 2433                                 __ptext36 25EC  
                               __ptext28 1AFA                                 __ptext61 27DA  
                               __ptext53 253E                                 __ptext45 219A  
                               __ptext37 2607                                 __ptext29 194A  
                               __ptext70 22C1                                 __ptext62 18EF  
                               __ptext54 1769                                 __ptext46 2474  
                               __ptext38 21A2                                 __ptext71 2423  
                               __ptext63 0800                                 __ptext55 2368  
                               __ptext47 2556                                 __ptext39 21E3  
                               __ptext80 22A9                                 __ptext72 22B5  
                               __ptext64 234A                                 __ptext56 24D2  
                               __ptext48 22F4                                 __ptext81 1ABA  
                               __ptext73 21BC                                 __ptext65 11B6  
                               __ptext57 2196                                 __ptext49 25B9  
                               __ptext90 25A0                                 __ptext82 229D  
                               __ptext74 1866                                 __ptext66 18C4  
                               __ptext58 03AB                                 __ptext91 223F  
                               __ptext83 2463                                 __ptext75 21D5  
                               __ptext67 1DC9                                 __ptext59 129E  
                               __ptext92 1489                                 __ptext84 1BC3  
                               __ptext76 1A06                                 __ptext68 1000  
                               __ptext93 1F38                                 __ptext85 1390  
                               __ptext77 2192                                 __ptext69 22DA  
                               __ptext94 1C08                                 __ptext86 2291  
                               __ptext78 2413                                 __ptext95 19A7  
                               __ptext87 0B25                                 __ptext79 2724  
                               __ptext96 16D2                                 __ptext88 07CF  
                               __ptext97 2403                                 __ptext89 220A  
                               __ptext98 1978                                 __ptext99 24BE  
                           ??_setLoad_GO 0023                  ??_setLED_Initialization 0024  
               __size_of_RfSWPointSelect 0016                 setBuz_Initialization@buz 0070  
                 __end_of_setRFSW_Status 231D             __end_of_setDimmerLights_Main 151A  
                     _DimmerLights_ERROR 11B6              setDimmerLights_ERROR@lights 0026  
                           ??_setSw_Main 002B                            setLED@command 0022  
                          __size_of_main 007E                              _setRF_Learn 2395  
               __end_of_CC2500_SIDLEMode 2192                           _setRF_RxStatus 2386  
             setDimmerLights_Main@lights 0062              __end_of_DelayOffPointSelect 253E  
             CC2500_WriteCommand@command 0023                       _DimmerLights_Close 269F  
               __size_of_TempPointSelect 0006                 ??_setDimmerLights_Switch 0023  
              __size_of_setDimmerReClock 001A                          _CC2500_ReadByte 2607  
                     _CC2500_InitPATable 2660                __size_of_setDimmer_Detect 000F  
    __size_of_getDimmerLights_StatusFlag 0020                      ?_DimmerLights_ERROR 0070  
          setDimmerLights_Trigger@lights 0023                       __end_of_setRF_Main 15AB  
            __size_of_Mcu_Initialization 0018                __end_ofi1_LoadPointSelect 2229  
                   _CC2500_patable_vaule 185E                              ??_getRxData 0068  
                    ?_DimmerLights_Close 0070         setDimmerLights_TriggerAdj@lights 0023  
          ?_setDimmerLights_TriggerERROR 0022                      ?_CC2500_InitPATable 0070  
                      setLoad_ERROR@load 002E                          _CC2500_PowerRST 19D6  
                     __end_of_setLoad_GO 234A                              _setBuz_Main 0BE5  
            __end_of_Flash_Memory_Modify 140B                        ??_getPercentValue 0059  
                            _setLog_Code 1D79                    setLoad_StatusOff@load 0024  
                  setRF_RxStatus@command 0022              __end_of_Flash_Memory_Unlock 2213  
                        ??_SwPointSelect 0020                  DimmerPointSelect@dimmer 0021  
                        _CC2500_WriteREG 2587                       __end_of_setSw_Main 07CF  
                      setLoad_GO@command 0022                    ??_Load_Initialization 0023  
                   ??_DimmerLights_ERROR 002B                            _Transceive_GO 03D4  
                          _Transceive_OK 03D5                     setLoad_Count@command 0020  
                 ?_DlyOff_Initialization 0070                           _DelayTimejudge 194A  
                          ?_getLoad_Safe 0070                              pic14e$flags 007E  
               __end_of_getPowerFault_AD 1D79                     ??_DimmerLights_Close 0026  
                            ??_setINT_GO 0020                        BuzPointSelect@buz 0021  
                               intlevel1 0000                           _BuzPointSelect 2261  
                   ??_CC2500_InitPATable 0025                  __size_of_setLoad_Enable 0014  
                 ?_Switch_Initialization 0070                   __end_of_setRF_RxStatus 2395  
                        ?_setRFSW_Status 0022                  ??_CC2500_PowerOnInitial 0029  
 __end_of_setDimmerLights_Initialization 1B7F  __size_of_setDimmerLights_Initialization 0044  
         _setDimmerLights_Initialization 1B3B              __end_of_setDimmerLights_Adj 1F9C  
                ?_setTemp_Initialization 0070                              ??_setTxData 0022  
                       ?_setRF_ReceiveGO 0072                   CC2500_InitPATable@temp 0026  
                   _MainT_Initialization 253E                    __size_of_RF_RxDisable 002D  
                      _RF_Initialization 21A2                              getLoad_AD@i 002C  
                            getLoad_AD@j 002B                 ??_setLoad_Initialization 0022  
                          ?_getTemp_Safe 0070                     _Flash_Memory_Erasing 2291  
            setLoad_LightsStatus@command 0023                       ?_RF_Initialization 0070  
                   setLoad_StatusOn@load 0023                               _SPI0Buffer 00C2  
            __end_of_getDimmer_LoadERROR 22CD              __end_of_setDimmer_LoadERROR 2359  
        __end_of_DelayOff_Initialization 21F2                               _OPTION_REG 0095  
                  __end_of_DelayOff_Main 21FA                      ??_RF_Initialization 0021  
                            getRxData@rf 0068                           _setDelayOff_GO 1AFA  
       __size_of_getDimmerLights_Trigger 0021         __size_of_setControl_Lights_Table 0095  
                      _setLoad_StatusOff 19A7                   __end_of_DelayTimejudge 1978  
                 __size_of_RfPointSelect 000C                        ??i1_RfPointSelect 0070  
                         ??_getLoad_Safe 0022     __size_of_Flash_Memory_Initialization 00C0  
                          ??_DlyOff_Main 002B                       ?_setLoad_StatusOff 0022  
                 __end_of_BuzPointSelect 226D               setLoad_LightsStatus@lights 0022  
                setDimmer_Detect@command 0022                    __end_of_DelayTime_1us 27DA  
                      ??_LoadPointSelect 0020                 __end_of_Sw_DimmerAdjFunc 189A  
                __end_of_CC2500_ReadByte 2624              __end_of_getDimmer_TempERROR 100C  
           __end_of_setSw_Initialization 2202                          ?_setRF_RxStatus 0022  
            __end_of_setDimmer_TempERROR 23B3                     getPercentValue@value 005B  
                           _RF_RxDisable 18EF               ?_PowerFault_Initialization 0070  
             __end_of_LED_Initialization 22A9         __size_of_setDimmerLights_Trigger 0010  
                      ?_setLoad_StatusOn 0022           __end_of_setTemp_Initialization 2255  
               __size_of_Sw_DimmerOnFunc 0049                      ??_setLoad_StatusOff 0024  
               __size_of_setPercentValue 0046                     setPercentValue@value 0059  
              __end_of_RF_Initialization 21A6                 __end_of_Sw_DimmerOffFunc 129E  
                     ??_setLoad_StatusOn 0023          __size_of_setDimmerLights_Switch 0010  
                      ??_RfSWPointSelect 0020                    ?_MainT_Initialization 0070  
                       setRF_RxStatus@rf 0023                    __end_of_CC2500_RxData 2000  
                  __end_of_CC2500_TxData 1BC3                           ??_getTemp_Safe 0021  
                  _setLoad_AH_AL_Restore 2724                      setSw_Status@command 0022  
                __end_of_CC2500_PowerRST 1A06  
