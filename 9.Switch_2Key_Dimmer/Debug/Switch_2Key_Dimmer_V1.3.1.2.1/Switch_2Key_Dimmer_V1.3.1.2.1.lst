

Microchip Technology PIC LITE Macro Assembler V1.32 build 58300 
                                                                                               Wed Oct 01 08:37:37 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	16F1518
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK3,global,class=CODE,delta=2
     5                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1
    10                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    14                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    15                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    16                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    17                           	psect	clrtext,global,class=CODE,delta=2
    18                           	psect	inittext,global,class=CODE,delta=2
    19                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    20                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    21                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    22                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    23                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    24                           	psect	text1,local,class=CODE,merge=1,delta=2
    25                           	psect	text2,local,class=CODE,merge=1,delta=2
    26                           	psect	text3,local,class=CODE,merge=1,delta=2
    27                           	psect	text4,local,class=CODE,merge=1,delta=2
    28                           	psect	text5,local,class=CODE,merge=1,delta=2
    29                           	psect	text6,local,class=CODE,merge=1,delta=2
    30                           	psect	text7,local,class=CODE,merge=1,delta=2
    31                           	psect	text8,local,class=CODE,merge=1,delta=2
    32                           	psect	text9,local,class=CODE,merge=1,delta=2
    33                           	psect	text10,local,class=CODE,merge=1,delta=2
    34                           	psect	text11,local,class=CODE,merge=1,delta=2
    35                           	psect	text12,local,class=CODE,merge=1,delta=2
    36                           	psect	text13,local,class=CODE,merge=1,delta=2
    37                           	psect	text14,local,class=CODE,merge=1,delta=2
    38                           	psect	text15,local,class=CODE,merge=1,delta=2
    39                           	psect	text16,local,class=CODE,merge=1,delta=2
    40                           	psect	text17,local,class=CODE,merge=1,delta=2
    41                           	psect	text18,local,class=CODE,merge=1,delta=2
    42                           	psect	text19,local,class=CODE,merge=1,delta=2
    43                           	psect	text20,local,class=CODE,merge=1,delta=2
    44                           	psect	text21,local,class=CODE,merge=1,delta=2
    45                           	psect	text22,local,class=CODE,merge=1,delta=2
    46                           	psect	text23,local,class=CODE,merge=1,delta=2
    47                           	psect	text24,local,class=CODE,merge=1,delta=2
    48                           	psect	text25,local,class=CODE,merge=1,delta=2
    49                           	psect	text26,local,class=CODE,merge=1,delta=2
    50                           	psect	text27,local,class=CODE,merge=1,delta=2
    51                           	psect	text28,local,class=CODE,merge=1,delta=2
    52                           	psect	text29,local,class=CODE,merge=1,delta=2
    53                           	psect	text30,local,class=CODE,merge=1,delta=2
    54                           	psect	text31,local,class=CODE,merge=1,delta=2
    55                           	psect	text32,local,class=CODE,merge=1,delta=2
    56                           	psect	text33,local,class=CODE,merge=1,delta=2
    57                           	psect	text34,local,class=CODE,merge=1,delta=2
    58                           	psect	text35,local,class=CODE,merge=1,delta=2
    59                           	psect	text36,local,class=CODE,merge=1,delta=2
    60                           	psect	text37,local,class=CODE,merge=1,delta=2
    61                           	psect	text38,local,class=CODE,merge=1,delta=2
    62                           	psect	text39,local,class=CODE,merge=1,delta=2
    63                           	psect	text40,local,class=CODE,merge=1,delta=2
    64                           	psect	text41,local,class=CODE,merge=1,delta=2
    65                           	psect	text42,local,class=CODE,merge=1,delta=2
    66                           	psect	text43,local,class=CODE,merge=1,delta=2
    67                           	psect	text44,local,class=CODE,merge=1,delta=2
    68                           	psect	text45,local,class=CODE,merge=1,delta=2
    69                           	psect	text46,local,class=CODE,merge=1,delta=2
    70                           	psect	text47,local,class=CODE,merge=1,delta=2
    71                           	psect	text48,local,class=CODE,merge=1,delta=2
    72                           	psect	text49,local,class=CODE,merge=1,delta=2
    73                           	psect	text50,local,class=CODE,merge=1,delta=2
    74                           	psect	text51,local,class=CODE,merge=1,delta=2
    75                           	psect	text52,local,class=CODE,merge=1,delta=2
    76                           	psect	text53,local,class=CODE,merge=1,delta=2
    77                           	psect	text54,local,class=CODE,merge=1,delta=2
    78                           	psect	text55,local,class=CODE,merge=1,delta=2
    79                           	psect	text56,local,class=CODE,merge=1,delta=2
    80                           	psect	text57,local,class=CODE,merge=1,delta=2
    81                           	psect	text58,local,class=CODE,merge=1,delta=2
    82                           	psect	text59,local,class=CODE,merge=1,delta=2
    83                           	psect	text60,local,class=CODE,merge=1,delta=2
    84                           	psect	text61,local,class=CODE,merge=1,delta=2
    85                           	psect	text62,local,class=CODE,merge=1,delta=2
    86                           	psect	text63,local,class=CODE,merge=1,delta=2
    87                           	psect	text64,local,class=CODE,merge=1,delta=2
    88                           	psect	text65,local,class=CODE,merge=1,delta=2
    89                           	psect	text66,local,class=CODE,merge=1,delta=2
    90                           	psect	text67,local,class=CODE,merge=1,delta=2
    91                           	psect	text68,local,class=CODE,merge=1,delta=2
    92                           	psect	text69,local,class=CODE,merge=1,delta=2
    93                           	psect	text70,local,class=CODE,merge=1,delta=2
    94                           	psect	text71,local,class=CODE,merge=1,delta=2
    95                           	psect	text72,local,class=CODE,merge=1,delta=2
    96                           	psect	text73,local,class=CODE,merge=1,delta=2
    97                           	psect	text74,local,class=CODE,merge=1,delta=2
    98                           	psect	text75,local,class=CODE,merge=1,delta=2
    99                           	psect	text76,local,class=CODE,merge=1,delta=2
   100                           	psect	text77,local,class=CODE,merge=1,delta=2
   101                           	psect	text78,local,class=CODE,merge=1,delta=2
   102                           	psect	text79,local,class=CODE,merge=1,delta=2
   103                           	psect	text80,local,class=CODE,merge=1,delta=2
   104                           	psect	text81,local,class=CODE,merge=1,delta=2
   105                           	psect	text82,local,class=CODE,merge=1,delta=2
   106                           	psect	text83,local,class=CODE,merge=1,delta=2
   107                           	psect	text84,local,class=CODE,merge=1,delta=2
   108                           	psect	text85,local,class=CODE,merge=1,delta=2
   109                           	psect	text86,local,class=CODE,merge=1,delta=2
   110                           	psect	text87,local,class=CODE,merge=1,delta=2
   111                           	psect	text88,local,class=CODE,merge=1,delta=2
   112                           	psect	text89,local,class=CODE,merge=1,delta=2
   113                           	psect	text90,local,class=CODE,merge=1,delta=2
   114                           	psect	text91,local,class=CODE,merge=1,delta=2
   115                           	psect	text92,local,class=CODE,merge=1,delta=2
   116                           	psect	text93,local,class=CODE,merge=1,delta=2
   117                           	psect	text94,local,class=CODE,merge=1,delta=2
   118                           	psect	text95,local,class=CODE,merge=1,delta=2
   119                           	psect	text96,local,class=CODE,merge=1,delta=2
   120                           	psect	text97,local,class=CODE,merge=1,delta=2
   121                           	psect	text98,local,class=CODE,merge=1,delta=2
   122                           	psect	text99,local,class=CODE,merge=1,delta=2
   123                           	psect	text100,local,class=CODE,merge=1,delta=2
   124                           	psect	text101,local,class=CODE,merge=1,delta=2
   125                           	psect	text102,local,class=CODE,merge=1,delta=2
   126                           	psect	text103,local,class=CODE,merge=1,delta=2
   127                           	psect	text104,local,class=CODE,merge=1,delta=2
   128                           	psect	text105,local,class=CODE,merge=1,delta=2
   129                           	psect	text106,local,class=CODE,merge=1,delta=2
   130                           	psect	text107,local,class=CODE,merge=1,delta=2
   131                           	psect	text108,local,class=CODE,merge=1,delta=2
   132                           	psect	text109,local,class=CODE,merge=1,delta=2
   133                           	psect	text110,local,class=CODE,merge=1,delta=2
   134                           	psect	text111,local,class=CODE,merge=1,delta=2
   135                           	psect	text112,local,class=CODE,merge=1,delta=2
   136                           	psect	text113,local,class=CODE,merge=1,delta=2
   137                           	psect	text114,local,class=CODE,merge=1,delta=2
   138                           	psect	text115,local,class=CODE,merge=1,delta=2
   139                           	psect	text116,local,class=CODE,merge=1,delta=2
   140                           	psect	text117,local,class=CODE,merge=1,delta=2
   141                           	psect	text118,local,class=CODE,merge=1,delta=2
   142                           	psect	text119,local,class=CODE,merge=1,delta=2
   143                           	psect	text120,local,class=CODE,merge=1,delta=2
   144                           	psect	text121,local,class=CODE,merge=1,delta=2
   145                           	psect	text122,local,class=CODE,merge=1,delta=2
   146                           	psect	text123,local,class=CODE,merge=1,delta=2
   147                           	psect	text124,local,class=CODE,merge=1,delta=2
   148                           	psect	intentry,global,class=CODE,delta=2
   149                           	psect	text126,local,class=CODE,merge=1,delta=2
   150                           	psect	text127,local,class=CODE,merge=1,delta=2
   151                           	psect	text128,local,class=CODE,merge=1,delta=2
   152                           	psect	text129,local,class=CODE,merge=1,delta=2
   153                           	psect	text130,local,class=CODE,merge=1,delta=2
   154                           	psect	text131,local,class=CODE,merge=1,delta=2
   155                           	dabs	1,0x7E,2
   156  0000                     	;# 
   157  0001                     	;# 
   158  0002                     	;# 
   159  0003                     	;# 
   160  0004                     	;# 
   161  0005                     	;# 
   162  0006                     	;# 
   163  0007                     	;# 
   164  0008                     	;# 
   165  0009                     	;# 
   166  000A                     	;# 
   167  000B                     	;# 
   168  000C                     	;# 
   169  000D                     	;# 
   170  000E                     	;# 
   171  0010                     	;# 
   172  0011                     	;# 
   173  0012                     	;# 
   174  0015                     	;# 
   175  0016                     	;# 
   176  0016                     	;# 
   177  0017                     	;# 
   178  0018                     	;# 
   179  0019                     	;# 
   180  001A                     	;# 
   181  001B                     	;# 
   182  001C                     	;# 
   183  008C                     	;# 
   184  008D                     	;# 
   185  008E                     	;# 
   186  0090                     	;# 
   187  0091                     	;# 
   188  0092                     	;# 
   189  0095                     	;# 
   190  0096                     	;# 
   191  0097                     	;# 
   192  0099                     	;# 
   193  009A                     	;# 
   194  009B                     	;# 
   195  009B                     	;# 
   196  009C                     	;# 
   197  009D                     	;# 
   198  009E                     	;# 
   199  010C                     	;# 
   200  010D                     	;# 
   201  010E                     	;# 
   202  0116                     	;# 
   203  0117                     	;# 
   204  011D                     	;# 
   205  018C                     	;# 
   206  018D                     	;# 
   207  018E                     	;# 
   208  0191                     	;# 
   209  0191                     	;# 
   210  0192                     	;# 
   211  0193                     	;# 
   212  0193                     	;# 
   213  0194                     	;# 
   214  0195                     	;# 
   215  0196                     	;# 
   216  0197                     	;# 
   217  0199                     	;# 
   218  019A                     	;# 
   219  019B                     	;# 
   220  019B                     	;# 
   221  019B                     	;# 
   222  019B                     	;# 
   223  019C                     	;# 
   224  019C                     	;# 
   225  019D                     	;# 
   226  019E                     	;# 
   227  019F                     	;# 
   228  020D                     	;# 
   229  0210                     	;# 
   230  0211                     	;# 
   231  0211                     	;# 
   232  0212                     	;# 
   233  0212                     	;# 
   234  0213                     	;# 
   235  0213                     	;# 
   236  0214                     	;# 
   237  0214                     	;# 
   238  0215                     	;# 
   239  0215                     	;# 
   240  0215                     	;# 
   241  0216                     	;# 
   242  0216                     	;# 
   243  0217                     	;# 
   244  0217                     	;# 
   245  0291                     	;# 
   246  0291                     	;# 
   247  0292                     	;# 
   248  0293                     	;# 
   249  0298                     	;# 
   250  0298                     	;# 
   251  0299                     	;# 
   252  029A                     	;# 
   253  0394                     	;# 
   254  0395                     	;# 
   255  0396                     	;# 
   256  0FE4                     	;# 
   257  0FE5                     	;# 
   258  0FE6                     	;# 
   259  0FE7                     	;# 
   260  0FE8                     	;# 
   261  0FE9                     	;# 
   262  0FEA                     	;# 
   263  0FEB                     	;# 
   264  0FED                     	;# 
   265  0FEE                     	;# 
   266  0FEF                     	;# 
   267  0000                     	;# 
   268  0001                     	;# 
   269  0002                     	;# 
   270  0003                     	;# 
   271  0004                     	;# 
   272  0005                     	;# 
   273  0006                     	;# 
   274  0007                     	;# 
   275  0008                     	;# 
   276  0009                     	;# 
   277  000A                     	;# 
   278  000B                     	;# 
   279  000C                     	;# 
   280  000D                     	;# 
   281  000E                     	;# 
   282  0010                     	;# 
   283  0011                     	;# 
   284  0012                     	;# 
   285  0015                     	;# 
   286  0016                     	;# 
   287  0016                     	;# 
   288  0017                     	;# 
   289  0018                     	;# 
   290  0019                     	;# 
   291  001A                     	;# 
   292  001B                     	;# 
   293  001C                     	;# 
   294  008C                     	;# 
   295  008D                     	;# 
   296  008E                     	;# 
   297  0090                     	;# 
   298  0091                     	;# 
   299  0092                     	;# 
   300  0095                     	;# 
   301  0096                     	;# 
   302  0097                     	;# 
   303  0099                     	;# 
   304  009A                     	;# 
   305  009B                     	;# 
   306  009B                     	;# 
   307  009C                     	;# 
   308  009D                     	;# 
   309  009E                     	;# 
   310  010C                     	;# 
   311  010D                     	;# 
   312  010E                     	;# 
   313  0116                     	;# 
   314  0117                     	;# 
   315  011D                     	;# 
   316  018C                     	;# 
   317  018D                     	;# 
   318  018E                     	;# 
   319  0191                     	;# 
   320  0191                     	;# 
   321  0192                     	;# 
   322  0193                     	;# 
   323  0193                     	;# 
   324  0194                     	;# 
   325  0195                     	;# 
   326  0196                     	;# 
   327  0197                     	;# 
   328  0199                     	;# 
   329  019A                     	;# 
   330  019B                     	;# 
   331  019B                     	;# 
   332  019B                     	;# 
   333  019B                     	;# 
   334  019C                     	;# 
   335  019C                     	;# 
   336  019D                     	;# 
   337  019E                     	;# 
   338  019F                     	;# 
   339  020D                     	;# 
   340  0210                     	;# 
   341  0211                     	;# 
   342  0211                     	;# 
   343  0212                     	;# 
   344  0212                     	;# 
   345  0213                     	;# 
   346  0213                     	;# 
   347  0214                     	;# 
   348  0214                     	;# 
   349  0215                     	;# 
   350  0215                     	;# 
   351  0215                     	;# 
   352  0216                     	;# 
   353  0216                     	;# 
   354  0217                     	;# 
   355  0217                     	;# 
   356  0291                     	;# 
   357  0291                     	;# 
   358  0292                     	;# 
   359  0293                     	;# 
   360  0298                     	;# 
   361  0298                     	;# 
   362  0299                     	;# 
   363  029A                     	;# 
   364  0394                     	;# 
   365  0395                     	;# 
   366  0396                     	;# 
   367  0FE4                     	;# 
   368  0FE5                     	;# 
   369  0FE6                     	;# 
   370  0FE7                     	;# 
   371  0FE8                     	;# 
   372  0FE9                     	;# 
   373  0FEA                     	;# 
   374  0FEB                     	;# 
   375  0FED                     	;# 
   376  0FEE                     	;# 
   377  0FEF                     	;# 
   378  0000                     	;# 
   379  0001                     	;# 
   380  0002                     	;# 
   381  0003                     	;# 
   382  0004                     	;# 
   383  0005                     	;# 
   384  0006                     	;# 
   385  0007                     	;# 
   386  0008                     	;# 
   387  0009                     	;# 
   388  000A                     	;# 
   389  000B                     	;# 
   390  000C                     	;# 
   391  000D                     	;# 
   392  000E                     	;# 
   393  0010                     	;# 
   394  0011                     	;# 
   395  0012                     	;# 
   396  0015                     	;# 
   397  0016                     	;# 
   398  0016                     	;# 
   399  0017                     	;# 
   400  0018                     	;# 
   401  0019                     	;# 
   402  001A                     	;# 
   403  001B                     	;# 
   404  001C                     	;# 
   405  008C                     	;# 
   406  008D                     	;# 
   407  008E                     	;# 
   408  0090                     	;# 
   409  0091                     	;# 
   410  0092                     	;# 
   411  0095                     	;# 
   412  0096                     	;# 
   413  0097                     	;# 
   414  0099                     	;# 
   415  009A                     	;# 
   416  009B                     	;# 
   417  009B                     	;# 
   418  009C                     	;# 
   419  009D                     	;# 
   420  009E                     	;# 
   421  010C                     	;# 
   422  010D                     	;# 
   423  010E                     	;# 
   424  0116                     	;# 
   425  0117                     	;# 
   426  011D                     	;# 
   427  018C                     	;# 
   428  018D                     	;# 
   429  018E                     	;# 
   430  0191                     	;# 
   431  0191                     	;# 
   432  0192                     	;# 
   433  0193                     	;# 
   434  0193                     	;# 
   435  0194                     	;# 
   436  0195                     	;# 
   437  0196                     	;# 
   438  0197                     	;# 
   439  0199                     	;# 
   440  019A                     	;# 
   441  019B                     	;# 
   442  019B                     	;# 
   443  019B                     	;# 
   444  019B                     	;# 
   445  019C                     	;# 
   446  019C                     	;# 
   447  019D                     	;# 
   448  019E                     	;# 
   449  019F                     	;# 
   450  020D                     	;# 
   451  0210                     	;# 
   452  0211                     	;# 
   453  0211                     	;# 
   454  0212                     	;# 
   455  0212                     	;# 
   456  0213                     	;# 
   457  0213                     	;# 
   458  0214                     	;# 
   459  0214                     	;# 
   460  0215                     	;# 
   461  0215                     	;# 
   462  0215                     	;# 
   463  0216                     	;# 
   464  0216                     	;# 
   465  0217                     	;# 
   466  0217                     	;# 
   467  0291                     	;# 
   468  0291                     	;# 
   469  0292                     	;# 
   470  0293                     	;# 
   471  0298                     	;# 
   472  0298                     	;# 
   473  0299                     	;# 
   474  029A                     	;# 
   475  0394                     	;# 
   476  0395                     	;# 
   477  0396                     	;# 
   478  0FE4                     	;# 
   479  0FE5                     	;# 
   480  0FE6                     	;# 
   481  0FE7                     	;# 
   482  0FE8                     	;# 
   483  0FE9                     	;# 
   484  0FEA                     	;# 
   485  0FEB                     	;# 
   486  0FED                     	;# 
   487  0FEE                     	;# 
   488  0FEF                     	;# 
   489  0000                     	;# 
   490  0001                     	;# 
   491  0002                     	;# 
   492  0003                     	;# 
   493  0004                     	;# 
   494  0005                     	;# 
   495  0006                     	;# 
   496  0007                     	;# 
   497  0008                     	;# 
   498  0009                     	;# 
   499  000A                     	;# 
   500  000B                     	;# 
   501  000C                     	;# 
   502  000D                     	;# 
   503  000E                     	;# 
   504  0010                     	;# 
   505  0011                     	;# 
   506  0012                     	;# 
   507  0015                     	;# 
   508  0016                     	;# 
   509  0016                     	;# 
   510  0017                     	;# 
   511  0018                     	;# 
   512  0019                     	;# 
   513  001A                     	;# 
   514  001B                     	;# 
   515  001C                     	;# 
   516  008C                     	;# 
   517  008D                     	;# 
   518  008E                     	;# 
   519  0090                     	;# 
   520  0091                     	;# 
   521  0092                     	;# 
   522  0095                     	;# 
   523  0096                     	;# 
   524  0097                     	;# 
   525  0099                     	;# 
   526  009A                     	;# 
   527  009B                     	;# 
   528  009B                     	;# 
   529  009C                     	;# 
   530  009D                     	;# 
   531  009E                     	;# 
   532  010C                     	;# 
   533  010D                     	;# 
   534  010E                     	;# 
   535  0116                     	;# 
   536  0117                     	;# 
   537  011D                     	;# 
   538  018C                     	;# 
   539  018D                     	;# 
   540  018E                     	;# 
   541  0191                     	;# 
   542  0191                     	;# 
   543  0192                     	;# 
   544  0193                     	;# 
   545  0193                     	;# 
   546  0194                     	;# 
   547  0195                     	;# 
   548  0196                     	;# 
   549  0197                     	;# 
   550  0199                     	;# 
   551  019A                     	;# 
   552  019B                     	;# 
   553  019B                     	;# 
   554  019B                     	;# 
   555  019B                     	;# 
   556  019C                     	;# 
   557  019C                     	;# 
   558  019D                     	;# 
   559  019E                     	;# 
   560  019F                     	;# 
   561  020D                     	;# 
   562  0210                     	;# 
   563  0211                     	;# 
   564  0211                     	;# 
   565  0212                     	;# 
   566  0212                     	;# 
   567  0213                     	;# 
   568  0213                     	;# 
   569  0214                     	;# 
   570  0214                     	;# 
   571  0215                     	;# 
   572  0215                     	;# 
   573  0215                     	;# 
   574  0216                     	;# 
   575  0216                     	;# 
   576  0217                     	;# 
   577  0217                     	;# 
   578  0291                     	;# 
   579  0291                     	;# 
   580  0292                     	;# 
   581  0293                     	;# 
   582  0298                     	;# 
   583  0298                     	;# 
   584  0299                     	;# 
   585  029A                     	;# 
   586  0394                     	;# 
   587  0395                     	;# 
   588  0396                     	;# 
   589  0FE4                     	;# 
   590  0FE5                     	;# 
   591  0FE6                     	;# 
   592  0FE7                     	;# 
   593  0FE8                     	;# 
   594  0FE9                     	;# 
   595  0FEA                     	;# 
   596  0FEB                     	;# 
   597  0FED                     	;# 
   598  0FEE                     	;# 
   599  0FEF                     	;# 
   600  0000                     	;# 
   601  0001                     	;# 
   602  0002                     	;# 
   603  0003                     	;# 
   604  0004                     	;# 
   605  0005                     	;# 
   606  0006                     	;# 
   607  0007                     	;# 
   608  0008                     	;# 
   609  0009                     	;# 
   610  000A                     	;# 
   611  000B                     	;# 
   612  000C                     	;# 
   613  000D                     	;# 
   614  000E                     	;# 
   615  0010                     	;# 
   616  0011                     	;# 
   617  0012                     	;# 
   618  0015                     	;# 
   619  0016                     	;# 
   620  0016                     	;# 
   621  0017                     	;# 
   622  0018                     	;# 
   623  0019                     	;# 
   624  001A                     	;# 
   625  001B                     	;# 
   626  001C                     	;# 
   627  008C                     	;# 
   628  008D                     	;# 
   629  008E                     	;# 
   630  0090                     	;# 
   631  0091                     	;# 
   632  0092                     	;# 
   633  0095                     	;# 
   634  0096                     	;# 
   635  0097                     	;# 
   636  0099                     	;# 
   637  009A                     	;# 
   638  009B                     	;# 
   639  009B                     	;# 
   640  009C                     	;# 
   641  009D                     	;# 
   642  009E                     	;# 
   643  010C                     	;# 
   644  010D                     	;# 
   645  010E                     	;# 
   646  0116                     	;# 
   647  0117                     	;# 
   648  011D                     	;# 
   649  018C                     	;# 
   650  018D                     	;# 
   651  018E                     	;# 
   652  0191                     	;# 
   653  0191                     	;# 
   654  0192                     	;# 
   655  0193                     	;# 
   656  0193                     	;# 
   657  0194                     	;# 
   658  0195                     	;# 
   659  0196                     	;# 
   660  0197                     	;# 
   661  0199                     	;# 
   662  019A                     	;# 
   663  019B                     	;# 
   664  019B                     	;# 
   665  019B                     	;# 
   666  019B                     	;# 
   667  019C                     	;# 
   668  019C                     	;# 
   669  019D                     	;# 
   670  019E                     	;# 
   671  019F                     	;# 
   672  020D                     	;# 
   673  0210                     	;# 
   674  0211                     	;# 
   675  0211                     	;# 
   676  0212                     	;# 
   677  0212                     	;# 
   678  0213                     	;# 
   679  0213                     	;# 
   680  0214                     	;# 
   681  0214                     	;# 
   682  0215                     	;# 
   683  0215                     	;# 
   684  0215                     	;# 
   685  0216                     	;# 
   686  0216                     	;# 
   687  0217                     	;# 
   688  0217                     	;# 
   689  0291                     	;# 
   690  0291                     	;# 
   691  0292                     	;# 
   692  0293                     	;# 
   693  0298                     	;# 
   694  0298                     	;# 
   695  0299                     	;# 
   696  029A                     	;# 
   697  0394                     	;# 
   698  0395                     	;# 
   699  0396                     	;# 
   700  0FE4                     	;# 
   701  0FE5                     	;# 
   702  0FE6                     	;# 
   703  0FE7                     	;# 
   704  0FE8                     	;# 
   705  0FE9                     	;# 
   706  0FEA                     	;# 
   707  0FEB                     	;# 
   708  0FED                     	;# 
   709  0FEE                     	;# 
   710  0FEF                     	;# 
   711  0000                     	;# 
   712  0001                     	;# 
   713  0002                     	;# 
   714  0003                     	;# 
   715  0004                     	;# 
   716  0005                     	;# 
   717  0006                     	;# 
   718  0007                     	;# 
   719  0008                     	;# 
   720  0009                     	;# 
   721  000A                     	;# 
   722  000B                     	;# 
   723  000C                     	;# 
   724  000D                     	;# 
   725  000E                     	;# 
   726  0010                     	;# 
   727  0011                     	;# 
   728  0012                     	;# 
   729  0015                     	;# 
   730  0016                     	;# 
   731  0016                     	;# 
   732  0017                     	;# 
   733  0018                     	;# 
   734  0019                     	;# 
   735  001A                     	;# 
   736  001B                     	;# 
   737  001C                     	;# 
   738  008C                     	;# 
   739  008D                     	;# 
   740  008E                     	;# 
   741  0090                     	;# 
   742  0091                     	;# 
   743  0092                     	;# 
   744  0095                     	;# 
   745  0096                     	;# 
   746  0097                     	;# 
   747  0099                     	;# 
   748  009A                     	;# 
   749  009B                     	;# 
   750  009B                     	;# 
   751  009C                     	;# 
   752  009D                     	;# 
   753  009E                     	;# 
   754  010C                     	;# 
   755  010D                     	;# 
   756  010E                     	;# 
   757  0116                     	;# 
   758  0117                     	;# 
   759  011D                     	;# 
   760  018C                     	;# 
   761  018D                     	;# 
   762  018E                     	;# 
   763  0191                     	;# 
   764  0191                     	;# 
   765  0192                     	;# 
   766  0193                     	;# 
   767  0193                     	;# 
   768  0194                     	;# 
   769  0195                     	;# 
   770  0196                     	;# 
   771  0197                     	;# 
   772  0199                     	;# 
   773  019A                     	;# 
   774  019B                     	;# 
   775  019B                     	;# 
   776  019B                     	;# 
   777  019B                     	;# 
   778  019C                     	;# 
   779  019C                     	;# 
   780  019D                     	;# 
   781  019E                     	;# 
   782  019F                     	;# 
   783  020D                     	;# 
   784  0210                     	;# 
   785  0211                     	;# 
   786  0211                     	;# 
   787  0212                     	;# 
   788  0212                     	;# 
   789  0213                     	;# 
   790  0213                     	;# 
   791  0214                     	;# 
   792  0214                     	;# 
   793  0215                     	;# 
   794  0215                     	;# 
   795  0215                     	;# 
   796  0216                     	;# 
   797  0216                     	;# 
   798  0217                     	;# 
   799  0217                     	;# 
   800  0291                     	;# 
   801  0291                     	;# 
   802  0292                     	;# 
   803  0293                     	;# 
   804  0298                     	;# 
   805  0298                     	;# 
   806  0299                     	;# 
   807  029A                     	;# 
   808  0394                     	;# 
   809  0395                     	;# 
   810  0396                     	;# 
   811  0FE4                     	;# 
   812  0FE5                     	;# 
   813  0FE6                     	;# 
   814  0FE7                     	;# 
   815  0FE8                     	;# 
   816  0FE9                     	;# 
   817  0FEA                     	;# 
   818  0FEB                     	;# 
   819  0FED                     	;# 
   820  0FEE                     	;# 
   821  0FEF                     	;# 
   822  0000                     	;# 
   823  0001                     	;# 
   824  0002                     	;# 
   825  0003                     	;# 
   826  0004                     	;# 
   827  0005                     	;# 
   828  0006                     	;# 
   829  0007                     	;# 
   830  0008                     	;# 
   831  0009                     	;# 
   832  000A                     	;# 
   833  000B                     	;# 
   834  000C                     	;# 
   835  000D                     	;# 
   836  000E                     	;# 
   837  0010                     	;# 
   838  0011                     	;# 
   839  0012                     	;# 
   840  0015                     	;# 
   841  0016                     	;# 
   842  0016                     	;# 
   843  0017                     	;# 
   844  0018                     	;# 
   845  0019                     	;# 
   846  001A                     	;# 
   847  001B                     	;# 
   848  001C                     	;# 
   849  008C                     	;# 
   850  008D                     	;# 
   851  008E                     	;# 
   852  0090                     	;# 
   853  0091                     	;# 
   854  0092                     	;# 
   855  0095                     	;# 
   856  0096                     	;# 
   857  0097                     	;# 
   858  0099                     	;# 
   859  009A                     	;# 
   860  009B                     	;# 
   861  009B                     	;# 
   862  009C                     	;# 
   863  009D                     	;# 
   864  009E                     	;# 
   865  010C                     	;# 
   866  010D                     	;# 
   867  010E                     	;# 
   868  0116                     	;# 
   869  0117                     	;# 
   870  011D                     	;# 
   871  018C                     	;# 
   872  018D                     	;# 
   873  018E                     	;# 
   874  0191                     	;# 
   875  0191                     	;# 
   876  0192                     	;# 
   877  0193                     	;# 
   878  0193                     	;# 
   879  0194                     	;# 
   880  0195                     	;# 
   881  0196                     	;# 
   882  0197                     	;# 
   883  0199                     	;# 
   884  019A                     	;# 
   885  019B                     	;# 
   886  019B                     	;# 
   887  019B                     	;# 
   888  019B                     	;# 
   889  019C                     	;# 
   890  019C                     	;# 
   891  019D                     	;# 
   892  019E                     	;# 
   893  019F                     	;# 
   894  020D                     	;# 
   895  0210                     	;# 
   896  0211                     	;# 
   897  0211                     	;# 
   898  0212                     	;# 
   899  0212                     	;# 
   900  0213                     	;# 
   901  0213                     	;# 
   902  0214                     	;# 
   903  0214                     	;# 
   904  0215                     	;# 
   905  0215                     	;# 
   906  0215                     	;# 
   907  0216                     	;# 
   908  0216                     	;# 
   909  0217                     	;# 
   910  0217                     	;# 
   911  0291                     	;# 
   912  0291                     	;# 
   913  0292                     	;# 
   914  0293                     	;# 
   915  0298                     	;# 
   916  0298                     	;# 
   917  0299                     	;# 
   918  029A                     	;# 
   919  0394                     	;# 
   920  0395                     	;# 
   921  0396                     	;# 
   922  0FE4                     	;# 
   923  0FE5                     	;# 
   924  0FE6                     	;# 
   925  0FE7                     	;# 
   926  0FE8                     	;# 
   927  0FE9                     	;# 
   928  0FEA                     	;# 
   929  0FEB                     	;# 
   930  0FED                     	;# 
   931  0FEE                     	;# 
   932  0FEF                     	;# 
   933  0000                     	;# 
   934  0001                     	;# 
   935  0002                     	;# 
   936  0003                     	;# 
   937  0004                     	;# 
   938  0005                     	;# 
   939  0006                     	;# 
   940  0007                     	;# 
   941  0008                     	;# 
   942  0009                     	;# 
   943  000A                     	;# 
   944  000B                     	;# 
   945  000C                     	;# 
   946  000D                     	;# 
   947  000E                     	;# 
   948  0010                     	;# 
   949  0011                     	;# 
   950  0012                     	;# 
   951  0015                     	;# 
   952  0016                     	;# 
   953  0016                     	;# 
   954  0017                     	;# 
   955  0018                     	;# 
   956  0019                     	;# 
   957  001A                     	;# 
   958  001B                     	;# 
   959  001C                     	;# 
   960  008C                     	;# 
   961  008D                     	;# 
   962  008E                     	;# 
   963  0090                     	;# 
   964  0091                     	;# 
   965  0092                     	;# 
   966  0095                     	;# 
   967  0096                     	;# 
   968  0097                     	;# 
   969  0099                     	;# 
   970  009A                     	;# 
   971  009B                     	;# 
   972  009B                     	;# 
   973  009C                     	;# 
   974  009D                     	;# 
   975  009E                     	;# 
   976  010C                     	;# 
   977  010D                     	;# 
   978  010E                     	;# 
   979  0116                     	;# 
   980  0117                     	;# 
   981  011D                     	;# 
   982  018C                     	;# 
   983  018D                     	;# 
   984  018E                     	;# 
   985  0191                     	;# 
   986  0191                     	;# 
   987  0192                     	;# 
   988  0193                     	;# 
   989  0193                     	;# 
   990  0194                     	;# 
   991  0195                     	;# 
   992  0196                     	;# 
   993  0197                     	;# 
   994  0199                     	;# 
   995  019A                     	;# 
   996  019B                     	;# 
   997  019B                     	;# 
   998  019B                     	;# 
   999  019B                     	;# 
  1000  019C                     	;# 
  1001  019C                     	;# 
  1002  019D                     	;# 
  1003  019E                     	;# 
  1004  019F                     	;# 
  1005  020D                     	;# 
  1006  0210                     	;# 
  1007  0211                     	;# 
  1008  0211                     	;# 
  1009  0212                     	;# 
  1010  0212                     	;# 
  1011  0213                     	;# 
  1012  0213                     	;# 
  1013  0214                     	;# 
  1014  0214                     	;# 
  1015  0215                     	;# 
  1016  0215                     	;# 
  1017  0215                     	;# 
  1018  0216                     	;# 
  1019  0216                     	;# 
  1020  0217                     	;# 
  1021  0217                     	;# 
  1022  0291                     	;# 
  1023  0291                     	;# 
  1024  0292                     	;# 
  1025  0293                     	;# 
  1026  0298                     	;# 
  1027  0298                     	;# 
  1028  0299                     	;# 
  1029  029A                     	;# 
  1030  0394                     	;# 
  1031  0395                     	;# 
  1032  0396                     	;# 
  1033  0FE4                     	;# 
  1034  0FE5                     	;# 
  1035  0FE6                     	;# 
  1036  0FE7                     	;# 
  1037  0FE8                     	;# 
  1038  0FE9                     	;# 
  1039  0FEA                     	;# 
  1040  0FEB                     	;# 
  1041  0FED                     	;# 
  1042  0FEE                     	;# 
  1043  0FEF                     	;# 
  1044  0000                     	;# 
  1045  0001                     	;# 
  1046  0002                     	;# 
  1047  0003                     	;# 
  1048  0004                     	;# 
  1049  0005                     	;# 
  1050  0006                     	;# 
  1051  0007                     	;# 
  1052  0008                     	;# 
  1053  0009                     	;# 
  1054  000A                     	;# 
  1055  000B                     	;# 
  1056  000C                     	;# 
  1057  000D                     	;# 
  1058  000E                     	;# 
  1059  0010                     	;# 
  1060  0011                     	;# 
  1061  0012                     	;# 
  1062  0015                     	;# 
  1063  0016                     	;# 
  1064  0016                     	;# 
  1065  0017                     	;# 
  1066  0018                     	;# 
  1067  0019                     	;# 
  1068  001A                     	;# 
  1069  001B                     	;# 
  1070  001C                     	;# 
  1071  008C                     	;# 
  1072  008D                     	;# 
  1073  008E                     	;# 
  1074  0090                     	;# 
  1075  0091                     	;# 
  1076  0092                     	;# 
  1077  0095                     	;# 
  1078  0096                     	;# 
  1079  0097                     	;# 
  1080  0099                     	;# 
  1081  009A                     	;# 
  1082  009B                     	;# 
  1083  009B                     	;# 
  1084  009C                     	;# 
  1085  009D                     	;# 
  1086  009E                     	;# 
  1087  010C                     	;# 
  1088  010D                     	;# 
  1089  010E                     	;# 
  1090  0116                     	;# 
  1091  0117                     	;# 
  1092  011D                     	;# 
  1093  018C                     	;# 
  1094  018D                     	;# 
  1095  018E                     	;# 
  1096  0191                     	;# 
  1097  0191                     	;# 
  1098  0192                     	;# 
  1099  0193                     	;# 
  1100  0193                     	;# 
  1101  0194                     	;# 
  1102  0195                     	;# 
  1103  0196                     	;# 
  1104  0197                     	;# 
  1105  0199                     	;# 
  1106  019A                     	;# 
  1107  019B                     	;# 
  1108  019B                     	;# 
  1109  019B                     	;# 
  1110  019B                     	;# 
  1111  019C                     	;# 
  1112  019C                     	;# 
  1113  019D                     	;# 
  1114  019E                     	;# 
  1115  019F                     	;# 
  1116  020D                     	;# 
  1117  0210                     	;# 
  1118  0211                     	;# 
  1119  0211                     	;# 
  1120  0212                     	;# 
  1121  0212                     	;# 
  1122  0213                     	;# 
  1123  0213                     	;# 
  1124  0214                     	;# 
  1125  0214                     	;# 
  1126  0215                     	;# 
  1127  0215                     	;# 
  1128  0215                     	;# 
  1129  0216                     	;# 
  1130  0216                     	;# 
  1131  0217                     	;# 
  1132  0217                     	;# 
  1133  0291                     	;# 
  1134  0291                     	;# 
  1135  0292                     	;# 
  1136  0293                     	;# 
  1137  0298                     	;# 
  1138  0298                     	;# 
  1139  0299                     	;# 
  1140  029A                     	;# 
  1141  0394                     	;# 
  1142  0395                     	;# 
  1143  0396                     	;# 
  1144  0FE4                     	;# 
  1145  0FE5                     	;# 
  1146  0FE6                     	;# 
  1147  0FE7                     	;# 
  1148  0FE8                     	;# 
  1149  0FE9                     	;# 
  1150  0FEA                     	;# 
  1151  0FEB                     	;# 
  1152  0FED                     	;# 
  1153  0FEE                     	;# 
  1154  0FEF                     	;# 
  1155  0000                     	;# 
  1156  0001                     	;# 
  1157  0002                     	;# 
  1158  0003                     	;# 
  1159  0004                     	;# 
  1160  0005                     	;# 
  1161  0006                     	;# 
  1162  0007                     	;# 
  1163  0008                     	;# 
  1164  0009                     	;# 
  1165  000A                     	;# 
  1166  000B                     	;# 
  1167  000C                     	;# 
  1168  000D                     	;# 
  1169  000E                     	;# 
  1170  0010                     	;# 
  1171  0011                     	;# 
  1172  0012                     	;# 
  1173  0015                     	;# 
  1174  0016                     	;# 
  1175  0016                     	;# 
  1176  0017                     	;# 
  1177  0018                     	;# 
  1178  0019                     	;# 
  1179  001A                     	;# 
  1180  001B                     	;# 
  1181  001C                     	;# 
  1182  008C                     	;# 
  1183  008D                     	;# 
  1184  008E                     	;# 
  1185  0090                     	;# 
  1186  0091                     	;# 
  1187  0092                     	;# 
  1188  0095                     	;# 
  1189  0096                     	;# 
  1190  0097                     	;# 
  1191  0099                     	;# 
  1192  009A                     	;# 
  1193  009B                     	;# 
  1194  009B                     	;# 
  1195  009C                     	;# 
  1196  009D                     	;# 
  1197  009E                     	;# 
  1198  010C                     	;# 
  1199  010D                     	;# 
  1200  010E                     	;# 
  1201  0116                     	;# 
  1202  0117                     	;# 
  1203  011D                     	;# 
  1204  018C                     	;# 
  1205  018D                     	;# 
  1206  018E                     	;# 
  1207  0191                     	;# 
  1208  0191                     	;# 
  1209  0192                     	;# 
  1210  0193                     	;# 
  1211  0193                     	;# 
  1212  0194                     	;# 
  1213  0195                     	;# 
  1214  0196                     	;# 
  1215  0197                     	;# 
  1216  0199                     	;# 
  1217  019A                     	;# 
  1218  019B                     	;# 
  1219  019B                     	;# 
  1220  019B                     	;# 
  1221  019B                     	;# 
  1222  019C                     	;# 
  1223  019C                     	;# 
  1224  019D                     	;# 
  1225  019E                     	;# 
  1226  019F                     	;# 
  1227  020D                     	;# 
  1228  0210                     	;# 
  1229  0211                     	;# 
  1230  0211                     	;# 
  1231  0212                     	;# 
  1232  0212                     	;# 
  1233  0213                     	;# 
  1234  0213                     	;# 
  1235  0214                     	;# 
  1236  0214                     	;# 
  1237  0215                     	;# 
  1238  0215                     	;# 
  1239  0215                     	;# 
  1240  0216                     	;# 
  1241  0216                     	;# 
  1242  0217                     	;# 
  1243  0217                     	;# 
  1244  0291                     	;# 
  1245  0291                     	;# 
  1246  0292                     	;# 
  1247  0293                     	;# 
  1248  0298                     	;# 
  1249  0298                     	;# 
  1250  0299                     	;# 
  1251  029A                     	;# 
  1252  0394                     	;# 
  1253  0395                     	;# 
  1254  0396                     	;# 
  1255  0FE4                     	;# 
  1256  0FE5                     	;# 
  1257  0FE6                     	;# 
  1258  0FE7                     	;# 
  1259  0FE8                     	;# 
  1260  0FE9                     	;# 
  1261  0FEA                     	;# 
  1262  0FEB                     	;# 
  1263  0FED                     	;# 
  1264  0FEE                     	;# 
  1265  0FEF                     	;# 
  1266  0000                     	;# 
  1267  0001                     	;# 
  1268  0002                     	;# 
  1269  0003                     	;# 
  1270  0004                     	;# 
  1271  0005                     	;# 
  1272  0006                     	;# 
  1273  0007                     	;# 
  1274  0008                     	;# 
  1275  0009                     	;# 
  1276  000A                     	;# 
  1277  000B                     	;# 
  1278  000C                     	;# 
  1279  000D                     	;# 
  1280  000E                     	;# 
  1281  0010                     	;# 
  1282  0011                     	;# 
  1283  0012                     	;# 
  1284  0015                     	;# 
  1285  0016                     	;# 
  1286  0016                     	;# 
  1287  0017                     	;# 
  1288  0018                     	;# 
  1289  0019                     	;# 
  1290  001A                     	;# 
  1291  001B                     	;# 
  1292  001C                     	;# 
  1293  008C                     	;# 
  1294  008D                     	;# 
  1295  008E                     	;# 
  1296  0090                     	;# 
  1297  0091                     	;# 
  1298  0092                     	;# 
  1299  0095                     	;# 
  1300  0096                     	;# 
  1301  0097                     	;# 
  1302  0099                     	;# 
  1303  009A                     	;# 
  1304  009B                     	;# 
  1305  009B                     	;# 
  1306  009C                     	;# 
  1307  009D                     	;# 
  1308  009E                     	;# 
  1309  010C                     	;# 
  1310  010D                     	;# 
  1311  010E                     	;# 
  1312  0116                     	;# 
  1313  0117                     	;# 
  1314  011D                     	;# 
  1315  018C                     	;# 
  1316  018D                     	;# 
  1317  018E                     	;# 
  1318  0191                     	;# 
  1319  0191                     	;# 
  1320  0192                     	;# 
  1321  0193                     	;# 
  1322  0193                     	;# 
  1323  0194                     	;# 
  1324  0195                     	;# 
  1325  0196                     	;# 
  1326  0197                     	;# 
  1327  0199                     	;# 
  1328  019A                     	;# 
  1329  019B                     	;# 
  1330  019B                     	;# 
  1331  019B                     	;# 
  1332  019B                     	;# 
  1333  019C                     	;# 
  1334  019C                     	;# 
  1335  019D                     	;# 
  1336  019E                     	;# 
  1337  019F                     	;# 
  1338  020D                     	;# 
  1339  0210                     	;# 
  1340  0211                     	;# 
  1341  0211                     	;# 
  1342  0212                     	;# 
  1343  0212                     	;# 
  1344  0213                     	;# 
  1345  0213                     	;# 
  1346  0214                     	;# 
  1347  0214                     	;# 
  1348  0215                     	;# 
  1349  0215                     	;# 
  1350  0215                     	;# 
  1351  0216                     	;# 
  1352  0216                     	;# 
  1353  0217                     	;# 
  1354  0217                     	;# 
  1355  0291                     	;# 
  1356  0291                     	;# 
  1357  0292                     	;# 
  1358  0293                     	;# 
  1359  0298                     	;# 
  1360  0298                     	;# 
  1361  0299                     	;# 
  1362  029A                     	;# 
  1363  0394                     	;# 
  1364  0395                     	;# 
  1365  0396                     	;# 
  1366  0FE4                     	;# 
  1367  0FE5                     	;# 
  1368  0FE6                     	;# 
  1369  0FE7                     	;# 
  1370  0FE8                     	;# 
  1371  0FE9                     	;# 
  1372  0FEA                     	;# 
  1373  0FEB                     	;# 
  1374  0FED                     	;# 
  1375  0FEE                     	;# 
  1376  0FEF                     	;# 
  1377  0000                     	;# 
  1378  0001                     	;# 
  1379  0002                     	;# 
  1380  0003                     	;# 
  1381  0004                     	;# 
  1382  0005                     	;# 
  1383  0006                     	;# 
  1384  0007                     	;# 
  1385  0008                     	;# 
  1386  0009                     	;# 
  1387  000A                     	;# 
  1388  000B                     	;# 
  1389  000C                     	;# 
  1390  000D                     	;# 
  1391  000E                     	;# 
  1392  0010                     	;# 
  1393  0011                     	;# 
  1394  0012                     	;# 
  1395  0015                     	;# 
  1396  0016                     	;# 
  1397  0016                     	;# 
  1398  0017                     	;# 
  1399  0018                     	;# 
  1400  0019                     	;# 
  1401  001A                     	;# 
  1402  001B                     	;# 
  1403  001C                     	;# 
  1404  008C                     	;# 
  1405  008D                     	;# 
  1406  008E                     	;# 
  1407  0090                     	;# 
  1408  0091                     	;# 
  1409  0092                     	;# 
  1410  0095                     	;# 
  1411  0096                     	;# 
  1412  0097                     	;# 
  1413  0099                     	;# 
  1414  009A                     	;# 
  1415  009B                     	;# 
  1416  009B                     	;# 
  1417  009C                     	;# 
  1418  009D                     	;# 
  1419  009E                     	;# 
  1420  010C                     	;# 
  1421  010D                     	;# 
  1422  010E                     	;# 
  1423  0116                     	;# 
  1424  0117                     	;# 
  1425  011D                     	;# 
  1426  018C                     	;# 
  1427  018D                     	;# 
  1428  018E                     	;# 
  1429  0191                     	;# 
  1430  0191                     	;# 
  1431  0192                     	;# 
  1432  0193                     	;# 
  1433  0193                     	;# 
  1434  0194                     	;# 
  1435  0195                     	;# 
  1436  0196                     	;# 
  1437  0197                     	;# 
  1438  0199                     	;# 
  1439  019A                     	;# 
  1440  019B                     	;# 
  1441  019B                     	;# 
  1442  019B                     	;# 
  1443  019B                     	;# 
  1444  019C                     	;# 
  1445  019C                     	;# 
  1446  019D                     	;# 
  1447  019E                     	;# 
  1448  019F                     	;# 
  1449  020D                     	;# 
  1450  0210                     	;# 
  1451  0211                     	;# 
  1452  0211                     	;# 
  1453  0212                     	;# 
  1454  0212                     	;# 
  1455  0213                     	;# 
  1456  0213                     	;# 
  1457  0214                     	;# 
  1458  0214                     	;# 
  1459  0215                     	;# 
  1460  0215                     	;# 
  1461  0215                     	;# 
  1462  0216                     	;# 
  1463  0216                     	;# 
  1464  0217                     	;# 
  1465  0217                     	;# 
  1466  0291                     	;# 
  1467  0291                     	;# 
  1468  0292                     	;# 
  1469  0293                     	;# 
  1470  0298                     	;# 
  1471  0298                     	;# 
  1472  0299                     	;# 
  1473  029A                     	;# 
  1474  0394                     	;# 
  1475  0395                     	;# 
  1476  0396                     	;# 
  1477  0FE4                     	;# 
  1478  0FE5                     	;# 
  1479  0FE6                     	;# 
  1480  0FE7                     	;# 
  1481  0FE8                     	;# 
  1482  0FE9                     	;# 
  1483  0FEA                     	;# 
  1484  0FEB                     	;# 
  1485  0FED                     	;# 
  1486  0FEE                     	;# 
  1487  0FEF                     	;# 
  1488  0000                     	;# 
  1489  0001                     	;# 
  1490  0002                     	;# 
  1491  0003                     	;# 
  1492  0004                     	;# 
  1493  0005                     	;# 
  1494  0006                     	;# 
  1495  0007                     	;# 
  1496  0008                     	;# 
  1497  0009                     	;# 
  1498  000A                     	;# 
  1499  000B                     	;# 
  1500  000C                     	;# 
  1501  000D                     	;# 
  1502  000E                     	;# 
  1503  0010                     	;# 
  1504  0011                     	;# 
  1505  0012                     	;# 
  1506  0015                     	;# 
  1507  0016                     	;# 
  1508  0016                     	;# 
  1509  0017                     	;# 
  1510  0018                     	;# 
  1511  0019                     	;# 
  1512  001A                     	;# 
  1513  001B                     	;# 
  1514  001C                     	;# 
  1515  008C                     	;# 
  1516  008D                     	;# 
  1517  008E                     	;# 
  1518  0090                     	;# 
  1519  0091                     	;# 
  1520  0092                     	;# 
  1521  0095                     	;# 
  1522  0096                     	;# 
  1523  0097                     	;# 
  1524  0099                     	;# 
  1525  009A                     	;# 
  1526  009B                     	;# 
  1527  009B                     	;# 
  1528  009C                     	;# 
  1529  009D                     	;# 
  1530  009E                     	;# 
  1531  010C                     	;# 
  1532  010D                     	;# 
  1533  010E                     	;# 
  1534  0116                     	;# 
  1535  0117                     	;# 
  1536  011D                     	;# 
  1537  018C                     	;# 
  1538  018D                     	;# 
  1539  018E                     	;# 
  1540  0191                     	;# 
  1541  0191                     	;# 
  1542  0192                     	;# 
  1543  0193                     	;# 
  1544  0193                     	;# 
  1545  0194                     	;# 
  1546  0195                     	;# 
  1547  0196                     	;# 
  1548  0197                     	;# 
  1549  0199                     	;# 
  1550  019A                     	;# 
  1551  019B                     	;# 
  1552  019B                     	;# 
  1553  019B                     	;# 
  1554  019B                     	;# 
  1555  019C                     	;# 
  1556  019C                     	;# 
  1557  019D                     	;# 
  1558  019E                     	;# 
  1559  019F                     	;# 
  1560  020D                     	;# 
  1561  0210                     	;# 
  1562  0211                     	;# 
  1563  0211                     	;# 
  1564  0212                     	;# 
  1565  0212                     	;# 
  1566  0213                     	;# 
  1567  0213                     	;# 
  1568  0214                     	;# 
  1569  0214                     	;# 
  1570  0215                     	;# 
  1571  0215                     	;# 
  1572  0215                     	;# 
  1573  0216                     	;# 
  1574  0216                     	;# 
  1575  0217                     	;# 
  1576  0217                     	;# 
  1577  0291                     	;# 
  1578  0291                     	;# 
  1579  0292                     	;# 
  1580  0293                     	;# 
  1581  0298                     	;# 
  1582  0298                     	;# 
  1583  0299                     	;# 
  1584  029A                     	;# 
  1585  0394                     	;# 
  1586  0395                     	;# 
  1587  0396                     	;# 
  1588  0FE4                     	;# 
  1589  0FE5                     	;# 
  1590  0FE6                     	;# 
  1591  0FE7                     	;# 
  1592  0FE8                     	;# 
  1593  0FE9                     	;# 
  1594  0FEA                     	;# 
  1595  0FEB                     	;# 
  1596  0FED                     	;# 
  1597  0FEE                     	;# 
  1598  0FEF                     	;# 
  1599  0000                     	;# 
  1600  0001                     	;# 
  1601  0002                     	;# 
  1602  0003                     	;# 
  1603  0004                     	;# 
  1604  0005                     	;# 
  1605  0006                     	;# 
  1606  0007                     	;# 
  1607  0008                     	;# 
  1608  0009                     	;# 
  1609  000A                     	;# 
  1610  000B                     	;# 
  1611  000C                     	;# 
  1612  000D                     	;# 
  1613  000E                     	;# 
  1614  0010                     	;# 
  1615  0011                     	;# 
  1616  0012                     	;# 
  1617  0015                     	;# 
  1618  0016                     	;# 
  1619  0016                     	;# 
  1620  0017                     	;# 
  1621  0018                     	;# 
  1622  0019                     	;# 
  1623  001A                     	;# 
  1624  001B                     	;# 
  1625  001C                     	;# 
  1626  008C                     	;# 
  1627  008D                     	;# 
  1628  008E                     	;# 
  1629  0090                     	;# 
  1630  0091                     	;# 
  1631  0092                     	;# 
  1632  0095                     	;# 
  1633  0096                     	;# 
  1634  0097                     	;# 
  1635  0099                     	;# 
  1636  009A                     	;# 
  1637  009B                     	;# 
  1638  009B                     	;# 
  1639  009C                     	;# 
  1640  009D                     	;# 
  1641  009E                     	;# 
  1642  010C                     	;# 
  1643  010D                     	;# 
  1644  010E                     	;# 
  1645  0116                     	;# 
  1646  0117                     	;# 
  1647  011D                     	;# 
  1648  018C                     	;# 
  1649  018D                     	;# 
  1650  018E                     	;# 
  1651  0191                     	;# 
  1652  0191                     	;# 
  1653  0192                     	;# 
  1654  0193                     	;# 
  1655  0193                     	;# 
  1656  0194                     	;# 
  1657  0195                     	;# 
  1658  0196                     	;# 
  1659  0197                     	;# 
  1660  0199                     	;# 
  1661  019A                     	;# 
  1662  019B                     	;# 
  1663  019B                     	;# 
  1664  019B                     	;# 
  1665  019B                     	;# 
  1666  019C                     	;# 
  1667  019C                     	;# 
  1668  019D                     	;# 
  1669  019E                     	;# 
  1670  019F                     	;# 
  1671  020D                     	;# 
  1672  0210                     	;# 
  1673  0211                     	;# 
  1674  0211                     	;# 
  1675  0212                     	;# 
  1676  0212                     	;# 
  1677  0213                     	;# 
  1678  0213                     	;# 
  1679  0214                     	;# 
  1680  0214                     	;# 
  1681  0215                     	;# 
  1682  0215                     	;# 
  1683  0215                     	;# 
  1684  0216                     	;# 
  1685  0216                     	;# 
  1686  0217                     	;# 
  1687  0217                     	;# 
  1688  0291                     	;# 
  1689  0291                     	;# 
  1690  0292                     	;# 
  1691  0293                     	;# 
  1692  0298                     	;# 
  1693  0298                     	;# 
  1694  0299                     	;# 
  1695  029A                     	;# 
  1696  0394                     	;# 
  1697  0395                     	;# 
  1698  0396                     	;# 
  1699  0FE4                     	;# 
  1700  0FE5                     	;# 
  1701  0FE6                     	;# 
  1702  0FE7                     	;# 
  1703  0FE8                     	;# 
  1704  0FE9                     	;# 
  1705  0FEA                     	;# 
  1706  0FEB                     	;# 
  1707  0FED                     	;# 
  1708  0FEE                     	;# 
  1709  0FEF                     	;# 
  1710  0000                     	;# 
  1711  0001                     	;# 
  1712  0002                     	;# 
  1713  0003                     	;# 
  1714  0004                     	;# 
  1715  0005                     	;# 
  1716  0006                     	;# 
  1717  0007                     	;# 
  1718  0008                     	;# 
  1719  0009                     	;# 
  1720  000A                     	;# 
  1721  000B                     	;# 
  1722  000C                     	;# 
  1723  000D                     	;# 
  1724  000E                     	;# 
  1725  0010                     	;# 
  1726  0011                     	;# 
  1727  0012                     	;# 
  1728  0015                     	;# 
  1729  0016                     	;# 
  1730  0016                     	;# 
  1731  0017                     	;# 
  1732  0018                     	;# 
  1733  0019                     	;# 
  1734  001A                     	;# 
  1735  001B                     	;# 
  1736  001C                     	;# 
  1737  008C                     	;# 
  1738  008D                     	;# 
  1739  008E                     	;# 
  1740  0090                     	;# 
  1741  0091                     	;# 
  1742  0092                     	;# 
  1743  0095                     	;# 
  1744  0096                     	;# 
  1745  0097                     	;# 
  1746  0099                     	;# 
  1747  009A                     	;# 
  1748  009B                     	;# 
  1749  009B                     	;# 
  1750  009C                     	;# 
  1751  009D                     	;# 
  1752  009E                     	;# 
  1753  010C                     	;# 
  1754  010D                     	;# 
  1755  010E                     	;# 
  1756  0116                     	;# 
  1757  0117                     	;# 
  1758  011D                     	;# 
  1759  018C                     	;# 
  1760  018D                     	;# 
  1761  018E                     	;# 
  1762  0191                     	;# 
  1763  0191                     	;# 
  1764  0192                     	;# 
  1765  0193                     	;# 
  1766  0193                     	;# 
  1767  0194                     	;# 
  1768  0195                     	;# 
  1769  0196                     	;# 
  1770  0197                     	;# 
  1771  0199                     	;# 
  1772  019A                     	;# 
  1773  019B                     	;# 
  1774  019B                     	;# 
  1775  019B                     	;# 
  1776  019B                     	;# 
  1777  019C                     	;# 
  1778  019C                     	;# 
  1779  019D                     	;# 
  1780  019E                     	;# 
  1781  019F                     	;# 
  1782  020D                     	;# 
  1783  0210                     	;# 
  1784  0211                     	;# 
  1785  0211                     	;# 
  1786  0212                     	;# 
  1787  0212                     	;# 
  1788  0213                     	;# 
  1789  0213                     	;# 
  1790  0214                     	;# 
  1791  0214                     	;# 
  1792  0215                     	;# 
  1793  0215                     	;# 
  1794  0215                     	;# 
  1795  0216                     	;# 
  1796  0216                     	;# 
  1797  0217                     	;# 
  1798  0217                     	;# 
  1799  0291                     	;# 
  1800  0291                     	;# 
  1801  0292                     	;# 
  1802  0293                     	;# 
  1803  0298                     	;# 
  1804  0298                     	;# 
  1805  0299                     	;# 
  1806  029A                     	;# 
  1807  0394                     	;# 
  1808  0395                     	;# 
  1809  0396                     	;# 
  1810  0FE4                     	;# 
  1811  0FE5                     	;# 
  1812  0FE6                     	;# 
  1813  0FE7                     	;# 
  1814  0FE8                     	;# 
  1815  0FE9                     	;# 
  1816  0FEA                     	;# 
  1817  0FEB                     	;# 
  1818  0FED                     	;# 
  1819  0FEE                     	;# 
  1820  0FEF                     	;# 
  1821  0000                     	;# 
  1822  0001                     	;# 
  1823  0002                     	;# 
  1824  0003                     	;# 
  1825  0004                     	;# 
  1826  0005                     	;# 
  1827  0006                     	;# 
  1828  0007                     	;# 
  1829  0008                     	;# 
  1830  0009                     	;# 
  1831  000A                     	;# 
  1832  000B                     	;# 
  1833  000C                     	;# 
  1834  000D                     	;# 
  1835  000E                     	;# 
  1836  0010                     	;# 
  1837  0011                     	;# 
  1838  0012                     	;# 
  1839  0015                     	;# 
  1840  0016                     	;# 
  1841  0016                     	;# 
  1842  0017                     	;# 
  1843  0018                     	;# 
  1844  0019                     	;# 
  1845  001A                     	;# 
  1846  001B                     	;# 
  1847  001C                     	;# 
  1848  008C                     	;# 
  1849  008D                     	;# 
  1850  008E                     	;# 
  1851  0090                     	;# 
  1852  0091                     	;# 
  1853  0092                     	;# 
  1854  0095                     	;# 
  1855  0096                     	;# 
  1856  0097                     	;# 
  1857  0099                     	;# 
  1858  009A                     	;# 
  1859  009B                     	;# 
  1860  009B                     	;# 
  1861  009C                     	;# 
  1862  009D                     	;# 
  1863  009E                     	;# 
  1864  010C                     	;# 
  1865  010D                     	;# 
  1866  010E                     	;# 
  1867  0116                     	;# 
  1868  0117                     	;# 
  1869  011D                     	;# 
  1870  018C                     	;# 
  1871  018D                     	;# 
  1872  018E                     	;# 
  1873  0191                     	;# 
  1874  0191                     	;# 
  1875  0192                     	;# 
  1876  0193                     	;# 
  1877  0193                     	;# 
  1878  0194                     	;# 
  1879  0195                     	;# 
  1880  0196                     	;# 
  1881  0197                     	;# 
  1882  0199                     	;# 
  1883  019A                     	;# 
  1884  019B                     	;# 
  1885  019B                     	;# 
  1886  019B                     	;# 
  1887  019B                     	;# 
  1888  019C                     	;# 
  1889  019C                     	;# 
  1890  019D                     	;# 
  1891  019E                     	;# 
  1892  019F                     	;# 
  1893  020D                     	;# 
  1894  0210                     	;# 
  1895  0211                     	;# 
  1896  0211                     	;# 
  1897  0212                     	;# 
  1898  0212                     	;# 
  1899  0213                     	;# 
  1900  0213                     	;# 
  1901  0214                     	;# 
  1902  0214                     	;# 
  1903  0215                     	;# 
  1904  0215                     	;# 
  1905  0215                     	;# 
  1906  0216                     	;# 
  1907  0216                     	;# 
  1908  0217                     	;# 
  1909  0217                     	;# 
  1910  0291                     	;# 
  1911  0291                     	;# 
  1912  0292                     	;# 
  1913  0293                     	;# 
  1914  0298                     	;# 
  1915  0298                     	;# 
  1916  0299                     	;# 
  1917  029A                     	;# 
  1918  0394                     	;# 
  1919  0395                     	;# 
  1920  0396                     	;# 
  1921  0FE4                     	;# 
  1922  0FE5                     	;# 
  1923  0FE6                     	;# 
  1924  0FE7                     	;# 
  1925  0FE8                     	;# 
  1926  0FE9                     	;# 
  1927  0FEA                     	;# 
  1928  0FEB                     	;# 
  1929  0FED                     	;# 
  1930  0FEE                     	;# 
  1931  0FEF                     	;# 
  1932                           
  1933                           	psect	idataBANK3
  1934  1CE2                     __pidataBANK3:	
  1935                           
  1936                           ;initializer for _VarProduct
  1937  1CE2  3463               	retlw	99
  1938  1CE3  3402               	retlw	2
  1939  1CE4  3400               	retlw	0
  1940  1CE5  3400               	retlw	0
  1941  1CE6  3400               	retlw	0
  1942  1CE7  3400               	retlw	0
  1943  1CE8  3400               	retlw	0
  1944  1CE9  3400               	retlw	0
  1945  1CEA  3400               	retlw	0
  1946  1CEB  3400               	retlw	0
  1947  1CEC  3400               	retlw	0
  1948  1CED  3400               	retlw	0
  1949  1CEE  34FF               	retlw	255
  1950  1CEF  34FF               	retlw	255
  1951  1CF0  34FF               	retlw	255
  1952  1CF1  3400               	retlw	0
  1953  1CF2  3400               	retlw	0
  1954  1CF3  3400               	retlw	0
  1955  1CF4  3400               	retlw	0
  1956  1CF5  3400               	retlw	0
  1957  1CF6  3400               	retlw	0
  1958  1CF7  3400               	retlw	0
  1959  1CF8  3400               	retlw	0
  1960  1CF9  3400               	retlw	0
  1961  1CFA  3400               	retlw	0
  1962  1CFB  3400               	retlw	0
  1963  1CFC  3400               	retlw	0
  1964  1CFD  3400               	retlw	0
  1965  1CFE  3400               	retlw	0
  1966  1CFF  3400               	retlw	0
  1967  1D00  3400               	retlw	0
  1968  1D01  3400               	retlw	0
  1969                           
  1970                           	psect	stringtext
  1971  1800                     __pstringtext:	
  1972  1800                     _CC2500_registers_address:	
  1973  1800  3403               	retlw	3
  1974  1801  3416               	retlw	22
  1975  1802  3417               	retlw	23
  1976  1803  341E               	retlw	30
  1977  1804  341F               	retlw	31
  1978  1805  3420               	retlw	32
  1979  1806  342A               	retlw	42
  1980  1807  342B               	retlw	43
  1981  1808  340B               	retlw	11
  1982  1809  340C               	retlw	12
  1983  180A  340D               	retlw	13
  1984  180B  340E               	retlw	14
  1985  180C  340F               	retlw	15
  1986  180D  3410               	retlw	16
  1987  180E  3411               	retlw	17
  1988  180F  3412               	retlw	18
  1989  1810  3413               	retlw	19
  1990  1811  3414               	retlw	20
  1991  1812  340A               	retlw	10
  1992  1813  3415               	retlw	21
  1993  1814  3421               	retlw	33
  1994  1815  3422               	retlw	34
  1995  1816  3418               	retlw	24
  1996  1817  3419               	retlw	25
  1997  1818  341A               	retlw	26
  1998  1819  341B               	retlw	27
  1999  181A  341C               	retlw	28
  2000  181B  341D               	retlw	29
  2001  181C  3423               	retlw	35
  2002  181D  3424               	retlw	36
  2003  181E  3425               	retlw	37
  2004  181F  3426               	retlw	38
  2005  1820  3429               	retlw	41
  2006  1821  342C               	retlw	44
  2007  1822  342D               	retlw	45
  2008  1823  342E               	retlw	46
  2009  1824  3400               	retlw	0
  2010  1825  3401               	retlw	1
  2011  1826  3402               	retlw	2
  2012  1827  3407               	retlw	7
  2013  1828  3408               	retlw	8
  2014  1829  3409               	retlw	9
  2015  182A  3406               	retlw	6
  2016  182B  3404               	retlw	4
  2017  182C  3405               	retlw	5
  2018  182D  3427               	retlw	39
  2019  182E  3428               	retlw	40
  2020  182F                     __end_of_CC2500_registers_address:	
  2021  182F                     _CC2500_rfSettings:	
  2022  182F  3407               	retlw	7
  2023  1830  3407               	retlw	7
  2024  1831  3430               	retlw	48
  2025  1832  3487               	retlw	135
  2026  1833  346B               	retlw	107
  2027  1834  34F8               	retlw	248
  2028  1835  347F               	retlw	127
  2029  1836  343F               	retlw	63
  2030  1837  3409               	retlw	9
  2031  1838  3400               	retlw	0
  2032  1839  345C               	retlw	92
  2033  183A  34A7               	retlw	167
  2034  183B  3462               	retlw	98
  2035  183C  3486               	retlw	134
  2036  183D  3483               	retlw	131
  2037  183E  3403               	retlw	3
  2038  183F  3422               	retlw	34
  2039  1840  34F8               	retlw	248
  2040  1841  3400               	retlw	0
  2041  1842  3444               	retlw	68
  2042  1843  34B6               	retlw	182
  2043  1844  3410               	retlw	16
  2044  1845  3418               	retlw	24
  2045  1846  341D               	retlw	29
  2046  1847  341C               	retlw	28
  2047  1848  34C7               	retlw	199
  2048  1849  3400               	retlw	0
  2049  184A  34B2               	retlw	178
  2050  184B  34EA               	retlw	234
  2051  184C  340A               	retlw	10
  2052  184D  3400               	retlw	0
  2053  184E  3411               	retlw	17
  2054  184F  3459               	retlw	89
  2055  1850  3488               	retlw	136
  2056  1851  3431               	retlw	49
  2057  1852  340B               	retlw	11
  2058  1853  342F               	retlw	47
  2059  1854  342E               	retlw	46
  2060  1855  3406               	retlw	6
  2061  1856  3404               	retlw	4
  2062  1857  3405               	retlw	5
  2063  1858  3400               	retlw	0
  2064  1859  3430               	retlw	48
  2065  185A  34D3               	retlw	211
  2066  185B  3491               	retlw	145
  2067  185C  3441               	retlw	65
  2068  185D  3400               	retlw	0
  2069  185E                     __end_of_CC2500_rfSettings:	
  2070  185E                     _CC2500_patable_vaule:	
  2071  185E  34FE               	retlw	254
  2072  185F  34FE               	retlw	254
  2073  1860  34FE               	retlw	254
  2074  1861  34FE               	retlw	254
  2075  1862  34FE               	retlw	254
  2076  1863  34FE               	retlw	254
  2077  1864  34FE               	retlw	254
  2078  1865  34FE               	retlw	254
  2079  1866                     __end_of_CC2500_patable_vaule:	
  2080                           
  2081                           	psect	nvBANK0
  2082  006D                     __pnvBANK0:	
  2083  006D                     _Memory:	
  2084  006D                     	ds	1
  2085  006E                     _Product:	
  2086  006E                     	ds	1
  2087  006F                     _TMain:	
  2088  006F                     	ds	1
  2089                           
  2090                           	psect	nvBANK1
  2091  00EC                     __pnvBANK1:	
  2092  00EC                     _Timer0:	
  2093  00EC                     	ds	1
  2094  00ED                     _WDT:	
  2095  00ED                     	ds	1
  2096  000C                     _PORTA	set	12
  2097  000D                     _PORTB	set	13
  2098  000E                     _PORTC	set	14
  2099  0015                     _TMR0	set	21
  2100  005F                     _GIE	set	95
  2101  005C                     _INTE	set	92
  2102  0059                     _INTF	set	89
  2103  005B                     _IOCIE	set	91
  2104  0058                     _IOCIF	set	88
  2105  005E                     _PEIE	set	94
  2106  0060                     _RA0	set	96
  2107  0063                     _RA3	set	99
  2108  0064                     _RA4	set	100
  2109  0066                     _RA6	set	102
  2110  0067                     _RA7	set	103
  2111  0068                     _RB0	set	104
  2112  0069                     _RB1	set	105
  2113  006A                     _RB2	set	106
  2114  006B                     _RB3	set	107
  2115  006C                     _RB4	set	108
  2116  006D                     _RB5	set	109
  2117  0070                     _RC0	set	112
  2118  0071                     _RC1	set	113
  2119  0072                     _RC2	set	114
  2120  0074                     _RC4	set	116
  2121  0075                     _RC5	set	117
  2122  0077                     _RC7	set	119
  2123  005D                     _TMR0IE	set	93
  2124  005A                     _TMR0IF	set	90
  2125  009D                     _ADCON0	set	157
  2126  009E                     _ADCON1	set	158
  2127  009C                     _ADRESH	set	156
  2128  009B                     _ADRESL	set	155
  2129  0095                     _OPTION_REG	set	149
  2130  0099                     _OSCCON	set	153
  2131  008C                     _TRISA	set	140
  2132  008D                     _TRISB	set	141
  2133  008E                     _TRISC	set	142
  2134  0097                     _WDTCON	set	151
  2135  04E9                     _GO_nDONE	set	1257
  2136  0117                     _FVRCON	set	279
  2137  010C                     _LATA	set	268
  2138  010D                     _LATB	set	269
  2139  010E                     _LATC	set	270
  2140  018C                     _ANSELA	set	396
  2141  018D                     _ANSELB	set	397
  2142  018E                     _ANSELC	set	398
  2143  0192                     _PMADRH	set	402
  2144  0191                     _PMADRL	set	401
  2145  0196                     _PMCON2	set	406
  2146  0194                     _PMDATH	set	404
  2147  0193                     _PMDATL	set	403
  2148  0CAE                     _CFGS	set	3246
  2149  0CAC                     _FREE	set	3244
  2150  0CAD                     _LWLO	set	3245
  2151  0CA8                     _RD	set	3240
  2152  0CA9                     _WR	set	3241
  2153  0CAA                     _WREN	set	3242
  2154  1068                     _WPUB0	set	4200
  2155  1069                     _WPUB1	set	4201
  2156  106A                     _WPUB2	set	4202
  2157  0396                     _IOCBF	set	918
  2158  0395                     _IOCBN	set	917
  2159  0394                     _IOCBP	set	916
  2160  1CB2                     _IOCBF2	set	7346
  2161                           
  2162                           ; #config settings
  2163  0000                     
  2164                           	psect	cinit
  2165  0018                     start_initialization:	
  2166  0018                     __initialization:	
  2167                           
  2168                           ; Clear objects allocated to BITCOMMON
  2169  0018  01F0               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
  2170                           
  2171                           ; Clear objects allocated to COMMON
  2172  0019  01F6               	clrf	__pbssCOMMON& (0+127)
  2173  001A  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
  2174  001B  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
  2175  001C  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
  2176                           
  2177                           ; Clear objects allocated to BANK0
  2178  001D  01E8               	clrf	__pbssBANK0& (0+127)
  2179  001E  01E9               	clrf	(__pbssBANK0+1)& (0+127)
  2180  001F  01EA               	clrf	(__pbssBANK0+2)& (0+127)
  2181  0020  01EB               	clrf	(__pbssBANK0+3)& (0+127)
  2182  0021  01EC               	clrf	(__pbssBANK0+4)& (0+127)
  2183                           
  2184                           ; Clear objects allocated to BANK1
  2185  0022  30A0               	movlw	low __pbssBANK1
  2186  0023  0084               	movwf	4
  2187  0024  3000               	movlw	high __pbssBANK1
  2188  0025  0085               	movwf	5
  2189  0026  304C               	movlw	76
  2190  0027  3199  210C  3180   	fcall	clear_ram0
  2191                           
  2192                           ; Clear objects allocated to BANK2
  2193  002A  3020               	movlw	low __pbssBANK2
  2194  002B  0084               	movwf	4
  2195  002C  3001               	movlw	high __pbssBANK2
  2196  002D  0085               	movwf	5
  2197  002E  3050               	movlw	80
  2198  002F  3199  210C  3180   	fcall	clear_ram0
  2199                           
  2200                           ; Clear objects allocated to BANK3
  2201  0032  30C0               	movlw	low __pbssBANK3
  2202  0033  0084               	movwf	4
  2203  0034  3001               	movlw	high __pbssBANK3
  2204  0035  0085               	movwf	5
  2205  0036  3011               	movlw	17
  2206  0037  3199  210C  3180   	fcall	clear_ram0
  2207                           
  2208                           ; Clear objects allocated to BANK4
  2209  003A  3020               	movlw	low __pbssBANK4
  2210  003B  0084               	movwf	4
  2211  003C  3002               	movlw	high __pbssBANK4
  2212  003D  0085               	movwf	5
  2213  003E  3025               	movlw	37
  2214  003F  3199  210C  3180   	fcall	clear_ram0
  2215                           
  2216                           ; Initialize objects allocated to BANK3
  2217  0042  30E2               	movlw	low __pidataBANK3
  2218  0043  0084               	movwf	4
  2219  0044  309C               	movlw	(high __pidataBANK3)| (0+128)
  2220  0045  0085               	movwf	5
  2221  0046  30A0               	movlw	low __pdataBANK3
  2222  0047  0086               	movwf	6
  2223  0048  3001               	movlw	high __pdataBANK3
  2224  0049  0087               	movwf	7
  2225  004A  3020               	movlw	32
  2226  004B  3199  2106         	fcall	init_ram
  2227  004D                     end_of_initialization:	
  2228                           ;End of C runtime variable initialization code
  2229                           
  2230  004D                     __end_of__initialization:	
  2231  004D  107E               	bcf	pic14e$flags,0	;clear compiler interrupt flag
  2232  004E  0020               	movlb	0
  2233  004F  3188  2802         	ljmp	_main	;jump to C main() function
  2234                           
  2235                           	psect	bitbssCOMMON
  2236  0380                     __pbitbssCOMMON:	
  2237  0380                     _CC2500_Enable:	
  2238  0380                     	ds	1
  2239  0381                     _Receive_GO:	
  2240  0381                     	ds	1
  2241  0382                     _Receive_OK:	
  2242  0382                     	ds	1
  2243  0383                     _RxStatus:	
  2244  0383                     	ds	1
  2245  0384                     _Transceive_GO:	
  2246  0384                     	ds	1
  2247  0385                     _Transceive_OK:	
  2248  0385                     	ds	1
  2249  0386                     _TxStatus:	
  2250  0386                     	ds	1
  2251                           
  2252                           	psect	bssCOMMON
  2253  0076                     __pbssCOMMON:	
  2254  0076                     _PF:	
  2255  0076                     	ds	1
  2256  0077                     _RF:	
  2257  0077                     	ds	1
  2258  0078                     _Sw:	
  2259  0078                     	ds	1
  2260  0079                     _Temp:	
  2261  0079                     	ds	1
  2262                           
  2263                           	psect	bssBANK0
  2264  0068                     __pbssBANK0:	
  2265  0068                     _Buz:	
  2266  0068                     	ds	1
  2267  0069                     _DelayOff:	
  2268  0069                     	ds	1
  2269  006A                     _DimmerLights:	
  2270  006A                     	ds	1
  2271  006B                     _DimmerLights11:	
  2272  006B                     	ds	1
  2273  006C                     _DimmerLights22:	
  2274  006C                     	ds	1
  2275                           
  2276                           	psect	bssBANK1
  2277  00A0                     __pbssBANK1:	
  2278  00A0                     _RF_Data:	
  2279  00A0                     	ds	21
  2280  00B5                     _RF_Count:	
  2281  00B5                     	ds	2
  2282  00B7                     _CRC:	
  2283  00B7                     	ds	1
  2284  00B8                     _Dimmer:	
  2285  00B8                     	ds	1
  2286  00B9                     _DimmerLightsIntr:	
  2287  00B9                     	ds	1
  2288  00BA                     _LED:	
  2289  00BA                     	ds	1
  2290  00BB                     _RFSW:	
  2291  00BB                     	ds	1
  2292  00BC                     _RSSI:	
  2293  00BC                     	ds	1
  2294  00BD                     _Rx_Length:	
  2295  00BD                     	ds	1
  2296  00BE                     _SPI0Buffer:	
  2297  00BE                     	ds	1
  2298  00BF                     _Tx_Length:	
  2299  00BF                     	ds	1
  2300  00C0                     _r_address:	
  2301  00C0                     	ds	1
  2302  00C1                     _r_data:	
  2303  00C1                     	ds	1
  2304  00C2                     _s_data:	
  2305  00C2                     	ds	1
  2306  00C3                     _VarTimer0:	
  2307  00C3                     	ds	9
  2308  00CC                     _DlySw1:	
  2309  00CC                     	ds	5
  2310  00D1                     _DlySw2:	
  2311  00D1                     	ds	5
  2312  00D6                     _VarErrLED:	
  2313  00D6                     	ds	4
  2314  00DA                     _VarLED1:	
  2315  00DA                     	ds	4
  2316  00DE                     _VarLED2:	
  2317  00DE                     	ds	4
  2318  00E2                     _Dimmer1:	
  2319  00E2                     	ds	3
  2320  00E5                     _RF1:	
  2321  00E5                     	ds	3
  2322  00E8                     __WDT:	
  2323  00E8                     	ds	2
  2324  00EA                     _RFSW1:	
  2325  00EA                     	ds	1
  2326  00EB                     _RFSW2:	
  2327  00EB                     	ds	1
  2328                           
  2329                           	psect	bssBANK2
  2330  0120                     __pbssBANK2:	
  2331  0120                     _DimmerLights1:	
  2332  0120                     	ds	14
  2333  012E                     _DimmerLights2:	
  2334  012E                     	ds	14
  2335  013C                     _Temp1:	
  2336  013C                     	ds	14
  2337  014A                     _Buz1:	
  2338  014A                     	ds	12
  2339  0156                     _Sw1:	
  2340  0156                     	ds	9
  2341  015F                     _Sw2:	
  2342  015F                     	ds	9
  2343  0168                     _PF1:	
  2344  0168                     	ds	8
  2345                           
  2346                           	psect	bssBANK3
  2347  01C0                     __pbssBANK3:	
  2348  01C0                     _VarTMain:	
  2349  01C0                     	ds	17
  2350                           
  2351                           	psect	dataBANK3
  2352  01A0                     __pdataBANK3:	
  2353  01A0                     _VarProduct:	
  2354  01A0                     	ds	32
  2355                           
  2356                           	psect	bssBANK4
  2357  0220                     __pbssBANK4:	
  2358  0220                     _VarMemory:	
  2359  0220                     	ds	37
  2360                           
  2361                           	psect	clrtext
  2362  190C                     clear_ram0:	
  2363                           ;	Called with FSR0 containing the base address, and
  2364                           ;	WREG with the size to clear
  2365                           
  2366  190C  0064               	clrwdt	;clear the watchdog before getting into this loop
  2367  190D                     clrloop0:	
  2368  190D  0180               	clrf	0	;clear RAM location pointed to by FSR
  2369  190E  3101               	addfsr 0,1
  2370  190F  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2371  1910  290D               	goto	clrloop0	;have we reached the end yet?
  2372  1911  3400               	retlw	0	;all done for this memory range, return
  2373                           
  2374                           	psect	inittext
  2375  1906                     init_ram:	
  2376  1906  00FE               	movwf	126
  2377  1907                     initloop:	
  2378  1907  0012               	moviw fsr0++
  2379  1908  001E               	movwi fsr1++
  2380  1909  0BFE               	decfsz	126,f
  2381  190A  2907               	goto	initloop
  2382  190B  3400               	retlw	0
  2383                           
  2384                           	psect	cstackBANK3
  2385  01D1                     __pcstackBANK3:	
  2386  01D1                     setRF_Main@rf:	
  2387  01D1                     _setSw_Main$4236:	
  2388                           ; 1 bytes @ 0x0
  2389                           
  2390                           
  2391                           ; 1 bytes @ 0x0
  2392  01D1                     	ds	1
  2393  01D2                     _setRF_Main$3911:	
  2394  01D2                     _setSw_Main$4237:	
  2395                           ; 1 bytes @ 0x1
  2396                           
  2397                           
  2398                           ; 1 bytes @ 0x1
  2399  01D2                     	ds	1
  2400  01D3                     setSw_Main@sw:	
  2401                           
  2402                           ; 1 bytes @ 0x2
  2403  01D3                     	ds	1
  2404                           
  2405                           	psect	cstackBANK1
  2406  00EE                     __pcstackBANK1:	
  2407  00EE                     getRxData@rf:	
  2408                           
  2409                           ; 1 bytes @ 0x0
  2410  00EE                     	ds	1
  2411  00EF                     ??_setRF_Main:	
  2412                           
  2413                           ; 0 bytes @ 0x1
  2414  00EF                     	ds	1
  2415                           
  2416                           	psect	cstackCOMMON
  2417  0071                     __pcstackCOMMON:	
  2418  0071                     ?_CC2500_WriteByte:	
  2419  0071                     ?_CC2500_WriteCommand:	
  2420                           ; 0 bytes @ 0x0
  2421                           
  2422  0071                     ?_CC2500_ReadStatus:	
  2423                           ; 0 bytes @ 0x0
  2424                           
  2425  0071                     ?_CC2500_ReadByte:	
  2426                           ; 0 bytes @ 0x0
  2427                           
  2428  0071                     ?_CC2500_PowerRST:	
  2429                           ; 0 bytes @ 0x0
  2430                           
  2431  0071                     ?_CC2500_InitSetREG:	
  2432                           ; 0 bytes @ 0x0
  2433                           
  2434  0071                     ?_CC2500_InitPATable:	
  2435                           ; 0 bytes @ 0x0
  2436                           
  2437  0071                     ?_CC2500_ClearTXFIFO:	
  2438                           ; 0 bytes @ 0x0
  2439                           
  2440  0071                     ?_CC2500_ClearRXFIFO:	
  2441                           ; 0 bytes @ 0x0
  2442                           
  2443  0071                     ?_CC2500_FrequencyCabr:	
  2444                           ; 0 bytes @ 0x0
  2445                           
  2446  0071                     ?_CC2500_SIDLEMode:	
  2447                           ; 0 bytes @ 0x0
  2448                           
  2449  0071                     ?_DlyOff_Initialization:	
  2450                           ; 0 bytes @ 0x0
  2451                           
  2452  0071                     ?_DlyOff_Main:	
  2453                           ; 0 bytes @ 0x0
  2454                           
  2455  0071                     ?_setTxData:	
  2456                           ; 0 bytes @ 0x0
  2457                           
  2458  0071                     ?_setDimmerLights_Initialization:	
  2459                           ; 0 bytes @ 0x0
  2460                           
  2461  0071                     ?_Dimmer_Initialization:	
  2462                           ; 0 bytes @ 0x0
  2463                           
  2464  0071                     ?_setDimmerLights_Main:	
  2465                           ; 0 bytes @ 0x0
  2466                           
  2467  0071                     ?_setDimmerLights_ERROR:	
  2468                           ; 0 bytes @ 0x0
  2469                           
  2470  0071                     ?_setLED_Initialization:	
  2471                           ; 0 bytes @ 0x0
  2472                           
  2473  0071                     ?_setLED_Main:	
  2474                           ; 0 bytes @ 0x0
  2475                           
  2476  0071                     ?_MainT_Initialization:	
  2477                           ; 0 bytes @ 0x0
  2478                           
  2479  0071                     ?_Mcu_Initialization:	
  2480                           ; 0 bytes @ 0x0
  2481                           
  2482  0071                     ?_Flash_Memory_Initialization:	
  2483                           ; 0 bytes @ 0x0
  2484                           
  2485  0071                     ?_Temp_Initialization:	
  2486                           ; 0 bytes @ 0x0
  2487                           
  2488  0071                     ?_PowerFault_Initialization:	
  2489                           ; 0 bytes @ 0x0
  2490                           
  2491  0071                     ?_Switch_Initialization:	
  2492                           ; 0 bytes @ 0x0
  2493                           
  2494  0071                     ?_RF_Initialization:	
  2495                           ; 0 bytes @ 0x0
  2496                           
  2497  0071                     ?_getTemp_AD:	
  2498                           ; 0 bytes @ 0x0
  2499                           
  2500  0071                     ?_getPowerFault_AD:	
  2501                           ; 0 bytes @ 0x0
  2502                           
  2503  0071                     ?_MainT:	
  2504                           ; 0 bytes @ 0x0
  2505                           
  2506  0071                     ?_WDT_Main:	
  2507                           ; 0 bytes @ 0x0
  2508                           
  2509  0071                     ?_Flash_Memory_Main:	
  2510                           ; 0 bytes @ 0x0
  2511                           
  2512  0071                     ?_Temp_Main:	
  2513                           ; 0 bytes @ 0x0
  2514                           
  2515  0071                     ?_PowerFault_Main:	
  2516                           ; 0 bytes @ 0x0
  2517                           
  2518  0071                     ?_Switch_Main:	
  2519                           ; 0 bytes @ 0x0
  2520                           
  2521  0071                     ?_RF_Main:	
  2522                           ; 0 bytes @ 0x0
  2523                           
  2524  0071                     ?_setTemp_Enable:	
  2525                           ; 0 bytes @ 0x0
  2526                           
  2527  0071                     ?_setSw_Enable:	
  2528                           ; 0 bytes @ 0x0
  2529                           
  2530  0071                     ?_IO_Set:	
  2531                           ; 0 bytes @ 0x0
  2532                           
  2533  0071                     ?_TMR0_Set:	
  2534                           ; 0 bytes @ 0x0
  2535                           
  2536  0071                     ?_ADC_Set:	
  2537                           ; 0 bytes @ 0x0
  2538                           
  2539  0071                     ?_INT_Set:	
  2540                           ; 0 bytes @ 0x0
  2541                           
  2542  0071                     ?_IOC_Set:	
  2543                           ; 0 bytes @ 0x0
  2544                           
  2545  0071                     ?_WDT_Set:	
  2546                           ; 0 bytes @ 0x0
  2547                           
  2548  0071                     ?_IOC_ISR:	
  2549                           ; 0 bytes @ 0x0
  2550                           
  2551  0071                     ??_IOC_ISR:	
  2552                           ; 0 bytes @ 0x0
  2553                           
  2554  0071                     ?_TMR0_ISR:	
  2555                           ; 0 bytes @ 0x0
  2556                           
  2557  0071                     ??_TMR0_ISR:	
  2558                           ; 0 bytes @ 0x0
  2559                           
  2560  0071                     ?_INT_ISR:	
  2561                           ; 0 bytes @ 0x0
  2562                           
  2563  0071                     ?_Flash_Memory_Write:	
  2564                           ; 0 bytes @ 0x0
  2565                           
  2566  0071                     ?_Flash_Memory_Modify:	
  2567                           ; 0 bytes @ 0x0
  2568                           
  2569  0071                     ?_WDT_Clearing:	
  2570                           ; 0 bytes @ 0x0
  2571                           
  2572  0071                     ?_setTemp_Initialization:	
  2573                           ; 0 bytes @ 0x0
  2574                           
  2575  0071                     ?_setTemp_Main:	
  2576                           ; 0 bytes @ 0x0
  2577                           
  2578  0071                     ?_setOverTemp_Exceptions:	
  2579                           ; 0 bytes @ 0x0
  2580                           
  2581  0071                     ?_setPowerFault_Initialization:	
  2582                           ; 0 bytes @ 0x0
  2583                           
  2584  0071                     ?_setPowerFault_Main:	
  2585                           ; 0 bytes @ 0x0
  2586                           
  2587  0071                     ?_setPowerFault_Exceptions:	
  2588                           ; 0 bytes @ 0x0
  2589                           
  2590  0071                     ?_setRF_Initialization:	
  2591                           ; 0 bytes @ 0x0
  2592                           
  2593  0071                     ?_setRF_Main:	
  2594                           ; 0 bytes @ 0x0
  2595                           
  2596  0071                     ?_getRxData:	
  2597                           ; 0 bytes @ 0x0
  2598                           
  2599  0071                     ?_RF_RxDisable:	
  2600                           ; 0 bytes @ 0x0
  2601                           
  2602  0071                     ?_setLog_Code:	
  2603                           ; 0 bytes @ 0x0
  2604                           
  2605  0071                     ?_setControl_Lights_Table:	
  2606                           ; 0 bytes @ 0x0
  2607                           
  2608  0071                     ?_setRFSW_Control:	
  2609                           ; 0 bytes @ 0x0
  2610                           
  2611  0071                     ?_setRFSW_AdjControl:	
  2612                           ; 0 bytes @ 0x0
  2613                           
  2614  0071                     ?_setRF_DimmerValue:	
  2615                           ; 0 bytes @ 0x0
  2616                           
  2617  0071                     ?_setSw_Initialization:	
  2618                           ; 0 bytes @ 0x0
  2619                           
  2620  0071                     ?_setSw_Main:	
  2621                           ; 0 bytes @ 0x0
  2622                           
  2623  0071                     ?_Sw_DimmerOnFunc:	
  2624                           ; 0 bytes @ 0x0
  2625                           
  2626  0071                     ?_Sw_DimmerAdjFunc:	
  2627                           ; 0 bytes @ 0x0
  2628                           
  2629  0071                     ?_Sw_DimmerOffFunc:	
  2630                           ; 0 bytes @ 0x0
  2631                           
  2632  0071                     ?_Buzzer_Initialization:	
  2633                           ; 0 bytes @ 0x0
  2634                           
  2635  0071                     ?_Buzzer_Main:	
  2636                           ; 0 bytes @ 0x0
  2637                           
  2638  0071                     ?_CC2500_TxData:	
  2639                           ; 0 bytes @ 0x0
  2640                           
  2641  0071                     ?_CC2500_RxData:	
  2642                           ; 0 bytes @ 0x0
  2643                           
  2644  0071                     ?_CC2500_PowerOnInitial:	
  2645                           ; 0 bytes @ 0x0
  2646                           
  2647  0071                     ?_DelayOffPointSelect:	
  2648                           ; 0 bytes @ 0x0
  2649                           
  2650  0071                     ?_DelayOff_Initialization:	
  2651                           ; 0 bytes @ 0x0
  2652                           
  2653  0071                     ?_DelayOff_Main:	
  2654                           ; 0 bytes @ 0x0
  2655                           
  2656  0071                     ?_DimmerLightsPointSelect:	
  2657                           ; 0 bytes @ 0x0
  2658                           
  2659  0071                     ?_DimmerLights_Initialization:	
  2660                           ; 0 bytes @ 0x0
  2661                           
  2662  0071                     ?_DimmerLights_Close:	
  2663                           ; 0 bytes @ 0x0
  2664                           
  2665  0071                     ?_DimmerLights_Main:	
  2666                           ; 0 bytes @ 0x0
  2667                           
  2668  0071                     ?_DimmerLights_Exceptions:	
  2669                           ; 0 bytes @ 0x0
  2670                           
  2671  0071                     ?_setDimmerLights_AdjRF:	
  2672                           ; 0 bytes @ 0x0
  2673                           
  2674  0071                     ?_LedPointSelect:	
  2675                           ; 0 bytes @ 0x0
  2676                           
  2677  0071                     ?_LED_Initialization:	
  2678                           ; 0 bytes @ 0x0
  2679                           
  2680  0071                     ?_LED_Main:	
  2681                           ; 0 bytes @ 0x0
  2682                           
  2683  0071                     ?_main:	
  2684                           ; 0 bytes @ 0x0
  2685                           
  2686  0071                     ?_ISR:	
  2687                           ; 0 bytes @ 0x0
  2688                           
  2689  0071                     ?_setDimmerReClock:	
  2690                           ; 0 bytes @ 0x0
  2691                           
  2692  0071                     ??_setDimmerReClock:	
  2693                           ; 0 bytes @ 0x0
  2694                           
  2695  0071                     ?_setINT_GO:	
  2696                           ; 0 bytes @ 0x0
  2697                           
  2698  0071                     ?_Flash_Memory_Unlock:	
  2699                           ; 0 bytes @ 0x0
  2700                           
  2701  0071                     ?_Flash_Memory_Erasing:	
  2702                           ; 0 bytes @ 0x0
  2703                           
  2704  0071                     ?_RfPointSelect:	
  2705                           ; 0 bytes @ 0x0
  2706                           
  2707  0071                     ?_RfSWPointSelect:	
  2708                           ; 0 bytes @ 0x0
  2709                           
  2710  0071                     ?_TouchPower:	
  2711                           ; 0 bytes @ 0x0
  2712                           
  2713  0071                     ?_SwPointSelect:	
  2714                           ; 0 bytes @ 0x0
  2715                           
  2716  0071                     ?i1_RfPointSelect:	
  2717                           ; 0 bytes @ 0x0
  2718                           
  2719  0071                     ??i1_RfPointSelect:	
  2720                           ; 0 bytes @ 0x0
  2721                           
  2722  0071                     ?_DelayTimejudge:	
  2723                           ; 0 bytes @ 0x0
  2724                           
  2725  0071                     ?_getDimmerLights_StatusFlag:	
  2726                           ; 1 bytes @ 0x0
  2727                           
  2728  0071                     ?_getPercentValue:	
  2729                           ; 1 bytes @ 0x0
  2730                           
  2731  0071                     ?_Flash_Memory_Read:	
  2732                           ; 1 bytes @ 0x0
  2733                           
  2734  0071                     ?_getPF_Safe:	
  2735                           ; 1 bytes @ 0x0
  2736                           
  2737  0071                     ?_setPercentValue:	
  2738                           ; 1 bytes @ 0x0
  2739                           
  2740  0071                     ?_getTemp_Safe:	
  2741                           ; 1 bytes @ 0x0
  2742                           
  2743  0071                     setRF_Initialization@rf:	
  2744                           ; 1 bytes @ 0x0
  2745                           
  2746                           
  2747                           ; 1 bytes @ 0x0
  2748  0071                     	ds	1
  2749  0072                     i1RfPointSelect@rf:	
  2750                           
  2751                           ; 1 bytes @ 0x1
  2752  0072                     	ds	1
  2753  0073                     ?_setRF_ReceiveGO:	
  2754  0073                     setRF_ReceiveGO@command:	
  2755                           ; 0 bytes @ 0x2
  2756                           
  2757                           
  2758                           ; 1 bytes @ 0x2
  2759  0073                     	ds	1
  2760  0074                     ??_setRF_ReceiveGO:	
  2761  0074                     setRF_ReceiveGO@rf:	
  2762                           ; 0 bytes @ 0x3
  2763                           
  2764                           
  2765                           ; 1 bytes @ 0x3
  2766  0074                     	ds	1
  2767  0075                     ??_INT_ISR:	
  2768  0075                     ??_ISR:	
  2769                           ; 0 bytes @ 0x4
  2770                           
  2771                           
  2772                           ; 0 bytes @ 0x4
  2773  0075                     	ds	1
  2774                           
  2775                           	psect	cstackBANK0
  2776  0020                     __pcstackBANK0:	
  2777  0020                     ??_CC2500_WriteByte:	
  2778  0020                     ??_CC2500_ReadByte:	
  2779                           ; 0 bytes @ 0x0
  2780                           
  2781  0020                     ?_DelayTime_1us:	
  2782                           ; 0 bytes @ 0x0
  2783                           
  2784  0020                     ??_DelayTimejudge:	
  2785                           ; 0 bytes @ 0x0
  2786                           
  2787  0020                     ??_Dimmer_Initialization:	
  2788                           ; 0 bytes @ 0x0
  2789                           
  2790  0020                     ??_getDimmerLights_StatusFlag:	
  2791                           ; 0 bytes @ 0x0
  2792                           
  2793  0020                     ??_MainT_Initialization:	
  2794                           ; 0 bytes @ 0x0
  2795                           
  2796  0020                     ??_WDT_Main:	
  2797                           ; 0 bytes @ 0x0
  2798                           
  2799  0020                     ??_setTemp_Enable:	
  2800                           ; 0 bytes @ 0x0
  2801                           
  2802  0020                     ??_IO_Set:	
  2803                           ; 0 bytes @ 0x0
  2804                           
  2805  0020                     ??_TMR0_Set:	
  2806                           ; 0 bytes @ 0x0
  2807                           
  2808  0020                     ??_ADC_Set:	
  2809                           ; 0 bytes @ 0x0
  2810                           
  2811  0020                     ??_INT_Set:	
  2812                           ; 0 bytes @ 0x0
  2813                           
  2814  0020                     ??_IOC_Set:	
  2815                           ; 0 bytes @ 0x0
  2816                           
  2817  0020                     ??_WDT_Set:	
  2818                           ; 0 bytes @ 0x0
  2819                           
  2820  0020                     ??_Flash_Memory_Read:	
  2821                           ; 0 bytes @ 0x0
  2822                           
  2823  0020                     ??_Flash_Memory_Write:	
  2824                           ; 0 bytes @ 0x0
  2825                           
  2826  0020                     ??_WDT_Clearing:	
  2827                           ; 0 bytes @ 0x0
  2828                           
  2829  0020                     ??_setTemp_Initialization:	
  2830                           ; 0 bytes @ 0x0
  2831                           
  2832  0020                     ??_getPF_Safe:	
  2833                           ; 0 bytes @ 0x0
  2834                           
  2835  0020                     ??_setPowerFault_Initialization:	
  2836                           ; 0 bytes @ 0x0
  2837                           
  2838  0020                     ??_setRF_Initialization:	
  2839                           ; 0 bytes @ 0x0
  2840                           
  2841  0020                     ??_Buzzer_Initialization:	
  2842                           ; 0 bytes @ 0x0
  2843                           
  2844  0020                     ??_Buzzer_Main:	
  2845                           ; 0 bytes @ 0x0
  2846                           
  2847  0020                     ??_DelayOffPointSelect:	
  2848                           ; 0 bytes @ 0x0
  2849                           
  2850  0020                     ??_DimmerLightsPointSelect:	
  2851                           ; 0 bytes @ 0x0
  2852                           
  2853  0020                     ??_LedPointSelect:	
  2854                           ; 0 bytes @ 0x0
  2855                           
  2856  0020                     ??_setINT_GO:	
  2857                           ; 0 bytes @ 0x0
  2858                           
  2859  0020                     ??_Flash_Memory_Unlock:	
  2860                           ; 0 bytes @ 0x0
  2861                           
  2862  0020                     ??_Flash_Memory_Erasing:	
  2863                           ; 0 bytes @ 0x0
  2864                           
  2865  0020                     ??_getTemp_Safe:	
  2866                           ; 0 bytes @ 0x0
  2867                           
  2868  0020                     ??_RfPointSelect:	
  2869                           ; 0 bytes @ 0x0
  2870                           
  2871  0020                     ??_RfSWPointSelect:	
  2872                           ; 0 bytes @ 0x0
  2873                           
  2874  0020                     ??_TouchPower:	
  2875                           ; 0 bytes @ 0x0
  2876                           
  2877  0020                     ??_SwPointSelect:	
  2878                           ; 0 bytes @ 0x0
  2879                           
  2880  0020                     ?_getAD:	
  2881                           ; 0 bytes @ 0x0
  2882                           
  2883  0020                     ?___wmul:	
  2884                           ; 2 bytes @ 0x0
  2885                           
  2886  0020                     ?___ftpack:	
  2887                           ; 2 bytes @ 0x0
  2888                           
  2889  0020                     setINT_GO@command:	
  2890                           ; 3 bytes @ 0x0
  2891                           
  2892  0020                     getAD@adcon1:	
  2893                           ; 1 bytes @ 0x0
  2894                           
  2895  0020                     setTemp_Enable@command:	
  2896                           ; 1 bytes @ 0x0
  2897                           
  2898  0020                     DelayTime_1us@count:	
  2899                           ; 1 bytes @ 0x0
  2900                           
  2901  0020                     ___wmul@multiplier:	
  2902                           ; 2 bytes @ 0x0
  2903                           
  2904  0020                     ___ftpack@arg:	
  2905                           ; 2 bytes @ 0x0
  2906                           
  2907                           
  2908                           ; 3 bytes @ 0x0
  2909  0020                     	ds	1
  2910  0021                     ??_Mcu_Initialization:	
  2911  0021                     ??_Temp_Initialization:	
  2912                           ; 0 bytes @ 0x1
  2913                           
  2914  0021                     ??_PowerFault_Initialization:	
  2915                           ; 0 bytes @ 0x1
  2916                           
  2917  0021                     ??_RF_Initialization:	
  2918                           ; 0 bytes @ 0x1
  2919                           
  2920  0021                     CC2500_WriteByte@loop_a:	
  2921                           ; 0 bytes @ 0x1
  2922                           
  2923  0021                     CC2500_ReadByte@loop_b:	
  2924                           ; 1 bytes @ 0x1
  2925                           
  2926  0021                     DelayOffPointSelect@sw:	
  2927                           ; 1 bytes @ 0x1
  2928                           
  2929  0021                     DelayTimejudge@i:	
  2930                           ; 1 bytes @ 0x1
  2931                           
  2932  0021                     DimmerLightsPointSelect@lights:	
  2933                           ; 1 bytes @ 0x1
  2934                           
  2935  0021                     getDimmerLights_StatusFlag@Status:	
  2936                           ; 1 bytes @ 0x1
  2937                           
  2938  0021                     LedPointSelect@led:	
  2939                           ; 1 bytes @ 0x1
  2940                           
  2941  0021                     Flash_Memory_Read@i:	
  2942                           ; 1 bytes @ 0x1
  2943                           
  2944  0021                     Flash_Memory_Write@i:	
  2945                           ; 1 bytes @ 0x1
  2946                           
  2947  0021                     RfPointSelect@rf:	
  2948                           ; 1 bytes @ 0x1
  2949                           
  2950  0021                     RfSWPointSelect@sw:	
  2951                           ; 1 bytes @ 0x1
  2952                           
  2953  0021                     SwPointSelect@sw:	
  2954                           ; 1 bytes @ 0x1
  2955                           
  2956                           
  2957                           ; 1 bytes @ 0x1
  2958  0021                     	ds	1
  2959  0022                     ??_CC2500_WriteCommand:	
  2960  0022                     ??_CC2500_ReadStatus:	
  2961                           ; 0 bytes @ 0x2
  2962                           
  2963  0022                     ?_setRF_RxStatus:	
  2964                           ; 0 bytes @ 0x2
  2965                           
  2966  0022                     ??_DelayTime_1us:	
  2967                           ; 0 bytes @ 0x2
  2968                           
  2969  0022                     ?_CC2500_WriteREG:	
  2970                           ; 0 bytes @ 0x2
  2971                           
  2972  0022                     ??_DlyOff_Initialization:	
  2973                           ; 0 bytes @ 0x2
  2974                           
  2975  0022                     ?_setSw_Status:	
  2976                           ; 0 bytes @ 0x2
  2977                           
  2978  0022                     ?_setRFSW_Status:	
  2979                           ; 0 bytes @ 0x2
  2980                           
  2981  0022                     ?_setDimmerLights_Trigger:	
  2982                           ; 0 bytes @ 0x2
  2983                           
  2984  0022                     ?_setDimmerLights_Switch:	
  2985                           ; 0 bytes @ 0x2
  2986                           
  2987  0022                     ??_setTxData:	
  2988                           ; 0 bytes @ 0x2
  2989                           
  2990  0022                     ??_setDimmerLights_Initialization:	
  2991                           ; 0 bytes @ 0x2
  2992                           
  2993  0022                     ?_setDimmerLights_TriggerERROR:	
  2994                           ; 0 bytes @ 0x2
  2995                           
  2996  0022                     ?_setLED:	
  2997                           ; 0 bytes @ 0x2
  2998                           
  2999  0022                     ??_setLED_Main:	
  3000                           ; 0 bytes @ 0x2
  3001                           
  3002  0022                     ??_setSw_Enable:	
  3003                           ; 0 bytes @ 0x2
  3004                           
  3005  0022                     ?_setRF_Enable:	
  3006                           ; 0 bytes @ 0x2
  3007                           
  3008  0022                     ?_setDimmerLights_AdjGo:	
  3009                           ; 0 bytes @ 0x2
  3010                           
  3011  0022                     ?_setDimmerLights_TriggerAdj:	
  3012                           ; 0 bytes @ 0x2
  3013                           
  3014  0022                     ?_setRF_Learn:	
  3015                           ; 0 bytes @ 0x2
  3016                           
  3017  0022                     CC2500_WriteREG@value:	
  3018                           ; 0 bytes @ 0x2
  3019                           
  3020  0022                     DlyOff_Initialization@sw:	
  3021                           ; 1 bytes @ 0x2
  3022                           
  3023  0022                     DelayTimejudge@value:	
  3024                           ; 1 bytes @ 0x2
  3025                           
  3026  0022                     _getDimmerLights_StatusFlag$1650:	
  3027                           ; 1 bytes @ 0x2
  3028                           
  3029  0022                     setDimmerLights_TriggerERROR@command:	
  3030                           ; 1 bytes @ 0x2
  3031                           
  3032  0022                     setDimmerLights_Switch@command:	
  3033                           ; 1 bytes @ 0x2
  3034                           
  3035  0022                     setDimmerLights_AdjGo@command:	
  3036                           ; 1 bytes @ 0x2
  3037                           
  3038  0022                     setDimmerLights_Trigger@command:	
  3039                           ; 1 bytes @ 0x2
  3040                           
  3041  0022                     setDimmerLights_TriggerAdj@command:	
  3042                           ; 1 bytes @ 0x2
  3043                           
  3044  0022                     setLED@command:	
  3045                           ; 1 bytes @ 0x2
  3046                           
  3047  0022                     Flash_Memory_Read@address:	
  3048                           ; 1 bytes @ 0x2
  3049                           
  3050  0022                     setRF_Learn@command:	
  3051                           ; 1 bytes @ 0x2
  3052                           
  3053  0022                     setRF_RxStatus@command:	
  3054                           ; 1 bytes @ 0x2
  3055                           
  3056  0022                     setRF_Enable@command:	
  3057                           ; 1 bytes @ 0x2
  3058                           
  3059  0022                     setRFSW_Status@command:	
  3060                           ; 1 bytes @ 0x2
  3061                           
  3062  0022                     setSw_Enable@command:	
  3063                           ; 1 bytes @ 0x2
  3064                           
  3065  0022                     setSw_Status@command:	
  3066                           ; 1 bytes @ 0x2
  3067                           
  3068  0022                     DelayTime_1us@i:	
  3069                           ; 1 bytes @ 0x2
  3070                           
  3071  0022                     ___wmul@multiplicand:	
  3072                           ; 2 bytes @ 0x2
  3073                           
  3074                           
  3075                           ; 2 bytes @ 0x2
  3076  0022                     	ds	1
  3077  0023                     ??_setRF_RxStatus:	
  3078  0023                     ??_CC2500_WriteREG:	
  3079                           ; 0 bytes @ 0x3
  3080                           
  3081  0023                     ??_setSw_Status:	
  3082                           ; 0 bytes @ 0x3
  3083                           
  3084  0023                     ??_setRFSW_Status:	
  3085                           ; 0 bytes @ 0x3
  3086                           
  3087  0023                     ??_setDimmerLights_Trigger:	
  3088                           ; 0 bytes @ 0x3
  3089                           
  3090  0023                     ??_setDimmerLights_Switch:	
  3091                           ; 0 bytes @ 0x3
  3092                           
  3093  0023                     ??_setDimmerLights_TriggerERROR:	
  3094                           ; 0 bytes @ 0x3
  3095                           
  3096  0023                     ??_setLED:	
  3097                           ; 0 bytes @ 0x3
  3098                           
  3099  0023                     ??_setRF_Enable:	
  3100                           ; 0 bytes @ 0x3
  3101                           
  3102  0023                     ??_DelayOff_Initialization:	
  3103                           ; 0 bytes @ 0x3
  3104                           
  3105  0023                     ?_setDelayOff_GO:	
  3106                           ; 0 bytes @ 0x3
  3107                           
  3108  0023                     ??_DimmerLights_Close:	
  3109                           ; 0 bytes @ 0x3
  3110                           
  3111  0023                     ??_setDimmerLights_AdjGo:	
  3112                           ; 0 bytes @ 0x3
  3113                           
  3114  0023                     ??_setDimmerLights_TriggerAdj:	
  3115                           ; 0 bytes @ 0x3
  3116                           
  3117  0023                     ??_getAD:	
  3118                           ; 0 bytes @ 0x3
  3119                           
  3120  0023                     ??_setRF_Learn:	
  3121                           ; 0 bytes @ 0x3
  3122                           
  3123  0023                     CC2500_WriteCommand@command:	
  3124                           ; 0 bytes @ 0x3
  3125                           
  3126  0023                     CC2500_ReadStatus@status_addr:	
  3127                           ; 1 bytes @ 0x3
  3128                           
  3129  0023                     setDelayOff_GO@command:	
  3130                           ; 1 bytes @ 0x3
  3131                           
  3132  0023                     setDimmerLights_Initialization@lights:	
  3133                           ; 1 bytes @ 0x3
  3134                           
  3135  0023                     setDimmerLights_TriggerERROR@lights:	
  3136                           ; 1 bytes @ 0x3
  3137                           
  3138  0023                     setDimmerLights_Switch@lights:	
  3139                           ; 1 bytes @ 0x3
  3140                           
  3141  0023                     setDimmerLights_AdjGo@lights:	
  3142                           ; 1 bytes @ 0x3
  3143                           
  3144  0023                     setDimmerLights_Trigger@lights:	
  3145                           ; 1 bytes @ 0x3
  3146                           
  3147  0023                     setDimmerLights_TriggerAdj@lights:	
  3148                           ; 1 bytes @ 0x3
  3149                           
  3150  0023                     setLED@led:	
  3151                           ; 1 bytes @ 0x3
  3152                           
  3153  0023                     getAD@adcon0:	
  3154                           ; 1 bytes @ 0x3
  3155                           
  3156  0023                     Flash_Memory_Read@ret:	
  3157                           ; 1 bytes @ 0x3
  3158                           
  3159  0023                     setRF_Learn@rf:	
  3160                           ; 1 bytes @ 0x3
  3161                           
  3162  0023                     setRF_RxStatus@rf:	
  3163                           ; 1 bytes @ 0x3
  3164                           
  3165  0023                     setTxData@rf:	
  3166                           ; 1 bytes @ 0x3
  3167                           
  3168  0023                     setRF_Enable@rf:	
  3169                           ; 1 bytes @ 0x3
  3170                           
  3171  0023                     setRFSW_Status@sw:	
  3172                           ; 1 bytes @ 0x3
  3173                           
  3174  0023                     setSw_Status@sw:	
  3175                           ; 1 bytes @ 0x3
  3176                           
  3177  0023                     ___ftpack@exp:	
  3178                           ; 1 bytes @ 0x3
  3179                           
  3180                           
  3181                           ; 1 bytes @ 0x3
  3182  0023                     	ds	1
  3183  0024                     ??_CC2500_ClearTXFIFO:	
  3184  0024                     ??_CC2500_ClearRXFIFO:	
  3185                           ; 0 bytes @ 0x4
  3186                           
  3187  0024                     ??_CC2500_SIDLEMode:	
  3188                           ; 0 bytes @ 0x4
  3189                           
  3190  0024                     ?_setDimmerLights:	
  3191                           ; 0 bytes @ 0x4
  3192                           
  3193  0024                     ??_setDimmerLights_ERROR:	
  3194                           ; 0 bytes @ 0x4
  3195                           
  3196  0024                     ??_setLED_Initialization:	
  3197                           ; 0 bytes @ 0x4
  3198                           
  3199  0024                     ??_getTemp_AD:	
  3200                           ; 0 bytes @ 0x4
  3201                           
  3202  0024                     ??_getPowerFault_AD:	
  3203                           ; 0 bytes @ 0x4
  3204                           
  3205  0024                     ??_Flash_Memory_Modify:	
  3206                           ; 0 bytes @ 0x4
  3207                           
  3208  0024                     ??_RF_RxDisable:	
  3209                           ; 0 bytes @ 0x4
  3210                           
  3211  0024                     ??_setSw_Initialization:	
  3212                           ; 0 bytes @ 0x4
  3213                           
  3214  0024                     ??_Sw_DimmerAdjFunc:	
  3215                           ; 0 bytes @ 0x4
  3216                           
  3217  0024                     ??_CC2500_TxData:	
  3218                           ; 0 bytes @ 0x4
  3219                           
  3220  0024                     ??_CC2500_RxData:	
  3221                           ; 0 bytes @ 0x4
  3222                           
  3223  0024                     ??_DimmerLights_Initialization:	
  3224                           ; 0 bytes @ 0x4
  3225                           
  3226  0024                     ??___wmul:	
  3227                           ; 0 bytes @ 0x4
  3228                           
  3229  0024                     CC2500_WriteREG@w_addr:	
  3230                           ; 0 bytes @ 0x4
  3231                           
  3232  0024                     setDelayOff_GO@value:	
  3233                           ; 1 bytes @ 0x4
  3234                           
  3235  0024                     setDimmerLights@status:	
  3236                           ; 1 bytes @ 0x4
  3237                           
  3238  0024                     setLED_Initialization@led:	
  3239                           ; 1 bytes @ 0x4
  3240                           
  3241  0024                     setLED_Main@led:	
  3242                           ; 1 bytes @ 0x4
  3243                           
  3244  0024                     RF_RxDisable@rf:	
  3245                           ; 1 bytes @ 0x4
  3246                           
  3247  0024                     setSw_Initialization@sw:	
  3248                           ; 1 bytes @ 0x4
  3249                           
  3250  0024                     Sw_DimmerAdjFunc@Idle:	
  3251                           ; 1 bytes @ 0x4
  3252                           
  3253  0024                     ___ftpack@sign:	
  3254                           ; 1 bytes @ 0x4
  3255                           
  3256  0024                     DelayTime_1us@j:	
  3257                           ; 1 bytes @ 0x4
  3258                           
  3259  0024                     ___wmul@product:	
  3260                           ; 2 bytes @ 0x4
  3261                           
  3262                           
  3263                           ; 2 bytes @ 0x4
  3264  0024                     	ds	1
  3265  0025                     ??_CC2500_InitSetREG:	
  3266  0025                     ??_CC2500_InitPATable:	
  3267                           ; 0 bytes @ 0x5
  3268                           
  3269  0025                     ??_setDimmerLights:	
  3270                           ; 0 bytes @ 0x5
  3271                           
  3272  0025                     ??_Switch_Initialization:	
  3273                           ; 0 bytes @ 0x5
  3274                           
  3275  0025                     ??___ftpack:	
  3276                           ; 0 bytes @ 0x5
  3277                           
  3278  0025                     ??_setDelayOff_GO:	
  3279                           ; 0 bytes @ 0x5
  3280                           
  3281  0025                     ??_LED_Initialization:	
  3282                           ; 0 bytes @ 0x5
  3283                           
  3284  0025                     ??_LED_Main:	
  3285                           ; 0 bytes @ 0x5
  3286                           
  3287  0025                     CC2500_TxData@loop_e:	
  3288                           ; 0 bytes @ 0x5
  3289                           
  3290  0025                     CC2500_RxData@loop_f:	
  3291                           ; 1 bytes @ 0x5
  3292                           
  3293  0025                     setDimmerLights_ERROR@lights:	
  3294                           ; 1 bytes @ 0x5
  3295                           
  3296  0025                     Sw_DimmerAdjFunc@sw:	
  3297                           ; 1 bytes @ 0x5
  3298                           
  3299                           
  3300                           ; 1 bytes @ 0x5
  3301  0025                     	ds	1
  3302  0026                     ??_CC2500_PowerRST:	
  3303  0026                     ??_CC2500_FrequencyCabr:	
  3304                           ; 0 bytes @ 0x6
  3305                           
  3306  0026                     ?_setBuz:	
  3307                           ; 0 bytes @ 0x6
  3308                           
  3309  0026                     CC2500_InitSetREG@temp1:	
  3310                           ; 0 bytes @ 0x6
  3311                           
  3312  0026                     CC2500_InitPATable@temp:	
  3313                           ; 1 bytes @ 0x6
  3314                           
  3315  0026                     setDimmerLights@lights:	
  3316                           ; 1 bytes @ 0x6
  3317                           
  3318  0026                     Flash_Memory_Modify@i:	
  3319                           ; 1 bytes @ 0x6
  3320                           
  3321  0026                     setBuz@time:	
  3322                           ; 1 bytes @ 0x6
  3323                           
  3324                           
  3325                           ; 2 bytes @ 0x6
  3326  0026                     	ds	1
  3327  0027                     ??_Flash_Memory_Main:	
  3328  0027                     CC2500_InitSetREG@temp2:	
  3329                           ; 0 bytes @ 0x7
  3330                           
  3331  0027                     CC2500_InitPATable@loop_d:	
  3332                           ; 1 bytes @ 0x7
  3333                           
  3334  0027                     setDelayOff_GO@sw:	
  3335                           ; 1 bytes @ 0x7
  3336                           
  3337                           
  3338                           ; 1 bytes @ 0x7
  3339  0027                     	ds	1
  3340  0028                     ??_setBuz:	
  3341  0028                     ?___awtoft:	
  3342                           ; 0 bytes @ 0x8
  3343                           
  3344  0028                     CC2500_InitSetREG@loop_c:	
  3345                           ; 3 bytes @ 0x8
  3346                           
  3347  0028                     getTemp_AD@channel:	
  3348                           ; 1 bytes @ 0x8
  3349                           
  3350  0028                     getPowerFault_AD@channel:	
  3351                           ; 1 bytes @ 0x8
  3352                           
  3353  0028                     ___awtoft@c:	
  3354                           ; 1 bytes @ 0x8
  3355                           
  3356                           
  3357                           ; 2 bytes @ 0x8
  3358  0028                     	ds	1
  3359  0029                     ??_CC2500_PowerOnInitial:	
  3360  0029                     setBuz@count:	
  3361                           ; 0 bytes @ 0x9
  3362                           
  3363                           
  3364                           ; 1 bytes @ 0x9
  3365  0029                     	ds	1
  3366  002A                     ??_MainT:	
  3367  002A                     ??_setLog_Code:	
  3368                           ; 0 bytes @ 0xA
  3369                           
  3370  002A                     ??_DimmerLights_Exceptions:	
  3371                           ; 0 bytes @ 0xA
  3372                           
  3373  002A                     DimmerLights_Exceptions@status:	
  3374                           ; 0 bytes @ 0xA
  3375                           
  3376                           
  3377                           ; 1 bytes @ 0xA
  3378  002A                     	ds	1
  3379  002B                     ??_setOverTemp_Exceptions:	
  3380  002B                     ??_setPowerFault_Exceptions:	
  3381                           ; 0 bytes @ 0xB
  3382                           
  3383  002B                     ??___awtoft:	
  3384                           ; 0 bytes @ 0xB
  3385                           
  3386  002B                     setLog_Code@rf:	
  3387                           ; 0 bytes @ 0xB
  3388                           
  3389                           
  3390                           ; 1 bytes @ 0xB
  3391  002B                     	ds	1
  3392  002C                     setOverTemp_Exceptions@command:	
  3393  002C                     setPowerFault_Exceptions@command:	
  3394                           ; 1 bytes @ 0xC
  3395                           
  3396                           
  3397                           ; 1 bytes @ 0xC
  3398  002C                     	ds	1
  3399  002D                     ??_setTemp_Main:	
  3400  002D                     ??_setPowerFault_Main:	
  3401                           ; 0 bytes @ 0xD
  3402                           
  3403  002D                     ___awtoft@sign:	
  3404                           ; 0 bytes @ 0xD
  3405                           
  3406                           
  3407                           ; 1 bytes @ 0xD
  3408  002D                     	ds	1
  3409  002E                     ?___ftdiv:	
  3410  002E                     ?___ftmul:	
  3411                           ; 3 bytes @ 0xE
  3412                           
  3413  002E                     ___ftdiv@f2:	
  3414                           ; 3 bytes @ 0xE
  3415                           
  3416  002E                     ___ftmul@f1:	
  3417                           ; 3 bytes @ 0xE
  3418                           
  3419                           
  3420                           ; 3 bytes @ 0xE
  3421  002E                     	ds	1
  3422  002F                     ??_PowerFault_Main:	
  3423                           
  3424                           ; 0 bytes @ 0xF
  3425  002F                     	ds	1
  3426  0030                     ??_Temp_Main:	
  3427                           
  3428                           ; 0 bytes @ 0x10
  3429  0030                     	ds	1
  3430  0031                     ___ftdiv@f1:	
  3431  0031                     ___ftmul@f2:	
  3432                           ; 3 bytes @ 0x11
  3433                           
  3434                           
  3435                           ; 3 bytes @ 0x11
  3436  0031                     	ds	3
  3437  0034                     ??___ftdiv:	
  3438  0034                     ??___ftmul:	
  3439                           ; 0 bytes @ 0x14
  3440                           
  3441                           
  3442                           ; 0 bytes @ 0x14
  3443  0034                     	ds	4
  3444  0038                     ___ftdiv@cntr:	
  3445  0038                     ___ftmul@exp:	
  3446                           ; 1 bytes @ 0x18
  3447                           
  3448                           
  3449                           ; 1 bytes @ 0x18
  3450  0038                     	ds	1
  3451  0039                     ___ftdiv@f3:	
  3452  0039                     ___ftmul@f3_as_product:	
  3453                           ; 3 bytes @ 0x19
  3454                           
  3455                           
  3456                           ; 3 bytes @ 0x19
  3457  0039                     	ds	3
  3458  003C                     ___ftdiv@exp:	
  3459  003C                     ___ftmul@cntr:	
  3460                           ; 1 bytes @ 0x1C
  3461                           
  3462                           
  3463                           ; 1 bytes @ 0x1C
  3464  003C                     	ds	1
  3465  003D                     ___ftdiv@sign:	
  3466  003D                     ___ftmul@sign:	
  3467                           ; 1 bytes @ 0x1D
  3468                           
  3469                           
  3470                           ; 1 bytes @ 0x1D
  3471  003D                     	ds	1
  3472  003E                     ?___ftadd:	
  3473  003E                     ___ftadd@f1:	
  3474                           ; 3 bytes @ 0x1E
  3475                           
  3476                           
  3477                           ; 3 bytes @ 0x1E
  3478  003E                     	ds	3
  3479  0041                     ___ftadd@f2:	
  3480                           
  3481                           ; 3 bytes @ 0x21
  3482  0041                     	ds	3
  3483  0044                     ??___ftadd:	
  3484                           
  3485                           ; 0 bytes @ 0x24
  3486  0044                     	ds	4
  3487  0048                     ___ftadd@sign:	
  3488                           
  3489                           ; 1 bytes @ 0x28
  3490  0048                     	ds	1
  3491  0049                     ___ftadd@exp2:	
  3492                           
  3493                           ; 1 bytes @ 0x29
  3494  0049                     	ds	1
  3495  004A                     ___ftadd@exp1:	
  3496                           
  3497                           ; 1 bytes @ 0x2A
  3498  004A                     	ds	1
  3499  004B                     ?___fttol:	
  3500  004B                     ___fttol@f1:	
  3501                           ; 4 bytes @ 0x2B
  3502                           
  3503                           
  3504                           ; 3 bytes @ 0x2B
  3505  004B                     	ds	4
  3506  004F                     ??___fttol:	
  3507                           
  3508                           ; 0 bytes @ 0x2F
  3509  004F                     	ds	4
  3510  0053                     ___fttol@sign1:	
  3511                           
  3512                           ; 1 bytes @ 0x33
  3513  0053                     	ds	1
  3514  0054                     ___fttol@lval:	
  3515                           
  3516                           ; 4 bytes @ 0x34
  3517  0054                     	ds	4
  3518  0058                     ___fttol@exp1:	
  3519                           
  3520                           ; 1 bytes @ 0x38
  3521  0058                     	ds	1
  3522  0059                     ??_getPercentValue:	
  3523  0059                     ??_setPercentValue:	
  3524                           ; 0 bytes @ 0x39
  3525                           
  3526  0059                     setPercentValue@value:	
  3527                           ; 0 bytes @ 0x39
  3528                           
  3529                           
  3530                           ; 1 bytes @ 0x39
  3531  0059                     	ds	1
  3532  005A                     setPercentValue@i:	
  3533                           
  3534                           ; 3 bytes @ 0x3A
  3535  005A                     	ds	1
  3536  005B                     getPercentValue@value:	
  3537                           
  3538                           ; 1 bytes @ 0x3B
  3539  005B                     	ds	1
  3540  005C                     getPercentValue@i:	
  3541                           
  3542                           ; 3 bytes @ 0x3C
  3543  005C                     	ds	1
  3544  005D                     ?_setRF_DimmerLights:	
  3545  005D                     ??_Flash_Memory_Initialization:	
  3546                           ; 0 bytes @ 0x3D
  3547                           
  3548  005D                     setRF_DimmerLights@on:	
  3549                           ; 0 bytes @ 0x3D
  3550                           
  3551                           
  3552                           ; 1 bytes @ 0x3D
  3553  005D                     	ds	1
  3554  005E                     ??_setRF_DimmerLights:	
  3555  005E                     Flash_Memory_Initialization@i:	
  3556                           ; 0 bytes @ 0x3E
  3557                           
  3558                           
  3559                           ; 1 bytes @ 0x3E
  3560  005E                     	ds	1
  3561  005F                     ??_setDimmerLights_AdjRF:	
  3562                           
  3563                           ; 0 bytes @ 0x3F
  3564  005F                     	ds	1
  3565  0060                     setDimmerLights_AdjRF@lights:	
  3566  0060                     setRF_DimmerLights@status:	
  3567                           ; 1 bytes @ 0x40
  3568                           
  3569                           
  3570                           ; 1 bytes @ 0x40
  3571  0060                     	ds	1
  3572  0061                     ??_setRF_DimmerValue:	
  3573  0061                     setRF_DimmerLights@lights:	
  3574                           ; 0 bytes @ 0x41
  3575                           
  3576                           
  3577                           ; 1 bytes @ 0x41
  3578  0061                     	ds	1
  3579  0062                     ??_DlyOff_Main:	
  3580  0062                     ?_setDimmerLights_Adj:	
  3581                           ; 0 bytes @ 0x42
  3582                           
  3583  0062                     ??_setRFSW_Control:	
  3584                           ; 0 bytes @ 0x42
  3585                           
  3586  0062                     ??_Sw_DimmerOnFunc:	
  3587                           ; 0 bytes @ 0x42
  3588                           
  3589  0062                     ??_Sw_DimmerOffFunc:	
  3590                           ; 0 bytes @ 0x42
  3591                           
  3592  0062                     setDimmerLights_Adj@status:	
  3593                           ; 0 bytes @ 0x42
  3594                           
  3595  0062                     Sw_DimmerOnFunc@Idle:	
  3596                           ; 1 bytes @ 0x42
  3597                           
  3598                           
  3599                           ; 1 bytes @ 0x42
  3600  0062                     	ds	1
  3601  0063                     ??_setDimmerLights_Adj:	
  3602  0063                     setRFSW_Control@sw:	
  3603                           ; 0 bytes @ 0x43
  3604                           
  3605  0063                     setRF_DimmerValue@lights:	
  3606                           ; 1 bytes @ 0x43
  3607                           
  3608  0063                     Sw_DimmerOnFunc@sw:	
  3609                           ; 1 bytes @ 0x43
  3610                           
  3611                           
  3612                           ; 1 bytes @ 0x43
  3613  0063                     	ds	1
  3614  0064                     ??_setRFSW_AdjControl:	
  3615  0064                     DlyOff_Main@sw:	
  3616                           ; 0 bytes @ 0x44
  3617                           
  3618  0064                     setDimmerLights_Adj@lights:	
  3619                           ; 1 bytes @ 0x44
  3620                           
  3621  0064                     Sw_DimmerOffFunc@sw:	
  3622                           ; 1 bytes @ 0x44
  3623                           
  3624                           
  3625                           ; 1 bytes @ 0x44
  3626  0064                     	ds	1
  3627  0065                     ??_setDimmerLights_Main:	
  3628  0065                     ??_setSw_Main:	
  3629                           ; 0 bytes @ 0x45
  3630                           
  3631  0065                     ??_DelayOff_Main:	
  3632                           ; 0 bytes @ 0x45
  3633                           
  3634  0065                     setDimmerLights_Main@clear:	
  3635                           ; 0 bytes @ 0x45
  3636                           
  3637                           
  3638                           ; 1 bytes @ 0x45
  3639  0065                     	ds	1
  3640  0066                     setDimmerLights_Main@lights:	
  3641  0066                     setRFSW_AdjControl@sw:	
  3642                           ; 1 bytes @ 0x46
  3643                           
  3644                           
  3645                           ; 1 bytes @ 0x46
  3646  0066                     	ds	1
  3647  0067                     ??_Switch_Main:	
  3648  0067                     ??_setControl_Lights_Table:	
  3649                           ; 0 bytes @ 0x47
  3650                           
  3651  0067                     ??_DimmerLights_Main:	
  3652                           ; 0 bytes @ 0x47
  3653                           
  3654  0067                     setControl_Lights_Table@rf:	
  3655                           ; 0 bytes @ 0x47
  3656                           
  3657                           
  3658                           ; 1 bytes @ 0x47
  3659  0067                     	ds	1
  3660  0068                     ??_RF_Main:	
  3661  0068                     ??_getRxData:	
  3662                           ; 0 bytes @ 0x48
  3663                           
  3664  0068                     ??_main:	
  3665                           ; 0 bytes @ 0x48
  3666                           
  3667                           
  3668                           	psect	maintext
  3669  0802                     __pmaintext:	
  3670                           ; 0 bytes @ 0x48
  3671 ;;
  3672 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3673 ;;
  3674 ;; *************** function _main *****************
  3675 ;; Defined at:
  3676 ;;		line 7 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\main.c"
  3677 ;; Parameters:    Size  Location     Type
  3678 ;;		None
  3679 ;; Auto vars:     Size  Location     Type
  3680 ;;		None
  3681 ;; Return value:  Size  Location     Type
  3682 ;;		None               void
  3683 ;; Registers used:
  3684 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3685 ;; Tracked objects:
  3686 ;;		On entry : 17F/0
  3687 ;;		On exit  : 0/0
  3688 ;;		Unchanged: 0/0
  3689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3693 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3694 ;;Total ram usage:        0 bytes
  3695 ;; Hardware stack levels required when called:   14
  3696 ;; This function calls:
  3697 ;;		_Buzzer_Initialization
  3698 ;;		_Buzzer_Main
  3699 ;;		_CC2500_PowerOnInitial
  3700 ;;		_DelayOff_Initialization
  3701 ;;		_DelayOff_Main
  3702 ;;		_DimmerLights_Initialization
  3703 ;;		_DimmerLights_Main
  3704 ;;		_Flash_Memory_Initialization
  3705 ;;		_Flash_Memory_Main
  3706 ;;		_LED_Initialization
  3707 ;;		_LED_Main
  3708 ;;		_MainT
  3709 ;;		_MainT_Initialization
  3710 ;;		_Mcu_Initialization
  3711 ;;		_PowerFault_Initialization
  3712 ;;		_PowerFault_Main
  3713 ;;		_RF_Initialization
  3714 ;;		_RF_Main
  3715 ;;		_Switch_Initialization
  3716 ;;		_Switch_Main
  3717 ;;		_Temp_Initialization
  3718 ;;		_Temp_Main
  3719 ;;		_WDT_Main
  3720 ;;		_getPowerFault_AD
  3721 ;;		_getTemp_AD
  3722 ;; This function is called by:
  3723 ;;		Startup code after reset
  3724 ;; This function uses a non-reentrant model
  3725 ;;
  3726                           
  3727                           
  3728                           ;psect for function _main
  3729  0802                     _main:	
  3730                           
  3731                           ;main.c: 9: MainT_Initialization();
  3732                           
  3733                           ;incstack = 0
  3734                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3735  0802  319A  22E1  3188   	fcall	_MainT_Initialization
  3736                           
  3737                           ;main.c: 10: Mcu_Initialization();
  3738  0805  319C  2436  3188   	fcall	_Mcu_Initialization
  3739                           
  3740                           ;main.c: 11: Flash_Memory_Initialization();
  3741  0808  318E  2621  3188   	fcall	_Flash_Memory_Initialization
  3742                           
  3743                           ;main.c: 12: LED_Initialization();
  3744  080B  3199  21E4  3188   	fcall	_LED_Initialization
  3745                           
  3746                           ;main.c: 13: Buzzer_Initialization();
  3747  080E  3199  2172  3188   	fcall	_Buzzer_Initialization
  3748                           
  3749                           ;main.c: 15: ;;
  3750                           ;main.c: 16: Temp_Initialization();
  3751  0811  3198  20E1  3188   	fcall	_Temp_Initialization
  3752                           
  3753                           ;main.c: 17: ;;
  3754                           ;main.c: 18: PowerFault_Initialization();
  3755  0814  3198  20DB  3188   	fcall	_PowerFault_Initialization
  3756                           
  3757                           ;main.c: 19: DelayOff_Initialization();
  3758  0817  3199  212E  3188   	fcall	_DelayOff_Initialization
  3759                           
  3760                           ;main.c: 21: DimmerLights_Initialization();
  3761  081A  319B  2331  3188   	fcall	_DimmerLights_Initialization
  3762                           
  3763                           ;main.c: 22: ;;
  3764                           ;main.c: 23: ;;
  3765                           ;main.c: 24: ;;
  3766                           ;main.c: 26: Switch_Initialization();
  3767  081D  319A  2216  3188   	fcall	_Switch_Initialization
  3768                           
  3769                           ;main.c: 27: RF_Initialization();
  3770  0820  3198  20F3  3188   	fcall	_RF_Initialization
  3771                           
  3772                           ;main.c: 28: CC2500_PowerOnInitial();
  3773  0823  319B  231C  3188   	fcall	_CC2500_PowerOnInitial
  3774  0826                     l9861:	
  3775                           ;main.c: 30: while(1)
  3776                           
  3777                           
  3778                           ;main.c: 31: {
  3779                           ;main.c: 32: if(TMain->PowerON)
  3780  0826  0020               	movlb	0	; select bank0
  3781  0827  086F               	movf	_TMain,w
  3782  0828  0086               	movwf	6
  3783  0829  3001               	movlw	1	; select bank2/3
  3784  082A  0087               	movwf	7
  3785  082B  1C01               	btfss	1,0
  3786  082C  2838               	goto	l9865
  3787                           
  3788                           ;main.c: 33: {
  3789                           ;main.c: 35: ;;
  3790                           ;main.c: 39: ;;
  3791                           ;main.c: 43: getTemp_AD(0x09);
  3792  082D  3009               	movlw	9
  3793  082E  3195  25CB  3188   	fcall	_getTemp_AD
  3794                           
  3795                           ;main.c: 47: getPowerFault_AD(0x11);
  3796  0831  3011               	movlw	17
  3797  0832  3190  2042  3188   	fcall	_getPowerFault_AD
  3798                           
  3799                           ;main.c: 59: Buzzer_Main();
  3800  0835  318C  241C  3188   	fcall	_Buzzer_Main
  3801  0838                     l9865:	
  3802                           
  3803                           ;main.c: 61: }
  3804                           ;main.c: 63: if(TMain->T0_Timerout)
  3805  0838  0020               	movlb	0	; select bank0
  3806  0839  086F               	movf	_TMain,w
  3807  083A  0086               	movwf	6
  3808  083B  3001               	movlw	1	; select bank2/3
  3809  083C  0087               	movwf	7
  3810  083D  1C81               	btfss	1,1
  3811  083E  2826               	goto	l9861
  3812                           
  3813                           ;main.c: 64: {
  3814                           ;main.c: 65: TMain->T0_Timerout = 0;
  3815  083F  086F               	movf	_TMain,w
  3816  0840  0086               	movwf	6
  3817  0841  3001               	movlw	1	; select bank2/3
  3818  0842  0087               	movwf	7
  3819  0843  1081               	bcf	1,1
  3820                           
  3821                           ;main.c: 66: MainT();
  3822  0844  3188  206A  3188   	fcall	_MainT
  3823                           
  3824                           ;main.c: 67: WDT_Main();
  3825  0847  319C  246C  3188   	fcall	_WDT_Main
  3826                           
  3827                           ;main.c: 68: if(TMain->PowerON)
  3828  084A  0020               	movlb	0	; select bank0
  3829  084B  086F               	movf	_TMain,w
  3830  084C  0086               	movwf	6
  3831  084D  3001               	movlw	1	; select bank2/3
  3832  084E  0087               	movwf	7
  3833  084F  1C01               	btfss	1,0
  3834  0850  2826               	goto	l9861
  3835                           
  3836                           ;main.c: 69: {
  3837                           ;main.c: 70: Flash_Memory_Main();
  3838  0851  3191  214B  3188   	fcall	_Flash_Memory_Main
  3839                           
  3840                           ;main.c: 72: LED_Main();
  3841  0854  3199  21F0  3188   	fcall	_LED_Main
  3842                           
  3843                           ;main.c: 74: ;;
  3844                           ;main.c: 75: Temp_Main();
  3845  0857  3198  20E4  3188   	fcall	_Temp_Main
  3846                           
  3847                           ;main.c: 76: ;;
  3848                           ;main.c: 77: PowerFault_Main();
  3849  085A  3198  20DE  3188   	fcall	_PowerFault_Main
  3850                           
  3851                           ;main.c: 79: ;;
  3852                           ;main.c: 80: DimmerLights_Main();
  3853  085D  3199  2193  3188   	fcall	_DimmerLights_Main
  3854                           
  3855                           ;main.c: 81: Switch_Main();
  3856  0860  3199  2146  3188   	fcall	_Switch_Main
  3857                           
  3858                           ;main.c: 82: ;;
  3859                           ;main.c: 83: ;;
  3860                           ;main.c: 85: RF_Main();
  3861  0863  3198  20F7  3188   	fcall	_RF_Main
  3862                           
  3863                           ;main.c: 86: DelayOff_Main();
  3864  0866  3199  2136  3188   	fcall	_DelayOff_Main
  3865  0869  2826               	goto	l9861
  3866  086A                     __end_of_main:	
  3867                           
  3868                           	psect	text1
  3869  15CB                     __ptext1:	
  3870 ;; *************** function _getTemp_AD *****************
  3871 ;; Defined at:
  3872 ;;		line 35 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\OverTemperature_B1.c"
  3873 ;; Parameters:    Size  Location     Type
  3874 ;;  channel         1    wreg     unsigned char 
  3875 ;; Auto vars:     Size  Location     Type
  3876 ;;  channel         1    8[BANK0 ] unsigned char 
  3877 ;; Return value:  Size  Location     Type
  3878 ;;		None               void
  3879 ;; Registers used:
  3880 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3881 ;; Tracked objects:
  3882 ;;		On entry : 0/0
  3883 ;;		On exit  : 0/0
  3884 ;;		Unchanged: 0/0
  3885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3887 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3888 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3889 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3890 ;;Total ram usage:        5 bytes
  3891 ;; Hardware stack levels used:    1
  3892 ;; Hardware stack levels required when called:    5
  3893 ;; This function calls:
  3894 ;;		_getAD
  3895 ;; This function is called by:
  3896 ;;		_main
  3897 ;; This function uses a non-reentrant model
  3898 ;;
  3899                           
  3900                           
  3901                           ;psect for function _getTemp_AD
  3902  15CB                     _getTemp_AD:	
  3903                           
  3904                           ;incstack = 0
  3905                           ; Regs used in _getTemp_AD: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3906                           ;getTemp_AD@channel stored from wreg
  3907  15CB  0020               	movlb	0	; select bank0
  3908  15CC  00A8               	movwf	getTemp_AD@channel
  3909                           
  3910                           ;OverTemperature_B1.c: 37: if(Temp->ADtoGO)
  3911  15CD  0879               	movf	_Temp,w
  3912  15CE  0086               	movwf	6
  3913  15CF  3001               	movlw	1	; select bank2/3
  3914  15D0  0087               	movwf	7
  3915  15D1  1D01               	btfss	1,2
  3916  15D2  0008               	return
  3917                           
  3918                           ;OverTemperature_B1.c: 38: {
  3919                           ;OverTemperature_B1.c: 39: Temp->ADRES=getAD(channel,0xf0);
  3920  15D3  30F0               	movlw	240
  3921  15D4  00A4               	movwf	??_getTemp_AD
  3922  15D5  0824               	movf	??_getTemp_AD,w
  3923  15D6  00A0               	movwf	getAD@adcon1
  3924  15D7  0828               	movf	getTemp_AD@channel,w
  3925  15D8  319B  2372  3195   	fcall	_getAD
  3926  15DB  0879               	movf	_Temp,w
  3927  15DC  3E0A               	addlw	10
  3928  15DD  0086               	movwf	6
  3929  15DE  3001               	movlw	1	; select bank2/3
  3930  15DF  0087               	movwf	7
  3931  15E0  0020               	movlb	0	; select bank0
  3932  15E1  0820               	movf	?_getAD,w
  3933  15E2  3FC0               	movwi [0]fsr1
  3934  15E3  0821               	movf	?_getAD+1,w
  3935  15E4  3FC1               	movwi [1]fsr1
  3936                           
  3937                           ;OverTemperature_B1.c: 40: if(Temp->ADH[0] < Temp->ADRES)
  3938  15E5  0879               	movf	_Temp,w
  3939  15E6  3E0A               	addlw	10
  3940  15E7  0086               	movwf	6
  3941  15E8  3001               	movlw	1	; select bank2/3
  3942  15E9  0087               	movwf	7
  3943  15EA  3F40               	moviw [0]fsr1
  3944  15EB  00A4               	movwf	??_getTemp_AD
  3945  15EC  3F41               	moviw [1]fsr1
  3946  15ED  00A5               	movwf	??_getTemp_AD+1
  3947  15EE  0879               	movf	_Temp,w
  3948  15EF  3E06               	addlw	6
  3949  15F0  0086               	movwf	6
  3950  15F1  3001               	movlw	1	; select bank2/3
  3951  15F2  0087               	movwf	7
  3952  15F3  3F40               	moviw [0]fsr1
  3953  15F4  00A6               	movwf	??_getTemp_AD+2
  3954  15F5  3F41               	moviw [1]fsr1
  3955  15F6  00A7               	movwf	??_getTemp_AD+3
  3956  15F7  0825               	movf	??_getTemp_AD+1,w
  3957  15F8  0227               	subwf	??_getTemp_AD+3,w
  3958  15F9  1D03               	skipz
  3959  15FA  2DFD               	goto	u10095
  3960  15FB  0824               	movf	??_getTemp_AD,w
  3961  15FC  0226               	subwf	??_getTemp_AD+2,w
  3962  15FD                     u10095:	
  3963  15FD  1803               	skipnc
  3964  15FE  2E0E               	goto	l9765
  3965                           
  3966                           ;OverTemperature_B1.c: 41: {
  3967                           ;OverTemperature_B1.c: 42: Temp->ADH[0]=Temp->ADRES;
  3968  15FF  0879               	movf	_Temp,w
  3969  1600  3E0A               	addlw	10
  3970  1601  0086               	movwf	6
  3971  1602  3001               	movlw	1	; select bank2/3
  3972  1603  0087               	movwf	7
  3973  1604  0879               	movf	_Temp,w
  3974  1605  3E06               	addlw	6
  3975  1606  0084               	movwf	4
  3976  1607  3001               	movlw	1	; select bank2/3
  3977  1608  0085               	movwf	5
  3978  1609  3F40               	moviw [0]fsr1
  3979  160A  3F80               	movwi [0]fsr0
  3980  160B  3F41               	moviw [1]fsr1
  3981  160C  3F81               	movwi [1]fsr0
  3982                           
  3983                           ;OverTemperature_B1.c: 43: }
  3984  160D  0008               	return
  3985  160E                     l9765:	
  3986                           
  3987                           ;OverTemperature_B1.c: 44: else if(Temp->ADH[1] < Temp->ADRES)
  3988  160E  0879               	movf	_Temp,w
  3989  160F  3E0A               	addlw	10
  3990  1610  0086               	movwf	6
  3991  1611  3001               	movlw	1	; select bank2/3
  3992  1612  0087               	movwf	7
  3993  1613  3F40               	moviw [0]fsr1
  3994  1614  00A4               	movwf	??_getTemp_AD
  3995  1615  3F41               	moviw [1]fsr1
  3996  1616  00A5               	movwf	??_getTemp_AD+1
  3997  1617  0879               	movf	_Temp,w
  3998  1618  3E08               	addlw	8
  3999  1619  0086               	movwf	6
  4000  161A  3001               	movlw	1	; select bank2/3
  4001  161B  0087               	movwf	7
  4002  161C  3F40               	moviw [0]fsr1
  4003  161D  00A6               	movwf	??_getTemp_AD+2
  4004  161E  3F41               	moviw [1]fsr1
  4005  161F  00A7               	movwf	??_getTemp_AD+3
  4006  1620  0825               	movf	??_getTemp_AD+1,w
  4007  1621  0227               	subwf	??_getTemp_AD+3,w
  4008  1622  1D03               	skipz
  4009  1623  2E26               	goto	u10105
  4010  1624  0824               	movf	??_getTemp_AD,w
  4011  1625  0226               	subwf	??_getTemp_AD+2,w
  4012  1626                     u10105:	
  4013  1626  1803               	skipnc
  4014  1627  0008               	return
  4015                           
  4016                           ;OverTemperature_B1.c: 45: {
  4017                           ;OverTemperature_B1.c: 46: Temp->ADH[1]=Temp->ADRES;
  4018  1628  0879               	movf	_Temp,w
  4019  1629  3E0A               	addlw	10
  4020  162A  0086               	movwf	6
  4021  162B  3001               	movlw	1	; select bank2/3
  4022  162C  0087               	movwf	7
  4023  162D  0879               	movf	_Temp,w
  4024  162E  3E08               	addlw	8
  4025  162F  0084               	movwf	4
  4026  1630  3001               	movlw	1	; select bank2/3
  4027  1631  0085               	movwf	5
  4028  1632  3F40               	moviw [0]fsr1
  4029  1633  3F80               	movwi [0]fsr0
  4030  1634  3F41               	moviw [1]fsr1
  4031  1635  3F81               	movwi [1]fsr0
  4032  1636  0008               	return
  4033  1637                     __end_of_getTemp_AD:	
  4034                           
  4035                           	psect	text2
  4036  1042                     __ptext2:	
  4037 ;; *************** function _getPowerFault_AD *****************
  4038 ;; Defined at:
  4039 ;;		line 49 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\PowerFault_B1.c"
  4040 ;; Parameters:    Size  Location     Type
  4041 ;;  channel         1    wreg     unsigned char 
  4042 ;; Auto vars:     Size  Location     Type
  4043 ;;  channel         1    8[BANK0 ] unsigned char 
  4044 ;; Return value:  Size  Location     Type
  4045 ;;		None               void
  4046 ;; Registers used:
  4047 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4048 ;; Tracked objects:
  4049 ;;		On entry : 0/0
  4050 ;;		On exit  : 0/0
  4051 ;;		Unchanged: 0/0
  4052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4054 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4055 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4056 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4057 ;;Total ram usage:        5 bytes
  4058 ;; Hardware stack levels used:    1
  4059 ;; Hardware stack levels required when called:    5
  4060 ;; This function calls:
  4061 ;;		_getAD
  4062 ;; This function is called by:
  4063 ;;		_main
  4064 ;; This function uses a non-reentrant model
  4065 ;;
  4066                           
  4067                           
  4068                           ;psect for function _getPowerFault_AD
  4069  1042                     _getPowerFault_AD:	
  4070                           
  4071                           ;incstack = 0
  4072                           ; Regs used in _getPowerFault_AD: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4073                           ;getPowerFault_AD@channel stored from wreg
  4074  1042  0020               	movlb	0	; select bank0
  4075  1043  00A8               	movwf	getPowerFault_AD@channel
  4076                           
  4077                           ;PowerFault_B1.c: 51: if(PF->ADtoGO)
  4078  1044  0876               	movf	_PF,w
  4079  1045  0086               	movwf	6
  4080  1046  3001               	movlw	1	; select bank2/3
  4081  1047  0087               	movwf	7
  4082  1048  1D81               	btfss	1,3
  4083  1049  0008               	return
  4084                           
  4085                           ;PowerFault_B1.c: 52: {
  4086                           ;PowerFault_B1.c: 53: PF->ADRES=getAD(channel,0xf0);
  4087  104A  30F0               	movlw	240
  4088  104B  00A4               	movwf	??_getPowerFault_AD
  4089  104C  0824               	movf	??_getPowerFault_AD,w
  4090  104D  00A0               	movwf	getAD@adcon1
  4091  104E  0828               	movf	getPowerFault_AD@channel,w
  4092  104F  319B  2372  3190   	fcall	_getAD
  4093  1052  0876               	movf	_PF,w
  4094  1053  3E03               	addlw	3
  4095  1054  0086               	movwf	6
  4096  1055  3001               	movlw	1	; select bank2/3
  4097  1056  0087               	movwf	7
  4098  1057  0020               	movlb	0	; select bank0
  4099  1058  0820               	movf	?_getAD,w
  4100  1059  3FC0               	movwi [0]fsr1
  4101  105A  0821               	movf	?_getAD+1,w
  4102  105B  3FC1               	movwi [1]fsr1
  4103                           
  4104                           ;PowerFault_B1.c: 54: if(PF->AD < PF->ADRES)
  4105  105C  0876               	movf	_PF,w
  4106  105D  3E03               	addlw	3
  4107  105E  0086               	movwf	6
  4108  105F  3001               	movlw	1	; select bank2/3
  4109  1060  0087               	movwf	7
  4110  1061  3F40               	moviw [0]fsr1
  4111  1062  00A4               	movwf	??_getPowerFault_AD
  4112  1063  3F41               	moviw [1]fsr1
  4113  1064  00A5               	movwf	??_getPowerFault_AD+1
  4114  1065  0A76               	incf	_PF,w
  4115  1066  0086               	movwf	6
  4116  1067  3001               	movlw	1	; select bank2/3
  4117  1068  0087               	movwf	7
  4118  1069  3F40               	moviw [0]fsr1
  4119  106A  00A6               	movwf	??_getPowerFault_AD+2
  4120  106B  3F41               	moviw [1]fsr1
  4121  106C  00A7               	movwf	??_getPowerFault_AD+3
  4122  106D  0825               	movf	??_getPowerFault_AD+1,w
  4123  106E  0227               	subwf	??_getPowerFault_AD+3,w
  4124  106F  1D03               	skipz
  4125  1070  2873               	goto	u10125
  4126  1071  0824               	movf	??_getPowerFault_AD,w
  4127  1072  0226               	subwf	??_getPowerFault_AD+2,w
  4128  1073                     u10125:	
  4129  1073  1803               	skipnc
  4130  1074  0008               	return
  4131                           
  4132                           ;PowerFault_B1.c: 55: {
  4133                           ;PowerFault_B1.c: 56: PF->AD=PF->ADRES;
  4134  1075  0876               	movf	_PF,w
  4135  1076  3E03               	addlw	3
  4136  1077  0086               	movwf	6
  4137  1078  3001               	movlw	1	; select bank2/3
  4138  1079  0087               	movwf	7
  4139  107A  0A76               	incf	_PF,w
  4140  107B  0084               	movwf	4
  4141  107C  3001               	movlw	1	; select bank2/3
  4142  107D  0085               	movwf	5
  4143  107E  3F40               	moviw [0]fsr1
  4144  107F  3F80               	movwi [0]fsr0
  4145  1080  3F41               	moviw [1]fsr1
  4146  1081  3F81               	movwi [1]fsr0
  4147  1082  0008               	return
  4148  1083                     __end_of_getPowerFault_AD:	
  4149                           
  4150                           	psect	text3
  4151  1B72                     __ptext3:	
  4152 ;; *************** function _getAD *****************
  4153 ;; Defined at:
  4154 ;;		line 385 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
  4155 ;; Parameters:    Size  Location     Type
  4156 ;;  adcon0          1    wreg     unsigned char 
  4157 ;;  adcon1          1    0[BANK0 ] unsigned char 
  4158 ;; Auto vars:     Size  Location     Type
  4159 ;;  adcon0          1    3[BANK0 ] unsigned char 
  4160 ;; Return value:  Size  Location     Type
  4161 ;;                  2    0[BANK0 ] int 
  4162 ;; Registers used:
  4163 ;;		wreg, status,2, status,0
  4164 ;; Tracked objects:
  4165 ;;		On entry : 0/0
  4166 ;;		On exit  : 0/0
  4167 ;;		Unchanged: 0/0
  4168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4169 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4170 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4172 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4173 ;;Total ram usage:        4 bytes
  4174 ;; Hardware stack levels used:    1
  4175 ;; Hardware stack levels required when called:    4
  4176 ;; This function calls:
  4177 ;;		Nothing
  4178 ;; This function is called by:
  4179 ;;		_getTemp_AD
  4180 ;;		_getPowerFault_AD
  4181 ;; This function uses a non-reentrant model
  4182 ;;
  4183                           
  4184                           
  4185                           ;psect for function _getAD
  4186  1B72                     _getAD:	
  4187                           
  4188                           ;incstack = 0
  4189                           ; Regs used in _getAD: [wreg+status,2+status,0]
  4190                           ;getAD@adcon0 stored from wreg
  4191  1B72  0020               	movlb	0	; select bank0
  4192  1B73  00A3               	movwf	getAD@adcon0
  4193                           
  4194                           ;MCU_B1.c: 387: ADCON0=adcon0;
  4195  1B74  0823               	movf	getAD@adcon0,w
  4196  1B75  0021               	movlb	1	; select bank1
  4197  1B76  009D               	movwf	29	;volatile
  4198                           
  4199                           ;MCU_B1.c: 388: ADCON1=adcon1;
  4200  1B77  0020               	movlb	0	; select bank0
  4201  1B78  0820               	movf	getAD@adcon1,w
  4202  1B79  0021               	movlb	1	; select bank1
  4203  1B7A  009E               	movwf	30	;volatile
  4204                           
  4205                           ;MCU_B1.c: 389: GO_nDONE=1;
  4206  1B7B  149D               	bsf	29,1	;volatile
  4207  1B7C                     l1708:	
  4208                           ;MCU_B1.c: 390: while(GO_nDONE);
  4209                           
  4210  1B7C  189D               	btfsc	29,1	;volatile
  4211  1B7D  2B7C               	goto	l1708
  4212                           
  4213                           ;MCU_B1.c: 391: return ((ADRESH*256)+ADRESL);
  4214  1B7E  081C               	movf	28,w	;volatile
  4215  1B7F  0020               	movlb	0	; select bank0
  4216  1B80  01A1               	clrf	?_getAD+1
  4217  1B81  07A1               	addwf	?_getAD+1,f
  4218  1B82  0021               	movlb	1	; select bank1
  4219  1B83  081B               	movf	27,w	;volatile
  4220  1B84  0020               	movlb	0	; select bank0
  4221  1B85  01A0               	clrf	?_getAD
  4222  1B86  07A0               	addwf	?_getAD,f
  4223  1B87  0008               	return
  4224  1B88                     __end_of_getAD:	
  4225                           
  4226                           	psect	text4
  4227  1C6C                     __ptext4:	
  4228 ;; *************** function _WDT_Main *****************
  4229 ;; Defined at:
  4230 ;;		line 986 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
  4231 ;; Parameters:    Size  Location     Type
  4232 ;;		None
  4233 ;; Auto vars:     Size  Location     Type
  4234 ;;		None
  4235 ;; Return value:  Size  Location     Type
  4236 ;;		None               void
  4237 ;; Registers used:
  4238 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4239 ;; Tracked objects:
  4240 ;;		On entry : 0/0
  4241 ;;		On exit  : 0/0
  4242 ;;		Unchanged: 0/0
  4243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4244 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4245 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4246 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4247 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4248 ;;Total ram usage:        1 bytes
  4249 ;; Hardware stack levels used:    1
  4250 ;; Hardware stack levels required when called:    5
  4251 ;; This function calls:
  4252 ;;		_WDT_Clearing
  4253 ;; This function is called by:
  4254 ;;		_main
  4255 ;; This function uses a non-reentrant model
  4256 ;;
  4257                           
  4258                           
  4259                           ;psect for function _WDT_Main
  4260  1C6C                     _WDT_Main:	
  4261                           
  4262                           ;MCU_B1.c: 987: if(WDT->Enable){
  4263                           
  4264                           ;incstack = 0
  4265                           ; Regs used in _WDT_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4266  1C6C  0021               	movlb	1	; select bank1
  4267  1C6D  086D               	movf	_WDT^(0+128),w
  4268  1C6E  0086               	movwf	6
  4269  1C6F  0187               	clrf	7
  4270  1C70  1C01               	btfss	1,0
  4271  1C71  0008               	return
  4272                           
  4273                           ;MCU_B1.c: 988: if(WDT->Count-- > 0){
  4274  1C72  0A6D               	incf	_WDT^(0+128),w
  4275  1C73  0086               	movwf	6
  4276  1C74  0187               	clrf	7
  4277  1C75  3001               	movlw	1
  4278  1C76  0281               	subwf	1,f
  4279  1C77  0801               	movf	1,w
  4280  1C78  3AFF               	xorlw	255
  4281  1C79  1903               	skipnz
  4282  1C7A  0008               	return
  4283                           
  4284                           ;MCU_B1.c: 989: WDT->Count=10;
  4285  1C7B  300A               	movlw	10
  4286  1C7C  0020               	movlb	0	; select bank0
  4287  1C7D  00A0               	movwf	??_WDT_Main
  4288  1C7E  0021               	movlb	1	; select bank1
  4289  1C7F  0A6D               	incf	_WDT^(0+128),w
  4290  1C80  0086               	movwf	6
  4291  1C81  0187               	clrf	7
  4292  1C82  0020               	movlb	0	; select bank0
  4293  1C83  0820               	movf	??_WDT_Main,w
  4294  1C84  0081               	movwf	1
  4295                           
  4296                           ;MCU_B1.c: 990: WDT_Clearing();
  4297  1C85  3180  2002         	fcall	_WDT_Clearing
  4298  1C87  0008               	return
  4299  1C88                     __end_of_WDT_Main:	
  4300                           
  4301                           	psect	text5
  4302  0002                     __ptext5:	
  4303 ;; *************** function _WDT_Clearing *****************
  4304 ;; Defined at:
  4305 ;;		line 995 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
  4306 ;; Parameters:    Size  Location     Type
  4307 ;;		None
  4308 ;; Auto vars:     Size  Location     Type
  4309 ;;		None
  4310 ;; Return value:  Size  Location     Type
  4311 ;;		None               void
  4312 ;; Registers used:
  4313 ;;		None
  4314 ;; Tracked objects:
  4315 ;;		On entry : 0/0
  4316 ;;		On exit  : 0/0
  4317 ;;		Unchanged: 0/0
  4318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4322 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4323 ;;Total ram usage:        0 bytes
  4324 ;; Hardware stack levels used:    1
  4325 ;; Hardware stack levels required when called:    4
  4326 ;; This function calls:
  4327 ;;		Nothing
  4328 ;; This function is called by:
  4329 ;;		_WDT_Main
  4330 ;; This function uses a non-reentrant model
  4331 ;;
  4332                           
  4333                           
  4334                           ;psect for function _WDT_Clearing
  4335  0002                     _WDT_Clearing:	
  4336                           
  4337                           ;incstack = 0
  4338                           ; Regs used in _WDT_Clearing: []
  4339  0002  0064               	clrwdt	;# 
  4340  0003  0008               	return
  4341  0004                     __end_of_WDT_Clearing:	
  4342                           
  4343                           	psect	text6
  4344  18E4                     __ptext6:	
  4345 ;; *************** function _Temp_Main *****************
  4346 ;; Defined at:
  4347 ;;		line 57 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\OverTemperature_B1.c"
  4348 ;; Parameters:    Size  Location     Type
  4349 ;;		None
  4350 ;; Auto vars:     Size  Location     Type
  4351 ;;		None
  4352 ;; Return value:  Size  Location     Type
  4353 ;;		None               void
  4354 ;; Registers used:
  4355 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4356 ;; Tracked objects:
  4357 ;;		On entry : 0/0
  4358 ;;		On exit  : 0/0
  4359 ;;		Unchanged: 0/0
  4360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4362 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4364 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4365 ;;Total ram usage:        0 bytes
  4366 ;; Hardware stack levels used:    1
  4367 ;; Hardware stack levels required when called:   10
  4368 ;; This function calls:
  4369 ;;		_setTemp_Main
  4370 ;; This function is called by:
  4371 ;;		_main
  4372 ;; This function uses a non-reentrant model
  4373 ;;
  4374                           
  4375                           
  4376                           ;psect for function _Temp_Main
  4377  18E4                     _Temp_Main:	
  4378                           
  4379                           ;OverTemperature_B1.c: 60: setTemp_Main();
  4380                           
  4381                           ;incstack = 0
  4382                           ; Regs used in _Temp_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4383  18E4  3184  24F7         	fcall	_setTemp_Main
  4384  18E6  0008               	return
  4385  18E7                     __end_of_Temp_Main:	
  4386                           
  4387                           	psect	text7
  4388  04F7                     __ptext7:	
  4389 ;; *************** function _setTemp_Main *****************
  4390 ;; Defined at:
  4391 ;;		line 64 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\OverTemperature_B1.c"
  4392 ;; Parameters:    Size  Location     Type
  4393 ;;		None
  4394 ;; Auto vars:     Size  Location     Type
  4395 ;;		None
  4396 ;; Return value:  Size  Location     Type
  4397 ;;		None               void
  4398 ;; Registers used:
  4399 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4400 ;; Tracked objects:
  4401 ;;		On entry : 0/0
  4402 ;;		On exit  : 0/0
  4403 ;;		Unchanged: 0/0
  4404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4406 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4407 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4408 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4409 ;;Total ram usage:        3 bytes
  4410 ;; Hardware stack levels used:    1
  4411 ;; Hardware stack levels required when called:    9
  4412 ;; This function calls:
  4413 ;;		_getPF_Safe
  4414 ;;		_setOverTemp_Exceptions
  4415 ;; This function is called by:
  4416 ;;		_Temp_Main
  4417 ;; This function uses a non-reentrant model
  4418 ;;
  4419                           
  4420                           
  4421                           ;psect for function _setTemp_Main
  4422  04F7                     _setTemp_Main:	
  4423                           
  4424                           ;OverTemperature_B1.c: 66: if(Temp->Enable)
  4425                           
  4426                           ;incstack = 0
  4427                           ; Regs used in _setTemp_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4428  04F7  0879               	movf	_Temp,w
  4429  04F8  0086               	movwf	6
  4430  04F9  3001               	movlw	1	; select bank2/3
  4431  04FA  0087               	movwf	7
  4432  04FB  1C01               	btfss	1,0
  4433  04FC  0008               	return
  4434                           
  4435                           ;OverTemperature_B1.c: 67: {
  4436                           ;OverTemperature_B1.c: 68: if(Temp->ADtoGO == 0)
  4437  04FD  0879               	movf	_Temp,w
  4438  04FE  0086               	movwf	6
  4439  04FF  3001               	movlw	1	; select bank2/3
  4440  0500  0087               	movwf	7
  4441  0501  1901               	btfsc	1,2
  4442  0502  2D3D               	goto	l9345
  4443                           
  4444                           ;OverTemperature_B1.c: 69: {
  4445                           ;OverTemperature_B1.c: 70: Temp->Time++;
  4446  0503  0A79               	incf	_Temp,w
  4447  0504  0086               	movwf	6
  4448  0505  3001               	movlw	1	; select bank2/3
  4449  0506  0087               	movwf	7
  4450  0507  3001               	movlw	1
  4451  0508  0781               	addwf	1,f
  4452  0509  3141               	addfsr 1,1
  4453  050A  1803               	skipnc
  4454  050B  0A81               	incf	1,f
  4455                           
  4456                           ;OverTemperature_B1.c: 72: {
  4457                           ;OverTemperature_B1.c: 73: if(1 && getPF_Safe())
  4458  050C  0A79               	incf	_Temp,w
  4459  050D  0086               	movwf	6
  4460  050E  3001               	movlw	1	; select bank2/3
  4461  050F  0087               	movwf	7
  4462  0510  3F40               	moviw [0]fsr1
  4463  0511  0020               	movlb	0	; select bank0
  4464  0512  00AD               	movwf	??_setTemp_Main
  4465  0513  3F41               	moviw [1]fsr1
  4466  0514  00AE               	movwf	??_setTemp_Main+1
  4467  0515  3001               	movlw	1
  4468  0516  022E               	subwf	??_setTemp_Main+1,w
  4469  0517  30F4               	movlw	244
  4470  0518  1903               	skipnz
  4471  0519  022D               	subwf	??_setTemp_Main,w
  4472  051A  1C03               	skipc
  4473  051B  0008               	return
  4474  051C  3199  214E  3184   	fcall	_getPF_Safe
  4475  051F  3A00               	xorlw	0
  4476  0520  1903               	skipnz
  4477  0521  2D34               	goto	l9343
  4478                           
  4479                           ;OverTemperature_B1.c: 74: {
  4480                           ;OverTemperature_B1.c: 75: Temp->Time=0;
  4481  0522  0A79               	incf	_Temp,w
  4482  0523  0086               	movwf	6
  4483  0524  3001               	movlw	1	; select bank2/3
  4484  0525  0087               	movwf	7
  4485  0526  3000               	movlw	0
  4486  0527  3FC0               	movwi [0]fsr1
  4487  0528  3FC1               	movwi [1]fsr1
  4488                           
  4489                           ;OverTemperature_B1.c: 76: Temp->ADtoGO=1;
  4490  0529  0879               	movf	_Temp,w
  4491  052A  0086               	movwf	6
  4492  052B  3001               	movlw	1	; select bank2/3
  4493  052C  0087               	movwf	7
  4494  052D  1501               	bsf	1,2
  4495                           
  4496                           ;OverTemperature_B1.c: 77: Temp->Safe=0;
  4497  052E  0879               	movf	_Temp,w
  4498  052F  0086               	movwf	6
  4499  0530  3001               	movlw	1	; select bank2/3
  4500  0531  0087               	movwf	7
  4501  0532  1201               	bcf	1,4
  4502                           
  4503                           ;OverTemperature_B1.c: 78: }
  4504  0533  0008               	return
  4505  0534                     l9343:	
  4506                           
  4507                           ;OverTemperature_B1.c: 79: else
  4508                           ;OverTemperature_B1.c: 80: {
  4509                           ;OverTemperature_B1.c: 81: Temp->Time=1000;
  4510  0534  0A79               	incf	_Temp,w
  4511  0535  0086               	movwf	6
  4512  0536  3001               	movlw	1	; select bank2/3
  4513  0537  0087               	movwf	7
  4514  0538  30E8               	movlw	232
  4515  0539  3FC0               	movwi [0]fsr1
  4516  053A  3003               	movlw	3
  4517  053B  3FC1               	movwi [1]fsr1
  4518                           
  4519                           ;OverTemperature_B1.c: 82: }
  4520                           ;OverTemperature_B1.c: 83: }
  4521                           ;OverTemperature_B1.c: 84: }
  4522  053C  0008               	return
  4523  053D                     l9345:	
  4524                           
  4525                           ;OverTemperature_B1.c: 85: else
  4526                           ;OverTemperature_B1.c: 86: {
  4527                           ;OverTemperature_B1.c: 87: Temp->Time++;
  4528  053D  0A79               	incf	_Temp,w
  4529  053E  0086               	movwf	6
  4530  053F  3001               	movlw	1	; select bank2/3
  4531  0540  0087               	movwf	7
  4532  0541  3001               	movlw	1
  4533  0542  0781               	addwf	1,f
  4534  0543  3141               	addfsr 1,1
  4535  0544  1803               	skipnc
  4536  0545  0A81               	incf	1,f
  4537                           
  4538                           ;OverTemperature_B1.c: 88: if(Temp->Time >= 4)
  4539  0546  0A79               	incf	_Temp,w
  4540  0547  0086               	movwf	6
  4541  0548  3001               	movlw	1	; select bank2/3
  4542  0549  0087               	movwf	7
  4543  054A  3F40               	moviw [0]fsr1
  4544  054B  0020               	movlb	0	; select bank0
  4545  054C  00AD               	movwf	??_setTemp_Main
  4546  054D  3F41               	moviw [1]fsr1
  4547  054E  00AE               	movwf	??_setTemp_Main+1
  4548  054F  3000               	movlw	0
  4549  0550  022E               	subwf	??_setTemp_Main+1,w
  4550  0551  3004               	movlw	4
  4551  0552  1903               	skipnz
  4552  0553  022D               	subwf	??_setTemp_Main,w
  4553  0554  1C03               	skipc
  4554  0555  0008               	return
  4555                           
  4556                           ;OverTemperature_B1.c: 89: {
  4557                           ;OverTemperature_B1.c: 90: Temp->Time=0;
  4558  0556  0A79               	incf	_Temp,w
  4559  0557  0086               	movwf	6
  4560  0558  3001               	movlw	1	; select bank2/3
  4561  0559  0087               	movwf	7
  4562  055A  3000               	movlw	0
  4563  055B  3FC0               	movwi [0]fsr1
  4564  055C  3FC1               	movwi [1]fsr1
  4565                           
  4566                           ;OverTemperature_B1.c: 91: Temp->ADtoGO=0;
  4567  055D  0879               	movf	_Temp,w
  4568  055E  0086               	movwf	6
  4569  055F  3001               	movlw	1	; select bank2/3
  4570  0560  0087               	movwf	7
  4571  0561  1101               	bcf	1,2
  4572                           
  4573                           ;OverTemperature_B1.c: 92: Temp->AD=Temp->ADH[1];
  4574  0562  0879               	movf	_Temp,w
  4575  0563  3E08               	addlw	8
  4576  0564  0086               	movwf	6
  4577  0565  3001               	movlw	1	; select bank2/3
  4578  0566  0087               	movwf	7
  4579  0567  0879               	movf	_Temp,w
  4580  0568  3E04               	addlw	4
  4581  0569  0084               	movwf	4
  4582  056A  3001               	movlw	1	; select bank2/3
  4583  056B  0085               	movwf	5
  4584  056C  3F40               	moviw [0]fsr1
  4585  056D  3F80               	movwi [0]fsr0
  4586  056E  3F41               	moviw [1]fsr1
  4587  056F  3F81               	movwi [1]fsr0
  4588                           
  4589                           ;OverTemperature_B1.c: 93: if(Temp->ERROR)
  4590  0570  0879               	movf	_Temp,w
  4591  0571  0086               	movwf	6
  4592  0572  3001               	movlw	1	; select bank2/3
  4593  0573  0087               	movwf	7
  4594  0574  1C81               	btfss	1,1
  4595  0575  2DA3               	goto	l9367
  4596                           
  4597                           ;OverTemperature_B1.c: 94: {
  4598                           ;OverTemperature_B1.c: 95: if(Temp->AD >= 600)
  4599  0576  0879               	movf	_Temp,w
  4600  0577  3E04               	addlw	4
  4601  0578  0086               	movwf	6
  4602  0579  3001               	movlw	1	; select bank2/3
  4603  057A  0087               	movwf	7
  4604  057B  3F40               	moviw [0]fsr1
  4605  057C  00AD               	movwf	??_setTemp_Main
  4606  057D  3F41               	moviw [1]fsr1
  4607  057E  00AE               	movwf	??_setTemp_Main+1
  4608  057F  3002               	movlw	2
  4609  0580  022E               	subwf	??_setTemp_Main+1,w
  4610  0581  3058               	movlw	88
  4611  0582  1903               	skipnz
  4612  0583  022D               	subwf	??_setTemp_Main,w
  4613  0584  1C03               	skipc
  4614  0585  2DD1               	goto	l9377
  4615                           
  4616                           ;OverTemperature_B1.c: 96: {
  4617                           ;OverTemperature_B1.c: 97: Temp->Count++;
  4618  0586  3001               	movlw	1
  4619  0587  00AD               	movwf	??_setTemp_Main
  4620  0588  0879               	movf	_Temp,w
  4621  0589  3E03               	addlw	3
  4622  058A  0086               	movwf	6
  4623  058B  3001               	movlw	1	; select bank2/3
  4624  058C  0087               	movwf	7
  4625  058D  082D               	movf	??_setTemp_Main,w
  4626  058E  0781               	addwf	1,f
  4627                           
  4628                           ;OverTemperature_B1.c: 98: if(Temp->Count >= 3)
  4629  058F  0879               	movf	_Temp,w
  4630  0590  3E03               	addlw	3
  4631  0591  0086               	movwf	6
  4632  0592  3001               	movlw	1	; select bank2/3
  4633  0593  0087               	movwf	7
  4634  0594  3003               	movlw	3
  4635  0595  0201               	subwf	1,w
  4636  0596  1C03               	skipc
  4637  0597  2DD7               	goto	l9379
  4638                           
  4639                           ;OverTemperature_B1.c: 99: {
  4640                           ;OverTemperature_B1.c: 100: Temp->Count=0;
  4641  0598  0879               	movf	_Temp,w
  4642  0599  3E03               	addlw	3
  4643  059A  0086               	movwf	6
  4644  059B  3001               	movlw	1	; select bank2/3
  4645  059C  0087               	movwf	7
  4646  059D  0181               	clrf	1
  4647                           
  4648                           ;OverTemperature_B1.c: 101: setOverTemp_Exceptions(0);
  4649  059E  3000               	movlw	0
  4650  059F  3190  20C5  3184   	fcall	_setOverTemp_Exceptions
  4651                           
  4652                           ;OverTemperature_B1.c: 102: }
  4653                           ;OverTemperature_B1.c: 103: }
  4654  05A2  2DD7               	goto	l9379
  4655  05A3                     l9367:	
  4656                           ;OverTemperature_B1.c: 107: }
  4657                           ;OverTemperature_B1.c: 108: }
  4658                           
  4659                           ;OverTemperature_B1.c: 104: else
  4660                           ;OverTemperature_B1.c: 105: {
  4661                           ;OverTemperature_B1.c: 106: Temp->Count=0;
  4662                           
  4663                           
  4664                           ;OverTemperature_B1.c: 109: else
  4665                           ;OverTemperature_B1.c: 110: {
  4666                           ;OverTemperature_B1.c: 111: if(Temp->AD <= 550)
  4667  05A3  0879               	movf	_Temp,w
  4668  05A4  3E04               	addlw	4
  4669  05A5  0086               	movwf	6
  4670  05A6  3001               	movlw	1	; select bank2/3
  4671  05A7  0087               	movwf	7
  4672  05A8  3F40               	moviw [0]fsr1
  4673  05A9  0020               	movlb	0	; select bank0
  4674  05AA  00AD               	movwf	??_setTemp_Main
  4675  05AB  3F41               	moviw [1]fsr1
  4676  05AC  00AE               	movwf	??_setTemp_Main+1
  4677  05AD  3002               	movlw	2
  4678  05AE  022E               	subwf	??_setTemp_Main+1,w
  4679  05AF  3027               	movlw	39
  4680  05B0  1903               	skipnz
  4681  05B1  022D               	subwf	??_setTemp_Main,w
  4682  05B2  1803               	skipnc
  4683  05B3  2DD1               	goto	l9377
  4684                           
  4685                           ;OverTemperature_B1.c: 112: {
  4686                           ;OverTemperature_B1.c: 113: Temp->Count++;
  4687  05B4  3001               	movlw	1
  4688  05B5  00AD               	movwf	??_setTemp_Main
  4689  05B6  0879               	movf	_Temp,w
  4690  05B7  3E03               	addlw	3
  4691  05B8  0086               	movwf	6
  4692  05B9  3001               	movlw	1	; select bank2/3
  4693  05BA  0087               	movwf	7
  4694  05BB  082D               	movf	??_setTemp_Main,w
  4695  05BC  0781               	addwf	1,f
  4696                           
  4697                           ;OverTemperature_B1.c: 114: if(Temp->Count >= 3)
  4698  05BD  0879               	movf	_Temp,w
  4699  05BE  3E03               	addlw	3
  4700  05BF  0086               	movwf	6
  4701  05C0  3001               	movlw	1	; select bank2/3
  4702  05C1  0087               	movwf	7
  4703  05C2  3003               	movlw	3
  4704  05C3  0201               	subwf	1,w
  4705  05C4  1C03               	skipc
  4706  05C5  2DD7               	goto	l9379
  4707                           
  4708                           ;OverTemperature_B1.c: 115: {
  4709                           ;OverTemperature_B1.c: 116: Temp->Count=0;
  4710  05C6  0879               	movf	_Temp,w
  4711  05C7  3E03               	addlw	3
  4712  05C8  0086               	movwf	6
  4713  05C9  3001               	movlw	1	; select bank2/3
  4714  05CA  0087               	movwf	7
  4715  05CB  0181               	clrf	1
  4716                           
  4717                           ;OverTemperature_B1.c: 117: setOverTemp_Exceptions(1);
  4718  05CC  3001               	movlw	1
  4719  05CD  3190  20C5  3184   	fcall	_setOverTemp_Exceptions
  4720                           
  4721                           ;OverTemperature_B1.c: 118: }
  4722                           ;OverTemperature_B1.c: 119: }
  4723  05D0  2DD7               	goto	l9379
  4724  05D1                     l9377:	
  4725                           
  4726                           ;OverTemperature_B1.c: 120: else
  4727                           ;OverTemperature_B1.c: 121: {
  4728                           ;OverTemperature_B1.c: 122: Temp->Count=0;
  4729  05D1  0879               	movf	_Temp,w
  4730  05D2  3E03               	addlw	3
  4731  05D3  0086               	movwf	6
  4732  05D4  3001               	movlw	1	; select bank2/3
  4733  05D5  0087               	movwf	7
  4734  05D6  0181               	clrf	1
  4735  05D7                     l9379:	
  4736                           
  4737                           ;OverTemperature_B1.c: 123: }
  4738                           ;OverTemperature_B1.c: 124: }
  4739                           ;OverTemperature_B1.c: 125: if(Temp->ERROR == 0)
  4740  05D7  0879               	movf	_Temp,w
  4741  05D8  0086               	movwf	6
  4742  05D9  3001               	movlw	1	; select bank2/3
  4743  05DA  0087               	movwf	7
  4744  05DB  1881               	btfsc	1,1
  4745  05DC  2DE2               	goto	l9383
  4746                           
  4747                           ;OverTemperature_B1.c: 126: {
  4748                           ;OverTemperature_B1.c: 127: Temp->Safe=1;
  4749  05DD  0879               	movf	_Temp,w
  4750  05DE  0086               	movwf	6
  4751  05DF  3001               	movlw	1	; select bank2/3
  4752  05E0  0087               	movwf	7
  4753  05E1  1601               	bsf	1,4
  4754  05E2                     l9383:	
  4755                           
  4756                           ;OverTemperature_B1.c: 128: }
  4757                           ;OverTemperature_B1.c: 129: Product->Data[24]=Temp->AD >> 8;
  4758  05E2  0879               	movf	_Temp,w
  4759  05E3  3E04               	addlw	4
  4760  05E4  0086               	movwf	6
  4761  05E5  3001               	movlw	1	; select bank2/3
  4762  05E6  0087               	movwf	7
  4763  05E7  3F40               	moviw [0]fsr1
  4764  05E8  0020               	movlb	0	; select bank0
  4765  05E9  00AD               	movwf	??_setTemp_Main
  4766  05EA  3F41               	moviw [1]fsr1
  4767  05EB  00AE               	movwf	??_setTemp_Main+1
  4768  05EC  082E               	movf	??_setTemp_Main+1,w
  4769  05ED  00AF               	movwf	??_setTemp_Main+2
  4770  05EE  086E               	movf	_Product,w
  4771  05EF  3E18               	addlw	24
  4772  05F0  0086               	movwf	6
  4773  05F1  3001               	movlw	1	; select bank2/3
  4774  05F2  0087               	movwf	7
  4775  05F3  082F               	movf	??_setTemp_Main+2,w
  4776  05F4  0081               	movwf	1
  4777                           
  4778                           ;OverTemperature_B1.c: 130: Product->Data[25]=Temp->AD;
  4779  05F5  0879               	movf	_Temp,w
  4780  05F6  3E04               	addlw	4
  4781  05F7  0086               	movwf	6
  4782  05F8  3001               	movlw	1	; select bank2/3
  4783  05F9  0087               	movwf	7
  4784  05FA  0801               	movf	1,w
  4785  05FB  00AD               	movwf	??_setTemp_Main
  4786  05FC  086E               	movf	_Product,w
  4787  05FD  3E19               	addlw	25
  4788  05FE  0086               	movwf	6
  4789  05FF  3001               	movlw	1	; select bank2/3
  4790  0600  0087               	movwf	7
  4791  0601  082D               	movf	??_setTemp_Main,w
  4792  0602  0081               	movwf	1
  4793                           
  4794                           ;OverTemperature_B1.c: 131: Temp->ADH[0]=0;
  4795  0603  0879               	movf	_Temp,w
  4796  0604  3E06               	addlw	6
  4797  0605  0086               	movwf	6
  4798  0606  3001               	movlw	1	; select bank2/3
  4799  0607  0087               	movwf	7
  4800  0608  3000               	movlw	0
  4801  0609  3FC0               	movwi [0]fsr1
  4802  060A  3FC1               	movwi [1]fsr1
  4803                           
  4804                           ;OverTemperature_B1.c: 132: Temp->ADH[1]=0;
  4805  060B  0879               	movf	_Temp,w
  4806  060C  3E08               	addlw	8
  4807  060D  0086               	movwf	6
  4808  060E  3001               	movlw	1	; select bank2/3
  4809  060F  0087               	movwf	7
  4810  0610  3000               	movlw	0
  4811  0611  3FC0               	movwi [0]fsr1
  4812  0612  3FC1               	movwi [1]fsr1
  4813  0613  0008               	return
  4814  0614                     __end_of_setTemp_Main:	
  4815                           
  4816                           	psect	text8
  4817  10C5                     __ptext8:	
  4818 ;; *************** function _setOverTemp_Exceptions *****************
  4819 ;; Defined at:
  4820 ;;		line 138 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\OverTemperature_B1.c"
  4821 ;; Parameters:    Size  Location     Type
  4822 ;;  command         1    wreg     unsigned char 
  4823 ;; Auto vars:     Size  Location     Type
  4824 ;;  command         1   12[BANK0 ] unsigned char 
  4825 ;; Return value:  Size  Location     Type
  4826 ;;		None               void
  4827 ;; Registers used:
  4828 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4829 ;; Tracked objects:
  4830 ;;		On entry : 0/0
  4831 ;;		On exit  : 0/0
  4832 ;;		Unchanged: 0/0
  4833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4835 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4836 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4837 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4838 ;;Total ram usage:        2 bytes
  4839 ;; Hardware stack levels used:    1
  4840 ;; Hardware stack levels required when called:    8
  4841 ;; This function calls:
  4842 ;;		_DimmerLights_Exceptions
  4843 ;;		_setBuz
  4844 ;;		_setLED
  4845 ;;		_setRF_Enable
  4846 ;;		_setSw_Enable
  4847 ;; This function is called by:
  4848 ;;		_setTemp_Main
  4849 ;; This function uses a non-reentrant model
  4850 ;;
  4851                           
  4852                           
  4853                           ;psect for function _setOverTemp_Exceptions
  4854  10C5                     _setOverTemp_Exceptions:	
  4855                           
  4856                           ;incstack = 0
  4857                           ; Regs used in _setOverTemp_Exceptions: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
  4858                           ;setOverTemp_Exceptions@command stored from wreg
  4859  10C5  0020               	movlb	0	; select bank0
  4860  10C6  00AC               	movwf	setOverTemp_Exceptions@command
  4861                           
  4862                           ;OverTemperature_B1.c: 140: Temp->ERROR=command;
  4863  10C7  0879               	movf	_Temp,w
  4864  10C8  0086               	movwf	6
  4865  10C9  3001               	movlw	1	; select bank2/3
  4866  10CA  0087               	movwf	7
  4867  10CB  082C               	movf	setOverTemp_Exceptions@command,w
  4868  10CC  1081               	bcf	1,1
  4869  10CD  1D03               	skipz
  4870  10CE  1481               	bsf	1,1
  4871                           
  4872                           ;OverTemperature_B1.c: 141: Temp->Safe=(~command) & 0x01;
  4873  10CF  092C               	comf	setOverTemp_Exceptions@command,w
  4874  10D0  3901               	andlw	1
  4875  10D1  00AB               	movwf	??_setOverTemp_Exceptions
  4876  10D2  0879               	movf	_Temp,w
  4877  10D3  0086               	movwf	6
  4878  10D4  3001               	movlw	1	; select bank2/3
  4879  10D5  0087               	movwf	7
  4880  10D6  0EAB               	swapf	??_setOverTemp_Exceptions,f
  4881  10D7  0801               	movf	1,w
  4882  10D8  062B               	xorwf	??_setOverTemp_Exceptions,w
  4883  10D9  39EF               	andlw	-17
  4884  10DA  062B               	xorwf	??_setOverTemp_Exceptions,w
  4885  10DB  0081               	movwf	1
  4886                           
  4887                           ;OverTemperature_B1.c: 142: if(command)
  4888  10DC  082C               	movf	setOverTemp_Exceptions@command,w
  4889  10DD  1903               	btfsc	3,2
  4890  10DE  28E4               	goto	l8917
  4891                           
  4892                           ;OverTemperature_B1.c: 143: {
  4893                           ;OverTemperature_B1.c: 144: DimmerLights_Exceptions(1);
  4894  10DF  3001               	movlw	1
  4895  10E0  3194  24FB  3190   	fcall	_DimmerLights_Exceptions
  4896                           
  4897                           ;OverTemperature_B1.c: 148: }
  4898  10E3  28ED               	goto	l2059
  4899  10E4                     l8917:	
  4900                           
  4901                           ;OverTemperature_B1.c: 149: else
  4902                           ;OverTemperature_B1.c: 150: {
  4903                           ;OverTemperature_B1.c: 151: setBuz(2,100);
  4904  10E4  3064               	movlw	100
  4905  10E5  0020               	movlb	0	; select bank0
  4906  10E6  00A6               	movwf	setBuz@time
  4907  10E7  3000               	movlw	0
  4908  10E8  00A7               	movwf	setBuz@time+1
  4909  10E9  3002               	movlw	2
  4910  10EA  3197  2789  3190   	fcall	_setBuz
  4911  10ED                     l2059:	
  4912                           
  4913                           ;OverTemperature_B1.c: 152: }
  4914                           ;OverTemperature_B1.c: 155: setLED(99,command+10);
  4915  10ED  0020               	movlb	0	; select bank0
  4916  10EE  082C               	movf	setOverTemp_Exceptions@command,w
  4917  10EF  3E0A               	addlw	10
  4918  10F0  00AB               	movwf	??_setOverTemp_Exceptions
  4919  10F1  082B               	movf	??_setOverTemp_Exceptions,w
  4920  10F2  00A2               	movwf	setLED@command
  4921  10F3  3063               	movlw	99
  4922  10F4  3193  2373  3190   	fcall	_setLED
  4923                           
  4924                           ;OverTemperature_B1.c: 157: setSw_Enable((~command) & 0x01);
  4925  10F7  0020               	movlb	0	; select bank0
  4926  10F8  092C               	comf	setOverTemp_Exceptions@command,w
  4927  10F9  3901               	andlw	1
  4928  10FA  319C  2450  3190   	fcall	_setSw_Enable
  4929                           
  4930                           ;OverTemperature_B1.c: 159: setRF_Enable(1,(~command) & 0x01);
  4931  10FD  0020               	movlb	0	; select bank0
  4932  10FE  092C               	comf	setOverTemp_Exceptions@command,w
  4933  10FF  3901               	andlw	1
  4934  1100  00AB               	movwf	??_setOverTemp_Exceptions
  4935  1101  082B               	movf	??_setOverTemp_Exceptions,w
  4936  1102  00A2               	movwf	setRF_Enable@command
  4937  1103  3001               	movlw	1
  4938  1104  319E  2605         	fcall	_setRF_Enable
  4939  1106  0008               	return
  4940  1107                     __end_of_setOverTemp_Exceptions:	
  4941                           
  4942                           	psect	text9
  4943  194E                     __ptext9:	
  4944 ;; *************** function _getPF_Safe *****************
  4945 ;; Defined at:
  4946 ;;		line 40 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\PowerFault_B1.c"
  4947 ;; Parameters:    Size  Location     Type
  4948 ;;		None
  4949 ;; Auto vars:     Size  Location     Type
  4950 ;;		None
  4951 ;; Return value:  Size  Location     Type
  4952 ;;                  1    wreg      unsigned char 
  4953 ;; Registers used:
  4954 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4955 ;; Tracked objects:
  4956 ;;		On entry : 0/0
  4957 ;;		On exit  : 0/0
  4958 ;;		Unchanged: 0/0
  4959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4961 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4963 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4964 ;;Total ram usage:        0 bytes
  4965 ;; Hardware stack levels used:    1
  4966 ;; Hardware stack levels required when called:    4
  4967 ;; This function calls:
  4968 ;;		Nothing
  4969 ;; This function is called by:
  4970 ;;		_setTemp_Main
  4971 ;; This function uses a non-reentrant model
  4972 ;;
  4973                           
  4974                           
  4975                           ;psect for function _getPF_Safe
  4976  194E                     _getPF_Safe:	
  4977                           
  4978                           ;PowerFault_B1.c: 42: return PF->Safe;
  4979                           
  4980                           ;incstack = 0
  4981                           ; Regs used in _getPF_Safe: [wreg+fsr1l+fsr1h+status,2+status,0]
  4982  194E  0876               	movf	_PF,w
  4983  194F  0086               	movwf	6
  4984  1950  3001               	movlw	1	; select bank2/3
  4985  1951  0087               	movwf	7
  4986  1952  0C01               	rrf	1,w
  4987  1953  0C89               	rrf	9,f
  4988  1954  3901               	andlw	1
  4989  1955  0008               	return
  4990  1956                     __end_of_getPF_Safe:	
  4991                           
  4992                           	psect	text10
  4993  18E1                     __ptext10:	
  4994 ;; *************** function _Temp_Initialization *****************
  4995 ;; Defined at:
  4996 ;;		line 15 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\OverTemperature_B1.c"
  4997 ;; Parameters:    Size  Location     Type
  4998 ;;		None
  4999 ;; Auto vars:     Size  Location     Type
  5000 ;;		None
  5001 ;; Return value:  Size  Location     Type
  5002 ;;		None               void
  5003 ;; Registers used:
  5004 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5005 ;; Tracked objects:
  5006 ;;		On entry : 0/0
  5007 ;;		On exit  : 0/0
  5008 ;;		Unchanged: 0/0
  5009 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5011 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5013 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5014 ;;Total ram usage:        0 bytes
  5015 ;; Hardware stack levels used:    1
  5016 ;; Hardware stack levels required when called:    5
  5017 ;; This function calls:
  5018 ;;		_setTemp_Initialization
  5019 ;; This function is called by:
  5020 ;;		_main
  5021 ;; This function uses a non-reentrant model
  5022 ;;
  5023                           
  5024                           
  5025                           ;psect for function _Temp_Initialization
  5026  18E1                     _Temp_Initialization:	
  5027                           
  5028                           ;OverTemperature_B1.c: 18: setTemp_Initialization();
  5029                           
  5030                           ;incstack = 0
  5031                           ; Regs used in _Temp_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5032  18E1  3199  21A9         	fcall	_setTemp_Initialization
  5033  18E3  0008               	return
  5034  18E4                     __end_of_Temp_Initialization:	
  5035                           
  5036                           	psect	text11
  5037  19A9                     __ptext11:	
  5038 ;; *************** function _setTemp_Initialization *****************
  5039 ;; Defined at:
  5040 ;;		line 51 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\OverTemperature_B1.c"
  5041 ;; Parameters:    Size  Location     Type
  5042 ;;		None
  5043 ;; Auto vars:     Size  Location     Type
  5044 ;;		None
  5045 ;; Return value:  Size  Location     Type
  5046 ;;		None               void
  5047 ;; Registers used:
  5048 ;;		wreg, fsr1l, fsr1h
  5049 ;; Tracked objects:
  5050 ;;		On entry : 0/0
  5051 ;;		On exit  : 0/0
  5052 ;;		Unchanged: 0/0
  5053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5054 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5055 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5056 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5057 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5058 ;;Total ram usage:        1 bytes
  5059 ;; Hardware stack levels used:    1
  5060 ;; Hardware stack levels required when called:    4
  5061 ;; This function calls:
  5062 ;;		Nothing
  5063 ;; This function is called by:
  5064 ;;		_Temp_Initialization
  5065 ;; This function uses a non-reentrant model
  5066 ;;
  5067                           
  5068                           
  5069                           ;psect for function _setTemp_Initialization
  5070  19A9                     _setTemp_Initialization:	
  5071                           
  5072                           ;OverTemperature_B1.c: 53: Temp=&Temp1;
  5073                           
  5074                           ;incstack = 0
  5075                           ; Regs used in _setTemp_Initialization: [wregfsr1]
  5076  19A9  303C               	movlw	_Temp1& (0+255)
  5077  19AA  0020               	movlb	0	; select bank0
  5078  19AB  00A0               	movwf	??_setTemp_Initialization
  5079  19AC  0820               	movf	??_setTemp_Initialization,w
  5080  19AD  00F9               	movwf	_Temp
  5081                           
  5082                           ;OverTemperature_B1.c: 54: Temp->Safe=1;
  5083  19AE  0879               	movf	_Temp,w
  5084  19AF  0086               	movwf	6
  5085  19B0  3001               	movlw	1	; select bank2/3
  5086  19B1  0087               	movwf	7
  5087  19B2  1601               	bsf	1,4
  5088  19B3  0008               	return
  5089  19B4                     __end_of_setTemp_Initialization:	
  5090                           
  5091                           	psect	text12
  5092  1946                     __ptext12:	
  5093 ;; *************** function _Switch_Main *****************
  5094 ;; Defined at:
  5095 ;;		line 62 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Switch_B1.c"
  5096 ;; Parameters:    Size  Location     Type
  5097 ;;		None
  5098 ;; Auto vars:     Size  Location     Type
  5099 ;;		None
  5100 ;; Return value:  Size  Location     Type
  5101 ;;		None               void
  5102 ;; Registers used:
  5103 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5104 ;; Tracked objects:
  5105 ;;		On entry : 0/0
  5106 ;;		On exit  : 0/0
  5107 ;;		Unchanged: 0/0
  5108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5109 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5110 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5112 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5113 ;;Total ram usage:        0 bytes
  5114 ;; Hardware stack levels used:    1
  5115 ;; Hardware stack levels required when called:   10
  5116 ;; This function calls:
  5117 ;;		_setSw_Main
  5118 ;; This function is called by:
  5119 ;;		_main
  5120 ;; This function uses a non-reentrant model
  5121 ;;
  5122                           
  5123                           
  5124                           ;psect for function _Switch_Main
  5125  1946                     _Switch_Main:	
  5126                           
  5127                           ;Switch_B1.c: 65: setSw_Main(1);
  5128                           
  5129                           ;incstack = 0
  5130                           ; Regs used in _Switch_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5131  1946  3001               	movlw	1
  5132  1947  3183  2393  3199   	fcall	_setSw_Main
  5133                           
  5134                           ;Switch_B1.c: 69: setSw_Main(2);
  5135  194A  3002               	movlw	2
  5136  194B  3183  2393         	fcall	_setSw_Main
  5137  194D  0008               	return
  5138  194E                     __end_of_Switch_Main:	
  5139                           
  5140                           	psect	text13
  5141  0393                     __ptext13:	
  5142 ;; *************** function _setSw_Main *****************
  5143 ;; Defined at:
  5144 ;;		line 112 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Switch_B1.c"
  5145 ;; Parameters:    Size  Location     Type
  5146 ;;  sw              1    wreg     unsigned char 
  5147 ;; Auto vars:     Size  Location     Type
  5148 ;;  sw              1    2[BANK3 ] unsigned char 
  5149 ;; Return value:  Size  Location     Type
  5150 ;;		None               void
  5151 ;; Registers used:
  5152 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5153 ;; Tracked objects:
  5154 ;;		On entry : 0/0
  5155 ;;		On exit  : 0/0
  5156 ;;		Unchanged: 0/0
  5157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5159 ;;      Locals:         0       0       0       0       3       0       0       0       0       0       0       0       
      +0       0
  5160 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5161 ;;      Totals:         0       2       0       0       3       0       0       0       0       0       0       0       
      +0       0
  5162 ;;Total ram usage:        5 bytes
  5163 ;; Hardware stack levels used:    1
  5164 ;; Hardware stack levels required when called:    9
  5165 ;; This function calls:
  5166 ;;		_SwPointSelect
  5167 ;;		_Sw_DimmerAdjFunc
  5168 ;;		_Sw_DimmerOffFunc
  5169 ;;		_Sw_DimmerOnFunc
  5170 ;;		_setBuz
  5171 ;;		_setRF_Learn
  5172 ;; This function is called by:
  5173 ;;		_Switch_Main
  5174 ;; This function uses a non-reentrant model
  5175 ;;
  5176                           
  5177                           
  5178                           ;psect for function _setSw_Main
  5179  0393                     _setSw_Main:	
  5180                           
  5181                           ;incstack = 0
  5182                           ; Regs used in _setSw_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5183                           ;setSw_Main@sw stored from wreg
  5184  0393  0023               	movlb	3	; select bank3
  5185  0394  00D3               	movwf	setSw_Main@sw^(0+384)
  5186                           
  5187                           ;Switch_B1.c: 114: if(Sw->Enable)
  5188  0395  0878               	movf	_Sw,w
  5189  0396  0086               	movwf	6
  5190  0397  3001               	movlw	1	; select bank2/3
  5191  0398  0087               	movwf	7
  5192  0399  1C01               	btfss	1,0
  5193  039A  0008               	return
  5194                           
  5195                           ;Switch_B1.c: 115: {
  5196                           ;Switch_B1.c: 116: SwPointSelect(sw);
  5197  039B  0853               	movf	setSw_Main@sw^(0+384),w
  5198  039C  319B  2308  3183   	fcall	_SwPointSelect
  5199                           
  5200                           ;Switch_B1.c: 133: if(sw == 1)
  5201  039F  0023               	movlb	3	; select bank3
  5202  03A0  0853               	movf	setSw_Main@sw^(0+384),w
  5203  03A1  3A01               	xorlw	1
  5204  03A2  1D03               	skipz
  5205  03A3  2BB3               	goto	l9529
  5206                           
  5207                           ;Switch_B1.c: 134: {
  5208                           ;Switch_B1.c: 135: Sw->Touch=(RA6 || RA4)?1:0;
  5209  03A4  01D1               	clrf	_setSw_Main$4236^(0+384)
  5210  03A5  0AD1               	incf	_setSw_Main$4236^(0+384),f
  5211  03A6  0020               	movlb	0	; select bank0
  5212  03A7  1F0C               	btfss	12,6	;volatile
  5213  03A8  1A0C               	btfsc	12,4	;volatile
  5214  03A9  2BAC               	goto	l9527
  5215  03AA  0023               	movlb	3	; select bank3
  5216  03AB  01D1               	clrf	_setSw_Main$4236^(0+384)
  5217  03AC                     l9527:	
  5218  03AC  0878               	movf	_Sw,w
  5219  03AD  0086               	movwf	6
  5220  03AE  3001               	movlw	1	; select bank2/3
  5221  03AF  0087               	movwf	7
  5222  03B0  0023               	movlb	3	; select bank3
  5223  03B1  0851               	movf	_setSw_Main$4236^(0+384),w
  5224  03B2  2BC5               	goto	L1
  5225  03B3                     l9529:	
  5226                           ;Switch_B1.c: 136: }
  5227                           
  5228                           
  5229                           ;Switch_B1.c: 137: else if(sw == 2)
  5230  03B3  0853               	movf	setSw_Main@sw^(0+384),w
  5231  03B4  3A02               	xorlw	2
  5232  03B5  1D03               	skipz
  5233  03B6  2BC8               	goto	l9539
  5234                           
  5235                           ;Switch_B1.c: 138: {
  5236                           ;Switch_B1.c: 139: Sw->Touch=(RA0 || RB1)?1:0;
  5237  03B7  01D2               	clrf	_setSw_Main$4237^(0+384)
  5238  03B8  0AD2               	incf	_setSw_Main$4237^(0+384),f
  5239  03B9  0020               	movlb	0	; select bank0
  5240  03BA  1C0C               	btfss	12,0	;volatile
  5241  03BB  188D               	btfsc	13,1	;volatile
  5242  03BC  2BBF               	goto	l9537
  5243  03BD  0023               	movlb	3	; select bank3
  5244  03BE  01D2               	clrf	_setSw_Main$4237^(0+384)
  5245  03BF                     l9537:	
  5246  03BF  0878               	movf	_Sw,w
  5247  03C0  0086               	movwf	6
  5248  03C1  3001               	movlw	1	; select bank2/3
  5249  03C2  0087               	movwf	7
  5250  03C3  0023               	movlb	3	; select bank3
  5251  03C4  0852               	movf	_setSw_Main$4237^(0+384),w
  5252  03C5                     L1:	
  5253  03C5  1081               	bcf	1,1
  5254  03C6  1D03               	skipz
  5255  03C7  1481               	bsf	1,1
  5256  03C8                     l9539:	
  5257                           
  5258                           ;Switch_B1.c: 140: }
  5259                           ;Switch_B1.c: 148: if(Sw->Touch)
  5260  03C8  0878               	movf	_Sw,w
  5261  03C9  0086               	movwf	6
  5262  03CA  3001               	movlw	1	; select bank2/3
  5263  03CB  0087               	movwf	7
  5264  03CC  1C81               	btfss	1,1
  5265  03CD  2CA1               	goto	l9587
  5266                           
  5267                           ;Switch_B1.c: 149: {
  5268                           ;Switch_B1.c: 150: if(!Sw->Debounce)
  5269  03CE  0878               	movf	_Sw,w
  5270  03CF  0086               	movwf	6
  5271  03D0  3001               	movlw	1	; select bank2/3
  5272  03D1  0087               	movwf	7
  5273  03D2  1901               	btfsc	1,2
  5274  03D3  2BF7               	goto	l9553
  5275                           
  5276                           ;Switch_B1.c: 151: {
  5277                           ;Switch_B1.c: 152: Sw->DebounceTime++;
  5278  03D4  3001               	movlw	1
  5279  03D5  0020               	movlb	0	; select bank0
  5280  03D6  00E5               	movwf	??_setSw_Main
  5281  03D7  0878               	movf	_Sw,w
  5282  03D8  3E02               	addlw	2
  5283  03D9  0086               	movwf	6
  5284  03DA  3001               	movlw	1	; select bank2/3
  5285  03DB  0087               	movwf	7
  5286  03DC  0865               	movf	??_setSw_Main,w
  5287  03DD  0781               	addwf	1,f
  5288                           
  5289                           ;Switch_B1.c: 153: if(Sw->DebounceTime >= 5)
  5290  03DE  0878               	movf	_Sw,w
  5291  03DF  3E02               	addlw	2
  5292  03E0  0086               	movwf	6
  5293  03E1  3001               	movlw	1	; select bank2/3
  5294  03E2  0087               	movwf	7
  5295  03E3  3005               	movlw	5
  5296  03E4  0201               	subwf	1,w
  5297  03E5  1C03               	skipc
  5298  03E6  0008               	return
  5299                           
  5300                           ;Switch_B1.c: 154: {
  5301                           ;Switch_B1.c: 155: Sw->DebounceTime=0;
  5302  03E7  0878               	movf	_Sw,w
  5303  03E8  3E02               	addlw	2
  5304  03E9  0086               	movwf	6
  5305  03EA  3001               	movlw	1	; select bank2/3
  5306  03EB  0087               	movwf	7
  5307  03EC  0181               	clrf	1
  5308                           
  5309                           ;Switch_B1.c: 156: Sw->Debounce=1;
  5310  03ED  0878               	movf	_Sw,w
  5311  03EE  0086               	movwf	6
  5312  03EF  3001               	movlw	1	; select bank2/3
  5313  03F0  0087               	movwf	7
  5314  03F1  1501               	bsf	1,2
  5315                           
  5316                           ;Switch_B1.c: 159: Sw_DimmerOnFunc(sw);
  5317  03F2  0023               	movlb	3	; select bank3
  5318  03F3  0853               	movf	setSw_Main@sw^(0+384),w
  5319  03F4  3196  2637         	fcall	_Sw_DimmerOnFunc
  5320                           
  5321                           ;Switch_B1.c: 162: }
  5322                           ;Switch_B1.c: 163: }
  5323  03F6  0008               	return
  5324  03F7                     l9553:	
  5325                           
  5326                           ;Switch_B1.c: 164: else
  5327                           ;Switch_B1.c: 165: {
  5328                           ;Switch_B1.c: 166: if(!Sw->Hold1)
  5329  03F7  0878               	movf	_Sw,w
  5330  03F8  0086               	movwf	6
  5331  03F9  3001               	movlw	1	; select bank2/3
  5332  03FA  0087               	movwf	7
  5333  03FB  1981               	btfsc	1,3
  5334  03FC  2C2A               	goto	l9563
  5335                           
  5336                           ;Switch_B1.c: 167: {
  5337                           ;Switch_B1.c: 168: Sw->Hold1Time++;
  5338  03FD  0878               	movf	_Sw,w
  5339  03FE  3E03               	addlw	3
  5340  03FF  0086               	movwf	6
  5341  0400  3001               	movlw	1	; select bank2/3
  5342  0401  0087               	movwf	7
  5343  0402  3001               	movlw	1
  5344  0403  0781               	addwf	1,f
  5345  0404  3141               	addfsr 1,1
  5346  0405  1803               	skipnc
  5347  0406  0A81               	incf	1,f
  5348                           
  5349                           ;Switch_B1.c: 169: if(Sw->Hold1Time >= 150)
  5350  0407  0878               	movf	_Sw,w
  5351  0408  3E03               	addlw	3
  5352  0409  0086               	movwf	6
  5353  040A  3001               	movlw	1	; select bank2/3
  5354  040B  0087               	movwf	7
  5355  040C  3F40               	moviw [0]fsr1
  5356  040D  0020               	movlb	0	; select bank0
  5357  040E  00E5               	movwf	??_setSw_Main
  5358  040F  3F41               	moviw [1]fsr1
  5359  0410  00E6               	movwf	??_setSw_Main+1
  5360  0411  3000               	movlw	0
  5361  0412  0266               	subwf	??_setSw_Main+1,w
  5362  0413  3096               	movlw	150
  5363  0414  1903               	skipnz
  5364  0415  0265               	subwf	??_setSw_Main,w
  5365  0416  1C03               	skipc
  5366  0417  0008               	return
  5367                           
  5368                           ;Switch_B1.c: 170: {
  5369                           ;Switch_B1.c: 171: Sw->Hold1Time=0;
  5370  0418  0878               	movf	_Sw,w
  5371  0419  3E03               	addlw	3
  5372  041A  0086               	movwf	6
  5373  041B  3001               	movlw	1	; select bank2/3
  5374  041C  0087               	movwf	7
  5375  041D  3000               	movlw	0
  5376  041E  3FC0               	movwi [0]fsr1
  5377  041F  3FC1               	movwi [1]fsr1
  5378                           
  5379                           ;Switch_B1.c: 172: Sw->Hold1=1;
  5380  0420  0878               	movf	_Sw,w
  5381  0421  0086               	movwf	6
  5382  0422  3001               	movlw	1	; select bank2/3
  5383  0423  0087               	movwf	7
  5384  0424  1581               	bsf	1,3
  5385                           
  5386                           ;Switch_B1.c: 175: Sw_DimmerAdjFunc(sw);
  5387  0425  0023               	movlb	3	; select bank3
  5388  0426  0853               	movf	setSw_Main@sw^(0+384),w
  5389  0427  3190  2083         	fcall	_Sw_DimmerAdjFunc
  5390                           
  5391                           ;Switch_B1.c: 178: }
  5392                           ;Switch_B1.c: 179: }
  5393  0429  0008               	return
  5394  042A                     l9563:	
  5395                           
  5396                           ;Switch_B1.c: 180: else
  5397                           ;Switch_B1.c: 181: {
  5398                           ;Switch_B1.c: 182: if(!Sw->Hold2)
  5399  042A  0878               	movf	_Sw,w
  5400  042B  0086               	movwf	6
  5401  042C  3001               	movlw	1	; select bank2/3
  5402  042D  0087               	movwf	7
  5403  042E  1A01               	btfsc	1,4
  5404  042F  2C6E               	goto	l9577
  5405                           
  5406                           ;Switch_B1.c: 183: {
  5407                           ;Switch_B1.c: 184: Sw->Hold2Time++;
  5408  0430  0878               	movf	_Sw,w
  5409  0431  3E05               	addlw	5
  5410  0432  0086               	movwf	6
  5411  0433  3001               	movlw	1	; select bank2/3
  5412  0434  0087               	movwf	7
  5413  0435  3001               	movlw	1
  5414  0436  0781               	addwf	1,f
  5415  0437  3141               	addfsr 1,1
  5416  0438  1803               	skipnc
  5417  0439  0A81               	incf	1,f
  5418                           
  5419                           ;Switch_B1.c: 185: if(Sw->Hold2Time >= 150)
  5420  043A  0878               	movf	_Sw,w
  5421  043B  3E05               	addlw	5
  5422  043C  0086               	movwf	6
  5423  043D  3001               	movlw	1	; select bank2/3
  5424  043E  0087               	movwf	7
  5425  043F  3F40               	moviw [0]fsr1
  5426  0440  0020               	movlb	0	; select bank0
  5427  0441  00E5               	movwf	??_setSw_Main
  5428  0442  3F41               	moviw [1]fsr1
  5429  0443  00E6               	movwf	??_setSw_Main+1
  5430  0444  3000               	movlw	0
  5431  0445  0266               	subwf	??_setSw_Main+1,w
  5432  0446  3096               	movlw	150
  5433  0447  1903               	skipnz
  5434  0448  0265               	subwf	??_setSw_Main,w
  5435  0449  1C03               	skipc
  5436  044A  0008               	return
  5437                           
  5438                           ;Switch_B1.c: 186: {
  5439                           ;Switch_B1.c: 187: Sw->Hold2Time=0;
  5440  044B  0878               	movf	_Sw,w
  5441  044C  3E05               	addlw	5
  5442  044D  0086               	movwf	6
  5443  044E  3001               	movlw	1	; select bank2/3
  5444  044F  0087               	movwf	7
  5445  0450  3000               	movlw	0
  5446  0451  3FC0               	movwi [0]fsr1
  5447  0452  3FC1               	movwi [1]fsr1
  5448                           
  5449                           ;Switch_B1.c: 188: Sw->Hold2=1;
  5450  0453  0878               	movf	_Sw,w
  5451  0454  0086               	movwf	6
  5452  0455  3001               	movlw	1	; select bank2/3
  5453  0456  0087               	movwf	7
  5454  0457  1601               	bsf	1,4
  5455                           
  5456                           ;Switch_B1.c: 192: setRF_Learn(1,1);
  5457  0458  01A2               	clrf	setRF_Learn@command
  5458  0459  0AA2               	incf	setRF_Learn@command,f
  5459  045A  3001               	movlw	1
  5460  045B  319A  2231  3183   	fcall	_setRF_Learn
  5461                           
  5462                           ;Switch_B1.c: 194: if(TMain->First)
  5463  045E  0020               	movlb	0	; select bank0
  5464  045F  086F               	movf	_TMain,w
  5465  0460  3E03               	addlw	3
  5466  0461  0086               	movwf	6
  5467  0462  3001               	movlw	1	; select bank2/3
  5468  0463  0087               	movwf	7
  5469  0464  1C81               	btfss	1,1
  5470  0465  0008               	return
  5471                           
  5472                           ;Switch_B1.c: 195: {
  5473                           ;Switch_B1.c: 196: setBuz(2,100);
  5474  0466  3064               	movlw	100
  5475  0467  00A6               	movwf	setBuz@time
  5476  0468  3000               	movlw	0
  5477  0469  00A7               	movwf	setBuz@time+1
  5478  046A  3002               	movlw	2
  5479  046B  3197  2789         	fcall	_setBuz
  5480                           
  5481                           ;Switch_B1.c: 197: }
  5482                           ;Switch_B1.c: 199: }
  5483                           ;Switch_B1.c: 200: }
  5484  046D  0008               	return
  5485  046E                     l9577:	
  5486                           
  5487                           ;Switch_B1.c: 201: else
  5488                           ;Switch_B1.c: 202: {
  5489                           ;Switch_B1.c: 203: if(!Sw->Hold3)
  5490  046E  0878               	movf	_Sw,w
  5491  046F  0086               	movwf	6
  5492  0470  3001               	movlw	1	; select bank2/3
  5493  0471  0087               	movwf	7
  5494  0472  1A81               	btfsc	1,5
  5495  0473  0008               	return
  5496                           
  5497                           ;Switch_B1.c: 204: {
  5498                           ;Switch_B1.c: 205: Sw->Hold3Time++;
  5499  0474  0878               	movf	_Sw,w
  5500  0475  3E07               	addlw	7
  5501  0476  0086               	movwf	6
  5502  0477  3001               	movlw	1	; select bank2/3
  5503  0478  0087               	movwf	7
  5504  0479  3001               	movlw	1
  5505  047A  0781               	addwf	1,f
  5506  047B  3141               	addfsr 1,1
  5507  047C  1803               	skipnc
  5508  047D  0A81               	incf	1,f
  5509                           
  5510                           ;Switch_B1.c: 206: if(Sw->Hold3Time >= 300)
  5511  047E  0878               	movf	_Sw,w
  5512  047F  3E07               	addlw	7
  5513  0480  0086               	movwf	6
  5514  0481  3001               	movlw	1	; select bank2/3
  5515  0482  0087               	movwf	7
  5516  0483  3F40               	moviw [0]fsr1
  5517  0484  0020               	movlb	0	; select bank0
  5518  0485  00E5               	movwf	??_setSw_Main
  5519  0486  3F41               	moviw [1]fsr1
  5520  0487  00E6               	movwf	??_setSw_Main+1
  5521  0488  3001               	movlw	1
  5522  0489  0266               	subwf	??_setSw_Main+1,w
  5523  048A  302C               	movlw	44
  5524  048B  1903               	skipnz
  5525  048C  0265               	subwf	??_setSw_Main,w
  5526  048D  1C03               	skipc
  5527  048E  0008               	return
  5528                           
  5529                           ;Switch_B1.c: 207: {
  5530                           ;Switch_B1.c: 208: Sw->Hold3Time=0;
  5531  048F  0878               	movf	_Sw,w
  5532  0490  3E07               	addlw	7
  5533  0491  0086               	movwf	6
  5534  0492  3001               	movlw	1	; select bank2/3
  5535  0493  0087               	movwf	7
  5536  0494  3000               	movlw	0
  5537  0495  3FC0               	movwi [0]fsr1
  5538  0496  3FC1               	movwi [1]fsr1
  5539                           
  5540                           ;Switch_B1.c: 209: Sw->Hold3=1;
  5541  0497  0878               	movf	_Sw,w
  5542  0498  0086               	movwf	6
  5543  0499  3001               	movlw	1	; select bank2/3
  5544  049A  0087               	movwf	7
  5545  049B  1681               	bsf	1,5
  5546                           
  5547                           ;Switch_B1.c: 212: setRF_Learn(1,0);
  5548  049C  01A2               	clrf	setRF_Learn@command
  5549  049D  3001               	movlw	1
  5550  049E  319A  2231         	fcall	_setRF_Learn
  5551                           
  5552                           ;Switch_B1.c: 215: }
  5553                           ;Switch_B1.c: 216: }
  5554                           ;Switch_B1.c: 217: }
  5555                           ;Switch_B1.c: 218: }
  5556                           ;Switch_B1.c: 219: }
  5557                           ;Switch_B1.c: 220: }
  5558  04A0  0008               	return
  5559  04A1                     l9587:	
  5560                           
  5561                           ;Switch_B1.c: 221: else
  5562                           ;Switch_B1.c: 222: {
  5563                           ;Switch_B1.c: 223: if(Sw->Debounce)
  5564  04A1  0878               	movf	_Sw,w
  5565  04A2  0086               	movwf	6
  5566  04A3  3001               	movlw	1	; select bank2/3
  5567  04A4  0087               	movwf	7
  5568  04A5  1D01               	btfss	1,2
  5569  04A6  0008               	return
  5570                           
  5571                           ;Switch_B1.c: 224: {
  5572                           ;Switch_B1.c: 225: Sw->DebounceTime++;
  5573  04A7  3001               	movlw	1
  5574  04A8  0020               	movlb	0	; select bank0
  5575  04A9  00E5               	movwf	??_setSw_Main
  5576  04AA  0878               	movf	_Sw,w
  5577  04AB  3E02               	addlw	2
  5578  04AC  0086               	movwf	6
  5579  04AD  3001               	movlw	1	; select bank2/3
  5580  04AE  0087               	movwf	7
  5581  04AF  0865               	movf	??_setSw_Main,w
  5582  04B0  0781               	addwf	1,f
  5583                           
  5584                           ;Switch_B1.c: 226: if(Sw->DebounceTime >= 5)
  5585  04B1  0878               	movf	_Sw,w
  5586  04B2  3E02               	addlw	2
  5587  04B3  0086               	movwf	6
  5588  04B4  3001               	movlw	1	; select bank2/3
  5589  04B5  0087               	movwf	7
  5590  04B6  3005               	movlw	5
  5591  04B7  0201               	subwf	1,w
  5592  04B8  1C03               	skipc
  5593  04B9  0008               	return
  5594                           
  5595                           ;Switch_B1.c: 227: {
  5596                           ;Switch_B1.c: 228: Sw->DebounceTime=0;
  5597  04BA  0878               	movf	_Sw,w
  5598  04BB  3E02               	addlw	2
  5599  04BC  0086               	movwf	6
  5600  04BD  3001               	movlw	1	; select bank2/3
  5601  04BE  0087               	movwf	7
  5602  04BF  0181               	clrf	1
  5603                           
  5604                           ;Switch_B1.c: 229: Sw->Debounce=0;
  5605  04C0  0878               	movf	_Sw,w
  5606  04C1  0086               	movwf	6
  5607  04C2  3001               	movlw	1	; select bank2/3
  5608  04C3  0087               	movwf	7
  5609  04C4  1101               	bcf	1,2
  5610                           
  5611                           ;Switch_B1.c: 230: Sw->Hold1Time=0;
  5612  04C5  0878               	movf	_Sw,w
  5613  04C6  3E03               	addlw	3
  5614  04C7  0086               	movwf	6
  5615  04C8  3001               	movlw	1	; select bank2/3
  5616  04C9  0087               	movwf	7
  5617  04CA  3000               	movlw	0
  5618  04CB  3FC0               	movwi [0]fsr1
  5619  04CC  3FC1               	movwi [1]fsr1
  5620                           
  5621                           ;Switch_B1.c: 231: Sw->Hold1=0;
  5622  04CD  0878               	movf	_Sw,w
  5623  04CE  0086               	movwf	6
  5624  04CF  3001               	movlw	1	; select bank2/3
  5625  04D0  0087               	movwf	7
  5626  04D1  1181               	bcf	1,3
  5627                           
  5628                           ;Switch_B1.c: 232: Sw->Hold2Time=0;
  5629  04D2  0878               	movf	_Sw,w
  5630  04D3  3E05               	addlw	5
  5631  04D4  0086               	movwf	6
  5632  04D5  3001               	movlw	1	; select bank2/3
  5633  04D6  0087               	movwf	7
  5634  04D7  3000               	movlw	0
  5635  04D8  3FC0               	movwi [0]fsr1
  5636  04D9  3FC1               	movwi [1]fsr1
  5637                           
  5638                           ;Switch_B1.c: 233: Sw->Hold2=0;
  5639  04DA  0878               	movf	_Sw,w
  5640  04DB  0086               	movwf	6
  5641  04DC  3001               	movlw	1	; select bank2/3
  5642  04DD  0087               	movwf	7
  5643  04DE  1201               	bcf	1,4
  5644                           
  5645                           ;Switch_B1.c: 234: Sw->Hold3Time=0;
  5646  04DF  0878               	movf	_Sw,w
  5647  04E0  3E07               	addlw	7
  5648  04E1  0086               	movwf	6
  5649  04E2  3001               	movlw	1	; select bank2/3
  5650  04E3  0087               	movwf	7
  5651  04E4  3000               	movlw	0
  5652  04E5  3FC0               	movwi [0]fsr1
  5653  04E6  3FC1               	movwi [1]fsr1
  5654                           
  5655                           ;Switch_B1.c: 235: Sw->Hold3=0;
  5656  04E7  0878               	movf	_Sw,w
  5657  04E8  0086               	movwf	6
  5658  04E9  3001               	movlw	1	; select bank2/3
  5659  04EA  0087               	movwf	7
  5660  04EB  1281               	bcf	1,5
  5661                           
  5662                           ;Switch_B1.c: 238: Sw_DimmerOffFunc(sw);
  5663  04EC  0023               	movlb	3	; select bank3
  5664  04ED  0853               	movf	setSw_Main@sw^(0+384),w
  5665  04EE  3196  26A6  3183   	fcall	_Sw_DimmerOffFunc
  5666                           
  5667                           ;Switch_B1.c: 243: setRF_Learn(1,0);
  5668  04F1  0020               	movlb	0	; select bank0
  5669  04F2  01A2               	clrf	setRF_Learn@command
  5670  04F3  3001               	movlw	1
  5671  04F4  319A  2231         	fcall	_setRF_Learn
  5672  04F6  0008               	return
  5673  04F7                     __end_of_setSw_Main:	
  5674                           
  5675                           	psect	text14
  5676  1A31                     __ptext14:	
  5677 ;; *************** function _setRF_Learn *****************
  5678 ;; Defined at:
  5679 ;;		line 31 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
  5680 ;; Parameters:    Size  Location     Type
  5681 ;;  rf              1    wreg     unsigned char 
  5682 ;;  command         1    2[BANK0 ] unsigned char 
  5683 ;; Auto vars:     Size  Location     Type
  5684 ;;  rf              1    3[BANK0 ] unsigned char 
  5685 ;; Return value:  Size  Location     Type
  5686 ;;		None               void
  5687 ;; Registers used:
  5688 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5689 ;; Tracked objects:
  5690 ;;		On entry : 0/0
  5691 ;;		On exit  : 0/0
  5692 ;;		Unchanged: 0/0
  5693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5694 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5695 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5697 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5698 ;;Total ram usage:        2 bytes
  5699 ;; Hardware stack levels used:    1
  5700 ;; Hardware stack levels required when called:    5
  5701 ;; This function calls:
  5702 ;;		_RfPointSelect
  5703 ;; This function is called by:
  5704 ;;		_setSw_Main
  5705 ;; This function uses a non-reentrant model
  5706 ;;
  5707                           
  5708                           
  5709                           ;psect for function _setRF_Learn
  5710  1A31                     _setRF_Learn:	
  5711                           
  5712                           ;incstack = 0
  5713                           ; Regs used in _setRF_Learn: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5714                           ;setRF_Learn@rf stored from wreg
  5715  1A31  0020               	movlb	0	; select bank0
  5716  1A32  00A3               	movwf	setRF_Learn@rf
  5717                           
  5718                           ;RF_Control_B1.c: 33: RfPointSelect(rf);
  5719  1A33  0823               	movf	setRF_Learn@rf,w
  5720  1A34  3199  2188         	fcall	_RfPointSelect
  5721                           
  5722                           ;RF_Control_B1.c: 34: RF->Learn=command;
  5723  1A36  0877               	movf	_RF,w
  5724  1A37  0086               	movwf	6
  5725  1A38  0187               	clrf	7
  5726  1A39  0020               	movlb	0	; select bank0
  5727  1A3A  0822               	movf	setRF_Learn@command,w
  5728  1A3B  1301               	bcf	1,6
  5729  1A3C  1D03               	skipz
  5730  1A3D  1701               	bsf	1,6
  5731  1A3E  0008               	return
  5732  1A3F                     __end_of_setRF_Learn:	
  5733                           
  5734                           	psect	text15
  5735  1637                     __ptext15:	
  5736 ;; *************** function _Sw_DimmerOnFunc *****************
  5737 ;; Defined at:
  5738 ;;		line 251 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Switch_B1.c"
  5739 ;; Parameters:    Size  Location     Type
  5740 ;;  sw              1    wreg     unsigned char 
  5741 ;; Auto vars:     Size  Location     Type
  5742 ;;  sw              1   67[BANK0 ] unsigned char 
  5743 ;;  Idle            1   66[BANK0 ] unsigned char 
  5744 ;; Return value:  Size  Location     Type
  5745 ;;		None               void
  5746 ;; Registers used:
  5747 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5748 ;; Tracked objects:
  5749 ;;		On entry : 0/0
  5750 ;;		On exit  : 0/0
  5751 ;;		Unchanged: 0/0
  5752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5753 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5754 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5756 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5757 ;;Total ram usage:        2 bytes
  5758 ;; Hardware stack levels used:    1
  5759 ;; Hardware stack levels required when called:    8
  5760 ;; This function calls:
  5761 ;;		_setBuz
  5762 ;;		_setDimmerLights_Switch
  5763 ;;		_setDimmerLights_Trigger
  5764 ;;		_setRFSW_Status
  5765 ;;		_setRF_DimmerLights
  5766 ;;		_setTxData
  5767 ;; This function is called by:
  5768 ;;		_setSw_Main
  5769 ;; This function uses a non-reentrant model
  5770 ;;
  5771                           
  5772                           
  5773                           ;psect for function _Sw_DimmerOnFunc
  5774  1637                     _Sw_DimmerOnFunc:	
  5775                           
  5776                           ;incstack = 0
  5777                           ; Regs used in _Sw_DimmerOnFunc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5778                           ;Sw_DimmerOnFunc@sw stored from wreg
  5779  1637  0020               	movlb	0	; select bank0
  5780  1638  00E3               	movwf	Sw_DimmerOnFunc@sw
  5781                           
  5782                           ;Switch_B1.c: 253: char Idle=1;
  5783  1639  01E2               	clrf	Sw_DimmerOnFunc@Idle
  5784  163A  0AE2               	incf	Sw_DimmerOnFunc@Idle,f
  5785                           
  5786                           ;Switch_B1.c: 270: if(sw == 1)
  5787  163B  0863               	movf	Sw_DimmerOnFunc@sw,w
  5788  163C  3A01               	xorlw	1
  5789  163D  1D03               	skipz
  5790  163E  2E41               	goto	l8993
  5791                           
  5792                           ;Switch_B1.c: 271: {
  5793                           ;Switch_B1.c: 272: Idle=(DimmerLights22->AdjGo)?0:1;
  5794  163F  086C               	movf	_DimmerLights22,w
  5795  1640  2E46               	goto	L2
  5796  1641                     l8993:	
  5797                           ;Switch_B1.c: 273: }
  5798                           
  5799                           
  5800                           ;Switch_B1.c: 274: else if(sw == 2)
  5801  1641  0863               	movf	Sw_DimmerOnFunc@sw,w
  5802  1642  3A02               	xorlw	2
  5803  1643  1D03               	skipz
  5804  1644  2E51               	goto	l8997
  5805                           
  5806                           ;Switch_B1.c: 275: {
  5807                           ;Switch_B1.c: 276: Idle=(DimmerLights11->AdjGo)?0:1;
  5808  1645  086B               	movf	_DimmerLights11,w
  5809  1646                     L2:	
  5810  1646  3E09               	addlw	9
  5811  1647  0086               	movwf	6
  5812  1648  3001               	movlw	1	; select bank2/3
  5813  1649  0087               	movwf	7
  5814  164A  1003               	clrc
  5815  164B  1D01               	btfss	1,2
  5816  164C  1403               	setc
  5817  164D  3000               	movlw	0
  5818  164E  1803               	btfsc	3,0
  5819  164F  3001               	movlw	1
  5820  1650  00E2               	movwf	Sw_DimmerOnFunc@Idle
  5821  1651                     l8997:	
  5822                           
  5823                           ;Switch_B1.c: 277: }
  5824                           ;Switch_B1.c: 280: if(Idle)
  5825  1651  0862               	movf	Sw_DimmerOnFunc@Idle,w
  5826  1652  1903               	btfsc	3,2
  5827  1653  0008               	return
  5828                           
  5829                           ;Switch_B1.c: 281: {
  5830                           ;Switch_B1.c: 282: Sw->Flag=1;
  5831  1654  0878               	movf	_Sw,w
  5832  1655  0086               	movwf	6
  5833  1656  3001               	movlw	1	; select bank2/3
  5834  1657  0087               	movwf	7
  5835  1658  1781               	bsf	1,7
  5836                           
  5837                           ;Switch_B1.c: 283: setBuz(1,100);
  5838  1659  3064               	movlw	100
  5839  165A  00A6               	movwf	setBuz@time
  5840  165B  3000               	movlw	0
  5841  165C  00A7               	movwf	setBuz@time+1
  5842  165D  3001               	movlw	1
  5843  165E  3197  2789  3196   	fcall	_setBuz
  5844                           
  5845                           ;Switch_B1.c: 284: if(!Sw->Status)
  5846  1661  0878               	movf	_Sw,w
  5847  1662  0086               	movwf	6
  5848  1663  3001               	movlw	1	; select bank2/3
  5849  1664  0087               	movwf	7
  5850  1665  1B01               	btfsc	1,6
  5851  1666  2E93               	goto	l9017
  5852                           
  5853                           ;Switch_B1.c: 285: {
  5854                           ;Switch_B1.c: 286: Sw->Status=1;
  5855  1667  0878               	movf	_Sw,w
  5856  1668  0086               	movwf	6
  5857  1669  3001               	movlw	1	; select bank2/3
  5858  166A  0087               	movwf	7
  5859  166B  1701               	bsf	1,6
  5860                           
  5861                           ;Switch_B1.c: 287: setRFSW_Status(sw,1);
  5862  166C  0020               	movlb	0	; select bank0
  5863  166D  01A2               	clrf	setRFSW_Status@command
  5864  166E  0AA2               	incf	setRFSW_Status@command,f
  5865  166F  0863               	movf	Sw_DimmerOnFunc@sw,w
  5866  1670  319A  223F  3196   	fcall	_setRFSW_Status
  5867                           
  5868                           ;Switch_B1.c: 289: setDimmerLights_Trigger(sw,1);
  5869  1673  0020               	movlb	0	; select bank0
  5870  1674  01A2               	clrf	setDimmerLights_Trigger@command
  5871  1675  0AA2               	incf	setDimmerLights_Trigger@command,f
  5872  1676  0863               	movf	Sw_DimmerOnFunc@sw,w
  5873  1677  319A  227D  3196   	fcall	_setDimmerLights_Trigger
  5874                           
  5875                           ;Switch_B1.c: 290: setDimmerLights_Switch(sw,1);
  5876  167A  0020               	movlb	0	; select bank0
  5877  167B  01A2               	clrf	setDimmerLights_Switch@command
  5878  167C  0AA2               	incf	setDimmerLights_Switch@command,f
  5879  167D  0863               	movf	Sw_DimmerOnFunc@sw,w
  5880  167E  319A  226D  3196   	fcall	_setDimmerLights_Switch
  5881                           
  5882                           ;Switch_B1.c: 292: setRF_DimmerLights(sw,Sw->Status);
  5883  1681  0878               	movf	_Sw,w
  5884  1682  0086               	movwf	6
  5885  1683  3001               	movlw	1	; select bank2/3
  5886  1684  0087               	movwf	7
  5887  1685  3000               	movlw	0
  5888  1686  1B01               	btfsc	1,6
  5889  1687  3001               	movlw	1
  5890  1688  0020               	movlb	0	; select bank0
  5891  1689  00DD               	movwf	setRF_DimmerLights@on
  5892  168A  0863               	movf	Sw_DimmerOnFunc@sw,w
  5893  168B  3195  2560  3196   	fcall	_setRF_DimmerLights
  5894                           
  5895                           ;Switch_B1.c: 293: setTxData(1);
  5896  168E  3001               	movlw	1
  5897  168F  3187  271C         	fcall	_setTxData
  5898                           
  5899                           ;Switch_B1.c: 295: }
  5900  1691  0020               	movlb	0	; select bank0
  5901  1692  0008               	return
  5902  1693                     l9017:	
  5903                           
  5904                           ;Switch_B1.c: 296: else
  5905                           ;Switch_B1.c: 297: {
  5906                           ;Switch_B1.c: 298: Sw->Status=0;
  5907  1693  0878               	movf	_Sw,w
  5908  1694  0086               	movwf	6
  5909  1695  3001               	movlw	1	; select bank2/3
  5910  1696  0087               	movwf	7
  5911  1697  1301               	bcf	1,6
  5912                           
  5913                           ;Switch_B1.c: 299: setRFSW_Status(sw,Sw->Status);
  5914  1698  0878               	movf	_Sw,w
  5915  1699  0086               	movwf	6
  5916  169A  3001               	movlw	1	; select bank2/3
  5917  169B  0087               	movwf	7
  5918  169C  3000               	movlw	0
  5919  169D  1B01               	btfsc	1,6
  5920  169E  3001               	movlw	1
  5921  169F  0020               	movlb	0	; select bank0
  5922  16A0  00A2               	movwf	setRFSW_Status@command
  5923  16A1  0863               	movf	Sw_DimmerOnFunc@sw,w
  5924  16A2  319A  223F         	fcall	_setRFSW_Status
  5925  16A4  0020               	movlb	0	; select bank0
  5926  16A5  0008               	return
  5927  16A6                     __end_of_Sw_DimmerOnFunc:	
  5928                           
  5929                           	psect	text16
  5930  16A6                     __ptext16:	
  5931 ;; *************** function _Sw_DimmerOffFunc *****************
  5932 ;; Defined at:
  5933 ;;		line 304 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Switch_B1.c"
  5934 ;; Parameters:    Size  Location     Type
  5935 ;;  sw              1    wreg     unsigned char 
  5936 ;; Auto vars:     Size  Location     Type
  5937 ;;  sw              1   68[BANK0 ] unsigned char 
  5938 ;; Return value:  Size  Location     Type
  5939 ;;		None               void
  5940 ;; Registers used:
  5941 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5942 ;; Tracked objects:
  5943 ;;		On entry : 0/0
  5944 ;;		On exit  : 0/0
  5945 ;;		Unchanged: 0/0
  5946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5948 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5949 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5950 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5951 ;;Total ram usage:        3 bytes
  5952 ;; Hardware stack levels used:    1
  5953 ;; Hardware stack levels required when called:    8
  5954 ;; This function calls:
  5955 ;;		_setDelayOff_GO
  5956 ;;		_setDimmerLights_AdjGo
  5957 ;;		_setDimmerLights_Switch
  5958 ;;		_setDimmerLights_Trigger
  5959 ;;		_setDimmerLights_TriggerAdj
  5960 ;;		_setRF_DimmerLights
  5961 ;;		_setTxData
  5962 ;; This function is called by:
  5963 ;;		_setSw_Main
  5964 ;; This function uses a non-reentrant model
  5965 ;;
  5966                           
  5967                           
  5968                           ;psect for function _Sw_DimmerOffFunc
  5969  16A6                     _Sw_DimmerOffFunc:	
  5970                           
  5971                           ;incstack = 0
  5972                           ; Regs used in _Sw_DimmerOffFunc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5973                           ;Sw_DimmerOffFunc@sw stored from wreg
  5974  16A6  0020               	movlb	0	; select bank0
  5975  16A7  00E4               	movwf	Sw_DimmerOffFunc@sw
  5976                           
  5977                           ;Switch_B1.c: 306: if(Sw->Flag)
  5978  16A8  0878               	movf	_Sw,w
  5979  16A9  0086               	movwf	6
  5980  16AA  3001               	movlw	1	; select bank2/3
  5981  16AB  0087               	movwf	7
  5982  16AC  1F81               	btfss	1,7
  5983  16AD  0008               	return
  5984                           
  5985                           ;Switch_B1.c: 307: {
  5986                           ;Switch_B1.c: 308: Sw->Flag=0;
  5987  16AE  0878               	movf	_Sw,w
  5988  16AF  0086               	movwf	6
  5989  16B0  3001               	movlw	1	; select bank2/3
  5990  16B1  0087               	movwf	7
  5991  16B2  1381               	bcf	1,7
  5992                           
  5993                           ;Switch_B1.c: 309: if(Sw->Status)
  5994  16B3  0878               	movf	_Sw,w
  5995  16B4  0086               	movwf	6
  5996  16B5  3001               	movlw	1	; select bank2/3
  5997  16B6  0087               	movwf	7
  5998  16B7  1F01               	btfss	1,6
  5999  16B8  2EF2               	goto	l9061
  6000                           
  6001                           ;Switch_B1.c: 310: {
  6002                           ;Switch_B1.c: 311: if(Sw->Adj)
  6003  16B9  0A78               	incf	_Sw,w
  6004  16BA  0086               	movwf	6
  6005  16BB  3001               	movlw	1	; select bank2/3
  6006  16BC  0087               	movwf	7
  6007  16BD  1C01               	btfss	1,0
  6008  16BE  0008               	return
  6009                           
  6010                           ;Switch_B1.c: 312: {
  6011                           ;Switch_B1.c: 313: Sw->Adj=0;
  6012  16BF  0A78               	incf	_Sw,w
  6013  16C0  0086               	movwf	6
  6014  16C1  3001               	movlw	1	; select bank2/3
  6015  16C2  0087               	movwf	7
  6016  16C3  1001               	bcf	1,0
  6017                           
  6018                           ;Switch_B1.c: 314: setDimmerLights_TriggerAdj(sw,1);
  6019  16C4  01A2               	clrf	setDimmerLights_TriggerAdj@command
  6020  16C5  0AA2               	incf	setDimmerLights_TriggerAdj@command,f
  6021  16C6  0864               	movf	Sw_DimmerOffFunc@sw,w
  6022  16C7  319A  22AD  3196   	fcall	_setDimmerLights_TriggerAdj
  6023                           
  6024                           ;Switch_B1.c: 315: setDimmerLights_AdjGo(sw,0);
  6025  16CA  0020               	movlb	0	; select bank0
  6026  16CB  01A2               	clrf	setDimmerLights_AdjGo@command
  6027  16CC  0864               	movf	Sw_DimmerOffFunc@sw,w
  6028  16CD  319A  229D  3196   	fcall	_setDimmerLights_AdjGo
  6029                           
  6030                           ;Switch_B1.c: 317: Product->Data[17]=Product->Data[26+sw];
  6031  16D0  0020               	movlb	0	; select bank0
  6032  16D1  0864               	movf	Sw_DimmerOffFunc@sw,w
  6033  16D2  3E1A               	addlw	26
  6034  16D3  076E               	addwf	_Product,w
  6035  16D4  00E2               	movwf	??_Sw_DimmerOffFunc
  6036  16D5  0862               	movf	??_Sw_DimmerOffFunc,w
  6037  16D6  0086               	movwf	6
  6038  16D7  3001               	movlw	1	; select bank2/3
  6039  16D8  0087               	movwf	7
  6040  16D9  0801               	movf	1,w
  6041  16DA  00E3               	movwf	??_Sw_DimmerOffFunc+1
  6042  16DB  086E               	movf	_Product,w
  6043  16DC  3E11               	addlw	17
  6044  16DD  0086               	movwf	6
  6045  16DE  3001               	movlw	1	; select bank2/3
  6046  16DF  0087               	movwf	7
  6047  16E0  0863               	movf	??_Sw_DimmerOffFunc+1,w
  6048  16E1  0081               	movwf	1
  6049                           
  6050                           ;Switch_B1.c: 318: setRF_DimmerLights(sw,Sw->Status);
  6051  16E2  0878               	movf	_Sw,w
  6052  16E3  0086               	movwf	6
  6053  16E4  3001               	movlw	1	; select bank2/3
  6054  16E5  0087               	movwf	7
  6055  16E6  3000               	movlw	0
  6056  16E7  1B01               	btfsc	1,6
  6057  16E8  3001               	movlw	1
  6058  16E9  00DD               	movwf	setRF_DimmerLights@on
  6059  16EA  0864               	movf	Sw_DimmerOffFunc@sw,w
  6060  16EB  3195  2560  3196   	fcall	_setRF_DimmerLights
  6061                           
  6062                           ;Switch_B1.c: 319: setTxData(1);
  6063  16EE  3001               	movlw	1
  6064  16EF  3187  271C         	fcall	_setTxData
  6065                           
  6066                           ;Switch_B1.c: 321: }
  6067                           ;Switch_B1.c: 322: }
  6068  16F1  0008               	return
  6069  16F2                     l9061:	
  6070                           
  6071                           ;Switch_B1.c: 323: else
  6072                           ;Switch_B1.c: 324: {
  6073                           ;Switch_B1.c: 325: setDimmerLights_Trigger(sw,1);
  6074  16F2  0020               	movlb	0	; select bank0
  6075  16F3  01A2               	clrf	setDimmerLights_Trigger@command
  6076  16F4  0AA2               	incf	setDimmerLights_Trigger@command,f
  6077  16F5  0864               	movf	Sw_DimmerOffFunc@sw,w
  6078  16F6  319A  227D  3196   	fcall	_setDimmerLights_Trigger
  6079                           
  6080                           ;Switch_B1.c: 326: setDimmerLights_Switch(sw,0);
  6081  16F9  0020               	movlb	0	; select bank0
  6082  16FA  01A2               	clrf	setDimmerLights_Switch@command
  6083  16FB  0864               	movf	Sw_DimmerOffFunc@sw,w
  6084  16FC  319A  226D  3196   	fcall	_setDimmerLights_Switch
  6085                           
  6086                           ;Switch_B1.c: 328: setDelayOff_GO(sw,0,0);
  6087  16FF  0020               	movlb	0	; select bank0
  6088  1700  01A3               	clrf	setDelayOff_GO@command
  6089  1701  01A4               	clrf	setDelayOff_GO@value
  6090  1702  0864               	movf	Sw_DimmerOffFunc@sw,w
  6091  1703  3192  22C0  3196   	fcall	_setDelayOff_GO
  6092                           
  6093                           ;Switch_B1.c: 329: setRF_DimmerLights(sw,Sw->Status);
  6094  1706  0878               	movf	_Sw,w
  6095  1707  0086               	movwf	6
  6096  1708  3001               	movlw	1	; select bank2/3
  6097  1709  0087               	movwf	7
  6098  170A  3000               	movlw	0
  6099  170B  1B01               	btfsc	1,6
  6100  170C  3001               	movlw	1
  6101  170D  0020               	movlb	0	; select bank0
  6102  170E  00DD               	movwf	setRF_DimmerLights@on
  6103  170F  0864               	movf	Sw_DimmerOffFunc@sw,w
  6104  1710  3195  2560  3196   	fcall	_setRF_DimmerLights
  6105                           
  6106                           ;Switch_B1.c: 330: setTxData(1);
  6107  1713  3001               	movlw	1
  6108  1714  3187  271C         	fcall	_setTxData
  6109  1716  0008               	return
  6110  1717                     __end_of_Sw_DimmerOffFunc:	
  6111                           
  6112                           	psect	text17
  6113  1083                     __ptext17:	
  6114 ;; *************** function _Sw_DimmerAdjFunc *****************
  6115 ;; Defined at:
  6116 ;;		line 336 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Switch_B1.c"
  6117 ;; Parameters:    Size  Location     Type
  6118 ;;  sw              1    wreg     unsigned char 
  6119 ;; Auto vars:     Size  Location     Type
  6120 ;;  sw              1    5[BANK0 ] unsigned char 
  6121 ;;  Idle            1    4[BANK0 ] unsigned char 
  6122 ;; Return value:  Size  Location     Type
  6123 ;;		None               void
  6124 ;; Registers used:
  6125 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6126 ;; Tracked objects:
  6127 ;;		On entry : 0/0
  6128 ;;		On exit  : 0/0
  6129 ;;		Unchanged: 0/0
  6130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6131 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6132 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6134 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6135 ;;Total ram usage:        2 bytes
  6136 ;; Hardware stack levels used:    1
  6137 ;; Hardware stack levels required when called:    6
  6138 ;; This function calls:
  6139 ;;		_setDimmerLights_AdjGo
  6140 ;;		_setDimmerLights_TriggerAdj
  6141 ;;		_setRFSW_Status
  6142 ;; This function is called by:
  6143 ;;		_setSw_Main
  6144 ;; This function uses a non-reentrant model
  6145 ;;
  6146                           
  6147                           
  6148                           ;psect for function _Sw_DimmerAdjFunc
  6149  1083                     _Sw_DimmerAdjFunc:	
  6150                           
  6151                           ;incstack = 0
  6152                           ; Regs used in _Sw_DimmerAdjFunc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6153                           ;Sw_DimmerAdjFunc@sw stored from wreg
  6154  1083  0020               	movlb	0	; select bank0
  6155  1084  00A5               	movwf	Sw_DimmerAdjFunc@sw
  6156                           
  6157                           ;Switch_B1.c: 338: char Idle=1;
  6158  1085  01A4               	clrf	Sw_DimmerAdjFunc@Idle
  6159  1086  0AA4               	incf	Sw_DimmerAdjFunc@Idle,f
  6160                           
  6161                           ;Switch_B1.c: 355: if(sw == 1)
  6162  1087  0825               	movf	Sw_DimmerAdjFunc@sw,w
  6163  1088  3A01               	xorlw	1
  6164  1089  1D03               	skipz
  6165  108A  288D               	goto	l9027
  6166                           
  6167                           ;Switch_B1.c: 356: {
  6168                           ;Switch_B1.c: 357: Idle=(DimmerLights22->AdjGo)?0:1;
  6169  108B  086C               	movf	_DimmerLights22,w
  6170  108C  2892               	goto	L3
  6171  108D                     l9027:	
  6172                           ;Switch_B1.c: 358: }
  6173                           
  6174                           
  6175                           ;Switch_B1.c: 359: else if(sw == 2)
  6176  108D  0825               	movf	Sw_DimmerAdjFunc@sw,w
  6177  108E  3A02               	xorlw	2
  6178  108F  1D03               	skipz
  6179  1090  289D               	goto	l9031
  6180                           
  6181                           ;Switch_B1.c: 360: {
  6182                           ;Switch_B1.c: 361: Idle=(DimmerLights11->AdjGo)?0:1;
  6183  1091  086B               	movf	_DimmerLights11,w
  6184  1092                     L3:	
  6185  1092  3E09               	addlw	9
  6186  1093  0086               	movwf	6
  6187  1094  3001               	movlw	1	; select bank2/3
  6188  1095  0087               	movwf	7
  6189  1096  1003               	clrc
  6190  1097  1D01               	btfss	1,2
  6191  1098  1403               	setc
  6192  1099  3000               	movlw	0
  6193  109A  1803               	btfsc	3,0
  6194  109B  3001               	movlw	1
  6195  109C  00A4               	movwf	Sw_DimmerAdjFunc@Idle
  6196  109D                     l9031:	
  6197                           
  6198                           ;Switch_B1.c: 362: }
  6199                           ;Switch_B1.c: 365: if(Idle)
  6200  109D  0824               	movf	Sw_DimmerAdjFunc@Idle,w
  6201  109E  1903               	btfsc	3,2
  6202  109F  0008               	return
  6203                           
  6204                           ;Switch_B1.c: 366: {
  6205                           ;Switch_B1.c: 367: if(Sw->Flag)
  6206  10A0  0878               	movf	_Sw,w
  6207  10A1  0086               	movwf	6
  6208  10A2  3001               	movlw	1	; select bank2/3
  6209  10A3  0087               	movwf	7
  6210  10A4  1F81               	btfss	1,7
  6211  10A5  0008               	return
  6212                           
  6213                           ;Switch_B1.c: 368: {
  6214                           ;Switch_B1.c: 369: Sw->Adj=1;
  6215  10A6  0A78               	incf	_Sw,w
  6216  10A7  0086               	movwf	6
  6217  10A8  3001               	movlw	1	; select bank2/3
  6218  10A9  0087               	movwf	7
  6219  10AA  1401               	bsf	1,0
  6220                           
  6221                           ;Switch_B1.c: 370: Sw->Status=1;
  6222  10AB  0878               	movf	_Sw,w
  6223  10AC  0086               	movwf	6
  6224  10AD  3001               	movlw	1	; select bank2/3
  6225  10AE  0087               	movwf	7
  6226  10AF  1701               	bsf	1,6
  6227                           
  6228                           ;Switch_B1.c: 371: setRFSW_Status(sw,1);
  6229  10B0  01A2               	clrf	setRFSW_Status@command
  6230  10B1  0AA2               	incf	setRFSW_Status@command,f
  6231  10B2  0825               	movf	Sw_DimmerAdjFunc@sw,w
  6232  10B3  319A  223F  3190   	fcall	_setRFSW_Status
  6233                           
  6234                           ;Switch_B1.c: 373: setDimmerLights_TriggerAdj(sw,1);
  6235  10B6  0020               	movlb	0	; select bank0
  6236  10B7  01A2               	clrf	setDimmerLights_TriggerAdj@command
  6237  10B8  0AA2               	incf	setDimmerLights_TriggerAdj@command,f
  6238  10B9  0825               	movf	Sw_DimmerAdjFunc@sw,w
  6239  10BA  319A  22AD  3190   	fcall	_setDimmerLights_TriggerAdj
  6240                           
  6241                           ;Switch_B1.c: 374: setDimmerLights_AdjGo(sw,1);
  6242  10BD  0020               	movlb	0	; select bank0
  6243  10BE  01A2               	clrf	setDimmerLights_AdjGo@command
  6244  10BF  0AA2               	incf	setDimmerLights_AdjGo@command,f
  6245  10C0  0825               	movf	Sw_DimmerAdjFunc@sw,w
  6246  10C1  319A  229D         	fcall	_setDimmerLights_AdjGo
  6247  10C3  0020               	movlb	0	; select bank0
  6248  10C4  0008               	return
  6249  10C5                     __end_of_Sw_DimmerAdjFunc:	
  6250                           
  6251                           	psect	text18
  6252  1AAD                     __ptext18:	
  6253 ;; *************** function _setDimmerLights_TriggerAdj *****************
  6254 ;; Defined at:
  6255 ;;		line 450 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
  6256 ;; Parameters:    Size  Location     Type
  6257 ;;  lights          1    wreg     unsigned char 
  6258 ;;  command         1    2[BANK0 ] unsigned char 
  6259 ;; Auto vars:     Size  Location     Type
  6260 ;;  lights          1    3[BANK0 ] unsigned char 
  6261 ;; Return value:  Size  Location     Type
  6262 ;;		None               void
  6263 ;; Registers used:
  6264 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6265 ;; Tracked objects:
  6266 ;;		On entry : 0/0
  6267 ;;		On exit  : 0/0
  6268 ;;		Unchanged: 0/0
  6269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6270 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6271 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6273 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6274 ;;Total ram usage:        2 bytes
  6275 ;; Hardware stack levels used:    1
  6276 ;; Hardware stack levels required when called:    5
  6277 ;; This function calls:
  6278 ;;		_DimmerLightsPointSelect
  6279 ;; This function is called by:
  6280 ;;		_Sw_DimmerOffFunc
  6281 ;;		_Sw_DimmerAdjFunc
  6282 ;; This function uses a non-reentrant model
  6283 ;;
  6284                           
  6285                           
  6286                           ;psect for function _setDimmerLights_TriggerAdj
  6287  1AAD                     _setDimmerLights_TriggerAdj:	
  6288                           
  6289                           ;incstack = 0
  6290                           ; Regs used in _setDimmerLights_TriggerAdj: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  6291                           ;setDimmerLights_TriggerAdj@lights stored from wreg
  6292  1AAD  0020               	movlb	0	; select bank0
  6293  1AAE  00A3               	movwf	setDimmerLights_TriggerAdj@lights
  6294                           
  6295                           ;Dimmer_B1.c: 452: DimmerLightsPointSelect(lights);
  6296  1AAF  0823               	movf	setDimmerLights_TriggerAdj@lights,w
  6297  1AB0  319A  22CE         	fcall	_DimmerLightsPointSelect
  6298                           
  6299                           ;Dimmer_B1.c: 453: DimmerLights->TriggerAdj=command;
  6300  1AB2  0020               	movlb	0	; select bank0
  6301  1AB3  086A               	movf	_DimmerLights,w
  6302  1AB4  3E09               	addlw	9
  6303  1AB5  0086               	movwf	6
  6304  1AB6  3001               	movlw	1	; select bank2/3
  6305  1AB7  0087               	movwf	7
  6306  1AB8  0822               	movf	setDimmerLights_TriggerAdj@command,w
  6307  1AB9  1181               	bcf	1,3
  6308  1ABA  1D03               	skipz
  6309  1ABB  1581               	bsf	1,3
  6310  1ABC  0008               	return
  6311  1ABD                     __end_of_setDimmerLights_TriggerAdj:	
  6312                           
  6313                           	psect	text19
  6314  1A9D                     __ptext19:	
  6315 ;; *************** function _setDimmerLights_AdjGo *****************
  6316 ;; Defined at:
  6317 ;;		line 440 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
  6318 ;; Parameters:    Size  Location     Type
  6319 ;;  lights          1    wreg     unsigned char 
  6320 ;;  command         1    2[BANK0 ] unsigned char 
  6321 ;; Auto vars:     Size  Location     Type
  6322 ;;  lights          1    3[BANK0 ] unsigned char 
  6323 ;; Return value:  Size  Location     Type
  6324 ;;		None               void
  6325 ;; Registers used:
  6326 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6327 ;; Tracked objects:
  6328 ;;		On entry : 0/0
  6329 ;;		On exit  : 0/0
  6330 ;;		Unchanged: 0/0
  6331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6332 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6333 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6335 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6336 ;;Total ram usage:        2 bytes
  6337 ;; Hardware stack levels used:    1
  6338 ;; Hardware stack levels required when called:    5
  6339 ;; This function calls:
  6340 ;;		_DimmerLightsPointSelect
  6341 ;; This function is called by:
  6342 ;;		_Sw_DimmerOffFunc
  6343 ;;		_Sw_DimmerAdjFunc
  6344 ;; This function uses a non-reentrant model
  6345 ;;
  6346                           
  6347                           
  6348                           ;psect for function _setDimmerLights_AdjGo
  6349  1A9D                     _setDimmerLights_AdjGo:	
  6350                           
  6351                           ;incstack = 0
  6352                           ; Regs used in _setDimmerLights_AdjGo: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  6353                           ;setDimmerLights_AdjGo@lights stored from wreg
  6354  1A9D  0020               	movlb	0	; select bank0
  6355  1A9E  00A3               	movwf	setDimmerLights_AdjGo@lights
  6356                           
  6357                           ;Dimmer_B1.c: 442: DimmerLightsPointSelect(lights);
  6358  1A9F  0823               	movf	setDimmerLights_AdjGo@lights,w
  6359  1AA0  319A  22CE         	fcall	_DimmerLightsPointSelect
  6360                           
  6361                           ;Dimmer_B1.c: 443: DimmerLights->AdjGo=command;
  6362  1AA2  0020               	movlb	0	; select bank0
  6363  1AA3  086A               	movf	_DimmerLights,w
  6364  1AA4  3E09               	addlw	9
  6365  1AA5  0086               	movwf	6
  6366  1AA6  3001               	movlw	1	; select bank2/3
  6367  1AA7  0087               	movwf	7
  6368  1AA8  0822               	movf	setDimmerLights_AdjGo@command,w
  6369  1AA9  1101               	bcf	1,2
  6370  1AAA  1D03               	skipz
  6371  1AAB  1501               	bsf	1,2
  6372  1AAC  0008               	return
  6373  1AAD                     __end_of_setDimmerLights_AdjGo:	
  6374                           
  6375                           	psect	text20
  6376  1A16                     __ptext20:	
  6377 ;; *************** function _Switch_Initialization *****************
  6378 ;; Defined at:
  6379 ;;		line 38 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Switch_B1.c"
  6380 ;; Parameters:    Size  Location     Type
  6381 ;;		None
  6382 ;; Auto vars:     Size  Location     Type
  6383 ;;		None
  6384 ;; Return value:  Size  Location     Type
  6385 ;;		None               void
  6386 ;; Registers used:
  6387 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6388 ;; Tracked objects:
  6389 ;;		On entry : 0/0
  6390 ;;		On exit  : 0/0
  6391 ;;		Unchanged: 0/0
  6392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6393 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6394 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6395 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6396 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6397 ;;Total ram usage:        0 bytes
  6398 ;; Hardware stack levels used:    1
  6399 ;; Hardware stack levels required when called:    7
  6400 ;; This function calls:
  6401 ;;		_TouchPower
  6402 ;;		_setSw_Initialization
  6403 ;; This function is called by:
  6404 ;;		_main
  6405 ;; This function uses a non-reentrant model
  6406 ;;
  6407                           
  6408                           
  6409                           ;psect for function _Switch_Initialization
  6410  1A16                     _Switch_Initialization:	
  6411                           
  6412                           ;Switch_B1.c: 40: TouchPower();
  6413                           
  6414                           ;incstack = 0
  6415                           ; Regs used in _Switch_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  6416  1A16  3198  20FB  319A   	fcall	_TouchPower
  6417                           
  6418                           ;Switch_B1.c: 42: WPUB1=0;
  6419  1A19  0024               	movlb	4	; select bank4
  6420  1A1A  108D               	bcf	13,1	;volatile
  6421                           
  6422                           ;Switch_B1.c: 51: setSw_Initialization(1);
  6423  1A1B  3001               	movlw	1
  6424  1A1C  3199  213E  319A   	fcall	_setSw_Initialization
  6425                           
  6426                           ;Switch_B1.c: 54: setSw_Initialization(2);
  6427  1A1F  3002               	movlw	2
  6428  1A20  3199  213E         	fcall	_setSw_Initialization
  6429  1A22  0008               	return
  6430  1A23                     __end_of_Switch_Initialization:	
  6431                           
  6432                           	psect	text21
  6433  193E                     __ptext21:	
  6434 ;; *************** function _setSw_Initialization *****************
  6435 ;; Defined at:
  6436 ;;		line 78 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Switch_B1.c"
  6437 ;; Parameters:    Size  Location     Type
  6438 ;;  sw              1    wreg     unsigned char 
  6439 ;; Auto vars:     Size  Location     Type
  6440 ;;  sw              1    4[BANK0 ] unsigned char 
  6441 ;; Return value:  Size  Location     Type
  6442 ;;		None               void
  6443 ;; Registers used:
  6444 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6445 ;; Tracked objects:
  6446 ;;		On entry : 0/0
  6447 ;;		On exit  : 0/0
  6448 ;;		Unchanged: 0/0
  6449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6451 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6453 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6454 ;;Total ram usage:        1 bytes
  6455 ;; Hardware stack levels used:    1
  6456 ;; Hardware stack levels required when called:    6
  6457 ;; This function calls:
  6458 ;;		_setLED
  6459 ;; This function is called by:
  6460 ;;		_Switch_Initialization
  6461 ;; This function uses a non-reentrant model
  6462 ;;
  6463                           
  6464                           
  6465                           ;psect for function _setSw_Initialization
  6466  193E                     _setSw_Initialization:	
  6467                           
  6468                           ;incstack = 0
  6469                           ; Regs used in _setSw_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6470                           ;setSw_Initialization@sw stored from wreg
  6471  193E  0020               	movlb	0	; select bank0
  6472  193F  00A4               	movwf	setSw_Initialization@sw
  6473                           
  6474                           ;Switch_B1.c: 80: setLED(sw,1);
  6475  1940  01A2               	clrf	setLED@command
  6476  1941  0AA2               	incf	setLED@command,f
  6477  1942  0824               	movf	setSw_Initialization@sw,w
  6478  1943  3193  2373         	fcall	_setLED
  6479  1945  0008               	return
  6480  1946                     __end_of_setSw_Initialization:	
  6481                           
  6482                           	psect	text22
  6483  18FB                     __ptext22:	
  6484 ;; *************** function _TouchPower *****************
  6485 ;; Defined at:
  6486 ;;		line 9 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Switch_B1.c"
  6487 ;; Parameters:    Size  Location     Type
  6488 ;;		None
  6489 ;; Auto vars:     Size  Location     Type
  6490 ;;		None
  6491 ;; Return value:  Size  Location     Type
  6492 ;;		None               void
  6493 ;; Registers used:
  6494 ;;		None
  6495 ;; Tracked objects:
  6496 ;;		On entry : 0/0
  6497 ;;		On exit  : 0/0
  6498 ;;		Unchanged: 0/0
  6499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6500 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6501 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6503 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6504 ;;Total ram usage:        0 bytes
  6505 ;; Hardware stack levels used:    1
  6506 ;; Hardware stack levels required when called:    4
  6507 ;; This function calls:
  6508 ;;		Nothing
  6509 ;; This function is called by:
  6510 ;;		_Switch_Initialization
  6511 ;; This function uses a non-reentrant model
  6512 ;;
  6513                           
  6514                           
  6515                           ;psect for function _TouchPower
  6516  18FB                     _TouchPower:	
  6517  18FB                     l2817:	
  6518                           ;Switch_B1.c: 11: while(!RC5)
  6519                           
  6520                           ;incstack = 0
  6521                           ; Regs used in _TouchPower: []
  6522                           
  6523  18FB  0020               	movlb	0	; select bank0
  6524  18FC  1A8E               	btfsc	14,5	;volatile
  6525  18FD  0008               	return
  6526                           
  6527                           ;Switch_B1.c: 12: RC5=1;
  6528  18FE  168E               	bsf	14,5	;volatile
  6529  18FF  28FB               	goto	l2817
  6530  1900                     __end_of_TouchPower:	
  6531                           
  6532                           	psect	text23
  6533  18F7                     __ptext23:	
  6534 ;; *************** function _RF_Main *****************
  6535 ;; Defined at:
  6536 ;;		line 24 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
  6537 ;; Parameters:    Size  Location     Type
  6538 ;;		None
  6539 ;; Auto vars:     Size  Location     Type
  6540 ;;		None
  6541 ;; Return value:  Size  Location     Type
  6542 ;;		None               void
  6543 ;; Registers used:
  6544 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6545 ;; Tracked objects:
  6546 ;;		On entry : 0/0
  6547 ;;		On exit  : 0/0
  6548 ;;		Unchanged: 0/0
  6549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6553 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6554 ;;Total ram usage:        0 bytes
  6555 ;; Hardware stack levels used:    1
  6556 ;; Hardware stack levels required when called:   13
  6557 ;; This function calls:
  6558 ;;		_setRF_Main
  6559 ;; This function is called by:
  6560 ;;		_main
  6561 ;; This function uses a non-reentrant model
  6562 ;;
  6563                           
  6564                           
  6565                           ;psect for function _RF_Main
  6566  18F7                     _RF_Main:	
  6567                           
  6568                           ;RF_Control_B1.c: 27: setRF_Main(1);
  6569                           
  6570                           ;incstack = 0
  6571                           ; Regs used in _RF_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6572  18F7  3001               	movlw	1
  6573  18F8  318A  226E         	fcall	_setRF_Main
  6574  18FA  0008               	return
  6575  18FB                     __end_of_RF_Main:	
  6576                           
  6577                           	psect	text24
  6578  0A6E                     __ptext24:	
  6579 ;; *************** function _setRF_Main *****************
  6580 ;; Defined at:
  6581 ;;		line 58 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
  6582 ;; Parameters:    Size  Location     Type
  6583 ;;  rf              1    wreg     unsigned char 
  6584 ;; Auto vars:     Size  Location     Type
  6585 ;;  rf              1    0[BANK3 ] unsigned char 
  6586 ;; Return value:  Size  Location     Type
  6587 ;;		None               void
  6588 ;; Registers used:
  6589 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6590 ;; Tracked objects:
  6591 ;;		On entry : 0/0
  6592 ;;		On exit  : 0/0
  6593 ;;		Unchanged: 0/0
  6594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6595 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6596 ;;      Locals:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
  6597 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6598 ;;      Totals:         0       0       1       0       2       0       0       0       0       0       0       0       
      +0       0
  6599 ;;Total ram usage:        3 bytes
  6600 ;; Hardware stack levels used:    1
  6601 ;; Hardware stack levels required when called:   12
  6602 ;; This function calls:
  6603 ;;		_CC2500_RxData
  6604 ;;		_CC2500_TxData
  6605 ;;		_CC2500_WriteCommand
  6606 ;;		_RF_RxDisable
  6607 ;;		_RfPointSelect
  6608 ;;		_getRxData
  6609 ;;		_setINT_GO
  6610 ;; This function is called by:
  6611 ;;		_RF_Main
  6612 ;; This function uses a non-reentrant model
  6613 ;;
  6614                           
  6615                           
  6616                           ;psect for function _setRF_Main
  6617  0A6E                     _setRF_Main:	
  6618                           
  6619                           ;incstack = 0
  6620                           ; Regs used in _setRF_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6621                           ;setRF_Main@rf stored from wreg
  6622  0A6E  0023               	movlb	3	; select bank3
  6623  0A6F  00D1               	movwf	setRF_Main@rf^(0+384)
  6624                           
  6625                           ;RF_Control_B1.c: 60: RfPointSelect(rf);
  6626  0A70  0851               	movf	setRF_Main@rf^(0+384),w
  6627  0A71  3199  2188  318A   	fcall	_RfPointSelect
  6628                           
  6629                           ;RF_Control_B1.c: 61: if(RF->Enable)
  6630  0A74  0877               	movf	_RF,w
  6631  0A75  0086               	movwf	6
  6632  0A76  0187               	clrf	7
  6633  0A77  1C01               	btfss	1,0
  6634  0A78  0008               	return
  6635                           
  6636                           ;RF_Control_B1.c: 62: {
  6637                           ;RF_Control_B1.c: 69: RF->Key=((RA6 || RA4 || RA0 || RB1 ) && !RF->Learn)?1:0;
  6638  0A79  0023               	movlb	3	; select bank3
  6639  0A7A  01D2               	clrf	_setRF_Main$3911^(0+384)
  6640  0A7B  0020               	movlb	0	; select bank0
  6641  0A7C  1F0C               	btfss	12,6	;volatile
  6642  0A7D  1A0C               	btfsc	12,4	;volatile
  6643  0A7E  2A83               	goto	l9465
  6644  0A7F  180C               	btfsc	12,0	;volatile
  6645  0A80  2A83               	goto	l9465
  6646  0A81  1C8D               	btfss	13,1	;volatile
  6647  0A82  2A8B               	goto	l9469
  6648  0A83                     l9465:	
  6649  0A83  0877               	movf	_RF,w
  6650  0A84  0086               	movwf	6
  6651  0A85  0187               	clrf	7
  6652  0A86  1B01               	btfsc	1,6
  6653  0A87  2A8B               	goto	l9469
  6654  0A88  0023               	movlb	3	; select bank3
  6655  0A89  01D2               	clrf	_setRF_Main$3911^(0+384)
  6656  0A8A  0AD2               	incf	_setRF_Main$3911^(0+384),f
  6657  0A8B                     l9469:	
  6658  0A8B  0877               	movf	_RF,w
  6659  0A8C  0086               	movwf	6
  6660  0A8D  0187               	clrf	7
  6661  0A8E  0023               	movlb	3	; select bank3
  6662  0A8F  0852               	movf	_setRF_Main$3911^(0+384),w
  6663  0A90  1381               	bcf	1,7
  6664  0A91  1D03               	skipz
  6665  0A92  1781               	bsf	1,7
  6666                           
  6667                           ;RF_Control_B1.c: 77: if(!RF->Key)
  6668  0A93  0877               	movf	_RF,w
  6669  0A94  0086               	movwf	6
  6670  0A95  0187               	clrf	7
  6671  0A96  1B81               	btfsc	1,7
  6672  0A97  2AC4               	goto	l9491
  6673                           
  6674                           ;RF_Control_B1.c: 78: {
  6675                           ;RF_Control_B1.c: 79: if(RF->ReceiveGO)
  6676  0A98  0877               	movf	_RF,w
  6677  0A99  0086               	movwf	6
  6678  0A9A  0187               	clrf	7
  6679  0A9B  1C81               	btfss	1,1
  6680  0A9C  2AA9               	goto	l9479
  6681                           
  6682                           ;RF_Control_B1.c: 80: {
  6683                           ;RF_Control_B1.c: 81: RF->ReceiveGO=0;
  6684  0A9D  0877               	movf	_RF,w
  6685  0A9E  0086               	movwf	6
  6686  0A9F  0187               	clrf	7
  6687  0AA0  1081               	bcf	1,1
  6688                           
  6689                           ;RF_Control_B1.c: 82: CC2500_RxData();
  6690  0AA1  3194  2432  318A   	fcall	_CC2500_RxData
  6691                           
  6692                           ;RF_Control_B1.c: 89: getRxData(1);
  6693  0AA4  3001               	movlw	1
  6694  0AA5  3192  226E  318A   	fcall	_getRxData
  6695                           
  6696                           ;RF_Control_B1.c: 92: }
  6697  0AA8  2AC8               	goto	l9493
  6698  0AA9                     l9479:	
  6699                           
  6700                           ;RF_Control_B1.c: 93: else
  6701                           ;RF_Control_B1.c: 94: {
  6702                           ;RF_Control_B1.c: 95: if(!RF->TransceiveGO)
  6703  0AA9  0877               	movf	_RF,w
  6704  0AAA  0086               	movwf	6
  6705  0AAB  0187               	clrf	7
  6706  0AAC  1901               	btfsc	1,2
  6707  0AAD  2AC8               	goto	l9493
  6708                           
  6709                           ;RF_Control_B1.c: 96: {
  6710                           ;RF_Control_B1.c: 98: if(!RF->RxStatus)
  6711  0AAE  0877               	movf	_RF,w
  6712  0AAF  0086               	movwf	6
  6713  0AB0  0187               	clrf	7
  6714  0AB1  1981               	btfsc	1,3
  6715  0AB2  2AC8               	goto	l9493
  6716                           
  6717                           ;RF_Control_B1.c: 99: {
  6718                           ;RF_Control_B1.c: 100: RF->RxStatus=1;
  6719  0AB3  0877               	movf	_RF,w
  6720  0AB4  0086               	movwf	6
  6721  0AB5  0187               	clrf	7
  6722  0AB6  1581               	bsf	1,3
  6723                           
  6724                           ;RF_Control_B1.c: 101: CC2500_WriteCommand(0x36);
  6725  0AB7  3036               	movlw	54
  6726  0AB8  319A  225D  318A   	fcall	_CC2500_WriteCommand
  6727                           
  6728                           ;RF_Control_B1.c: 102: CC2500_WriteCommand(0x34);
  6729  0ABB  3034               	movlw	52
  6730  0ABC  319A  225D  318A   	fcall	_CC2500_WriteCommand
  6731                           
  6732                           ;RF_Control_B1.c: 103: setINT_GO(1);
  6733  0ABF  3001               	movlw	1
  6734  0AC0  3199  215F  318A   	fcall	_setINT_GO
  6735                           
  6736                           ;RF_Control_B1.c: 104: }
  6737                           ;RF_Control_B1.c: 106: }
  6738                           ;RF_Control_B1.c: 107: }
  6739                           ;RF_Control_B1.c: 108: }
  6740  0AC3  2AC8               	goto	l9493
  6741  0AC4                     l9491:	
  6742                           
  6743                           ;RF_Control_B1.c: 109: else
  6744                           ;RF_Control_B1.c: 110: {
  6745                           ;RF_Control_B1.c: 111: RF_RxDisable(1);
  6746  0AC4  3001               	movlw	1
  6747  0AC5  319D  25B4  318A   	fcall	_RF_RxDisable
  6748  0AC8                     l9493:	
  6749                           
  6750                           ;RF_Control_B1.c: 112: }
  6751                           ;RF_Control_B1.c: 113: if(RF->TransceiveGO)
  6752  0AC8  0877               	movf	_RF,w
  6753  0AC9  0086               	movwf	6
  6754  0ACA  0187               	clrf	7
  6755  0ACB  1D01               	btfss	1,2
  6756  0ACC  0008               	return
  6757                           
  6758                           ;RF_Control_B1.c: 114: {
  6759                           ;RF_Control_B1.c: 115: RF_RxDisable(1);
  6760  0ACD  3001               	movlw	1
  6761  0ACE  319D  25B4  318A   	fcall	_RF_RxDisable
  6762                           
  6763                           ;RF_Control_B1.c: 116: if(!RF->Debounce)
  6764  0AD1  0877               	movf	_RF,w
  6765  0AD2  0086               	movwf	6
  6766  0AD3  0187               	clrf	7
  6767  0AD4  1A81               	btfsc	1,5
  6768  0AD5  2AEE               	goto	l9507
  6769                           
  6770                           ;RF_Control_B1.c: 117: {
  6771                           ;RF_Control_B1.c: 118: RF->DebounceTime++;
  6772  0AD6  3001               	movlw	1
  6773  0AD7  0021               	movlb	1	; select bank1
  6774  0AD8  00EF               	movwf	??_setRF_Main^(0+128)
  6775  0AD9  0A77               	incf	_RF,w
  6776  0ADA  0086               	movwf	6
  6777  0ADB  0187               	clrf	7
  6778  0ADC  086F               	movf	??_setRF_Main^(0+128),w
  6779  0ADD  0781               	addwf	1,f
  6780                           
  6781                           ;RF_Control_B1.c: 119: if(RF->DebounceTime == 25)
  6782  0ADE  0A77               	incf	_RF,w
  6783  0ADF  0086               	movwf	6
  6784  0AE0  0187               	clrf	7
  6785  0AE1  0801               	movf	1,w
  6786  0AE2  3A19               	xorlw	25
  6787  0AE3  1D03               	skipz
  6788  0AE4  0008               	return
  6789                           
  6790                           ;RF_Control_B1.c: 120: {
  6791                           ;RF_Control_B1.c: 121: RF->DebounceTime=0;
  6792  0AE5  0A77               	incf	_RF,w
  6793  0AE6  0086               	movwf	6
  6794  0AE7  0187               	clrf	7
  6795  0AE8  0181               	clrf	1
  6796                           
  6797                           ;RF_Control_B1.c: 122: RF->Debounce=1;
  6798  0AE9  0877               	movf	_RF,w
  6799  0AEA  0086               	movwf	6
  6800  0AEB  0187               	clrf	7
  6801  0AEC  1681               	bsf	1,5
  6802                           
  6803                           ;RF_Control_B1.c: 123: }
  6804                           ;RF_Control_B1.c: 124: }
  6805  0AED  0008               	return
  6806  0AEE                     l9507:	
  6807                           
  6808                           ;RF_Control_B1.c: 125: else
  6809                           ;RF_Control_B1.c: 126: {
  6810                           ;RF_Control_B1.c: 127: RF->Debounce=0;
  6811  0AEE  0877               	movf	_RF,w
  6812  0AEF  0086               	movwf	6
  6813  0AF0  0187               	clrf	7
  6814  0AF1  1281               	bcf	1,5
  6815                           
  6816                           ;RF_Control_B1.c: 128: RF->TransceiveGO=0;
  6817  0AF2  0877               	movf	_RF,w
  6818  0AF3  0086               	movwf	6
  6819  0AF4  0187               	clrf	7
  6820  0AF5  1101               	bcf	1,2
  6821                           
  6822                           ;RF_Control_B1.c: 129: CC2500_TxData();
  6823  0AF6  3191  2107         	fcall	_CC2500_TxData
  6824  0AF8  0008               	return
  6825  0AF9                     __end_of_setRF_Main:	
  6826                           
  6827                           	psect	text25
  6828  126E                     __ptext25:	
  6829 ;; *************** function _getRxData *****************
  6830 ;; Defined at:
  6831 ;;		line 215 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
  6832 ;; Parameters:    Size  Location     Type
  6833 ;;  rf              1    wreg     unsigned char 
  6834 ;; Auto vars:     Size  Location     Type
  6835 ;;  rf              1    0[BANK1 ] unsigned char 
  6836 ;;  i               1    0        unsigned char 
  6837 ;; Return value:  Size  Location     Type
  6838 ;;		None               void
  6839 ;; Registers used:
  6840 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6841 ;; Tracked objects:
  6842 ;;		On entry : 0/0
  6843 ;;		On exit  : 0/0
  6844 ;;		Unchanged: 0/0
  6845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6847 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6849 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6850 ;;Total ram usage:        1 bytes
  6851 ;; Hardware stack levels used:    1
  6852 ;; Hardware stack levels required when called:   11
  6853 ;; This function calls:
  6854 ;;		_RfPointSelect
  6855 ;;		_setControl_Lights_Table
  6856 ;;		_setLog_Code
  6857 ;; This function is called by:
  6858 ;;		_setRF_Main
  6859 ;; This function uses a non-reentrant model
  6860 ;;
  6861                           
  6862                           
  6863                           ;psect for function _getRxData
  6864  126E                     _getRxData:	
  6865                           
  6866                           ;incstack = 0
  6867                           ; Regs used in _getRxData: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6868                           ;getRxData@rf stored from wreg
  6869  126E  0021               	movlb	1	; select bank1
  6870  126F  00EE               	movwf	getRxData@rf^(0+128)
  6871                           
  6872                           ;RF_Control_B1.c: 217: unsigned char i;
  6873                           ;RF_Control_B1.c: 218: RfPointSelect(rf);
  6874  1270  086E               	movf	getRxData@rf^(0+128),w
  6875  1271  3199  2188  3192   	fcall	_RfPointSelect
  6876                           
  6877                           ;RF_Control_B1.c: 219: if(RF->Learn)
  6878  1274  0877               	movf	_RF,w
  6879  1275  0086               	movwf	6
  6880  1276  0187               	clrf	7
  6881  1277  1F01               	btfss	1,6
  6882  1278  2A85               	goto	l8941
  6883                           
  6884                           ;RF_Control_B1.c: 220: {
  6885                           ;RF_Control_B1.c: 221: if(RF_Data[0] == 0x0 && RF_Data[1] == 0x64)
  6886  1279  0021               	movlb	1	; select bank1
  6887  127A  08A0               	movf	_RF_Data^(0+128),f
  6888  127B  1D03               	skipz
  6889  127C  0008               	return
  6890  127D  0821               	movf	(_RF_Data^(0+128)+1),w
  6891  127E  3A64               	xorlw	100
  6892  127F  1D03               	skipz
  6893  1280  0008               	return
  6894                           
  6895                           ;RF_Control_B1.c: 222: {
  6896                           ;RF_Control_B1.c: 223: setLog_Code(1);
  6897  1281  3001               	movlw	1
  6898  1282  3191  21D6         	fcall	_setLog_Code
  6899                           
  6900                           ;RF_Control_B1.c: 224: }
  6901                           ;RF_Control_B1.c: 225: }
  6902  1284  0008               	return
  6903  1285                     l8941:	
  6904                           
  6905                           ;RF_Control_B1.c: 226: else
  6906                           ;RF_Control_B1.c: 227: {
  6907                           ;RF_Control_B1.c: 228: if(RF_Data[0] == 0x00 && RF_Data[1] == 0x02)
  6908  1285  0021               	movlb	1	; select bank1
  6909  1286  08A0               	movf	_RF_Data^(0+128),f
  6910  1287  1D03               	skipz
  6911  1288  0008               	return
  6912  1289  0821               	movf	(_RF_Data^(0+128)+1),w
  6913  128A  3A02               	xorlw	2
  6914  128B  1D03               	skipz
  6915  128C  0008               	return
  6916                           
  6917                           ;RF_Control_B1.c: 229: {
  6918                           ;RF_Control_B1.c: 230: if(RF_Data[12] == 0xff && RF_Data[13] == 0xff && RF_Data[14] == 0
      +                          xff)
  6919  128D  082C               	movf	(_RF_Data^(0+128)+12),w
  6920  128E  3AFF               	xorlw	255
  6921  128F  1D03               	skipz
  6922  1290  2A9B               	goto	l8953
  6923  1291  082D               	movf	(_RF_Data^(0+128)+13),w
  6924  1292  3AFF               	xorlw	255
  6925  1293  1D03               	skipz
  6926  1294  2A9B               	goto	l8953
  6927  1295  082E               	movf	(_RF_Data^(0+128)+14),w
  6928  1296  3AFF               	xorlw	255
  6929  1297  1D03               	skipz
  6930  1298  2A9B               	goto	l8953
  6931                           
  6932                           ;RF_Control_B1.c: 231: {
  6933                           ;RF_Control_B1.c: 232: __nop();
  6934  1299  0000               	nop
  6935                           
  6936                           ;RF_Control_B1.c: 233: }
  6937  129A  0008               	return
  6938  129B                     l8953:	
  6939                           
  6940                           ;RF_Control_B1.c: 234: else
  6941                           ;RF_Control_B1.c: 235: {
  6942                           ;RF_Control_B1.c: 236: if(RF_Data[12] == Product->Data[12] && RF_Data[13] == Product->Da
      +                          ta[13] && RF_Data[14] == Product->Data[14])
  6943  129B  0020               	movlb	0	; select bank0
  6944  129C  086E               	movf	_Product,w
  6945  129D  3E0C               	addlw	12
  6946  129E  0086               	movwf	6
  6947  129F  3001               	movlw	1	; select bank2/3
  6948  12A0  0087               	movwf	7
  6949  12A1  0021               	movlb	1	; select bank1
  6950  12A2  082C               	movf	(_RF_Data^(0+128)+12),w
  6951  12A3  0601               	xorwf	1,w
  6952  12A4  1D03               	skipz
  6953  12A5  0008               	return
  6954  12A6  0020               	movlb	0	; select bank0
  6955  12A7  086E               	movf	_Product,w
  6956  12A8  3E0D               	addlw	13
  6957  12A9  0086               	movwf	6
  6958  12AA  3001               	movlw	1	; select bank2/3
  6959  12AB  0087               	movwf	7
  6960  12AC  0021               	movlb	1	; select bank1
  6961  12AD  082D               	movf	(_RF_Data^(0+128)+13),w
  6962  12AE  0601               	xorwf	1,w
  6963  12AF  1D03               	skipz
  6964  12B0  0008               	return
  6965  12B1  0020               	movlb	0	; select bank0
  6966  12B2  086E               	movf	_Product,w
  6967  12B3  3E0E               	addlw	14
  6968  12B4  0086               	movwf	6
  6969  12B5  3001               	movlw	1	; select bank2/3
  6970  12B6  0087               	movwf	7
  6971  12B7  0021               	movlb	1	; select bank1
  6972  12B8  082E               	movf	(_RF_Data^(0+128)+14),w
  6973  12B9  0601               	xorwf	1,w
  6974  12BA  1D03               	skipz
  6975  12BB  0008               	return
  6976                           
  6977                           ;RF_Control_B1.c: 237: {
  6978                           ;RF_Control_B1.c: 238: setControl_Lights_Table(1);
  6979  12BC  3001               	movlw	1
  6980  12BD  318B  2389         	fcall	_setControl_Lights_Table
  6981                           
  6982                           ;RF_Control_B1.c: 247: {
  6983                           ;RF_Control_B1.c: 248: ;
  6984                           
  6985                           ;RF_Control_B1.c: 243: {
  6986                           ;RF_Control_B1.c: 244: ;
  6987                           ;RF_Control_B1.c: 245: }
  6988                           
  6989                           ;RF_Control_B1.c: 239: }
  6990                           ;RF_Control_B1.c: 240: }
  6991                           ;RF_Control_B1.c: 241: }
  6992  12BF  0008               	return
  6993  12C0                     __end_of_getRxData:	
  6994                           
  6995                           	psect	text26
  6996  11D6                     __ptext26:	
  6997 ;; *************** function _setLog_Code *****************
  6998 ;; Defined at:
  6999 ;;		line 257 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
  7000 ;; Parameters:    Size  Location     Type
  7001 ;;  rf              1    wreg     unsigned char 
  7002 ;; Auto vars:     Size  Location     Type
  7003 ;;  rf              1   11[BANK0 ] unsigned char 
  7004 ;; Return value:  Size  Location     Type
  7005 ;;		None               void
  7006 ;; Registers used:
  7007 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7008 ;; Tracked objects:
  7009 ;;		On entry : 0/0
  7010 ;;		On exit  : 0/0
  7011 ;;		Unchanged: 0/0
  7012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7014 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7015 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7016 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7017 ;;Total ram usage:        2 bytes
  7018 ;; Hardware stack levels used:    1
  7019 ;; Hardware stack levels required when called:    6
  7020 ;; This function calls:
  7021 ;;		_RfPointSelect
  7022 ;;		_setBuz
  7023 ;; This function is called by:
  7024 ;;		_getRxData
  7025 ;; This function uses a non-reentrant model
  7026 ;;
  7027                           
  7028                           
  7029                           ;psect for function _setLog_Code
  7030  11D6                     _setLog_Code:	
  7031                           
  7032                           ;incstack = 0
  7033                           ; Regs used in _setLog_Code: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7034                           ;setLog_Code@rf stored from wreg
  7035  11D6  0020               	movlb	0	; select bank0
  7036  11D7  00AB               	movwf	setLog_Code@rf
  7037                           
  7038                           ;RF_Control_B1.c: 259: RfPointSelect(rf);
  7039  11D8  082B               	movf	setLog_Code@rf,w
  7040  11D9  3199  2188  3191   	fcall	_RfPointSelect
  7041                           
  7042                           ;RF_Control_B1.c: 260: Product->Data[12]=RF_Data[12];
  7043  11DC  0021               	movlb	1	; select bank1
  7044  11DD  082C               	movf	(_RF_Data^(0+128)+12),w
  7045  11DE  0020               	movlb	0	; select bank0
  7046  11DF  00AA               	movwf	??_setLog_Code
  7047  11E0  086E               	movf	_Product,w
  7048  11E1  3E0C               	addlw	12
  7049  11E2  0086               	movwf	6
  7050  11E3  3001               	movlw	1	; select bank2/3
  7051  11E4  0087               	movwf	7
  7052  11E5  082A               	movf	??_setLog_Code,w
  7053  11E6  0081               	movwf	1
  7054                           
  7055                           ;RF_Control_B1.c: 261: Product->Data[13]=RF_Data[13];
  7056  11E7  0021               	movlb	1	; select bank1
  7057  11E8  082D               	movf	(_RF_Data^(0+128)+13),w
  7058  11E9  0020               	movlb	0	; select bank0
  7059  11EA  00AA               	movwf	??_setLog_Code
  7060  11EB  086E               	movf	_Product,w
  7061  11EC  3E0D               	addlw	13
  7062  11ED  0086               	movwf	6
  7063  11EE  3001               	movlw	1	; select bank2/3
  7064  11EF  0087               	movwf	7
  7065  11F0  082A               	movf	??_setLog_Code,w
  7066  11F1  0081               	movwf	1
  7067                           
  7068                           ;RF_Control_B1.c: 262: Product->Data[14]=RF_Data[14];
  7069  11F2  0021               	movlb	1	; select bank1
  7070  11F3  082E               	movf	(_RF_Data^(0+128)+14),w
  7071  11F4  0020               	movlb	0	; select bank0
  7072  11F5  00AA               	movwf	??_setLog_Code
  7073  11F6  086E               	movf	_Product,w
  7074  11F7  3E0E               	addlw	14
  7075  11F8  0086               	movwf	6
  7076  11F9  3001               	movlw	1	; select bank2/3
  7077  11FA  0087               	movwf	7
  7078  11FB  082A               	movf	??_setLog_Code,w
  7079  11FC  0081               	movwf	1
  7080                           
  7081                           ;RF_Control_B1.c: 263: setBuz(1,100);
  7082  11FD  3064               	movlw	100
  7083  11FE  00A6               	movwf	setBuz@time
  7084  11FF  3000               	movlw	0
  7085  1200  00A7               	movwf	setBuz@time+1
  7086  1201  3001               	movlw	1
  7087  1202  3197  2789  3191   	fcall	_setBuz
  7088                           
  7089                           ;RF_Control_B1.c: 264: RF->Learn=0;
  7090  1205  0877               	movf	_RF,w
  7091  1206  0086               	movwf	6
  7092  1207  0187               	clrf	7
  7093  1208  1301               	bcf	1,6
  7094                           
  7095                           ;RF_Control_B1.c: 265: if(TMain->First)
  7096  1209  0020               	movlb	0	; select bank0
  7097  120A  086F               	movf	_TMain,w
  7098  120B  3E03               	addlw	3
  7099  120C  0086               	movwf	6
  7100  120D  3001               	movlw	1	; select bank2/3
  7101  120E  0087               	movwf	7
  7102  120F  1C81               	btfss	1,1
  7103  1210  2A17               	goto	l2603
  7104                           
  7105                           ;RF_Control_B1.c: 266: {
  7106                           ;RF_Control_B1.c: 267: Memory->LoopSave=1;
  7107  1211  086D               	movf	_Memory,w
  7108  1212  3E22               	addlw	34
  7109  1213  0086               	movwf	6
  7110  1214  3002               	movlw	2	; select bank4/5
  7111  1215  0087               	movwf	7
  7112  1216  1501               	bsf	1,2
  7113  1217                     l2603:	
  7114                           
  7115                           ;RF_Control_B1.c: 268: }
  7116                           ;RF_Control_B1.c: 269: Memory->Modify=1;
  7117  1217  086D               	movf	_Memory,w
  7118  1218  3E22               	addlw	34
  7119  1219  0086               	movwf	6
  7120  121A  3002               	movlw	2	; select bank4/5
  7121  121B  0087               	movwf	7
  7122  121C  1401               	bsf	1,0
  7123  121D  0008               	return
  7124  121E                     __end_of_setLog_Code:	
  7125                           
  7126                           	psect	text27
  7127  0B89                     __ptext27:	
  7128 ;; *************** function _setControl_Lights_Table *****************
  7129 ;; Defined at:
  7130 ;;		line 272 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
  7131 ;; Parameters:    Size  Location     Type
  7132 ;;  rf              1    wreg     unsigned char 
  7133 ;; Auto vars:     Size  Location     Type
  7134 ;;  rf              1   71[BANK0 ] unsigned char 
  7135 ;; Return value:  Size  Location     Type
  7136 ;;		None               void
  7137 ;; Registers used:
  7138 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7139 ;; Tracked objects:
  7140 ;;		On entry : 0/0
  7141 ;;		On exit  : 0/0
  7142 ;;		Unchanged: 0/0
  7143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7144 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7145 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7147 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7148 ;;Total ram usage:        1 bytes
  7149 ;; Hardware stack levels used:    1
  7150 ;; Hardware stack levels required when called:   10
  7151 ;; This function calls:
  7152 ;;		_RfPointSelect
  7153 ;;		_setBuz
  7154 ;;		_setDimmerLights
  7155 ;;		_setRFSW_AdjControl
  7156 ;;		_setRFSW_Control
  7157 ;;		_setRFSW_Status
  7158 ;;		_setSw_Status
  7159 ;;		_setTxData
  7160 ;; This function is called by:
  7161 ;;		_getRxData
  7162 ;; This function uses a non-reentrant model
  7163 ;;
  7164                           
  7165                           
  7166                           ;psect for function _setControl_Lights_Table
  7167  0B89                     _setControl_Lights_Table:	
  7168                           
  7169                           ;incstack = 0
  7170                           ; Regs used in _setControl_Lights_Table: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
  7171                           ;setControl_Lights_Table@rf stored from wreg
  7172  0B89  0020               	movlb	0	; select bank0
  7173  0B8A  00E7               	movwf	setControl_Lights_Table@rf
  7174                           
  7175                           ;RF_Control_B1.c: 274: RfPointSelect(rf);
  7176  0B8B  0867               	movf	setControl_Lights_Table@rf,w
  7177  0B8C  3199  2188  318B   	fcall	_RfPointSelect
  7178                           
  7179                           ;RF_Control_B1.c: 275: if(RF_Data[15] == 0x00)
  7180  0B8F  0021               	movlb	1	; select bank1
  7181  0B90  08AF               	movf	(_RF_Data^(0+128)+15),f
  7182  0B91  1D03               	skipz
  7183  0B92  2BDC               	goto	l8711
  7184                           
  7185                           ;RF_Control_B1.c: 276: {
  7186                           ;RF_Control_B1.c: 278: setDimmerLights(1,0);
  7187  0B93  0020               	movlb	0	; select bank0
  7188  0B94  01A4               	clrf	setDimmerLights@status
  7189  0B95  3001               	movlw	1
  7190  0B96  3189  21E5  318B   	fcall	_setDimmerLights
  7191                           
  7192                           ;RF_Control_B1.c: 279: setRFSW_Status(1,0);
  7193  0B99  0020               	movlb	0	; select bank0
  7194  0B9A  01A2               	clrf	setRFSW_Status@command
  7195  0B9B  3001               	movlw	1
  7196  0B9C  319A  223F  318B   	fcall	_setRFSW_Status
  7197                           
  7198                           ;RF_Control_B1.c: 280: setSw_Status(1,0);
  7199  0B9F  0020               	movlb	0	; select bank0
  7200  0BA0  01A2               	clrf	setSw_Status@command
  7201  0BA1  3001               	movlw	1
  7202  0BA2  319A  224E  318B   	fcall	_setSw_Status
  7203                           
  7204                           ;RF_Control_B1.c: 283: setDimmerLights(2,0);
  7205  0BA5  0020               	movlb	0	; select bank0
  7206  0BA6  01A4               	clrf	setDimmerLights@status
  7207  0BA7  3002               	movlw	2
  7208  0BA8  3189  21E5  318B   	fcall	_setDimmerLights
  7209                           
  7210                           ;RF_Control_B1.c: 284: setRFSW_Status(2,0);
  7211  0BAB  0020               	movlb	0	; select bank0
  7212  0BAC  01A2               	clrf	setRFSW_Status@command
  7213  0BAD  3002               	movlw	2
  7214  0BAE  319A  223F  318B   	fcall	_setRFSW_Status
  7215                           
  7216                           ;RF_Control_B1.c: 285: setSw_Status(2,0);
  7217  0BB1  0020               	movlb	0	; select bank0
  7218  0BB2  01A2               	clrf	setSw_Status@command
  7219  0BB3  3002               	movlw	2
  7220  0BB4  319A  224E  318B   	fcall	_setSw_Status
  7221                           
  7222                           ;RF_Control_B1.c: 293: Product->Data[9]=0;
  7223  0BB7  0020               	movlb	0	; select bank0
  7224  0BB8  086E               	movf	_Product,w
  7225  0BB9  3E09               	addlw	9
  7226  0BBA  0086               	movwf	6
  7227  0BBB  3001               	movlw	1	; select bank2/3
  7228  0BBC  0087               	movwf	7
  7229  0BBD  0181               	clrf	1
  7230                           
  7231                           ;RF_Control_B1.c: 294: Product->Data[11]=0;
  7232  0BBE  086E               	movf	_Product,w
  7233  0BBF  3E0B               	addlw	11
  7234  0BC0  0086               	movwf	6
  7235  0BC1  3001               	movlw	1	; select bank2/3
  7236  0BC2  0087               	movwf	7
  7237  0BC3  0181               	clrf	1
  7238                           
  7239                           ;RF_Control_B1.c: 295: Product->Data[15]=0;
  7240  0BC4  086E               	movf	_Product,w
  7241  0BC5  3E0F               	addlw	15
  7242  0BC6  0086               	movwf	6
  7243  0BC7  3001               	movlw	1	; select bank2/3
  7244  0BC8  0087               	movwf	7
  7245  0BC9  0181               	clrf	1
  7246                           
  7247                           ;RF_Control_B1.c: 296: Product->Data[17]=0;
  7248  0BCA  086E               	movf	_Product,w
  7249  0BCB  3E11               	addlw	17
  7250  0BCC  0086               	movwf	6
  7251  0BCD  3001               	movlw	1	; select bank2/3
  7252  0BCE  0087               	movwf	7
  7253  0BCF  0181               	clrf	1
  7254                           
  7255                           ;RF_Control_B1.c: 297: setBuz(1,100);
  7256  0BD0  3064               	movlw	100
  7257  0BD1  00A6               	movwf	setBuz@time
  7258  0BD2  3000               	movlw	0
  7259  0BD3  00A7               	movwf	setBuz@time+1
  7260  0BD4  3001               	movlw	1
  7261  0BD5  3197  2789  318B   	fcall	_setBuz
  7262                           
  7263                           ;RF_Control_B1.c: 298: setTxData(1);
  7264  0BD8  3001               	movlw	1
  7265  0BD9  3187  271C         	fcall	_setTxData
  7266                           
  7267                           ;RF_Control_B1.c: 299: }
  7268  0BDB  0008               	return
  7269  0BDC                     l8711:	
  7270                           
  7271                           ;RF_Control_B1.c: 300: else if(RF_Data[15] == 0x20)
  7272  0BDC  0021               	movlb	1	; select bank1
  7273  0BDD  082F               	movf	(_RF_Data^(0+128)+15),w
  7274  0BDE  3A20               	xorlw	32
  7275  0BDF  1D03               	skipz
  7276  0BE0  2BF8               	goto	l8717
  7277                           
  7278                           ;RF_Control_B1.c: 301: {
  7279                           ;RF_Control_B1.c: 302: Product->Data[9]=0;
  7280  0BE1  0020               	movlb	0	; select bank0
  7281  0BE2  086E               	movf	_Product,w
  7282  0BE3  3E09               	addlw	9
  7283  0BE4  0086               	movwf	6
  7284  0BE5  3001               	movlw	1	; select bank2/3
  7285  0BE6  0087               	movwf	7
  7286  0BE7  0181               	clrf	1
  7287                           
  7288                           ;RF_Control_B1.c: 303: Product->Data[11]=0;
  7289  0BE8  086E               	movf	_Product,w
  7290  0BE9  3E0B               	addlw	11
  7291  0BEA  0086               	movwf	6
  7292  0BEB  3001               	movlw	1	; select bank2/3
  7293  0BEC  0087               	movwf	7
  7294  0BED  0181               	clrf	1
  7295                           
  7296                           ;RF_Control_B1.c: 304: Product->Data[17]=0;
  7297  0BEE  086E               	movf	_Product,w
  7298  0BEF  3E11               	addlw	17
  7299  0BF0  0086               	movwf	6
  7300  0BF1  3001               	movlw	1	; select bank2/3
  7301  0BF2  0087               	movwf	7
  7302  0BF3  0181               	clrf	1
  7303                           
  7304                           ;RF_Control_B1.c: 305: setTxData(1);
  7305  0BF4  3001               	movlw	1
  7306  0BF5  3187  271C         	fcall	_setTxData
  7307                           
  7308                           ;RF_Control_B1.c: 306: }
  7309  0BF7  0008               	return
  7310  0BF8                     l8717:	
  7311                           
  7312                           ;RF_Control_B1.c: 308: else if(RF_Data[15] == 0x01)
  7313  0BF8  0021               	movlb	1	; select bank1
  7314  0BF9  082F               	movf	(_RF_Data^(0+128)+15),w
  7315  0BFA  3A01               	xorlw	1
  7316  0BFB  1D03               	skipz
  7317  0BFC  2C01               	goto	l8721
  7318                           
  7319                           ;RF_Control_B1.c: 309: {
  7320                           ;RF_Control_B1.c: 310: setRFSW_Control(1);
  7321  0BFD  3001               	movlw	1
  7322  0BFE  318A  22F9         	fcall	_setRFSW_Control
  7323                           
  7324                           ;RF_Control_B1.c: 311: }
  7325  0C00  0008               	return
  7326  0C01                     l8721:	
  7327                           
  7328                           ;RF_Control_B1.c: 313: else if(RF_Data[15] == 0x11)
  7329  0C01  0021               	movlb	1	; select bank1
  7330  0C02  082F               	movf	(_RF_Data^(0+128)+15),w
  7331  0C03  3A11               	xorlw	17
  7332  0C04  1D03               	skipz
  7333  0C05  2C0A               	goto	l8725
  7334                           
  7335                           ;RF_Control_B1.c: 314: {
  7336                           ;RF_Control_B1.c: 315: setRFSW_AdjControl(1);
  7337  0C06  3001               	movlw	1
  7338  0C07  3190  2002         	fcall	_setRFSW_AdjControl
  7339                           
  7340                           ;RF_Control_B1.c: 316: }
  7341  0C09  0008               	return
  7342  0C0A                     l8725:	
  7343                           
  7344                           ;RF_Control_B1.c: 321: else if(RF_Data[15] == 0x02)
  7345  0C0A  0021               	movlb	1	; select bank1
  7346  0C0B  082F               	movf	(_RF_Data^(0+128)+15),w
  7347  0C0C  3A02               	xorlw	2
  7348  0C0D  1D03               	skipz
  7349  0C0E  2C13               	goto	l8729
  7350                           
  7351                           ;RF_Control_B1.c: 322: {
  7352                           ;RF_Control_B1.c: 323: setRFSW_Control(2);
  7353  0C0F  3002               	movlw	2
  7354  0C10  318A  22F9         	fcall	_setRFSW_Control
  7355                           
  7356                           ;RF_Control_B1.c: 324: }
  7357  0C12  0008               	return
  7358  0C13                     l8729:	
  7359                           
  7360                           ;RF_Control_B1.c: 326: else if(RF_Data[15] == 0x21)
  7361  0C13  0021               	movlb	1	; select bank1
  7362  0C14  082F               	movf	(_RF_Data^(0+128)+15),w
  7363  0C15  3A21               	xorlw	33
  7364  0C16  1D03               	skipz
  7365  0C17  0008               	return
  7366                           
  7367                           ;RF_Control_B1.c: 327: {
  7368                           ;RF_Control_B1.c: 328: setRFSW_AdjControl(2);
  7369  0C18  3002               	movlw	2
  7370  0C19  3190  2002         	fcall	_setRFSW_AdjControl
  7371  0C1B  0008               	return
  7372  0C1C                     __end_of_setControl_Lights_Table:	
  7373                           
  7374                           	psect	text28
  7375  0AF9                     __ptext28:	
  7376 ;; *************** function _setRFSW_Control *****************
  7377 ;; Defined at:
  7378 ;;		line 369 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
  7379 ;; Parameters:    Size  Location     Type
  7380 ;;  sw              1    wreg     unsigned char 
  7381 ;; Auto vars:     Size  Location     Type
  7382 ;;  sw              1   67[BANK0 ] unsigned char 
  7383 ;; Return value:  Size  Location     Type
  7384 ;;		None               void
  7385 ;; Registers used:
  7386 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7387 ;; Tracked objects:
  7388 ;;		On entry : 0/0
  7389 ;;		On exit  : 0/0
  7390 ;;		Unchanged: 0/0
  7391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7393 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7394 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7395 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7396 ;;Total ram usage:        2 bytes
  7397 ;; Hardware stack levels used:    1
  7398 ;; Hardware stack levels required when called:    8
  7399 ;; This function calls:
  7400 ;;		_RfSWPointSelect
  7401 ;;		_setBuz
  7402 ;;		_setDelayOff_GO
  7403 ;;		_setDimmerLights_Switch
  7404 ;;		_setDimmerLights_Trigger
  7405 ;;		_setRF_DimmerLights
  7406 ;;		_setSw_Status
  7407 ;;		_setTxData
  7408 ;; This function is called by:
  7409 ;;		_setControl_Lights_Table
  7410 ;; This function uses a non-reentrant model
  7411 ;;
  7412                           
  7413                           
  7414                           ;psect for function _setRFSW_Control
  7415  0AF9                     _setRFSW_Control:	
  7416                           
  7417                           ;incstack = 0
  7418                           ; Regs used in _setRFSW_Control: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7419                           ;setRFSW_Control@sw stored from wreg
  7420  0AF9  0020               	movlb	0	; select bank0
  7421  0AFA  00E3               	movwf	setRFSW_Control@sw
  7422                           
  7423                           ;RF_Control_B1.c: 371: RfSWPointSelect(sw);
  7424  0AFB  0863               	movf	setRFSW_Control@sw,w
  7425  0AFC  319B  2346  318A   	fcall	_RfSWPointSelect
  7426                           
  7427                           ;RF_Control_B1.c: 372: if(!RFSW->Status)
  7428  0AFF  0021               	movlb	1	; select bank1
  7429  0B00  083B               	movf	_RFSW^(0+128),w
  7430  0B01  0086               	movwf	6
  7431  0B02  0187               	clrf	7
  7432  0B03  1801               	btfsc	1,0
  7433  0B04  2B3A               	goto	l8569
  7434                           
  7435                           ;RF_Control_B1.c: 373: {
  7436                           ;RF_Control_B1.c: 374: if(RF_Data[16] == 0x80)
  7437  0B05  0830               	movf	(_RF_Data^(0+128)+16),w
  7438  0B06  3A80               	xorlw	128
  7439  0B07  1D03               	skipz
  7440  0B08  2B16               	goto	l8559
  7441                           
  7442                           ;RF_Control_B1.c: 375: {
  7443                           ;RF_Control_B1.c: 376: setDelayOff_GO(sw,1,RF_Data[17]);
  7444  0B09  0020               	movlb	0	; select bank0
  7445  0B0A  01A3               	clrf	setDelayOff_GO@command
  7446  0B0B  0AA3               	incf	setDelayOff_GO@command,f
  7447  0B0C  0021               	movlb	1	; select bank1
  7448  0B0D  0831               	movf	(_RF_Data^(0+128)+17),w
  7449  0B0E  0020               	movlb	0	; select bank0
  7450  0B0F  00E2               	movwf	??_setRFSW_Control
  7451  0B10  0862               	movf	??_setRFSW_Control,w
  7452  0B11  00A4               	movwf	setDelayOff_GO@value
  7453  0B12  0863               	movf	setRFSW_Control@sw,w
  7454  0B13  3192  22C0  318A   	fcall	_setDelayOff_GO
  7455  0B16                     l8559:	
  7456                           
  7457                           ;RF_Control_B1.c: 377: }
  7458                           ;RF_Control_B1.c: 378: RFSW->Status=1;
  7459  0B16  0021               	movlb	1	; select bank1
  7460  0B17  083B               	movf	_RFSW^(0+128),w
  7461  0B18  0086               	movwf	6
  7462  0B19  0187               	clrf	7
  7463  0B1A  1401               	bsf	1,0
  7464                           
  7465                           ;RF_Control_B1.c: 379: setSw_Status(sw,1);
  7466  0B1B  0020               	movlb	0	; select bank0
  7467  0B1C  01A2               	clrf	setSw_Status@command
  7468  0B1D  0AA2               	incf	setSw_Status@command,f
  7469  0B1E  0863               	movf	setRFSW_Control@sw,w
  7470  0B1F  319A  224E  318A   	fcall	_setSw_Status
  7471                           
  7472                           ;RF_Control_B1.c: 381: setDimmerLights_Trigger(sw,1);
  7473  0B22  0020               	movlb	0	; select bank0
  7474  0B23  01A2               	clrf	setDimmerLights_Trigger@command
  7475  0B24  0AA2               	incf	setDimmerLights_Trigger@command,f
  7476  0B25  0863               	movf	setRFSW_Control@sw,w
  7477  0B26  319A  227D  318A   	fcall	_setDimmerLights_Trigger
  7478                           
  7479                           ;RF_Control_B1.c: 382: setDimmerLights_Switch(sw,1);
  7480  0B29  0020               	movlb	0	; select bank0
  7481  0B2A  01A2               	clrf	setDimmerLights_Switch@command
  7482  0B2B  0AA2               	incf	setDimmerLights_Switch@command,f
  7483  0B2C  0863               	movf	setRFSW_Control@sw,w
  7484  0B2D  319A  226D  318A   	fcall	_setDimmerLights_Switch
  7485                           
  7486                           ;RF_Control_B1.c: 384: setRF_DimmerLights(sw,RFSW->Status);
  7487  0B30  0021               	movlb	1	; select bank1
  7488  0B31  083B               	movf	_RFSW^(0+128),w
  7489  0B32  0086               	movwf	6
  7490  0B33  0187               	clrf	7
  7491  0B34  3000               	movlw	0
  7492  0B35  1801               	btfsc	1,0
  7493  0B36  3001               	movlw	1
  7494  0B37  0020               	movlb	0	; select bank0
  7495  0B38  00DD               	movwf	setRF_DimmerLights@on
  7496  0B39  2B78               	goto	L4
  7497  0B3A                     l8569:	
  7498                           ;RF_Control_B1.c: 385: }
  7499                           
  7500                           
  7501                           ;RF_Control_B1.c: 386: else
  7502                           ;RF_Control_B1.c: 387: {
  7503                           ;RF_Control_B1.c: 388: if(RF_Data[16] == 0x80)
  7504  0B3A  0021               	movlb	1	; select bank1
  7505  0B3B  0830               	movf	(_RF_Data^(0+128)+16),w
  7506  0B3C  3A80               	xorlw	128
  7507  0B3D  1D03               	skipz
  7508  0B3E  2B50               	goto	l8573
  7509                           
  7510                           ;RF_Control_B1.c: 389: {
  7511                           ;RF_Control_B1.c: 390: setDelayOff_GO(sw,1,RF_Data[17]);
  7512  0B3F  0020               	movlb	0	; select bank0
  7513  0B40  01A3               	clrf	setDelayOff_GO@command
  7514  0B41  0AA3               	incf	setDelayOff_GO@command,f
  7515  0B42  0021               	movlb	1	; select bank1
  7516  0B43  0831               	movf	(_RF_Data^(0+128)+17),w
  7517  0B44  0020               	movlb	0	; select bank0
  7518  0B45  00E2               	movwf	??_setRFSW_Control
  7519  0B46  0862               	movf	??_setRFSW_Control,w
  7520  0B47  00A4               	movwf	setDelayOff_GO@value
  7521  0B48  0863               	movf	setRFSW_Control@sw,w
  7522  0B49  3192  22C0  318A   	fcall	_setDelayOff_GO
  7523                           
  7524                           ;RF_Control_B1.c: 391: setRF_DimmerLights(sw,1);
  7525  0B4C  0020               	movlb	0	; select bank0
  7526  0B4D  01DD               	clrf	setRF_DimmerLights@on
  7527  0B4E  0ADD               	incf	setRF_DimmerLights@on,f
  7528  0B4F  2B78               	goto	L4
  7529  0B50                     l8573:	
  7530                           ;RF_Control_B1.c: 392: }
  7531                           
  7532                           
  7533                           ;RF_Control_B1.c: 393: else
  7534                           ;RF_Control_B1.c: 394: {
  7535                           ;RF_Control_B1.c: 395: RFSW->Status=0;
  7536  0B50  0021               	movlb	1	; select bank1
  7537  0B51  083B               	movf	_RFSW^(0+128),w
  7538  0B52  0086               	movwf	6
  7539  0B53  0187               	clrf	7
  7540  0B54  1001               	bcf	1,0
  7541                           
  7542                           ;RF_Control_B1.c: 396: setSw_Status(sw,0);
  7543  0B55  0020               	movlb	0	; select bank0
  7544  0B56  01A2               	clrf	setSw_Status@command
  7545  0B57  0863               	movf	setRFSW_Control@sw,w
  7546  0B58  319A  224E  318A   	fcall	_setSw_Status
  7547                           
  7548                           ;RF_Control_B1.c: 398: setDimmerLights_Trigger(sw,1);
  7549  0B5B  0020               	movlb	0	; select bank0
  7550  0B5C  01A2               	clrf	setDimmerLights_Trigger@command
  7551  0B5D  0AA2               	incf	setDimmerLights_Trigger@command,f
  7552  0B5E  0863               	movf	setRFSW_Control@sw,w
  7553  0B5F  319A  227D  318A   	fcall	_setDimmerLights_Trigger
  7554                           
  7555                           ;RF_Control_B1.c: 399: setDimmerLights_Switch(sw,RFSW->Status);
  7556  0B62  0021               	movlb	1	; select bank1
  7557  0B63  083B               	movf	_RFSW^(0+128),w
  7558  0B64  0086               	movwf	6
  7559  0B65  0187               	clrf	7
  7560  0B66  3000               	movlw	0
  7561  0B67  1801               	btfsc	1,0
  7562  0B68  3001               	movlw	1
  7563  0B69  0020               	movlb	0	; select bank0
  7564  0B6A  00A2               	movwf	setDimmerLights_Switch@command
  7565  0B6B  0863               	movf	setRFSW_Control@sw,w
  7566  0B6C  319A  226D  318A   	fcall	_setDimmerLights_Switch
  7567                           
  7568                           ;RF_Control_B1.c: 401: setDelayOff_GO(sw,0,0);
  7569  0B6F  0020               	movlb	0	; select bank0
  7570  0B70  01A3               	clrf	setDelayOff_GO@command
  7571  0B71  01A4               	clrf	setDelayOff_GO@value
  7572  0B72  0863               	movf	setRFSW_Control@sw,w
  7573  0B73  3192  22C0  318A   	fcall	_setDelayOff_GO
  7574                           
  7575                           ;RF_Control_B1.c: 402: setRF_DimmerLights(sw,0);
  7576  0B76  0020               	movlb	0	; select bank0
  7577  0B77  01DD               	clrf	setRF_DimmerLights@on
  7578  0B78                     L4:	
  7579  0B78  0863               	movf	setRFSW_Control@sw,w
  7580  0B79  3195  2560  318A   	fcall	_setRF_DimmerLights
  7581                           
  7582                           ;RF_Control_B1.c: 403: }
  7583                           ;RF_Control_B1.c: 404: }
  7584                           ;RF_Control_B1.c: 405: setBuz(1,100);
  7585  0B7C  3064               	movlw	100
  7586  0B7D  0020               	movlb	0	; select bank0
  7587  0B7E  00A6               	movwf	setBuz@time
  7588  0B7F  3000               	movlw	0
  7589  0B80  00A7               	movwf	setBuz@time+1
  7590  0B81  3001               	movlw	1
  7591  0B82  3197  2789  318A   	fcall	_setBuz
  7592                           
  7593                           ;RF_Control_B1.c: 406: setTxData(1);
  7594  0B85  3001               	movlw	1
  7595  0B86  3187  271C         	fcall	_setTxData
  7596  0B88  0008               	return
  7597  0B89                     __end_of_setRFSW_Control:	
  7598                           
  7599                           	psect	text29
  7600  12C0                     __ptext29:	
  7601 ;; *************** function _setDelayOff_GO *****************
  7602 ;; Defined at:
  7603 ;;		line 92 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\DelayOff_B1.c"
  7604 ;; Parameters:    Size  Location     Type
  7605 ;;  sw              1    wreg     unsigned char 
  7606 ;;  command         1    3[BANK0 ] unsigned char 
  7607 ;;  value           1    4[BANK0 ] unsigned char 
  7608 ;; Auto vars:     Size  Location     Type
  7609 ;;  sw              1    7[BANK0 ] unsigned char 
  7610 ;; Return value:  Size  Location     Type
  7611 ;;		None               void
  7612 ;; Registers used:
  7613 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7614 ;; Tracked objects:
  7615 ;;		On entry : 0/0
  7616 ;;		On exit  : 0/0
  7617 ;;		Unchanged: 0/0
  7618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7619 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7620 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7621 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7622 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7623 ;;Total ram usage:        5 bytes
  7624 ;; Hardware stack levels used:    1
  7625 ;; Hardware stack levels required when called:    5
  7626 ;; This function calls:
  7627 ;;		_DelayOffPointSelect
  7628 ;;		_DelayTimejudge
  7629 ;; This function is called by:
  7630 ;;		_setRFSW_Control
  7631 ;;		_Sw_DimmerOffFunc
  7632 ;; This function uses a non-reentrant model
  7633 ;;
  7634                           
  7635                           
  7636                           ;psect for function _setDelayOff_GO
  7637  12C0                     _setDelayOff_GO:	
  7638                           
  7639                           ;incstack = 0
  7640                           ; Regs used in _setDelayOff_GO: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7641                           ;setDelayOff_GO@sw stored from wreg
  7642  12C0  0020               	movlb	0	; select bank0
  7643  12C1  00A7               	movwf	setDelayOff_GO@sw
  7644                           
  7645                           ;DelayOff_B1.c: 94: DelayOffPointSelect(sw);
  7646  12C2  0827               	movf	setDelayOff_GO@sw,w
  7647  12C3  319A  22F4  3192   	fcall	_DelayOffPointSelect
  7648                           
  7649                           ;DelayOff_B1.c: 95: if(DelayOff->Enable)
  7650  12C6  0020               	movlb	0	; select bank0
  7651  12C7  0869               	movf	_DelayOff,w
  7652  12C8  0086               	movwf	6
  7653  12C9  0187               	clrf	7
  7654  12CA  1C01               	btfss	1,0
  7655  12CB  0008               	return
  7656                           
  7657                           ;DelayOff_B1.c: 96: {
  7658                           ;DelayOff_B1.c: 97: DelayOff->GO=command;
  7659  12CC  0869               	movf	_DelayOff,w
  7660  12CD  0086               	movwf	6
  7661  12CE  0187               	clrf	7
  7662  12CF  0823               	movf	setDelayOff_GO@command,w
  7663  12D0  1081               	bcf	1,1
  7664  12D1  1D03               	skipz
  7665  12D2  1481               	bsf	1,1
  7666                           
  7667                           ;DelayOff_B1.c: 98: if(command)
  7668  12D3  0823               	movf	setDelayOff_GO@command,w
  7669  12D4  1903               	btfsc	3,2
  7670  12D5  2AFF               	goto	l8385
  7671                           
  7672                           ;DelayOff_B1.c: 99: {
  7673                           ;DelayOff_B1.c: 100: DelayOff->Value=DelayTimejudge(value);
  7674  12D6  0824               	movf	setDelayOff_GO@value,w
  7675  12D7  319E  2687  3192   	fcall	_DelayTimejudge
  7676  12DA  0020               	movlb	0	; select bank0
  7677  12DB  00A5               	movwf	??_setDelayOff_GO
  7678  12DC  0A69               	incf	_DelayOff,w
  7679  12DD  0086               	movwf	6
  7680  12DE  0187               	clrf	7
  7681  12DF  0825               	movf	??_setDelayOff_GO,w
  7682  12E0  0081               	movwf	1
  7683                           
  7684                           ;DelayOff_B1.c: 101: if(((value%16)==5 || !(value%16)) && value <= 0x25)
  7685  12E1  300F               	movlw	15
  7686  12E2  0524               	andwf	setDelayOff_GO@value,w
  7687  12E3  00A5               	movwf	??_setDelayOff_GO
  7688  12E4  0825               	movf	??_setDelayOff_GO,w
  7689  12E5  3A05               	xorlw	5
  7690  12E6  1903               	skipnz
  7691  12E7  2AEC               	goto	l8379
  7692  12E8  0824               	movf	setDelayOff_GO@value,w
  7693  12E9  390F               	andlw	15
  7694  12EA  1D03               	btfss	3,2
  7695  12EB  2AF2               	goto	l8383
  7696  12EC                     l8379:	
  7697  12EC  3026               	movlw	38
  7698  12ED  0224               	subwf	setDelayOff_GO@value,w
  7699  12EE  1803               	skipnc
  7700  12EF  2AF2               	goto	l8383
  7701                           
  7702                           ;DelayOff_B1.c: 102: {
  7703                           ;DelayOff_B1.c: 103: Product->Data[26+sw]=value;
  7704  12F0  0824               	movf	setDelayOff_GO@value,w
  7705  12F1  2AF3               	goto	L5
  7706  12F2                     l8383:	
  7707                           ;DelayOff_B1.c: 104: }
  7708                           
  7709                           
  7710                           ;DelayOff_B1.c: 105: else
  7711                           ;DelayOff_B1.c: 106: {
  7712                           ;DelayOff_B1.c: 107: Product->Data[26+sw]=0x05;
  7713  12F2  3005               	movlw	5
  7714  12F3                     L5:	
  7715  12F3  00A5               	movwf	??_setDelayOff_GO
  7716  12F4  0827               	movf	setDelayOff_GO@sw,w
  7717  12F5  3E1A               	addlw	26
  7718  12F6  076E               	addwf	_Product,w
  7719  12F7  00A6               	movwf	??_setDelayOff_GO+1
  7720  12F8  0826               	movf	??_setDelayOff_GO+1,w
  7721  12F9  0086               	movwf	6
  7722  12FA  3001               	movlw	1	; select bank2/3
  7723  12FB  0087               	movwf	7
  7724  12FC  0825               	movf	??_setDelayOff_GO,w
  7725  12FD  0081               	movwf	1
  7726                           
  7727                           ;DelayOff_B1.c: 108: }
  7728                           ;DelayOff_B1.c: 109: }
  7729  12FE  2B0B               	goto	l8389
  7730  12FF                     l8385:	
  7731                           
  7732                           ;DelayOff_B1.c: 110: else if(!command)
  7733  12FF  08A3               	movf	setDelayOff_GO@command,f
  7734  1300  1D03               	skipz
  7735  1301  2B0B               	goto	l8389
  7736                           
  7737                           ;DelayOff_B1.c: 111: {
  7738                           ;DelayOff_B1.c: 112: Product->Data[sw+26]=0;
  7739  1302  0827               	movf	setDelayOff_GO@sw,w
  7740  1303  3E1A               	addlw	26
  7741  1304  076E               	addwf	_Product,w
  7742  1305  00A5               	movwf	??_setDelayOff_GO
  7743  1306  0825               	movf	??_setDelayOff_GO,w
  7744  1307  0086               	movwf	6
  7745  1308  3001               	movlw	1	; select bank2/3
  7746  1309  0087               	movwf	7
  7747  130A  0181               	clrf	1
  7748  130B                     l8389:	
  7749                           
  7750                           ;DelayOff_B1.c: 113: }
  7751                           ;DelayOff_B1.c: 114: DelayOff->SecondTime=0;
  7752  130B  0869               	movf	_DelayOff,w
  7753  130C  3E02               	addlw	2
  7754  130D  0086               	movwf	6
  7755  130E  0187               	clrf	7
  7756  130F  3000               	movlw	0
  7757  1310  3FC0               	movwi [0]fsr1
  7758  1311  3FC1               	movwi [1]fsr1
  7759                           
  7760                           ;DelayOff_B1.c: 115: DelayOff->MinuteTime=0;
  7761  1312  0869               	movf	_DelayOff,w
  7762  1313  3E04               	addlw	4
  7763  1314  0086               	movwf	6
  7764  1315  0187               	clrf	7
  7765  1316  0181               	clrf	1
  7766  1317  0008               	return
  7767  1318                     __end_of_setDelayOff_GO:	
  7768                           
  7769                           	psect	text30
  7770  1E87                     __ptext30:	
  7771 ;; *************** function _DelayTimejudge *****************
  7772 ;; Defined at:
  7773 ;;		line 119 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\DelayOff_B1.c"
  7774 ;; Parameters:    Size  Location     Type
  7775 ;;  value           1    wreg     unsigned char 
  7776 ;; Auto vars:     Size  Location     Type
  7777 ;;  value           1    2[BANK0 ] unsigned char 
  7778 ;;  i               1    1[BANK0 ] unsigned char 
  7779 ;; Return value:  Size  Location     Type
  7780 ;;                  1    wreg      unsigned char 
  7781 ;; Registers used:
  7782 ;;		wreg
  7783 ;; Tracked objects:
  7784 ;;		On entry : 0/0
  7785 ;;		On exit  : 0/0
  7786 ;;		Unchanged: 0/0
  7787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7789 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7790 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7791 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7792 ;;Total ram usage:        3 bytes
  7793 ;; Hardware stack levels used:    1
  7794 ;; Hardware stack levels required when called:    4
  7795 ;; This function calls:
  7796 ;;		Nothing
  7797 ;; This function is called by:
  7798 ;;		_setDelayOff_GO
  7799 ;; This function uses a non-reentrant model
  7800 ;;
  7801                           
  7802                           
  7803                           ;psect for function _DelayTimejudge
  7804  1E87                     _DelayTimejudge:	
  7805                           
  7806                           ;incstack = 0
  7807                           ; Regs used in _DelayTimejudge: [wreg]
  7808                           ;DelayTimejudge@value stored from wreg
  7809  1E87  0020               	movlb	0	; select bank0
  7810  1E88  00A2               	movwf	DelayTimejudge@value
  7811                           
  7812                           ;DelayOff_B1.c: 121: char i=5;
  7813  1E89  3005               	movlw	5
  7814  1E8A  00A0               	movwf	??_DelayTimejudge
  7815  1E8B  0820               	movf	??_DelayTimejudge,w
  7816  1E8C  00A1               	movwf	DelayTimejudge@i
  7817                           
  7818                           ;DelayOff_B1.c: 122: if(value == 0x05)
  7819  1E8D  0822               	movf	DelayTimejudge@value,w
  7820  1E8E  3A05               	xorlw	5
  7821  1E8F  1D03               	skipz
  7822  1E90  2E93               	goto	l8219
  7823                           
  7824                           ;DelayOff_B1.c: 123: {
  7825                           ;DelayOff_B1.c: 124: i=5;
  7826  1E91  3005               	movlw	5
  7827  1E92  2EB0               	goto	L10
  7828  1E93                     l8219:	
  7829                           ;DelayOff_B1.c: 125: }
  7830                           
  7831                           
  7832                           ;DelayOff_B1.c: 126: else if(value == 0x10)
  7833  1E93  0822               	movf	DelayTimejudge@value,w
  7834  1E94  3A10               	xorlw	16
  7835  1E95  1D03               	skipz
  7836  1E96  2E99               	goto	l8223
  7837                           
  7838                           ;DelayOff_B1.c: 127: {
  7839                           ;DelayOff_B1.c: 128: i=10;
  7840  1E97  300A               	movlw	10
  7841  1E98  2EB0               	goto	L10
  7842  1E99                     l8223:	
  7843                           ;DelayOff_B1.c: 129: }
  7844                           
  7845                           
  7846                           ;DelayOff_B1.c: 130: else if(value == 0x15)
  7847  1E99  0822               	movf	DelayTimejudge@value,w
  7848  1E9A  3A15               	xorlw	21
  7849  1E9B  1D03               	skipz
  7850  1E9C  2E9F               	goto	l8227
  7851                           
  7852                           ;DelayOff_B1.c: 131: {
  7853                           ;DelayOff_B1.c: 132: i=15;
  7854  1E9D  300F               	movlw	15
  7855  1E9E  2EB0               	goto	L10
  7856  1E9F                     l8227:	
  7857                           ;DelayOff_B1.c: 133: }
  7858                           
  7859                           
  7860                           ;DelayOff_B1.c: 134: else if(value == 0x20)
  7861  1E9F  0822               	movf	DelayTimejudge@value,w
  7862  1EA0  3A20               	xorlw	32
  7863  1EA1  1D03               	skipz
  7864  1EA2  2EA5               	goto	l8231
  7865                           
  7866                           ;DelayOff_B1.c: 135: {
  7867                           ;DelayOff_B1.c: 136: i=20;
  7868  1EA3  3014               	movlw	20
  7869  1EA4  2EB0               	goto	L10
  7870  1EA5                     l8231:	
  7871                           ;DelayOff_B1.c: 137: }
  7872                           
  7873                           
  7874                           ;DelayOff_B1.c: 138: else if(value == 0x25)
  7875  1EA5  0822               	movf	DelayTimejudge@value,w
  7876  1EA6  3A25               	xorlw	37
  7877  1EA7  1D03               	skipz
  7878  1EA8  2EAB               	goto	l8235
  7879                           
  7880                           ;DelayOff_B1.c: 139: {
  7881                           ;DelayOff_B1.c: 140: i=25;
  7882  1EA9  3019               	movlw	25
  7883  1EAA  2EB0               	goto	L10
  7884  1EAB                     l8235:	
  7885                           ;DelayOff_B1.c: 141: }
  7886                           
  7887                           
  7888                           ;DelayOff_B1.c: 142: else if(value == 0x30)
  7889  1EAB  0822               	movf	DelayTimejudge@value,w
  7890  1EAC  3A30               	xorlw	48
  7891  1EAD  1D03               	skipz
  7892  1EAE  2EB3               	goto	l706
  7893                           
  7894                           ;DelayOff_B1.c: 143: {
  7895                           ;DelayOff_B1.c: 144: i=30;
  7896  1EAF  301E               	movlw	30
  7897  1EB0                     L10:	
  7898  1EB0  00A0               	movwf	??_DelayTimejudge
  7899  1EB1  0820               	movf	??_DelayTimejudge,w
  7900  1EB2  00A1               	movwf	DelayTimejudge@i
  7901  1EB3                     l706:	
  7902                           
  7903                           ;DelayOff_B1.c: 145: }
  7904                           ;DelayOff_B1.c: 146: return i;
  7905  1EB3  0821               	movf	DelayTimejudge@i,w
  7906  1EB4  0008               	return
  7907  1EB5                     __end_of_DelayTimejudge:	
  7908                           
  7909                           	psect	text31
  7910  1002                     __ptext31:	
  7911 ;; *************** function _setRFSW_AdjControl *****************
  7912 ;; Defined at:
  7913 ;;		line 409 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
  7914 ;; Parameters:    Size  Location     Type
  7915 ;;  sw              1    wreg     unsigned char 
  7916 ;; Auto vars:     Size  Location     Type
  7917 ;;  sw              1   70[BANK0 ] unsigned char 
  7918 ;; Return value:  Size  Location     Type
  7919 ;;		None               void
  7920 ;; Registers used:
  7921 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7922 ;; Tracked objects:
  7923 ;;		On entry : 0/0
  7924 ;;		On exit  : 0/0
  7925 ;;		Unchanged: 0/0
  7926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7928 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7929 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7930 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7931 ;;Total ram usage:        3 bytes
  7932 ;; Hardware stack levels used:    1
  7933 ;; Hardware stack levels required when called:    9
  7934 ;; This function calls:
  7935 ;;		_RfSWPointSelect
  7936 ;;		_setRF_DimmerValue
  7937 ;;		_setTxData
  7938 ;; This function is called by:
  7939 ;;		_setControl_Lights_Table
  7940 ;; This function uses a non-reentrant model
  7941 ;;
  7942                           
  7943                           
  7944                           ;psect for function _setRFSW_AdjControl
  7945  1002                     _setRFSW_AdjControl:	
  7946                           
  7947                           ;incstack = 0
  7948                           ; Regs used in _setRFSW_AdjControl: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7949                           ;setRFSW_AdjControl@sw stored from wreg
  7950  1002  0020               	movlb	0	; select bank0
  7951  1003  00E6               	movwf	setRFSW_AdjControl@sw
  7952                           
  7953                           ;RF_Control_B1.c: 411: RfSWPointSelect(sw);
  7954  1004  0866               	movf	setRFSW_AdjControl@sw,w
  7955  1005  319B  2346  3190   	fcall	_RfSWPointSelect
  7956                           
  7957                           ;RF_Control_B1.c: 412: if(RFSW->Status)
  7958  1008  0021               	movlb	1	; select bank1
  7959  1009  083B               	movf	_RFSW^(0+128),w
  7960  100A  0086               	movwf	6
  7961  100B  0187               	clrf	7
  7962  100C  1C01               	btfss	1,0
  7963  100D  281A               	goto	l8597
  7964                           
  7965                           ;RF_Control_B1.c: 413: {
  7966                           ;RF_Control_B1.c: 414: Memory->Modify=1;
  7967  100E  0020               	movlb	0	; select bank0
  7968  100F  086D               	movf	_Memory,w
  7969  1010  3E22               	addlw	34
  7970  1011  0086               	movwf	6
  7971  1012  3002               	movlw	2	; select bank4/5
  7972  1013  0087               	movwf	7
  7973  1014  1401               	bsf	1,0
  7974                           
  7975                           ;RF_Control_B1.c: 415: setRF_DimmerValue(sw);
  7976  1015  0866               	movf	setRFSW_AdjControl@sw,w
  7977  1016  319F  2714  3190   	fcall	_setRF_DimmerValue
  7978                           
  7979                           ;RF_Control_B1.c: 416: }
  7980  1019  282C               	goto	l2635
  7981  101A                     l8597:	
  7982                           
  7983                           ;RF_Control_B1.c: 417: else
  7984                           ;RF_Control_B1.c: 418: {
  7985                           ;RF_Control_B1.c: 419: Product->Data[9]=Product->Data[20+sw];
  7986  101A  0020               	movlb	0	; select bank0
  7987  101B  0866               	movf	setRFSW_AdjControl@sw,w
  7988  101C  3E14               	addlw	20
  7989  101D  076E               	addwf	_Product,w
  7990  101E  00E4               	movwf	??_setRFSW_AdjControl
  7991  101F  0864               	movf	??_setRFSW_AdjControl,w
  7992  1020  0086               	movwf	6
  7993  1021  3001               	movlw	1	; select bank2/3
  7994  1022  0087               	movwf	7
  7995  1023  0801               	movf	1,w
  7996  1024  00E5               	movwf	??_setRFSW_AdjControl+1
  7997  1025  086E               	movf	_Product,w
  7998  1026  3E09               	addlw	9
  7999  1027  0086               	movwf	6
  8000  1028  3001               	movlw	1	; select bank2/3
  8001  1029  0087               	movwf	7
  8002  102A  0865               	movf	??_setRFSW_AdjControl+1,w
  8003  102B  0081               	movwf	1
  8004  102C                     l2635:	
  8005                           
  8006                           ;RF_Control_B1.c: 420: }
  8007                           ;RF_Control_B1.c: 421: Product->Data[17]=Product->Data[26+sw];
  8008  102C  0020               	movlb	0	; select bank0
  8009  102D  0866               	movf	setRFSW_AdjControl@sw,w
  8010  102E  3E1A               	addlw	26
  8011  102F  076E               	addwf	_Product,w
  8012  1030  00E4               	movwf	??_setRFSW_AdjControl
  8013  1031  0864               	movf	??_setRFSW_AdjControl,w
  8014  1032  0086               	movwf	6
  8015  1033  3001               	movlw	1	; select bank2/3
  8016  1034  0087               	movwf	7
  8017  1035  0801               	movf	1,w
  8018  1036  00E5               	movwf	??_setRFSW_AdjControl+1
  8019  1037  086E               	movf	_Product,w
  8020  1038  3E11               	addlw	17
  8021  1039  0086               	movwf	6
  8022  103A  3001               	movlw	1	; select bank2/3
  8023  103B  0087               	movwf	7
  8024  103C  0865               	movf	??_setRFSW_AdjControl+1,w
  8025  103D  0081               	movwf	1
  8026                           
  8027                           ;RF_Control_B1.c: 422: setTxData(1);
  8028  103E  3001               	movlw	1
  8029  103F  3187  271C         	fcall	_setTxData
  8030  1041  0008               	return
  8031  1042                     __end_of_setRFSW_AdjControl:	
  8032                           
  8033                           	psect	text32
  8034  1F14                     __ptext32:	
  8035 ;; *************** function _setRF_DimmerValue *****************
  8036 ;; Defined at:
  8037 ;;		line 433 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
  8038 ;; Parameters:    Size  Location     Type
  8039 ;;  lights          1    wreg     unsigned char 
  8040 ;; Auto vars:     Size  Location     Type
  8041 ;;  lights          1   67[BANK0 ] unsigned char 
  8042 ;; Return value:  Size  Location     Type
  8043 ;;		None               void
  8044 ;; Registers used:
  8045 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8046 ;; Tracked objects:
  8047 ;;		On entry : 0/0
  8048 ;;		On exit  : 0/0
  8049 ;;		Unchanged: 0/0
  8050 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8051 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8052 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8053 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8054 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8055 ;;Total ram usage:        3 bytes
  8056 ;; Hardware stack levels used:    1
  8057 ;; Hardware stack levels required when called:    8
  8058 ;; This function calls:
  8059 ;;		_setDimmerLights_AdjRF
  8060 ;; This function is called by:
  8061 ;;		_setRFSW_AdjControl
  8062 ;; This function uses a non-reentrant model
  8063 ;;
  8064                           
  8065                           
  8066                           ;psect for function _setRF_DimmerValue
  8067  1F14                     _setRF_DimmerValue:	
  8068                           
  8069                           ;incstack = 0
  8070                           ; Regs used in _setRF_DimmerValue: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8071                           ;setRF_DimmerValue@lights stored from wreg
  8072  1F14  0020               	movlb	0	; select bank0
  8073  1F15  00E3               	movwf	setRF_DimmerValue@lights
  8074                           
  8075                           ;RF_Control_B1.c: 435: if(RF_Data[9] > 0x64)
  8076  1F16  3065               	movlw	101
  8077  1F17  0021               	movlb	1	; select bank1
  8078  1F18  0229               	subwf	(_RF_Data^(0+128)+9),w
  8079  1F19  1C03               	skipc
  8080  1F1A  2F21               	goto	l8447
  8081                           
  8082                           ;RF_Control_B1.c: 436: {
  8083                           ;RF_Control_B1.c: 437: RF_Data[9]=0x64;
  8084  1F1B  3064               	movlw	100
  8085  1F1C  0020               	movlb	0	; select bank0
  8086  1F1D  00E1               	movwf	??_setRF_DimmerValue
  8087  1F1E  0861               	movf	??_setRF_DimmerValue,w
  8088  1F1F  0021               	movlb	1	; select bank1
  8089  1F20  00A9               	movwf	(_RF_Data^(0+128)+9)
  8090  1F21                     l8447:	
  8091                           
  8092                           ;RF_Control_B1.c: 438: }
  8093                           ;RF_Control_B1.c: 439: Product->Data[9]=RF_Data[9];
  8094  1F21  0829               	movf	(_RF_Data^(0+128)+9),w
  8095  1F22  0020               	movlb	0	; select bank0
  8096  1F23  00E1               	movwf	??_setRF_DimmerValue
  8097  1F24  086E               	movf	_Product,w
  8098  1F25  3E09               	addlw	9
  8099  1F26  0086               	movwf	6
  8100  1F27  3001               	movlw	1	; select bank2/3
  8101  1F28  0087               	movwf	7
  8102  1F29  0861               	movf	??_setRF_DimmerValue,w
  8103  1F2A  0081               	movwf	1
  8104                           
  8105                           ;RF_Control_B1.c: 440: Product->Data[11]=lights;
  8106  1F2B  0863               	movf	setRF_DimmerValue@lights,w
  8107  1F2C  00E1               	movwf	??_setRF_DimmerValue
  8108  1F2D  086E               	movf	_Product,w
  8109  1F2E  3E0B               	addlw	11
  8110  1F2F  0086               	movwf	6
  8111  1F30  3001               	movlw	1	; select bank2/3
  8112  1F31  0087               	movwf	7
  8113  1F32  0861               	movf	??_setRF_DimmerValue,w
  8114  1F33  0081               	movwf	1
  8115                           
  8116                           ;RF_Control_B1.c: 441: Product->Data[(20+lights)]=Product->Data[9];
  8117  1F34  086E               	movf	_Product,w
  8118  1F35  3E09               	addlw	9
  8119  1F36  0086               	movwf	6
  8120  1F37  3001               	movlw	1	; select bank2/3
  8121  1F38  0087               	movwf	7
  8122  1F39  0801               	movf	1,w
  8123  1F3A  00E1               	movwf	??_setRF_DimmerValue
  8124  1F3B  0863               	movf	setRF_DimmerValue@lights,w
  8125  1F3C  3E14               	addlw	20
  8126  1F3D  076E               	addwf	_Product,w
  8127  1F3E  00E2               	movwf	??_setRF_DimmerValue+1
  8128  1F3F  0862               	movf	??_setRF_DimmerValue+1,w
  8129  1F40  0086               	movwf	6
  8130  1F41  3001               	movlw	1	; select bank2/3
  8131  1F42  0087               	movwf	7
  8132  1F43  0861               	movf	??_setRF_DimmerValue,w
  8133  1F44  0081               	movwf	1
  8134                           
  8135                           ;RF_Control_B1.c: 442: setDimmerLights_AdjRF(lights);
  8136  1F45  0863               	movf	setRF_DimmerValue@lights,w
  8137  1F46  319D  2546         	fcall	_setDimmerLights_AdjRF
  8138  1F48  0008               	return
  8139  1F49                     __end_of_setRF_DimmerValue:	
  8140                           
  8141                           	psect	text33
  8142  1D46                     __ptext33:	
  8143 ;; *************** function _setDimmerLights_AdjRF *****************
  8144 ;; Defined at:
  8145 ;;		line 423 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
  8146 ;; Parameters:    Size  Location     Type
  8147 ;;  lights          1    wreg     unsigned char 
  8148 ;; Auto vars:     Size  Location     Type
  8149 ;;  lights          1   64[BANK0 ] unsigned char 
  8150 ;; Return value:  Size  Location     Type
  8151 ;;		None               void
  8152 ;; Registers used:
  8153 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8154 ;; Tracked objects:
  8155 ;;		On entry : 0/0
  8156 ;;		On exit  : 0/0
  8157 ;;		Unchanged: 0/0
  8158 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8160 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8161 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8162 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8163 ;;Total ram usage:        2 bytes
  8164 ;; Hardware stack levels used:    1
  8165 ;; Hardware stack levels required when called:    7
  8166 ;; This function calls:
  8167 ;;		_DimmerLightsPointSelect
  8168 ;;		_getPercentValue
  8169 ;; This function is called by:
  8170 ;;		_setRF_DimmerValue
  8171 ;; This function uses a non-reentrant model
  8172 ;;
  8173                           
  8174                           
  8175                           ;psect for function _setDimmerLights_AdjRF
  8176  1D46                     _setDimmerLights_AdjRF:	
  8177                           
  8178                           ;incstack = 0
  8179                           ; Regs used in _setDimmerLights_AdjRF: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  8180                           ;setDimmerLights_AdjRF@lights stored from wreg
  8181  1D46  0020               	movlb	0	; select bank0
  8182  1D47  00E0               	movwf	setDimmerLights_AdjRF@lights
  8183                           
  8184                           ;Dimmer_B1.c: 425: DimmerLightsPointSelect(lights);
  8185  1D48  0860               	movf	setDimmerLights_AdjRF@lights,w
  8186  1D49  319A  22CE  319D   	fcall	_DimmerLightsPointSelect
  8187                           
  8188                           ;Dimmer_B1.c: 426: DimmerLights->AdjRF=1;
  8189  1D4C  0020               	movlb	0	; select bank0
  8190  1D4D  086A               	movf	_DimmerLights,w
  8191  1D4E  0086               	movwf	6
  8192  1D4F  3001               	movlw	1	; select bank2/3
  8193  1D50  0087               	movwf	7
  8194  1D51  1501               	bsf	1,2
  8195                           
  8196                           ;Dimmer_B1.c: 427: DimmerLights->Signal=1;
  8197  1D52  086A               	movf	_DimmerLights,w
  8198  1D53  0086               	movwf	6
  8199  1D54  3001               	movlw	1	; select bank2/3
  8200  1D55  0087               	movwf	7
  8201  1D56  1481               	bsf	1,1
  8202                           
  8203                           ;Dimmer_B1.c: 428: DimmerLights->MaxmumValue=getPercentValue(Product->Data[9]);
  8204  1D57  086E               	movf	_Product,w
  8205  1D58  3E09               	addlw	9
  8206  1D59  0086               	movwf	6
  8207  1D5A  3001               	movlw	1	; select bank2/3
  8208  1D5B  0087               	movwf	7
  8209  1D5C  0801               	movf	1,w
  8210  1D5D  3193  2318         	fcall	_getPercentValue
  8211  1D5F  0020               	movlb	0	; select bank0
  8212  1D60  00DF               	movwf	??_setDimmerLights_AdjRF
  8213  1D61  086A               	movf	_DimmerLights,w
  8214  1D62  3E05               	addlw	5
  8215  1D63  0086               	movwf	6
  8216  1D64  3001               	movlw	1	; select bank2/3
  8217  1D65  0087               	movwf	7
  8218  1D66  085F               	movf	??_setDimmerLights_AdjRF,w
  8219  1D67  0081               	movwf	1
  8220  1D68  0008               	return
  8221  1D69                     __end_of_setDimmerLights_AdjRF:	
  8222                           
  8223                           	psect	text34
  8224  1318                     __ptext34:	
  8225 ;; *************** function _getPercentValue *****************
  8226 ;; Defined at:
  8227 ;;		line 490 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
  8228 ;; Parameters:    Size  Location     Type
  8229 ;;  value           1    wreg     unsigned char 
  8230 ;; Auto vars:     Size  Location     Type
  8231 ;;  value           1   59[BANK0 ] unsigned char 
  8232 ;;  i               3   60[BANK0 ] float 
  8233 ;; Return value:  Size  Location     Type
  8234 ;;                  1    wreg      unsigned char 
  8235 ;; Registers used:
  8236 ;;		wreg, status,2, status,0, pclath, cstack
  8237 ;; Tracked objects:
  8238 ;;		On entry : 0/0
  8239 ;;		On exit  : 0/0
  8240 ;;		Unchanged: 0/0
  8241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8243 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8244 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8245 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8246 ;;Total ram usage:        6 bytes
  8247 ;; Hardware stack levels used:    1
  8248 ;; Hardware stack levels required when called:    6
  8249 ;; This function calls:
  8250 ;;		___awtoft
  8251 ;;		___ftadd
  8252 ;;		___ftdiv
  8253 ;;		___ftmul
  8254 ;;		___fttol
  8255 ;; This function is called by:
  8256 ;;		_setDimmerLights_AdjRF
  8257 ;; This function uses a non-reentrant model
  8258 ;;
  8259                           
  8260                           
  8261                           ;psect for function _getPercentValue
  8262  1318                     _getPercentValue:	
  8263                           
  8264                           ;incstack = 0
  8265                           ; Regs used in _getPercentValue: [wreg+status,2+status,0+pclath+cstack]
  8266                           ;getPercentValue@value stored from wreg
  8267  1318  0020               	movlb	0	; select bank0
  8268  1319  00DB               	movwf	getPercentValue@value
  8269                           
  8270                           ;Dimmer_B1.c: 493: float i=((char)((100-20)*1.5))-((char)((100-55)*1.5));
  8271  131A  3000               	movlw	0
  8272  131B  00DC               	movwf	getPercentValue@i
  8273  131C  3054               	movlw	84
  8274  131D  00DD               	movwf	getPercentValue@i+1
  8275  131E  3042               	movlw	66
  8276  131F  00DE               	movwf	getPercentValue@i+2
  8277                           
  8278                           ;Dimmer_B1.c: 494: i/=100;
  8279  1320  3000               	movlw	0
  8280  1321  00AE               	movwf	___ftdiv@f2
  8281  1322  30C8               	movlw	200
  8282  1323  00AF               	movwf	___ftdiv@f2+1
  8283  1324  3042               	movlw	66
  8284  1325  00B0               	movwf	___ftdiv@f2+2
  8285  1326  085C               	movf	getPercentValue@i,w
  8286  1327  00B1               	movwf	___ftdiv@f1
  8287  1328  085D               	movf	getPercentValue@i+1,w
  8288  1329  00B2               	movwf	___ftdiv@f1+1
  8289  132A  085E               	movf	getPercentValue@i+2,w
  8290  132B  00B3               	movwf	___ftdiv@f1+2
  8291  132C  318C  24C4  3193   	fcall	___ftdiv
  8292  132F  0020               	movlb	0	; select bank0
  8293  1330  082E               	movf	?___ftdiv,w
  8294  1331  00DC               	movwf	getPercentValue@i
  8295  1332  082F               	movf	?___ftdiv+1,w
  8296  1333  00DD               	movwf	getPercentValue@i+1
  8297  1334  0830               	movf	?___ftdiv+2,w
  8298  1335  00DE               	movwf	getPercentValue@i+2
  8299                           
  8300                           ;Dimmer_B1.c: 495: return (char)(((100-value)*i)+((char)((100-55)*1.5)));
  8301  1336  085B               	movf	getPercentValue@value,w
  8302  1337  00D9               	movwf	??_getPercentValue
  8303  1338  01DA               	clrf	??_getPercentValue+1
  8304  1339  09D9               	comf	??_getPercentValue,f
  8305  133A  09DA               	comf	??_getPercentValue+1,f
  8306  133B  0AD9               	incf	??_getPercentValue,f
  8307  133C  1903               	skipnz
  8308  133D  0ADA               	incf	??_getPercentValue+1,f
  8309  133E  0859               	movf	??_getPercentValue,w
  8310  133F  3E64               	addlw	100
  8311  1340  00A8               	movwf	___awtoft@c
  8312  1341  3000               	movlw	0
  8313  1342  3D5A               	addwfc	??_getPercentValue+1,w
  8314  1343  00A9               	movwf	___awtoft@c+1
  8315  1344  319D  2502  3193   	fcall	___awtoft
  8316  1347  0020               	movlb	0	; select bank0
  8317  1348  0828               	movf	?___awtoft,w
  8318  1349  00B1               	movwf	___ftmul@f2
  8319  134A  0829               	movf	?___awtoft+1,w
  8320  134B  00B2               	movwf	___ftmul@f2+1
  8321  134C  082A               	movf	?___awtoft+2,w
  8322  134D  00B3               	movwf	___ftmul@f2+2
  8323  134E  085C               	movf	getPercentValue@i,w
  8324  134F  00AE               	movwf	___ftmul@f1
  8325  1350  085D               	movf	getPercentValue@i+1,w
  8326  1351  00AF               	movwf	___ftmul@f1+1
  8327  1352  085E               	movf	getPercentValue@i+2,w
  8328  1353  00B0               	movwf	___ftmul@f1+2
  8329  1354  318D  256D  3193   	fcall	___ftmul
  8330  1357  0020               	movlb	0	; select bank0
  8331  1358  082E               	movf	?___ftmul,w
  8332  1359  00C1               	movwf	___ftadd@f2
  8333  135A  082F               	movf	?___ftmul+1,w
  8334  135B  00C2               	movwf	___ftadd@f2+1
  8335  135C  0830               	movf	?___ftmul+2,w
  8336  135D  00C3               	movwf	___ftadd@f2+2
  8337  135E  3000               	movlw	0
  8338  135F  00BE               	movwf	___ftadd@f1
  8339  1360  3086               	movlw	134
  8340  1361  00BF               	movwf	___ftadd@f1+1
  8341  1362  3042               	movlw	66
  8342  1363  00C0               	movwf	___ftadd@f1+2
  8343  1364  318F  270A  3193   	fcall	___ftadd
  8344  1367  0020               	movlb	0	; select bank0
  8345  1368  083E               	movf	?___ftadd,w
  8346  1369  00CB               	movwf	___fttol@f1
  8347  136A  083F               	movf	?___ftadd+1,w
  8348  136B  00CC               	movwf	___fttol@f1+1
  8349  136C  0840               	movf	?___ftadd+2,w
  8350  136D  00CD               	movwf	___fttol@f1+2
  8351  136E  3189  215E         	fcall	___fttol
  8352  1370  0020               	movlb	0	; select bank0
  8353  1371  084B               	movf	?___fttol,w
  8354  1372  0008               	return
  8355  1373                     __end_of_getPercentValue:	
  8356                           
  8357                           	psect	text35
  8358  0D6D                     __ptext35:	
  8359 ;; *************** function ___ftmul *****************
  8360 ;; Defined at:
  8361 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\ftmul.c"
  8362 ;; Parameters:    Size  Location     Type
  8363 ;;  f1              3   14[BANK0 ] float 
  8364 ;;  f2              3   17[BANK0 ] float 
  8365 ;; Auto vars:     Size  Location     Type
  8366 ;;  f3_as_produc    3   25[BANK0 ] unsigned um
  8367 ;;  sign            1   29[BANK0 ] unsigned char 
  8368 ;;  cntr            1   28[BANK0 ] unsigned char 
  8369 ;;  exp             1   24[BANK0 ] unsigned char 
  8370 ;; Return value:  Size  Location     Type
  8371 ;;                  3   14[BANK0 ] float 
  8372 ;; Registers used:
  8373 ;;		wreg, status,2, status,0, pclath, cstack
  8374 ;; Tracked objects:
  8375 ;;		On entry : 0/0
  8376 ;;		On exit  : 0/0
  8377 ;;		Unchanged: 0/0
  8378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8379 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8380 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8381 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8382 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8383 ;;Total ram usage:       16 bytes
  8384 ;; Hardware stack levels used:    1
  8385 ;; Hardware stack levels required when called:    5
  8386 ;; This function calls:
  8387 ;;		___ftpack
  8388 ;; This function is called by:
  8389 ;;		_getPercentValue
  8390 ;; This function uses a non-reentrant model
  8391 ;;
  8392                           
  8393                           
  8394                           ;psect for function ___ftmul
  8395  0D6D                     ___ftmul:	
  8396                           
  8397                           ;incstack = 0
  8398                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  8399  0D6D  0020               	movlb	0	; select bank0
  8400  0D6E  082E               	movf	___ftmul@f1,w
  8401  0D6F  00B4               	movwf	??___ftmul
  8402  0D70  082F               	movf	___ftmul@f1+1,w
  8403  0D71  00B5               	movwf	??___ftmul+1
  8404  0D72  0830               	movf	___ftmul@f1+2,w
  8405  0D73  00B6               	movwf	??___ftmul+2
  8406  0D74  1003               	clrc
  8407  0D75  0D35               	rlf	??___ftmul+1,w
  8408  0D76  0D36               	rlf	??___ftmul+2,w
  8409  0D77  00B7               	movwf	??___ftmul+3
  8410  0D78  0837               	movf	??___ftmul+3,w
  8411  0D79  00B8               	movwf	___ftmul@exp
  8412  0D7A  08B8               	movf	___ftmul@exp,f
  8413  0D7B  1D03               	skipz
  8414  0D7C  2D84               	goto	l8105
  8415  0D7D  3000               	movlw	0
  8416  0D7E  00AE               	movwf	?___ftmul
  8417  0D7F  3000               	movlw	0
  8418  0D80  00AF               	movwf	?___ftmul+1
  8419  0D81  3000               	movlw	0
  8420  0D82  00B0               	movwf	?___ftmul+2
  8421  0D83  0008               	return
  8422  0D84                     l8105:	
  8423  0D84  0831               	movf	___ftmul@f2,w
  8424  0D85  00B4               	movwf	??___ftmul
  8425  0D86  0832               	movf	___ftmul@f2+1,w
  8426  0D87  00B5               	movwf	??___ftmul+1
  8427  0D88  0833               	movf	___ftmul@f2+2,w
  8428  0D89  00B6               	movwf	??___ftmul+2
  8429  0D8A  1003               	clrc
  8430  0D8B  0D35               	rlf	??___ftmul+1,w
  8431  0D8C  0D36               	rlf	??___ftmul+2,w
  8432  0D8D  00B7               	movwf	??___ftmul+3
  8433  0D8E  0837               	movf	??___ftmul+3,w
  8434  0D8F  00BD               	movwf	___ftmul@sign
  8435  0D90  08BD               	movf	___ftmul@sign,f
  8436  0D91  1D03               	skipz
  8437  0D92  2D9A               	goto	l8111
  8438  0D93  3000               	movlw	0
  8439  0D94  00AE               	movwf	?___ftmul
  8440  0D95  3000               	movlw	0
  8441  0D96  00AF               	movwf	?___ftmul+1
  8442  0D97  3000               	movlw	0
  8443  0D98  00B0               	movwf	?___ftmul+2
  8444  0D99  0008               	return
  8445  0D9A                     l8111:	
  8446  0D9A  083D               	movf	___ftmul@sign,w
  8447  0D9B  3E7B               	addlw	123
  8448  0D9C  00B4               	movwf	??___ftmul
  8449  0D9D  0834               	movf	??___ftmul,w
  8450  0D9E  07B8               	addwf	___ftmul@exp,f
  8451  0D9F  082E               	movf	___ftmul@f1,w
  8452  0DA0  00B4               	movwf	??___ftmul
  8453  0DA1  082F               	movf	___ftmul@f1+1,w
  8454  0DA2  00B5               	movwf	??___ftmul+1
  8455  0DA3  0830               	movf	___ftmul@f1+2,w
  8456  0DA4  00B6               	movwf	??___ftmul+2
  8457  0DA5  3010               	movlw	16
  8458  0DA6                     u7685:	
  8459  0DA6  36B6               	lsrf	??___ftmul+2,f
  8460  0DA7  0CB5               	rrf	??___ftmul+1,f
  8461  0DA8  0CB4               	rrf	??___ftmul,f
  8462  0DA9  0B89               	decfsz	9,f
  8463  0DAA  2DA6               	goto	u7685
  8464  0DAB  0834               	movf	??___ftmul,w
  8465  0DAC  00B7               	movwf	??___ftmul+3
  8466  0DAD  0837               	movf	??___ftmul+3,w
  8467  0DAE  00BD               	movwf	___ftmul@sign
  8468  0DAF  0831               	movf	___ftmul@f2,w
  8469  0DB0  00B4               	movwf	??___ftmul
  8470  0DB1  0832               	movf	___ftmul@f2+1,w
  8471  0DB2  00B5               	movwf	??___ftmul+1
  8472  0DB3  0833               	movf	___ftmul@f2+2,w
  8473  0DB4  00B6               	movwf	??___ftmul+2
  8474  0DB5  3010               	movlw	16
  8475  0DB6                     u7695:	
  8476  0DB6  36B6               	lsrf	??___ftmul+2,f
  8477  0DB7  0CB5               	rrf	??___ftmul+1,f
  8478  0DB8  0CB4               	rrf	??___ftmul,f
  8479  0DB9  0B89               	decfsz	9,f
  8480  0DBA  2DB6               	goto	u7695
  8481  0DBB  0834               	movf	??___ftmul,w
  8482  0DBC  00B7               	movwf	??___ftmul+3
  8483  0DBD  0837               	movf	??___ftmul+3,w
  8484  0DBE  06BD               	xorwf	___ftmul@sign,f
  8485  0DBF  3080               	movlw	128
  8486  0DC0  00B4               	movwf	??___ftmul
  8487  0DC1  0834               	movf	??___ftmul,w
  8488  0DC2  05BD               	andwf	___ftmul@sign,f
  8489  0DC3  17AF               	bsf	___ftmul@f1+1,7
  8490  0DC4  17B2               	bsf	___ftmul@f2+1,7
  8491  0DC5  30FF               	movlw	255
  8492  0DC6  05B1               	andwf	___ftmul@f2,f
  8493  0DC7  30FF               	movlw	255
  8494  0DC8  05B2               	andwf	___ftmul@f2+1,f
  8495  0DC9  3000               	movlw	0
  8496  0DCA  05B3               	andwf	___ftmul@f2+2,f
  8497  0DCB  3000               	movlw	0
  8498  0DCC  00B9               	movwf	___ftmul@f3_as_product
  8499  0DCD  3000               	movlw	0
  8500  0DCE  00BA               	movwf	___ftmul@f3_as_product+1
  8501  0DCF  3000               	movlw	0
  8502  0DD0  00BB               	movwf	___ftmul@f3_as_product+2
  8503  0DD1  3007               	movlw	7
  8504  0DD2  00B4               	movwf	??___ftmul
  8505  0DD3  0834               	movf	??___ftmul,w
  8506  0DD4  00BC               	movwf	___ftmul@cntr
  8507  0DD5                     l8123:	
  8508  0DD5  1C2E               	btfss	___ftmul@f1,0
  8509  0DD6  2DDD               	goto	l8127
  8510  0DD7  0831               	movf	___ftmul@f2,w
  8511  0DD8  07B9               	addwf	___ftmul@f3_as_product,f
  8512  0DD9  0832               	movf	___ftmul@f2+1,w
  8513  0DDA  3DBA               	addwfc	___ftmul@f3_as_product+1,f
  8514  0DDB  0833               	movf	___ftmul@f2+2,w
  8515  0DDC  3DBB               	addwfc	___ftmul@f3_as_product+2,f
  8516  0DDD                     l8127:	
  8517  0DDD  3001               	movlw	1
  8518  0DDE                     u7715:	
  8519  0DDE  36B0               	lsrf	___ftmul@f1+2,f
  8520  0DDF  0CAF               	rrf	___ftmul@f1+1,f
  8521  0DE0  0CAE               	rrf	___ftmul@f1,f
  8522  0DE1  0B89               	decfsz	9,f
  8523  0DE2  2DDE               	goto	u7715
  8524  0DE3  3001               	movlw	1
  8525  0DE4                     u7725:	
  8526  0DE4  35B1               	lslf	___ftmul@f2,f
  8527  0DE5  0DB2               	rlf	___ftmul@f2+1,f
  8528  0DE6  0DB3               	rlf	___ftmul@f2+2,f
  8529  0DE7  0B89               	decfsz	9,f
  8530  0DE8  2DE4               	goto	u7725
  8531  0DE9  3001               	movlw	1
  8532  0DEA  02BC               	subwf	___ftmul@cntr,f
  8533  0DEB  1D03               	btfss	3,2
  8534  0DEC  2DD5               	goto	l8123
  8535  0DED  3009               	movlw	9
  8536  0DEE  00B4               	movwf	??___ftmul
  8537  0DEF  0834               	movf	??___ftmul,w
  8538  0DF0  00BC               	movwf	___ftmul@cntr
  8539  0DF1                     l8135:	
  8540  0DF1  1C2E               	btfss	___ftmul@f1,0
  8541  0DF2  2DF9               	goto	l8139
  8542  0DF3  0831               	movf	___ftmul@f2,w
  8543  0DF4  07B9               	addwf	___ftmul@f3_as_product,f
  8544  0DF5  0832               	movf	___ftmul@f2+1,w
  8545  0DF6  3DBA               	addwfc	___ftmul@f3_as_product+1,f
  8546  0DF7  0833               	movf	___ftmul@f2+2,w
  8547  0DF8  3DBB               	addwfc	___ftmul@f3_as_product+2,f
  8548  0DF9                     l8139:	
  8549  0DF9  3001               	movlw	1
  8550  0DFA                     u7755:	
  8551  0DFA  36B0               	lsrf	___ftmul@f1+2,f
  8552  0DFB  0CAF               	rrf	___ftmul@f1+1,f
  8553  0DFC  0CAE               	rrf	___ftmul@f1,f
  8554  0DFD  0B89               	decfsz	9,f
  8555  0DFE  2DFA               	goto	u7755
  8556  0DFF  3001               	movlw	1
  8557  0E00                     u7765:	
  8558  0E00  36BB               	lsrf	___ftmul@f3_as_product+2,f
  8559  0E01  0CBA               	rrf	___ftmul@f3_as_product+1,f
  8560  0E02  0CB9               	rrf	___ftmul@f3_as_product,f
  8561  0E03  0B89               	decfsz	9,f
  8562  0E04  2E00               	goto	u7765
  8563  0E05  3001               	movlw	1
  8564  0E06  02BC               	subwf	___ftmul@cntr,f
  8565  0E07  1D03               	btfss	3,2
  8566  0E08  2DF1               	goto	l8135
  8567  0E09  0839               	movf	___ftmul@f3_as_product,w
  8568  0E0A  00A0               	movwf	___ftpack@arg
  8569  0E0B  083A               	movf	___ftmul@f3_as_product+1,w
  8570  0E0C  00A1               	movwf	___ftpack@arg+1
  8571  0E0D  083B               	movf	___ftmul@f3_as_product+2,w
  8572  0E0E  00A2               	movwf	___ftpack@arg+2
  8573  0E0F  0838               	movf	___ftmul@exp,w
  8574  0E10  00B4               	movwf	??___ftmul
  8575  0E11  0834               	movf	??___ftmul,w
  8576  0E12  00A3               	movwf	___ftpack@exp
  8577  0E13  083D               	movf	___ftmul@sign,w
  8578  0E14  00B5               	movwf	??___ftmul+1
  8579  0E15  0835               	movf	??___ftmul+1,w
  8580  0E16  00A4               	movwf	___ftpack@sign
  8581  0E17  3193  23D1         	fcall	___ftpack
  8582  0E19  0020               	movlb	0	; select bank0
  8583  0E1A  0820               	movf	?___ftpack,w
  8584  0E1B  00AE               	movwf	?___ftmul
  8585  0E1C  0821               	movf	?___ftpack+1,w
  8586  0E1D  00AF               	movwf	?___ftmul+1
  8587  0E1E  0822               	movf	?___ftpack+2,w
  8588  0E1F  00B0               	movwf	?___ftmul+2
  8589  0E20  0008               	return
  8590  0E21                     __end_of___ftmul:	
  8591                           
  8592                           	psect	text36
  8593  0F0A                     __ptext36:	
  8594 ;; *************** function ___ftadd *****************
  8595 ;; Defined at:
  8596 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\ftadd.c"
  8597 ;; Parameters:    Size  Location     Type
  8598 ;;  f1              3   30[BANK0 ] float 
  8599 ;;  f2              3   33[BANK0 ] float 
  8600 ;; Auto vars:     Size  Location     Type
  8601 ;;  exp1            1   42[BANK0 ] unsigned char 
  8602 ;;  exp2            1   41[BANK0 ] unsigned char 
  8603 ;;  sign            1   40[BANK0 ] unsigned char 
  8604 ;; Return value:  Size  Location     Type
  8605 ;;                  3   30[BANK0 ] float 
  8606 ;; Registers used:
  8607 ;;		wreg, status,2, status,0, pclath, cstack
  8608 ;; Tracked objects:
  8609 ;;		On entry : 0/0
  8610 ;;		On exit  : 0/0
  8611 ;;		Unchanged: 0/0
  8612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8613 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8614 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8615 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8616 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8617 ;;Total ram usage:       13 bytes
  8618 ;; Hardware stack levels used:    1
  8619 ;; Hardware stack levels required when called:    5
  8620 ;; This function calls:
  8621 ;;		___ftpack
  8622 ;; This function is called by:
  8623 ;;		_getPercentValue
  8624 ;; This function uses a non-reentrant model
  8625 ;;
  8626                           
  8627                           
  8628                           ;psect for function ___ftadd
  8629  0F0A                     ___ftadd:	
  8630                           
  8631                           ;incstack = 0
  8632                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  8633  0F0A  0020               	movlb	0	; select bank0
  8634  0F0B  083E               	movf	___ftadd@f1,w
  8635  0F0C  00C4               	movwf	??___ftadd
  8636  0F0D  083F               	movf	___ftadd@f1+1,w
  8637  0F0E  00C5               	movwf	??___ftadd+1
  8638  0F0F  0840               	movf	___ftadd@f1+2,w
  8639  0F10  00C6               	movwf	??___ftadd+2
  8640  0F11  1003               	clrc
  8641  0F12  0D45               	rlf	??___ftadd+1,w
  8642  0F13  0D46               	rlf	??___ftadd+2,w
  8643  0F14  00C7               	movwf	??___ftadd+3
  8644  0F15  0847               	movf	??___ftadd+3,w
  8645  0F16  00CA               	movwf	___ftadd@exp1
  8646  0F17  0841               	movf	___ftadd@f2,w
  8647  0F18  00C4               	movwf	??___ftadd
  8648  0F19  0842               	movf	___ftadd@f2+1,w
  8649  0F1A  00C5               	movwf	??___ftadd+1
  8650  0F1B  0843               	movf	___ftadd@f2+2,w
  8651  0F1C  00C6               	movwf	??___ftadd+2
  8652  0F1D  1003               	clrc
  8653  0F1E  0D45               	rlf	??___ftadd+1,w
  8654  0F1F  0D46               	rlf	??___ftadd+2,w
  8655  0F20  00C7               	movwf	??___ftadd+3
  8656  0F21  0847               	movf	??___ftadd+3,w
  8657  0F22  00C9               	movwf	___ftadd@exp2
  8658  0F23  084A               	movf	___ftadd@exp1,w
  8659  0F24  1903               	btfsc	3,2
  8660  0F25  2F32               	goto	l7993
  8661  0F26  0849               	movf	___ftadd@exp2,w
  8662  0F27  024A               	subwf	___ftadd@exp1,w
  8663  0F28  1803               	skipnc
  8664  0F29  2F39               	goto	l7997
  8665  0F2A  034A               	decf	___ftadd@exp1,w
  8666  0F2B  3AFF               	xorlw	255
  8667  0F2C  0749               	addwf	___ftadd@exp2,w
  8668  0F2D  00C4               	movwf	??___ftadd
  8669  0F2E  3019               	movlw	25
  8670  0F2F  0244               	subwf	??___ftadd,w
  8671  0F30  1C03               	skipc
  8672  0F31  2F39               	goto	l7997
  8673  0F32                     l7993:	
  8674  0F32  0841               	movf	___ftadd@f2,w
  8675  0F33  00BE               	movwf	?___ftadd
  8676  0F34  0842               	movf	___ftadd@f2+1,w
  8677  0F35  00BF               	movwf	?___ftadd+1
  8678  0F36  0843               	movf	___ftadd@f2+2,w
  8679  0F37  00C0               	movwf	?___ftadd+2
  8680  0F38  0008               	return
  8681  0F39                     l7997:	
  8682  0F39  0849               	movf	___ftadd@exp2,w
  8683  0F3A  1903               	btfsc	3,2
  8684  0F3B  0008               	return
  8685  0F3C  084A               	movf	___ftadd@exp1,w
  8686  0F3D  0249               	subwf	___ftadd@exp2,w
  8687  0F3E  1803               	skipnc
  8688  0F3F  2F48               	goto	l8003
  8689  0F40  0349               	decf	___ftadd@exp2,w
  8690  0F41  3AFF               	xorlw	255
  8691  0F42  074A               	addwf	___ftadd@exp1,w
  8692  0F43  00C4               	movwf	??___ftadd
  8693  0F44  3019               	movlw	25
  8694  0F45  0244               	subwf	??___ftadd,w
  8695  0F46  1803               	btfsc	3,0
  8696  0F47  0008               	return
  8697  0F48                     l8003:	
  8698  0F48  3006               	movlw	6
  8699  0F49  00C4               	movwf	??___ftadd
  8700  0F4A  0844               	movf	??___ftadd,w
  8701  0F4B  00C8               	movwf	___ftadd@sign
  8702  0F4C  1BC0               	btfsc	___ftadd@f1+2,7
  8703  0F4D  17C8               	bsf	___ftadd@sign,7
  8704  0F4E  1BC3               	btfsc	___ftadd@f2+2,7
  8705  0F4F  1748               	bsf	___ftadd@sign,6
  8706  0F50  17BF               	bsf	___ftadd@f1+1,7
  8707  0F51  30FF               	movlw	255
  8708  0F52  05BE               	andwf	___ftadd@f1,f
  8709  0F53  30FF               	movlw	255
  8710  0F54  05BF               	andwf	___ftadd@f1+1,f
  8711  0F55  3000               	movlw	0
  8712  0F56  05C0               	andwf	___ftadd@f1+2,f
  8713  0F57  17C2               	bsf	___ftadd@f2+1,7
  8714  0F58  30FF               	movlw	255
  8715  0F59  05C1               	andwf	___ftadd@f2,f
  8716  0F5A  30FF               	movlw	255
  8717  0F5B  05C2               	andwf	___ftadd@f2+1,f
  8718  0F5C  3000               	movlw	0
  8719  0F5D  05C3               	andwf	___ftadd@f2+2,f
  8720  0F5E  0849               	movf	___ftadd@exp2,w
  8721  0F5F  024A               	subwf	___ftadd@exp1,w
  8722  0F60  1803               	skipnc
  8723  0F61  2F84               	goto	l8025
  8724  0F62                     l8015:	
  8725  0F62  3001               	movlw	1
  8726  0F63                     u7445:	
  8727  0F63  35C1               	lslf	___ftadd@f2,f
  8728  0F64  0DC2               	rlf	___ftadd@f2+1,f
  8729  0F65  0DC3               	rlf	___ftadd@f2+2,f
  8730  0F66  0B89               	decfsz	9,f
  8731  0F67  2F63               	goto	u7445
  8732  0F68  3001               	movlw	1
  8733  0F69  02C9               	subwf	___ftadd@exp2,f
  8734  0F6A  0849               	movf	___ftadd@exp2,w
  8735  0F6B  064A               	xorwf	___ftadd@exp1,w
  8736  0F6C  1903               	skipnz
  8737  0F6D  2F7F               	goto	l8023
  8738  0F6E  3001               	movlw	1
  8739  0F6F  02C8               	subwf	___ftadd@sign,f
  8740  0F70  0848               	movf	___ftadd@sign,w
  8741  0F71  3907               	andlw	7
  8742  0F72  1903               	btfsc	3,2
  8743  0F73  2F7F               	goto	l8023
  8744  0F74  2F62               	goto	l8015
  8745  0F75                     l8021:	
  8746  0F75  3001               	movlw	1
  8747  0F76                     u7475:	
  8748  0F76  36C0               	lsrf	___ftadd@f1+2,f
  8749  0F77  0CBF               	rrf	___ftadd@f1+1,f
  8750  0F78  0CBE               	rrf	___ftadd@f1,f
  8751  0F79  0B89               	decfsz	9,f
  8752  0F7A  2F76               	goto	u7475
  8753  0F7B  3001               	movlw	1
  8754  0F7C  00C4               	movwf	??___ftadd
  8755  0F7D  0844               	movf	??___ftadd,w
  8756  0F7E  07CA               	addwf	___ftadd@exp1,f
  8757  0F7F                     l8023:	
  8758  0F7F  084A               	movf	___ftadd@exp1,w
  8759  0F80  0649               	xorwf	___ftadd@exp2,w
  8760  0F81  1903               	btfsc	3,2
  8761  0F82  2FA9               	goto	l3328
  8762  0F83  2F75               	goto	l8021
  8763  0F84                     l8025:	
  8764  0F84  084A               	movf	___ftadd@exp1,w
  8765  0F85  0249               	subwf	___ftadd@exp2,w
  8766  0F86  1803               	skipnc
  8767  0F87  2FA9               	goto	l3328
  8768  0F88                     l8027:	
  8769  0F88  3001               	movlw	1
  8770  0F89                     u7505:	
  8771  0F89  35BE               	lslf	___ftadd@f1,f
  8772  0F8A  0DBF               	rlf	___ftadd@f1+1,f
  8773  0F8B  0DC0               	rlf	___ftadd@f1+2,f
  8774  0F8C  0B89               	decfsz	9,f
  8775  0F8D  2F89               	goto	u7505
  8776  0F8E  3001               	movlw	1
  8777  0F8F  02CA               	subwf	___ftadd@exp1,f
  8778  0F90  0849               	movf	___ftadd@exp2,w
  8779  0F91  064A               	xorwf	___ftadd@exp1,w
  8780  0F92  1903               	skipnz
  8781  0F93  2FA5               	goto	l8035
  8782  0F94  3001               	movlw	1
  8783  0F95  02C8               	subwf	___ftadd@sign,f
  8784  0F96  0848               	movf	___ftadd@sign,w
  8785  0F97  3907               	andlw	7
  8786  0F98  1903               	btfsc	3,2
  8787  0F99  2FA5               	goto	l8035
  8788  0F9A  2F88               	goto	l8027
  8789  0F9B                     l8033:	
  8790  0F9B  3001               	movlw	1
  8791  0F9C                     u7535:	
  8792  0F9C  36C3               	lsrf	___ftadd@f2+2,f
  8793  0F9D  0CC2               	rrf	___ftadd@f2+1,f
  8794  0F9E  0CC1               	rrf	___ftadd@f2,f
  8795  0F9F  0B89               	decfsz	9,f
  8796  0FA0  2F9C               	goto	u7535
  8797  0FA1  3001               	movlw	1
  8798  0FA2  00C4               	movwf	??___ftadd
  8799  0FA3  0844               	movf	??___ftadd,w
  8800  0FA4  07C9               	addwf	___ftadd@exp2,f
  8801  0FA5                     l8035:	
  8802  0FA5  084A               	movf	___ftadd@exp1,w
  8803  0FA6  0649               	xorwf	___ftadd@exp2,w
  8804  0FA7  1D03               	skipz
  8805  0FA8  2F9B               	goto	l8033
  8806  0FA9                     l3328:	
  8807  0FA9  1FC8               	btfss	___ftadd@sign,7
  8808  0FAA  2FBB               	goto	l8039
  8809  0FAB  30FF               	movlw	255
  8810  0FAC  06BE               	xorwf	___ftadd@f1,f
  8811  0FAD  30FF               	movlw	255
  8812  0FAE  06BF               	xorwf	___ftadd@f1+1,f
  8813  0FAF  30FF               	movlw	255
  8814  0FB0  06C0               	xorwf	___ftadd@f1+2,f
  8815  0FB1  3001               	movlw	1
  8816  0FB2  07BE               	addwf	___ftadd@f1,f
  8817  0FB3  3000               	movlw	0
  8818  0FB4  1803               	skipnc
  8819  0FB5  3001               	movlw	1
  8820  0FB6  07BF               	addwf	___ftadd@f1+1,f
  8821  0FB7  3000               	movlw	0
  8822  0FB8  1803               	skipnc
  8823  0FB9  3001               	movlw	1
  8824  0FBA  07C0               	addwf	___ftadd@f1+2,f
  8825  0FBB                     l8039:	
  8826  0FBB  1F48               	btfss	___ftadd@sign,6
  8827  0FBC  2FCD               	goto	l8043
  8828  0FBD  30FF               	movlw	255
  8829  0FBE  06C1               	xorwf	___ftadd@f2,f
  8830  0FBF  30FF               	movlw	255
  8831  0FC0  06C2               	xorwf	___ftadd@f2+1,f
  8832  0FC1  30FF               	movlw	255
  8833  0FC2  06C3               	xorwf	___ftadd@f2+2,f
  8834  0FC3  3001               	movlw	1
  8835  0FC4  07C1               	addwf	___ftadd@f2,f
  8836  0FC5  3000               	movlw	0
  8837  0FC6  1803               	skipnc
  8838  0FC7  3001               	movlw	1
  8839  0FC8  07C2               	addwf	___ftadd@f2+1,f
  8840  0FC9  3000               	movlw	0
  8841  0FCA  1803               	skipnc
  8842  0FCB  3001               	movlw	1
  8843  0FCC  07C3               	addwf	___ftadd@f2+2,f
  8844  0FCD                     l8043:	
  8845  0FCD  01C8               	clrf	___ftadd@sign
  8846  0FCE  083E               	movf	___ftadd@f1,w
  8847  0FCF  07C1               	addwf	___ftadd@f2,f
  8848  0FD0  083F               	movf	___ftadd@f1+1,w
  8849  0FD1  3DC2               	addwfc	___ftadd@f2+1,f
  8850  0FD2  0840               	movf	___ftadd@f1+2,w
  8851  0FD3  3DC3               	addwfc	___ftadd@f2+2,f
  8852  0FD4  1FC3               	btfss	___ftadd@f2+2,7
  8853  0FD5  2FE8               	goto	l8053
  8854  0FD6  30FF               	movlw	255
  8855  0FD7  06C1               	xorwf	___ftadd@f2,f
  8856  0FD8  30FF               	movlw	255
  8857  0FD9  06C2               	xorwf	___ftadd@f2+1,f
  8858  0FDA  30FF               	movlw	255
  8859  0FDB  06C3               	xorwf	___ftadd@f2+2,f
  8860  0FDC  3001               	movlw	1
  8861  0FDD  07C1               	addwf	___ftadd@f2,f
  8862  0FDE  3000               	movlw	0
  8863  0FDF  1803               	skipnc
  8864  0FE0  3001               	movlw	1
  8865  0FE1  07C2               	addwf	___ftadd@f2+1,f
  8866  0FE2  3000               	movlw	0
  8867  0FE3  1803               	skipnc
  8868  0FE4  3001               	movlw	1
  8869  0FE5  07C3               	addwf	___ftadd@f2+2,f
  8870  0FE6  01C8               	clrf	___ftadd@sign
  8871  0FE7  0AC8               	incf	___ftadd@sign,f
  8872  0FE8                     l8053:	
  8873  0FE8  0841               	movf	___ftadd@f2,w
  8874  0FE9  00A0               	movwf	___ftpack@arg
  8875  0FEA  0842               	movf	___ftadd@f2+1,w
  8876  0FEB  00A1               	movwf	___ftpack@arg+1
  8877  0FEC  0843               	movf	___ftadd@f2+2,w
  8878  0FED  00A2               	movwf	___ftpack@arg+2
  8879  0FEE  084A               	movf	___ftadd@exp1,w
  8880  0FEF  00C4               	movwf	??___ftadd
  8881  0FF0  0844               	movf	??___ftadd,w
  8882  0FF1  00A3               	movwf	___ftpack@exp
  8883  0FF2  0848               	movf	___ftadd@sign,w
  8884  0FF3  00C5               	movwf	??___ftadd+1
  8885  0FF4  0845               	movf	??___ftadd+1,w
  8886  0FF5  00A4               	movwf	___ftpack@sign
  8887  0FF6  3193  23D1         	fcall	___ftpack
  8888  0FF8  0020               	movlb	0	; select bank0
  8889  0FF9  0820               	movf	?___ftpack,w
  8890  0FFA  00BE               	movwf	?___ftadd
  8891  0FFB  0821               	movf	?___ftpack+1,w
  8892  0FFC  00BF               	movwf	?___ftadd+1
  8893  0FFD  0822               	movf	?___ftpack+2,w
  8894  0FFE  00C0               	movwf	?___ftadd+2
  8895  0FFF  0008               	return
  8896  1000                     __end_of___ftadd:	
  8897                           
  8898                           	psect	text37
  8899  1DB4                     __ptext37:	
  8900 ;; *************** function _RF_RxDisable *****************
  8901 ;; Defined at:
  8902 ;;		line 199 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
  8903 ;; Parameters:    Size  Location     Type
  8904 ;;  rf              1    wreg     unsigned char 
  8905 ;; Auto vars:     Size  Location     Type
  8906 ;;  rf              1    4[BANK0 ] unsigned char 
  8907 ;; Return value:  Size  Location     Type
  8908 ;;		None               void
  8909 ;; Registers used:
  8910 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8911 ;; Tracked objects:
  8912 ;;		On entry : 0/0
  8913 ;;		On exit  : 0/0
  8914 ;;		Unchanged: 0/0
  8915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8916 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8917 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8919 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8920 ;;Total ram usage:        1 bytes
  8921 ;; Hardware stack levels used:    1
  8922 ;; Hardware stack levels required when called:    6
  8923 ;; This function calls:
  8924 ;;		_CC2500_WriteCommand
  8925 ;;		_RfPointSelect
  8926 ;;		_setINT_GO
  8927 ;; This function is called by:
  8928 ;;		_setRF_Main
  8929 ;; This function uses a non-reentrant model
  8930 ;;
  8931                           
  8932                           
  8933                           ;psect for function _RF_RxDisable
  8934  1DB4                     _RF_RxDisable:	
  8935                           
  8936                           ;incstack = 0
  8937                           ; Regs used in _RF_RxDisable: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8938                           ;RF_RxDisable@rf stored from wreg
  8939  1DB4  0020               	movlb	0	; select bank0
  8940  1DB5  00A4               	movwf	RF_RxDisable@rf
  8941                           
  8942                           ;RF_Control_B1.c: 201: RfPointSelect(rf);
  8943  1DB6  0824               	movf	RF_RxDisable@rf,w
  8944  1DB7  3199  2188  319D   	fcall	_RfPointSelect
  8945                           
  8946                           ;RF_Control_B1.c: 203: if(RF->RxStatus)
  8947  1DBA  0877               	movf	_RF,w
  8948  1DBB  0086               	movwf	6
  8949  1DBC  0187               	clrf	7
  8950  1DBD  1D81               	btfss	1,3
  8951  1DBE  0008               	return
  8952                           
  8953                           ;RF_Control_B1.c: 204: {
  8954                           ;RF_Control_B1.c: 205: RF->RxStatus=0;
  8955  1DBF  0877               	movf	_RF,w
  8956  1DC0  0086               	movwf	6
  8957  1DC1  0187               	clrf	7
  8958  1DC2  1181               	bcf	1,3
  8959                           
  8960                           ;RF_Control_B1.c: 206: RF->ReceiveGO=0;
  8961  1DC3  0877               	movf	_RF,w
  8962  1DC4  0086               	movwf	6
  8963  1DC5  0187               	clrf	7
  8964  1DC6  1081               	bcf	1,1
  8965                           
  8966                           ;RF_Control_B1.c: 207: RF->DebounceTime=0;
  8967  1DC7  0A77               	incf	_RF,w
  8968  1DC8  0086               	movwf	6
  8969  1DC9  0187               	clrf	7
  8970  1DCA  0181               	clrf	1
  8971                           
  8972                           ;RF_Control_B1.c: 208: RF->Debounce=0;
  8973  1DCB  0877               	movf	_RF,w
  8974  1DCC  0086               	movwf	6
  8975  1DCD  0187               	clrf	7
  8976  1DCE  1281               	bcf	1,5
  8977                           
  8978                           ;RF_Control_B1.c: 209: CC2500_WriteCommand(0x36);
  8979  1DCF  3036               	movlw	54
  8980  1DD0  319A  225D  319D   	fcall	_CC2500_WriteCommand
  8981                           
  8982                           ;RF_Control_B1.c: 210: CC2500_WriteCommand(0x3A);
  8983  1DD3  303A               	movlw	58
  8984  1DD4  319A  225D  319D   	fcall	_CC2500_WriteCommand
  8985                           
  8986                           ;RF_Control_B1.c: 211: setINT_GO(0);
  8987  1DD7  3000               	movlw	0
  8988  1DD8  3199  215F         	fcall	_setINT_GO
  8989  1DDA  0008               	return
  8990  1DDB                     __end_of_RF_RxDisable:	
  8991                           
  8992                           	psect	text38
  8993  1107                     __ptext38:	
  8994 ;; *************** function _CC2500_TxData *****************
  8995 ;; Defined at:
  8996 ;;		line 30 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
  8997 ;; Parameters:    Size  Location     Type
  8998 ;;		None
  8999 ;; Auto vars:     Size  Location     Type
  9000 ;;  loop_e          1    5[BANK0 ] unsigned char 
  9001 ;; Return value:  Size  Location     Type
  9002 ;;		None               void
  9003 ;; Registers used:
  9004 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9005 ;; Tracked objects:
  9006 ;;		On entry : 0/0
  9007 ;;		On exit  : 0/0
  9008 ;;		Unchanged: 0/0
  9009 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9011 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9012 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9013 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9014 ;;Total ram usage:        2 bytes
  9015 ;; Hardware stack levels used:    1
  9016 ;; Hardware stack levels required when called:    6
  9017 ;; This function calls:
  9018 ;;		_CC2500_WriteByte
  9019 ;;		_CC2500_WriteCommand
  9020 ;; This function is called by:
  9021 ;;		_setRF_Main
  9022 ;; This function uses a non-reentrant model
  9023 ;;
  9024                           
  9025                           
  9026                           ;psect for function _CC2500_TxData
  9027  1107                     _CC2500_TxData:	
  9028                           
  9029                           ;CC2500_B1.c: 32: unsigned char loop_e;
  9030                           ;CC2500_B1.c: 34: RC4=0;
  9031                           
  9032                           ;incstack = 0
  9033                           ; Regs used in _CC2500_TxData: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9034  1107  0020               	movlb	0	; select bank0
  9035  1108  120E               	bcf	14,4	;volatile
  9036                           
  9037                           ;CC2500_B1.c: 35: SPI0Buffer=0x3F+0x40;
  9038  1109  307F               	movlw	127
  9039  110A  00A4               	movwf	??_CC2500_TxData
  9040  110B  0824               	movf	??_CC2500_TxData,w
  9041  110C  0021               	movlb	1	; select bank1
  9042  110D  00BE               	movwf	_SPI0Buffer^(0+128)
  9043  110E                     l307:	
  9044                           ;CC2500_B1.c: 36: while(RC2==1);
  9045                           
  9046  110E  0020               	movlb	0	; select bank0
  9047  110F  190E               	btfsc	14,2	;volatile
  9048  1110  290E               	goto	l307
  9049                           
  9050                           ;CC2500_B1.c: 37: CC2500_WriteByte();
  9051  1111  319B  23B8  3191   	fcall	_CC2500_WriteByte
  9052                           
  9053                           ;CC2500_B1.c: 38: SPI0Buffer=Tx_Length;
  9054  1114  0021               	movlb	1	; select bank1
  9055  1115  083F               	movf	_Tx_Length^(0+128),w
  9056  1116  0020               	movlb	0	; select bank0
  9057  1117  00A4               	movwf	??_CC2500_TxData
  9058  1118  0824               	movf	??_CC2500_TxData,w
  9059  1119  0021               	movlb	1	; select bank1
  9060  111A  00BE               	movwf	_SPI0Buffer^(0+128)
  9061                           
  9062                           ;CC2500_B1.c: 39: CC2500_WriteByte();
  9063  111B  319B  23B8  3191   	fcall	_CC2500_WriteByte
  9064                           
  9065                           ;CC2500_B1.c: 40: for(loop_e=0;loop_e<Tx_Length;loop_e++)
  9066  111E  0020               	movlb	0	; select bank0
  9067  111F  01A5               	clrf	CC2500_TxData@loop_e
  9068  1120                     l8751:	
  9069  1120  0021               	movlb	1	; select bank1
  9070  1121  083F               	movf	_Tx_Length^(0+128),w
  9071  1122  0020               	movlb	0	; select bank0
  9072  1123  0225               	subwf	CC2500_TxData@loop_e,w
  9073  1124  1803               	btfsc	3,0
  9074  1125  2938               	goto	l312
  9075                           
  9076                           ;CC2500_B1.c: 41: {
  9077                           ;CC2500_B1.c: 42: SPI0Buffer=RF_Data[loop_e];
  9078  1126  0825               	movf	CC2500_TxData@loop_e,w
  9079  1127  3EA0               	addlw	_RF_Data& (0+255)
  9080  1128  0086               	movwf	6
  9081  1129  0187               	clrf	7
  9082  112A  0801               	movf	1,w
  9083  112B  00A4               	movwf	??_CC2500_TxData
  9084  112C  0824               	movf	??_CC2500_TxData,w
  9085  112D  0021               	movlb	1	; select bank1
  9086  112E  00BE               	movwf	_SPI0Buffer^(0+128)
  9087                           
  9088                           ;CC2500_B1.c: 43: CC2500_WriteByte();
  9089  112F  319B  23B8  3191   	fcall	_CC2500_WriteByte
  9090  1132  3001               	movlw	1
  9091  1133  0020               	movlb	0	; select bank0
  9092  1134  00A4               	movwf	??_CC2500_TxData
  9093  1135  0824               	movf	??_CC2500_TxData,w
  9094  1136  07A5               	addwf	CC2500_TxData@loop_e,f
  9095  1137  2920               	goto	l8751
  9096  1138                     l312:	
  9097                           
  9098                           ;CC2500_B1.c: 44: }
  9099                           ;CC2500_B1.c: 45: RC4=1;
  9100  1138  160E               	bsf	14,4	;volatile
  9101                           
  9102                           ;CC2500_B1.c: 46: CC2500_WriteCommand(0x35);
  9103  1139  3035               	movlw	53
  9104  113A  319A  225D  3191   	fcall	_CC2500_WriteCommand
  9105  113D                     l313:	
  9106                           ;CC2500_B1.c: 47: while(RB0==0);
  9107                           
  9108  113D  0020               	movlb	0	; select bank0
  9109  113E  1C0D               	btfss	13,0	;volatile
  9110  113F  293D               	goto	l313
  9111  1140                     l316:	
  9112                           ;CC2500_B1.c: 48: while(RB0==1);
  9113                           
  9114  1140  180D               	btfsc	13,0	;volatile
  9115  1141  2940               	goto	l316
  9116                           
  9117                           ;CC2500_B1.c: 49: CC2500_WriteCommand(0x36);
  9118  1142  3036               	movlw	54
  9119  1143  319A  225D  3191   	fcall	_CC2500_WriteCommand
  9120                           
  9121                           ;CC2500_B1.c: 50: CC2500_WriteCommand(0x3B);
  9122  1146  303B               	movlw	59
  9123  1147  319A  225D         	fcall	_CC2500_WriteCommand
  9124                           
  9125                           ;CC2500_B1.c: 51: Transceive_OK=1;
  9126  1149  16F0               	bsf	_Transceive_OK/(0+8),_Transceive_OK& (0+7)
  9127  114A  0008               	return
  9128  114B                     __end_of_CC2500_TxData:	
  9129                           
  9130                           	psect	text39
  9131  1432                     __ptext39:	
  9132 ;; *************** function _CC2500_RxData *****************
  9133 ;; Defined at:
  9134 ;;		line 56 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
  9135 ;; Parameters:    Size  Location     Type
  9136 ;;		None
  9137 ;; Auto vars:     Size  Location     Type
  9138 ;;  loop_f          1    5[BANK0 ] unsigned char 
  9139 ;; Return value:  Size  Location     Type
  9140 ;;		None               void
  9141 ;; Registers used:
  9142 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9143 ;; Tracked objects:
  9144 ;;		On entry : 0/0
  9145 ;;		On exit  : 0/0
  9146 ;;		Unchanged: 0/0
  9147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9148 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9149 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9150 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9151 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9152 ;;Total ram usage:        2 bytes
  9153 ;; Hardware stack levels used:    1
  9154 ;; Hardware stack levels required when called:    6
  9155 ;; This function calls:
  9156 ;;		_CC2500_ReadByte
  9157 ;;		_CC2500_ReadStatus
  9158 ;;		_CC2500_WriteByte
  9159 ;;		_CC2500_WriteCommand
  9160 ;;		_setRF_RxStatus
  9161 ;; This function is called by:
  9162 ;;		_setRF_Main
  9163 ;; This function uses a non-reentrant model
  9164 ;;
  9165                           
  9166                           
  9167                           ;psect for function _CC2500_RxData
  9168  1432                     _CC2500_RxData:	
  9169                           
  9170                           ;CC2500_B1.c: 58: unsigned char loop_f;
  9171                           ;CC2500_B1.c: 62: if(RB0 == 1)
  9172                           
  9173                           ;incstack = 0
  9174                           ; Regs used in _CC2500_RxData: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9175  1432  0020               	movlb	0	; select bank0
  9176  1433  180D               	btfsc	13,0	;volatile
  9177  1434                     l323:	
  9178                           ;CC2500_B1.c: 63: {
  9179                           ;CC2500_B1.c: 64: while(RB0 == 1);
  9180                           
  9181  1434  180D               	btfsc	13,0	;volatile
  9182  1435  2C34               	goto	l323
  9183                           
  9184                           ;CC2500_B1.c: 65: }
  9185                           ;CC2500_B1.c: 66: CC2500_ReadStatus(0x3B);
  9186  1436  303B               	movlw	59
  9187  1437  3187  27E5  3194   	fcall	_CC2500_ReadStatus
  9188                           
  9189                           ;CC2500_B1.c: 67: if(s_data != 0)
  9190  143A  0021               	movlb	1	; select bank1
  9191  143B  0842               	movf	_s_data^(0+128),w
  9192  143C  1903               	btfsc	3,2
  9193  143D  2C88               	goto	l8797
  9194                           
  9195                           ;CC2500_B1.c: 69: {
  9196                           ;CC2500_B1.c: 70: RC4=0;
  9197  143E  0020               	movlb	0	; select bank0
  9198  143F  120E               	bcf	14,4	;volatile
  9199                           
  9200                           ;CC2500_B1.c: 71: SPI0Buffer=0x3F+0xC0;
  9201  1440  30FF               	movlw	255
  9202  1441  00A4               	movwf	??_CC2500_RxData
  9203  1442  0824               	movf	??_CC2500_RxData,w
  9204  1443  0021               	movlb	1	; select bank1
  9205  1444  00BE               	movwf	_SPI0Buffer^(0+128)
  9206  1445                     l327:	
  9207                           ;CC2500_B1.c: 72: while(RC2==1);
  9208                           
  9209  1445  0020               	movlb	0	; select bank0
  9210  1446  190E               	btfsc	14,2	;volatile
  9211  1447  2C45               	goto	l327
  9212                           
  9213                           ;CC2500_B1.c: 73: CC2500_WriteByte();
  9214  1448  319B  23B8  3194   	fcall	_CC2500_WriteByte
  9215                           
  9216                           ;CC2500_B1.c: 75: CC2500_ReadByte();
  9217  144B  319C  2488  3194   	fcall	_CC2500_ReadByte
  9218                           
  9219                           ;CC2500_B1.c: 76: Rx_Length=SPI0Buffer;
  9220  144E  0021               	movlb	1	; select bank1
  9221  144F  083E               	movf	_SPI0Buffer^(0+128),w
  9222  1450  0020               	movlb	0	; select bank0
  9223  1451  00A4               	movwf	??_CC2500_RxData
  9224  1452  0824               	movf	??_CC2500_RxData,w
  9225  1453  0021               	movlb	1	; select bank1
  9226  1454  00BD               	movwf	_Rx_Length^(0+128)
  9227                           
  9228                           ;CC2500_B1.c: 77: for(loop_f=0;loop_f<Rx_Length;loop_f++)
  9229  1455  0020               	movlb	0	; select bank0
  9230  1456  01A5               	clrf	CC2500_RxData@loop_f
  9231  1457                     l8783:	
  9232  1457  0021               	movlb	1	; select bank1
  9233  1458  083D               	movf	_Rx_Length^(0+128),w
  9234  1459  0020               	movlb	0	; select bank0
  9235  145A  0225               	subwf	CC2500_RxData@loop_f,w
  9236  145B  1803               	btfsc	3,0
  9237  145C  2C6F               	goto	l8785
  9238                           
  9239                           ;CC2500_B1.c: 78: {
  9240                           ;CC2500_B1.c: 79: CC2500_ReadByte();
  9241  145D  319C  2488  3194   	fcall	_CC2500_ReadByte
  9242                           
  9243                           ;CC2500_B1.c: 80: RF_Data[loop_f]=SPI0Buffer;
  9244  1460  0021               	movlb	1	; select bank1
  9245  1461  083E               	movf	_SPI0Buffer^(0+128),w
  9246  1462  0020               	movlb	0	; select bank0
  9247  1463  00A4               	movwf	??_CC2500_RxData
  9248  1464  0825               	movf	CC2500_RxData@loop_f,w
  9249  1465  3EA0               	addlw	_RF_Data& (0+255)
  9250  1466  0086               	movwf	6
  9251  1467  0187               	clrf	7
  9252  1468  0824               	movf	??_CC2500_RxData,w
  9253  1469  0081               	movwf	1
  9254  146A  3001               	movlw	1
  9255  146B  00A4               	movwf	??_CC2500_RxData
  9256  146C  0824               	movf	??_CC2500_RxData,w
  9257  146D  07A5               	addwf	CC2500_RxData@loop_f,f
  9258  146E  2C57               	goto	l8783
  9259  146F                     l8785:	
  9260                           
  9261                           ;CC2500_B1.c: 81: }
  9262                           ;CC2500_B1.c: 82: CC2500_ReadByte();
  9263  146F  319C  2488  3194   	fcall	_CC2500_ReadByte
  9264                           
  9265                           ;CC2500_B1.c: 83: RSSI=SPI0Buffer;
  9266  1472  0021               	movlb	1	; select bank1
  9267  1473  083E               	movf	_SPI0Buffer^(0+128),w
  9268  1474  0020               	movlb	0	; select bank0
  9269  1475  00A4               	movwf	??_CC2500_RxData
  9270  1476  0824               	movf	??_CC2500_RxData,w
  9271  1477  0021               	movlb	1	; select bank1
  9272  1478  00BC               	movwf	_RSSI^(0+128)
  9273                           
  9274                           ;CC2500_B1.c: 84: CC2500_ReadByte();
  9275  1479  319C  2488  3194   	fcall	_CC2500_ReadByte
  9276                           
  9277                           ;CC2500_B1.c: 85: CRC=SPI0Buffer;
  9278  147C  0021               	movlb	1	; select bank1
  9279  147D  083E               	movf	_SPI0Buffer^(0+128),w
  9280  147E  0020               	movlb	0	; select bank0
  9281  147F  00A4               	movwf	??_CC2500_RxData
  9282  1480  0824               	movf	??_CC2500_RxData,w
  9283  1481  0021               	movlb	1	; select bank1
  9284  1482  00B7               	movwf	_CRC^(0+128)
  9285                           
  9286                           ;CC2500_B1.c: 86: RC4=1;
  9287  1483  0020               	movlb	0	; select bank0
  9288  1484  160E               	bsf	14,4	;volatile
  9289                           
  9290                           ;CC2500_B1.c: 87: if(CRC & 0x80)
  9291  1485  0021               	movlb	1	; select bank1
  9292  1486  1BB7               	btfsc	_CRC^(0+128),7
  9293                           
  9294                           ;CC2500_B1.c: 88: Receive_OK=1;
  9295  1487  1570               	bsf	_Receive_OK/(0+8),_Receive_OK& (0+7)
  9296  1488                     l8797:	
  9297                           
  9298                           ;CC2500_B1.c: 89: }
  9299                           ;CC2500_B1.c: 90: CC2500_WriteCommand(0x36);
  9300  1488  3036               	movlw	54
  9301  1489  319A  225D  3194   	fcall	_CC2500_WriteCommand
  9302                           
  9303                           ;CC2500_B1.c: 91: CC2500_WriteCommand(0x3A);
  9304  148C  303A               	movlw	58
  9305  148D  319A  225D  3194   	fcall	_CC2500_WriteCommand
  9306                           
  9307                           ;CC2500_B1.c: 92: setRF_RxStatus(1,0);
  9308  1490  0020               	movlb	0	; select bank0
  9309  1491  01A2               	clrf	setRF_RxStatus@command
  9310  1492  3001               	movlw	1
  9311  1493  319A  2223         	fcall	_setRF_RxStatus
  9312  1495  0008               	return
  9313  1496                     __end_of_CC2500_RxData:	
  9314                           
  9315                           	psect	text40
  9316  1A23                     __ptext40:	
  9317 ;; *************** function _setRF_RxStatus *****************
  9318 ;; Defined at:
  9319 ;;		line 43 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
  9320 ;; Parameters:    Size  Location     Type
  9321 ;;  rf              1    wreg     unsigned char 
  9322 ;;  command         1    2[BANK0 ] unsigned char 
  9323 ;; Auto vars:     Size  Location     Type
  9324 ;;  rf              1    3[BANK0 ] unsigned char 
  9325 ;; Return value:  Size  Location     Type
  9326 ;;		None               void
  9327 ;; Registers used:
  9328 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9329 ;; Tracked objects:
  9330 ;;		On entry : 0/0
  9331 ;;		On exit  : 0/0
  9332 ;;		Unchanged: 0/0
  9333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9334 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9335 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9337 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9338 ;;Total ram usage:        2 bytes
  9339 ;; Hardware stack levels used:    1
  9340 ;; Hardware stack levels required when called:    5
  9341 ;; This function calls:
  9342 ;;		_RfPointSelect
  9343 ;; This function is called by:
  9344 ;;		_CC2500_RxData
  9345 ;; This function uses a non-reentrant model
  9346 ;;
  9347                           
  9348                           
  9349                           ;psect for function _setRF_RxStatus
  9350  1A23                     _setRF_RxStatus:	
  9351                           
  9352                           ;incstack = 0
  9353                           ; Regs used in _setRF_RxStatus: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9354                           ;setRF_RxStatus@rf stored from wreg
  9355  1A23  0020               	movlb	0	; select bank0
  9356  1A24  00A3               	movwf	setRF_RxStatus@rf
  9357                           
  9358                           ;RF_Control_B1.c: 45: RfPointSelect(rf);
  9359  1A25  0823               	movf	setRF_RxStatus@rf,w
  9360  1A26  3199  2188         	fcall	_RfPointSelect
  9361                           
  9362                           ;RF_Control_B1.c: 46: RF->RxStatus=command;
  9363  1A28  0877               	movf	_RF,w
  9364  1A29  0086               	movwf	6
  9365  1A2A  0187               	clrf	7
  9366  1A2B  0020               	movlb	0	; select bank0
  9367  1A2C  0822               	movf	setRF_RxStatus@command,w
  9368  1A2D  1181               	bcf	1,3
  9369  1A2E  1D03               	skipz
  9370  1A2F  1581               	bsf	1,3
  9371  1A30  0008               	return
  9372  1A31                     __end_of_setRF_RxStatus:	
  9373                           
  9374                           	psect	text41
  9375  07E5                     __ptext41:	
  9376 ;; *************** function _CC2500_ReadStatus *****************
  9377 ;; Defined at:
  9378 ;;		line 267 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
  9379 ;; Parameters:    Size  Location     Type
  9380 ;;  status_addr     1    wreg     unsigned char 
  9381 ;; Auto vars:     Size  Location     Type
  9382 ;;  status_addr     1    3[BANK0 ] unsigned char 
  9383 ;; Return value:  Size  Location     Type
  9384 ;;		None               void
  9385 ;; Registers used:
  9386 ;;		wreg, status,2, status,0, pclath, cstack
  9387 ;; Tracked objects:
  9388 ;;		On entry : 0/0
  9389 ;;		On exit  : 0/0
  9390 ;;		Unchanged: 0/0
  9391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9393 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9394 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9395 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9396 ;;Total ram usage:        2 bytes
  9397 ;; Hardware stack levels used:    1
  9398 ;; Hardware stack levels required when called:    5
  9399 ;; This function calls:
  9400 ;;		_CC2500_ReadByte
  9401 ;;		_CC2500_WriteByte
  9402 ;; This function is called by:
  9403 ;;		_CC2500_RxData
  9404 ;; This function uses a non-reentrant model
  9405 ;;
  9406                           
  9407                           
  9408                           ;psect for function _CC2500_ReadStatus
  9409  07E5                     _CC2500_ReadStatus:	
  9410                           
  9411                           ;incstack = 0
  9412                           ; Regs used in _CC2500_ReadStatus: [wreg+status,2+status,0+pclath+cstack]
  9413                           ;CC2500_ReadStatus@status_addr stored from wreg
  9414  07E5  0020               	movlb	0	; select bank0
  9415  07E6  00A3               	movwf	CC2500_ReadStatus@status_addr
  9416                           
  9417                           ;CC2500_B1.c: 269: RC4=0;
  9418  07E7  120E               	bcf	14,4	;volatile
  9419                           
  9420                           ;CC2500_B1.c: 270: SPI0Buffer=status_addr+0xC0;
  9421  07E8  0823               	movf	CC2500_ReadStatus@status_addr,w
  9422  07E9  3EC0               	addlw	192
  9423  07EA  00A2               	movwf	??_CC2500_ReadStatus
  9424  07EB  0822               	movf	??_CC2500_ReadStatus,w
  9425  07EC  0021               	movlb	1	; select bank1
  9426  07ED  00BE               	movwf	_SPI0Buffer^(0+128)
  9427  07EE                     l403:	
  9428                           ;CC2500_B1.c: 272: while(RC2==1);
  9429                           
  9430  07EE  0020               	movlb	0	; select bank0
  9431  07EF  190E               	btfsc	14,2	;volatile
  9432  07F0  2FEE               	goto	l403
  9433                           
  9434                           ;CC2500_B1.c: 274: CC2500_WriteByte();
  9435  07F1  319B  23B8  3187   	fcall	_CC2500_WriteByte
  9436                           
  9437                           ;CC2500_B1.c: 275: CC2500_ReadByte();
  9438  07F4  319C  2488         	fcall	_CC2500_ReadByte
  9439                           
  9440                           ;CC2500_B1.c: 276: RC4=1;
  9441  07F6  0020               	movlb	0	; select bank0
  9442  07F7  160E               	bsf	14,4	;volatile
  9443                           
  9444                           ;CC2500_B1.c: 278: s_data=SPI0Buffer;
  9445  07F8  0021               	movlb	1	; select bank1
  9446  07F9  083E               	movf	_SPI0Buffer^(0+128),w
  9447  07FA  0020               	movlb	0	; select bank0
  9448  07FB  00A2               	movwf	??_CC2500_ReadStatus
  9449  07FC  0822               	movf	??_CC2500_ReadStatus,w
  9450  07FD  0021               	movlb	1	; select bank1
  9451  07FE  00C2               	movwf	_s_data^(0+128)
  9452  07FF  0008               	return
  9453  0800                     __end_of_CC2500_ReadStatus:	
  9454                           
  9455                           	psect	text42
  9456  1C88                     __ptext42:	
  9457 ;; *************** function _CC2500_ReadByte *****************
  9458 ;; Defined at:
  9459 ;;		line 210 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
  9460 ;; Parameters:    Size  Location     Type
  9461 ;;		None
  9462 ;; Auto vars:     Size  Location     Type
  9463 ;;  loop_b          1    1[BANK0 ] unsigned char 
  9464 ;; Return value:  Size  Location     Type
  9465 ;;		None               void
  9466 ;; Registers used:
  9467 ;;		wreg, status,2, status,0
  9468 ;; Tracked objects:
  9469 ;;		On entry : 0/0
  9470 ;;		On exit  : 0/0
  9471 ;;		Unchanged: 0/0
  9472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9473 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9474 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9475 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9476 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9477 ;;Total ram usage:        2 bytes
  9478 ;; Hardware stack levels used:    1
  9479 ;; Hardware stack levels required when called:    4
  9480 ;; This function calls:
  9481 ;;		Nothing
  9482 ;; This function is called by:
  9483 ;;		_CC2500_RxData
  9484 ;;		_CC2500_ReadStatus
  9485 ;;		_CC2500_ReadREG
  9486 ;; This function uses a non-reentrant model
  9487 ;;
  9488                           
  9489                           
  9490                           ;psect for function _CC2500_ReadByte
  9491  1C88                     _CC2500_ReadByte:	
  9492                           
  9493                           ;CC2500_B1.c: 212: unsigned char loop_b;
  9494                           ;CC2500_B1.c: 213: for(loop_b=0;loop_b<8;loop_b++)
  9495                           
  9496                           ;incstack = 0
  9497                           ; Regs used in _CC2500_ReadByte: [wreg+status,2+status,0]
  9498  1C88  0020               	movlb	0	; select bank0
  9499  1C89  01A1               	clrf	CC2500_ReadByte@loop_b
  9500  1C8A                     L11:	
  9501  1C8A  3008               	movlw	8
  9502  1C8B  0221               	subwf	CC2500_ReadByte@loop_b,w
  9503  1C8C  1803               	btfsc	3,0
  9504  1C8D  0008               	return
  9505                           
  9506                           ;CC2500_B1.c: 214: {
  9507                           ;CC2500_B1.c: 215: RC1=1;
  9508  1C8E  148E               	bsf	14,1	;volatile
  9509                           
  9510                           ;CC2500_B1.c: 216: SPI0Buffer<<=1;
  9511  1C8F  1003               	clrc
  9512  1C90  0021               	movlb	1	; select bank1
  9513  1C91  0DBE               	rlf	_SPI0Buffer^(0+128),f
  9514                           
  9515                           ;CC2500_B1.c: 217: if(RC2 == 1)
  9516  1C92  0020               	movlb	0	; select bank0
  9517  1C93  1D0E               	btfss	14,2	;volatile
  9518  1C94  2C98               	goto	l8483
  9519                           
  9520                           ;CC2500_B1.c: 218: SPI0Buffer |= 0x01;
  9521  1C95  0021               	movlb	1	; select bank1
  9522  1C96  143E               	bsf	_SPI0Buffer^(0+128),0
  9523  1C97  2C9E               	goto	l8485
  9524  1C98                     l8483:	
  9525                           
  9526                           ;CC2500_B1.c: 219: else
  9527                           ;CC2500_B1.c: 220: SPI0Buffer &= 0xFE;
  9528  1C98  30FE               	movlw	254
  9529  1C99  0020               	movlb	0	; select bank0
  9530  1C9A  00A0               	movwf	??_CC2500_ReadByte
  9531  1C9B  0820               	movf	??_CC2500_ReadByte,w
  9532  1C9C  0021               	movlb	1	; select bank1
  9533  1C9D  05BE               	andwf	_SPI0Buffer^(0+128),f
  9534  1C9E                     l8485:	
  9535                           
  9536                           ;CC2500_B1.c: 221: RC1=0;
  9537  1C9E  0020               	movlb	0	; select bank0
  9538  1C9F  108E               	bcf	14,1	;volatile
  9539  1CA0  3001               	movlw	1
  9540  1CA1  00A0               	movwf	??_CC2500_ReadByte
  9541  1CA2  0820               	movf	??_CC2500_ReadByte,w
  9542  1CA3  07A1               	addwf	CC2500_ReadByte@loop_b,f
  9543  1CA4  2C8A               	goto	L11
  9544  1CA5                     __end_of_CC2500_ReadByte:	
  9545                           
  9546                           	psect	text43
  9547  18F3                     __ptext43:	
  9548 ;; *************** function _RF_Initialization *****************
  9549 ;; Defined at:
  9550 ;;		line 17 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
  9551 ;; Parameters:    Size  Location     Type
  9552 ;;		None
  9553 ;; Auto vars:     Size  Location     Type
  9554 ;;		None
  9555 ;; Return value:  Size  Location     Type
  9556 ;;		None               void
  9557 ;; Registers used:
  9558 ;;		wreg, status,2, status,0, pclath, cstack
  9559 ;; Tracked objects:
  9560 ;;		On entry : 0/0
  9561 ;;		On exit  : 0/0
  9562 ;;		Unchanged: 0/0
  9563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9564 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9565 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9567 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9568 ;;Total ram usage:        0 bytes
  9569 ;; Hardware stack levels used:    1
  9570 ;; Hardware stack levels required when called:    5
  9571 ;; This function calls:
  9572 ;;		_setRF_Initialization
  9573 ;; This function is called by:
  9574 ;;		_main
  9575 ;; This function uses a non-reentrant model
  9576 ;;
  9577                           
  9578                           
  9579                           ;psect for function _RF_Initialization
  9580  18F3                     _RF_Initialization:	
  9581                           
  9582                           ;RF_Control_B1.c: 20: setRF_Initialization(1);
  9583                           
  9584                           ;incstack = 0
  9585                           ; Regs used in _RF_Initialization: [wreg+status,2+status,0+pclath+cstack]
  9586  18F3  3001               	movlw	1
  9587  18F4  3199  2127         	fcall	_setRF_Initialization
  9588  18F6  0008               	return
  9589  18F7                     __end_of_RF_Initialization:	
  9590                           
  9591                           	psect	text44
  9592  1927                     __ptext44:	
  9593 ;; *************** function _setRF_Initialization *****************
  9594 ;; Defined at:
  9595 ;;		line 50 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
  9596 ;; Parameters:    Size  Location     Type
  9597 ;;  rf              1    wreg     unsigned char 
  9598 ;; Auto vars:     Size  Location     Type
  9599 ;;  rf              1    0[COMMON] unsigned char 
  9600 ;; Return value:  Size  Location     Type
  9601 ;;		None               void
  9602 ;; Registers used:
  9603 ;;		wreg
  9604 ;; Tracked objects:
  9605 ;;		On entry : 0/0
  9606 ;;		On exit  : 0/0
  9607 ;;		Unchanged: 0/0
  9608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9609 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9610 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9611 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9612 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9613 ;;Total ram usage:        1 bytes
  9614 ;; Hardware stack levels used:    1
  9615 ;; Hardware stack levels required when called:    4
  9616 ;; This function calls:
  9617 ;;		Nothing
  9618 ;; This function is called by:
  9619 ;;		_RF_Initialization
  9620 ;; This function uses a non-reentrant model
  9621 ;;
  9622                           
  9623                           
  9624                           ;psect for function _setRF_Initialization
  9625  1927                     _setRF_Initialization:	
  9626                           
  9627                           ;RF_Control_B1.c: 54: Tx_Length=21;
  9628                           
  9629                           ;incstack = 0
  9630                           ; Regs used in _setRF_Initialization: [wreg]
  9631  1927  3015               	movlw	21
  9632  1928  0020               	movlb	0	; select bank0
  9633  1929  00A0               	movwf	??_setRF_Initialization
  9634  192A  0820               	movf	??_setRF_Initialization,w
  9635  192B  0021               	movlb	1	; select bank1
  9636  192C  00BF               	movwf	_Tx_Length^(0+128)
  9637  192D  0008               	return
  9638  192E                     __end_of_setRF_Initialization:	
  9639                           
  9640                           	psect	text45
  9641  18DE                     __ptext45:	
  9642 ;; *************** function _PowerFault_Main *****************
  9643 ;; Defined at:
  9644 ;;		line 22 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\PowerFault_B1.c"
  9645 ;; Parameters:    Size  Location     Type
  9646 ;;		None
  9647 ;; Auto vars:     Size  Location     Type
  9648 ;;		None
  9649 ;; Return value:  Size  Location     Type
  9650 ;;		None               void
  9651 ;; Registers used:
  9652 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9653 ;; Tracked objects:
  9654 ;;		On entry : 0/0
  9655 ;;		On exit  : 0/0
  9656 ;;		Unchanged: 0/0
  9657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9661 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9662 ;;Total ram usage:        0 bytes
  9663 ;; Hardware stack levels used:    1
  9664 ;; Hardware stack levels required when called:   10
  9665 ;; This function calls:
  9666 ;;		_setPowerFault_Main
  9667 ;; This function is called by:
  9668 ;;		_main
  9669 ;; This function uses a non-reentrant model
  9670 ;;
  9671                           
  9672                           
  9673                           ;psect for function _PowerFault_Main
  9674  18DE                     _PowerFault_Main:	
  9675                           
  9676                           ;PowerFault_B1.c: 25: setPowerFault_Main();
  9677                           
  9678                           ;incstack = 0
  9679                           ; Regs used in _PowerFault_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9680  18DE  3186  2614         	fcall	_setPowerFault_Main
  9681  18E0  0008               	return
  9682  18E1                     __end_of_PowerFault_Main:	
  9683                           
  9684                           	psect	text46
  9685  0614                     __ptext46:	
  9686 ;; *************** function _setPowerFault_Main *****************
  9687 ;; Defined at:
  9688 ;;		line 61 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\PowerFault_B1.c"
  9689 ;; Parameters:    Size  Location     Type
  9690 ;;		None
  9691 ;; Auto vars:     Size  Location     Type
  9692 ;;		None
  9693 ;; Return value:  Size  Location     Type
  9694 ;;		None               void
  9695 ;; Registers used:
  9696 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9697 ;; Tracked objects:
  9698 ;;		On entry : 0/0
  9699 ;;		On exit  : 0/0
  9700 ;;		Unchanged: 0/0
  9701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9702 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9703 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9704 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9705 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9706 ;;Total ram usage:        2 bytes
  9707 ;; Hardware stack levels used:    1
  9708 ;; Hardware stack levels required when called:    9
  9709 ;; This function calls:
  9710 ;;		_getTemp_Safe
  9711 ;;		_setPowerFault_Exceptions
  9712 ;; This function is called by:
  9713 ;;		_PowerFault_Main
  9714 ;; This function uses a non-reentrant model
  9715 ;;
  9716                           
  9717                           
  9718                           ;psect for function _setPowerFault_Main
  9719  0614                     _setPowerFault_Main:	
  9720                           
  9721                           ;PowerFault_B1.c: 63: if(PF->Enable)
  9722                           
  9723                           ;incstack = 0
  9724                           ; Regs used in _setPowerFault_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9725  0614  0876               	movf	_PF,w
  9726  0615  0086               	movwf	6
  9727  0616  3001               	movlw	1	; select bank2/3
  9728  0617  0087               	movwf	7
  9729  0618  1C01               	btfss	1,0
  9730  0619  0008               	return
  9731                           
  9732                           ;PowerFault_B1.c: 64: {
  9733                           ;PowerFault_B1.c: 65: if(PF->ADtoGO == 0)
  9734  061A  0876               	movf	_PF,w
  9735  061B  0086               	movwf	6
  9736  061C  3001               	movlw	1	; select bank2/3
  9737  061D  0087               	movwf	7
  9738  061E  1981               	btfsc	1,3
  9739  061F  2E5E               	goto	l9411
  9740                           
  9741                           ;PowerFault_B1.c: 66: {
  9742                           ;PowerFault_B1.c: 67: PF->Time++;
  9743  0620  0876               	movf	_PF,w
  9744  0621  3E06               	addlw	6
  9745  0622  0086               	movwf	6
  9746  0623  3001               	movlw	1	; select bank2/3
  9747  0624  0087               	movwf	7
  9748  0625  3001               	movlw	1
  9749  0626  0781               	addwf	1,f
  9750  0627  3141               	addfsr 1,1
  9751  0628  1803               	skipnc
  9752  0629  0A81               	incf	1,f
  9753                           
  9754                           ;PowerFault_B1.c: 69: {
  9755                           ;PowerFault_B1.c: 70: if(1 && getTemp_Safe())
  9756  062A  0876               	movf	_PF,w
  9757  062B  3E06               	addlw	6
  9758  062C  0086               	movwf	6
  9759  062D  3001               	movlw	1	; select bank2/3
  9760  062E  0087               	movwf	7
  9761  062F  3F40               	moviw [0]fsr1
  9762  0630  0020               	movlb	0	; select bank0
  9763  0631  00AD               	movwf	??_setPowerFault_Main
  9764  0632  3F41               	moviw [1]fsr1
  9765  0633  00AE               	movwf	??_setPowerFault_Main+1
  9766  0634  3002               	movlw	2
  9767  0635  022E               	subwf	??_setPowerFault_Main+1,w
  9768  0636  30BC               	movlw	188
  9769  0637  1903               	skipnz
  9770  0638  022D               	subwf	??_setPowerFault_Main,w
  9771  0639  1C03               	skipc
  9772  063A  0008               	return
  9773  063B  3199  2120  3186   	fcall	_getTemp_Safe
  9774  063E  3A00               	xorlw	0
  9775  063F  1903               	skipnz
  9776  0640  2E54               	goto	l9409
  9777                           
  9778                           ;PowerFault_B1.c: 71: {
  9779                           ;PowerFault_B1.c: 72: PF->Time=0;
  9780  0641  0876               	movf	_PF,w
  9781  0642  3E06               	addlw	6
  9782  0643  0086               	movwf	6
  9783  0644  3001               	movlw	1	; select bank2/3
  9784  0645  0087               	movwf	7
  9785  0646  3000               	movlw	0
  9786  0647  3FC0               	movwi [0]fsr1
  9787  0648  3FC1               	movwi [1]fsr1
  9788                           
  9789                           ;PowerFault_B1.c: 73: PF->ADtoGO=1;
  9790  0649  0876               	movf	_PF,w
  9791  064A  0086               	movwf	6
  9792  064B  3001               	movlw	1	; select bank2/3
  9793  064C  0087               	movwf	7
  9794  064D  1581               	bsf	1,3
  9795                           
  9796                           ;PowerFault_B1.c: 74: PF->Safe=0;
  9797  064E  0876               	movf	_PF,w
  9798  064F  0086               	movwf	6
  9799  0650  3001               	movlw	1	; select bank2/3
  9800  0651  0087               	movwf	7
  9801  0652  1101               	bcf	1,2
  9802                           
  9803                           ;PowerFault_B1.c: 75: }
  9804  0653  0008               	return
  9805  0654                     l9409:	
  9806                           
  9807                           ;PowerFault_B1.c: 76: else
  9808                           ;PowerFault_B1.c: 77: {
  9809                           ;PowerFault_B1.c: 78: PF->Time=700;
  9810  0654  0876               	movf	_PF,w
  9811  0655  3E06               	addlw	6
  9812  0656  0086               	movwf	6
  9813  0657  3001               	movlw	1	; select bank2/3
  9814  0658  0087               	movwf	7
  9815  0659  30BC               	movlw	188
  9816  065A  3FC0               	movwi [0]fsr1
  9817  065B  3002               	movlw	2
  9818  065C  3FC1               	movwi [1]fsr1
  9819                           
  9820                           ;PowerFault_B1.c: 79: }
  9821                           ;PowerFault_B1.c: 80: }
  9822                           ;PowerFault_B1.c: 81: }
  9823  065D  0008               	return
  9824  065E                     l9411:	
  9825                           
  9826                           ;PowerFault_B1.c: 82: else
  9827                           ;PowerFault_B1.c: 83: {
  9828                           ;PowerFault_B1.c: 84: PF->Time++;
  9829  065E  0876               	movf	_PF,w
  9830  065F  3E06               	addlw	6
  9831  0660  0086               	movwf	6
  9832  0661  3001               	movlw	1	; select bank2/3
  9833  0662  0087               	movwf	7
  9834  0663  3001               	movlw	1
  9835  0664  0781               	addwf	1,f
  9836  0665  3141               	addfsr 1,1
  9837  0666  1803               	skipnc
  9838  0667  0A81               	incf	1,f
  9839                           
  9840                           ;PowerFault_B1.c: 85: if(PF->Time >= 2)
  9841  0668  0876               	movf	_PF,w
  9842  0669  3E06               	addlw	6
  9843  066A  0086               	movwf	6
  9844  066B  3001               	movlw	1	; select bank2/3
  9845  066C  0087               	movwf	7
  9846  066D  3F40               	moviw [0]fsr1
  9847  066E  0020               	movlb	0	; select bank0
  9848  066F  00AD               	movwf	??_setPowerFault_Main
  9849  0670  3F41               	moviw [1]fsr1
  9850  0671  00AE               	movwf	??_setPowerFault_Main+1
  9851  0672  3000               	movlw	0
  9852  0673  022E               	subwf	??_setPowerFault_Main+1,w
  9853  0674  3002               	movlw	2
  9854  0675  1903               	skipnz
  9855  0676  022D               	subwf	??_setPowerFault_Main,w
  9856  0677  1C03               	skipc
  9857  0678  0008               	return
  9858                           
  9859                           ;PowerFault_B1.c: 86: {
  9860                           ;PowerFault_B1.c: 87: PF->Time=0;
  9861  0679  0876               	movf	_PF,w
  9862  067A  3E06               	addlw	6
  9863  067B  0086               	movwf	6
  9864  067C  3001               	movlw	1	; select bank2/3
  9865  067D  0087               	movwf	7
  9866  067E  3000               	movlw	0
  9867  067F  3FC0               	movwi [0]fsr1
  9868  0680  3FC1               	movwi [1]fsr1
  9869                           
  9870                           ;PowerFault_B1.c: 88: PF->ADtoGO=0;
  9871  0681  0876               	movf	_PF,w
  9872  0682  0086               	movwf	6
  9873  0683  3001               	movlw	1	; select bank2/3
  9874  0684  0087               	movwf	7
  9875  0685  1181               	bcf	1,3
  9876                           
  9877                           ;PowerFault_B1.c: 90: if(PF->ERROR)
  9878  0686  0876               	movf	_PF,w
  9879  0687  0086               	movwf	6
  9880  0688  3001               	movlw	1	; select bank2/3
  9881  0689  0087               	movwf	7
  9882  068A  1C81               	btfss	1,1
  9883  068B  2EC7               	goto	l9431
  9884                           
  9885                           ;PowerFault_B1.c: 91: {
  9886                           ;PowerFault_B1.c: 92: if(PF->AD <= (300+100) && PF->AD >= (300-100))
  9887  068C  0A76               	incf	_PF,w
  9888  068D  0086               	movwf	6
  9889  068E  3001               	movlw	1	; select bank2/3
  9890  068F  0087               	movwf	7
  9891  0690  3F40               	moviw [0]fsr1
  9892  0691  00AD               	movwf	??_setPowerFault_Main
  9893  0692  3F41               	moviw [1]fsr1
  9894  0693  00AE               	movwf	??_setPowerFault_Main+1
  9895  0694  3001               	movlw	1
  9896  0695  022E               	subwf	??_setPowerFault_Main+1,w
  9897  0696  3091               	movlw	145
  9898  0697  1903               	skipnz
  9899  0698  022D               	subwf	??_setPowerFault_Main,w
  9900  0699  1803               	skipnc
  9901  069A  2F03               	goto	l9443
  9902  069B  0A76               	incf	_PF,w
  9903  069C  0086               	movwf	6
  9904  069D  3001               	movlw	1	; select bank2/3
  9905  069E  0087               	movwf	7
  9906  069F  3F40               	moviw [0]fsr1
  9907  06A0  00AD               	movwf	??_setPowerFault_Main
  9908  06A1  3F41               	moviw [1]fsr1
  9909  06A2  00AE               	movwf	??_setPowerFault_Main+1
  9910  06A3  3000               	movlw	0
  9911  06A4  022E               	subwf	??_setPowerFault_Main+1,w
  9912  06A5  30C8               	movlw	200
  9913  06A6  1903               	skipnz
  9914  06A7  022D               	subwf	??_setPowerFault_Main,w
  9915  06A8  1C03               	skipc
  9916  06A9  2F03               	goto	l9443
  9917                           
  9918                           ;PowerFault_B1.c: 93: {
  9919                           ;PowerFault_B1.c: 94: PF->Count++;
  9920  06AA  3001               	movlw	1
  9921  06AB  00AD               	movwf	??_setPowerFault_Main
  9922  06AC  0876               	movf	_PF,w
  9923  06AD  3E05               	addlw	5
  9924  06AE  0086               	movwf	6
  9925  06AF  3001               	movlw	1	; select bank2/3
  9926  06B0  0087               	movwf	7
  9927  06B1  082D               	movf	??_setPowerFault_Main,w
  9928  06B2  0781               	addwf	1,f
  9929                           
  9930                           ;PowerFault_B1.c: 95: if(PF->Count > 1)
  9931  06B3  0876               	movf	_PF,w
  9932  06B4  3E05               	addlw	5
  9933  06B5  0086               	movwf	6
  9934  06B6  3001               	movlw	1	; select bank2/3
  9935  06B7  0087               	movwf	7
  9936  06B8  3002               	movlw	2
  9937  06B9  0201               	subwf	1,w
  9938  06BA  1C03               	skipc
  9939  06BB  2F09               	goto	l9445
  9940                           
  9941                           ;PowerFault_B1.c: 96: {
  9942                           ;PowerFault_B1.c: 97: PF->Count=0;
  9943  06BC  0876               	movf	_PF,w
  9944  06BD  3E05               	addlw	5
  9945  06BE  0086               	movwf	6
  9946  06BF  3001               	movlw	1	; select bank2/3
  9947  06C0  0087               	movwf	7
  9948  06C1  0181               	clrf	1
  9949                           
  9950                           ;PowerFault_B1.c: 98: setPowerFault_Exceptions(0);
  9951  06C2  3000               	movlw	0
  9952  06C3  319F  2749  3186   	fcall	_setPowerFault_Exceptions
  9953                           
  9954                           ;PowerFault_B1.c: 99: }
  9955                           ;PowerFault_B1.c: 100: }
  9956  06C6  2F09               	goto	l9445
  9957  06C7                     l9431:	
  9958                           ;PowerFault_B1.c: 104: }
  9959                           ;PowerFault_B1.c: 105: }
  9960                           
  9961                           ;PowerFault_B1.c: 101: else
  9962                           ;PowerFault_B1.c: 102: {
  9963                           ;PowerFault_B1.c: 103: PF->Count=0;
  9964                           
  9965                           
  9966                           ;PowerFault_B1.c: 106: else
  9967                           ;PowerFault_B1.c: 107: {
  9968                           ;PowerFault_B1.c: 108: if(PF->AD >= (300+100) || PF->AD <= (310-100))
  9969  06C7  0A76               	incf	_PF,w
  9970  06C8  0086               	movwf	6
  9971  06C9  3001               	movlw	1	; select bank2/3
  9972  06CA  0087               	movwf	7
  9973  06CB  3F40               	moviw [0]fsr1
  9974  06CC  0020               	movlb	0	; select bank0
  9975  06CD  00AD               	movwf	??_setPowerFault_Main
  9976  06CE  3F41               	moviw [1]fsr1
  9977  06CF  00AE               	movwf	??_setPowerFault_Main+1
  9978  06D0  3001               	movlw	1
  9979  06D1  022E               	subwf	??_setPowerFault_Main+1,w
  9980  06D2  3090               	movlw	144
  9981  06D3  1903               	skipnz
  9982  06D4  022D               	subwf	??_setPowerFault_Main,w
  9983  06D5  1803               	skipnc
  9984  06D6  2EE6               	goto	l9435
  9985  06D7  0A76               	incf	_PF,w
  9986  06D8  0086               	movwf	6
  9987  06D9  3001               	movlw	1	; select bank2/3
  9988  06DA  0087               	movwf	7
  9989  06DB  3F40               	moviw [0]fsr1
  9990  06DC  00AD               	movwf	??_setPowerFault_Main
  9991  06DD  3F41               	moviw [1]fsr1
  9992  06DE  00AE               	movwf	??_setPowerFault_Main+1
  9993  06DF  3000               	movlw	0
  9994  06E0  022E               	subwf	??_setPowerFault_Main+1,w
  9995  06E1  30D3               	movlw	211
  9996  06E2  1903               	skipnz
  9997  06E3  022D               	subwf	??_setPowerFault_Main,w
  9998  06E4  1803               	skipnc
  9999  06E5  2F03               	goto	l9443
 10000  06E6                     l9435:	
 10001                           
 10002                           ;PowerFault_B1.c: 109: {
 10003                           ;PowerFault_B1.c: 110: PF->Count++;
 10004  06E6  3001               	movlw	1
 10005  06E7  00AD               	movwf	??_setPowerFault_Main
 10006  06E8  0876               	movf	_PF,w
 10007  06E9  3E05               	addlw	5
 10008  06EA  0086               	movwf	6
 10009  06EB  3001               	movlw	1	; select bank2/3
 10010  06EC  0087               	movwf	7
 10011  06ED  082D               	movf	??_setPowerFault_Main,w
 10012  06EE  0781               	addwf	1,f
 10013                           
 10014                           ;PowerFault_B1.c: 111: if(PF->Count > 1)
 10015  06EF  0876               	movf	_PF,w
 10016  06F0  3E05               	addlw	5
 10017  06F1  0086               	movwf	6
 10018  06F2  3001               	movlw	1	; select bank2/3
 10019  06F3  0087               	movwf	7
 10020  06F4  3002               	movlw	2
 10021  06F5  0201               	subwf	1,w
 10022  06F6  1C03               	skipc
 10023  06F7  2F09               	goto	l9445
 10024                           
 10025                           ;PowerFault_B1.c: 112: {
 10026                           ;PowerFault_B1.c: 113: PF->Count=0;
 10027  06F8  0876               	movf	_PF,w
 10028  06F9  3E05               	addlw	5
 10029  06FA  0086               	movwf	6
 10030  06FB  3001               	movlw	1	; select bank2/3
 10031  06FC  0087               	movwf	7
 10032  06FD  0181               	clrf	1
 10033                           
 10034                           ;PowerFault_B1.c: 114: setPowerFault_Exceptions(1);
 10035  06FE  3001               	movlw	1
 10036  06FF  319F  2749  3186   	fcall	_setPowerFault_Exceptions
 10037                           
 10038                           ;PowerFault_B1.c: 115: }
 10039                           ;PowerFault_B1.c: 116: }
 10040  0702  2F09               	goto	l9445
 10041  0703                     l9443:	
 10042                           
 10043                           ;PowerFault_B1.c: 117: else
 10044                           ;PowerFault_B1.c: 118: {
 10045                           ;PowerFault_B1.c: 119: PF->Count=0;
 10046  0703  0876               	movf	_PF,w
 10047  0704  3E05               	addlw	5
 10048  0705  0086               	movwf	6
 10049  0706  3001               	movlw	1	; select bank2/3
 10050  0707  0087               	movwf	7
 10051  0708  0181               	clrf	1
 10052  0709                     l9445:	
 10053                           
 10054                           ;PowerFault_B1.c: 120: }
 10055                           ;PowerFault_B1.c: 122: }
 10056                           ;PowerFault_B1.c: 123: if(PF->ERROR == 0)
 10057  0709  0876               	movf	_PF,w
 10058  070A  0086               	movwf	6
 10059  070B  3001               	movlw	1	; select bank2/3
 10060  070C  0087               	movwf	7
 10061  070D  1881               	btfsc	1,1
 10062  070E  2F14               	goto	l2357
 10063                           
 10064                           ;PowerFault_B1.c: 124: {
 10065                           ;PowerFault_B1.c: 125: PF->Safe=1;
 10066  070F  0876               	movf	_PF,w
 10067  0710  0086               	movwf	6
 10068  0711  3001               	movlw	1	; select bank2/3
 10069  0712  0087               	movwf	7
 10070  0713  1501               	bsf	1,2
 10071  0714                     l2357:	
 10072                           
 10073                           ;PowerFault_B1.c: 126: }
 10074                           ;PowerFault_B1.c: 127: PF->AD=0;
 10075  0714  0A76               	incf	_PF,w
 10076  0715  0086               	movwf	6
 10077  0716  3001               	movlw	1	; select bank2/3
 10078  0717  0087               	movwf	7
 10079  0718  3000               	movlw	0
 10080  0719  3FC0               	movwi [0]fsr1
 10081  071A  3FC1               	movwi [1]fsr1
 10082  071B  0008               	return
 10083  071C                     __end_of_setPowerFault_Main:	
 10084                           
 10085                           	psect	text47
 10086  1F49                     __ptext47:	
 10087 ;; *************** function _setPowerFault_Exceptions *****************
 10088 ;; Defined at:
 10089 ;;		line 133 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\PowerFault_B1.c"
 10090 ;; Parameters:    Size  Location     Type
 10091 ;;  command         1    wreg     unsigned char 
 10092 ;; Auto vars:     Size  Location     Type
 10093 ;;  command         1   12[BANK0 ] unsigned char 
 10094 ;; Return value:  Size  Location     Type
 10095 ;;		None               void
 10096 ;; Registers used:
 10097 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10098 ;; Tracked objects:
 10099 ;;		On entry : 0/0
 10100 ;;		On exit  : 0/0
 10101 ;;		Unchanged: 0/0
 10102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10104 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10105 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10106 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10107 ;;Total ram usage:        2 bytes
 10108 ;; Hardware stack levels used:    1
 10109 ;; Hardware stack levels required when called:    8
 10110 ;; This function calls:
 10111 ;;		_DimmerLights_Exceptions
 10112 ;;		_setLED
 10113 ;;		_setRF_Enable
 10114 ;;		_setSw_Enable
 10115 ;; This function is called by:
 10116 ;;		_setPowerFault_Main
 10117 ;; This function uses a non-reentrant model
 10118 ;;
 10119                           
 10120                           
 10121                           ;psect for function _setPowerFault_Exceptions
 10122  1F49                     _setPowerFault_Exceptions:	
 10123                           
 10124                           ;incstack = 0
 10125                           ; Regs used in _setPowerFault_Exceptions: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cst
      +                          ack]
 10126                           ;setPowerFault_Exceptions@command stored from wreg
 10127  1F49  0020               	movlb	0	; select bank0
 10128  1F4A  00AC               	movwf	setPowerFault_Exceptions@command
 10129                           
 10130                           ;PowerFault_B1.c: 135: PF->ERROR=command;
 10131  1F4B  0876               	movf	_PF,w
 10132  1F4C  0086               	movwf	6
 10133  1F4D  3001               	movlw	1	; select bank2/3
 10134  1F4E  0087               	movwf	7
 10135  1F4F  082C               	movf	setPowerFault_Exceptions@command,w
 10136  1F50  1081               	bcf	1,1
 10137  1F51  1D03               	skipz
 10138  1F52  1481               	bsf	1,1
 10139                           
 10140                           ;PowerFault_B1.c: 136: PF->Safe=(~command) & 0x01;
 10141  1F53  092C               	comf	setPowerFault_Exceptions@command,w
 10142  1F54  3901               	andlw	1
 10143  1F55  00AB               	movwf	??_setPowerFault_Exceptions
 10144  1F56  0876               	movf	_PF,w
 10145  1F57  0086               	movwf	6
 10146  1F58  3001               	movlw	1	; select bank2/3
 10147  1F59  0087               	movwf	7
 10148  1F5A  0DAB               	rlf	??_setPowerFault_Exceptions,f
 10149  1F5B  0DAB               	rlf	??_setPowerFault_Exceptions,f
 10150  1F5C  0801               	movf	1,w
 10151  1F5D  062B               	xorwf	??_setPowerFault_Exceptions,w
 10152  1F5E  39FB               	andlw	-5
 10153  1F5F  062B               	xorwf	??_setPowerFault_Exceptions,w
 10154  1F60  0081               	movwf	1
 10155                           
 10156                           ;PowerFault_B1.c: 137: if(command == 1)
 10157  1F61  082C               	movf	setPowerFault_Exceptions@command,w
 10158  1F62  3A01               	xorlw	1
 10159  1F63  1D03               	skipz
 10160  1F64  2F69               	goto	l2361
 10161                           
 10162                           ;PowerFault_B1.c: 138: {
 10163                           ;PowerFault_B1.c: 139: DimmerLights_Exceptions(3);
 10164  1F65  3003               	movlw	3
 10165  1F66  3194  24FB  319F   	fcall	_DimmerLights_Exceptions
 10166  1F69                     l2361:	
 10167                           
 10168                           ;PowerFault_B1.c: 143: }
 10169                           ;PowerFault_B1.c: 144: setLED(99,command+10);
 10170  1F69  0020               	movlb	0	; select bank0
 10171  1F6A  082C               	movf	setPowerFault_Exceptions@command,w
 10172  1F6B  3E0A               	addlw	10
 10173  1F6C  00AB               	movwf	??_setPowerFault_Exceptions
 10174  1F6D  082B               	movf	??_setPowerFault_Exceptions,w
 10175  1F6E  00A2               	movwf	setLED@command
 10176  1F6F  3063               	movlw	99
 10177  1F70  3193  2373  319F   	fcall	_setLED
 10178                           
 10179                           ;PowerFault_B1.c: 146: setSw_Enable((~command) & 0x01);
 10180  1F73  0020               	movlb	0	; select bank0
 10181  1F74  092C               	comf	setPowerFault_Exceptions@command,w
 10182  1F75  3901               	andlw	1
 10183  1F76  319C  2450  319F   	fcall	_setSw_Enable
 10184                           
 10185                           ;PowerFault_B1.c: 148: setRF_Enable(1,(~command) & 0x01);
 10186  1F79  0020               	movlb	0	; select bank0
 10187  1F7A  092C               	comf	setPowerFault_Exceptions@command,w
 10188  1F7B  3901               	andlw	1
 10189  1F7C  00AB               	movwf	??_setPowerFault_Exceptions
 10190  1F7D  082B               	movf	??_setPowerFault_Exceptions,w
 10191  1F7E  00A2               	movwf	setRF_Enable@command
 10192  1F7F  3001               	movlw	1
 10193  1F80  319E  2605         	fcall	_setRF_Enable
 10194  1F82  0008               	return
 10195  1F83                     __end_of_setPowerFault_Exceptions:	
 10196                           
 10197                           	psect	text48
 10198  14FB                     __ptext48:	
 10199 ;; *************** function _DimmerLights_Exceptions *****************
 10200 ;; Defined at:
 10201 ;;		line 246 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 10202 ;; Parameters:    Size  Location     Type
 10203 ;;  status          1    wreg     unsigned char 
 10204 ;; Auto vars:     Size  Location     Type
 10205 ;;  status          1   10[BANK0 ] unsigned char 
 10206 ;; Return value:  Size  Location     Type
 10207 ;;		None               void
 10208 ;; Registers used:
 10209 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10210 ;; Tracked objects:
 10211 ;;		On entry : 0/0
 10212 ;;		On exit  : 0/0
 10213 ;;		Unchanged: 0/0
 10214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10216 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10218 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10219 ;;Total ram usage:        1 bytes
 10220 ;; Hardware stack levels used:    1
 10221 ;; Hardware stack levels required when called:    7
 10222 ;; This function calls:
 10223 ;;		_getDimmerLights_StatusFlag
 10224 ;;		_setBuz
 10225 ;;		_setDimmerLights_ERROR
 10226 ;;		_setDimmerLights_TriggerERROR
 10227 ;; This function is called by:
 10228 ;;		_setOverTemp_Exceptions
 10229 ;;		_setPowerFault_Exceptions
 10230 ;; This function uses a non-reentrant model
 10231 ;;
 10232                           
 10233                           
 10234                           ;psect for function _DimmerLights_Exceptions
 10235  14FB                     _DimmerLights_Exceptions:	
 10236                           
 10237                           ;incstack = 0
 10238                           ; Regs used in _DimmerLights_Exceptions: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 10239                           ;DimmerLights_Exceptions@status stored from wreg
 10240  14FB  0020               	movlb	0	; select bank0
 10241  14FC  00AA               	movwf	DimmerLights_Exceptions@status
 10242                           
 10243                           ;Dimmer_B1.c: 248: if(status == 1)
 10244  14FD  082A               	movf	DimmerLights_Exceptions@status,w
 10245  14FE  3A01               	xorlw	1
 10246  14FF  1D03               	skipz
 10247  1500  2D11               	goto	l8629
 10248                           
 10249                           ;Dimmer_B1.c: 249: {
 10250                           ;Dimmer_B1.c: 250: if(getDimmerLights_StatusFlag())
 10251  1501  319B  235C  3194   	fcall	_getDimmerLights_StatusFlag
 10252  1504  3A00               	xorlw	0
 10253  1505  1903               	skipnz
 10254  1506  2D29               	goto	l8635
 10255                           
 10256                           ;Dimmer_B1.c: 251: {
 10257                           ;Dimmer_B1.c: 252: setBuz(10,300);
 10258  1507  302C               	movlw	44
 10259  1508  0020               	movlb	0	; select bank0
 10260  1509  00A6               	movwf	setBuz@time
 10261  150A  3001               	movlw	1
 10262  150B  00A7               	movwf	setBuz@time+1
 10263  150C  300A               	movlw	10
 10264  150D  3197  2789  3194   	fcall	_setBuz
 10265  1510  2D29               	goto	l8635
 10266  1511                     l8629:	
 10267                           ;Dimmer_B1.c: 264: }
 10268                           
 10269                           ;Dimmer_B1.c: 259: setDimmerLights_ERROR(2);
 10270                           
 10271                           ;Dimmer_B1.c: 253: }
 10272                           ;Dimmer_B1.c: 256: setDimmerLights_ERROR(1);
 10273                           
 10274                           
 10275                           ;Dimmer_B1.c: 265: else if(status == 2)
 10276  1511  0020               	movlb	0	; select bank0
 10277  1512  082A               	movf	DimmerLights_Exceptions@status,w
 10278  1513  3A02               	xorlw	2
 10279  1514  1D03               	skipz
 10280  1515  2D24               	goto	l8633
 10281                           
 10282                           ;Dimmer_B1.c: 266: {
 10283                           ;Dimmer_B1.c: 267: setBuz(5,300);
 10284  1516  302C               	movlw	44
 10285  1517  00A6               	movwf	setBuz@time
 10286  1518  3001               	movlw	1
 10287  1519  00A7               	movwf	setBuz@time+1
 10288  151A  3005               	movlw	5
 10289  151B  3197  2789  3194   	fcall	_setBuz
 10290                           
 10291                           ;Dimmer_B1.c: 268: setDimmerLights_ERROR(Dimmer->Load);
 10292  151E  0021               	movlb	1	; select bank1
 10293  151F  0A38               	incf	_Dimmer^(0+128),w
 10294  1520  0086               	movwf	6
 10295  1521  0187               	clrf	7
 10296  1522  0801               	movf	1,w
 10297  1523  2D2E               	goto	L12
 10298  1524                     l8633:	
 10299                           ;Dimmer_B1.c: 269: }
 10300                           
 10301                           
 10302                           ;Dimmer_B1.c: 270: else if(status == 3)
 10303  1524  0020               	movlb	0	; select bank0
 10304  1525  082A               	movf	DimmerLights_Exceptions@status,w
 10305  1526  3A03               	xorlw	3
 10306  1527  1D03               	skipz
 10307  1528  2D31               	goto	l914
 10308  1529                     l8635:	
 10309                           
 10310                           ;Dimmer_B1.c: 271: {
 10311                           ;Dimmer_B1.c: 273: setDimmerLights_ERROR(1);
 10312  1529  3001               	movlw	1
 10313  152A  3192  221E  3194   	fcall	_setDimmerLights_ERROR
 10314                           
 10315                           ;Dimmer_B1.c: 276: setDimmerLights_ERROR(2);
 10316  152D  3002               	movlw	2
 10317  152E                     L12:	
 10318  152E  3192  221E  3194   	fcall	_setDimmerLights_ERROR
 10319  1531                     l914:	
 10320                           
 10321                           ;Dimmer_B1.c: 281: }
 10322                           ;Dimmer_B1.c: 284: setDimmerLights_TriggerERROR(1,0);
 10323  1531  0020               	movlb	0	; select bank0
 10324  1532  01A2               	clrf	setDimmerLights_TriggerERROR@command
 10325  1533  3001               	movlw	1
 10326  1534  319E  262F  3194   	fcall	_setDimmerLights_TriggerERROR
 10327                           
 10328                           ;Dimmer_B1.c: 287: setDimmerLights_TriggerERROR(2,0);
 10329  1537  0020               	movlb	0	; select bank0
 10330  1538  01A2               	clrf	setDimmerLights_TriggerERROR@command
 10331  1539  3002               	movlw	2
 10332  153A  319E  262F  3194   	fcall	_setDimmerLights_TriggerERROR
 10333                           
 10334                           ;Dimmer_B1.c: 293: if(TMain->SelfTest == 0)
 10335  153D  0020               	movlb	0	; select bank0
 10336  153E  086F               	movf	_TMain,w
 10337  153F  3E03               	addlw	3
 10338  1540  0086               	movwf	6
 10339  1541  3001               	movlw	1	; select bank2/3
 10340  1542  0087               	movwf	7
 10341  1543  1801               	btfsc	1,0
 10342  1544  0008               	return
 10343                           
 10344                           ;Dimmer_B1.c: 294: {
 10345                           ;Dimmer_B1.c: 295: TMain->i=0;
 10346  1545  086F               	movf	_TMain,w
 10347  1546  3E0F               	addlw	15
 10348  1547  0086               	movwf	6
 10349  1548  3001               	movlw	1	; select bank2/3
 10350  1549  0087               	movwf	7
 10351  154A  1001               	bcf	1,0
 10352                           
 10353                           ;Dimmer_B1.c: 296: TMain->j=0;
 10354  154B  086F               	movf	_TMain,w
 10355  154C  3E0F               	addlw	15
 10356  154D  0086               	movwf	6
 10357  154E  3001               	movlw	1	; select bank2/3
 10358  154F  0087               	movwf	7
 10359  1550  1081               	bcf	1,1
 10360                           
 10361                           ;Dimmer_B1.c: 297: TMain->k=1;
 10362  1551  086F               	movf	_TMain,w
 10363  1552  3E0F               	addlw	15
 10364  1553  0086               	movwf	6
 10365  1554  3001               	movlw	1	; select bank2/3
 10366  1555  0087               	movwf	7
 10367  1556  1501               	bsf	1,2
 10368                           
 10369                           ;Dimmer_B1.c: 298: TMain->Count2=0;
 10370  1557  086F               	movf	_TMain,w
 10371  1558  3E08               	addlw	8
 10372  1559  0086               	movwf	6
 10373  155A  3001               	movlw	1	; select bank2/3
 10374  155B  0087               	movwf	7
 10375  155C  3000               	movlw	0
 10376  155D  3FC0               	movwi [0]fsr1
 10377  155E  3FC1               	movwi [1]fsr1
 10378  155F  0008               	return
 10379  1560                     __end_of_DimmerLights_Exceptions:	
 10380                           
 10381                           	psect	text49
 10382  1E2F                     __ptext49:	
 10383 ;; *************** function _setDimmerLights_TriggerERROR *****************
 10384 ;; Defined at:
 10385 ;;		line 320 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 10386 ;; Parameters:    Size  Location     Type
 10387 ;;  lights          1    wreg     unsigned char 
 10388 ;;  command         1    2[BANK0 ] unsigned char 
 10389 ;; Auto vars:     Size  Location     Type
 10390 ;;  lights          1    3[BANK0 ] unsigned char 
 10391 ;; Return value:  Size  Location     Type
 10392 ;;		None               void
 10393 ;; Registers used:
 10394 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10395 ;; Tracked objects:
 10396 ;;		On entry : 0/0
 10397 ;;		On exit  : 0/0
 10398 ;;		Unchanged: 0/0
 10399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10400 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10401 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10403 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10404 ;;Total ram usage:        2 bytes
 10405 ;; Hardware stack levels used:    1
 10406 ;; Hardware stack levels required when called:    5
 10407 ;; This function calls:
 10408 ;;		_DimmerLightsPointSelect
 10409 ;; This function is called by:
 10410 ;;		_DimmerLights_Exceptions
 10411 ;; This function uses a non-reentrant model
 10412 ;;
 10413                           
 10414                           
 10415                           ;psect for function _setDimmerLights_TriggerERROR
 10416  1E2F                     _setDimmerLights_TriggerERROR:	
 10417                           
 10418                           ;incstack = 0
 10419                           ; Regs used in _setDimmerLights_TriggerERROR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath
      +                          +cstack]
 10420                           ;setDimmerLights_TriggerERROR@lights stored from wreg
 10421  1E2F  0020               	movlb	0	; select bank0
 10422  1E30  00A3               	movwf	setDimmerLights_TriggerERROR@lights
 10423                           
 10424                           ;Dimmer_B1.c: 322: DimmerLightsPointSelect(lights);
 10425  1E31  0823               	movf	setDimmerLights_TriggerERROR@lights,w
 10426  1E32  319A  22CE         	fcall	_DimmerLightsPointSelect
 10427                           
 10428                           ;Dimmer_B1.c: 323: DimmerLights->Trigger=command;
 10429  1E34  0020               	movlb	0	; select bank0
 10430  1E35  086A               	movf	_DimmerLights,w
 10431  1E36  3E09               	addlw	9
 10432  1E37  0086               	movwf	6
 10433  1E38  3001               	movlw	1	; select bank2/3
 10434  1E39  0087               	movwf	7
 10435  1E3A  0822               	movf	setDimmerLights_TriggerERROR@command,w
 10436  1E3B  1081               	bcf	1,1
 10437  1E3C  1D03               	skipz
 10438  1E3D  1481               	bsf	1,1
 10439                           
 10440                           ;Dimmer_B1.c: 324: DimmerLights->Switch=command;
 10441  1E3E  086A               	movf	_DimmerLights,w
 10442  1E3F  3E09               	addlw	9
 10443  1E40  0086               	movwf	6
 10444  1E41  3001               	movlw	1	; select bank2/3
 10445  1E42  0087               	movwf	7
 10446  1E43  0822               	movf	setDimmerLights_TriggerERROR@command,w
 10447  1E44  1001               	bcf	1,0
 10448  1E45  1D03               	skipz
 10449  1E46  1401               	bsf	1,0
 10450                           
 10451                           ;Dimmer_B1.c: 325: DimmerLights->TriggerAdj=command;
 10452  1E47  086A               	movf	_DimmerLights,w
 10453  1E48  3E09               	addlw	9
 10454  1E49  0086               	movwf	6
 10455  1E4A  3001               	movlw	1	; select bank2/3
 10456  1E4B  0087               	movwf	7
 10457  1E4C  0822               	movf	setDimmerLights_TriggerERROR@command,w
 10458  1E4D  1181               	bcf	1,3
 10459  1E4E  1D03               	skipz
 10460  1E4F  1581               	bsf	1,3
 10461                           
 10462                           ;Dimmer_B1.c: 326: DimmerLights->AdjGo=command;
 10463  1E50  086A               	movf	_DimmerLights,w
 10464  1E51  3E09               	addlw	9
 10465  1E52  0086               	movwf	6
 10466  1E53  3001               	movlw	1	; select bank2/3
 10467  1E54  0087               	movwf	7
 10468  1E55  0822               	movf	setDimmerLights_TriggerERROR@command,w
 10469  1E56  1101               	bcf	1,2
 10470  1E57  1D03               	skipz
 10471  1E58  1501               	bsf	1,2
 10472  1E59  0008               	return
 10473  1E5A                     __end_of_setDimmerLights_TriggerERROR:	
 10474                           
 10475                           	psect	text50
 10476  121E                     __ptext50:	
 10477 ;; *************** function _setDimmerLights_ERROR *****************
 10478 ;; Defined at:
 10479 ;;		line 302 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 10480 ;; Parameters:    Size  Location     Type
 10481 ;;  lights          1    wreg     unsigned char 
 10482 ;; Auto vars:     Size  Location     Type
 10483 ;;  lights          1    5[BANK0 ] unsigned char 
 10484 ;; Return value:  Size  Location     Type
 10485 ;;		None               void
 10486 ;; Registers used:
 10487 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10488 ;; Tracked objects:
 10489 ;;		On entry : 0/0
 10490 ;;		On exit  : 0/0
 10491 ;;		Unchanged: 0/0
 10492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10494 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10495 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10496 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10497 ;;Total ram usage:        2 bytes
 10498 ;; Hardware stack levels used:    1
 10499 ;; Hardware stack levels required when called:    6
 10500 ;; This function calls:
 10501 ;;		_DimmerLightsPointSelect
 10502 ;;		_setLED
 10503 ;;		_setRFSW_Status
 10504 ;;		_setSw_Status
 10505 ;; This function is called by:
 10506 ;;		_DimmerLights_Exceptions
 10507 ;; This function uses a non-reentrant model
 10508 ;;
 10509                           
 10510                           
 10511                           ;psect for function _setDimmerLights_ERROR
 10512  121E                     _setDimmerLights_ERROR:	
 10513                           
 10514                           ;incstack = 0
 10515                           ; Regs used in _setDimmerLights_ERROR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 10516                           ;setDimmerLights_ERROR@lights stored from wreg
 10517  121E  0020               	movlb	0	; select bank0
 10518  121F  00A5               	movwf	setDimmerLights_ERROR@lights
 10519                           
 10520                           ;Dimmer_B1.c: 304: DimmerLightsPointSelect(lights);
 10521  1220  0825               	movf	setDimmerLights_ERROR@lights,w
 10522  1221  319A  22CE  3192   	fcall	_DimmerLightsPointSelect
 10523                           
 10524                           ;Dimmer_B1.c: 305: if(DimmerLights->Status)
 10525  1224  0020               	movlb	0	; select bank0
 10526  1225  086A               	movf	_DimmerLights,w
 10527  1226  0086               	movwf	6
 10528  1227  3001               	movlw	1	; select bank2/3
 10529  1228  0087               	movwf	7
 10530  1229  1E81               	btfss	1,5
 10531  122A  0008               	return
 10532                           
 10533                           ;Dimmer_B1.c: 306: {
 10534                           ;Dimmer_B1.c: 307: DimmerLights->Signal=0;
 10535  122B  086A               	movf	_DimmerLights,w
 10536  122C  0086               	movwf	6
 10537  122D  3001               	movlw	1	; select bank2/3
 10538  122E  0087               	movwf	7
 10539  122F  1081               	bcf	1,1
 10540                           
 10541                           ;Dimmer_B1.c: 308: DimmerLights->AdjFlag=0;
 10542  1230  086A               	movf	_DimmerLights,w
 10543  1231  0086               	movwf	6
 10544  1232  3001               	movlw	1	; select bank2/3
 10545  1233  0087               	movwf	7
 10546  1234  1181               	bcf	1,3
 10547                           
 10548                           ;Dimmer_B1.c: 309: DimmerLights->AdjStatus=0;
 10549  1235  086A               	movf	_DimmerLights,w
 10550  1236  0086               	movwf	6
 10551  1237  3001               	movlw	1	; select bank2/3
 10552  1238  0087               	movwf	7
 10553  1239  1201               	bcf	1,4
 10554                           
 10555                           ;Dimmer_B1.c: 310: DimmerLights->StatusFlag=0;
 10556  123A  086A               	movf	_DimmerLights,w
 10557  123B  0086               	movwf	6
 10558  123C  3001               	movlw	1	; select bank2/3
 10559  123D  0087               	movwf	7
 10560  123E  1301               	bcf	1,6
 10561                           
 10562                           ;Dimmer_B1.c: 311: DimmerLights->DimmingTimeValue=3;
 10563  123F  3003               	movlw	3
 10564  1240  00A4               	movwf	??_setDimmerLights_ERROR
 10565  1241  086A               	movf	_DimmerLights,w
 10566  1242  3E02               	addlw	2
 10567  1243  0086               	movwf	6
 10568  1244  3001               	movlw	1	; select bank2/3
 10569  1245  0087               	movwf	7
 10570  1246  0824               	movf	??_setDimmerLights_ERROR,w
 10571  1247  0081               	movwf	1
 10572                           
 10573                           ;Dimmer_B1.c: 312: DimmerLights->DimmingValue=DimmerLights->MinimumValue;
 10574  1248  086A               	movf	_DimmerLights,w
 10575  1249  3E06               	addlw	6
 10576  124A  0086               	movwf	6
 10577  124B  3001               	movlw	1	; select bank2/3
 10578  124C  0087               	movwf	7
 10579  124D  0801               	movf	1,w
 10580  124E  00A4               	movwf	??_setDimmerLights_ERROR
 10581  124F  086A               	movf	_DimmerLights,w
 10582  1250  3E04               	addlw	4
 10583  1251  0086               	movwf	6
 10584  1252  3001               	movlw	1	; select bank2/3
 10585  1253  0087               	movwf	7
 10586  1254  0824               	movf	??_setDimmerLights_ERROR,w
 10587  1255  0081               	movwf	1
 10588                           
 10589                           ;Dimmer_B1.c: 313: Dimmer->Detect=1;
 10590  1256  0021               	movlb	1	; select bank1
 10591  1257  0838               	movf	_Dimmer^(0+128),w
 10592  1258  0086               	movwf	6
 10593  1259  0187               	clrf	7
 10594  125A  1401               	bsf	1,0
 10595                           
 10596                           ;Dimmer_B1.c: 314: ;;
 10597                           ;Dimmer_B1.c: 315: setLED(lights,1);
 10598  125B  0020               	movlb	0	; select bank0
 10599  125C  01A2               	clrf	setLED@command
 10600  125D  0AA2               	incf	setLED@command,f
 10601  125E  0825               	movf	setDimmerLights_ERROR@lights,w
 10602  125F  3193  2373  3192   	fcall	_setLED
 10603                           
 10604                           ;Dimmer_B1.c: 316: setSw_Status(lights,0);
 10605  1262  0020               	movlb	0	; select bank0
 10606  1263  01A2               	clrf	setSw_Status@command
 10607  1264  0825               	movf	setDimmerLights_ERROR@lights,w
 10608  1265  319A  224E  3192   	fcall	_setSw_Status
 10609                           
 10610                           ;Dimmer_B1.c: 317: setRFSW_Status(lights,0);
 10611  1268  0020               	movlb	0	; select bank0
 10612  1269  01A2               	clrf	setRFSW_Status@command
 10613  126A  0825               	movf	setDimmerLights_ERROR@lights,w
 10614  126B  319A  223F         	fcall	_setRFSW_Status
 10615  126D  0008               	return
 10616  126E                     __end_of_setDimmerLights_ERROR:	
 10617                           
 10618                           	psect	text51
 10619  1920                     __ptext51:	
 10620 ;; *************** function _getTemp_Safe *****************
 10621 ;; Defined at:
 10622 ;;		line 26 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\OverTemperature_B1.c"
 10623 ;; Parameters:    Size  Location     Type
 10624 ;;		None
 10625 ;; Auto vars:     Size  Location     Type
 10626 ;;		None
 10627 ;; Return value:  Size  Location     Type
 10628 ;;                  1    wreg      unsigned char 
 10629 ;; Registers used:
 10630 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10631 ;; Tracked objects:
 10632 ;;		On entry : 0/0
 10633 ;;		On exit  : 0/0
 10634 ;;		Unchanged: 0/0
 10635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10637 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10639 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10640 ;;Total ram usage:        0 bytes
 10641 ;; Hardware stack levels used:    1
 10642 ;; Hardware stack levels required when called:    4
 10643 ;; This function calls:
 10644 ;;		Nothing
 10645 ;; This function is called by:
 10646 ;;		_setPowerFault_Main
 10647 ;; This function uses a non-reentrant model
 10648 ;;
 10649                           
 10650                           
 10651                           ;psect for function _getTemp_Safe
 10652  1920                     _getTemp_Safe:	
 10653                           
 10654                           ;OverTemperature_B1.c: 28: return Temp->Safe;
 10655                           
 10656                           ;incstack = 0
 10657                           ; Regs used in _getTemp_Safe: [wreg+fsr1l+fsr1h+status,2+status,0]
 10658  1920  0879               	movf	_Temp,w
 10659  1921  0086               	movwf	6
 10660  1922  3001               	movlw	1	; select bank2/3
 10661  1923  0087               	movwf	7
 10662  1924  0E01               	swapf	1,w
 10663  1925  3901               	andlw	1
 10664  1926  0008               	return
 10665  1927                     __end_of_getTemp_Safe:	
 10666                           
 10667                           	psect	text52
 10668  18DB                     __ptext52:	
 10669 ;; *************** function _PowerFault_Initialization *****************
 10670 ;; Defined at:
 10671 ;;		line 15 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\PowerFault_B1.c"
 10672 ;; Parameters:    Size  Location     Type
 10673 ;;		None
 10674 ;; Auto vars:     Size  Location     Type
 10675 ;;		None
 10676 ;; Return value:  Size  Location     Type
 10677 ;;		None               void
 10678 ;; Registers used:
 10679 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10680 ;; Tracked objects:
 10681 ;;		On entry : 0/0
 10682 ;;		On exit  : 0/0
 10683 ;;		Unchanged: 0/0
 10684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10685 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10688 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10689 ;;Total ram usage:        0 bytes
 10690 ;; Hardware stack levels used:    1
 10691 ;; Hardware stack levels required when called:    5
 10692 ;; This function calls:
 10693 ;;		_setPowerFault_Initialization
 10694 ;; This function is called by:
 10695 ;;		_main
 10696 ;; This function uses a non-reentrant model
 10697 ;;
 10698                           
 10699                           
 10700                           ;psect for function _PowerFault_Initialization
 10701  18DB                     _PowerFault_Initialization:	
 10702                           
 10703                           ;PowerFault_B1.c: 18: setPowerFault_Initialization();
 10704                           
 10705                           ;incstack = 0
 10706                           ; Regs used in _PowerFault_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cs
      +                          tack]
 10707  18DB  319A  228D         	fcall	_setPowerFault_Initialization
 10708  18DD  0008               	return
 10709  18DE                     __end_of_PowerFault_Initialization:	
 10710                           
 10711                           	psect	text53
 10712  1A8D                     __ptext53:	
 10713 ;; *************** function _setPowerFault_Initialization *****************
 10714 ;; Defined at:
 10715 ;;		line 29 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\PowerFault_B1.c"
 10716 ;; Parameters:    Size  Location     Type
 10717 ;;		None
 10718 ;; Auto vars:     Size  Location     Type
 10719 ;;		None
 10720 ;; Return value:  Size  Location     Type
 10721 ;;		None               void
 10722 ;; Registers used:
 10723 ;;		wreg, fsr1l, fsr1h
 10724 ;; Tracked objects:
 10725 ;;		On entry : 0/0
 10726 ;;		On exit  : 0/0
 10727 ;;		Unchanged: 0/0
 10728 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10729 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10730 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10731 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10732 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10733 ;;Total ram usage:        1 bytes
 10734 ;; Hardware stack levels used:    1
 10735 ;; Hardware stack levels required when called:    4
 10736 ;; This function calls:
 10737 ;;		Nothing
 10738 ;; This function is called by:
 10739 ;;		_PowerFault_Initialization
 10740 ;; This function uses a non-reentrant model
 10741 ;;
 10742                           
 10743                           
 10744                           ;psect for function _setPowerFault_Initialization
 10745  1A8D                     _setPowerFault_Initialization:	
 10746                           
 10747                           ;PowerFault_B1.c: 31: PF=&PF1;
 10748                           
 10749                           ;incstack = 0
 10750                           ; Regs used in _setPowerFault_Initialization: [wregfsr1]
 10751  1A8D  3068               	movlw	_PF1& (0+255)
 10752  1A8E  0020               	movlb	0	; select bank0
 10753  1A8F  00A0               	movwf	??_setPowerFault_Initialization
 10754  1A90  0820               	movf	??_setPowerFault_Initialization,w
 10755  1A91  00F6               	movwf	_PF
 10756                           
 10757                           ;PowerFault_B1.c: 32: PF->Enable=1;
 10758  1A92  0876               	movf	_PF,w
 10759  1A93  0086               	movwf	6
 10760  1A94  3001               	movlw	1	; select bank2/3
 10761  1A95  0087               	movwf	7
 10762  1A96  1401               	bsf	1,0
 10763                           
 10764                           ;PowerFault_B1.c: 33: PF->Safe=1;
 10765  1A97  0876               	movf	_PF,w
 10766  1A98  0086               	movwf	6
 10767  1A99  3001               	movlw	1	; select bank2/3
 10768  1A9A  0087               	movwf	7
 10769  1A9B  1501               	bsf	1,2
 10770  1A9C  0008               	return
 10771  1A9D                     __end_of_setPowerFault_Initialization:	
 10772                           
 10773                           	psect	text54
 10774  1C36                     __ptext54:	
 10775 ;; *************** function _Mcu_Initialization *****************
 10776 ;; Defined at:
 10777 ;;		line 24 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
 10778 ;; Parameters:    Size  Location     Type
 10779 ;;		None
 10780 ;; Auto vars:     Size  Location     Type
 10781 ;;		None
 10782 ;; Return value:  Size  Location     Type
 10783 ;;		None               void
 10784 ;; Registers used:
 10785 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10786 ;; Tracked objects:
 10787 ;;		On entry : 0/0
 10788 ;;		On exit  : 0/0
 10789 ;;		Unchanged: 0/0
 10790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10791 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10792 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10793 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10794 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10795 ;;Total ram usage:        1 bytes
 10796 ;; Hardware stack levels used:    1
 10797 ;; Hardware stack levels required when called:    5
 10798 ;; This function calls:
 10799 ;;		_ADC_Set
 10800 ;;		_INT_Set
 10801 ;;		_IOC_Set
 10802 ;;		_IO_Set
 10803 ;;		_TMR0_Set
 10804 ;;		_WDT_Set
 10805 ;; This function is called by:
 10806 ;;		_main
 10807 ;; This function uses a non-reentrant model
 10808 ;;
 10809                           
 10810                           
 10811                           ;psect for function _Mcu_Initialization
 10812  1C36                     _Mcu_Initialization:	
 10813                           
 10814                           ;MCU_B1.c: 27: OSCCON=0x78; ;;
 10815                           
 10816                           ;incstack = 0
 10817                           ; Regs used in _Mcu_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10818  1C36  3078               	movlw	120
 10819  1C37  0021               	movlb	1	; select bank1
 10820  1C38  0099               	movwf	25	;volatile
 10821                           
 10822                           ;MCU_B1.c: 29: IO_Set();
 10823  1C39  319C  2403  319C   	fcall	_IO_Set
 10824                           
 10825                           ;MCU_B1.c: 31: TMR0_Set();
 10826  1C3C  319A  2209  319C   	fcall	_TMR0_Set
 10827                           
 10828                           ;MCU_B1.c: 33: ;;
 10829                           ;MCU_B1.c: 35: ADC_Set();
 10830  1C3F  3199  2119  319C   	fcall	_ADC_Set
 10831                           
 10832                           ;MCU_B1.c: 39: INT_Set();
 10833  1C42  3199  2100  319C   	fcall	_INT_Set
 10834                           
 10835                           ;MCU_B1.c: 41: IOC_Set();
 10836  1C45  3199  21FC  319C   	fcall	_IOC_Set
 10837                           
 10838                           ;MCU_B1.c: 43: ;;
 10839                           ;MCU_B1.c: 45: ;;
 10840                           ;MCU_B1.c: 47: Memory=&VarMemory;
 10841  1C48  3020               	movlw	_VarMemory& (0+255)
 10842  1C49  0020               	movlb	0	; select bank0
 10843  1C4A  00A1               	movwf	??_Mcu_Initialization
 10844  1C4B  0821               	movf	??_Mcu_Initialization,w
 10845  1C4C  00ED               	movwf	_Memory
 10846                           
 10847                           ;MCU_B1.c: 49: WDT_Set();
 10848  1C4D  319B  23A0         	fcall	_WDT_Set
 10849  1C4F  0008               	return
 10850  1C50                     __end_of_Mcu_Initialization:	
 10851                           
 10852                           	psect	text55
 10853  1BA0                     __ptext55:	
 10854 ;; *************** function _WDT_Set *****************
 10855 ;; Defined at:
 10856 ;;		line 979 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
 10857 ;; Parameters:    Size  Location     Type
 10858 ;;		None
 10859 ;; Auto vars:     Size  Location     Type
 10860 ;;		None
 10861 ;; Return value:  Size  Location     Type
 10862 ;;		None               void
 10863 ;; Registers used:
 10864 ;;		wreg, fsr1l, fsr1h
 10865 ;; Tracked objects:
 10866 ;;		On entry : 0/0
 10867 ;;		On exit  : 0/0
 10868 ;;		Unchanged: 0/0
 10869 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10870 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10871 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10872 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10873 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10874 ;;Total ram usage:        1 bytes
 10875 ;; Hardware stack levels used:    1
 10876 ;; Hardware stack levels required when called:    4
 10877 ;; This function calls:
 10878 ;;		Nothing
 10879 ;; This function is called by:
 10880 ;;		_Mcu_Initialization
 10881 ;; This function uses a non-reentrant model
 10882 ;;
 10883                           
 10884                           
 10885                           ;psect for function _WDT_Set
 10886  1BA0                     _WDT_Set:	
 10887                           
 10888                           ;MCU_B1.c: 980: WDTCON=0b00010111;;
 10889                           
 10890                           ;incstack = 0
 10891                           ; Regs used in _WDT_Set: [wregfsr1]
 10892  1BA0  3017               	movlw	23
 10893  1BA1  0021               	movlb	1	; select bank1
 10894  1BA2  0097               	movwf	23	;volatile
 10895                           
 10896                           ;MCU_B1.c: 981: WDT=&_WDT;
 10897  1BA3  30E8               	movlw	__WDT& (0+255)
 10898  1BA4  0020               	movlb	0	; select bank0
 10899  1BA5  00A0               	movwf	??_WDT_Set
 10900  1BA6  0820               	movf	??_WDT_Set,w
 10901  1BA7  0021               	movlb	1	; select bank1
 10902  1BA8  00ED               	movwf	_WDT^(0+128)
 10903                           
 10904                           ;MCU_B1.c: 982: WDT->Enable=1;
 10905  1BA9  086D               	movf	_WDT^(0+128),w
 10906  1BAA  0086               	movwf	6
 10907  1BAB  0187               	clrf	7
 10908  1BAC  1401               	bsf	1,0
 10909                           
 10910                           ;MCU_B1.c: 983: WDT->Count=10;
 10911  1BAD  300A               	movlw	10
 10912  1BAE  0020               	movlb	0	; select bank0
 10913  1BAF  00A0               	movwf	??_WDT_Set
 10914  1BB0  0021               	movlb	1	; select bank1
 10915  1BB1  0A6D               	incf	_WDT^(0+128),w
 10916  1BB2  0086               	movwf	6
 10917  1BB3  0187               	clrf	7
 10918  1BB4  0020               	movlb	0	; select bank0
 10919  1BB5  0820               	movf	??_WDT_Set,w
 10920  1BB6  0081               	movwf	1
 10921  1BB7  0008               	return
 10922  1BB8                     __end_of_WDT_Set:	
 10923                           
 10924                           	psect	text56
 10925  1A09                     __ptext56:	
 10926 ;; *************** function _TMR0_Set *****************
 10927 ;; Defined at:
 10928 ;;		line 118 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
 10929 ;; Parameters:    Size  Location     Type
 10930 ;;		None
 10931 ;; Auto vars:     Size  Location     Type
 10932 ;;		None
 10933 ;; Return value:  Size  Location     Type
 10934 ;;		None               void
 10935 ;; Registers used:
 10936 ;;		wreg, status,2
 10937 ;; Tracked objects:
 10938 ;;		On entry : 0/0
 10939 ;;		On exit  : 0/0
 10940 ;;		Unchanged: 0/0
 10941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10943 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10944 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10945 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10946 ;;Total ram usage:        1 bytes
 10947 ;; Hardware stack levels used:    1
 10948 ;; Hardware stack levels required when called:    4
 10949 ;; This function calls:
 10950 ;;		Nothing
 10951 ;; This function is called by:
 10952 ;;		_Mcu_Initialization
 10953 ;; This function uses a non-reentrant model
 10954 ;;
 10955                           
 10956                           
 10957                           ;psect for function _TMR0_Set
 10958  1A09                     _TMR0_Set:	
 10959                           
 10960                           ;MCU_B1.c: 120: Timer0=&VarTimer0;
 10961                           
 10962                           ;incstack = 0
 10963                           ; Regs used in _TMR0_Set: [wreg+status,2]
 10964  1A09  30C3               	movlw	_VarTimer0& (0+255)
 10965  1A0A  0020               	movlb	0	; select bank0
 10966  1A0B  00A0               	movwf	??_TMR0_Set
 10967  1A0C  0820               	movf	??_TMR0_Set,w
 10968  1A0D  0021               	movlb	1	; select bank1
 10969  1A0E  00EC               	movwf	_Timer0^(0+128)
 10970                           
 10971                           ;MCU_B1.c: 121: OPTION_REG=0x00;
 10972  1A0F  0195               	clrf	21	;volatile
 10973                           
 10974                           ;MCU_B1.c: 122: TMR0=(256-90);
 10975  1A10  30A6               	movlw	166
 10976  1A11  0020               	movlb	0	; select bank0
 10977  1A12  0095               	movwf	21	;volatile
 10978                           
 10979                           ;MCU_B1.c: 123: TMR0IE=1;
 10980  1A13  168B               	bsf	11,5	;volatile
 10981                           
 10982                           ;MCU_B1.c: 124: GIE=1;
 10983  1A14  178B               	bsf	11,7	;volatile
 10984  1A15  0008               	return
 10985  1A16                     __end_of_TMR0_Set:	
 10986                           
 10987                           	psect	text57
 10988  1C03                     __ptext57:	
 10989 ;; *************** function _IO_Set *****************
 10990 ;; Defined at:
 10991 ;;		line 52 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
 10992 ;; Parameters:    Size  Location     Type
 10993 ;;		None
 10994 ;; Auto vars:     Size  Location     Type
 10995 ;;		None
 10996 ;; Return value:  Size  Location     Type
 10997 ;;		None               void
 10998 ;; Registers used:
 10999 ;;		wreg, status,2
 11000 ;; Tracked objects:
 11001 ;;		On entry : 0/0
 11002 ;;		On exit  : 0/0
 11003 ;;		Unchanged: 0/0
 11004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11008 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11009 ;;Total ram usage:        0 bytes
 11010 ;; Hardware stack levels used:    1
 11011 ;; Hardware stack levels required when called:    4
 11012 ;; This function calls:
 11013 ;;		Nothing
 11014 ;; This function is called by:
 11015 ;;		_Mcu_Initialization
 11016 ;; This function uses a non-reentrant model
 11017 ;;
 11018                           
 11019                           
 11020                           ;psect for function _IO_Set
 11021  1C03                     _IO_Set:	
 11022                           
 11023                           ;MCU_B1.c: 81: TRISA=0b01110111;;
 11024                           
 11025                           ;incstack = 0
 11026                           ; Regs used in _IO_Set: [wreg+status,2]
 11027  1C03  3077               	movlw	119
 11028  1C04  0021               	movlb	1	; select bank1
 11029  1C05  008C               	movwf	12	;volatile
 11030                           
 11031                           ;MCU_B1.c: 82: TRISB=0b00000111;;
 11032  1C06  3007               	movlw	7
 11033  1C07  008D               	movwf	13	;volatile
 11034                           
 11035                           ;MCU_B1.c: 83: TRISC=0b00001100;;
 11036  1C08  300C               	movlw	12
 11037  1C09  008E               	movwf	14	;volatile
 11038                           
 11039                           ;MCU_B1.c: 84: LATA=0b00000000;;
 11040  1C0A  0022               	movlb	2	; select bank2
 11041  1C0B  018C               	clrf	12	;volatile
 11042                           
 11043                           ;MCU_B1.c: 85: LATB=0b00000010;;
 11044  1C0C  3002               	movlw	2
 11045  1C0D  008D               	movwf	13	;volatile
 11046                           
 11047                           ;MCU_B1.c: 86: LATC=0b00000000;;
 11048  1C0E  018E               	clrf	14	;volatile
 11049                           
 11050                           ;MCU_B1.c: 87: ANSELA=0b00100010;;
 11051  1C0F  3022               	movlw	34
 11052  1C10  0023               	movlb	3	; select bank3
 11053  1C11  008C               	movwf	12	;volatile
 11054                           
 11055                           ;MCU_B1.c: 88: ANSELB=0b00000000;;
 11056  1C12  018D               	clrf	13	;volatile
 11057                           
 11058                           ;MCU_B1.c: 89: ANSELC=0b00000000;;
 11059  1C13  018E               	clrf	14	;volatile
 11060                           
 11061                           ;MCU_B1.c: 90: PORTA=0b01110111;;
 11062  1C14  3077               	movlw	119
 11063  1C15  0020               	movlb	0	; select bank0
 11064  1C16  008C               	movwf	12	;volatile
 11065                           
 11066                           ;MCU_B1.c: 91: PORTB=0b00000111;;
 11067  1C17  3007               	movlw	7
 11068  1C18  008D               	movwf	13	;volatile
 11069                           
 11070                           ;MCU_B1.c: 92: PORTC=0b00001100;;
 11071  1C19  300C               	movlw	12
 11072  1C1A  008E               	movwf	14	;volatile
 11073  1C1B  0008               	return
 11074  1C1C                     __end_of_IO_Set:	
 11075                           
 11076                           	psect	text58
 11077  19FC                     __ptext58:	
 11078 ;; *************** function _IOC_Set *****************
 11079 ;; Defined at:
 11080 ;;		line 314 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
 11081 ;; Parameters:    Size  Location     Type
 11082 ;;		None
 11083 ;; Auto vars:     Size  Location     Type
 11084 ;;		None
 11085 ;; Return value:  Size  Location     Type
 11086 ;;		None               void
 11087 ;; Registers used:
 11088 ;;		wreg, status,2
 11089 ;; Tracked objects:
 11090 ;;		On entry : 0/0
 11091 ;;		On exit  : 0/0
 11092 ;;		Unchanged: 0/0
 11093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11094 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11095 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11097 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11098 ;;Total ram usage:        0 bytes
 11099 ;; Hardware stack levels used:    1
 11100 ;; Hardware stack levels required when called:    4
 11101 ;; This function calls:
 11102 ;;		Nothing
 11103 ;; This function is called by:
 11104 ;;		_Mcu_Initialization
 11105 ;; This function uses a non-reentrant model
 11106 ;;
 11107                           
 11108                           
 11109                           ;psect for function _IOC_Set
 11110  19FC                     _IOC_Set:	
 11111                           
 11112                           ;MCU_B1.c: 316: WPUB2=0;
 11113                           
 11114                           ;incstack = 0
 11115                           ; Regs used in _IOC_Set: [wreg+status,2]
 11116  19FC  0024               	movlb	4	; select bank4
 11117  19FD  110D               	bcf	13,2	;volatile
 11118                           
 11119                           ;MCU_B1.c: 318: IOCBP=0b00000100;
 11120  19FE  3004               	movlw	4
 11121  19FF  0027               	movlb	7	; select bank7
 11122  1A00  0094               	movwf	20	;volatile
 11123                           
 11124                           ;MCU_B1.c: 319: IOCBN=0b00000100;
 11125  1A01  3004               	movlw	4
 11126  1A02  0095               	movwf	21	;volatile
 11127                           
 11128                           ;MCU_B1.c: 334: IOCBF=0b00000000;
 11129  1A03  0196               	clrf	22	;volatile
 11130                           
 11131                           ;MCU_B1.c: 336: IOCIE=1;
 11132  1A04  158B               	bsf	11,3	;volatile
 11133                           
 11134                           ;MCU_B1.c: 337: IOCIF=0;
 11135  1A05  100B               	bcf	11,0	;volatile
 11136                           
 11137                           ;MCU_B1.c: 338: PEIE=1;
 11138  1A06  170B               	bsf	11,6	;volatile
 11139                           
 11140                           ;MCU_B1.c: 339: GIE=1;
 11141  1A07  178B               	bsf	11,7	;volatile
 11142  1A08  0008               	return
 11143  1A09                     __end_of_IOC_Set:	
 11144                           
 11145                           	psect	text59
 11146  1900                     __ptext59:	
 11147 ;; *************** function _INT_Set *****************
 11148 ;; Defined at:
 11149 ;;		line 285 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
 11150 ;; Parameters:    Size  Location     Type
 11151 ;;		None
 11152 ;; Auto vars:     Size  Location     Type
 11153 ;;		None
 11154 ;; Return value:  Size  Location     Type
 11155 ;;		None               void
 11156 ;; Registers used:
 11157 ;;		None
 11158 ;; Tracked objects:
 11159 ;;		On entry : 0/0
 11160 ;;		On exit  : 0/0
 11161 ;;		Unchanged: 0/0
 11162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11166 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11167 ;;Total ram usage:        0 bytes
 11168 ;; Hardware stack levels used:    1
 11169 ;; Hardware stack levels required when called:    4
 11170 ;; This function calls:
 11171 ;;		Nothing
 11172 ;; This function is called by:
 11173 ;;		_Mcu_Initialization
 11174 ;; This function uses a non-reentrant model
 11175 ;;
 11176                           
 11177                           
 11178                           ;psect for function _INT_Set
 11179  1900                     _INT_Set:	
 11180                           
 11181                           ;MCU_B1.c: 287: WPUB0=0;
 11182                           
 11183                           ;incstack = 0
 11184                           ; Regs used in _INT_Set: []
 11185  1900  0024               	movlb	4	; select bank4
 11186  1901  100D               	bcf	13,0	;volatile
 11187                           
 11188                           ;MCU_B1.c: 288: INTE=1;
 11189  1902  160B               	bsf	11,4	;volatile
 11190                           
 11191                           ;MCU_B1.c: 289: PEIE=1;
 11192  1903  170B               	bsf	11,6	;volatile
 11193                           
 11194                           ;MCU_B1.c: 290: GIE=1;
 11195  1904  178B               	bsf	11,7	;volatile
 11196  1905  0008               	return
 11197  1906                     __end_of_INT_Set:	
 11198                           
 11199                           	psect	text60
 11200  1919                     __ptext60:	
 11201 ;; *************** function _ADC_Set *****************
 11202 ;; Defined at:
 11203 ;;		line 379 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
 11204 ;; Parameters:    Size  Location     Type
 11205 ;;		None
 11206 ;; Auto vars:     Size  Location     Type
 11207 ;;		None
 11208 ;; Return value:  Size  Location     Type
 11209 ;;		None               void
 11210 ;; Registers used:
 11211 ;;		wreg
 11212 ;; Tracked objects:
 11213 ;;		On entry : 0/0
 11214 ;;		On exit  : 0/0
 11215 ;;		Unchanged: 0/0
 11216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11220 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11221 ;;Total ram usage:        0 bytes
 11222 ;; Hardware stack levels used:    1
 11223 ;; Hardware stack levels required when called:    4
 11224 ;; This function calls:
 11225 ;;		Nothing
 11226 ;; This function is called by:
 11227 ;;		_Mcu_Initialization
 11228 ;; This function uses a non-reentrant model
 11229 ;;
 11230                           
 11231                           
 11232                           ;psect for function _ADC_Set
 11233  1919                     _ADC_Set:	
 11234                           
 11235                           ;MCU_B1.c: 381: ADCON1=0xf2;
 11236                           
 11237                           ;incstack = 0
 11238                           ; Regs used in _ADC_Set: [wreg]
 11239  1919  30F2               	movlw	242
 11240  191A  0021               	movlb	1	; select bank1
 11241  191B  009E               	movwf	30	;volatile
 11242                           
 11243                           ;MCU_B1.c: 382: FVRCON=0xc0;
 11244  191C  30C0               	movlw	192
 11245  191D  0022               	movlb	2	; select bank2
 11246  191E  0097               	movwf	23	;volatile
 11247  191F  0008               	return
 11248  1920                     __end_of_ADC_Set:	
 11249                           
 11250                           	psect	text61
 11251  1AE1                     __ptext61:	
 11252 ;; *************** function _MainT_Initialization *****************
 11253 ;; Defined at:
 11254 ;;		line 93 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\main.c"
 11255 ;; Parameters:    Size  Location     Type
 11256 ;;		None
 11257 ;; Auto vars:     Size  Location     Type
 11258 ;;		None
 11259 ;; Return value:  Size  Location     Type
 11260 ;;		None               void
 11261 ;; Registers used:
 11262 ;;		wreg, fsr1l, fsr1h
 11263 ;; Tracked objects:
 11264 ;;		On entry : 0/0
 11265 ;;		On exit  : 0/0
 11266 ;;		Unchanged: 0/0
 11267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11270 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11271 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11272 ;;Total ram usage:        1 bytes
 11273 ;; Hardware stack levels used:    1
 11274 ;; Hardware stack levels required when called:    4
 11275 ;; This function calls:
 11276 ;;		Nothing
 11277 ;; This function is called by:
 11278 ;;		_main
 11279 ;; This function uses a non-reentrant model
 11280 ;;
 11281                           
 11282                           
 11283                           ;psect for function _MainT_Initialization
 11284  1AE1                     _MainT_Initialization:	
 11285                           
 11286                           ;main.c: 96: Product=&VarProduct;
 11287                           
 11288                           ;incstack = 0
 11289                           ; Regs used in _MainT_Initialization: [wregfsr1]
 11290  1AE1  30A0               	movlw	_VarProduct& (0+255)
 11291  1AE2  0020               	movlb	0	; select bank0
 11292  1AE3  00A0               	movwf	??_MainT_Initialization
 11293  1AE4  0820               	movf	??_MainT_Initialization,w
 11294  1AE5  00EE               	movwf	_Product
 11295                           
 11296                           ;main.c: 97: Product->Data[20]=210;
 11297  1AE6  30D2               	movlw	210
 11298  1AE7  00A0               	movwf	??_MainT_Initialization
 11299  1AE8  086E               	movf	_Product,w
 11300  1AE9  3E14               	addlw	20
 11301  1AEA  0086               	movwf	6
 11302  1AEB  3001               	movlw	1	; select bank2/3
 11303  1AEC  0087               	movwf	7
 11304  1AED  0820               	movf	??_MainT_Initialization,w
 11305  1AEE  0081               	movwf	1
 11306                           
 11307                           ;main.c: 100: TMain=&VarTMain;
 11308  1AEF  30C0               	movlw	_VarTMain& (0+255)
 11309  1AF0  00A0               	movwf	??_MainT_Initialization
 11310  1AF1  0820               	movf	??_MainT_Initialization,w
 11311  1AF2  00EF               	movwf	_TMain
 11312  1AF3  0008               	return
 11313  1AF4                     __end_of_MainT_Initialization:	
 11314                           
 11315                           	psect	text62
 11316  086A                     __ptext62:	
 11317 ;; *************** function _MainT *****************
 11318 ;; Defined at:
 11319 ;;		line 105 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\main.c"
 11320 ;; Parameters:    Size  Location     Type
 11321 ;;		None
 11322 ;; Auto vars:     Size  Location     Type
 11323 ;;		None
 11324 ;; Return value:  Size  Location     Type
 11325 ;;		None               void
 11326 ;; Registers used:
 11327 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11328 ;; Tracked objects:
 11329 ;;		On entry : 0/0
 11330 ;;		On exit  : 0/0
 11331 ;;		Unchanged: 0/0
 11332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11336 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11337 ;;Total ram usage:        0 bytes
 11338 ;; Hardware stack levels used:    1
 11339 ;; Hardware stack levels required when called:    6
 11340 ;; This function calls:
 11341 ;;		_setBuz
 11342 ;;		_setRF_Enable
 11343 ;;		_setSw_Enable
 11344 ;;		_setTemp_Enable
 11345 ;; This function is called by:
 11346 ;;		_main
 11347 ;; This function uses a non-reentrant model
 11348 ;;
 11349                           
 11350                           
 11351                           ;psect for function _MainT
 11352  086A                     _MainT:	
 11353                           
 11354                           ;main.c: 108: if(!TMain->PowerON)
 11355                           
 11356                           ;incstack = 0
 11357                           ; Regs used in _MainT: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11358  086A  0020               	movlb	0	; select bank0
 11359  086B  086F               	movf	_TMain,w
 11360  086C  0086               	movwf	6
 11361  086D  3001               	movlw	1	; select bank2/3
 11362  086E  0087               	movwf	7
 11363  086F  1801               	btfsc	1,0
 11364  0870  28B1               	goto	l9793
 11365                           
 11366                           ;main.c: 109: {
 11367                           ;main.c: 110: TMain->PowerCount++;
 11368  0871  0A6F               	incf	_TMain,w
 11369  0872  0086               	movwf	6
 11370  0873  3001               	movlw	1	; select bank2/3
 11371  0874  0087               	movwf	7
 11372  0875  3001               	movlw	1
 11373  0876  0781               	addwf	1,f
 11374  0877  3141               	addfsr 1,1
 11375  0878  1803               	skipnc
 11376  0879  0A81               	incf	1,f
 11377                           
 11378                           ;main.c: 111: if(TMain->PowerCount == 150)
 11379  087A  0A6F               	incf	_TMain,w
 11380  087B  0086               	movwf	6
 11381  087C  3001               	movlw	1	; select bank2/3
 11382  087D  0087               	movwf	7
 11383  087E  3F40               	moviw [0]fsr1
 11384  087F  3A96               	xorlw	150
 11385  0880  1D03               	skipz
 11386  0881  2884               	goto	u10145
 11387  0882  3F41               	moviw [1]fsr1
 11388  0883  3A00               	xorlw	0
 11389  0884                     u10145:	
 11390  0884  1D03               	skipz
 11391  0885  0008               	return
 11392                           
 11393                           ;main.c: 112: {
 11394                           ;main.c: 113: TMain->PowerCount=0;
 11395  0886  0A6F               	incf	_TMain,w
 11396  0887  0086               	movwf	6
 11397  0888  3001               	movlw	1	; select bank2/3
 11398  0889  0087               	movwf	7
 11399  088A  3000               	movlw	0
 11400  088B  3FC0               	movwi [0]fsr1
 11401  088C  3FC1               	movwi [1]fsr1
 11402                           
 11403                           ;main.c: 114: TMain->PowerON=1;
 11404  088D  086F               	movf	_TMain,w
 11405  088E  0086               	movwf	6
 11406  088F  3001               	movlw	1	; select bank2/3
 11407  0890  0087               	movwf	7
 11408  0891  1401               	bsf	1,0
 11409                           
 11410                           ;main.c: 117: setTemp_Enable(1);
 11411  0892  3001               	movlw	1
 11412  0893  3199  219E  3188   	fcall	_setTemp_Enable
 11413                           
 11414                           ;main.c: 121: ;;
 11415                           ;main.c: 127: setBuz(3,50);
 11416  0896  3032               	movlw	50
 11417  0897  0020               	movlb	0	; select bank0
 11418  0898  00A6               	movwf	setBuz@time
 11419  0899  3000               	movlw	0
 11420  089A  00A7               	movwf	setBuz@time+1
 11421  089B  3003               	movlw	3
 11422  089C  3197  2789  3188   	fcall	_setBuz
 11423                           
 11424                           ;main.c: 128: TMain->SelfTest=1;
 11425  089F  0020               	movlb	0	; select bank0
 11426  08A0  086F               	movf	_TMain,w
 11427  08A1  3E03               	addlw	3
 11428  08A2  0086               	movwf	6
 11429  08A3  3001               	movlw	1	; select bank2/3
 11430  08A4  0087               	movwf	7
 11431  08A5  1401               	bsf	1,0
 11432                           
 11433                           ;main.c: 130: setSw_Enable(1);
 11434  08A6  3001               	movlw	1
 11435  08A7  319C  2450  3188   	fcall	_setSw_Enable
 11436                           
 11437                           ;main.c: 133: setRF_Enable(1,1);
 11438  08AA  0020               	movlb	0	; select bank0
 11439  08AB  01A2               	clrf	setRF_Enable@command
 11440  08AC  0AA2               	incf	setRF_Enable@command,f
 11441  08AD  3001               	movlw	1
 11442  08AE  319E  2605         	fcall	_setRF_Enable
 11443                           
 11444                           ;main.c: 137: }
 11445                           ;main.c: 138: }
 11446  08B0  0008               	return
 11447  08B1                     l9793:	
 11448                           
 11449                           ;main.c: 139: else
 11450                           ;main.c: 140: {
 11451                           ;main.c: 148: TMain->Count1++;
 11452  08B1  0020               	movlb	0	; select bank0
 11453  08B2  086F               	movf	_TMain,w
 11454  08B3  3E06               	addlw	6
 11455  08B4  0086               	movwf	6
 11456  08B5  3001               	movlw	1	; select bank2/3
 11457  08B6  0087               	movwf	7
 11458  08B7  3001               	movlw	1
 11459  08B8  0781               	addwf	1,f
 11460  08B9  3141               	addfsr 1,1
 11461  08BA  1803               	skipnc
 11462  08BB  0A81               	incf	1,f
 11463                           
 11464                           ;main.c: 149: if(TMain->Count1 == 100)
 11465  08BC  086F               	movf	_TMain,w
 11466  08BD  3E06               	addlw	6
 11467  08BE  0086               	movwf	6
 11468  08BF  3001               	movlw	1	; select bank2/3
 11469  08C0  0087               	movwf	7
 11470  08C1  3F40               	moviw [0]fsr1
 11471  08C2  3A64               	xorlw	100
 11472  08C3  1D03               	skipz
 11473  08C4  28C7               	goto	u10155
 11474  08C5  3F41               	moviw [1]fsr1
 11475  08C6  3A00               	xorlw	0
 11476  08C7                     u10155:	
 11477  08C7  1D03               	skipz
 11478  08C8  0008               	return
 11479                           
 11480                           ;main.c: 150: {
 11481                           ;main.c: 151: TMain->Count1=0;
 11482  08C9  086F               	movf	_TMain,w
 11483  08CA  3E06               	addlw	6
 11484  08CB  0086               	movwf	6
 11485  08CC  3001               	movlw	1	; select bank2/3
 11486  08CD  0087               	movwf	7
 11487  08CE  3000               	movlw	0
 11488  08CF  3FC0               	movwi [0]fsr1
 11489  08D0  3FC1               	movwi [1]fsr1
 11490                           
 11491                           ;main.c: 164: if(TMain->Flag)
 11492  08D1  086F               	movf	_TMain,w
 11493  08D2  0086               	movwf	6
 11494  08D3  3001               	movlw	1	; select bank2/3
 11495  08D4  0087               	movwf	7
 11496  08D5  1D81               	btfss	1,3
 11497  08D6  28DD               	goto	l9801
 11498                           
 11499                           ;main.c: 165: {
 11500                           ;main.c: 166: TMain->Flag=0;
 11501  08D7  086F               	movf	_TMain,w
 11502  08D8  0086               	movwf	6
 11503  08D9  3001               	movlw	1	; select bank2/3
 11504  08DA  0087               	movwf	7
 11505  08DB  1181               	bcf	1,3
 11506                           
 11507                           ;main.c: 175: }
 11508  08DC  0008               	return
 11509  08DD                     l9801:	
 11510                           
 11511                           ;main.c: 176: else
 11512                           ;main.c: 177: {
 11513                           ;main.c: 178: TMain->Flag=1;
 11514  08DD  086F               	movf	_TMain,w
 11515  08DE  0086               	movwf	6
 11516  08DF  3001               	movlw	1	; select bank2/3
 11517  08E0  0087               	movwf	7
 11518  08E1  1581               	bsf	1,3
 11519  08E2  0008               	return
 11520  08E3                     __end_of_MainT:	
 11521                           
 11522                           	psect	text63
 11523  199E                     __ptext63:	
 11524 ;; *************** function _setTemp_Enable *****************
 11525 ;; Defined at:
 11526 ;;		line 22 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\OverTemperature_B1.c"
 11527 ;; Parameters:    Size  Location     Type
 11528 ;;  command         1    wreg     unsigned char 
 11529 ;; Auto vars:     Size  Location     Type
 11530 ;;  command         1    0[BANK0 ] unsigned char 
 11531 ;; Return value:  Size  Location     Type
 11532 ;;		None               void
 11533 ;; Registers used:
 11534 ;;		wreg, fsr1l, fsr1h
 11535 ;; Tracked objects:
 11536 ;;		On entry : 0/0
 11537 ;;		On exit  : 0/0
 11538 ;;		Unchanged: 0/0
 11539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11541 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11543 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11544 ;;Total ram usage:        1 bytes
 11545 ;; Hardware stack levels used:    1
 11546 ;; Hardware stack levels required when called:    4
 11547 ;; This function calls:
 11548 ;;		Nothing
 11549 ;; This function is called by:
 11550 ;;		_MainT
 11551 ;; This function uses a non-reentrant model
 11552 ;;
 11553                           
 11554                           
 11555                           ;psect for function _setTemp_Enable
 11556  199E                     _setTemp_Enable:	
 11557                           
 11558                           ;incstack = 0
 11559                           ; Regs used in _setTemp_Enable: [wregfsr1]
 11560                           ;setTemp_Enable@command stored from wreg
 11561  199E  0020               	movlb	0	; select bank0
 11562  199F  00A0               	movwf	setTemp_Enable@command
 11563                           
 11564                           ;OverTemperature_B1.c: 24: Temp->Enable=command;
 11565  19A0  0879               	movf	_Temp,w
 11566  19A1  0086               	movwf	6
 11567  19A2  3001               	movlw	1	; select bank2/3
 11568  19A3  0087               	movwf	7
 11569  19A4  0820               	movf	setTemp_Enable@command,w
 11570  19A5  1001               	bcf	1,0
 11571  19A6  1D03               	skipz
 11572  19A7  1401               	bsf	1,0
 11573  19A8  0008               	return
 11574  19A9                     __end_of_setTemp_Enable:	
 11575                           
 11576                           	psect	text64
 11577  1C50                     __ptext64:	
 11578 ;; *************** function _setSw_Enable *****************
 11579 ;; Defined at:
 11580 ;;		line 86 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Switch_B1.c"
 11581 ;; Parameters:    Size  Location     Type
 11582 ;;  command         1    wreg     unsigned char 
 11583 ;; Auto vars:     Size  Location     Type
 11584 ;;  command         1    2[BANK0 ] unsigned char 
 11585 ;; Return value:  Size  Location     Type
 11586 ;;		None               void
 11587 ;; Registers used:
 11588 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11589 ;; Tracked objects:
 11590 ;;		On entry : 0/0
 11591 ;;		On exit  : 0/0
 11592 ;;		Unchanged: 0/0
 11593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11594 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11595 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11597 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11598 ;;Total ram usage:        1 bytes
 11599 ;; Hardware stack levels used:    1
 11600 ;; Hardware stack levels required when called:    5
 11601 ;; This function calls:
 11602 ;;		_SwPointSelect
 11603 ;; This function is called by:
 11604 ;;		_MainT
 11605 ;;		_setOverTemp_Exceptions
 11606 ;;		_setPowerFault_Exceptions
 11607 ;; This function uses a non-reentrant model
 11608 ;;
 11609                           
 11610                           
 11611                           ;psect for function _setSw_Enable
 11612  1C50                     _setSw_Enable:	
 11613                           
 11614                           ;incstack = 0
 11615                           ; Regs used in _setSw_Enable: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11616                           ;setSw_Enable@command stored from wreg
 11617  1C50  0020               	movlb	0	; select bank0
 11618  1C51  00A2               	movwf	setSw_Enable@command
 11619                           
 11620                           ;Switch_B1.c: 90: SwPointSelect(1);
 11621  1C52  3001               	movlw	1
 11622  1C53  319B  2308  319C   	fcall	_SwPointSelect
 11623                           
 11624                           ;Switch_B1.c: 91: Sw->Enable=command;
 11625  1C56  0878               	movf	_Sw,w
 11626  1C57  0086               	movwf	6
 11627  1C58  3001               	movlw	1	; select bank2/3
 11628  1C59  0087               	movwf	7
 11629  1C5A  0020               	movlb	0	; select bank0
 11630  1C5B  0822               	movf	setSw_Enable@command,w
 11631  1C5C  1001               	bcf	1,0
 11632  1C5D  1D03               	skipz
 11633  1C5E  1401               	bsf	1,0
 11634                           
 11635                           ;Switch_B1.c: 95: SwPointSelect(2);
 11636  1C5F  3002               	movlw	2
 11637  1C60  319B  2308         	fcall	_SwPointSelect
 11638                           
 11639                           ;Switch_B1.c: 96: Sw->Enable=command;
 11640  1C62  0878               	movf	_Sw,w
 11641  1C63  0086               	movwf	6
 11642  1C64  3001               	movlw	1	; select bank2/3
 11643  1C65  0087               	movwf	7
 11644  1C66  0020               	movlb	0	; select bank0
 11645  1C67  0822               	movf	setSw_Enable@command,w
 11646  1C68  1001               	bcf	1,0
 11647  1C69  1D03               	skipz
 11648  1C6A  1401               	bsf	1,0
 11649  1C6B  0008               	return
 11650  1C6C                     __end_of_setSw_Enable:	
 11651                           
 11652                           	psect	text65
 11653  1E05                     __ptext65:	
 11654 ;; *************** function _setRF_Enable *****************
 11655 ;; Defined at:
 11656 ;;		line 186 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
 11657 ;; Parameters:    Size  Location     Type
 11658 ;;  rf              1    wreg     unsigned char 
 11659 ;;  command         1    2[BANK0 ] unsigned char 
 11660 ;; Auto vars:     Size  Location     Type
 11661 ;;  rf              1    3[BANK0 ] unsigned char 
 11662 ;; Return value:  Size  Location     Type
 11663 ;;		None               void
 11664 ;; Registers used:
 11665 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11666 ;; Tracked objects:
 11667 ;;		On entry : 0/0
 11668 ;;		On exit  : 0/0
 11669 ;;		Unchanged: 0/0
 11670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11671 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11672 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11674 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11675 ;;Total ram usage:        2 bytes
 11676 ;; Hardware stack levels used:    1
 11677 ;; Hardware stack levels required when called:    5
 11678 ;; This function calls:
 11679 ;;		_RfPointSelect
 11680 ;;		_setINT_GO
 11681 ;; This function is called by:
 11682 ;;		_MainT
 11683 ;;		_setOverTemp_Exceptions
 11684 ;;		_setPowerFault_Exceptions
 11685 ;; This function uses a non-reentrant model
 11686 ;;
 11687                           
 11688                           
 11689                           ;psect for function _setRF_Enable
 11690  1E05                     _setRF_Enable:	
 11691                           
 11692                           ;incstack = 0
 11693                           ; Regs used in _setRF_Enable: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11694                           ;setRF_Enable@rf stored from wreg
 11695  1E05  0020               	movlb	0	; select bank0
 11696  1E06  00A3               	movwf	setRF_Enable@rf
 11697                           
 11698                           ;RF_Control_B1.c: 188: RfPointSelect(rf);
 11699  1E07  0823               	movf	setRF_Enable@rf,w
 11700  1E08  3199  2188  319E   	fcall	_RfPointSelect
 11701                           
 11702                           ;RF_Control_B1.c: 189: RF->Enable=command;
 11703  1E0B  0877               	movf	_RF,w
 11704  1E0C  0086               	movwf	6
 11705  1E0D  0187               	clrf	7
 11706  1E0E  0020               	movlb	0	; select bank0
 11707  1E0F  0822               	movf	setRF_Enable@command,w
 11708  1E10  1001               	bcf	1,0
 11709  1E11  1D03               	skipz
 11710  1E12  1401               	bsf	1,0
 11711                           
 11712                           ;RF_Control_B1.c: 190: RF->Learn=0;
 11713  1E13  0877               	movf	_RF,w
 11714  1E14  0086               	movwf	6
 11715  1E15  0187               	clrf	7
 11716  1E16  1301               	bcf	1,6
 11717                           
 11718                           ;RF_Control_B1.c: 191: RF->TransceiveGO=0;
 11719  1E17  0877               	movf	_RF,w
 11720  1E18  0086               	movwf	6
 11721  1E19  0187               	clrf	7
 11722  1E1A  1101               	bcf	1,2
 11723                           
 11724                           ;RF_Control_B1.c: 192: RF->RxStatus=0;
 11725  1E1B  0877               	movf	_RF,w
 11726  1E1C  0086               	movwf	6
 11727  1E1D  0187               	clrf	7
 11728  1E1E  1181               	bcf	1,3
 11729                           
 11730                           ;RF_Control_B1.c: 193: RF->ReceiveGO=0;
 11731  1E1F  0877               	movf	_RF,w
 11732  1E20  0086               	movwf	6
 11733  1E21  0187               	clrf	7
 11734  1E22  1081               	bcf	1,1
 11735                           
 11736                           ;RF_Control_B1.c: 194: RF->DebounceTime=0;
 11737  1E23  0A77               	incf	_RF,w
 11738  1E24  0086               	movwf	6
 11739  1E25  0187               	clrf	7
 11740  1E26  0181               	clrf	1
 11741                           
 11742                           ;RF_Control_B1.c: 195: RF->Debounce=0;
 11743  1E27  0877               	movf	_RF,w
 11744  1E28  0086               	movwf	6
 11745  1E29  0187               	clrf	7
 11746  1E2A  1281               	bcf	1,5
 11747                           
 11748                           ;RF_Control_B1.c: 196: setINT_GO(0);
 11749  1E2B  3000               	movlw	0
 11750  1E2C  3199  215F         	fcall	_setINT_GO
 11751  1E2E  0008               	return
 11752  1E2F                     __end_of_setRF_Enable:	
 11753                           
 11754                           	psect	text66
 11755  195F                     __ptext66:	
 11756 ;; *************** function _setINT_GO *****************
 11757 ;; Defined at:
 11758 ;;		line 303 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
 11759 ;; Parameters:    Size  Location     Type
 11760 ;;  command         1    wreg     unsigned char 
 11761 ;; Auto vars:     Size  Location     Type
 11762 ;;  command         1    0[BANK0 ] unsigned char 
 11763 ;; Return value:  Size  Location     Type
 11764 ;;		None               void
 11765 ;; Registers used:
 11766 ;;		wreg
 11767 ;; Tracked objects:
 11768 ;;		On entry : 0/0
 11769 ;;		On exit  : 0/0
 11770 ;;		Unchanged: 0/0
 11771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11772 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11773 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11775 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11776 ;;Total ram usage:        1 bytes
 11777 ;; Hardware stack levels used:    1
 11778 ;; Hardware stack levels required when called:    4
 11779 ;; This function calls:
 11780 ;;		Nothing
 11781 ;; This function is called by:
 11782 ;;		_setRF_Main
 11783 ;;		_setRF_Enable
 11784 ;;		_RF_RxDisable
 11785 ;; This function uses a non-reentrant model
 11786 ;;
 11787                           
 11788                           
 11789                           ;psect for function _setINT_GO
 11790  195F                     _setINT_GO:	
 11791                           
 11792                           ;incstack = 0
 11793                           ; Regs used in _setINT_GO: [wreg]
 11794                           ;setINT_GO@command stored from wreg
 11795  195F  0020               	movlb	0	; select bank0
 11796  1960  00A0               	movwf	setINT_GO@command
 11797                           
 11798                           ;MCU_B1.c: 305: INTF=0;
 11799  1961  108B               	bcf	11,1	;volatile
 11800                           
 11801                           ;MCU_B1.c: 306: INTE=command;
 11802  1962  1C20               	btfss	setINT_GO@command,0
 11803  1963  2966               	goto	u8490
 11804  1964  160B               	bsf	11,4	;volatile
 11805  1965  0008               	return
 11806  1966                     u8490:	
 11807  1966  120B               	bcf	11,4	;volatile
 11808  1967  0008               	return
 11809  1968                     __end_of_setINT_GO:	
 11810                           
 11811                           	psect	text67
 11812  19F0                     __ptext67:	
 11813 ;; *************** function _LED_Main *****************
 11814 ;; Defined at:
 11815 ;;		line 51 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\LED_B1.c"
 11816 ;; Parameters:    Size  Location     Type
 11817 ;;		None
 11818 ;; Auto vars:     Size  Location     Type
 11819 ;;		None
 11820 ;; Return value:  Size  Location     Type
 11821 ;;		None               void
 11822 ;; Registers used:
 11823 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11824 ;; Tracked objects:
 11825 ;;		On entry : 0/0
 11826 ;;		On exit  : 0/0
 11827 ;;		Unchanged: 0/0
 11828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11830 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11832 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11833 ;;Total ram usage:        0 bytes
 11834 ;; Hardware stack levels used:    1
 11835 ;; Hardware stack levels required when called:    6
 11836 ;; This function calls:
 11837 ;;		_setLED_Main
 11838 ;; This function is called by:
 11839 ;;		_main
 11840 ;; This function uses a non-reentrant model
 11841 ;;
 11842                           
 11843                           
 11844                           ;psect for function _LED_Main
 11845  19F0                     _LED_Main:	
 11846                           
 11847                           ;LED_B1.c: 54: setLED_Main(1);
 11848                           
 11849                           ;incstack = 0
 11850                           ; Regs used in _LED_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11851  19F0  3001               	movlw	1
 11852  19F1  319F  27C0  3199   	fcall	_setLED_Main
 11853                           
 11854                           ;LED_B1.c: 57: setLED_Main(2);
 11855  19F4  3002               	movlw	2
 11856  19F5  319F  27C0  3199   	fcall	_setLED_Main
 11857                           
 11858                           ;LED_B1.c: 63: setLED_Main(99);
 11859  19F8  3063               	movlw	99
 11860  19F9  319F  27C0         	fcall	_setLED_Main
 11861  19FB  0008               	return
 11862  19FC                     __end_of_LED_Main:	
 11863                           
 11864                           	psect	text68
 11865  1FC0                     __ptext68:	
 11866 ;; *************** function _setLED_Main *****************
 11867 ;; Defined at:
 11868 ;;		line 214 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\LED_B1.c"
 11869 ;; Parameters:    Size  Location     Type
 11870 ;;  led             1    wreg     unsigned char 
 11871 ;; Auto vars:     Size  Location     Type
 11872 ;;  led             1    4[BANK0 ] unsigned char 
 11873 ;; Return value:  Size  Location     Type
 11874 ;;		None               void
 11875 ;; Registers used:
 11876 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11877 ;; Tracked objects:
 11878 ;;		On entry : 0/0
 11879 ;;		On exit  : 0/0
 11880 ;;		Unchanged: 0/0
 11881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11883 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11884 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11885 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11886 ;;Total ram usage:        3 bytes
 11887 ;; Hardware stack levels used:    1
 11888 ;; Hardware stack levels required when called:    5
 11889 ;; This function calls:
 11890 ;;		_LedPointSelect
 11891 ;; This function is called by:
 11892 ;;		_LED_Main
 11893 ;; This function uses a non-reentrant model
 11894 ;;
 11895                           
 11896                           
 11897                           ;psect for function _setLED_Main
 11898  1FC0                     _setLED_Main:	
 11899                           
 11900                           ;incstack = 0
 11901                           ; Regs used in _setLED_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11902                           ;setLED_Main@led stored from wreg
 11903  1FC0  0020               	movlb	0	; select bank0
 11904  1FC1  00A4               	movwf	setLED_Main@led
 11905                           
 11906                           ;LED_B1.c: 216: LedPointSelect(led);
 11907  1FC2  0824               	movf	setLED_Main@led,w
 11908  1FC3  319D  2524  319F   	fcall	_LedPointSelect
 11909                           
 11910                           ;LED_B1.c: 217: if(LED->GO)
 11911  1FC6  0021               	movlb	1	; select bank1
 11912  1FC7  083A               	movf	_LED^(0+128),w
 11913  1FC8  0086               	movwf	6
 11914  1FC9  0187               	clrf	7
 11915  1FCA  1C81               	btfss	1,1
 11916  1FCB  0008               	return
 11917                           
 11918                           ;LED_B1.c: 218: {
 11919                           ;LED_B1.c: 219: LED->Time++;
 11920  1FCC  0A3A               	incf	_LED^(0+128),w
 11921  1FCD  0086               	movwf	6
 11922  1FCE  0187               	clrf	7
 11923  1FCF  3001               	movlw	1
 11924  1FD0  0781               	addwf	1,f
 11925  1FD1  3141               	addfsr 1,1
 11926  1FD2  1803               	skipnc
 11927  1FD3  0A81               	incf	1,f
 11928                           
 11929                           ;LED_B1.c: 220: if(LED->Time >= 500/10)
 11930  1FD4  0A3A               	incf	_LED^(0+128),w
 11931  1FD5  0086               	movwf	6
 11932  1FD6  0187               	clrf	7
 11933  1FD7  3F40               	moviw [0]fsr1
 11934  1FD8  0020               	movlb	0	; select bank0
 11935  1FD9  00A2               	movwf	??_setLED_Main
 11936  1FDA  3F41               	moviw [1]fsr1
 11937  1FDB  00A3               	movwf	??_setLED_Main+1
 11938  1FDC  3000               	movlw	0
 11939  1FDD  0223               	subwf	??_setLED_Main+1,w
 11940  1FDE  3032               	movlw	50
 11941  1FDF  1903               	skipnz
 11942  1FE0  0222               	subwf	??_setLED_Main,w
 11943  1FE1  1C03               	skipc
 11944  1FE2  0008               	return
 11945                           
 11946                           ;LED_B1.c: 221: {
 11947                           ;LED_B1.c: 222: LED->Time=0;
 11948  1FE3  0021               	movlb	1	; select bank1
 11949  1FE4  0A3A               	incf	_LED^(0+128),w
 11950  1FE5  0086               	movwf	6
 11951  1FE6  0187               	clrf	7
 11952  1FE7  3000               	movlw	0
 11953  1FE8  3FC0               	movwi [0]fsr1
 11954  1FE9  3FC1               	movwi [1]fsr1
 11955                           
 11956                           ;LED_B1.c: 224: if(led == 1)
 11957  1FEA  0020               	movlb	0	; select bank0
 11958  1FEB  0824               	movf	setLED_Main@led,w
 11959  1FEC  3A01               	xorlw	1
 11960  1FED  1D03               	skipz
 11961  1FEE  2FF2               	goto	l9231
 11962                           
 11963                           ;LED_B1.c: 225: {
 11964                           ;LED_B1.c: 226: RA3=~RA3;
 11965  1FEF  3008               	movlw	8
 11966  1FF0  068C               	xorwf	12,f
 11967                           
 11968                           ;LED_B1.c: 227: }
 11969  1FF1  0008               	return
 11970  1FF2                     l9231:	
 11971                           
 11972                           ;LED_B1.c: 230: else if(led == 2)
 11973  1FF2  0824               	movf	setLED_Main@led,w
 11974  1FF3  3A02               	xorlw	2
 11975  1FF4  1D03               	skipz
 11976  1FF5  2FF9               	goto	l9235
 11977                           
 11978                           ;LED_B1.c: 231: {
 11979                           ;LED_B1.c: 232: RC7=~RC7;
 11980  1FF6  3080               	movlw	128
 11981  1FF7  068E               	xorwf	14,f
 11982                           
 11983                           ;LED_B1.c: 233: }
 11984  1FF8  0008               	return
 11985  1FF9                     l9235:	
 11986                           
 11987                           ;LED_B1.c: 242: else if(led == 99)
 11988  1FF9  0824               	movf	setLED_Main@led,w
 11989  1FFA  3A63               	xorlw	99
 11990  1FFB  1D03               	skipz
 11991  1FFC  0008               	return
 11992                           
 11993                           ;LED_B1.c: 243: {
 11994                           ;LED_B1.c: 244: RB5=~RB5;
 11995  1FFD  3020               	movlw	32
 11996  1FFE  068D               	xorwf	13,f
 11997  1FFF  0008               	return
 11998  2000                     __end_of_setLED_Main:	
 11999                           
 12000                           	psect	text69
 12001  19E4                     __ptext69:	
 12002 ;; *************** function _LED_Initialization *****************
 12003 ;; Defined at:
 12004 ;;		line 35 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\LED_B1.c"
 12005 ;; Parameters:    Size  Location     Type
 12006 ;;		None
 12007 ;; Auto vars:     Size  Location     Type
 12008 ;;		None
 12009 ;; Return value:  Size  Location     Type
 12010 ;;		None               void
 12011 ;; Registers used:
 12012 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12013 ;; Tracked objects:
 12014 ;;		On entry : 0/0
 12015 ;;		On exit  : 0/0
 12016 ;;		Unchanged: 0/0
 12017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12018 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12019 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12021 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12022 ;;Total ram usage:        0 bytes
 12023 ;; Hardware stack levels used:    1
 12024 ;; Hardware stack levels required when called:    7
 12025 ;; This function calls:
 12026 ;;		_setLED_Initialization
 12027 ;; This function is called by:
 12028 ;;		_main
 12029 ;; This function uses a non-reentrant model
 12030 ;;
 12031                           
 12032                           
 12033                           ;psect for function _LED_Initialization
 12034  19E4                     _LED_Initialization:	
 12035                           
 12036                           ;LED_B1.c: 38: setLED_Initialization(1);
 12037                           
 12038                           ;incstack = 0
 12039                           ; Regs used in _LED_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12040  19E4  3001               	movlw	1
 12041  19E5  319A  22BD  3199   	fcall	_setLED_Initialization
 12042                           
 12043                           ;LED_B1.c: 41: setLED_Initialization(2);
 12044  19E8  3002               	movlw	2
 12045  19E9  319A  22BD  3199   	fcall	_setLED_Initialization
 12046                           
 12047                           ;LED_B1.c: 47: setLED_Initialization(99);
 12048  19EC  3063               	movlw	99
 12049  19ED  319A  22BD         	fcall	_setLED_Initialization
 12050  19EF  0008               	return
 12051  19F0                     __end_of_LED_Initialization:	
 12052                           
 12053                           	psect	text70
 12054  1ABD                     __ptext70:	
 12055 ;; *************** function _setLED_Initialization *****************
 12056 ;; Defined at:
 12057 ;;		line 67 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\LED_B1.c"
 12058 ;; Parameters:    Size  Location     Type
 12059 ;;  led             1    wreg     unsigned char 
 12060 ;; Auto vars:     Size  Location     Type
 12061 ;;  led             1    4[BANK0 ] unsigned char 
 12062 ;; Return value:  Size  Location     Type
 12063 ;;		None               void
 12064 ;; Registers used:
 12065 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12066 ;; Tracked objects:
 12067 ;;		On entry : 0/0
 12068 ;;		On exit  : 0/0
 12069 ;;		Unchanged: 0/0
 12070 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12071 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12072 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12074 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12075 ;;Total ram usage:        1 bytes
 12076 ;; Hardware stack levels used:    1
 12077 ;; Hardware stack levels required when called:    6
 12078 ;; This function calls:
 12079 ;;		_LedPointSelect
 12080 ;;		_setLED
 12081 ;; This function is called by:
 12082 ;;		_LED_Initialization
 12083 ;; This function uses a non-reentrant model
 12084 ;;
 12085                           
 12086                           
 12087                           ;psect for function _setLED_Initialization
 12088  1ABD                     _setLED_Initialization:	
 12089                           
 12090                           ;incstack = 0
 12091                           ; Regs used in _setLED_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 12092                           ;setLED_Initialization@led stored from wreg
 12093  1ABD  0020               	movlb	0	; select bank0
 12094  1ABE  00A4               	movwf	setLED_Initialization@led
 12095                           
 12096                           ;LED_B1.c: 69: LedPointSelect(led);
 12097  1ABF  0824               	movf	setLED_Initialization@led,w
 12098  1AC0  319D  2524  319A   	fcall	_LedPointSelect
 12099                           
 12100                           ;LED_B1.c: 70: LED->Enable=1;
 12101  1AC3  0021               	movlb	1	; select bank1
 12102  1AC4  083A               	movf	_LED^(0+128),w
 12103  1AC5  0086               	movwf	6
 12104  1AC6  0187               	clrf	7
 12105  1AC7  1401               	bsf	1,0
 12106                           
 12107                           ;LED_B1.c: 71: setLED(led,0);
 12108  1AC8  0020               	movlb	0	; select bank0
 12109  1AC9  01A2               	clrf	setLED@command
 12110  1ACA  0824               	movf	setLED_Initialization@led,w
 12111  1ACB  3193  2373         	fcall	_setLED
 12112  1ACD  0008               	return
 12113  1ACE                     __end_of_setLED_Initialization:	
 12114                           
 12115                           	psect	text71
 12116  114B                     __ptext71:	
 12117 ;; *************** function _Flash_Memory_Main *****************
 12118 ;; Defined at:
 12119 ;;		line 873 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
 12120 ;; Parameters:    Size  Location     Type
 12121 ;;		None
 12122 ;; Auto vars:     Size  Location     Type
 12123 ;;		None
 12124 ;; Return value:  Size  Location     Type
 12125 ;;		None               void
 12126 ;; Registers used:
 12127 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12128 ;; Tracked objects:
 12129 ;;		On entry : 0/0
 12130 ;;		On exit  : 0/0
 12131 ;;		Unchanged: 0/0
 12132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12134 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12136 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12137 ;;Total ram usage:        0 bytes
 12138 ;; Hardware stack levels used:    1
 12139 ;; Hardware stack levels required when called:    7
 12140 ;; This function calls:
 12141 ;;		_Flash_Memory_Modify
 12142 ;; This function is called by:
 12143 ;;		_main
 12144 ;; This function uses a non-reentrant model
 12145 ;;
 12146                           
 12147                           
 12148                           ;psect for function _Flash_Memory_Main
 12149  114B                     _Flash_Memory_Main:	
 12150                           
 12151                           ;MCU_B1.c: 875: if(Memory->GO)
 12152                           
 12153                           ;incstack = 0
 12154                           ; Regs used in _Flash_Memory_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12155  114B  0020               	movlb	0	; select bank0
 12156  114C  086D               	movf	_Memory,w
 12157  114D  3E22               	addlw	34
 12158  114E  0086               	movwf	6
 12159  114F  3002               	movlw	2	; select bank4/5
 12160  1150  0087               	movwf	7
 12161  1151  1C81               	btfss	1,1
 12162  1152  0008               	return
 12163                           
 12164                           ;MCU_B1.c: 876: {
 12165                           ;MCU_B1.c: 877: if(Memory->Modify)
 12166  1153  086D               	movf	_Memory,w
 12167  1154  3E22               	addlw	34
 12168  1155  0086               	movwf	6
 12169  1156  3002               	movlw	2	; select bank4/5
 12170  1157  0087               	movwf	7
 12171  1158  1C01               	btfss	1,0
 12172  1159  2988               	goto	l9823
 12173                           
 12174                           ;MCU_B1.c: 878: {
 12175                           ;MCU_B1.c: 879: Memory->Time++;
 12176  115A  086D               	movf	_Memory,w
 12177  115B  3E23               	addlw	35
 12178  115C  0086               	movwf	6
 12179  115D  3002               	movlw	2	; select bank4/5
 12180  115E  0087               	movwf	7
 12181  115F  3001               	movlw	1
 12182  1160  0781               	addwf	1,f
 12183  1161  3141               	addfsr 1,1
 12184  1162  1803               	skipnc
 12185  1163  0A81               	incf	1,f
 12186                           
 12187                           ;MCU_B1.c: 880: if(Memory->Time == 25)
 12188  1164  086D               	movf	_Memory,w
 12189  1165  3E23               	addlw	35
 12190  1166  0086               	movwf	6
 12191  1167  3002               	movlw	2	; select bank4/5
 12192  1168  0087               	movwf	7
 12193  1169  3F40               	moviw [0]fsr1
 12194  116A  3A19               	xorlw	25
 12195  116B  1D03               	skipz
 12196  116C  296F               	goto	u10215
 12197  116D  3F41               	moviw [1]fsr1
 12198  116E  3A00               	xorlw	0
 12199  116F                     u10215:	
 12200  116F  1D03               	skipz
 12201  1170  0008               	return
 12202                           
 12203                           ;MCU_B1.c: 881: {
 12204                           ;MCU_B1.c: 882: Memory->Time=0;
 12205  1171  086D               	movf	_Memory,w
 12206  1172  3E23               	addlw	35
 12207  1173  0086               	movwf	6
 12208  1174  3002               	movlw	2	; select bank4/5
 12209  1175  0087               	movwf	7
 12210  1176  3000               	movlw	0
 12211  1177  3FC0               	movwi [0]fsr1
 12212  1178  3FC1               	movwi [1]fsr1
 12213                           
 12214                           ;MCU_B1.c: 883: Memory->Modify=0;
 12215  1179  086D               	movf	_Memory,w
 12216  117A  3E22               	addlw	34
 12217  117B  0086               	movwf	6
 12218  117C  3002               	movlw	2	; select bank4/5
 12219  117D  0087               	movwf	7
 12220  117E  1001               	bcf	1,0
 12221                           
 12222                           ;MCU_B1.c: 884: Memory->GO=0;
 12223  117F  086D               	movf	_Memory,w
 12224  1180  3E22               	addlw	34
 12225  1181  0086               	movwf	6
 12226  1182  3002               	movlw	2	; select bank4/5
 12227  1183  0087               	movwf	7
 12228  1184  1081               	bcf	1,1
 12229                           
 12230                           ;MCU_B1.c: 885: Flash_Memory_Modify();
 12231  1185  3194  2496         	fcall	_Flash_Memory_Modify
 12232                           
 12233                           ;MCU_B1.c: 887: }
 12234                           ;MCU_B1.c: 888: }
 12235  1187  0008               	return
 12236  1188                     l9823:	
 12237                           
 12238                           ;MCU_B1.c: 889: else
 12239                           ;MCU_B1.c: 890: {
 12240                           ;MCU_B1.c: 891: Memory->GO=0;
 12241  1188  0020               	movlb	0	; select bank0
 12242  1189  086D               	movf	_Memory,w
 12243  118A  3E22               	addlw	34
 12244  118B  0086               	movwf	6
 12245  118C  3002               	movlw	2	; select bank4/5
 12246  118D  0087               	movwf	7
 12247  118E  1081               	bcf	1,1
 12248  118F  0008               	return
 12249  1190                     __end_of_Flash_Memory_Main:	
 12250                           
 12251                           	psect	text72
 12252  1496                     __ptext72:	
 12253 ;; *************** function _Flash_Memory_Modify *****************
 12254 ;; Defined at:
 12255 ;;		line 948 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
 12256 ;; Parameters:    Size  Location     Type
 12257 ;;		None
 12258 ;; Auto vars:     Size  Location     Type
 12259 ;;  i               1    6[BANK0 ] unsigned char 
 12260 ;; Return value:  Size  Location     Type
 12261 ;;		None               void
 12262 ;; Registers used:
 12263 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12264 ;; Tracked objects:
 12265 ;;		On entry : 0/0
 12266 ;;		On exit  : 0/0
 12267 ;;		Unchanged: 0/0
 12268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12270 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12271 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12272 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12273 ;;Total ram usage:        3 bytes
 12274 ;; Hardware stack levels used:    1
 12275 ;; Hardware stack levels required when called:    6
 12276 ;; This function calls:
 12277 ;;		_Flash_Memory_Erasing
 12278 ;;		_Flash_Memory_Read
 12279 ;;		_Flash_Memory_Write
 12280 ;; This function is called by:
 12281 ;;		_Flash_Memory_Main
 12282 ;; This function uses a non-reentrant model
 12283 ;;
 12284                           
 12285                           
 12286                           ;psect for function _Flash_Memory_Modify
 12287  1496                     _Flash_Memory_Modify:	
 12288                           
 12289                           ;MCU_B1.c: 950: char i;
 12290                           ;MCU_B1.c: 951: for(i=0;i<32;i++)
 12291                           
 12292                           ;incstack = 0
 12293                           ; Regs used in _Flash_Memory_Modify: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12294  1496  0020               	movlb	0	; select bank0
 12295  1497  01A6               	clrf	Flash_Memory_Modify@i
 12296  1498  3020               	movlw	32
 12297  1499  0226               	subwf	Flash_Memory_Modify@i,w
 12298  149A  1803               	btfsc	3,0
 12299  149B  2CB3               	goto	l9313
 12300  149C                     l9307:	
 12301                           
 12302                           ;MCU_B1.c: 952: {
 12303                           ;MCU_B1.c: 953: Memory->Data[i]=Flash_Memory_Read(i);
 12304  149C  0826               	movf	Flash_Memory_Modify@i,w
 12305  149D  319B  23EA  3194   	fcall	_Flash_Memory_Read
 12306  14A0  0020               	movlb	0	; select bank0
 12307  14A1  00A4               	movwf	??_Flash_Memory_Modify
 12308  14A2  0826               	movf	Flash_Memory_Modify@i,w
 12309  14A3  076D               	addwf	_Memory,w
 12310  14A4  00A5               	movwf	??_Flash_Memory_Modify+1
 12311  14A5  0825               	movf	??_Flash_Memory_Modify+1,w
 12312  14A6  0086               	movwf	6
 12313  14A7  3002               	movlw	2	; select bank4/5
 12314  14A8  0087               	movwf	7
 12315  14A9  0824               	movf	??_Flash_Memory_Modify,w
 12316  14AA  0081               	movwf	1
 12317  14AB  3001               	movlw	1
 12318  14AC  00A4               	movwf	??_Flash_Memory_Modify
 12319  14AD  0824               	movf	??_Flash_Memory_Modify,w
 12320  14AE  07A6               	addwf	Flash_Memory_Modify@i,f
 12321  14AF  3020               	movlw	32
 12322  14B0  0226               	subwf	Flash_Memory_Modify@i,w
 12323  14B1  1C03               	skipc
 12324  14B2  2C9C               	goto	l9307
 12325  14B3                     l9313:	
 12326                           
 12327                           ;MCU_B1.c: 954: }
 12328                           ;MCU_B1.c: 955: Memory->Data[0]=Product->Data[12];
 12329  14B3  086E               	movf	_Product,w
 12330  14B4  3E0C               	addlw	12
 12331  14B5  0086               	movwf	6
 12332  14B6  3001               	movlw	1	; select bank2/3
 12333  14B7  0087               	movwf	7
 12334  14B8  0801               	movf	1,w
 12335  14B9  00A4               	movwf	??_Flash_Memory_Modify
 12336  14BA  086D               	movf	_Memory,w
 12337  14BB  0086               	movwf	6
 12338  14BC  3002               	movlw	2	; select bank4/5
 12339  14BD  0087               	movwf	7
 12340  14BE  0824               	movf	??_Flash_Memory_Modify,w
 12341  14BF  0081               	movwf	1
 12342                           
 12343                           ;MCU_B1.c: 956: Memory->Data[1]=Product->Data[13];
 12344  14C0  086E               	movf	_Product,w
 12345  14C1  3E0D               	addlw	13
 12346  14C2  0086               	movwf	6
 12347  14C3  3001               	movlw	1	; select bank2/3
 12348  14C4  0087               	movwf	7
 12349  14C5  0801               	movf	1,w
 12350  14C6  00A4               	movwf	??_Flash_Memory_Modify
 12351  14C7  0A6D               	incf	_Memory,w
 12352  14C8  0086               	movwf	6
 12353  14C9  3002               	movlw	2	; select bank4/5
 12354  14CA  0087               	movwf	7
 12355  14CB  0824               	movf	??_Flash_Memory_Modify,w
 12356  14CC  0081               	movwf	1
 12357                           
 12358                           ;MCU_B1.c: 957: Memory->Data[2]=Product->Data[14];
 12359  14CD  086E               	movf	_Product,w
 12360  14CE  3E0E               	addlw	14
 12361  14CF  0086               	movwf	6
 12362  14D0  3001               	movlw	1	; select bank2/3
 12363  14D1  0087               	movwf	7
 12364  14D2  0801               	movf	1,w
 12365  14D3  00A4               	movwf	??_Flash_Memory_Modify
 12366  14D4  086D               	movf	_Memory,w
 12367  14D5  3E02               	addlw	2
 12368  14D6  0086               	movwf	6
 12369  14D7  3002               	movlw	2	; select bank4/5
 12370  14D8  0087               	movwf	7
 12371  14D9  0824               	movf	??_Flash_Memory_Modify,w
 12372  14DA  0081               	movwf	1
 12373                           
 12374                           ;MCU_B1.c: 963: if(Memory->LoopSave)
 12375  14DB  086D               	movf	_Memory,w
 12376  14DC  3E22               	addlw	34
 12377  14DD  0086               	movwf	6
 12378  14DE  3002               	movlw	2	; select bank4/5
 12379  14DF  0087               	movwf	7
 12380  14E0  1D01               	btfss	1,2
 12381  14E1  2CF3               	goto	l9317
 12382                           
 12383                           ;MCU_B1.c: 964: {
 12384                           ;MCU_B1.c: 965: Memory->LoopSave=0;
 12385  14E2  086D               	movf	_Memory,w
 12386  14E3  3E22               	addlw	34
 12387  14E4  0086               	movwf	6
 12388  14E5  3002               	movlw	2	; select bank4/5
 12389  14E6  0087               	movwf	7
 12390  14E7  1101               	bcf	1,2
 12391                           
 12392                           ;MCU_B1.c: 966: TMain->FirstOpen=0;
 12393  14E8  086F               	movf	_TMain,w
 12394  14E9  0086               	movwf	6
 12395  14EA  3001               	movlw	1	; select bank2/3
 12396  14EB  0087               	movwf	7
 12397  14EC  1281               	bcf	1,5
 12398                           
 12399                           ;MCU_B1.c: 967: TMain->First=0;
 12400  14ED  086F               	movf	_TMain,w
 12401  14EE  3E03               	addlw	3
 12402  14EF  0086               	movwf	6
 12403  14F0  3001               	movlw	1	; select bank2/3
 12404  14F1  0087               	movwf	7
 12405  14F2  1081               	bcf	1,1
 12406  14F3                     l9317:	
 12407                           
 12408                           ;MCU_B1.c: 969: }
 12409                           ;MCU_B1.c: 970: GIE=0;
 12410  14F3  138B               	bcf	11,7	;volatile
 12411                           
 12412                           ;MCU_B1.c: 971: Flash_Memory_Erasing();
 12413  14F4  3199  21D8  3194   	fcall	_Flash_Memory_Erasing
 12414                           
 12415                           ;MCU_B1.c: 972: Flash_Memory_Write();
 12416  14F7  319E  26B5         	fcall	_Flash_Memory_Write
 12417                           
 12418                           ;MCU_B1.c: 973: GIE=1;
 12419  14F9  178B               	bsf	11,7	;volatile
 12420  14FA  0008               	return
 12421  14FB                     __end_of_Flash_Memory_Modify:	
 12422                           
 12423                           	psect	text73
 12424  19D8                     __ptext73:	
 12425 ;; *************** function _Flash_Memory_Erasing *****************
 12426 ;; Defined at:
 12427 ;;		line 937 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
 12428 ;; Parameters:    Size  Location     Type
 12429 ;;		None
 12430 ;; Auto vars:     Size  Location     Type
 12431 ;;		None
 12432 ;; Return value:  Size  Location     Type
 12433 ;;		None               void
 12434 ;; Registers used:
 12435 ;;		wreg, status,2, status,0, pclath, cstack
 12436 ;; Tracked objects:
 12437 ;;		On entry : 0/0
 12438 ;;		On exit  : 0/0
 12439 ;;		Unchanged: 0/0
 12440 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12441 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12444 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12445 ;;Total ram usage:        0 bytes
 12446 ;; Hardware stack levels used:    1
 12447 ;; Hardware stack levels required when called:    5
 12448 ;; This function calls:
 12449 ;;		_Flash_Memory_Unlock
 12450 ;; This function is called by:
 12451 ;;		_Flash_Memory_Modify
 12452 ;; This function uses a non-reentrant model
 12453 ;;
 12454                           
 12455                           
 12456                           ;psect for function _Flash_Memory_Erasing
 12457  19D8                     _Flash_Memory_Erasing:	
 12458                           
 12459                           ;MCU_B1.c: 939: CFGS=0;
 12460                           
 12461                           ;incstack = 0
 12462                           ; Regs used in _Flash_Memory_Erasing: [wreg+status,2+status,0+pclath+cstack]
 12463  19D8  0023               	movlb	3	; select bank3
 12464  19D9  1315               	bcf	21,6	;volatile
 12465                           
 12466                           ;MCU_B1.c: 940: PMADRH=0x30;
 12467  19DA  3030               	movlw	48
 12468  19DB  0092               	movwf	18	;volatile
 12469                           
 12470                           ;MCU_B1.c: 941: PMADRL=0x00;
 12471  19DC  0191               	clrf	17	;volatile
 12472                           
 12473                           ;MCU_B1.c: 942: FREE=1;
 12474  19DD  1615               	bsf	21,4	;volatile
 12475                           
 12476                           ;MCU_B1.c: 943: WREN=1;
 12477  19DE  1515               	bsf	21,2	;volatile
 12478                           
 12479                           ;MCU_B1.c: 944: Flash_Memory_Unlock();
 12480  19DF  3199  2156         	fcall	_Flash_Memory_Unlock
 12481                           
 12482                           ;MCU_B1.c: 945: WREN=0;
 12483  19E1  0023               	movlb	3	; select bank3
 12484  19E2  1115               	bcf	21,2	;volatile
 12485  19E3  0008               	return
 12486  19E4                     __end_of_Flash_Memory_Erasing:	
 12487                           
 12488                           	psect	text74
 12489  0E21                     __ptext74:	
 12490 ;; *************** function _Flash_Memory_Initialization *****************
 12491 ;; Defined at:
 12492 ;;		line 828 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
 12493 ;; Parameters:    Size  Location     Type
 12494 ;;		None
 12495 ;; Auto vars:     Size  Location     Type
 12496 ;;  i               1   62[BANK0 ] unsigned char 
 12497 ;; Return value:  Size  Location     Type
 12498 ;;		None               void
 12499 ;; Registers used:
 12500 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12501 ;; Tracked objects:
 12502 ;;		On entry : 0/0
 12503 ;;		On exit  : 0/0
 12504 ;;		Unchanged: 0/0
 12505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12506 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12507 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12508 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12509 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12510 ;;Total ram usage:        2 bytes
 12511 ;; Hardware stack levels used:    1
 12512 ;; Hardware stack levels required when called:    7
 12513 ;; This function calls:
 12514 ;;		_Flash_Memory_Read
 12515 ;;		_Flash_Memory_Write
 12516 ;;		_setPercentValue
 12517 ;; This function is called by:
 12518 ;;		_main
 12519 ;; This function uses a non-reentrant model
 12520 ;;
 12521                           
 12522                           
 12523                           ;psect for function _Flash_Memory_Initialization
 12524  0E21                     _Flash_Memory_Initialization:	
 12525                           
 12526                           ;MCU_B1.c: 830: char i;
 12527                           ;MCU_B1.c: 831: if(Flash_Memory_Read(31) == 0xaa)
 12528                           
 12529                           ;incstack = 0
 12530                           ; Regs used in _Flash_Memory_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 12531  0E21  301F               	movlw	31
 12532  0E22  319B  23EA  318E   	fcall	_Flash_Memory_Read
 12533  0E25  3AAA               	xorlw	170
 12534  0E26  1D03               	skipz
 12535  0E27  2E99               	goto	l9711
 12536                           
 12537                           ;MCU_B1.c: 832: {
 12538                           ;MCU_B1.c: 833: Product->Data[12]=Flash_Memory_Read(0);
 12539  0E28  3000               	movlw	0
 12540  0E29  319B  23EA  318E   	fcall	_Flash_Memory_Read
 12541  0E2C  0020               	movlb	0	; select bank0
 12542  0E2D  00DD               	movwf	??_Flash_Memory_Initialization
 12543  0E2E  086E               	movf	_Product,w
 12544  0E2F  3E0C               	addlw	12
 12545  0E30  0086               	movwf	6
 12546  0E31  3001               	movlw	1	; select bank2/3
 12547  0E32  0087               	movwf	7
 12548  0E33  085D               	movf	??_Flash_Memory_Initialization,w
 12549  0E34  0081               	movwf	1
 12550                           
 12551                           ;MCU_B1.c: 834: Product->Data[13]=Flash_Memory_Read(1);
 12552  0E35  3001               	movlw	1
 12553  0E36  319B  23EA  318E   	fcall	_Flash_Memory_Read
 12554  0E39  0020               	movlb	0	; select bank0
 12555  0E3A  00DD               	movwf	??_Flash_Memory_Initialization
 12556  0E3B  086E               	movf	_Product,w
 12557  0E3C  3E0D               	addlw	13
 12558  0E3D  0086               	movwf	6
 12559  0E3E  3001               	movlw	1	; select bank2/3
 12560  0E3F  0087               	movwf	7
 12561  0E40  085D               	movf	??_Flash_Memory_Initialization,w
 12562  0E41  0081               	movwf	1
 12563                           
 12564                           ;MCU_B1.c: 835: Product->Data[14]=Flash_Memory_Read(2);
 12565  0E42  3002               	movlw	2
 12566  0E43  319B  23EA  318E   	fcall	_Flash_Memory_Read
 12567  0E46  0020               	movlb	0	; select bank0
 12568  0E47  00DD               	movwf	??_Flash_Memory_Initialization
 12569  0E48  086E               	movf	_Product,w
 12570  0E49  3E0E               	addlw	14
 12571  0E4A  0086               	movwf	6
 12572  0E4B  3001               	movlw	1	; select bank2/3
 12573  0E4C  0087               	movwf	7
 12574  0E4D  085D               	movf	??_Flash_Memory_Initialization,w
 12575  0E4E  0081               	movwf	1
 12576                           
 12577                           ;MCU_B1.c: 841: i=setPercentValue(((char)((100-55)*1.5)));
 12578  0E4F  3043               	movlw	67
 12579  0E50  3191  2190  318E   	fcall	_setPercentValue
 12580  0E53  0020               	movlb	0	; select bank0
 12581  0E54  00DD               	movwf	??_Flash_Memory_Initialization
 12582  0E55  085D               	movf	??_Flash_Memory_Initialization,w
 12583  0E56  00DE               	movwf	Flash_Memory_Initialization@i
 12584                           
 12585                           ;MCU_B1.c: 842: Product->Data[21]=i;
 12586  0E57  085E               	movf	Flash_Memory_Initialization@i,w
 12587  0E58  00DD               	movwf	??_Flash_Memory_Initialization
 12588  0E59  086E               	movf	_Product,w
 12589  0E5A  3E15               	addlw	21
 12590  0E5B  0086               	movwf	6
 12591  0E5C  3001               	movlw	1	; select bank2/3
 12592  0E5D  0087               	movwf	7
 12593  0E5E  085D               	movf	??_Flash_Memory_Initialization,w
 12594  0E5F  0081               	movwf	1
 12595                           
 12596                           ;MCU_B1.c: 843: Product->Data[22]=i;
 12597  0E60  085E               	movf	Flash_Memory_Initialization@i,w
 12598  0E61  00DD               	movwf	??_Flash_Memory_Initialization
 12599  0E62  086E               	movf	_Product,w
 12600  0E63  3E16               	addlw	22
 12601  0E64  0086               	movwf	6
 12602  0E65  3001               	movlw	1	; select bank2/3
 12603  0E66  0087               	movwf	7
 12604  0E67  085D               	movf	??_Flash_Memory_Initialization,w
 12605  0E68  0081               	movwf	1
 12606                           
 12607                           ;MCU_B1.c: 844: Product->Data[23]=i;
 12608  0E69  085E               	movf	Flash_Memory_Initialization@i,w
 12609  0E6A  00DD               	movwf	??_Flash_Memory_Initialization
 12610  0E6B  086E               	movf	_Product,w
 12611  0E6C  3E17               	addlw	23
 12612  0E6D  0086               	movwf	6
 12613  0E6E  3001               	movlw	1	; select bank2/3
 12614  0E6F  0087               	movwf	7
 12615  0E70  085D               	movf	??_Flash_Memory_Initialization,w
 12616  0E71  0081               	movwf	1
 12617                           
 12618                           ;MCU_B1.c: 846: if(Product->Data[12]==0xff && Product->Data[13]==0xff && Product->Data[1
      +                          4]==0xff)
 12619  0E72  086E               	movf	_Product,w
 12620  0E73  3E0C               	addlw	12
 12621  0E74  0086               	movwf	6
 12622  0E75  3001               	movlw	1	; select bank2/3
 12623  0E76  0087               	movwf	7
 12624  0E77  0801               	movf	1,w
 12625  0E78  3AFF               	xorlw	255
 12626  0E79  1D03               	skipz
 12627  0E7A  0008               	return
 12628  0E7B  086E               	movf	_Product,w
 12629  0E7C  3E0D               	addlw	13
 12630  0E7D  0086               	movwf	6
 12631  0E7E  3001               	movlw	1	; select bank2/3
 12632  0E7F  0087               	movwf	7
 12633  0E80  0801               	movf	1,w
 12634  0E81  3AFF               	xorlw	255
 12635  0E82  1D03               	skipz
 12636  0E83  0008               	return
 12637  0E84  086E               	movf	_Product,w
 12638  0E85  3E0E               	addlw	14
 12639  0E86  0086               	movwf	6
 12640  0E87  3001               	movlw	1	; select bank2/3
 12641  0E88  0087               	movwf	7
 12642  0E89  0801               	movf	1,w
 12643  0E8A  3AFF               	xorlw	255
 12644  0E8B  1D03               	skipz
 12645  0E8C  0008               	return
 12646                           
 12647                           ;MCU_B1.c: 847: {
 12648                           ;MCU_B1.c: 848: TMain->FirstOpen=1;
 12649  0E8D  086F               	movf	_TMain,w
 12650  0E8E  0086               	movwf	6
 12651  0E8F  3001               	movlw	1	; select bank2/3
 12652  0E90  0087               	movwf	7
 12653  0E91  1681               	bsf	1,5
 12654                           
 12655                           ;MCU_B1.c: 849: TMain->First=1;
 12656  0E92  086F               	movf	_TMain,w
 12657  0E93  3E03               	addlw	3
 12658  0E94  0086               	movwf	6
 12659  0E95  3001               	movlw	1	; select bank2/3
 12660  0E96  0087               	movwf	7
 12661  0E97  1481               	bsf	1,1
 12662                           
 12663                           ;MCU_B1.c: 850: }
 12664                           ;MCU_B1.c: 851: }
 12665  0E98  0008               	return
 12666  0E99                     l9711:	
 12667                           
 12668                           ;MCU_B1.c: 852: else
 12669                           ;MCU_B1.c: 853: {
 12670                           ;MCU_B1.c: 854: i=setPercentValue(((char)((100-55)*1.5)));
 12671  0E99  3043               	movlw	67
 12672  0E9A  3191  2190  318E   	fcall	_setPercentValue
 12673  0E9D  0020               	movlb	0	; select bank0
 12674  0E9E  00DD               	movwf	??_Flash_Memory_Initialization
 12675  0E9F  085D               	movf	??_Flash_Memory_Initialization,w
 12676  0EA0  00DE               	movwf	Flash_Memory_Initialization@i
 12677                           
 12678                           ;MCU_B1.c: 855: Memory->Data[0]=0xff;
 12679  0EA1  30FF               	movlw	255
 12680  0EA2  00DD               	movwf	??_Flash_Memory_Initialization
 12681  0EA3  086D               	movf	_Memory,w
 12682  0EA4  0086               	movwf	6
 12683  0EA5  3002               	movlw	2	; select bank4/5
 12684  0EA6  0087               	movwf	7
 12685  0EA7  085D               	movf	??_Flash_Memory_Initialization,w
 12686  0EA8  0081               	movwf	1
 12687                           
 12688                           ;MCU_B1.c: 856: Memory->Data[1]=0xff;
 12689  0EA9  30FF               	movlw	255
 12690  0EAA  00DD               	movwf	??_Flash_Memory_Initialization
 12691  0EAB  0A6D               	incf	_Memory,w
 12692  0EAC  0086               	movwf	6
 12693  0EAD  3002               	movlw	2	; select bank4/5
 12694  0EAE  0087               	movwf	7
 12695  0EAF  085D               	movf	??_Flash_Memory_Initialization,w
 12696  0EB0  0081               	movwf	1
 12697                           
 12698                           ;MCU_B1.c: 857: Memory->Data[2]=0xff;
 12699  0EB1  30FF               	movlw	255
 12700  0EB2  00DD               	movwf	??_Flash_Memory_Initialization
 12701  0EB3  086D               	movf	_Memory,w
 12702  0EB4  3E02               	addlw	2
 12703  0EB5  0086               	movwf	6
 12704  0EB6  3002               	movlw	2	; select bank4/5
 12705  0EB7  0087               	movwf	7
 12706  0EB8  085D               	movf	??_Flash_Memory_Initialization,w
 12707  0EB9  0081               	movwf	1
 12708                           
 12709                           ;MCU_B1.c: 858: Memory->Data[3]=0xff;
 12710  0EBA  30FF               	movlw	255
 12711  0EBB  00DD               	movwf	??_Flash_Memory_Initialization
 12712  0EBC  086D               	movf	_Memory,w
 12713  0EBD  3E03               	addlw	3
 12714  0EBE  0086               	movwf	6
 12715  0EBF  3002               	movlw	2	; select bank4/5
 12716  0EC0  0087               	movwf	7
 12717  0EC1  085D               	movf	??_Flash_Memory_Initialization,w
 12718  0EC2  0081               	movwf	1
 12719                           
 12720                           ;MCU_B1.c: 859: Memory->Data[4]=0xff;
 12721  0EC3  30FF               	movlw	255
 12722  0EC4  00DD               	movwf	??_Flash_Memory_Initialization
 12723  0EC5  086D               	movf	_Memory,w
 12724  0EC6  3E04               	addlw	4
 12725  0EC7  0086               	movwf	6
 12726  0EC8  3002               	movlw	2	; select bank4/5
 12727  0EC9  0087               	movwf	7
 12728  0ECA  085D               	movf	??_Flash_Memory_Initialization,w
 12729  0ECB  0081               	movwf	1
 12730                           
 12731                           ;MCU_B1.c: 860: Memory->Data[5]=0xff;
 12732  0ECC  30FF               	movlw	255
 12733  0ECD  00DD               	movwf	??_Flash_Memory_Initialization
 12734  0ECE  086D               	movf	_Memory,w
 12735  0ECF  3E05               	addlw	5
 12736  0ED0  0086               	movwf	6
 12737  0ED1  3002               	movlw	2	; select bank4/5
 12738  0ED2  0087               	movwf	7
 12739  0ED3  085D               	movf	??_Flash_Memory_Initialization,w
 12740  0ED4  0081               	movwf	1
 12741                           
 12742                           ;MCU_B1.c: 861: Memory->Data[31]=0xaa;
 12743  0ED5  30AA               	movlw	170
 12744  0ED6  00DD               	movwf	??_Flash_Memory_Initialization
 12745  0ED7  086D               	movf	_Memory,w
 12746  0ED8  3E1F               	addlw	31
 12747  0ED9  0086               	movwf	6
 12748  0EDA  3002               	movlw	2	; select bank4/5
 12749  0EDB  0087               	movwf	7
 12750  0EDC  085D               	movf	??_Flash_Memory_Initialization,w
 12751  0EDD  0081               	movwf	1
 12752                           
 12753                           ;MCU_B1.c: 862: Product->Data[21]=i;
 12754  0EDE  085E               	movf	Flash_Memory_Initialization@i,w
 12755  0EDF  00DD               	movwf	??_Flash_Memory_Initialization
 12756  0EE0  086E               	movf	_Product,w
 12757  0EE1  3E15               	addlw	21
 12758  0EE2  0086               	movwf	6
 12759  0EE3  3001               	movlw	1	; select bank2/3
 12760  0EE4  0087               	movwf	7
 12761  0EE5  085D               	movf	??_Flash_Memory_Initialization,w
 12762  0EE6  0081               	movwf	1
 12763                           
 12764                           ;MCU_B1.c: 863: Product->Data[22]=i;
 12765  0EE7  085E               	movf	Flash_Memory_Initialization@i,w
 12766  0EE8  00DD               	movwf	??_Flash_Memory_Initialization
 12767  0EE9  086E               	movf	_Product,w
 12768  0EEA  3E16               	addlw	22
 12769  0EEB  0086               	movwf	6
 12770  0EEC  3001               	movlw	1	; select bank2/3
 12771  0EED  0087               	movwf	7
 12772  0EEE  085D               	movf	??_Flash_Memory_Initialization,w
 12773  0EEF  0081               	movwf	1
 12774                           
 12775                           ;MCU_B1.c: 864: Product->Data[23]=i;
 12776  0EF0  085E               	movf	Flash_Memory_Initialization@i,w
 12777  0EF1  00DD               	movwf	??_Flash_Memory_Initialization
 12778  0EF2  086E               	movf	_Product,w
 12779  0EF3  3E17               	addlw	23
 12780  0EF4  0086               	movwf	6
 12781  0EF5  3001               	movlw	1	; select bank2/3
 12782  0EF6  0087               	movwf	7
 12783  0EF7  085D               	movf	??_Flash_Memory_Initialization,w
 12784  0EF8  0081               	movwf	1
 12785                           
 12786                           ;MCU_B1.c: 865: GIE=0;
 12787  0EF9  138B               	bcf	11,7	;volatile
 12788                           
 12789                           ;MCU_B1.c: 866: Flash_Memory_Write();
 12790  0EFA  319E  26B5         	fcall	_Flash_Memory_Write
 12791                           
 12792                           ;MCU_B1.c: 867: GIE=1;
 12793  0EFC  178B               	bsf	11,7	;volatile
 12794                           
 12795                           ;MCU_B1.c: 868: TMain->FirstOpen=1;
 12796  0EFD  0020               	movlb	0	; select bank0
 12797  0EFE  086F               	movf	_TMain,w
 12798  0EFF  0086               	movwf	6
 12799  0F00  3001               	movlw	1	; select bank2/3
 12800  0F01  0087               	movwf	7
 12801  0F02  1681               	bsf	1,5
 12802                           
 12803                           ;MCU_B1.c: 869: TMain->First=1;
 12804  0F03  086F               	movf	_TMain,w
 12805  0F04  3E03               	addlw	3
 12806  0F05  0086               	movwf	6
 12807  0F06  3001               	movlw	1	; select bank2/3
 12808  0F07  0087               	movwf	7
 12809  0F08  1481               	bsf	1,1
 12810  0F09  0008               	return
 12811  0F0A                     __end_of_Flash_Memory_Initialization:	
 12812                           
 12813                           	psect	text75
 12814  1EB5                     __ptext75:	
 12815 ;; *************** function _Flash_Memory_Write *****************
 12816 ;; Defined at:
 12817 ;;		line 917 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
 12818 ;; Parameters:    Size  Location     Type
 12819 ;;		None
 12820 ;; Auto vars:     Size  Location     Type
 12821 ;;  i               1    1[BANK0 ] unsigned char 
 12822 ;; Return value:  Size  Location     Type
 12823 ;;		None               void
 12824 ;; Registers used:
 12825 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12826 ;; Tracked objects:
 12827 ;;		On entry : 0/0
 12828 ;;		On exit  : 0/0
 12829 ;;		Unchanged: 0/0
 12830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12831 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12832 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12833 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12834 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12835 ;;Total ram usage:        2 bytes
 12836 ;; Hardware stack levels used:    1
 12837 ;; Hardware stack levels required when called:    5
 12838 ;; This function calls:
 12839 ;;		_Flash_Memory_Unlock
 12840 ;; This function is called by:
 12841 ;;		_Flash_Memory_Initialization
 12842 ;;		_Flash_Memory_Modify
 12843 ;; This function uses a non-reentrant model
 12844 ;;
 12845                           
 12846                           
 12847                           ;psect for function _Flash_Memory_Write
 12848  1EB5                     _Flash_Memory_Write:	
 12849                           
 12850                           ;MCU_B1.c: 919: char i;
 12851                           ;MCU_B1.c: 920: CFGS=0;
 12852                           
 12853                           ;incstack = 0
 12854                           ; Regs used in _Flash_Memory_Write: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12855  1EB5  0023               	movlb	3	; select bank3
 12856  1EB6  1315               	bcf	21,6	;volatile
 12857                           
 12858                           ;MCU_B1.c: 921: PMADRH=0x30;
 12859  1EB7  3030               	movlw	48
 12860  1EB8  0092               	movwf	18	;volatile
 12861                           
 12862                           ;MCU_B1.c: 922: PMDATH=0;
 12863  1EB9  0194               	clrf	20	;volatile
 12864                           
 12865                           ;MCU_B1.c: 923: FREE=0;
 12866  1EBA  1215               	bcf	21,4	;volatile
 12867                           
 12868                           ;MCU_B1.c: 924: LWLO=1;
 12869  1EBB  1695               	bsf	21,5	;volatile
 12870                           
 12871                           ;MCU_B1.c: 925: WREN=1;
 12872  1EBC  1515               	bsf	21,2	;volatile
 12873                           
 12874                           ;MCU_B1.c: 926: for(i=0 ; i<32 ; i++)
 12875  1EBD  0020               	movlb	0	; select bank0
 12876  1EBE  01A1               	clrf	Flash_Memory_Write@i
 12877  1EBF  3020               	movlw	32
 12878  1EC0  0221               	subwf	Flash_Memory_Write@i,w
 12879  1EC1  1803               	btfsc	3,0
 12880  1EC2  2EDD               	goto	l1734
 12881  1EC3                     l8873:	
 12882                           
 12883                           ;MCU_B1.c: 927: {
 12884                           ;MCU_B1.c: 928: PMADRL=i;
 12885  1EC3  0821               	movf	Flash_Memory_Write@i,w
 12886  1EC4  0023               	movlb	3	; select bank3
 12887  1EC5  0091               	movwf	17	;volatile
 12888                           
 12889                           ;MCU_B1.c: 929: PMDATL=Memory->Data[i];
 12890  1EC6  0020               	movlb	0	; select bank0
 12891  1EC7  0821               	movf	Flash_Memory_Write@i,w
 12892  1EC8  076D               	addwf	_Memory,w
 12893  1EC9  00A0               	movwf	??_Flash_Memory_Write
 12894  1ECA  0820               	movf	??_Flash_Memory_Write,w
 12895  1ECB  0086               	movwf	6
 12896  1ECC  3002               	movlw	2	; select bank4/5
 12897  1ECD  0087               	movwf	7
 12898  1ECE  0801               	movf	1,w
 12899  1ECF  0023               	movlb	3	; select bank3
 12900  1ED0  0093               	movwf	19	;volatile
 12901                           
 12902                           ;MCU_B1.c: 930: Flash_Memory_Unlock();
 12903  1ED1  3199  2156  319E   	fcall	_Flash_Memory_Unlock
 12904  1ED4  3001               	movlw	1
 12905  1ED5  0020               	movlb	0	; select bank0
 12906  1ED6  00A0               	movwf	??_Flash_Memory_Write
 12907  1ED7  0820               	movf	??_Flash_Memory_Write,w
 12908  1ED8  07A1               	addwf	Flash_Memory_Write@i,f
 12909  1ED9  3020               	movlw	32
 12910  1EDA  0221               	subwf	Flash_Memory_Write@i,w
 12911  1EDB  1C03               	skipc
 12912  1EDC  2EC3               	goto	l8873
 12913  1EDD                     l1734:	
 12914                           
 12915                           ;MCU_B1.c: 931: }
 12916                           ;MCU_B1.c: 932: LWLO=0;
 12917  1EDD  0023               	movlb	3	; select bank3
 12918  1EDE  1295               	bcf	21,5	;volatile
 12919                           
 12920                           ;MCU_B1.c: 933: Flash_Memory_Unlock();
 12921  1EDF  3199  2156         	fcall	_Flash_Memory_Unlock
 12922                           
 12923                           ;MCU_B1.c: 934: WREN=0;
 12924  1EE1  0023               	movlb	3	; select bank3
 12925  1EE2  1115               	bcf	21,2	;volatile
 12926  1EE3  0008               	return
 12927  1EE4                     __end_of_Flash_Memory_Write:	
 12928                           
 12929                           	psect	text76
 12930  1956                     __ptext76:	
 12931 ;; *************** function _Flash_Memory_Unlock *****************
 12932 ;; Defined at:
 12933 ;;		line 896 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
 12934 ;; Parameters:    Size  Location     Type
 12935 ;;		None
 12936 ;; Auto vars:     Size  Location     Type
 12937 ;;		None
 12938 ;; Return value:  Size  Location     Type
 12939 ;;		None               void
 12940 ;; Registers used:
 12941 ;;		wreg
 12942 ;; Tracked objects:
 12943 ;;		On entry : 0/0
 12944 ;;		On exit  : 0/0
 12945 ;;		Unchanged: 0/0
 12946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12950 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12951 ;;Total ram usage:        0 bytes
 12952 ;; Hardware stack levels used:    1
 12953 ;; Hardware stack levels required when called:    4
 12954 ;; This function calls:
 12955 ;;		Nothing
 12956 ;; This function is called by:
 12957 ;;		_Flash_Memory_Write
 12958 ;;		_Flash_Memory_Erasing
 12959 ;; This function uses a non-reentrant model
 12960 ;;
 12961                           
 12962                           
 12963                           ;psect for function _Flash_Memory_Unlock
 12964  1956                     _Flash_Memory_Unlock:	
 12965                           
 12966                           ;MCU_B1.c: 898: PMCON2=0x55;
 12967                           
 12968                           ;incstack = 0
 12969                           ; Regs used in _Flash_Memory_Unlock: [wreg]
 12970  1956  3055               	movlw	85
 12971  1957  0023               	movlb	3	; select bank3
 12972  1958  0096               	movwf	22	;volatile
 12973                           
 12974                           ;MCU_B1.c: 899: PMCON2=0xaa;
 12975  1959  30AA               	movlw	170
 12976  195A  0096               	movwf	22	;volatile
 12977                           
 12978                           ;MCU_B1.c: 900: WR=1;
 12979  195B  1495               	bsf	21,1	;volatile
 12980                           
 12981                           ;MCU_B1.c: 901: __nop();
 12982  195C  0000               	nop
 12983                           
 12984                           ;MCU_B1.c: 902: __nop();
 12985  195D  0000               	nop
 12986  195E  0008               	return
 12987  195F                     __end_of_Flash_Memory_Unlock:	
 12988                           
 12989                           	psect	text77
 12990  1BEA                     __ptext77:	
 12991 ;; *************** function _Flash_Memory_Read *****************
 12992 ;; Defined at:
 12993 ;;		line 905 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
 12994 ;; Parameters:    Size  Location     Type
 12995 ;;  address         1    wreg     unsigned char 
 12996 ;; Auto vars:     Size  Location     Type
 12997 ;;  address         1    2[BANK0 ] unsigned char 
 12998 ;;  ret             1    3[BANK0 ] unsigned char 
 12999 ;;  i               1    1[BANK0 ] unsigned char 
 13000 ;; Return value:  Size  Location     Type
 13001 ;;                  1    wreg      unsigned char 
 13002 ;; Registers used:
 13003 ;;		wreg, status,2
 13004 ;; Tracked objects:
 13005 ;;		On entry : 0/0
 13006 ;;		On exit  : 0/0
 13007 ;;		Unchanged: 0/0
 13008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13009 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13010 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13011 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13012 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13013 ;;Total ram usage:        4 bytes
 13014 ;; Hardware stack levels used:    1
 13015 ;; Hardware stack levels required when called:    4
 13016 ;; This function calls:
 13017 ;;		Nothing
 13018 ;; This function is called by:
 13019 ;;		_Flash_Memory_Initialization
 13020 ;;		_Flash_Memory_Modify
 13021 ;; This function uses a non-reentrant model
 13022 ;;
 13023                           
 13024                           
 13025                           ;psect for function _Flash_Memory_Read
 13026  1BEA                     _Flash_Memory_Read:	
 13027                           
 13028                           ;incstack = 0
 13029                           ; Regs used in _Flash_Memory_Read: [wreg+status,2]
 13030                           ;Flash_Memory_Read@address stored from wreg
 13031  1BEA  0020               	movlb	0	; select bank0
 13032  1BEB  00A2               	movwf	Flash_Memory_Read@address
 13033                           
 13034                           ;MCU_B1.c: 907: char i,ret=0;
 13035  1BEC  01A3               	clrf	Flash_Memory_Read@ret
 13036                           
 13037                           ;MCU_B1.c: 908: PMADRH=0x30;
 13038  1BED  3030               	movlw	48
 13039  1BEE  0023               	movlb	3	; select bank3
 13040  1BEF  0092               	movwf	18	;volatile
 13041                           
 13042                           ;MCU_B1.c: 909: PMADRL=address;
 13043  1BF0  0020               	movlb	0	; select bank0
 13044  1BF1  0822               	movf	Flash_Memory_Read@address,w
 13045  1BF2  0023               	movlb	3	; select bank3
 13046  1BF3  0091               	movwf	17	;volatile
 13047                           
 13048                           ;MCU_B1.c: 910: CFGS=0;
 13049  1BF4  1315               	bcf	21,6	;volatile
 13050                           
 13051                           ;MCU_B1.c: 911: RD=1;
 13052  1BF5  1415               	bsf	21,0	;volatile
 13053                           
 13054                           ;MCU_B1.c: 912: i=PMDATH;
 13055  1BF6  0814               	movf	20,w	;volatile
 13056  1BF7  0020               	movlb	0	; select bank0
 13057  1BF8  00A0               	movwf	??_Flash_Memory_Read
 13058  1BF9  0820               	movf	??_Flash_Memory_Read,w
 13059  1BFA  00A1               	movwf	Flash_Memory_Read@i
 13060                           
 13061                           ;MCU_B1.c: 913: ret=PMDATL;
 13062  1BFB  0023               	movlb	3	; select bank3
 13063  1BFC  0813               	movf	19,w	;volatile
 13064  1BFD  0020               	movlb	0	; select bank0
 13065  1BFE  00A0               	movwf	??_Flash_Memory_Read
 13066  1BFF  0820               	movf	??_Flash_Memory_Read,w
 13067  1C00  00A3               	movwf	Flash_Memory_Read@ret
 13068                           
 13069                           ;MCU_B1.c: 914: return ret;
 13070  1C01  0823               	movf	Flash_Memory_Read@ret,w
 13071  1C02  0008               	return
 13072  1C03                     __end_of_Flash_Memory_Read:	
 13073                           
 13074                           	psect	text78
 13075  1993                     __ptext78:	
 13076 ;; *************** function _DimmerLights_Main *****************
 13077 ;; Defined at:
 13078 ;;		line 114 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 13079 ;; Parameters:    Size  Location     Type
 13080 ;;		None
 13081 ;; Auto vars:     Size  Location     Type
 13082 ;;		None
 13083 ;; Return value:  Size  Location     Type
 13084 ;;		None               void
 13085 ;; Registers used:
 13086 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13087 ;; Tracked objects:
 13088 ;;		On entry : 0/0
 13089 ;;		On exit  : 0/0
 13090 ;;		Unchanged: 0/0
 13091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13092 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13093 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13095 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13096 ;;Total ram usage:        0 bytes
 13097 ;; Hardware stack levels used:    1
 13098 ;; Hardware stack levels required when called:   10
 13099 ;; This function calls:
 13100 ;;		_DimmerLights_Close
 13101 ;;		_setDimmerLights_Main
 13102 ;; This function is called by:
 13103 ;;		_main
 13104 ;; This function uses a non-reentrant model
 13105 ;;
 13106                           
 13107                           
 13108                           ;psect for function _DimmerLights_Main
 13109  1993                     _DimmerLights_Main:	
 13110                           
 13111                           ;Dimmer_B1.c: 117: setDimmerLights_Main(1);
 13112                           
 13113                           ;incstack = 0
 13114                           ; Regs used in _DimmerLights_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13115  1993  3001               	movlw	1
 13116  1994  3188  20E3  3199   	fcall	_setDimmerLights_Main
 13117                           
 13118                           ;Dimmer_B1.c: 121: setDimmerLights_Main(2);
 13119  1997  3002               	movlw	2
 13120  1998  3188  20E3  3199   	fcall	_setDimmerLights_Main
 13121                           
 13122                           ;Dimmer_B1.c: 128: DimmerLights_Close();
 13123  199B  319B  2388         	fcall	_DimmerLights_Close
 13124  199D  0008               	return
 13125  199E                     __end_of_DimmerLights_Main:	
 13126                           
 13127                           	psect	text79
 13128  08E3                     __ptext79:	
 13129 ;; *************** function _setDimmerLights_Main *****************
 13130 ;; Defined at:
 13131 ;;		line 131 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 13132 ;; Parameters:    Size  Location     Type
 13133 ;;  lights          1    wreg     unsigned char 
 13134 ;; Auto vars:     Size  Location     Type
 13135 ;;  lights          1   70[BANK0 ] unsigned char 
 13136 ;;  clear           1   69[BANK0 ] unsigned char 
 13137 ;; Return value:  Size  Location     Type
 13138 ;;		None               void
 13139 ;; Registers used:
 13140 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13141 ;; Tracked objects:
 13142 ;;		On entry : 0/0
 13143 ;;		On exit  : 0/0
 13144 ;;		Unchanged: 0/0
 13145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13147 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13149 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13150 ;;Total ram usage:        2 bytes
 13151 ;; Hardware stack levels used:    1
 13152 ;; Hardware stack levels required when called:    9
 13153 ;; This function calls:
 13154 ;;		_DimmerLightsPointSelect
 13155 ;;		_setBuz
 13156 ;;		_setDimmerLights
 13157 ;;		_setDimmerLights_Adj
 13158 ;; This function is called by:
 13159 ;;		_DimmerLights_Main
 13160 ;; This function uses a non-reentrant model
 13161 ;;
 13162                           
 13163                           
 13164                           ;psect for function _setDimmerLights_Main
 13165  08E3                     _setDimmerLights_Main:	
 13166                           
 13167                           ;incstack = 0
 13168                           ; Regs used in _setDimmerLights_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13169                           ;setDimmerLights_Main@lights stored from wreg
 13170  08E3  0020               	movlb	0	; select bank0
 13171  08E4  00E6               	movwf	setDimmerLights_Main@lights
 13172                           
 13173                           ;Dimmer_B1.c: 133: char clear=1;
 13174  08E5  01E5               	clrf	setDimmerLights_Main@clear
 13175  08E6  0AE5               	incf	setDimmerLights_Main@clear,f
 13176                           
 13177                           ;Dimmer_B1.c: 134: DimmerLightsPointSelect(lights);
 13178  08E7  0866               	movf	setDimmerLights_Main@lights,w
 13179  08E8  319A  22CE  3188   	fcall	_DimmerLightsPointSelect
 13180                           
 13181                           ;Dimmer_B1.c: 152: if(lights == 1)
 13182  08EB  0020               	movlb	0	; select bank0
 13183  08EC  0866               	movf	setDimmerLights_Main@lights,w
 13184  08ED  3A01               	xorlw	1
 13185  08EE  1D03               	skipz
 13186  08EF  28F2               	goto	l9179
 13187                           
 13188                           ;Dimmer_B1.c: 153: {
 13189                           ;Dimmer_B1.c: 154: clear=(!DimmerLights22->Clear)?0:1;
 13190  08F0  086C               	movf	_DimmerLights22,w
 13191  08F1  28F7               	goto	L13
 13192  08F2                     l9179:	
 13193                           ;Dimmer_B1.c: 155: }
 13194                           
 13195                           
 13196                           ;Dimmer_B1.c: 156: else if(lights == 2)
 13197  08F2  0866               	movf	setDimmerLights_Main@lights,w
 13198  08F3  3A02               	xorlw	2
 13199  08F4  1D03               	skipz
 13200  08F5  28FF               	goto	l9183
 13201                           
 13202                           ;Dimmer_B1.c: 157: {
 13203                           ;Dimmer_B1.c: 158: clear=(!DimmerLights11->Clear)?0:1;
 13204  08F6  086B               	movf	_DimmerLights11,w
 13205  08F7                     L13:	
 13206  08F7  3E0C               	addlw	12
 13207  08F8  0086               	movwf	6
 13208  08F9  3001               	movlw	1	; select bank2/3
 13209  08FA  0087               	movwf	7
 13210  08FB  3000               	movlw	0
 13211  08FC  1801               	btfsc	1,0
 13212  08FD  3001               	movlw	1
 13213  08FE  00E5               	movwf	setDimmerLights_Main@clear
 13214  08FF                     l9183:	
 13215                           
 13216                           ;Dimmer_B1.c: 159: }
 13217                           ;Dimmer_B1.c: 162: if(DimmerLights->Trigger)
 13218  08FF  086A               	movf	_DimmerLights,w
 13219  0900  3E09               	addlw	9
 13220  0901  0086               	movwf	6
 13221  0902  3001               	movlw	1	; select bank2/3
 13222  0903  0087               	movwf	7
 13223  0904  1C81               	btfss	1,1
 13224  0905  292A               	goto	l9197
 13225                           
 13226                           ;Dimmer_B1.c: 163: {
 13227                           ;Dimmer_B1.c: 164: if(clear)
 13228  0906  0865               	movf	setDimmerLights_Main@clear,w
 13229  0907  1903               	btfsc	3,2
 13230  0908  0008               	return
 13231                           
 13232                           ;Dimmer_B1.c: 165: {
 13233                           ;Dimmer_B1.c: 166: if(DimmerLights->Switch)
 13234  0909  086A               	movf	_DimmerLights,w
 13235  090A  3E09               	addlw	9
 13236  090B  0086               	movwf	6
 13237  090C  3001               	movlw	1	; select bank2/3
 13238  090D  0087               	movwf	7
 13239  090E  1C01               	btfss	1,0
 13240  090F  291D               	goto	l9193
 13241                           
 13242                           ;Dimmer_B1.c: 167: {
 13243                           ;Dimmer_B1.c: 168: DimmerLights->Trigger=0;
 13244  0910  086A               	movf	_DimmerLights,w
 13245  0911  3E09               	addlw	9
 13246  0912  0086               	movwf	6
 13247  0913  3001               	movlw	1	; select bank2/3
 13248  0914  0087               	movwf	7
 13249  0915  1081               	bcf	1,1
 13250                           
 13251                           ;Dimmer_B1.c: 169: setDimmerLights(lights,1);
 13252  0916  01A4               	clrf	setDimmerLights@status
 13253  0917  0AA4               	incf	setDimmerLights@status,f
 13254  0918  0866               	movf	setDimmerLights_Main@lights,w
 13255  0919  3189  21E5         	fcall	_setDimmerLights
 13256                           
 13257                           ;Dimmer_B1.c: 174: }
 13258  091B  0020               	movlb	0	; select bank0
 13259  091C  0008               	return
 13260  091D                     l9193:	
 13261                           
 13262                           ;Dimmer_B1.c: 175: else
 13263                           ;Dimmer_B1.c: 176: {
 13264                           ;Dimmer_B1.c: 177: DimmerLights->Trigger=0;
 13265  091D  0020               	movlb	0	; select bank0
 13266  091E  086A               	movf	_DimmerLights,w
 13267  091F  3E09               	addlw	9
 13268  0920  0086               	movwf	6
 13269  0921  3001               	movlw	1	; select bank2/3
 13270  0922  0087               	movwf	7
 13271  0923  1081               	bcf	1,1
 13272                           
 13273                           ;Dimmer_B1.c: 178: setDimmerLights(lights,0);
 13274  0924  01A4               	clrf	setDimmerLights@status
 13275  0925  0866               	movf	setDimmerLights_Main@lights,w
 13276  0926  3189  21E5         	fcall	_setDimmerLights
 13277  0928  0020               	movlb	0	; select bank0
 13278  0929  0008               	return
 13279  092A                     l9197:	
 13280                           ;Dimmer_B1.c: 183: }
 13281                           ;Dimmer_B1.c: 184: }
 13282                           ;Dimmer_B1.c: 185: }
 13283                           
 13284                           
 13285                           ;Dimmer_B1.c: 186: else
 13286                           ;Dimmer_B1.c: 187: {
 13287                           ;Dimmer_B1.c: 188: if(DimmerLights->TriggerAdj)
 13288  092A  0020               	movlb	0	; select bank0
 13289  092B  086A               	movf	_DimmerLights,w
 13290  092C  3E09               	addlw	9
 13291  092D  0086               	movwf	6
 13292  092E  3001               	movlw	1	; select bank2/3
 13293  092F  0087               	movwf	7
 13294  0930  1D81               	btfss	1,3
 13295  0931  0008               	return
 13296                           
 13297                           ;Dimmer_B1.c: 189: {
 13298                           ;Dimmer_B1.c: 190: if(clear)
 13299  0932  0865               	movf	setDimmerLights_Main@clear,w
 13300  0933  1903               	btfsc	3,2
 13301  0934  0008               	return
 13302                           
 13303                           ;Dimmer_B1.c: 191: {
 13304                           ;Dimmer_B1.c: 192: DimmerLightsPointSelect(lights);
 13305  0935  0866               	movf	setDimmerLights_Main@lights,w
 13306  0936  319A  22CE  3188   	fcall	_DimmerLightsPointSelect
 13307                           
 13308                           ;Dimmer_B1.c: 193: DimmerLights->TriggerAdj=0;
 13309  0939  0020               	movlb	0	; select bank0
 13310  093A  086A               	movf	_DimmerLights,w
 13311  093B  3E09               	addlw	9
 13312  093C  0086               	movwf	6
 13313  093D  3001               	movlw	1	; select bank2/3
 13314  093E  0087               	movwf	7
 13315  093F  1181               	bcf	1,3
 13316                           
 13317                           ;Dimmer_B1.c: 194: if(DimmerLights->AdjGo)
 13318  0940  086A               	movf	_DimmerLights,w
 13319  0941  3E09               	addlw	9
 13320  0942  0086               	movwf	6
 13321  0943  3001               	movlw	1	; select bank2/3
 13322  0944  0087               	movwf	7
 13323  0945  1D01               	btfss	1,2
 13324  0946  2957               	goto	l9209
 13325                           
 13326                           ;Dimmer_B1.c: 195: {
 13327                           ;Dimmer_B1.c: 196: setDimmerLights_Adj(lights,1);
 13328  0947  01E2               	clrf	setDimmerLights_Adj@status
 13329  0948  0AE2               	incf	setDimmerLights_Adj@status,f
 13330  0949  0866               	movf	setDimmerLights_Main@lights,w
 13331  094A  319F  2783  3188   	fcall	_setDimmerLights_Adj
 13332                           
 13333                           ;Dimmer_B1.c: 197: setBuz(1,100);
 13334  094D  3064               	movlw	100
 13335  094E  0020               	movlb	0	; select bank0
 13336  094F  00A6               	movwf	setBuz@time
 13337  0950  3000               	movlw	0
 13338  0951  00A7               	movwf	setBuz@time+1
 13339  0952  3001               	movlw	1
 13340  0953  3197  2789         	fcall	_setBuz
 13341                           
 13342                           ;Dimmer_B1.c: 198: }
 13343  0955  0020               	movlb	0	; select bank0
 13344  0956  0008               	return
 13345  0957                     l9209:	
 13346                           
 13347                           ;Dimmer_B1.c: 199: else
 13348                           ;Dimmer_B1.c: 200: {
 13349                           ;Dimmer_B1.c: 201: setDimmerLights_Adj(lights,0);
 13350  0957  0020               	movlb	0	; select bank0
 13351  0958  01E2               	clrf	setDimmerLights_Adj@status
 13352  0959  0866               	movf	setDimmerLights_Main@lights,w
 13353  095A  319F  2783         	fcall	_setDimmerLights_Adj
 13354  095C  0020               	movlb	0	; select bank0
 13355  095D  0008               	return
 13356  095E                     __end_of_setDimmerLights_Main:	
 13357                           
 13358                           	psect	text80
 13359  1F83                     __ptext80:	
 13360 ;; *************** function _setDimmerLights_Adj *****************
 13361 ;; Defined at:
 13362 ;;		line 388 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 13363 ;; Parameters:    Size  Location     Type
 13364 ;;  lights          1    wreg     unsigned char 
 13365 ;;  status          1   66[BANK0 ] unsigned char 
 13366 ;; Auto vars:     Size  Location     Type
 13367 ;;  lights          1   68[BANK0 ] unsigned char 
 13368 ;; Return value:  Size  Location     Type
 13369 ;;		None               void
 13370 ;; Registers used:
 13371 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13372 ;; Tracked objects:
 13373 ;;		On entry : 0/0
 13374 ;;		On exit  : 0/0
 13375 ;;		Unchanged: 0/0
 13376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13377 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13378 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13379 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13380 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13381 ;;Total ram usage:        3 bytes
 13382 ;; Hardware stack levels used:    1
 13383 ;; Hardware stack levels required when called:    8
 13384 ;; This function calls:
 13385 ;;		_DimmerLightsPointSelect
 13386 ;;		_setRF_DimmerLights
 13387 ;;		_setTxData
 13388 ;; This function is called by:
 13389 ;;		_setDimmerLights_Main
 13390 ;; This function uses a non-reentrant model
 13391 ;;
 13392                           
 13393                           
 13394                           ;psect for function _setDimmerLights_Adj
 13395  1F83                     _setDimmerLights_Adj:	
 13396                           
 13397                           ;incstack = 0
 13398                           ; Regs used in _setDimmerLights_Adj: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13399                           ;setDimmerLights_Adj@lights stored from wreg
 13400  1F83  0020               	movlb	0	; select bank0
 13401  1F84  00E4               	movwf	setDimmerLights_Adj@lights
 13402                           
 13403                           ;Dimmer_B1.c: 390: DimmerLightsPointSelect(lights);
 13404  1F85  0864               	movf	setDimmerLights_Adj@lights,w
 13405  1F86  319A  22CE  319F   	fcall	_DimmerLightsPointSelect
 13406                           
 13407                           ;Dimmer_B1.c: 391: if(status)
 13408  1F89  0020               	movlb	0	; select bank0
 13409  1F8A  0862               	movf	setDimmerLights_Adj@status,w
 13410  1F8B  1903               	btfsc	3,2
 13411  1F8C  2F98               	goto	l8831
 13412                           
 13413                           ;Dimmer_B1.c: 392: {
 13414                           ;Dimmer_B1.c: 393: DimmerLights->AdjFlag=1;
 13415  1F8D  086A               	movf	_DimmerLights,w
 13416  1F8E  0086               	movwf	6
 13417  1F8F  3001               	movlw	1	; select bank2/3
 13418  1F90  0087               	movwf	7
 13419  1F91  1581               	bsf	1,3
 13420                           
 13421                           ;Dimmer_B1.c: 394: DimmerLights->Signal=1;
 13422  1F92  086A               	movf	_DimmerLights,w
 13423  1F93  0086               	movwf	6
 13424  1F94  3001               	movlw	1	; select bank2/3
 13425  1F95  0087               	movwf	7
 13426  1F96  1481               	bsf	1,1
 13427                           
 13428                           ;Dimmer_B1.c: 395: }
 13429  1F97  0008               	return
 13430  1F98                     l8831:	
 13431                           
 13432                           ;Dimmer_B1.c: 396: else
 13433                           ;Dimmer_B1.c: 397: {
 13434                           ;Dimmer_B1.c: 398: if(DimmerLights->AdjFlag)
 13435  1F98  086A               	movf	_DimmerLights,w
 13436  1F99  0086               	movwf	6
 13437  1F9A  3001               	movlw	1	; select bank2/3
 13438  1F9B  0087               	movwf	7
 13439  1F9C  1D81               	btfss	1,3
 13440  1F9D  0008               	return
 13441                           
 13442                           ;Dimmer_B1.c: 399: {
 13443                           ;Dimmer_B1.c: 400: DimmerLights->Signal=0;
 13444  1F9E  086A               	movf	_DimmerLights,w
 13445  1F9F  0086               	movwf	6
 13446  1FA0  3001               	movlw	1	; select bank2/3
 13447  1FA1  0087               	movwf	7
 13448  1FA2  1081               	bcf	1,1
 13449                           
 13450                           ;Dimmer_B1.c: 401: DimmerLights->AdjFlag=0;
 13451  1FA3  086A               	movf	_DimmerLights,w
 13452  1FA4  0086               	movwf	6
 13453  1FA5  3001               	movlw	1	; select bank2/3
 13454  1FA6  0087               	movwf	7
 13455  1FA7  1181               	bcf	1,3
 13456                           
 13457                           ;Dimmer_B1.c: 402: ;;
 13458                           ;Dimmer_B1.c: 403: DimmerLights->MaxmumValue=DimmerLights->DimmingValue;
 13459  1FA8  086A               	movf	_DimmerLights,w
 13460  1FA9  3E04               	addlw	4
 13461  1FAA  0086               	movwf	6
 13462  1FAB  3001               	movlw	1	; select bank2/3
 13463  1FAC  0087               	movwf	7
 13464  1FAD  0801               	movf	1,w
 13465  1FAE  00E3               	movwf	??_setDimmerLights_Adj
 13466  1FAF  086A               	movf	_DimmerLights,w
 13467  1FB0  3E05               	addlw	5
 13468  1FB1  0086               	movwf	6
 13469  1FB2  3001               	movlw	1	; select bank2/3
 13470  1FB3  0087               	movwf	7
 13471  1FB4  0863               	movf	??_setDimmerLights_Adj,w
 13472  1FB5  0081               	movwf	1
 13473                           
 13474                           ;Dimmer_B1.c: 411: setRF_DimmerLights(lights,1);
 13475  1FB6  01DD               	clrf	setRF_DimmerLights@on
 13476  1FB7  0ADD               	incf	setRF_DimmerLights@on,f
 13477  1FB8  0864               	movf	setDimmerLights_Adj@lights,w
 13478  1FB9  3195  2560  319F   	fcall	_setRF_DimmerLights
 13479                           
 13480                           ;Dimmer_B1.c: 412: setTxData(1);
 13481  1FBC  3001               	movlw	1
 13482  1FBD  3187  271C         	fcall	_setTxData
 13483  1FBF  0008               	return
 13484  1FC0                     __end_of_setDimmerLights_Adj:	
 13485                           
 13486                           	psect	text81
 13487  09E5                     __ptext81:	
 13488 ;; *************** function _setDimmerLights *****************
 13489 ;; Defined at:
 13490 ;;		line 330 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 13491 ;; Parameters:    Size  Location     Type
 13492 ;;  lights          1    wreg     unsigned char 
 13493 ;;  status          1    4[BANK0 ] unsigned char 
 13494 ;; Auto vars:     Size  Location     Type
 13495 ;;  lights          1    6[BANK0 ] unsigned char 
 13496 ;; Return value:  Size  Location     Type
 13497 ;;		None               void
 13498 ;; Registers used:
 13499 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13500 ;; Tracked objects:
 13501 ;;		On entry : 0/0
 13502 ;;		On exit  : 0/0
 13503 ;;		Unchanged: 0/0
 13504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13505 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13506 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13507 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13508 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13509 ;;Total ram usage:        3 bytes
 13510 ;; Hardware stack levels used:    1
 13511 ;; Hardware stack levels required when called:    6
 13512 ;; This function calls:
 13513 ;;		_DimmerLightsPointSelect
 13514 ;;		_setLED
 13515 ;; This function is called by:
 13516 ;;		_setDimmerLights_Main
 13517 ;;		_setControl_Lights_Table
 13518 ;; This function uses a non-reentrant model
 13519 ;;
 13520                           
 13521                           
 13522                           ;psect for function _setDimmerLights
 13523  09E5                     _setDimmerLights:	
 13524                           
 13525                           ;incstack = 0
 13526                           ; Regs used in _setDimmerLights: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13527                           ;setDimmerLights@lights stored from wreg
 13528  09E5  0020               	movlb	0	; select bank0
 13529  09E6  00A6               	movwf	setDimmerLights@lights
 13530                           
 13531                           ;Dimmer_B1.c: 332: DimmerLightsPointSelect(lights);
 13532  09E7  0826               	movf	setDimmerLights@lights,w
 13533  09E8  319A  22CE  3189   	fcall	_DimmerLightsPointSelect
 13534                           
 13535                           ;Dimmer_B1.c: 333: Dimmer->Load=lights;
 13536  09EB  0020               	movlb	0	; select bank0
 13537  09EC  0826               	movf	setDimmerLights@lights,w
 13538  09ED  00A5               	movwf	??_setDimmerLights
 13539  09EE  0021               	movlb	1	; select bank1
 13540  09EF  0A38               	incf	_Dimmer^(0+128),w
 13541  09F0  0086               	movwf	6
 13542  09F1  0187               	clrf	7
 13543  09F2  0020               	movlb	0	; select bank0
 13544  09F3  0825               	movf	??_setDimmerLights,w
 13545  09F4  0081               	movwf	1
 13546                           
 13547                           ;Dimmer_B1.c: 334: if(status)
 13548  09F5  0824               	movf	setDimmerLights@status,w
 13549  09F6  1903               	btfsc	3,2
 13550  09F7  2A42               	goto	l8523
 13551                           
 13552                           ;Dimmer_B1.c: 335: {
 13553                           ;Dimmer_B1.c: 336: DimmerLights->Status=1;
 13554  09F8  086A               	movf	_DimmerLights,w
 13555  09F9  0086               	movwf	6
 13556  09FA  3001               	movlw	1	; select bank2/3
 13557  09FB  0087               	movwf	7
 13558  09FC  1681               	bsf	1,5
 13559                           
 13560                           ;Dimmer_B1.c: 337: setLED(lights,0);
 13561  09FD  01A2               	clrf	setLED@command
 13562  09FE  0826               	movf	setDimmerLights@lights,w
 13563  09FF  3193  2373  3189   	fcall	_setLED
 13564                           
 13565                           ;Dimmer_B1.c: 339: ;;
 13566                           ;Dimmer_B1.c: 341: DimmerLights->Signal=1;
 13567  0A02  0020               	movlb	0	; select bank0
 13568  0A03  086A               	movf	_DimmerLights,w
 13569  0A04  0086               	movwf	6
 13570  0A05  3001               	movlw	1	; select bank2/3
 13571  0A06  0087               	movwf	7
 13572  0A07  1481               	bsf	1,1
 13573                           
 13574                           ;Dimmer_B1.c: 342: DimmerLights->DimmingTimeValue=3;
 13575  0A08  3003               	movlw	3
 13576  0A09  00A5               	movwf	??_setDimmerLights
 13577  0A0A  086A               	movf	_DimmerLights,w
 13578  0A0B  3E02               	addlw	2
 13579  0A0C  0086               	movwf	6
 13580  0A0D  3001               	movlw	1	; select bank2/3
 13581  0A0E  0087               	movwf	7
 13582  0A0F  0825               	movf	??_setDimmerLights,w
 13583  0A10  0081               	movwf	1
 13584                           
 13585                           ;Dimmer_B1.c: 344: if(!DimmerLights->StatusFlag)
 13586  0A11  086A               	movf	_DimmerLights,w
 13587  0A12  0086               	movwf	6
 13588  0A13  3001               	movlw	1	; select bank2/3
 13589  0A14  0087               	movwf	7
 13590  0A15  1B01               	btfsc	1,6
 13591  0A16  0008               	return
 13592                           
 13593                           ;Dimmer_B1.c: 345: {
 13594                           ;Dimmer_B1.c: 346: DimmerLights->StatusFlag=1;
 13595  0A17  086A               	movf	_DimmerLights,w
 13596  0A18  0086               	movwf	6
 13597  0A19  3001               	movlw	1	; select bank2/3
 13598  0A1A  0087               	movwf	7
 13599  0A1B  1701               	bsf	1,6
 13600                           
 13601                           ;Dimmer_B1.c: 347: ;;
 13602                           ;Dimmer_B1.c: 348: Memory->GO=0; if(!0) { Memory->Time=0; } ;;
 13603  0A1C  086D               	movf	_Memory,w
 13604  0A1D  3E22               	addlw	34
 13605  0A1E  0086               	movwf	6
 13606  0A1F  3002               	movlw	2	; select bank4/5
 13607  0A20  0087               	movwf	7
 13608  0A21  1081               	bcf	1,1
 13609  0A22  086D               	movf	_Memory,w
 13610  0A23  3E23               	addlw	35
 13611  0A24  0086               	movwf	6
 13612  0A25  3002               	movlw	2	; select bank4/5
 13613  0A26  0087               	movwf	7
 13614  0A27  3000               	movlw	0
 13615  0A28  3FC0               	movwi [0]fsr1
 13616  0A29  3FC1               	movwi [1]fsr1
 13617                           
 13618                           ;Dimmer_B1.c: 351: DimmerLights->DimmingValue=DimmerLights->MaxmumValue;
 13619  0A2A  086A               	movf	_DimmerLights,w
 13620  0A2B  3E05               	addlw	5
 13621  0A2C  0086               	movwf	6
 13622  0A2D  3001               	movlw	1	; select bank2/3
 13623  0A2E  0087               	movwf	7
 13624  0A2F  0801               	movf	1,w
 13625  0A30  00A5               	movwf	??_setDimmerLights
 13626  0A31  086A               	movf	_DimmerLights,w
 13627  0A32  3E04               	addlw	4
 13628  0A33  0086               	movwf	6
 13629  0A34  3001               	movlw	1	; select bank2/3
 13630  0A35  0087               	movwf	7
 13631  0A36  0825               	movf	??_setDimmerLights,w
 13632  0A37  0081               	movwf	1
 13633                           
 13634                           ;Dimmer_B1.c: 355: DimmerLights->DimmingValue=((char)((100-55)*1.5));
 13635  0A38  3043               	movlw	67
 13636  0A39  00A5               	movwf	??_setDimmerLights
 13637  0A3A  086A               	movf	_DimmerLights,w
 13638  0A3B  3E04               	addlw	4
 13639  0A3C  0086               	movwf	6
 13640  0A3D  3001               	movlw	1	; select bank2/3
 13641  0A3E  0087               	movwf	7
 13642  0A3F  0825               	movf	??_setDimmerLights,w
 13643  0A40  0081               	movwf	1
 13644                           
 13645                           ;Dimmer_B1.c: 357: }
 13646                           ;Dimmer_B1.c: 358: }
 13647  0A41  0008               	return
 13648  0A42                     l8523:	
 13649                           
 13650                           ;Dimmer_B1.c: 359: else
 13651                           ;Dimmer_B1.c: 360: {
 13652                           ;Dimmer_B1.c: 361: DimmerLights->Status=0;
 13653  0A42  086A               	movf	_DimmerLights,w
 13654  0A43  0086               	movwf	6
 13655  0A44  3001               	movlw	1	; select bank2/3
 13656  0A45  0087               	movwf	7
 13657  0A46  1281               	bcf	1,5
 13658                           
 13659                           ;Dimmer_B1.c: 363: DimmerLights->DimmingValue=DimmerLights->MinimumValue;
 13660  0A47  086A               	movf	_DimmerLights,w
 13661  0A48  3E06               	addlw	6
 13662  0A49  0086               	movwf	6
 13663  0A4A  3001               	movlw	1	; select bank2/3
 13664  0A4B  0087               	movwf	7
 13665  0A4C  0801               	movf	1,w
 13666  0A4D  00A5               	movwf	??_setDimmerLights
 13667  0A4E  086A               	movf	_DimmerLights,w
 13668  0A4F  3E04               	addlw	4
 13669  0A50  0086               	movwf	6
 13670  0A51  3001               	movlw	1	; select bank2/3
 13671  0A52  0087               	movwf	7
 13672  0A53  0825               	movf	??_setDimmerLights,w
 13673  0A54  0081               	movwf	1
 13674                           
 13675                           ;Dimmer_B1.c: 370: DimmerLights->Signal=1;
 13676  0A55  086A               	movf	_DimmerLights,w
 13677  0A56  0086               	movwf	6
 13678  0A57  3001               	movlw	1	; select bank2/3
 13679  0A58  0087               	movwf	7
 13680  0A59  1481               	bsf	1,1
 13681                           
 13682                           ;Dimmer_B1.c: 371: DimmerLights->AdjFlag=0;
 13683  0A5A  086A               	movf	_DimmerLights,w
 13684  0A5B  0086               	movwf	6
 13685  0A5C  3001               	movlw	1	; select bank2/3
 13686  0A5D  0087               	movwf	7
 13687  0A5E  1181               	bcf	1,3
 13688                           
 13689                           ;Dimmer_B1.c: 372: DimmerLights->AdjStatus=0;
 13690  0A5F  086A               	movf	_DimmerLights,w
 13691  0A60  0086               	movwf	6
 13692  0A61  3001               	movlw	1	; select bank2/3
 13693  0A62  0087               	movwf	7
 13694  0A63  1201               	bcf	1,4
 13695                           
 13696                           ;Dimmer_B1.c: 373: DimmerLights->DimmingTimeValue=3;
 13697  0A64  3003               	movlw	3
 13698  0A65  00A5               	movwf	??_setDimmerLights
 13699  0A66  086A               	movf	_DimmerLights,w
 13700  0A67  3E02               	addlw	2
 13701  0A68  0086               	movwf	6
 13702  0A69  3001               	movlw	1	; select bank2/3
 13703  0A6A  0087               	movwf	7
 13704  0A6B  0825               	movf	??_setDimmerLights,w
 13705  0A6C  0081               	movwf	1
 13706  0A6D  0008               	return
 13707  0A6E                     __end_of_setDimmerLights:	
 13708                           
 13709                           	psect	text82
 13710  1373                     __ptext82:	
 13711 ;; *************** function _setLED *****************
 13712 ;; Defined at:
 13713 ;;		line 74 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\LED_B1.c"
 13714 ;; Parameters:    Size  Location     Type
 13715 ;;  led             1    wreg     unsigned char 
 13716 ;;  command         1    2[BANK0 ] unsigned char 
 13717 ;; Auto vars:     Size  Location     Type
 13718 ;;  led             1    3[BANK0 ] unsigned char 
 13719 ;; Return value:  Size  Location     Type
 13720 ;;		None               void
 13721 ;; Registers used:
 13722 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13723 ;; Tracked objects:
 13724 ;;		On entry : 0/0
 13725 ;;		On exit  : 0/0
 13726 ;;		Unchanged: 0/0
 13727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13728 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13729 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13731 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13732 ;;Total ram usage:        2 bytes
 13733 ;; Hardware stack levels used:    1
 13734 ;; Hardware stack levels required when called:    5
 13735 ;; This function calls:
 13736 ;;		_LedPointSelect
 13737 ;; This function is called by:
 13738 ;;		_setDimmerLights_ERROR
 13739 ;;		_setDimmerLights
 13740 ;;		_setLED_Initialization
 13741 ;;		_setOverTemp_Exceptions
 13742 ;;		_setPowerFault_Exceptions
 13743 ;;		_setSw_Initialization
 13744 ;; This function uses a non-reentrant model
 13745 ;;
 13746                           
 13747                           
 13748                           ;psect for function _setLED
 13749  1373                     _setLED:	
 13750                           
 13751                           ;incstack = 0
 13752                           ; Regs used in _setLED: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13753                           ;setLED@led stored from wreg
 13754  1373  0020               	movlb	0	; select bank0
 13755  1374  00A3               	movwf	setLED@led
 13756                           
 13757                           ;LED_B1.c: 76: LedPointSelect(led);
 13758  1375  0823               	movf	setLED@led,w
 13759  1376  319D  2524  3193   	fcall	_LedPointSelect
 13760                           
 13761                           ;LED_B1.c: 77: if(command == 0)
 13762  1379  0020               	movlb	0	; select bank0
 13763  137A  08A2               	movf	setLED@command,f
 13764  137B  1D03               	skipz
 13765  137C  2B8F               	goto	l8409
 13766                           
 13767                           ;LED_B1.c: 78: {
 13768                           ;LED_B1.c: 80: if(led == 1)
 13769  137D  0823               	movf	setLED@led,w
 13770  137E  3A01               	xorlw	1
 13771  137F  1D03               	skipz
 13772  1380  2B83               	goto	l8401
 13773                           
 13774                           ;LED_B1.c: 81: {
 13775                           ;LED_B1.c: 85: RA3=1;
 13776  1381  158C               	bsf	12,3	;volatile
 13777                           
 13778                           ;LED_B1.c: 87: }
 13779  1382  0008               	return
 13780  1383                     l8401:	
 13781                           
 13782                           ;LED_B1.c: 90: else if(led == 2)
 13783  1383  0823               	movf	setLED@led,w
 13784  1384  3A02               	xorlw	2
 13785  1385  1D03               	skipz
 13786  1386  2B89               	goto	l8405
 13787                           
 13788                           ;LED_B1.c: 91: {
 13789                           ;LED_B1.c: 95: RC7=1;
 13790  1387  178E               	bsf	14,7	;volatile
 13791                           
 13792                           ;LED_B1.c: 97: }
 13793  1388  0008               	return
 13794  1389                     l8405:	
 13795                           
 13796                           ;LED_B1.c: 110: else if(led == 99)
 13797  1389  0823               	movf	setLED@led,w
 13798  138A  3A63               	xorlw	99
 13799  138B  1D03               	skipz
 13800  138C  0008               	return
 13801                           
 13802                           ;LED_B1.c: 111: {
 13803                           ;LED_B1.c: 115: RB5=1;
 13804  138D  168D               	bsf	13,5	;volatile
 13805                           
 13806                           ;LED_B1.c: 117: }
 13807                           ;LED_B1.c: 119: }
 13808  138E  0008               	return
 13809  138F                     l8409:	
 13810                           
 13811                           ;LED_B1.c: 120: else if(command == 1)
 13812  138F  0822               	movf	setLED@command,w
 13813  1390  3A01               	xorlw	1
 13814  1391  1D03               	skipz
 13815  1392  2BA5               	goto	l8423
 13816                           
 13817                           ;LED_B1.c: 121: {
 13818                           ;LED_B1.c: 123: if(led == 1)
 13819  1393  0823               	movf	setLED@led,w
 13820  1394  3A01               	xorlw	1
 13821  1395  1D03               	skipz
 13822  1396  2B99               	goto	l8415
 13823                           
 13824                           ;LED_B1.c: 124: {
 13825                           ;LED_B1.c: 128: RA3=0;
 13826  1397  118C               	bcf	12,3	;volatile
 13827                           
 13828                           ;LED_B1.c: 130: }
 13829  1398  0008               	return
 13830  1399                     l8415:	
 13831                           
 13832                           ;LED_B1.c: 133: else if(led == 2)
 13833  1399  0823               	movf	setLED@led,w
 13834  139A  3A02               	xorlw	2
 13835  139B  1D03               	skipz
 13836  139C  2B9F               	goto	l8419
 13837                           
 13838                           ;LED_B1.c: 134: {
 13839                           ;LED_B1.c: 138: RC7=0;
 13840  139D  138E               	bcf	14,7	;volatile
 13841                           
 13842                           ;LED_B1.c: 140: }
 13843  139E  0008               	return
 13844  139F                     l8419:	
 13845                           
 13846                           ;LED_B1.c: 153: else if(led == 99)
 13847  139F  0823               	movf	setLED@led,w
 13848  13A0  3A63               	xorlw	99
 13849  13A1  1D03               	skipz
 13850  13A2  0008               	return
 13851                           
 13852                           ;LED_B1.c: 154: {
 13853                           ;LED_B1.c: 158: RB5=0;
 13854  13A3  128D               	bcf	13,5	;volatile
 13855                           
 13856                           ;LED_B1.c: 160: }
 13857                           ;LED_B1.c: 162: }
 13858  13A4  0008               	return
 13859  13A5                     l8423:	
 13860                           
 13861                           ;LED_B1.c: 163: else if(command == 10)
 13862  13A5  0822               	movf	setLED@command,w
 13863  13A6  3A0A               	xorlw	10
 13864  13A7  1D03               	skipz
 13865  13A8  2BC7               	goto	l8439
 13866                           
 13867                           ;LED_B1.c: 164: {
 13868                           ;LED_B1.c: 165: LED->GO=0;
 13869  13A9  0021               	movlb	1	; select bank1
 13870  13AA  083A               	movf	_LED^(0+128),w
 13871  13AB  0086               	movwf	6
 13872  13AC  0187               	clrf	7
 13873  13AD  1081               	bcf	1,1
 13874                           
 13875                           ;LED_B1.c: 166: LED->Time=0;
 13876  13AE  0A3A               	incf	_LED^(0+128),w
 13877  13AF  0086               	movwf	6
 13878  13B0  0187               	clrf	7
 13879  13B1  3000               	movlw	0
 13880  13B2  3FC0               	movwi [0]fsr1
 13881  13B3  3FC1               	movwi [1]fsr1
 13882                           
 13883                           ;LED_B1.c: 168: if(led == 1)
 13884  13B4  0020               	movlb	0	; select bank0
 13885  13B5  0823               	movf	setLED@led,w
 13886  13B6  3A01               	xorlw	1
 13887  13B7  1D03               	skipz
 13888  13B8  2BBB               	goto	l8431
 13889                           
 13890                           ;LED_B1.c: 169: {
 13891                           ;LED_B1.c: 173: RA3=1;
 13892  13B9  158C               	bsf	12,3	;volatile
 13893                           
 13894                           ;LED_B1.c: 175: }
 13895  13BA  0008               	return
 13896  13BB                     l8431:	
 13897                           
 13898                           ;LED_B1.c: 178: else if(led == 2)
 13899  13BB  0823               	movf	setLED@led,w
 13900  13BC  3A02               	xorlw	2
 13901  13BD  1D03               	skipz
 13902  13BE  2BC1               	goto	l8435
 13903                           
 13904                           ;LED_B1.c: 179: {
 13905                           ;LED_B1.c: 183: RC7=1;
 13906  13BF  178E               	bsf	14,7	;volatile
 13907                           
 13908                           ;LED_B1.c: 185: }
 13909  13C0  0008               	return
 13910  13C1                     l8435:	
 13911                           
 13912                           ;LED_B1.c: 198: else if(led == 99)
 13913  13C1  0823               	movf	setLED@led,w
 13914  13C2  3A63               	xorlw	99
 13915  13C3  1D03               	skipz
 13916  13C4  0008               	return
 13917                           
 13918                           ;LED_B1.c: 199: {
 13919                           ;LED_B1.c: 203: RB5=1;
 13920  13C5  168D               	bsf	13,5	;volatile
 13921                           
 13922                           ;LED_B1.c: 205: }
 13923                           ;LED_B1.c: 207: }
 13924  13C6  0008               	return
 13925  13C7                     l8439:	
 13926                           
 13927                           ;LED_B1.c: 208: else if(command == 11)
 13928  13C7  0822               	movf	setLED@command,w
 13929  13C8  3A0B               	xorlw	11
 13930  13C9  1D03               	skipz
 13931  13CA  0008               	return
 13932                           
 13933                           ;LED_B1.c: 209: {
 13934                           ;LED_B1.c: 210: LED->GO=1;
 13935  13CB  0021               	movlb	1	; select bank1
 13936  13CC  083A               	movf	_LED^(0+128),w
 13937  13CD  0086               	movwf	6
 13938  13CE  0187               	clrf	7
 13939  13CF  1481               	bsf	1,1
 13940  13D0  0008               	return
 13941  13D1                     __end_of_setLED:	
 13942                           
 13943                           	psect	text83
 13944  1D24                     __ptext83:	
 13945 ;; *************** function _LedPointSelect *****************
 13946 ;; Defined at:
 13947 ;;		line 7 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\LED_B1.c"
 13948 ;; Parameters:    Size  Location     Type
 13949 ;;  led             1    wreg     unsigned char 
 13950 ;; Auto vars:     Size  Location     Type
 13951 ;;  led             1    1[BANK0 ] unsigned char 
 13952 ;; Return value:  Size  Location     Type
 13953 ;;		None               void
 13954 ;; Registers used:
 13955 ;;		wreg
 13956 ;; Tracked objects:
 13957 ;;		On entry : 0/0
 13958 ;;		On exit  : 0/0
 13959 ;;		Unchanged: 0/0
 13960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13961 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13962 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13963 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13964 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13965 ;;Total ram usage:        2 bytes
 13966 ;; Hardware stack levels used:    1
 13967 ;; Hardware stack levels required when called:    4
 13968 ;; This function calls:
 13969 ;;		Nothing
 13970 ;; This function is called by:
 13971 ;;		_setLED_Initialization
 13972 ;;		_setLED
 13973 ;;		_setLED_Main
 13974 ;; This function uses a non-reentrant model
 13975 ;;
 13976                           
 13977                           
 13978                           ;psect for function _LedPointSelect
 13979  1D24                     _LedPointSelect:	
 13980                           
 13981                           ;incstack = 0
 13982                           ; Regs used in _LedPointSelect: [wreg]
 13983                           ;LedPointSelect@led stored from wreg
 13984  1D24  0020               	movlb	0	; select bank0
 13985  1D25  00A1               	movwf	LedPointSelect@led
 13986                           
 13987                           ;LED_B1.c: 10: if(led == 1)
 13988  1D26  0821               	movf	LedPointSelect@led,w
 13989  1D27  3A01               	xorlw	1
 13990  1D28  1D03               	skipz
 13991  1D29  2D30               	goto	l8261
 13992                           
 13993                           ;LED_B1.c: 11: {
 13994                           ;LED_B1.c: 12: LED=&VarLED1;
 13995  1D2A  30DA               	movlw	_VarLED1& (0+255)
 13996  1D2B  00A0               	movwf	??_LedPointSelect
 13997  1D2C  0820               	movf	??_LedPointSelect,w
 13998  1D2D  0021               	movlb	1	; select bank1
 13999  1D2E  00BA               	movwf	_LED^(0+128)
 14000                           
 14001                           ;LED_B1.c: 13: }
 14002  1D2F  0008               	return
 14003  1D30                     l8261:	
 14004                           
 14005                           ;LED_B1.c: 16: else if(led == 2)
 14006  1D30  0020               	movlb	0	; select bank0
 14007  1D31  0821               	movf	LedPointSelect@led,w
 14008  1D32  3A02               	xorlw	2
 14009  1D33  1D03               	skipz
 14010  1D34  2D3B               	goto	l8265
 14011                           
 14012                           ;LED_B1.c: 17: {
 14013                           ;LED_B1.c: 18: LED=&VarLED2;
 14014  1D35  30DE               	movlw	_VarLED2& (0+255)
 14015  1D36  00A0               	movwf	??_LedPointSelect
 14016  1D37  0820               	movf	??_LedPointSelect,w
 14017  1D38  0021               	movlb	1	; select bank1
 14018  1D39  00BA               	movwf	_LED^(0+128)
 14019                           
 14020                           ;LED_B1.c: 19: }
 14021  1D3A  0008               	return
 14022  1D3B                     l8265:	
 14023                           
 14024                           ;LED_B1.c: 28: else if(led == 99)
 14025  1D3B  0020               	movlb	0	; select bank0
 14026  1D3C  0821               	movf	LedPointSelect@led,w
 14027  1D3D  3A63               	xorlw	99
 14028  1D3E  1D03               	skipz
 14029  1D3F  0008               	return
 14030                           
 14031                           ;LED_B1.c: 29: {
 14032                           ;LED_B1.c: 30: LED=&VarErrLED;
 14033  1D40  30D6               	movlw	_VarErrLED& (0+255)
 14034  1D41  00A0               	movwf	??_LedPointSelect
 14035  1D42  0820               	movf	??_LedPointSelect,w
 14036  1D43  0021               	movlb	1	; select bank1
 14037  1D44  00BA               	movwf	_LED^(0+128)
 14038  1D45  0008               	return
 14039  1D46                     __end_of_LedPointSelect:	
 14040                           
 14041                           	psect	text84
 14042  1B88                     __ptext84:	
 14043 ;; *************** function _DimmerLights_Close *****************
 14044 ;; Defined at:
 14045 ;;		line 101 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 14046 ;; Parameters:    Size  Location     Type
 14047 ;;		None
 14048 ;; Auto vars:     Size  Location     Type
 14049 ;;		None
 14050 ;; Return value:  Size  Location     Type
 14051 ;;		None               void
 14052 ;; Registers used:
 14053 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14054 ;; Tracked objects:
 14055 ;;		On entry : 0/0
 14056 ;;		On exit  : 0/0
 14057 ;;		Unchanged: 0/0
 14058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14059 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14060 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14062 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14063 ;;Total ram usage:        0 bytes
 14064 ;; Hardware stack levels used:    1
 14065 ;; Hardware stack levels required when called:    5
 14066 ;; This function calls:
 14067 ;;		_getDimmerLights_StatusFlag
 14068 ;; This function is called by:
 14069 ;;		_DimmerLights_Main
 14070 ;; This function uses a non-reentrant model
 14071 ;;
 14072                           
 14073                           
 14074                           ;psect for function _DimmerLights_Close
 14075  1B88                     _DimmerLights_Close:	
 14076                           
 14077                           ;Dimmer_B1.c: 103: if(Dimmer->Detect)
 14078                           
 14079                           ;incstack = 0
 14080                           ; Regs used in _DimmerLights_Close: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14081  1B88  0021               	movlb	1	; select bank1
 14082  1B89  0838               	movf	_Dimmer^(0+128),w
 14083  1B8A  0086               	movwf	6
 14084  1B8B  0187               	clrf	7
 14085  1B8C  1C01               	btfss	1,0
 14086  1B8D  0008               	return
 14087                           
 14088                           ;Dimmer_B1.c: 104: {
 14089                           ;Dimmer_B1.c: 105: Dimmer->Detect=0;
 14090  1B8E  0838               	movf	_Dimmer^(0+128),w
 14091  1B8F  0086               	movwf	6
 14092  1B90  0187               	clrf	7
 14093  1B91  1001               	bcf	1,0
 14094                           
 14095                           ;Dimmer_B1.c: 106: if(!getDimmerLights_StatusFlag())
 14096  1B92  319B  235C  319B   	fcall	_getDimmerLights_StatusFlag
 14097  1B95  3800               	iorlw	0
 14098  1B96  1D03               	skipz
 14099  1B97  0008               	return
 14100                           
 14101                           ;Dimmer_B1.c: 107: {
 14102                           ;Dimmer_B1.c: 108: ;;
 14103                           ;Dimmer_B1.c: 109: Memory->GO=1; if(!1) { Memory->Time=1; } ;;
 14104  1B98  0020               	movlb	0	; select bank0
 14105  1B99  086D               	movf	_Memory,w
 14106  1B9A  3E22               	addlw	34
 14107  1B9B  0086               	movwf	6
 14108  1B9C  3002               	movlw	2	; select bank4/5
 14109  1B9D  0087               	movwf	7
 14110  1B9E  1481               	bsf	1,1
 14111  1B9F  0008               	return
 14112  1BA0                     __end_of_DimmerLights_Close:	
 14113                           
 14114                           	psect	text85
 14115  1B5C                     __ptext85:	
 14116 ;; *************** function _getDimmerLights_StatusFlag *****************
 14117 ;; Defined at:
 14118 ;;		line 208 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 14119 ;; Parameters:    Size  Location     Type
 14120 ;;		None
 14121 ;; Auto vars:     Size  Location     Type
 14122 ;;  Status          1    1[BANK0 ] unsigned char 
 14123 ;; Return value:  Size  Location     Type
 14124 ;;                  1    wreg      unsigned char 
 14125 ;; Registers used:
 14126 ;;		wreg, fsr1l, fsr1h, status,2
 14127 ;; Tracked objects:
 14128 ;;		On entry : 0/0
 14129 ;;		On exit  : 0/0
 14130 ;;		Unchanged: 0/0
 14131 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14133 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14134 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14135 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14136 ;;Total ram usage:        3 bytes
 14137 ;; Hardware stack levels used:    1
 14138 ;; Hardware stack levels required when called:    4
 14139 ;; This function calls:
 14140 ;;		Nothing
 14141 ;; This function is called by:
 14142 ;;		_DimmerLights_Close
 14143 ;;		_DimmerLights_Exceptions
 14144 ;; This function uses a non-reentrant model
 14145 ;;
 14146                           
 14147                           
 14148                           ;psect for function _getDimmerLights_StatusFlag
 14149  1B5C                     _getDimmerLights_StatusFlag:	
 14150                           
 14151                           ;Dimmer_B1.c: 210: char Status=0;
 14152                           
 14153                           ;incstack = 0
 14154                           ; Regs used in _getDimmerLights_StatusFlag: [wreg+fsr1l+fsr1h+status,2]
 14155  1B5C  0020               	movlb	0	; select bank0
 14156  1B5D  01A1               	clrf	getDimmerLights_StatusFlag@Status
 14157                           
 14158                           ;Dimmer_B1.c: 217: Status=(DimmerLights11->StatusFlag || DimmerLights22->StatusFlag)?1:0
      +                          ;
 14159  1B5E  01A2               	clrf	_getDimmerLights_StatusFlag$1650
 14160  1B5F  0AA2               	incf	_getDimmerLights_StatusFlag$1650,f
 14161  1B60  086B               	movf	_DimmerLights11,w
 14162  1B61  0086               	movwf	6
 14163  1B62  3001               	movlw	1	; select bank2/3
 14164  1B63  0087               	movwf	7
 14165  1B64  1B01               	btfsc	1,6
 14166  1B65  2B6C               	goto	l8499
 14167  1B66  086C               	movf	_DimmerLights22,w
 14168  1B67  0086               	movwf	6
 14169  1B68  3001               	movlw	1	; select bank2/3
 14170  1B69  0087               	movwf	7
 14171  1B6A  1F01               	btfss	1,6
 14172  1B6B  01A2               	clrf	_getDimmerLights_StatusFlag$1650
 14173  1B6C                     l8499:	
 14174  1B6C  0822               	movf	_getDimmerLights_StatusFlag$1650,w
 14175  1B6D  00A0               	movwf	??_getDimmerLights_StatusFlag
 14176  1B6E  0820               	movf	??_getDimmerLights_StatusFlag,w
 14177  1B6F  00A1               	movwf	getDimmerLights_StatusFlag@Status
 14178                           
 14179                           ;Dimmer_B1.c: 224: return Status;
 14180  1B70  0821               	movf	getDimmerLights_StatusFlag@Status,w
 14181  1B71  0008               	return
 14182  1B72                     __end_of_getDimmerLights_StatusFlag:	
 14183                           
 14184                           	psect	text86
 14185  1B31                     __ptext86:	
 14186 ;; *************** function _DimmerLights_Initialization *****************
 14187 ;; Defined at:
 14188 ;;		line 41 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 14189 ;; Parameters:    Size  Location     Type
 14190 ;;		None
 14191 ;; Auto vars:     Size  Location     Type
 14192 ;;		None
 14193 ;; Return value:  Size  Location     Type
 14194 ;;		None               void
 14195 ;; Registers used:
 14196 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14197 ;; Tracked objects:
 14198 ;;		On entry : 0/0
 14199 ;;		On exit  : 0/0
 14200 ;;		Unchanged: 0/0
 14201 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14202 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14203 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14204 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14205 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14206 ;;Total ram usage:        1 bytes
 14207 ;; Hardware stack levels used:    1
 14208 ;; Hardware stack levels required when called:    6
 14209 ;; This function calls:
 14210 ;;		_Dimmer_Initialization
 14211 ;;		_setDimmerLights_Initialization
 14212 ;; This function is called by:
 14213 ;;		_main
 14214 ;; This function uses a non-reentrant model
 14215 ;;
 14216                           
 14217                           
 14218                           ;psect for function _DimmerLights_Initialization
 14219  1B31                     _DimmerLights_Initialization:	
 14220                           
 14221                           ;Dimmer_B1.c: 44: DimmerLights11=&DimmerLights1;
 14222                           
 14223                           ;incstack = 0
 14224                           ; Regs used in _DimmerLights_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 14225  1B31  3020               	movlw	_DimmerLights1& (0+255)
 14226  1B32  0020               	movlb	0	; select bank0
 14227  1B33  00A4               	movwf	??_DimmerLights_Initialization
 14228  1B34  0824               	movf	??_DimmerLights_Initialization,w
 14229  1B35  00EB               	movwf	_DimmerLights11
 14230                           
 14231                           ;Dimmer_B1.c: 45: setDimmerLights_Initialization(1);
 14232  1B36  3001               	movlw	1
 14233  1B37  319E  265A  319B   	fcall	_setDimmerLights_Initialization
 14234                           
 14235                           ;Dimmer_B1.c: 49: DimmerLights22=&DimmerLights2;
 14236  1B3A  302E               	movlw	_DimmerLights2& (0+255)
 14237  1B3B  0020               	movlb	0	; select bank0
 14238  1B3C  00A4               	movwf	??_DimmerLights_Initialization
 14239  1B3D  0824               	movf	??_DimmerLights_Initialization,w
 14240  1B3E  00EC               	movwf	_DimmerLights22
 14241                           
 14242                           ;Dimmer_B1.c: 50: setDimmerLights_Initialization(2);
 14243  1B3F  3002               	movlw	2
 14244  1B40  319E  265A  319B   	fcall	_setDimmerLights_Initialization
 14245                           
 14246                           ;Dimmer_B1.c: 59: Dimmer_Initialization();
 14247  1B43  3199  2112         	fcall	_Dimmer_Initialization
 14248  1B45  0008               	return
 14249  1B46                     __end_of_DimmerLights_Initialization:	
 14250                           
 14251                           	psect	text87
 14252  1E5A                     __ptext87:	
 14253 ;; *************** function _setDimmerLights_Initialization *****************
 14254 ;; Defined at:
 14255 ;;		line 63 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 14256 ;; Parameters:    Size  Location     Type
 14257 ;;  lights          1    wreg     unsigned char 
 14258 ;; Auto vars:     Size  Location     Type
 14259 ;;  lights          1    3[BANK0 ] unsigned char 
 14260 ;; Return value:  Size  Location     Type
 14261 ;;		None               void
 14262 ;; Registers used:
 14263 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14264 ;; Tracked objects:
 14265 ;;		On entry : 0/0
 14266 ;;		On exit  : 0/0
 14267 ;;		Unchanged: 0/0
 14268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14270 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14271 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14272 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14273 ;;Total ram usage:        2 bytes
 14274 ;; Hardware stack levels used:    1
 14275 ;; Hardware stack levels required when called:    5
 14276 ;; This function calls:
 14277 ;;		_DimmerLightsPointSelect
 14278 ;; This function is called by:
 14279 ;;		_DimmerLights_Initialization
 14280 ;; This function uses a non-reentrant model
 14281 ;;
 14282                           
 14283                           
 14284                           ;psect for function _setDimmerLights_Initialization
 14285  1E5A                     _setDimmerLights_Initialization:	
 14286                           
 14287                           ;incstack = 0
 14288                           ; Regs used in _setDimmerLights_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pcla
      +                          th+cstack]
 14289                           ;setDimmerLights_Initialization@lights stored from wreg
 14290  1E5A  0020               	movlb	0	; select bank0
 14291  1E5B  00A3               	movwf	setDimmerLights_Initialization@lights
 14292                           
 14293                           ;Dimmer_B1.c: 65: DimmerLightsPointSelect(lights);
 14294  1E5C  0823               	movf	setDimmerLights_Initialization@lights,w
 14295  1E5D  319A  22CE         	fcall	_DimmerLightsPointSelect
 14296                           
 14297                           ;Dimmer_B1.c: 66: DimmerLights->Clear=1;
 14298  1E5F  0020               	movlb	0	; select bank0
 14299  1E60  086A               	movf	_DimmerLights,w
 14300  1E61  3E0C               	addlw	12
 14301  1E62  0086               	movwf	6
 14302  1E63  3001               	movlw	1	; select bank2/3
 14303  1E64  0087               	movwf	7
 14304  1E65  1401               	bsf	1,0
 14305                           
 14306                           ;Dimmer_B1.c: 72: DimmerLights->MaxmumValue=((char)((100-55)*1.5));
 14307  1E66  3043               	movlw	67
 14308  1E67  00A2               	movwf	??_setDimmerLights_Initialization
 14309  1E68  086A               	movf	_DimmerLights,w
 14310  1E69  3E05               	addlw	5
 14311  1E6A  0086               	movwf	6
 14312  1E6B  3001               	movlw	1	; select bank2/3
 14313  1E6C  0087               	movwf	7
 14314  1E6D  0822               	movf	??_setDimmerLights_Initialization,w
 14315  1E6E  0081               	movwf	1
 14316                           
 14317                           ;Dimmer_B1.c: 73: DimmerLights->MinimumValue=((char)((100-20)*1.5));
 14318  1E6F  3078               	movlw	120
 14319  1E70  00A2               	movwf	??_setDimmerLights_Initialization
 14320  1E71  086A               	movf	_DimmerLights,w
 14321  1E72  3E06               	addlw	6
 14322  1E73  0086               	movwf	6
 14323  1E74  3001               	movlw	1	; select bank2/3
 14324  1E75  0087               	movwf	7
 14325  1E76  0822               	movf	??_setDimmerLights_Initialization,w
 14326  1E77  0081               	movwf	1
 14327                           
 14328                           ;Dimmer_B1.c: 83: DimmerLights->DimmingValue=DimmerLights->MinimumValue;
 14329  1E78  086A               	movf	_DimmerLights,w
 14330  1E79  3E06               	addlw	6
 14331  1E7A  0086               	movwf	6
 14332  1E7B  3001               	movlw	1	; select bank2/3
 14333  1E7C  0087               	movwf	7
 14334  1E7D  0801               	movf	1,w
 14335  1E7E  00A2               	movwf	??_setDimmerLights_Initialization
 14336  1E7F  086A               	movf	_DimmerLights,w
 14337  1E80  3E04               	addlw	4
 14338  1E81  0086               	movwf	6
 14339  1E82  3001               	movlw	1	; select bank2/3
 14340  1E83  0087               	movwf	7
 14341  1E84  0822               	movf	??_setDimmerLights_Initialization,w
 14342  1E85  0081               	movwf	1
 14343  1E86  0008               	return
 14344  1E87                     __end_of_setDimmerLights_Initialization:	
 14345                           
 14346                           	psect	text88
 14347  1912                     __ptext88:	
 14348 ;; *************** function _Dimmer_Initialization *****************
 14349 ;; Defined at:
 14350 ;;		line 520 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 14351 ;; Parameters:    Size  Location     Type
 14352 ;;		None
 14353 ;; Auto vars:     Size  Location     Type
 14354 ;;		None
 14355 ;; Return value:  Size  Location     Type
 14356 ;;		None               void
 14357 ;; Registers used:
 14358 ;;		wreg
 14359 ;; Tracked objects:
 14360 ;;		On entry : 0/0
 14361 ;;		On exit  : 0/0
 14362 ;;		Unchanged: 0/0
 14363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14366 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14367 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14368 ;;Total ram usage:        1 bytes
 14369 ;; Hardware stack levels used:    1
 14370 ;; Hardware stack levels required when called:    4
 14371 ;; This function calls:
 14372 ;;		Nothing
 14373 ;; This function is called by:
 14374 ;;		_DimmerLights_Initialization
 14375 ;; This function uses a non-reentrant model
 14376 ;;
 14377                           
 14378                           
 14379                           ;psect for function _Dimmer_Initialization
 14380  1912                     _Dimmer_Initialization:	
 14381                           
 14382                           ;Dimmer_B1.c: 522: Dimmer=&Dimmer1;
 14383                           
 14384                           ;incstack = 0
 14385                           ; Regs used in _Dimmer_Initialization: [wreg]
 14386  1912  30E2               	movlw	_Dimmer1& (0+255)
 14387  1913  0020               	movlb	0	; select bank0
 14388  1914  00A0               	movwf	??_Dimmer_Initialization
 14389  1915  0820               	movf	??_Dimmer_Initialization,w
 14390  1916  0021               	movlb	1	; select bank1
 14391  1917  00B8               	movwf	_Dimmer^(0+128)
 14392  1918  0008               	return
 14393  1919                     __end_of_Dimmer_Initialization:	
 14394                           
 14395                           	psect	text89
 14396  1936                     __ptext89:	
 14397 ;; *************** function _DelayOff_Main *****************
 14398 ;; Defined at:
 14399 ;;		line 45 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\DelayOff_B1.c"
 14400 ;; Parameters:    Size  Location     Type
 14401 ;;		None
 14402 ;; Auto vars:     Size  Location     Type
 14403 ;;		None
 14404 ;; Return value:  Size  Location     Type
 14405 ;;		None               void
 14406 ;; Registers used:
 14407 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14408 ;; Tracked objects:
 14409 ;;		On entry : 0/0
 14410 ;;		On exit  : 0/0
 14411 ;;		Unchanged: 0/0
 14412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14416 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14417 ;;Total ram usage:        0 bytes
 14418 ;; Hardware stack levels used:    1
 14419 ;; Hardware stack levels required when called:    9
 14420 ;; This function calls:
 14421 ;;		_DlyOff_Main
 14422 ;; This function is called by:
 14423 ;;		_main
 14424 ;; This function uses a non-reentrant model
 14425 ;;
 14426                           
 14427                           
 14428                           ;psect for function _DelayOff_Main
 14429  1936                     _DelayOff_Main:	
 14430                           
 14431                           ;DelayOff_B1.c: 48: DlyOff_Main(1);
 14432                           
 14433                           ;incstack = 0
 14434                           ; Regs used in _DelayOff_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14435  1936  3001               	movlw	1
 14436  1937  3197  2717  3199   	fcall	_DlyOff_Main
 14437                           
 14438                           ;DelayOff_B1.c: 52: DlyOff_Main(2);
 14439  193A  3002               	movlw	2
 14440  193B  3197  2717         	fcall	_DlyOff_Main
 14441  193D  0008               	return
 14442  193E                     __end_of_DelayOff_Main:	
 14443                           
 14444                           	psect	text90
 14445  1717                     __ptext90:	
 14446 ;; *************** function _DlyOff_Main *****************
 14447 ;; Defined at:
 14448 ;;		line 66 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\DelayOff_B1.c"
 14449 ;; Parameters:    Size  Location     Type
 14450 ;;  sw              1    wreg     unsigned char 
 14451 ;; Auto vars:     Size  Location     Type
 14452 ;;  sw              1   68[BANK0 ] unsigned char 
 14453 ;; Return value:  Size  Location     Type
 14454 ;;		None               void
 14455 ;; Registers used:
 14456 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14457 ;; Tracked objects:
 14458 ;;		On entry : 0/0
 14459 ;;		On exit  : 0/0
 14460 ;;		Unchanged: 0/0
 14461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14462 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14463 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14464 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14465 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14466 ;;Total ram usage:        3 bytes
 14467 ;; Hardware stack levels used:    1
 14468 ;; Hardware stack levels required when called:    8
 14469 ;; This function calls:
 14470 ;;		_DelayOffPointSelect
 14471 ;;		_setBuz
 14472 ;;		_setDimmerLights_Switch
 14473 ;;		_setDimmerLights_Trigger
 14474 ;;		_setRFSW_Status
 14475 ;;		_setRF_DimmerLights
 14476 ;;		_setSw_Status
 14477 ;;		_setTxData
 14478 ;; This function is called by:
 14479 ;;		_DelayOff_Main
 14480 ;; This function uses a non-reentrant model
 14481 ;;
 14482                           
 14483                           
 14484                           ;psect for function _DlyOff_Main
 14485  1717                     _DlyOff_Main:	
 14486                           
 14487                           ;incstack = 0
 14488                           ; Regs used in _DlyOff_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14489                           ;DlyOff_Main@sw stored from wreg
 14490  1717  0020               	movlb	0	; select bank0
 14491  1718  00E4               	movwf	DlyOff_Main@sw
 14492                           
 14493                           ;DelayOff_B1.c: 68: DelayOffPointSelect(sw);
 14494  1719  0864               	movf	DlyOff_Main@sw,w
 14495  171A  319A  22F4  3197   	fcall	_DelayOffPointSelect
 14496                           
 14497                           ;DelayOff_B1.c: 69: if(DelayOff->GO)
 14498  171D  0020               	movlb	0	; select bank0
 14499  171E  0869               	movf	_DelayOff,w
 14500  171F  0086               	movwf	6
 14501  1720  0187               	clrf	7
 14502  1721  1C81               	btfss	1,1
 14503  1722  0008               	return
 14504                           
 14505                           ;DelayOff_B1.c: 70: {
 14506                           ;DelayOff_B1.c: 71: DelayOff->SecondTime++;
 14507  1723  0869               	movf	_DelayOff,w
 14508  1724  3E02               	addlw	2
 14509  1725  0086               	movwf	6
 14510  1726  0187               	clrf	7
 14511  1727  3001               	movlw	1
 14512  1728  0781               	addwf	1,f
 14513  1729  3141               	addfsr 1,1
 14514  172A  1803               	skipnc
 14515  172B  0A81               	incf	1,f
 14516                           
 14517                           ;DelayOff_B1.c: 72: if(DelayOff->SecondTime >= 5650)
 14518  172C  0869               	movf	_DelayOff,w
 14519  172D  3E02               	addlw	2
 14520  172E  0086               	movwf	6
 14521  172F  0187               	clrf	7
 14522  1730  3F40               	moviw [0]fsr1
 14523  1731  00E2               	movwf	??_DlyOff_Main
 14524  1732  3F41               	moviw [1]fsr1
 14525  1733  00E3               	movwf	??_DlyOff_Main+1
 14526  1734  3016               	movlw	22
 14527  1735  0263               	subwf	??_DlyOff_Main+1,w
 14528  1736  3012               	movlw	18
 14529  1737  1903               	skipnz
 14530  1738  0262               	subwf	??_DlyOff_Main,w
 14531  1739  1C03               	skipc
 14532  173A  0008               	return
 14533                           
 14534                           ;DelayOff_B1.c: 73: {
 14535                           ;DelayOff_B1.c: 74: DelayOff->SecondTime=0;
 14536  173B  0869               	movf	_DelayOff,w
 14537  173C  3E02               	addlw	2
 14538  173D  0086               	movwf	6
 14539  173E  0187               	clrf	7
 14540  173F  3000               	movlw	0
 14541  1740  3FC0               	movwi [0]fsr1
 14542  1741  3FC1               	movwi [1]fsr1
 14543                           
 14544                           ;DelayOff_B1.c: 75: DelayOff->MinuteTime++;
 14545  1742  3001               	movlw	1
 14546  1743  00E2               	movwf	??_DlyOff_Main
 14547  1744  0869               	movf	_DelayOff,w
 14548  1745  3E04               	addlw	4
 14549  1746  0086               	movwf	6
 14550  1747  0187               	clrf	7
 14551  1748  0862               	movf	??_DlyOff_Main,w
 14552  1749  0781               	addwf	1,f
 14553                           
 14554                           ;DelayOff_B1.c: 76: if(DelayOff->MinuteTime >= DelayOff->Value)
 14555  174A  0869               	movf	_DelayOff,w
 14556  174B  3E04               	addlw	4
 14557  174C  0086               	movwf	6
 14558  174D  0187               	clrf	7
 14559  174E  0A69               	incf	_DelayOff,w
 14560  174F  0084               	movwf	4
 14561  1750  0185               	clrf	5
 14562  1751  0800               	movf	0,w
 14563  1752  0201               	subwf	1,w
 14564  1753  1C03               	skipc
 14565  1754  0008               	return
 14566                           
 14567                           ;DelayOff_B1.c: 77: {
 14568                           ;DelayOff_B1.c: 78: DelayOff->MinuteTime=0;
 14569  1755  0869               	movf	_DelayOff,w
 14570  1756  3E04               	addlw	4
 14571  1757  0086               	movwf	6
 14572  1758  0187               	clrf	7
 14573  1759  0181               	clrf	1
 14574                           
 14575                           ;DelayOff_B1.c: 79: DelayOff->GO=0;
 14576  175A  0869               	movf	_DelayOff,w
 14577  175B  0086               	movwf	6
 14578  175C  0187               	clrf	7
 14579  175D  1081               	bcf	1,1
 14580                           
 14581                           ;DelayOff_B1.c: 80: setSw_Status(sw,0);
 14582  175E  01A2               	clrf	setSw_Status@command
 14583  175F  0864               	movf	DlyOff_Main@sw,w
 14584  1760  319A  224E  3197   	fcall	_setSw_Status
 14585                           
 14586                           ;DelayOff_B1.c: 81: setRFSW_Status(sw,0);
 14587  1763  0020               	movlb	0	; select bank0
 14588  1764  01A2               	clrf	setRFSW_Status@command
 14589  1765  0864               	movf	DlyOff_Main@sw,w
 14590  1766  319A  223F  3197   	fcall	_setRFSW_Status
 14591                           
 14592                           ;DelayOff_B1.c: 82: setRF_DimmerLights(sw,0);
 14593  1769  0020               	movlb	0	; select bank0
 14594  176A  01DD               	clrf	setRF_DimmerLights@on
 14595  176B  0864               	movf	DlyOff_Main@sw,w
 14596  176C  3195  2560  3197   	fcall	_setRF_DimmerLights
 14597                           
 14598                           ;DelayOff_B1.c: 83: setDimmerLights_Trigger(sw,1);
 14599  176F  0020               	movlb	0	; select bank0
 14600  1770  01A2               	clrf	setDimmerLights_Trigger@command
 14601  1771  0AA2               	incf	setDimmerLights_Trigger@command,f
 14602  1772  0864               	movf	DlyOff_Main@sw,w
 14603  1773  319A  227D  3197   	fcall	_setDimmerLights_Trigger
 14604                           
 14605                           ;DelayOff_B1.c: 84: setDimmerLights_Switch(sw,0);
 14606  1776  0020               	movlb	0	; select bank0
 14607  1777  01A2               	clrf	setDimmerLights_Switch@command
 14608  1778  0864               	movf	DlyOff_Main@sw,w
 14609  1779  319A  226D  3197   	fcall	_setDimmerLights_Switch
 14610                           
 14611                           ;DelayOff_B1.c: 85: setTxData(1);
 14612  177C  3001               	movlw	1
 14613  177D  3187  271C  3197   	fcall	_setTxData
 14614                           
 14615                           ;DelayOff_B1.c: 86: setBuz(1,100);
 14616  1780  3064               	movlw	100
 14617  1781  0020               	movlb	0	; select bank0
 14618  1782  00A6               	movwf	setBuz@time
 14619  1783  3000               	movlw	0
 14620  1784  00A7               	movwf	setBuz@time+1
 14621  1785  3001               	movlw	1
 14622  1786  3197  2789         	fcall	_setBuz
 14623  1788  0008               	return
 14624  1789                     __end_of_DlyOff_Main:	
 14625                           
 14626                           	psect	text91
 14627  071C                     __ptext91:	
 14628 ;; *************** function _setTxData *****************
 14629 ;; Defined at:
 14630 ;;		line 141 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
 14631 ;; Parameters:    Size  Location     Type
 14632 ;;  rf              1    wreg     unsigned char 
 14633 ;; Auto vars:     Size  Location     Type
 14634 ;;  rf              1    3[BANK0 ] unsigned char 
 14635 ;;  i               1    0        unsigned char 
 14636 ;; Return value:  Size  Location     Type
 14637 ;;		None               void
 14638 ;; Registers used:
 14639 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14640 ;; Tracked objects:
 14641 ;;		On entry : 0/0
 14642 ;;		On exit  : 0/0
 14643 ;;		Unchanged: 0/0
 14644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14646 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14647 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14648 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14649 ;;Total ram usage:        2 bytes
 14650 ;; Hardware stack levels used:    1
 14651 ;; Hardware stack levels required when called:    5
 14652 ;; This function calls:
 14653 ;;		_RfPointSelect
 14654 ;; This function is called by:
 14655 ;;		_DlyOff_Main
 14656 ;;		_setDimmerLights_Adj
 14657 ;;		_setControl_Lights_Table
 14658 ;;		_setRFSW_Control
 14659 ;;		_setRFSW_AdjControl
 14660 ;;		_Sw_DimmerOnFunc
 14661 ;;		_Sw_DimmerOffFunc
 14662 ;; This function uses a non-reentrant model
 14663 ;;
 14664                           
 14665                           
 14666                           ;psect for function _setTxData
 14667  071C                     _setTxData:	
 14668                           
 14669                           ;incstack = 0
 14670                           ; Regs used in _setTxData: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14671                           ;setTxData@rf stored from wreg
 14672  071C  0020               	movlb	0	; select bank0
 14673  071D  00A3               	movwf	setTxData@rf
 14674                           
 14675                           ;RF_Control_B1.c: 143: char i;
 14676                           ;RF_Control_B1.c: 144: RfPointSelect(rf);
 14677  071E  0823               	movf	setTxData@rf,w
 14678  071F  3199  2188  3187   	fcall	_RfPointSelect
 14679                           
 14680                           ;RF_Control_B1.c: 145: if(RF->Enable)
 14681  0722  0877               	movf	_RF,w
 14682  0723  0086               	movwf	6
 14683  0724  0187               	clrf	7
 14684  0725  1C01               	btfss	1,0
 14685  0726  0008               	return
 14686                           
 14687                           ;RF_Control_B1.c: 146: {
 14688                           ;RF_Control_B1.c: 148: if(!RF->TransceiveGO)
 14689  0727  0877               	movf	_RF,w
 14690  0728  0086               	movwf	6
 14691  0729  0187               	clrf	7
 14692  072A  1901               	btfsc	1,2
 14693  072B  0008               	return
 14694                           
 14695                           ;RF_Control_B1.c: 149: {
 14696                           ;RF_Control_B1.c: 150: RF->TransceiveGO=1;
 14697  072C  0877               	movf	_RF,w
 14698  072D  0086               	movwf	6
 14699  072E  0187               	clrf	7
 14700  072F  1501               	bsf	1,2
 14701                           
 14702                           ;RF_Control_B1.c: 159: RF_Data[0]=0x63;
 14703  0730  3063               	movlw	99
 14704  0731  0020               	movlb	0	; select bank0
 14705  0732  00A2               	movwf	??_setTxData
 14706  0733  0822               	movf	??_setTxData,w
 14707  0734  0021               	movlb	1	; select bank1
 14708  0735  00A0               	movwf	_RF_Data^(0+128)
 14709                           
 14710                           ;RF_Control_B1.c: 160: RF_Data[1]=0x02;
 14711  0736  3002               	movlw	2
 14712  0737  0020               	movlb	0	; select bank0
 14713  0738  00A2               	movwf	??_setTxData
 14714  0739  0822               	movf	??_setTxData,w
 14715  073A  0021               	movlb	1	; select bank1
 14716  073B  00A1               	movwf	(_RF_Data^(0+128)+1)
 14717                           
 14718                           ;RF_Control_B1.c: 161: RF_Data[2]=Product->Data[2];
 14719  073C  0020               	movlb	0	; select bank0
 14720  073D  086E               	movf	_Product,w
 14721  073E  0086               	movwf	6
 14722  073F  3001               	movlw	1	; select bank2/3
 14723  0740  0087               	movwf	7
 14724  0741  3001               	movlw	1	; select bank2/3
 14725  0742  3F42               	moviw [2]fsr1
 14726  0743  0021               	movlb	1	; select bank1
 14727  0744  00A2               	movwf	(_RF_Data^(0+128)+2)
 14728                           
 14729                           ;RF_Control_B1.c: 162: RF_Data[3]=Product->Data[3];
 14730  0745  0020               	movlb	0	; select bank0
 14731  0746  086E               	movf	_Product,w
 14732  0747  0086               	movwf	6
 14733  0748  3001               	movlw	1	; select bank2/3
 14734  0749  0087               	movwf	7
 14735  074A  3001               	movlw	1	; select bank2/3
 14736  074B  3F43               	moviw [3]fsr1
 14737  074C  0021               	movlb	1	; select bank1
 14738  074D  00A3               	movwf	(_RF_Data^(0+128)+3)
 14739                           
 14740                           ;RF_Control_B1.c: 163: RF_Data[4]=Product->Data[4];
 14741  074E  0020               	movlb	0	; select bank0
 14742  074F  086E               	movf	_Product,w
 14743  0750  0086               	movwf	6
 14744  0751  3001               	movlw	1	; select bank2/3
 14745  0752  0087               	movwf	7
 14746  0753  3001               	movlw	1	; select bank2/3
 14747  0754  3F44               	moviw [4]fsr1
 14748  0755  0021               	movlb	1	; select bank1
 14749  0756  00A4               	movwf	(_RF_Data^(0+128)+4)
 14750                           
 14751                           ;RF_Control_B1.c: 164: RF_Data[5]=Product->Data[5];
 14752  0757  0020               	movlb	0	; select bank0
 14753  0758  086E               	movf	_Product,w
 14754  0759  0086               	movwf	6
 14755  075A  3001               	movlw	1	; select bank2/3
 14756  075B  0087               	movwf	7
 14757  075C  3001               	movlw	1	; select bank2/3
 14758  075D  3F45               	moviw [5]fsr1
 14759  075E  0021               	movlb	1	; select bank1
 14760  075F  00A5               	movwf	(_RF_Data^(0+128)+5)
 14761                           
 14762                           ;RF_Control_B1.c: 165: RF_Data[6]=Product->Data[6];
 14763  0760  0020               	movlb	0	; select bank0
 14764  0761  086E               	movf	_Product,w
 14765  0762  0086               	movwf	6
 14766  0763  3001               	movlw	1	; select bank2/3
 14767  0764  0087               	movwf	7
 14768  0765  3001               	movlw	1	; select bank2/3
 14769  0766  3F46               	moviw [6]fsr1
 14770  0767  0021               	movlb	1	; select bank1
 14771  0768  00A6               	movwf	(_RF_Data^(0+128)+6)
 14772                           
 14773                           ;RF_Control_B1.c: 166: RF_Data[7]=Product->Data[7];
 14774  0769  0020               	movlb	0	; select bank0
 14775  076A  086E               	movf	_Product,w
 14776  076B  0086               	movwf	6
 14777  076C  3001               	movlw	1	; select bank2/3
 14778  076D  0087               	movwf	7
 14779  076E  3001               	movlw	1	; select bank2/3
 14780  076F  3F47               	moviw [7]fsr1
 14781  0770  0021               	movlb	1	; select bank1
 14782  0771  00A7               	movwf	(_RF_Data^(0+128)+7)
 14783                           
 14784                           ;RF_Control_B1.c: 167: RF_Data[8]=Product->Data[8];
 14785  0772  0020               	movlb	0	; select bank0
 14786  0773  086E               	movf	_Product,w
 14787  0774  0086               	movwf	6
 14788  0775  3001               	movlw	1	; select bank2/3
 14789  0776  0087               	movwf	7
 14790  0777  3001               	movlw	1	; select bank2/3
 14791  0778  3F48               	moviw [8]fsr1
 14792  0779  0021               	movlb	1	; select bank1
 14793  077A  00A8               	movwf	(_RF_Data^(0+128)+8)
 14794                           
 14795                           ;RF_Control_B1.c: 168: RF_Data[9]=Product->Data[9];
 14796  077B  0020               	movlb	0	; select bank0
 14797  077C  086E               	movf	_Product,w
 14798  077D  0086               	movwf	6
 14799  077E  3001               	movlw	1	; select bank2/3
 14800  077F  0087               	movwf	7
 14801  0780  3001               	movlw	1	; select bank2/3
 14802  0781  3F49               	moviw [9]fsr1
 14803  0782  0021               	movlb	1	; select bank1
 14804  0783  00A9               	movwf	(_RF_Data^(0+128)+9)
 14805                           
 14806                           ;RF_Control_B1.c: 169: RF_Data[10]=Product->Data[10];
 14807  0784  0020               	movlb	0	; select bank0
 14808  0785  086E               	movf	_Product,w
 14809  0786  0086               	movwf	6
 14810  0787  3001               	movlw	1	; select bank2/3
 14811  0788  0087               	movwf	7
 14812  0789  3001               	movlw	1	; select bank2/3
 14813  078A  3F4A               	moviw [10]fsr1
 14814  078B  0021               	movlb	1	; select bank1
 14815  078C  00AA               	movwf	(_RF_Data^(0+128)+10)
 14816                           
 14817                           ;RF_Control_B1.c: 170: RF_Data[11]=Product->Data[11];
 14818  078D  0020               	movlb	0	; select bank0
 14819  078E  086E               	movf	_Product,w
 14820  078F  0086               	movwf	6
 14821  0790  3001               	movlw	1	; select bank2/3
 14822  0791  0087               	movwf	7
 14823  0792  3001               	movlw	1	; select bank2/3
 14824  0793  3F4B               	moviw [11]fsr1
 14825  0794  0021               	movlb	1	; select bank1
 14826  0795  00AB               	movwf	(_RF_Data^(0+128)+11)
 14827                           
 14828                           ;RF_Control_B1.c: 171: RF_Data[12]=Product->Data[12];
 14829  0796  0020               	movlb	0	; select bank0
 14830  0797  086E               	movf	_Product,w
 14831  0798  0086               	movwf	6
 14832  0799  3001               	movlw	1	; select bank2/3
 14833  079A  0087               	movwf	7
 14834  079B  3001               	movlw	1	; select bank2/3
 14835  079C  3F4C               	moviw [12]fsr1
 14836  079D  0021               	movlb	1	; select bank1
 14837  079E  00AC               	movwf	(_RF_Data^(0+128)+12)
 14838                           
 14839                           ;RF_Control_B1.c: 172: RF_Data[13]=Product->Data[13];
 14840  079F  0020               	movlb	0	; select bank0
 14841  07A0  086E               	movf	_Product,w
 14842  07A1  0086               	movwf	6
 14843  07A2  3001               	movlw	1	; select bank2/3
 14844  07A3  0087               	movwf	7
 14845  07A4  3001               	movlw	1	; select bank2/3
 14846  07A5  3F4D               	moviw [13]fsr1
 14847  07A6  0021               	movlb	1	; select bank1
 14848  07A7  00AD               	movwf	(_RF_Data^(0+128)+13)
 14849                           
 14850                           ;RF_Control_B1.c: 173: RF_Data[14]=Product->Data[14];
 14851  07A8  0020               	movlb	0	; select bank0
 14852  07A9  086E               	movf	_Product,w
 14853  07AA  0086               	movwf	6
 14854  07AB  3001               	movlw	1	; select bank2/3
 14855  07AC  0087               	movwf	7
 14856  07AD  3001               	movlw	1	; select bank2/3
 14857  07AE  3F4E               	moviw [14]fsr1
 14858  07AF  0021               	movlb	1	; select bank1
 14859  07B0  00AE               	movwf	(_RF_Data^(0+128)+14)
 14860                           
 14861                           ;RF_Control_B1.c: 174: RF_Data[15]=Product->Data[15];
 14862  07B1  0020               	movlb	0	; select bank0
 14863  07B2  086E               	movf	_Product,w
 14864  07B3  0086               	movwf	6
 14865  07B4  3001               	movlw	1	; select bank2/3
 14866  07B5  0087               	movwf	7
 14867  07B6  3001               	movlw	1	; select bank2/3
 14868  07B7  3F4F               	moviw [15]fsr1
 14869  07B8  0021               	movlb	1	; select bank1
 14870  07B9  00AF               	movwf	(_RF_Data^(0+128)+15)
 14871                           
 14872                           ;RF_Control_B1.c: 175: RF_Data[16]=Product->Data[16];
 14873  07BA  0020               	movlb	0	; select bank0
 14874  07BB  086E               	movf	_Product,w
 14875  07BC  0086               	movwf	6
 14876  07BD  3001               	movlw	1	; select bank2/3
 14877  07BE  0087               	movwf	7
 14878  07BF  3001               	movlw	1	; select bank2/3
 14879  07C0  3F50               	moviw [16]fsr1
 14880  07C1  0021               	movlb	1	; select bank1
 14881  07C2  00B0               	movwf	(_RF_Data^(0+128)+16)
 14882                           
 14883                           ;RF_Control_B1.c: 176: RF_Data[17]=Product->Data[17];
 14884  07C3  0020               	movlb	0	; select bank0
 14885  07C4  086E               	movf	_Product,w
 14886  07C5  0086               	movwf	6
 14887  07C6  3001               	movlw	1	; select bank2/3
 14888  07C7  0087               	movwf	7
 14889  07C8  3001               	movlw	1	; select bank2/3
 14890  07C9  3F51               	moviw [17]fsr1
 14891  07CA  0021               	movlb	1	; select bank1
 14892  07CB  00B1               	movwf	(_RF_Data^(0+128)+17)
 14893                           
 14894                           ;RF_Control_B1.c: 177: RF_Data[18]=Product->Data[18];
 14895  07CC  0020               	movlb	0	; select bank0
 14896  07CD  086E               	movf	_Product,w
 14897  07CE  0086               	movwf	6
 14898  07CF  3001               	movlw	1	; select bank2/3
 14899  07D0  0087               	movwf	7
 14900  07D1  3001               	movlw	1	; select bank2/3
 14901  07D2  3F52               	moviw [18]fsr1
 14902  07D3  0021               	movlb	1	; select bank1
 14903  07D4  00B2               	movwf	(_RF_Data^(0+128)+18)
 14904                           
 14905                           ;RF_Control_B1.c: 178: RF_Data[19]=Product->Data[19];
 14906  07D5  0020               	movlb	0	; select bank0
 14907  07D6  086E               	movf	_Product,w
 14908  07D7  0086               	movwf	6
 14909  07D8  3001               	movlw	1	; select bank2/3
 14910  07D9  0087               	movwf	7
 14911  07DA  3001               	movlw	1	; select bank2/3
 14912  07DB  3F53               	moviw [19]fsr1
 14913  07DC  0021               	movlb	1	; select bank1
 14914  07DD  00B3               	movwf	(_RF_Data^(0+128)+19)
 14915                           
 14916                           ;RF_Control_B1.c: 179: RF_Data[20]=210;
 14917  07DE  30D2               	movlw	210
 14918  07DF  0020               	movlb	0	; select bank0
 14919  07E0  00A2               	movwf	??_setTxData
 14920  07E1  0822               	movf	??_setTxData,w
 14921  07E2  0021               	movlb	1	; select bank1
 14922  07E3  00B4               	movwf	(_RF_Data^(0+128)+20)
 14923  07E4  0008               	return
 14924  07E5                     __end_of_setTxData:	
 14925                           
 14926                           	psect	text92
 14927  1988                     __ptext92:	
 14928 ;; *************** function _RfPointSelect *****************
 14929 ;; Defined at:
 14930 ;;		line 7 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
 14931 ;; Parameters:    Size  Location     Type
 14932 ;;  rf              1    wreg     unsigned char 
 14933 ;; Auto vars:     Size  Location     Type
 14934 ;;  rf              1    1[BANK0 ] unsigned char 
 14935 ;; Return value:  Size  Location     Type
 14936 ;;		None               void
 14937 ;; Registers used:
 14938 ;;		wreg
 14939 ;; Tracked objects:
 14940 ;;		On entry : 0/0
 14941 ;;		On exit  : 0/0
 14942 ;;		Unchanged: 0/0
 14943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14944 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14945 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14946 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14947 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14948 ;;Total ram usage:        2 bytes
 14949 ;; Hardware stack levels used:    1
 14950 ;; Hardware stack levels required when called:    4
 14951 ;; This function calls:
 14952 ;;		Nothing
 14953 ;; This function is called by:
 14954 ;;		_setRF_Learn
 14955 ;;		_setRF_RxStatus
 14956 ;;		_setRF_Main
 14957 ;;		_setTxData
 14958 ;;		_setRF_Enable
 14959 ;;		_RF_RxDisable
 14960 ;;		_getRxData
 14961 ;;		_setLog_Code
 14962 ;;		_setControl_Lights_Table
 14963 ;; This function uses a non-reentrant model
 14964 ;;
 14965                           
 14966                           
 14967                           ;psect for function _RfPointSelect
 14968  1988                     _RfPointSelect:	
 14969                           
 14970                           ;incstack = 0
 14971                           ; Regs used in _RfPointSelect: [wreg]
 14972                           ;RfPointSelect@rf stored from wreg
 14973  1988  0020               	movlb	0	; select bank0
 14974  1989  00A1               	movwf	RfPointSelect@rf
 14975                           
 14976                           ;RF_Control_B1.c: 10: if(rf == 1)
 14977  198A  0821               	movf	RfPointSelect@rf,w
 14978  198B  3A01               	xorlw	1
 14979  198C  1D03               	skipz
 14980  198D  0008               	return
 14981                           
 14982                           ;RF_Control_B1.c: 11: {
 14983                           ;RF_Control_B1.c: 12: RF=&RF1;
 14984  198E  30E5               	movlw	_RF1& (0+255)
 14985  198F  00A0               	movwf	??_RfPointSelect
 14986  1990  0820               	movf	??_RfPointSelect,w
 14987  1991  00F7               	movwf	_RF
 14988  1992  0008               	return
 14989  1993                     __end_of_RfPointSelect:	
 14990                           
 14991                           	psect	text93
 14992  1A4E                     __ptext93:	
 14993 ;; *************** function _setSw_Status *****************
 14994 ;; Defined at:
 14995 ;;		line 106 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Switch_B1.c"
 14996 ;; Parameters:    Size  Location     Type
 14997 ;;  sw              1    wreg     unsigned char 
 14998 ;;  command         1    2[BANK0 ] unsigned char 
 14999 ;; Auto vars:     Size  Location     Type
 15000 ;;  sw              1    3[BANK0 ] unsigned char 
 15001 ;; Return value:  Size  Location     Type
 15002 ;;		None               void
 15003 ;; Registers used:
 15004 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15005 ;; Tracked objects:
 15006 ;;		On entry : 0/0
 15007 ;;		On exit  : 0/0
 15008 ;;		Unchanged: 0/0
 15009 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15010 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15011 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15013 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15014 ;;Total ram usage:        2 bytes
 15015 ;; Hardware stack levels used:    1
 15016 ;; Hardware stack levels required when called:    5
 15017 ;; This function calls:
 15018 ;;		_SwPointSelect
 15019 ;; This function is called by:
 15020 ;;		_DlyOff_Main
 15021 ;;		_setDimmerLights_ERROR
 15022 ;;		_setControl_Lights_Table
 15023 ;;		_setRFSW_Control
 15024 ;; This function uses a non-reentrant model
 15025 ;;
 15026                           
 15027                           
 15028                           ;psect for function _setSw_Status
 15029  1A4E                     _setSw_Status:	
 15030                           
 15031                           ;incstack = 0
 15032                           ; Regs used in _setSw_Status: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15033                           ;setSw_Status@sw stored from wreg
 15034  1A4E  0020               	movlb	0	; select bank0
 15035  1A4F  00A3               	movwf	setSw_Status@sw
 15036                           
 15037                           ;Switch_B1.c: 108: SwPointSelect(sw);
 15038  1A50  0823               	movf	setSw_Status@sw,w
 15039  1A51  319B  2308         	fcall	_SwPointSelect
 15040                           
 15041                           ;Switch_B1.c: 109: Sw->Status=command;
 15042  1A53  0878               	movf	_Sw,w
 15043  1A54  0086               	movwf	6
 15044  1A55  3001               	movlw	1	; select bank2/3
 15045  1A56  0087               	movwf	7
 15046  1A57  0020               	movlb	0	; select bank0
 15047  1A58  0822               	movf	setSw_Status@command,w
 15048  1A59  1301               	bcf	1,6
 15049  1A5A  1D03               	skipz
 15050  1A5B  1701               	bsf	1,6
 15051  1A5C  0008               	return
 15052  1A5D                     __end_of_setSw_Status:	
 15053                           
 15054                           	psect	text94
 15055  1B08                     __ptext94:	
 15056 ;; *************** function _SwPointSelect *****************
 15057 ;; Defined at:
 15058 ;;		line 16 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Switch_B1.c"
 15059 ;; Parameters:    Size  Location     Type
 15060 ;;  sw              1    wreg     unsigned char 
 15061 ;; Auto vars:     Size  Location     Type
 15062 ;;  sw              1    1[BANK0 ] unsigned char 
 15063 ;; Return value:  Size  Location     Type
 15064 ;;		None               void
 15065 ;; Registers used:
 15066 ;;		wreg
 15067 ;; Tracked objects:
 15068 ;;		On entry : 0/0
 15069 ;;		On exit  : 0/0
 15070 ;;		Unchanged: 0/0
 15071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15073 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15074 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15075 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15076 ;;Total ram usage:        2 bytes
 15077 ;; Hardware stack levels used:    1
 15078 ;; Hardware stack levels required when called:    4
 15079 ;; This function calls:
 15080 ;;		Nothing
 15081 ;; This function is called by:
 15082 ;;		_setSw_Enable
 15083 ;;		_setSw_Status
 15084 ;;		_setSw_Main
 15085 ;;		_Sw_Detect
 15086 ;; This function uses a non-reentrant model
 15087 ;;
 15088                           
 15089                           
 15090                           ;psect for function _SwPointSelect
 15091  1B08                     _SwPointSelect:	
 15092                           
 15093                           ;incstack = 0
 15094                           ; Regs used in _SwPointSelect: [wreg]
 15095                           ;SwPointSelect@sw stored from wreg
 15096  1B08  0020               	movlb	0	; select bank0
 15097  1B09  00A1               	movwf	SwPointSelect@sw
 15098                           
 15099                           ;Switch_B1.c: 19: if(sw == 1)
 15100  1B0A  0821               	movf	SwPointSelect@sw,w
 15101  1B0B  3A01               	xorlw	1
 15102  1B0C  1D03               	skipz
 15103  1B0D  2B13               	goto	l8283
 15104                           
 15105                           ;Switch_B1.c: 20: {
 15106                           ;Switch_B1.c: 21: Sw=&Sw1;
 15107  1B0E  3056               	movlw	_Sw1& (0+255)
 15108  1B0F  00A0               	movwf	??_SwPointSelect
 15109  1B10  0820               	movf	??_SwPointSelect,w
 15110  1B11  00F8               	movwf	_Sw
 15111                           
 15112                           ;Switch_B1.c: 22: }
 15113  1B12  0008               	return
 15114  1B13                     l8283:	
 15115                           
 15116                           ;Switch_B1.c: 25: else if(sw == 2)
 15117  1B13  0821               	movf	SwPointSelect@sw,w
 15118  1B14  3A02               	xorlw	2
 15119  1B15  1D03               	skipz
 15120  1B16  0008               	return
 15121                           
 15122                           ;Switch_B1.c: 26: {
 15123                           ;Switch_B1.c: 27: Sw=&Sw2;
 15124  1B17  305F               	movlw	_Sw2& (0+255)
 15125  1B18  00A0               	movwf	??_SwPointSelect
 15126  1B19  0820               	movf	??_SwPointSelect,w
 15127  1B1A  00F8               	movwf	_Sw
 15128  1B1B  0008               	return
 15129  1B1C                     __end_of_SwPointSelect:	
 15130                           
 15131                           	psect	text95
 15132  1560                     __ptext95:	
 15133 ;; *************** function _setRF_DimmerLights *****************
 15134 ;; Defined at:
 15135 ;;		line 445 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
 15136 ;; Parameters:    Size  Location     Type
 15137 ;;  lights          1    wreg     unsigned char 
 15138 ;;  on              1   61[BANK0 ] unsigned char 
 15139 ;; Auto vars:     Size  Location     Type
 15140 ;;  lights          1   65[BANK0 ] unsigned char 
 15141 ;;  status          1   64[BANK0 ] unsigned char 
 15142 ;; Return value:  Size  Location     Type
 15143 ;;		None               void
 15144 ;; Registers used:
 15145 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15146 ;; Tracked objects:
 15147 ;;		On entry : 0/0
 15148 ;;		On exit  : 0/0
 15149 ;;		Unchanged: 0/0
 15150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15151 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15152 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15153 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15154 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15155 ;;Total ram usage:        5 bytes
 15156 ;; Hardware stack levels used:    1
 15157 ;; Hardware stack levels required when called:    7
 15158 ;; This function calls:
 15159 ;;		_setPercentValue
 15160 ;; This function is called by:
 15161 ;;		_DlyOff_Main
 15162 ;;		_setDimmerLights_Adj
 15163 ;;		_setRFSW_Control
 15164 ;;		_Sw_DimmerOnFunc
 15165 ;;		_Sw_DimmerOffFunc
 15166 ;; This function uses a non-reentrant model
 15167 ;;
 15168                           
 15169                           
 15170                           ;psect for function _setRF_DimmerLights
 15171  1560                     _setRF_DimmerLights:	
 15172                           
 15173                           ;incstack = 0
 15174                           ; Regs used in _setRF_DimmerLights: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15175                           ;setRF_DimmerLights@lights stored from wreg
 15176  1560  0020               	movlb	0	; select bank0
 15177  1561  00E1               	movwf	setRF_DimmerLights@lights
 15178                           
 15179                           ;RF_Control_B1.c: 447: char status;
 15180                           ;RF_Control_B1.c: 448: status=1;
 15181  1562  01E0               	clrf	setRF_DimmerLights@status
 15182  1563  0AE0               	incf	setRF_DimmerLights@status,f
 15183                           
 15184                           ;RF_Control_B1.c: 449: status<<=(lights-1);
 15185  1564  0861               	movf	setRF_DimmerLights@lights,w
 15186  1565  3EFF               	addlw	-1
 15187  1566  0A89               	incf	9,f
 15188  1567  2D6A               	goto	u8140
 15189  1568                     u8145:	
 15190  1568  1003               	clrc
 15191  1569  0DE0               	rlf	setRF_DimmerLights@status,f
 15192  156A                     u8140:	
 15193  156A  3EFF               	addlw	-1
 15194  156B  1D03               	skipz
 15195  156C  2D68               	goto	u8145
 15196                           
 15197                           ;RF_Control_B1.c: 450: Product->Data[11]=lights;
 15198  156D  0861               	movf	setRF_DimmerLights@lights,w
 15199  156E  00DE               	movwf	??_setRF_DimmerLights
 15200  156F  086E               	movf	_Product,w
 15201  1570  3E0B               	addlw	11
 15202  1571  0086               	movwf	6
 15203  1572  3001               	movlw	1	; select bank2/3
 15204  1573  0087               	movwf	7
 15205  1574  085E               	movf	??_setRF_DimmerLights,w
 15206  1575  0081               	movwf	1
 15207                           
 15208                           ;RF_Control_B1.c: 453: Product->Data[(20+lights)]=setPercentValue(((char)((100-55)*1.5))
      +                          );
 15209  1576  3043               	movlw	67
 15210  1577  3191  2190  3195   	fcall	_setPercentValue
 15211  157A  0020               	movlb	0	; select bank0
 15212  157B  00DE               	movwf	??_setRF_DimmerLights
 15213  157C  0861               	movf	setRF_DimmerLights@lights,w
 15214  157D  3E14               	addlw	20
 15215  157E  076E               	addwf	_Product,w
 15216  157F  00DF               	movwf	??_setRF_DimmerLights+1
 15217  1580  085F               	movf	??_setRF_DimmerLights+1,w
 15218  1581  0086               	movwf	6
 15219  1582  3001               	movlw	1	; select bank2/3
 15220  1583  0087               	movwf	7
 15221  1584  085E               	movf	??_setRF_DimmerLights,w
 15222  1585  0081               	movwf	1
 15223                           
 15224                           ;RF_Control_B1.c: 456: Product->Data[9]=Product->Data[20+lights];
 15225  1586  0861               	movf	setRF_DimmerLights@lights,w
 15226  1587  3E14               	addlw	20
 15227  1588  076E               	addwf	_Product,w
 15228  1589  00DE               	movwf	??_setRF_DimmerLights
 15229  158A  085E               	movf	??_setRF_DimmerLights,w
 15230  158B  0086               	movwf	6
 15231  158C  3001               	movlw	1	; select bank2/3
 15232  158D  0087               	movwf	7
 15233  158E  0801               	movf	1,w
 15234  158F  00DF               	movwf	??_setRF_DimmerLights+1
 15235  1590  086E               	movf	_Product,w
 15236  1591  3E09               	addlw	9
 15237  1592  0086               	movwf	6
 15238  1593  3001               	movlw	1	; select bank2/3
 15239  1594  0087               	movwf	7
 15240  1595  085F               	movf	??_setRF_DimmerLights+1,w
 15241  1596  0081               	movwf	1
 15242                           
 15243                           ;RF_Control_B1.c: 457: Product->Data[17]=Product->Data[26+lights];
 15244  1597  0861               	movf	setRF_DimmerLights@lights,w
 15245  1598  3E1A               	addlw	26
 15246  1599  076E               	addwf	_Product,w
 15247  159A  00DE               	movwf	??_setRF_DimmerLights
 15248  159B  085E               	movf	??_setRF_DimmerLights,w
 15249  159C  0086               	movwf	6
 15250  159D  3001               	movlw	1	; select bank2/3
 15251  159E  0087               	movwf	7
 15252  159F  0801               	movf	1,w
 15253  15A0  00DF               	movwf	??_setRF_DimmerLights+1
 15254  15A1  086E               	movf	_Product,w
 15255  15A2  3E11               	addlw	17
 15256  15A3  0086               	movwf	6
 15257  15A4  3001               	movlw	1	; select bank2/3
 15258  15A5  0087               	movwf	7
 15259  15A6  085F               	movf	??_setRF_DimmerLights+1,w
 15260  15A7  0081               	movwf	1
 15261                           
 15262                           ;RF_Control_B1.c: 458: if(on)
 15263  15A8  085D               	movf	setRF_DimmerLights@on,w
 15264  15A9  1903               	btfsc	3,2
 15265  15AA  2DBB               	goto	l8341
 15266                           
 15267                           ;RF_Control_B1.c: 459: {
 15268                           ;RF_Control_B1.c: 460: Product->Data[15]=(Product->Data[15]|status);
 15269  15AB  086E               	movf	_Product,w
 15270  15AC  3E0F               	addlw	15
 15271  15AD  0086               	movwf	6
 15272  15AE  3001               	movlw	1	; select bank2/3
 15273  15AF  0087               	movwf	7
 15274  15B0  0801               	movf	1,w
 15275  15B1  0460               	iorwf	setRF_DimmerLights@status,w
 15276  15B2  00DE               	movwf	??_setRF_DimmerLights
 15277  15B3  086E               	movf	_Product,w
 15278  15B4  3E0F               	addlw	15
 15279  15B5  0086               	movwf	6
 15280  15B6  3001               	movlw	1	; select bank2/3
 15281  15B7  0087               	movwf	7
 15282  15B8  085E               	movf	??_setRF_DimmerLights,w
 15283  15B9  0081               	movwf	1
 15284                           
 15285                           ;RF_Control_B1.c: 461: }
 15286  15BA  0008               	return
 15287  15BB                     l8341:	
 15288                           
 15289                           ;RF_Control_B1.c: 462: else
 15290                           ;RF_Control_B1.c: 463: {
 15291                           ;RF_Control_B1.c: 464: Product->Data[15]=(Product->Data[15]&(~status));
 15292  15BB  086E               	movf	_Product,w
 15293  15BC  3E0F               	addlw	15
 15294  15BD  0086               	movwf	6
 15295  15BE  3001               	movlw	1	; select bank2/3
 15296  15BF  0087               	movwf	7
 15297  15C0  0960               	comf	setRF_DimmerLights@status,w
 15298  15C1  0501               	andwf	1,w
 15299  15C2  00DE               	movwf	??_setRF_DimmerLights
 15300  15C3  086E               	movf	_Product,w
 15301  15C4  3E0F               	addlw	15
 15302  15C5  0086               	movwf	6
 15303  15C6  3001               	movlw	1	; select bank2/3
 15304  15C7  0087               	movwf	7
 15305  15C8  085E               	movf	??_setRF_DimmerLights,w
 15306  15C9  0081               	movwf	1
 15307  15CA  0008               	return
 15308  15CB                     __end_of_setRF_DimmerLights:	
 15309                           
 15310                           	psect	text96
 15311  1190                     __ptext96:	
 15312 ;; *************** function _setPercentValue *****************
 15313 ;; Defined at:
 15314 ;;		line 505 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 15315 ;; Parameters:    Size  Location     Type
 15316 ;;  value           1    wreg     unsigned char 
 15317 ;; Auto vars:     Size  Location     Type
 15318 ;;  value           1   57[BANK0 ] unsigned char 
 15319 ;;  i               3   58[BANK0 ] float 
 15320 ;; Return value:  Size  Location     Type
 15321 ;;                  1    wreg      unsigned char 
 15322 ;; Registers used:
 15323 ;;		wreg, status,2, status,0, pclath, cstack
 15324 ;; Tracked objects:
 15325 ;;		On entry : 0/0
 15326 ;;		On exit  : 0/0
 15327 ;;		Unchanged: 0/0
 15328 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15329 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15330 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15332 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15333 ;;Total ram usage:        4 bytes
 15334 ;; Hardware stack levels used:    1
 15335 ;; Hardware stack levels required when called:    6
 15336 ;; This function calls:
 15337 ;;		___awtoft
 15338 ;;		___ftdiv
 15339 ;;		___fttol
 15340 ;; This function is called by:
 15341 ;;		_Flash_Memory_Initialization
 15342 ;;		_setRF_DimmerLights
 15343 ;; This function uses a non-reentrant model
 15344 ;;
 15345                           
 15346                           
 15347                           ;psect for function _setPercentValue
 15348  1190                     _setPercentValue:	
 15349                           
 15350                           ;incstack = 0
 15351                           ; Regs used in _setPercentValue: [wreg+status,2+status,0+pclath+cstack]
 15352                           ;setPercentValue@value stored from wreg
 15353  1190  0020               	movlb	0	; select bank0
 15354  1191  00D9               	movwf	setPercentValue@value
 15355                           
 15356                           ;Dimmer_B1.c: 508: float i=((char)((100-20)*1.5))-((char)((100-55)*1.5));
 15357  1192  3000               	movlw	0
 15358  1193  00DA               	movwf	setPercentValue@i
 15359  1194  3054               	movlw	84
 15360  1195  00DB               	movwf	setPercentValue@i+1
 15361  1196  3042               	movlw	66
 15362  1197  00DC               	movwf	setPercentValue@i+2
 15363                           
 15364                           ;Dimmer_B1.c: 509: i/=100;
 15365  1198  3000               	movlw	0
 15366  1199  00AE               	movwf	___ftdiv@f2
 15367  119A  30C8               	movlw	200
 15368  119B  00AF               	movwf	___ftdiv@f2+1
 15369  119C  3042               	movlw	66
 15370  119D  00B0               	movwf	___ftdiv@f2+2
 15371  119E  085A               	movf	setPercentValue@i,w
 15372  119F  00B1               	movwf	___ftdiv@f1
 15373  11A0  085B               	movf	setPercentValue@i+1,w
 15374  11A1  00B2               	movwf	___ftdiv@f1+1
 15375  11A2  085C               	movf	setPercentValue@i+2,w
 15376  11A3  00B3               	movwf	___ftdiv@f1+2
 15377  11A4  318C  24C4  3191   	fcall	___ftdiv
 15378  11A7  0020               	movlb	0	; select bank0
 15379  11A8  082E               	movf	?___ftdiv,w
 15380  11A9  00DA               	movwf	setPercentValue@i
 15381  11AA  082F               	movf	?___ftdiv+1,w
 15382  11AB  00DB               	movwf	setPercentValue@i+1
 15383  11AC  0830               	movf	?___ftdiv+2,w
 15384  11AD  00DC               	movwf	setPercentValue@i+2
 15385                           
 15386                           ;Dimmer_B1.c: 510: return (100-(char)((value-((char)((100-55)*1.5)))/i));
 15387  11AE  0859               	movf	setPercentValue@value,w
 15388  11AF  3EBD               	addlw	189
 15389  11B0  00A8               	movwf	___awtoft@c
 15390  11B1  30FF               	movlw	255
 15391  11B2  1803               	skipnc
 15392  11B3  3000               	movlw	0
 15393  11B4  00A9               	movwf	___awtoft@c+1
 15394  11B5  319D  2502  3191   	fcall	___awtoft
 15395  11B8  0020               	movlb	0	; select bank0
 15396  11B9  0828               	movf	?___awtoft,w
 15397  11BA  00B1               	movwf	___ftdiv@f1
 15398  11BB  0829               	movf	?___awtoft+1,w
 15399  11BC  00B2               	movwf	___ftdiv@f1+1
 15400  11BD  082A               	movf	?___awtoft+2,w
 15401  11BE  00B3               	movwf	___ftdiv@f1+2
 15402  11BF  085A               	movf	setPercentValue@i,w
 15403  11C0  00AE               	movwf	___ftdiv@f2
 15404  11C1  085B               	movf	setPercentValue@i+1,w
 15405  11C2  00AF               	movwf	___ftdiv@f2+1
 15406  11C3  085C               	movf	setPercentValue@i+2,w
 15407  11C4  00B0               	movwf	___ftdiv@f2+2
 15408  11C5  318C  24C4  3191   	fcall	___ftdiv
 15409  11C8  0020               	movlb	0	; select bank0
 15410  11C9  082E               	movf	?___ftdiv,w
 15411  11CA  00CB               	movwf	___fttol@f1
 15412  11CB  082F               	movf	?___ftdiv+1,w
 15413  11CC  00CC               	movwf	___fttol@f1+1
 15414  11CD  0830               	movf	?___ftdiv+2,w
 15415  11CE  00CD               	movwf	___fttol@f1+2
 15416  11CF  3189  215E         	fcall	___fttol
 15417  11D1  0020               	movlb	0	; select bank0
 15418  11D2  034B               	decf	?___fttol,w
 15419  11D3  3AFF               	xorlw	255
 15420  11D4  3E64               	addlw	100
 15421  11D5  0008               	return
 15422  11D6                     __end_of_setPercentValue:	
 15423                           
 15424                           	psect	text97
 15425  095E                     __ptext97:	
 15426 ;; *************** function ___fttol *****************
 15427 ;; Defined at:
 15428 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\fttol.c"
 15429 ;; Parameters:    Size  Location     Type
 15430 ;;  f1              3   43[BANK0 ] float 
 15431 ;; Auto vars:     Size  Location     Type
 15432 ;;  lval            4   52[BANK0 ] unsigned long 
 15433 ;;  exp1            1   56[BANK0 ] unsigned char 
 15434 ;;  sign1           1   51[BANK0 ] unsigned char 
 15435 ;; Return value:  Size  Location     Type
 15436 ;;                  4   43[BANK0 ] long 
 15437 ;; Registers used:
 15438 ;;		wreg, status,2, status,0
 15439 ;; Tracked objects:
 15440 ;;		On entry : 0/0
 15441 ;;		On exit  : 0/0
 15442 ;;		Unchanged: 0/0
 15443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15444 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15445 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15446 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15447 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15448 ;;Total ram usage:       14 bytes
 15449 ;; Hardware stack levels used:    1
 15450 ;; Hardware stack levels required when called:    4
 15451 ;; This function calls:
 15452 ;;		Nothing
 15453 ;; This function is called by:
 15454 ;;		_getPercentValue
 15455 ;;		_setPercentValue
 15456 ;; This function uses a non-reentrant model
 15457 ;;
 15458                           
 15459                           
 15460                           ;psect for function ___fttol
 15461  095E                     ___fttol:	
 15462                           
 15463                           ;incstack = 0
 15464                           ; Regs used in ___fttol: [wreg+status,2+status,0]
 15465  095E  0020               	movlb	0	; select bank0
 15466  095F  084B               	movf	___fttol@f1,w
 15467  0960  00CF               	movwf	??___fttol
 15468  0961  084C               	movf	___fttol@f1+1,w
 15469  0962  00D0               	movwf	??___fttol+1
 15470  0963  084D               	movf	___fttol@f1+2,w
 15471  0964  00D1               	movwf	??___fttol+2
 15472  0965  1003               	clrc
 15473  0966  0D50               	rlf	??___fttol+1,w
 15474  0967  0D51               	rlf	??___fttol+2,w
 15475  0968  00D2               	movwf	??___fttol+3
 15476  0969  0852               	movf	??___fttol+3,w
 15477  096A  00D8               	movwf	___fttol@exp1
 15478  096B  08D8               	movf	___fttol@exp1,f
 15479  096C  1D03               	skipz
 15480  096D  2977               	goto	l8155
 15481  096E  3000               	movlw	0
 15482  096F  00CE               	movwf	?___fttol+3
 15483  0970  3000               	movlw	0
 15484  0971  00CD               	movwf	?___fttol+2
 15485  0972  3000               	movlw	0
 15486  0973  00CC               	movwf	?___fttol+1
 15487  0974  3000               	movlw	0
 15488  0975  00CB               	movwf	?___fttol
 15489  0976  0008               	return
 15490  0977                     l8155:	
 15491  0977  084B               	movf	___fttol@f1,w
 15492  0978  00CF               	movwf	??___fttol
 15493  0979  084C               	movf	___fttol@f1+1,w
 15494  097A  00D0               	movwf	??___fttol+1
 15495  097B  084D               	movf	___fttol@f1+2,w
 15496  097C  00D1               	movwf	??___fttol+2
 15497  097D  3017               	movlw	23
 15498  097E                     u7795:	
 15499  097E  36D1               	lsrf	??___fttol+2,f
 15500  097F  0CD0               	rrf	??___fttol+1,f
 15501  0980  0CCF               	rrf	??___fttol,f
 15502  0981  0B89               	decfsz	9,f
 15503  0982  297E               	goto	u7795
 15504  0983  084F               	movf	??___fttol,w
 15505  0984  00D2               	movwf	??___fttol+3
 15506  0985  0852               	movf	??___fttol+3,w
 15507  0986  00D3               	movwf	___fttol@sign1
 15508  0987  17CC               	bsf	___fttol@f1+1,7
 15509  0988  30FF               	movlw	255
 15510  0989  05CB               	andwf	___fttol@f1,f
 15511  098A  30FF               	movlw	255
 15512  098B  05CC               	andwf	___fttol@f1+1,f
 15513  098C  3000               	movlw	0
 15514  098D  05CD               	andwf	___fttol@f1+2,f
 15515  098E  084B               	movf	___fttol@f1,w
 15516  098F  00D4               	movwf	___fttol@lval
 15517  0990  084C               	movf	___fttol@f1+1,w
 15518  0991  00D5               	movwf	___fttol@lval+1
 15519  0992  084D               	movf	___fttol@f1+2,w
 15520  0993  00D6               	movwf	___fttol@lval+2
 15521  0994  01D7               	clrf	___fttol@lval+3
 15522  0995  308E               	movlw	142
 15523  0996  02D8               	subwf	___fttol@exp1,f
 15524  0997  1FD8               	btfss	___fttol@exp1,7
 15525  0998  29B5               	goto	l8175
 15526  0999  0858               	movf	___fttol@exp1,w
 15527  099A  3A80               	xorlw	128
 15528  099B  3E8F               	addlw	143
 15529  099C  1803               	skipnc
 15530  099D  29A7               	goto	l8173
 15531  099E  3000               	movlw	0
 15532  099F  00CE               	movwf	?___fttol+3
 15533  09A0  3000               	movlw	0
 15534  09A1  00CD               	movwf	?___fttol+2
 15535  09A2  3000               	movlw	0
 15536  09A3  00CC               	movwf	?___fttol+1
 15537  09A4  3000               	movlw	0
 15538  09A5  00CB               	movwf	?___fttol
 15539  09A6  0008               	return
 15540  09A7                     l8173:	
 15541  09A7  3001               	movlw	1
 15542  09A8                     u7825:	
 15543  09A8  36D7               	lsrf	___fttol@lval+3,f
 15544  09A9  0CD6               	rrf	___fttol@lval+2,f
 15545  09AA  0CD5               	rrf	___fttol@lval+1,f
 15546  09AB  0CD4               	rrf	___fttol@lval,f
 15547  09AC  0B89               	decfsz	9,f
 15548  09AD  29A8               	goto	u7825
 15549  09AE  3001               	movlw	1
 15550  09AF  00CF               	movwf	??___fttol
 15551  09B0  084F               	movf	??___fttol,w
 15552  09B1  07D8               	addwf	___fttol@exp1,f
 15553  09B2  1903               	btfsc	3,2
 15554  09B3  29CE               	goto	l8185
 15555  09B4  29A7               	goto	l8173
 15556  09B5                     l8175:	
 15557  09B5  3018               	movlw	24
 15558  09B6  0258               	subwf	___fttol@exp1,w
 15559  09B7  1C03               	skipc
 15560  09B8  29CB               	goto	l8183
 15561  09B9  3000               	movlw	0
 15562  09BA  00CE               	movwf	?___fttol+3
 15563  09BB  3000               	movlw	0
 15564  09BC  00CD               	movwf	?___fttol+2
 15565  09BD  3000               	movlw	0
 15566  09BE  00CC               	movwf	?___fttol+1
 15567  09BF  3000               	movlw	0
 15568  09C0  00CB               	movwf	?___fttol
 15569  09C1  0008               	return
 15570  09C2                     l8181:	
 15571  09C2  3001               	movlw	1
 15572  09C3                     u7855:	
 15573  09C3  35D4               	lslf	___fttol@lval,f
 15574  09C4  0DD5               	rlf	___fttol@lval+1,f
 15575  09C5  0DD6               	rlf	___fttol@lval+2,f
 15576  09C6  0DD7               	rlf	___fttol@lval+3,f
 15577  09C7  0B89               	decfsz	9,f
 15578  09C8  29C3               	goto	u7855
 15579  09C9  3001               	movlw	1
 15580  09CA  02D8               	subwf	___fttol@exp1,f
 15581  09CB                     l8183:	
 15582  09CB  08D8               	movf	___fttol@exp1,f
 15583  09CC  1D03               	skipz
 15584  09CD  29C2               	goto	l8181
 15585  09CE                     l8185:	
 15586  09CE  0853               	movf	___fttol@sign1,w
 15587  09CF  1903               	btfsc	3,2
 15588  09D0  29DC               	goto	l8189
 15589  09D1  09D4               	comf	___fttol@lval,f
 15590  09D2  09D5               	comf	___fttol@lval+1,f
 15591  09D3  09D6               	comf	___fttol@lval+2,f
 15592  09D4  09D7               	comf	___fttol@lval+3,f
 15593  09D5  0AD4               	incf	___fttol@lval,f
 15594  09D6  1903               	skipnz
 15595  09D7  0AD5               	incf	___fttol@lval+1,f
 15596  09D8  1903               	skipnz
 15597  09D9  0AD6               	incf	___fttol@lval+2,f
 15598  09DA  1903               	skipnz
 15599  09DB  0AD7               	incf	___fttol@lval+3,f
 15600  09DC                     l8189:	
 15601  09DC  0857               	movf	___fttol@lval+3,w
 15602  09DD  00CE               	movwf	?___fttol+3
 15603  09DE  0856               	movf	___fttol@lval+2,w
 15604  09DF  00CD               	movwf	?___fttol+2
 15605  09E0  0855               	movf	___fttol@lval+1,w
 15606  09E1  00CC               	movwf	?___fttol+1
 15607  09E2  0854               	movf	___fttol@lval,w
 15608  09E3  00CB               	movwf	?___fttol
 15609  09E4  0008               	return
 15610  09E5                     __end_of___fttol:	
 15611                           
 15612                           	psect	text98
 15613  0CC4                     __ptext98:	
 15614 ;; *************** function ___ftdiv *****************
 15615 ;; Defined at:
 15616 ;;		line 49 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic\ftdiv.c"
 15617 ;; Parameters:    Size  Location     Type
 15618 ;;  f2              3   14[BANK0 ] float 
 15619 ;;  f1              3   17[BANK0 ] float 
 15620 ;; Auto vars:     Size  Location     Type
 15621 ;;  f3              3   25[BANK0 ] float 
 15622 ;;  sign            1   29[BANK0 ] unsigned char 
 15623 ;;  exp             1   28[BANK0 ] unsigned char 
 15624 ;;  cntr            1   24[BANK0 ] unsigned char 
 15625 ;; Return value:  Size  Location     Type
 15626 ;;                  3   14[BANK0 ] float 
 15627 ;; Registers used:
 15628 ;;		wreg, status,2, status,0, pclath, cstack
 15629 ;; Tracked objects:
 15630 ;;		On entry : 0/0
 15631 ;;		On exit  : 0/0
 15632 ;;		Unchanged: 0/0
 15633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15634 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15635 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15636 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15637 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15638 ;;Total ram usage:       16 bytes
 15639 ;; Hardware stack levels used:    1
 15640 ;; Hardware stack levels required when called:    5
 15641 ;; This function calls:
 15642 ;;		___ftpack
 15643 ;; This function is called by:
 15644 ;;		_getPercentValue
 15645 ;;		_setPercentValue
 15646 ;; This function uses a non-reentrant model
 15647 ;;
 15648                           
 15649                           
 15650                           ;psect for function ___ftdiv
 15651  0CC4                     ___ftdiv:	
 15652                           
 15653                           ;incstack = 0
 15654                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
 15655  0CC4  0020               	movlb	0	; select bank0
 15656  0CC5  0831               	movf	___ftdiv@f1,w
 15657  0CC6  00B4               	movwf	??___ftdiv
 15658  0CC7  0832               	movf	___ftdiv@f1+1,w
 15659  0CC8  00B5               	movwf	??___ftdiv+1
 15660  0CC9  0833               	movf	___ftdiv@f1+2,w
 15661  0CCA  00B6               	movwf	??___ftdiv+2
 15662  0CCB  1003               	clrc
 15663  0CCC  0D35               	rlf	??___ftdiv+1,w
 15664  0CCD  0D36               	rlf	??___ftdiv+2,w
 15665  0CCE  00B7               	movwf	??___ftdiv+3
 15666  0CCF  0837               	movf	??___ftdiv+3,w
 15667  0CD0  00BC               	movwf	___ftdiv@exp
 15668  0CD1  08BC               	movf	___ftdiv@exp,f
 15669  0CD2  1D03               	skipz
 15670  0CD3  2CDB               	goto	l8063
 15671  0CD4  3000               	movlw	0
 15672  0CD5  00AE               	movwf	?___ftdiv
 15673  0CD6  3000               	movlw	0
 15674  0CD7  00AF               	movwf	?___ftdiv+1
 15675  0CD8  3000               	movlw	0
 15676  0CD9  00B0               	movwf	?___ftdiv+2
 15677  0CDA  0008               	return
 15678  0CDB                     l8063:	
 15679  0CDB  082E               	movf	___ftdiv@f2,w
 15680  0CDC  00B4               	movwf	??___ftdiv
 15681  0CDD  082F               	movf	___ftdiv@f2+1,w
 15682  0CDE  00B5               	movwf	??___ftdiv+1
 15683  0CDF  0830               	movf	___ftdiv@f2+2,w
 15684  0CE0  00B6               	movwf	??___ftdiv+2
 15685  0CE1  1003               	clrc
 15686  0CE2  0D35               	rlf	??___ftdiv+1,w
 15687  0CE3  0D36               	rlf	??___ftdiv+2,w
 15688  0CE4  00B7               	movwf	??___ftdiv+3
 15689  0CE5  0837               	movf	??___ftdiv+3,w
 15690  0CE6  00BD               	movwf	___ftdiv@sign
 15691  0CE7  08BD               	movf	___ftdiv@sign,f
 15692  0CE8  1D03               	skipz
 15693  0CE9  2CF1               	goto	l8069
 15694  0CEA  3000               	movlw	0
 15695  0CEB  00AE               	movwf	?___ftdiv
 15696  0CEC  3000               	movlw	0
 15697  0CED  00AF               	movwf	?___ftdiv+1
 15698  0CEE  3000               	movlw	0
 15699  0CEF  00B0               	movwf	?___ftdiv+2
 15700  0CF0  0008               	return
 15701  0CF1                     l8069:	
 15702  0CF1  3000               	movlw	0
 15703  0CF2  00B9               	movwf	___ftdiv@f3
 15704  0CF3  3000               	movlw	0
 15705  0CF4  00BA               	movwf	___ftdiv@f3+1
 15706  0CF5  3000               	movlw	0
 15707  0CF6  00BB               	movwf	___ftdiv@f3+2
 15708  0CF7  3089               	movlw	137
 15709  0CF8  073D               	addwf	___ftdiv@sign,w
 15710  0CF9  00B4               	movwf	??___ftdiv
 15711  0CFA  0834               	movf	??___ftdiv,w
 15712  0CFB  02BC               	subwf	___ftdiv@exp,f
 15713  0CFC  0831               	movf	___ftdiv@f1,w
 15714  0CFD  00B4               	movwf	??___ftdiv
 15715  0CFE  0832               	movf	___ftdiv@f1+1,w
 15716  0CFF  00B5               	movwf	??___ftdiv+1
 15717  0D00  0833               	movf	___ftdiv@f1+2,w
 15718  0D01  00B6               	movwf	??___ftdiv+2
 15719  0D02  3010               	movlw	16
 15720  0D03                     u7605:	
 15721  0D03  36B6               	lsrf	??___ftdiv+2,f
 15722  0D04  0CB5               	rrf	??___ftdiv+1,f
 15723  0D05  0CB4               	rrf	??___ftdiv,f
 15724  0D06  0B89               	decfsz	9,f
 15725  0D07  2D03               	goto	u7605
 15726  0D08  0834               	movf	??___ftdiv,w
 15727  0D09  00B7               	movwf	??___ftdiv+3
 15728  0D0A  0837               	movf	??___ftdiv+3,w
 15729  0D0B  00BD               	movwf	___ftdiv@sign
 15730  0D0C  082E               	movf	___ftdiv@f2,w
 15731  0D0D  00B4               	movwf	??___ftdiv
 15732  0D0E  082F               	movf	___ftdiv@f2+1,w
 15733  0D0F  00B5               	movwf	??___ftdiv+1
 15734  0D10  0830               	movf	___ftdiv@f2+2,w
 15735  0D11  00B6               	movwf	??___ftdiv+2
 15736  0D12  3010               	movlw	16
 15737  0D13                     u7615:	
 15738  0D13  36B6               	lsrf	??___ftdiv+2,f
 15739  0D14  0CB5               	rrf	??___ftdiv+1,f
 15740  0D15  0CB4               	rrf	??___ftdiv,f
 15741  0D16  0B89               	decfsz	9,f
 15742  0D17  2D13               	goto	u7615
 15743  0D18  0834               	movf	??___ftdiv,w
 15744  0D19  00B7               	movwf	??___ftdiv+3
 15745  0D1A  0837               	movf	??___ftdiv+3,w
 15746  0D1B  06BD               	xorwf	___ftdiv@sign,f
 15747  0D1C  3080               	movlw	128
 15748  0D1D  00B4               	movwf	??___ftdiv
 15749  0D1E  0834               	movf	??___ftdiv,w
 15750  0D1F  05BD               	andwf	___ftdiv@sign,f
 15751  0D20  17B2               	bsf	___ftdiv@f1+1,7
 15752  0D21  30FF               	movlw	255
 15753  0D22  05B1               	andwf	___ftdiv@f1,f
 15754  0D23  30FF               	movlw	255
 15755  0D24  05B2               	andwf	___ftdiv@f1+1,f
 15756  0D25  3000               	movlw	0
 15757  0D26  05B3               	andwf	___ftdiv@f1+2,f
 15758  0D27  17AF               	bsf	___ftdiv@f2+1,7
 15759  0D28  30FF               	movlw	255
 15760  0D29  05AE               	andwf	___ftdiv@f2,f
 15761  0D2A  30FF               	movlw	255
 15762  0D2B  05AF               	andwf	___ftdiv@f2+1,f
 15763  0D2C  3000               	movlw	0
 15764  0D2D  05B0               	andwf	___ftdiv@f2+2,f
 15765  0D2E  3018               	movlw	24
 15766  0D2F  00B4               	movwf	??___ftdiv
 15767  0D30  0834               	movf	??___ftdiv,w
 15768  0D31  00B8               	movwf	___ftdiv@cntr
 15769  0D32                     l8083:	
 15770  0D32  3001               	movlw	1
 15771  0D33                     u7625:	
 15772  0D33  35B9               	lslf	___ftdiv@f3,f
 15773  0D34  0DBA               	rlf	___ftdiv@f3+1,f
 15774  0D35  0DBB               	rlf	___ftdiv@f3+2,f
 15775  0D36  0B89               	decfsz	9,f
 15776  0D37  2D33               	goto	u7625
 15777  0D38  0830               	movf	___ftdiv@f2+2,w
 15778  0D39  0233               	subwf	___ftdiv@f1+2,w
 15779  0D3A  1D03               	skipz
 15780  0D3B  2D42               	goto	u7635
 15781  0D3C  082F               	movf	___ftdiv@f2+1,w
 15782  0D3D  0232               	subwf	___ftdiv@f1+1,w
 15783  0D3E  1D03               	skipz
 15784  0D3F  2D42               	goto	u7635
 15785  0D40  082E               	movf	___ftdiv@f2,w
 15786  0D41  0231               	subwf	___ftdiv@f1,w
 15787  0D42                     u7635:	
 15788  0D42  1C03               	skipc
 15789  0D43  2D4B               	goto	l8091
 15790  0D44  082E               	movf	___ftdiv@f2,w
 15791  0D45  02B1               	subwf	___ftdiv@f1,f
 15792  0D46  082F               	movf	___ftdiv@f2+1,w
 15793  0D47  3BB2               	subwfb	___ftdiv@f1+1,f
 15794  0D48  0830               	movf	___ftdiv@f2+2,w
 15795  0D49  3BB3               	subwfb	___ftdiv@f1+2,f
 15796  0D4A  1439               	bsf	___ftdiv@f3,0
 15797  0D4B                     l8091:	
 15798  0D4B  3001               	movlw	1
 15799  0D4C                     u7645:	
 15800  0D4C  35B1               	lslf	___ftdiv@f1,f
 15801  0D4D  0DB2               	rlf	___ftdiv@f1+1,f
 15802  0D4E  0DB3               	rlf	___ftdiv@f1+2,f
 15803  0D4F  0B89               	decfsz	9,f
 15804  0D50  2D4C               	goto	u7645
 15805  0D51  3001               	movlw	1
 15806  0D52  02B8               	subwf	___ftdiv@cntr,f
 15807  0D53  1D03               	btfss	3,2
 15808  0D54  2D32               	goto	l8083
 15809  0D55  0839               	movf	___ftdiv@f3,w
 15810  0D56  00A0               	movwf	___ftpack@arg
 15811  0D57  083A               	movf	___ftdiv@f3+1,w
 15812  0D58  00A1               	movwf	___ftpack@arg+1
 15813  0D59  083B               	movf	___ftdiv@f3+2,w
 15814  0D5A  00A2               	movwf	___ftpack@arg+2
 15815  0D5B  083C               	movf	___ftdiv@exp,w
 15816  0D5C  00B4               	movwf	??___ftdiv
 15817  0D5D  0834               	movf	??___ftdiv,w
 15818  0D5E  00A3               	movwf	___ftpack@exp
 15819  0D5F  083D               	movf	___ftdiv@sign,w
 15820  0D60  00B5               	movwf	??___ftdiv+1
 15821  0D61  0835               	movf	??___ftdiv+1,w
 15822  0D62  00A4               	movwf	___ftpack@sign
 15823  0D63  3193  23D1         	fcall	___ftpack
 15824  0D65  0020               	movlb	0	; select bank0
 15825  0D66  0820               	movf	?___ftpack,w
 15826  0D67  00AE               	movwf	?___ftdiv
 15827  0D68  0821               	movf	?___ftpack+1,w
 15828  0D69  00AF               	movwf	?___ftdiv+1
 15829  0D6A  0822               	movf	?___ftpack+2,w
 15830  0D6B  00B0               	movwf	?___ftdiv+2
 15831  0D6C  0008               	return
 15832  0D6D                     __end_of___ftdiv:	
 15833                           
 15834                           	psect	text99
 15835  1D02                     __ptext99:	
 15836 ;; *************** function ___awtoft *****************
 15837 ;; Defined at:
 15838 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\awtoft.c"
 15839 ;; Parameters:    Size  Location     Type
 15840 ;;  c               2    8[BANK0 ] int 
 15841 ;; Auto vars:     Size  Location     Type
 15842 ;;  sign            1   13[BANK0 ] unsigned char 
 15843 ;; Return value:  Size  Location     Type
 15844 ;;                  3    8[BANK0 ] float 
 15845 ;; Registers used:
 15846 ;;		wreg, status,2, status,0, pclath, cstack
 15847 ;; Tracked objects:
 15848 ;;		On entry : 0/0
 15849 ;;		On exit  : 0/0
 15850 ;;		Unchanged: 0/0
 15851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15852 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15853 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15854 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15855 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15856 ;;Total ram usage:        6 bytes
 15857 ;; Hardware stack levels used:    1
 15858 ;; Hardware stack levels required when called:    5
 15859 ;; This function calls:
 15860 ;;		___ftpack
 15861 ;; This function is called by:
 15862 ;;		_getPercentValue
 15863 ;;		_setPercentValue
 15864 ;; This function uses a non-reentrant model
 15865 ;;
 15866                           
 15867                           
 15868                           ;psect for function ___awtoft
 15869  1D02                     ___awtoft:	
 15870                           
 15871                           ;incstack = 0
 15872                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
 15873  1D02  0020               	movlb	0	; select bank0
 15874  1D03  01AD               	clrf	___awtoft@sign
 15875  1D04  1FA9               	btfss	___awtoft@c+1,7
 15876  1D05  2D0D               	goto	l7981
 15877  1D06  09A8               	comf	___awtoft@c,f
 15878  1D07  09A9               	comf	___awtoft@c+1,f
 15879  1D08  0AA8               	incf	___awtoft@c,f
 15880  1D09  1903               	skipnz
 15881  1D0A  0AA9               	incf	___awtoft@c+1,f
 15882  1D0B  01AD               	clrf	___awtoft@sign
 15883  1D0C  0AAD               	incf	___awtoft@sign,f
 15884  1D0D                     l7981:	
 15885  1D0D  0828               	movf	___awtoft@c,w
 15886  1D0E  00A0               	movwf	___ftpack@arg
 15887  1D0F  0829               	movf	___awtoft@c+1,w
 15888  1D10  00A1               	movwf	___ftpack@arg+1
 15889  1D11  01A2               	clrf	___ftpack@arg+2
 15890  1D12  308E               	movlw	142
 15891  1D13  00AB               	movwf	??___awtoft
 15892  1D14  082B               	movf	??___awtoft,w
 15893  1D15  00A3               	movwf	___ftpack@exp
 15894  1D16  082D               	movf	___awtoft@sign,w
 15895  1D17  00AC               	movwf	??___awtoft+1
 15896  1D18  082C               	movf	??___awtoft+1,w
 15897  1D19  00A4               	movwf	___ftpack@sign
 15898  1D1A  3193  23D1         	fcall	___ftpack
 15899  1D1C  0020               	movlb	0	; select bank0
 15900  1D1D  0820               	movf	?___ftpack,w
 15901  1D1E  00A8               	movwf	?___awtoft
 15902  1D1F  0821               	movf	?___ftpack+1,w
 15903  1D20  00A9               	movwf	?___awtoft+1
 15904  1D21  0822               	movf	?___ftpack+2,w
 15905  1D22  00AA               	movwf	?___awtoft+2
 15906  1D23  0008               	return
 15907  1D24                     __end_of___awtoft:	
 15908                           
 15909                           	psect	text100
 15910  13D1                     __ptext100:	
 15911 ;; *************** function ___ftpack *****************
 15912 ;; Defined at:
 15913 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\float.c"
 15914 ;; Parameters:    Size  Location     Type
 15915 ;;  arg             3    0[BANK0 ] unsigned um
 15916 ;;  exp             1    3[BANK0 ] unsigned char 
 15917 ;;  sign            1    4[BANK0 ] unsigned char 
 15918 ;; Auto vars:     Size  Location     Type
 15919 ;;		None
 15920 ;; Return value:  Size  Location     Type
 15921 ;;                  3    0[BANK0 ] float 
 15922 ;; Registers used:
 15923 ;;		wreg, status,2, status,0
 15924 ;; Tracked objects:
 15925 ;;		On entry : 0/0
 15926 ;;		On exit  : 0/0
 15927 ;;		Unchanged: 0/0
 15928 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15929 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15930 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15931 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15932 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15933 ;;Total ram usage:        8 bytes
 15934 ;; Hardware stack levels used:    1
 15935 ;; Hardware stack levels required when called:    4
 15936 ;; This function calls:
 15937 ;;		Nothing
 15938 ;; This function is called by:
 15939 ;;		___awtoft
 15940 ;;		___ftadd
 15941 ;;		___ftdiv
 15942 ;;		___ftmul
 15943 ;; This function uses a non-reentrant model
 15944 ;;
 15945                           
 15946                           
 15947                           ;psect for function ___ftpack
 15948  13D1                     ___ftpack:	
 15949                           
 15950                           ;incstack = 0
 15951                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
 15952  13D1  0020               	movlb	0	; select bank0
 15953  13D2  0823               	movf	___ftpack@exp,w
 15954  13D3  1903               	btfsc	3,2
 15955  13D4  2BDA               	goto	l7947
 15956  13D5  0822               	movf	___ftpack@arg+2,w
 15957  13D6  0421               	iorwf	___ftpack@arg+1,w
 15958  13D7  0420               	iorwf	___ftpack@arg,w
 15959  13D8  1D03               	skipz
 15960  13D9  2BEB               	goto	l7953
 15961  13DA                     l7947:	
 15962  13DA  3000               	movlw	0
 15963  13DB  00A0               	movwf	?___ftpack
 15964  13DC  3000               	movlw	0
 15965  13DD  00A1               	movwf	?___ftpack+1
 15966  13DE  3000               	movlw	0
 15967  13DF  00A2               	movwf	?___ftpack+2
 15968  13E0  0008               	return
 15969  13E1                     l7951:	
 15970  13E1  3001               	movlw	1
 15971  13E2  00A5               	movwf	??___ftpack
 15972  13E3  0825               	movf	??___ftpack,w
 15973  13E4  07A3               	addwf	___ftpack@exp,f
 15974  13E5  3001               	movlw	1
 15975  13E6                     u7255:	
 15976  13E6  36A2               	lsrf	___ftpack@arg+2,f
 15977  13E7  0CA1               	rrf	___ftpack@arg+1,f
 15978  13E8  0CA0               	rrf	___ftpack@arg,f
 15979  13E9  0B89               	decfsz	9,f
 15980  13EA  2BE6               	goto	u7255
 15981  13EB                     l7953:	
 15982  13EB  30FE               	movlw	254
 15983  13EC  0522               	andwf	___ftpack@arg+2,w
 15984  13ED  1903               	btfsc	3,2
 15985  13EE  2C04               	goto	l3299
 15986  13EF  2BE1               	goto	l7951
 15987  13F0                     l7955:	
 15988  13F0  3001               	movlw	1
 15989  13F1  00A5               	movwf	??___ftpack
 15990  13F2  0825               	movf	??___ftpack,w
 15991  13F3  07A3               	addwf	___ftpack@exp,f
 15992  13F4  3001               	movlw	1
 15993  13F5  07A0               	addwf	___ftpack@arg,f
 15994  13F6  3000               	movlw	0
 15995  13F7  1803               	skipnc
 15996  13F8  3001               	movlw	1
 15997  13F9  07A1               	addwf	___ftpack@arg+1,f
 15998  13FA  3000               	movlw	0
 15999  13FB  1803               	skipnc
 16000  13FC  3001               	movlw	1
 16001  13FD  07A2               	addwf	___ftpack@arg+2,f
 16002  13FE  3001               	movlw	1
 16003  13FF                     u7275:	
 16004  13FF  36A2               	lsrf	___ftpack@arg+2,f
 16005  1400  0CA1               	rrf	___ftpack@arg+1,f
 16006  1401  0CA0               	rrf	___ftpack@arg,f
 16007  1402  0B89               	decfsz	9,f
 16008  1403  2BFF               	goto	u7275
 16009  1404                     l3299:	
 16010  1404  30FF               	movlw	255
 16011  1405  0522               	andwf	___ftpack@arg+2,w
 16012  1406  1903               	btfsc	3,2
 16013  1407  2C11               	goto	l7963
 16014  1408  2BF0               	goto	l7955
 16015  1409                     l7961:	
 16016  1409  3001               	movlw	1
 16017  140A  02A3               	subwf	___ftpack@exp,f
 16018  140B  3001               	movlw	1
 16019  140C                     u7295:	
 16020  140C  35A0               	lslf	___ftpack@arg,f
 16021  140D  0DA1               	rlf	___ftpack@arg+1,f
 16022  140E  0DA2               	rlf	___ftpack@arg+2,f
 16023  140F  0B89               	decfsz	9,f
 16024  1410  2C0C               	goto	u7295
 16025  1411                     l7963:	
 16026  1411  1FA1               	btfss	___ftpack@arg+1,7
 16027  1412  2C09               	goto	l7961
 16028  1413  1823               	btfsc	___ftpack@exp,0
 16029  1414  2C1B               	goto	l3305
 16030  1415  30FF               	movlw	255
 16031  1416  05A0               	andwf	___ftpack@arg,f
 16032  1417  307F               	movlw	127
 16033  1418  05A1               	andwf	___ftpack@arg+1,f
 16034  1419  30FF               	movlw	255
 16035  141A  05A2               	andwf	___ftpack@arg+2,f
 16036  141B                     l3305:	
 16037  141B  1003               	clrc
 16038  141C  0CA3               	rrf	___ftpack@exp,f
 16039  141D  0823               	movf	___ftpack@exp,w
 16040  141E  00A5               	movwf	??___ftpack
 16041  141F  01A6               	clrf	??___ftpack+1
 16042  1420  01A7               	clrf	??___ftpack+2
 16043  1421  3010               	movlw	16
 16044  1422                     u7325:	
 16045  1422  35A5               	lslf	??___ftpack,f
 16046  1423  0DA6               	rlf	??___ftpack+1,f
 16047  1424  0DA7               	rlf	??___ftpack+2,f
 16048  1425  0B89               	decfsz	9,f
 16049  1426  2C22               	goto	u7325
 16050  1427  0825               	movf	??___ftpack,w
 16051  1428  04A0               	iorwf	___ftpack@arg,f
 16052  1429  0826               	movf	??___ftpack+1,w
 16053  142A  04A1               	iorwf	___ftpack@arg+1,f
 16054  142B  0827               	movf	??___ftpack+2,w
 16055  142C  04A2               	iorwf	___ftpack@arg+2,f
 16056  142D  0824               	movf	___ftpack@sign,w
 16057  142E  1903               	btfsc	3,2
 16058  142F  0008               	return
 16059  1430  17A2               	bsf	___ftpack@arg+2,7
 16060  1431  0008               	return
 16061  1432                     __end_of___ftpack:	
 16062                           
 16063                           	psect	text101
 16064  1A3F                     __ptext101:	
 16065 ;; *************** function _setRFSW_Status *****************
 16066 ;; Defined at:
 16067 ;;		line 425 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
 16068 ;; Parameters:    Size  Location     Type
 16069 ;;  sw              1    wreg     unsigned char 
 16070 ;;  command         1    2[BANK0 ] unsigned char 
 16071 ;; Auto vars:     Size  Location     Type
 16072 ;;  sw              1    3[BANK0 ] unsigned char 
 16073 ;; Return value:  Size  Location     Type
 16074 ;;		None               void
 16075 ;; Registers used:
 16076 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16077 ;; Tracked objects:
 16078 ;;		On entry : 0/0
 16079 ;;		On exit  : 0/0
 16080 ;;		Unchanged: 0/0
 16081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16082 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16083 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16085 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16086 ;;Total ram usage:        2 bytes
 16087 ;; Hardware stack levels used:    1
 16088 ;; Hardware stack levels required when called:    5
 16089 ;; This function calls:
 16090 ;;		_RfSWPointSelect
 16091 ;; This function is called by:
 16092 ;;		_DlyOff_Main
 16093 ;;		_setDimmerLights_ERROR
 16094 ;;		_setControl_Lights_Table
 16095 ;;		_Sw_DimmerOnFunc
 16096 ;;		_Sw_DimmerAdjFunc
 16097 ;; This function uses a non-reentrant model
 16098 ;;
 16099                           
 16100                           
 16101                           ;psect for function _setRFSW_Status
 16102  1A3F                     _setRFSW_Status:	
 16103                           
 16104                           ;incstack = 0
 16105                           ; Regs used in _setRFSW_Status: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 16106                           ;setRFSW_Status@sw stored from wreg
 16107  1A3F  0020               	movlb	0	; select bank0
 16108  1A40  00A3               	movwf	setRFSW_Status@sw
 16109                           
 16110                           ;RF_Control_B1.c: 427: RfSWPointSelect(sw);
 16111  1A41  0823               	movf	setRFSW_Status@sw,w
 16112  1A42  319B  2346         	fcall	_RfSWPointSelect
 16113                           
 16114                           ;RF_Control_B1.c: 428: RFSW->Status=command;
 16115  1A44  0021               	movlb	1	; select bank1
 16116  1A45  083B               	movf	_RFSW^(0+128),w
 16117  1A46  0086               	movwf	6
 16118  1A47  0187               	clrf	7
 16119  1A48  0020               	movlb	0	; select bank0
 16120  1A49  0822               	movf	setRFSW_Status@command,w
 16121  1A4A  1001               	bcf	1,0
 16122  1A4B  1D03               	skipz
 16123  1A4C  1401               	bsf	1,0
 16124  1A4D  0008               	return
 16125  1A4E                     __end_of_setRFSW_Status:	
 16126                           
 16127                           	psect	text102
 16128  1B46                     __ptext102:	
 16129 ;; *************** function _RfSWPointSelect *****************
 16130 ;; Defined at:
 16131 ;;		line 347 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
 16132 ;; Parameters:    Size  Location     Type
 16133 ;;  sw              1    wreg     unsigned char 
 16134 ;; Auto vars:     Size  Location     Type
 16135 ;;  sw              1    1[BANK0 ] unsigned char 
 16136 ;; Return value:  Size  Location     Type
 16137 ;;		None               void
 16138 ;; Registers used:
 16139 ;;		wreg
 16140 ;; Tracked objects:
 16141 ;;		On entry : 0/0
 16142 ;;		On exit  : 0/0
 16143 ;;		Unchanged: 0/0
 16144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16145 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16146 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16147 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16148 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16149 ;;Total ram usage:        2 bytes
 16150 ;; Hardware stack levels used:    1
 16151 ;; Hardware stack levels required when called:    4
 16152 ;; This function calls:
 16153 ;;		Nothing
 16154 ;; This function is called by:
 16155 ;;		_setRFSW_Control
 16156 ;;		_setRFSW_AdjControl
 16157 ;;		_setRFSW_Status
 16158 ;; This function uses a non-reentrant model
 16159 ;;
 16160                           
 16161                           
 16162                           ;psect for function _RfSWPointSelect
 16163  1B46                     _RfSWPointSelect:	
 16164                           
 16165                           ;incstack = 0
 16166                           ; Regs used in _RfSWPointSelect: [wreg]
 16167                           ;RfSWPointSelect@sw stored from wreg
 16168  1B46  0020               	movlb	0	; select bank0
 16169  1B47  00A1               	movwf	RfSWPointSelect@sw
 16170                           
 16171                           ;RF_Control_B1.c: 350: if(sw == 1)
 16172  1B48  0821               	movf	RfSWPointSelect@sw,w
 16173  1B49  3A01               	xorlw	1
 16174  1B4A  1D03               	skipz
 16175  1B4B  2B51               	goto	l2621
 16176                           
 16177                           ;RF_Control_B1.c: 351: {
 16178                           ;RF_Control_B1.c: 352: RFSW=&RFSW1;
 16179  1B4C  30EA               	movlw	_RFSW1& (0+255)
 16180  1B4D  00A0               	movwf	??_RfSWPointSelect
 16181  1B4E  0820               	movf	??_RfSWPointSelect,w
 16182  1B4F  0021               	movlb	1	; select bank1
 16183  1B50  00BB               	movwf	_RFSW^(0+128)
 16184  1B51                     l2621:	
 16185                           
 16186                           ;RF_Control_B1.c: 353: }
 16187                           ;RF_Control_B1.c: 356: if(sw == 2)
 16188  1B51  0020               	movlb	0	; select bank0
 16189  1B52  0821               	movf	RfSWPointSelect@sw,w
 16190  1B53  3A02               	xorlw	2
 16191  1B54  1D03               	skipz
 16192  1B55  0008               	return
 16193                           
 16194                           ;RF_Control_B1.c: 357: {
 16195                           ;RF_Control_B1.c: 358: RFSW=&RFSW2;
 16196  1B56  30EB               	movlw	_RFSW2& (0+255)
 16197  1B57  00A0               	movwf	??_RfSWPointSelect
 16198  1B58  0820               	movf	??_RfSWPointSelect,w
 16199  1B59  0021               	movlb	1	; select bank1
 16200  1B5A  00BB               	movwf	_RFSW^(0+128)
 16201  1B5B  0008               	return
 16202  1B5C                     __end_of_RfSWPointSelect:	
 16203                           
 16204                           	psect	text103
 16205  1A7D                     __ptext103:	
 16206 ;; *************** function _setDimmerLights_Trigger *****************
 16207 ;; Defined at:
 16208 ;;		line 445 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 16209 ;; Parameters:    Size  Location     Type
 16210 ;;  lights          1    wreg     unsigned char 
 16211 ;;  command         1    2[BANK0 ] unsigned char 
 16212 ;; Auto vars:     Size  Location     Type
 16213 ;;  lights          1    3[BANK0 ] unsigned char 
 16214 ;; Return value:  Size  Location     Type
 16215 ;;		None               void
 16216 ;; Registers used:
 16217 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16218 ;; Tracked objects:
 16219 ;;		On entry : 0/0
 16220 ;;		On exit  : 0/0
 16221 ;;		Unchanged: 0/0
 16222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16223 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16224 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16226 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16227 ;;Total ram usage:        2 bytes
 16228 ;; Hardware stack levels used:    1
 16229 ;; Hardware stack levels required when called:    5
 16230 ;; This function calls:
 16231 ;;		_DimmerLightsPointSelect
 16232 ;; This function is called by:
 16233 ;;		_DlyOff_Main
 16234 ;;		_setRFSW_Control
 16235 ;;		_Sw_DimmerOnFunc
 16236 ;;		_Sw_DimmerOffFunc
 16237 ;; This function uses a non-reentrant model
 16238 ;;
 16239                           
 16240                           
 16241                           ;psect for function _setDimmerLights_Trigger
 16242  1A7D                     _setDimmerLights_Trigger:	
 16243                           
 16244                           ;incstack = 0
 16245                           ; Regs used in _setDimmerLights_Trigger: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 16246                           ;setDimmerLights_Trigger@lights stored from wreg
 16247  1A7D  0020               	movlb	0	; select bank0
 16248  1A7E  00A3               	movwf	setDimmerLights_Trigger@lights
 16249                           
 16250                           ;Dimmer_B1.c: 447: DimmerLightsPointSelect(lights);
 16251  1A7F  0823               	movf	setDimmerLights_Trigger@lights,w
 16252  1A80  319A  22CE         	fcall	_DimmerLightsPointSelect
 16253                           
 16254                           ;Dimmer_B1.c: 448: DimmerLights->Trigger=command;
 16255  1A82  0020               	movlb	0	; select bank0
 16256  1A83  086A               	movf	_DimmerLights,w
 16257  1A84  3E09               	addlw	9
 16258  1A85  0086               	movwf	6
 16259  1A86  3001               	movlw	1	; select bank2/3
 16260  1A87  0087               	movwf	7
 16261  1A88  0822               	movf	setDimmerLights_Trigger@command,w
 16262  1A89  1081               	bcf	1,1
 16263  1A8A  1D03               	skipz
 16264  1A8B  1481               	bsf	1,1
 16265  1A8C  0008               	return
 16266  1A8D                     __end_of_setDimmerLights_Trigger:	
 16267                           
 16268                           	psect	text104
 16269  1A6D                     __ptext104:	
 16270 ;; *************** function _setDimmerLights_Switch *****************
 16271 ;; Defined at:
 16272 ;;		line 435 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 16273 ;; Parameters:    Size  Location     Type
 16274 ;;  lights          1    wreg     unsigned char 
 16275 ;;  command         1    2[BANK0 ] unsigned char 
 16276 ;; Auto vars:     Size  Location     Type
 16277 ;;  lights          1    3[BANK0 ] unsigned char 
 16278 ;; Return value:  Size  Location     Type
 16279 ;;		None               void
 16280 ;; Registers used:
 16281 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16282 ;; Tracked objects:
 16283 ;;		On entry : 0/0
 16284 ;;		On exit  : 0/0
 16285 ;;		Unchanged: 0/0
 16286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16287 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16288 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16290 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16291 ;;Total ram usage:        2 bytes
 16292 ;; Hardware stack levels used:    1
 16293 ;; Hardware stack levels required when called:    5
 16294 ;; This function calls:
 16295 ;;		_DimmerLightsPointSelect
 16296 ;; This function is called by:
 16297 ;;		_DlyOff_Main
 16298 ;;		_setRFSW_Control
 16299 ;;		_Sw_DimmerOnFunc
 16300 ;;		_Sw_DimmerOffFunc
 16301 ;; This function uses a non-reentrant model
 16302 ;;
 16303                           
 16304                           
 16305                           ;psect for function _setDimmerLights_Switch
 16306  1A6D                     _setDimmerLights_Switch:	
 16307                           
 16308                           ;incstack = 0
 16309                           ; Regs used in _setDimmerLights_Switch: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
 16310                           ;setDimmerLights_Switch@lights stored from wreg
 16311  1A6D  0020               	movlb	0	; select bank0
 16312  1A6E  00A3               	movwf	setDimmerLights_Switch@lights
 16313                           
 16314                           ;Dimmer_B1.c: 437: DimmerLightsPointSelect(lights);
 16315  1A6F  0823               	movf	setDimmerLights_Switch@lights,w
 16316  1A70  319A  22CE         	fcall	_DimmerLightsPointSelect
 16317                           
 16318                           ;Dimmer_B1.c: 438: DimmerLights->Switch=command;
 16319  1A72  0020               	movlb	0	; select bank0
 16320  1A73  086A               	movf	_DimmerLights,w
 16321  1A74  3E09               	addlw	9
 16322  1A75  0086               	movwf	6
 16323  1A76  3001               	movlw	1	; select bank2/3
 16324  1A77  0087               	movwf	7
 16325  1A78  0822               	movf	setDimmerLights_Switch@command,w
 16326  1A79  1001               	bcf	1,0
 16327  1A7A  1D03               	skipz
 16328  1A7B  1401               	bsf	1,0
 16329  1A7C  0008               	return
 16330  1A7D                     __end_of_setDimmerLights_Switch:	
 16331                           
 16332                           	psect	text105
 16333  1ACE                     __ptext105:	
 16334 ;; *************** function _DimmerLightsPointSelect *****************
 16335 ;; Defined at:
 16336 ;;		line 7 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 16337 ;; Parameters:    Size  Location     Type
 16338 ;;  lights          1    wreg     unsigned char 
 16339 ;; Auto vars:     Size  Location     Type
 16340 ;;  lights          1    1[BANK0 ] unsigned char 
 16341 ;; Return value:  Size  Location     Type
 16342 ;;		None               void
 16343 ;; Registers used:
 16344 ;;		wreg
 16345 ;; Tracked objects:
 16346 ;;		On entry : 0/0
 16347 ;;		On exit  : 0/0
 16348 ;;		Unchanged: 0/0
 16349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16351 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16352 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16353 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16354 ;;Total ram usage:        2 bytes
 16355 ;; Hardware stack levels used:    1
 16356 ;; Hardware stack levels required when called:    4
 16357 ;; This function calls:
 16358 ;;		Nothing
 16359 ;; This function is called by:
 16360 ;;		_setDimmerLights_Initialization
 16361 ;;		_setDimmerLights_Main
 16362 ;;		_setDimmerLights_ERROR
 16363 ;;		_setDimmerLights_TriggerERROR
 16364 ;;		_setDimmerLights
 16365 ;;		_setDimmerLights_Adj
 16366 ;;		_setDimmerLights_AdjRF
 16367 ;;		_setDimmerLights_Switch
 16368 ;;		_setDimmerLights_AdjGo
 16369 ;;		_setDimmerLights_Trigger
 16370 ;;		_setDimmerLights_TriggerAdj
 16371 ;;		_setDimmerLights_GO
 16372 ;;		_setDimmerLights_MaxmumValue
 16373 ;;		_setDimmerLights_Clear
 16374 ;; This function uses a non-reentrant model
 16375 ;;
 16376                           
 16377                           
 16378                           ;psect for function _DimmerLightsPointSelect
 16379  1ACE                     _DimmerLightsPointSelect:	
 16380                           
 16381                           ;incstack = 0
 16382                           ; Regs used in _DimmerLightsPointSelect: [wreg]
 16383                           ;DimmerLightsPointSelect@lights stored from wreg
 16384  1ACE  0020               	movlb	0	; select bank0
 16385  1ACF  00A1               	movwf	DimmerLightsPointSelect@lights
 16386                           
 16387                           ;Dimmer_B1.c: 10: if(lights == 1)
 16388  1AD0  0821               	movf	DimmerLightsPointSelect@lights,w
 16389  1AD1  3A01               	xorlw	1
 16390  1AD2  1D03               	skipz
 16391  1AD3  2AD8               	goto	l867
 16392                           
 16393                           ;Dimmer_B1.c: 11: {
 16394                           ;Dimmer_B1.c: 12: DimmerLights=&DimmerLights1;
 16395  1AD4  3020               	movlw	_DimmerLights1& (0+255)
 16396  1AD5  00A0               	movwf	??_DimmerLightsPointSelect
 16397  1AD6  0820               	movf	??_DimmerLightsPointSelect,w
 16398  1AD7  00EA               	movwf	_DimmerLights
 16399  1AD8                     l867:	
 16400                           
 16401                           ;Dimmer_B1.c: 13: }
 16402                           ;Dimmer_B1.c: 20: if(lights == 2)
 16403  1AD8  0821               	movf	DimmerLightsPointSelect@lights,w
 16404  1AD9  3A02               	xorlw	2
 16405  1ADA  1D03               	skipz
 16406  1ADB  0008               	return
 16407                           
 16408                           ;Dimmer_B1.c: 21: {
 16409                           ;Dimmer_B1.c: 22: DimmerLights=&DimmerLights2;
 16410  1ADC  302E               	movlw	_DimmerLights2& (0+255)
 16411  1ADD  00A0               	movwf	??_DimmerLightsPointSelect
 16412  1ADE  0820               	movf	??_DimmerLightsPointSelect,w
 16413  1ADF  00EA               	movwf	_DimmerLights
 16414  1AE0  0008               	return
 16415  1AE1                     __end_of_DimmerLightsPointSelect:	
 16416                           
 16417                           	psect	text106
 16418  1789                     __ptext106:	
 16419 ;; *************** function _setBuz *****************
 16420 ;; Defined at:
 16421 ;;		line 22 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Buzzer_B1.c"
 16422 ;; Parameters:    Size  Location     Type
 16423 ;;  count           1    wreg     unsigned char 
 16424 ;;  time            2    6[BANK0 ] int 
 16425 ;; Auto vars:     Size  Location     Type
 16426 ;;  count           1    9[BANK0 ] unsigned char 
 16427 ;; Return value:  Size  Location     Type
 16428 ;;		None               void
 16429 ;; Registers used:
 16430 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16431 ;; Tracked objects:
 16432 ;;		On entry : 0/0
 16433 ;;		On exit  : 0/0
 16434 ;;		Unchanged: 0/0
 16435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16436 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16437 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16438 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16439 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16440 ;;Total ram usage:        4 bytes
 16441 ;; Hardware stack levels used:    1
 16442 ;; Hardware stack levels required when called:    5
 16443 ;; This function calls:
 16444 ;;		___wmul
 16445 ;; This function is called by:
 16446 ;;		_DlyOff_Main
 16447 ;;		_setDimmerLights_Main
 16448 ;;		_DimmerLights_Exceptions
 16449 ;;		_MainT
 16450 ;;		_setOverTemp_Exceptions
 16451 ;;		_setLog_Code
 16452 ;;		_setControl_Lights_Table
 16453 ;;		_setRFSW_Control
 16454 ;;		_setSw_Main
 16455 ;;		_Sw_DimmerOnFunc
 16456 ;; This function uses a non-reentrant model
 16457 ;;
 16458                           
 16459                           
 16460                           ;psect for function _setBuz
 16461  1789                     _setBuz:	
 16462                           
 16463                           ;incstack = 0
 16464                           ; Regs used in _setBuz: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 16465                           ;setBuz@count stored from wreg
 16466  1789  0020               	movlb	0	; select bank0
 16467  178A  00A9               	movwf	setBuz@count
 16468                           
 16469                           ;Buzzer_B1.c: 24: time*=20;
 16470  178B  3014               	movlw	20
 16471  178C  00A0               	movwf	___wmul@multiplier
 16472  178D  3000               	movlw	0
 16473  178E  00A1               	movwf	___wmul@multiplier+1
 16474  178F  0827               	movf	setBuz@time+1,w
 16475  1790  01A3               	clrf	___wmul@multiplicand+1
 16476  1791  07A3               	addwf	___wmul@multiplicand+1,f
 16477  1792  0826               	movf	setBuz@time,w
 16478  1793  01A2               	clrf	___wmul@multiplicand
 16479  1794  07A2               	addwf	___wmul@multiplicand,f
 16480  1795  319C  24A5  3197   	fcall	___wmul
 16481  1798  0020               	movlb	0	; select bank0
 16482  1799  0821               	movf	?___wmul+1,w
 16483  179A  01A7               	clrf	setBuz@time+1
 16484  179B  07A7               	addwf	setBuz@time+1,f
 16485  179C  0820               	movf	?___wmul,w
 16486  179D  01A6               	clrf	setBuz@time
 16487  179E  07A6               	addwf	setBuz@time,f
 16488                           
 16489                           ;Buzzer_B1.c: 25: if(Buz->Enable)
 16490  179F  0868               	movf	_Buz,w
 16491  17A0  0086               	movwf	6
 16492  17A1  3001               	movlw	1	; select bank2/3
 16493  17A2  0087               	movwf	7
 16494  17A3  1C01               	btfss	1,0
 16495  17A4  0008               	return
 16496                           
 16497                           ;Buzzer_B1.c: 26: {
 16498                           ;Buzzer_B1.c: 27: if(!Buz->GO)
 16499  17A5  0868               	movf	_Buz,w
 16500  17A6  0086               	movwf	6
 16501  17A7  3001               	movlw	1	; select bank2/3
 16502  17A8  0087               	movwf	7
 16503  17A9  1881               	btfsc	1,1
 16504  17AA  2FC4               	goto	l8309
 16505                           
 16506                           ;Buzzer_B1.c: 28: {
 16507                           ;Buzzer_B1.c: 29: Buz->GO=1;
 16508  17AB  0868               	movf	_Buz,w
 16509  17AC  0086               	movwf	6
 16510  17AD  3001               	movlw	1	; select bank2/3
 16511  17AE  0087               	movwf	7
 16512  17AF  1481               	bsf	1,1
 16513                           
 16514                           ;Buzzer_B1.c: 30: Buz->Count=count;
 16515  17B0  0829               	movf	setBuz@count,w
 16516  17B1  00A8               	movwf	??_setBuz
 16517  17B2  0868               	movf	_Buz,w
 16518  17B3  3E03               	addlw	3
 16519  17B4  0086               	movwf	6
 16520  17B5  3001               	movlw	1	; select bank2/3
 16521  17B6  0087               	movwf	7
 16522  17B7  0828               	movf	??_setBuz,w
 16523  17B8  0081               	movwf	1
 16524                           
 16525                           ;Buzzer_B1.c: 31: Buz->TimeValue=time;
 16526  17B9  0868               	movf	_Buz,w
 16527  17BA  3E06               	addlw	6
 16528  17BB  0086               	movwf	6
 16529  17BC  3001               	movlw	1	; select bank2/3
 16530  17BD  0087               	movwf	7
 16531  17BE  0826               	movf	setBuz@time,w
 16532  17BF  3FC0               	movwi [0]fsr1
 16533  17C0  0827               	movf	setBuz@time+1,w
 16534  17C1  3FC1               	movwi [1]fsr1
 16535                           
 16536                           ;Buzzer_B1.c: 33: RB3=1;
 16537  17C2  158D               	bsf	13,3	;volatile
 16538                           
 16539                           ;Buzzer_B1.c: 34: }
 16540  17C3  0008               	return
 16541  17C4                     l8309:	
 16542                           
 16543                           ;Buzzer_B1.c: 35: else
 16544                           ;Buzzer_B1.c: 36: {
 16545                           ;Buzzer_B1.c: 37: if(!Buz->BufferStatus1)
 16546  17C4  0868               	movf	_Buz,w
 16547  17C5  0086               	movwf	6
 16548  17C6  3001               	movlw	1	; select bank2/3
 16549  17C7  0087               	movwf	7
 16550  17C8  1981               	btfsc	1,3
 16551  17C9  2FE2               	goto	l8313
 16552                           
 16553                           ;Buzzer_B1.c: 38: {
 16554                           ;Buzzer_B1.c: 39: Buz->BufferStatus1=1;
 16555  17CA  0868               	movf	_Buz,w
 16556  17CB  0086               	movwf	6
 16557  17CC  3001               	movlw	1	; select bank2/3
 16558  17CD  0087               	movwf	7
 16559  17CE  1581               	bsf	1,3
 16560                           
 16561                           ;Buzzer_B1.c: 40: Buz->CountBuffer1=count;
 16562  17CF  0829               	movf	setBuz@count,w
 16563  17D0  00A8               	movwf	??_setBuz
 16564  17D1  0868               	movf	_Buz,w
 16565  17D2  3E04               	addlw	4
 16566  17D3  0086               	movwf	6
 16567  17D4  3001               	movlw	1	; select bank2/3
 16568  17D5  0087               	movwf	7
 16569  17D6  0828               	movf	??_setBuz,w
 16570  17D7  0081               	movwf	1
 16571                           
 16572                           ;Buzzer_B1.c: 41: Buz->TimeValueBuffer1=time;
 16573  17D8  0868               	movf	_Buz,w
 16574  17D9  3E08               	addlw	8
 16575  17DA  0086               	movwf	6
 16576  17DB  3001               	movlw	1	; select bank2/3
 16577  17DC  0087               	movwf	7
 16578  17DD  0826               	movf	setBuz@time,w
 16579  17DE  3FC0               	movwi [0]fsr1
 16580  17DF  0827               	movf	setBuz@time+1,w
 16581  17E0  3FC1               	movwi [1]fsr1
 16582                           
 16583                           ;Buzzer_B1.c: 42: }
 16584  17E1  0008               	return
 16585  17E2                     l8313:	
 16586                           
 16587                           ;Buzzer_B1.c: 43: else if(!Buz->BufferStatus2)
 16588  17E2  0868               	movf	_Buz,w
 16589  17E3  0086               	movwf	6
 16590  17E4  3001               	movlw	1	; select bank2/3
 16591  17E5  0087               	movwf	7
 16592  17E6  1A01               	btfsc	1,4
 16593  17E7  0008               	return
 16594                           
 16595                           ;Buzzer_B1.c: 44: {
 16596                           ;Buzzer_B1.c: 45: Buz->BufferStatus2=1;
 16597  17E8  0868               	movf	_Buz,w
 16598  17E9  0086               	movwf	6
 16599  17EA  3001               	movlw	1	; select bank2/3
 16600  17EB  0087               	movwf	7
 16601  17EC  1601               	bsf	1,4
 16602                           
 16603                           ;Buzzer_B1.c: 46: Buz->CountBuffer2=count;
 16604  17ED  0829               	movf	setBuz@count,w
 16605  17EE  00A8               	movwf	??_setBuz
 16606  17EF  0868               	movf	_Buz,w
 16607  17F0  3E05               	addlw	5
 16608  17F1  0086               	movwf	6
 16609  17F2  3001               	movlw	1	; select bank2/3
 16610  17F3  0087               	movwf	7
 16611  17F4  0828               	movf	??_setBuz,w
 16612  17F5  0081               	movwf	1
 16613                           
 16614                           ;Buzzer_B1.c: 47: Buz->TimeValueBuffer2=time;
 16615  17F6  0868               	movf	_Buz,w
 16616  17F7  3E0A               	addlw	10
 16617  17F8  0086               	movwf	6
 16618  17F9  3001               	movlw	1	; select bank2/3
 16619  17FA  0087               	movwf	7
 16620  17FB  0826               	movf	setBuz@time,w
 16621  17FC  3FC0               	movwi [0]fsr1
 16622  17FD  0827               	movf	setBuz@time+1,w
 16623  17FE  3FC1               	movwi [1]fsr1
 16624  17FF  0008               	return
 16625  1800                     __end_of_setBuz:	
 16626                           
 16627                           	psect	text107
 16628  1CA5                     __ptext107:	
 16629 ;; *************** function ___wmul *****************
 16630 ;; Defined at:
 16631 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\Umul16.c"
 16632 ;; Parameters:    Size  Location     Type
 16633 ;;  multiplier      2    0[BANK0 ] unsigned int 
 16634 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 16635 ;; Auto vars:     Size  Location     Type
 16636 ;;  product         2    4[BANK0 ] unsigned int 
 16637 ;; Return value:  Size  Location     Type
 16638 ;;                  2    0[BANK0 ] unsigned int 
 16639 ;; Registers used:
 16640 ;;		wreg, status,2, status,0
 16641 ;; Tracked objects:
 16642 ;;		On entry : 0/0
 16643 ;;		On exit  : 0/0
 16644 ;;		Unchanged: 0/0
 16645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16646 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16647 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16649 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16650 ;;Total ram usage:        6 bytes
 16651 ;; Hardware stack levels used:    1
 16652 ;; Hardware stack levels required when called:    4
 16653 ;; This function calls:
 16654 ;;		Nothing
 16655 ;; This function is called by:
 16656 ;;		_setBuz
 16657 ;; This function uses a non-reentrant model
 16658 ;;
 16659                           
 16660                           
 16661                           ;psect for function ___wmul
 16662  1CA5                     ___wmul:	
 16663                           
 16664                           ;incstack = 0
 16665                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 16666  1CA5  0020               	movlb	0	; select bank0
 16667  1CA6  01A4               	clrf	___wmul@product
 16668  1CA7  01A5               	clrf	___wmul@product+1
 16669  1CA8                     l8289:	
 16670  1CA8  1C20               	btfss	___wmul@multiplier,0
 16671  1CA9  2CAE               	goto	l3138
 16672  1CAA  0822               	movf	___wmul@multiplicand,w
 16673  1CAB  07A4               	addwf	___wmul@product,f
 16674  1CAC  0823               	movf	___wmul@multiplicand+1,w
 16675  1CAD  3DA5               	addwfc	___wmul@product+1,f
 16676  1CAE                     l3138:	
 16677  1CAE  3001               	movlw	1
 16678  1CAF                     u8075:	
 16679  1CAF  35A2               	lslf	___wmul@multiplicand,f
 16680  1CB0  0DA3               	rlf	___wmul@multiplicand+1,f
 16681  1CB1  0B89               	decfsz	9,f
 16682  1CB2  2CAF               	goto	u8075
 16683  1CB3  3001               	movlw	1
 16684  1CB4                     u8085:	
 16685  1CB4  36A1               	lsrf	___wmul@multiplier+1,f
 16686  1CB5  0CA0               	rrf	___wmul@multiplier,f
 16687  1CB6  0B89               	decfsz	9,f
 16688  1CB7  2CB4               	goto	u8085
 16689  1CB8  0821               	movf	___wmul@multiplier+1,w
 16690  1CB9  0420               	iorwf	___wmul@multiplier,w
 16691  1CBA  1D03               	skipz
 16692  1CBB  2CA8               	goto	l8289
 16693  1CBC  0825               	movf	___wmul@product+1,w
 16694  1CBD  01A1               	clrf	?___wmul+1
 16695  1CBE  07A1               	addwf	?___wmul+1,f
 16696  1CBF  0824               	movf	___wmul@product,w
 16697  1CC0  01A0               	clrf	?___wmul
 16698  1CC1  07A0               	addwf	?___wmul,f
 16699  1CC2  0008               	return
 16700  1CC3                     __end_of___wmul:	
 16701                           
 16702                           	psect	text108
 16703  192E                     __ptext108:	
 16704 ;; *************** function _DelayOff_Initialization *****************
 16705 ;; Defined at:
 16706 ;;		line 30 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\DelayOff_B1.c"
 16707 ;; Parameters:    Size  Location     Type
 16708 ;;		None
 16709 ;; Auto vars:     Size  Location     Type
 16710 ;;		None
 16711 ;; Return value:  Size  Location     Type
 16712 ;;		None               void
 16713 ;; Registers used:
 16714 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16715 ;; Tracked objects:
 16716 ;;		On entry : 0/0
 16717 ;;		On exit  : 0/0
 16718 ;;		Unchanged: 0/0
 16719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16723 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16724 ;;Total ram usage:        0 bytes
 16725 ;; Hardware stack levels used:    1
 16726 ;; Hardware stack levels required when called:    6
 16727 ;; This function calls:
 16728 ;;		_DlyOff_Initialization
 16729 ;; This function is called by:
 16730 ;;		_main
 16731 ;; This function uses a non-reentrant model
 16732 ;;
 16733                           
 16734                           
 16735                           ;psect for function _DelayOff_Initialization
 16736  192E                     _DelayOff_Initialization:	
 16737                           
 16738                           ;DelayOff_B1.c: 33: DlyOff_Initialization(1);
 16739                           
 16740                           ;incstack = 0
 16741                           ; Regs used in _DelayOff_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 16742  192E  3001               	movlw	1
 16743  192F  3199  217D  3199   	fcall	_DlyOff_Initialization
 16744                           
 16745                           ;DelayOff_B1.c: 37: DlyOff_Initialization(2);
 16746  1932  3002               	movlw	2
 16747  1933  3199  217D         	fcall	_DlyOff_Initialization
 16748  1935  0008               	return
 16749  1936                     __end_of_DelayOff_Initialization:	
 16750                           
 16751                           	psect	text109
 16752  197D                     __ptext109:	
 16753 ;; *************** function _DlyOff_Initialization *****************
 16754 ;; Defined at:
 16755 ;;		line 60 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\DelayOff_B1.c"
 16756 ;; Parameters:    Size  Location     Type
 16757 ;;  sw              1    wreg     unsigned char 
 16758 ;; Auto vars:     Size  Location     Type
 16759 ;;  sw              1    2[BANK0 ] unsigned char 
 16760 ;; Return value:  Size  Location     Type
 16761 ;;		None               void
 16762 ;; Registers used:
 16763 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16764 ;; Tracked objects:
 16765 ;;		On entry : 0/0
 16766 ;;		On exit  : 0/0
 16767 ;;		Unchanged: 0/0
 16768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16770 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16772 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16773 ;;Total ram usage:        1 bytes
 16774 ;; Hardware stack levels used:    1
 16775 ;; Hardware stack levels required when called:    5
 16776 ;; This function calls:
 16777 ;;		_DelayOffPointSelect
 16778 ;; This function is called by:
 16779 ;;		_DelayOff_Initialization
 16780 ;; This function uses a non-reentrant model
 16781 ;;
 16782                           
 16783                           
 16784                           ;psect for function _DlyOff_Initialization
 16785  197D                     _DlyOff_Initialization:	
 16786                           
 16787                           ;incstack = 0
 16788                           ; Regs used in _DlyOff_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 16789                           ;DlyOff_Initialization@sw stored from wreg
 16790  197D  0020               	movlb	0	; select bank0
 16791  197E  00A2               	movwf	DlyOff_Initialization@sw
 16792                           
 16793                           ;DelayOff_B1.c: 62: DelayOffPointSelect(sw);
 16794  197F  0822               	movf	DlyOff_Initialization@sw,w
 16795  1980  319A  22F4         	fcall	_DelayOffPointSelect
 16796                           
 16797                           ;DelayOff_B1.c: 63: DelayOff->Enable=1;
 16798  1982  0020               	movlb	0	; select bank0
 16799  1983  0869               	movf	_DelayOff,w
 16800  1984  0086               	movwf	6
 16801  1985  0187               	clrf	7
 16802  1986  1401               	bsf	1,0
 16803  1987  0008               	return
 16804  1988                     __end_of_DlyOff_Initialization:	
 16805                           
 16806                           	psect	text110
 16807  1AF4                     __ptext110:	
 16808 ;; *************** function _DelayOffPointSelect *****************
 16809 ;; Defined at:
 16810 ;;		line 8 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\DelayOff_B1.c"
 16811 ;; Parameters:    Size  Location     Type
 16812 ;;  sw              1    wreg     unsigned char 
 16813 ;; Auto vars:     Size  Location     Type
 16814 ;;  sw              1    1[BANK0 ] unsigned char 
 16815 ;; Return value:  Size  Location     Type
 16816 ;;		None               void
 16817 ;; Registers used:
 16818 ;;		wreg
 16819 ;; Tracked objects:
 16820 ;;		On entry : 0/0
 16821 ;;		On exit  : 0/0
 16822 ;;		Unchanged: 0/0
 16823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16825 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16826 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16827 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16828 ;;Total ram usage:        2 bytes
 16829 ;; Hardware stack levels used:    1
 16830 ;; Hardware stack levels required when called:    4
 16831 ;; This function calls:
 16832 ;;		Nothing
 16833 ;; This function is called by:
 16834 ;;		_DlyOff_Initialization
 16835 ;;		_DlyOff_Main
 16836 ;;		_setDelayOff_GO
 16837 ;; This function uses a non-reentrant model
 16838 ;;
 16839                           
 16840                           
 16841                           ;psect for function _DelayOffPointSelect
 16842  1AF4                     _DelayOffPointSelect:	
 16843                           
 16844                           ;incstack = 0
 16845                           ; Regs used in _DelayOffPointSelect: [wreg]
 16846                           ;DelayOffPointSelect@sw stored from wreg
 16847  1AF4  0020               	movlb	0	; select bank0
 16848  1AF5  00A1               	movwf	DelayOffPointSelect@sw
 16849                           
 16850                           ;DelayOff_B1.c: 11: if(sw == 1)
 16851  1AF6  0821               	movf	DelayOffPointSelect@sw,w
 16852  1AF7  3A01               	xorlw	1
 16853  1AF8  1D03               	skipz
 16854  1AF9  2AFF               	goto	l8211
 16855                           
 16856                           ;DelayOff_B1.c: 12: {
 16857                           ;DelayOff_B1.c: 13: DelayOff=&DlySw1;
 16858  1AFA  30CC               	movlw	_DlySw1& (0+255)
 16859  1AFB  00A0               	movwf	??_DelayOffPointSelect
 16860  1AFC  0820               	movf	??_DelayOffPointSelect,w
 16861  1AFD  00E9               	movwf	_DelayOff
 16862                           
 16863                           ;DelayOff_B1.c: 14: }
 16864  1AFE  0008               	return
 16865  1AFF                     l8211:	
 16866                           
 16867                           ;DelayOff_B1.c: 17: else if(sw == 2)
 16868  1AFF  0821               	movf	DelayOffPointSelect@sw,w
 16869  1B00  3A02               	xorlw	2
 16870  1B01  1D03               	skipz
 16871  1B02  0008               	return
 16872                           
 16873                           ;DelayOff_B1.c: 18: {
 16874                           ;DelayOff_B1.c: 19: DelayOff=&DlySw2;
 16875  1B03  30D1               	movlw	_DlySw2& (0+255)
 16876  1B04  00A0               	movwf	??_DelayOffPointSelect
 16877  1B05  0820               	movf	??_DelayOffPointSelect,w
 16878  1B06  00E9               	movwf	_DelayOff
 16879  1B07  0008               	return
 16880  1B08                     __end_of_DelayOffPointSelect:	
 16881                           
 16882                           	psect	text111
 16883  1B1C                     __ptext111:	
 16884 ;; *************** function _CC2500_PowerOnInitial *****************
 16885 ;; Defined at:
 16886 ;;		line 97 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
 16887 ;; Parameters:    Size  Location     Type
 16888 ;;		None
 16889 ;; Auto vars:     Size  Location     Type
 16890 ;;		None
 16891 ;; Return value:  Size  Location     Type
 16892 ;;		None               void
 16893 ;; Registers used:
 16894 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 16895 ;; Tracked objects:
 16896 ;;		On entry : 0/0
 16897 ;;		On exit  : 0/0
 16898 ;;		Unchanged: 0/0
 16899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16901 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16903 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16904 ;;Total ram usage:        0 bytes
 16905 ;; Hardware stack levels used:    1
 16906 ;; Hardware stack levels required when called:    7
 16907 ;; This function calls:
 16908 ;;		_CC2500_ClearRXFIFO
 16909 ;;		_CC2500_ClearTXFIFO
 16910 ;;		_CC2500_FrequencyCabr
 16911 ;;		_CC2500_InitPATable
 16912 ;;		_CC2500_InitSetREG
 16913 ;;		_CC2500_PowerRST
 16914 ;;		_CC2500_SIDLEMode
 16915 ;; This function is called by:
 16916 ;;		_main
 16917 ;; This function uses a non-reentrant model
 16918 ;;
 16919                           
 16920                           
 16921                           ;psect for function _CC2500_PowerOnInitial
 16922  1B1C                     _CC2500_PowerOnInitial:	
 16923                           
 16924                           ;CC2500_B1.c: 99: CC2500_PowerRST();
 16925                           
 16926                           ;incstack = 0
 16927                           ; Regs used in _CC2500_PowerOnInitial: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 16928  1B1C  319E  26E4  319B   	fcall	_CC2500_PowerRST
 16929                           
 16930                           ;CC2500_B1.c: 100: CC2500_InitSetREG();
 16931  1B1F  319D  25DB  319B   	fcall	_CC2500_InitSetREG
 16932                           
 16933                           ;CC2500_B1.c: 101: CC2500_InitPATable();
 16934  1B22  319C  24C3  319B   	fcall	_CC2500_InitPATable
 16935                           
 16936                           ;CC2500_B1.c: 102: CC2500_ClearTXFIFO();
 16937  1B25  3198  20EB  319B   	fcall	_CC2500_ClearTXFIFO
 16938                           
 16939                           ;CC2500_B1.c: 103: CC2500_ClearRXFIFO();
 16940  1B28  3198  20E7  319B   	fcall	_CC2500_ClearRXFIFO
 16941                           
 16942                           ;CC2500_B1.c: 104: CC2500_FrequencyCabr();
 16943  1B2B  3199  21CC  319B   	fcall	_CC2500_FrequencyCabr
 16944                           
 16945                           ;CC2500_B1.c: 105: CC2500_SIDLEMode();
 16946  1B2E  3198  20EF         	fcall	_CC2500_SIDLEMode
 16947  1B30  0008               	return
 16948  1B31                     __end_of_CC2500_PowerOnInitial:	
 16949                           
 16950                           	psect	text112
 16951  18EF                     __ptext112:	
 16952 ;; *************** function _CC2500_SIDLEMode *****************
 16953 ;; Defined at:
 16954 ;;		line 183 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
 16955 ;; Parameters:    Size  Location     Type
 16956 ;;		None
 16957 ;; Auto vars:     Size  Location     Type
 16958 ;;		None
 16959 ;; Return value:  Size  Location     Type
 16960 ;;		None               void
 16961 ;; Registers used:
 16962 ;;		wreg, status,2, status,0, pclath, cstack
 16963 ;; Tracked objects:
 16964 ;;		On entry : 0/0
 16965 ;;		On exit  : 0/0
 16966 ;;		Unchanged: 0/0
 16967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16968 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16969 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16971 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16972 ;;Total ram usage:        0 bytes
 16973 ;; Hardware stack levels used:    1
 16974 ;; Hardware stack levels required when called:    6
 16975 ;; This function calls:
 16976 ;;		_CC2500_WriteCommand
 16977 ;; This function is called by:
 16978 ;;		_CC2500_PowerOnInitial
 16979 ;; This function uses a non-reentrant model
 16980 ;;
 16981                           
 16982                           
 16983                           ;psect for function _CC2500_SIDLEMode
 16984  18EF                     _CC2500_SIDLEMode:	
 16985                           
 16986                           ;CC2500_B1.c: 185: CC2500_WriteCommand(0x36);
 16987                           
 16988                           ;incstack = 0
 16989                           ; Regs used in _CC2500_SIDLEMode: [wreg+status,2+status,0+pclath+cstack]
 16990  18EF  3036               	movlw	54
 16991  18F0  319A  225D         	fcall	_CC2500_WriteCommand
 16992  18F2  0008               	return
 16993  18F3                     __end_of_CC2500_SIDLEMode:	
 16994                           
 16995                           	psect	text113
 16996  1EE4                     __ptext113:	
 16997 ;; *************** function _CC2500_PowerRST *****************
 16998 ;; Defined at:
 16999 ;;		line 110 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
 17000 ;; Parameters:    Size  Location     Type
 17001 ;;		None
 17002 ;; Auto vars:     Size  Location     Type
 17003 ;;		None
 17004 ;; Return value:  Size  Location     Type
 17005 ;;		None               void
 17006 ;; Registers used:
 17007 ;;		wreg, status,2, status,0, pclath, cstack
 17008 ;; Tracked objects:
 17009 ;;		On entry : 0/0
 17010 ;;		On exit  : 0/0
 17011 ;;		Unchanged: 0/0
 17012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17015 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17016 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17017 ;;Total ram usage:        1 bytes
 17018 ;; Hardware stack levels used:    1
 17019 ;; Hardware stack levels required when called:    5
 17020 ;; This function calls:
 17021 ;;		_CC2500_WriteByte
 17022 ;;		_DelayTime_1us
 17023 ;; This function is called by:
 17024 ;;		_CC2500_PowerOnInitial
 17025 ;; This function uses a non-reentrant model
 17026 ;;
 17027                           
 17028                           
 17029                           ;psect for function _CC2500_PowerRST
 17030  1EE4                     _CC2500_PowerRST:	
 17031                           
 17032                           ;CC2500_B1.c: 112: RC1=0;
 17033                           
 17034                           ;incstack = 0
 17035                           ; Regs used in _CC2500_PowerRST: [wreg+status,2+status,0+pclath+cstack]
 17036  1EE4  0020               	movlb	0	; select bank0
 17037  1EE5  108E               	bcf	14,1	;volatile
 17038                           
 17039                           ;CC2500_B1.c: 113: RC0=0;
 17040  1EE6  100E               	bcf	14,0	;volatile
 17041                           
 17042                           ;CC2500_B1.c: 114: RC4=1;
 17043  1EE7  160E               	bsf	14,4	;volatile
 17044                           
 17045                           ;CC2500_B1.c: 115: DelayTime_1us(10);
 17046  1EE8  300A               	movlw	10
 17047  1EE9  00A0               	movwf	DelayTime_1us@count
 17048  1EEA  3000               	movlw	0
 17049  1EEB  00A1               	movwf	DelayTime_1us@count+1
 17050  1EEC  319D  258E  319E   	fcall	_DelayTime_1us
 17051                           
 17052                           ;CC2500_B1.c: 116: RC4=0;
 17053  1EEF  0020               	movlb	0	; select bank0
 17054  1EF0  120E               	bcf	14,4	;volatile
 17055                           
 17056                           ;CC2500_B1.c: 117: DelayTime_1us(10);
 17057  1EF1  300A               	movlw	10
 17058  1EF2  00A0               	movwf	DelayTime_1us@count
 17059  1EF3  3000               	movlw	0
 17060  1EF4  00A1               	movwf	DelayTime_1us@count+1
 17061  1EF5  319D  258E  319E   	fcall	_DelayTime_1us
 17062                           
 17063                           ;CC2500_B1.c: 118: RC4=1;
 17064  1EF8  0020               	movlb	0	; select bank0
 17065  1EF9  160E               	bsf	14,4	;volatile
 17066                           
 17067                           ;CC2500_B1.c: 119: DelayTime_1us(40);
 17068  1EFA  3028               	movlw	40
 17069  1EFB  00A0               	movwf	DelayTime_1us@count
 17070  1EFC  3000               	movlw	0
 17071  1EFD  00A1               	movwf	DelayTime_1us@count+1
 17072  1EFE  319D  258E  319E   	fcall	_DelayTime_1us
 17073                           
 17074                           ;CC2500_B1.c: 120: RC4=0;
 17075  1F01  0020               	movlb	0	; select bank0
 17076  1F02  120E               	bcf	14,4	;volatile
 17077                           
 17078                           ;CC2500_B1.c: 121: SPI0Buffer=0x30;
 17079  1F03  3030               	movlw	48
 17080  1F04  00A6               	movwf	??_CC2500_PowerRST
 17081  1F05  0826               	movf	??_CC2500_PowerRST,w
 17082  1F06  0021               	movlb	1	; select bank1
 17083  1F07  00BE               	movwf	_SPI0Buffer^(0+128)
 17084  1F08                     l340:	
 17085                           ;CC2500_B1.c: 122: while(RC2==1);
 17086                           
 17087  1F08  0020               	movlb	0	; select bank0
 17088  1F09  190E               	btfsc	14,2	;volatile
 17089  1F0A  2F08               	goto	l340
 17090                           
 17091                           ;CC2500_B1.c: 123: CC2500_WriteByte();
 17092  1F0B  319B  23B8  319E   	fcall	_CC2500_WriteByte
 17093  1F0E                     l343:	
 17094                           ;CC2500_B1.c: 124: while(RC2==1);
 17095                           
 17096  1F0E  0020               	movlb	0	; select bank0
 17097  1F0F  190E               	btfsc	14,2	;volatile
 17098  1F10  2F0E               	goto	l343
 17099                           
 17100                           ;CC2500_B1.c: 125: RC0=0;
 17101  1F11  100E               	bcf	14,0	;volatile
 17102                           
 17103                           ;CC2500_B1.c: 126: RC4=1;
 17104  1F12  160E               	bsf	14,4	;volatile
 17105  1F13  0008               	return
 17106  1F14                     __end_of_CC2500_PowerRST:	
 17107                           
 17108                           	psect	text114
 17109  1DDB                     __ptext114:	
 17110 ;; *************** function _CC2500_InitSetREG *****************
 17111 ;; Defined at:
 17112 ;;		line 131 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
 17113 ;; Parameters:    Size  Location     Type
 17114 ;;		None
 17115 ;; Auto vars:     Size  Location     Type
 17116 ;;  loop_c          1    8[BANK0 ] unsigned char 
 17117 ;;  temp2           1    7[BANK0 ] unsigned char 
 17118 ;;  temp1           1    6[BANK0 ] unsigned char 
 17119 ;; Return value:  Size  Location     Type
 17120 ;;		None               void
 17121 ;; Registers used:
 17122 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 17123 ;; Tracked objects:
 17124 ;;		On entry : 0/0
 17125 ;;		On exit  : 0/0
 17126 ;;		Unchanged: 0/0
 17127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17129 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17130 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17131 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17132 ;;Total ram usage:        4 bytes
 17133 ;; Hardware stack levels used:    1
 17134 ;; Hardware stack levels required when called:    6
 17135 ;; This function calls:
 17136 ;;		_CC2500_WriteREG
 17137 ;; This function is called by:
 17138 ;;		_CC2500_PowerOnInitial
 17139 ;; This function uses a non-reentrant model
 17140 ;;
 17141                           
 17142                           
 17143                           ;psect for function _CC2500_InitSetREG
 17144  1DDB                     _CC2500_InitSetREG:	
 17145                           
 17146                           ;CC2500_B1.c: 133: unsigned char loop_c;
 17147                           ;CC2500_B1.c: 134: unsigned char temp1,temp2;
 17148                           ;CC2500_B1.c: 136: for(loop_c=0;loop_c<47;loop_c++)
 17149                           
 17150                           ;incstack = 0
 17151                           ; Regs used in _CC2500_InitSetREG: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 17152  1DDB  0020               	movlb	0	; select bank0
 17153  1DDC  01A8               	clrf	CC2500_InitSetREG@loop_c
 17154  1DDD                     L14:	
 17155  1DDD  302F               	movlw	47
 17156  1DDE  0228               	subwf	CC2500_InitSetREG@loop_c,w
 17157  1DDF  1803               	btfsc	3,0
 17158  1DE0  0008               	return
 17159                           
 17160                           ;CC2500_B1.c: 137: {
 17161                           ;CC2500_B1.c: 138: temp1 = CC2500_registers_address[loop_c];
 17162  1DE1  0828               	movf	CC2500_InitSetREG@loop_c,w
 17163  1DE2  3E00               	addlw	low (_CC2500_registers_address| (0+32768))
 17164  1DE3  0084               	movwf	4
 17165  1DE4  3098               	movlw	high (_CC2500_registers_address| (0+32768))
 17166  1DE5  1803               	skipnc
 17167  1DE6  3E01               	addlw	1
 17168  1DE7  0085               	movwf	5
 17169  1DE8  0800               	movf	0,w	;code access
 17170  1DE9  00A5               	movwf	??_CC2500_InitSetREG
 17171  1DEA  0825               	movf	??_CC2500_InitSetREG,w
 17172  1DEB  00A6               	movwf	CC2500_InitSetREG@temp1
 17173                           
 17174                           ;CC2500_B1.c: 139: temp2 = CC2500_rfSettings[loop_c];
 17175  1DEC  0828               	movf	CC2500_InitSetREG@loop_c,w
 17176  1DED  3E2F               	addlw	low (_CC2500_rfSettings| (0+32768))
 17177  1DEE  0084               	movwf	4
 17178  1DEF  3098               	movlw	high (_CC2500_rfSettings| (0+32768))
 17179  1DF0  1803               	skipnc
 17180  1DF1  3E01               	addlw	1
 17181  1DF2  0085               	movwf	5
 17182  1DF3  0800               	movf	0,w	;code access
 17183  1DF4  00A5               	movwf	??_CC2500_InitSetREG
 17184  1DF5  0825               	movf	??_CC2500_InitSetREG,w
 17185  1DF6  00A7               	movwf	CC2500_InitSetREG@temp2
 17186                           
 17187                           ;CC2500_B1.c: 141: CC2500_WriteREG(temp1,temp2);
 17188  1DF7  0827               	movf	CC2500_InitSetREG@temp2,w
 17189  1DF8  00A5               	movwf	??_CC2500_InitSetREG
 17190  1DF9  0825               	movf	??_CC2500_InitSetREG,w
 17191  1DFA  00A2               	movwf	CC2500_WriteREG@value
 17192  1DFB  0826               	movf	CC2500_InitSetREG@temp1,w
 17193  1DFC  319B  23D1  319D   	fcall	_CC2500_WriteREG
 17194  1DFF  3001               	movlw	1
 17195  1E00  0020               	movlb	0	; select bank0
 17196  1E01  00A5               	movwf	??_CC2500_InitSetREG
 17197  1E02  0825               	movf	??_CC2500_InitSetREG,w
 17198  1E03  07A8               	addwf	CC2500_InitSetREG@loop_c,f
 17199  1E04  2DDD               	goto	L14
 17200  1E05                     __end_of_CC2500_InitSetREG:	
 17201                           
 17202                           	psect	text115
 17203  1CC3                     __ptext115:	
 17204 ;; *************** function _CC2500_InitPATable *****************
 17205 ;; Defined at:
 17206 ;;		line 147 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
 17207 ;; Parameters:    Size  Location     Type
 17208 ;;		None
 17209 ;; Auto vars:     Size  Location     Type
 17210 ;;  loop_d          1    7[BANK0 ] unsigned char 
 17211 ;;  temp            1    6[BANK0 ] unsigned char 
 17212 ;; Return value:  Size  Location     Type
 17213 ;;		None               void
 17214 ;; Registers used:
 17215 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 17216 ;; Tracked objects:
 17217 ;;		On entry : 0/0
 17218 ;;		On exit  : 0/0
 17219 ;;		Unchanged: 0/0
 17220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17221 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17222 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17223 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17224 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17225 ;;Total ram usage:        3 bytes
 17226 ;; Hardware stack levels used:    1
 17227 ;; Hardware stack levels required when called:    6
 17228 ;; This function calls:
 17229 ;;		_CC2500_WriteREG
 17230 ;; This function is called by:
 17231 ;;		_CC2500_PowerOnInitial
 17232 ;; This function uses a non-reentrant model
 17233 ;;
 17234                           
 17235                           
 17236                           ;psect for function _CC2500_InitPATable
 17237  1CC3                     _CC2500_InitPATable:	
 17238                           
 17239                           ;CC2500_B1.c: 149: unsigned char loop_d;
 17240                           ;CC2500_B1.c: 150: unsigned char temp;
 17241                           ;CC2500_B1.c: 152: for(loop_d=0;loop_d<8;loop_d++)
 17242                           
 17243                           ;incstack = 0
 17244                           ; Regs used in _CC2500_InitPATable: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 17245  1CC3  0020               	movlb	0	; select bank0
 17246  1CC4  01A7               	clrf	CC2500_InitPATable@loop_d
 17247  1CC5                     L15:	
 17248  1CC5  3008               	movlw	8
 17249  1CC6  0227               	subwf	CC2500_InitPATable@loop_d,w
 17250  1CC7  1803               	btfsc	3,0
 17251  1CC8  0008               	return
 17252                           
 17253                           ;CC2500_B1.c: 153: {
 17254                           ;CC2500_B1.c: 154: temp=CC2500_patable_vaule[loop_d];
 17255  1CC9  0827               	movf	CC2500_InitPATable@loop_d,w
 17256  1CCA  3E5E               	addlw	low (_CC2500_patable_vaule| (0+32768))
 17257  1CCB  0084               	movwf	4
 17258  1CCC  3098               	movlw	high (_CC2500_patable_vaule| (0+32768))
 17259  1CCD  1803               	skipnc
 17260  1CCE  3E01               	addlw	1
 17261  1CCF  0085               	movwf	5
 17262  1CD0  0800               	movf	0,w	;code access
 17263  1CD1  00A5               	movwf	??_CC2500_InitPATable
 17264  1CD2  0825               	movf	??_CC2500_InitPATable,w
 17265  1CD3  00A6               	movwf	CC2500_InitPATable@temp
 17266                           
 17267                           ;CC2500_B1.c: 155: CC2500_WriteREG(0x3E,temp);
 17268  1CD4  0826               	movf	CC2500_InitPATable@temp,w
 17269  1CD5  00A5               	movwf	??_CC2500_InitPATable
 17270  1CD6  0825               	movf	??_CC2500_InitPATable,w
 17271  1CD7  00A2               	movwf	CC2500_WriteREG@value
 17272  1CD8  303E               	movlw	62
 17273  1CD9  319B  23D1  319C   	fcall	_CC2500_WriteREG
 17274  1CDC  3001               	movlw	1
 17275  1CDD  0020               	movlb	0	; select bank0
 17276  1CDE  00A5               	movwf	??_CC2500_InitPATable
 17277  1CDF  0825               	movf	??_CC2500_InitPATable,w
 17278  1CE0  07A7               	addwf	CC2500_InitPATable@loop_d,f
 17279  1CE1  2CC5               	goto	L15
 17280  1CE2                     __end_of_CC2500_InitPATable:	
 17281                           
 17282                           	psect	text116
 17283  1BD1                     __ptext116:	
 17284 ;; *************** function _CC2500_WriteREG *****************
 17285 ;; Defined at:
 17286 ;;		line 227 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
 17287 ;; Parameters:    Size  Location     Type
 17288 ;;  w_addr          1    wreg     unsigned char 
 17289 ;;  value           1    2[BANK0 ] unsigned char 
 17290 ;; Auto vars:     Size  Location     Type
 17291 ;;  w_addr          1    4[BANK0 ] unsigned char 
 17292 ;; Return value:  Size  Location     Type
 17293 ;;		None               void
 17294 ;; Registers used:
 17295 ;;		wreg, status,2, status,0, pclath, cstack
 17296 ;; Tracked objects:
 17297 ;;		On entry : 0/0
 17298 ;;		On exit  : 0/0
 17299 ;;		Unchanged: 0/0
 17300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17301 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17302 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17303 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17304 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17305 ;;Total ram usage:        3 bytes
 17306 ;; Hardware stack levels used:    1
 17307 ;; Hardware stack levels required when called:    5
 17308 ;; This function calls:
 17309 ;;		_CC2500_WriteByte
 17310 ;; This function is called by:
 17311 ;;		_CC2500_InitSetREG
 17312 ;;		_CC2500_InitPATable
 17313 ;; This function uses a non-reentrant model
 17314 ;;
 17315                           
 17316                           
 17317                           ;psect for function _CC2500_WriteREG
 17318  1BD1                     _CC2500_WriteREG:	
 17319                           
 17320                           ;incstack = 0
 17321                           ; Regs used in _CC2500_WriteREG: [wreg+status,2+status,0+pclath+cstack]
 17322                           ;CC2500_WriteREG@w_addr stored from wreg
 17323  1BD1  0020               	movlb	0	; select bank0
 17324  1BD2  00A4               	movwf	CC2500_WriteREG@w_addr
 17325                           
 17326                           ;CC2500_B1.c: 229: RC4=0;
 17327  1BD3  120E               	bcf	14,4	;volatile
 17328                           
 17329                           ;CC2500_B1.c: 230: SPI0Buffer=w_addr;
 17330  1BD4  0824               	movf	CC2500_WriteREG@w_addr,w
 17331  1BD5  00A3               	movwf	??_CC2500_WriteREG
 17332  1BD6  0823               	movf	??_CC2500_WriteREG,w
 17333  1BD7  0021               	movlb	1	; select bank1
 17334  1BD8  00BE               	movwf	_SPI0Buffer^(0+128)
 17335  1BD9                     l385:	
 17336                           ;CC2500_B1.c: 231: while(RC2==1);
 17337                           
 17338  1BD9  0020               	movlb	0	; select bank0
 17339  1BDA  190E               	btfsc	14,2	;volatile
 17340  1BDB  2BD9               	goto	l385
 17341                           
 17342                           ;CC2500_B1.c: 232: CC2500_WriteByte();
 17343  1BDC  319B  23B8  319B   	fcall	_CC2500_WriteByte
 17344                           
 17345                           ;CC2500_B1.c: 233: SPI0Buffer=value;
 17346  1BDF  0020               	movlb	0	; select bank0
 17347  1BE0  0822               	movf	CC2500_WriteREG@value,w
 17348  1BE1  00A3               	movwf	??_CC2500_WriteREG
 17349  1BE2  0823               	movf	??_CC2500_WriteREG,w
 17350  1BE3  0021               	movlb	1	; select bank1
 17351  1BE4  00BE               	movwf	_SPI0Buffer^(0+128)
 17352                           
 17353                           ;CC2500_B1.c: 234: CC2500_WriteByte();
 17354  1BE5  319B  23B8         	fcall	_CC2500_WriteByte
 17355                           
 17356                           ;CC2500_B1.c: 235: RC4=1;
 17357  1BE7  0020               	movlb	0	; select bank0
 17358  1BE8  160E               	bsf	14,4	;volatile
 17359  1BE9  0008               	return
 17360  1BEA                     __end_of_CC2500_WriteREG:	
 17361                           
 17362                           	psect	text117
 17363  19CC                     __ptext117:	
 17364 ;; *************** function _CC2500_FrequencyCabr *****************
 17365 ;; Defined at:
 17366 ;;		line 175 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
 17367 ;; Parameters:    Size  Location     Type
 17368 ;;		None
 17369 ;; Auto vars:     Size  Location     Type
 17370 ;;		None
 17371 ;; Return value:  Size  Location     Type
 17372 ;;		None               void
 17373 ;; Registers used:
 17374 ;;		wreg, status,2, status,0, pclath, cstack
 17375 ;; Tracked objects:
 17376 ;;		On entry : 0/0
 17377 ;;		On exit  : 0/0
 17378 ;;		Unchanged: 0/0
 17379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17383 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17384 ;;Total ram usage:        0 bytes
 17385 ;; Hardware stack levels used:    1
 17386 ;; Hardware stack levels required when called:    6
 17387 ;; This function calls:
 17388 ;;		_CC2500_WriteCommand
 17389 ;;		_DelayTime_1us
 17390 ;; This function is called by:
 17391 ;;		_CC2500_PowerOnInitial
 17392 ;; This function uses a non-reentrant model
 17393 ;;
 17394                           
 17395                           
 17396                           ;psect for function _CC2500_FrequencyCabr
 17397  19CC                     _CC2500_FrequencyCabr:	
 17398                           
 17399                           ;CC2500_B1.c: 177: CC2500_WriteCommand(0x33);
 17400                           
 17401                           ;incstack = 0
 17402                           ; Regs used in _CC2500_FrequencyCabr: [wreg+status,2+status,0+pclath+cstack]
 17403  19CC  3033               	movlw	51
 17404  19CD  319A  225D  3199   	fcall	_CC2500_WriteCommand
 17405                           
 17406                           ;CC2500_B1.c: 178: DelayTime_1us(1000);
 17407  19D0  30E8               	movlw	232
 17408  19D1  0020               	movlb	0	; select bank0
 17409  19D2  00A0               	movwf	DelayTime_1us@count
 17410  19D3  3003               	movlw	3
 17411  19D4  00A1               	movwf	DelayTime_1us@count+1
 17412  19D5  319D  258E         	fcall	_DelayTime_1us
 17413  19D7  0008               	return
 17414  19D8                     __end_of_CC2500_FrequencyCabr:	
 17415                           
 17416                           	psect	text118
 17417  1D8E                     __ptext118:	
 17418 ;; *************** function _DelayTime_1us *****************
 17419 ;; Defined at:
 17420 ;;		line 283 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
 17421 ;; Parameters:    Size  Location     Type
 17422 ;;  count           2    0[BANK0 ] int 
 17423 ;; Auto vars:     Size  Location     Type
 17424 ;;  j               2    4[BANK0 ] unsigned int 
 17425 ;;  i               2    2[BANK0 ] unsigned int 
 17426 ;; Return value:  Size  Location     Type
 17427 ;;		None               void
 17428 ;; Registers used:
 17429 ;;		wreg, status,2
 17430 ;; Tracked objects:
 17431 ;;		On entry : 0/0
 17432 ;;		On exit  : 0/0
 17433 ;;		Unchanged: 0/0
 17434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17435 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17436 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17438 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17439 ;;Total ram usage:        6 bytes
 17440 ;; Hardware stack levels used:    1
 17441 ;; Hardware stack levels required when called:    4
 17442 ;; This function calls:
 17443 ;;		Nothing
 17444 ;; This function is called by:
 17445 ;;		_CC2500_PowerRST
 17446 ;;		_CC2500_FrequencyCabr
 17447 ;; This function uses a non-reentrant model
 17448 ;;
 17449                           
 17450                           
 17451                           ;psect for function _DelayTime_1us
 17452  1D8E                     _DelayTime_1us:	
 17453                           
 17454                           ;CC2500_B1.c: 285: unsigned int i,j;
 17455                           ;CC2500_B1.c: 286: for(i=1;i<count;i++)
 17456                           
 17457                           ;incstack = 0
 17458                           ; Regs used in _DelayTime_1us: [wreg+status,2]
 17459  1D8E  3001               	movlw	1
 17460  1D8F  0020               	movlb	0	; select bank0
 17461  1D90  00A2               	movwf	DelayTime_1us@i
 17462  1D91  3000               	movlw	0
 17463  1D92  00A3               	movwf	DelayTime_1us@i+1
 17464  1D93                     l409:	
 17465  1D93  0821               	movf	DelayTime_1us@count+1,w
 17466  1D94  0223               	subwf	DelayTime_1us@i+1,w
 17467  1D95  1D03               	skipz
 17468  1D96  2D99               	goto	u8815
 17469  1D97  0820               	movf	DelayTime_1us@count,w
 17470  1D98  0222               	subwf	DelayTime_1us@i,w
 17471  1D99                     u8815:	
 17472  1D99  1803               	btfsc	3,0
 17473  1D9A  0008               	return
 17474                           
 17475                           ;CC2500_B1.c: 287: for(j=0;j<=1;j++);
 17476  1D9B  01A4               	clrf	DelayTime_1us@j
 17477  1D9C  01A5               	clrf	DelayTime_1us@j+1
 17478  1D9D  3000               	movlw	0
 17479  1D9E  0225               	subwf	DelayTime_1us@j+1,w
 17480  1D9F  3002               	movlw	2
 17481  1DA0  1903               	skipnz
 17482  1DA1  0224               	subwf	DelayTime_1us@j,w
 17483  1DA2  1803               	btfsc	3,0
 17484  1DA3  2DAF               	goto	l8811
 17485  1DA4                     l8809:	
 17486  1DA4  3001               	movlw	1
 17487  1DA5  07A4               	addwf	DelayTime_1us@j,f
 17488  1DA6  3000               	movlw	0
 17489  1DA7  3DA5               	addwfc	DelayTime_1us@j+1,f
 17490  1DA8  3000               	movlw	0
 17491  1DA9  0225               	subwf	DelayTime_1us@j+1,w
 17492  1DAA  3002               	movlw	2
 17493  1DAB  1903               	skipnz
 17494  1DAC  0224               	subwf	DelayTime_1us@j,w
 17495  1DAD  1C03               	skipc
 17496  1DAE  2DA4               	goto	l8809
 17497  1DAF                     l8811:	
 17498  1DAF  3001               	movlw	1
 17499  1DB0  07A2               	addwf	DelayTime_1us@i,f
 17500  1DB1  3000               	movlw	0
 17501  1DB2  3DA3               	addwfc	DelayTime_1us@i+1,f
 17502  1DB3  2D93               	goto	l409
 17503  1DB4                     __end_of_DelayTime_1us:	
 17504                           
 17505                           	psect	text119
 17506  18EB                     __ptext119:	
 17507 ;; *************** function _CC2500_ClearTXFIFO *****************
 17508 ;; Defined at:
 17509 ;;		line 161 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
 17510 ;; Parameters:    Size  Location     Type
 17511 ;;		None
 17512 ;; Auto vars:     Size  Location     Type
 17513 ;;		None
 17514 ;; Return value:  Size  Location     Type
 17515 ;;		None               void
 17516 ;; Registers used:
 17517 ;;		wreg, status,2, status,0, pclath, cstack
 17518 ;; Tracked objects:
 17519 ;;		On entry : 0/0
 17520 ;;		On exit  : 0/0
 17521 ;;		Unchanged: 0/0
 17522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17523 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17524 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17525 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17526 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17527 ;;Total ram usage:        0 bytes
 17528 ;; Hardware stack levels used:    1
 17529 ;; Hardware stack levels required when called:    6
 17530 ;; This function calls:
 17531 ;;		_CC2500_WriteCommand
 17532 ;; This function is called by:
 17533 ;;		_CC2500_PowerOnInitial
 17534 ;; This function uses a non-reentrant model
 17535 ;;
 17536                           
 17537                           
 17538                           ;psect for function _CC2500_ClearTXFIFO
 17539  18EB                     _CC2500_ClearTXFIFO:	
 17540                           
 17541                           ;CC2500_B1.c: 163: CC2500_WriteCommand(0x3B);
 17542                           
 17543                           ;incstack = 0
 17544                           ; Regs used in _CC2500_ClearTXFIFO: [wreg+status,2+status,0+pclath+cstack]
 17545  18EB  303B               	movlw	59
 17546  18EC  319A  225D         	fcall	_CC2500_WriteCommand
 17547  18EE  0008               	return
 17548  18EF                     __end_of_CC2500_ClearTXFIFO:	
 17549                           
 17550                           	psect	text120
 17551  18E7                     __ptext120:	
 17552 ;; *************** function _CC2500_ClearRXFIFO *****************
 17553 ;; Defined at:
 17554 ;;		line 168 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
 17555 ;; Parameters:    Size  Location     Type
 17556 ;;		None
 17557 ;; Auto vars:     Size  Location     Type
 17558 ;;		None
 17559 ;; Return value:  Size  Location     Type
 17560 ;;		None               void
 17561 ;; Registers used:
 17562 ;;		wreg, status,2, status,0, pclath, cstack
 17563 ;; Tracked objects:
 17564 ;;		On entry : 0/0
 17565 ;;		On exit  : 0/0
 17566 ;;		Unchanged: 0/0
 17567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17571 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17572 ;;Total ram usage:        0 bytes
 17573 ;; Hardware stack levels used:    1
 17574 ;; Hardware stack levels required when called:    6
 17575 ;; This function calls:
 17576 ;;		_CC2500_WriteCommand
 17577 ;; This function is called by:
 17578 ;;		_CC2500_PowerOnInitial
 17579 ;; This function uses a non-reentrant model
 17580 ;;
 17581                           
 17582                           
 17583                           ;psect for function _CC2500_ClearRXFIFO
 17584  18E7                     _CC2500_ClearRXFIFO:	
 17585                           
 17586                           ;CC2500_B1.c: 170: CC2500_WriteCommand(0x3A);
 17587                           
 17588                           ;incstack = 0
 17589                           ; Regs used in _CC2500_ClearRXFIFO: [wreg+status,2+status,0+pclath+cstack]
 17590  18E7  303A               	movlw	58
 17591  18E8  319A  225D         	fcall	_CC2500_WriteCommand
 17592  18EA  0008               	return
 17593  18EB                     __end_of_CC2500_ClearRXFIFO:	
 17594                           
 17595                           	psect	text121
 17596  1A5D                     __ptext121:	
 17597 ;; *************** function _CC2500_WriteCommand *****************
 17598 ;; Defined at:
 17599 ;;		line 253 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
 17600 ;; Parameters:    Size  Location     Type
 17601 ;;  command         1    wreg     unsigned char 
 17602 ;; Auto vars:     Size  Location     Type
 17603 ;;  command         1    3[BANK0 ] unsigned char 
 17604 ;; Return value:  Size  Location     Type
 17605 ;;		None               void
 17606 ;; Registers used:
 17607 ;;		wreg, status,2, status,0, pclath, cstack
 17608 ;; Tracked objects:
 17609 ;;		On entry : 0/0
 17610 ;;		On exit  : 0/0
 17611 ;;		Unchanged: 0/0
 17612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17614 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17615 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17616 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17617 ;;Total ram usage:        2 bytes
 17618 ;; Hardware stack levels used:    1
 17619 ;; Hardware stack levels required when called:    5
 17620 ;; This function calls:
 17621 ;;		_CC2500_WriteByte
 17622 ;; This function is called by:
 17623 ;;		_CC2500_TxData
 17624 ;;		_CC2500_RxData
 17625 ;;		_CC2500_ClearTXFIFO
 17626 ;;		_CC2500_ClearRXFIFO
 17627 ;;		_CC2500_FrequencyCabr
 17628 ;;		_CC2500_SIDLEMode
 17629 ;;		_setRF_Main
 17630 ;;		_RF_RxDisable
 17631 ;; This function uses a non-reentrant model
 17632 ;;
 17633                           
 17634                           
 17635                           ;psect for function _CC2500_WriteCommand
 17636  1A5D                     _CC2500_WriteCommand:	
 17637                           
 17638                           ;incstack = 0
 17639                           ; Regs used in _CC2500_WriteCommand: [wreg+status,2+status,0+pclath+cstack]
 17640                           ;CC2500_WriteCommand@command stored from wreg
 17641  1A5D  0020               	movlb	0	; select bank0
 17642  1A5E  00A3               	movwf	CC2500_WriteCommand@command
 17643                           
 17644                           ;CC2500_B1.c: 255: RC4=0;
 17645  1A5F  120E               	bcf	14,4	;volatile
 17646                           
 17647                           ;CC2500_B1.c: 256: SPI0Buffer=command;
 17648  1A60  0823               	movf	CC2500_WriteCommand@command,w
 17649  1A61  00A2               	movwf	??_CC2500_WriteCommand
 17650  1A62  0822               	movf	??_CC2500_WriteCommand,w
 17651  1A63  0021               	movlb	1	; select bank1
 17652  1A64  00BE               	movwf	_SPI0Buffer^(0+128)
 17653  1A65                     l397:	
 17654                           ;CC2500_B1.c: 258: while(RC2==1);
 17655                           
 17656  1A65  0020               	movlb	0	; select bank0
 17657  1A66  190E               	btfsc	14,2	;volatile
 17658  1A67  2A65               	goto	l397
 17659                           
 17660                           ;CC2500_B1.c: 260: CC2500_WriteByte();
 17661  1A68  319B  23B8         	fcall	_CC2500_WriteByte
 17662                           
 17663                           ;CC2500_B1.c: 261: RC4=1;
 17664  1A6A  0020               	movlb	0	; select bank0
 17665  1A6B  160E               	bsf	14,4	;volatile
 17666  1A6C  0008               	return
 17667  1A6D                     __end_of_CC2500_WriteCommand:	
 17668                           
 17669                           	psect	text122
 17670  1BB8                     __ptext122:	
 17671 ;; *************** function _CC2500_WriteByte *****************
 17672 ;; Defined at:
 17673 ;;		line 193 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
 17674 ;; Parameters:    Size  Location     Type
 17675 ;;		None
 17676 ;; Auto vars:     Size  Location     Type
 17677 ;;  loop_a          1    1[BANK0 ] unsigned char 
 17678 ;; Return value:  Size  Location     Type
 17679 ;;		None               void
 17680 ;; Registers used:
 17681 ;;		wreg, status,2, status,0
 17682 ;; Tracked objects:
 17683 ;;		On entry : 0/0
 17684 ;;		On exit  : 0/0
 17685 ;;		Unchanged: 0/0
 17686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17688 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17689 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17690 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17691 ;;Total ram usage:        2 bytes
 17692 ;; Hardware stack levels used:    1
 17693 ;; Hardware stack levels required when called:    4
 17694 ;; This function calls:
 17695 ;;		Nothing
 17696 ;; This function is called by:
 17697 ;;		_CC2500_TxData
 17698 ;;		_CC2500_RxData
 17699 ;;		_CC2500_PowerRST
 17700 ;;		_CC2500_WriteREG
 17701 ;;		_CC2500_WriteCommand
 17702 ;;		_CC2500_ReadStatus
 17703 ;;		_CC2500_ReadREG
 17704 ;; This function uses a non-reentrant model
 17705 ;;
 17706                           
 17707                           
 17708                           ;psect for function _CC2500_WriteByte
 17709  1BB8                     _CC2500_WriteByte:	
 17710                           
 17711                           ;CC2500_B1.c: 195: unsigned char loop_a;
 17712                           ;CC2500_B1.c: 196: for(loop_a=0;loop_a<8;loop_a++)
 17713                           
 17714                           ;incstack = 0
 17715                           ; Regs used in _CC2500_WriteByte: [wreg+status,2+status,0]
 17716  1BB8  0020               	movlb	0	; select bank0
 17717  1BB9  01A1               	clrf	CC2500_WriteByte@loop_a
 17718  1BBA                     L16:	
 17719  1BBA  3008               	movlw	8
 17720  1BBB  0221               	subwf	CC2500_WriteByte@loop_a,w
 17721  1BBC  1803               	btfsc	3,0
 17722  1BBD  0008               	return
 17723                           
 17724                           ;CC2500_B1.c: 197: {
 17725                           ;CC2500_B1.c: 198: if(SPI0Buffer&0x80)
 17726  1BBE  0021               	movlb	1	; select bank1
 17727  1BBF  1FBE               	btfss	_SPI0Buffer^(0+128),7
 17728  1BC0  2BC4               	goto	l373
 17729                           
 17730                           ;CC2500_B1.c: 199: RC0=1;
 17731  1BC1  0020               	movlb	0	; select bank0
 17732  1BC2  140E               	bsf	14,0	;volatile
 17733  1BC3  2BC6               	goto	l374
 17734  1BC4                     l373:	
 17735                           
 17736                           ;CC2500_B1.c: 200: else
 17737                           ;CC2500_B1.c: 201: RC0=0;
 17738  1BC4  0020               	movlb	0	; select bank0
 17739  1BC5  100E               	bcf	14,0	;volatile
 17740  1BC6                     l374:	
 17741                           
 17742                           ;CC2500_B1.c: 202: RC1=1;
 17743  1BC6  148E               	bsf	14,1	;volatile
 17744                           
 17745                           ;CC2500_B1.c: 203: SPI0Buffer<<=1;
 17746  1BC7  1003               	clrc
 17747  1BC8  0021               	movlb	1	; select bank1
 17748  1BC9  0DBE               	rlf	_SPI0Buffer^(0+128),f
 17749                           
 17750                           ;CC2500_B1.c: 204: RC1=0;
 17751  1BCA  0020               	movlb	0	; select bank0
 17752  1BCB  108E               	bcf	14,1	;volatile
 17753  1BCC  3001               	movlw	1
 17754  1BCD  00A0               	movwf	??_CC2500_WriteByte
 17755  1BCE  0820               	movf	??_CC2500_WriteByte,w
 17756  1BCF  07A1               	addwf	CC2500_WriteByte@loop_a,f
 17757  1BD0  2BBA               	goto	L16
 17758  1BD1                     __end_of_CC2500_WriteByte:	
 17759                           
 17760                           	psect	text123
 17761  0C1C                     __ptext123:	
 17762 ;; *************** function _Buzzer_Main *****************
 17763 ;; Defined at:
 17764 ;;		line 53 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Buzzer_B1.c"
 17765 ;; Parameters:    Size  Location     Type
 17766 ;;		None
 17767 ;; Auto vars:     Size  Location     Type
 17768 ;;		None
 17769 ;; Return value:  Size  Location     Type
 17770 ;;		None               void
 17771 ;; Registers used:
 17772 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 17773 ;; Tracked objects:
 17774 ;;		On entry : 0/0
 17775 ;;		On exit  : 0/0
 17776 ;;		Unchanged: 0/0
 17777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17778 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17779 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17780 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17781 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17782 ;;Total ram usage:        4 bytes
 17783 ;; Hardware stack levels used:    1
 17784 ;; Hardware stack levels required when called:    4
 17785 ;; This function calls:
 17786 ;;		Nothing
 17787 ;; This function is called by:
 17788 ;;		_main
 17789 ;; This function uses a non-reentrant model
 17790 ;;
 17791                           
 17792                           
 17793                           ;psect for function _Buzzer_Main
 17794  0C1C                     _Buzzer_Main:	
 17795                           
 17796                           ;Buzzer_B1.c: 55: Buz->Switch=(RB3)?1:0;
 17797                           
 17798                           ;incstack = 0
 17799                           ; Regs used in _Buzzer_Main: [wreg-fsr1h+status,2+status,0]
 17800  0C1C  0020               	movlb	0	; select bank0
 17801  0C1D  0868               	movf	_Buz,w
 17802  0C1E  0086               	movwf	6
 17803  0C1F  3001               	movlw	1	; select bank2/3
 17804  0C20  0087               	movwf	7
 17805  0C21  1281               	bcf	1,5
 17806  0C22  198D               	btfsc	13,3	;volatile
 17807  0C23  1681               	bsf	1,5
 17808                           
 17809                           ;Buzzer_B1.c: 57: if(Buz->GO)
 17810  0C24  0020               	movlb	0	; select bank0
 17811  0C25  0868               	movf	_Buz,w
 17812  0C26  0086               	movwf	6
 17813  0C27  3001               	movlw	1	; select bank2/3
 17814  0C28  0087               	movwf	7
 17815  0C29  1C81               	btfss	1,1
 17816  0C2A  0008               	return
 17817                           
 17818                           ;Buzzer_B1.c: 58: {
 17819                           ;Buzzer_B1.c: 60: if(Buz->Time >= Buz->TimeValue)
 17820  0C2B  0868               	movf	_Buz,w
 17821  0C2C  3E06               	addlw	6
 17822  0C2D  0086               	movwf	6
 17823  0C2E  3001               	movlw	1	; select bank2/3
 17824  0C2F  0087               	movwf	7
 17825  0C30  3F40               	moviw [0]fsr1
 17826  0C31  00A0               	movwf	??_Buzzer_Main
 17827  0C32  3F41               	moviw [1]fsr1
 17828  0C33  00A1               	movwf	??_Buzzer_Main+1
 17829  0C34  0A68               	incf	_Buz,w
 17830  0C35  0086               	movwf	6
 17831  0C36  3001               	movlw	1	; select bank2/3
 17832  0C37  0087               	movwf	7
 17833  0C38  3F40               	moviw [0]fsr1
 17834  0C39  00A2               	movwf	??_Buzzer_Main+2
 17835  0C3A  3F41               	moviw [1]fsr1
 17836  0C3B  00A3               	movwf	??_Buzzer_Main+3
 17837  0C3C  0821               	movf	??_Buzzer_Main+1,w
 17838  0C3D  0223               	subwf	??_Buzzer_Main+3,w
 17839  0C3E  1D03               	skipz
 17840  0C3F  2C42               	goto	u9995
 17841  0C40  0820               	movf	??_Buzzer_Main,w
 17842  0C41  0222               	subwf	??_Buzzer_Main+2,w
 17843  0C42                     u9995:	
 17844  0C42  1C03               	skipc
 17845  0C43  0008               	return
 17846                           
 17847                           ;Buzzer_B1.c: 61: {
 17848                           ;Buzzer_B1.c: 62: Buz->Time=0;
 17849  0C44  0A68               	incf	_Buz,w
 17850  0C45  0086               	movwf	6
 17851  0C46  3001               	movlw	1	; select bank2/3
 17852  0C47  0087               	movwf	7
 17853  0C48  3000               	movlw	0
 17854  0C49  3FC0               	movwi [0]fsr1
 17855  0C4A  3FC1               	movwi [1]fsr1
 17856                           
 17857                           ;Buzzer_B1.c: 63: if(!Buz->Switch)
 17858  0C4B  0868               	movf	_Buz,w
 17859  0C4C  0086               	movwf	6
 17860  0C4D  3001               	movlw	1	; select bank2/3
 17861  0C4E  0087               	movwf	7
 17862  0C4F  1A81               	btfsc	1,5
 17863  0C50  2CB6               	goto	l9643
 17864                           
 17865                           ;Buzzer_B1.c: 64: {
 17866                           ;Buzzer_B1.c: 65: if(Buz->Count == 0)
 17867  0C51  0868               	movf	_Buz,w
 17868  0C52  3E03               	addlw	3
 17869  0C53  0086               	movwf	6
 17870  0C54  3001               	movlw	1	; select bank2/3
 17871  0C55  0087               	movwf	7
 17872  0C56  0881               	movf	1,f
 17873  0C57  1D03               	skipz
 17874  0C58  2CAF               	goto	l9639
 17875                           
 17876                           ;Buzzer_B1.c: 66: {
 17877                           ;Buzzer_B1.c: 67: if(Buz->BufferStatus1)
 17878  0C59  0868               	movf	_Buz,w
 17879  0C5A  0086               	movwf	6
 17880  0C5B  3001               	movlw	1	; select bank2/3
 17881  0C5C  0087               	movwf	7
 17882  0C5D  1D81               	btfss	1,3
 17883  0C5E  2C81               	goto	l9631
 17884                           
 17885                           ;Buzzer_B1.c: 68: {
 17886                           ;Buzzer_B1.c: 69: Buz->BufferStatus1=0;
 17887  0C5F  0868               	movf	_Buz,w
 17888  0C60  0086               	movwf	6
 17889  0C61  3001               	movlw	1	; select bank2/3
 17890  0C62  0087               	movwf	7
 17891  0C63  1181               	bcf	1,3
 17892                           
 17893                           ;Buzzer_B1.c: 70: Buz->Count=Buz->CountBuffer1;
 17894  0C64  0868               	movf	_Buz,w
 17895  0C65  3E04               	addlw	4
 17896  0C66  0086               	movwf	6
 17897  0C67  3001               	movlw	1	; select bank2/3
 17898  0C68  0087               	movwf	7
 17899  0C69  0801               	movf	1,w
 17900  0C6A  00A0               	movwf	??_Buzzer_Main
 17901  0C6B  0868               	movf	_Buz,w
 17902  0C6C  3E03               	addlw	3
 17903  0C6D  0086               	movwf	6
 17904  0C6E  3001               	movlw	1	; select bank2/3
 17905  0C6F  0087               	movwf	7
 17906  0C70  0820               	movf	??_Buzzer_Main,w
 17907  0C71  0081               	movwf	1
 17908                           
 17909                           ;Buzzer_B1.c: 71: Buz->TimeValue=Buz->TimeValueBuffer1;
 17910  0C72  0868               	movf	_Buz,w
 17911  0C73  3E08               	addlw	8
 17912  0C74  0086               	movwf	6
 17913  0C75  3001               	movlw	1	; select bank2/3
 17914  0C76  0087               	movwf	7
 17915  0C77  0868               	movf	_Buz,w
 17916  0C78  3E06               	addlw	6
 17917  0C79  0084               	movwf	4
 17918  0C7A  3001               	movlw	1	; select bank2/3
 17919  0C7B  0085               	movwf	5
 17920  0C7C  3F40               	moviw [0]fsr1
 17921  0C7D  3F80               	movwi [0]fsr0
 17922  0C7E  3F41               	moviw [1]fsr1
 17923  0C7F  3F81               	movwi [1]fsr0
 17924                           
 17925                           ;Buzzer_B1.c: 72: }
 17926  0C80  0008               	return
 17927  0C81                     l9631:	
 17928                           
 17929                           ;Buzzer_B1.c: 73: else if(Buz->BufferStatus2)
 17930  0C81  0868               	movf	_Buz,w
 17931  0C82  0086               	movwf	6
 17932  0C83  3001               	movlw	1	; select bank2/3
 17933  0C84  0087               	movwf	7
 17934  0C85  1E01               	btfss	1,4
 17935  0C86  2CA9               	goto	l9637
 17936                           
 17937                           ;Buzzer_B1.c: 74: {
 17938                           ;Buzzer_B1.c: 75: Buz->BufferStatus2=0;
 17939  0C87  0868               	movf	_Buz,w
 17940  0C88  0086               	movwf	6
 17941  0C89  3001               	movlw	1	; select bank2/3
 17942  0C8A  0087               	movwf	7
 17943  0C8B  1201               	bcf	1,4
 17944                           
 17945                           ;Buzzer_B1.c: 76: Buz->Count=Buz->CountBuffer2;
 17946  0C8C  0868               	movf	_Buz,w
 17947  0C8D  3E05               	addlw	5
 17948  0C8E  0086               	movwf	6
 17949  0C8F  3001               	movlw	1	; select bank2/3
 17950  0C90  0087               	movwf	7
 17951  0C91  0801               	movf	1,w
 17952  0C92  00A0               	movwf	??_Buzzer_Main
 17953  0C93  0868               	movf	_Buz,w
 17954  0C94  3E03               	addlw	3
 17955  0C95  0086               	movwf	6
 17956  0C96  3001               	movlw	1	; select bank2/3
 17957  0C97  0087               	movwf	7
 17958  0C98  0820               	movf	??_Buzzer_Main,w
 17959  0C99  0081               	movwf	1
 17960                           
 17961                           ;Buzzer_B1.c: 77: Buz->TimeValue=Buz->TimeValueBuffer2;
 17962  0C9A  0868               	movf	_Buz,w
 17963  0C9B  3E0A               	addlw	10
 17964  0C9C  0086               	movwf	6
 17965  0C9D  3001               	movlw	1	; select bank2/3
 17966  0C9E  0087               	movwf	7
 17967  0C9F  0868               	movf	_Buz,w
 17968  0CA0  3E06               	addlw	6
 17969  0CA1  0084               	movwf	4
 17970  0CA2  3001               	movlw	1	; select bank2/3
 17971  0CA3  0085               	movwf	5
 17972  0CA4  3F40               	moviw [0]fsr1
 17973  0CA5  3F80               	movwi [0]fsr0
 17974  0CA6  3F41               	moviw [1]fsr1
 17975  0CA7  3F81               	movwi [1]fsr0
 17976                           
 17977                           ;Buzzer_B1.c: 78: }
 17978  0CA8  0008               	return
 17979  0CA9                     l9637:	
 17980                           
 17981                           ;Buzzer_B1.c: 79: else
 17982                           ;Buzzer_B1.c: 80: {
 17983                           ;Buzzer_B1.c: 81: Buz->GO=0;
 17984  0CA9  0868               	movf	_Buz,w
 17985  0CAA  0086               	movwf	6
 17986  0CAB  3001               	movlw	1	; select bank2/3
 17987  0CAC  0087               	movwf	7
 17988  0CAD  1081               	bcf	1,1
 17989                           
 17990                           ;Buzzer_B1.c: 82: }
 17991                           ;Buzzer_B1.c: 83: }
 17992  0CAE  0008               	return
 17993  0CAF                     l9639:	
 17994                           
 17995                           ;Buzzer_B1.c: 84: else
 17996                           ;Buzzer_B1.c: 85: {
 17997                           ;Buzzer_B1.c: 86: Buz->Switch=1;
 17998  0CAF  0868               	movf	_Buz,w
 17999  0CB0  0086               	movwf	6
 18000  0CB1  3001               	movlw	1	; select bank2/3
 18001  0CB2  0087               	movwf	7
 18002  0CB3  1681               	bsf	1,5
 18003                           
 18004                           ;Buzzer_B1.c: 88: RB3=1;
 18005  0CB4  158D               	bsf	13,3	;volatile
 18006                           
 18007                           ;Buzzer_B1.c: 89: }
 18008                           ;Buzzer_B1.c: 90: }
 18009  0CB5  0008               	return
 18010  0CB6                     l9643:	
 18011                           
 18012                           ;Buzzer_B1.c: 91: else
 18013                           ;Buzzer_B1.c: 92: {
 18014                           ;Buzzer_B1.c: 93: Buz->Switch=0;
 18015  0CB6  0868               	movf	_Buz,w
 18016  0CB7  0086               	movwf	6
 18017  0CB8  3001               	movlw	1	; select bank2/3
 18018  0CB9  0087               	movwf	7
 18019  0CBA  1281               	bcf	1,5
 18020                           
 18021                           ;Buzzer_B1.c: 95: RB3=0;
 18022  0CBB  118D               	bcf	13,3	;volatile
 18023                           
 18024                           ;Buzzer_B1.c: 97: Buz->Count--;
 18025  0CBC  0868               	movf	_Buz,w
 18026  0CBD  3E03               	addlw	3
 18027  0CBE  0086               	movwf	6
 18028  0CBF  3001               	movlw	1	; select bank2/3
 18029  0CC0  0087               	movwf	7
 18030  0CC1  3001               	movlw	1
 18031  0CC2  0281               	subwf	1,f
 18032  0CC3  0008               	return
 18033  0CC4                     __end_of_Buzzer_Main:	
 18034                           
 18035                           	psect	text124
 18036  1972                     __ptext124:	
 18037 ;; *************** function _Buzzer_Initialization *****************
 18038 ;; Defined at:
 18039 ;;		line 10 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Buzzer_B1.c"
 18040 ;; Parameters:    Size  Location     Type
 18041 ;;		None
 18042 ;; Auto vars:     Size  Location     Type
 18043 ;;		None
 18044 ;; Return value:  Size  Location     Type
 18045 ;;		None               void
 18046 ;; Registers used:
 18047 ;;		wreg, fsr1l, fsr1h
 18048 ;; Tracked objects:
 18049 ;;		On entry : 0/0
 18050 ;;		On exit  : 0/0
 18051 ;;		Unchanged: 0/0
 18052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18054 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18055 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18056 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18057 ;;Total ram usage:        1 bytes
 18058 ;; Hardware stack levels used:    1
 18059 ;; Hardware stack levels required when called:    4
 18060 ;; This function calls:
 18061 ;;		Nothing
 18062 ;; This function is called by:
 18063 ;;		_main
 18064 ;; This function uses a non-reentrant model
 18065 ;;
 18066                           
 18067                           
 18068                           ;psect for function _Buzzer_Initialization
 18069  1972                     _Buzzer_Initialization:	
 18070                           
 18071                           ;Buzzer_B1.c: 12: Buz=&Buz1;
 18072                           
 18073                           ;incstack = 0
 18074                           ; Regs used in _Buzzer_Initialization: [wregfsr1]
 18075  1972  304A               	movlw	_Buz1& (0+255)
 18076  1973  0020               	movlb	0	; select bank0
 18077  1974  00A0               	movwf	??_Buzzer_Initialization
 18078  1975  0820               	movf	??_Buzzer_Initialization,w
 18079  1976  00E8               	movwf	_Buz
 18080                           
 18081                           ;Buzzer_B1.c: 13: Buz->Enable=1;
 18082  1977  0868               	movf	_Buz,w
 18083  1978  0086               	movwf	6
 18084  1979  3001               	movlw	1	; select bank2/3
 18085  197A  0087               	movwf	7
 18086  197B  1401               	bsf	1,0
 18087  197C  0008               	return
 18088  197D                     __end_of_Buzzer_Initialization:	
 18089                           
 18090                           	psect	intentry
 18091  0004                     __pintentry:	
 18092 ;; *************** function _ISR *****************
 18093 ;; Defined at:
 18094 ;;		line 99 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
 18095 ;; Parameters:    Size  Location     Type
 18096 ;;		None
 18097 ;; Auto vars:     Size  Location     Type
 18098 ;;		None
 18099 ;; Return value:  Size  Location     Type
 18100 ;;		None               void
 18101 ;; Registers used:
 18102 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18103 ;; Tracked objects:
 18104 ;;		On entry : 0/0
 18105 ;;		On exit  : 0/0
 18106 ;;		Unchanged: 0/0
 18107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18108 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18109 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18110 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18111 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18112 ;;Total ram usage:        1 bytes
 18113 ;; Hardware stack levels used:    1
 18114 ;; Hardware stack levels required when called:    3
 18115 ;; This function calls:
 18116 ;;		_INT_ISR
 18117 ;;		_IOC_ISR
 18118 ;;		_TMR0_ISR
 18119 ;; This function is called by:
 18120 ;;		Interrupt level 1
 18121 ;; This function uses a non-reentrant model
 18122 ;;
 18123                           
 18124  0004                     _ISR:	
 18125                           
 18126                           ;incstack = 0
 18127                           ; Regs used in _ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18128  0004  147E               	bsf	126,0	;set compiler interrupt flag
 18129  0005  3180               	pagesel	$
 18130  0006  0020               	movlb	0	; select bank0
 18131  0007  087F               	movf	127,w
 18132  0008  00F5               	movwf	??_ISR
 18133                           
 18134                           ;MCU_B1.c: 101: IOC_ISR();
 18135  0009  319D  2569  3180   	fcall	_IOC_ISR
 18136                           
 18137                           ;MCU_B1.c: 103: TMR0_ISR();
 18138  000C  3180  2051  3180   	fcall	_TMR0_ISR
 18139                           
 18140                           ;MCU_B1.c: 105: ;;
 18141                           ;MCU_B1.c: 109: INT_ISR();
 18142  000F  3199  21C0         	fcall	_INT_ISR
 18143  0011  0875               	movf	??_ISR,w
 18144  0012  0020               	movlb	0	; select bank0
 18145  0013  00FF               	movwf	127
 18146  0014  107E               	bcf	126,0	;clear compiler interrupt flag
 18147  0015  0009               	retfie
 18148  0016                     __end_of_ISR:	
 18149                           
 18150                           	psect	text126
 18151  0051                     __ptext126:	
 18152 ;; *************** function _TMR0_ISR *****************
 18153 ;; Defined at:
 18154 ;;		line 127 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
 18155 ;; Parameters:    Size  Location     Type
 18156 ;;		None
 18157 ;; Auto vars:     Size  Location     Type
 18158 ;;		None
 18159 ;; Return value:  Size  Location     Type
 18160 ;;		None               void
 18161 ;; Registers used:
 18162 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 18163 ;; Tracked objects:
 18164 ;;		On entry : 0/0
 18165 ;;		On exit  : 0/0
 18166 ;;		Unchanged: 0/0
 18167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18169 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18170 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18171 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18172 ;;Total ram usage:        4 bytes
 18173 ;; Hardware stack levels used:    1
 18174 ;; This function calls:
 18175 ;;		Nothing
 18176 ;; This function is called by:
 18177 ;;		_ISR
 18178 ;; This function uses a non-reentrant model
 18179 ;;
 18180                           
 18181                           
 18182                           ;psect for function _TMR0_ISR
 18183  0051                     _TMR0_ISR:	
 18184                           
 18185                           ;MCU_B1.c: 129: if(TMR0IE && TMR0IF)
 18186                           
 18187                           ;incstack = 0
 18188                           ; Regs used in _TMR0_ISR: [wreg-fsr1h+status,2+status,0]
 18189  0051  1E8B               	btfss	11,5	;volatile
 18190  0052  0008               	return
 18191  0053  1D0B               	btfss	11,2	;volatile
 18192  0054  0008               	return
 18193                           
 18194                           ;MCU_B1.c: 130: {
 18195                           ;MCU_B1.c: 131: TMR0=(256-90);
 18196  0055  30A6               	movlw	166
 18197  0056  0020               	movlb	0	; select bank0
 18198  0057  0095               	movwf	21	;volatile
 18199                           
 18200                           ;MCU_B1.c: 132: TMR0IF=0;
 18201  0058  110B               	bcf	11,2	;volatile
 18202                           
 18203                           ;MCU_B1.c: 137: if(DimmerLights11->GO) { DimmerLights11->Count++; if(DimmerLights11->Cou
      +                          nt >= (DimmerLights11->DimmingValue-Dimmer->Correction)) { DimmerLights11->Count=0; Dimm
      +                          erLights11->GO=0; DimmerLights11->Flag=1; if(DimmerLights11->StatusFlag) { RA7=1; ;; } }
      +                           }
 18204  0059  086B               	movf	_DimmerLights11,w
 18205  005A  0086               	movwf	6
 18206  005B  3001               	movlw	1	; select bank2/3
 18207  005C  0087               	movwf	7
 18208  005D  1C01               	btfss	1,0
 18209  005E  28AA               	goto	i1l7679
 18210  005F  3001               	movlw	1
 18211  0060  00F1               	movwf	??_TMR0_ISR
 18212  0061  086B               	movf	_DimmerLights11,w
 18213  0062  3E03               	addlw	3
 18214  0063  0086               	movwf	6
 18215  0064  3001               	movlw	1	; select bank2/3
 18216  0065  0087               	movwf	7
 18217  0066  0871               	movf	??_TMR0_ISR,w
 18218  0067  0781               	addwf	1,f
 18219  0068  0021               	movlb	1	; select bank1
 18220  0069  0838               	movf	_Dimmer^(0+128),w
 18221  006A  3E02               	addlw	2
 18222  006B  0086               	movwf	6
 18223  006C  0187               	clrf	7
 18224  006D  0801               	movf	1,w
 18225  006E  00F1               	movwf	??_TMR0_ISR
 18226  006F  01F2               	clrf	??_TMR0_ISR+1
 18227  0070  09F1               	comf	??_TMR0_ISR,f
 18228  0071  09F2               	comf	??_TMR0_ISR+1,f
 18229  0072  0AF1               	incf	??_TMR0_ISR,f
 18230  0073  1903               	skipnz
 18231  0074  0AF2               	incf	??_TMR0_ISR+1,f
 18232  0075  0020               	movlb	0	; select bank0
 18233  0076  086B               	movf	_DimmerLights11,w
 18234  0077  3E04               	addlw	4
 18235  0078  0086               	movwf	6
 18236  0079  3001               	movlw	1	; select bank2/3
 18237  007A  0087               	movwf	7
 18238  007B  0801               	movf	1,w
 18239  007C  0771               	addwf	??_TMR0_ISR,w
 18240  007D  00F3               	movwf	??_TMR0_ISR+2
 18241  007E  0872               	movf	??_TMR0_ISR+1,w
 18242  007F  1803               	skipnc
 18243  0080  0A72               	incf	??_TMR0_ISR+1,w
 18244  0081  00F4               	movwf	??_TMR0_ISR+3
 18245  0082  086B               	movf	_DimmerLights11,w
 18246  0083  3E03               	addlw	3
 18247  0084  0086               	movwf	6
 18248  0085  3001               	movlw	1	; select bank2/3
 18249  0086  0087               	movwf	7
 18250  0087  0874               	movf	??_TMR0_ISR+3,w
 18251  0088  3A80               	xorlw	128
 18252  0089  3C80               	sublw	128
 18253  008A  1D03               	skipz
 18254  008B  288E               	goto	u671_25
 18255  008C  0873               	movf	??_TMR0_ISR+2,w
 18256  008D  0201               	subwf	1,w
 18257  008E                     u671_25:	
 18258  008E  1C03               	skipc
 18259  008F  29DD               	goto	i1l7743
 18260  0090  0020               	movlb	0	; select bank0
 18261  0091  086B               	movf	_DimmerLights11,w
 18262  0092  3E03               	addlw	3
 18263  0093  0086               	movwf	6
 18264  0094  3001               	movlw	1	; select bank2/3
 18265  0095  0087               	movwf	7
 18266  0096  0181               	clrf	1
 18267  0097  086B               	movf	_DimmerLights11,w
 18268  0098  0086               	movwf	6
 18269  0099  3001               	movlw	1	; select bank2/3
 18270  009A  0087               	movwf	7
 18271  009B  1001               	bcf	1,0
 18272  009C  086B               	movf	_DimmerLights11,w
 18273  009D  3E07               	addlw	7
 18274  009E  0086               	movwf	6
 18275  009F  3001               	movlw	1	; select bank2/3
 18276  00A0  0087               	movwf	7
 18277  00A1  1401               	bsf	1,0
 18278  00A2  086B               	movf	_DimmerLights11,w
 18279  00A3  0086               	movwf	6
 18280  00A4  3001               	movlw	1	; select bank2/3
 18281  00A5  0087               	movwf	7
 18282  00A6  1F01               	btfss	1,6
 18283  00A7  29DD               	goto	i1l7743
 18284  00A8  178C               	bsf	12,7	;volatile
 18285  00A9  29DD               	goto	i1l7743
 18286  00AA                     i1l7679:	
 18287  00AA  086B               	movf	_DimmerLights11,w
 18288  00AB  3E07               	addlw	7
 18289  00AC  0086               	movwf	6
 18290  00AD  3001               	movlw	1	; select bank2/3
 18291  00AE  0087               	movwf	7
 18292  00AF  1C01               	btfss	1,0
 18293  00B0  29A9               	goto	i1l7735
 18294  00B1  086B               	movf	_DimmerLights11,w
 18295  00B2  3E07               	addlw	7
 18296  00B3  0086               	movwf	6
 18297  00B4  3001               	movlw	1	; select bank2/3
 18298  00B5  0087               	movwf	7
 18299  00B6  1001               	bcf	1,0
 18300  00B7  086B               	movf	_DimmerLights11,w
 18301  00B8  0086               	movwf	6
 18302  00B9  3001               	movlw	1	; select bank2/3
 18303  00BA  0087               	movwf	7
 18304  00BB  1C81               	btfss	1,1
 18305  00BC  29A9               	goto	i1l7735
 18306  00BD  3001               	movlw	1
 18307  00BE  00F1               	movwf	??_TMR0_ISR
 18308  00BF  0A6B               	incf	_DimmerLights11,w
 18309  00C0  0086               	movwf	6
 18310  00C1  3001               	movlw	1	; select bank2/3
 18311  00C2  0087               	movwf	7
 18312  00C3  0871               	movf	??_TMR0_ISR,w
 18313  00C4  0781               	addwf	1,f
 18314  00C5  0A6B               	incf	_DimmerLights11,w
 18315  00C6  0086               	movwf	6
 18316  00C7  3001               	movlw	1	; select bank2/3
 18317  00C8  0087               	movwf	7
 18318  00C9  086B               	movf	_DimmerLights11,w
 18319  00CA  3E02               	addlw	2
 18320  00CB  0084               	movwf	4
 18321  00CC  3001               	movlw	1	; select bank2/3
 18322  00CD  0085               	movwf	5
 18323  00CE  0800               	movf	0,w
 18324  00CF  0201               	subwf	1,w
 18325  00D0  1C03               	skipc
 18326  00D1  29A9               	goto	i1l7735
 18327  00D2  0A6B               	incf	_DimmerLights11,w
 18328  00D3  0086               	movwf	6
 18329  00D4  3001               	movlw	1	; select bank2/3
 18330  00D5  0087               	movwf	7
 18331  00D6  0181               	clrf	1
 18332  00D7  086B               	movf	_DimmerLights11,w
 18333  00D8  0086               	movwf	6
 18334  00D9  3001               	movlw	1	; select bank2/3
 18335  00DA  0087               	movwf	7
 18336  00DB  1D81               	btfss	1,3
 18337  00DC  2913               	goto	i1l7705
 18338  00DD  086B               	movf	_DimmerLights11,w
 18339  00DE  0086               	movwf	6
 18340  00DF  3001               	movlw	1	; select bank2/3
 18341  00E0  0087               	movwf	7
 18342  00E1  1A01               	btfsc	1,4
 18343  00E2  28FA               	goto	i1l7699
 18344  00E3  086B               	movf	_DimmerLights11,w
 18345  00E4  3E04               	addlw	4
 18346  00E5  0086               	movwf	6
 18347  00E6  3001               	movlw	1	; select bank2/3
 18348  00E7  0087               	movwf	7
 18349  00E8  3044               	movlw	68
 18350  00E9  0201               	subwf	1,w
 18351  00EA  1C03               	skipc
 18352  00EB  28F4               	goto	i1l7697
 18353  00EC  086B               	movf	_DimmerLights11,w
 18354  00ED  3E04               	addlw	4
 18355  00EE  0086               	movwf	6
 18356  00EF  3001               	movlw	1	; select bank2/3
 18357  00F0  0087               	movwf	7
 18358  00F1  3001               	movlw	1
 18359  00F2  0281               	subwf	1,f
 18360  00F3  29A9               	goto	i1l7735
 18361  00F4                     i1l7697:	
 18362  00F4  086B               	movf	_DimmerLights11,w
 18363  00F5  0086               	movwf	6
 18364  00F6  3001               	movlw	1	; select bank2/3
 18365  00F7  0087               	movwf	7
 18366  00F8  1601               	bsf	1,4
 18367  00F9  29A9               	goto	i1l7735
 18368  00FA                     i1l7699:	
 18369  00FA  086B               	movf	_DimmerLights11,w
 18370  00FB  3E04               	addlw	4
 18371  00FC  0086               	movwf	6
 18372  00FD  3001               	movlw	1	; select bank2/3
 18373  00FE  0087               	movwf	7
 18374  00FF  3078               	movlw	120
 18375  0100  0201               	subwf	1,w
 18376  0101  1803               	skipnc
 18377  0102  290D               	goto	i1l7703
 18378  0103  3001               	movlw	1
 18379  0104  00F1               	movwf	??_TMR0_ISR
 18380  0105  086B               	movf	_DimmerLights11,w
 18381  0106  3E04               	addlw	4
 18382  0107  0086               	movwf	6
 18383  0108  3001               	movlw	1	; select bank2/3
 18384  0109  0087               	movwf	7
 18385  010A  0871               	movf	??_TMR0_ISR,w
 18386  010B  0781               	addwf	1,f
 18387  010C  29A9               	goto	i1l7735
 18388  010D                     i1l7703:	
 18389  010D  086B               	movf	_DimmerLights11,w
 18390  010E  0086               	movwf	6
 18391  010F  3001               	movlw	1	; select bank2/3
 18392  0110  0087               	movwf	7
 18393  0111  1201               	bcf	1,4
 18394  0112  29A9               	goto	i1l7735
 18395  0113                     i1l7705:	
 18396  0113  086B               	movf	_DimmerLights11,w
 18397  0114  0086               	movwf	6
 18398  0115  3001               	movlw	1	; select bank2/3
 18399  0116  0087               	movwf	7
 18400  0117  1D01               	btfss	1,2
 18401  0118  295A               	goto	i1l7719
 18402  0119  086B               	movf	_DimmerLights11,w
 18403  011A  3E05               	addlw	5
 18404  011B  0086               	movwf	6
 18405  011C  3001               	movlw	1	; select bank2/3
 18406  011D  0087               	movwf	7
 18407  011E  086B               	movf	_DimmerLights11,w
 18408  011F  3E04               	addlw	4
 18409  0120  0084               	movwf	4
 18410  0121  3001               	movlw	1	; select bank2/3
 18411  0122  0085               	movwf	5
 18412  0123  0800               	movf	0,w
 18413  0124  0201               	subwf	1,w
 18414  0125  1803               	skipnc
 18415  0126  292F               	goto	i1l7711
 18416  0127  086B               	movf	_DimmerLights11,w
 18417  0128  3E04               	addlw	4
 18418  0129  0086               	movwf	6
 18419  012A  3001               	movlw	1	; select bank2/3
 18420  012B  0087               	movwf	7
 18421  012C  3001               	movlw	1
 18422  012D  0281               	subwf	1,f
 18423  012E  2946               	goto	i1l7715
 18424  012F                     i1l7711:	
 18425  012F  086B               	movf	_DimmerLights11,w
 18426  0130  3E04               	addlw	4
 18427  0131  0086               	movwf	6
 18428  0132  3001               	movlw	1	; select bank2/3
 18429  0133  0087               	movwf	7
 18430  0134  086B               	movf	_DimmerLights11,w
 18431  0135  3E05               	addlw	5
 18432  0136  0084               	movwf	4
 18433  0137  3001               	movlw	1	; select bank2/3
 18434  0138  0085               	movwf	5
 18435  0139  0800               	movf	0,w
 18436  013A  0201               	subwf	1,w
 18437  013B  1803               	skipnc
 18438  013C  2946               	goto	i1l7715
 18439  013D  3001               	movlw	1
 18440  013E  00F1               	movwf	??_TMR0_ISR
 18441  013F  086B               	movf	_DimmerLights11,w
 18442  0140  3E04               	addlw	4
 18443  0141  0086               	movwf	6
 18444  0142  3001               	movlw	1	; select bank2/3
 18445  0143  0087               	movwf	7
 18446  0144  0871               	movf	??_TMR0_ISR,w
 18447  0145  0781               	addwf	1,f
 18448  0146                     i1l7715:	
 18449  0146  086B               	movf	_DimmerLights11,w
 18450  0147  3E05               	addlw	5
 18451  0148  0086               	movwf	6
 18452  0149  3001               	movlw	1	; select bank2/3
 18453  014A  0087               	movwf	7
 18454  014B  086B               	movf	_DimmerLights11,w
 18455  014C  3E04               	addlw	4
 18456  014D  0084               	movwf	4
 18457  014E  3001               	movlw	1	; select bank2/3
 18458  014F  0085               	movwf	5
 18459  0150  0800               	movf	0,w
 18460  0151  0601               	xorwf	1,w
 18461  0152  1D03               	skipz
 18462  0153  29A9               	goto	i1l7735
 18463  0154  086B               	movf	_DimmerLights11,w
 18464  0155  0086               	movwf	6
 18465  0156  3001               	movlw	1	; select bank2/3
 18466  0157  0087               	movwf	7
 18467  0158  1101               	bcf	1,2
 18468  0159  2975               	goto	i1l7725
 18469  015A                     i1l7719:	
 18470  015A  086B               	movf	_DimmerLights11,w
 18471  015B  0086               	movwf	6
 18472  015C  3001               	movlw	1	; select bank2/3
 18473  015D  0087               	movwf	7
 18474  015E  1E81               	btfss	1,5
 18475  015F  297B               	goto	i1l7727
 18476  0160  086B               	movf	_DimmerLights11,w
 18477  0161  3E04               	addlw	4
 18478  0162  0086               	movwf	6
 18479  0163  3001               	movlw	1	; select bank2/3
 18480  0164  0087               	movwf	7
 18481  0165  3001               	movlw	1
 18482  0166  0281               	subwf	1,f
 18483  0167  086B               	movf	_DimmerLights11,w
 18484  0168  3E05               	addlw	5
 18485  0169  0086               	movwf	6
 18486  016A  3001               	movlw	1	; select bank2/3
 18487  016B  0087               	movwf	7
 18488  016C  086B               	movf	_DimmerLights11,w
 18489  016D  3E04               	addlw	4
 18490  016E  0084               	movwf	4
 18491  016F  3001               	movlw	1	; select bank2/3
 18492  0170  0085               	movwf	5
 18493  0171  0800               	movf	0,w
 18494  0172  0201               	subwf	1,w
 18495  0173  1C03               	skipc
 18496  0174  29A9               	goto	i1l7735
 18497  0175                     i1l7725:	
 18498  0175  086B               	movf	_DimmerLights11,w
 18499  0176  0086               	movwf	6
 18500  0177  3001               	movlw	1	; select bank2/3
 18501  0178  0087               	movwf	7
 18502  0179  1081               	bcf	1,1
 18503  017A  29A9               	goto	i1l7735
 18504  017B                     i1l7727:	
 18505  017B  3001               	movlw	1
 18506  017C  00F1               	movwf	??_TMR0_ISR
 18507  017D  086B               	movf	_DimmerLights11,w
 18508  017E  3E04               	addlw	4
 18509  017F  0086               	movwf	6
 18510  0180  3001               	movlw	1	; select bank2/3
 18511  0181  0087               	movwf	7
 18512  0182  0871               	movf	??_TMR0_ISR,w
 18513  0183  0781               	addwf	1,f
 18514  0184  086B               	movf	_DimmerLights11,w
 18515  0185  3E04               	addlw	4
 18516  0186  0086               	movwf	6
 18517  0187  3001               	movlw	1	; select bank2/3
 18518  0188  0087               	movwf	7
 18519  0189  086B               	movf	_DimmerLights11,w
 18520  018A  3E06               	addlw	6
 18521  018B  0084               	movwf	4
 18522  018C  3001               	movlw	1	; select bank2/3
 18523  018D  0085               	movwf	5
 18524  018E  0800               	movf	0,w
 18525  018F  0201               	subwf	1,w
 18526  0190  1C03               	skipc
 18527  0191  29A9               	goto	i1l7735
 18528  0192  086B               	movf	_DimmerLights11,w
 18529  0193  0086               	movwf	6
 18530  0194  3001               	movlw	1	; select bank2/3
 18531  0195  0087               	movwf	7
 18532  0196  1081               	bcf	1,1
 18533  0197  086B               	movf	_DimmerLights11,w
 18534  0198  0086               	movwf	6
 18535  0199  3001               	movlw	1	; select bank2/3
 18536  019A  0087               	movwf	7
 18537  019B  1301               	bcf	1,6
 18538  019C  086B               	movf	_DimmerLights11,w
 18539  019D  3E0C               	addlw	12
 18540  019E  0086               	movwf	6
 18541  019F  3001               	movlw	1	; select bank2/3
 18542  01A0  0087               	movwf	7
 18543  01A1  1401               	bsf	1,0
 18544  01A2  0021               	movlb	1	; select bank1
 18545  01A3  0838               	movf	_Dimmer^(0+128),w
 18546  01A4  0086               	movwf	6
 18547  01A5  0187               	clrf	7
 18548  01A6  1401               	bsf	1,0
 18549  01A7  0020               	movlb	0	; select bank0
 18550  01A8  118C               	bcf	12,3	;volatile
 18551  01A9                     i1l7735:	
 18552  01A9  1F8C               	btfss	12,7	;volatile
 18553  01AA  29DD               	goto	i1l7743
 18554  01AB  3001               	movlw	1
 18555  01AC  00F1               	movwf	??_TMR0_ISR
 18556  01AD  086B               	movf	_DimmerLights11,w
 18557  01AE  3E08               	addlw	8
 18558  01AF  0086               	movwf	6
 18559  01B0  3001               	movlw	1	; select bank2/3
 18560  01B1  0087               	movwf	7
 18561  01B2  0871               	movf	??_TMR0_ISR,w
 18562  01B3  0781               	addwf	1,f
 18563  01B4  086B               	movf	_DimmerLights11,w
 18564  01B5  3E04               	addlw	4
 18565  01B6  0086               	movwf	6
 18566  01B7  3001               	movlw	1	; select bank2/3
 18567  01B8  0087               	movwf	7
 18568  01B9  0801               	movf	1,w
 18569  01BA  00F1               	movwf	??_TMR0_ISR
 18570  01BB  01F2               	clrf	??_TMR0_ISR+1
 18571  01BC  09F1               	comf	??_TMR0_ISR,f
 18572  01BD  09F2               	comf	??_TMR0_ISR+1,f
 18573  01BE  0AF1               	incf	??_TMR0_ISR,f
 18574  01BF  1903               	skipnz
 18575  01C0  0AF2               	incf	??_TMR0_ISR+1,f
 18576  01C1  0871               	movf	??_TMR0_ISR,w
 18577  01C2  3E78               	addlw	120
 18578  01C3  00F3               	movwf	??_TMR0_ISR+2
 18579  01C4  3000               	movlw	0
 18580  01C5  3D72               	addwfc	??_TMR0_ISR+1,w
 18581  01C6  00F4               	movwf	??_TMR0_ISR+3
 18582  01C7  086B               	movf	_DimmerLights11,w
 18583  01C8  3E08               	addlw	8
 18584  01C9  0086               	movwf	6
 18585  01CA  3001               	movlw	1	; select bank2/3
 18586  01CB  0087               	movwf	7
 18587  01CC  0874               	movf	??_TMR0_ISR+3,w
 18588  01CD  3A80               	xorlw	128
 18589  01CE  3C80               	sublw	128
 18590  01CF  1D03               	skipz
 18591  01D0  29D3               	goto	u688_25
 18592  01D1  0873               	movf	??_TMR0_ISR+2,w
 18593  01D2  0201               	subwf	1,w
 18594  01D3                     u688_25:	
 18595  01D3  1C03               	skipc
 18596  01D4  29DD               	goto	i1l7743
 18597  01D5  0020               	movlb	0	; select bank0
 18598  01D6  086B               	movf	_DimmerLights11,w
 18599  01D7  3E08               	addlw	8
 18600  01D8  0086               	movwf	6
 18601  01D9  3001               	movlw	1	; select bank2/3
 18602  01DA  0087               	movwf	7
 18603  01DB  0181               	clrf	1
 18604  01DC  138C               	bcf	12,7	;volatile
 18605  01DD                     i1l7743:	
 18606                           
 18607                           ;MCU_B1.c: 141: if(DimmerLights22->GO) { DimmerLights22->Count++; if(DimmerLights22->Cou
      +                          nt >= (DimmerLights22->DimmingValue-Dimmer->Correction)) { DimmerLights22->Count=0; Dimm
      +                          erLights22->GO=0; DimmerLights22->Flag=1; if(DimmerLights22->StatusFlag) { RB4=1; } } } 
      +                          el
 18608  01DD  0020               	movlb	0	; select bank0
 18609  01DE  086C               	movf	_DimmerLights22,w
 18610  01DF  0086               	movwf	6
 18611  01E0  3001               	movlw	1	; select bank2/3
 18612  01E1  0087               	movwf	7
 18613  01E2  1C01               	btfss	1,0
 18614  01E3  2A2F               	goto	i1l7757
 18615  01E4  3001               	movlw	1
 18616  01E5  00F1               	movwf	??_TMR0_ISR
 18617  01E6  086C               	movf	_DimmerLights22,w
 18618  01E7  3E03               	addlw	3
 18619  01E8  0086               	movwf	6
 18620  01E9  3001               	movlw	1	; select bank2/3
 18621  01EA  0087               	movwf	7
 18622  01EB  0871               	movf	??_TMR0_ISR,w
 18623  01EC  0781               	addwf	1,f
 18624  01ED  0021               	movlb	1	; select bank1
 18625  01EE  0838               	movf	_Dimmer^(0+128),w
 18626  01EF  3E02               	addlw	2
 18627  01F0  0086               	movwf	6
 18628  01F1  0187               	clrf	7
 18629  01F2  0801               	movf	1,w
 18630  01F3  00F1               	movwf	??_TMR0_ISR
 18631  01F4  01F2               	clrf	??_TMR0_ISR+1
 18632  01F5  09F1               	comf	??_TMR0_ISR,f
 18633  01F6  09F2               	comf	??_TMR0_ISR+1,f
 18634  01F7  0AF1               	incf	??_TMR0_ISR,f
 18635  01F8  1903               	skipnz
 18636  01F9  0AF2               	incf	??_TMR0_ISR+1,f
 18637  01FA  0020               	movlb	0	; select bank0
 18638  01FB  086C               	movf	_DimmerLights22,w
 18639  01FC  3E04               	addlw	4
 18640  01FD  0086               	movwf	6
 18641  01FE  3001               	movlw	1	; select bank2/3
 18642  01FF  0087               	movwf	7
 18643  0200  0801               	movf	1,w
 18644  0201  0771               	addwf	??_TMR0_ISR,w
 18645  0202  00F3               	movwf	??_TMR0_ISR+2
 18646  0203  0872               	movf	??_TMR0_ISR+1,w
 18647  0204  1803               	skipnc
 18648  0205  0A72               	incf	??_TMR0_ISR+1,w
 18649  0206  00F4               	movwf	??_TMR0_ISR+3
 18650  0207  086C               	movf	_DimmerLights22,w
 18651  0208  3E03               	addlw	3
 18652  0209  0086               	movwf	6
 18653  020A  3001               	movlw	1	; select bank2/3
 18654  020B  0087               	movwf	7
 18655  020C  0874               	movf	??_TMR0_ISR+3,w
 18656  020D  3A80               	xorlw	128
 18657  020E  3C80               	sublw	128
 18658  020F  1D03               	skipz
 18659  0210  2A13               	goto	u690_25
 18660  0211  0873               	movf	??_TMR0_ISR+2,w
 18661  0212  0201               	subwf	1,w
 18662  0213                     u690_25:	
 18663  0213  1C03               	skipc
 18664  0214  2B62               	goto	i1l7821
 18665  0215  0020               	movlb	0	; select bank0
 18666  0216  086C               	movf	_DimmerLights22,w
 18667  0217  3E03               	addlw	3
 18668  0218  0086               	movwf	6
 18669  0219  3001               	movlw	1	; select bank2/3
 18670  021A  0087               	movwf	7
 18671  021B  0181               	clrf	1
 18672  021C  086C               	movf	_DimmerLights22,w
 18673  021D  0086               	movwf	6
 18674  021E  3001               	movlw	1	; select bank2/3
 18675  021F  0087               	movwf	7
 18676  0220  1001               	bcf	1,0
 18677  0221  086C               	movf	_DimmerLights22,w
 18678  0222  3E07               	addlw	7
 18679  0223  0086               	movwf	6
 18680  0224  3001               	movlw	1	; select bank2/3
 18681  0225  0087               	movwf	7
 18682  0226  1401               	bsf	1,0
 18683  0227  086C               	movf	_DimmerLights22,w
 18684  0228  0086               	movwf	6
 18685  0229  3001               	movlw	1	; select bank2/3
 18686  022A  0087               	movwf	7
 18687  022B  1F01               	btfss	1,6
 18688  022C  2B62               	goto	i1l7821
 18689  022D  160D               	bsf	13,4	;volatile
 18690  022E  2B62               	goto	i1l7821
 18691  022F                     i1l7757:	
 18692  022F  086C               	movf	_DimmerLights22,w
 18693  0230  3E07               	addlw	7
 18694  0231  0086               	movwf	6
 18695  0232  3001               	movlw	1	; select bank2/3
 18696  0233  0087               	movwf	7
 18697  0234  1C01               	btfss	1,0
 18698  0235  2B2E               	goto	i1l7813
 18699  0236  086C               	movf	_DimmerLights22,w
 18700  0237  3E07               	addlw	7
 18701  0238  0086               	movwf	6
 18702  0239  3001               	movlw	1	; select bank2/3
 18703  023A  0087               	movwf	7
 18704  023B  1001               	bcf	1,0
 18705  023C  086C               	movf	_DimmerLights22,w
 18706  023D  0086               	movwf	6
 18707  023E  3001               	movlw	1	; select bank2/3
 18708  023F  0087               	movwf	7
 18709  0240  1C81               	btfss	1,1
 18710  0241  2B2E               	goto	i1l7813
 18711  0242  3001               	movlw	1
 18712  0243  00F1               	movwf	??_TMR0_ISR
 18713  0244  0A6C               	incf	_DimmerLights22,w
 18714  0245  0086               	movwf	6
 18715  0246  3001               	movlw	1	; select bank2/3
 18716  0247  0087               	movwf	7
 18717  0248  0871               	movf	??_TMR0_ISR,w
 18718  0249  0781               	addwf	1,f
 18719  024A  0A6C               	incf	_DimmerLights22,w
 18720  024B  0086               	movwf	6
 18721  024C  3001               	movlw	1	; select bank2/3
 18722  024D  0087               	movwf	7
 18723  024E  086C               	movf	_DimmerLights22,w
 18724  024F  3E02               	addlw	2
 18725  0250  0084               	movwf	4
 18726  0251  3001               	movlw	1	; select bank2/3
 18727  0252  0085               	movwf	5
 18728  0253  0800               	movf	0,w
 18729  0254  0201               	subwf	1,w
 18730  0255  1C03               	skipc
 18731  0256  2B2E               	goto	i1l7813
 18732  0257  0A6C               	incf	_DimmerLights22,w
 18733  0258  0086               	movwf	6
 18734  0259  3001               	movlw	1	; select bank2/3
 18735  025A  0087               	movwf	7
 18736  025B  0181               	clrf	1
 18737  025C  086C               	movf	_DimmerLights22,w
 18738  025D  0086               	movwf	6
 18739  025E  3001               	movlw	1	; select bank2/3
 18740  025F  0087               	movwf	7
 18741  0260  1D81               	btfss	1,3
 18742  0261  2A98               	goto	i1l7783
 18743  0262  086C               	movf	_DimmerLights22,w
 18744  0263  0086               	movwf	6
 18745  0264  3001               	movlw	1	; select bank2/3
 18746  0265  0087               	movwf	7
 18747  0266  1A01               	btfsc	1,4
 18748  0267  2A7F               	goto	i1l7777
 18749  0268  086C               	movf	_DimmerLights22,w
 18750  0269  3E04               	addlw	4
 18751  026A  0086               	movwf	6
 18752  026B  3001               	movlw	1	; select bank2/3
 18753  026C  0087               	movwf	7
 18754  026D  3044               	movlw	68
 18755  026E  0201               	subwf	1,w
 18756  026F  1C03               	skipc
 18757  0270  2A79               	goto	i1l7775
 18758  0271  086C               	movf	_DimmerLights22,w
 18759  0272  3E04               	addlw	4
 18760  0273  0086               	movwf	6
 18761  0274  3001               	movlw	1	; select bank2/3
 18762  0275  0087               	movwf	7
 18763  0276  3001               	movlw	1
 18764  0277  0281               	subwf	1,f
 18765  0278  2B2E               	goto	i1l7813
 18766  0279                     i1l7775:	
 18767  0279  086C               	movf	_DimmerLights22,w
 18768  027A  0086               	movwf	6
 18769  027B  3001               	movlw	1	; select bank2/3
 18770  027C  0087               	movwf	7
 18771  027D  1601               	bsf	1,4
 18772  027E  2B2E               	goto	i1l7813
 18773  027F                     i1l7777:	
 18774  027F  086C               	movf	_DimmerLights22,w
 18775  0280  3E04               	addlw	4
 18776  0281  0086               	movwf	6
 18777  0282  3001               	movlw	1	; select bank2/3
 18778  0283  0087               	movwf	7
 18779  0284  3078               	movlw	120
 18780  0285  0201               	subwf	1,w
 18781  0286  1803               	skipnc
 18782  0287  2A92               	goto	i1l7781
 18783  0288  3001               	movlw	1
 18784  0289  00F1               	movwf	??_TMR0_ISR
 18785  028A  086C               	movf	_DimmerLights22,w
 18786  028B  3E04               	addlw	4
 18787  028C  0086               	movwf	6
 18788  028D  3001               	movlw	1	; select bank2/3
 18789  028E  0087               	movwf	7
 18790  028F  0871               	movf	??_TMR0_ISR,w
 18791  0290  0781               	addwf	1,f
 18792  0291  2B2E               	goto	i1l7813
 18793  0292                     i1l7781:	
 18794  0292  086C               	movf	_DimmerLights22,w
 18795  0293  0086               	movwf	6
 18796  0294  3001               	movlw	1	; select bank2/3
 18797  0295  0087               	movwf	7
 18798  0296  1201               	bcf	1,4
 18799  0297  2B2E               	goto	i1l7813
 18800  0298                     i1l7783:	
 18801  0298  086C               	movf	_DimmerLights22,w
 18802  0299  0086               	movwf	6
 18803  029A  3001               	movlw	1	; select bank2/3
 18804  029B  0087               	movwf	7
 18805  029C  1D01               	btfss	1,2
 18806  029D  2ADF               	goto	i1l7797
 18807  029E  086C               	movf	_DimmerLights22,w
 18808  029F  3E05               	addlw	5
 18809  02A0  0086               	movwf	6
 18810  02A1  3001               	movlw	1	; select bank2/3
 18811  02A2  0087               	movwf	7
 18812  02A3  086C               	movf	_DimmerLights22,w
 18813  02A4  3E04               	addlw	4
 18814  02A5  0084               	movwf	4
 18815  02A6  3001               	movlw	1	; select bank2/3
 18816  02A7  0085               	movwf	5
 18817  02A8  0800               	movf	0,w
 18818  02A9  0201               	subwf	1,w
 18819  02AA  1803               	skipnc
 18820  02AB  2AB4               	goto	i1l7789
 18821  02AC  086C               	movf	_DimmerLights22,w
 18822  02AD  3E04               	addlw	4
 18823  02AE  0086               	movwf	6
 18824  02AF  3001               	movlw	1	; select bank2/3
 18825  02B0  0087               	movwf	7
 18826  02B1  3001               	movlw	1
 18827  02B2  0281               	subwf	1,f
 18828  02B3  2ACB               	goto	i1l7793
 18829  02B4                     i1l7789:	
 18830  02B4  086C               	movf	_DimmerLights22,w
 18831  02B5  3E04               	addlw	4
 18832  02B6  0086               	movwf	6
 18833  02B7  3001               	movlw	1	; select bank2/3
 18834  02B8  0087               	movwf	7
 18835  02B9  086C               	movf	_DimmerLights22,w
 18836  02BA  3E05               	addlw	5
 18837  02BB  0084               	movwf	4
 18838  02BC  3001               	movlw	1	; select bank2/3
 18839  02BD  0085               	movwf	5
 18840  02BE  0800               	movf	0,w
 18841  02BF  0201               	subwf	1,w
 18842  02C0  1803               	skipnc
 18843  02C1  2ACB               	goto	i1l7793
 18844  02C2  3001               	movlw	1
 18845  02C3  00F1               	movwf	??_TMR0_ISR
 18846  02C4  086C               	movf	_DimmerLights22,w
 18847  02C5  3E04               	addlw	4
 18848  02C6  0086               	movwf	6
 18849  02C7  3001               	movlw	1	; select bank2/3
 18850  02C8  0087               	movwf	7
 18851  02C9  0871               	movf	??_TMR0_ISR,w
 18852  02CA  0781               	addwf	1,f
 18853  02CB                     i1l7793:	
 18854  02CB  086C               	movf	_DimmerLights22,w
 18855  02CC  3E05               	addlw	5
 18856  02CD  0086               	movwf	6
 18857  02CE  3001               	movlw	1	; select bank2/3
 18858  02CF  0087               	movwf	7
 18859  02D0  086C               	movf	_DimmerLights22,w
 18860  02D1  3E04               	addlw	4
 18861  02D2  0084               	movwf	4
 18862  02D3  3001               	movlw	1	; select bank2/3
 18863  02D4  0085               	movwf	5
 18864  02D5  0800               	movf	0,w
 18865  02D6  0601               	xorwf	1,w
 18866  02D7  1D03               	skipz
 18867  02D8  2B2E               	goto	i1l7813
 18868  02D9  086C               	movf	_DimmerLights22,w
 18869  02DA  0086               	movwf	6
 18870  02DB  3001               	movlw	1	; select bank2/3
 18871  02DC  0087               	movwf	7
 18872  02DD  1101               	bcf	1,2
 18873  02DE  2AFA               	goto	i1l7803
 18874  02DF                     i1l7797:	
 18875  02DF  086C               	movf	_DimmerLights22,w
 18876  02E0  0086               	movwf	6
 18877  02E1  3001               	movlw	1	; select bank2/3
 18878  02E2  0087               	movwf	7
 18879  02E3  1E81               	btfss	1,5
 18880  02E4  2B00               	goto	i1l7805
 18881  02E5  086C               	movf	_DimmerLights22,w
 18882  02E6  3E04               	addlw	4
 18883  02E7  0086               	movwf	6
 18884  02E8  3001               	movlw	1	; select bank2/3
 18885  02E9  0087               	movwf	7
 18886  02EA  3001               	movlw	1
 18887  02EB  0281               	subwf	1,f
 18888  02EC  086C               	movf	_DimmerLights22,w
 18889  02ED  3E05               	addlw	5
 18890  02EE  0086               	movwf	6
 18891  02EF  3001               	movlw	1	; select bank2/3
 18892  02F0  0087               	movwf	7
 18893  02F1  086C               	movf	_DimmerLights22,w
 18894  02F2  3E04               	addlw	4
 18895  02F3  0084               	movwf	4
 18896  02F4  3001               	movlw	1	; select bank2/3
 18897  02F5  0085               	movwf	5
 18898  02F6  0800               	movf	0,w
 18899  02F7  0201               	subwf	1,w
 18900  02F8  1C03               	skipc
 18901  02F9  2B2E               	goto	i1l7813
 18902  02FA                     i1l7803:	
 18903  02FA  086C               	movf	_DimmerLights22,w
 18904  02FB  0086               	movwf	6
 18905  02FC  3001               	movlw	1	; select bank2/3
 18906  02FD  0087               	movwf	7
 18907  02FE  1081               	bcf	1,1
 18908  02FF  2B2E               	goto	i1l7813
 18909  0300                     i1l7805:	
 18910  0300  3001               	movlw	1
 18911  0301  00F1               	movwf	??_TMR0_ISR
 18912  0302  086C               	movf	_DimmerLights22,w
 18913  0303  3E04               	addlw	4
 18914  0304  0086               	movwf	6
 18915  0305  3001               	movlw	1	; select bank2/3
 18916  0306  0087               	movwf	7
 18917  0307  0871               	movf	??_TMR0_ISR,w
 18918  0308  0781               	addwf	1,f
 18919  0309  086C               	movf	_DimmerLights22,w
 18920  030A  3E04               	addlw	4
 18921  030B  0086               	movwf	6
 18922  030C  3001               	movlw	1	; select bank2/3
 18923  030D  0087               	movwf	7
 18924  030E  086C               	movf	_DimmerLights22,w
 18925  030F  3E06               	addlw	6
 18926  0310  0084               	movwf	4
 18927  0311  3001               	movlw	1	; select bank2/3
 18928  0312  0085               	movwf	5
 18929  0313  0800               	movf	0,w
 18930  0314  0201               	subwf	1,w
 18931  0315  1C03               	skipc
 18932  0316  2B2E               	goto	i1l7813
 18933  0317  086C               	movf	_DimmerLights22,w
 18934  0318  0086               	movwf	6
 18935  0319  3001               	movlw	1	; select bank2/3
 18936  031A  0087               	movwf	7
 18937  031B  1081               	bcf	1,1
 18938  031C  086C               	movf	_DimmerLights22,w
 18939  031D  0086               	movwf	6
 18940  031E  3001               	movlw	1	; select bank2/3
 18941  031F  0087               	movwf	7
 18942  0320  1301               	bcf	1,6
 18943  0321  086C               	movf	_DimmerLights22,w
 18944  0322  3E0C               	addlw	12
 18945  0323  0086               	movwf	6
 18946  0324  3001               	movlw	1	; select bank2/3
 18947  0325  0087               	movwf	7
 18948  0326  1401               	bsf	1,0
 18949  0327  0021               	movlb	1	; select bank1
 18950  0328  0838               	movf	_Dimmer^(0+128),w
 18951  0329  0086               	movwf	6
 18952  032A  0187               	clrf	7
 18953  032B  1401               	bsf	1,0
 18954  032C  0020               	movlb	0	; select bank0
 18955  032D  138E               	bcf	14,7	;volatile
 18956  032E                     i1l7813:	
 18957  032E  1E0D               	btfss	13,4	;volatile
 18958  032F  2B62               	goto	i1l7821
 18959  0330  3001               	movlw	1
 18960  0331  00F1               	movwf	??_TMR0_ISR
 18961  0332  086C               	movf	_DimmerLights22,w
 18962  0333  3E08               	addlw	8
 18963  0334  0086               	movwf	6
 18964  0335  3001               	movlw	1	; select bank2/3
 18965  0336  0087               	movwf	7
 18966  0337  0871               	movf	??_TMR0_ISR,w
 18967  0338  0781               	addwf	1,f
 18968  0339  086C               	movf	_DimmerLights22,w
 18969  033A  3E04               	addlw	4
 18970  033B  0086               	movwf	6
 18971  033C  3001               	movlw	1	; select bank2/3
 18972  033D  0087               	movwf	7
 18973  033E  0801               	movf	1,w
 18974  033F  00F1               	movwf	??_TMR0_ISR
 18975  0340  01F2               	clrf	??_TMR0_ISR+1
 18976  0341  09F1               	comf	??_TMR0_ISR,f
 18977  0342  09F2               	comf	??_TMR0_ISR+1,f
 18978  0343  0AF1               	incf	??_TMR0_ISR,f
 18979  0344  1903               	skipnz
 18980  0345  0AF2               	incf	??_TMR0_ISR+1,f
 18981  0346  0871               	movf	??_TMR0_ISR,w
 18982  0347  3E78               	addlw	120
 18983  0348  00F3               	movwf	??_TMR0_ISR+2
 18984  0349  3000               	movlw	0
 18985  034A  3D72               	addwfc	??_TMR0_ISR+1,w
 18986  034B  00F4               	movwf	??_TMR0_ISR+3
 18987  034C  086C               	movf	_DimmerLights22,w
 18988  034D  3E08               	addlw	8
 18989  034E  0086               	movwf	6
 18990  034F  3001               	movlw	1	; select bank2/3
 18991  0350  0087               	movwf	7
 18992  0351  0874               	movf	??_TMR0_ISR+3,w
 18993  0352  3A80               	xorlw	128
 18994  0353  3C80               	sublw	128
 18995  0354  1D03               	skipz
 18996  0355  2B58               	goto	u707_25
 18997  0356  0873               	movf	??_TMR0_ISR+2,w
 18998  0357  0201               	subwf	1,w
 18999  0358                     u707_25:	
 19000  0358  1C03               	skipc
 19001  0359  2B62               	goto	i1l7821
 19002  035A  0020               	movlb	0	; select bank0
 19003  035B  086C               	movf	_DimmerLights22,w
 19004  035C  3E08               	addlw	8
 19005  035D  0086               	movwf	6
 19006  035E  3001               	movlw	1	; select bank2/3
 19007  035F  0087               	movwf	7
 19008  0360  0181               	clrf	1
 19009  0361  120D               	bcf	13,4	;volatile
 19010  0362                     i1l7821:	
 19011                           
 19012                           ;MCU_B1.c: 150: Timer0->Count++;
 19013  0362  0021               	movlb	1	; select bank1
 19014  0363  0A6C               	incf	_Timer0^(0+128),w
 19015  0364  0086               	movwf	6
 19016  0365  0187               	clrf	7
 19017  0366  3001               	movlw	1
 19018  0367  0781               	addwf	1,f
 19019  0368  3141               	addfsr 1,1
 19020  0369  1803               	skipnc
 19021  036A  0A81               	incf	1,f
 19022                           
 19023                           ;MCU_B1.c: 151: if(Timer0->Count == 200)
 19024  036B  0A6C               	incf	_Timer0^(0+128),w
 19025  036C  0086               	movwf	6
 19026  036D  0187               	clrf	7
 19027  036E  3F40               	moviw [0]fsr1
 19028  036F  3AC8               	xorlw	200
 19029  0370  1D03               	skipz
 19030  0371  2B74               	goto	u708_25
 19031  0372  3F41               	moviw [1]fsr1
 19032  0373  3A00               	xorlw	0
 19033  0374                     u708_25:	
 19034  0374  1D03               	skipz
 19035  0375  2B82               	goto	i1l1675
 19036                           
 19037                           ;MCU_B1.c: 152: {
 19038                           ;MCU_B1.c: 153: Timer0->Count=0;
 19039  0376  0A6C               	incf	_Timer0^(0+128),w
 19040  0377  0086               	movwf	6
 19041  0378  0187               	clrf	7
 19042  0379  3000               	movlw	0
 19043  037A  3FC0               	movwi [0]fsr1
 19044  037B  3FC1               	movwi [1]fsr1
 19045                           
 19046                           ;MCU_B1.c: 154: TMain->T0_Timerout=1;
 19047  037C  0020               	movlb	0	; select bank0
 19048  037D  086F               	movf	_TMain,w
 19049  037E  0086               	movwf	6
 19050  037F  3001               	movlw	1	; select bank2/3
 19051  0380  0087               	movwf	7
 19052  0381  1481               	bsf	1,1
 19053  0382                     i1l1675:	
 19054                           
 19055                           ;MCU_B1.c: 155: }
 19056                           ;MCU_B1.c: 158: if(Buz->GO)
 19057  0382  0020               	movlb	0	; select bank0
 19058  0383  0868               	movf	_Buz,w
 19059  0384  0086               	movwf	6
 19060  0385  3001               	movlw	1	; select bank2/3
 19061  0386  0087               	movwf	7
 19062  0387  1C81               	btfss	1,1
 19063  0388  0008               	return
 19064                           
 19065                           ;MCU_B1.c: 159: {
 19066                           ;MCU_B1.c: 160: Buz->Time++;
 19067  0389  0A68               	incf	_Buz,w
 19068  038A  0086               	movwf	6
 19069  038B  3001               	movlw	1	; select bank2/3
 19070  038C  0087               	movwf	7
 19071  038D  3001               	movlw	1
 19072  038E  0781               	addwf	1,f
 19073  038F  3141               	addfsr 1,1
 19074  0390  1803               	skipnc
 19075  0391  0A81               	incf	1,f
 19076  0392  0008               	return
 19077  0393                     __end_of_TMR0_ISR:	
 19078                           
 19079                           	psect	text127
 19080  1D69                     __ptext127:	
 19081 ;; *************** function _IOC_ISR *****************
 19082 ;; Defined at:
 19083 ;;		line 342 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
 19084 ;; Parameters:    Size  Location     Type
 19085 ;;		None
 19086 ;; Auto vars:     Size  Location     Type
 19087 ;;		None
 19088 ;; Return value:  Size  Location     Type
 19089 ;;		None               void
 19090 ;; Registers used:
 19091 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19092 ;; Tracked objects:
 19093 ;;		On entry : 0/0
 19094 ;;		On exit  : 0/0
 19095 ;;		Unchanged: 0/0
 19096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19097 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19099 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19100 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19101 ;;Total ram usage:        1 bytes
 19102 ;; Hardware stack levels used:    1
 19103 ;; Hardware stack levels required when called:    1
 19104 ;; This function calls:
 19105 ;;		_setDimmerReClock
 19106 ;; This function is called by:
 19107 ;;		_ISR
 19108 ;; This function uses a non-reentrant model
 19109 ;;
 19110                           
 19111                           
 19112                           ;psect for function _IOC_ISR
 19113  1D69                     _IOC_ISR:	
 19114                           
 19115                           ;MCU_B1.c: 344: if(IOCIE && IOCBF2)
 19116                           
 19117                           ;incstack = 0
 19118                           ; Regs used in _IOC_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 19119  1D69  1D8B               	btfss	11,3	;volatile
 19120  1D6A  0008               	return
 19121  1D6B  0027               	movlb	7	; select bank7
 19122  1D6C  1D16               	btfss	22,2	;volatile
 19123  1D6D  0008               	return
 19124                           
 19125                           ;MCU_B1.c: 345: {
 19126                           ;MCU_B1.c: 346: IOCBF2=0;
 19127  1D6E  1116               	bcf	22,2	;volatile
 19128                           
 19129                           ;MCU_B1.c: 347: IOCIF=0;
 19130  1D6F  100B               	bcf	11,0	;volatile
 19131                           
 19132                           ;MCU_B1.c: 348: if(TMain->PowerON)
 19133  1D70  0020               	movlb	0	; select bank0
 19134  1D71  086F               	movf	_TMain,w
 19135  1D72  0086               	movwf	6
 19136  1D73  3001               	movlw	1	; select bank2/3
 19137  1D74  0087               	movwf	7
 19138  1D75  1C01               	btfss	1,0
 19139  1D76  0008               	return
 19140                           
 19141                           ;MCU_B1.c: 349: {
 19142                           ;MCU_B1.c: 353: setDimmerReClock();
 19143  1D77  319C  241C  319D   	fcall	_setDimmerReClock
 19144                           
 19145                           ;MCU_B1.c: 354: if(RB2)
 19146  1D7A  0020               	movlb	0	; select bank0
 19147  1D7B  1D0D               	btfss	13,2	;volatile
 19148  1D7C  2D84               	goto	i1l7655
 19149                           
 19150                           ;MCU_B1.c: 355: {
 19151                           ;MCU_B1.c: 356: Dimmer->Correction=0;
 19152  1D7D  0021               	movlb	1	; select bank1
 19153  1D7E  0838               	movf	_Dimmer^(0+128),w
 19154  1D7F  3E02               	addlw	2
 19155  1D80  0086               	movwf	6
 19156  1D81  0187               	clrf	7
 19157  1D82  0181               	clrf	1
 19158                           
 19159                           ;MCU_B1.c: 357: }
 19160  1D83  0008               	return
 19161  1D84                     i1l7655:	
 19162                           
 19163                           ;MCU_B1.c: 358: else
 19164                           ;MCU_B1.c: 359: {
 19165                           ;MCU_B1.c: 360: Dimmer->Correction=8;
 19166  1D84  3008               	movlw	8
 19167  1D85  00F1               	movwf	??_IOC_ISR
 19168  1D86  0021               	movlb	1	; select bank1
 19169  1D87  0838               	movf	_Dimmer^(0+128),w
 19170  1D88  3E02               	addlw	2
 19171  1D89  0086               	movwf	6
 19172  1D8A  0187               	clrf	7
 19173  1D8B  0871               	movf	??_IOC_ISR,w
 19174  1D8C  0081               	movwf	1
 19175  1D8D  0008               	return
 19176  1D8E                     __end_of_IOC_ISR:	
 19177                           
 19178                           	psect	text128
 19179  1C1C                     __ptext128:	
 19180 ;; *************** function _setDimmerReClock *****************
 19181 ;; Defined at:
 19182 ;;		line 168 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
 19183 ;; Parameters:    Size  Location     Type
 19184 ;;		None
 19185 ;; Auto vars:     Size  Location     Type
 19186 ;;		None
 19187 ;; Return value:  Size  Location     Type
 19188 ;;		None               void
 19189 ;; Registers used:
 19190 ;;		wreg, fsr1l, fsr1h
 19191 ;; Tracked objects:
 19192 ;;		On entry : 0/0
 19193 ;;		On exit  : 0/0
 19194 ;;		Unchanged: 0/0
 19195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19196 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19197 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19199 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19200 ;;Total ram usage:        0 bytes
 19201 ;; Hardware stack levels used:    1
 19202 ;; This function calls:
 19203 ;;		Nothing
 19204 ;; This function is called by:
 19205 ;;		_IOC_ISR
 19206 ;; This function uses a non-reentrant model
 19207 ;;
 19208                           
 19209                           
 19210                           ;psect for function _setDimmerReClock
 19211  1C1C                     _setDimmerReClock:	
 19212                           
 19213                           ;MCU_B1.c: 170: TMR0=255;
 19214                           
 19215                           ;incstack = 0
 19216                           ; Regs used in _setDimmerReClock: [wregfsr1]
 19217  1C1C  30FF               	movlw	255
 19218  1C1D  0020               	movlb	0	; select bank0
 19219  1C1E  0095               	movwf	21	;volatile
 19220                           
 19221                           ;MCU_B1.c: 175: if(!DimmerLights11->GO)
 19222  1C1F  086B               	movf	_DimmerLights11,w
 19223  1C20  0086               	movwf	6
 19224  1C21  3001               	movlw	1	; select bank2/3
 19225  1C22  0087               	movwf	7
 19226  1C23  1801               	btfsc	1,0
 19227  1C24  2C2A               	goto	i1l1680
 19228                           
 19229                           ;MCU_B1.c: 176: {
 19230                           ;MCU_B1.c: 177: DimmerLights11->GO=1;
 19231  1C25  086B               	movf	_DimmerLights11,w
 19232  1C26  0086               	movwf	6
 19233  1C27  3001               	movlw	1	; select bank2/3
 19234  1C28  0087               	movwf	7
 19235  1C29  1401               	bsf	1,0
 19236  1C2A                     i1l1680:	
 19237                           
 19238                           ;MCU_B1.c: 178: }
 19239                           ;MCU_B1.c: 202: if(!DimmerLights22->GO)
 19240  1C2A  086C               	movf	_DimmerLights22,w
 19241  1C2B  0086               	movwf	6
 19242  1C2C  3001               	movlw	1	; select bank2/3
 19243  1C2D  0087               	movwf	7
 19244  1C2E  1801               	btfsc	1,0
 19245  1C2F  0008               	return
 19246                           
 19247                           ;MCU_B1.c: 203: {
 19248                           ;MCU_B1.c: 204: DimmerLights22->GO=1;
 19249  1C30  086C               	movf	_DimmerLights22,w
 19250  1C31  0086               	movwf	6
 19251  1C32  3001               	movlw	1	; select bank2/3
 19252  1C33  0087               	movwf	7
 19253  1C34  1401               	bsf	1,0
 19254  1C35  0008               	return
 19255  1C36                     __end_of_setDimmerReClock:	
 19256                           
 19257                           	psect	text129
 19258  19C0                     __ptext129:	
 19259 ;; *************** function _INT_ISR *****************
 19260 ;; Defined at:
 19261 ;;		line 293 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
 19262 ;; Parameters:    Size  Location     Type
 19263 ;;		None
 19264 ;; Auto vars:     Size  Location     Type
 19265 ;;		None
 19266 ;; Return value:  Size  Location     Type
 19267 ;;		None               void
 19268 ;; Registers used:
 19269 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19270 ;; Tracked objects:
 19271 ;;		On entry : 0/0
 19272 ;;		On exit  : 0/0
 19273 ;;		Unchanged: 0/0
 19274 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19275 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19276 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19277 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19278 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19279 ;;Total ram usage:        0 bytes
 19280 ;; Hardware stack levels used:    1
 19281 ;; Hardware stack levels required when called:    2
 19282 ;; This function calls:
 19283 ;;		_setRF_ReceiveGO
 19284 ;; This function is called by:
 19285 ;;		_ISR
 19286 ;; This function uses a non-reentrant model
 19287 ;;
 19288                           
 19289                           
 19290                           ;psect for function _INT_ISR
 19291  19C0                     _INT_ISR:	
 19292                           
 19293                           ;MCU_B1.c: 295: if(INTE && INTF)
 19294                           
 19295                           ;incstack = 0
 19296                           ; Regs used in _INT_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 19297  19C0  1E0B               	btfss	11,4	;volatile
 19298  19C1  0008               	return
 19299  19C2  1C8B               	btfss	11,1	;volatile
 19300  19C3  0008               	return
 19301                           
 19302                           ;MCU_B1.c: 296: {
 19303                           ;MCU_B1.c: 297: INTF=0;
 19304  19C4  108B               	bcf	11,1	;volatile
 19305                           
 19306                           ;MCU_B1.c: 298: INTE=0;
 19307  19C5  120B               	bcf	11,4	;volatile
 19308                           
 19309                           ;MCU_B1.c: 299: setRF_ReceiveGO(1,1);
 19310  19C6  01F3               	clrf	setRF_ReceiveGO@command
 19311  19C7  0AF3               	incf	setRF_ReceiveGO@command,f
 19312  19C8  3001               	movlw	1
 19313  19C9  3199  21B4         	fcall	_setRF_ReceiveGO
 19314  19CB  0008               	return
 19315  19CC                     __end_of_INT_ISR:	
 19316                           
 19317                           	psect	text130
 19318  19B4                     __ptext130:	
 19319 ;; *************** function _setRF_ReceiveGO *****************
 19320 ;; Defined at:
 19321 ;;		line 37 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
 19322 ;; Parameters:    Size  Location     Type
 19323 ;;  rf              1    wreg     unsigned char 
 19324 ;;  command         1    2[COMMON] unsigned char 
 19325 ;; Auto vars:     Size  Location     Type
 19326 ;;  rf              1    3[COMMON] unsigned char 
 19327 ;; Return value:  Size  Location     Type
 19328 ;;		None               void
 19329 ;; Registers used:
 19330 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19331 ;; Tracked objects:
 19332 ;;		On entry : 0/0
 19333 ;;		On exit  : 0/0
 19334 ;;		Unchanged: 0/0
 19335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19336 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19337 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19339 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19340 ;;Total ram usage:        2 bytes
 19341 ;; Hardware stack levels used:    1
 19342 ;; Hardware stack levels required when called:    1
 19343 ;; This function calls:
 19344 ;;		i1_RfPointSelect
 19345 ;; This function is called by:
 19346 ;;		_INT_ISR
 19347 ;; This function uses a non-reentrant model
 19348 ;;
 19349                           
 19350                           
 19351                           ;psect for function _setRF_ReceiveGO
 19352  19B4                     _setRF_ReceiveGO:	
 19353                           
 19354                           ;incstack = 0
 19355                           ; Regs used in _setRF_ReceiveGO: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 19356                           ;setRF_ReceiveGO@rf stored from wreg
 19357  19B4  00F4               	movwf	setRF_ReceiveGO@rf
 19358                           
 19359                           ;RF_Control_B1.c: 39: RfPointSelect(rf);
 19360  19B5  0874               	movf	setRF_ReceiveGO@rf,w
 19361  19B6  3199  2168         	fcall	i1_RfPointSelect
 19362                           
 19363                           ;RF_Control_B1.c: 40: RF->ReceiveGO=command;
 19364  19B8  0877               	movf	_RF,w
 19365  19B9  0086               	movwf	6
 19366  19BA  0187               	clrf	7
 19367  19BB  0873               	movf	setRF_ReceiveGO@command,w
 19368  19BC  1081               	bcf	1,1
 19369  19BD  1D03               	skipz
 19370  19BE  1481               	bsf	1,1
 19371  19BF  0008               	return
 19372  19C0                     __end_of_setRF_ReceiveGO:	
 19373                           
 19374                           	psect	text131
 19375  1968                     __ptext131:	
 19376 ;; *************** function i1_RfPointSelect *****************
 19377 ;; Defined at:
 19378 ;;		line 7 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
 19379 ;; Parameters:    Size  Location     Type
 19380 ;;  rf              1    wreg     unsigned char 
 19381 ;; Auto vars:     Size  Location     Type
 19382 ;;  rf              1    1[COMMON] unsigned char 
 19383 ;; Return value:  Size  Location     Type
 19384 ;;		None               void
 19385 ;; Registers used:
 19386 ;;		wreg
 19387 ;; Tracked objects:
 19388 ;;		On entry : 0/0
 19389 ;;		On exit  : 0/0
 19390 ;;		Unchanged: 0/0
 19391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19393 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19394 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19395 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19396 ;;Total ram usage:        2 bytes
 19397 ;; Hardware stack levels used:    1
 19398 ;; This function calls:
 19399 ;;		Nothing
 19400 ;; This function is called by:
 19401 ;;		_setRF_ReceiveGO
 19402 ;; This function uses a non-reentrant model
 19403 ;;
 19404                           
 19405                           
 19406                           ;psect for function i1_RfPointSelect
 19407  1968                     i1_RfPointSelect:	
 19408                           
 19409                           ;incstack = 0
 19410                           ; Regs used in i1_RfPointSelect: [wreg]
 19411                           ;i1RfPointSelect@rf stored from wreg
 19412  1968  00F2               	movwf	i1RfPointSelect@rf
 19413                           
 19414                           ;RF_Control_B1.c: 10: if(rf == 1)
 19415  1969  0872               	movf	i1RfPointSelect@rf,w
 19416  196A  3A01               	xorlw	1
 19417  196B  1D03               	skipz
 19418  196C  0008               	return
 19419                           
 19420                           ;RF_Control_B1.c: 11: {
 19421                           ;RF_Control_B1.c: 12: RF=&RF1;
 19422  196D  30E5               	movlw	_RF1& (0+255)
 19423  196E  00F1               	movwf	??i1_RfPointSelect
 19424  196F  0871               	movf	??i1_RfPointSelect,w
 19425  1970  00F7               	movwf	_RF
 19426  1971  0008               	return
 19427  1972                     __end_ofi1_RfPointSelect:	
 19428  007E                     btemp	set	126	;btemp
 19429  007E                     pic14e$flags	set	126
 19430  007E                     wtemp	set	126
 19431  007E                     wtemp0	set	126
 19432  0080                     wtemp1	set	128
 19433  0082                     wtemp2	set	130
 19434  0084                     wtemp3	set	132
 19435  0086                     wtemp4	set	134
 19436  0088                     wtemp5	set	136
 19437  007F                     wtemp6	set	127
 19438  007E                     ttemp	set	126
 19439  007E                     ttemp0	set	126
 19440  0081                     ttemp1	set	129
 19441  0084                     ttemp2	set	132
 19442  0087                     ttemp3	set	135
 19443  007F                     ttemp4	set	127
 19444  007E                     ltemp	set	126
 19445  007E                     ltemp0	set	126
 19446  0082                     ltemp1	set	130
 19447  0086                     ltemp2	set	134
 19448  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    102
    Data        32
    BSS         219
    Persistent  5
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      10
    BANK0            80     72      80
    BANK1            80      2      80
    BANK2            80      0      80
    BANK3            80      3      52
    BANK4            80      0      37
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    DimmerLightsIntr	PTR struct DimmerLights size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    Sw	PTR struct Switch size(1) Largest target is 9
		 -> NULL(NULL[0]), Sw2(BANK2[9]), Sw1(BANK2[9]), 

    RFSW	PTR struct RFSW size(1) Largest target is 1
		 -> NULL(NULL[0]), RFSW2(BANK1[1]), RFSW1(BANK1[1]), 

    RF	PTR struct RF size(1) Largest target is 3
		 -> NULL(NULL[0]), RF1(BANK1[3]), 

    PF	PTR struct PF size(1) Largest target is 8
		 -> NULL(NULL[0]), PF1(BANK2[8]), 

    Temp	PTR struct OverTemp size(1) Largest target is 14
		 -> NULL(NULL[0]), Temp1(BANK2[14]), 

    WDT	PTR struct WDT size(1) Largest target is 2
		 -> NULL(NULL[0]), _WDT(BANK1[2]), 

    Timer0	PTR struct Timer0 size(1) Largest target is 9
		 -> NULL(NULL[0]), VarTimer0(BANK1[9]), 

    LED	PTR struct LED size(1) Largest target is 4
		 -> NULL(NULL[0]), VarErrLED(BANK1[4]), VarLED2(BANK1[4]), VarLED1(BANK1[4]), 

    TMain	PTR struct TMain size(1) Largest target is 17
		 -> NULL(NULL[0]), VarTMain(BANK3[17]), 

    Memory	PTR struct FlashMemory size(1) Largest target is 37
		 -> NULL(NULL[0]), VarMemory(BANK4[37]), 

    Dimmer	PTR struct Dimmer size(1) Largest target is 3
		 -> NULL(NULL[0]), Dimmer1(BANK1[3]), 

    DimmerLights22	PTR struct DimmerLights size(1) Largest target is 14
		 -> NULL(NULL[0]), DimmerLights2(BANK2[14]), 

    DimmerLights11	PTR struct DimmerLights size(1) Largest target is 14
		 -> NULL(NULL[0]), DimmerLights1(BANK2[14]), 

    DimmerLights	PTR struct DimmerLights size(1) Largest target is 14
		 -> NULL(NULL[0]), DimmerLights2(BANK2[14]), DimmerLights1(BANK2[14]), 

    Product	PTR struct Product size(1) Largest target is 32
		 -> NULL(NULL[0]), VarProduct(BANK3[32]), 

    DelayOff	PTR struct DelayOff size(1) Largest target is 5
		 -> NULL(NULL[0]), DlySw2(BANK1[5]), DlySw1(BANK1[5]), 

    Buz	PTR struct Buzzer size(1) Largest target is 12
		 -> NULL(NULL[0]), Buz1(BANK2[12]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_TMR0_ISR
    _INT_ISR->_setRF_ReceiveGO
    _setRF_ReceiveGO->i1_RfPointSelect

Critical Paths under _main in BANK0

    _getTemp_AD->_getAD
    _getPowerFault_AD->_getAD
    _Temp_Main->_setTemp_Main
    _setTemp_Main->_setOverTemp_Exceptions
    _setOverTemp_Exceptions->_DimmerLights_Exceptions
    _Temp_Initialization->_setTemp_Initialization
    _Switch_Main->_setSw_Main
    _setSw_Main->_Sw_DimmerOffFunc
    _setRF_Learn->_RfPointSelect
    _Sw_DimmerOnFunc->_setRF_DimmerLights
    _Sw_DimmerOffFunc->_setRF_DimmerLights
    _Sw_DimmerAdjFunc->_setDimmerLights_AdjGo
    _Sw_DimmerAdjFunc->_setDimmerLights_TriggerAdj
    _Sw_DimmerAdjFunc->_setRFSW_Status
    _setDimmerLights_TriggerAdj->_DimmerLightsPointSelect
    _setDimmerLights_AdjGo->_DimmerLightsPointSelect
    _Switch_Initialization->_setSw_Initialization
    _setSw_Initialization->_setLED
    _getRxData->_setControl_Lights_Table
    _setLog_Code->_setBuz
    _setControl_Lights_Table->_setRFSW_AdjControl
    _setRFSW_Control->_setRF_DimmerLights
    _setDelayOff_GO->_DelayTimejudge
    _setRFSW_AdjControl->_setRF_DimmerValue
    _setRF_DimmerValue->_setDimmerLights_AdjRF
    _setDimmerLights_AdjRF->_getPercentValue
    _getPercentValue->___fttol
    ___ftmul->___awtoft
    ___ftadd->___ftmul
    _RF_RxDisable->_CC2500_WriteCommand
    _CC2500_TxData->_CC2500_WriteCommand
    _CC2500_RxData->_CC2500_ReadStatus
    _CC2500_RxData->_CC2500_WriteCommand
    _CC2500_RxData->_setRF_RxStatus
    _setRF_RxStatus->_RfPointSelect
    _CC2500_ReadStatus->_CC2500_ReadByte
    _CC2500_ReadStatus->_CC2500_WriteByte
    _RF_Initialization->_setRF_Initialization
    _PowerFault_Main->_setPowerFault_Main
    _setPowerFault_Main->_setPowerFault_Exceptions
    _setPowerFault_Exceptions->_DimmerLights_Exceptions
    _DimmerLights_Exceptions->_setBuz
    _setDimmerLights_TriggerERROR->_DimmerLightsPointSelect
    _setDimmerLights_ERROR->_setLED
    _setDimmerLights_ERROR->_setRFSW_Status
    _setDimmerLights_ERROR->_setSw_Status
    _PowerFault_Initialization->_setPowerFault_Initialization
    _Mcu_Initialization->_TMR0_Set
    _Mcu_Initialization->_WDT_Set
    _MainT->_setBuz
    _setSw_Enable->_SwPointSelect
    _setRF_Enable->_RfPointSelect
    _LED_Main->_setLED_Main
    _setLED_Main->_LedPointSelect
    _LED_Initialization->_setLED_Initialization
    _setLED_Initialization->_setLED
    _Flash_Memory_Main->_Flash_Memory_Modify
    _Flash_Memory_Modify->_Flash_Memory_Read
    _Flash_Memory_Initialization->_setPercentValue
    _DimmerLights_Main->_setDimmerLights_Main
    _setDimmerLights_Main->_setDimmerLights_Adj
    _setDimmerLights_Adj->_setRF_DimmerLights
    _setDimmerLights->_setLED
    _setLED->_LedPointSelect
    _DimmerLights_Close->_getDimmerLights_StatusFlag
    _DimmerLights_Initialization->_setDimmerLights_Initialization
    _setDimmerLights_Initialization->_DimmerLightsPointSelect
    _DelayOff_Main->_DlyOff_Main
    _DlyOff_Main->_setRF_DimmerLights
    _setTxData->_RfPointSelect
    _setSw_Status->_SwPointSelect
    _setRF_DimmerLights->_setPercentValue
    _setPercentValue->___fttol
    ___fttol->___ftadd
    ___ftdiv->___awtoft
    ___awtoft->___ftpack
    _setRFSW_Status->_RfSWPointSelect
    _setDimmerLights_Trigger->_DimmerLightsPointSelect
    _setDimmerLights_Switch->_DimmerLightsPointSelect
    _setBuz->___wmul
    _DelayOff_Initialization->_DlyOff_Initialization
    _DlyOff_Initialization->_DelayOffPointSelect
    _CC2500_PowerOnInitial->_CC2500_InitSetREG
    _CC2500_SIDLEMode->_CC2500_WriteCommand
    _CC2500_PowerRST->_DelayTime_1us
    _CC2500_InitSetREG->_CC2500_WriteREG
    _CC2500_InitPATable->_CC2500_WriteREG
    _CC2500_WriteREG->_CC2500_WriteByte
    _CC2500_FrequencyCabr->_DelayTime_1us
    _CC2500_ClearTXFIFO->_CC2500_WriteCommand
    _CC2500_ClearRXFIFO->_CC2500_WriteCommand
    _CC2500_WriteCommand->_CC2500_WriteByte

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _RF_Main->_setRF_Main
    _setRF_Main->_getRxData

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    _Switch_Main->_setSw_Main
    _RF_Main->_setRF_Main

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   96748
              _Buzzer_Initialization
                        _Buzzer_Main
              _CC2500_PowerOnInitial
            _DelayOff_Initialization
                      _DelayOff_Main
        _DimmerLights_Initialization
                  _DimmerLights_Main
        _Flash_Memory_Initialization
                  _Flash_Memory_Main
                 _LED_Initialization
                           _LED_Main
                              _MainT
               _MainT_Initialization
                 _Mcu_Initialization
          _PowerFault_Initialization
                    _PowerFault_Main
                  _RF_Initialization
                            _RF_Main
              _Switch_Initialization
                        _Switch_Main
                _Temp_Initialization
                          _Temp_Main
                           _WDT_Main
                   _getPowerFault_AD
                         _getTemp_AD
 ---------------------------------------------------------------------------------
 (1) _getTemp_AD                                           5     5      0     223
                                              4 BANK0      5     5      0
                              _getAD
 ---------------------------------------------------------------------------------
 (1) _getPowerFault_AD                                     5     5      0     223
                                              4 BANK0      5     5      0
                              _getAD
 ---------------------------------------------------------------------------------
 (2) _getAD                                                4     1      3     192
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (1) _WDT_Main                                             1     1      0       0
                                              0 BANK0      1     1      0
                       _WDT_Clearing
 ---------------------------------------------------------------------------------
 (2) _WDT_Clearing                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Temp_Main                                            0     0      0    6658
                       _setTemp_Main
 ---------------------------------------------------------------------------------
 (2) _setTemp_Main                                         3     3      0    6658
                                             13 BANK0      3     3      0
                         _getPF_Safe
             _setOverTemp_Exceptions
 ---------------------------------------------------------------------------------
 (3) _setOverTemp_Exceptions                               2     2      0    6658
                                             11 BANK0      2     2      0
            _DimmerLights_Exceptions
                             _setBuz
                             _setLED
                       _setRF_Enable
                       _setSw_Enable
 ---------------------------------------------------------------------------------
 (3) _getPF_Safe                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Temp_Initialization                                  0     0      0       0
             _setTemp_Initialization
 ---------------------------------------------------------------------------------
 (2) _setTemp_Initialization                               1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Switch_Main                                          0     0      0   22040
                         _setSw_Main
 ---------------------------------------------------------------------------------
 (2) _setSw_Main                                           5     5      0   22040
                                             69 BANK0      2     2      0
                                              0 BANK3      3     3      0
                      _SwPointSelect
                   _Sw_DimmerAdjFunc
                   _Sw_DimmerOffFunc
                    _Sw_DimmerOnFunc
                             _setBuz
                        _setRF_Learn
 ---------------------------------------------------------------------------------
 (3) _setRF_Learn                                          2     1      1     288
                                              2 BANK0      2     1      1
                      _RfPointSelect
 ---------------------------------------------------------------------------------
 (3) _Sw_DimmerOnFunc                                      2     2      0    9518
                                             66 BANK0      2     2      0
                             _setBuz
             _setDimmerLights_Switch
            _setDimmerLights_Trigger
                     _setRFSW_Status
                 _setRF_DimmerLights
                          _setTxData
 ---------------------------------------------------------------------------------
 (3) _Sw_DimmerOffFunc                                     3     3      0    9429
                                             66 BANK0      3     3      0
                     _setDelayOff_GO
              _setDimmerLights_AdjGo
             _setDimmerLights_Switch
            _setDimmerLights_Trigger
         _setDimmerLights_TriggerAdj
                 _setRF_DimmerLights
                          _setTxData
 ---------------------------------------------------------------------------------
 (3) _Sw_DimmerAdjFunc                                     2     2      0    1282
                                              4 BANK0      2     2      0
              _setDimmerLights_AdjGo
         _setDimmerLights_TriggerAdj
                     _setRFSW_Status
 ---------------------------------------------------------------------------------
 (4) _setDimmerLights_TriggerAdj                           2     1      1     254
                                              2 BANK0      2     1      1
            _DimmerLightsPointSelect
 ---------------------------------------------------------------------------------
 (4) _setDimmerLights_AdjGo                                2     1      1     254
                                              2 BANK0      2     1      1
            _DimmerLightsPointSelect
 ---------------------------------------------------------------------------------
 (1) _Switch_Initialization                                0     0      0     948
                         _TouchPower
               _setSw_Initialization
 ---------------------------------------------------------------------------------
 (2) _setSw_Initialization                                 1     1      0     948
                                              4 BANK0      1     1      0
                             _setLED
 ---------------------------------------------------------------------------------
 (2) _TouchPower                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RF_Main                                              0     0      0   29561
                         _setRF_Main
 ---------------------------------------------------------------------------------
 (2) _setRF_Main                                           3     3      0   29561
                                              1 BANK1      1     1      0
                                              0 BANK3      2     2      0
                      _CC2500_RxData
                      _CC2500_TxData
                _CC2500_WriteCommand
                       _RF_RxDisable
                      _RfPointSelect
                          _getRxData
                          _setINT_GO
 ---------------------------------------------------------------------------------
 (3) _getRxData                                            2     2      0   28277
                                              0 BANK1      1     1      0
                      _RfPointSelect
            _setControl_Lights_Table
                        _setLog_Code
 ---------------------------------------------------------------------------------
 (4) _setLog_Code                                          2     2      0    1263
                                             10 BANK0      2     2      0
                      _RfPointSelect
                             _setBuz
 ---------------------------------------------------------------------------------
 (4) _setControl_Lights_Table                              1     1      0   26952
                                             71 BANK0      1     1      0
                      _RfPointSelect
                             _setBuz
                    _setDimmerLights
                 _setRFSW_AdjControl
                    _setRFSW_Control
                     _setRFSW_Status
                       _setSw_Status
                          _setTxData
 ---------------------------------------------------------------------------------
 (5) _setRFSW_Control                                      2     2      0   10853
                                             66 BANK0      2     2      0
                    _RfSWPointSelect
                             _setBuz
                     _setDelayOff_GO
             _setDimmerLights_Switch
            _setDimmerLights_Trigger
                 _setRF_DimmerLights
                       _setSw_Status
                          _setTxData
 ---------------------------------------------------------------------------------
 (4) _setDelayOff_GO                                       5     3      2    1192
                                              3 BANK0      5     3      2
                _DelayOffPointSelect
                     _DelayTimejudge
 ---------------------------------------------------------------------------------
 (5) _DelayTimejudge                                       3     3      0     238
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (5) _setRFSW_AdjControl                                   3     3      0   12318
                                             68 BANK0      3     3      0
                    _RfSWPointSelect
                  _setRF_DimmerValue
                          _setTxData
 ---------------------------------------------------------------------------------
 (6) _setRF_DimmerValue                                    3     3      0   12070
                                             65 BANK0      3     3      0
              _setDimmerLights_AdjRF
 ---------------------------------------------------------------------------------
 (7) _setDimmerLights_AdjRF                                2     2      0   11977
                                             63 BANK0      2     2      0
            _DimmerLightsPointSelect
                    _getPercentValue
 ---------------------------------------------------------------------------------
 (8) _getPercentValue                                      6     6      0   11884
                                             57 BANK0      6     6      0
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___fttol
 ---------------------------------------------------------------------------------
 (9) ___ftmul                                             16    10      6    2655
                                             14 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (9) ___ftadd                                             13     7      6    3482
                                             30 BANK0     13     7      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) _RF_RxDisable                                         1     1      0     192
                                              4 BANK0      1     1      0
                _CC2500_WriteCommand
                      _RfPointSelect
                          _setINT_GO
 ---------------------------------------------------------------------------------
 (3) _CC2500_TxData                                        2     2      0     235
                                              4 BANK0      2     2      0
                   _CC2500_WriteByte
                _CC2500_WriteCommand
 ---------------------------------------------------------------------------------
 (3) _CC2500_RxData                                        2     2      0     628
                                              4 BANK0      2     2      0
                    _CC2500_ReadByte
                  _CC2500_ReadStatus
                   _CC2500_WriteByte
                _CC2500_WriteCommand
                     _setRF_RxStatus
 ---------------------------------------------------------------------------------
 (4) _setRF_RxStatus                                       2     1      1     158
                                              2 BANK0      2     1      1
                      _RfPointSelect
 ---------------------------------------------------------------------------------
 (4) _CC2500_ReadStatus                                    2     2      0     167
                                              2 BANK0      2     2      0
                    _CC2500_ReadByte
                   _CC2500_WriteByte
 ---------------------------------------------------------------------------------
 (5) _CC2500_ReadByte                                      2     2      0      68
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _RF_Initialization                                    0     0      0       0
               _setRF_Initialization
 ---------------------------------------------------------------------------------
 (2) _setRF_Initialization                                 2     2      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _PowerFault_Main                                      0     0      0    5457
                 _setPowerFault_Main
 ---------------------------------------------------------------------------------
 (2) _setPowerFault_Main                                   2     2      0    5457
                                             13 BANK0      2     2      0
                       _getTemp_Safe
           _setPowerFault_Exceptions
 ---------------------------------------------------------------------------------
 (3) _setPowerFault_Exceptions                             2     2      0    5457
                                             11 BANK0      2     2      0
            _DimmerLights_Exceptions
                             _setLED
                       _setRF_Enable
                       _setSw_Enable
 ---------------------------------------------------------------------------------
 (4) _DimmerLights_Exceptions                              1     1      0    3911
                                             10 BANK0      1     1      0
         _getDimmerLights_StatusFlag
                             _setBuz
              _setDimmerLights_ERROR
       _setDimmerLights_TriggerERROR
 ---------------------------------------------------------------------------------
 (5) _setDimmerLights_TriggerERROR                         2     1      1     347
                                              2 BANK0      2     1      1
            _DimmerLightsPointSelect
 ---------------------------------------------------------------------------------
 (5) _setDimmerLights_ERROR                                2     2      0    2196
                                              4 BANK0      2     2      0
            _DimmerLightsPointSelect
                             _setLED
                     _setRFSW_Status
                       _setSw_Status
 ---------------------------------------------------------------------------------
 (3) _getTemp_Safe                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PowerFault_Initialization                            0     0      0       0
       _setPowerFault_Initialization
 ---------------------------------------------------------------------------------
 (2) _setPowerFault_Initialization                         1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Mcu_Initialization                                   1     1      0       0
                                              1 BANK0      1     1      0
                            _ADC_Set
                            _INT_Set
                            _IOC_Set
                             _IO_Set
                           _TMR0_Set
                            _WDT_Set
 ---------------------------------------------------------------------------------
 (2) _WDT_Set                                              1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Set                                             1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _IO_Set                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _IOC_Set                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INT_Set                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Set                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MainT_Initialization                                 1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _MainT                                                0     0      0    1675
                             _setBuz
                       _setRF_Enable
                       _setSw_Enable
                     _setTemp_Enable
 ---------------------------------------------------------------------------------
 (2) _setTemp_Enable                                       1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _setSw_Enable                                         1     1      0     124
                                              2 BANK0      1     1      0
                      _SwPointSelect
 ---------------------------------------------------------------------------------
 (4) _setRF_Enable                                         2     1      1     319
                                              2 BANK0      2     1      1
                      _RfPointSelect
                          _setINT_GO
 ---------------------------------------------------------------------------------
 (5) _setINT_GO                                            1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _LED_Main                                             0     0      0     217
                        _setLED_Main
 ---------------------------------------------------------------------------------
 (2) _setLED_Main                                          3     3      0     217
                                              2 BANK0      3     3      0
                     _LedPointSelect
 ---------------------------------------------------------------------------------
 (1) _LED_Initialization                                   0     0      0    1072
              _setLED_Initialization
 ---------------------------------------------------------------------------------
 (2) _setLED_Initialization                                1     1      0    1072
                                              4 BANK0      1     1      0
                     _LedPointSelect
                             _setLED
 ---------------------------------------------------------------------------------
 (1) _Flash_Memory_Main                                    0     0      0     331
                _Flash_Memory_Modify
 ---------------------------------------------------------------------------------
 (2) _Flash_Memory_Modify                                  3     3      0     331
                                              4 BANK0      3     3      0
               _Flash_Memory_Erasing
                  _Flash_Memory_Read
                 _Flash_Memory_Write
 ---------------------------------------------------------------------------------
 (3) _Flash_Memory_Erasing                                 0     0      0       0
                _Flash_Memory_Unlock
 ---------------------------------------------------------------------------------
 (1) _Flash_Memory_Initialization                          2     2      0    6140
                                             61 BANK0      2     2      0
                  _Flash_Memory_Read
                 _Flash_Memory_Write
                    _setPercentValue
 ---------------------------------------------------------------------------------
 (3) _Flash_Memory_Write                                   2     2      0     130
                                              0 BANK0      2     2      0
                _Flash_Memory_Unlock
 ---------------------------------------------------------------------------------
 (4) _Flash_Memory_Unlock                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Flash_Memory_Read                                    4     4      0      71
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _DimmerLights_Main                                    0     0      0    9887
                 _DimmerLights_Close
               _setDimmerLights_Main
 ---------------------------------------------------------------------------------
 (2) _setDimmerLights_Main                                 2     2      0    9813
                                             69 BANK0      2     2      0
            _DimmerLightsPointSelect
                             _setBuz
                    _setDimmerLights
                _setDimmerLights_Adj
 ---------------------------------------------------------------------------------
 (3) _setDimmerLights_Adj                                  3     2      1    6868
                                             66 BANK0      3     2      1
            _DimmerLightsPointSelect
                 _setRF_DimmerLights
                          _setTxData
 ---------------------------------------------------------------------------------
 (5) _setDimmerLights                                      3     2      1    1363
                                              4 BANK0      3     2      1
            _DimmerLightsPointSelect
                             _setLED
 ---------------------------------------------------------------------------------
 (4) _setLED                                               2     1      1     917
                                              2 BANK0      2     1      1
                     _LedPointSelect
 ---------------------------------------------------------------------------------
 (5) _LedPointSelect                                       2     2      0      93
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _DimmerLights_Close                                   0     0      0      74
         _getDimmerLights_StatusFlag
 ---------------------------------------------------------------------------------
 (5) _getDimmerLights_StatusFlag                           3     3      0      74
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _DimmerLights_Initialization                          1     1      0      93
                                              4 BANK0      1     1      0
              _Dimmer_Initialization
     _setDimmerLights_Initialization
 ---------------------------------------------------------------------------------
 (2) _setDimmerLights_Initialization                       2     2      0      93
                                              2 BANK0      2     2      0
            _DimmerLightsPointSelect
 ---------------------------------------------------------------------------------
 (2) _Dimmer_Initialization                                1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _DelayOff_Main                                        0     0      0   10023
                        _DlyOff_Main
 ---------------------------------------------------------------------------------
 (2) _DlyOff_Main                                          3     3      0   10023
                                             66 BANK0      3     3      0
                _DelayOffPointSelect
                             _setBuz
             _setDimmerLights_Switch
            _setDimmerLights_Trigger
                     _setRFSW_Status
                 _setRF_DimmerLights
                       _setSw_Status
                          _setTxData
 ---------------------------------------------------------------------------------
 (4) _setTxData                                            3     3      0      62
                                              2 BANK0      2     2      0
                      _RfPointSelect
 ---------------------------------------------------------------------------------
 (5) _RfPointSelect                                        2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (6) _setSw_Status                                         2     1      1     514
                                              2 BANK0      2     1      1
                      _SwPointSelect
 ---------------------------------------------------------------------------------
 (5) _SwPointSelect                                        2     2      0      62
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _setRF_DimmerLights                                   5     4      1    6521
                                             61 BANK0      5     4      1
                    _setPercentValue
 ---------------------------------------------------------------------------------
 (5) _setPercentValue                                      4     4      0    5747
                                             57 BANK0      4     4      0
                           ___awtoft
                            ___ftdiv
                            ___fttol
 ---------------------------------------------------------------------------------
 (6) ___fttol                                             14    10      4     501
                                             43 BANK0     14    10      4
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___ftdiv                                             16    10      6    2847
                                             14 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (6) ___awtoft                                             6     3      3    2300
                                              8 BANK0      6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (7) ___ftpack                                             8     3      5    2037
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (6) _setRFSW_Status                                       2     1      1     579
                                              2 BANK0      2     1      1
                    _RfSWPointSelect
 ---------------------------------------------------------------------------------
 (7) _RfSWPointSelect                                      2     2      0      62
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _setDimmerLights_Trigger                              2     1      1     449
                                              2 BANK0      2     1      1
            _DimmerLightsPointSelect
 ---------------------------------------------------------------------------------
 (4) _setDimmerLights_Switch                               2     1      1     449
                                              2 BANK0      2     1      1
            _DimmerLightsPointSelect
 ---------------------------------------------------------------------------------
 (6) _DimmerLightsPointSelect                              2     2      0      62
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _setBuz                                               4     2      2    1201
                                              6 BANK0      4     2      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     266
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _DelayOff_Initialization                              0     0      0      93
              _DlyOff_Initialization
 ---------------------------------------------------------------------------------
 (2) _DlyOff_Initialization                                1     1      0      93
                                              2 BANK0      1     1      0
                _DelayOffPointSelect
 ---------------------------------------------------------------------------------
 (5) _DelayOffPointSelect                                  2     2      0      62
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _CC2500_PowerOnInitial                                0     0      0    2107
                 _CC2500_ClearRXFIFO
                 _CC2500_ClearTXFIFO
               _CC2500_FrequencyCabr
                 _CC2500_InitPATable
                  _CC2500_InitSetREG
                    _CC2500_PowerRST
                   _CC2500_SIDLEMode
 ---------------------------------------------------------------------------------
 (2) _CC2500_SIDLEMode                                     0     0      0      99
                _CC2500_WriteCommand
 ---------------------------------------------------------------------------------
 (2) _CC2500_PowerRST                                      1     1      0     464
                                              6 BANK0      1     1      0
                   _CC2500_WriteByte
                      _DelayTime_1us
 ---------------------------------------------------------------------------------
 (2) _CC2500_InitSetREG                                    4     4      0     458
                                              5 BANK0      4     4      0
                    _CC2500_WriteREG
 ---------------------------------------------------------------------------------
 (2) _CC2500_InitPATable                                   3     3      0     393
                                              5 BANK0      3     3      0
                    _CC2500_WriteREG
 ---------------------------------------------------------------------------------
 (3) _CC2500_WriteREG                                      3     2      1     260
                                              2 BANK0      3     2      1
                   _CC2500_WriteByte
 ---------------------------------------------------------------------------------
 (2) _CC2500_FrequencyCabr                                 0     0      0     495
                _CC2500_WriteCommand
                      _DelayTime_1us
 ---------------------------------------------------------------------------------
 (3) _DelayTime_1us                                        6     4      2     396
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (2) _CC2500_ClearTXFIFO                                   0     0      0      99
                _CC2500_WriteCommand
 ---------------------------------------------------------------------------------
 (2) _CC2500_ClearRXFIFO                                   0     0      0      99
                _CC2500_WriteCommand
 ---------------------------------------------------------------------------------
 (4) _CC2500_WriteCommand                                  2     2      0      99
                                              2 BANK0      2     2      0
                   _CC2500_WriteByte
 ---------------------------------------------------------------------------------
 (5) _CC2500_WriteByte                                     2     2      0      68
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _Buzzer_Main                                          4     4      0       0
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _Buzzer_Initialization                                1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _ISR                                                 1     1      0     119
                                              4 COMMON     1     1      0
                            _INT_ISR
                            _IOC_ISR
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (12) _TMR0_ISR                                            4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (12) _IOC_ISR                                             1     1      0       0
                                              0 COMMON     1     1      0
                   _setDimmerReClock
 ---------------------------------------------------------------------------------
 (13) _setDimmerReClock                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _INT_ISR                                             0     0      0     119
                    _setRF_ReceiveGO
 ---------------------------------------------------------------------------------
 (13) _setRF_ReceiveGO                                     2     1      1     119
                                              2 COMMON     2     1      1
                    i1_RfPointSelect
 ---------------------------------------------------------------------------------
 (14) i1_RfPointSelect                                     2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Buzzer_Initialization
   _Buzzer_Main
   _CC2500_PowerOnInitial
     _CC2500_ClearRXFIFO
       _CC2500_WriteCommand
         _CC2500_WriteByte
     _CC2500_ClearTXFIFO
       _CC2500_WriteCommand
         _CC2500_WriteByte
     _CC2500_FrequencyCabr
       _CC2500_WriteCommand
         _CC2500_WriteByte
       _DelayTime_1us
     _CC2500_InitPATable
       _CC2500_WriteREG
         _CC2500_WriteByte
     _CC2500_InitSetREG
       _CC2500_WriteREG
         _CC2500_WriteByte
     _CC2500_PowerRST
       _CC2500_WriteByte
       _DelayTime_1us
     _CC2500_SIDLEMode
       _CC2500_WriteCommand
         _CC2500_WriteByte
   _DelayOff_Initialization
     _DlyOff_Initialization
       _DelayOffPointSelect
   _DelayOff_Main
     _DlyOff_Main
       _DelayOffPointSelect
       _setBuz
         ___wmul
       _setDimmerLights_Switch
         _DimmerLightsPointSelect
       _setDimmerLights_Trigger
         _DimmerLightsPointSelect
       _setRFSW_Status
         _RfSWPointSelect
       _setRF_DimmerLights
         _setPercentValue
           ___awtoft
             ___ftpack
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
       _setSw_Status
         _SwPointSelect
       _setTxData
         _RfPointSelect
   _DimmerLights_Initialization
     _Dimmer_Initialization
     _setDimmerLights_Initialization
       _DimmerLightsPointSelect
   _DimmerLights_Main
     _DimmerLights_Close
       _getDimmerLights_StatusFlag
     _setDimmerLights_Main
       _DimmerLightsPointSelect
       _setBuz
         ___wmul
       _setDimmerLights
         _DimmerLightsPointSelect
         _setLED
           _LedPointSelect
       _setDimmerLights_Adj
         _DimmerLightsPointSelect
         _setRF_DimmerLights
           _setPercentValue
             ___awtoft
               ___ftpack
             ___ftdiv
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___fttol
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
         _setTxData
           _RfPointSelect
   _Flash_Memory_Initialization
     _Flash_Memory_Read
     _Flash_Memory_Write
       _Flash_Memory_Unlock
     _setPercentValue
       ___awtoft
         ___ftpack
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
   _Flash_Memory_Main
     _Flash_Memory_Modify
       _Flash_Memory_Erasing
         _Flash_Memory_Unlock
       _Flash_Memory_Read
       _Flash_Memory_Write
         _Flash_Memory_Unlock
   _LED_Initialization
     _setLED_Initialization
       _LedPointSelect
       _setLED
         _LedPointSelect
   _LED_Main
     _setLED_Main
       _LedPointSelect
   _MainT
     _setBuz
       ___wmul
     _setRF_Enable
       _RfPointSelect
       _setINT_GO
     _setSw_Enable
       _SwPointSelect
     _setTemp_Enable
   _MainT_Initialization
   _Mcu_Initialization
     _ADC_Set
     _INT_Set
     _IOC_Set
     _IO_Set
     _TMR0_Set
     _WDT_Set
   _PowerFault_Initialization
     _setPowerFault_Initialization
   _PowerFault_Main
     _setPowerFault_Main
       _getTemp_Safe
       _setPowerFault_Exceptions
         _DimmerLights_Exceptions
           _getDimmerLights_StatusFlag
           _setBuz
             ___wmul
           _setDimmerLights_ERROR
             _DimmerLightsPointSelect
             _setLED
               _LedPointSelect
             _setRFSW_Status
               _RfSWPointSelect
             _setSw_Status
               _SwPointSelect
           _setDimmerLights_TriggerERROR
             _DimmerLightsPointSelect
         _setLED
           _LedPointSelect
         _setRF_Enable
           _RfPointSelect
           _setINT_GO
         _setSw_Enable
           _SwPointSelect
   _RF_Initialization
     _setRF_Initialization
   _RF_Main
     _setRF_Main
       _CC2500_RxData
         _CC2500_ReadByte
         _CC2500_ReadStatus
           _CC2500_ReadByte
           _CC2500_WriteByte
         _CC2500_WriteByte
         _CC2500_WriteCommand
           _CC2500_WriteByte
         _setRF_RxStatus
           _RfPointSelect
       _CC2500_TxData
         _CC2500_WriteByte
         _CC2500_WriteCommand
           _CC2500_WriteByte
       _CC2500_WriteCommand
         _CC2500_WriteByte
       _RF_RxDisable
         _CC2500_WriteCommand
           _CC2500_WriteByte
         _RfPointSelect
         _setINT_GO
       _RfPointSelect
       _getRxData
         _RfPointSelect
         _setControl_Lights_Table
           _RfPointSelect
           _setBuz
             ___wmul
           _setDimmerLights
             _DimmerLightsPointSelect
             _setLED
               _LedPointSelect
           _setRFSW_AdjControl
             _RfSWPointSelect
             _setRF_DimmerValue
               _setDimmerLights_AdjRF
                 _DimmerLightsPointSelect
                 _getPercentValue
                   ___awtoft
                     ___ftpack
                   ___ftadd
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftmul (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                     ___ftpack (ARG)
                   ___ftdiv
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                   ___ftmul
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                   ___fttol
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftadd (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftmul (ARG)
                         ___awtoft (ARG)
                           ___ftpack
                         ___ftpack (ARG)
                       ___ftpack (ARG)
                     ___ftdiv (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                     ___ftmul (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
             _setTxData
               _RfPointSelect
           _setRFSW_Control
             _RfSWPointSelect
             _setBuz
               ___wmul
             _setDelayOff_GO
               _DelayOffPointSelect
               _DelayTimejudge
             _setDimmerLights_Switch
               _DimmerLightsPointSelect
             _setDimmerLights_Trigger
               _DimmerLightsPointSelect
             _setRF_DimmerLights
               _setPercentValue
                 ___awtoft
                   ___ftpack
                 ___ftdiv
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___fttol
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftadd (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftmul (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                     ___ftpack (ARG)
                   ___ftdiv (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
             _setSw_Status
               _SwPointSelect
             _setTxData
               _RfPointSelect
           _setRFSW_Status
             _RfSWPointSelect
           _setSw_Status
             _SwPointSelect
           _setTxData
             _RfPointSelect
         _setLog_Code
           _RfPointSelect
           _setBuz
             ___wmul
       _setINT_GO
   _Switch_Initialization
     _TouchPower
     _setSw_Initialization
       _setLED
         _LedPointSelect
   _Switch_Main
     _setSw_Main
       _SwPointSelect
       _Sw_DimmerAdjFunc
         _setDimmerLights_AdjGo
           _DimmerLightsPointSelect
         _setDimmerLights_TriggerAdj
           _DimmerLightsPointSelect
         _setRFSW_Status
           _RfSWPointSelect
       _Sw_DimmerOffFunc
         _setDelayOff_GO
           _DelayOffPointSelect
           _DelayTimejudge
         _setDimmerLights_AdjGo
           _DimmerLightsPointSelect
         _setDimmerLights_Switch
           _DimmerLightsPointSelect
         _setDimmerLights_Trigger
           _DimmerLightsPointSelect
         _setDimmerLights_TriggerAdj
           _DimmerLightsPointSelect
         _setRF_DimmerLights
           _setPercentValue
             ___awtoft
               ___ftpack
             ___ftdiv
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___fttol
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
         _setTxData
           _RfPointSelect
       _Sw_DimmerOnFunc
         _setBuz
           ___wmul
         _setDimmerLights_Switch
           _DimmerLightsPointSelect
         _setDimmerLights_Trigger
           _DimmerLightsPointSelect
         _setRFSW_Status
           _RfSWPointSelect
         _setRF_DimmerLights
           _setPercentValue
             ___awtoft
               ___ftpack
             ___ftdiv
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___fttol
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
         _setTxData
           _RfPointSelect
       _setBuz
         ___wmul
       _setRF_Learn
         _RfPointSelect
   _Temp_Initialization
     _setTemp_Initialization
   _Temp_Main
     _setTemp_Main
       _getPF_Safe
       _setOverTemp_Exceptions
         _DimmerLights_Exceptions
           _getDimmerLights_StatusFlag
           _setBuz
             ___wmul
           _setDimmerLights_ERROR
             _DimmerLightsPointSelect
             _setLED
               _LedPointSelect
             _setRFSW_Status
               _RfSWPointSelect
             _setSw_Status
               _SwPointSelect
           _setDimmerLights_TriggerERROR
             _DimmerLightsPointSelect
         _setBuz
           ___wmul
         _setLED
           _LedPointSelect
         _setRF_Enable
           _RfPointSelect
           _setINT_GO
         _setSw_Enable
           _SwPointSelect
   _WDT_Main
     _WDT_Clearing
   _getPowerFault_AD
     _getAD
   _getTemp_AD
     _getAD

 _ISR (ROOT)
   _INT_ISR
     _setRF_ReceiveGO
       i1_RfPointSelect
   _IOC_ISR
     _setDimmerReClock
   _TMR0_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       1       1        7.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      5       A       2       71.4%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     48      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      2      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      50       9      100.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      3      34      11       65.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      25      13       46.3%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     153      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     153      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Wed Oct 01 08:37:37 2014

                   __size_of_Switch_Main 0008                    ?_Flash_Memory_Erasing 0071  
                           _WDT_Clearing 0002             ??_setDimmerLights_TriggerAdj 0023  
                                     _PF 0076                                       _RD 0CA8  
                                     _RF 0077                  __end_of_CC2500_WriteREG 1BEA  
                                     _WR 0CA9                                       _Sw 0078  
     __end_of_getDimmerLights_StatusFlag 1B72               _getDimmerLights_StatusFlag 1B5C  
                    ___wmul@multiplicand 0022                   __end_of_setDelayOff_GO 1318  
                           ___ftadd@exp1 004A                             ___ftadd@exp2 0049  
              setDimmerLights_Adj@lights 0064                     _setDimmerLights_Main 08E3  
                           ___ftadd@sign 0048                                      l312 1138  
                                    l313 113D                                      l403 07EE  
                                    l323 1434                                      l307 110E  
                                    l340 1F08                                      l316 1140  
                                    l343 1F0E                                      l327 1445  
                                    l409 1D93                                      l373 1BC4  
                                    l374 1BC6                                      l385 1BD9  
                                    l706 1EB3                                      l397 1A65  
                                    l914 1531                                      l867 1AD8  
                                    _GIE 005F                                      _CRC 00B7  
                                    _RA0 0060                                      _RB0 0068  
   __size_of_DimmerLights_Initialization 0015                                      _RB1 0069  
                                    _RA3 0063                                      _PF1 0168  
                                    _RC0 0070                                      _RB2 006A  
                                    _RA4 0064                                      _LED 00BA  
                                    _RC1 0071                                      _RB3 006B  
                                    _RC2 0072                                      _RB4 006C  
                                    _RA6 0066                                      _RB5 006D  
                                    _RA7 0067                                      _RC4 0074  
                                    _RC5 0075                                      _RC7 0077  
                                    _RF1 00E5                                      _ISR 0004  
                                    _WDT 00ED          setPowerFault_Exceptions@command 002C  
                                    _Sw1 0156                                      _Sw2 015F  
                                    _Buz 0068                setDimmerLights_Adj@status 0062  
               __end_of_CC2500_WriteByte 1BD1           ??_setDimmerLights_TriggerERROR 0023  
                  _Buzzer_Initialization 1972                          __end_of_ADC_Set 1920  
                        ?_DelayTimejudge 0071                                      wreg 0009  
   setDimmerLights_Initialization@lights 0023                          _setDimmerLights 09E5  
                  _setDimmerLights_ERROR 121E                    _setDimmerLights_AdjRF 1D46  
                  _setDimmerLights_AdjGo 1A9D                  __size_of_setTemp_Enable 000B  
                                   ?_ISR 0071                          _PowerFault_Main 18DE  
                           ___ftdiv@cntr 0038                          __end_of_IOC_ISR 1D8E  
                           ___ftdiv@sign 003D                 ?_DimmerLightsPointSelect 0071  
                                   l2059 10ED                                     l3305 141B  
                                   l2361 1F69                                     l3138 1CAE  
                                   l2603 1217                                     l1708 1B7C  
                                   l2621 1B51                          __end_of_IOC_Set 1A09  
                                   l2357 0714                                     l1734 1EDD  
                                   l3328 0FA9                                     l2635 102C  
                                   l2817 18FB                                     l3299 1404  
                                   l8003 0F48                                     l8021 0F75  
                                   l8023 0F7F                                     l8015 0F62  
                                   l8111 0D9A                                     l8033 0F9B  
                                   l8025 0F84                                     l8105 0D84  
                                   l8211 1AFF                                     l8043 0FCD  
                                   l8035 0FA5                                     l8027 0F88  
                                   l8123 0DD5                                     l8053 0FE8  
                                   l8063 0CDB                                     l8039 0FBB  
                                   l8135 0DF1                                     l8127 0DDD  
                                   l8231 1EA5                                     l8223 1E99  
                                   l9031 109D                                     l8313 17E2  
                                   l8401 1383                                     l9017 1693  
                                   l8091 0D4B                                     l8083 0D32  
                                   l8155 0977                                     l8139 0DF9  
                                   l8235 1EAB                                     l8227 1E9F  
                                   l8219 1E93                                     l9027 108D  
                                   l8309 17C4                                     l8069 0CF1  
                                   l8181 09C2                                     l8173 09A7  
                                   l8341 15BB                                     l8261 1D30  
                                   l8405 1389                                     l9061 16F2  
                                   l8183 09CB                                     l8175 09B5  
                                   l8431 13BB                                     l8415 1399  
                                   l8423 13A5                                     l9231 1FF2  
                                   l8185 09CE                                     l8265 1D3B  
                                   l8409 138F                                     l9209 0957  
                                   l9313 14B3                                     l8283 1B13  
                                   l8435 13C1                                     l8419 139F  
                                   l8523 0A42                                     l9307 149C  
                                   l9235 1FF9                                     l9411 065E  
                                   l8189 09DC                                     l9317 14F3  
                                   l8439 13C7                                     l9183 08FF  
                                   l9431 06C7                                     l8447 1F21  
                                   l8383 12F2                                     l8711 0BDC  
                                   l9343 0534                                     l8289 1CA8  
                                   l9193 091D                                     l8633 1524  
                                   l9409 0654                                     l8385 12FF  
                                   l8721 0C01                                     l9345 053D  
                                   l8811 1DAF                                     l9179 08F2  
                                   l8635 1529                                     l9443 0703  
                                   l9435 06E6                                     l8483 1C98  
                                   l8379 12EC                                     l9507 0AEE  
                                   l9197 092A                                     l8629 1511  
                                   l9445 0709                                     l8485 1C9E  
                                   l8389 130B                                     l8573 0B50  
                                   l8725 0C0A                                     l8717 0BF8  
                                   l9631 0C81                                     l7951 13E1  
                                   l8831 1F98                                     l9711 0E99  
                                   l8751 1120                                     l8559 0B16  
                                   l9527 03AC                                     l9383 05E2  
                                   l9367 05A3                                     l8809 1DA4  
                                   l7961 1409                                     l7953 13EB  
                                   l9801 08DD                                     l8569 0B3A  
                                   l8729 0C13                                     l9465 0A83  
                                   l9553 03F7                                     l9537 03BF  
                                   l9529 03B3                                     l9377 05D1  
                                   l9643 0CB6                                     l7963 1411  
                                   l7955 13F0                                     l7947 13DA  
                                   l8499 1B6C                                     l9491 0AC4  
                                   l9563 042A                                     l9539 03C8  
                                   l9379 05D7                                     l9637 0CA9  
                                   l7981 1D0D                                     l8597 101A  
                                   l8941 1285                                     l9493 0AC8  
                                   l9469 0A8B                                     l8917 10E4  
                                   l9639 0CAF                                     l9823 1188  
                                   l8783 1457                                     l9479 0AA9  
                                   l8873 1EC3                                     l8785 146F  
                                   l7993 0F32                                     l8953 129B  
                                   l9577 046E                                     _CFGS 0CAE  
                                   l9587 04A1                                     l8797 1488  
                                   l7997 0F39                                     l9765 160E  
                                   l9861 0826                                     l9793 08B1  
                                   l8993 1641                                     l9865 0838  
                                   l8997 1651                                     _FREE 0CAC  
                                   _LATA 010C                                     _LATB 010D  
                        __end_of_INT_ISR 19CC                                     _LATC 010E  
                                   _PEIE 005E                                     _INTE 005C  
                                   _INTF 0059                                     u8140 156A  
                                   u7325 1422                                     u7255 13E6  
                                   u8145 1568                                     u7505 0F89  
                                   u8075 1CAF                                     u7275 13FF  
                                   u8085 1CB4                                     u7605 0D03  
                                   u7445 0F63                                     u7295 140C  
                                   u7615 0D13                                     u7535 0F9C  
                                   u7625 0D33                                     u7635 0D42  
                                   u7475 0F76                                     u7715 0DDE  
                                   u7645 0D4C                                     u7725 0DE4  
                                   u7825 09A8                                     u8490 1966  
                                   u7755 0DFA                                     u7765 0E00  
                                   u7685 0DA6                                     u8815 1D99  
                                   u7855 09C3                                     u7695 0DB6  
                                   u7795 097E                                     _LWLO 0CAD  
                                   _RFSW 00BB                                     _TMR0 0015  
                                   u9995 0C42                          __end_of_INT_Set 1906  
                                   _RSSI 00BC                                     _WREN 0CAA  
                                   _Buz1 014A                                     __WDT 00E8  
                                   _Temp 0079                                     _main 0802  
                           ___ftpack@arg 0020        __end_of_PowerFault_Initialization 18DE  
                    __end_of_DlyOff_Main 1789                          __end_of_RF_Main 18FB  
                           ___ftpack@exp 0023                                     fsr0h 0005  
                                   fsr1h 0007                                     fsr0l 0004  
                                   indf0 0000                                     indf1 0001  
                                   fsr1l 0006      __size_of_setDimmerLights_TriggerAdj 0010  
                                   btemp 007E                          __end_of_WDT_Set 1BB8  
                                   ltemp 007E            __size_of_setRF_Initialization 0007  
                       _setDimmerReClock 1C1C                                     start 0016  
                                   ttemp 007E                                     wtemp 007E  
               _setPowerFault_Exceptions 1F49                      DelayTimejudge@value 0022  
                          _RfPointSelect 1988               __end_of_setRFSW_AdjControl 1042  
                           ___ftmul@cntr 003C                             ___ftmul@sign 003D  
           __size_of_Temp_Initialization 0003              __size_of_setPowerFault_Main 0108  
                                  ??_ISR 0075                             ___fttol@exp1 0058  
                           ___fttol@lval 0054                         __end_of_LED_Main 19FC  
                  ?_setDimmerLights_Main 0071                          ?_setDelayOff_GO 0023  
                                  ?_main 0071                setControl_Lights_Table@rf 0067  
                        __end_of___ftadd 1000                          __end_of___ftdiv 0D6D  
                                  u10105 1626                                    u10125 1073  
                                  u10215 116F                                    u10145 0884  
                                  u10155 08C7                          __end_of___ftmul 0E21  
                                  u10095 15FD                          __end_of___fttol 09E5  
           setDimmerLights_AdjGo@command 0022                                    _IOCBF 0396  
                                  _IOCBN 0395                                    _IOCBP 0394  
                                  _IOCIE 005B                                    _IOCIF 0058  
                 _setDimmerLights_Switch 1A6D            __size_of_CC2500_FrequencyCabr 000C  
                                  _RFSW1 00EA                                    _RFSW2 00EB  
                                  _PORTA 000C                                    _PORTB 000D  
                                  _PORTC 000E                             ?_setLED_Main 0071  
                     setRF_Learn@command 0022                                    _TRISA 008C  
                                  _TRISB 008D                                    _TRISC 008E  
                                  _WPUB0 1068                                    _WPUB1 1069  
                                  _WPUB2 106A                                    _TMain 006F  
                          setRF_Learn@rf 0023                                    _MainT 086A  
                          __CFG_WRT$HALF 0000                                    _Temp1 013C  
                       __end_of_TMR0_ISR 0393             __size_of_CC2500_WriteCommand 0010  
                       __end_of_TMR0_Set 1A16                                    _getAD 1B72  
                          ___awtoft@sign 002D          __end_of_DimmerLights_Exceptions 1560  
          DimmerLights_Exceptions@status 002A                            ___ftpack@sign 0024  
            __size_of_CC2500_ClearRXFIFO 0004                            ??_Buzzer_Main 0020  
                       __end_of_WDT_Main 1C88              __size_of_CC2500_ClearTXFIFO 0004  
                    CC2500_RxData@loop_f 0025                           __pbitbssCOMMON 0380  
                         __CFG_BOREN$OFF 0000                       Flash_Memory_Read@i 0021  
                       ?_CC2500_ReadByte 0071                                    ltemp0 007E  
                                  ltemp1 0082                                    ltemp2 0086  
                                  ltemp3 0080           __size_of_setLED_Initialization 0011  
          __end_of_setLED_Initialization 1ACE                                    ttemp0 007E  
                                  ttemp1 0081                                    ttemp2 0084  
                                  ttemp3 0087                                    ttemp4 007F  
                           ?_setRF_Learn 0022                                    status 0003  
                                  wtemp0 007E                                    wtemp1 0080  
                                  wtemp2 0082                                    wtemp3 0084  
                                  wtemp4 0086                                    wtemp5 0088  
                                  wtemp6 007F                       _setRF_DimmerLights 1560  
            __size_of_Flash_Memory_Write 002F                   ??_MainT_Initialization 0020  
                      ?_CC2500_SIDLEMode 0071               __size_of_RF_Initialization 0004  
                         ?_RfPointSelect 0071                           setSw_Status@sw 0023  
       __size_of_DelayOff_Initialization 0008                setDimmerLights_Main@clear 0065  
                 ??_Flash_Memory_Erasing 0020                          _getPercentValue 1318  
                     ??_CC2500_SIDLEMode 0024                          __initialization 0018  
                       ?_CC2500_PowerRST 0071                        ??_Sw_DimmerOnFunc 0062  
                      ??_setPercentValue 0059                             __end_of_main 086A  
                    ?_setRF_DimmerLights 005D                         ?_CC2500_WriteREG 0022  
                              ??_ADC_Set 0020                  __end_of_setDimmerLights 0A6E  
                   _setSw_Initialization 193E                                   ??_main 0068  
                          ___fttol@sign1 0053                             ?_setLog_Code 0071  
                _setControl_Lights_Table 0B89                   ?_Buzzer_Initialization 0071  
                ??_DlyOff_Initialization 0022                  __end_of_PowerFault_Main 18E1  
                             _Receive_GO 0381                               _Receive_OK 0382  
                              ??_IOC_ISR 0071                   ?_setDimmerLights_ERROR 0071  
                              ??_IOC_Set 0020          __end_of_DimmerLightsPointSelect 1AE1  
                                 ?_MainT 0071                   ?_setDimmerLights_AdjRF 0071  
                              ??_INT_ISR 0075                   ?_setDimmerLights_AdjGo 0022  
               __size_of_setRFSW_Control 0090                         ??_setRFSW_Status 0023  
                              ??_INT_Set 0020                  ??_Switch_Initialization 0025  
                   __end_of_getTemp_Safe 1927                        i1RfPointSelect@rf 0072  
                   ??_setRF_DimmerLights 005E                                   ?_getAD 0020  
                            _DlyOff_Main 1717                                   _ADCON0 009D  
                                 _ADCON1 009E                                ??_RF_Main 0068  
                                 _ADRESH 009C                                   _ADRESL 009B  
                      ?_getPowerFault_AD 0071                                ??_WDT_Set 0020  
                         setRF_Enable@rf 0023                         __end_of___awtoft 1D24  
                                 _ANSELA 018C                                   _ANSELB 018D  
                                 _ANSELC 018E                         __end_of___ftpack 1432  
                                 _IOCBF2 1CB2                  _setDimmerLights_Trigger 1A7D  
                                 i1l1680 1C2A                                   i1l1675 0382  
                                 i1l7711 012F                                   i1l7703 010D  
                                 i1l7705 0113                                   i1l7803 02FA  
                                 i1l7715 0146                                   i1l7805 0300  
                                 i1l7813 032E                                   i1l7821 0362  
                                 i1l7725 0175                                   i1l7655 1D84  
                                 i1l7727 017B                                   i1l7719 015A  
                                 i1l7735 01A9                                   i1l7743 01DD  
                                 i1l7781 0292                                   i1l7757 022F  
                                 i1l7775 0279                                   i1l7783 0298  
                                 i1l7679 00AA                                   i1l7793 02CB  
                                 i1l7777 027F                                   i1l7697 00F4  
                                 i1l7699 00FA                                   i1l7789 02B4  
                                 i1l7797 02DF                                   _FVRCON 0117  
                                 _PMADRH 0192                                   _PMADRL 0191  
                                 _PMDATH 0194                                   _PMDATL 0193  
                                 _PMCON2 0196                       ??_getPowerFault_AD 0024  
                                 _OSCCON 0099                                   u707_25 0358  
                                 u708_25 0374                                   u671_25 008E  
                                 u690_25 0213                                   _TMR0IE 005D  
                                 _TMR0IF 005A                                   _IO_Set 1C03  
                                 u688_25 01D3                                   _WDTCON 0097  
                     DelayTime_1us@count 0020                               _VarProduct 01A0  
                  _Dimmer_Initialization 1912           __size_of_CC2500_PowerOnInitial 0015  
          __end_of_CC2500_PowerOnInitial 1B31                                   _Dimmer 00B8  
                                 _DlySw1 00CC                                   _DlySw2 00D1  
             __end_of_Mcu_Initialization 1C50                      __end_of_Buzzer_Main 0CC4  
                                 _Memory 006D                                   _Timer0 00EC  
     __end_of_setDimmerLights_TriggerAdj 1ABD               _setDimmerLights_TriggerAdj 1AAD  
          setDimmerLights_Switch@command 0022                                   ___wmul 1CA5  
                              ??___ftadd 0044             __size_of_DelayOffPointSelect 0014  
                              ??___ftdiv 0034                    setDimmerLights@lights 0026  
                              ??___ftmul 0034                                ??___fttol 004F  
           ?_Flash_Memory_Initialization 0071                          i1_RfPointSelect 1968  
            setDimmerLights_AdjRF@lights 0060                   ??_setDimmerLights_Main 0065  
                                 _r_data 00C1                                   _s_data 00C2  
                                 _setLED 1373                         _DimmerLightsIntr 00B9  
                  ?_setSw_Initialization 0071                    setDimmerLights@status 0024  
                                 _setBuz 1789                       __size_of_Temp_Main 0003  
       ??_setDimmerLights_Initialization 0022          ?_setDimmerLights_Initialization 0071  
                  ___ftmul@f3_as_product 0039             ??_getDimmerLights_StatusFlag 0020  
               Flash_Memory_Read@address 0022                        RfSWPointSelect@sw 0021  
                       ??_setRF_RxStatus 0023                    __end_of_SwPointSelect 1B1C  
                getPowerFault_AD@channel 0028                            ?_setRF_Enable 0022  
                         _setTemp_Enable 199E                          _RfSWPointSelect 1B46  
           __size_of_Flash_Memory_Modify 0065              __size_of_DimmerLights_Close 0018  
                __size_of_LedPointSelect 0022                      Flash_Memory_Write@i 0021  
           __size_of_Flash_Memory_Unlock 0009                               _TouchPower 18FB  
                      ?_Sw_DimmerAdjFunc 0071              __size_of_CC2500_InitPATable 001F  
                    CC2500_TxData@loop_e 0025                  __end_of_getPercentValue 1373  
       __end_of_CC2500_registers_address 182F     __end_of_setPowerFault_Initialization 1A9D  
  __size_of_setPowerFault_Initialization 0010             _setPowerFault_Initialization 1A8D  
                __end_of__initialization 004D              ??_PowerFault_Initialization 0021  
                        ??_RfPointSelect 0020              setDimmerLights_AdjGo@lights 0023  
                              ?_LED_Main 0071                               ___ftadd@f1 003E  
                             ___ftadd@f2 0041                       ??_Sw_DimmerAdjFunc 0024  
                    setSw_Enable@command 0022                               ___ftdiv@f1 0031  
                             ___ftdiv@f2 002E                               ___ftdiv@f3 0039  
                      ?_Sw_DimmerOffFunc 0071                               ___awtoft@c 0028  
           ?_DimmerLights_Initialization 0071                               ___ftmul@f1 002E  
                             ___ftmul@f2 0031                            __end_of_MainT 08E3  
                             ___fttol@f1 004B                           __pcstackCOMMON 0071  
                     ??_Sw_DimmerOffFunc 0062                             __pidataBANK3 1CE2  
                          __end_of_getAD 1B88                                ?_TMR0_ISR 0071  
                              ?_TMR0_Set 0071             __size_of_setDimmerLights_Adj 003D  
                     _LED_Initialization 19E4                ??_setControl_Lights_Table 0067  
       __size_of_DimmerLights_Exceptions 0065                         ??_DelayTimejudge 0020  
            ?_getDimmerLights_StatusFlag 0071            ??_Flash_Memory_Initialization 005D  
               __size_of_setRF_ReceiveGO 000C                         ?_setDimmerLights 0024  
                              ?_WDT_Main 0071                         ?_PowerFault_Main 0071  
               __end_of_setDimmerReClock 1C36                       __size_of_getRxData 0052  
                    ?_LED_Initialization 0071                   __end_of_setTemp_Enable 19A9  
                      ?_CC2500_WriteByte 0071                                  ??_MainT 002A  
                         ??_setRF_Enable 0023                           _DimmerLights11 006B  
                         _DimmerLights22 006C                     __size_of_setLED_Main 0040  
              ??_setDimmerLights_Trigger 0023                                  ??_getAD 0023  
                    _Temp_Initialization 18E1                       ??_CC2500_WriteByte 0020  
             ??_setPowerFault_Exceptions 002B             setDimmerLights_Switch@lights 0023  
                             __pbssBANK0 0068                               __pbssBANK1 00A0  
                             __pbssBANK2 0120                               __pbssBANK3 01C0  
                             __pbssBANK4 0220                              _Buzzer_Main 0C1C  
                      ??_setRFSW_Control 0062                        __end_of_Temp_Main 18E7  
                 ?_Dimmer_Initialization 0071                                  ?_IO_Set 0071  
                             ??_LED_Main 0025                  _DelayOff_Initialization 192E  
          ?_setPowerFault_Initialization 0071                               _getPF_Safe 194E  
                          ??_Switch_Main 0067                           DelayTime_1us@i 0022  
                         DelayTime_1us@j 0024                     ??_LED_Initialization 0025  
                           _DimmerLights 006A                        LedPointSelect@led 0021  
                __end_ofi1_RfPointSelect 1972                       __size_of_setINT_GO 0009  
                 __size_of_DelayOff_Main 0008                     __size_of_setRF_Learn 000E  
                            setBuz@count 0029                               __pmaintext 0802  
                    _CC2500_WriteCommand 1A5D                     ?_Temp_Initialization 0071  
       __size_of_DimmerLightsPointSelect 0013                         ??_setDelayOff_GO 0025  
          ??_DimmerLights_Initialization 0024                                  ?___wmul 0020  
                             ??_TMR0_ISR 0071                            ?_setTemp_Main 0071  
                             ??_TMR0_Set 0020                               __pintentry 0004  
                 ??_setSw_Initialization 0024                            ?_setSw_Enable 0071  
                     __size_of_setTxData 00C9                  ?_setDimmerLights_Switch 0022  
                   Sw_DimmerAdjFunc@Idle 0024                                  ?_setLED 0022  
                 __size_of_DelayTime_1us 0026                                  _ADC_Set 1919  
              _PowerFault_Initialization 18DB                                  ?_setBuz 0026  
                              ?___awtoft 0028                                ?___ftpack 0020  
                             _getTemp_AD 15CB                               ??_WDT_Main 0020  
           __end_of_setRF_Initialization 192E                    __size_of_getTemp_Safe 0007  
                          ?_setSw_Status 0022                       _setRFSW_AdjControl 1002  
                __end_of_RfSWPointSelect 1B5C                        Sw_DimmerOnFunc@sw 0063  
                                _IOC_ISR 1D69                          ?_setTemp_Enable 0071  
                                _IOC_Set 19FC                     __size_of_setLog_Code 0048  
                                _INT_ISR 19C0                                  _INT_Set 1900  
                   ?_CC2500_WriteCommand 0071                        _Flash_Memory_Main 114B  
                      _Flash_Memory_Read 1BEA                   __size_of_CC2500_RxData 0064  
                 __size_of_CC2500_TxData 0044                      ?_setRFSW_AdjControl 0071  
    setDimmerLights_TriggerERROR@command 0022                              setTxData@rf 0023  
                                _RF_Data 00A0                                  _RF_Main 18F7  
                     ?_Flash_Memory_Main 0071                       ?_Flash_Memory_Read 0071  
                                _WDT_Set 1BA0          __end_of_setControl_Lights_Table 0C1C  
                            ?_TouchPower 0071                          _Sw_DimmerOnFunc 1637  
                        _setPercentValue 1190                            setLog_Code@rf 002B  
                       ?_getPercentValue 0071                                  _Dimmer1 00E2  
           __end_of_CC2500_FrequencyCabr 19D8                          __size_of_IO_Set 0019  
                    ??_Flash_Memory_Main 0027                      ??_Flash_Memory_Read 0020  
                                _VarLED1 00DA                                  _VarLED2 00DE  
                      __end_of_getRxData 12C0               __end_of_setPowerFault_Main 071C  
               _CC2500_registers_address 1800                           RF_RxDisable@rf 0024  
                  ??_Temp_Initialization 0021          __end_of_setDimmerLights_Trigger 1A8D  
                                _Product 006E                     ??_setRFSW_AdjControl 0064  
                           _getTemp_Safe 1920                           ??_setTemp_Main 002D  
         __end_of_setDimmerLights_Switch 1A7D                                  ___ftadd 0F0A  
                         ??_setSw_Enable 0022                                  ___ftdiv 0CC4  
                        __size_of___wmul 001E                                  ___ftmul 0D6D  
                                ___fttol 095E                      __end_of_Switch_Main 194E  
                ??_Buzzer_Initialization 0020                 ??_setOverTemp_Exceptions 002B  
                             ??___awtoft 002B                               ??___ftpack 0025  
                        __size_of_setLED 005E                     setRFSW_AdjControl@sw 0066  
                ??_setDimmerLights_ERROR 0024                          __size_of_setBuz 0077  
                         ??_setSw_Status 0023                                  __ptext1 15CB  
                                __ptext2 1042                                  __ptext3 1B72  
                                __ptext4 1C6C                                  __ptext5 0002  
                                __ptext6 18E4                                  __ptext7 04F7  
                                __ptext8 10C5                                  __ptext9 194E  
                ??_setDimmerLights_AdjRF 005F                  ??_setDimmerLights_AdjGo 0023  
              __size_of_CC2500_SIDLEMode 0004                      Sw_DimmerOnFunc@Idle 0062  
                           __size_of_ISR 0012                __end_of_Flash_Memory_Main 1190  
              __end_of_Flash_Memory_Read 1C03                               _setRF_Main 0A6E  
                          _DelayOff_Main 1936                        _DimmerLights_Main 1993  
                      __end_of_setINT_GO 1968           __size_of_DlyOff_Initialization 000B  
                  ??_CC2500_WriteCommand 0022            __end_of_DlyOff_Initialization 1988  
                      ??_setRF_ReceiveGO 0074               __end_of_CC2500_ClearRXFIFO 18EB  
               ??_setTemp_Initialization 0020               __end_of_CC2500_ClearTXFIFO 18EF  
          DimmerLightsPointSelect@lights 0021                             ?_DlyOff_Main 0071  
                     ?_DimmerLights_Main 0071                           _LedPointSelect 1D24  
                    _DelayOffPointSelect 1AF4                                  clrloop0 190D  
         __size_of_Switch_Initialization 000D            __end_of_Switch_Initialization 1A23  
                   end_of_initialization 004D                ??_DelayOff_Initialization 0023  
                      _CC2500_InitSetREG 1DDB                            _DelayTime_1us 1D8E  
                      __end_of_setTxData 07E5               __end_of_Flash_Memory_Write 1EE4  
                                init_ram 1906                       ?_CC2500_InitSetREG 0071  
                    ??_DimmerLights_Main 0067                     Flash_Memory_Read@ret 0023  
                                initloop 1907                               _setSw_Main 0393  
                  CC2500_ReadByte@loop_b 0021                        _CC2500_ReadStatus 07E5  
                            ?_getPF_Safe 0071                     Flash_Memory_Modify@i 0026  
                  _setLED_Initialization 1ABD                            _CC2500_Enable 0380  
                       ?i1_RfPointSelect 0071                       ?_CC2500_ReadStatus 0071  
                       setRFSW_Status@sw 0023            __size_of_MainT_Initialization 0013  
               __size_of_CC2500_ReadByte 001D                            _CC2500_RxData 1432  
                          _CC2500_TxData 1107                      ??_CC2500_InitSetREG 0025  
                   __end_of_setRF_Enable 1E2F           ??_setPowerFault_Initialization 0020  
            ?_setDimmerLights_TriggerAdj 0022                __size_of_getPowerFault_AD 0041  
          __size_of_Flash_Memory_Erasing 000C                     ?_DelayOffPointSelect 0071  
                    _Flash_Memory_Modify 1496                  _DimmerLights_Exceptions 14FB  
                           __pstringtext 1800                      _Flash_Memory_Unlock 1956  
                    ??_CC2500_ReadStatus 0022                   setRF_Initialization@rf 0071  
       getDimmerLights_StatusFlag@Status 0021                  CC2500_InitSetREG@loop_c 0028  
                            ?_getTemp_AD 0071                      __size_of_TouchPower 0005  
               setLED_Initialization@led 0024                   setSw_Initialization@sw 0024  
              __end_of_DimmerLights_Main 199E                       _Mcu_Initialization 1C36  
               __size_of_CC2500_PowerRST 0030                           ?_DelayOff_Main 0071  
                       ?_RfSWPointSelect 0071                          _setSw_Main$4236 01D1  
                        _setSw_Main$4237 01D2                         __CFG_FOSC$INTOSC 0000  
                 __end_of_LedPointSelect 1D46                  __end_of_Sw_DimmerOnFunc 16A6  
                __end_of_setPercentValue 11D6                 __size_of_CC2500_WriteREG 0019  
              __end_of_CC2500_InitSetREG 1E05                      ?_Mcu_Initialization 0071  
       __end_of_setPowerFault_Exceptions 1F83                     ?_Flash_Memory_Modify 0071  
            __size_of_setRF_DimmerLights 006B                           ?_DelayTime_1us 0020  
                    _setDimmerLights_Adj 1F83                     ?_Flash_Memory_Unlock 0071  
              __end_of_CC2500_ReadStatus 0800                            ?_RF_RxDisable 0071  
                            ___ftdiv@exp 003C                           __end_of_IO_Set 1C1C  
                   _setRF_Initialization 1927                              _Switch_Main 1946  
                      __size_of_LED_Main 000C                           ?_CC2500_RxData 0071  
                         ?_CC2500_TxData 0071                  _DimmerLightsPointSelect 1ACE  
                            ___ftmul@exp 0038                    _CC2500_PowerOnInitial 1B1C  
                   ??_Mcu_Initialization 0021                    ??_DelayOffPointSelect 0020  
                          ?_WDT_Clearing 0071                     ?_setDimmerLights_Adj 0062  
              __size_of_Sw_DimmerAdjFunc 0042                     setRF_DimmerLights@on 005D  
                         __end_of___wmul 1CC3                             setRF_Main@rf 01D1  
                      __size_of_TMR0_ISR 0342          __size_of_setOverTemp_Exceptions 0042  
                      __size_of_TMR0_Set 000D            __size_of_setDimmerLights_Main 007B  
                         __end_of_setLED 13D1                           __end_of_setBuz 1800  
        _getDimmerLights_StatusFlag$1650 0022                     _CC2500_FrequencyCabr 19CC  
              __size_of_Sw_DimmerOffFunc 0071               __size_of_Flash_Memory_Main 0045  
             __size_of_Flash_Memory_Read 0019                              ?_setRF_Main 0071  
                        _setRFSW_Control 0AF9                        __size_of_WDT_Main 001C  
                    __size_of_getPF_Safe 0008                        ?_setDimmerReClock 0071  
                    start_initialization 0018                        _setRF_DimmerValue 1F14  
                        ?_LedPointSelect 0071               __end_of_DimmerLights_Close 1BA0  
                            __end_of_ISR 0016                    ??_Flash_Memory_Modify 0024  
     __size_of_PowerFault_Initialization 0003                       ??_setDimmerReClock 0071  
                     ?_setRF_DimmerValue 0071               __end_of_CC2500_InitPATable 1CE2  
        __size_of_setTemp_Initialization 000B                    ??_Flash_Memory_Unlock 0020  
                ??_Dimmer_Initialization 0020                     __end_of_setTemp_Main 0614  
                         ??_RF_RxDisable 0024                     __end_of_setSw_Enable 1C6C  
                        RfPointSelect@rf 0021                             ?_Buzzer_Main 0071  
                               ??_IO_Set 0020                                _VarErrLED 00D6  
                            ?_setSw_Main 0071                      ??_setRF_DimmerValue 0061  
                    __size_of_getTemp_AD 006C                   ?_setLED_Initialization 0071  
                   __end_of_setSw_Status 1A5D                       Sw_DimmerAdjFunc@sw 0025  
                  ?_setRF_Initialization 0071                                _VarMemory 0220  
                __size_of_setRFSW_Status 000F                    __end_of_RfPointSelect 1993  
              __size_of_CC2500_WriteByte 0019                                _VarTimer0 00C3  
                              _Temp_Main 18E4                ??_DimmerLights_Exceptions 002A  
          setOverTemp_Exceptions@command 002C                           ??_WDT_Clearing 0020  
                              _Rx_Length 00BD                  setRF_DimmerValue@lights 0063  
                  ??_setDimmerLights_Adj 0063                                 ??___wmul 0024  
                 __size_of_SwPointSelect 0014                                _Tx_Length 00BF  
                            __pdataBANK3 01A0                                 ??_setLED 0023  
                       ??_setTemp_Enable 0020                                 ?_ADC_Set 0071  
                               ??_setBuz 0028                          ??_DelayOff_Main 0065  
                      ??_CC2500_ReadByte 0020                         _CC2500_SIDLEMode 18EF  
             __size_of_DimmerLights_Main 000B                __end_of_setRF_DimmerValue 1F49  
                  ?_CC2500_FrequencyCabr 0071                         setINT_GO@command 0020  
                          ??_setLED_Main 0022                        __size_of___awtoft 0022  
                      __size_of___ftpack 0061                                 ?_IOC_ISR 0071  
                        _setRF_Main$3911 01D2                              __pbssCOMMON 0076  
                               ?_IOC_Set 0071                                ___latbits 0003  
                  setTemp_Enable@command 0020                                 ?_INT_ISR 0071  
                    setRF_Enable@command 0022                         ?_Sw_DimmerOnFunc 0071  
                          __pcstackBANK0 0020                            __pcstackBANK1 00EE  
                          __pcstackBANK3 01D1                                 ?_INT_Set 0071  
                       ?_setPercentValue 0071                          ??_DelayTime_1us 0022  
             __size_of_CC2500_InitSetREG 002A                 __size_of_setDimmerLights 0089  
                          DlyOff_Main@sw 0064                        ??_CC2500_PowerRST 0026  
                               ?_RF_Main 0071                                 ?_WDT_Set 0071  
                           ??_TouchPower 0020                 __size_of_PowerFault_Main 0003  
                   __size_of_DlyOff_Main 0072               __size_of_CC2500_ReadStatus 001B  
                 _setOverTemp_Exceptions 10C5                            ??_setRF_Learn 0023  
                      ??_CC2500_WriteREG 0023                            _DimmerLights1 0120  
                          _DimmerLights2 012E                    CC2500_WriteREG@w_addr 0024  
                  setDelayOff_GO@command 0023                ??_DimmerLightsPointSelect 0020  
                  __size_of_setRF_Enable 002A                          ??_CC2500_RxData 0024  
                __size_of_setRF_RxStatus 000E                          ??_CC2500_TxData 0024  
                              __pnvBANK0 006D                                __pnvBANK1 00EC  
            __size_of_LED_Initialization 000C                   ?_CC2500_PowerOnInitial 0071  
                             ?_Temp_Main 0071                      __size_of_setRF_Main 008B  
                  DelayOffPointSelect@sw 0021                               setBuz@time 0026  
                    setDelayOff_GO@value 0024                 ?_setControl_Lights_Table 0071  
                 _setTemp_Initialization 19A9                         _getPowerFault_AD 1042  
      __size_of_setPowerFault_Exceptions 003A      __end_of_Flash_Memory_Initialization 0F0A  
            _Flash_Memory_Initialization 0E21                ?_setPowerFault_Exceptions 0071  
                              __ptext100 13D1                                __ptext101 1A3F  
                              __ptext110 1AF4                                __ptext102 1B46  
                              __ptext111 1B1C                                __ptext103 1A7D  
                              __ptext120 18E7                                __ptext112 18EF  
                              __ptext104 1A6D                                __ptext121 1A5D  
                              __ptext113 1EE4                                __ptext105 1ACE  
                              __ptext130 19B4                                __ptext122 1BB8  
                              __ptext114 1DDB                                __ptext106 1789  
                              __ptext131 1968                                __ptext123 0C1C  
                              __ptext115 1CC3                                __ptext107 1CA5  
                              __ptext124 1972                                __ptext116 1BD1  
                              __ptext108 192E                                __ptext117 19CC  
                              __ptext109 197D                                 ?___ftadd 003E  
                              __ptext126 0051                                __ptext118 1D8E  
                              __ptext127 1D69                                __ptext119 18EB  
                              __ptext128 1C1C                                __ptext129 19C0  
                              _getRxData 126E                                 ?___ftdiv 002E  
                               ?___ftmul 002E                                 ?___fttol 004B  
                __end_of_setRFSW_Control 0B89                          _setRF_ReceiveGO 19B4  
          __size_of_setSw_Initialization 0008           __size_of_Buzzer_Initialization 000B  
          __end_of_Buzzer_Initialization 197D                         getPercentValue@i 005C  
                       setPercentValue@i 005A                            ??_setLog_Code 002A  
                     __end_of_TouchPower 1900                       _setPowerFault_Main 0614  
     setDimmerLights_TriggerERROR@lights 0023           __size_of_setDimmerLights_ERROR 0050  
               ?_setDimmerLights_Trigger 0022                          DelayTimejudge@i 0021  
                    __size_of_setSw_Main 0164            __end_of_setDimmerLights_ERROR 126E  
           CC2500_ReadStatus@status_addr 0023           __size_of_setDimmerLights_AdjRF 0023  
         __size_of_setDimmerLights_AdjGo 0010            __end_of_setDimmerLights_AdjRF 1D69  
          __end_of_setDimmerLights_AdjGo 1AAD                   CC2500_WriteByte@loop_a 0021  
                         __size_of_MainT 0079                                _r_address 00C0  
           __end_of_CC2500_patable_vaule 1866                         __CFG_WDTE$SWDTEN 0000  
                    ?_setPowerFault_Main 0071                           __size_of_getAD 0016  
                           _setRF_Enable 1E05                  __size_of_DelayTimejudge 002E  
                          _SwPointSelect 1B08                       Sw_DimmerOffFunc@sw 0064  
                              _setINT_GO 195F                      __end_of_setLED_Main 2000  
                 ??_setRF_Initialization 0020              __end_of_Temp_Initialization 18E4  
                      _CC2500_rfSettings 182F                           ___wmul@product 0024  
                               _LED_Main 19F0                             ??_getPF_Safe 0020  
                        SwPointSelect@sw 0021                                clear_ram0 190C  
               CC2500_InitPATable@loop_d 0027                                _setTxData 071C  
    __end_of_DimmerLights_Initialization 1B46              _DimmerLights_Initialization 1B31  
                     _CC2500_ClearRXFIFO 18E7                       _CC2500_ClearTXFIFO 18EB  
         setDimmerLights_Trigger@command 0022                 setRF_DimmerLights@lights 0061  
                               _GO_nDONE 04E9                      __end_of_setRF_Learn 1A3F  
                   ??_setPowerFault_Main 002D                 __size_of_getPercentValue 005B  
               setRF_DimmerLights@status 0060                   setRF_ReceiveGO@command 0073  
            __size_of_setRFSW_AdjControl 0040                       _Flash_Memory_Write 1EB5  
                             ?_getRxData 0071                                 _TMR0_ISR 0051  
                 CC2500_InitSetREG@temp1 0026                   CC2500_InitSetREG@temp2 0027  
                      setRF_ReceiveGO@rf 0074                                 _TMR0_Set 1A09  
                       _Sw_DimmerAdjFunc 1083                      ?_CC2500_ClearRXFIFO 0071  
                    ?_CC2500_ClearTXFIFO 0071        setDimmerLights_TriggerAdj@command 0022  
                               _RF_Count 00B5                     __end_of_RF_RxDisable 1DDB  
                           ??_getTemp_AD 0024              __end_of_CC2500_WriteCommand 1A6D  
                 ??_CC2500_FrequencyCabr 0026                                 _WDT_Main 1C6C  
                DlyOff_Initialization@sw 0022                         __size_of_ADC_Set 0007  
                      ___wmul@multiplier 0020               __size_of_setRF_DimmerValue 0035  
                    ?_Flash_Memory_Write 0071                         _Sw_DimmerOffFunc 16A6  
                  __size_of_setTemp_Main 011D             __end_of_MainT_Initialization 1AF4  
                __size_of_setDelayOff_GO 0058                    __size_of_setSw_Enable 001C  
                               _DelayOff 0069                             setSw_Main@sw 01D3  
                     __end_of_getPF_Safe 1956                         __size_of_IOC_ISR 0025  
                       __size_of_IOC_Set 000D             __end_of_Flash_Memory_Erasing 19E4  
                         ?_SwPointSelect 0071                              getAD@adcon0 0023  
                            getAD@adcon1 0020                         __size_of_INT_ISR 000C  
                         setLED_Main@led 0024                     __end_of_WDT_Clearing 0004  
                       __size_of_INT_Set 0006                      __end_of_setLog_Code 121E  
                  _DlyOff_Initialization 197D                    __size_of_setSw_Status 000F  
                             ?_setINT_GO 0071                     ??_CC2500_ClearRXFIFO 0024  
                   ??_CC2500_ClearTXFIFO 0024                __end_of_CC2500_rfSettings 185E  
                       __size_of_RF_Main 0004                         __size_of_WDT_Set 0018  
                  _Switch_Initialization 1A16                     ??_Flash_Memory_Write 0020  
                      ??_setDimmerLights 0025                           _setRFSW_Status 1A3F  
                   __size_of_Buzzer_Main 00A8                       __end_of_getTemp_AD 1637  
                             ?_setTxData 0071                             ?_Switch_Main 0071  
                       _CC2500_WriteByte 1BB8                                 _VarTMain 01C0  
           Flash_Memory_Initialization@i 005E                  __end_of_setRF_ReceiveGO 19C0  
                            ??_Temp_Main 0030                        ??_PowerFault_Main 002F  
                      setRFSW_Control@sw 0063                                setLED@led 0023  
                               _RxStatus 0383     __end_of_setDimmerLights_TriggerERROR 1E5A  
  __size_of_setDimmerLights_TriggerERROR 002B             _setDimmerLights_TriggerERROR 1E2F  
                               _TxStatus 0386                             _setTemp_Main 04F7  
                       __size_of___ftadd 00F6                         ?_setRFSW_Control 0071  
                       __size_of___ftdiv 00A9                             _setSw_Enable 1C50  
                       __size_of___ftmul 00B4                         __size_of___fttol 0087  
               __size_ofi1_RfPointSelect 000A                                 ___awtoft 1D02  
                       ??_LedPointSelect 0020                                 ___ftpack 13D1  
                           _setSw_Status 1A4E                        getTemp_AD@channel 0028  
                           ??_setRF_Main 00EF                     CC2500_WriteREG@value 0022  
                            _setLED_Main 1FC0                    setRFSW_Status@command 0022  
             __end_of_setRF_DimmerLights 15CB                 ?_DelayOff_Initialization 0071  
                       setDelayOff_GO@sw 0027                                 __ptext10 18E1  
                               __ptext11 19A9                                 __ptext20 1A16  
                               __ptext12 1946                                 __ptext21 193E  
                               __ptext13 0393                                 __ptext30 1E87  
                               __ptext22 18FB                                 __ptext14 1A31  
                               __ptext31 1002                                 __ptext23 18F7  
                               __ptext15 1637                                 __ptext40 1A23  
                               __ptext32 1F14                                 __ptext24 0A6E  
                               __ptext16 16A6                                 __ptext41 07E5  
                               __ptext33 1D46                                 __ptext25 126E  
                               __ptext17 1083                                 __ptext50 121E  
                               __ptext42 1C88                                 __ptext34 1318  
                               __ptext26 11D6                                 __ptext18 1AAD  
                               __ptext51 1920                                 __ptext43 18F3  
                               __ptext35 0D6D                                 __ptext27 0B89  
                               __ptext19 1A9D                                 __ptext60 1919  
                               __ptext52 18DB                                 __ptext44 1927  
                               __ptext36 0F0A                                 __ptext28 0AF9  
                               __ptext61 1AE1                                 __ptext53 1A8D  
                               __ptext45 18DE                                 __ptext37 1DB4  
                               __ptext29 12C0                                 __ptext70 1ABD  
                               __ptext62 086A                                 __ptext54 1C36  
                               __ptext46 0614                                 __ptext38 1107  
                               __ptext71 114B                                 __ptext63 199E  
                               __ptext55 1BA0                                 __ptext47 1F49  
                               __ptext39 1432                                 __ptext80 1F83  
                               __ptext72 1496                                 __ptext64 1C50  
                               __ptext56 1A09                                 __ptext48 14FB  
                               __ptext81 09E5                                 __ptext73 19D8  
                               __ptext65 1E05                                 __ptext57 1C03  
                               __ptext49 1E2F                                 __ptext90 1717  
                               __ptext82 1373                                 __ptext74 0E21  
                               __ptext66 195F                                 __ptext58 19FC  
                               __ptext91 071C                                 __ptext83 1D24  
                               __ptext75 1EB5                                 __ptext67 19F0  
                               __ptext59 1900                                 __ptext92 1988  
                               __ptext84 1B88                                 __ptext76 1956  
                               __ptext68 1FC0                                 __ptext93 1A4E  
                               __ptext85 1B5C                                 __ptext77 1BEA  
                               __ptext69 19E4                                 __ptext94 1B08  
                               __ptext86 1B31                                 __ptext78 1993  
                               __ptext95 1560                                 __ptext87 1E5A  
                               __ptext79 08E3                                 __ptext96 1190  
                               __ptext88 1912                                 __ptext97 095E  
                               __ptext89 1936                                 __ptext98 0CC4  
                               __ptext99 1D02                  ??_setLED_Initialization 0024  
               __size_of_RfSWPointSelect 0016           __size_of_Dimmer_Initialization 0007  
                 __end_of_setRFSW_Status 1A4E            __end_of_Dimmer_Initialization 1919  
           __end_of_setDimmerLights_Main 095E              setDimmerLights_ERROR@lights 0025  
                           ??_setSw_Main 0065                            setLED@command 0022  
                          __size_of_main 0068                              _setRF_Learn 1A31  
               __end_of_CC2500_SIDLEMode 18F3                           _setRF_RxStatus 1A23  
             setDimmerLights_Main@lights 0066              __end_of_DelayOffPointSelect 1B08  
             CC2500_WriteCommand@command 0023                       _DimmerLights_Close 1B88  
               ??_setDimmerLights_Switch 0023                __size_of_setDimmerReClock 001A  
                        _CC2500_ReadByte 1C88                       _CC2500_InitPATable 1CC3  
    __size_of_getDimmerLights_StatusFlag 0016            setDimmerLights_Trigger@lights 0023  
                     __end_of_setRF_Main 0AF9              __size_of_Mcu_Initialization 001A  
                   _CC2500_patable_vaule 185E                              ??_getRxData 0068  
                    ?_DimmerLights_Close 0071         setDimmerLights_TriggerAdj@lights 0023  
          ?_setDimmerLights_TriggerERROR 0022                      ?_CC2500_InitPATable 0071  
                        _CC2500_PowerRST 1EE4              __end_of_Flash_Memory_Modify 14FB  
                      ??_getPercentValue 0059                              _setLog_Code 11D6  
                  setRF_RxStatus@command 0022              __end_of_Flash_Memory_Unlock 195F  
                        ??_SwPointSelect 0020                          _CC2500_WriteREG 1BD1  
                     __end_of_setSw_Main 04F7                            _Transceive_GO 0384  
                          _Transceive_OK 0385                   ?_DlyOff_Initialization 0071  
                ?_setOverTemp_Exceptions 0071                           _DelayTimejudge 1E87  
                            pic14e$flags 007E                 __end_of_getPowerFault_AD 1083  
                   ??_DimmerLights_Close 0023                              ??_setINT_GO 0020  
                               intlevel1 0000                     ??_CC2500_InitPATable 0025  
                 ?_Switch_Initialization 0071                   __end_of_setRF_RxStatus 1A31  
                        ?_setRFSW_Status 0022                  ??_CC2500_PowerOnInitial 0029  
 __end_of_setDimmerLights_Initialization 1E87  __size_of_setDimmerLights_Initialization 002D  
         _setDimmerLights_Initialization 1E5A              __end_of_setDimmerLights_Adj 1FC0  
                ?_setTemp_Initialization 0071                              ??_setTxData 0022  
                       ?_setRF_ReceiveGO 0073                   CC2500_InitPATable@temp 0026  
                   _MainT_Initialization 1AE1                    __size_of_RF_RxDisable 0027  
                      _RF_Initialization 18F3                            ?_getTemp_Safe 0071  
                   _Flash_Memory_Erasing 19D8                       ?_RF_Initialization 0071  
                             _SPI0Buffer 00BE          __end_of_DelayOff_Initialization 1936  
                             _OPTION_REG 0095                    __size_of_WDT_Clearing 0002  
                  __end_of_DelayOff_Main 193E                      ??_RF_Initialization 0021  
                            getRxData@rf 00EE                           _setDelayOff_GO 12C0  
       __size_of_setControl_Lights_Table 0093                   __end_of_DelayTimejudge 1EB5  
         __end_of_setOverTemp_Exceptions 1107                   __size_of_RfPointSelect 000B  
                      ??i1_RfPointSelect 0071     __size_of_Flash_Memory_Initialization 00E9  
                          ??_DlyOff_Main 0062                    __end_of_DelayTime_1us 1DB4  
               __end_of_Sw_DimmerAdjFunc 10C5                  __end_of_CC2500_ReadByte 1CA5  
           __end_of_setSw_Initialization 1946                          ?_setRF_RxStatus 0022  
                   getPercentValue@value 005B                             _RF_RxDisable 1DB4  
             ?_PowerFault_Initialization 0071               __end_of_LED_Initialization 19F0  
       __size_of_setDimmerLights_Trigger 0010           __end_of_setTemp_Initialization 19B4  
               __size_of_Sw_DimmerOnFunc 006F                 ?_DimmerLights_Exceptions 0071  
               __size_of_setPercentValue 0046                     setPercentValue@value 0059  
              __end_of_RF_Initialization 18F7                 __end_of_Sw_DimmerOffFunc 1717  
        __size_of_setDimmerLights_Switch 0010                        ??_RfSWPointSelect 0020  
                  ?_MainT_Initialization 0071                         setRF_RxStatus@rf 0023  
                  __end_of_CC2500_RxData 1496                    __end_of_CC2500_TxData 114B  
                         ??_getTemp_Safe 0020                      setSw_Status@command 0022  
                __end_of_CC2500_PowerRST 1F14  
