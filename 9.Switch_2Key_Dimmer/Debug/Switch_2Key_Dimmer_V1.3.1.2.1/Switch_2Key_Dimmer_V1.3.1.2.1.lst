

Microchip Technology PIC LITE Macro Assembler V1.32 build 58300 
                                                                                               Fri Sep 26 17:17:08 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	16F1518
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK3,global,class=CODE,delta=2
     5                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1
    10                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    14                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    15                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    16                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    17                           	psect	clrtext,global,class=CODE,delta=2
    18                           	psect	inittext,global,class=CODE,delta=2
    19                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    20                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    21                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    22                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    23                           	psect	text1,local,class=CODE,merge=1,delta=2
    24                           	psect	text2,local,class=CODE,merge=1,delta=2
    25                           	psect	text3,local,class=CODE,merge=1,delta=2
    26                           	psect	text4,local,class=CODE,merge=1,delta=2
    27                           	psect	text5,local,class=CODE,merge=1,delta=2
    28                           	psect	text6,local,class=CODE,merge=1,delta=2
    29                           	psect	text7,local,class=CODE,merge=1,delta=2
    30                           	psect	text8,local,class=CODE,merge=1,delta=2
    31                           	psect	text9,local,class=CODE,merge=1,delta=2
    32                           	psect	text10,local,class=CODE,merge=1,delta=2
    33                           	psect	text11,local,class=CODE,merge=1,delta=2
    34                           	psect	text12,local,class=CODE,merge=1,delta=2
    35                           	psect	text13,local,class=CODE,merge=1,delta=2
    36                           	psect	text14,local,class=CODE,merge=1,delta=2
    37                           	psect	text15,local,class=CODE,merge=1,delta=2
    38                           	psect	text16,local,class=CODE,merge=1,delta=2
    39                           	psect	text17,local,class=CODE,merge=1,delta=2
    40                           	psect	text18,local,class=CODE,merge=1,delta=2
    41                           	psect	text19,local,class=CODE,merge=1,delta=2
    42                           	psect	text20,local,class=CODE,merge=1,delta=2
    43                           	psect	text21,local,class=CODE,merge=1,delta=2
    44                           	psect	text22,local,class=CODE,merge=1,delta=2
    45                           	psect	text23,local,class=CODE,merge=1,delta=2
    46                           	psect	text24,local,class=CODE,merge=1,delta=2
    47                           	psect	text25,local,class=CODE,merge=1,delta=2
    48                           	psect	text26,local,class=CODE,merge=1,delta=2
    49                           	psect	text27,local,class=CODE,merge=1,delta=2
    50                           	psect	text28,local,class=CODE,merge=1,delta=2
    51                           	psect	text29,local,class=CODE,merge=1,delta=2
    52                           	psect	text30,local,class=CODE,merge=1,delta=2
    53                           	psect	text31,local,class=CODE,merge=1,delta=2
    54                           	psect	text32,local,class=CODE,merge=1,delta=2
    55                           	psect	text33,local,class=CODE,merge=1,delta=2
    56                           	psect	text34,local,class=CODE,merge=1,delta=2
    57                           	psect	text35,local,class=CODE,merge=1,delta=2
    58                           	psect	text36,local,class=CODE,merge=1,delta=2
    59                           	psect	text37,local,class=CODE,merge=1,delta=2
    60                           	psect	text38,local,class=CODE,merge=1,delta=2
    61                           	psect	text39,local,class=CODE,merge=1,delta=2
    62                           	psect	text40,local,class=CODE,merge=1,delta=2
    63                           	psect	text41,local,class=CODE,merge=1,delta=2
    64                           	psect	text42,local,class=CODE,merge=1,delta=2
    65                           	psect	text43,local,class=CODE,merge=1,delta=2
    66                           	psect	text44,local,class=CODE,merge=1,delta=2
    67                           	psect	text45,local,class=CODE,merge=1,delta=2
    68                           	psect	text46,local,class=CODE,merge=1,delta=2
    69                           	psect	text47,local,class=CODE,merge=1,delta=2
    70                           	psect	text48,local,class=CODE,merge=1,delta=2
    71                           	psect	text49,local,class=CODE,merge=1,delta=2
    72                           	psect	text50,local,class=CODE,merge=1,delta=2
    73                           	psect	text51,local,class=CODE,merge=1,delta=2
    74                           	psect	text52,local,class=CODE,merge=1,delta=2
    75                           	psect	text53,local,class=CODE,merge=1,delta=2
    76                           	psect	text54,local,class=CODE,merge=1,delta=2
    77                           	psect	text55,local,class=CODE,merge=1,delta=2
    78                           	psect	text56,local,class=CODE,merge=1,delta=2
    79                           	psect	text57,local,class=CODE,merge=1,delta=2
    80                           	psect	text58,local,class=CODE,merge=1,delta=2
    81                           	psect	text59,local,class=CODE,merge=1,delta=2
    82                           	psect	text60,local,class=CODE,merge=1,delta=2
    83                           	psect	text61,local,class=CODE,merge=1,delta=2
    84                           	psect	text62,local,class=CODE,merge=1,delta=2
    85                           	psect	text63,local,class=CODE,merge=1,delta=2
    86                           	psect	text64,local,class=CODE,merge=1,delta=2
    87                           	psect	text65,local,class=CODE,merge=1,delta=2
    88                           	psect	text66,local,class=CODE,merge=1,delta=2
    89                           	psect	text67,local,class=CODE,merge=1,delta=2
    90                           	psect	text68,local,class=CODE,merge=1,delta=2
    91                           	psect	text69,local,class=CODE,merge=1,delta=2
    92                           	psect	text70,local,class=CODE,merge=1,delta=2
    93                           	psect	text71,local,class=CODE,merge=1,delta=2
    94                           	psect	text72,local,class=CODE,merge=1,delta=2
    95                           	psect	text73,local,class=CODE,merge=1,delta=2
    96                           	psect	text74,local,class=CODE,merge=1,delta=2
    97                           	psect	text75,local,class=CODE,merge=1,delta=2
    98                           	psect	text76,local,class=CODE,merge=1,delta=2
    99                           	psect	text77,local,class=CODE,merge=1,delta=2
   100                           	psect	text78,local,class=CODE,merge=1,delta=2
   101                           	psect	text79,local,class=CODE,merge=1,delta=2
   102                           	psect	text80,local,class=CODE,merge=1,delta=2
   103                           	psect	text81,local,class=CODE,merge=1,delta=2
   104                           	psect	text82,local,class=CODE,merge=1,delta=2
   105                           	psect	text83,local,class=CODE,merge=1,delta=2
   106                           	psect	text84,local,class=CODE,merge=1,delta=2
   107                           	psect	text85,local,class=CODE,merge=1,delta=2
   108                           	psect	text86,local,class=CODE,merge=1,delta=2
   109                           	psect	text87,local,class=CODE,merge=1,delta=2
   110                           	psect	text88,local,class=CODE,merge=1,delta=2
   111                           	psect	text89,local,class=CODE,merge=1,delta=2
   112                           	psect	text90,local,class=CODE,merge=1,delta=2
   113                           	psect	text91,local,class=CODE,merge=1,delta=2
   114                           	psect	text92,local,class=CODE,merge=1,delta=2
   115                           	psect	text93,local,class=CODE,merge=1,delta=2
   116                           	psect	text94,local,class=CODE,merge=1,delta=2
   117                           	psect	text95,local,class=CODE,merge=1,delta=2
   118                           	psect	text96,local,class=CODE,merge=1,delta=2
   119                           	psect	text97,local,class=CODE,merge=1,delta=2
   120                           	psect	text98,local,class=CODE,merge=1,delta=2
   121                           	psect	text99,local,class=CODE,merge=1,delta=2
   122                           	psect	text100,local,class=CODE,merge=1,delta=2
   123                           	psect	text101,local,class=CODE,merge=1,delta=2
   124                           	psect	text102,local,class=CODE,merge=1,delta=2
   125                           	psect	text103,local,class=CODE,merge=1,delta=2
   126                           	psect	text104,local,class=CODE,merge=1,delta=2
   127                           	psect	text105,local,class=CODE,merge=1,delta=2
   128                           	psect	text106,local,class=CODE,merge=1,delta=2
   129                           	psect	text107,local,class=CODE,merge=1,delta=2
   130                           	psect	text108,local,class=CODE,merge=1,delta=2
   131                           	psect	text109,local,class=CODE,merge=1,delta=2
   132                           	psect	text110,local,class=CODE,merge=1,delta=2
   133                           	psect	text111,local,class=CODE,merge=1,delta=2
   134                           	psect	text112,local,class=CODE,merge=1,delta=2
   135                           	psect	text113,local,class=CODE,merge=1,delta=2
   136                           	psect	text114,local,class=CODE,merge=1,delta=2
   137                           	psect	text115,local,class=CODE,merge=1,delta=2
   138                           	psect	text116,local,class=CODE,merge=1,delta=2
   139                           	psect	text117,local,class=CODE,merge=1,delta=2
   140                           	psect	text118,local,class=CODE,merge=1,delta=2
   141                           	psect	text119,local,class=CODE,merge=1,delta=2
   142                           	psect	text120,local,class=CODE,merge=1,delta=2
   143                           	psect	text121,local,class=CODE,merge=1,delta=2
   144                           	psect	text122,local,class=CODE,merge=1,delta=2
   145                           	psect	intentry,global,class=CODE,delta=2
   146                           	psect	text124,local,class=CODE,merge=1,delta=2
   147                           	psect	text125,local,class=CODE,merge=1,delta=2
   148                           	psect	text126,local,class=CODE,merge=1,delta=2
   149                           	psect	text127,local,class=CODE,merge=1,delta=2
   150                           	psect	text128,local,class=CODE,merge=1,delta=2
   151                           	psect	text129,local,class=CODE,merge=1,delta=2
   152                           	dabs	1,0x7E,2
   153  0000                     	;# 
   154  0001                     	;# 
   155  0002                     	;# 
   156  0003                     	;# 
   157  0004                     	;# 
   158  0005                     	;# 
   159  0006                     	;# 
   160  0007                     	;# 
   161  0008                     	;# 
   162  0009                     	;# 
   163  000A                     	;# 
   164  000B                     	;# 
   165  000C                     	;# 
   166  000D                     	;# 
   167  000E                     	;# 
   168  0010                     	;# 
   169  0011                     	;# 
   170  0012                     	;# 
   171  0015                     	;# 
   172  0016                     	;# 
   173  0016                     	;# 
   174  0017                     	;# 
   175  0018                     	;# 
   176  0019                     	;# 
   177  001A                     	;# 
   178  001B                     	;# 
   179  001C                     	;# 
   180  008C                     	;# 
   181  008D                     	;# 
   182  008E                     	;# 
   183  0090                     	;# 
   184  0091                     	;# 
   185  0092                     	;# 
   186  0095                     	;# 
   187  0096                     	;# 
   188  0097                     	;# 
   189  0099                     	;# 
   190  009A                     	;# 
   191  009B                     	;# 
   192  009B                     	;# 
   193  009C                     	;# 
   194  009D                     	;# 
   195  009E                     	;# 
   196  010C                     	;# 
   197  010D                     	;# 
   198  010E                     	;# 
   199  0116                     	;# 
   200  0117                     	;# 
   201  011D                     	;# 
   202  018C                     	;# 
   203  018D                     	;# 
   204  018E                     	;# 
   205  0191                     	;# 
   206  0191                     	;# 
   207  0192                     	;# 
   208  0193                     	;# 
   209  0193                     	;# 
   210  0194                     	;# 
   211  0195                     	;# 
   212  0196                     	;# 
   213  0197                     	;# 
   214  0199                     	;# 
   215  019A                     	;# 
   216  019B                     	;# 
   217  019B                     	;# 
   218  019B                     	;# 
   219  019B                     	;# 
   220  019C                     	;# 
   221  019C                     	;# 
   222  019D                     	;# 
   223  019E                     	;# 
   224  019F                     	;# 
   225  020D                     	;# 
   226  0210                     	;# 
   227  0211                     	;# 
   228  0211                     	;# 
   229  0212                     	;# 
   230  0212                     	;# 
   231  0213                     	;# 
   232  0213                     	;# 
   233  0214                     	;# 
   234  0214                     	;# 
   235  0215                     	;# 
   236  0215                     	;# 
   237  0215                     	;# 
   238  0216                     	;# 
   239  0216                     	;# 
   240  0217                     	;# 
   241  0217                     	;# 
   242  0291                     	;# 
   243  0291                     	;# 
   244  0292                     	;# 
   245  0293                     	;# 
   246  0298                     	;# 
   247  0298                     	;# 
   248  0299                     	;# 
   249  029A                     	;# 
   250  0394                     	;# 
   251  0395                     	;# 
   252  0396                     	;# 
   253  0FE4                     	;# 
   254  0FE5                     	;# 
   255  0FE6                     	;# 
   256  0FE7                     	;# 
   257  0FE8                     	;# 
   258  0FE9                     	;# 
   259  0FEA                     	;# 
   260  0FEB                     	;# 
   261  0FED                     	;# 
   262  0FEE                     	;# 
   263  0FEF                     	;# 
   264  0000                     	;# 
   265  0001                     	;# 
   266  0002                     	;# 
   267  0003                     	;# 
   268  0004                     	;# 
   269  0005                     	;# 
   270  0006                     	;# 
   271  0007                     	;# 
   272  0008                     	;# 
   273  0009                     	;# 
   274  000A                     	;# 
   275  000B                     	;# 
   276  000C                     	;# 
   277  000D                     	;# 
   278  000E                     	;# 
   279  0010                     	;# 
   280  0011                     	;# 
   281  0012                     	;# 
   282  0015                     	;# 
   283  0016                     	;# 
   284  0016                     	;# 
   285  0017                     	;# 
   286  0018                     	;# 
   287  0019                     	;# 
   288  001A                     	;# 
   289  001B                     	;# 
   290  001C                     	;# 
   291  008C                     	;# 
   292  008D                     	;# 
   293  008E                     	;# 
   294  0090                     	;# 
   295  0091                     	;# 
   296  0092                     	;# 
   297  0095                     	;# 
   298  0096                     	;# 
   299  0097                     	;# 
   300  0099                     	;# 
   301  009A                     	;# 
   302  009B                     	;# 
   303  009B                     	;# 
   304  009C                     	;# 
   305  009D                     	;# 
   306  009E                     	;# 
   307  010C                     	;# 
   308  010D                     	;# 
   309  010E                     	;# 
   310  0116                     	;# 
   311  0117                     	;# 
   312  011D                     	;# 
   313  018C                     	;# 
   314  018D                     	;# 
   315  018E                     	;# 
   316  0191                     	;# 
   317  0191                     	;# 
   318  0192                     	;# 
   319  0193                     	;# 
   320  0193                     	;# 
   321  0194                     	;# 
   322  0195                     	;# 
   323  0196                     	;# 
   324  0197                     	;# 
   325  0199                     	;# 
   326  019A                     	;# 
   327  019B                     	;# 
   328  019B                     	;# 
   329  019B                     	;# 
   330  019B                     	;# 
   331  019C                     	;# 
   332  019C                     	;# 
   333  019D                     	;# 
   334  019E                     	;# 
   335  019F                     	;# 
   336  020D                     	;# 
   337  0210                     	;# 
   338  0211                     	;# 
   339  0211                     	;# 
   340  0212                     	;# 
   341  0212                     	;# 
   342  0213                     	;# 
   343  0213                     	;# 
   344  0214                     	;# 
   345  0214                     	;# 
   346  0215                     	;# 
   347  0215                     	;# 
   348  0215                     	;# 
   349  0216                     	;# 
   350  0216                     	;# 
   351  0217                     	;# 
   352  0217                     	;# 
   353  0291                     	;# 
   354  0291                     	;# 
   355  0292                     	;# 
   356  0293                     	;# 
   357  0298                     	;# 
   358  0298                     	;# 
   359  0299                     	;# 
   360  029A                     	;# 
   361  0394                     	;# 
   362  0395                     	;# 
   363  0396                     	;# 
   364  0FE4                     	;# 
   365  0FE5                     	;# 
   366  0FE6                     	;# 
   367  0FE7                     	;# 
   368  0FE8                     	;# 
   369  0FE9                     	;# 
   370  0FEA                     	;# 
   371  0FEB                     	;# 
   372  0FED                     	;# 
   373  0FEE                     	;# 
   374  0FEF                     	;# 
   375  0000                     	;# 
   376  0001                     	;# 
   377  0002                     	;# 
   378  0003                     	;# 
   379  0004                     	;# 
   380  0005                     	;# 
   381  0006                     	;# 
   382  0007                     	;# 
   383  0008                     	;# 
   384  0009                     	;# 
   385  000A                     	;# 
   386  000B                     	;# 
   387  000C                     	;# 
   388  000D                     	;# 
   389  000E                     	;# 
   390  0010                     	;# 
   391  0011                     	;# 
   392  0012                     	;# 
   393  0015                     	;# 
   394  0016                     	;# 
   395  0016                     	;# 
   396  0017                     	;# 
   397  0018                     	;# 
   398  0019                     	;# 
   399  001A                     	;# 
   400  001B                     	;# 
   401  001C                     	;# 
   402  008C                     	;# 
   403  008D                     	;# 
   404  008E                     	;# 
   405  0090                     	;# 
   406  0091                     	;# 
   407  0092                     	;# 
   408  0095                     	;# 
   409  0096                     	;# 
   410  0097                     	;# 
   411  0099                     	;# 
   412  009A                     	;# 
   413  009B                     	;# 
   414  009B                     	;# 
   415  009C                     	;# 
   416  009D                     	;# 
   417  009E                     	;# 
   418  010C                     	;# 
   419  010D                     	;# 
   420  010E                     	;# 
   421  0116                     	;# 
   422  0117                     	;# 
   423  011D                     	;# 
   424  018C                     	;# 
   425  018D                     	;# 
   426  018E                     	;# 
   427  0191                     	;# 
   428  0191                     	;# 
   429  0192                     	;# 
   430  0193                     	;# 
   431  0193                     	;# 
   432  0194                     	;# 
   433  0195                     	;# 
   434  0196                     	;# 
   435  0197                     	;# 
   436  0199                     	;# 
   437  019A                     	;# 
   438  019B                     	;# 
   439  019B                     	;# 
   440  019B                     	;# 
   441  019B                     	;# 
   442  019C                     	;# 
   443  019C                     	;# 
   444  019D                     	;# 
   445  019E                     	;# 
   446  019F                     	;# 
   447  020D                     	;# 
   448  0210                     	;# 
   449  0211                     	;# 
   450  0211                     	;# 
   451  0212                     	;# 
   452  0212                     	;# 
   453  0213                     	;# 
   454  0213                     	;# 
   455  0214                     	;# 
   456  0214                     	;# 
   457  0215                     	;# 
   458  0215                     	;# 
   459  0215                     	;# 
   460  0216                     	;# 
   461  0216                     	;# 
   462  0217                     	;# 
   463  0217                     	;# 
   464  0291                     	;# 
   465  0291                     	;# 
   466  0292                     	;# 
   467  0293                     	;# 
   468  0298                     	;# 
   469  0298                     	;# 
   470  0299                     	;# 
   471  029A                     	;# 
   472  0394                     	;# 
   473  0395                     	;# 
   474  0396                     	;# 
   475  0FE4                     	;# 
   476  0FE5                     	;# 
   477  0FE6                     	;# 
   478  0FE7                     	;# 
   479  0FE8                     	;# 
   480  0FE9                     	;# 
   481  0FEA                     	;# 
   482  0FEB                     	;# 
   483  0FED                     	;# 
   484  0FEE                     	;# 
   485  0FEF                     	;# 
   486  0000                     	;# 
   487  0001                     	;# 
   488  0002                     	;# 
   489  0003                     	;# 
   490  0004                     	;# 
   491  0005                     	;# 
   492  0006                     	;# 
   493  0007                     	;# 
   494  0008                     	;# 
   495  0009                     	;# 
   496  000A                     	;# 
   497  000B                     	;# 
   498  000C                     	;# 
   499  000D                     	;# 
   500  000E                     	;# 
   501  0010                     	;# 
   502  0011                     	;# 
   503  0012                     	;# 
   504  0015                     	;# 
   505  0016                     	;# 
   506  0016                     	;# 
   507  0017                     	;# 
   508  0018                     	;# 
   509  0019                     	;# 
   510  001A                     	;# 
   511  001B                     	;# 
   512  001C                     	;# 
   513  008C                     	;# 
   514  008D                     	;# 
   515  008E                     	;# 
   516  0090                     	;# 
   517  0091                     	;# 
   518  0092                     	;# 
   519  0095                     	;# 
   520  0096                     	;# 
   521  0097                     	;# 
   522  0099                     	;# 
   523  009A                     	;# 
   524  009B                     	;# 
   525  009B                     	;# 
   526  009C                     	;# 
   527  009D                     	;# 
   528  009E                     	;# 
   529  010C                     	;# 
   530  010D                     	;# 
   531  010E                     	;# 
   532  0116                     	;# 
   533  0117                     	;# 
   534  011D                     	;# 
   535  018C                     	;# 
   536  018D                     	;# 
   537  018E                     	;# 
   538  0191                     	;# 
   539  0191                     	;# 
   540  0192                     	;# 
   541  0193                     	;# 
   542  0193                     	;# 
   543  0194                     	;# 
   544  0195                     	;# 
   545  0196                     	;# 
   546  0197                     	;# 
   547  0199                     	;# 
   548  019A                     	;# 
   549  019B                     	;# 
   550  019B                     	;# 
   551  019B                     	;# 
   552  019B                     	;# 
   553  019C                     	;# 
   554  019C                     	;# 
   555  019D                     	;# 
   556  019E                     	;# 
   557  019F                     	;# 
   558  020D                     	;# 
   559  0210                     	;# 
   560  0211                     	;# 
   561  0211                     	;# 
   562  0212                     	;# 
   563  0212                     	;# 
   564  0213                     	;# 
   565  0213                     	;# 
   566  0214                     	;# 
   567  0214                     	;# 
   568  0215                     	;# 
   569  0215                     	;# 
   570  0215                     	;# 
   571  0216                     	;# 
   572  0216                     	;# 
   573  0217                     	;# 
   574  0217                     	;# 
   575  0291                     	;# 
   576  0291                     	;# 
   577  0292                     	;# 
   578  0293                     	;# 
   579  0298                     	;# 
   580  0298                     	;# 
   581  0299                     	;# 
   582  029A                     	;# 
   583  0394                     	;# 
   584  0395                     	;# 
   585  0396                     	;# 
   586  0FE4                     	;# 
   587  0FE5                     	;# 
   588  0FE6                     	;# 
   589  0FE7                     	;# 
   590  0FE8                     	;# 
   591  0FE9                     	;# 
   592  0FEA                     	;# 
   593  0FEB                     	;# 
   594  0FED                     	;# 
   595  0FEE                     	;# 
   596  0FEF                     	;# 
   597  0000                     	;# 
   598  0001                     	;# 
   599  0002                     	;# 
   600  0003                     	;# 
   601  0004                     	;# 
   602  0005                     	;# 
   603  0006                     	;# 
   604  0007                     	;# 
   605  0008                     	;# 
   606  0009                     	;# 
   607  000A                     	;# 
   608  000B                     	;# 
   609  000C                     	;# 
   610  000D                     	;# 
   611  000E                     	;# 
   612  0010                     	;# 
   613  0011                     	;# 
   614  0012                     	;# 
   615  0015                     	;# 
   616  0016                     	;# 
   617  0016                     	;# 
   618  0017                     	;# 
   619  0018                     	;# 
   620  0019                     	;# 
   621  001A                     	;# 
   622  001B                     	;# 
   623  001C                     	;# 
   624  008C                     	;# 
   625  008D                     	;# 
   626  008E                     	;# 
   627  0090                     	;# 
   628  0091                     	;# 
   629  0092                     	;# 
   630  0095                     	;# 
   631  0096                     	;# 
   632  0097                     	;# 
   633  0099                     	;# 
   634  009A                     	;# 
   635  009B                     	;# 
   636  009B                     	;# 
   637  009C                     	;# 
   638  009D                     	;# 
   639  009E                     	;# 
   640  010C                     	;# 
   641  010D                     	;# 
   642  010E                     	;# 
   643  0116                     	;# 
   644  0117                     	;# 
   645  011D                     	;# 
   646  018C                     	;# 
   647  018D                     	;# 
   648  018E                     	;# 
   649  0191                     	;# 
   650  0191                     	;# 
   651  0192                     	;# 
   652  0193                     	;# 
   653  0193                     	;# 
   654  0194                     	;# 
   655  0195                     	;# 
   656  0196                     	;# 
   657  0197                     	;# 
   658  0199                     	;# 
   659  019A                     	;# 
   660  019B                     	;# 
   661  019B                     	;# 
   662  019B                     	;# 
   663  019B                     	;# 
   664  019C                     	;# 
   665  019C                     	;# 
   666  019D                     	;# 
   667  019E                     	;# 
   668  019F                     	;# 
   669  020D                     	;# 
   670  0210                     	;# 
   671  0211                     	;# 
   672  0211                     	;# 
   673  0212                     	;# 
   674  0212                     	;# 
   675  0213                     	;# 
   676  0213                     	;# 
   677  0214                     	;# 
   678  0214                     	;# 
   679  0215                     	;# 
   680  0215                     	;# 
   681  0215                     	;# 
   682  0216                     	;# 
   683  0216                     	;# 
   684  0217                     	;# 
   685  0217                     	;# 
   686  0291                     	;# 
   687  0291                     	;# 
   688  0292                     	;# 
   689  0293                     	;# 
   690  0298                     	;# 
   691  0298                     	;# 
   692  0299                     	;# 
   693  029A                     	;# 
   694  0394                     	;# 
   695  0395                     	;# 
   696  0396                     	;# 
   697  0FE4                     	;# 
   698  0FE5                     	;# 
   699  0FE6                     	;# 
   700  0FE7                     	;# 
   701  0FE8                     	;# 
   702  0FE9                     	;# 
   703  0FEA                     	;# 
   704  0FEB                     	;# 
   705  0FED                     	;# 
   706  0FEE                     	;# 
   707  0FEF                     	;# 
   708  0000                     	;# 
   709  0001                     	;# 
   710  0002                     	;# 
   711  0003                     	;# 
   712  0004                     	;# 
   713  0005                     	;# 
   714  0006                     	;# 
   715  0007                     	;# 
   716  0008                     	;# 
   717  0009                     	;# 
   718  000A                     	;# 
   719  000B                     	;# 
   720  000C                     	;# 
   721  000D                     	;# 
   722  000E                     	;# 
   723  0010                     	;# 
   724  0011                     	;# 
   725  0012                     	;# 
   726  0015                     	;# 
   727  0016                     	;# 
   728  0016                     	;# 
   729  0017                     	;# 
   730  0018                     	;# 
   731  0019                     	;# 
   732  001A                     	;# 
   733  001B                     	;# 
   734  001C                     	;# 
   735  008C                     	;# 
   736  008D                     	;# 
   737  008E                     	;# 
   738  0090                     	;# 
   739  0091                     	;# 
   740  0092                     	;# 
   741  0095                     	;# 
   742  0096                     	;# 
   743  0097                     	;# 
   744  0099                     	;# 
   745  009A                     	;# 
   746  009B                     	;# 
   747  009B                     	;# 
   748  009C                     	;# 
   749  009D                     	;# 
   750  009E                     	;# 
   751  010C                     	;# 
   752  010D                     	;# 
   753  010E                     	;# 
   754  0116                     	;# 
   755  0117                     	;# 
   756  011D                     	;# 
   757  018C                     	;# 
   758  018D                     	;# 
   759  018E                     	;# 
   760  0191                     	;# 
   761  0191                     	;# 
   762  0192                     	;# 
   763  0193                     	;# 
   764  0193                     	;# 
   765  0194                     	;# 
   766  0195                     	;# 
   767  0196                     	;# 
   768  0197                     	;# 
   769  0199                     	;# 
   770  019A                     	;# 
   771  019B                     	;# 
   772  019B                     	;# 
   773  019B                     	;# 
   774  019B                     	;# 
   775  019C                     	;# 
   776  019C                     	;# 
   777  019D                     	;# 
   778  019E                     	;# 
   779  019F                     	;# 
   780  020D                     	;# 
   781  0210                     	;# 
   782  0211                     	;# 
   783  0211                     	;# 
   784  0212                     	;# 
   785  0212                     	;# 
   786  0213                     	;# 
   787  0213                     	;# 
   788  0214                     	;# 
   789  0214                     	;# 
   790  0215                     	;# 
   791  0215                     	;# 
   792  0215                     	;# 
   793  0216                     	;# 
   794  0216                     	;# 
   795  0217                     	;# 
   796  0217                     	;# 
   797  0291                     	;# 
   798  0291                     	;# 
   799  0292                     	;# 
   800  0293                     	;# 
   801  0298                     	;# 
   802  0298                     	;# 
   803  0299                     	;# 
   804  029A                     	;# 
   805  0394                     	;# 
   806  0395                     	;# 
   807  0396                     	;# 
   808  0FE4                     	;# 
   809  0FE5                     	;# 
   810  0FE6                     	;# 
   811  0FE7                     	;# 
   812  0FE8                     	;# 
   813  0FE9                     	;# 
   814  0FEA                     	;# 
   815  0FEB                     	;# 
   816  0FED                     	;# 
   817  0FEE                     	;# 
   818  0FEF                     	;# 
   819  0000                     	;# 
   820  0001                     	;# 
   821  0002                     	;# 
   822  0003                     	;# 
   823  0004                     	;# 
   824  0005                     	;# 
   825  0006                     	;# 
   826  0007                     	;# 
   827  0008                     	;# 
   828  0009                     	;# 
   829  000A                     	;# 
   830  000B                     	;# 
   831  000C                     	;# 
   832  000D                     	;# 
   833  000E                     	;# 
   834  0010                     	;# 
   835  0011                     	;# 
   836  0012                     	;# 
   837  0015                     	;# 
   838  0016                     	;# 
   839  0016                     	;# 
   840  0017                     	;# 
   841  0018                     	;# 
   842  0019                     	;# 
   843  001A                     	;# 
   844  001B                     	;# 
   845  001C                     	;# 
   846  008C                     	;# 
   847  008D                     	;# 
   848  008E                     	;# 
   849  0090                     	;# 
   850  0091                     	;# 
   851  0092                     	;# 
   852  0095                     	;# 
   853  0096                     	;# 
   854  0097                     	;# 
   855  0099                     	;# 
   856  009A                     	;# 
   857  009B                     	;# 
   858  009B                     	;# 
   859  009C                     	;# 
   860  009D                     	;# 
   861  009E                     	;# 
   862  010C                     	;# 
   863  010D                     	;# 
   864  010E                     	;# 
   865  0116                     	;# 
   866  0117                     	;# 
   867  011D                     	;# 
   868  018C                     	;# 
   869  018D                     	;# 
   870  018E                     	;# 
   871  0191                     	;# 
   872  0191                     	;# 
   873  0192                     	;# 
   874  0193                     	;# 
   875  0193                     	;# 
   876  0194                     	;# 
   877  0195                     	;# 
   878  0196                     	;# 
   879  0197                     	;# 
   880  0199                     	;# 
   881  019A                     	;# 
   882  019B                     	;# 
   883  019B                     	;# 
   884  019B                     	;# 
   885  019B                     	;# 
   886  019C                     	;# 
   887  019C                     	;# 
   888  019D                     	;# 
   889  019E                     	;# 
   890  019F                     	;# 
   891  020D                     	;# 
   892  0210                     	;# 
   893  0211                     	;# 
   894  0211                     	;# 
   895  0212                     	;# 
   896  0212                     	;# 
   897  0213                     	;# 
   898  0213                     	;# 
   899  0214                     	;# 
   900  0214                     	;# 
   901  0215                     	;# 
   902  0215                     	;# 
   903  0215                     	;# 
   904  0216                     	;# 
   905  0216                     	;# 
   906  0217                     	;# 
   907  0217                     	;# 
   908  0291                     	;# 
   909  0291                     	;# 
   910  0292                     	;# 
   911  0293                     	;# 
   912  0298                     	;# 
   913  0298                     	;# 
   914  0299                     	;# 
   915  029A                     	;# 
   916  0394                     	;# 
   917  0395                     	;# 
   918  0396                     	;# 
   919  0FE4                     	;# 
   920  0FE5                     	;# 
   921  0FE6                     	;# 
   922  0FE7                     	;# 
   923  0FE8                     	;# 
   924  0FE9                     	;# 
   925  0FEA                     	;# 
   926  0FEB                     	;# 
   927  0FED                     	;# 
   928  0FEE                     	;# 
   929  0FEF                     	;# 
   930  0000                     	;# 
   931  0001                     	;# 
   932  0002                     	;# 
   933  0003                     	;# 
   934  0004                     	;# 
   935  0005                     	;# 
   936  0006                     	;# 
   937  0007                     	;# 
   938  0008                     	;# 
   939  0009                     	;# 
   940  000A                     	;# 
   941  000B                     	;# 
   942  000C                     	;# 
   943  000D                     	;# 
   944  000E                     	;# 
   945  0010                     	;# 
   946  0011                     	;# 
   947  0012                     	;# 
   948  0015                     	;# 
   949  0016                     	;# 
   950  0016                     	;# 
   951  0017                     	;# 
   952  0018                     	;# 
   953  0019                     	;# 
   954  001A                     	;# 
   955  001B                     	;# 
   956  001C                     	;# 
   957  008C                     	;# 
   958  008D                     	;# 
   959  008E                     	;# 
   960  0090                     	;# 
   961  0091                     	;# 
   962  0092                     	;# 
   963  0095                     	;# 
   964  0096                     	;# 
   965  0097                     	;# 
   966  0099                     	;# 
   967  009A                     	;# 
   968  009B                     	;# 
   969  009B                     	;# 
   970  009C                     	;# 
   971  009D                     	;# 
   972  009E                     	;# 
   973  010C                     	;# 
   974  010D                     	;# 
   975  010E                     	;# 
   976  0116                     	;# 
   977  0117                     	;# 
   978  011D                     	;# 
   979  018C                     	;# 
   980  018D                     	;# 
   981  018E                     	;# 
   982  0191                     	;# 
   983  0191                     	;# 
   984  0192                     	;# 
   985  0193                     	;# 
   986  0193                     	;# 
   987  0194                     	;# 
   988  0195                     	;# 
   989  0196                     	;# 
   990  0197                     	;# 
   991  0199                     	;# 
   992  019A                     	;# 
   993  019B                     	;# 
   994  019B                     	;# 
   995  019B                     	;# 
   996  019B                     	;# 
   997  019C                     	;# 
   998  019C                     	;# 
   999  019D                     	;# 
  1000  019E                     	;# 
  1001  019F                     	;# 
  1002  020D                     	;# 
  1003  0210                     	;# 
  1004  0211                     	;# 
  1005  0211                     	;# 
  1006  0212                     	;# 
  1007  0212                     	;# 
  1008  0213                     	;# 
  1009  0213                     	;# 
  1010  0214                     	;# 
  1011  0214                     	;# 
  1012  0215                     	;# 
  1013  0215                     	;# 
  1014  0215                     	;# 
  1015  0216                     	;# 
  1016  0216                     	;# 
  1017  0217                     	;# 
  1018  0217                     	;# 
  1019  0291                     	;# 
  1020  0291                     	;# 
  1021  0292                     	;# 
  1022  0293                     	;# 
  1023  0298                     	;# 
  1024  0298                     	;# 
  1025  0299                     	;# 
  1026  029A                     	;# 
  1027  0394                     	;# 
  1028  0395                     	;# 
  1029  0396                     	;# 
  1030  0FE4                     	;# 
  1031  0FE5                     	;# 
  1032  0FE6                     	;# 
  1033  0FE7                     	;# 
  1034  0FE8                     	;# 
  1035  0FE9                     	;# 
  1036  0FEA                     	;# 
  1037  0FEB                     	;# 
  1038  0FED                     	;# 
  1039  0FEE                     	;# 
  1040  0FEF                     	;# 
  1041  0000                     	;# 
  1042  0001                     	;# 
  1043  0002                     	;# 
  1044  0003                     	;# 
  1045  0004                     	;# 
  1046  0005                     	;# 
  1047  0006                     	;# 
  1048  0007                     	;# 
  1049  0008                     	;# 
  1050  0009                     	;# 
  1051  000A                     	;# 
  1052  000B                     	;# 
  1053  000C                     	;# 
  1054  000D                     	;# 
  1055  000E                     	;# 
  1056  0010                     	;# 
  1057  0011                     	;# 
  1058  0012                     	;# 
  1059  0015                     	;# 
  1060  0016                     	;# 
  1061  0016                     	;# 
  1062  0017                     	;# 
  1063  0018                     	;# 
  1064  0019                     	;# 
  1065  001A                     	;# 
  1066  001B                     	;# 
  1067  001C                     	;# 
  1068  008C                     	;# 
  1069  008D                     	;# 
  1070  008E                     	;# 
  1071  0090                     	;# 
  1072  0091                     	;# 
  1073  0092                     	;# 
  1074  0095                     	;# 
  1075  0096                     	;# 
  1076  0097                     	;# 
  1077  0099                     	;# 
  1078  009A                     	;# 
  1079  009B                     	;# 
  1080  009B                     	;# 
  1081  009C                     	;# 
  1082  009D                     	;# 
  1083  009E                     	;# 
  1084  010C                     	;# 
  1085  010D                     	;# 
  1086  010E                     	;# 
  1087  0116                     	;# 
  1088  0117                     	;# 
  1089  011D                     	;# 
  1090  018C                     	;# 
  1091  018D                     	;# 
  1092  018E                     	;# 
  1093  0191                     	;# 
  1094  0191                     	;# 
  1095  0192                     	;# 
  1096  0193                     	;# 
  1097  0193                     	;# 
  1098  0194                     	;# 
  1099  0195                     	;# 
  1100  0196                     	;# 
  1101  0197                     	;# 
  1102  0199                     	;# 
  1103  019A                     	;# 
  1104  019B                     	;# 
  1105  019B                     	;# 
  1106  019B                     	;# 
  1107  019B                     	;# 
  1108  019C                     	;# 
  1109  019C                     	;# 
  1110  019D                     	;# 
  1111  019E                     	;# 
  1112  019F                     	;# 
  1113  020D                     	;# 
  1114  0210                     	;# 
  1115  0211                     	;# 
  1116  0211                     	;# 
  1117  0212                     	;# 
  1118  0212                     	;# 
  1119  0213                     	;# 
  1120  0213                     	;# 
  1121  0214                     	;# 
  1122  0214                     	;# 
  1123  0215                     	;# 
  1124  0215                     	;# 
  1125  0215                     	;# 
  1126  0216                     	;# 
  1127  0216                     	;# 
  1128  0217                     	;# 
  1129  0217                     	;# 
  1130  0291                     	;# 
  1131  0291                     	;# 
  1132  0292                     	;# 
  1133  0293                     	;# 
  1134  0298                     	;# 
  1135  0298                     	;# 
  1136  0299                     	;# 
  1137  029A                     	;# 
  1138  0394                     	;# 
  1139  0395                     	;# 
  1140  0396                     	;# 
  1141  0FE4                     	;# 
  1142  0FE5                     	;# 
  1143  0FE6                     	;# 
  1144  0FE7                     	;# 
  1145  0FE8                     	;# 
  1146  0FE9                     	;# 
  1147  0FEA                     	;# 
  1148  0FEB                     	;# 
  1149  0FED                     	;# 
  1150  0FEE                     	;# 
  1151  0FEF                     	;# 
  1152  0000                     	;# 
  1153  0001                     	;# 
  1154  0002                     	;# 
  1155  0003                     	;# 
  1156  0004                     	;# 
  1157  0005                     	;# 
  1158  0006                     	;# 
  1159  0007                     	;# 
  1160  0008                     	;# 
  1161  0009                     	;# 
  1162  000A                     	;# 
  1163  000B                     	;# 
  1164  000C                     	;# 
  1165  000D                     	;# 
  1166  000E                     	;# 
  1167  0010                     	;# 
  1168  0011                     	;# 
  1169  0012                     	;# 
  1170  0015                     	;# 
  1171  0016                     	;# 
  1172  0016                     	;# 
  1173  0017                     	;# 
  1174  0018                     	;# 
  1175  0019                     	;# 
  1176  001A                     	;# 
  1177  001B                     	;# 
  1178  001C                     	;# 
  1179  008C                     	;# 
  1180  008D                     	;# 
  1181  008E                     	;# 
  1182  0090                     	;# 
  1183  0091                     	;# 
  1184  0092                     	;# 
  1185  0095                     	;# 
  1186  0096                     	;# 
  1187  0097                     	;# 
  1188  0099                     	;# 
  1189  009A                     	;# 
  1190  009B                     	;# 
  1191  009B                     	;# 
  1192  009C                     	;# 
  1193  009D                     	;# 
  1194  009E                     	;# 
  1195  010C                     	;# 
  1196  010D                     	;# 
  1197  010E                     	;# 
  1198  0116                     	;# 
  1199  0117                     	;# 
  1200  011D                     	;# 
  1201  018C                     	;# 
  1202  018D                     	;# 
  1203  018E                     	;# 
  1204  0191                     	;# 
  1205  0191                     	;# 
  1206  0192                     	;# 
  1207  0193                     	;# 
  1208  0193                     	;# 
  1209  0194                     	;# 
  1210  0195                     	;# 
  1211  0196                     	;# 
  1212  0197                     	;# 
  1213  0199                     	;# 
  1214  019A                     	;# 
  1215  019B                     	;# 
  1216  019B                     	;# 
  1217  019B                     	;# 
  1218  019B                     	;# 
  1219  019C                     	;# 
  1220  019C                     	;# 
  1221  019D                     	;# 
  1222  019E                     	;# 
  1223  019F                     	;# 
  1224  020D                     	;# 
  1225  0210                     	;# 
  1226  0211                     	;# 
  1227  0211                     	;# 
  1228  0212                     	;# 
  1229  0212                     	;# 
  1230  0213                     	;# 
  1231  0213                     	;# 
  1232  0214                     	;# 
  1233  0214                     	;# 
  1234  0215                     	;# 
  1235  0215                     	;# 
  1236  0215                     	;# 
  1237  0216                     	;# 
  1238  0216                     	;# 
  1239  0217                     	;# 
  1240  0217                     	;# 
  1241  0291                     	;# 
  1242  0291                     	;# 
  1243  0292                     	;# 
  1244  0293                     	;# 
  1245  0298                     	;# 
  1246  0298                     	;# 
  1247  0299                     	;# 
  1248  029A                     	;# 
  1249  0394                     	;# 
  1250  0395                     	;# 
  1251  0396                     	;# 
  1252  0FE4                     	;# 
  1253  0FE5                     	;# 
  1254  0FE6                     	;# 
  1255  0FE7                     	;# 
  1256  0FE8                     	;# 
  1257  0FE9                     	;# 
  1258  0FEA                     	;# 
  1259  0FEB                     	;# 
  1260  0FED                     	;# 
  1261  0FEE                     	;# 
  1262  0FEF                     	;# 
  1263  0000                     	;# 
  1264  0001                     	;# 
  1265  0002                     	;# 
  1266  0003                     	;# 
  1267  0004                     	;# 
  1268  0005                     	;# 
  1269  0006                     	;# 
  1270  0007                     	;# 
  1271  0008                     	;# 
  1272  0009                     	;# 
  1273  000A                     	;# 
  1274  000B                     	;# 
  1275  000C                     	;# 
  1276  000D                     	;# 
  1277  000E                     	;# 
  1278  0010                     	;# 
  1279  0011                     	;# 
  1280  0012                     	;# 
  1281  0015                     	;# 
  1282  0016                     	;# 
  1283  0016                     	;# 
  1284  0017                     	;# 
  1285  0018                     	;# 
  1286  0019                     	;# 
  1287  001A                     	;# 
  1288  001B                     	;# 
  1289  001C                     	;# 
  1290  008C                     	;# 
  1291  008D                     	;# 
  1292  008E                     	;# 
  1293  0090                     	;# 
  1294  0091                     	;# 
  1295  0092                     	;# 
  1296  0095                     	;# 
  1297  0096                     	;# 
  1298  0097                     	;# 
  1299  0099                     	;# 
  1300  009A                     	;# 
  1301  009B                     	;# 
  1302  009B                     	;# 
  1303  009C                     	;# 
  1304  009D                     	;# 
  1305  009E                     	;# 
  1306  010C                     	;# 
  1307  010D                     	;# 
  1308  010E                     	;# 
  1309  0116                     	;# 
  1310  0117                     	;# 
  1311  011D                     	;# 
  1312  018C                     	;# 
  1313  018D                     	;# 
  1314  018E                     	;# 
  1315  0191                     	;# 
  1316  0191                     	;# 
  1317  0192                     	;# 
  1318  0193                     	;# 
  1319  0193                     	;# 
  1320  0194                     	;# 
  1321  0195                     	;# 
  1322  0196                     	;# 
  1323  0197                     	;# 
  1324  0199                     	;# 
  1325  019A                     	;# 
  1326  019B                     	;# 
  1327  019B                     	;# 
  1328  019B                     	;# 
  1329  019B                     	;# 
  1330  019C                     	;# 
  1331  019C                     	;# 
  1332  019D                     	;# 
  1333  019E                     	;# 
  1334  019F                     	;# 
  1335  020D                     	;# 
  1336  0210                     	;# 
  1337  0211                     	;# 
  1338  0211                     	;# 
  1339  0212                     	;# 
  1340  0212                     	;# 
  1341  0213                     	;# 
  1342  0213                     	;# 
  1343  0214                     	;# 
  1344  0214                     	;# 
  1345  0215                     	;# 
  1346  0215                     	;# 
  1347  0215                     	;# 
  1348  0216                     	;# 
  1349  0216                     	;# 
  1350  0217                     	;# 
  1351  0217                     	;# 
  1352  0291                     	;# 
  1353  0291                     	;# 
  1354  0292                     	;# 
  1355  0293                     	;# 
  1356  0298                     	;# 
  1357  0298                     	;# 
  1358  0299                     	;# 
  1359  029A                     	;# 
  1360  0394                     	;# 
  1361  0395                     	;# 
  1362  0396                     	;# 
  1363  0FE4                     	;# 
  1364  0FE5                     	;# 
  1365  0FE6                     	;# 
  1366  0FE7                     	;# 
  1367  0FE8                     	;# 
  1368  0FE9                     	;# 
  1369  0FEA                     	;# 
  1370  0FEB                     	;# 
  1371  0FED                     	;# 
  1372  0FEE                     	;# 
  1373  0FEF                     	;# 
  1374  0000                     	;# 
  1375  0001                     	;# 
  1376  0002                     	;# 
  1377  0003                     	;# 
  1378  0004                     	;# 
  1379  0005                     	;# 
  1380  0006                     	;# 
  1381  0007                     	;# 
  1382  0008                     	;# 
  1383  0009                     	;# 
  1384  000A                     	;# 
  1385  000B                     	;# 
  1386  000C                     	;# 
  1387  000D                     	;# 
  1388  000E                     	;# 
  1389  0010                     	;# 
  1390  0011                     	;# 
  1391  0012                     	;# 
  1392  0015                     	;# 
  1393  0016                     	;# 
  1394  0016                     	;# 
  1395  0017                     	;# 
  1396  0018                     	;# 
  1397  0019                     	;# 
  1398  001A                     	;# 
  1399  001B                     	;# 
  1400  001C                     	;# 
  1401  008C                     	;# 
  1402  008D                     	;# 
  1403  008E                     	;# 
  1404  0090                     	;# 
  1405  0091                     	;# 
  1406  0092                     	;# 
  1407  0095                     	;# 
  1408  0096                     	;# 
  1409  0097                     	;# 
  1410  0099                     	;# 
  1411  009A                     	;# 
  1412  009B                     	;# 
  1413  009B                     	;# 
  1414  009C                     	;# 
  1415  009D                     	;# 
  1416  009E                     	;# 
  1417  010C                     	;# 
  1418  010D                     	;# 
  1419  010E                     	;# 
  1420  0116                     	;# 
  1421  0117                     	;# 
  1422  011D                     	;# 
  1423  018C                     	;# 
  1424  018D                     	;# 
  1425  018E                     	;# 
  1426  0191                     	;# 
  1427  0191                     	;# 
  1428  0192                     	;# 
  1429  0193                     	;# 
  1430  0193                     	;# 
  1431  0194                     	;# 
  1432  0195                     	;# 
  1433  0196                     	;# 
  1434  0197                     	;# 
  1435  0199                     	;# 
  1436  019A                     	;# 
  1437  019B                     	;# 
  1438  019B                     	;# 
  1439  019B                     	;# 
  1440  019B                     	;# 
  1441  019C                     	;# 
  1442  019C                     	;# 
  1443  019D                     	;# 
  1444  019E                     	;# 
  1445  019F                     	;# 
  1446  020D                     	;# 
  1447  0210                     	;# 
  1448  0211                     	;# 
  1449  0211                     	;# 
  1450  0212                     	;# 
  1451  0212                     	;# 
  1452  0213                     	;# 
  1453  0213                     	;# 
  1454  0214                     	;# 
  1455  0214                     	;# 
  1456  0215                     	;# 
  1457  0215                     	;# 
  1458  0215                     	;# 
  1459  0216                     	;# 
  1460  0216                     	;# 
  1461  0217                     	;# 
  1462  0217                     	;# 
  1463  0291                     	;# 
  1464  0291                     	;# 
  1465  0292                     	;# 
  1466  0293                     	;# 
  1467  0298                     	;# 
  1468  0298                     	;# 
  1469  0299                     	;# 
  1470  029A                     	;# 
  1471  0394                     	;# 
  1472  0395                     	;# 
  1473  0396                     	;# 
  1474  0FE4                     	;# 
  1475  0FE5                     	;# 
  1476  0FE6                     	;# 
  1477  0FE7                     	;# 
  1478  0FE8                     	;# 
  1479  0FE9                     	;# 
  1480  0FEA                     	;# 
  1481  0FEB                     	;# 
  1482  0FED                     	;# 
  1483  0FEE                     	;# 
  1484  0FEF                     	;# 
  1485  0000                     	;# 
  1486  0001                     	;# 
  1487  0002                     	;# 
  1488  0003                     	;# 
  1489  0004                     	;# 
  1490  0005                     	;# 
  1491  0006                     	;# 
  1492  0007                     	;# 
  1493  0008                     	;# 
  1494  0009                     	;# 
  1495  000A                     	;# 
  1496  000B                     	;# 
  1497  000C                     	;# 
  1498  000D                     	;# 
  1499  000E                     	;# 
  1500  0010                     	;# 
  1501  0011                     	;# 
  1502  0012                     	;# 
  1503  0015                     	;# 
  1504  0016                     	;# 
  1505  0016                     	;# 
  1506  0017                     	;# 
  1507  0018                     	;# 
  1508  0019                     	;# 
  1509  001A                     	;# 
  1510  001B                     	;# 
  1511  001C                     	;# 
  1512  008C                     	;# 
  1513  008D                     	;# 
  1514  008E                     	;# 
  1515  0090                     	;# 
  1516  0091                     	;# 
  1517  0092                     	;# 
  1518  0095                     	;# 
  1519  0096                     	;# 
  1520  0097                     	;# 
  1521  0099                     	;# 
  1522  009A                     	;# 
  1523  009B                     	;# 
  1524  009B                     	;# 
  1525  009C                     	;# 
  1526  009D                     	;# 
  1527  009E                     	;# 
  1528  010C                     	;# 
  1529  010D                     	;# 
  1530  010E                     	;# 
  1531  0116                     	;# 
  1532  0117                     	;# 
  1533  011D                     	;# 
  1534  018C                     	;# 
  1535  018D                     	;# 
  1536  018E                     	;# 
  1537  0191                     	;# 
  1538  0191                     	;# 
  1539  0192                     	;# 
  1540  0193                     	;# 
  1541  0193                     	;# 
  1542  0194                     	;# 
  1543  0195                     	;# 
  1544  0196                     	;# 
  1545  0197                     	;# 
  1546  0199                     	;# 
  1547  019A                     	;# 
  1548  019B                     	;# 
  1549  019B                     	;# 
  1550  019B                     	;# 
  1551  019B                     	;# 
  1552  019C                     	;# 
  1553  019C                     	;# 
  1554  019D                     	;# 
  1555  019E                     	;# 
  1556  019F                     	;# 
  1557  020D                     	;# 
  1558  0210                     	;# 
  1559  0211                     	;# 
  1560  0211                     	;# 
  1561  0212                     	;# 
  1562  0212                     	;# 
  1563  0213                     	;# 
  1564  0213                     	;# 
  1565  0214                     	;# 
  1566  0214                     	;# 
  1567  0215                     	;# 
  1568  0215                     	;# 
  1569  0215                     	;# 
  1570  0216                     	;# 
  1571  0216                     	;# 
  1572  0217                     	;# 
  1573  0217                     	;# 
  1574  0291                     	;# 
  1575  0291                     	;# 
  1576  0292                     	;# 
  1577  0293                     	;# 
  1578  0298                     	;# 
  1579  0298                     	;# 
  1580  0299                     	;# 
  1581  029A                     	;# 
  1582  0394                     	;# 
  1583  0395                     	;# 
  1584  0396                     	;# 
  1585  0FE4                     	;# 
  1586  0FE5                     	;# 
  1587  0FE6                     	;# 
  1588  0FE7                     	;# 
  1589  0FE8                     	;# 
  1590  0FE9                     	;# 
  1591  0FEA                     	;# 
  1592  0FEB                     	;# 
  1593  0FED                     	;# 
  1594  0FEE                     	;# 
  1595  0FEF                     	;# 
  1596  0000                     	;# 
  1597  0001                     	;# 
  1598  0002                     	;# 
  1599  0003                     	;# 
  1600  0004                     	;# 
  1601  0005                     	;# 
  1602  0006                     	;# 
  1603  0007                     	;# 
  1604  0008                     	;# 
  1605  0009                     	;# 
  1606  000A                     	;# 
  1607  000B                     	;# 
  1608  000C                     	;# 
  1609  000D                     	;# 
  1610  000E                     	;# 
  1611  0010                     	;# 
  1612  0011                     	;# 
  1613  0012                     	;# 
  1614  0015                     	;# 
  1615  0016                     	;# 
  1616  0016                     	;# 
  1617  0017                     	;# 
  1618  0018                     	;# 
  1619  0019                     	;# 
  1620  001A                     	;# 
  1621  001B                     	;# 
  1622  001C                     	;# 
  1623  008C                     	;# 
  1624  008D                     	;# 
  1625  008E                     	;# 
  1626  0090                     	;# 
  1627  0091                     	;# 
  1628  0092                     	;# 
  1629  0095                     	;# 
  1630  0096                     	;# 
  1631  0097                     	;# 
  1632  0099                     	;# 
  1633  009A                     	;# 
  1634  009B                     	;# 
  1635  009B                     	;# 
  1636  009C                     	;# 
  1637  009D                     	;# 
  1638  009E                     	;# 
  1639  010C                     	;# 
  1640  010D                     	;# 
  1641  010E                     	;# 
  1642  0116                     	;# 
  1643  0117                     	;# 
  1644  011D                     	;# 
  1645  018C                     	;# 
  1646  018D                     	;# 
  1647  018E                     	;# 
  1648  0191                     	;# 
  1649  0191                     	;# 
  1650  0192                     	;# 
  1651  0193                     	;# 
  1652  0193                     	;# 
  1653  0194                     	;# 
  1654  0195                     	;# 
  1655  0196                     	;# 
  1656  0197                     	;# 
  1657  0199                     	;# 
  1658  019A                     	;# 
  1659  019B                     	;# 
  1660  019B                     	;# 
  1661  019B                     	;# 
  1662  019B                     	;# 
  1663  019C                     	;# 
  1664  019C                     	;# 
  1665  019D                     	;# 
  1666  019E                     	;# 
  1667  019F                     	;# 
  1668  020D                     	;# 
  1669  0210                     	;# 
  1670  0211                     	;# 
  1671  0211                     	;# 
  1672  0212                     	;# 
  1673  0212                     	;# 
  1674  0213                     	;# 
  1675  0213                     	;# 
  1676  0214                     	;# 
  1677  0214                     	;# 
  1678  0215                     	;# 
  1679  0215                     	;# 
  1680  0215                     	;# 
  1681  0216                     	;# 
  1682  0216                     	;# 
  1683  0217                     	;# 
  1684  0217                     	;# 
  1685  0291                     	;# 
  1686  0291                     	;# 
  1687  0292                     	;# 
  1688  0293                     	;# 
  1689  0298                     	;# 
  1690  0298                     	;# 
  1691  0299                     	;# 
  1692  029A                     	;# 
  1693  0394                     	;# 
  1694  0395                     	;# 
  1695  0396                     	;# 
  1696  0FE4                     	;# 
  1697  0FE5                     	;# 
  1698  0FE6                     	;# 
  1699  0FE7                     	;# 
  1700  0FE8                     	;# 
  1701  0FE9                     	;# 
  1702  0FEA                     	;# 
  1703  0FEB                     	;# 
  1704  0FED                     	;# 
  1705  0FEE                     	;# 
  1706  0FEF                     	;# 
  1707  0000                     	;# 
  1708  0001                     	;# 
  1709  0002                     	;# 
  1710  0003                     	;# 
  1711  0004                     	;# 
  1712  0005                     	;# 
  1713  0006                     	;# 
  1714  0007                     	;# 
  1715  0008                     	;# 
  1716  0009                     	;# 
  1717  000A                     	;# 
  1718  000B                     	;# 
  1719  000C                     	;# 
  1720  000D                     	;# 
  1721  000E                     	;# 
  1722  0010                     	;# 
  1723  0011                     	;# 
  1724  0012                     	;# 
  1725  0015                     	;# 
  1726  0016                     	;# 
  1727  0016                     	;# 
  1728  0017                     	;# 
  1729  0018                     	;# 
  1730  0019                     	;# 
  1731  001A                     	;# 
  1732  001B                     	;# 
  1733  001C                     	;# 
  1734  008C                     	;# 
  1735  008D                     	;# 
  1736  008E                     	;# 
  1737  0090                     	;# 
  1738  0091                     	;# 
  1739  0092                     	;# 
  1740  0095                     	;# 
  1741  0096                     	;# 
  1742  0097                     	;# 
  1743  0099                     	;# 
  1744  009A                     	;# 
  1745  009B                     	;# 
  1746  009B                     	;# 
  1747  009C                     	;# 
  1748  009D                     	;# 
  1749  009E                     	;# 
  1750  010C                     	;# 
  1751  010D                     	;# 
  1752  010E                     	;# 
  1753  0116                     	;# 
  1754  0117                     	;# 
  1755  011D                     	;# 
  1756  018C                     	;# 
  1757  018D                     	;# 
  1758  018E                     	;# 
  1759  0191                     	;# 
  1760  0191                     	;# 
  1761  0192                     	;# 
  1762  0193                     	;# 
  1763  0193                     	;# 
  1764  0194                     	;# 
  1765  0195                     	;# 
  1766  0196                     	;# 
  1767  0197                     	;# 
  1768  0199                     	;# 
  1769  019A                     	;# 
  1770  019B                     	;# 
  1771  019B                     	;# 
  1772  019B                     	;# 
  1773  019B                     	;# 
  1774  019C                     	;# 
  1775  019C                     	;# 
  1776  019D                     	;# 
  1777  019E                     	;# 
  1778  019F                     	;# 
  1779  020D                     	;# 
  1780  0210                     	;# 
  1781  0211                     	;# 
  1782  0211                     	;# 
  1783  0212                     	;# 
  1784  0212                     	;# 
  1785  0213                     	;# 
  1786  0213                     	;# 
  1787  0214                     	;# 
  1788  0214                     	;# 
  1789  0215                     	;# 
  1790  0215                     	;# 
  1791  0215                     	;# 
  1792  0216                     	;# 
  1793  0216                     	;# 
  1794  0217                     	;# 
  1795  0217                     	;# 
  1796  0291                     	;# 
  1797  0291                     	;# 
  1798  0292                     	;# 
  1799  0293                     	;# 
  1800  0298                     	;# 
  1801  0298                     	;# 
  1802  0299                     	;# 
  1803  029A                     	;# 
  1804  0394                     	;# 
  1805  0395                     	;# 
  1806  0396                     	;# 
  1807  0FE4                     	;# 
  1808  0FE5                     	;# 
  1809  0FE6                     	;# 
  1810  0FE7                     	;# 
  1811  0FE8                     	;# 
  1812  0FE9                     	;# 
  1813  0FEA                     	;# 
  1814  0FEB                     	;# 
  1815  0FED                     	;# 
  1816  0FEE                     	;# 
  1817  0FEF                     	;# 
  1818  0000                     	;# 
  1819  0001                     	;# 
  1820  0002                     	;# 
  1821  0003                     	;# 
  1822  0004                     	;# 
  1823  0005                     	;# 
  1824  0006                     	;# 
  1825  0007                     	;# 
  1826  0008                     	;# 
  1827  0009                     	;# 
  1828  000A                     	;# 
  1829  000B                     	;# 
  1830  000C                     	;# 
  1831  000D                     	;# 
  1832  000E                     	;# 
  1833  0010                     	;# 
  1834  0011                     	;# 
  1835  0012                     	;# 
  1836  0015                     	;# 
  1837  0016                     	;# 
  1838  0016                     	;# 
  1839  0017                     	;# 
  1840  0018                     	;# 
  1841  0019                     	;# 
  1842  001A                     	;# 
  1843  001B                     	;# 
  1844  001C                     	;# 
  1845  008C                     	;# 
  1846  008D                     	;# 
  1847  008E                     	;# 
  1848  0090                     	;# 
  1849  0091                     	;# 
  1850  0092                     	;# 
  1851  0095                     	;# 
  1852  0096                     	;# 
  1853  0097                     	;# 
  1854  0099                     	;# 
  1855  009A                     	;# 
  1856  009B                     	;# 
  1857  009B                     	;# 
  1858  009C                     	;# 
  1859  009D                     	;# 
  1860  009E                     	;# 
  1861  010C                     	;# 
  1862  010D                     	;# 
  1863  010E                     	;# 
  1864  0116                     	;# 
  1865  0117                     	;# 
  1866  011D                     	;# 
  1867  018C                     	;# 
  1868  018D                     	;# 
  1869  018E                     	;# 
  1870  0191                     	;# 
  1871  0191                     	;# 
  1872  0192                     	;# 
  1873  0193                     	;# 
  1874  0193                     	;# 
  1875  0194                     	;# 
  1876  0195                     	;# 
  1877  0196                     	;# 
  1878  0197                     	;# 
  1879  0199                     	;# 
  1880  019A                     	;# 
  1881  019B                     	;# 
  1882  019B                     	;# 
  1883  019B                     	;# 
  1884  019B                     	;# 
  1885  019C                     	;# 
  1886  019C                     	;# 
  1887  019D                     	;# 
  1888  019E                     	;# 
  1889  019F                     	;# 
  1890  020D                     	;# 
  1891  0210                     	;# 
  1892  0211                     	;# 
  1893  0211                     	;# 
  1894  0212                     	;# 
  1895  0212                     	;# 
  1896  0213                     	;# 
  1897  0213                     	;# 
  1898  0214                     	;# 
  1899  0214                     	;# 
  1900  0215                     	;# 
  1901  0215                     	;# 
  1902  0215                     	;# 
  1903  0216                     	;# 
  1904  0216                     	;# 
  1905  0217                     	;# 
  1906  0217                     	;# 
  1907  0291                     	;# 
  1908  0291                     	;# 
  1909  0292                     	;# 
  1910  0293                     	;# 
  1911  0298                     	;# 
  1912  0298                     	;# 
  1913  0299                     	;# 
  1914  029A                     	;# 
  1915  0394                     	;# 
  1916  0395                     	;# 
  1917  0396                     	;# 
  1918  0FE4                     	;# 
  1919  0FE5                     	;# 
  1920  0FE6                     	;# 
  1921  0FE7                     	;# 
  1922  0FE8                     	;# 
  1923  0FE9                     	;# 
  1924  0FEA                     	;# 
  1925  0FEB                     	;# 
  1926  0FED                     	;# 
  1927  0FEE                     	;# 
  1928  0FEF                     	;# 
  1929                           
  1930                           	psect	idataBANK3
  1931  1CDC                     __pidataBANK3:	
  1932                           
  1933                           ;initializer for _VarProduct
  1934  1CDC  3463               	retlw	99
  1935  1CDD  3402               	retlw	2
  1936  1CDE  3400               	retlw	0
  1937  1CDF  3400               	retlw	0
  1938  1CE0  3400               	retlw	0
  1939  1CE1  3400               	retlw	0
  1940  1CE2  3400               	retlw	0
  1941  1CE3  3400               	retlw	0
  1942  1CE4  3400               	retlw	0
  1943  1CE5  3400               	retlw	0
  1944  1CE6  3400               	retlw	0
  1945  1CE7  3400               	retlw	0
  1946  1CE8  34FF               	retlw	255
  1947  1CE9  34FF               	retlw	255
  1948  1CEA  34FF               	retlw	255
  1949  1CEB  3400               	retlw	0
  1950  1CEC  3400               	retlw	0
  1951  1CED  3400               	retlw	0
  1952  1CEE  3400               	retlw	0
  1953  1CEF  3400               	retlw	0
  1954  1CF0  3400               	retlw	0
  1955  1CF1  3400               	retlw	0
  1956  1CF2  3400               	retlw	0
  1957  1CF3  3400               	retlw	0
  1958  1CF4  3400               	retlw	0
  1959  1CF5  3400               	retlw	0
  1960  1CF6  3400               	retlw	0
  1961  1CF7  3400               	retlw	0
  1962  1CF8  3400               	retlw	0
  1963  1CF9  3400               	retlw	0
  1964  1CFA  3400               	retlw	0
  1965  1CFB  3400               	retlw	0
  1966                           
  1967                           	psect	stringtext
  1968  1800                     __pstringtext:	
  1969  1800                     _CC2500_registers_address:	
  1970  1800  3403               	retlw	3
  1971  1801  3416               	retlw	22
  1972  1802  3417               	retlw	23
  1973  1803  341E               	retlw	30
  1974  1804  341F               	retlw	31
  1975  1805  3420               	retlw	32
  1976  1806  342A               	retlw	42
  1977  1807  342B               	retlw	43
  1978  1808  340B               	retlw	11
  1979  1809  340C               	retlw	12
  1980  180A  340D               	retlw	13
  1981  180B  340E               	retlw	14
  1982  180C  340F               	retlw	15
  1983  180D  3410               	retlw	16
  1984  180E  3411               	retlw	17
  1985  180F  3412               	retlw	18
  1986  1810  3413               	retlw	19
  1987  1811  3414               	retlw	20
  1988  1812  340A               	retlw	10
  1989  1813  3415               	retlw	21
  1990  1814  3421               	retlw	33
  1991  1815  3422               	retlw	34
  1992  1816  3418               	retlw	24
  1993  1817  3419               	retlw	25
  1994  1818  341A               	retlw	26
  1995  1819  341B               	retlw	27
  1996  181A  341C               	retlw	28
  1997  181B  341D               	retlw	29
  1998  181C  3423               	retlw	35
  1999  181D  3424               	retlw	36
  2000  181E  3425               	retlw	37
  2001  181F  3426               	retlw	38
  2002  1820  3429               	retlw	41
  2003  1821  342C               	retlw	44
  2004  1822  342D               	retlw	45
  2005  1823  342E               	retlw	46
  2006  1824  3400               	retlw	0
  2007  1825  3401               	retlw	1
  2008  1826  3402               	retlw	2
  2009  1827  3407               	retlw	7
  2010  1828  3408               	retlw	8
  2011  1829  3409               	retlw	9
  2012  182A  3406               	retlw	6
  2013  182B  3404               	retlw	4
  2014  182C  3405               	retlw	5
  2015  182D  3427               	retlw	39
  2016  182E  3428               	retlw	40
  2017  182F                     __end_of_CC2500_registers_address:	
  2018  182F                     _CC2500_rfSettings:	
  2019  182F  3407               	retlw	7
  2020  1830  3407               	retlw	7
  2021  1831  3430               	retlw	48
  2022  1832  3487               	retlw	135
  2023  1833  346B               	retlw	107
  2024  1834  34F8               	retlw	248
  2025  1835  347F               	retlw	127
  2026  1836  343F               	retlw	63
  2027  1837  3409               	retlw	9
  2028  1838  3400               	retlw	0
  2029  1839  345C               	retlw	92
  2030  183A  34A7               	retlw	167
  2031  183B  3462               	retlw	98
  2032  183C  3486               	retlw	134
  2033  183D  3483               	retlw	131
  2034  183E  3403               	retlw	3
  2035  183F  3422               	retlw	34
  2036  1840  34F8               	retlw	248
  2037  1841  3400               	retlw	0
  2038  1842  3444               	retlw	68
  2039  1843  34B6               	retlw	182
  2040  1844  3410               	retlw	16
  2041  1845  3418               	retlw	24
  2042  1846  341D               	retlw	29
  2043  1847  341C               	retlw	28
  2044  1848  34C7               	retlw	199
  2045  1849  3400               	retlw	0
  2046  184A  34B2               	retlw	178
  2047  184B  34EA               	retlw	234
  2048  184C  340A               	retlw	10
  2049  184D  3400               	retlw	0
  2050  184E  3411               	retlw	17
  2051  184F  3459               	retlw	89
  2052  1850  3488               	retlw	136
  2053  1851  3431               	retlw	49
  2054  1852  340B               	retlw	11
  2055  1853  342F               	retlw	47
  2056  1854  342E               	retlw	46
  2057  1855  3406               	retlw	6
  2058  1856  3404               	retlw	4
  2059  1857  3405               	retlw	5
  2060  1858  3400               	retlw	0
  2061  1859  3430               	retlw	48
  2062  185A  34D3               	retlw	211
  2063  185B  3491               	retlw	145
  2064  185C  3441               	retlw	65
  2065  185D  3400               	retlw	0
  2066  185E                     __end_of_CC2500_rfSettings:	
  2067  185E                     _CC2500_patable_vaule:	
  2068  185E  34FE               	retlw	254
  2069  185F  34FE               	retlw	254
  2070  1860  34FE               	retlw	254
  2071  1861  34FE               	retlw	254
  2072  1862  34FE               	retlw	254
  2073  1863  34FE               	retlw	254
  2074  1864  34FE               	retlw	254
  2075  1865  34FE               	retlw	254
  2076  1866                     __end_of_CC2500_patable_vaule:	
  2077                           
  2078                           	psect	nvBANK0
  2079  006D                     __pnvBANK0:	
  2080  006D                     _Memory:	
  2081  006D                     	ds	1
  2082  006E                     _Product:	
  2083  006E                     	ds	1
  2084  006F                     _TMain:	
  2085  006F                     	ds	1
  2086                           
  2087                           	psect	nvBANK1
  2088  00EE                     __pnvBANK1:	
  2089  00EE                     _Timer0:	
  2090  00EE                     	ds	1
  2091  000C                     _PORTA	set	12
  2092  000D                     _PORTB	set	13
  2093  000E                     _PORTC	set	14
  2094  0015                     _TMR0	set	21
  2095  005F                     _GIE	set	95
  2096  005C                     _INTE	set	92
  2097  0059                     _INTF	set	89
  2098  005B                     _IOCIE	set	91
  2099  0058                     _IOCIF	set	88
  2100  005E                     _PEIE	set	94
  2101  0060                     _RA0	set	96
  2102  0063                     _RA3	set	99
  2103  0064                     _RA4	set	100
  2104  0066                     _RA6	set	102
  2105  0067                     _RA7	set	103
  2106  0068                     _RB0	set	104
  2107  0069                     _RB1	set	105
  2108  006A                     _RB2	set	106
  2109  006B                     _RB3	set	107
  2110  006C                     _RB4	set	108
  2111  006D                     _RB5	set	109
  2112  0070                     _RC0	set	112
  2113  0071                     _RC1	set	113
  2114  0072                     _RC2	set	114
  2115  0074                     _RC4	set	116
  2116  0075                     _RC5	set	117
  2117  0077                     _RC7	set	119
  2118  005D                     _TMR0IE	set	93
  2119  005A                     _TMR0IF	set	90
  2120  009D                     _ADCON0	set	157
  2121  009E                     _ADCON1	set	158
  2122  009C                     _ADRESH	set	156
  2123  009B                     _ADRESL	set	155
  2124  0095                     _OPTION_REG	set	149
  2125  0099                     _OSCCON	set	153
  2126  008C                     _TRISA	set	140
  2127  008D                     _TRISB	set	141
  2128  008E                     _TRISC	set	142
  2129  04E9                     _GO_nDONE	set	1257
  2130  0117                     _FVRCON	set	279
  2131  010C                     _LATA	set	268
  2132  010D                     _LATB	set	269
  2133  010E                     _LATC	set	270
  2134  018C                     _ANSELA	set	396
  2135  018D                     _ANSELB	set	397
  2136  018E                     _ANSELC	set	398
  2137  0192                     _PMADRH	set	402
  2138  0191                     _PMADRL	set	401
  2139  0196                     _PMCON2	set	406
  2140  0194                     _PMDATH	set	404
  2141  0193                     _PMDATL	set	403
  2142  0CAE                     _CFGS	set	3246
  2143  0CAC                     _FREE	set	3244
  2144  0CAD                     _LWLO	set	3245
  2145  0CA8                     _RD	set	3240
  2146  0CA9                     _WR	set	3241
  2147  0CAA                     _WREN	set	3242
  2148  1068                     _WPUB0	set	4200
  2149  1069                     _WPUB1	set	4201
  2150  106A                     _WPUB2	set	4202
  2151  0396                     _IOCBF	set	918
  2152  0395                     _IOCBN	set	917
  2153  0394                     _IOCBP	set	916
  2154  1CB2                     _IOCBF2	set	7346
  2155                           
  2156                           ; #config settings
  2157  0000                     
  2158                           	psect	cinit
  2159  0018                     start_initialization:	
  2160  0018                     __initialization:	
  2161                           
  2162                           ; Clear objects allocated to BITCOMMON
  2163  0018  01F0               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
  2164                           
  2165                           ; Clear objects allocated to COMMON
  2166  0019  01F6               	clrf	__pbssCOMMON& (0+127)
  2167  001A  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
  2168  001B  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
  2169  001C  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
  2170                           
  2171                           ; Clear objects allocated to BANK0
  2172  001D  01E8               	clrf	__pbssBANK0& (0+127)
  2173  001E  01E9               	clrf	(__pbssBANK0+1)& (0+127)
  2174  001F  01EA               	clrf	(__pbssBANK0+2)& (0+127)
  2175  0020  01EB               	clrf	(__pbssBANK0+3)& (0+127)
  2176  0021  01EC               	clrf	(__pbssBANK0+4)& (0+127)
  2177                           
  2178                           ; Clear objects allocated to BANK1
  2179  0022  30A0               	movlw	low __pbssBANK1
  2180  0023  0084               	movwf	4
  2181  0024  3000               	movlw	high __pbssBANK1
  2182  0025  0085               	movwf	5
  2183  0026  304A               	movlw	74
  2184  0027  3199  2123  3180   	fcall	clear_ram0
  2185                           
  2186                           ; Clear objects allocated to BANK2
  2187  002A  3020               	movlw	low __pbssBANK2
  2188  002B  0084               	movwf	4
  2189  002C  3001               	movlw	high __pbssBANK2
  2190  002D  0085               	movwf	5
  2191  002E  3050               	movlw	80
  2192  002F  3199  2123  3180   	fcall	clear_ram0
  2193                           
  2194                           ; Clear objects allocated to BANK3
  2195  0032  30C0               	movlw	low __pbssBANK3
  2196  0033  0084               	movwf	4
  2197  0034  3001               	movlw	high __pbssBANK3
  2198  0035  0085               	movwf	5
  2199  0036  3010               	movlw	16
  2200  0037  3199  2123  3180   	fcall	clear_ram0
  2201                           
  2202                           ; Clear objects allocated to BANK4
  2203  003A  3020               	movlw	low __pbssBANK4
  2204  003B  0084               	movwf	4
  2205  003C  3002               	movlw	high __pbssBANK4
  2206  003D  0085               	movwf	5
  2207  003E  3025               	movlw	37
  2208  003F  3199  2123  3180   	fcall	clear_ram0
  2209                           
  2210                           ; Initialize objects allocated to BANK3
  2211  0042  30DC               	movlw	low __pidataBANK3
  2212  0043  0084               	movwf	4
  2213  0044  309C               	movlw	(high __pidataBANK3)| (0+128)
  2214  0045  0085               	movwf	5
  2215  0046  30A0               	movlw	low __pdataBANK3
  2216  0047  0086               	movwf	6
  2217  0048  3001               	movlw	high __pdataBANK3
  2218  0049  0087               	movwf	7
  2219  004A  3020               	movlw	32
  2220  004B  3199  211D         	fcall	init_ram
  2221  004D                     end_of_initialization:	
  2222                           ;End of C runtime variable initialization code
  2223                           
  2224  004D                     __end_of__initialization:	
  2225  004D  107E               	bcf	pic14e$flags,0	;clear compiler interrupt flag
  2226  004E  0020               	movlb	0
  2227  004F  3194  2CF8         	ljmp	_main	;jump to C main() function
  2228                           
  2229                           	psect	bitbssCOMMON
  2230  0380                     __pbitbssCOMMON:	
  2231  0380                     _CC2500_Enable:	
  2232  0380                     	ds	1
  2233  0381                     _Receive_GO:	
  2234  0381                     	ds	1
  2235  0382                     _Receive_OK:	
  2236  0382                     	ds	1
  2237  0383                     _RxStatus:	
  2238  0383                     	ds	1
  2239  0384                     _Transceive_GO:	
  2240  0384                     	ds	1
  2241  0385                     _Transceive_OK:	
  2242  0385                     	ds	1
  2243  0386                     _TxStatus:	
  2244  0386                     	ds	1
  2245                           
  2246                           	psect	bssCOMMON
  2247  0076                     __pbssCOMMON:	
  2248  0076                     _PF:	
  2249  0076                     	ds	1
  2250  0077                     _RF:	
  2251  0077                     	ds	1
  2252  0078                     _Sw:	
  2253  0078                     	ds	1
  2254  0079                     _Temp:	
  2255  0079                     	ds	1
  2256                           
  2257                           	psect	bssBANK0
  2258  0068                     __pbssBANK0:	
  2259  0068                     _Buz:	
  2260  0068                     	ds	1
  2261  0069                     _DelayOff:	
  2262  0069                     	ds	1
  2263  006A                     _DimmerLights:	
  2264  006A                     	ds	1
  2265  006B                     _DimmerLights11:	
  2266  006B                     	ds	1
  2267  006C                     _DimmerLights22:	
  2268  006C                     	ds	1
  2269                           
  2270                           	psect	bssBANK1
  2271  00A0                     __pbssBANK1:	
  2272  00A0                     _RF_Data:	
  2273  00A0                     	ds	21
  2274  00B5                     _RF_Count:	
  2275  00B5                     	ds	2
  2276  00B7                     _CRC:	
  2277  00B7                     	ds	1
  2278  00B8                     _Dimmer:	
  2279  00B8                     	ds	1
  2280  00B9                     _DimmerLightsIntr:	
  2281  00B9                     	ds	1
  2282  00BA                     _LED:	
  2283  00BA                     	ds	1
  2284  00BB                     _RFSW:	
  2285  00BB                     	ds	1
  2286  00BC                     _RSSI:	
  2287  00BC                     	ds	1
  2288  00BD                     _Rx_Length:	
  2289  00BD                     	ds	1
  2290  00BE                     _SPI0Buffer:	
  2291  00BE                     	ds	1
  2292  00BF                     _Tx_Length:	
  2293  00BF                     	ds	1
  2294  00C0                     _r_address:	
  2295  00C0                     	ds	1
  2296  00C1                     _r_data:	
  2297  00C1                     	ds	1
  2298  00C2                     _s_data:	
  2299  00C2                     	ds	1
  2300  00C3                     _VarTimer0:	
  2301  00C3                     	ds	9
  2302  00CC                     _DlySw1:	
  2303  00CC                     	ds	5
  2304  00D1                     _DlySw2:	
  2305  00D1                     	ds	5
  2306  00D6                     _VarErrLED:	
  2307  00D6                     	ds	4
  2308  00DA                     _VarLED1:	
  2309  00DA                     	ds	4
  2310  00DE                     _VarLED2:	
  2311  00DE                     	ds	4
  2312  00E2                     _Dimmer1:	
  2313  00E2                     	ds	3
  2314  00E5                     _RF1:	
  2315  00E5                     	ds	3
  2316  00E8                     _RFSW1:	
  2317  00E8                     	ds	1
  2318  00E9                     _RFSW2:	
  2319  00E9                     	ds	1
  2320                           
  2321                           	psect	bssBANK2
  2322  0120                     __pbssBANK2:	
  2323  0120                     _DimmerLights1:	
  2324  0120                     	ds	14
  2325  012E                     _DimmerLights2:	
  2326  012E                     	ds	14
  2327  013C                     _Temp1:	
  2328  013C                     	ds	14
  2329  014A                     _Buz1:	
  2330  014A                     	ds	12
  2331  0156                     _Sw1:	
  2332  0156                     	ds	9
  2333  015F                     _Sw2:	
  2334  015F                     	ds	9
  2335  0168                     _PF1:	
  2336  0168                     	ds	8
  2337                           
  2338                           	psect	bssBANK3
  2339  01C0                     __pbssBANK3:	
  2340  01C0                     _VarTMain:	
  2341  01C0                     	ds	16
  2342                           
  2343                           	psect	dataBANK3
  2344  01A0                     __pdataBANK3:	
  2345  01A0                     _VarProduct:	
  2346  01A0                     	ds	32
  2347                           
  2348                           	psect	bssBANK4
  2349  0220                     __pbssBANK4:	
  2350  0220                     _VarMemory:	
  2351  0220                     	ds	37
  2352                           
  2353                           	psect	clrtext
  2354  1923                     clear_ram0:	
  2355                           ;	Called with FSR0 containing the base address, and
  2356                           ;	WREG with the size to clear
  2357                           
  2358  1923  0064               	clrwdt	;clear the watchdog before getting into this loop
  2359  1924                     clrloop0:	
  2360  1924  0180               	clrf	0	;clear RAM location pointed to by FSR
  2361  1925  3101               	addfsr 0,1
  2362  1926  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2363  1927  2924               	goto	clrloop0	;have we reached the end yet?
  2364  1928  3400               	retlw	0	;all done for this memory range, return
  2365                           
  2366                           	psect	inittext
  2367  191D                     init_ram:	
  2368  191D  00FE               	movwf	126
  2369  191E                     initloop:	
  2370  191E  0012               	moviw fsr0++
  2371  191F  001E               	movwi fsr1++
  2372  1920  0BFE               	decfsz	126,f
  2373  1921  291E               	goto	initloop
  2374  1922  3400               	retlw	0
  2375                           
  2376                           	psect	cstackBANK1
  2377  00EA                     __pcstackBANK1:	
  2378  00EA                     getRxData@rf:	
  2379  00EA                     _setSw_Main$4153:	
  2380                           ; 1 bytes @ 0x0
  2381                           
  2382                           
  2383                           ; 1 bytes @ 0x0
  2384  00EA                     	ds	1
  2385  00EB                     ??_setRF_Main:	
  2386  00EB                     _setSw_Main$4154:	
  2387                           ; 0 bytes @ 0x1
  2388                           
  2389                           
  2390                           ; 1 bytes @ 0x1
  2391  00EB                     	ds	1
  2392  00EC                     setRF_Main@rf:	
  2393  00EC                     setSw_Main@sw:	
  2394                           ; 1 bytes @ 0x2
  2395                           
  2396                           
  2397                           ; 1 bytes @ 0x2
  2398  00EC                     	ds	1
  2399  00ED                     _setRF_Main$3833:	
  2400                           
  2401                           ; 1 bytes @ 0x3
  2402  00ED                     	ds	1
  2403                           
  2404                           	psect	cstackCOMMON
  2405  0071                     __pcstackCOMMON:	
  2406  0071                     ?_CC2500_WriteByte:	
  2407  0071                     ?_CC2500_WriteCommand:	
  2408                           ; 0 bytes @ 0x0
  2409                           
  2410  0071                     ?_CC2500_ReadStatus:	
  2411                           ; 0 bytes @ 0x0
  2412                           
  2413  0071                     ?_CC2500_ReadByte:	
  2414                           ; 0 bytes @ 0x0
  2415                           
  2416  0071                     ?_CC2500_PowerRST:	
  2417                           ; 0 bytes @ 0x0
  2418                           
  2419  0071                     ?_CC2500_InitSetREG:	
  2420                           ; 0 bytes @ 0x0
  2421                           
  2422  0071                     ?_CC2500_InitPATable:	
  2423                           ; 0 bytes @ 0x0
  2424                           
  2425  0071                     ?_CC2500_ClearTXFIFO:	
  2426                           ; 0 bytes @ 0x0
  2427                           
  2428  0071                     ?_CC2500_ClearRXFIFO:	
  2429                           ; 0 bytes @ 0x0
  2430                           
  2431  0071                     ?_CC2500_FrequencyCabr:	
  2432                           ; 0 bytes @ 0x0
  2433                           
  2434  0071                     ?_CC2500_SIDLEMode:	
  2435                           ; 0 bytes @ 0x0
  2436                           
  2437  0071                     ?_DlyOff_Initialization:	
  2438                           ; 0 bytes @ 0x0
  2439                           
  2440  0071                     ?_DlyOff_Main:	
  2441                           ; 0 bytes @ 0x0
  2442                           
  2443  0071                     ?_setTxData:	
  2444                           ; 0 bytes @ 0x0
  2445                           
  2446  0071                     ?_setDimmerLights_Initialization:	
  2447                           ; 0 bytes @ 0x0
  2448                           
  2449  0071                     ?_Dimmer_Initialization:	
  2450                           ; 0 bytes @ 0x0
  2451                           
  2452  0071                     ?_setDimmerLights_Main:	
  2453                           ; 0 bytes @ 0x0
  2454                           
  2455  0071                     ?_setDimmerLights_ERROR:	
  2456                           ; 0 bytes @ 0x0
  2457                           
  2458  0071                     ?_setLED_Initialization:	
  2459                           ; 0 bytes @ 0x0
  2460                           
  2461  0071                     ?_setLED_Main:	
  2462                           ; 0 bytes @ 0x0
  2463                           
  2464  0071                     ?_MainT_Initialization:	
  2465                           ; 0 bytes @ 0x0
  2466                           
  2467  0071                     ?_Mcu_Initialization:	
  2468                           ; 0 bytes @ 0x0
  2469                           
  2470  0071                     ?_Flash_Memory_Initialization:	
  2471                           ; 0 bytes @ 0x0
  2472                           
  2473  0071                     ?_Temp_Initialization:	
  2474                           ; 0 bytes @ 0x0
  2475                           
  2476  0071                     ?_PowerFault_Initialization:	
  2477                           ; 0 bytes @ 0x0
  2478                           
  2479  0071                     ?_Switch_Initialization:	
  2480                           ; 0 bytes @ 0x0
  2481                           
  2482  0071                     ?_RF_Initialization:	
  2483                           ; 0 bytes @ 0x0
  2484                           
  2485  0071                     ?_getTemp_AD:	
  2486                           ; 0 bytes @ 0x0
  2487                           
  2488  0071                     ?_getPowerFault_AD:	
  2489                           ; 0 bytes @ 0x0
  2490                           
  2491  0071                     ?_MainT:	
  2492                           ; 0 bytes @ 0x0
  2493                           
  2494  0071                     ?_MainT_ResetClock:	
  2495                           ; 0 bytes @ 0x0
  2496                           
  2497  0071                     ?_Flash_Memory_Main:	
  2498                           ; 0 bytes @ 0x0
  2499                           
  2500  0071                     ?_Temp_Main:	
  2501                           ; 0 bytes @ 0x0
  2502                           
  2503  0071                     ?_PowerFault_Main:	
  2504                           ; 0 bytes @ 0x0
  2505                           
  2506  0071                     ?_Switch_Main:	
  2507                           ; 0 bytes @ 0x0
  2508                           
  2509  0071                     ?_RF_Main:	
  2510                           ; 0 bytes @ 0x0
  2511                           
  2512  0071                     ?_setTemp_Enable:	
  2513                           ; 0 bytes @ 0x0
  2514                           
  2515  0071                     ?_setSw_Enable:	
  2516                           ; 0 bytes @ 0x0
  2517                           
  2518  0071                     ?_IO_Set:	
  2519                           ; 0 bytes @ 0x0
  2520                           
  2521  0071                     ?_TMR0_Set:	
  2522                           ; 0 bytes @ 0x0
  2523                           
  2524  0071                     ?_ADC_Set:	
  2525                           ; 0 bytes @ 0x0
  2526                           
  2527  0071                     ?_INT_Set:	
  2528                           ; 0 bytes @ 0x0
  2529                           
  2530  0071                     ?_IOC_Set:	
  2531                           ; 0 bytes @ 0x0
  2532                           
  2533  0071                     ?_IOC_ISR:	
  2534                           ; 0 bytes @ 0x0
  2535                           
  2536  0071                     ??_IOC_ISR:	
  2537                           ; 0 bytes @ 0x0
  2538                           
  2539  0071                     ?_TMR0_ISR:	
  2540                           ; 0 bytes @ 0x0
  2541                           
  2542  0071                     ??_TMR0_ISR:	
  2543                           ; 0 bytes @ 0x0
  2544                           
  2545  0071                     ?_INT_ISR:	
  2546                           ; 0 bytes @ 0x0
  2547                           
  2548  0071                     ?_Flash_Memory_Write:	
  2549                           ; 0 bytes @ 0x0
  2550                           
  2551  0071                     ?_Flash_Memory_Modify:	
  2552                           ; 0 bytes @ 0x0
  2553                           
  2554  0071                     ?_setTemp_Initialization:	
  2555                           ; 0 bytes @ 0x0
  2556                           
  2557  0071                     ?_setTemp_Main:	
  2558                           ; 0 bytes @ 0x0
  2559                           
  2560  0071                     ?_setOverTemp_Exceptions:	
  2561                           ; 0 bytes @ 0x0
  2562                           
  2563  0071                     ?_setPowerFault_Initialization:	
  2564                           ; 0 bytes @ 0x0
  2565                           
  2566  0071                     ?_setPowerFault_Main:	
  2567                           ; 0 bytes @ 0x0
  2568                           
  2569  0071                     ?_setPowerFault_Exceptions:	
  2570                           ; 0 bytes @ 0x0
  2571                           
  2572  0071                     ?_setRF_Initialization:	
  2573                           ; 0 bytes @ 0x0
  2574                           
  2575  0071                     ?_setRF_Main:	
  2576                           ; 0 bytes @ 0x0
  2577                           
  2578  0071                     ?_getRxData:	
  2579                           ; 0 bytes @ 0x0
  2580                           
  2581  0071                     ?_RF_RxDisable:	
  2582                           ; 0 bytes @ 0x0
  2583                           
  2584  0071                     ?_setLog_Code:	
  2585                           ; 0 bytes @ 0x0
  2586                           
  2587  0071                     ?_setControl_Lights_Table:	
  2588                           ; 0 bytes @ 0x0
  2589                           
  2590  0071                     ?_setRFSW_Control:	
  2591                           ; 0 bytes @ 0x0
  2592                           
  2593  0071                     ?_setRFSW_AdjControl:	
  2594                           ; 0 bytes @ 0x0
  2595                           
  2596  0071                     ?_setRF_DimmerValue:	
  2597                           ; 0 bytes @ 0x0
  2598                           
  2599  0071                     ?_setSw_Initialization:	
  2600                           ; 0 bytes @ 0x0
  2601                           
  2602  0071                     ?_setSw_Main:	
  2603                           ; 0 bytes @ 0x0
  2604                           
  2605  0071                     ?_Sw_DimmerOnFunc:	
  2606                           ; 0 bytes @ 0x0
  2607                           
  2608  0071                     ?_Sw_DimmerAdjFunc:	
  2609                           ; 0 bytes @ 0x0
  2610                           
  2611  0071                     ?_Sw_DimmerOffFunc:	
  2612                           ; 0 bytes @ 0x0
  2613                           
  2614  0071                     ?_Buzzer_Initialization:	
  2615                           ; 0 bytes @ 0x0
  2616                           
  2617  0071                     ?_Buzzer_Main:	
  2618                           ; 0 bytes @ 0x0
  2619                           
  2620  0071                     ?_CC2500_TxData:	
  2621                           ; 0 bytes @ 0x0
  2622                           
  2623  0071                     ?_CC2500_RxData:	
  2624                           ; 0 bytes @ 0x0
  2625                           
  2626  0071                     ?_CC2500_PowerOnInitial:	
  2627                           ; 0 bytes @ 0x0
  2628                           
  2629  0071                     ?_DelayOffPointSelect:	
  2630                           ; 0 bytes @ 0x0
  2631                           
  2632  0071                     ?_DelayOff_Initialization:	
  2633                           ; 0 bytes @ 0x0
  2634                           
  2635  0071                     ?_DelayOff_Main:	
  2636                           ; 0 bytes @ 0x0
  2637                           
  2638  0071                     ?_DimmerLightsPointSelect:	
  2639                           ; 0 bytes @ 0x0
  2640                           
  2641  0071                     ?_DimmerLights_Initialization:	
  2642                           ; 0 bytes @ 0x0
  2643                           
  2644  0071                     ?_DimmerLights_Close:	
  2645                           ; 0 bytes @ 0x0
  2646                           
  2647  0071                     ?_DimmerLights_Main:	
  2648                           ; 0 bytes @ 0x0
  2649                           
  2650  0071                     ?_DimmerLights_Exceptions:	
  2651                           ; 0 bytes @ 0x0
  2652                           
  2653  0071                     ?_setDimmerLights_AdjRF:	
  2654                           ; 0 bytes @ 0x0
  2655                           
  2656  0071                     ?_LedPointSelect:	
  2657                           ; 0 bytes @ 0x0
  2658                           
  2659  0071                     ?_LED_Initialization:	
  2660                           ; 0 bytes @ 0x0
  2661                           
  2662  0071                     ?_LED_Main:	
  2663                           ; 0 bytes @ 0x0
  2664                           
  2665  0071                     ?_main:	
  2666                           ; 0 bytes @ 0x0
  2667                           
  2668  0071                     ?_ISR:	
  2669                           ; 0 bytes @ 0x0
  2670                           
  2671  0071                     ?_setDimmerReClock:	
  2672                           ; 0 bytes @ 0x0
  2673                           
  2674  0071                     ??_setDimmerReClock:	
  2675                           ; 0 bytes @ 0x0
  2676                           
  2677  0071                     ?_setINT_GO:	
  2678                           ; 0 bytes @ 0x0
  2679                           
  2680  0071                     ?_Flash_Memory_Unlock:	
  2681                           ; 0 bytes @ 0x0
  2682                           
  2683  0071                     ?_Flash_Memory_Erasing:	
  2684                           ; 0 bytes @ 0x0
  2685                           
  2686  0071                     ?_RfPointSelect:	
  2687                           ; 0 bytes @ 0x0
  2688                           
  2689  0071                     ?_RfSWPointSelect:	
  2690                           ; 0 bytes @ 0x0
  2691                           
  2692  0071                     ?_TouchPower:	
  2693                           ; 0 bytes @ 0x0
  2694                           
  2695  0071                     ?_SwPointSelect:	
  2696                           ; 0 bytes @ 0x0
  2697                           
  2698  0071                     ?i1_RfPointSelect:	
  2699                           ; 0 bytes @ 0x0
  2700                           
  2701  0071                     ??i1_RfPointSelect:	
  2702                           ; 0 bytes @ 0x0
  2703                           
  2704  0071                     ?_DelayTimejudge:	
  2705                           ; 0 bytes @ 0x0
  2706                           
  2707  0071                     ?_getDimmerLights_StatusFlag:	
  2708                           ; 1 bytes @ 0x0
  2709                           
  2710  0071                     ?_getPercentValue:	
  2711                           ; 1 bytes @ 0x0
  2712                           
  2713  0071                     ?_Flash_Memory_Read:	
  2714                           ; 1 bytes @ 0x0
  2715                           
  2716  0071                     ?_getPF_Safe:	
  2717                           ; 1 bytes @ 0x0
  2718                           
  2719  0071                     ?_setPercentValue:	
  2720                           ; 1 bytes @ 0x0
  2721                           
  2722  0071                     ?_getTemp_Safe:	
  2723                           ; 1 bytes @ 0x0
  2724                           
  2725  0071                     setRF_Initialization@rf:	
  2726                           ; 1 bytes @ 0x0
  2727                           
  2728                           
  2729                           ; 1 bytes @ 0x0
  2730  0071                     	ds	1
  2731  0072                     i1RfPointSelect@rf:	
  2732                           
  2733                           ; 1 bytes @ 0x1
  2734  0072                     	ds	1
  2735  0073                     ?_setRF_ReceiveGO:	
  2736  0073                     setRF_ReceiveGO@command:	
  2737                           ; 0 bytes @ 0x2
  2738                           
  2739                           
  2740                           ; 1 bytes @ 0x2
  2741  0073                     	ds	1
  2742  0074                     ??_setRF_ReceiveGO:	
  2743  0074                     setRF_ReceiveGO@rf:	
  2744                           ; 0 bytes @ 0x3
  2745                           
  2746                           
  2747                           ; 1 bytes @ 0x3
  2748  0074                     	ds	1
  2749  0075                     ??_INT_ISR:	
  2750  0075                     ??_ISR:	
  2751                           ; 0 bytes @ 0x4
  2752                           
  2753                           
  2754                           ; 0 bytes @ 0x4
  2755  0075                     	ds	1
  2756                           
  2757                           	psect	cstackBANK0
  2758  0020                     __pcstackBANK0:	
  2759  0020                     ??_CC2500_WriteByte:	
  2760  0020                     ??_CC2500_ReadByte:	
  2761                           ; 0 bytes @ 0x0
  2762                           
  2763  0020                     ?_DelayTime_1us:	
  2764                           ; 0 bytes @ 0x0
  2765                           
  2766  0020                     ??_DelayTimejudge:	
  2767                           ; 0 bytes @ 0x0
  2768                           
  2769  0020                     ??_Dimmer_Initialization:	
  2770                           ; 0 bytes @ 0x0
  2771                           
  2772  0020                     ??_getDimmerLights_StatusFlag:	
  2773                           ; 0 bytes @ 0x0
  2774                           
  2775  0020                     ??_MainT_Initialization:	
  2776                           ; 0 bytes @ 0x0
  2777                           
  2778  0020                     ??_MainT_ResetClock:	
  2779                           ; 0 bytes @ 0x0
  2780                           
  2781  0020                     ??_setTemp_Enable:	
  2782                           ; 0 bytes @ 0x0
  2783                           
  2784  0020                     ??_IO_Set:	
  2785                           ; 0 bytes @ 0x0
  2786                           
  2787  0020                     ??_TMR0_Set:	
  2788                           ; 0 bytes @ 0x0
  2789                           
  2790  0020                     ??_ADC_Set:	
  2791                           ; 0 bytes @ 0x0
  2792                           
  2793  0020                     ??_INT_Set:	
  2794                           ; 0 bytes @ 0x0
  2795                           
  2796  0020                     ??_IOC_Set:	
  2797                           ; 0 bytes @ 0x0
  2798                           
  2799  0020                     ??_Flash_Memory_Read:	
  2800                           ; 0 bytes @ 0x0
  2801                           
  2802  0020                     ??_Flash_Memory_Write:	
  2803                           ; 0 bytes @ 0x0
  2804                           
  2805  0020                     ??_setTemp_Initialization:	
  2806                           ; 0 bytes @ 0x0
  2807                           
  2808  0020                     ??_getPF_Safe:	
  2809                           ; 0 bytes @ 0x0
  2810                           
  2811  0020                     ??_setPowerFault_Initialization:	
  2812                           ; 0 bytes @ 0x0
  2813                           
  2814  0020                     ??_setRF_Initialization:	
  2815                           ; 0 bytes @ 0x0
  2816                           
  2817  0020                     ??_Buzzer_Initialization:	
  2818                           ; 0 bytes @ 0x0
  2819                           
  2820  0020                     ??_Buzzer_Main:	
  2821                           ; 0 bytes @ 0x0
  2822                           
  2823  0020                     ??_DelayOffPointSelect:	
  2824                           ; 0 bytes @ 0x0
  2825                           
  2826  0020                     ??_DimmerLightsPointSelect:	
  2827                           ; 0 bytes @ 0x0
  2828                           
  2829  0020                     ??_LedPointSelect:	
  2830                           ; 0 bytes @ 0x0
  2831                           
  2832  0020                     ??_setINT_GO:	
  2833                           ; 0 bytes @ 0x0
  2834                           
  2835  0020                     ??_Flash_Memory_Unlock:	
  2836                           ; 0 bytes @ 0x0
  2837                           
  2838  0020                     ??_Flash_Memory_Erasing:	
  2839                           ; 0 bytes @ 0x0
  2840                           
  2841  0020                     ??_getTemp_Safe:	
  2842                           ; 0 bytes @ 0x0
  2843                           
  2844  0020                     ??_RfPointSelect:	
  2845                           ; 0 bytes @ 0x0
  2846                           
  2847  0020                     ??_RfSWPointSelect:	
  2848                           ; 0 bytes @ 0x0
  2849                           
  2850  0020                     ??_TouchPower:	
  2851                           ; 0 bytes @ 0x0
  2852                           
  2853  0020                     ??_SwPointSelect:	
  2854                           ; 0 bytes @ 0x0
  2855                           
  2856  0020                     ?_getAD:	
  2857                           ; 0 bytes @ 0x0
  2858                           
  2859  0020                     ?___wmul:	
  2860                           ; 2 bytes @ 0x0
  2861                           
  2862  0020                     ?___ftpack:	
  2863                           ; 2 bytes @ 0x0
  2864                           
  2865  0020                     setINT_GO@command:	
  2866                           ; 3 bytes @ 0x0
  2867                           
  2868  0020                     getAD@adcon1:	
  2869                           ; 1 bytes @ 0x0
  2870                           
  2871  0020                     setTemp_Enable@command:	
  2872                           ; 1 bytes @ 0x0
  2873                           
  2874  0020                     DelayTime_1us@count:	
  2875                           ; 1 bytes @ 0x0
  2876                           
  2877  0020                     ___wmul@multiplier:	
  2878                           ; 2 bytes @ 0x0
  2879                           
  2880  0020                     ___ftpack@arg:	
  2881                           ; 2 bytes @ 0x0
  2882                           
  2883                           
  2884                           ; 3 bytes @ 0x0
  2885  0020                     	ds	1
  2886  0021                     ??_Mcu_Initialization:	
  2887  0021                     ??_Temp_Initialization:	
  2888                           ; 0 bytes @ 0x1
  2889                           
  2890  0021                     ??_PowerFault_Initialization:	
  2891                           ; 0 bytes @ 0x1
  2892                           
  2893  0021                     ??_RF_Initialization:	
  2894                           ; 0 bytes @ 0x1
  2895                           
  2896  0021                     CC2500_WriteByte@loop_a:	
  2897                           ; 0 bytes @ 0x1
  2898                           
  2899  0021                     CC2500_ReadByte@loop_b:	
  2900                           ; 1 bytes @ 0x1
  2901                           
  2902  0021                     DelayOffPointSelect@sw:	
  2903                           ; 1 bytes @ 0x1
  2904                           
  2905  0021                     DelayTimejudge@i:	
  2906                           ; 1 bytes @ 0x1
  2907                           
  2908  0021                     DimmerLightsPointSelect@lights:	
  2909                           ; 1 bytes @ 0x1
  2910                           
  2911  0021                     getDimmerLights_StatusFlag@Status:	
  2912                           ; 1 bytes @ 0x1
  2913                           
  2914  0021                     LedPointSelect@led:	
  2915                           ; 1 bytes @ 0x1
  2916                           
  2917  0021                     MainT_ResetClock@i:	
  2918                           ; 1 bytes @ 0x1
  2919                           
  2920  0021                     Flash_Memory_Read@i:	
  2921                           ; 1 bytes @ 0x1
  2922                           
  2923  0021                     Flash_Memory_Write@i:	
  2924                           ; 1 bytes @ 0x1
  2925                           
  2926  0021                     RfPointSelect@rf:	
  2927                           ; 1 bytes @ 0x1
  2928                           
  2929  0021                     RfSWPointSelect@sw:	
  2930                           ; 1 bytes @ 0x1
  2931                           
  2932  0021                     SwPointSelect@sw:	
  2933                           ; 1 bytes @ 0x1
  2934                           
  2935                           
  2936                           ; 1 bytes @ 0x1
  2937  0021                     	ds	1
  2938  0022                     ??_CC2500_WriteCommand:	
  2939  0022                     ??_CC2500_ReadStatus:	
  2940                           ; 0 bytes @ 0x2
  2941                           
  2942  0022                     ?_setRF_RxStatus:	
  2943                           ; 0 bytes @ 0x2
  2944                           
  2945  0022                     ??_DelayTime_1us:	
  2946                           ; 0 bytes @ 0x2
  2947                           
  2948  0022                     ?_CC2500_WriteREG:	
  2949                           ; 0 bytes @ 0x2
  2950                           
  2951  0022                     ??_DlyOff_Initialization:	
  2952                           ; 0 bytes @ 0x2
  2953                           
  2954  0022                     ?_setSw_Status:	
  2955                           ; 0 bytes @ 0x2
  2956                           
  2957  0022                     ?_setRFSW_Status:	
  2958                           ; 0 bytes @ 0x2
  2959                           
  2960  0022                     ?_setDimmerLights_Trigger:	
  2961                           ; 0 bytes @ 0x2
  2962                           
  2963  0022                     ?_setDimmerLights_Switch:	
  2964                           ; 0 bytes @ 0x2
  2965                           
  2966  0022                     ??_setTxData:	
  2967                           ; 0 bytes @ 0x2
  2968                           
  2969  0022                     ??_setDimmerLights_Initialization:	
  2970                           ; 0 bytes @ 0x2
  2971                           
  2972  0022                     ?_setDimmerLights_TriggerERROR:	
  2973                           ; 0 bytes @ 0x2
  2974                           
  2975  0022                     ?_setLED:	
  2976                           ; 0 bytes @ 0x2
  2977                           
  2978  0022                     ??_setLED_Main:	
  2979                           ; 0 bytes @ 0x2
  2980                           
  2981  0022                     ??_setSw_Enable:	
  2982                           ; 0 bytes @ 0x2
  2983                           
  2984  0022                     ?_setRF_Enable:	
  2985                           ; 0 bytes @ 0x2
  2986                           
  2987  0022                     ?_setDimmerLights_AdjGo:	
  2988                           ; 0 bytes @ 0x2
  2989                           
  2990  0022                     ?_setDimmerLights_TriggerAdj:	
  2991                           ; 0 bytes @ 0x2
  2992                           
  2993  0022                     ?_setRF_Learn:	
  2994                           ; 0 bytes @ 0x2
  2995                           
  2996  0022                     CC2500_WriteREG@value:	
  2997                           ; 0 bytes @ 0x2
  2998                           
  2999  0022                     DlyOff_Initialization@sw:	
  3000                           ; 1 bytes @ 0x2
  3001                           
  3002  0022                     DelayTimejudge@value:	
  3003                           ; 1 bytes @ 0x2
  3004                           
  3005  0022                     _getDimmerLights_StatusFlag$1623:	
  3006                           ; 1 bytes @ 0x2
  3007                           
  3008  0022                     setDimmerLights_TriggerERROR@command:	
  3009                           ; 1 bytes @ 0x2
  3010                           
  3011  0022                     setDimmerLights_Switch@command:	
  3012                           ; 1 bytes @ 0x2
  3013                           
  3014  0022                     setDimmerLights_AdjGo@command:	
  3015                           ; 1 bytes @ 0x2
  3016                           
  3017  0022                     setDimmerLights_Trigger@command:	
  3018                           ; 1 bytes @ 0x2
  3019                           
  3020  0022                     setDimmerLights_TriggerAdj@command:	
  3021                           ; 1 bytes @ 0x2
  3022                           
  3023  0022                     setLED@command:	
  3024                           ; 1 bytes @ 0x2
  3025                           
  3026  0022                     Flash_Memory_Read@address:	
  3027                           ; 1 bytes @ 0x2
  3028                           
  3029  0022                     setRF_Learn@command:	
  3030                           ; 1 bytes @ 0x2
  3031                           
  3032  0022                     setRF_RxStatus@command:	
  3033                           ; 1 bytes @ 0x2
  3034                           
  3035  0022                     setRF_Enable@command:	
  3036                           ; 1 bytes @ 0x2
  3037                           
  3038  0022                     setRFSW_Status@command:	
  3039                           ; 1 bytes @ 0x2
  3040                           
  3041  0022                     setSw_Enable@command:	
  3042                           ; 1 bytes @ 0x2
  3043                           
  3044  0022                     setSw_Status@command:	
  3045                           ; 1 bytes @ 0x2
  3046                           
  3047  0022                     DelayTime_1us@i:	
  3048                           ; 1 bytes @ 0x2
  3049                           
  3050  0022                     ___wmul@multiplicand:	
  3051                           ; 2 bytes @ 0x2
  3052                           
  3053                           
  3054                           ; 2 bytes @ 0x2
  3055  0022                     	ds	1
  3056  0023                     ??_setRF_RxStatus:	
  3057  0023                     ??_CC2500_WriteREG:	
  3058                           ; 0 bytes @ 0x3
  3059                           
  3060  0023                     ??_setSw_Status:	
  3061                           ; 0 bytes @ 0x3
  3062                           
  3063  0023                     ??_setRFSW_Status:	
  3064                           ; 0 bytes @ 0x3
  3065                           
  3066  0023                     ??_setDimmerLights_Trigger:	
  3067                           ; 0 bytes @ 0x3
  3068                           
  3069  0023                     ??_setDimmerLights_Switch:	
  3070                           ; 0 bytes @ 0x3
  3071                           
  3072  0023                     ??_setDimmerLights_TriggerERROR:	
  3073                           ; 0 bytes @ 0x3
  3074                           
  3075  0023                     ??_setLED:	
  3076                           ; 0 bytes @ 0x3
  3077                           
  3078  0023                     ??_setRF_Enable:	
  3079                           ; 0 bytes @ 0x3
  3080                           
  3081  0023                     ??_DelayOff_Initialization:	
  3082                           ; 0 bytes @ 0x3
  3083                           
  3084  0023                     ?_setDelayOff_GO:	
  3085                           ; 0 bytes @ 0x3
  3086                           
  3087  0023                     ??_DimmerLights_Close:	
  3088                           ; 0 bytes @ 0x3
  3089                           
  3090  0023                     ??_setDimmerLights_AdjGo:	
  3091                           ; 0 bytes @ 0x3
  3092                           
  3093  0023                     ??_setDimmerLights_TriggerAdj:	
  3094                           ; 0 bytes @ 0x3
  3095                           
  3096  0023                     ??_getAD:	
  3097                           ; 0 bytes @ 0x3
  3098                           
  3099  0023                     ??_setRF_Learn:	
  3100                           ; 0 bytes @ 0x3
  3101                           
  3102  0023                     CC2500_WriteCommand@command:	
  3103                           ; 0 bytes @ 0x3
  3104                           
  3105  0023                     CC2500_ReadStatus@status_addr:	
  3106                           ; 1 bytes @ 0x3
  3107                           
  3108  0023                     setDelayOff_GO@command:	
  3109                           ; 1 bytes @ 0x3
  3110                           
  3111  0023                     setDimmerLights_Initialization@lights:	
  3112                           ; 1 bytes @ 0x3
  3113                           
  3114  0023                     setDimmerLights_TriggerERROR@lights:	
  3115                           ; 1 bytes @ 0x3
  3116                           
  3117  0023                     setDimmerLights_Switch@lights:	
  3118                           ; 1 bytes @ 0x3
  3119                           
  3120  0023                     setDimmerLights_AdjGo@lights:	
  3121                           ; 1 bytes @ 0x3
  3122                           
  3123  0023                     setDimmerLights_Trigger@lights:	
  3124                           ; 1 bytes @ 0x3
  3125                           
  3126  0023                     setDimmerLights_TriggerAdj@lights:	
  3127                           ; 1 bytes @ 0x3
  3128                           
  3129  0023                     setLED@led:	
  3130                           ; 1 bytes @ 0x3
  3131                           
  3132  0023                     getAD@adcon0:	
  3133                           ; 1 bytes @ 0x3
  3134                           
  3135  0023                     Flash_Memory_Read@ret:	
  3136                           ; 1 bytes @ 0x3
  3137                           
  3138  0023                     setRF_Learn@rf:	
  3139                           ; 1 bytes @ 0x3
  3140                           
  3141  0023                     setRF_RxStatus@rf:	
  3142                           ; 1 bytes @ 0x3
  3143                           
  3144  0023                     setTxData@rf:	
  3145                           ; 1 bytes @ 0x3
  3146                           
  3147  0023                     setRF_Enable@rf:	
  3148                           ; 1 bytes @ 0x3
  3149                           
  3150  0023                     setRFSW_Status@sw:	
  3151                           ; 1 bytes @ 0x3
  3152                           
  3153  0023                     setSw_Status@sw:	
  3154                           ; 1 bytes @ 0x3
  3155                           
  3156  0023                     ___ftpack@exp:	
  3157                           ; 1 bytes @ 0x3
  3158                           
  3159                           
  3160                           ; 1 bytes @ 0x3
  3161  0023                     	ds	1
  3162  0024                     ??_CC2500_ClearTXFIFO:	
  3163  0024                     ??_CC2500_ClearRXFIFO:	
  3164                           ; 0 bytes @ 0x4
  3165                           
  3166  0024                     ??_CC2500_SIDLEMode:	
  3167                           ; 0 bytes @ 0x4
  3168                           
  3169  0024                     ?_setDimmerLights:	
  3170                           ; 0 bytes @ 0x4
  3171                           
  3172  0024                     ??_setDimmerLights_ERROR:	
  3173                           ; 0 bytes @ 0x4
  3174                           
  3175  0024                     ??_setLED_Initialization:	
  3176                           ; 0 bytes @ 0x4
  3177                           
  3178  0024                     ??_getTemp_AD:	
  3179                           ; 0 bytes @ 0x4
  3180                           
  3181  0024                     ??_getPowerFault_AD:	
  3182                           ; 0 bytes @ 0x4
  3183                           
  3184  0024                     ??_Flash_Memory_Modify:	
  3185                           ; 0 bytes @ 0x4
  3186                           
  3187  0024                     ??_RF_RxDisable:	
  3188                           ; 0 bytes @ 0x4
  3189                           
  3190  0024                     ??_setSw_Initialization:	
  3191                           ; 0 bytes @ 0x4
  3192                           
  3193  0024                     ??_Sw_DimmerAdjFunc:	
  3194                           ; 0 bytes @ 0x4
  3195                           
  3196  0024                     ??_CC2500_TxData:	
  3197                           ; 0 bytes @ 0x4
  3198                           
  3199  0024                     ??_CC2500_RxData:	
  3200                           ; 0 bytes @ 0x4
  3201                           
  3202  0024                     ??_DimmerLights_Initialization:	
  3203                           ; 0 bytes @ 0x4
  3204                           
  3205  0024                     ??___wmul:	
  3206                           ; 0 bytes @ 0x4
  3207                           
  3208  0024                     CC2500_WriteREG@w_addr:	
  3209                           ; 0 bytes @ 0x4
  3210                           
  3211  0024                     setDelayOff_GO@value:	
  3212                           ; 1 bytes @ 0x4
  3213                           
  3214  0024                     setDimmerLights@status:	
  3215                           ; 1 bytes @ 0x4
  3216                           
  3217  0024                     setLED_Initialization@led:	
  3218                           ; 1 bytes @ 0x4
  3219                           
  3220  0024                     setLED_Main@led:	
  3221                           ; 1 bytes @ 0x4
  3222                           
  3223  0024                     RF_RxDisable@rf:	
  3224                           ; 1 bytes @ 0x4
  3225                           
  3226  0024                     setSw_Initialization@sw:	
  3227                           ; 1 bytes @ 0x4
  3228                           
  3229  0024                     Sw_DimmerAdjFunc@Idle:	
  3230                           ; 1 bytes @ 0x4
  3231                           
  3232  0024                     ___ftpack@sign:	
  3233                           ; 1 bytes @ 0x4
  3234                           
  3235  0024                     DelayTime_1us@j:	
  3236                           ; 1 bytes @ 0x4
  3237                           
  3238  0024                     ___wmul@product:	
  3239                           ; 2 bytes @ 0x4
  3240                           
  3241                           
  3242                           ; 2 bytes @ 0x4
  3243  0024                     	ds	1
  3244  0025                     ??_CC2500_InitSetREG:	
  3245  0025                     ??_CC2500_InitPATable:	
  3246                           ; 0 bytes @ 0x5
  3247                           
  3248  0025                     ??_setDimmerLights:	
  3249                           ; 0 bytes @ 0x5
  3250                           
  3251  0025                     ??_Switch_Initialization:	
  3252                           ; 0 bytes @ 0x5
  3253                           
  3254  0025                     ??___ftpack:	
  3255                           ; 0 bytes @ 0x5
  3256                           
  3257  0025                     ??_setDelayOff_GO:	
  3258                           ; 0 bytes @ 0x5
  3259                           
  3260  0025                     ??_LED_Initialization:	
  3261                           ; 0 bytes @ 0x5
  3262                           
  3263  0025                     ??_LED_Main:	
  3264                           ; 0 bytes @ 0x5
  3265                           
  3266  0025                     CC2500_TxData@loop_e:	
  3267                           ; 0 bytes @ 0x5
  3268                           
  3269  0025                     CC2500_RxData@loop_f:	
  3270                           ; 1 bytes @ 0x5
  3271                           
  3272  0025                     setDimmerLights_ERROR@lights:	
  3273                           ; 1 bytes @ 0x5
  3274                           
  3275  0025                     Sw_DimmerAdjFunc@sw:	
  3276                           ; 1 bytes @ 0x5
  3277                           
  3278                           
  3279                           ; 1 bytes @ 0x5
  3280  0025                     	ds	1
  3281  0026                     ??_CC2500_PowerRST:	
  3282  0026                     ??_CC2500_FrequencyCabr:	
  3283                           ; 0 bytes @ 0x6
  3284                           
  3285  0026                     ?_setBuz:	
  3286                           ; 0 bytes @ 0x6
  3287                           
  3288  0026                     CC2500_InitSetREG@temp1:	
  3289                           ; 0 bytes @ 0x6
  3290                           
  3291  0026                     CC2500_InitPATable@temp:	
  3292                           ; 1 bytes @ 0x6
  3293                           
  3294  0026                     setDimmerLights@lights:	
  3295                           ; 1 bytes @ 0x6
  3296                           
  3297  0026                     Flash_Memory_Modify@i:	
  3298                           ; 1 bytes @ 0x6
  3299                           
  3300  0026                     setBuz@time:	
  3301                           ; 1 bytes @ 0x6
  3302                           
  3303                           
  3304                           ; 2 bytes @ 0x6
  3305  0026                     	ds	1
  3306  0027                     ??_Flash_Memory_Main:	
  3307  0027                     CC2500_InitSetREG@temp2:	
  3308                           ; 0 bytes @ 0x7
  3309                           
  3310  0027                     CC2500_InitPATable@loop_d:	
  3311                           ; 1 bytes @ 0x7
  3312                           
  3313  0027                     setDelayOff_GO@sw:	
  3314                           ; 1 bytes @ 0x7
  3315                           
  3316                           
  3317                           ; 1 bytes @ 0x7
  3318  0027                     	ds	1
  3319  0028                     ??_setBuz:	
  3320  0028                     ?___awtoft:	
  3321                           ; 0 bytes @ 0x8
  3322                           
  3323  0028                     CC2500_InitSetREG@loop_c:	
  3324                           ; 3 bytes @ 0x8
  3325                           
  3326  0028                     getTemp_AD@channel:	
  3327                           ; 1 bytes @ 0x8
  3328                           
  3329  0028                     getPowerFault_AD@channel:	
  3330                           ; 1 bytes @ 0x8
  3331                           
  3332  0028                     ___awtoft@c:	
  3333                           ; 1 bytes @ 0x8
  3334                           
  3335                           
  3336                           ; 2 bytes @ 0x8
  3337  0028                     	ds	1
  3338  0029                     ??_CC2500_PowerOnInitial:	
  3339  0029                     setBuz@count:	
  3340                           ; 0 bytes @ 0x9
  3341                           
  3342                           
  3343                           ; 1 bytes @ 0x9
  3344  0029                     	ds	1
  3345  002A                     ??_MainT:	
  3346  002A                     ??_setLog_Code:	
  3347                           ; 0 bytes @ 0xA
  3348                           
  3349  002A                     ??_DimmerLights_Exceptions:	
  3350                           ; 0 bytes @ 0xA
  3351                           
  3352  002A                     DimmerLights_Exceptions@status:	
  3353                           ; 0 bytes @ 0xA
  3354                           
  3355                           
  3356                           ; 1 bytes @ 0xA
  3357  002A                     	ds	1
  3358  002B                     ??_setOverTemp_Exceptions:	
  3359  002B                     ??_setPowerFault_Exceptions:	
  3360                           ; 0 bytes @ 0xB
  3361                           
  3362  002B                     ??___awtoft:	
  3363                           ; 0 bytes @ 0xB
  3364                           
  3365  002B                     setLog_Code@rf:	
  3366                           ; 0 bytes @ 0xB
  3367                           
  3368                           
  3369                           ; 1 bytes @ 0xB
  3370  002B                     	ds	1
  3371  002C                     setOverTemp_Exceptions@command:	
  3372  002C                     setPowerFault_Exceptions@command:	
  3373                           ; 1 bytes @ 0xC
  3374                           
  3375                           
  3376                           ; 1 bytes @ 0xC
  3377  002C                     	ds	1
  3378  002D                     ??_setTemp_Main:	
  3379  002D                     ??_setPowerFault_Main:	
  3380                           ; 0 bytes @ 0xD
  3381                           
  3382  002D                     ___awtoft@sign:	
  3383                           ; 0 bytes @ 0xD
  3384                           
  3385                           
  3386                           ; 1 bytes @ 0xD
  3387  002D                     	ds	1
  3388  002E                     ?___ftdiv:	
  3389  002E                     ?___ftmul:	
  3390                           ; 3 bytes @ 0xE
  3391                           
  3392  002E                     ___ftdiv@f2:	
  3393                           ; 3 bytes @ 0xE
  3394                           
  3395  002E                     ___ftmul@f1:	
  3396                           ; 3 bytes @ 0xE
  3397                           
  3398                           
  3399                           ; 3 bytes @ 0xE
  3400  002E                     	ds	1
  3401  002F                     ??_PowerFault_Main:	
  3402                           
  3403                           ; 0 bytes @ 0xF
  3404  002F                     	ds	1
  3405  0030                     ??_Temp_Main:	
  3406                           
  3407                           ; 0 bytes @ 0x10
  3408  0030                     	ds	1
  3409  0031                     ___ftdiv@f1:	
  3410  0031                     ___ftmul@f2:	
  3411                           ; 3 bytes @ 0x11
  3412                           
  3413                           
  3414                           ; 3 bytes @ 0x11
  3415  0031                     	ds	3
  3416  0034                     ??___ftdiv:	
  3417  0034                     ??___ftmul:	
  3418                           ; 0 bytes @ 0x14
  3419                           
  3420                           
  3421                           ; 0 bytes @ 0x14
  3422  0034                     	ds	4
  3423  0038                     ___ftdiv@cntr:	
  3424  0038                     ___ftmul@exp:	
  3425                           ; 1 bytes @ 0x18
  3426                           
  3427                           
  3428                           ; 1 bytes @ 0x18
  3429  0038                     	ds	1
  3430  0039                     ___ftdiv@f3:	
  3431  0039                     ___ftmul@f3_as_product:	
  3432                           ; 3 bytes @ 0x19
  3433                           
  3434                           
  3435                           ; 3 bytes @ 0x19
  3436  0039                     	ds	3
  3437  003C                     ___ftdiv@exp:	
  3438  003C                     ___ftmul@cntr:	
  3439                           ; 1 bytes @ 0x1C
  3440                           
  3441                           
  3442                           ; 1 bytes @ 0x1C
  3443  003C                     	ds	1
  3444  003D                     ___ftdiv@sign:	
  3445  003D                     ___ftmul@sign:	
  3446                           ; 1 bytes @ 0x1D
  3447                           
  3448                           
  3449                           ; 1 bytes @ 0x1D
  3450  003D                     	ds	1
  3451  003E                     ?___ftadd:	
  3452  003E                     ___ftadd@f1:	
  3453                           ; 3 bytes @ 0x1E
  3454                           
  3455                           
  3456                           ; 3 bytes @ 0x1E
  3457  003E                     	ds	3
  3458  0041                     ___ftadd@f2:	
  3459                           
  3460                           ; 3 bytes @ 0x21
  3461  0041                     	ds	3
  3462  0044                     ??___ftadd:	
  3463                           
  3464                           ; 0 bytes @ 0x24
  3465  0044                     	ds	4
  3466  0048                     ___ftadd@sign:	
  3467                           
  3468                           ; 1 bytes @ 0x28
  3469  0048                     	ds	1
  3470  0049                     ___ftadd@exp2:	
  3471                           
  3472                           ; 1 bytes @ 0x29
  3473  0049                     	ds	1
  3474  004A                     ___ftadd@exp1:	
  3475                           
  3476                           ; 1 bytes @ 0x2A
  3477  004A                     	ds	1
  3478  004B                     ?___fttol:	
  3479  004B                     ___fttol@f1:	
  3480                           ; 4 bytes @ 0x2B
  3481                           
  3482                           
  3483                           ; 3 bytes @ 0x2B
  3484  004B                     	ds	4
  3485  004F                     ??___fttol:	
  3486                           
  3487                           ; 0 bytes @ 0x2F
  3488  004F                     	ds	4
  3489  0053                     ___fttol@sign1:	
  3490                           
  3491                           ; 1 bytes @ 0x33
  3492  0053                     	ds	1
  3493  0054                     ___fttol@lval:	
  3494                           
  3495                           ; 4 bytes @ 0x34
  3496  0054                     	ds	4
  3497  0058                     ___fttol@exp1:	
  3498                           
  3499                           ; 1 bytes @ 0x38
  3500  0058                     	ds	1
  3501  0059                     ??_getPercentValue:	
  3502  0059                     ??_setPercentValue:	
  3503                           ; 0 bytes @ 0x39
  3504                           
  3505  0059                     setPercentValue@value:	
  3506                           ; 0 bytes @ 0x39
  3507                           
  3508                           
  3509                           ; 1 bytes @ 0x39
  3510  0059                     	ds	1
  3511  005A                     setPercentValue@i:	
  3512                           
  3513                           ; 3 bytes @ 0x3A
  3514  005A                     	ds	1
  3515  005B                     getPercentValue@value:	
  3516                           
  3517                           ; 1 bytes @ 0x3B
  3518  005B                     	ds	1
  3519  005C                     getPercentValue@i:	
  3520                           
  3521                           ; 3 bytes @ 0x3C
  3522  005C                     	ds	1
  3523  005D                     ?_setRF_DimmerLights:	
  3524  005D                     ??_Flash_Memory_Initialization:	
  3525                           ; 0 bytes @ 0x3D
  3526                           
  3527  005D                     setRF_DimmerLights@on:	
  3528                           ; 0 bytes @ 0x3D
  3529                           
  3530                           
  3531                           ; 1 bytes @ 0x3D
  3532  005D                     	ds	1
  3533  005E                     ??_setRF_DimmerLights:	
  3534  005E                     Flash_Memory_Initialization@i:	
  3535                           ; 0 bytes @ 0x3E
  3536                           
  3537                           
  3538                           ; 1 bytes @ 0x3E
  3539  005E                     	ds	1
  3540  005F                     ??_setDimmerLights_AdjRF:	
  3541                           
  3542                           ; 0 bytes @ 0x3F
  3543  005F                     	ds	1
  3544  0060                     setDimmerLights_AdjRF@lights:	
  3545  0060                     setRF_DimmerLights@status:	
  3546                           ; 1 bytes @ 0x40
  3547                           
  3548                           
  3549                           ; 1 bytes @ 0x40
  3550  0060                     	ds	1
  3551  0061                     ??_setRF_DimmerValue:	
  3552  0061                     setRF_DimmerLights@lights:	
  3553                           ; 0 bytes @ 0x41
  3554                           
  3555                           
  3556                           ; 1 bytes @ 0x41
  3557  0061                     	ds	1
  3558  0062                     ??_DlyOff_Main:	
  3559  0062                     ?_setDimmerLights_Adj:	
  3560                           ; 0 bytes @ 0x42
  3561                           
  3562  0062                     ??_setRFSW_Control:	
  3563                           ; 0 bytes @ 0x42
  3564                           
  3565  0062                     ??_Sw_DimmerOnFunc:	
  3566                           ; 0 bytes @ 0x42
  3567                           
  3568  0062                     ??_Sw_DimmerOffFunc:	
  3569                           ; 0 bytes @ 0x42
  3570                           
  3571  0062                     setDimmerLights_Adj@status:	
  3572                           ; 0 bytes @ 0x42
  3573                           
  3574  0062                     Sw_DimmerOnFunc@Idle:	
  3575                           ; 1 bytes @ 0x42
  3576                           
  3577                           
  3578                           ; 1 bytes @ 0x42
  3579  0062                     	ds	1
  3580  0063                     ??_setDimmerLights_Adj:	
  3581  0063                     setRFSW_Control@sw:	
  3582                           ; 0 bytes @ 0x43
  3583                           
  3584  0063                     setRF_DimmerValue@lights:	
  3585                           ; 1 bytes @ 0x43
  3586                           
  3587  0063                     Sw_DimmerOnFunc@sw:	
  3588                           ; 1 bytes @ 0x43
  3589                           
  3590                           
  3591                           ; 1 bytes @ 0x43
  3592  0063                     	ds	1
  3593  0064                     ??_setRFSW_AdjControl:	
  3594  0064                     DlyOff_Main@sw:	
  3595                           ; 0 bytes @ 0x44
  3596                           
  3597  0064                     setDimmerLights_Adj@lights:	
  3598                           ; 1 bytes @ 0x44
  3599                           
  3600  0064                     Sw_DimmerOffFunc@sw:	
  3601                           ; 1 bytes @ 0x44
  3602                           
  3603                           
  3604                           ; 1 bytes @ 0x44
  3605  0064                     	ds	1
  3606  0065                     ??_setDimmerLights_Main:	
  3607  0065                     ??_setSw_Main:	
  3608                           ; 0 bytes @ 0x45
  3609                           
  3610  0065                     ??_DelayOff_Main:	
  3611                           ; 0 bytes @ 0x45
  3612                           
  3613  0065                     setDimmerLights_Main@clear:	
  3614                           ; 0 bytes @ 0x45
  3615                           
  3616                           
  3617                           ; 1 bytes @ 0x45
  3618  0065                     	ds	1
  3619  0066                     setDimmerLights_Main@lights:	
  3620  0066                     setRFSW_AdjControl@sw:	
  3621                           ; 1 bytes @ 0x46
  3622                           
  3623                           
  3624                           ; 1 bytes @ 0x46
  3625  0066                     	ds	1
  3626  0067                     ??_Switch_Main:	
  3627  0067                     ??_setControl_Lights_Table:	
  3628                           ; 0 bytes @ 0x47
  3629                           
  3630  0067                     ??_DimmerLights_Main:	
  3631                           ; 0 bytes @ 0x47
  3632                           
  3633  0067                     setControl_Lights_Table@rf:	
  3634                           ; 0 bytes @ 0x47
  3635                           
  3636                           
  3637                           ; 1 bytes @ 0x47
  3638  0067                     	ds	1
  3639  0068                     ??_RF_Main:	
  3640  0068                     ??_getRxData:	
  3641                           ; 0 bytes @ 0x48
  3642                           
  3643  0068                     ??_main:	
  3644                           ; 0 bytes @ 0x48
  3645                           
  3646                           
  3647                           	psect	maintext
  3648  14F8                     __pmaintext:	
  3649                           ; 0 bytes @ 0x48
  3650 ;;
  3651 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3652 ;;
  3653 ;; *************** function _main *****************
  3654 ;; Defined at:
  3655 ;;		line 7 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\main.c"
  3656 ;; Parameters:    Size  Location     Type
  3657 ;;		None
  3658 ;; Auto vars:     Size  Location     Type
  3659 ;;		None
  3660 ;; Return value:  Size  Location     Type
  3661 ;;		None               void
  3662 ;; Registers used:
  3663 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3664 ;; Tracked objects:
  3665 ;;		On entry : 17F/0
  3666 ;;		On exit  : 0/0
  3667 ;;		Unchanged: 0/0
  3668 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3669 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3670 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3672 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3673 ;;Total ram usage:        0 bytes
  3674 ;; Hardware stack levels required when called:   14
  3675 ;; This function calls:
  3676 ;;		_Buzzer_Initialization
  3677 ;;		_Buzzer_Main
  3678 ;;		_CC2500_PowerOnInitial
  3679 ;;		_DelayOff_Initialization
  3680 ;;		_DelayOff_Main
  3681 ;;		_DimmerLights_Initialization
  3682 ;;		_DimmerLights_Main
  3683 ;;		_Flash_Memory_Initialization
  3684 ;;		_Flash_Memory_Main
  3685 ;;		_LED_Initialization
  3686 ;;		_LED_Main
  3687 ;;		_MainT
  3688 ;;		_MainT_Initialization
  3689 ;;		_MainT_ResetClock
  3690 ;;		_Mcu_Initialization
  3691 ;;		_PowerFault_Initialization
  3692 ;;		_PowerFault_Main
  3693 ;;		_RF_Initialization
  3694 ;;		_RF_Main
  3695 ;;		_Switch_Initialization
  3696 ;;		_Switch_Main
  3697 ;;		_Temp_Initialization
  3698 ;;		_Temp_Main
  3699 ;;		_getPowerFault_AD
  3700 ;;		_getTemp_AD
  3701 ;; This function is called by:
  3702 ;;		Startup code after reset
  3703 ;; This function uses a non-reentrant model
  3704 ;;
  3705                           
  3706                           
  3707                           ;psect for function _main
  3708  14F8                     _main:	
  3709                           
  3710                           ;main.c: 9: MainT_Initialization();
  3711                           
  3712                           ;incstack = 0
  3713                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3714  14F8  319A  22F8  3194   	fcall	_MainT_Initialization
  3715                           
  3716                           ;main.c: 10: Mcu_Initialization();
  3717  14FB  319B  239F  3194   	fcall	_Mcu_Initialization
  3718                           
  3719                           ;main.c: 11: Flash_Memory_Initialization();
  3720  14FE  318E  2621  3194   	fcall	_Flash_Memory_Initialization
  3721                           
  3722                           ;main.c: 12: LED_Initialization();
  3723  1501  3199  21FB  3194   	fcall	_LED_Initialization
  3724                           
  3725                           ;main.c: 13: Buzzer_Initialization();
  3726  1504  3199  2189  3194   	fcall	_Buzzer_Initialization
  3727                           
  3728                           ;main.c: 15: ;;
  3729                           ;main.c: 16: Temp_Initialization();
  3730  1507  3198  20F8  3194   	fcall	_Temp_Initialization
  3731                           
  3732                           ;main.c: 17: ;;
  3733                           ;main.c: 18: PowerFault_Initialization();
  3734  150A  3198  20F2  3194   	fcall	_PowerFault_Initialization
  3735                           
  3736                           ;main.c: 19: DelayOff_Initialization();
  3737  150D  3199  2145  3194   	fcall	_DelayOff_Initialization
  3738                           
  3739                           ;main.c: 21: DimmerLights_Initialization();
  3740  1510  319B  2348  3194   	fcall	_DimmerLights_Initialization
  3741                           
  3742                           ;main.c: 22: ;;
  3743                           ;main.c: 23: ;;
  3744                           ;main.c: 24: ;;
  3745                           ;main.c: 26: Switch_Initialization();
  3746  1513  319A  222D  3194   	fcall	_Switch_Initialization
  3747                           
  3748                           ;main.c: 27: RF_Initialization();
  3749  1516  3199  210A  3194   	fcall	_RF_Initialization
  3750                           
  3751                           ;main.c: 28: CC2500_PowerOnInitial();
  3752  1519  319B  2333  3194   	fcall	_CC2500_PowerOnInitial
  3753  151C                     l9843:	
  3754                           ;main.c: 30: while(1)
  3755                           
  3756                           
  3757                           ;main.c: 31: {
  3758                           ;main.c: 32: if(TMain->PowerON)
  3759  151C  0020               	movlb	0	; select bank0
  3760  151D  086F               	movf	_TMain,w
  3761  151E  0086               	movwf	6
  3762  151F  3001               	movlw	1	; select bank2/3
  3763  1520  0087               	movwf	7
  3764  1521  1C01               	btfss	1,0
  3765  1522  2D2E               	goto	l9847
  3766                           
  3767                           ;main.c: 33: {
  3768                           ;main.c: 35: ;;
  3769                           ;main.c: 39: ;;
  3770                           ;main.c: 43: getTemp_AD(0x09);
  3771  1523  3009               	movlw	9
  3772  1524  3195  25CB  3194   	fcall	_getTemp_AD
  3773                           
  3774                           ;main.c: 47: getPowerFault_AD(0x11);
  3775  1527  3011               	movlw	17
  3776  1528  3190  203B  3194   	fcall	_getPowerFault_AD
  3777                           
  3778                           ;main.c: 59: Buzzer_Main();
  3779  152B  318C  241C  3194   	fcall	_Buzzer_Main
  3780  152E                     l9847:	
  3781                           
  3782                           ;main.c: 61: }
  3783                           ;main.c: 63: if(TMain->T0_Timerout)
  3784  152E  0020               	movlb	0	; select bank0
  3785  152F  086F               	movf	_TMain,w
  3786  1530  0086               	movwf	6
  3787  1531  3001               	movlw	1	; select bank2/3
  3788  1532  0087               	movwf	7
  3789  1533  1C81               	btfss	1,1
  3790  1534  2D1C               	goto	l9843
  3791                           
  3792                           ;main.c: 64: {
  3793                           ;main.c: 65: TMain->T0_Timerout = 0;
  3794  1535  086F               	movf	_TMain,w
  3795  1536  0086               	movwf	6
  3796  1537  3001               	movlw	1	; select bank2/3
  3797  1538  0087               	movwf	7
  3798  1539  1081               	bcf	1,1
  3799                           
  3800                           ;main.c: 66: MainT();
  3801  153A  3188  2063  3194   	fcall	_MainT
  3802                           
  3803                           ;main.c: 67: MainT_ResetClock();
  3804  153D  319C  244C  3194   	fcall	_MainT_ResetClock
  3805                           
  3806                           ;main.c: 68: if(TMain->PowerON)
  3807  1540  0020               	movlb	0	; select bank0
  3808  1541  086F               	movf	_TMain,w
  3809  1542  0086               	movwf	6
  3810  1543  3001               	movlw	1	; select bank2/3
  3811  1544  0087               	movwf	7
  3812  1545  1C01               	btfss	1,0
  3813  1546  2D1C               	goto	l9843
  3814                           
  3815                           ;main.c: 69: {
  3816                           ;main.c: 70: Flash_Memory_Main();
  3817  1547  3191  2144  3194   	fcall	_Flash_Memory_Main
  3818                           
  3819                           ;main.c: 72: LED_Main();
  3820  154A  319A  2207  3194   	fcall	_LED_Main
  3821                           
  3822                           ;main.c: 74: ;;
  3823                           ;main.c: 75: Temp_Main();
  3824  154D  3198  20FB  3194   	fcall	_Temp_Main
  3825                           
  3826                           ;main.c: 76: ;;
  3827                           ;main.c: 77: PowerFault_Main();
  3828  1550  3198  20F5  3194   	fcall	_PowerFault_Main
  3829                           
  3830                           ;main.c: 79: ;;
  3831                           ;main.c: 80: DimmerLights_Main();
  3832  1553  3199  21AA  3194   	fcall	_DimmerLights_Main
  3833                           
  3834                           ;main.c: 81: Switch_Main();
  3835  1556  3199  215D  3194   	fcall	_Switch_Main
  3836                           
  3837                           ;main.c: 82: ;;
  3838                           ;main.c: 83: ;;
  3839                           ;main.c: 85: RF_Main();
  3840  1559  3199  210E  3194   	fcall	_RF_Main
  3841                           
  3842                           ;main.c: 86: DelayOff_Main();
  3843  155C  3199  214D  3194   	fcall	_DelayOff_Main
  3844  155F  2D1C               	goto	l9843
  3845  1560                     __end_of_main:	
  3846                           
  3847                           	psect	text1
  3848  15CB                     __ptext1:	
  3849 ;; *************** function _getTemp_AD *****************
  3850 ;; Defined at:
  3851 ;;		line 35 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\OverTemperature_B1.c"
  3852 ;; Parameters:    Size  Location     Type
  3853 ;;  channel         1    wreg     unsigned char 
  3854 ;; Auto vars:     Size  Location     Type
  3855 ;;  channel         1    8[BANK0 ] unsigned char 
  3856 ;; Return value:  Size  Location     Type
  3857 ;;		None               void
  3858 ;; Registers used:
  3859 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3860 ;; Tracked objects:
  3861 ;;		On entry : 0/0
  3862 ;;		On exit  : 0/0
  3863 ;;		Unchanged: 0/0
  3864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3865 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3866 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3867 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3868 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3869 ;;Total ram usage:        5 bytes
  3870 ;; Hardware stack levels used:    1
  3871 ;; Hardware stack levels required when called:    5
  3872 ;; This function calls:
  3873 ;;		_getAD
  3874 ;; This function is called by:
  3875 ;;		_main
  3876 ;; This function uses a non-reentrant model
  3877 ;;
  3878                           
  3879                           
  3880                           ;psect for function _getTemp_AD
  3881  15CB                     _getTemp_AD:	
  3882                           
  3883                           ;incstack = 0
  3884                           ; Regs used in _getTemp_AD: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3885                           ;getTemp_AD@channel stored from wreg
  3886  15CB  0020               	movlb	0	; select bank0
  3887  15CC  00A8               	movwf	getTemp_AD@channel
  3888                           
  3889                           ;OverTemperature_B1.c: 37: if(Temp->ADtoGO)
  3890  15CD  0879               	movf	_Temp,w
  3891  15CE  0086               	movwf	6
  3892  15CF  3001               	movlw	1	; select bank2/3
  3893  15D0  0087               	movwf	7
  3894  15D1  1D01               	btfss	1,2
  3895  15D2  0008               	return
  3896                           
  3897                           ;OverTemperature_B1.c: 38: {
  3898                           ;OverTemperature_B1.c: 39: Temp->ADRES=getAD(channel,0xf0);
  3899  15D3  30F0               	movlw	240
  3900  15D4  00A4               	movwf	??_getTemp_AD
  3901  15D5  0824               	movf	??_getTemp_AD,w
  3902  15D6  00A0               	movwf	getAD@adcon1
  3903  15D7  0828               	movf	getTemp_AD@channel,w
  3904  15D8  319B  2389  3195   	fcall	_getAD
  3905  15DB  0879               	movf	_Temp,w
  3906  15DC  3E0A               	addlw	10
  3907  15DD  0086               	movwf	6
  3908  15DE  3001               	movlw	1	; select bank2/3
  3909  15DF  0087               	movwf	7
  3910  15E0  0020               	movlb	0	; select bank0
  3911  15E1  0820               	movf	?_getAD,w
  3912  15E2  3FC0               	movwi [0]fsr1
  3913  15E3  0821               	movf	?_getAD+1,w
  3914  15E4  3FC1               	movwi [1]fsr1
  3915                           
  3916                           ;OverTemperature_B1.c: 40: if(Temp->ADH[0] < Temp->ADRES)
  3917  15E5  0879               	movf	_Temp,w
  3918  15E6  3E0A               	addlw	10
  3919  15E7  0086               	movwf	6
  3920  15E8  3001               	movlw	1	; select bank2/3
  3921  15E9  0087               	movwf	7
  3922  15EA  3F40               	moviw [0]fsr1
  3923  15EB  00A4               	movwf	??_getTemp_AD
  3924  15EC  3F41               	moviw [1]fsr1
  3925  15ED  00A5               	movwf	??_getTemp_AD+1
  3926  15EE  0879               	movf	_Temp,w
  3927  15EF  3E06               	addlw	6
  3928  15F0  0086               	movwf	6
  3929  15F1  3001               	movlw	1	; select bank2/3
  3930  15F2  0087               	movwf	7
  3931  15F3  3F40               	moviw [0]fsr1
  3932  15F4  00A6               	movwf	??_getTemp_AD+2
  3933  15F5  3F41               	moviw [1]fsr1
  3934  15F6  00A7               	movwf	??_getTemp_AD+3
  3935  15F7  0825               	movf	??_getTemp_AD+1,w
  3936  15F8  0227               	subwf	??_getTemp_AD+3,w
  3937  15F9  1D03               	skipz
  3938  15FA  2DFD               	goto	u10135
  3939  15FB  0824               	movf	??_getTemp_AD,w
  3940  15FC  0226               	subwf	??_getTemp_AD+2,w
  3941  15FD                     u10135:	
  3942  15FD  1803               	skipnc
  3943  15FE  2E0E               	goto	l9721
  3944                           
  3945                           ;OverTemperature_B1.c: 41: {
  3946                           ;OverTemperature_B1.c: 42: Temp->ADH[0]=Temp->ADRES;
  3947  15FF  0879               	movf	_Temp,w
  3948  1600  3E0A               	addlw	10
  3949  1601  0086               	movwf	6
  3950  1602  3001               	movlw	1	; select bank2/3
  3951  1603  0087               	movwf	7
  3952  1604  0879               	movf	_Temp,w
  3953  1605  3E06               	addlw	6
  3954  1606  0084               	movwf	4
  3955  1607  3001               	movlw	1	; select bank2/3
  3956  1608  0085               	movwf	5
  3957  1609  3F40               	moviw [0]fsr1
  3958  160A  3F80               	movwi [0]fsr0
  3959  160B  3F41               	moviw [1]fsr1
  3960  160C  3F81               	movwi [1]fsr0
  3961                           
  3962                           ;OverTemperature_B1.c: 43: }
  3963  160D  0008               	return
  3964  160E                     l9721:	
  3965                           
  3966                           ;OverTemperature_B1.c: 44: else if(Temp->ADH[1] < Temp->ADRES)
  3967  160E  0879               	movf	_Temp,w
  3968  160F  3E0A               	addlw	10
  3969  1610  0086               	movwf	6
  3970  1611  3001               	movlw	1	; select bank2/3
  3971  1612  0087               	movwf	7
  3972  1613  3F40               	moviw [0]fsr1
  3973  1614  00A4               	movwf	??_getTemp_AD
  3974  1615  3F41               	moviw [1]fsr1
  3975  1616  00A5               	movwf	??_getTemp_AD+1
  3976  1617  0879               	movf	_Temp,w
  3977  1618  3E08               	addlw	8
  3978  1619  0086               	movwf	6
  3979  161A  3001               	movlw	1	; select bank2/3
  3980  161B  0087               	movwf	7
  3981  161C  3F40               	moviw [0]fsr1
  3982  161D  00A6               	movwf	??_getTemp_AD+2
  3983  161E  3F41               	moviw [1]fsr1
  3984  161F  00A7               	movwf	??_getTemp_AD+3
  3985  1620  0825               	movf	??_getTemp_AD+1,w
  3986  1621  0227               	subwf	??_getTemp_AD+3,w
  3987  1622  1D03               	skipz
  3988  1623  2E26               	goto	u10145
  3989  1624  0824               	movf	??_getTemp_AD,w
  3990  1625  0226               	subwf	??_getTemp_AD+2,w
  3991  1626                     u10145:	
  3992  1626  1803               	skipnc
  3993  1627  0008               	return
  3994                           
  3995                           ;OverTemperature_B1.c: 45: {
  3996                           ;OverTemperature_B1.c: 46: Temp->ADH[1]=Temp->ADRES;
  3997  1628  0879               	movf	_Temp,w
  3998  1629  3E0A               	addlw	10
  3999  162A  0086               	movwf	6
  4000  162B  3001               	movlw	1	; select bank2/3
  4001  162C  0087               	movwf	7
  4002  162D  0879               	movf	_Temp,w
  4003  162E  3E08               	addlw	8
  4004  162F  0084               	movwf	4
  4005  1630  3001               	movlw	1	; select bank2/3
  4006  1631  0085               	movwf	5
  4007  1632  3F40               	moviw [0]fsr1
  4008  1633  3F80               	movwi [0]fsr0
  4009  1634  3F41               	moviw [1]fsr1
  4010  1635  3F81               	movwi [1]fsr0
  4011  1636  0008               	return
  4012  1637                     __end_of_getTemp_AD:	
  4013                           
  4014                           	psect	text2
  4015  103B                     __ptext2:	
  4016 ;; *************** function _getPowerFault_AD *****************
  4017 ;; Defined at:
  4018 ;;		line 49 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\PowerFault_B1.c"
  4019 ;; Parameters:    Size  Location     Type
  4020 ;;  channel         1    wreg     unsigned char 
  4021 ;; Auto vars:     Size  Location     Type
  4022 ;;  channel         1    8[BANK0 ] unsigned char 
  4023 ;; Return value:  Size  Location     Type
  4024 ;;		None               void
  4025 ;; Registers used:
  4026 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4027 ;; Tracked objects:
  4028 ;;		On entry : 0/0
  4029 ;;		On exit  : 0/0
  4030 ;;		Unchanged: 0/0
  4031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4033 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4034 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4035 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4036 ;;Total ram usage:        5 bytes
  4037 ;; Hardware stack levels used:    1
  4038 ;; Hardware stack levels required when called:    5
  4039 ;; This function calls:
  4040 ;;		_getAD
  4041 ;; This function is called by:
  4042 ;;		_main
  4043 ;; This function uses a non-reentrant model
  4044 ;;
  4045                           
  4046                           
  4047                           ;psect for function _getPowerFault_AD
  4048  103B                     _getPowerFault_AD:	
  4049                           
  4050                           ;incstack = 0
  4051                           ; Regs used in _getPowerFault_AD: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4052                           ;getPowerFault_AD@channel stored from wreg
  4053  103B  0020               	movlb	0	; select bank0
  4054  103C  00A8               	movwf	getPowerFault_AD@channel
  4055                           
  4056                           ;PowerFault_B1.c: 51: if(PF->ADtoGO)
  4057  103D  0876               	movf	_PF,w
  4058  103E  0086               	movwf	6
  4059  103F  3001               	movlw	1	; select bank2/3
  4060  1040  0087               	movwf	7
  4061  1041  1D81               	btfss	1,3
  4062  1042  0008               	return
  4063                           
  4064                           ;PowerFault_B1.c: 52: {
  4065                           ;PowerFault_B1.c: 53: PF->ADRES=getAD(channel,0xf0);
  4066  1043  30F0               	movlw	240
  4067  1044  00A4               	movwf	??_getPowerFault_AD
  4068  1045  0824               	movf	??_getPowerFault_AD,w
  4069  1046  00A0               	movwf	getAD@adcon1
  4070  1047  0828               	movf	getPowerFault_AD@channel,w
  4071  1048  319B  2389  3190   	fcall	_getAD
  4072  104B  0876               	movf	_PF,w
  4073  104C  3E03               	addlw	3
  4074  104D  0086               	movwf	6
  4075  104E  3001               	movlw	1	; select bank2/3
  4076  104F  0087               	movwf	7
  4077  1050  0020               	movlb	0	; select bank0
  4078  1051  0820               	movf	?_getAD,w
  4079  1052  3FC0               	movwi [0]fsr1
  4080  1053  0821               	movf	?_getAD+1,w
  4081  1054  3FC1               	movwi [1]fsr1
  4082                           
  4083                           ;PowerFault_B1.c: 54: if(PF->AD < PF->ADRES)
  4084  1055  0876               	movf	_PF,w
  4085  1056  3E03               	addlw	3
  4086  1057  0086               	movwf	6
  4087  1058  3001               	movlw	1	; select bank2/3
  4088  1059  0087               	movwf	7
  4089  105A  3F40               	moviw [0]fsr1
  4090  105B  00A4               	movwf	??_getPowerFault_AD
  4091  105C  3F41               	moviw [1]fsr1
  4092  105D  00A5               	movwf	??_getPowerFault_AD+1
  4093  105E  0A76               	incf	_PF,w
  4094  105F  0086               	movwf	6
  4095  1060  3001               	movlw	1	; select bank2/3
  4096  1061  0087               	movwf	7
  4097  1062  3F40               	moviw [0]fsr1
  4098  1063  00A6               	movwf	??_getPowerFault_AD+2
  4099  1064  3F41               	moviw [1]fsr1
  4100  1065  00A7               	movwf	??_getPowerFault_AD+3
  4101  1066  0825               	movf	??_getPowerFault_AD+1,w
  4102  1067  0227               	subwf	??_getPowerFault_AD+3,w
  4103  1068  1D03               	skipz
  4104  1069  286C               	goto	u10165
  4105  106A  0824               	movf	??_getPowerFault_AD,w
  4106  106B  0226               	subwf	??_getPowerFault_AD+2,w
  4107  106C                     u10165:	
  4108  106C  1803               	skipnc
  4109  106D  0008               	return
  4110                           
  4111                           ;PowerFault_B1.c: 55: {
  4112                           ;PowerFault_B1.c: 56: PF->AD=PF->ADRES;
  4113  106E  0876               	movf	_PF,w
  4114  106F  3E03               	addlw	3
  4115  1070  0086               	movwf	6
  4116  1071  3001               	movlw	1	; select bank2/3
  4117  1072  0087               	movwf	7
  4118  1073  0A76               	incf	_PF,w
  4119  1074  0084               	movwf	4
  4120  1075  3001               	movlw	1	; select bank2/3
  4121  1076  0085               	movwf	5
  4122  1077  3F40               	moviw [0]fsr1
  4123  1078  3F80               	movwi [0]fsr0
  4124  1079  3F41               	moviw [1]fsr1
  4125  107A  3F81               	movwi [1]fsr0
  4126  107B  0008               	return
  4127  107C                     __end_of_getPowerFault_AD:	
  4128                           
  4129                           	psect	text3
  4130  1B89                     __ptext3:	
  4131 ;; *************** function _getAD *****************
  4132 ;; Defined at:
  4133 ;;		line 381 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
  4134 ;; Parameters:    Size  Location     Type
  4135 ;;  adcon0          1    wreg     unsigned char 
  4136 ;;  adcon1          1    0[BANK0 ] unsigned char 
  4137 ;; Auto vars:     Size  Location     Type
  4138 ;;  adcon0          1    3[BANK0 ] unsigned char 
  4139 ;; Return value:  Size  Location     Type
  4140 ;;                  2    0[BANK0 ] int 
  4141 ;; Registers used:
  4142 ;;		wreg, status,2, status,0
  4143 ;; Tracked objects:
  4144 ;;		On entry : 0/0
  4145 ;;		On exit  : 0/0
  4146 ;;		Unchanged: 0/0
  4147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4148 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4149 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4151 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4152 ;;Total ram usage:        4 bytes
  4153 ;; Hardware stack levels used:    1
  4154 ;; Hardware stack levels required when called:    4
  4155 ;; This function calls:
  4156 ;;		Nothing
  4157 ;; This function is called by:
  4158 ;;		_getTemp_AD
  4159 ;;		_getPowerFault_AD
  4160 ;; This function uses a non-reentrant model
  4161 ;;
  4162                           
  4163                           
  4164                           ;psect for function _getAD
  4165  1B89                     _getAD:	
  4166                           
  4167                           ;incstack = 0
  4168                           ; Regs used in _getAD: [wreg+status,2+status,0]
  4169                           ;getAD@adcon0 stored from wreg
  4170  1B89  0020               	movlb	0	; select bank0
  4171  1B8A  00A3               	movwf	getAD@adcon0
  4172                           
  4173                           ;MCU_B1.c: 383: ADCON0=adcon0;
  4174  1B8B  0823               	movf	getAD@adcon0,w
  4175  1B8C  0021               	movlb	1	; select bank1
  4176  1B8D  009D               	movwf	29	;volatile
  4177                           
  4178                           ;MCU_B1.c: 384: ADCON1=adcon1;
  4179  1B8E  0020               	movlb	0	; select bank0
  4180  1B8F  0820               	movf	getAD@adcon1,w
  4181  1B90  0021               	movlb	1	; select bank1
  4182  1B91  009E               	movwf	30	;volatile
  4183                           
  4184                           ;MCU_B1.c: 385: GO_nDONE=1;
  4185  1B92  149D               	bsf	29,1	;volatile
  4186  1B93                     l1679:	
  4187                           ;MCU_B1.c: 386: while(GO_nDONE);
  4188                           
  4189  1B93  189D               	btfsc	29,1	;volatile
  4190  1B94  2B93               	goto	l1679
  4191                           
  4192                           ;MCU_B1.c: 387: return ((ADRESH*256)+ADRESL);
  4193  1B95  081C               	movf	28,w	;volatile
  4194  1B96  0020               	movlb	0	; select bank0
  4195  1B97  01A1               	clrf	?_getAD+1
  4196  1B98  07A1               	addwf	?_getAD+1,f
  4197  1B99  0021               	movlb	1	; select bank1
  4198  1B9A  081B               	movf	27,w	;volatile
  4199  1B9B  0020               	movlb	0	; select bank0
  4200  1B9C  01A0               	clrf	?_getAD
  4201  1B9D  07A0               	addwf	?_getAD,f
  4202  1B9E  0008               	return
  4203  1B9F                     __end_of_getAD:	
  4204                           
  4205                           	psect	text4
  4206  18FB                     __ptext4:	
  4207 ;; *************** function _Temp_Main *****************
  4208 ;; Defined at:
  4209 ;;		line 57 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\OverTemperature_B1.c"
  4210 ;; Parameters:    Size  Location     Type
  4211 ;;		None
  4212 ;; Auto vars:     Size  Location     Type
  4213 ;;		None
  4214 ;; Return value:  Size  Location     Type
  4215 ;;		None               void
  4216 ;; Registers used:
  4217 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4218 ;; Tracked objects:
  4219 ;;		On entry : 0/0
  4220 ;;		On exit  : 0/0
  4221 ;;		Unchanged: 0/0
  4222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4223 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4224 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4226 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4227 ;;Total ram usage:        0 bytes
  4228 ;; Hardware stack levels used:    1
  4229 ;; Hardware stack levels required when called:   10
  4230 ;; This function calls:
  4231 ;;		_setTemp_Main
  4232 ;; This function is called by:
  4233 ;;		_main
  4234 ;; This function uses a non-reentrant model
  4235 ;;
  4236                           
  4237                           
  4238                           ;psect for function _Temp_Main
  4239  18FB                     _Temp_Main:	
  4240                           
  4241                           ;OverTemperature_B1.c: 60: setTemp_Main();
  4242                           
  4243                           ;incstack = 0
  4244                           ; Regs used in _Temp_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4245  18FB  3184  24F7         	fcall	_setTemp_Main
  4246  18FD  0008               	return
  4247  18FE                     __end_of_Temp_Main:	
  4248                           
  4249                           	psect	text5
  4250  04F7                     __ptext5:	
  4251 ;; *************** function _setTemp_Main *****************
  4252 ;; Defined at:
  4253 ;;		line 64 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\OverTemperature_B1.c"
  4254 ;; Parameters:    Size  Location     Type
  4255 ;;		None
  4256 ;; Auto vars:     Size  Location     Type
  4257 ;;		None
  4258 ;; Return value:  Size  Location     Type
  4259 ;;		None               void
  4260 ;; Registers used:
  4261 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4262 ;; Tracked objects:
  4263 ;;		On entry : 0/0
  4264 ;;		On exit  : 0/0
  4265 ;;		Unchanged: 0/0
  4266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4269 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4270 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4271 ;;Total ram usage:        3 bytes
  4272 ;; Hardware stack levels used:    1
  4273 ;; Hardware stack levels required when called:    9
  4274 ;; This function calls:
  4275 ;;		_getPF_Safe
  4276 ;;		_setOverTemp_Exceptions
  4277 ;; This function is called by:
  4278 ;;		_Temp_Main
  4279 ;; This function uses a non-reentrant model
  4280 ;;
  4281                           
  4282                           
  4283                           ;psect for function _setTemp_Main
  4284  04F7                     _setTemp_Main:	
  4285                           
  4286                           ;OverTemperature_B1.c: 66: if(Temp->Enable)
  4287                           
  4288                           ;incstack = 0
  4289                           ; Regs used in _setTemp_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4290  04F7  0879               	movf	_Temp,w
  4291  04F8  0086               	movwf	6
  4292  04F9  3001               	movlw	1	; select bank2/3
  4293  04FA  0087               	movwf	7
  4294  04FB  1C01               	btfss	1,0
  4295  04FC  0008               	return
  4296                           
  4297                           ;OverTemperature_B1.c: 67: {
  4298                           ;OverTemperature_B1.c: 68: if(Temp->ADtoGO == 0)
  4299  04FD  0879               	movf	_Temp,w
  4300  04FE  0086               	movwf	6
  4301  04FF  3001               	movlw	1	; select bank2/3
  4302  0500  0087               	movwf	7
  4303  0501  1901               	btfsc	1,2
  4304  0502  2D3D               	goto	l9303
  4305                           
  4306                           ;OverTemperature_B1.c: 69: {
  4307                           ;OverTemperature_B1.c: 70: Temp->Time++;
  4308  0503  0A79               	incf	_Temp,w
  4309  0504  0086               	movwf	6
  4310  0505  3001               	movlw	1	; select bank2/3
  4311  0506  0087               	movwf	7
  4312  0507  3001               	movlw	1
  4313  0508  0781               	addwf	1,f
  4314  0509  3141               	addfsr 1,1
  4315  050A  1803               	skipnc
  4316  050B  0A81               	incf	1,f
  4317                           
  4318                           ;OverTemperature_B1.c: 72: {
  4319                           ;OverTemperature_B1.c: 73: if(1 && getPF_Safe())
  4320  050C  0A79               	incf	_Temp,w
  4321  050D  0086               	movwf	6
  4322  050E  3001               	movlw	1	; select bank2/3
  4323  050F  0087               	movwf	7
  4324  0510  3F40               	moviw [0]fsr1
  4325  0511  0020               	movlb	0	; select bank0
  4326  0512  00AD               	movwf	??_setTemp_Main
  4327  0513  3F41               	moviw [1]fsr1
  4328  0514  00AE               	movwf	??_setTemp_Main+1
  4329  0515  3001               	movlw	1
  4330  0516  022E               	subwf	??_setTemp_Main+1,w
  4331  0517  30F4               	movlw	244
  4332  0518  1903               	skipnz
  4333  0519  022D               	subwf	??_setTemp_Main,w
  4334  051A  1C03               	skipc
  4335  051B  0008               	return
  4336  051C  3199  2165  3184   	fcall	_getPF_Safe
  4337  051F  3A00               	xorlw	0
  4338  0520  1903               	skipnz
  4339  0521  2D34               	goto	l9301
  4340                           
  4341                           ;OverTemperature_B1.c: 74: {
  4342                           ;OverTemperature_B1.c: 75: Temp->Time=0;
  4343  0522  0A79               	incf	_Temp,w
  4344  0523  0086               	movwf	6
  4345  0524  3001               	movlw	1	; select bank2/3
  4346  0525  0087               	movwf	7
  4347  0526  3000               	movlw	0
  4348  0527  3FC0               	movwi [0]fsr1
  4349  0528  3FC1               	movwi [1]fsr1
  4350                           
  4351                           ;OverTemperature_B1.c: 76: Temp->ADtoGO=1;
  4352  0529  0879               	movf	_Temp,w
  4353  052A  0086               	movwf	6
  4354  052B  3001               	movlw	1	; select bank2/3
  4355  052C  0087               	movwf	7
  4356  052D  1501               	bsf	1,2
  4357                           
  4358                           ;OverTemperature_B1.c: 77: Temp->Safe=0;
  4359  052E  0879               	movf	_Temp,w
  4360  052F  0086               	movwf	6
  4361  0530  3001               	movlw	1	; select bank2/3
  4362  0531  0087               	movwf	7
  4363  0532  1201               	bcf	1,4
  4364                           
  4365                           ;OverTemperature_B1.c: 78: }
  4366  0533  0008               	return
  4367  0534                     l9301:	
  4368                           
  4369                           ;OverTemperature_B1.c: 79: else
  4370                           ;OverTemperature_B1.c: 80: {
  4371                           ;OverTemperature_B1.c: 81: Temp->Time=1000;
  4372  0534  0A79               	incf	_Temp,w
  4373  0535  0086               	movwf	6
  4374  0536  3001               	movlw	1	; select bank2/3
  4375  0537  0087               	movwf	7
  4376  0538  30E8               	movlw	232
  4377  0539  3FC0               	movwi [0]fsr1
  4378  053A  3003               	movlw	3
  4379  053B  3FC1               	movwi [1]fsr1
  4380                           
  4381                           ;OverTemperature_B1.c: 82: }
  4382                           ;OverTemperature_B1.c: 83: }
  4383                           ;OverTemperature_B1.c: 84: }
  4384  053C  0008               	return
  4385  053D                     l9303:	
  4386                           
  4387                           ;OverTemperature_B1.c: 85: else
  4388                           ;OverTemperature_B1.c: 86: {
  4389                           ;OverTemperature_B1.c: 87: Temp->Time++;
  4390  053D  0A79               	incf	_Temp,w
  4391  053E  0086               	movwf	6
  4392  053F  3001               	movlw	1	; select bank2/3
  4393  0540  0087               	movwf	7
  4394  0541  3001               	movlw	1
  4395  0542  0781               	addwf	1,f
  4396  0543  3141               	addfsr 1,1
  4397  0544  1803               	skipnc
  4398  0545  0A81               	incf	1,f
  4399                           
  4400                           ;OverTemperature_B1.c: 88: if(Temp->Time >= 4)
  4401  0546  0A79               	incf	_Temp,w
  4402  0547  0086               	movwf	6
  4403  0548  3001               	movlw	1	; select bank2/3
  4404  0549  0087               	movwf	7
  4405  054A  3F40               	moviw [0]fsr1
  4406  054B  0020               	movlb	0	; select bank0
  4407  054C  00AD               	movwf	??_setTemp_Main
  4408  054D  3F41               	moviw [1]fsr1
  4409  054E  00AE               	movwf	??_setTemp_Main+1
  4410  054F  3000               	movlw	0
  4411  0550  022E               	subwf	??_setTemp_Main+1,w
  4412  0551  3004               	movlw	4
  4413  0552  1903               	skipnz
  4414  0553  022D               	subwf	??_setTemp_Main,w
  4415  0554  1C03               	skipc
  4416  0555  0008               	return
  4417                           
  4418                           ;OverTemperature_B1.c: 89: {
  4419                           ;OverTemperature_B1.c: 90: Temp->Time=0;
  4420  0556  0A79               	incf	_Temp,w
  4421  0557  0086               	movwf	6
  4422  0558  3001               	movlw	1	; select bank2/3
  4423  0559  0087               	movwf	7
  4424  055A  3000               	movlw	0
  4425  055B  3FC0               	movwi [0]fsr1
  4426  055C  3FC1               	movwi [1]fsr1
  4427                           
  4428                           ;OverTemperature_B1.c: 91: Temp->ADtoGO=0;
  4429  055D  0879               	movf	_Temp,w
  4430  055E  0086               	movwf	6
  4431  055F  3001               	movlw	1	; select bank2/3
  4432  0560  0087               	movwf	7
  4433  0561  1101               	bcf	1,2
  4434                           
  4435                           ;OverTemperature_B1.c: 92: Temp->AD=Temp->ADH[1];
  4436  0562  0879               	movf	_Temp,w
  4437  0563  3E08               	addlw	8
  4438  0564  0086               	movwf	6
  4439  0565  3001               	movlw	1	; select bank2/3
  4440  0566  0087               	movwf	7
  4441  0567  0879               	movf	_Temp,w
  4442  0568  3E04               	addlw	4
  4443  0569  0084               	movwf	4
  4444  056A  3001               	movlw	1	; select bank2/3
  4445  056B  0085               	movwf	5
  4446  056C  3F40               	moviw [0]fsr1
  4447  056D  3F80               	movwi [0]fsr0
  4448  056E  3F41               	moviw [1]fsr1
  4449  056F  3F81               	movwi [1]fsr0
  4450                           
  4451                           ;OverTemperature_B1.c: 93: if(Temp->ERROR)
  4452  0570  0879               	movf	_Temp,w
  4453  0571  0086               	movwf	6
  4454  0572  3001               	movlw	1	; select bank2/3
  4455  0573  0087               	movwf	7
  4456  0574  1C81               	btfss	1,1
  4457  0575  2DA3               	goto	l9325
  4458                           
  4459                           ;OverTemperature_B1.c: 94: {
  4460                           ;OverTemperature_B1.c: 95: if(Temp->AD >= 600)
  4461  0576  0879               	movf	_Temp,w
  4462  0577  3E04               	addlw	4
  4463  0578  0086               	movwf	6
  4464  0579  3001               	movlw	1	; select bank2/3
  4465  057A  0087               	movwf	7
  4466  057B  3F40               	moviw [0]fsr1
  4467  057C  00AD               	movwf	??_setTemp_Main
  4468  057D  3F41               	moviw [1]fsr1
  4469  057E  00AE               	movwf	??_setTemp_Main+1
  4470  057F  3002               	movlw	2
  4471  0580  022E               	subwf	??_setTemp_Main+1,w
  4472  0581  3058               	movlw	88
  4473  0582  1903               	skipnz
  4474  0583  022D               	subwf	??_setTemp_Main,w
  4475  0584  1C03               	skipc
  4476  0585  2DD1               	goto	l9335
  4477                           
  4478                           ;OverTemperature_B1.c: 96: {
  4479                           ;OverTemperature_B1.c: 97: Temp->Count++;
  4480  0586  3001               	movlw	1
  4481  0587  00AD               	movwf	??_setTemp_Main
  4482  0588  0879               	movf	_Temp,w
  4483  0589  3E03               	addlw	3
  4484  058A  0086               	movwf	6
  4485  058B  3001               	movlw	1	; select bank2/3
  4486  058C  0087               	movwf	7
  4487  058D  082D               	movf	??_setTemp_Main,w
  4488  058E  0781               	addwf	1,f
  4489                           
  4490                           ;OverTemperature_B1.c: 98: if(Temp->Count >= 3)
  4491  058F  0879               	movf	_Temp,w
  4492  0590  3E03               	addlw	3
  4493  0591  0086               	movwf	6
  4494  0592  3001               	movlw	1	; select bank2/3
  4495  0593  0087               	movwf	7
  4496  0594  3003               	movlw	3
  4497  0595  0201               	subwf	1,w
  4498  0596  1C03               	skipc
  4499  0597  2DD7               	goto	l9337
  4500                           
  4501                           ;OverTemperature_B1.c: 99: {
  4502                           ;OverTemperature_B1.c: 100: Temp->Count=0;
  4503  0598  0879               	movf	_Temp,w
  4504  0599  3E03               	addlw	3
  4505  059A  0086               	movwf	6
  4506  059B  3001               	movlw	1	; select bank2/3
  4507  059C  0087               	movwf	7
  4508  059D  0181               	clrf	1
  4509                           
  4510                           ;OverTemperature_B1.c: 101: setOverTemp_Exceptions(0);
  4511  059E  3000               	movlw	0
  4512  059F  3190  20BE  3184   	fcall	_setOverTemp_Exceptions
  4513                           
  4514                           ;OverTemperature_B1.c: 102: }
  4515                           ;OverTemperature_B1.c: 103: }
  4516  05A2  2DD7               	goto	l9337
  4517  05A3                     l9325:	
  4518                           ;OverTemperature_B1.c: 107: }
  4519                           ;OverTemperature_B1.c: 108: }
  4520                           
  4521                           ;OverTemperature_B1.c: 104: else
  4522                           ;OverTemperature_B1.c: 105: {
  4523                           ;OverTemperature_B1.c: 106: Temp->Count=0;
  4524                           
  4525                           
  4526                           ;OverTemperature_B1.c: 109: else
  4527                           ;OverTemperature_B1.c: 110: {
  4528                           ;OverTemperature_B1.c: 111: if(Temp->AD <= 550)
  4529  05A3  0879               	movf	_Temp,w
  4530  05A4  3E04               	addlw	4
  4531  05A5  0086               	movwf	6
  4532  05A6  3001               	movlw	1	; select bank2/3
  4533  05A7  0087               	movwf	7
  4534  05A8  3F40               	moviw [0]fsr1
  4535  05A9  0020               	movlb	0	; select bank0
  4536  05AA  00AD               	movwf	??_setTemp_Main
  4537  05AB  3F41               	moviw [1]fsr1
  4538  05AC  00AE               	movwf	??_setTemp_Main+1
  4539  05AD  3002               	movlw	2
  4540  05AE  022E               	subwf	??_setTemp_Main+1,w
  4541  05AF  3027               	movlw	39
  4542  05B0  1903               	skipnz
  4543  05B1  022D               	subwf	??_setTemp_Main,w
  4544  05B2  1803               	skipnc
  4545  05B3  2DD1               	goto	l9335
  4546                           
  4547                           ;OverTemperature_B1.c: 112: {
  4548                           ;OverTemperature_B1.c: 113: Temp->Count++;
  4549  05B4  3001               	movlw	1
  4550  05B5  00AD               	movwf	??_setTemp_Main
  4551  05B6  0879               	movf	_Temp,w
  4552  05B7  3E03               	addlw	3
  4553  05B8  0086               	movwf	6
  4554  05B9  3001               	movlw	1	; select bank2/3
  4555  05BA  0087               	movwf	7
  4556  05BB  082D               	movf	??_setTemp_Main,w
  4557  05BC  0781               	addwf	1,f
  4558                           
  4559                           ;OverTemperature_B1.c: 114: if(Temp->Count >= 3)
  4560  05BD  0879               	movf	_Temp,w
  4561  05BE  3E03               	addlw	3
  4562  05BF  0086               	movwf	6
  4563  05C0  3001               	movlw	1	; select bank2/3
  4564  05C1  0087               	movwf	7
  4565  05C2  3003               	movlw	3
  4566  05C3  0201               	subwf	1,w
  4567  05C4  1C03               	skipc
  4568  05C5  2DD7               	goto	l9337
  4569                           
  4570                           ;OverTemperature_B1.c: 115: {
  4571                           ;OverTemperature_B1.c: 116: Temp->Count=0;
  4572  05C6  0879               	movf	_Temp,w
  4573  05C7  3E03               	addlw	3
  4574  05C8  0086               	movwf	6
  4575  05C9  3001               	movlw	1	; select bank2/3
  4576  05CA  0087               	movwf	7
  4577  05CB  0181               	clrf	1
  4578                           
  4579                           ;OverTemperature_B1.c: 117: setOverTemp_Exceptions(1);
  4580  05CC  3001               	movlw	1
  4581  05CD  3190  20BE  3184   	fcall	_setOverTemp_Exceptions
  4582                           
  4583                           ;OverTemperature_B1.c: 118: }
  4584                           ;OverTemperature_B1.c: 119: }
  4585  05D0  2DD7               	goto	l9337
  4586  05D1                     l9335:	
  4587                           
  4588                           ;OverTemperature_B1.c: 120: else
  4589                           ;OverTemperature_B1.c: 121: {
  4590                           ;OverTemperature_B1.c: 122: Temp->Count=0;
  4591  05D1  0879               	movf	_Temp,w
  4592  05D2  3E03               	addlw	3
  4593  05D3  0086               	movwf	6
  4594  05D4  3001               	movlw	1	; select bank2/3
  4595  05D5  0087               	movwf	7
  4596  05D6  0181               	clrf	1
  4597  05D7                     l9337:	
  4598                           
  4599                           ;OverTemperature_B1.c: 123: }
  4600                           ;OverTemperature_B1.c: 124: }
  4601                           ;OverTemperature_B1.c: 125: if(Temp->ERROR == 0)
  4602  05D7  0879               	movf	_Temp,w
  4603  05D8  0086               	movwf	6
  4604  05D9  3001               	movlw	1	; select bank2/3
  4605  05DA  0087               	movwf	7
  4606  05DB  1881               	btfsc	1,1
  4607  05DC  2DE2               	goto	l9341
  4608                           
  4609                           ;OverTemperature_B1.c: 126: {
  4610                           ;OverTemperature_B1.c: 127: Temp->Safe=1;
  4611  05DD  0879               	movf	_Temp,w
  4612  05DE  0086               	movwf	6
  4613  05DF  3001               	movlw	1	; select bank2/3
  4614  05E0  0087               	movwf	7
  4615  05E1  1601               	bsf	1,4
  4616  05E2                     l9341:	
  4617                           
  4618                           ;OverTemperature_B1.c: 128: }
  4619                           ;OverTemperature_B1.c: 129: Product->Data[24]=Temp->AD >> 8;
  4620  05E2  0879               	movf	_Temp,w
  4621  05E3  3E04               	addlw	4
  4622  05E4  0086               	movwf	6
  4623  05E5  3001               	movlw	1	; select bank2/3
  4624  05E6  0087               	movwf	7
  4625  05E7  3F40               	moviw [0]fsr1
  4626  05E8  0020               	movlb	0	; select bank0
  4627  05E9  00AD               	movwf	??_setTemp_Main
  4628  05EA  3F41               	moviw [1]fsr1
  4629  05EB  00AE               	movwf	??_setTemp_Main+1
  4630  05EC  082E               	movf	??_setTemp_Main+1,w
  4631  05ED  00AF               	movwf	??_setTemp_Main+2
  4632  05EE  086E               	movf	_Product,w
  4633  05EF  3E18               	addlw	24
  4634  05F0  0086               	movwf	6
  4635  05F1  3001               	movlw	1	; select bank2/3
  4636  05F2  0087               	movwf	7
  4637  05F3  082F               	movf	??_setTemp_Main+2,w
  4638  05F4  0081               	movwf	1
  4639                           
  4640                           ;OverTemperature_B1.c: 130: Product->Data[25]=Temp->AD;
  4641  05F5  0879               	movf	_Temp,w
  4642  05F6  3E04               	addlw	4
  4643  05F7  0086               	movwf	6
  4644  05F8  3001               	movlw	1	; select bank2/3
  4645  05F9  0087               	movwf	7
  4646  05FA  0801               	movf	1,w
  4647  05FB  00AD               	movwf	??_setTemp_Main
  4648  05FC  086E               	movf	_Product,w
  4649  05FD  3E19               	addlw	25
  4650  05FE  0086               	movwf	6
  4651  05FF  3001               	movlw	1	; select bank2/3
  4652  0600  0087               	movwf	7
  4653  0601  082D               	movf	??_setTemp_Main,w
  4654  0602  0081               	movwf	1
  4655                           
  4656                           ;OverTemperature_B1.c: 131: Temp->ADH[0]=0;
  4657  0603  0879               	movf	_Temp,w
  4658  0604  3E06               	addlw	6
  4659  0605  0086               	movwf	6
  4660  0606  3001               	movlw	1	; select bank2/3
  4661  0607  0087               	movwf	7
  4662  0608  3000               	movlw	0
  4663  0609  3FC0               	movwi [0]fsr1
  4664  060A  3FC1               	movwi [1]fsr1
  4665                           
  4666                           ;OverTemperature_B1.c: 132: Temp->ADH[1]=0;
  4667  060B  0879               	movf	_Temp,w
  4668  060C  3E08               	addlw	8
  4669  060D  0086               	movwf	6
  4670  060E  3001               	movlw	1	; select bank2/3
  4671  060F  0087               	movwf	7
  4672  0610  3000               	movlw	0
  4673  0611  3FC0               	movwi [0]fsr1
  4674  0612  3FC1               	movwi [1]fsr1
  4675  0613  0008               	return
  4676  0614                     __end_of_setTemp_Main:	
  4677                           
  4678                           	psect	text6
  4679  10BE                     __ptext6:	
  4680 ;; *************** function _setOverTemp_Exceptions *****************
  4681 ;; Defined at:
  4682 ;;		line 138 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\OverTemperature_B1.c"
  4683 ;; Parameters:    Size  Location     Type
  4684 ;;  command         1    wreg     unsigned char 
  4685 ;; Auto vars:     Size  Location     Type
  4686 ;;  command         1   12[BANK0 ] unsigned char 
  4687 ;; Return value:  Size  Location     Type
  4688 ;;		None               void
  4689 ;; Registers used:
  4690 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4691 ;; Tracked objects:
  4692 ;;		On entry : 0/0
  4693 ;;		On exit  : 0/0
  4694 ;;		Unchanged: 0/0
  4695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4697 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4698 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4699 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4700 ;;Total ram usage:        2 bytes
  4701 ;; Hardware stack levels used:    1
  4702 ;; Hardware stack levels required when called:    8
  4703 ;; This function calls:
  4704 ;;		_DimmerLights_Exceptions
  4705 ;;		_setBuz
  4706 ;;		_setLED
  4707 ;;		_setRF_Enable
  4708 ;;		_setSw_Enable
  4709 ;; This function is called by:
  4710 ;;		_setTemp_Main
  4711 ;; This function uses a non-reentrant model
  4712 ;;
  4713                           
  4714                           
  4715                           ;psect for function _setOverTemp_Exceptions
  4716  10BE                     _setOverTemp_Exceptions:	
  4717                           
  4718                           ;incstack = 0
  4719                           ; Regs used in _setOverTemp_Exceptions: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
  4720                           ;setOverTemp_Exceptions@command stored from wreg
  4721  10BE  0020               	movlb	0	; select bank0
  4722  10BF  00AC               	movwf	setOverTemp_Exceptions@command
  4723                           
  4724                           ;OverTemperature_B1.c: 140: Temp->ERROR=command;
  4725  10C0  0879               	movf	_Temp,w
  4726  10C1  0086               	movwf	6
  4727  10C2  3001               	movlw	1	; select bank2/3
  4728  10C3  0087               	movwf	7
  4729  10C4  082C               	movf	setOverTemp_Exceptions@command,w
  4730  10C5  1081               	bcf	1,1
  4731  10C6  1D03               	skipz
  4732  10C7  1481               	bsf	1,1
  4733                           
  4734                           ;OverTemperature_B1.c: 141: Temp->Safe=(~command) & 0x01;
  4735  10C8  092C               	comf	setOverTemp_Exceptions@command,w
  4736  10C9  3901               	andlw	1
  4737  10CA  00AB               	movwf	??_setOverTemp_Exceptions
  4738  10CB  0879               	movf	_Temp,w
  4739  10CC  0086               	movwf	6
  4740  10CD  3001               	movlw	1	; select bank2/3
  4741  10CE  0087               	movwf	7
  4742  10CF  0EAB               	swapf	??_setOverTemp_Exceptions,f
  4743  10D0  0801               	movf	1,w
  4744  10D1  062B               	xorwf	??_setOverTemp_Exceptions,w
  4745  10D2  39EF               	andlw	-17
  4746  10D3  062B               	xorwf	??_setOverTemp_Exceptions,w
  4747  10D4  0081               	movwf	1
  4748                           
  4749                           ;OverTemperature_B1.c: 142: if(command)
  4750  10D5  082C               	movf	setOverTemp_Exceptions@command,w
  4751  10D6  1903               	btfsc	3,2
  4752  10D7  28DD               	goto	l8883
  4753                           
  4754                           ;OverTemperature_B1.c: 143: {
  4755                           ;OverTemperature_B1.c: 144: DimmerLights_Exceptions(1);
  4756  10D8  3001               	movlw	1
  4757  10D9  3194  2493  3190   	fcall	_DimmerLights_Exceptions
  4758                           
  4759                           ;OverTemperature_B1.c: 148: }
  4760  10DC  28E6               	goto	l2011
  4761  10DD                     l8883:	
  4762                           
  4763                           ;OverTemperature_B1.c: 149: else
  4764                           ;OverTemperature_B1.c: 150: {
  4765                           ;OverTemperature_B1.c: 151: setBuz(2,100);
  4766  10DD  3064               	movlw	100
  4767  10DE  0020               	movlb	0	; select bank0
  4768  10DF  00A6               	movwf	setBuz@time
  4769  10E0  3000               	movlw	0
  4770  10E1  00A7               	movwf	setBuz@time+1
  4771  10E2  3002               	movlw	2
  4772  10E3  3197  2789  3190   	fcall	_setBuz
  4773  10E6                     l2011:	
  4774                           
  4775                           ;OverTemperature_B1.c: 152: }
  4776                           ;OverTemperature_B1.c: 155: setLED(99,command+10);
  4777  10E6  0020               	movlb	0	; select bank0
  4778  10E7  082C               	movf	setOverTemp_Exceptions@command,w
  4779  10E8  3E0A               	addlw	10
  4780  10E9  00AB               	movwf	??_setOverTemp_Exceptions
  4781  10EA  082B               	movf	??_setOverTemp_Exceptions,w
  4782  10EB  00A2               	movwf	setLED@command
  4783  10EC  3063               	movlw	99
  4784  10ED  3193  236C  3190   	fcall	_setLED
  4785                           
  4786                           ;OverTemperature_B1.c: 157: setSw_Enable((~command) & 0x01);
  4787  10F0  0020               	movlb	0	; select bank0
  4788  10F1  092C               	comf	setOverTemp_Exceptions@command,w
  4789  10F2  3901               	andlw	1
  4790  10F3  319C  2466  3190   	fcall	_setSw_Enable
  4791                           
  4792                           ;OverTemperature_B1.c: 159: setRF_Enable(1,(~command) & 0x01);
  4793  10F6  0020               	movlb	0	; select bank0
  4794  10F7  092C               	comf	setOverTemp_Exceptions@command,w
  4795  10F8  3901               	andlw	1
  4796  10F9  00AB               	movwf	??_setOverTemp_Exceptions
  4797  10FA  082B               	movf	??_setOverTemp_Exceptions,w
  4798  10FB  00A2               	movwf	setRF_Enable@command
  4799  10FC  3001               	movlw	1
  4800  10FD  319D  25FF         	fcall	_setRF_Enable
  4801  10FF  0008               	return
  4802  1100                     __end_of_setOverTemp_Exceptions:	
  4803                           
  4804                           	psect	text7
  4805  1965                     __ptext7:	
  4806 ;; *************** function _getPF_Safe *****************
  4807 ;; Defined at:
  4808 ;;		line 40 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\PowerFault_B1.c"
  4809 ;; Parameters:    Size  Location     Type
  4810 ;;		None
  4811 ;; Auto vars:     Size  Location     Type
  4812 ;;		None
  4813 ;; Return value:  Size  Location     Type
  4814 ;;                  1    wreg      unsigned char 
  4815 ;; Registers used:
  4816 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4817 ;; Tracked objects:
  4818 ;;		On entry : 0/0
  4819 ;;		On exit  : 0/0
  4820 ;;		Unchanged: 0/0
  4821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4822 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4823 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4825 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4826 ;;Total ram usage:        0 bytes
  4827 ;; Hardware stack levels used:    1
  4828 ;; Hardware stack levels required when called:    4
  4829 ;; This function calls:
  4830 ;;		Nothing
  4831 ;; This function is called by:
  4832 ;;		_setTemp_Main
  4833 ;; This function uses a non-reentrant model
  4834 ;;
  4835                           
  4836                           
  4837                           ;psect for function _getPF_Safe
  4838  1965                     _getPF_Safe:	
  4839                           
  4840                           ;PowerFault_B1.c: 42: return PF->Safe;
  4841                           
  4842                           ;incstack = 0
  4843                           ; Regs used in _getPF_Safe: [wreg+fsr1l+fsr1h+status,2+status,0]
  4844  1965  0876               	movf	_PF,w
  4845  1966  0086               	movwf	6
  4846  1967  3001               	movlw	1	; select bank2/3
  4847  1968  0087               	movwf	7
  4848  1969  0C01               	rrf	1,w
  4849  196A  0C89               	rrf	9,f
  4850  196B  3901               	andlw	1
  4851  196C  0008               	return
  4852  196D                     __end_of_getPF_Safe:	
  4853                           
  4854                           	psect	text8
  4855  18F8                     __ptext8:	
  4856 ;; *************** function _Temp_Initialization *****************
  4857 ;; Defined at:
  4858 ;;		line 15 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\OverTemperature_B1.c"
  4859 ;; Parameters:    Size  Location     Type
  4860 ;;		None
  4861 ;; Auto vars:     Size  Location     Type
  4862 ;;		None
  4863 ;; Return value:  Size  Location     Type
  4864 ;;		None               void
  4865 ;; Registers used:
  4866 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4867 ;; Tracked objects:
  4868 ;;		On entry : 0/0
  4869 ;;		On exit  : 0/0
  4870 ;;		Unchanged: 0/0
  4871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4875 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4876 ;;Total ram usage:        0 bytes
  4877 ;; Hardware stack levels used:    1
  4878 ;; Hardware stack levels required when called:    5
  4879 ;; This function calls:
  4880 ;;		_setTemp_Initialization
  4881 ;; This function is called by:
  4882 ;;		_main
  4883 ;; This function uses a non-reentrant model
  4884 ;;
  4885                           
  4886                           
  4887                           ;psect for function _Temp_Initialization
  4888  18F8                     _Temp_Initialization:	
  4889                           
  4890                           ;OverTemperature_B1.c: 18: setTemp_Initialization();
  4891                           
  4892                           ;incstack = 0
  4893                           ; Regs used in _Temp_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4894  18F8  3199  21C0         	fcall	_setTemp_Initialization
  4895  18FA  0008               	return
  4896  18FB                     __end_of_Temp_Initialization:	
  4897                           
  4898                           	psect	text9
  4899  19C0                     __ptext9:	
  4900 ;; *************** function _setTemp_Initialization *****************
  4901 ;; Defined at:
  4902 ;;		line 51 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\OverTemperature_B1.c"
  4903 ;; Parameters:    Size  Location     Type
  4904 ;;		None
  4905 ;; Auto vars:     Size  Location     Type
  4906 ;;		None
  4907 ;; Return value:  Size  Location     Type
  4908 ;;		None               void
  4909 ;; Registers used:
  4910 ;;		wreg, fsr1l, fsr1h
  4911 ;; Tracked objects:
  4912 ;;		On entry : 0/0
  4913 ;;		On exit  : 0/0
  4914 ;;		Unchanged: 0/0
  4915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4916 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4917 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4918 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4919 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4920 ;;Total ram usage:        1 bytes
  4921 ;; Hardware stack levels used:    1
  4922 ;; Hardware stack levels required when called:    4
  4923 ;; This function calls:
  4924 ;;		Nothing
  4925 ;; This function is called by:
  4926 ;;		_Temp_Initialization
  4927 ;; This function uses a non-reentrant model
  4928 ;;
  4929                           
  4930                           
  4931                           ;psect for function _setTemp_Initialization
  4932  19C0                     _setTemp_Initialization:	
  4933                           
  4934                           ;OverTemperature_B1.c: 53: Temp=&Temp1;
  4935                           
  4936                           ;incstack = 0
  4937                           ; Regs used in _setTemp_Initialization: [wregfsr1]
  4938  19C0  303C               	movlw	_Temp1& (0+255)
  4939  19C1  0020               	movlb	0	; select bank0
  4940  19C2  00A0               	movwf	??_setTemp_Initialization
  4941  19C3  0820               	movf	??_setTemp_Initialization,w
  4942  19C4  00F9               	movwf	_Temp
  4943                           
  4944                           ;OverTemperature_B1.c: 54: Temp->Safe=1;
  4945  19C5  0879               	movf	_Temp,w
  4946  19C6  0086               	movwf	6
  4947  19C7  3001               	movlw	1	; select bank2/3
  4948  19C8  0087               	movwf	7
  4949  19C9  1601               	bsf	1,4
  4950  19CA  0008               	return
  4951  19CB                     __end_of_setTemp_Initialization:	
  4952                           
  4953                           	psect	text10
  4954  195D                     __ptext10:	
  4955 ;; *************** function _Switch_Main *****************
  4956 ;; Defined at:
  4957 ;;		line 62 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Switch_B1.c"
  4958 ;; Parameters:    Size  Location     Type
  4959 ;;		None
  4960 ;; Auto vars:     Size  Location     Type
  4961 ;;		None
  4962 ;; Return value:  Size  Location     Type
  4963 ;;		None               void
  4964 ;; Registers used:
  4965 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4966 ;; Tracked objects:
  4967 ;;		On entry : 0/0
  4968 ;;		On exit  : 0/0
  4969 ;;		Unchanged: 0/0
  4970 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4974 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4975 ;;Total ram usage:        0 bytes
  4976 ;; Hardware stack levels used:    1
  4977 ;; Hardware stack levels required when called:   10
  4978 ;; This function calls:
  4979 ;;		_setSw_Main
  4980 ;; This function is called by:
  4981 ;;		_main
  4982 ;; This function uses a non-reentrant model
  4983 ;;
  4984                           
  4985                           
  4986                           ;psect for function _Switch_Main
  4987  195D                     _Switch_Main:	
  4988                           
  4989                           ;Switch_B1.c: 65: setSw_Main(1);
  4990                           
  4991                           ;incstack = 0
  4992                           ; Regs used in _Switch_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4993  195D  3001               	movlw	1
  4994  195E  3183  2393  3199   	fcall	_setSw_Main
  4995                           
  4996                           ;Switch_B1.c: 69: setSw_Main(2);
  4997  1961  3002               	movlw	2
  4998  1962  3183  2393         	fcall	_setSw_Main
  4999  1964  0008               	return
  5000  1965                     __end_of_Switch_Main:	
  5001                           
  5002                           	psect	text11
  5003  0393                     __ptext11:	
  5004 ;; *************** function _setSw_Main *****************
  5005 ;; Defined at:
  5006 ;;		line 112 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Switch_B1.c"
  5007 ;; Parameters:    Size  Location     Type
  5008 ;;  sw              1    wreg     unsigned char 
  5009 ;; Auto vars:     Size  Location     Type
  5010 ;;  sw              1    2[BANK1 ] unsigned char 
  5011 ;; Return value:  Size  Location     Type
  5012 ;;		None               void
  5013 ;; Registers used:
  5014 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5015 ;; Tracked objects:
  5016 ;;		On entry : 0/0
  5017 ;;		On exit  : 0/0
  5018 ;;		Unchanged: 0/0
  5019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5020 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5021 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  5022 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5023 ;;      Totals:         0       2       3       0       0       0       0       0       0       0       0       0       
      +0       0
  5024 ;;Total ram usage:        5 bytes
  5025 ;; Hardware stack levels used:    1
  5026 ;; Hardware stack levels required when called:    9
  5027 ;; This function calls:
  5028 ;;		_SwPointSelect
  5029 ;;		_Sw_DimmerAdjFunc
  5030 ;;		_Sw_DimmerOffFunc
  5031 ;;		_Sw_DimmerOnFunc
  5032 ;;		_setBuz
  5033 ;;		_setRF_Learn
  5034 ;; This function is called by:
  5035 ;;		_Switch_Main
  5036 ;; This function uses a non-reentrant model
  5037 ;;
  5038                           
  5039                           
  5040                           ;psect for function _setSw_Main
  5041  0393                     _setSw_Main:	
  5042                           
  5043                           ;incstack = 0
  5044                           ; Regs used in _setSw_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5045                           ;setSw_Main@sw stored from wreg
  5046  0393  0021               	movlb	1	; select bank1
  5047  0394  00EC               	movwf	setSw_Main@sw^(0+128)
  5048                           
  5049                           ;Switch_B1.c: 114: if(Sw->Enable)
  5050  0395  0878               	movf	_Sw,w
  5051  0396  0086               	movwf	6
  5052  0397  3001               	movlw	1	; select bank2/3
  5053  0398  0087               	movwf	7
  5054  0399  1C01               	btfss	1,0
  5055  039A  0008               	return
  5056                           
  5057                           ;Switch_B1.c: 115: {
  5058                           ;Switch_B1.c: 116: SwPointSelect(sw);
  5059  039B  086C               	movf	setSw_Main@sw^(0+128),w
  5060  039C  319B  231F  3183   	fcall	_SwPointSelect
  5061                           
  5062                           ;Switch_B1.c: 133: if(sw == 1)
  5063  039F  0021               	movlb	1	; select bank1
  5064  03A0  086C               	movf	setSw_Main@sw^(0+128),w
  5065  03A1  3A01               	xorlw	1
  5066  03A2  1D03               	skipz
  5067  03A3  2BB3               	goto	l9487
  5068                           
  5069                           ;Switch_B1.c: 134: {
  5070                           ;Switch_B1.c: 135: Sw->Touch=(RA6 || RA4)?1:0;
  5071  03A4  01EA               	clrf	_setSw_Main$4153^(0+128)
  5072  03A5  0AEA               	incf	_setSw_Main$4153^(0+128),f
  5073  03A6  0020               	movlb	0	; select bank0
  5074  03A7  1F0C               	btfss	12,6	;volatile
  5075  03A8  1A0C               	btfsc	12,4	;volatile
  5076  03A9  2BAC               	goto	l9485
  5077  03AA  0021               	movlb	1	; select bank1
  5078  03AB  01EA               	clrf	_setSw_Main$4153^(0+128)
  5079  03AC                     l9485:	
  5080  03AC  0878               	movf	_Sw,w
  5081  03AD  0086               	movwf	6
  5082  03AE  3001               	movlw	1	; select bank2/3
  5083  03AF  0087               	movwf	7
  5084  03B0  0021               	movlb	1	; select bank1
  5085  03B1  086A               	movf	_setSw_Main$4153^(0+128),w
  5086  03B2  2BC5               	goto	L1
  5087  03B3                     l9487:	
  5088                           ;Switch_B1.c: 136: }
  5089                           
  5090                           
  5091                           ;Switch_B1.c: 137: else if(sw == 2)
  5092  03B3  086C               	movf	setSw_Main@sw^(0+128),w
  5093  03B4  3A02               	xorlw	2
  5094  03B5  1D03               	skipz
  5095  03B6  2BC8               	goto	l9497
  5096                           
  5097                           ;Switch_B1.c: 138: {
  5098                           ;Switch_B1.c: 139: Sw->Touch=(RA0 || RB1)?1:0;
  5099  03B7  01EB               	clrf	_setSw_Main$4154^(0+128)
  5100  03B8  0AEB               	incf	_setSw_Main$4154^(0+128),f
  5101  03B9  0020               	movlb	0	; select bank0
  5102  03BA  1C0C               	btfss	12,0	;volatile
  5103  03BB  188D               	btfsc	13,1	;volatile
  5104  03BC  2BBF               	goto	l9495
  5105  03BD  0021               	movlb	1	; select bank1
  5106  03BE  01EB               	clrf	_setSw_Main$4154^(0+128)
  5107  03BF                     l9495:	
  5108  03BF  0878               	movf	_Sw,w
  5109  03C0  0086               	movwf	6
  5110  03C1  3001               	movlw	1	; select bank2/3
  5111  03C2  0087               	movwf	7
  5112  03C3  0021               	movlb	1	; select bank1
  5113  03C4  086B               	movf	_setSw_Main$4154^(0+128),w
  5114  03C5                     L1:	
  5115  03C5  1081               	bcf	1,1
  5116  03C6  1D03               	skipz
  5117  03C7  1481               	bsf	1,1
  5118  03C8                     l9497:	
  5119                           
  5120                           ;Switch_B1.c: 140: }
  5121                           ;Switch_B1.c: 148: if(Sw->Touch)
  5122  03C8  0878               	movf	_Sw,w
  5123  03C9  0086               	movwf	6
  5124  03CA  3001               	movlw	1	; select bank2/3
  5125  03CB  0087               	movwf	7
  5126  03CC  1C81               	btfss	1,1
  5127  03CD  2CA1               	goto	l9545
  5128                           
  5129                           ;Switch_B1.c: 149: {
  5130                           ;Switch_B1.c: 150: if(!Sw->Debounce)
  5131  03CE  0878               	movf	_Sw,w
  5132  03CF  0086               	movwf	6
  5133  03D0  3001               	movlw	1	; select bank2/3
  5134  03D1  0087               	movwf	7
  5135  03D2  1901               	btfsc	1,2
  5136  03D3  2BF7               	goto	l9511
  5137                           
  5138                           ;Switch_B1.c: 151: {
  5139                           ;Switch_B1.c: 152: Sw->DebounceTime++;
  5140  03D4  3001               	movlw	1
  5141  03D5  0020               	movlb	0	; select bank0
  5142  03D6  00E5               	movwf	??_setSw_Main
  5143  03D7  0878               	movf	_Sw,w
  5144  03D8  3E02               	addlw	2
  5145  03D9  0086               	movwf	6
  5146  03DA  3001               	movlw	1	; select bank2/3
  5147  03DB  0087               	movwf	7
  5148  03DC  0865               	movf	??_setSw_Main,w
  5149  03DD  0781               	addwf	1,f
  5150                           
  5151                           ;Switch_B1.c: 153: if(Sw->DebounceTime >= 5)
  5152  03DE  0878               	movf	_Sw,w
  5153  03DF  3E02               	addlw	2
  5154  03E0  0086               	movwf	6
  5155  03E1  3001               	movlw	1	; select bank2/3
  5156  03E2  0087               	movwf	7
  5157  03E3  3005               	movlw	5
  5158  03E4  0201               	subwf	1,w
  5159  03E5  1C03               	skipc
  5160  03E6  0008               	return
  5161                           
  5162                           ;Switch_B1.c: 154: {
  5163                           ;Switch_B1.c: 155: Sw->DebounceTime=0;
  5164  03E7  0878               	movf	_Sw,w
  5165  03E8  3E02               	addlw	2
  5166  03E9  0086               	movwf	6
  5167  03EA  3001               	movlw	1	; select bank2/3
  5168  03EB  0087               	movwf	7
  5169  03EC  0181               	clrf	1
  5170                           
  5171                           ;Switch_B1.c: 156: Sw->Debounce=1;
  5172  03ED  0878               	movf	_Sw,w
  5173  03EE  0086               	movwf	6
  5174  03EF  3001               	movlw	1	; select bank2/3
  5175  03F0  0087               	movwf	7
  5176  03F1  1501               	bsf	1,2
  5177                           
  5178                           ;Switch_B1.c: 159: Sw_DimmerOnFunc(sw);
  5179  03F2  0021               	movlb	1	; select bank1
  5180  03F3  086C               	movf	setSw_Main@sw^(0+128),w
  5181  03F4  3196  2637         	fcall	_Sw_DimmerOnFunc
  5182                           
  5183                           ;Switch_B1.c: 162: }
  5184                           ;Switch_B1.c: 163: }
  5185  03F6  0008               	return
  5186  03F7                     l9511:	
  5187                           
  5188                           ;Switch_B1.c: 164: else
  5189                           ;Switch_B1.c: 165: {
  5190                           ;Switch_B1.c: 166: if(!Sw->Hold1)
  5191  03F7  0878               	movf	_Sw,w
  5192  03F8  0086               	movwf	6
  5193  03F9  3001               	movlw	1	; select bank2/3
  5194  03FA  0087               	movwf	7
  5195  03FB  1981               	btfsc	1,3
  5196  03FC  2C2A               	goto	l9521
  5197                           
  5198                           ;Switch_B1.c: 167: {
  5199                           ;Switch_B1.c: 168: Sw->Hold1Time++;
  5200  03FD  0878               	movf	_Sw,w
  5201  03FE  3E03               	addlw	3
  5202  03FF  0086               	movwf	6
  5203  0400  3001               	movlw	1	; select bank2/3
  5204  0401  0087               	movwf	7
  5205  0402  3001               	movlw	1
  5206  0403  0781               	addwf	1,f
  5207  0404  3141               	addfsr 1,1
  5208  0405  1803               	skipnc
  5209  0406  0A81               	incf	1,f
  5210                           
  5211                           ;Switch_B1.c: 169: if(Sw->Hold1Time >= 150)
  5212  0407  0878               	movf	_Sw,w
  5213  0408  3E03               	addlw	3
  5214  0409  0086               	movwf	6
  5215  040A  3001               	movlw	1	; select bank2/3
  5216  040B  0087               	movwf	7
  5217  040C  3F40               	moviw [0]fsr1
  5218  040D  0020               	movlb	0	; select bank0
  5219  040E  00E5               	movwf	??_setSw_Main
  5220  040F  3F41               	moviw [1]fsr1
  5221  0410  00E6               	movwf	??_setSw_Main+1
  5222  0411  3000               	movlw	0
  5223  0412  0266               	subwf	??_setSw_Main+1,w
  5224  0413  3096               	movlw	150
  5225  0414  1903               	skipnz
  5226  0415  0265               	subwf	??_setSw_Main,w
  5227  0416  1C03               	skipc
  5228  0417  0008               	return
  5229                           
  5230                           ;Switch_B1.c: 170: {
  5231                           ;Switch_B1.c: 171: Sw->Hold1Time=0;
  5232  0418  0878               	movf	_Sw,w
  5233  0419  3E03               	addlw	3
  5234  041A  0086               	movwf	6
  5235  041B  3001               	movlw	1	; select bank2/3
  5236  041C  0087               	movwf	7
  5237  041D  3000               	movlw	0
  5238  041E  3FC0               	movwi [0]fsr1
  5239  041F  3FC1               	movwi [1]fsr1
  5240                           
  5241                           ;Switch_B1.c: 172: Sw->Hold1=1;
  5242  0420  0878               	movf	_Sw,w
  5243  0421  0086               	movwf	6
  5244  0422  3001               	movlw	1	; select bank2/3
  5245  0423  0087               	movwf	7
  5246  0424  1581               	bsf	1,3
  5247                           
  5248                           ;Switch_B1.c: 175: Sw_DimmerAdjFunc(sw);
  5249  0425  0021               	movlb	1	; select bank1
  5250  0426  086C               	movf	setSw_Main@sw^(0+128),w
  5251  0427  3190  207C         	fcall	_Sw_DimmerAdjFunc
  5252                           
  5253                           ;Switch_B1.c: 178: }
  5254                           ;Switch_B1.c: 179: }
  5255  0429  0008               	return
  5256  042A                     l9521:	
  5257                           
  5258                           ;Switch_B1.c: 180: else
  5259                           ;Switch_B1.c: 181: {
  5260                           ;Switch_B1.c: 182: if(!Sw->Hold2)
  5261  042A  0878               	movf	_Sw,w
  5262  042B  0086               	movwf	6
  5263  042C  3001               	movlw	1	; select bank2/3
  5264  042D  0087               	movwf	7
  5265  042E  1A01               	btfsc	1,4
  5266  042F  2C6E               	goto	l9535
  5267                           
  5268                           ;Switch_B1.c: 183: {
  5269                           ;Switch_B1.c: 184: Sw->Hold2Time++;
  5270  0430  0878               	movf	_Sw,w
  5271  0431  3E05               	addlw	5
  5272  0432  0086               	movwf	6
  5273  0433  3001               	movlw	1	; select bank2/3
  5274  0434  0087               	movwf	7
  5275  0435  3001               	movlw	1
  5276  0436  0781               	addwf	1,f
  5277  0437  3141               	addfsr 1,1
  5278  0438  1803               	skipnc
  5279  0439  0A81               	incf	1,f
  5280                           
  5281                           ;Switch_B1.c: 185: if(Sw->Hold2Time >= 150)
  5282  043A  0878               	movf	_Sw,w
  5283  043B  3E05               	addlw	5
  5284  043C  0086               	movwf	6
  5285  043D  3001               	movlw	1	; select bank2/3
  5286  043E  0087               	movwf	7
  5287  043F  3F40               	moviw [0]fsr1
  5288  0440  0020               	movlb	0	; select bank0
  5289  0441  00E5               	movwf	??_setSw_Main
  5290  0442  3F41               	moviw [1]fsr1
  5291  0443  00E6               	movwf	??_setSw_Main+1
  5292  0444  3000               	movlw	0
  5293  0445  0266               	subwf	??_setSw_Main+1,w
  5294  0446  3096               	movlw	150
  5295  0447  1903               	skipnz
  5296  0448  0265               	subwf	??_setSw_Main,w
  5297  0449  1C03               	skipc
  5298  044A  0008               	return
  5299                           
  5300                           ;Switch_B1.c: 186: {
  5301                           ;Switch_B1.c: 187: Sw->Hold2Time=0;
  5302  044B  0878               	movf	_Sw,w
  5303  044C  3E05               	addlw	5
  5304  044D  0086               	movwf	6
  5305  044E  3001               	movlw	1	; select bank2/3
  5306  044F  0087               	movwf	7
  5307  0450  3000               	movlw	0
  5308  0451  3FC0               	movwi [0]fsr1
  5309  0452  3FC1               	movwi [1]fsr1
  5310                           
  5311                           ;Switch_B1.c: 188: Sw->Hold2=1;
  5312  0453  0878               	movf	_Sw,w
  5313  0454  0086               	movwf	6
  5314  0455  3001               	movlw	1	; select bank2/3
  5315  0456  0087               	movwf	7
  5316  0457  1601               	bsf	1,4
  5317                           
  5318                           ;Switch_B1.c: 192: setRF_Learn(1,1);
  5319  0458  01A2               	clrf	setRF_Learn@command
  5320  0459  0AA2               	incf	setRF_Learn@command,f
  5321  045A  3001               	movlw	1
  5322  045B  319A  2248  3183   	fcall	_setRF_Learn
  5323                           
  5324                           ;Switch_B1.c: 194: if(TMain->First)
  5325  045E  0020               	movlb	0	; select bank0
  5326  045F  086F               	movf	_TMain,w
  5327  0460  3E03               	addlw	3
  5328  0461  0086               	movwf	6
  5329  0462  3001               	movlw	1	; select bank2/3
  5330  0463  0087               	movwf	7
  5331  0464  1C81               	btfss	1,1
  5332  0465  0008               	return
  5333                           
  5334                           ;Switch_B1.c: 195: {
  5335                           ;Switch_B1.c: 196: setBuz(2,100);
  5336  0466  3064               	movlw	100
  5337  0467  00A6               	movwf	setBuz@time
  5338  0468  3000               	movlw	0
  5339  0469  00A7               	movwf	setBuz@time+1
  5340  046A  3002               	movlw	2
  5341  046B  3197  2789         	fcall	_setBuz
  5342                           
  5343                           ;Switch_B1.c: 197: }
  5344                           ;Switch_B1.c: 199: }
  5345                           ;Switch_B1.c: 200: }
  5346  046D  0008               	return
  5347  046E                     l9535:	
  5348                           
  5349                           ;Switch_B1.c: 201: else
  5350                           ;Switch_B1.c: 202: {
  5351                           ;Switch_B1.c: 203: if(!Sw->Hold3)
  5352  046E  0878               	movf	_Sw,w
  5353  046F  0086               	movwf	6
  5354  0470  3001               	movlw	1	; select bank2/3
  5355  0471  0087               	movwf	7
  5356  0472  1A81               	btfsc	1,5
  5357  0473  0008               	return
  5358                           
  5359                           ;Switch_B1.c: 204: {
  5360                           ;Switch_B1.c: 205: Sw->Hold3Time++;
  5361  0474  0878               	movf	_Sw,w
  5362  0475  3E07               	addlw	7
  5363  0476  0086               	movwf	6
  5364  0477  3001               	movlw	1	; select bank2/3
  5365  0478  0087               	movwf	7
  5366  0479  3001               	movlw	1
  5367  047A  0781               	addwf	1,f
  5368  047B  3141               	addfsr 1,1
  5369  047C  1803               	skipnc
  5370  047D  0A81               	incf	1,f
  5371                           
  5372                           ;Switch_B1.c: 206: if(Sw->Hold3Time >= 300)
  5373  047E  0878               	movf	_Sw,w
  5374  047F  3E07               	addlw	7
  5375  0480  0086               	movwf	6
  5376  0481  3001               	movlw	1	; select bank2/3
  5377  0482  0087               	movwf	7
  5378  0483  3F40               	moviw [0]fsr1
  5379  0484  0020               	movlb	0	; select bank0
  5380  0485  00E5               	movwf	??_setSw_Main
  5381  0486  3F41               	moviw [1]fsr1
  5382  0487  00E6               	movwf	??_setSw_Main+1
  5383  0488  3001               	movlw	1
  5384  0489  0266               	subwf	??_setSw_Main+1,w
  5385  048A  302C               	movlw	44
  5386  048B  1903               	skipnz
  5387  048C  0265               	subwf	??_setSw_Main,w
  5388  048D  1C03               	skipc
  5389  048E  0008               	return
  5390                           
  5391                           ;Switch_B1.c: 207: {
  5392                           ;Switch_B1.c: 208: Sw->Hold3Time=0;
  5393  048F  0878               	movf	_Sw,w
  5394  0490  3E07               	addlw	7
  5395  0491  0086               	movwf	6
  5396  0492  3001               	movlw	1	; select bank2/3
  5397  0493  0087               	movwf	7
  5398  0494  3000               	movlw	0
  5399  0495  3FC0               	movwi [0]fsr1
  5400  0496  3FC1               	movwi [1]fsr1
  5401                           
  5402                           ;Switch_B1.c: 209: Sw->Hold3=1;
  5403  0497  0878               	movf	_Sw,w
  5404  0498  0086               	movwf	6
  5405  0499  3001               	movlw	1	; select bank2/3
  5406  049A  0087               	movwf	7
  5407  049B  1681               	bsf	1,5
  5408                           
  5409                           ;Switch_B1.c: 212: setRF_Learn(1,0);
  5410  049C  01A2               	clrf	setRF_Learn@command
  5411  049D  3001               	movlw	1
  5412  049E  319A  2248         	fcall	_setRF_Learn
  5413                           
  5414                           ;Switch_B1.c: 215: }
  5415                           ;Switch_B1.c: 216: }
  5416                           ;Switch_B1.c: 217: }
  5417                           ;Switch_B1.c: 218: }
  5418                           ;Switch_B1.c: 219: }
  5419                           ;Switch_B1.c: 220: }
  5420  04A0  0008               	return
  5421  04A1                     l9545:	
  5422                           
  5423                           ;Switch_B1.c: 221: else
  5424                           ;Switch_B1.c: 222: {
  5425                           ;Switch_B1.c: 223: if(Sw->Debounce)
  5426  04A1  0878               	movf	_Sw,w
  5427  04A2  0086               	movwf	6
  5428  04A3  3001               	movlw	1	; select bank2/3
  5429  04A4  0087               	movwf	7
  5430  04A5  1D01               	btfss	1,2
  5431  04A6  0008               	return
  5432                           
  5433                           ;Switch_B1.c: 224: {
  5434                           ;Switch_B1.c: 225: Sw->DebounceTime++;
  5435  04A7  3001               	movlw	1
  5436  04A8  0020               	movlb	0	; select bank0
  5437  04A9  00E5               	movwf	??_setSw_Main
  5438  04AA  0878               	movf	_Sw,w
  5439  04AB  3E02               	addlw	2
  5440  04AC  0086               	movwf	6
  5441  04AD  3001               	movlw	1	; select bank2/3
  5442  04AE  0087               	movwf	7
  5443  04AF  0865               	movf	??_setSw_Main,w
  5444  04B0  0781               	addwf	1,f
  5445                           
  5446                           ;Switch_B1.c: 226: if(Sw->DebounceTime >= 5)
  5447  04B1  0878               	movf	_Sw,w
  5448  04B2  3E02               	addlw	2
  5449  04B3  0086               	movwf	6
  5450  04B4  3001               	movlw	1	; select bank2/3
  5451  04B5  0087               	movwf	7
  5452  04B6  3005               	movlw	5
  5453  04B7  0201               	subwf	1,w
  5454  04B8  1C03               	skipc
  5455  04B9  0008               	return
  5456                           
  5457                           ;Switch_B1.c: 227: {
  5458                           ;Switch_B1.c: 228: Sw->DebounceTime=0;
  5459  04BA  0878               	movf	_Sw,w
  5460  04BB  3E02               	addlw	2
  5461  04BC  0086               	movwf	6
  5462  04BD  3001               	movlw	1	; select bank2/3
  5463  04BE  0087               	movwf	7
  5464  04BF  0181               	clrf	1
  5465                           
  5466                           ;Switch_B1.c: 229: Sw->Debounce=0;
  5467  04C0  0878               	movf	_Sw,w
  5468  04C1  0086               	movwf	6
  5469  04C2  3001               	movlw	1	; select bank2/3
  5470  04C3  0087               	movwf	7
  5471  04C4  1101               	bcf	1,2
  5472                           
  5473                           ;Switch_B1.c: 230: Sw->Hold1Time=0;
  5474  04C5  0878               	movf	_Sw,w
  5475  04C6  3E03               	addlw	3
  5476  04C7  0086               	movwf	6
  5477  04C8  3001               	movlw	1	; select bank2/3
  5478  04C9  0087               	movwf	7
  5479  04CA  3000               	movlw	0
  5480  04CB  3FC0               	movwi [0]fsr1
  5481  04CC  3FC1               	movwi [1]fsr1
  5482                           
  5483                           ;Switch_B1.c: 231: Sw->Hold1=0;
  5484  04CD  0878               	movf	_Sw,w
  5485  04CE  0086               	movwf	6
  5486  04CF  3001               	movlw	1	; select bank2/3
  5487  04D0  0087               	movwf	7
  5488  04D1  1181               	bcf	1,3
  5489                           
  5490                           ;Switch_B1.c: 232: Sw->Hold2Time=0;
  5491  04D2  0878               	movf	_Sw,w
  5492  04D3  3E05               	addlw	5
  5493  04D4  0086               	movwf	6
  5494  04D5  3001               	movlw	1	; select bank2/3
  5495  04D6  0087               	movwf	7
  5496  04D7  3000               	movlw	0
  5497  04D8  3FC0               	movwi [0]fsr1
  5498  04D9  3FC1               	movwi [1]fsr1
  5499                           
  5500                           ;Switch_B1.c: 233: Sw->Hold2=0;
  5501  04DA  0878               	movf	_Sw,w
  5502  04DB  0086               	movwf	6
  5503  04DC  3001               	movlw	1	; select bank2/3
  5504  04DD  0087               	movwf	7
  5505  04DE  1201               	bcf	1,4
  5506                           
  5507                           ;Switch_B1.c: 234: Sw->Hold3Time=0;
  5508  04DF  0878               	movf	_Sw,w
  5509  04E0  3E07               	addlw	7
  5510  04E1  0086               	movwf	6
  5511  04E2  3001               	movlw	1	; select bank2/3
  5512  04E3  0087               	movwf	7
  5513  04E4  3000               	movlw	0
  5514  04E5  3FC0               	movwi [0]fsr1
  5515  04E6  3FC1               	movwi [1]fsr1
  5516                           
  5517                           ;Switch_B1.c: 235: Sw->Hold3=0;
  5518  04E7  0878               	movf	_Sw,w
  5519  04E8  0086               	movwf	6
  5520  04E9  3001               	movlw	1	; select bank2/3
  5521  04EA  0087               	movwf	7
  5522  04EB  1281               	bcf	1,5
  5523                           
  5524                           ;Switch_B1.c: 238: Sw_DimmerOffFunc(sw);
  5525  04EC  0021               	movlb	1	; select bank1
  5526  04ED  086C               	movf	setSw_Main@sw^(0+128),w
  5527  04EE  3196  26A6  3183   	fcall	_Sw_DimmerOffFunc
  5528                           
  5529                           ;Switch_B1.c: 243: setRF_Learn(1,0);
  5530  04F1  0020               	movlb	0	; select bank0
  5531  04F2  01A2               	clrf	setRF_Learn@command
  5532  04F3  3001               	movlw	1
  5533  04F4  319A  2248         	fcall	_setRF_Learn
  5534  04F6  0008               	return
  5535  04F7                     __end_of_setSw_Main:	
  5536                           
  5537                           	psect	text12
  5538  1A48                     __ptext12:	
  5539 ;; *************** function _setRF_Learn *****************
  5540 ;; Defined at:
  5541 ;;		line 31 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
  5542 ;; Parameters:    Size  Location     Type
  5543 ;;  rf              1    wreg     unsigned char 
  5544 ;;  command         1    2[BANK0 ] unsigned char 
  5545 ;; Auto vars:     Size  Location     Type
  5546 ;;  rf              1    3[BANK0 ] unsigned char 
  5547 ;; Return value:  Size  Location     Type
  5548 ;;		None               void
  5549 ;; Registers used:
  5550 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5551 ;; Tracked objects:
  5552 ;;		On entry : 0/0
  5553 ;;		On exit  : 0/0
  5554 ;;		Unchanged: 0/0
  5555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5556 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5557 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5559 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5560 ;;Total ram usage:        2 bytes
  5561 ;; Hardware stack levels used:    1
  5562 ;; Hardware stack levels required when called:    5
  5563 ;; This function calls:
  5564 ;;		_RfPointSelect
  5565 ;; This function is called by:
  5566 ;;		_setSw_Main
  5567 ;; This function uses a non-reentrant model
  5568 ;;
  5569                           
  5570                           
  5571                           ;psect for function _setRF_Learn
  5572  1A48                     _setRF_Learn:	
  5573                           
  5574                           ;incstack = 0
  5575                           ; Regs used in _setRF_Learn: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5576                           ;setRF_Learn@rf stored from wreg
  5577  1A48  0020               	movlb	0	; select bank0
  5578  1A49  00A3               	movwf	setRF_Learn@rf
  5579                           
  5580                           ;RF_Control_B1.c: 33: RfPointSelect(rf);
  5581  1A4A  0823               	movf	setRF_Learn@rf,w
  5582  1A4B  3199  219F         	fcall	_RfPointSelect
  5583                           
  5584                           ;RF_Control_B1.c: 34: RF->Learn=command;
  5585  1A4D  0877               	movf	_RF,w
  5586  1A4E  0086               	movwf	6
  5587  1A4F  0187               	clrf	7
  5588  1A50  0020               	movlb	0	; select bank0
  5589  1A51  0822               	movf	setRF_Learn@command,w
  5590  1A52  1301               	bcf	1,6
  5591  1A53  1D03               	skipz
  5592  1A54  1701               	bsf	1,6
  5593  1A55  0008               	return
  5594  1A56                     __end_of_setRF_Learn:	
  5595                           
  5596                           	psect	text13
  5597  1637                     __ptext13:	
  5598 ;; *************** function _Sw_DimmerOnFunc *****************
  5599 ;; Defined at:
  5600 ;;		line 251 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Switch_B1.c"
  5601 ;; Parameters:    Size  Location     Type
  5602 ;;  sw              1    wreg     unsigned char 
  5603 ;; Auto vars:     Size  Location     Type
  5604 ;;  sw              1   67[BANK0 ] unsigned char 
  5605 ;;  Idle            1   66[BANK0 ] unsigned char 
  5606 ;; Return value:  Size  Location     Type
  5607 ;;		None               void
  5608 ;; Registers used:
  5609 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5610 ;; Tracked objects:
  5611 ;;		On entry : 0/0
  5612 ;;		On exit  : 0/0
  5613 ;;		Unchanged: 0/0
  5614 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5616 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5618 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5619 ;;Total ram usage:        2 bytes
  5620 ;; Hardware stack levels used:    1
  5621 ;; Hardware stack levels required when called:    8
  5622 ;; This function calls:
  5623 ;;		_setBuz
  5624 ;;		_setDimmerLights_Switch
  5625 ;;		_setDimmerLights_Trigger
  5626 ;;		_setRFSW_Status
  5627 ;;		_setRF_DimmerLights
  5628 ;;		_setTxData
  5629 ;; This function is called by:
  5630 ;;		_setSw_Main
  5631 ;; This function uses a non-reentrant model
  5632 ;;
  5633                           
  5634                           
  5635                           ;psect for function _Sw_DimmerOnFunc
  5636  1637                     _Sw_DimmerOnFunc:	
  5637                           
  5638                           ;incstack = 0
  5639                           ; Regs used in _Sw_DimmerOnFunc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5640                           ;Sw_DimmerOnFunc@sw stored from wreg
  5641  1637  0020               	movlb	0	; select bank0
  5642  1638  00E3               	movwf	Sw_DimmerOnFunc@sw
  5643                           
  5644                           ;Switch_B1.c: 253: char Idle=1;
  5645  1639  01E2               	clrf	Sw_DimmerOnFunc@Idle
  5646  163A  0AE2               	incf	Sw_DimmerOnFunc@Idle,f
  5647                           
  5648                           ;Switch_B1.c: 270: if(sw == 1)
  5649  163B  0863               	movf	Sw_DimmerOnFunc@sw,w
  5650  163C  3A01               	xorlw	1
  5651  163D  1D03               	skipz
  5652  163E  2E41               	goto	l8959
  5653                           
  5654                           ;Switch_B1.c: 271: {
  5655                           ;Switch_B1.c: 272: Idle=(DimmerLights22->AdjGo)?0:1;
  5656  163F  086C               	movf	_DimmerLights22,w
  5657  1640  2E46               	goto	L2
  5658  1641                     l8959:	
  5659                           ;Switch_B1.c: 273: }
  5660                           
  5661                           
  5662                           ;Switch_B1.c: 274: else if(sw == 2)
  5663  1641  0863               	movf	Sw_DimmerOnFunc@sw,w
  5664  1642  3A02               	xorlw	2
  5665  1643  1D03               	skipz
  5666  1644  2E51               	goto	l8963
  5667                           
  5668                           ;Switch_B1.c: 275: {
  5669                           ;Switch_B1.c: 276: Idle=(DimmerLights11->AdjGo)?0:1;
  5670  1645  086B               	movf	_DimmerLights11,w
  5671  1646                     L2:	
  5672  1646  3E09               	addlw	9
  5673  1647  0086               	movwf	6
  5674  1648  3001               	movlw	1	; select bank2/3
  5675  1649  0087               	movwf	7
  5676  164A  1003               	clrc
  5677  164B  1D01               	btfss	1,2
  5678  164C  1403               	setc
  5679  164D  3000               	movlw	0
  5680  164E  1803               	btfsc	3,0
  5681  164F  3001               	movlw	1
  5682  1650  00E2               	movwf	Sw_DimmerOnFunc@Idle
  5683  1651                     l8963:	
  5684                           
  5685                           ;Switch_B1.c: 277: }
  5686                           ;Switch_B1.c: 280: if(Idle)
  5687  1651  0862               	movf	Sw_DimmerOnFunc@Idle,w
  5688  1652  1903               	btfsc	3,2
  5689  1653  0008               	return
  5690                           
  5691                           ;Switch_B1.c: 281: {
  5692                           ;Switch_B1.c: 282: Sw->Flag=1;
  5693  1654  0878               	movf	_Sw,w
  5694  1655  0086               	movwf	6
  5695  1656  3001               	movlw	1	; select bank2/3
  5696  1657  0087               	movwf	7
  5697  1658  1781               	bsf	1,7
  5698                           
  5699                           ;Switch_B1.c: 283: setBuz(1,100);
  5700  1659  3064               	movlw	100
  5701  165A  00A6               	movwf	setBuz@time
  5702  165B  3000               	movlw	0
  5703  165C  00A7               	movwf	setBuz@time+1
  5704  165D  3001               	movlw	1
  5705  165E  3197  2789  3196   	fcall	_setBuz
  5706                           
  5707                           ;Switch_B1.c: 284: if(!Sw->Status)
  5708  1661  0878               	movf	_Sw,w
  5709  1662  0086               	movwf	6
  5710  1663  3001               	movlw	1	; select bank2/3
  5711  1664  0087               	movwf	7
  5712  1665  1B01               	btfsc	1,6
  5713  1666  2E93               	goto	l8983
  5714                           
  5715                           ;Switch_B1.c: 285: {
  5716                           ;Switch_B1.c: 286: Sw->Status=1;
  5717  1667  0878               	movf	_Sw,w
  5718  1668  0086               	movwf	6
  5719  1669  3001               	movlw	1	; select bank2/3
  5720  166A  0087               	movwf	7
  5721  166B  1701               	bsf	1,6
  5722                           
  5723                           ;Switch_B1.c: 287: setRFSW_Status(sw,1);
  5724  166C  0020               	movlb	0	; select bank0
  5725  166D  01A2               	clrf	setRFSW_Status@command
  5726  166E  0AA2               	incf	setRFSW_Status@command,f
  5727  166F  0863               	movf	Sw_DimmerOnFunc@sw,w
  5728  1670  319A  2256  3196   	fcall	_setRFSW_Status
  5729                           
  5730                           ;Switch_B1.c: 289: setDimmerLights_Trigger(sw,1);
  5731  1673  0020               	movlb	0	; select bank0
  5732  1674  01A2               	clrf	setDimmerLights_Trigger@command
  5733  1675  0AA2               	incf	setDimmerLights_Trigger@command,f
  5734  1676  0863               	movf	Sw_DimmerOnFunc@sw,w
  5735  1677  319A  2294  3196   	fcall	_setDimmerLights_Trigger
  5736                           
  5737                           ;Switch_B1.c: 290: setDimmerLights_Switch(sw,1);
  5738  167A  0020               	movlb	0	; select bank0
  5739  167B  01A2               	clrf	setDimmerLights_Switch@command
  5740  167C  0AA2               	incf	setDimmerLights_Switch@command,f
  5741  167D  0863               	movf	Sw_DimmerOnFunc@sw,w
  5742  167E  319A  2284  3196   	fcall	_setDimmerLights_Switch
  5743                           
  5744                           ;Switch_B1.c: 292: setRF_DimmerLights(sw,Sw->Status);
  5745  1681  0878               	movf	_Sw,w
  5746  1682  0086               	movwf	6
  5747  1683  3001               	movlw	1	; select bank2/3
  5748  1684  0087               	movwf	7
  5749  1685  3000               	movlw	0
  5750  1686  1B01               	btfsc	1,6
  5751  1687  3001               	movlw	1
  5752  1688  0020               	movlb	0	; select bank0
  5753  1689  00DD               	movwf	setRF_DimmerLights@on
  5754  168A  0863               	movf	Sw_DimmerOnFunc@sw,w
  5755  168B  3195  2560  3196   	fcall	_setRF_DimmerLights
  5756                           
  5757                           ;Switch_B1.c: 293: setTxData(1);
  5758  168E  3001               	movlw	1
  5759  168F  3187  271C         	fcall	_setTxData
  5760                           
  5761                           ;Switch_B1.c: 294: }
  5762  1691  0020               	movlb	0	; select bank0
  5763  1692  0008               	return
  5764  1693                     l8983:	
  5765                           
  5766                           ;Switch_B1.c: 295: else
  5767                           ;Switch_B1.c: 296: {
  5768                           ;Switch_B1.c: 297: Sw->Status=0;
  5769  1693  0878               	movf	_Sw,w
  5770  1694  0086               	movwf	6
  5771  1695  3001               	movlw	1	; select bank2/3
  5772  1696  0087               	movwf	7
  5773  1697  1301               	bcf	1,6
  5774                           
  5775                           ;Switch_B1.c: 298: setRFSW_Status(sw,Sw->Status);
  5776  1698  0878               	movf	_Sw,w
  5777  1699  0086               	movwf	6
  5778  169A  3001               	movlw	1	; select bank2/3
  5779  169B  0087               	movwf	7
  5780  169C  3000               	movlw	0
  5781  169D  1B01               	btfsc	1,6
  5782  169E  3001               	movlw	1
  5783  169F  0020               	movlb	0	; select bank0
  5784  16A0  00A2               	movwf	setRFSW_Status@command
  5785  16A1  0863               	movf	Sw_DimmerOnFunc@sw,w
  5786  16A2  319A  2256         	fcall	_setRFSW_Status
  5787  16A4  0020               	movlb	0	; select bank0
  5788  16A5  0008               	return
  5789  16A6                     __end_of_Sw_DimmerOnFunc:	
  5790                           
  5791                           	psect	text14
  5792  16A6                     __ptext14:	
  5793 ;; *************** function _Sw_DimmerOffFunc *****************
  5794 ;; Defined at:
  5795 ;;		line 303 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Switch_B1.c"
  5796 ;; Parameters:    Size  Location     Type
  5797 ;;  sw              1    wreg     unsigned char 
  5798 ;; Auto vars:     Size  Location     Type
  5799 ;;  sw              1   68[BANK0 ] unsigned char 
  5800 ;; Return value:  Size  Location     Type
  5801 ;;		None               void
  5802 ;; Registers used:
  5803 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5804 ;; Tracked objects:
  5805 ;;		On entry : 0/0
  5806 ;;		On exit  : 0/0
  5807 ;;		Unchanged: 0/0
  5808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5809 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5810 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5811 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5812 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5813 ;;Total ram usage:        3 bytes
  5814 ;; Hardware stack levels used:    1
  5815 ;; Hardware stack levels required when called:    8
  5816 ;; This function calls:
  5817 ;;		_setDelayOff_GO
  5818 ;;		_setDimmerLights_AdjGo
  5819 ;;		_setDimmerLights_Switch
  5820 ;;		_setDimmerLights_Trigger
  5821 ;;		_setDimmerLights_TriggerAdj
  5822 ;;		_setRF_DimmerLights
  5823 ;;		_setTxData
  5824 ;; This function is called by:
  5825 ;;		_setSw_Main
  5826 ;; This function uses a non-reentrant model
  5827 ;;
  5828                           
  5829                           
  5830                           ;psect for function _Sw_DimmerOffFunc
  5831  16A6                     _Sw_DimmerOffFunc:	
  5832                           
  5833                           ;incstack = 0
  5834                           ; Regs used in _Sw_DimmerOffFunc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5835                           ;Sw_DimmerOffFunc@sw stored from wreg
  5836  16A6  0020               	movlb	0	; select bank0
  5837  16A7  00E4               	movwf	Sw_DimmerOffFunc@sw
  5838                           
  5839                           ;Switch_B1.c: 305: if(Sw->Flag)
  5840  16A8  0878               	movf	_Sw,w
  5841  16A9  0086               	movwf	6
  5842  16AA  3001               	movlw	1	; select bank2/3
  5843  16AB  0087               	movwf	7
  5844  16AC  1F81               	btfss	1,7
  5845  16AD  0008               	return
  5846                           
  5847                           ;Switch_B1.c: 306: {
  5848                           ;Switch_B1.c: 307: Sw->Flag=0;
  5849  16AE  0878               	movf	_Sw,w
  5850  16AF  0086               	movwf	6
  5851  16B0  3001               	movlw	1	; select bank2/3
  5852  16B1  0087               	movwf	7
  5853  16B2  1381               	bcf	1,7
  5854                           
  5855                           ;Switch_B1.c: 308: if(Sw->Status)
  5856  16B3  0878               	movf	_Sw,w
  5857  16B4  0086               	movwf	6
  5858  16B5  3001               	movlw	1	; select bank2/3
  5859  16B6  0087               	movwf	7
  5860  16B7  1F01               	btfss	1,6
  5861  16B8  2EF2               	goto	l9027
  5862                           
  5863                           ;Switch_B1.c: 309: {
  5864                           ;Switch_B1.c: 310: if(Sw->Adj)
  5865  16B9  0A78               	incf	_Sw,w
  5866  16BA  0086               	movwf	6
  5867  16BB  3001               	movlw	1	; select bank2/3
  5868  16BC  0087               	movwf	7
  5869  16BD  1C01               	btfss	1,0
  5870  16BE  0008               	return
  5871                           
  5872                           ;Switch_B1.c: 311: {
  5873                           ;Switch_B1.c: 312: Sw->Adj=0;
  5874  16BF  0A78               	incf	_Sw,w
  5875  16C0  0086               	movwf	6
  5876  16C1  3001               	movlw	1	; select bank2/3
  5877  16C2  0087               	movwf	7
  5878  16C3  1001               	bcf	1,0
  5879                           
  5880                           ;Switch_B1.c: 313: setDimmerLights_TriggerAdj(sw,1);
  5881  16C4  01A2               	clrf	setDimmerLights_TriggerAdj@command
  5882  16C5  0AA2               	incf	setDimmerLights_TriggerAdj@command,f
  5883  16C6  0864               	movf	Sw_DimmerOffFunc@sw,w
  5884  16C7  319A  22C4  3196   	fcall	_setDimmerLights_TriggerAdj
  5885                           
  5886                           ;Switch_B1.c: 314: setDimmerLights_AdjGo(sw,0);
  5887  16CA  0020               	movlb	0	; select bank0
  5888  16CB  01A2               	clrf	setDimmerLights_AdjGo@command
  5889  16CC  0864               	movf	Sw_DimmerOffFunc@sw,w
  5890  16CD  319A  22B4  3196   	fcall	_setDimmerLights_AdjGo
  5891                           
  5892                           ;Switch_B1.c: 316: Product->Data[17]=Product->Data[26+sw];
  5893  16D0  0020               	movlb	0	; select bank0
  5894  16D1  0864               	movf	Sw_DimmerOffFunc@sw,w
  5895  16D2  3E1A               	addlw	26
  5896  16D3  076E               	addwf	_Product,w
  5897  16D4  00E2               	movwf	??_Sw_DimmerOffFunc
  5898  16D5  0862               	movf	??_Sw_DimmerOffFunc,w
  5899  16D6  0086               	movwf	6
  5900  16D7  3001               	movlw	1	; select bank2/3
  5901  16D8  0087               	movwf	7
  5902  16D9  0801               	movf	1,w
  5903  16DA  00E3               	movwf	??_Sw_DimmerOffFunc+1
  5904  16DB  086E               	movf	_Product,w
  5905  16DC  3E11               	addlw	17
  5906  16DD  0086               	movwf	6
  5907  16DE  3001               	movlw	1	; select bank2/3
  5908  16DF  0087               	movwf	7
  5909  16E0  0863               	movf	??_Sw_DimmerOffFunc+1,w
  5910  16E1  0081               	movwf	1
  5911                           
  5912                           ;Switch_B1.c: 317: setRF_DimmerLights(sw,Sw->Status);
  5913  16E2  0878               	movf	_Sw,w
  5914  16E3  0086               	movwf	6
  5915  16E4  3001               	movlw	1	; select bank2/3
  5916  16E5  0087               	movwf	7
  5917  16E6  3000               	movlw	0
  5918  16E7  1B01               	btfsc	1,6
  5919  16E8  3001               	movlw	1
  5920  16E9  00DD               	movwf	setRF_DimmerLights@on
  5921  16EA  0864               	movf	Sw_DimmerOffFunc@sw,w
  5922  16EB  3195  2560  3196   	fcall	_setRF_DimmerLights
  5923                           
  5924                           ;Switch_B1.c: 318: setTxData(1);
  5925  16EE  3001               	movlw	1
  5926  16EF  3187  271C         	fcall	_setTxData
  5927                           
  5928                           ;Switch_B1.c: 320: }
  5929                           ;Switch_B1.c: 321: }
  5930  16F1  0008               	return
  5931  16F2                     l9027:	
  5932                           
  5933                           ;Switch_B1.c: 322: else
  5934                           ;Switch_B1.c: 323: {
  5935                           ;Switch_B1.c: 324: setDimmerLights_Trigger(sw,1);
  5936  16F2  0020               	movlb	0	; select bank0
  5937  16F3  01A2               	clrf	setDimmerLights_Trigger@command
  5938  16F4  0AA2               	incf	setDimmerLights_Trigger@command,f
  5939  16F5  0864               	movf	Sw_DimmerOffFunc@sw,w
  5940  16F6  319A  2294  3196   	fcall	_setDimmerLights_Trigger
  5941                           
  5942                           ;Switch_B1.c: 325: setDimmerLights_Switch(sw,0);
  5943  16F9  0020               	movlb	0	; select bank0
  5944  16FA  01A2               	clrf	setDimmerLights_Switch@command
  5945  16FB  0864               	movf	Sw_DimmerOffFunc@sw,w
  5946  16FC  319A  2284  3196   	fcall	_setDimmerLights_Switch
  5947                           
  5948                           ;Switch_B1.c: 327: setDelayOff_GO(sw,0,0);
  5949  16FF  0020               	movlb	0	; select bank0
  5950  1700  01A3               	clrf	setDelayOff_GO@command
  5951  1701  01A4               	clrf	setDelayOff_GO@value
  5952  1702  0864               	movf	Sw_DimmerOffFunc@sw,w
  5953  1703  3192  22B9  3196   	fcall	_setDelayOff_GO
  5954                           
  5955                           ;Switch_B1.c: 328: setRF_DimmerLights(sw,Sw->Status);
  5956  1706  0878               	movf	_Sw,w
  5957  1707  0086               	movwf	6
  5958  1708  3001               	movlw	1	; select bank2/3
  5959  1709  0087               	movwf	7
  5960  170A  3000               	movlw	0
  5961  170B  1B01               	btfsc	1,6
  5962  170C  3001               	movlw	1
  5963  170D  0020               	movlb	0	; select bank0
  5964  170E  00DD               	movwf	setRF_DimmerLights@on
  5965  170F  0864               	movf	Sw_DimmerOffFunc@sw,w
  5966  1710  3195  2560  3196   	fcall	_setRF_DimmerLights
  5967                           
  5968                           ;Switch_B1.c: 329: setTxData(1);
  5969  1713  3001               	movlw	1
  5970  1714  3187  271C         	fcall	_setTxData
  5971  1716  0008               	return
  5972  1717                     __end_of_Sw_DimmerOffFunc:	
  5973                           
  5974                           	psect	text15
  5975  107C                     __ptext15:	
  5976 ;; *************** function _Sw_DimmerAdjFunc *****************
  5977 ;; Defined at:
  5978 ;;		line 334 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Switch_B1.c"
  5979 ;; Parameters:    Size  Location     Type
  5980 ;;  sw              1    wreg     unsigned char 
  5981 ;; Auto vars:     Size  Location     Type
  5982 ;;  sw              1    5[BANK0 ] unsigned char 
  5983 ;;  Idle            1    4[BANK0 ] unsigned char 
  5984 ;; Return value:  Size  Location     Type
  5985 ;;		None               void
  5986 ;; Registers used:
  5987 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5988 ;; Tracked objects:
  5989 ;;		On entry : 0/0
  5990 ;;		On exit  : 0/0
  5991 ;;		Unchanged: 0/0
  5992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5994 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5996 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5997 ;;Total ram usage:        2 bytes
  5998 ;; Hardware stack levels used:    1
  5999 ;; Hardware stack levels required when called:    6
  6000 ;; This function calls:
  6001 ;;		_setDimmerLights_AdjGo
  6002 ;;		_setDimmerLights_TriggerAdj
  6003 ;;		_setRFSW_Status
  6004 ;; This function is called by:
  6005 ;;		_setSw_Main
  6006 ;; This function uses a non-reentrant model
  6007 ;;
  6008                           
  6009                           
  6010                           ;psect for function _Sw_DimmerAdjFunc
  6011  107C                     _Sw_DimmerAdjFunc:	
  6012                           
  6013                           ;incstack = 0
  6014                           ; Regs used in _Sw_DimmerAdjFunc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6015                           ;Sw_DimmerAdjFunc@sw stored from wreg
  6016  107C  0020               	movlb	0	; select bank0
  6017  107D  00A5               	movwf	Sw_DimmerAdjFunc@sw
  6018                           
  6019                           ;Switch_B1.c: 336: char Idle=1;
  6020  107E  01A4               	clrf	Sw_DimmerAdjFunc@Idle
  6021  107F  0AA4               	incf	Sw_DimmerAdjFunc@Idle,f
  6022                           
  6023                           ;Switch_B1.c: 353: if(sw == 1)
  6024  1080  0825               	movf	Sw_DimmerAdjFunc@sw,w
  6025  1081  3A01               	xorlw	1
  6026  1082  1D03               	skipz
  6027  1083  2886               	goto	l8993
  6028                           
  6029                           ;Switch_B1.c: 354: {
  6030                           ;Switch_B1.c: 355: Idle=(DimmerLights22->AdjGo)?0:1;
  6031  1084  086C               	movf	_DimmerLights22,w
  6032  1085  288B               	goto	L3
  6033  1086                     l8993:	
  6034                           ;Switch_B1.c: 356: }
  6035                           
  6036                           
  6037                           ;Switch_B1.c: 357: else if(sw == 2)
  6038  1086  0825               	movf	Sw_DimmerAdjFunc@sw,w
  6039  1087  3A02               	xorlw	2
  6040  1088  1D03               	skipz
  6041  1089  2896               	goto	l8997
  6042                           
  6043                           ;Switch_B1.c: 358: {
  6044                           ;Switch_B1.c: 359: Idle=(DimmerLights11->AdjGo)?0:1;
  6045  108A  086B               	movf	_DimmerLights11,w
  6046  108B                     L3:	
  6047  108B  3E09               	addlw	9
  6048  108C  0086               	movwf	6
  6049  108D  3001               	movlw	1	; select bank2/3
  6050  108E  0087               	movwf	7
  6051  108F  1003               	clrc
  6052  1090  1D01               	btfss	1,2
  6053  1091  1403               	setc
  6054  1092  3000               	movlw	0
  6055  1093  1803               	btfsc	3,0
  6056  1094  3001               	movlw	1
  6057  1095  00A4               	movwf	Sw_DimmerAdjFunc@Idle
  6058  1096                     l8997:	
  6059                           
  6060                           ;Switch_B1.c: 360: }
  6061                           ;Switch_B1.c: 363: if(Idle)
  6062  1096  0824               	movf	Sw_DimmerAdjFunc@Idle,w
  6063  1097  1903               	btfsc	3,2
  6064  1098  0008               	return
  6065                           
  6066                           ;Switch_B1.c: 364: {
  6067                           ;Switch_B1.c: 365: if(Sw->Flag)
  6068  1099  0878               	movf	_Sw,w
  6069  109A  0086               	movwf	6
  6070  109B  3001               	movlw	1	; select bank2/3
  6071  109C  0087               	movwf	7
  6072  109D  1F81               	btfss	1,7
  6073  109E  0008               	return
  6074                           
  6075                           ;Switch_B1.c: 366: {
  6076                           ;Switch_B1.c: 367: Sw->Adj=1;
  6077  109F  0A78               	incf	_Sw,w
  6078  10A0  0086               	movwf	6
  6079  10A1  3001               	movlw	1	; select bank2/3
  6080  10A2  0087               	movwf	7
  6081  10A3  1401               	bsf	1,0
  6082                           
  6083                           ;Switch_B1.c: 368: Sw->Status=1;
  6084  10A4  0878               	movf	_Sw,w
  6085  10A5  0086               	movwf	6
  6086  10A6  3001               	movlw	1	; select bank2/3
  6087  10A7  0087               	movwf	7
  6088  10A8  1701               	bsf	1,6
  6089                           
  6090                           ;Switch_B1.c: 369: setRFSW_Status(sw,1);
  6091  10A9  01A2               	clrf	setRFSW_Status@command
  6092  10AA  0AA2               	incf	setRFSW_Status@command,f
  6093  10AB  0825               	movf	Sw_DimmerAdjFunc@sw,w
  6094  10AC  319A  2256  3190   	fcall	_setRFSW_Status
  6095                           
  6096                           ;Switch_B1.c: 371: setDimmerLights_TriggerAdj(sw,1);
  6097  10AF  0020               	movlb	0	; select bank0
  6098  10B0  01A2               	clrf	setDimmerLights_TriggerAdj@command
  6099  10B1  0AA2               	incf	setDimmerLights_TriggerAdj@command,f
  6100  10B2  0825               	movf	Sw_DimmerAdjFunc@sw,w
  6101  10B3  319A  22C4  3190   	fcall	_setDimmerLights_TriggerAdj
  6102                           
  6103                           ;Switch_B1.c: 372: setDimmerLights_AdjGo(sw,1);
  6104  10B6  0020               	movlb	0	; select bank0
  6105  10B7  01A2               	clrf	setDimmerLights_AdjGo@command
  6106  10B8  0AA2               	incf	setDimmerLights_AdjGo@command,f
  6107  10B9  0825               	movf	Sw_DimmerAdjFunc@sw,w
  6108  10BA  319A  22B4         	fcall	_setDimmerLights_AdjGo
  6109  10BC  0020               	movlb	0	; select bank0
  6110  10BD  0008               	return
  6111  10BE                     __end_of_Sw_DimmerAdjFunc:	
  6112                           
  6113                           	psect	text16
  6114  1AC4                     __ptext16:	
  6115 ;; *************** function _setDimmerLights_TriggerAdj *****************
  6116 ;; Defined at:
  6117 ;;		line 450 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
  6118 ;; Parameters:    Size  Location     Type
  6119 ;;  lights          1    wreg     unsigned char 
  6120 ;;  command         1    2[BANK0 ] unsigned char 
  6121 ;; Auto vars:     Size  Location     Type
  6122 ;;  lights          1    3[BANK0 ] unsigned char 
  6123 ;; Return value:  Size  Location     Type
  6124 ;;		None               void
  6125 ;; Registers used:
  6126 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6127 ;; Tracked objects:
  6128 ;;		On entry : 0/0
  6129 ;;		On exit  : 0/0
  6130 ;;		Unchanged: 0/0
  6131 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6132 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6133 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6135 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6136 ;;Total ram usage:        2 bytes
  6137 ;; Hardware stack levels used:    1
  6138 ;; Hardware stack levels required when called:    5
  6139 ;; This function calls:
  6140 ;;		_DimmerLightsPointSelect
  6141 ;; This function is called by:
  6142 ;;		_Sw_DimmerOffFunc
  6143 ;;		_Sw_DimmerAdjFunc
  6144 ;; This function uses a non-reentrant model
  6145 ;;
  6146                           
  6147                           
  6148                           ;psect for function _setDimmerLights_TriggerAdj
  6149  1AC4                     _setDimmerLights_TriggerAdj:	
  6150                           
  6151                           ;incstack = 0
  6152                           ; Regs used in _setDimmerLights_TriggerAdj: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  6153                           ;setDimmerLights_TriggerAdj@lights stored from wreg
  6154  1AC4  0020               	movlb	0	; select bank0
  6155  1AC5  00A3               	movwf	setDimmerLights_TriggerAdj@lights
  6156                           
  6157                           ;Dimmer_B1.c: 452: DimmerLightsPointSelect(lights);
  6158  1AC6  0823               	movf	setDimmerLights_TriggerAdj@lights,w
  6159  1AC7  319A  22E5         	fcall	_DimmerLightsPointSelect
  6160                           
  6161                           ;Dimmer_B1.c: 453: DimmerLights->TriggerAdj=command;
  6162  1AC9  0020               	movlb	0	; select bank0
  6163  1ACA  086A               	movf	_DimmerLights,w
  6164  1ACB  3E09               	addlw	9
  6165  1ACC  0086               	movwf	6
  6166  1ACD  3001               	movlw	1	; select bank2/3
  6167  1ACE  0087               	movwf	7
  6168  1ACF  0822               	movf	setDimmerLights_TriggerAdj@command,w
  6169  1AD0  1181               	bcf	1,3
  6170  1AD1  1D03               	skipz
  6171  1AD2  1581               	bsf	1,3
  6172  1AD3  0008               	return
  6173  1AD4                     __end_of_setDimmerLights_TriggerAdj:	
  6174                           
  6175                           	psect	text17
  6176  1AB4                     __ptext17:	
  6177 ;; *************** function _setDimmerLights_AdjGo *****************
  6178 ;; Defined at:
  6179 ;;		line 440 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
  6180 ;; Parameters:    Size  Location     Type
  6181 ;;  lights          1    wreg     unsigned char 
  6182 ;;  command         1    2[BANK0 ] unsigned char 
  6183 ;; Auto vars:     Size  Location     Type
  6184 ;;  lights          1    3[BANK0 ] unsigned char 
  6185 ;; Return value:  Size  Location     Type
  6186 ;;		None               void
  6187 ;; Registers used:
  6188 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6189 ;; Tracked objects:
  6190 ;;		On entry : 0/0
  6191 ;;		On exit  : 0/0
  6192 ;;		Unchanged: 0/0
  6193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6194 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6195 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6197 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6198 ;;Total ram usage:        2 bytes
  6199 ;; Hardware stack levels used:    1
  6200 ;; Hardware stack levels required when called:    5
  6201 ;; This function calls:
  6202 ;;		_DimmerLightsPointSelect
  6203 ;; This function is called by:
  6204 ;;		_Sw_DimmerOffFunc
  6205 ;;		_Sw_DimmerAdjFunc
  6206 ;; This function uses a non-reentrant model
  6207 ;;
  6208                           
  6209                           
  6210                           ;psect for function _setDimmerLights_AdjGo
  6211  1AB4                     _setDimmerLights_AdjGo:	
  6212                           
  6213                           ;incstack = 0
  6214                           ; Regs used in _setDimmerLights_AdjGo: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  6215                           ;setDimmerLights_AdjGo@lights stored from wreg
  6216  1AB4  0020               	movlb	0	; select bank0
  6217  1AB5  00A3               	movwf	setDimmerLights_AdjGo@lights
  6218                           
  6219                           ;Dimmer_B1.c: 442: DimmerLightsPointSelect(lights);
  6220  1AB6  0823               	movf	setDimmerLights_AdjGo@lights,w
  6221  1AB7  319A  22E5         	fcall	_DimmerLightsPointSelect
  6222                           
  6223                           ;Dimmer_B1.c: 443: DimmerLights->AdjGo=command;
  6224  1AB9  0020               	movlb	0	; select bank0
  6225  1ABA  086A               	movf	_DimmerLights,w
  6226  1ABB  3E09               	addlw	9
  6227  1ABC  0086               	movwf	6
  6228  1ABD  3001               	movlw	1	; select bank2/3
  6229  1ABE  0087               	movwf	7
  6230  1ABF  0822               	movf	setDimmerLights_AdjGo@command,w
  6231  1AC0  1101               	bcf	1,2
  6232  1AC1  1D03               	skipz
  6233  1AC2  1501               	bsf	1,2
  6234  1AC3  0008               	return
  6235  1AC4                     __end_of_setDimmerLights_AdjGo:	
  6236                           
  6237                           	psect	text18
  6238  1A2D                     __ptext18:	
  6239 ;; *************** function _Switch_Initialization *****************
  6240 ;; Defined at:
  6241 ;;		line 38 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Switch_B1.c"
  6242 ;; Parameters:    Size  Location     Type
  6243 ;;		None
  6244 ;; Auto vars:     Size  Location     Type
  6245 ;;		None
  6246 ;; Return value:  Size  Location     Type
  6247 ;;		None               void
  6248 ;; Registers used:
  6249 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6250 ;; Tracked objects:
  6251 ;;		On entry : 0/0
  6252 ;;		On exit  : 0/0
  6253 ;;		Unchanged: 0/0
  6254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6258 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6259 ;;Total ram usage:        0 bytes
  6260 ;; Hardware stack levels used:    1
  6261 ;; Hardware stack levels required when called:    7
  6262 ;; This function calls:
  6263 ;;		_TouchPower
  6264 ;;		_setSw_Initialization
  6265 ;; This function is called by:
  6266 ;;		_main
  6267 ;; This function uses a non-reentrant model
  6268 ;;
  6269                           
  6270                           
  6271                           ;psect for function _Switch_Initialization
  6272  1A2D                     _Switch_Initialization:	
  6273                           
  6274                           ;Switch_B1.c: 40: TouchPower();
  6275                           
  6276                           ;incstack = 0
  6277                           ; Regs used in _Switch_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  6278  1A2D  3199  2112  319A   	fcall	_TouchPower
  6279                           
  6280                           ;Switch_B1.c: 42: WPUB1=0;
  6281  1A30  0024               	movlb	4	; select bank4
  6282  1A31  108D               	bcf	13,1	;volatile
  6283                           
  6284                           ;Switch_B1.c: 51: setSw_Initialization(1);
  6285  1A32  3001               	movlw	1
  6286  1A33  3199  2155  319A   	fcall	_setSw_Initialization
  6287                           
  6288                           ;Switch_B1.c: 54: setSw_Initialization(2);
  6289  1A36  3002               	movlw	2
  6290  1A37  3199  2155         	fcall	_setSw_Initialization
  6291  1A39  0008               	return
  6292  1A3A                     __end_of_Switch_Initialization:	
  6293                           
  6294                           	psect	text19
  6295  1955                     __ptext19:	
  6296 ;; *************** function _setSw_Initialization *****************
  6297 ;; Defined at:
  6298 ;;		line 78 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Switch_B1.c"
  6299 ;; Parameters:    Size  Location     Type
  6300 ;;  sw              1    wreg     unsigned char 
  6301 ;; Auto vars:     Size  Location     Type
  6302 ;;  sw              1    4[BANK0 ] unsigned char 
  6303 ;; Return value:  Size  Location     Type
  6304 ;;		None               void
  6305 ;; Registers used:
  6306 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6307 ;; Tracked objects:
  6308 ;;		On entry : 0/0
  6309 ;;		On exit  : 0/0
  6310 ;;		Unchanged: 0/0
  6311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6313 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6315 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6316 ;;Total ram usage:        1 bytes
  6317 ;; Hardware stack levels used:    1
  6318 ;; Hardware stack levels required when called:    6
  6319 ;; This function calls:
  6320 ;;		_setLED
  6321 ;; This function is called by:
  6322 ;;		_Switch_Initialization
  6323 ;; This function uses a non-reentrant model
  6324 ;;
  6325                           
  6326                           
  6327                           ;psect for function _setSw_Initialization
  6328  1955                     _setSw_Initialization:	
  6329                           
  6330                           ;incstack = 0
  6331                           ; Regs used in _setSw_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6332                           ;setSw_Initialization@sw stored from wreg
  6333  1955  0020               	movlb	0	; select bank0
  6334  1956  00A4               	movwf	setSw_Initialization@sw
  6335                           
  6336                           ;Switch_B1.c: 80: setLED(sw,1);
  6337  1957  01A2               	clrf	setLED@command
  6338  1958  0AA2               	incf	setLED@command,f
  6339  1959  0824               	movf	setSw_Initialization@sw,w
  6340  195A  3193  236C         	fcall	_setLED
  6341  195C  0008               	return
  6342  195D                     __end_of_setSw_Initialization:	
  6343                           
  6344                           	psect	text20
  6345  1912                     __ptext20:	
  6346 ;; *************** function _TouchPower *****************
  6347 ;; Defined at:
  6348 ;;		line 9 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Switch_B1.c"
  6349 ;; Parameters:    Size  Location     Type
  6350 ;;		None
  6351 ;; Auto vars:     Size  Location     Type
  6352 ;;		None
  6353 ;; Return value:  Size  Location     Type
  6354 ;;		None               void
  6355 ;; Registers used:
  6356 ;;		None
  6357 ;; Tracked objects:
  6358 ;;		On entry : 0/0
  6359 ;;		On exit  : 0/0
  6360 ;;		Unchanged: 0/0
  6361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6365 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6366 ;;Total ram usage:        0 bytes
  6367 ;; Hardware stack levels used:    1
  6368 ;; Hardware stack levels required when called:    4
  6369 ;; This function calls:
  6370 ;;		Nothing
  6371 ;; This function is called by:
  6372 ;;		_Switch_Initialization
  6373 ;; This function uses a non-reentrant model
  6374 ;;
  6375                           
  6376                           
  6377                           ;psect for function _TouchPower
  6378  1912                     _TouchPower:	
  6379  1912                     l2753:	
  6380                           ;Switch_B1.c: 11: while(!RC5)
  6381                           
  6382                           ;incstack = 0
  6383                           ; Regs used in _TouchPower: []
  6384                           
  6385  1912  0020               	movlb	0	; select bank0
  6386  1913  1A8E               	btfsc	14,5	;volatile
  6387  1914  0008               	return
  6388                           
  6389                           ;Switch_B1.c: 12: RC5=1;
  6390  1915  168E               	bsf	14,5	;volatile
  6391  1916  2912               	goto	l2753
  6392  1917                     __end_of_TouchPower:	
  6393                           
  6394                           	psect	text21
  6395  190E                     __ptext21:	
  6396 ;; *************** function _RF_Main *****************
  6397 ;; Defined at:
  6398 ;;		line 24 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
  6399 ;; Parameters:    Size  Location     Type
  6400 ;;		None
  6401 ;; Auto vars:     Size  Location     Type
  6402 ;;		None
  6403 ;; Return value:  Size  Location     Type
  6404 ;;		None               void
  6405 ;; Registers used:
  6406 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6407 ;; Tracked objects:
  6408 ;;		On entry : 0/0
  6409 ;;		On exit  : 0/0
  6410 ;;		Unchanged: 0/0
  6411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6412 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6413 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6414 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6415 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6416 ;;Total ram usage:        0 bytes
  6417 ;; Hardware stack levels used:    1
  6418 ;; Hardware stack levels required when called:   13
  6419 ;; This function calls:
  6420 ;;		_setRF_Main
  6421 ;; This function is called by:
  6422 ;;		_main
  6423 ;; This function uses a non-reentrant model
  6424 ;;
  6425                           
  6426                           
  6427                           ;psect for function _RF_Main
  6428  190E                     _RF_Main:	
  6429                           
  6430                           ;RF_Control_B1.c: 27: setRF_Main(1);
  6431                           
  6432                           ;incstack = 0
  6433                           ; Regs used in _RF_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6434  190E  3001               	movlw	1
  6435  190F  318A  2267         	fcall	_setRF_Main
  6436  1911  0008               	return
  6437  1912                     __end_of_RF_Main:	
  6438                           
  6439                           	psect	text22
  6440  0A67                     __ptext22:	
  6441 ;; *************** function _setRF_Main *****************
  6442 ;; Defined at:
  6443 ;;		line 58 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
  6444 ;; Parameters:    Size  Location     Type
  6445 ;;  rf              1    wreg     unsigned char 
  6446 ;; Auto vars:     Size  Location     Type
  6447 ;;  rf              1    2[BANK1 ] unsigned char 
  6448 ;; Return value:  Size  Location     Type
  6449 ;;		None               void
  6450 ;; Registers used:
  6451 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6452 ;; Tracked objects:
  6453 ;;		On entry : 0/0
  6454 ;;		On exit  : 0/0
  6455 ;;		Unchanged: 0/0
  6456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6457 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6458 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6459 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6460 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  6461 ;;Total ram usage:        3 bytes
  6462 ;; Hardware stack levels used:    1
  6463 ;; Hardware stack levels required when called:   12
  6464 ;; This function calls:
  6465 ;;		_CC2500_RxData
  6466 ;;		_CC2500_TxData
  6467 ;;		_CC2500_WriteCommand
  6468 ;;		_RF_RxDisable
  6469 ;;		_RfPointSelect
  6470 ;;		_getRxData
  6471 ;;		_setINT_GO
  6472 ;; This function is called by:
  6473 ;;		_RF_Main
  6474 ;; This function uses a non-reentrant model
  6475 ;;
  6476                           
  6477                           
  6478                           ;psect for function _setRF_Main
  6479  0A67                     _setRF_Main:	
  6480                           
  6481                           ;incstack = 0
  6482                           ; Regs used in _setRF_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6483                           ;setRF_Main@rf stored from wreg
  6484  0A67  0021               	movlb	1	; select bank1
  6485  0A68  00EC               	movwf	setRF_Main@rf^(0+128)
  6486                           
  6487                           ;RF_Control_B1.c: 60: RfPointSelect(rf);
  6488  0A69  086C               	movf	setRF_Main@rf^(0+128),w
  6489  0A6A  3199  219F  318A   	fcall	_RfPointSelect
  6490                           
  6491                           ;RF_Control_B1.c: 61: if(RF->Enable)
  6492  0A6D  0877               	movf	_RF,w
  6493  0A6E  0086               	movwf	6
  6494  0A6F  0187               	clrf	7
  6495  0A70  1C01               	btfss	1,0
  6496  0A71  0008               	return
  6497                           
  6498                           ;RF_Control_B1.c: 62: {
  6499                           ;RF_Control_B1.c: 69: RF->Key=((RA6 || RA4 || RA0 || RB1 ) && !RF->Learn)?1:0;
  6500  0A72  0021               	movlb	1	; select bank1
  6501  0A73  01ED               	clrf	_setRF_Main$3833^(0+128)
  6502  0A74  0020               	movlb	0	; select bank0
  6503  0A75  1F0C               	btfss	12,6	;volatile
  6504  0A76  1A0C               	btfsc	12,4	;volatile
  6505  0A77  2A7C               	goto	l9423
  6506  0A78  180C               	btfsc	12,0	;volatile
  6507  0A79  2A7C               	goto	l9423
  6508  0A7A  1C8D               	btfss	13,1	;volatile
  6509  0A7B  2A84               	goto	l9427
  6510  0A7C                     l9423:	
  6511  0A7C  0877               	movf	_RF,w
  6512  0A7D  0086               	movwf	6
  6513  0A7E  0187               	clrf	7
  6514  0A7F  1B01               	btfsc	1,6
  6515  0A80  2A84               	goto	l9427
  6516  0A81  0021               	movlb	1	; select bank1
  6517  0A82  01ED               	clrf	_setRF_Main$3833^(0+128)
  6518  0A83  0AED               	incf	_setRF_Main$3833^(0+128),f
  6519  0A84                     l9427:	
  6520  0A84  0877               	movf	_RF,w
  6521  0A85  0086               	movwf	6
  6522  0A86  0187               	clrf	7
  6523  0A87  0021               	movlb	1	; select bank1
  6524  0A88  086D               	movf	_setRF_Main$3833^(0+128),w
  6525  0A89  1381               	bcf	1,7
  6526  0A8A  1D03               	skipz
  6527  0A8B  1781               	bsf	1,7
  6528                           
  6529                           ;RF_Control_B1.c: 77: if(!RF->Key)
  6530  0A8C  0877               	movf	_RF,w
  6531  0A8D  0086               	movwf	6
  6532  0A8E  0187               	clrf	7
  6533  0A8F  1B81               	btfsc	1,7
  6534  0A90  2ABD               	goto	l9449
  6535                           
  6536                           ;RF_Control_B1.c: 78: {
  6537                           ;RF_Control_B1.c: 79: if(RF->ReceiveGO)
  6538  0A91  0877               	movf	_RF,w
  6539  0A92  0086               	movwf	6
  6540  0A93  0187               	clrf	7
  6541  0A94  1C81               	btfss	1,1
  6542  0A95  2AA2               	goto	l9437
  6543                           
  6544                           ;RF_Control_B1.c: 80: {
  6545                           ;RF_Control_B1.c: 81: RF->ReceiveGO=0;
  6546  0A96  0877               	movf	_RF,w
  6547  0A97  0086               	movwf	6
  6548  0A98  0187               	clrf	7
  6549  0A99  1081               	bcf	1,1
  6550                           
  6551                           ;RF_Control_B1.c: 82: CC2500_RxData();
  6552  0A9A  3193  23CA  318A   	fcall	_CC2500_RxData
  6553                           
  6554                           ;RF_Control_B1.c: 88: getRxData(1);
  6555  0A9D  3001               	movlw	1
  6556  0A9E  3192  2267  318A   	fcall	_getRxData
  6557                           
  6558                           ;RF_Control_B1.c: 91: }
  6559  0AA1  2AC1               	goto	l9451
  6560  0AA2                     l9437:	
  6561                           
  6562                           ;RF_Control_B1.c: 92: else
  6563                           ;RF_Control_B1.c: 93: {
  6564                           ;RF_Control_B1.c: 94: if(!RF->TransceiveGO)
  6565  0AA2  0877               	movf	_RF,w
  6566  0AA3  0086               	movwf	6
  6567  0AA4  0187               	clrf	7
  6568  0AA5  1901               	btfsc	1,2
  6569  0AA6  2AC1               	goto	l9451
  6570                           
  6571                           ;RF_Control_B1.c: 95: {
  6572                           ;RF_Control_B1.c: 97: if(!RF->RxStatus)
  6573  0AA7  0877               	movf	_RF,w
  6574  0AA8  0086               	movwf	6
  6575  0AA9  0187               	clrf	7
  6576  0AAA  1981               	btfsc	1,3
  6577  0AAB  2AC1               	goto	l9451
  6578                           
  6579                           ;RF_Control_B1.c: 98: {
  6580                           ;RF_Control_B1.c: 99: RF->RxStatus=1;
  6581  0AAC  0877               	movf	_RF,w
  6582  0AAD  0086               	movwf	6
  6583  0AAE  0187               	clrf	7
  6584  0AAF  1581               	bsf	1,3
  6585                           
  6586                           ;RF_Control_B1.c: 100: CC2500_WriteCommand(0x36);
  6587  0AB0  3036               	movlw	54
  6588  0AB1  319A  2274  318A   	fcall	_CC2500_WriteCommand
  6589                           
  6590                           ;RF_Control_B1.c: 101: CC2500_WriteCommand(0x34);
  6591  0AB4  3034               	movlw	52
  6592  0AB5  319A  2274  318A   	fcall	_CC2500_WriteCommand
  6593                           
  6594                           ;RF_Control_B1.c: 102: setINT_GO(1);
  6595  0AB8  3001               	movlw	1
  6596  0AB9  3199  2176  318A   	fcall	_setINT_GO
  6597                           
  6598                           ;RF_Control_B1.c: 103: }
  6599                           ;RF_Control_B1.c: 105: }
  6600                           ;RF_Control_B1.c: 106: }
  6601                           ;RF_Control_B1.c: 107: }
  6602  0ABC  2AC1               	goto	l9451
  6603  0ABD                     l9449:	
  6604                           
  6605                           ;RF_Control_B1.c: 108: else
  6606                           ;RF_Control_B1.c: 109: {
  6607                           ;RF_Control_B1.c: 110: RF_RxDisable(1);
  6608  0ABD  3001               	movlw	1
  6609  0ABE  319D  25AE  318A   	fcall	_RF_RxDisable
  6610  0AC1                     l9451:	
  6611                           
  6612                           ;RF_Control_B1.c: 111: }
  6613                           ;RF_Control_B1.c: 112: if(RF->TransceiveGO)
  6614  0AC1  0877               	movf	_RF,w
  6615  0AC2  0086               	movwf	6
  6616  0AC3  0187               	clrf	7
  6617  0AC4  1D01               	btfss	1,2
  6618  0AC5  0008               	return
  6619                           
  6620                           ;RF_Control_B1.c: 113: {
  6621                           ;RF_Control_B1.c: 114: RF_RxDisable(1);
  6622  0AC6  3001               	movlw	1
  6623  0AC7  319D  25AE  318A   	fcall	_RF_RxDisable
  6624                           
  6625                           ;RF_Control_B1.c: 115: if(!RF->Debounce)
  6626  0ACA  0877               	movf	_RF,w
  6627  0ACB  0086               	movwf	6
  6628  0ACC  0187               	clrf	7
  6629  0ACD  1A81               	btfsc	1,5
  6630  0ACE  2AE7               	goto	l9465
  6631                           
  6632                           ;RF_Control_B1.c: 116: {
  6633                           ;RF_Control_B1.c: 117: RF->DebounceTime++;
  6634  0ACF  3001               	movlw	1
  6635  0AD0  0021               	movlb	1	; select bank1
  6636  0AD1  00EB               	movwf	??_setRF_Main^(0+128)
  6637  0AD2  0A77               	incf	_RF,w
  6638  0AD3  0086               	movwf	6
  6639  0AD4  0187               	clrf	7
  6640  0AD5  086B               	movf	??_setRF_Main^(0+128),w
  6641  0AD6  0781               	addwf	1,f
  6642                           
  6643                           ;RF_Control_B1.c: 118: if(RF->DebounceTime == 25)
  6644  0AD7  0A77               	incf	_RF,w
  6645  0AD8  0086               	movwf	6
  6646  0AD9  0187               	clrf	7
  6647  0ADA  0801               	movf	1,w
  6648  0ADB  3A19               	xorlw	25
  6649  0ADC  1D03               	skipz
  6650  0ADD  0008               	return
  6651                           
  6652                           ;RF_Control_B1.c: 119: {
  6653                           ;RF_Control_B1.c: 120: RF->DebounceTime=0;
  6654  0ADE  0A77               	incf	_RF,w
  6655  0ADF  0086               	movwf	6
  6656  0AE0  0187               	clrf	7
  6657  0AE1  0181               	clrf	1
  6658                           
  6659                           ;RF_Control_B1.c: 121: RF->Debounce=1;
  6660  0AE2  0877               	movf	_RF,w
  6661  0AE3  0086               	movwf	6
  6662  0AE4  0187               	clrf	7
  6663  0AE5  1681               	bsf	1,5
  6664                           
  6665                           ;RF_Control_B1.c: 122: }
  6666                           ;RF_Control_B1.c: 123: }
  6667  0AE6  0008               	return
  6668  0AE7                     l9465:	
  6669                           
  6670                           ;RF_Control_B1.c: 124: else
  6671                           ;RF_Control_B1.c: 125: {
  6672                           ;RF_Control_B1.c: 126: RF->Debounce=0;
  6673  0AE7  0877               	movf	_RF,w
  6674  0AE8  0086               	movwf	6
  6675  0AE9  0187               	clrf	7
  6676  0AEA  1281               	bcf	1,5
  6677                           
  6678                           ;RF_Control_B1.c: 127: RF->TransceiveGO=0;
  6679  0AEB  0877               	movf	_RF,w
  6680  0AEC  0086               	movwf	6
  6681  0AED  0187               	clrf	7
  6682  0AEE  1101               	bcf	1,2
  6683                           
  6684                           ;RF_Control_B1.c: 128: CC2500_TxData();
  6685  0AEF  3191  2100         	fcall	_CC2500_TxData
  6686  0AF1  0008               	return
  6687  0AF2                     __end_of_setRF_Main:	
  6688                           
  6689                           	psect	text23
  6690  1267                     __ptext23:	
  6691 ;; *************** function _getRxData *****************
  6692 ;; Defined at:
  6693 ;;		line 214 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
  6694 ;; Parameters:    Size  Location     Type
  6695 ;;  rf              1    wreg     unsigned char 
  6696 ;; Auto vars:     Size  Location     Type
  6697 ;;  rf              1    0[BANK1 ] unsigned char 
  6698 ;;  i               1    0        unsigned char 
  6699 ;; Return value:  Size  Location     Type
  6700 ;;		None               void
  6701 ;; Registers used:
  6702 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6703 ;; Tracked objects:
  6704 ;;		On entry : 0/0
  6705 ;;		On exit  : 0/0
  6706 ;;		Unchanged: 0/0
  6707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6708 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6709 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6711 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6712 ;;Total ram usage:        1 bytes
  6713 ;; Hardware stack levels used:    1
  6714 ;; Hardware stack levels required when called:   11
  6715 ;; This function calls:
  6716 ;;		_RfPointSelect
  6717 ;;		_setControl_Lights_Table
  6718 ;;		_setLog_Code
  6719 ;; This function is called by:
  6720 ;;		_setRF_Main
  6721 ;; This function uses a non-reentrant model
  6722 ;;
  6723                           
  6724                           
  6725                           ;psect for function _getRxData
  6726  1267                     _getRxData:	
  6727                           
  6728                           ;incstack = 0
  6729                           ; Regs used in _getRxData: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6730                           ;getRxData@rf stored from wreg
  6731  1267  0021               	movlb	1	; select bank1
  6732  1268  00EA               	movwf	getRxData@rf^(0+128)
  6733                           
  6734                           ;RF_Control_B1.c: 216: unsigned char i;
  6735                           ;RF_Control_B1.c: 217: RfPointSelect(rf);
  6736  1269  086A               	movf	getRxData@rf^(0+128),w
  6737  126A  3199  219F  3192   	fcall	_RfPointSelect
  6738                           
  6739                           ;RF_Control_B1.c: 218: if(RF->Learn)
  6740  126D  0877               	movf	_RF,w
  6741  126E  0086               	movwf	6
  6742  126F  0187               	clrf	7
  6743  1270  1F01               	btfss	1,6
  6744  1271  2A7E               	goto	l8907
  6745                           
  6746                           ;RF_Control_B1.c: 219: {
  6747                           ;RF_Control_B1.c: 220: if(RF_Data[0] == 0x0 && RF_Data[1] == 0x64)
  6748  1272  0021               	movlb	1	; select bank1
  6749  1273  08A0               	movf	_RF_Data^(0+128),f
  6750  1274  1D03               	skipz
  6751  1275  0008               	return
  6752  1276  0821               	movf	(_RF_Data^(0+128)+1),w
  6753  1277  3A64               	xorlw	100
  6754  1278  1D03               	skipz
  6755  1279  0008               	return
  6756                           
  6757                           ;RF_Control_B1.c: 221: {
  6758                           ;RF_Control_B1.c: 222: setLog_Code(1);
  6759  127A  3001               	movlw	1
  6760  127B  3191  21CF         	fcall	_setLog_Code
  6761                           
  6762                           ;RF_Control_B1.c: 223: }
  6763                           ;RF_Control_B1.c: 224: }
  6764  127D  0008               	return
  6765  127E                     l8907:	
  6766                           
  6767                           ;RF_Control_B1.c: 225: else
  6768                           ;RF_Control_B1.c: 226: {
  6769                           ;RF_Control_B1.c: 227: if(RF_Data[0] == 0x00 && RF_Data[1] == 0x02)
  6770  127E  0021               	movlb	1	; select bank1
  6771  127F  08A0               	movf	_RF_Data^(0+128),f
  6772  1280  1D03               	skipz
  6773  1281  0008               	return
  6774  1282  0821               	movf	(_RF_Data^(0+128)+1),w
  6775  1283  3A02               	xorlw	2
  6776  1284  1D03               	skipz
  6777  1285  0008               	return
  6778                           
  6779                           ;RF_Control_B1.c: 228: {
  6780                           ;RF_Control_B1.c: 229: if(RF_Data[12] == 0xff && RF_Data[13] == 0xff && RF_Data[14] == 0
      +                          xff)
  6781  1286  082C               	movf	(_RF_Data^(0+128)+12),w
  6782  1287  3AFF               	xorlw	255
  6783  1288  1D03               	skipz
  6784  1289  2A94               	goto	l8919
  6785  128A  082D               	movf	(_RF_Data^(0+128)+13),w
  6786  128B  3AFF               	xorlw	255
  6787  128C  1D03               	skipz
  6788  128D  2A94               	goto	l8919
  6789  128E  082E               	movf	(_RF_Data^(0+128)+14),w
  6790  128F  3AFF               	xorlw	255
  6791  1290  1D03               	skipz
  6792  1291  2A94               	goto	l8919
  6793                           
  6794                           ;RF_Control_B1.c: 230: {
  6795                           ;RF_Control_B1.c: 231: __nop();
  6796  1292  0000               	nop
  6797                           
  6798                           ;RF_Control_B1.c: 232: }
  6799  1293  0008               	return
  6800  1294                     l8919:	
  6801                           
  6802                           ;RF_Control_B1.c: 233: else
  6803                           ;RF_Control_B1.c: 234: {
  6804                           ;RF_Control_B1.c: 235: if(RF_Data[12] == Product->Data[12] && RF_Data[13] == Product->Da
      +                          ta[13] && RF_Data[14] == Product->Data[14])
  6805  1294  0020               	movlb	0	; select bank0
  6806  1295  086E               	movf	_Product,w
  6807  1296  3E0C               	addlw	12
  6808  1297  0086               	movwf	6
  6809  1298  3001               	movlw	1	; select bank2/3
  6810  1299  0087               	movwf	7
  6811  129A  0021               	movlb	1	; select bank1
  6812  129B  082C               	movf	(_RF_Data^(0+128)+12),w
  6813  129C  0601               	xorwf	1,w
  6814  129D  1D03               	skipz
  6815  129E  0008               	return
  6816  129F  0020               	movlb	0	; select bank0
  6817  12A0  086E               	movf	_Product,w
  6818  12A1  3E0D               	addlw	13
  6819  12A2  0086               	movwf	6
  6820  12A3  3001               	movlw	1	; select bank2/3
  6821  12A4  0087               	movwf	7
  6822  12A5  0021               	movlb	1	; select bank1
  6823  12A6  082D               	movf	(_RF_Data^(0+128)+13),w
  6824  12A7  0601               	xorwf	1,w
  6825  12A8  1D03               	skipz
  6826  12A9  0008               	return
  6827  12AA  0020               	movlb	0	; select bank0
  6828  12AB  086E               	movf	_Product,w
  6829  12AC  3E0E               	addlw	14
  6830  12AD  0086               	movwf	6
  6831  12AE  3001               	movlw	1	; select bank2/3
  6832  12AF  0087               	movwf	7
  6833  12B0  0021               	movlb	1	; select bank1
  6834  12B1  082E               	movf	(_RF_Data^(0+128)+14),w
  6835  12B2  0601               	xorwf	1,w
  6836  12B3  1D03               	skipz
  6837  12B4  0008               	return
  6838                           
  6839                           ;RF_Control_B1.c: 236: {
  6840                           ;RF_Control_B1.c: 237: setControl_Lights_Table(1);
  6841  12B5  3001               	movlw	1
  6842  12B6  318B  2382         	fcall	_setControl_Lights_Table
  6843                           
  6844                           ;RF_Control_B1.c: 246: {
  6845                           ;RF_Control_B1.c: 247: ;
  6846                           
  6847                           ;RF_Control_B1.c: 242: {
  6848                           ;RF_Control_B1.c: 243: ;
  6849                           ;RF_Control_B1.c: 244: }
  6850                           
  6851                           ;RF_Control_B1.c: 238: }
  6852                           ;RF_Control_B1.c: 239: }
  6853                           ;RF_Control_B1.c: 240: }
  6854  12B8  0008               	return
  6855  12B9                     __end_of_getRxData:	
  6856                           
  6857                           	psect	text24
  6858  11CF                     __ptext24:	
  6859 ;; *************** function _setLog_Code *****************
  6860 ;; Defined at:
  6861 ;;		line 256 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
  6862 ;; Parameters:    Size  Location     Type
  6863 ;;  rf              1    wreg     unsigned char 
  6864 ;; Auto vars:     Size  Location     Type
  6865 ;;  rf              1   11[BANK0 ] unsigned char 
  6866 ;; Return value:  Size  Location     Type
  6867 ;;		None               void
  6868 ;; Registers used:
  6869 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6870 ;; Tracked objects:
  6871 ;;		On entry : 0/0
  6872 ;;		On exit  : 0/0
  6873 ;;		Unchanged: 0/0
  6874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6876 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6877 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6878 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6879 ;;Total ram usage:        2 bytes
  6880 ;; Hardware stack levels used:    1
  6881 ;; Hardware stack levels required when called:    6
  6882 ;; This function calls:
  6883 ;;		_RfPointSelect
  6884 ;;		_setBuz
  6885 ;; This function is called by:
  6886 ;;		_getRxData
  6887 ;; This function uses a non-reentrant model
  6888 ;;
  6889                           
  6890                           
  6891                           ;psect for function _setLog_Code
  6892  11CF                     _setLog_Code:	
  6893                           
  6894                           ;incstack = 0
  6895                           ; Regs used in _setLog_Code: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6896                           ;setLog_Code@rf stored from wreg
  6897  11CF  0020               	movlb	0	; select bank0
  6898  11D0  00AB               	movwf	setLog_Code@rf
  6899                           
  6900                           ;RF_Control_B1.c: 258: RfPointSelect(rf);
  6901  11D1  082B               	movf	setLog_Code@rf,w
  6902  11D2  3199  219F  3191   	fcall	_RfPointSelect
  6903                           
  6904                           ;RF_Control_B1.c: 259: Product->Data[12]=RF_Data[12];
  6905  11D5  0021               	movlb	1	; select bank1
  6906  11D6  082C               	movf	(_RF_Data^(0+128)+12),w
  6907  11D7  0020               	movlb	0	; select bank0
  6908  11D8  00AA               	movwf	??_setLog_Code
  6909  11D9  086E               	movf	_Product,w
  6910  11DA  3E0C               	addlw	12
  6911  11DB  0086               	movwf	6
  6912  11DC  3001               	movlw	1	; select bank2/3
  6913  11DD  0087               	movwf	7
  6914  11DE  082A               	movf	??_setLog_Code,w
  6915  11DF  0081               	movwf	1
  6916                           
  6917                           ;RF_Control_B1.c: 260: Product->Data[13]=RF_Data[13];
  6918  11E0  0021               	movlb	1	; select bank1
  6919  11E1  082D               	movf	(_RF_Data^(0+128)+13),w
  6920  11E2  0020               	movlb	0	; select bank0
  6921  11E3  00AA               	movwf	??_setLog_Code
  6922  11E4  086E               	movf	_Product,w
  6923  11E5  3E0D               	addlw	13
  6924  11E6  0086               	movwf	6
  6925  11E7  3001               	movlw	1	; select bank2/3
  6926  11E8  0087               	movwf	7
  6927  11E9  082A               	movf	??_setLog_Code,w
  6928  11EA  0081               	movwf	1
  6929                           
  6930                           ;RF_Control_B1.c: 261: Product->Data[14]=RF_Data[14];
  6931  11EB  0021               	movlb	1	; select bank1
  6932  11EC  082E               	movf	(_RF_Data^(0+128)+14),w
  6933  11ED  0020               	movlb	0	; select bank0
  6934  11EE  00AA               	movwf	??_setLog_Code
  6935  11EF  086E               	movf	_Product,w
  6936  11F0  3E0E               	addlw	14
  6937  11F1  0086               	movwf	6
  6938  11F2  3001               	movlw	1	; select bank2/3
  6939  11F3  0087               	movwf	7
  6940  11F4  082A               	movf	??_setLog_Code,w
  6941  11F5  0081               	movwf	1
  6942                           
  6943                           ;RF_Control_B1.c: 262: setBuz(1,100);
  6944  11F6  3064               	movlw	100
  6945  11F7  00A6               	movwf	setBuz@time
  6946  11F8  3000               	movlw	0
  6947  11F9  00A7               	movwf	setBuz@time+1
  6948  11FA  3001               	movlw	1
  6949  11FB  3197  2789  3191   	fcall	_setBuz
  6950                           
  6951                           ;RF_Control_B1.c: 263: RF->Learn=0;
  6952  11FE  0877               	movf	_RF,w
  6953  11FF  0086               	movwf	6
  6954  1200  0187               	clrf	7
  6955  1201  1301               	bcf	1,6
  6956                           
  6957                           ;RF_Control_B1.c: 264: if(TMain->First)
  6958  1202  0020               	movlb	0	; select bank0
  6959  1203  086F               	movf	_TMain,w
  6960  1204  3E03               	addlw	3
  6961  1205  0086               	movwf	6
  6962  1206  3001               	movlw	1	; select bank2/3
  6963  1207  0087               	movwf	7
  6964  1208  1C81               	btfss	1,1
  6965  1209  2A10               	goto	l2543
  6966                           
  6967                           ;RF_Control_B1.c: 265: {
  6968                           ;RF_Control_B1.c: 266: Memory->LoopSave=1;
  6969  120A  086D               	movf	_Memory,w
  6970  120B  3E22               	addlw	34
  6971  120C  0086               	movwf	6
  6972  120D  3002               	movlw	2	; select bank4/5
  6973  120E  0087               	movwf	7
  6974  120F  1501               	bsf	1,2
  6975  1210                     l2543:	
  6976                           
  6977                           ;RF_Control_B1.c: 267: }
  6978                           ;RF_Control_B1.c: 268: Memory->Modify=1;
  6979  1210  086D               	movf	_Memory,w
  6980  1211  3E22               	addlw	34
  6981  1212  0086               	movwf	6
  6982  1213  3002               	movlw	2	; select bank4/5
  6983  1214  0087               	movwf	7
  6984  1215  1401               	bsf	1,0
  6985  1216  0008               	return
  6986  1217                     __end_of_setLog_Code:	
  6987                           
  6988                           	psect	text25
  6989  0B82                     __ptext25:	
  6990 ;; *************** function _setControl_Lights_Table *****************
  6991 ;; Defined at:
  6992 ;;		line 271 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
  6993 ;; Parameters:    Size  Location     Type
  6994 ;;  rf              1    wreg     unsigned char 
  6995 ;; Auto vars:     Size  Location     Type
  6996 ;;  rf              1   71[BANK0 ] unsigned char 
  6997 ;; Return value:  Size  Location     Type
  6998 ;;		None               void
  6999 ;; Registers used:
  7000 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7001 ;; Tracked objects:
  7002 ;;		On entry : 0/0
  7003 ;;		On exit  : 0/0
  7004 ;;		Unchanged: 0/0
  7005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7006 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7007 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7009 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7010 ;;Total ram usage:        1 bytes
  7011 ;; Hardware stack levels used:    1
  7012 ;; Hardware stack levels required when called:   10
  7013 ;; This function calls:
  7014 ;;		_RfPointSelect
  7015 ;;		_setBuz
  7016 ;;		_setDimmerLights
  7017 ;;		_setRFSW_AdjControl
  7018 ;;		_setRFSW_Control
  7019 ;;		_setRFSW_Status
  7020 ;;		_setSw_Status
  7021 ;;		_setTxData
  7022 ;; This function is called by:
  7023 ;;		_getRxData
  7024 ;; This function uses a non-reentrant model
  7025 ;;
  7026                           
  7027                           
  7028                           ;psect for function _setControl_Lights_Table
  7029  0B82                     _setControl_Lights_Table:	
  7030                           
  7031                           ;incstack = 0
  7032                           ; Regs used in _setControl_Lights_Table: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
  7033                           ;setControl_Lights_Table@rf stored from wreg
  7034  0B82  0020               	movlb	0	; select bank0
  7035  0B83  00E7               	movwf	setControl_Lights_Table@rf
  7036                           
  7037                           ;RF_Control_B1.c: 273: RfPointSelect(rf);
  7038  0B84  0867               	movf	setControl_Lights_Table@rf,w
  7039  0B85  3199  219F  318B   	fcall	_RfPointSelect
  7040                           
  7041                           ;RF_Control_B1.c: 274: if(RF_Data[15] == 0x00)
  7042  0B88  0021               	movlb	1	; select bank1
  7043  0B89  08AF               	movf	(_RF_Data^(0+128)+15),f
  7044  0B8A  1D03               	skipz
  7045  0B8B  2BD5               	goto	l8675
  7046                           
  7047                           ;RF_Control_B1.c: 275: {
  7048                           ;RF_Control_B1.c: 277: setDimmerLights(1,0);
  7049  0B8C  0020               	movlb	0	; select bank0
  7050  0B8D  01A4               	clrf	setDimmerLights@status
  7051  0B8E  3001               	movlw	1
  7052  0B8F  3189  21DE  318B   	fcall	_setDimmerLights
  7053                           
  7054                           ;RF_Control_B1.c: 278: setRFSW_Status(1,0);
  7055  0B92  0020               	movlb	0	; select bank0
  7056  0B93  01A2               	clrf	setRFSW_Status@command
  7057  0B94  3001               	movlw	1
  7058  0B95  319A  2256  318B   	fcall	_setRFSW_Status
  7059                           
  7060                           ;RF_Control_B1.c: 279: setSw_Status(1,0);
  7061  0B98  0020               	movlb	0	; select bank0
  7062  0B99  01A2               	clrf	setSw_Status@command
  7063  0B9A  3001               	movlw	1
  7064  0B9B  319A  2265  318B   	fcall	_setSw_Status
  7065                           
  7066                           ;RF_Control_B1.c: 282: setDimmerLights(2,0);
  7067  0B9E  0020               	movlb	0	; select bank0
  7068  0B9F  01A4               	clrf	setDimmerLights@status
  7069  0BA0  3002               	movlw	2
  7070  0BA1  3189  21DE  318B   	fcall	_setDimmerLights
  7071                           
  7072                           ;RF_Control_B1.c: 283: setRFSW_Status(2,0);
  7073  0BA4  0020               	movlb	0	; select bank0
  7074  0BA5  01A2               	clrf	setRFSW_Status@command
  7075  0BA6  3002               	movlw	2
  7076  0BA7  319A  2256  318B   	fcall	_setRFSW_Status
  7077                           
  7078                           ;RF_Control_B1.c: 284: setSw_Status(2,0);
  7079  0BAA  0020               	movlb	0	; select bank0
  7080  0BAB  01A2               	clrf	setSw_Status@command
  7081  0BAC  3002               	movlw	2
  7082  0BAD  319A  2265  318B   	fcall	_setSw_Status
  7083                           
  7084                           ;RF_Control_B1.c: 292: Product->Data[9]=0;
  7085  0BB0  0020               	movlb	0	; select bank0
  7086  0BB1  086E               	movf	_Product,w
  7087  0BB2  3E09               	addlw	9
  7088  0BB3  0086               	movwf	6
  7089  0BB4  3001               	movlw	1	; select bank2/3
  7090  0BB5  0087               	movwf	7
  7091  0BB6  0181               	clrf	1
  7092                           
  7093                           ;RF_Control_B1.c: 293: Product->Data[11]=0;
  7094  0BB7  086E               	movf	_Product,w
  7095  0BB8  3E0B               	addlw	11
  7096  0BB9  0086               	movwf	6
  7097  0BBA  3001               	movlw	1	; select bank2/3
  7098  0BBB  0087               	movwf	7
  7099  0BBC  0181               	clrf	1
  7100                           
  7101                           ;RF_Control_B1.c: 294: Product->Data[15]=0;
  7102  0BBD  086E               	movf	_Product,w
  7103  0BBE  3E0F               	addlw	15
  7104  0BBF  0086               	movwf	6
  7105  0BC0  3001               	movlw	1	; select bank2/3
  7106  0BC1  0087               	movwf	7
  7107  0BC2  0181               	clrf	1
  7108                           
  7109                           ;RF_Control_B1.c: 295: Product->Data[17]=0;
  7110  0BC3  086E               	movf	_Product,w
  7111  0BC4  3E11               	addlw	17
  7112  0BC5  0086               	movwf	6
  7113  0BC6  3001               	movlw	1	; select bank2/3
  7114  0BC7  0087               	movwf	7
  7115  0BC8  0181               	clrf	1
  7116                           
  7117                           ;RF_Control_B1.c: 296: setBuz(1,100);
  7118  0BC9  3064               	movlw	100
  7119  0BCA  00A6               	movwf	setBuz@time
  7120  0BCB  3000               	movlw	0
  7121  0BCC  00A7               	movwf	setBuz@time+1
  7122  0BCD  3001               	movlw	1
  7123  0BCE  3197  2789  318B   	fcall	_setBuz
  7124                           
  7125                           ;RF_Control_B1.c: 297: setTxData(1);
  7126  0BD1  3001               	movlw	1
  7127  0BD2  3187  271C         	fcall	_setTxData
  7128                           
  7129                           ;RF_Control_B1.c: 298: }
  7130  0BD4  0008               	return
  7131  0BD5                     l8675:	
  7132                           
  7133                           ;RF_Control_B1.c: 299: else if(RF_Data[15] == 0x20)
  7134  0BD5  0021               	movlb	1	; select bank1
  7135  0BD6  082F               	movf	(_RF_Data^(0+128)+15),w
  7136  0BD7  3A20               	xorlw	32
  7137  0BD8  1D03               	skipz
  7138  0BD9  2BF1               	goto	l8681
  7139                           
  7140                           ;RF_Control_B1.c: 300: {
  7141                           ;RF_Control_B1.c: 301: Product->Data[9]=0;
  7142  0BDA  0020               	movlb	0	; select bank0
  7143  0BDB  086E               	movf	_Product,w
  7144  0BDC  3E09               	addlw	9
  7145  0BDD  0086               	movwf	6
  7146  0BDE  3001               	movlw	1	; select bank2/3
  7147  0BDF  0087               	movwf	7
  7148  0BE0  0181               	clrf	1
  7149                           
  7150                           ;RF_Control_B1.c: 302: Product->Data[11]=0;
  7151  0BE1  086E               	movf	_Product,w
  7152  0BE2  3E0B               	addlw	11
  7153  0BE3  0086               	movwf	6
  7154  0BE4  3001               	movlw	1	; select bank2/3
  7155  0BE5  0087               	movwf	7
  7156  0BE6  0181               	clrf	1
  7157                           
  7158                           ;RF_Control_B1.c: 303: Product->Data[17]=0;
  7159  0BE7  086E               	movf	_Product,w
  7160  0BE8  3E11               	addlw	17
  7161  0BE9  0086               	movwf	6
  7162  0BEA  3001               	movlw	1	; select bank2/3
  7163  0BEB  0087               	movwf	7
  7164  0BEC  0181               	clrf	1
  7165                           
  7166                           ;RF_Control_B1.c: 304: setTxData(1);
  7167  0BED  3001               	movlw	1
  7168  0BEE  3187  271C         	fcall	_setTxData
  7169                           
  7170                           ;RF_Control_B1.c: 305: }
  7171  0BF0  0008               	return
  7172  0BF1                     l8681:	
  7173                           
  7174                           ;RF_Control_B1.c: 307: else if(RF_Data[15] == 0x01)
  7175  0BF1  0021               	movlb	1	; select bank1
  7176  0BF2  082F               	movf	(_RF_Data^(0+128)+15),w
  7177  0BF3  3A01               	xorlw	1
  7178  0BF4  1D03               	skipz
  7179  0BF5  2BFA               	goto	l8685
  7180                           
  7181                           ;RF_Control_B1.c: 308: {
  7182                           ;RF_Control_B1.c: 309: setRFSW_Control(1);
  7183  0BF6  3001               	movlw	1
  7184  0BF7  318A  22F2         	fcall	_setRFSW_Control
  7185                           
  7186                           ;RF_Control_B1.c: 310: }
  7187  0BF9  0008               	return
  7188  0BFA                     l8685:	
  7189                           
  7190                           ;RF_Control_B1.c: 312: else if(RF_Data[15] == 0x11)
  7191  0BFA  0021               	movlb	1	; select bank1
  7192  0BFB  082F               	movf	(_RF_Data^(0+128)+15),w
  7193  0BFC  3A11               	xorlw	17
  7194  0BFD  1D03               	skipz
  7195  0BFE  2C0A               	goto	l8691
  7196                           
  7197                           ;RF_Control_B1.c: 313: {
  7198                           ;RF_Control_B1.c: 314: setRFSW_AdjControl(1);
  7199  0BFF  3001               	movlw	1
  7200  0C00  319F  27C0         	fcall	_setRFSW_AdjControl
  7201                           
  7202                           ;RF_Control_B1.c: 315: TMain->ClockStop=1;
  7203  0C02  0020               	movlb	0	; select bank0
  7204  0C03  086F               	movf	_TMain,w
  7205  0C04  3E0F               	addlw	15
  7206  0C05  0086               	movwf	6
  7207  0C06  3001               	movlw	1	; select bank2/3
  7208  0C07  0087               	movwf	7
  7209  0C08  1501               	bsf	1,2
  7210                           
  7211                           ;RF_Control_B1.c: 316: }
  7212  0C09  0008               	return
  7213  0C0A                     l8691:	
  7214                           
  7215                           ;RF_Control_B1.c: 321: else if(RF_Data[15] == 0x02)
  7216  0C0A  0021               	movlb	1	; select bank1
  7217  0C0B  082F               	movf	(_RF_Data^(0+128)+15),w
  7218  0C0C  3A02               	xorlw	2
  7219  0C0D  1D03               	skipz
  7220  0C0E  2C13               	goto	l8695
  7221                           
  7222                           ;RF_Control_B1.c: 322: {
  7223                           ;RF_Control_B1.c: 323: setRFSW_Control(2);
  7224  0C0F  3002               	movlw	2
  7225  0C10  318A  22F2         	fcall	_setRFSW_Control
  7226                           
  7227                           ;RF_Control_B1.c: 324: }
  7228  0C12  0008               	return
  7229  0C13                     l8695:	
  7230                           
  7231                           ;RF_Control_B1.c: 326: else if(RF_Data[15] == 0x21)
  7232  0C13  0021               	movlb	1	; select bank1
  7233  0C14  082F               	movf	(_RF_Data^(0+128)+15),w
  7234  0C15  3A21               	xorlw	33
  7235  0C16  1D03               	skipz
  7236  0C17  0008               	return
  7237                           
  7238                           ;RF_Control_B1.c: 327: {
  7239                           ;RF_Control_B1.c: 328: setRFSW_AdjControl(2);
  7240  0C18  3002               	movlw	2
  7241  0C19  319F  27C0         	fcall	_setRFSW_AdjControl
  7242  0C1B  0008               	return
  7243  0C1C                     __end_of_setControl_Lights_Table:	
  7244                           
  7245                           	psect	text26
  7246  0AF2                     __ptext26:	
  7247 ;; *************** function _setRFSW_Control *****************
  7248 ;; Defined at:
  7249 ;;		line 369 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
  7250 ;; Parameters:    Size  Location     Type
  7251 ;;  sw              1    wreg     unsigned char 
  7252 ;; Auto vars:     Size  Location     Type
  7253 ;;  sw              1   67[BANK0 ] unsigned char 
  7254 ;; Return value:  Size  Location     Type
  7255 ;;		None               void
  7256 ;; Registers used:
  7257 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7258 ;; Tracked objects:
  7259 ;;		On entry : 0/0
  7260 ;;		On exit  : 0/0
  7261 ;;		Unchanged: 0/0
  7262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7263 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7264 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7265 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7266 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7267 ;;Total ram usage:        2 bytes
  7268 ;; Hardware stack levels used:    1
  7269 ;; Hardware stack levels required when called:    8
  7270 ;; This function calls:
  7271 ;;		_RfSWPointSelect
  7272 ;;		_setBuz
  7273 ;;		_setDelayOff_GO
  7274 ;;		_setDimmerLights_Switch
  7275 ;;		_setDimmerLights_Trigger
  7276 ;;		_setRF_DimmerLights
  7277 ;;		_setSw_Status
  7278 ;;		_setTxData
  7279 ;; This function is called by:
  7280 ;;		_setControl_Lights_Table
  7281 ;; This function uses a non-reentrant model
  7282 ;;
  7283                           
  7284                           
  7285                           ;psect for function _setRFSW_Control
  7286  0AF2                     _setRFSW_Control:	
  7287                           
  7288                           ;incstack = 0
  7289                           ; Regs used in _setRFSW_Control: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7290                           ;setRFSW_Control@sw stored from wreg
  7291  0AF2  0020               	movlb	0	; select bank0
  7292  0AF3  00E3               	movwf	setRFSW_Control@sw
  7293                           
  7294                           ;RF_Control_B1.c: 371: RfSWPointSelect(sw);
  7295  0AF4  0863               	movf	setRFSW_Control@sw,w
  7296  0AF5  319B  235D  318A   	fcall	_RfSWPointSelect
  7297                           
  7298                           ;RF_Control_B1.c: 372: if(!RFSW->Status)
  7299  0AF8  0021               	movlb	1	; select bank1
  7300  0AF9  083B               	movf	_RFSW^(0+128),w
  7301  0AFA  0086               	movwf	6
  7302  0AFB  0187               	clrf	7
  7303  0AFC  1801               	btfsc	1,0
  7304  0AFD  2B33               	goto	l8533
  7305                           
  7306                           ;RF_Control_B1.c: 373: {
  7307                           ;RF_Control_B1.c: 374: if(RF_Data[16] == 0x80)
  7308  0AFE  0830               	movf	(_RF_Data^(0+128)+16),w
  7309  0AFF  3A80               	xorlw	128
  7310  0B00  1D03               	skipz
  7311  0B01  2B0F               	goto	l8523
  7312                           
  7313                           ;RF_Control_B1.c: 375: {
  7314                           ;RF_Control_B1.c: 376: setDelayOff_GO(sw,1,RF_Data[17]);
  7315  0B02  0020               	movlb	0	; select bank0
  7316  0B03  01A3               	clrf	setDelayOff_GO@command
  7317  0B04  0AA3               	incf	setDelayOff_GO@command,f
  7318  0B05  0021               	movlb	1	; select bank1
  7319  0B06  0831               	movf	(_RF_Data^(0+128)+17),w
  7320  0B07  0020               	movlb	0	; select bank0
  7321  0B08  00E2               	movwf	??_setRFSW_Control
  7322  0B09  0862               	movf	??_setRFSW_Control,w
  7323  0B0A  00A4               	movwf	setDelayOff_GO@value
  7324  0B0B  0863               	movf	setRFSW_Control@sw,w
  7325  0B0C  3192  22B9  318A   	fcall	_setDelayOff_GO
  7326  0B0F                     l8523:	
  7327                           
  7328                           ;RF_Control_B1.c: 377: }
  7329                           ;RF_Control_B1.c: 378: RFSW->Status=1;
  7330  0B0F  0021               	movlb	1	; select bank1
  7331  0B10  083B               	movf	_RFSW^(0+128),w
  7332  0B11  0086               	movwf	6
  7333  0B12  0187               	clrf	7
  7334  0B13  1401               	bsf	1,0
  7335                           
  7336                           ;RF_Control_B1.c: 379: setSw_Status(sw,1);
  7337  0B14  0020               	movlb	0	; select bank0
  7338  0B15  01A2               	clrf	setSw_Status@command
  7339  0B16  0AA2               	incf	setSw_Status@command,f
  7340  0B17  0863               	movf	setRFSW_Control@sw,w
  7341  0B18  319A  2265  318A   	fcall	_setSw_Status
  7342                           
  7343                           ;RF_Control_B1.c: 381: setDimmerLights_Trigger(sw,1);
  7344  0B1B  0020               	movlb	0	; select bank0
  7345  0B1C  01A2               	clrf	setDimmerLights_Trigger@command
  7346  0B1D  0AA2               	incf	setDimmerLights_Trigger@command,f
  7347  0B1E  0863               	movf	setRFSW_Control@sw,w
  7348  0B1F  319A  2294  318A   	fcall	_setDimmerLights_Trigger
  7349                           
  7350                           ;RF_Control_B1.c: 382: setDimmerLights_Switch(sw,1);
  7351  0B22  0020               	movlb	0	; select bank0
  7352  0B23  01A2               	clrf	setDimmerLights_Switch@command
  7353  0B24  0AA2               	incf	setDimmerLights_Switch@command,f
  7354  0B25  0863               	movf	setRFSW_Control@sw,w
  7355  0B26  319A  2284  318A   	fcall	_setDimmerLights_Switch
  7356                           
  7357                           ;RF_Control_B1.c: 384: setRF_DimmerLights(sw,RFSW->Status);
  7358  0B29  0021               	movlb	1	; select bank1
  7359  0B2A  083B               	movf	_RFSW^(0+128),w
  7360  0B2B  0086               	movwf	6
  7361  0B2C  0187               	clrf	7
  7362  0B2D  3000               	movlw	0
  7363  0B2E  1801               	btfsc	1,0
  7364  0B2F  3001               	movlw	1
  7365  0B30  0020               	movlb	0	; select bank0
  7366  0B31  00DD               	movwf	setRF_DimmerLights@on
  7367  0B32  2B71               	goto	L4
  7368  0B33                     l8533:	
  7369                           ;RF_Control_B1.c: 385: }
  7370                           
  7371                           
  7372                           ;RF_Control_B1.c: 386: else
  7373                           ;RF_Control_B1.c: 387: {
  7374                           ;RF_Control_B1.c: 388: if(RF_Data[16] == 0x80)
  7375  0B33  0021               	movlb	1	; select bank1
  7376  0B34  0830               	movf	(_RF_Data^(0+128)+16),w
  7377  0B35  3A80               	xorlw	128
  7378  0B36  1D03               	skipz
  7379  0B37  2B49               	goto	l8537
  7380                           
  7381                           ;RF_Control_B1.c: 389: {
  7382                           ;RF_Control_B1.c: 390: setDelayOff_GO(sw,1,RF_Data[17]);
  7383  0B38  0020               	movlb	0	; select bank0
  7384  0B39  01A3               	clrf	setDelayOff_GO@command
  7385  0B3A  0AA3               	incf	setDelayOff_GO@command,f
  7386  0B3B  0021               	movlb	1	; select bank1
  7387  0B3C  0831               	movf	(_RF_Data^(0+128)+17),w
  7388  0B3D  0020               	movlb	0	; select bank0
  7389  0B3E  00E2               	movwf	??_setRFSW_Control
  7390  0B3F  0862               	movf	??_setRFSW_Control,w
  7391  0B40  00A4               	movwf	setDelayOff_GO@value
  7392  0B41  0863               	movf	setRFSW_Control@sw,w
  7393  0B42  3192  22B9  318A   	fcall	_setDelayOff_GO
  7394                           
  7395                           ;RF_Control_B1.c: 391: setRF_DimmerLights(sw,1);
  7396  0B45  0020               	movlb	0	; select bank0
  7397  0B46  01DD               	clrf	setRF_DimmerLights@on
  7398  0B47  0ADD               	incf	setRF_DimmerLights@on,f
  7399  0B48  2B71               	goto	L4
  7400  0B49                     l8537:	
  7401                           ;RF_Control_B1.c: 392: }
  7402                           
  7403                           
  7404                           ;RF_Control_B1.c: 393: else
  7405                           ;RF_Control_B1.c: 394: {
  7406                           ;RF_Control_B1.c: 395: RFSW->Status=0;
  7407  0B49  0021               	movlb	1	; select bank1
  7408  0B4A  083B               	movf	_RFSW^(0+128),w
  7409  0B4B  0086               	movwf	6
  7410  0B4C  0187               	clrf	7
  7411  0B4D  1001               	bcf	1,0
  7412                           
  7413                           ;RF_Control_B1.c: 396: setSw_Status(sw,0);
  7414  0B4E  0020               	movlb	0	; select bank0
  7415  0B4F  01A2               	clrf	setSw_Status@command
  7416  0B50  0863               	movf	setRFSW_Control@sw,w
  7417  0B51  319A  2265  318A   	fcall	_setSw_Status
  7418                           
  7419                           ;RF_Control_B1.c: 398: setDimmerLights_Trigger(sw,1);
  7420  0B54  0020               	movlb	0	; select bank0
  7421  0B55  01A2               	clrf	setDimmerLights_Trigger@command
  7422  0B56  0AA2               	incf	setDimmerLights_Trigger@command,f
  7423  0B57  0863               	movf	setRFSW_Control@sw,w
  7424  0B58  319A  2294  318A   	fcall	_setDimmerLights_Trigger
  7425                           
  7426                           ;RF_Control_B1.c: 399: setDimmerLights_Switch(sw,RFSW->Status);
  7427  0B5B  0021               	movlb	1	; select bank1
  7428  0B5C  083B               	movf	_RFSW^(0+128),w
  7429  0B5D  0086               	movwf	6
  7430  0B5E  0187               	clrf	7
  7431  0B5F  3000               	movlw	0
  7432  0B60  1801               	btfsc	1,0
  7433  0B61  3001               	movlw	1
  7434  0B62  0020               	movlb	0	; select bank0
  7435  0B63  00A2               	movwf	setDimmerLights_Switch@command
  7436  0B64  0863               	movf	setRFSW_Control@sw,w
  7437  0B65  319A  2284  318A   	fcall	_setDimmerLights_Switch
  7438                           
  7439                           ;RF_Control_B1.c: 401: setDelayOff_GO(sw,0,0);
  7440  0B68  0020               	movlb	0	; select bank0
  7441  0B69  01A3               	clrf	setDelayOff_GO@command
  7442  0B6A  01A4               	clrf	setDelayOff_GO@value
  7443  0B6B  0863               	movf	setRFSW_Control@sw,w
  7444  0B6C  3192  22B9  318A   	fcall	_setDelayOff_GO
  7445                           
  7446                           ;RF_Control_B1.c: 402: setRF_DimmerLights(sw,0);
  7447  0B6F  0020               	movlb	0	; select bank0
  7448  0B70  01DD               	clrf	setRF_DimmerLights@on
  7449  0B71                     L4:	
  7450  0B71  0863               	movf	setRFSW_Control@sw,w
  7451  0B72  3195  2560  318A   	fcall	_setRF_DimmerLights
  7452                           
  7453                           ;RF_Control_B1.c: 403: }
  7454                           ;RF_Control_B1.c: 404: }
  7455                           ;RF_Control_B1.c: 405: setBuz(1,100);
  7456  0B75  3064               	movlw	100
  7457  0B76  0020               	movlb	0	; select bank0
  7458  0B77  00A6               	movwf	setBuz@time
  7459  0B78  3000               	movlw	0
  7460  0B79  00A7               	movwf	setBuz@time+1
  7461  0B7A  3001               	movlw	1
  7462  0B7B  3197  2789  318A   	fcall	_setBuz
  7463                           
  7464                           ;RF_Control_B1.c: 406: setTxData(1);
  7465  0B7E  3001               	movlw	1
  7466  0B7F  3187  271C         	fcall	_setTxData
  7467  0B81  0008               	return
  7468  0B82                     __end_of_setRFSW_Control:	
  7469                           
  7470                           	psect	text27
  7471  12B9                     __ptext27:	
  7472 ;; *************** function _setDelayOff_GO *****************
  7473 ;; Defined at:
  7474 ;;		line 92 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\DelayOff_B1.c"
  7475 ;; Parameters:    Size  Location     Type
  7476 ;;  sw              1    wreg     unsigned char 
  7477 ;;  command         1    3[BANK0 ] unsigned char 
  7478 ;;  value           1    4[BANK0 ] unsigned char 
  7479 ;; Auto vars:     Size  Location     Type
  7480 ;;  sw              1    7[BANK0 ] unsigned char 
  7481 ;; Return value:  Size  Location     Type
  7482 ;;		None               void
  7483 ;; Registers used:
  7484 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7485 ;; Tracked objects:
  7486 ;;		On entry : 0/0
  7487 ;;		On exit  : 0/0
  7488 ;;		Unchanged: 0/0
  7489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7490 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7491 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7492 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7493 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7494 ;;Total ram usage:        5 bytes
  7495 ;; Hardware stack levels used:    1
  7496 ;; Hardware stack levels required when called:    5
  7497 ;; This function calls:
  7498 ;;		_DelayOffPointSelect
  7499 ;;		_DelayTimejudge
  7500 ;; This function is called by:
  7501 ;;		_setRFSW_Control
  7502 ;;		_Sw_DimmerOffFunc
  7503 ;; This function uses a non-reentrant model
  7504 ;;
  7505                           
  7506                           
  7507                           ;psect for function _setDelayOff_GO
  7508  12B9                     _setDelayOff_GO:	
  7509                           
  7510                           ;incstack = 0
  7511                           ; Regs used in _setDelayOff_GO: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7512                           ;setDelayOff_GO@sw stored from wreg
  7513  12B9  0020               	movlb	0	; select bank0
  7514  12BA  00A7               	movwf	setDelayOff_GO@sw
  7515                           
  7516                           ;DelayOff_B1.c: 94: DelayOffPointSelect(sw);
  7517  12BB  0827               	movf	setDelayOff_GO@sw,w
  7518  12BC  319B  230B  3192   	fcall	_DelayOffPointSelect
  7519                           
  7520                           ;DelayOff_B1.c: 95: if(DelayOff->Enable)
  7521  12BF  0020               	movlb	0	; select bank0
  7522  12C0  0869               	movf	_DelayOff,w
  7523  12C1  0086               	movwf	6
  7524  12C2  0187               	clrf	7
  7525  12C3  1C01               	btfss	1,0
  7526  12C4  0008               	return
  7527                           
  7528                           ;DelayOff_B1.c: 96: {
  7529                           ;DelayOff_B1.c: 97: DelayOff->GO=command;
  7530  12C5  0869               	movf	_DelayOff,w
  7531  12C6  0086               	movwf	6
  7532  12C7  0187               	clrf	7
  7533  12C8  0823               	movf	setDelayOff_GO@command,w
  7534  12C9  1081               	bcf	1,1
  7535  12CA  1D03               	skipz
  7536  12CB  1481               	bsf	1,1
  7537                           
  7538                           ;DelayOff_B1.c: 98: if(command)
  7539  12CC  0823               	movf	setDelayOff_GO@command,w
  7540  12CD  1903               	btfsc	3,2
  7541  12CE  2AF8               	goto	l8349
  7542                           
  7543                           ;DelayOff_B1.c: 99: {
  7544                           ;DelayOff_B1.c: 100: DelayOff->Value=DelayTimejudge(value);
  7545  12CF  0824               	movf	setDelayOff_GO@value,w
  7546  12D0  319E  2681  3192   	fcall	_DelayTimejudge
  7547  12D3  0020               	movlb	0	; select bank0
  7548  12D4  00A5               	movwf	??_setDelayOff_GO
  7549  12D5  0A69               	incf	_DelayOff,w
  7550  12D6  0086               	movwf	6
  7551  12D7  0187               	clrf	7
  7552  12D8  0825               	movf	??_setDelayOff_GO,w
  7553  12D9  0081               	movwf	1
  7554                           
  7555                           ;DelayOff_B1.c: 101: if(((value%16)==5 || !(value%16)) && value <= 0x25)
  7556  12DA  300F               	movlw	15
  7557  12DB  0524               	andwf	setDelayOff_GO@value,w
  7558  12DC  00A5               	movwf	??_setDelayOff_GO
  7559  12DD  0825               	movf	??_setDelayOff_GO,w
  7560  12DE  3A05               	xorlw	5
  7561  12DF  1903               	skipnz
  7562  12E0  2AE5               	goto	l8343
  7563  12E1  0824               	movf	setDelayOff_GO@value,w
  7564  12E2  390F               	andlw	15
  7565  12E3  1D03               	btfss	3,2
  7566  12E4  2AEB               	goto	l8347
  7567  12E5                     l8343:	
  7568  12E5  3026               	movlw	38
  7569  12E6  0224               	subwf	setDelayOff_GO@value,w
  7570  12E7  1803               	skipnc
  7571  12E8  2AEB               	goto	l8347
  7572                           
  7573                           ;DelayOff_B1.c: 102: {
  7574                           ;DelayOff_B1.c: 103: Product->Data[26+sw]=value;
  7575  12E9  0824               	movf	setDelayOff_GO@value,w
  7576  12EA  2AEC               	goto	L5
  7577  12EB                     l8347:	
  7578                           ;DelayOff_B1.c: 104: }
  7579                           
  7580                           
  7581                           ;DelayOff_B1.c: 105: else
  7582                           ;DelayOff_B1.c: 106: {
  7583                           ;DelayOff_B1.c: 107: Product->Data[26+sw]=0x05;
  7584  12EB  3005               	movlw	5
  7585  12EC                     L5:	
  7586  12EC  00A5               	movwf	??_setDelayOff_GO
  7587  12ED  0827               	movf	setDelayOff_GO@sw,w
  7588  12EE  3E1A               	addlw	26
  7589  12EF  076E               	addwf	_Product,w
  7590  12F0  00A6               	movwf	??_setDelayOff_GO+1
  7591  12F1  0826               	movf	??_setDelayOff_GO+1,w
  7592  12F2  0086               	movwf	6
  7593  12F3  3001               	movlw	1	; select bank2/3
  7594  12F4  0087               	movwf	7
  7595  12F5  0825               	movf	??_setDelayOff_GO,w
  7596  12F6  0081               	movwf	1
  7597                           
  7598                           ;DelayOff_B1.c: 108: }
  7599                           ;DelayOff_B1.c: 109: }
  7600  12F7  2B04               	goto	l8353
  7601  12F8                     l8349:	
  7602                           
  7603                           ;DelayOff_B1.c: 110: else if(!command)
  7604  12F8  08A3               	movf	setDelayOff_GO@command,f
  7605  12F9  1D03               	skipz
  7606  12FA  2B04               	goto	l8353
  7607                           
  7608                           ;DelayOff_B1.c: 111: {
  7609                           ;DelayOff_B1.c: 112: Product->Data[sw+26]=0;
  7610  12FB  0827               	movf	setDelayOff_GO@sw,w
  7611  12FC  3E1A               	addlw	26
  7612  12FD  076E               	addwf	_Product,w
  7613  12FE  00A5               	movwf	??_setDelayOff_GO
  7614  12FF  0825               	movf	??_setDelayOff_GO,w
  7615  1300  0086               	movwf	6
  7616  1301  3001               	movlw	1	; select bank2/3
  7617  1302  0087               	movwf	7
  7618  1303  0181               	clrf	1
  7619  1304                     l8353:	
  7620                           
  7621                           ;DelayOff_B1.c: 113: }
  7622                           ;DelayOff_B1.c: 114: DelayOff->SecondTime=0;
  7623  1304  0869               	movf	_DelayOff,w
  7624  1305  3E02               	addlw	2
  7625  1306  0086               	movwf	6
  7626  1307  0187               	clrf	7
  7627  1308  3000               	movlw	0
  7628  1309  3FC0               	movwi [0]fsr1
  7629  130A  3FC1               	movwi [1]fsr1
  7630                           
  7631                           ;DelayOff_B1.c: 115: DelayOff->MinuteTime=0;
  7632  130B  0869               	movf	_DelayOff,w
  7633  130C  3E04               	addlw	4
  7634  130D  0086               	movwf	6
  7635  130E  0187               	clrf	7
  7636  130F  0181               	clrf	1
  7637  1310  0008               	return
  7638  1311                     __end_of_setDelayOff_GO:	
  7639                           
  7640                           	psect	text28
  7641  1E81                     __ptext28:	
  7642 ;; *************** function _DelayTimejudge *****************
  7643 ;; Defined at:
  7644 ;;		line 119 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\DelayOff_B1.c"
  7645 ;; Parameters:    Size  Location     Type
  7646 ;;  value           1    wreg     unsigned char 
  7647 ;; Auto vars:     Size  Location     Type
  7648 ;;  value           1    2[BANK0 ] unsigned char 
  7649 ;;  i               1    1[BANK0 ] unsigned char 
  7650 ;; Return value:  Size  Location     Type
  7651 ;;                  1    wreg      unsigned char 
  7652 ;; Registers used:
  7653 ;;		wreg
  7654 ;; Tracked objects:
  7655 ;;		On entry : 0/0
  7656 ;;		On exit  : 0/0
  7657 ;;		Unchanged: 0/0
  7658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7660 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7661 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7662 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7663 ;;Total ram usage:        3 bytes
  7664 ;; Hardware stack levels used:    1
  7665 ;; Hardware stack levels required when called:    4
  7666 ;; This function calls:
  7667 ;;		Nothing
  7668 ;; This function is called by:
  7669 ;;		_setDelayOff_GO
  7670 ;; This function uses a non-reentrant model
  7671 ;;
  7672                           
  7673                           
  7674                           ;psect for function _DelayTimejudge
  7675  1E81                     _DelayTimejudge:	
  7676                           
  7677                           ;incstack = 0
  7678                           ; Regs used in _DelayTimejudge: [wreg]
  7679                           ;DelayTimejudge@value stored from wreg
  7680  1E81  0020               	movlb	0	; select bank0
  7681  1E82  00A2               	movwf	DelayTimejudge@value
  7682                           
  7683                           ;DelayOff_B1.c: 121: char i=5;
  7684  1E83  3005               	movlw	5
  7685  1E84  00A0               	movwf	??_DelayTimejudge
  7686  1E85  0820               	movf	??_DelayTimejudge,w
  7687  1E86  00A1               	movwf	DelayTimejudge@i
  7688                           
  7689                           ;DelayOff_B1.c: 122: if(value == 0x05)
  7690  1E87  0822               	movf	DelayTimejudge@value,w
  7691  1E88  3A05               	xorlw	5
  7692  1E89  1D03               	skipz
  7693  1E8A  2E8D               	goto	l8183
  7694                           
  7695                           ;DelayOff_B1.c: 123: {
  7696                           ;DelayOff_B1.c: 124: i=5;
  7697  1E8B  3005               	movlw	5
  7698  1E8C  2EAA               	goto	L10
  7699  1E8D                     l8183:	
  7700                           ;DelayOff_B1.c: 125: }
  7701                           
  7702                           
  7703                           ;DelayOff_B1.c: 126: else if(value == 0x10)
  7704  1E8D  0822               	movf	DelayTimejudge@value,w
  7705  1E8E  3A10               	xorlw	16
  7706  1E8F  1D03               	skipz
  7707  1E90  2E93               	goto	l8187
  7708                           
  7709                           ;DelayOff_B1.c: 127: {
  7710                           ;DelayOff_B1.c: 128: i=10;
  7711  1E91  300A               	movlw	10
  7712  1E92  2EAA               	goto	L10
  7713  1E93                     l8187:	
  7714                           ;DelayOff_B1.c: 129: }
  7715                           
  7716                           
  7717                           ;DelayOff_B1.c: 130: else if(value == 0x15)
  7718  1E93  0822               	movf	DelayTimejudge@value,w
  7719  1E94  3A15               	xorlw	21
  7720  1E95  1D03               	skipz
  7721  1E96  2E99               	goto	l8191
  7722                           
  7723                           ;DelayOff_B1.c: 131: {
  7724                           ;DelayOff_B1.c: 132: i=15;
  7725  1E97  300F               	movlw	15
  7726  1E98  2EAA               	goto	L10
  7727  1E99                     l8191:	
  7728                           ;DelayOff_B1.c: 133: }
  7729                           
  7730                           
  7731                           ;DelayOff_B1.c: 134: else if(value == 0x20)
  7732  1E99  0822               	movf	DelayTimejudge@value,w
  7733  1E9A  3A20               	xorlw	32
  7734  1E9B  1D03               	skipz
  7735  1E9C  2E9F               	goto	l8195
  7736                           
  7737                           ;DelayOff_B1.c: 135: {
  7738                           ;DelayOff_B1.c: 136: i=20;
  7739  1E9D  3014               	movlw	20
  7740  1E9E  2EAA               	goto	L10
  7741  1E9F                     l8195:	
  7742                           ;DelayOff_B1.c: 137: }
  7743                           
  7744                           
  7745                           ;DelayOff_B1.c: 138: else if(value == 0x25)
  7746  1E9F  0822               	movf	DelayTimejudge@value,w
  7747  1EA0  3A25               	xorlw	37
  7748  1EA1  1D03               	skipz
  7749  1EA2  2EA5               	goto	l8199
  7750                           
  7751                           ;DelayOff_B1.c: 139: {
  7752                           ;DelayOff_B1.c: 140: i=25;
  7753  1EA3  3019               	movlw	25
  7754  1EA4  2EAA               	goto	L10
  7755  1EA5                     l8199:	
  7756                           ;DelayOff_B1.c: 141: }
  7757                           
  7758                           
  7759                           ;DelayOff_B1.c: 142: else if(value == 0x30)
  7760  1EA5  0822               	movf	DelayTimejudge@value,w
  7761  1EA6  3A30               	xorlw	48
  7762  1EA7  1D03               	skipz
  7763  1EA8  2EAD               	goto	l690
  7764                           
  7765                           ;DelayOff_B1.c: 143: {
  7766                           ;DelayOff_B1.c: 144: i=30;
  7767  1EA9  301E               	movlw	30
  7768  1EAA                     L10:	
  7769  1EAA  00A0               	movwf	??_DelayTimejudge
  7770  1EAB  0820               	movf	??_DelayTimejudge,w
  7771  1EAC  00A1               	movwf	DelayTimejudge@i
  7772  1EAD                     l690:	
  7773                           
  7774                           ;DelayOff_B1.c: 145: }
  7775                           ;DelayOff_B1.c: 146: return i;
  7776  1EAD  0821               	movf	DelayTimejudge@i,w
  7777  1EAE  0008               	return
  7778  1EAF                     __end_of_DelayTimejudge:	
  7779                           
  7780                           	psect	text29
  7781  1FC0                     __ptext29:	
  7782 ;; *************** function _setRFSW_AdjControl *****************
  7783 ;; Defined at:
  7784 ;;		line 409 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
  7785 ;; Parameters:    Size  Location     Type
  7786 ;;  sw              1    wreg     unsigned char 
  7787 ;; Auto vars:     Size  Location     Type
  7788 ;;  sw              1   70[BANK0 ] unsigned char 
  7789 ;; Return value:  Size  Location     Type
  7790 ;;		None               void
  7791 ;; Registers used:
  7792 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7793 ;; Tracked objects:
  7794 ;;		On entry : 0/0
  7795 ;;		On exit  : 0/0
  7796 ;;		Unchanged: 0/0
  7797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7798 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7799 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7800 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7801 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7802 ;;Total ram usage:        3 bytes
  7803 ;; Hardware stack levels used:    1
  7804 ;; Hardware stack levels required when called:    9
  7805 ;; This function calls:
  7806 ;;		_RfSWPointSelect
  7807 ;;		_setRF_DimmerValue
  7808 ;;		_setTxData
  7809 ;; This function is called by:
  7810 ;;		_setControl_Lights_Table
  7811 ;; This function uses a non-reentrant model
  7812 ;;
  7813                           
  7814                           
  7815                           ;psect for function _setRFSW_AdjControl
  7816  1FC0                     _setRFSW_AdjControl:	
  7817                           
  7818                           ;incstack = 0
  7819                           ; Regs used in _setRFSW_AdjControl: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7820                           ;setRFSW_AdjControl@sw stored from wreg
  7821  1FC0  0020               	movlb	0	; select bank0
  7822  1FC1  00E6               	movwf	setRFSW_AdjControl@sw
  7823                           
  7824                           ;RF_Control_B1.c: 411: RfSWPointSelect(sw);
  7825  1FC2  0866               	movf	setRFSW_AdjControl@sw,w
  7826  1FC3  319B  235D  319F   	fcall	_RfSWPointSelect
  7827                           
  7828                           ;RF_Control_B1.c: 412: if(RFSW->Status)
  7829  1FC6  0021               	movlb	1	; select bank1
  7830  1FC7  083B               	movf	_RFSW^(0+128),w
  7831  1FC8  0086               	movwf	6
  7832  1FC9  0187               	clrf	7
  7833  1FCA  1C01               	btfss	1,0
  7834  1FCB  2FD8               	goto	l8561
  7835                           
  7836                           ;RF_Control_B1.c: 413: {
  7837                           ;RF_Control_B1.c: 414: Memory->Modify=1;
  7838  1FCC  0020               	movlb	0	; select bank0
  7839  1FCD  086D               	movf	_Memory,w
  7840  1FCE  3E22               	addlw	34
  7841  1FCF  0086               	movwf	6
  7842  1FD0  3002               	movlw	2	; select bank4/5
  7843  1FD1  0087               	movwf	7
  7844  1FD2  1401               	bsf	1,0
  7845                           
  7846                           ;RF_Control_B1.c: 415: setRF_DimmerValue(sw);
  7847  1FD3  0866               	movf	setRFSW_AdjControl@sw,w
  7848  1FD4  319F  270E  319F   	fcall	_setRF_DimmerValue
  7849                           
  7850                           ;RF_Control_B1.c: 416: }
  7851  1FD7  2FEA               	goto	l2575
  7852  1FD8                     l8561:	
  7853                           
  7854                           ;RF_Control_B1.c: 417: else
  7855                           ;RF_Control_B1.c: 418: {
  7856                           ;RF_Control_B1.c: 419: Product->Data[9]=Product->Data[20+sw];
  7857  1FD8  0020               	movlb	0	; select bank0
  7858  1FD9  0866               	movf	setRFSW_AdjControl@sw,w
  7859  1FDA  3E14               	addlw	20
  7860  1FDB  076E               	addwf	_Product,w
  7861  1FDC  00E4               	movwf	??_setRFSW_AdjControl
  7862  1FDD  0864               	movf	??_setRFSW_AdjControl,w
  7863  1FDE  0086               	movwf	6
  7864  1FDF  3001               	movlw	1	; select bank2/3
  7865  1FE0  0087               	movwf	7
  7866  1FE1  0801               	movf	1,w
  7867  1FE2  00E5               	movwf	??_setRFSW_AdjControl+1
  7868  1FE3  086E               	movf	_Product,w
  7869  1FE4  3E09               	addlw	9
  7870  1FE5  0086               	movwf	6
  7871  1FE6  3001               	movlw	1	; select bank2/3
  7872  1FE7  0087               	movwf	7
  7873  1FE8  0865               	movf	??_setRFSW_AdjControl+1,w
  7874  1FE9  0081               	movwf	1
  7875  1FEA                     l2575:	
  7876                           
  7877                           ;RF_Control_B1.c: 420: }
  7878                           ;RF_Control_B1.c: 421: Product->Data[17]=Product->Data[26+sw];
  7879  1FEA  0020               	movlb	0	; select bank0
  7880  1FEB  0866               	movf	setRFSW_AdjControl@sw,w
  7881  1FEC  3E1A               	addlw	26
  7882  1FED  076E               	addwf	_Product,w
  7883  1FEE  00E4               	movwf	??_setRFSW_AdjControl
  7884  1FEF  0864               	movf	??_setRFSW_AdjControl,w
  7885  1FF0  0086               	movwf	6
  7886  1FF1  3001               	movlw	1	; select bank2/3
  7887  1FF2  0087               	movwf	7
  7888  1FF3  0801               	movf	1,w
  7889  1FF4  00E5               	movwf	??_setRFSW_AdjControl+1
  7890  1FF5  086E               	movf	_Product,w
  7891  1FF6  3E11               	addlw	17
  7892  1FF7  0086               	movwf	6
  7893  1FF8  3001               	movlw	1	; select bank2/3
  7894  1FF9  0087               	movwf	7
  7895  1FFA  0865               	movf	??_setRFSW_AdjControl+1,w
  7896  1FFB  0081               	movwf	1
  7897                           
  7898                           ;RF_Control_B1.c: 422: setTxData(1);
  7899  1FFC  3001               	movlw	1
  7900  1FFD  3187  271C         	fcall	_setTxData
  7901  1FFF  0008               	return
  7902  2000                     __end_of_setRFSW_AdjControl:	
  7903                           
  7904                           	psect	text30
  7905  1F0E                     __ptext30:	
  7906 ;; *************** function _setRF_DimmerValue *****************
  7907 ;; Defined at:
  7908 ;;		line 433 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
  7909 ;; Parameters:    Size  Location     Type
  7910 ;;  lights          1    wreg     unsigned char 
  7911 ;; Auto vars:     Size  Location     Type
  7912 ;;  lights          1   67[BANK0 ] unsigned char 
  7913 ;; Return value:  Size  Location     Type
  7914 ;;		None               void
  7915 ;; Registers used:
  7916 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7917 ;; Tracked objects:
  7918 ;;		On entry : 0/0
  7919 ;;		On exit  : 0/0
  7920 ;;		Unchanged: 0/0
  7921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7923 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7924 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7925 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7926 ;;Total ram usage:        3 bytes
  7927 ;; Hardware stack levels used:    1
  7928 ;; Hardware stack levels required when called:    8
  7929 ;; This function calls:
  7930 ;;		_setDimmerLights_AdjRF
  7931 ;; This function is called by:
  7932 ;;		_setRFSW_AdjControl
  7933 ;; This function uses a non-reentrant model
  7934 ;;
  7935                           
  7936                           
  7937                           ;psect for function _setRF_DimmerValue
  7938  1F0E                     _setRF_DimmerValue:	
  7939                           
  7940                           ;incstack = 0
  7941                           ; Regs used in _setRF_DimmerValue: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7942                           ;setRF_DimmerValue@lights stored from wreg
  7943  1F0E  0020               	movlb	0	; select bank0
  7944  1F0F  00E3               	movwf	setRF_DimmerValue@lights
  7945                           
  7946                           ;RF_Control_B1.c: 435: if(RF_Data[9] > 0x64)
  7947  1F10  3065               	movlw	101
  7948  1F11  0021               	movlb	1	; select bank1
  7949  1F12  0229               	subwf	(_RF_Data^(0+128)+9),w
  7950  1F13  1C03               	skipc
  7951  1F14  2F1B               	goto	l8411
  7952                           
  7953                           ;RF_Control_B1.c: 436: {
  7954                           ;RF_Control_B1.c: 437: RF_Data[9]=0x64;
  7955  1F15  3064               	movlw	100
  7956  1F16  0020               	movlb	0	; select bank0
  7957  1F17  00E1               	movwf	??_setRF_DimmerValue
  7958  1F18  0861               	movf	??_setRF_DimmerValue,w
  7959  1F19  0021               	movlb	1	; select bank1
  7960  1F1A  00A9               	movwf	(_RF_Data^(0+128)+9)
  7961  1F1B                     l8411:	
  7962                           
  7963                           ;RF_Control_B1.c: 438: }
  7964                           ;RF_Control_B1.c: 439: Product->Data[9]=RF_Data[9];
  7965  1F1B  0829               	movf	(_RF_Data^(0+128)+9),w
  7966  1F1C  0020               	movlb	0	; select bank0
  7967  1F1D  00E1               	movwf	??_setRF_DimmerValue
  7968  1F1E  086E               	movf	_Product,w
  7969  1F1F  3E09               	addlw	9
  7970  1F20  0086               	movwf	6
  7971  1F21  3001               	movlw	1	; select bank2/3
  7972  1F22  0087               	movwf	7
  7973  1F23  0861               	movf	??_setRF_DimmerValue,w
  7974  1F24  0081               	movwf	1
  7975                           
  7976                           ;RF_Control_B1.c: 440: Product->Data[11]=lights;
  7977  1F25  0863               	movf	setRF_DimmerValue@lights,w
  7978  1F26  00E1               	movwf	??_setRF_DimmerValue
  7979  1F27  086E               	movf	_Product,w
  7980  1F28  3E0B               	addlw	11
  7981  1F29  0086               	movwf	6
  7982  1F2A  3001               	movlw	1	; select bank2/3
  7983  1F2B  0087               	movwf	7
  7984  1F2C  0861               	movf	??_setRF_DimmerValue,w
  7985  1F2D  0081               	movwf	1
  7986                           
  7987                           ;RF_Control_B1.c: 441: Product->Data[(20+lights)]=Product->Data[9];
  7988  1F2E  086E               	movf	_Product,w
  7989  1F2F  3E09               	addlw	9
  7990  1F30  0086               	movwf	6
  7991  1F31  3001               	movlw	1	; select bank2/3
  7992  1F32  0087               	movwf	7
  7993  1F33  0801               	movf	1,w
  7994  1F34  00E1               	movwf	??_setRF_DimmerValue
  7995  1F35  0863               	movf	setRF_DimmerValue@lights,w
  7996  1F36  3E14               	addlw	20
  7997  1F37  076E               	addwf	_Product,w
  7998  1F38  00E2               	movwf	??_setRF_DimmerValue+1
  7999  1F39  0862               	movf	??_setRF_DimmerValue+1,w
  8000  1F3A  0086               	movwf	6
  8001  1F3B  3001               	movlw	1	; select bank2/3
  8002  1F3C  0087               	movwf	7
  8003  1F3D  0861               	movf	??_setRF_DimmerValue,w
  8004  1F3E  0081               	movwf	1
  8005                           
  8006                           ;RF_Control_B1.c: 442: setDimmerLights_AdjRF(lights);
  8007  1F3F  0863               	movf	setRF_DimmerValue@lights,w
  8008  1F40  319D  2540         	fcall	_setDimmerLights_AdjRF
  8009  1F42  0008               	return
  8010  1F43                     __end_of_setRF_DimmerValue:	
  8011                           
  8012                           	psect	text31
  8013  1D40                     __ptext31:	
  8014 ;; *************** function _setDimmerLights_AdjRF *****************
  8015 ;; Defined at:
  8016 ;;		line 423 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
  8017 ;; Parameters:    Size  Location     Type
  8018 ;;  lights          1    wreg     unsigned char 
  8019 ;; Auto vars:     Size  Location     Type
  8020 ;;  lights          1   64[BANK0 ] unsigned char 
  8021 ;; Return value:  Size  Location     Type
  8022 ;;		None               void
  8023 ;; Registers used:
  8024 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8025 ;; Tracked objects:
  8026 ;;		On entry : 0/0
  8027 ;;		On exit  : 0/0
  8028 ;;		Unchanged: 0/0
  8029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8031 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8032 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8033 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8034 ;;Total ram usage:        2 bytes
  8035 ;; Hardware stack levels used:    1
  8036 ;; Hardware stack levels required when called:    7
  8037 ;; This function calls:
  8038 ;;		_DimmerLightsPointSelect
  8039 ;;		_getPercentValue
  8040 ;; This function is called by:
  8041 ;;		_setRF_DimmerValue
  8042 ;; This function uses a non-reentrant model
  8043 ;;
  8044                           
  8045                           
  8046                           ;psect for function _setDimmerLights_AdjRF
  8047  1D40                     _setDimmerLights_AdjRF:	
  8048                           
  8049                           ;incstack = 0
  8050                           ; Regs used in _setDimmerLights_AdjRF: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  8051                           ;setDimmerLights_AdjRF@lights stored from wreg
  8052  1D40  0020               	movlb	0	; select bank0
  8053  1D41  00E0               	movwf	setDimmerLights_AdjRF@lights
  8054                           
  8055                           ;Dimmer_B1.c: 425: DimmerLightsPointSelect(lights);
  8056  1D42  0860               	movf	setDimmerLights_AdjRF@lights,w
  8057  1D43  319A  22E5  319D   	fcall	_DimmerLightsPointSelect
  8058                           
  8059                           ;Dimmer_B1.c: 426: DimmerLights->AdjRF=1;
  8060  1D46  0020               	movlb	0	; select bank0
  8061  1D47  086A               	movf	_DimmerLights,w
  8062  1D48  0086               	movwf	6
  8063  1D49  3001               	movlw	1	; select bank2/3
  8064  1D4A  0087               	movwf	7
  8065  1D4B  1501               	bsf	1,2
  8066                           
  8067                           ;Dimmer_B1.c: 427: DimmerLights->Signal=1;
  8068  1D4C  086A               	movf	_DimmerLights,w
  8069  1D4D  0086               	movwf	6
  8070  1D4E  3001               	movlw	1	; select bank2/3
  8071  1D4F  0087               	movwf	7
  8072  1D50  1481               	bsf	1,1
  8073                           
  8074                           ;Dimmer_B1.c: 428: DimmerLights->MaxmumValue=getPercentValue(Product->Data[9]);
  8075  1D51  086E               	movf	_Product,w
  8076  1D52  3E09               	addlw	9
  8077  1D53  0086               	movwf	6
  8078  1D54  3001               	movlw	1	; select bank2/3
  8079  1D55  0087               	movwf	7
  8080  1D56  0801               	movf	1,w
  8081  1D57  3193  2311         	fcall	_getPercentValue
  8082  1D59  0020               	movlb	0	; select bank0
  8083  1D5A  00DF               	movwf	??_setDimmerLights_AdjRF
  8084  1D5B  086A               	movf	_DimmerLights,w
  8085  1D5C  3E05               	addlw	5
  8086  1D5D  0086               	movwf	6
  8087  1D5E  3001               	movlw	1	; select bank2/3
  8088  1D5F  0087               	movwf	7
  8089  1D60  085F               	movf	??_setDimmerLights_AdjRF,w
  8090  1D61  0081               	movwf	1
  8091  1D62  0008               	return
  8092  1D63                     __end_of_setDimmerLights_AdjRF:	
  8093                           
  8094                           	psect	text32
  8095  1311                     __ptext32:	
  8096 ;; *************** function _getPercentValue *****************
  8097 ;; Defined at:
  8098 ;;		line 490 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
  8099 ;; Parameters:    Size  Location     Type
  8100 ;;  value           1    wreg     unsigned char 
  8101 ;; Auto vars:     Size  Location     Type
  8102 ;;  value           1   59[BANK0 ] unsigned char 
  8103 ;;  i               3   60[BANK0 ] float 
  8104 ;; Return value:  Size  Location     Type
  8105 ;;                  1    wreg      unsigned char 
  8106 ;; Registers used:
  8107 ;;		wreg, status,2, status,0, pclath, cstack
  8108 ;; Tracked objects:
  8109 ;;		On entry : 0/0
  8110 ;;		On exit  : 0/0
  8111 ;;		Unchanged: 0/0
  8112 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8113 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8114 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8115 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8116 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8117 ;;Total ram usage:        6 bytes
  8118 ;; Hardware stack levels used:    1
  8119 ;; Hardware stack levels required when called:    6
  8120 ;; This function calls:
  8121 ;;		___awtoft
  8122 ;;		___ftadd
  8123 ;;		___ftdiv
  8124 ;;		___ftmul
  8125 ;;		___fttol
  8126 ;; This function is called by:
  8127 ;;		_setDimmerLights_AdjRF
  8128 ;; This function uses a non-reentrant model
  8129 ;;
  8130                           
  8131                           
  8132                           ;psect for function _getPercentValue
  8133  1311                     _getPercentValue:	
  8134                           
  8135                           ;incstack = 0
  8136                           ; Regs used in _getPercentValue: [wreg+status,2+status,0+pclath+cstack]
  8137                           ;getPercentValue@value stored from wreg
  8138  1311  0020               	movlb	0	; select bank0
  8139  1312  00DB               	movwf	getPercentValue@value
  8140                           
  8141                           ;Dimmer_B1.c: 493: float i=((char)((100-20)*1.5))-((char)((100-55)*1.5));
  8142  1313  3000               	movlw	0
  8143  1314  00DC               	movwf	getPercentValue@i
  8144  1315  3054               	movlw	84
  8145  1316  00DD               	movwf	getPercentValue@i+1
  8146  1317  3042               	movlw	66
  8147  1318  00DE               	movwf	getPercentValue@i+2
  8148                           
  8149                           ;Dimmer_B1.c: 494: i/=100;
  8150  1319  3000               	movlw	0
  8151  131A  00AE               	movwf	___ftdiv@f2
  8152  131B  30C8               	movlw	200
  8153  131C  00AF               	movwf	___ftdiv@f2+1
  8154  131D  3042               	movlw	66
  8155  131E  00B0               	movwf	___ftdiv@f2+2
  8156  131F  085C               	movf	getPercentValue@i,w
  8157  1320  00B1               	movwf	___ftdiv@f1
  8158  1321  085D               	movf	getPercentValue@i+1,w
  8159  1322  00B2               	movwf	___ftdiv@f1+1
  8160  1323  085E               	movf	getPercentValue@i+2,w
  8161  1324  00B3               	movwf	___ftdiv@f1+2
  8162  1325  318C  24C4  3193   	fcall	___ftdiv
  8163  1328  0020               	movlb	0	; select bank0
  8164  1329  082E               	movf	?___ftdiv,w
  8165  132A  00DC               	movwf	getPercentValue@i
  8166  132B  082F               	movf	?___ftdiv+1,w
  8167  132C  00DD               	movwf	getPercentValue@i+1
  8168  132D  0830               	movf	?___ftdiv+2,w
  8169  132E  00DE               	movwf	getPercentValue@i+2
  8170                           
  8171                           ;Dimmer_B1.c: 495: return (char)(((100-value)*i)+((char)((100-55)*1.5)));
  8172  132F  085B               	movf	getPercentValue@value,w
  8173  1330  00D9               	movwf	??_getPercentValue
  8174  1331  01DA               	clrf	??_getPercentValue+1
  8175  1332  09D9               	comf	??_getPercentValue,f
  8176  1333  09DA               	comf	??_getPercentValue+1,f
  8177  1334  0AD9               	incf	??_getPercentValue,f
  8178  1335  1903               	skipnz
  8179  1336  0ADA               	incf	??_getPercentValue+1,f
  8180  1337  0859               	movf	??_getPercentValue,w
  8181  1338  3E64               	addlw	100
  8182  1339  00A8               	movwf	___awtoft@c
  8183  133A  3000               	movlw	0
  8184  133B  3D5A               	addwfc	??_getPercentValue+1,w
  8185  133C  00A9               	movwf	___awtoft@c+1
  8186  133D  319C  24FC  3193   	fcall	___awtoft
  8187  1340  0020               	movlb	0	; select bank0
  8188  1341  0828               	movf	?___awtoft,w
  8189  1342  00B1               	movwf	___ftmul@f2
  8190  1343  0829               	movf	?___awtoft+1,w
  8191  1344  00B2               	movwf	___ftmul@f2+1
  8192  1345  082A               	movf	?___awtoft+2,w
  8193  1346  00B3               	movwf	___ftmul@f2+2
  8194  1347  085C               	movf	getPercentValue@i,w
  8195  1348  00AE               	movwf	___ftmul@f1
  8196  1349  085D               	movf	getPercentValue@i+1,w
  8197  134A  00AF               	movwf	___ftmul@f1+1
  8198  134B  085E               	movf	getPercentValue@i+2,w
  8199  134C  00B0               	movwf	___ftmul@f1+2
  8200  134D  318D  256D  3193   	fcall	___ftmul
  8201  1350  0020               	movlb	0	; select bank0
  8202  1351  082E               	movf	?___ftmul,w
  8203  1352  00C1               	movwf	___ftadd@f2
  8204  1353  082F               	movf	?___ftmul+1,w
  8205  1354  00C2               	movwf	___ftadd@f2+1
  8206  1355  0830               	movf	?___ftmul+2,w
  8207  1356  00C3               	movwf	___ftadd@f2+2
  8208  1357  3000               	movlw	0
  8209  1358  00BE               	movwf	___ftadd@f1
  8210  1359  3086               	movlw	134
  8211  135A  00BF               	movwf	___ftadd@f1+1
  8212  135B  3042               	movlw	66
  8213  135C  00C0               	movwf	___ftadd@f1+2
  8214  135D  318F  270A  3193   	fcall	___ftadd
  8215  1360  0020               	movlb	0	; select bank0
  8216  1361  083E               	movf	?___ftadd,w
  8217  1362  00CB               	movwf	___fttol@f1
  8218  1363  083F               	movf	?___ftadd+1,w
  8219  1364  00CC               	movwf	___fttol@f1+1
  8220  1365  0840               	movf	?___ftadd+2,w
  8221  1366  00CD               	movwf	___fttol@f1+2
  8222  1367  3189  2157         	fcall	___fttol
  8223  1369  0020               	movlb	0	; select bank0
  8224  136A  084B               	movf	?___fttol,w
  8225  136B  0008               	return
  8226  136C                     __end_of_getPercentValue:	
  8227                           
  8228                           	psect	text33
  8229  0D6D                     __ptext33:	
  8230 ;; *************** function ___ftmul *****************
  8231 ;; Defined at:
  8232 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\ftmul.c"
  8233 ;; Parameters:    Size  Location     Type
  8234 ;;  f1              3   14[BANK0 ] float 
  8235 ;;  f2              3   17[BANK0 ] float 
  8236 ;; Auto vars:     Size  Location     Type
  8237 ;;  f3_as_produc    3   25[BANK0 ] unsigned um
  8238 ;;  sign            1   29[BANK0 ] unsigned char 
  8239 ;;  cntr            1   28[BANK0 ] unsigned char 
  8240 ;;  exp             1   24[BANK0 ] unsigned char 
  8241 ;; Return value:  Size  Location     Type
  8242 ;;                  3   14[BANK0 ] float 
  8243 ;; Registers used:
  8244 ;;		wreg, status,2, status,0, pclath, cstack
  8245 ;; Tracked objects:
  8246 ;;		On entry : 0/0
  8247 ;;		On exit  : 0/0
  8248 ;;		Unchanged: 0/0
  8249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8250 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8251 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8252 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8253 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8254 ;;Total ram usage:       16 bytes
  8255 ;; Hardware stack levels used:    1
  8256 ;; Hardware stack levels required when called:    5
  8257 ;; This function calls:
  8258 ;;		___ftpack
  8259 ;; This function is called by:
  8260 ;;		_getPercentValue
  8261 ;; This function uses a non-reentrant model
  8262 ;;
  8263                           
  8264                           
  8265                           ;psect for function ___ftmul
  8266  0D6D                     ___ftmul:	
  8267                           
  8268                           ;incstack = 0
  8269                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  8270  0D6D  0020               	movlb	0	; select bank0
  8271  0D6E  082E               	movf	___ftmul@f1,w
  8272  0D6F  00B4               	movwf	??___ftmul
  8273  0D70  082F               	movf	___ftmul@f1+1,w
  8274  0D71  00B5               	movwf	??___ftmul+1
  8275  0D72  0830               	movf	___ftmul@f1+2,w
  8276  0D73  00B6               	movwf	??___ftmul+2
  8277  0D74  1003               	clrc
  8278  0D75  0D35               	rlf	??___ftmul+1,w
  8279  0D76  0D36               	rlf	??___ftmul+2,w
  8280  0D77  00B7               	movwf	??___ftmul+3
  8281  0D78  0837               	movf	??___ftmul+3,w
  8282  0D79  00B8               	movwf	___ftmul@exp
  8283  0D7A  08B8               	movf	___ftmul@exp,f
  8284  0D7B  1D03               	skipz
  8285  0D7C  2D84               	goto	l8069
  8286  0D7D  3000               	movlw	0
  8287  0D7E  00AE               	movwf	?___ftmul
  8288  0D7F  3000               	movlw	0
  8289  0D80  00AF               	movwf	?___ftmul+1
  8290  0D81  3000               	movlw	0
  8291  0D82  00B0               	movwf	?___ftmul+2
  8292  0D83  0008               	return
  8293  0D84                     l8069:	
  8294  0D84  0831               	movf	___ftmul@f2,w
  8295  0D85  00B4               	movwf	??___ftmul
  8296  0D86  0832               	movf	___ftmul@f2+1,w
  8297  0D87  00B5               	movwf	??___ftmul+1
  8298  0D88  0833               	movf	___ftmul@f2+2,w
  8299  0D89  00B6               	movwf	??___ftmul+2
  8300  0D8A  1003               	clrc
  8301  0D8B  0D35               	rlf	??___ftmul+1,w
  8302  0D8C  0D36               	rlf	??___ftmul+2,w
  8303  0D8D  00B7               	movwf	??___ftmul+3
  8304  0D8E  0837               	movf	??___ftmul+3,w
  8305  0D8F  00BD               	movwf	___ftmul@sign
  8306  0D90  08BD               	movf	___ftmul@sign,f
  8307  0D91  1D03               	skipz
  8308  0D92  2D9A               	goto	l8075
  8309  0D93  3000               	movlw	0
  8310  0D94  00AE               	movwf	?___ftmul
  8311  0D95  3000               	movlw	0
  8312  0D96  00AF               	movwf	?___ftmul+1
  8313  0D97  3000               	movlw	0
  8314  0D98  00B0               	movwf	?___ftmul+2
  8315  0D99  0008               	return
  8316  0D9A                     l8075:	
  8317  0D9A  083D               	movf	___ftmul@sign,w
  8318  0D9B  3E7B               	addlw	123
  8319  0D9C  00B4               	movwf	??___ftmul
  8320  0D9D  0834               	movf	??___ftmul,w
  8321  0D9E  07B8               	addwf	___ftmul@exp,f
  8322  0D9F  082E               	movf	___ftmul@f1,w
  8323  0DA0  00B4               	movwf	??___ftmul
  8324  0DA1  082F               	movf	___ftmul@f1+1,w
  8325  0DA2  00B5               	movwf	??___ftmul+1
  8326  0DA3  0830               	movf	___ftmul@f1+2,w
  8327  0DA4  00B6               	movwf	??___ftmul+2
  8328  0DA5  3010               	movlw	16
  8329  0DA6                     u7725:	
  8330  0DA6  36B6               	lsrf	??___ftmul+2,f
  8331  0DA7  0CB5               	rrf	??___ftmul+1,f
  8332  0DA8  0CB4               	rrf	??___ftmul,f
  8333  0DA9  0B89               	decfsz	9,f
  8334  0DAA  2DA6               	goto	u7725
  8335  0DAB  0834               	movf	??___ftmul,w
  8336  0DAC  00B7               	movwf	??___ftmul+3
  8337  0DAD  0837               	movf	??___ftmul+3,w
  8338  0DAE  00BD               	movwf	___ftmul@sign
  8339  0DAF  0831               	movf	___ftmul@f2,w
  8340  0DB0  00B4               	movwf	??___ftmul
  8341  0DB1  0832               	movf	___ftmul@f2+1,w
  8342  0DB2  00B5               	movwf	??___ftmul+1
  8343  0DB3  0833               	movf	___ftmul@f2+2,w
  8344  0DB4  00B6               	movwf	??___ftmul+2
  8345  0DB5  3010               	movlw	16
  8346  0DB6                     u7735:	
  8347  0DB6  36B6               	lsrf	??___ftmul+2,f
  8348  0DB7  0CB5               	rrf	??___ftmul+1,f
  8349  0DB8  0CB4               	rrf	??___ftmul,f
  8350  0DB9  0B89               	decfsz	9,f
  8351  0DBA  2DB6               	goto	u7735
  8352  0DBB  0834               	movf	??___ftmul,w
  8353  0DBC  00B7               	movwf	??___ftmul+3
  8354  0DBD  0837               	movf	??___ftmul+3,w
  8355  0DBE  06BD               	xorwf	___ftmul@sign,f
  8356  0DBF  3080               	movlw	128
  8357  0DC0  00B4               	movwf	??___ftmul
  8358  0DC1  0834               	movf	??___ftmul,w
  8359  0DC2  05BD               	andwf	___ftmul@sign,f
  8360  0DC3  17AF               	bsf	___ftmul@f1+1,7
  8361  0DC4  17B2               	bsf	___ftmul@f2+1,7
  8362  0DC5  30FF               	movlw	255
  8363  0DC6  05B1               	andwf	___ftmul@f2,f
  8364  0DC7  30FF               	movlw	255
  8365  0DC8  05B2               	andwf	___ftmul@f2+1,f
  8366  0DC9  3000               	movlw	0
  8367  0DCA  05B3               	andwf	___ftmul@f2+2,f
  8368  0DCB  3000               	movlw	0
  8369  0DCC  00B9               	movwf	___ftmul@f3_as_product
  8370  0DCD  3000               	movlw	0
  8371  0DCE  00BA               	movwf	___ftmul@f3_as_product+1
  8372  0DCF  3000               	movlw	0
  8373  0DD0  00BB               	movwf	___ftmul@f3_as_product+2
  8374  0DD1  3007               	movlw	7
  8375  0DD2  00B4               	movwf	??___ftmul
  8376  0DD3  0834               	movf	??___ftmul,w
  8377  0DD4  00BC               	movwf	___ftmul@cntr
  8378  0DD5                     l8087:	
  8379  0DD5  1C2E               	btfss	___ftmul@f1,0
  8380  0DD6  2DDD               	goto	l8091
  8381  0DD7  0831               	movf	___ftmul@f2,w
  8382  0DD8  07B9               	addwf	___ftmul@f3_as_product,f
  8383  0DD9  0832               	movf	___ftmul@f2+1,w
  8384  0DDA  3DBA               	addwfc	___ftmul@f3_as_product+1,f
  8385  0DDB  0833               	movf	___ftmul@f2+2,w
  8386  0DDC  3DBB               	addwfc	___ftmul@f3_as_product+2,f
  8387  0DDD                     l8091:	
  8388  0DDD  3001               	movlw	1
  8389  0DDE                     u7755:	
  8390  0DDE  36B0               	lsrf	___ftmul@f1+2,f
  8391  0DDF  0CAF               	rrf	___ftmul@f1+1,f
  8392  0DE0  0CAE               	rrf	___ftmul@f1,f
  8393  0DE1  0B89               	decfsz	9,f
  8394  0DE2  2DDE               	goto	u7755
  8395  0DE3  3001               	movlw	1
  8396  0DE4                     u7765:	
  8397  0DE4  35B1               	lslf	___ftmul@f2,f
  8398  0DE5  0DB2               	rlf	___ftmul@f2+1,f
  8399  0DE6  0DB3               	rlf	___ftmul@f2+2,f
  8400  0DE7  0B89               	decfsz	9,f
  8401  0DE8  2DE4               	goto	u7765
  8402  0DE9  3001               	movlw	1
  8403  0DEA  02BC               	subwf	___ftmul@cntr,f
  8404  0DEB  1D03               	btfss	3,2
  8405  0DEC  2DD5               	goto	l8087
  8406  0DED  3009               	movlw	9
  8407  0DEE  00B4               	movwf	??___ftmul
  8408  0DEF  0834               	movf	??___ftmul,w
  8409  0DF0  00BC               	movwf	___ftmul@cntr
  8410  0DF1                     l8099:	
  8411  0DF1  1C2E               	btfss	___ftmul@f1,0
  8412  0DF2  2DF9               	goto	l8103
  8413  0DF3  0831               	movf	___ftmul@f2,w
  8414  0DF4  07B9               	addwf	___ftmul@f3_as_product,f
  8415  0DF5  0832               	movf	___ftmul@f2+1,w
  8416  0DF6  3DBA               	addwfc	___ftmul@f3_as_product+1,f
  8417  0DF7  0833               	movf	___ftmul@f2+2,w
  8418  0DF8  3DBB               	addwfc	___ftmul@f3_as_product+2,f
  8419  0DF9                     l8103:	
  8420  0DF9  3001               	movlw	1
  8421  0DFA                     u7795:	
  8422  0DFA  36B0               	lsrf	___ftmul@f1+2,f
  8423  0DFB  0CAF               	rrf	___ftmul@f1+1,f
  8424  0DFC  0CAE               	rrf	___ftmul@f1,f
  8425  0DFD  0B89               	decfsz	9,f
  8426  0DFE  2DFA               	goto	u7795
  8427  0DFF  3001               	movlw	1
  8428  0E00                     u7805:	
  8429  0E00  36BB               	lsrf	___ftmul@f3_as_product+2,f
  8430  0E01  0CBA               	rrf	___ftmul@f3_as_product+1,f
  8431  0E02  0CB9               	rrf	___ftmul@f3_as_product,f
  8432  0E03  0B89               	decfsz	9,f
  8433  0E04  2E00               	goto	u7805
  8434  0E05  3001               	movlw	1
  8435  0E06  02BC               	subwf	___ftmul@cntr,f
  8436  0E07  1D03               	btfss	3,2
  8437  0E08  2DF1               	goto	l8099
  8438  0E09  0839               	movf	___ftmul@f3_as_product,w
  8439  0E0A  00A0               	movwf	___ftpack@arg
  8440  0E0B  083A               	movf	___ftmul@f3_as_product+1,w
  8441  0E0C  00A1               	movwf	___ftpack@arg+1
  8442  0E0D  083B               	movf	___ftmul@f3_as_product+2,w
  8443  0E0E  00A2               	movwf	___ftpack@arg+2
  8444  0E0F  0838               	movf	___ftmul@exp,w
  8445  0E10  00B4               	movwf	??___ftmul
  8446  0E11  0834               	movf	??___ftmul,w
  8447  0E12  00A3               	movwf	___ftpack@exp
  8448  0E13  083D               	movf	___ftmul@sign,w
  8449  0E14  00B5               	movwf	??___ftmul+1
  8450  0E15  0835               	movf	??___ftmul+1,w
  8451  0E16  00A4               	movwf	___ftpack@sign
  8452  0E17  3188  2002         	fcall	___ftpack
  8453  0E19  0020               	movlb	0	; select bank0
  8454  0E1A  0820               	movf	?___ftpack,w
  8455  0E1B  00AE               	movwf	?___ftmul
  8456  0E1C  0821               	movf	?___ftpack+1,w
  8457  0E1D  00AF               	movwf	?___ftmul+1
  8458  0E1E  0822               	movf	?___ftpack+2,w
  8459  0E1F  00B0               	movwf	?___ftmul+2
  8460  0E20  0008               	return
  8461  0E21                     __end_of___ftmul:	
  8462                           
  8463                           	psect	text34
  8464  0F0A                     __ptext34:	
  8465 ;; *************** function ___ftadd *****************
  8466 ;; Defined at:
  8467 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\ftadd.c"
  8468 ;; Parameters:    Size  Location     Type
  8469 ;;  f1              3   30[BANK0 ] float 
  8470 ;;  f2              3   33[BANK0 ] float 
  8471 ;; Auto vars:     Size  Location     Type
  8472 ;;  exp1            1   42[BANK0 ] unsigned char 
  8473 ;;  exp2            1   41[BANK0 ] unsigned char 
  8474 ;;  sign            1   40[BANK0 ] unsigned char 
  8475 ;; Return value:  Size  Location     Type
  8476 ;;                  3   30[BANK0 ] float 
  8477 ;; Registers used:
  8478 ;;		wreg, status,2, status,0, pclath, cstack
  8479 ;; Tracked objects:
  8480 ;;		On entry : 0/0
  8481 ;;		On exit  : 0/0
  8482 ;;		Unchanged: 0/0
  8483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8484 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8485 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8486 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8487 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8488 ;;Total ram usage:       13 bytes
  8489 ;; Hardware stack levels used:    1
  8490 ;; Hardware stack levels required when called:    5
  8491 ;; This function calls:
  8492 ;;		___ftpack
  8493 ;; This function is called by:
  8494 ;;		_getPercentValue
  8495 ;; This function uses a non-reentrant model
  8496 ;;
  8497                           
  8498                           
  8499                           ;psect for function ___ftadd
  8500  0F0A                     ___ftadd:	
  8501                           
  8502                           ;incstack = 0
  8503                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  8504  0F0A  0020               	movlb	0	; select bank0
  8505  0F0B  083E               	movf	___ftadd@f1,w
  8506  0F0C  00C4               	movwf	??___ftadd
  8507  0F0D  083F               	movf	___ftadd@f1+1,w
  8508  0F0E  00C5               	movwf	??___ftadd+1
  8509  0F0F  0840               	movf	___ftadd@f1+2,w
  8510  0F10  00C6               	movwf	??___ftadd+2
  8511  0F11  1003               	clrc
  8512  0F12  0D45               	rlf	??___ftadd+1,w
  8513  0F13  0D46               	rlf	??___ftadd+2,w
  8514  0F14  00C7               	movwf	??___ftadd+3
  8515  0F15  0847               	movf	??___ftadd+3,w
  8516  0F16  00CA               	movwf	___ftadd@exp1
  8517  0F17  0841               	movf	___ftadd@f2,w
  8518  0F18  00C4               	movwf	??___ftadd
  8519  0F19  0842               	movf	___ftadd@f2+1,w
  8520  0F1A  00C5               	movwf	??___ftadd+1
  8521  0F1B  0843               	movf	___ftadd@f2+2,w
  8522  0F1C  00C6               	movwf	??___ftadd+2
  8523  0F1D  1003               	clrc
  8524  0F1E  0D45               	rlf	??___ftadd+1,w
  8525  0F1F  0D46               	rlf	??___ftadd+2,w
  8526  0F20  00C7               	movwf	??___ftadd+3
  8527  0F21  0847               	movf	??___ftadd+3,w
  8528  0F22  00C9               	movwf	___ftadd@exp2
  8529  0F23  084A               	movf	___ftadd@exp1,w
  8530  0F24  1903               	btfsc	3,2
  8531  0F25  2F32               	goto	l7957
  8532  0F26  0849               	movf	___ftadd@exp2,w
  8533  0F27  024A               	subwf	___ftadd@exp1,w
  8534  0F28  1803               	skipnc
  8535  0F29  2F39               	goto	l7961
  8536  0F2A  034A               	decf	___ftadd@exp1,w
  8537  0F2B  3AFF               	xorlw	255
  8538  0F2C  0749               	addwf	___ftadd@exp2,w
  8539  0F2D  00C4               	movwf	??___ftadd
  8540  0F2E  3019               	movlw	25
  8541  0F2F  0244               	subwf	??___ftadd,w
  8542  0F30  1C03               	skipc
  8543  0F31  2F39               	goto	l7961
  8544  0F32                     l7957:	
  8545  0F32  0841               	movf	___ftadd@f2,w
  8546  0F33  00BE               	movwf	?___ftadd
  8547  0F34  0842               	movf	___ftadd@f2+1,w
  8548  0F35  00BF               	movwf	?___ftadd+1
  8549  0F36  0843               	movf	___ftadd@f2+2,w
  8550  0F37  00C0               	movwf	?___ftadd+2
  8551  0F38  0008               	return
  8552  0F39                     l7961:	
  8553  0F39  0849               	movf	___ftadd@exp2,w
  8554  0F3A  1903               	btfsc	3,2
  8555  0F3B  0008               	return
  8556  0F3C  084A               	movf	___ftadd@exp1,w
  8557  0F3D  0249               	subwf	___ftadd@exp2,w
  8558  0F3E  1803               	skipnc
  8559  0F3F  2F48               	goto	l7967
  8560  0F40  0349               	decf	___ftadd@exp2,w
  8561  0F41  3AFF               	xorlw	255
  8562  0F42  074A               	addwf	___ftadd@exp1,w
  8563  0F43  00C4               	movwf	??___ftadd
  8564  0F44  3019               	movlw	25
  8565  0F45  0244               	subwf	??___ftadd,w
  8566  0F46  1803               	btfsc	3,0
  8567  0F47  0008               	return
  8568  0F48                     l7967:	
  8569  0F48  3006               	movlw	6
  8570  0F49  00C4               	movwf	??___ftadd
  8571  0F4A  0844               	movf	??___ftadd,w
  8572  0F4B  00C8               	movwf	___ftadd@sign
  8573  0F4C  1BC0               	btfsc	___ftadd@f1+2,7
  8574  0F4D  17C8               	bsf	___ftadd@sign,7
  8575  0F4E  1BC3               	btfsc	___ftadd@f2+2,7
  8576  0F4F  1748               	bsf	___ftadd@sign,6
  8577  0F50  17BF               	bsf	___ftadd@f1+1,7
  8578  0F51  30FF               	movlw	255
  8579  0F52  05BE               	andwf	___ftadd@f1,f
  8580  0F53  30FF               	movlw	255
  8581  0F54  05BF               	andwf	___ftadd@f1+1,f
  8582  0F55  3000               	movlw	0
  8583  0F56  05C0               	andwf	___ftadd@f1+2,f
  8584  0F57  17C2               	bsf	___ftadd@f2+1,7
  8585  0F58  30FF               	movlw	255
  8586  0F59  05C1               	andwf	___ftadd@f2,f
  8587  0F5A  30FF               	movlw	255
  8588  0F5B  05C2               	andwf	___ftadd@f2+1,f
  8589  0F5C  3000               	movlw	0
  8590  0F5D  05C3               	andwf	___ftadd@f2+2,f
  8591  0F5E  0849               	movf	___ftadd@exp2,w
  8592  0F5F  024A               	subwf	___ftadd@exp1,w
  8593  0F60  1803               	skipnc
  8594  0F61  2F84               	goto	l7989
  8595  0F62                     l7979:	
  8596  0F62  3001               	movlw	1
  8597  0F63                     u7485:	
  8598  0F63  35C1               	lslf	___ftadd@f2,f
  8599  0F64  0DC2               	rlf	___ftadd@f2+1,f
  8600  0F65  0DC3               	rlf	___ftadd@f2+2,f
  8601  0F66  0B89               	decfsz	9,f
  8602  0F67  2F63               	goto	u7485
  8603  0F68  3001               	movlw	1
  8604  0F69  02C9               	subwf	___ftadd@exp2,f
  8605  0F6A  0849               	movf	___ftadd@exp2,w
  8606  0F6B  064A               	xorwf	___ftadd@exp1,w
  8607  0F6C  1903               	skipnz
  8608  0F6D  2F7F               	goto	l7987
  8609  0F6E  3001               	movlw	1
  8610  0F6F  02C8               	subwf	___ftadd@sign,f
  8611  0F70  0848               	movf	___ftadd@sign,w
  8612  0F71  3907               	andlw	7
  8613  0F72  1903               	btfsc	3,2
  8614  0F73  2F7F               	goto	l7987
  8615  0F74  2F62               	goto	l7979
  8616  0F75                     l7985:	
  8617  0F75  3001               	movlw	1
  8618  0F76                     u7515:	
  8619  0F76  36C0               	lsrf	___ftadd@f1+2,f
  8620  0F77  0CBF               	rrf	___ftadd@f1+1,f
  8621  0F78  0CBE               	rrf	___ftadd@f1,f
  8622  0F79  0B89               	decfsz	9,f
  8623  0F7A  2F76               	goto	u7515
  8624  0F7B  3001               	movlw	1
  8625  0F7C  00C4               	movwf	??___ftadd
  8626  0F7D  0844               	movf	??___ftadd,w
  8627  0F7E  07CA               	addwf	___ftadd@exp1,f
  8628  0F7F                     l7987:	
  8629  0F7F  084A               	movf	___ftadd@exp1,w
  8630  0F80  0649               	xorwf	___ftadd@exp2,w
  8631  0F81  1903               	btfsc	3,2
  8632  0F82  2FA9               	goto	l3256
  8633  0F83  2F75               	goto	l7985
  8634  0F84                     l7989:	
  8635  0F84  084A               	movf	___ftadd@exp1,w
  8636  0F85  0249               	subwf	___ftadd@exp2,w
  8637  0F86  1803               	skipnc
  8638  0F87  2FA9               	goto	l3256
  8639  0F88                     l7991:	
  8640  0F88  3001               	movlw	1
  8641  0F89                     u7545:	
  8642  0F89  35BE               	lslf	___ftadd@f1,f
  8643  0F8A  0DBF               	rlf	___ftadd@f1+1,f
  8644  0F8B  0DC0               	rlf	___ftadd@f1+2,f
  8645  0F8C  0B89               	decfsz	9,f
  8646  0F8D  2F89               	goto	u7545
  8647  0F8E  3001               	movlw	1
  8648  0F8F  02CA               	subwf	___ftadd@exp1,f
  8649  0F90  0849               	movf	___ftadd@exp2,w
  8650  0F91  064A               	xorwf	___ftadd@exp1,w
  8651  0F92  1903               	skipnz
  8652  0F93  2FA5               	goto	l7999
  8653  0F94  3001               	movlw	1
  8654  0F95  02C8               	subwf	___ftadd@sign,f
  8655  0F96  0848               	movf	___ftadd@sign,w
  8656  0F97  3907               	andlw	7
  8657  0F98  1903               	btfsc	3,2
  8658  0F99  2FA5               	goto	l7999
  8659  0F9A  2F88               	goto	l7991
  8660  0F9B                     l7997:	
  8661  0F9B  3001               	movlw	1
  8662  0F9C                     u7575:	
  8663  0F9C  36C3               	lsrf	___ftadd@f2+2,f
  8664  0F9D  0CC2               	rrf	___ftadd@f2+1,f
  8665  0F9E  0CC1               	rrf	___ftadd@f2,f
  8666  0F9F  0B89               	decfsz	9,f
  8667  0FA0  2F9C               	goto	u7575
  8668  0FA1  3001               	movlw	1
  8669  0FA2  00C4               	movwf	??___ftadd
  8670  0FA3  0844               	movf	??___ftadd,w
  8671  0FA4  07C9               	addwf	___ftadd@exp2,f
  8672  0FA5                     l7999:	
  8673  0FA5  084A               	movf	___ftadd@exp1,w
  8674  0FA6  0649               	xorwf	___ftadd@exp2,w
  8675  0FA7  1D03               	skipz
  8676  0FA8  2F9B               	goto	l7997
  8677  0FA9                     l3256:	
  8678  0FA9  1FC8               	btfss	___ftadd@sign,7
  8679  0FAA  2FBB               	goto	l8003
  8680  0FAB  30FF               	movlw	255
  8681  0FAC  06BE               	xorwf	___ftadd@f1,f
  8682  0FAD  30FF               	movlw	255
  8683  0FAE  06BF               	xorwf	___ftadd@f1+1,f
  8684  0FAF  30FF               	movlw	255
  8685  0FB0  06C0               	xorwf	___ftadd@f1+2,f
  8686  0FB1  3001               	movlw	1
  8687  0FB2  07BE               	addwf	___ftadd@f1,f
  8688  0FB3  3000               	movlw	0
  8689  0FB4  1803               	skipnc
  8690  0FB5  3001               	movlw	1
  8691  0FB6  07BF               	addwf	___ftadd@f1+1,f
  8692  0FB7  3000               	movlw	0
  8693  0FB8  1803               	skipnc
  8694  0FB9  3001               	movlw	1
  8695  0FBA  07C0               	addwf	___ftadd@f1+2,f
  8696  0FBB                     l8003:	
  8697  0FBB  1F48               	btfss	___ftadd@sign,6
  8698  0FBC  2FCD               	goto	l8007
  8699  0FBD  30FF               	movlw	255
  8700  0FBE  06C1               	xorwf	___ftadd@f2,f
  8701  0FBF  30FF               	movlw	255
  8702  0FC0  06C2               	xorwf	___ftadd@f2+1,f
  8703  0FC1  30FF               	movlw	255
  8704  0FC2  06C3               	xorwf	___ftadd@f2+2,f
  8705  0FC3  3001               	movlw	1
  8706  0FC4  07C1               	addwf	___ftadd@f2,f
  8707  0FC5  3000               	movlw	0
  8708  0FC6  1803               	skipnc
  8709  0FC7  3001               	movlw	1
  8710  0FC8  07C2               	addwf	___ftadd@f2+1,f
  8711  0FC9  3000               	movlw	0
  8712  0FCA  1803               	skipnc
  8713  0FCB  3001               	movlw	1
  8714  0FCC  07C3               	addwf	___ftadd@f2+2,f
  8715  0FCD                     l8007:	
  8716  0FCD  01C8               	clrf	___ftadd@sign
  8717  0FCE  083E               	movf	___ftadd@f1,w
  8718  0FCF  07C1               	addwf	___ftadd@f2,f
  8719  0FD0  083F               	movf	___ftadd@f1+1,w
  8720  0FD1  3DC2               	addwfc	___ftadd@f2+1,f
  8721  0FD2  0840               	movf	___ftadd@f1+2,w
  8722  0FD3  3DC3               	addwfc	___ftadd@f2+2,f
  8723  0FD4  1FC3               	btfss	___ftadd@f2+2,7
  8724  0FD5  2FE8               	goto	l8017
  8725  0FD6  30FF               	movlw	255
  8726  0FD7  06C1               	xorwf	___ftadd@f2,f
  8727  0FD8  30FF               	movlw	255
  8728  0FD9  06C2               	xorwf	___ftadd@f2+1,f
  8729  0FDA  30FF               	movlw	255
  8730  0FDB  06C3               	xorwf	___ftadd@f2+2,f
  8731  0FDC  3001               	movlw	1
  8732  0FDD  07C1               	addwf	___ftadd@f2,f
  8733  0FDE  3000               	movlw	0
  8734  0FDF  1803               	skipnc
  8735  0FE0  3001               	movlw	1
  8736  0FE1  07C2               	addwf	___ftadd@f2+1,f
  8737  0FE2  3000               	movlw	0
  8738  0FE3  1803               	skipnc
  8739  0FE4  3001               	movlw	1
  8740  0FE5  07C3               	addwf	___ftadd@f2+2,f
  8741  0FE6  01C8               	clrf	___ftadd@sign
  8742  0FE7  0AC8               	incf	___ftadd@sign,f
  8743  0FE8                     l8017:	
  8744  0FE8  0841               	movf	___ftadd@f2,w
  8745  0FE9  00A0               	movwf	___ftpack@arg
  8746  0FEA  0842               	movf	___ftadd@f2+1,w
  8747  0FEB  00A1               	movwf	___ftpack@arg+1
  8748  0FEC  0843               	movf	___ftadd@f2+2,w
  8749  0FED  00A2               	movwf	___ftpack@arg+2
  8750  0FEE  084A               	movf	___ftadd@exp1,w
  8751  0FEF  00C4               	movwf	??___ftadd
  8752  0FF0  0844               	movf	??___ftadd,w
  8753  0FF1  00A3               	movwf	___ftpack@exp
  8754  0FF2  0848               	movf	___ftadd@sign,w
  8755  0FF3  00C5               	movwf	??___ftadd+1
  8756  0FF4  0845               	movf	??___ftadd+1,w
  8757  0FF5  00A4               	movwf	___ftpack@sign
  8758  0FF6  3188  2002         	fcall	___ftpack
  8759  0FF8  0020               	movlb	0	; select bank0
  8760  0FF9  0820               	movf	?___ftpack,w
  8761  0FFA  00BE               	movwf	?___ftadd
  8762  0FFB  0821               	movf	?___ftpack+1,w
  8763  0FFC  00BF               	movwf	?___ftadd+1
  8764  0FFD  0822               	movf	?___ftpack+2,w
  8765  0FFE  00C0               	movwf	?___ftadd+2
  8766  0FFF  0008               	return
  8767  1000                     __end_of___ftadd:	
  8768                           
  8769                           	psect	text35
  8770  1DAE                     __ptext35:	
  8771 ;; *************** function _RF_RxDisable *****************
  8772 ;; Defined at:
  8773 ;;		line 198 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
  8774 ;; Parameters:    Size  Location     Type
  8775 ;;  rf              1    wreg     unsigned char 
  8776 ;; Auto vars:     Size  Location     Type
  8777 ;;  rf              1    4[BANK0 ] unsigned char 
  8778 ;; Return value:  Size  Location     Type
  8779 ;;		None               void
  8780 ;; Registers used:
  8781 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8782 ;; Tracked objects:
  8783 ;;		On entry : 0/0
  8784 ;;		On exit  : 0/0
  8785 ;;		Unchanged: 0/0
  8786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8788 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8790 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8791 ;;Total ram usage:        1 bytes
  8792 ;; Hardware stack levels used:    1
  8793 ;; Hardware stack levels required when called:    6
  8794 ;; This function calls:
  8795 ;;		_CC2500_WriteCommand
  8796 ;;		_RfPointSelect
  8797 ;;		_setINT_GO
  8798 ;; This function is called by:
  8799 ;;		_setRF_Main
  8800 ;; This function uses a non-reentrant model
  8801 ;;
  8802                           
  8803                           
  8804                           ;psect for function _RF_RxDisable
  8805  1DAE                     _RF_RxDisable:	
  8806                           
  8807                           ;incstack = 0
  8808                           ; Regs used in _RF_RxDisable: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8809                           ;RF_RxDisable@rf stored from wreg
  8810  1DAE  0020               	movlb	0	; select bank0
  8811  1DAF  00A4               	movwf	RF_RxDisable@rf
  8812                           
  8813                           ;RF_Control_B1.c: 200: RfPointSelect(rf);
  8814  1DB0  0824               	movf	RF_RxDisable@rf,w
  8815  1DB1  3199  219F  319D   	fcall	_RfPointSelect
  8816                           
  8817                           ;RF_Control_B1.c: 202: if(RF->RxStatus)
  8818  1DB4  0877               	movf	_RF,w
  8819  1DB5  0086               	movwf	6
  8820  1DB6  0187               	clrf	7
  8821  1DB7  1D81               	btfss	1,3
  8822  1DB8  0008               	return
  8823                           
  8824                           ;RF_Control_B1.c: 203: {
  8825                           ;RF_Control_B1.c: 204: RF->RxStatus=0;
  8826  1DB9  0877               	movf	_RF,w
  8827  1DBA  0086               	movwf	6
  8828  1DBB  0187               	clrf	7
  8829  1DBC  1181               	bcf	1,3
  8830                           
  8831                           ;RF_Control_B1.c: 205: RF->ReceiveGO=0;
  8832  1DBD  0877               	movf	_RF,w
  8833  1DBE  0086               	movwf	6
  8834  1DBF  0187               	clrf	7
  8835  1DC0  1081               	bcf	1,1
  8836                           
  8837                           ;RF_Control_B1.c: 206: RF->DebounceTime=0;
  8838  1DC1  0A77               	incf	_RF,w
  8839  1DC2  0086               	movwf	6
  8840  1DC3  0187               	clrf	7
  8841  1DC4  0181               	clrf	1
  8842                           
  8843                           ;RF_Control_B1.c: 207: RF->Debounce=0;
  8844  1DC5  0877               	movf	_RF,w
  8845  1DC6  0086               	movwf	6
  8846  1DC7  0187               	clrf	7
  8847  1DC8  1281               	bcf	1,5
  8848                           
  8849                           ;RF_Control_B1.c: 208: CC2500_WriteCommand(0x36);
  8850  1DC9  3036               	movlw	54
  8851  1DCA  319A  2274  319D   	fcall	_CC2500_WriteCommand
  8852                           
  8853                           ;RF_Control_B1.c: 209: CC2500_WriteCommand(0x3A);
  8854  1DCD  303A               	movlw	58
  8855  1DCE  319A  2274  319D   	fcall	_CC2500_WriteCommand
  8856                           
  8857                           ;RF_Control_B1.c: 210: setINT_GO(0);
  8858  1DD1  3000               	movlw	0
  8859  1DD2  3199  2176         	fcall	_setINT_GO
  8860  1DD4  0008               	return
  8861  1DD5                     __end_of_RF_RxDisable:	
  8862                           
  8863                           	psect	text36
  8864  1100                     __ptext36:	
  8865 ;; *************** function _CC2500_TxData *****************
  8866 ;; Defined at:
  8867 ;;		line 30 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
  8868 ;; Parameters:    Size  Location     Type
  8869 ;;		None
  8870 ;; Auto vars:     Size  Location     Type
  8871 ;;  loop_e          1    5[BANK0 ] unsigned char 
  8872 ;; Return value:  Size  Location     Type
  8873 ;;		None               void
  8874 ;; Registers used:
  8875 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8876 ;; Tracked objects:
  8877 ;;		On entry : 0/0
  8878 ;;		On exit  : 0/0
  8879 ;;		Unchanged: 0/0
  8880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8881 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8882 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8883 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8884 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8885 ;;Total ram usage:        2 bytes
  8886 ;; Hardware stack levels used:    1
  8887 ;; Hardware stack levels required when called:    6
  8888 ;; This function calls:
  8889 ;;		_CC2500_WriteByte
  8890 ;;		_CC2500_WriteCommand
  8891 ;; This function is called by:
  8892 ;;		_setRF_Main
  8893 ;; This function uses a non-reentrant model
  8894 ;;
  8895                           
  8896                           
  8897                           ;psect for function _CC2500_TxData
  8898  1100                     _CC2500_TxData:	
  8899                           
  8900                           ;CC2500_B1.c: 32: unsigned char loop_e;
  8901                           ;CC2500_B1.c: 34: RC4=0;
  8902                           
  8903                           ;incstack = 0
  8904                           ; Regs used in _CC2500_TxData: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8905  1100  0020               	movlb	0	; select bank0
  8906  1101  120E               	bcf	14,4	;volatile
  8907                           
  8908                           ;CC2500_B1.c: 35: SPI0Buffer=0x3F+0x40;
  8909  1102  307F               	movlw	127
  8910  1103  00A4               	movwf	??_CC2500_TxData
  8911  1104  0824               	movf	??_CC2500_TxData,w
  8912  1105  0021               	movlb	1	; select bank1
  8913  1106  00BE               	movwf	_SPI0Buffer^(0+128)
  8914  1107                     l299:	
  8915                           ;CC2500_B1.c: 36: while(RC2==1);
  8916                           
  8917  1107  0020               	movlb	0	; select bank0
  8918  1108  190E               	btfsc	14,2	;volatile
  8919  1109  2907               	goto	l299
  8920                           
  8921                           ;CC2500_B1.c: 37: CC2500_WriteByte();
  8922  110A  319B  23CE  3191   	fcall	_CC2500_WriteByte
  8923                           
  8924                           ;CC2500_B1.c: 38: SPI0Buffer=Tx_Length;
  8925  110D  0021               	movlb	1	; select bank1
  8926  110E  083F               	movf	_Tx_Length^(0+128),w
  8927  110F  0020               	movlb	0	; select bank0
  8928  1110  00A4               	movwf	??_CC2500_TxData
  8929  1111  0824               	movf	??_CC2500_TxData,w
  8930  1112  0021               	movlb	1	; select bank1
  8931  1113  00BE               	movwf	_SPI0Buffer^(0+128)
  8932                           
  8933                           ;CC2500_B1.c: 39: CC2500_WriteByte();
  8934  1114  319B  23CE  3191   	fcall	_CC2500_WriteByte
  8935                           
  8936                           ;CC2500_B1.c: 40: for(loop_e=0;loop_e<Tx_Length;loop_e++)
  8937  1117  0020               	movlb	0	; select bank0
  8938  1118  01A5               	clrf	CC2500_TxData@loop_e
  8939  1119                     l8717:	
  8940  1119  0021               	movlb	1	; select bank1
  8941  111A  083F               	movf	_Tx_Length^(0+128),w
  8942  111B  0020               	movlb	0	; select bank0
  8943  111C  0225               	subwf	CC2500_TxData@loop_e,w
  8944  111D  1803               	btfsc	3,0
  8945  111E  2931               	goto	l304
  8946                           
  8947                           ;CC2500_B1.c: 41: {
  8948                           ;CC2500_B1.c: 42: SPI0Buffer=RF_Data[loop_e];
  8949  111F  0825               	movf	CC2500_TxData@loop_e,w
  8950  1120  3EA0               	addlw	_RF_Data& (0+255)
  8951  1121  0086               	movwf	6
  8952  1122  0187               	clrf	7
  8953  1123  0801               	movf	1,w
  8954  1124  00A4               	movwf	??_CC2500_TxData
  8955  1125  0824               	movf	??_CC2500_TxData,w
  8956  1126  0021               	movlb	1	; select bank1
  8957  1127  00BE               	movwf	_SPI0Buffer^(0+128)
  8958                           
  8959                           ;CC2500_B1.c: 43: CC2500_WriteByte();
  8960  1128  319B  23CE  3191   	fcall	_CC2500_WriteByte
  8961  112B  3001               	movlw	1
  8962  112C  0020               	movlb	0	; select bank0
  8963  112D  00A4               	movwf	??_CC2500_TxData
  8964  112E  0824               	movf	??_CC2500_TxData,w
  8965  112F  07A5               	addwf	CC2500_TxData@loop_e,f
  8966  1130  2919               	goto	l8717
  8967  1131                     l304:	
  8968                           
  8969                           ;CC2500_B1.c: 44: }
  8970                           ;CC2500_B1.c: 45: RC4=1;
  8971  1131  160E               	bsf	14,4	;volatile
  8972                           
  8973                           ;CC2500_B1.c: 46: CC2500_WriteCommand(0x35);
  8974  1132  3035               	movlw	53
  8975  1133  319A  2274  3191   	fcall	_CC2500_WriteCommand
  8976  1136                     l305:	
  8977                           ;CC2500_B1.c: 47: while(RB0==0);
  8978                           
  8979  1136  0020               	movlb	0	; select bank0
  8980  1137  1C0D               	btfss	13,0	;volatile
  8981  1138  2936               	goto	l305
  8982  1139                     l308:	
  8983                           ;CC2500_B1.c: 48: while(RB0==1);
  8984                           
  8985  1139  180D               	btfsc	13,0	;volatile
  8986  113A  2939               	goto	l308
  8987                           
  8988                           ;CC2500_B1.c: 49: CC2500_WriteCommand(0x36);
  8989  113B  3036               	movlw	54
  8990  113C  319A  2274  3191   	fcall	_CC2500_WriteCommand
  8991                           
  8992                           ;CC2500_B1.c: 50: CC2500_WriteCommand(0x3B);
  8993  113F  303B               	movlw	59
  8994  1140  319A  2274         	fcall	_CC2500_WriteCommand
  8995                           
  8996                           ;CC2500_B1.c: 51: Transceive_OK=1;
  8997  1142  16F0               	bsf	_Transceive_OK/(0+8),_Transceive_OK& (0+7)
  8998  1143  0008               	return
  8999  1144                     __end_of_CC2500_TxData:	
  9000                           
  9001                           	psect	text37
  9002  13CA                     __ptext37:	
  9003 ;; *************** function _CC2500_RxData *****************
  9004 ;; Defined at:
  9005 ;;		line 56 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
  9006 ;; Parameters:    Size  Location     Type
  9007 ;;		None
  9008 ;; Auto vars:     Size  Location     Type
  9009 ;;  loop_f          1    5[BANK0 ] unsigned char 
  9010 ;; Return value:  Size  Location     Type
  9011 ;;		None               void
  9012 ;; Registers used:
  9013 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9014 ;; Tracked objects:
  9015 ;;		On entry : 0/0
  9016 ;;		On exit  : 0/0
  9017 ;;		Unchanged: 0/0
  9018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9019 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9020 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9021 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9022 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9023 ;;Total ram usage:        2 bytes
  9024 ;; Hardware stack levels used:    1
  9025 ;; Hardware stack levels required when called:    6
  9026 ;; This function calls:
  9027 ;;		_CC2500_ReadByte
  9028 ;;		_CC2500_ReadStatus
  9029 ;;		_CC2500_WriteByte
  9030 ;;		_CC2500_WriteCommand
  9031 ;;		_setRF_RxStatus
  9032 ;; This function is called by:
  9033 ;;		_setRF_Main
  9034 ;; This function uses a non-reentrant model
  9035 ;;
  9036                           
  9037                           
  9038                           ;psect for function _CC2500_RxData
  9039  13CA                     _CC2500_RxData:	
  9040                           
  9041                           ;CC2500_B1.c: 58: unsigned char loop_f;
  9042                           ;CC2500_B1.c: 62: if(RB0 == 1)
  9043                           
  9044                           ;incstack = 0
  9045                           ; Regs used in _CC2500_RxData: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9046  13CA  0020               	movlb	0	; select bank0
  9047  13CB  180D               	btfsc	13,0	;volatile
  9048  13CC                     l315:	
  9049                           ;CC2500_B1.c: 63: {
  9050                           ;CC2500_B1.c: 64: while(RB0 == 1);
  9051                           
  9052  13CC  180D               	btfsc	13,0	;volatile
  9053  13CD  2BCC               	goto	l315
  9054                           
  9055                           ;CC2500_B1.c: 65: }
  9056                           ;CC2500_B1.c: 66: CC2500_ReadStatus(0x3B);
  9057  13CE  303B               	movlw	59
  9058  13CF  3187  27E5  3193   	fcall	_CC2500_ReadStatus
  9059                           
  9060                           ;CC2500_B1.c: 67: if(s_data != 0)
  9061  13D2  0021               	movlb	1	; select bank1
  9062  13D3  0842               	movf	_s_data^(0+128),w
  9063  13D4  1903               	btfsc	3,2
  9064  13D5  2C20               	goto	l8763
  9065                           
  9066                           ;CC2500_B1.c: 69: {
  9067                           ;CC2500_B1.c: 70: RC4=0;
  9068  13D6  0020               	movlb	0	; select bank0
  9069  13D7  120E               	bcf	14,4	;volatile
  9070                           
  9071                           ;CC2500_B1.c: 71: SPI0Buffer=0x3F+0xC0;
  9072  13D8  30FF               	movlw	255
  9073  13D9  00A4               	movwf	??_CC2500_RxData
  9074  13DA  0824               	movf	??_CC2500_RxData,w
  9075  13DB  0021               	movlb	1	; select bank1
  9076  13DC  00BE               	movwf	_SPI0Buffer^(0+128)
  9077  13DD                     l319:	
  9078                           ;CC2500_B1.c: 72: while(RC2==1);
  9079                           
  9080  13DD  0020               	movlb	0	; select bank0
  9081  13DE  190E               	btfsc	14,2	;volatile
  9082  13DF  2BDD               	goto	l319
  9083                           
  9084                           ;CC2500_B1.c: 73: CC2500_WriteByte();
  9085  13E0  319B  23CE  3193   	fcall	_CC2500_WriteByte
  9086                           
  9087                           ;CC2500_B1.c: 75: CC2500_ReadByte();
  9088  13E3  319C  2482  3193   	fcall	_CC2500_ReadByte
  9089                           
  9090                           ;CC2500_B1.c: 76: Rx_Length=SPI0Buffer;
  9091  13E6  0021               	movlb	1	; select bank1
  9092  13E7  083E               	movf	_SPI0Buffer^(0+128),w
  9093  13E8  0020               	movlb	0	; select bank0
  9094  13E9  00A4               	movwf	??_CC2500_RxData
  9095  13EA  0824               	movf	??_CC2500_RxData,w
  9096  13EB  0021               	movlb	1	; select bank1
  9097  13EC  00BD               	movwf	_Rx_Length^(0+128)
  9098                           
  9099                           ;CC2500_B1.c: 77: for(loop_f=0;loop_f<Rx_Length;loop_f++)
  9100  13ED  0020               	movlb	0	; select bank0
  9101  13EE  01A5               	clrf	CC2500_RxData@loop_f
  9102  13EF                     l8749:	
  9103  13EF  0021               	movlb	1	; select bank1
  9104  13F0  083D               	movf	_Rx_Length^(0+128),w
  9105  13F1  0020               	movlb	0	; select bank0
  9106  13F2  0225               	subwf	CC2500_RxData@loop_f,w
  9107  13F3  1803               	btfsc	3,0
  9108  13F4  2C07               	goto	l8751
  9109                           
  9110                           ;CC2500_B1.c: 78: {
  9111                           ;CC2500_B1.c: 79: CC2500_ReadByte();
  9112  13F5  319C  2482  3193   	fcall	_CC2500_ReadByte
  9113                           
  9114                           ;CC2500_B1.c: 80: RF_Data[loop_f]=SPI0Buffer;
  9115  13F8  0021               	movlb	1	; select bank1
  9116  13F9  083E               	movf	_SPI0Buffer^(0+128),w
  9117  13FA  0020               	movlb	0	; select bank0
  9118  13FB  00A4               	movwf	??_CC2500_RxData
  9119  13FC  0825               	movf	CC2500_RxData@loop_f,w
  9120  13FD  3EA0               	addlw	_RF_Data& (0+255)
  9121  13FE  0086               	movwf	6
  9122  13FF  0187               	clrf	7
  9123  1400  0824               	movf	??_CC2500_RxData,w
  9124  1401  0081               	movwf	1
  9125  1402  3001               	movlw	1
  9126  1403  00A4               	movwf	??_CC2500_RxData
  9127  1404  0824               	movf	??_CC2500_RxData,w
  9128  1405  07A5               	addwf	CC2500_RxData@loop_f,f
  9129  1406  2BEF               	goto	l8749
  9130  1407                     l8751:	
  9131                           
  9132                           ;CC2500_B1.c: 81: }
  9133                           ;CC2500_B1.c: 82: CC2500_ReadByte();
  9134  1407  319C  2482  3193   	fcall	_CC2500_ReadByte
  9135                           
  9136                           ;CC2500_B1.c: 83: RSSI=SPI0Buffer;
  9137  140A  0021               	movlb	1	; select bank1
  9138  140B  083E               	movf	_SPI0Buffer^(0+128),w
  9139  140C  0020               	movlb	0	; select bank0
  9140  140D  00A4               	movwf	??_CC2500_RxData
  9141  140E  0824               	movf	??_CC2500_RxData,w
  9142  140F  0021               	movlb	1	; select bank1
  9143  1410  00BC               	movwf	_RSSI^(0+128)
  9144                           
  9145                           ;CC2500_B1.c: 84: CC2500_ReadByte();
  9146  1411  319C  2482  3193   	fcall	_CC2500_ReadByte
  9147                           
  9148                           ;CC2500_B1.c: 85: CRC=SPI0Buffer;
  9149  1414  0021               	movlb	1	; select bank1
  9150  1415  083E               	movf	_SPI0Buffer^(0+128),w
  9151  1416  0020               	movlb	0	; select bank0
  9152  1417  00A4               	movwf	??_CC2500_RxData
  9153  1418  0824               	movf	??_CC2500_RxData,w
  9154  1419  0021               	movlb	1	; select bank1
  9155  141A  00B7               	movwf	_CRC^(0+128)
  9156                           
  9157                           ;CC2500_B1.c: 86: RC4=1;
  9158  141B  0020               	movlb	0	; select bank0
  9159  141C  160E               	bsf	14,4	;volatile
  9160                           
  9161                           ;CC2500_B1.c: 87: if(CRC & 0x80)
  9162  141D  0021               	movlb	1	; select bank1
  9163  141E  1BB7               	btfsc	_CRC^(0+128),7
  9164                           
  9165                           ;CC2500_B1.c: 88: Receive_OK=1;
  9166  141F  1570               	bsf	_Receive_OK/(0+8),_Receive_OK& (0+7)
  9167  1420                     l8763:	
  9168                           
  9169                           ;CC2500_B1.c: 89: }
  9170                           ;CC2500_B1.c: 90: CC2500_WriteCommand(0x36);
  9171  1420  3036               	movlw	54
  9172  1421  319A  2274  3193   	fcall	_CC2500_WriteCommand
  9173                           
  9174                           ;CC2500_B1.c: 91: CC2500_WriteCommand(0x3A);
  9175  1424  303A               	movlw	58
  9176  1425  319A  2274  3193   	fcall	_CC2500_WriteCommand
  9177                           
  9178                           ;CC2500_B1.c: 92: setRF_RxStatus(1,0);
  9179  1428  0020               	movlb	0	; select bank0
  9180  1429  01A2               	clrf	setRF_RxStatus@command
  9181  142A  3001               	movlw	1
  9182  142B  319A  223A         	fcall	_setRF_RxStatus
  9183  142D  0008               	return
  9184  142E                     __end_of_CC2500_RxData:	
  9185                           
  9186                           	psect	text38
  9187  1A3A                     __ptext38:	
  9188 ;; *************** function _setRF_RxStatus *****************
  9189 ;; Defined at:
  9190 ;;		line 43 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
  9191 ;; Parameters:    Size  Location     Type
  9192 ;;  rf              1    wreg     unsigned char 
  9193 ;;  command         1    2[BANK0 ] unsigned char 
  9194 ;; Auto vars:     Size  Location     Type
  9195 ;;  rf              1    3[BANK0 ] unsigned char 
  9196 ;; Return value:  Size  Location     Type
  9197 ;;		None               void
  9198 ;; Registers used:
  9199 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9200 ;; Tracked objects:
  9201 ;;		On entry : 0/0
  9202 ;;		On exit  : 0/0
  9203 ;;		Unchanged: 0/0
  9204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9205 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9206 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9208 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9209 ;;Total ram usage:        2 bytes
  9210 ;; Hardware stack levels used:    1
  9211 ;; Hardware stack levels required when called:    5
  9212 ;; This function calls:
  9213 ;;		_RfPointSelect
  9214 ;; This function is called by:
  9215 ;;		_CC2500_RxData
  9216 ;; This function uses a non-reentrant model
  9217 ;;
  9218                           
  9219                           
  9220                           ;psect for function _setRF_RxStatus
  9221  1A3A                     _setRF_RxStatus:	
  9222                           
  9223                           ;incstack = 0
  9224                           ; Regs used in _setRF_RxStatus: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9225                           ;setRF_RxStatus@rf stored from wreg
  9226  1A3A  0020               	movlb	0	; select bank0
  9227  1A3B  00A3               	movwf	setRF_RxStatus@rf
  9228                           
  9229                           ;RF_Control_B1.c: 45: RfPointSelect(rf);
  9230  1A3C  0823               	movf	setRF_RxStatus@rf,w
  9231  1A3D  3199  219F         	fcall	_RfPointSelect
  9232                           
  9233                           ;RF_Control_B1.c: 46: RF->RxStatus=command;
  9234  1A3F  0877               	movf	_RF,w
  9235  1A40  0086               	movwf	6
  9236  1A41  0187               	clrf	7
  9237  1A42  0020               	movlb	0	; select bank0
  9238  1A43  0822               	movf	setRF_RxStatus@command,w
  9239  1A44  1181               	bcf	1,3
  9240  1A45  1D03               	skipz
  9241  1A46  1581               	bsf	1,3
  9242  1A47  0008               	return
  9243  1A48                     __end_of_setRF_RxStatus:	
  9244                           
  9245                           	psect	text39
  9246  07E5                     __ptext39:	
  9247 ;; *************** function _CC2500_ReadStatus *****************
  9248 ;; Defined at:
  9249 ;;		line 267 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
  9250 ;; Parameters:    Size  Location     Type
  9251 ;;  status_addr     1    wreg     unsigned char 
  9252 ;; Auto vars:     Size  Location     Type
  9253 ;;  status_addr     1    3[BANK0 ] unsigned char 
  9254 ;; Return value:  Size  Location     Type
  9255 ;;		None               void
  9256 ;; Registers used:
  9257 ;;		wreg, status,2, status,0, pclath, cstack
  9258 ;; Tracked objects:
  9259 ;;		On entry : 0/0
  9260 ;;		On exit  : 0/0
  9261 ;;		Unchanged: 0/0
  9262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9263 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9264 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9265 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9266 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9267 ;;Total ram usage:        2 bytes
  9268 ;; Hardware stack levels used:    1
  9269 ;; Hardware stack levels required when called:    5
  9270 ;; This function calls:
  9271 ;;		_CC2500_ReadByte
  9272 ;;		_CC2500_WriteByte
  9273 ;; This function is called by:
  9274 ;;		_CC2500_RxData
  9275 ;; This function uses a non-reentrant model
  9276 ;;
  9277                           
  9278                           
  9279                           ;psect for function _CC2500_ReadStatus
  9280  07E5                     _CC2500_ReadStatus:	
  9281                           
  9282                           ;incstack = 0
  9283                           ; Regs used in _CC2500_ReadStatus: [wreg+status,2+status,0+pclath+cstack]
  9284                           ;CC2500_ReadStatus@status_addr stored from wreg
  9285  07E5  0020               	movlb	0	; select bank0
  9286  07E6  00A3               	movwf	CC2500_ReadStatus@status_addr
  9287                           
  9288                           ;CC2500_B1.c: 269: RC4=0;
  9289  07E7  120E               	bcf	14,4	;volatile
  9290                           
  9291                           ;CC2500_B1.c: 270: SPI0Buffer=status_addr+0xC0;
  9292  07E8  0823               	movf	CC2500_ReadStatus@status_addr,w
  9293  07E9  3EC0               	addlw	192
  9294  07EA  00A2               	movwf	??_CC2500_ReadStatus
  9295  07EB  0822               	movf	??_CC2500_ReadStatus,w
  9296  07EC  0021               	movlb	1	; select bank1
  9297  07ED  00BE               	movwf	_SPI0Buffer^(0+128)
  9298  07EE                     l395:	
  9299                           ;CC2500_B1.c: 272: while(RC2==1);
  9300                           
  9301  07EE  0020               	movlb	0	; select bank0
  9302  07EF  190E               	btfsc	14,2	;volatile
  9303  07F0  2FEE               	goto	l395
  9304                           
  9305                           ;CC2500_B1.c: 274: CC2500_WriteByte();
  9306  07F1  319B  23CE  3187   	fcall	_CC2500_WriteByte
  9307                           
  9308                           ;CC2500_B1.c: 275: CC2500_ReadByte();
  9309  07F4  319C  2482         	fcall	_CC2500_ReadByte
  9310                           
  9311                           ;CC2500_B1.c: 276: RC4=1;
  9312  07F6  0020               	movlb	0	; select bank0
  9313  07F7  160E               	bsf	14,4	;volatile
  9314                           
  9315                           ;CC2500_B1.c: 278: s_data=SPI0Buffer;
  9316  07F8  0021               	movlb	1	; select bank1
  9317  07F9  083E               	movf	_SPI0Buffer^(0+128),w
  9318  07FA  0020               	movlb	0	; select bank0
  9319  07FB  00A2               	movwf	??_CC2500_ReadStatus
  9320  07FC  0822               	movf	??_CC2500_ReadStatus,w
  9321  07FD  0021               	movlb	1	; select bank1
  9322  07FE  00C2               	movwf	_s_data^(0+128)
  9323  07FF  0008               	return
  9324  0800                     __end_of_CC2500_ReadStatus:	
  9325                           
  9326                           	psect	text40
  9327  1C82                     __ptext40:	
  9328 ;; *************** function _CC2500_ReadByte *****************
  9329 ;; Defined at:
  9330 ;;		line 210 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
  9331 ;; Parameters:    Size  Location     Type
  9332 ;;		None
  9333 ;; Auto vars:     Size  Location     Type
  9334 ;;  loop_b          1    1[BANK0 ] unsigned char 
  9335 ;; Return value:  Size  Location     Type
  9336 ;;		None               void
  9337 ;; Registers used:
  9338 ;;		wreg, status,2, status,0
  9339 ;; Tracked objects:
  9340 ;;		On entry : 0/0
  9341 ;;		On exit  : 0/0
  9342 ;;		Unchanged: 0/0
  9343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9344 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9345 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9346 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9347 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9348 ;;Total ram usage:        2 bytes
  9349 ;; Hardware stack levels used:    1
  9350 ;; Hardware stack levels required when called:    4
  9351 ;; This function calls:
  9352 ;;		Nothing
  9353 ;; This function is called by:
  9354 ;;		_CC2500_RxData
  9355 ;;		_CC2500_ReadStatus
  9356 ;;		_CC2500_ReadREG
  9357 ;; This function uses a non-reentrant model
  9358 ;;
  9359                           
  9360                           
  9361                           ;psect for function _CC2500_ReadByte
  9362  1C82                     _CC2500_ReadByte:	
  9363                           
  9364                           ;CC2500_B1.c: 212: unsigned char loop_b;
  9365                           ;CC2500_B1.c: 213: for(loop_b=0;loop_b<8;loop_b++)
  9366                           
  9367                           ;incstack = 0
  9368                           ; Regs used in _CC2500_ReadByte: [wreg+status,2+status,0]
  9369  1C82  0020               	movlb	0	; select bank0
  9370  1C83  01A1               	clrf	CC2500_ReadByte@loop_b
  9371  1C84                     L11:	
  9372  1C84  3008               	movlw	8
  9373  1C85  0221               	subwf	CC2500_ReadByte@loop_b,w
  9374  1C86  1803               	btfsc	3,0
  9375  1C87  0008               	return
  9376                           
  9377                           ;CC2500_B1.c: 214: {
  9378                           ;CC2500_B1.c: 215: RC1=1;
  9379  1C88  148E               	bsf	14,1	;volatile
  9380                           
  9381                           ;CC2500_B1.c: 216: SPI0Buffer<<=1;
  9382  1C89  1003               	clrc
  9383  1C8A  0021               	movlb	1	; select bank1
  9384  1C8B  0DBE               	rlf	_SPI0Buffer^(0+128),f
  9385                           
  9386                           ;CC2500_B1.c: 217: if(RC2 == 1)
  9387  1C8C  0020               	movlb	0	; select bank0
  9388  1C8D  1D0E               	btfss	14,2	;volatile
  9389  1C8E  2C92               	goto	l8447
  9390                           
  9391                           ;CC2500_B1.c: 218: SPI0Buffer |= 0x01;
  9392  1C8F  0021               	movlb	1	; select bank1
  9393  1C90  143E               	bsf	_SPI0Buffer^(0+128),0
  9394  1C91  2C98               	goto	l8449
  9395  1C92                     l8447:	
  9396                           
  9397                           ;CC2500_B1.c: 219: else
  9398                           ;CC2500_B1.c: 220: SPI0Buffer &= 0xFE;
  9399  1C92  30FE               	movlw	254
  9400  1C93  0020               	movlb	0	; select bank0
  9401  1C94  00A0               	movwf	??_CC2500_ReadByte
  9402  1C95  0820               	movf	??_CC2500_ReadByte,w
  9403  1C96  0021               	movlb	1	; select bank1
  9404  1C97  05BE               	andwf	_SPI0Buffer^(0+128),f
  9405  1C98                     l8449:	
  9406                           
  9407                           ;CC2500_B1.c: 221: RC1=0;
  9408  1C98  0020               	movlb	0	; select bank0
  9409  1C99  108E               	bcf	14,1	;volatile
  9410  1C9A  3001               	movlw	1
  9411  1C9B  00A0               	movwf	??_CC2500_ReadByte
  9412  1C9C  0820               	movf	??_CC2500_ReadByte,w
  9413  1C9D  07A1               	addwf	CC2500_ReadByte@loop_b,f
  9414  1C9E  2C84               	goto	L11
  9415  1C9F                     __end_of_CC2500_ReadByte:	
  9416                           
  9417                           	psect	text41
  9418  190A                     __ptext41:	
  9419 ;; *************** function _RF_Initialization *****************
  9420 ;; Defined at:
  9421 ;;		line 17 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
  9422 ;; Parameters:    Size  Location     Type
  9423 ;;		None
  9424 ;; Auto vars:     Size  Location     Type
  9425 ;;		None
  9426 ;; Return value:  Size  Location     Type
  9427 ;;		None               void
  9428 ;; Registers used:
  9429 ;;		wreg, status,2, status,0, pclath, cstack
  9430 ;; Tracked objects:
  9431 ;;		On entry : 0/0
  9432 ;;		On exit  : 0/0
  9433 ;;		Unchanged: 0/0
  9434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9438 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9439 ;;Total ram usage:        0 bytes
  9440 ;; Hardware stack levels used:    1
  9441 ;; Hardware stack levels required when called:    5
  9442 ;; This function calls:
  9443 ;;		_setRF_Initialization
  9444 ;; This function is called by:
  9445 ;;		_main
  9446 ;; This function uses a non-reentrant model
  9447 ;;
  9448                           
  9449                           
  9450                           ;psect for function _RF_Initialization
  9451  190A                     _RF_Initialization:	
  9452                           
  9453                           ;RF_Control_B1.c: 20: setRF_Initialization(1);
  9454                           
  9455                           ;incstack = 0
  9456                           ; Regs used in _RF_Initialization: [wreg+status,2+status,0+pclath+cstack]
  9457  190A  3001               	movlw	1
  9458  190B  3199  213E         	fcall	_setRF_Initialization
  9459  190D  0008               	return
  9460  190E                     __end_of_RF_Initialization:	
  9461                           
  9462                           	psect	text42
  9463  193E                     __ptext42:	
  9464 ;; *************** function _setRF_Initialization *****************
  9465 ;; Defined at:
  9466 ;;		line 50 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
  9467 ;; Parameters:    Size  Location     Type
  9468 ;;  rf              1    wreg     unsigned char 
  9469 ;; Auto vars:     Size  Location     Type
  9470 ;;  rf              1    0[COMMON] unsigned char 
  9471 ;; Return value:  Size  Location     Type
  9472 ;;		None               void
  9473 ;; Registers used:
  9474 ;;		wreg
  9475 ;; Tracked objects:
  9476 ;;		On entry : 0/0
  9477 ;;		On exit  : 0/0
  9478 ;;		Unchanged: 0/0
  9479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9482 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9483 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9484 ;;Total ram usage:        1 bytes
  9485 ;; Hardware stack levels used:    1
  9486 ;; Hardware stack levels required when called:    4
  9487 ;; This function calls:
  9488 ;;		Nothing
  9489 ;; This function is called by:
  9490 ;;		_RF_Initialization
  9491 ;; This function uses a non-reentrant model
  9492 ;;
  9493                           
  9494                           
  9495                           ;psect for function _setRF_Initialization
  9496  193E                     _setRF_Initialization:	
  9497                           
  9498                           ;RF_Control_B1.c: 54: Tx_Length=21;
  9499                           
  9500                           ;incstack = 0
  9501                           ; Regs used in _setRF_Initialization: [wreg]
  9502  193E  3015               	movlw	21
  9503  193F  0020               	movlb	0	; select bank0
  9504  1940  00A0               	movwf	??_setRF_Initialization
  9505  1941  0820               	movf	??_setRF_Initialization,w
  9506  1942  0021               	movlb	1	; select bank1
  9507  1943  00BF               	movwf	_Tx_Length^(0+128)
  9508  1944  0008               	return
  9509  1945                     __end_of_setRF_Initialization:	
  9510                           
  9511                           	psect	text43
  9512  18F5                     __ptext43:	
  9513 ;; *************** function _PowerFault_Main *****************
  9514 ;; Defined at:
  9515 ;;		line 22 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\PowerFault_B1.c"
  9516 ;; Parameters:    Size  Location     Type
  9517 ;;		None
  9518 ;; Auto vars:     Size  Location     Type
  9519 ;;		None
  9520 ;; Return value:  Size  Location     Type
  9521 ;;		None               void
  9522 ;; Registers used:
  9523 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9524 ;; Tracked objects:
  9525 ;;		On entry : 0/0
  9526 ;;		On exit  : 0/0
  9527 ;;		Unchanged: 0/0
  9528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9529 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9530 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9532 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9533 ;;Total ram usage:        0 bytes
  9534 ;; Hardware stack levels used:    1
  9535 ;; Hardware stack levels required when called:   10
  9536 ;; This function calls:
  9537 ;;		_setPowerFault_Main
  9538 ;; This function is called by:
  9539 ;;		_main
  9540 ;; This function uses a non-reentrant model
  9541 ;;
  9542                           
  9543                           
  9544                           ;psect for function _PowerFault_Main
  9545  18F5                     _PowerFault_Main:	
  9546                           
  9547                           ;PowerFault_B1.c: 25: setPowerFault_Main();
  9548                           
  9549                           ;incstack = 0
  9550                           ; Regs used in _PowerFault_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9551  18F5  3186  2614         	fcall	_setPowerFault_Main
  9552  18F7  0008               	return
  9553  18F8                     __end_of_PowerFault_Main:	
  9554                           
  9555                           	psect	text44
  9556  0614                     __ptext44:	
  9557 ;; *************** function _setPowerFault_Main *****************
  9558 ;; Defined at:
  9559 ;;		line 61 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\PowerFault_B1.c"
  9560 ;; Parameters:    Size  Location     Type
  9561 ;;		None
  9562 ;; Auto vars:     Size  Location     Type
  9563 ;;		None
  9564 ;; Return value:  Size  Location     Type
  9565 ;;		None               void
  9566 ;; Registers used:
  9567 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9568 ;; Tracked objects:
  9569 ;;		On entry : 0/0
  9570 ;;		On exit  : 0/0
  9571 ;;		Unchanged: 0/0
  9572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9573 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9574 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9575 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9576 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9577 ;;Total ram usage:        2 bytes
  9578 ;; Hardware stack levels used:    1
  9579 ;; Hardware stack levels required when called:    9
  9580 ;; This function calls:
  9581 ;;		_getTemp_Safe
  9582 ;;		_setPowerFault_Exceptions
  9583 ;; This function is called by:
  9584 ;;		_PowerFault_Main
  9585 ;; This function uses a non-reentrant model
  9586 ;;
  9587                           
  9588                           
  9589                           ;psect for function _setPowerFault_Main
  9590  0614                     _setPowerFault_Main:	
  9591                           
  9592                           ;PowerFault_B1.c: 63: if(PF->Enable)
  9593                           
  9594                           ;incstack = 0
  9595                           ; Regs used in _setPowerFault_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9596  0614  0876               	movf	_PF,w
  9597  0615  0086               	movwf	6
  9598  0616  3001               	movlw	1	; select bank2/3
  9599  0617  0087               	movwf	7
  9600  0618  1C01               	btfss	1,0
  9601  0619  0008               	return
  9602                           
  9603                           ;PowerFault_B1.c: 64: {
  9604                           ;PowerFault_B1.c: 65: if(PF->ADtoGO == 0)
  9605  061A  0876               	movf	_PF,w
  9606  061B  0086               	movwf	6
  9607  061C  3001               	movlw	1	; select bank2/3
  9608  061D  0087               	movwf	7
  9609  061E  1981               	btfsc	1,3
  9610  061F  2E5E               	goto	l9369
  9611                           
  9612                           ;PowerFault_B1.c: 66: {
  9613                           ;PowerFault_B1.c: 67: PF->Time++;
  9614  0620  0876               	movf	_PF,w
  9615  0621  3E06               	addlw	6
  9616  0622  0086               	movwf	6
  9617  0623  3001               	movlw	1	; select bank2/3
  9618  0624  0087               	movwf	7
  9619  0625  3001               	movlw	1
  9620  0626  0781               	addwf	1,f
  9621  0627  3141               	addfsr 1,1
  9622  0628  1803               	skipnc
  9623  0629  0A81               	incf	1,f
  9624                           
  9625                           ;PowerFault_B1.c: 69: {
  9626                           ;PowerFault_B1.c: 70: if(1 && getTemp_Safe())
  9627  062A  0876               	movf	_PF,w
  9628  062B  3E06               	addlw	6
  9629  062C  0086               	movwf	6
  9630  062D  3001               	movlw	1	; select bank2/3
  9631  062E  0087               	movwf	7
  9632  062F  3F40               	moviw [0]fsr1
  9633  0630  0020               	movlb	0	; select bank0
  9634  0631  00AD               	movwf	??_setPowerFault_Main
  9635  0632  3F41               	moviw [1]fsr1
  9636  0633  00AE               	movwf	??_setPowerFault_Main+1
  9637  0634  3002               	movlw	2
  9638  0635  022E               	subwf	??_setPowerFault_Main+1,w
  9639  0636  30BC               	movlw	188
  9640  0637  1903               	skipnz
  9641  0638  022D               	subwf	??_setPowerFault_Main,w
  9642  0639  1C03               	skipc
  9643  063A  0008               	return
  9644  063B  3199  2137  3186   	fcall	_getTemp_Safe
  9645  063E  3A00               	xorlw	0
  9646  063F  1903               	skipnz
  9647  0640  2E54               	goto	l9367
  9648                           
  9649                           ;PowerFault_B1.c: 71: {
  9650                           ;PowerFault_B1.c: 72: PF->Time=0;
  9651  0641  0876               	movf	_PF,w
  9652  0642  3E06               	addlw	6
  9653  0643  0086               	movwf	6
  9654  0644  3001               	movlw	1	; select bank2/3
  9655  0645  0087               	movwf	7
  9656  0646  3000               	movlw	0
  9657  0647  3FC0               	movwi [0]fsr1
  9658  0648  3FC1               	movwi [1]fsr1
  9659                           
  9660                           ;PowerFault_B1.c: 73: PF->ADtoGO=1;
  9661  0649  0876               	movf	_PF,w
  9662  064A  0086               	movwf	6
  9663  064B  3001               	movlw	1	; select bank2/3
  9664  064C  0087               	movwf	7
  9665  064D  1581               	bsf	1,3
  9666                           
  9667                           ;PowerFault_B1.c: 74: PF->Safe=0;
  9668  064E  0876               	movf	_PF,w
  9669  064F  0086               	movwf	6
  9670  0650  3001               	movlw	1	; select bank2/3
  9671  0651  0087               	movwf	7
  9672  0652  1101               	bcf	1,2
  9673                           
  9674                           ;PowerFault_B1.c: 75: }
  9675  0653  0008               	return
  9676  0654                     l9367:	
  9677                           
  9678                           ;PowerFault_B1.c: 76: else
  9679                           ;PowerFault_B1.c: 77: {
  9680                           ;PowerFault_B1.c: 78: PF->Time=700;
  9681  0654  0876               	movf	_PF,w
  9682  0655  3E06               	addlw	6
  9683  0656  0086               	movwf	6
  9684  0657  3001               	movlw	1	; select bank2/3
  9685  0658  0087               	movwf	7
  9686  0659  30BC               	movlw	188
  9687  065A  3FC0               	movwi [0]fsr1
  9688  065B  3002               	movlw	2
  9689  065C  3FC1               	movwi [1]fsr1
  9690                           
  9691                           ;PowerFault_B1.c: 79: }
  9692                           ;PowerFault_B1.c: 80: }
  9693                           ;PowerFault_B1.c: 81: }
  9694  065D  0008               	return
  9695  065E                     l9369:	
  9696                           
  9697                           ;PowerFault_B1.c: 82: else
  9698                           ;PowerFault_B1.c: 83: {
  9699                           ;PowerFault_B1.c: 84: PF->Time++;
  9700  065E  0876               	movf	_PF,w
  9701  065F  3E06               	addlw	6
  9702  0660  0086               	movwf	6
  9703  0661  3001               	movlw	1	; select bank2/3
  9704  0662  0087               	movwf	7
  9705  0663  3001               	movlw	1
  9706  0664  0781               	addwf	1,f
  9707  0665  3141               	addfsr 1,1
  9708  0666  1803               	skipnc
  9709  0667  0A81               	incf	1,f
  9710                           
  9711                           ;PowerFault_B1.c: 85: if(PF->Time >= 2)
  9712  0668  0876               	movf	_PF,w
  9713  0669  3E06               	addlw	6
  9714  066A  0086               	movwf	6
  9715  066B  3001               	movlw	1	; select bank2/3
  9716  066C  0087               	movwf	7
  9717  066D  3F40               	moviw [0]fsr1
  9718  066E  0020               	movlb	0	; select bank0
  9719  066F  00AD               	movwf	??_setPowerFault_Main
  9720  0670  3F41               	moviw [1]fsr1
  9721  0671  00AE               	movwf	??_setPowerFault_Main+1
  9722  0672  3000               	movlw	0
  9723  0673  022E               	subwf	??_setPowerFault_Main+1,w
  9724  0674  3002               	movlw	2
  9725  0675  1903               	skipnz
  9726  0676  022D               	subwf	??_setPowerFault_Main,w
  9727  0677  1C03               	skipc
  9728  0678  0008               	return
  9729                           
  9730                           ;PowerFault_B1.c: 86: {
  9731                           ;PowerFault_B1.c: 87: PF->Time=0;
  9732  0679  0876               	movf	_PF,w
  9733  067A  3E06               	addlw	6
  9734  067B  0086               	movwf	6
  9735  067C  3001               	movlw	1	; select bank2/3
  9736  067D  0087               	movwf	7
  9737  067E  3000               	movlw	0
  9738  067F  3FC0               	movwi [0]fsr1
  9739  0680  3FC1               	movwi [1]fsr1
  9740                           
  9741                           ;PowerFault_B1.c: 88: PF->ADtoGO=0;
  9742  0681  0876               	movf	_PF,w
  9743  0682  0086               	movwf	6
  9744  0683  3001               	movlw	1	; select bank2/3
  9745  0684  0087               	movwf	7
  9746  0685  1181               	bcf	1,3
  9747                           
  9748                           ;PowerFault_B1.c: 90: if(PF->ERROR)
  9749  0686  0876               	movf	_PF,w
  9750  0687  0086               	movwf	6
  9751  0688  3001               	movlw	1	; select bank2/3
  9752  0689  0087               	movwf	7
  9753  068A  1C81               	btfss	1,1
  9754  068B  2EC7               	goto	l9389
  9755                           
  9756                           ;PowerFault_B1.c: 91: {
  9757                           ;PowerFault_B1.c: 92: if(PF->AD <= (300+100) && PF->AD >= (300-100))
  9758  068C  0A76               	incf	_PF,w
  9759  068D  0086               	movwf	6
  9760  068E  3001               	movlw	1	; select bank2/3
  9761  068F  0087               	movwf	7
  9762  0690  3F40               	moviw [0]fsr1
  9763  0691  00AD               	movwf	??_setPowerFault_Main
  9764  0692  3F41               	moviw [1]fsr1
  9765  0693  00AE               	movwf	??_setPowerFault_Main+1
  9766  0694  3001               	movlw	1
  9767  0695  022E               	subwf	??_setPowerFault_Main+1,w
  9768  0696  3091               	movlw	145
  9769  0697  1903               	skipnz
  9770  0698  022D               	subwf	??_setPowerFault_Main,w
  9771  0699  1803               	skipnc
  9772  069A  2F03               	goto	l9401
  9773  069B  0A76               	incf	_PF,w
  9774  069C  0086               	movwf	6
  9775  069D  3001               	movlw	1	; select bank2/3
  9776  069E  0087               	movwf	7
  9777  069F  3F40               	moviw [0]fsr1
  9778  06A0  00AD               	movwf	??_setPowerFault_Main
  9779  06A1  3F41               	moviw [1]fsr1
  9780  06A2  00AE               	movwf	??_setPowerFault_Main+1
  9781  06A3  3000               	movlw	0
  9782  06A4  022E               	subwf	??_setPowerFault_Main+1,w
  9783  06A5  30C8               	movlw	200
  9784  06A6  1903               	skipnz
  9785  06A7  022D               	subwf	??_setPowerFault_Main,w
  9786  06A8  1C03               	skipc
  9787  06A9  2F03               	goto	l9401
  9788                           
  9789                           ;PowerFault_B1.c: 93: {
  9790                           ;PowerFault_B1.c: 94: PF->Count++;
  9791  06AA  3001               	movlw	1
  9792  06AB  00AD               	movwf	??_setPowerFault_Main
  9793  06AC  0876               	movf	_PF,w
  9794  06AD  3E05               	addlw	5
  9795  06AE  0086               	movwf	6
  9796  06AF  3001               	movlw	1	; select bank2/3
  9797  06B0  0087               	movwf	7
  9798  06B1  082D               	movf	??_setPowerFault_Main,w
  9799  06B2  0781               	addwf	1,f
  9800                           
  9801                           ;PowerFault_B1.c: 95: if(PF->Count > 1)
  9802  06B3  0876               	movf	_PF,w
  9803  06B4  3E05               	addlw	5
  9804  06B5  0086               	movwf	6
  9805  06B6  3001               	movlw	1	; select bank2/3
  9806  06B7  0087               	movwf	7
  9807  06B8  3002               	movlw	2
  9808  06B9  0201               	subwf	1,w
  9809  06BA  1C03               	skipc
  9810  06BB  2F09               	goto	l9403
  9811                           
  9812                           ;PowerFault_B1.c: 96: {
  9813                           ;PowerFault_B1.c: 97: PF->Count=0;
  9814  06BC  0876               	movf	_PF,w
  9815  06BD  3E05               	addlw	5
  9816  06BE  0086               	movwf	6
  9817  06BF  3001               	movlw	1	; select bank2/3
  9818  06C0  0087               	movwf	7
  9819  06C1  0181               	clrf	1
  9820                           
  9821                           ;PowerFault_B1.c: 98: setPowerFault_Exceptions(0);
  9822  06C2  3000               	movlw	0
  9823  06C3  3190  2001  3186   	fcall	_setPowerFault_Exceptions
  9824                           
  9825                           ;PowerFault_B1.c: 99: }
  9826                           ;PowerFault_B1.c: 100: }
  9827  06C6  2F09               	goto	l9403
  9828  06C7                     l9389:	
  9829                           ;PowerFault_B1.c: 104: }
  9830                           ;PowerFault_B1.c: 105: }
  9831                           
  9832                           ;PowerFault_B1.c: 101: else
  9833                           ;PowerFault_B1.c: 102: {
  9834                           ;PowerFault_B1.c: 103: PF->Count=0;
  9835                           
  9836                           
  9837                           ;PowerFault_B1.c: 106: else
  9838                           ;PowerFault_B1.c: 107: {
  9839                           ;PowerFault_B1.c: 108: if(PF->AD >= (300+100) || PF->AD <= (310-100))
  9840  06C7  0A76               	incf	_PF,w
  9841  06C8  0086               	movwf	6
  9842  06C9  3001               	movlw	1	; select bank2/3
  9843  06CA  0087               	movwf	7
  9844  06CB  3F40               	moviw [0]fsr1
  9845  06CC  0020               	movlb	0	; select bank0
  9846  06CD  00AD               	movwf	??_setPowerFault_Main
  9847  06CE  3F41               	moviw [1]fsr1
  9848  06CF  00AE               	movwf	??_setPowerFault_Main+1
  9849  06D0  3001               	movlw	1
  9850  06D1  022E               	subwf	??_setPowerFault_Main+1,w
  9851  06D2  3090               	movlw	144
  9852  06D3  1903               	skipnz
  9853  06D4  022D               	subwf	??_setPowerFault_Main,w
  9854  06D5  1803               	skipnc
  9855  06D6  2EE6               	goto	l9393
  9856  06D7  0A76               	incf	_PF,w
  9857  06D8  0086               	movwf	6
  9858  06D9  3001               	movlw	1	; select bank2/3
  9859  06DA  0087               	movwf	7
  9860  06DB  3F40               	moviw [0]fsr1
  9861  06DC  00AD               	movwf	??_setPowerFault_Main
  9862  06DD  3F41               	moviw [1]fsr1
  9863  06DE  00AE               	movwf	??_setPowerFault_Main+1
  9864  06DF  3000               	movlw	0
  9865  06E0  022E               	subwf	??_setPowerFault_Main+1,w
  9866  06E1  30D3               	movlw	211
  9867  06E2  1903               	skipnz
  9868  06E3  022D               	subwf	??_setPowerFault_Main,w
  9869  06E4  1803               	skipnc
  9870  06E5  2F03               	goto	l9401
  9871  06E6                     l9393:	
  9872                           
  9873                           ;PowerFault_B1.c: 109: {
  9874                           ;PowerFault_B1.c: 110: PF->Count++;
  9875  06E6  3001               	movlw	1
  9876  06E7  00AD               	movwf	??_setPowerFault_Main
  9877  06E8  0876               	movf	_PF,w
  9878  06E9  3E05               	addlw	5
  9879  06EA  0086               	movwf	6
  9880  06EB  3001               	movlw	1	; select bank2/3
  9881  06EC  0087               	movwf	7
  9882  06ED  082D               	movf	??_setPowerFault_Main,w
  9883  06EE  0781               	addwf	1,f
  9884                           
  9885                           ;PowerFault_B1.c: 111: if(PF->Count > 1)
  9886  06EF  0876               	movf	_PF,w
  9887  06F0  3E05               	addlw	5
  9888  06F1  0086               	movwf	6
  9889  06F2  3001               	movlw	1	; select bank2/3
  9890  06F3  0087               	movwf	7
  9891  06F4  3002               	movlw	2
  9892  06F5  0201               	subwf	1,w
  9893  06F6  1C03               	skipc
  9894  06F7  2F09               	goto	l9403
  9895                           
  9896                           ;PowerFault_B1.c: 112: {
  9897                           ;PowerFault_B1.c: 113: PF->Count=0;
  9898  06F8  0876               	movf	_PF,w
  9899  06F9  3E05               	addlw	5
  9900  06FA  0086               	movwf	6
  9901  06FB  3001               	movlw	1	; select bank2/3
  9902  06FC  0087               	movwf	7
  9903  06FD  0181               	clrf	1
  9904                           
  9905                           ;PowerFault_B1.c: 114: setPowerFault_Exceptions(1);
  9906  06FE  3001               	movlw	1
  9907  06FF  3190  2001  3186   	fcall	_setPowerFault_Exceptions
  9908                           
  9909                           ;PowerFault_B1.c: 115: }
  9910                           ;PowerFault_B1.c: 116: }
  9911  0702  2F09               	goto	l9403
  9912  0703                     l9401:	
  9913                           
  9914                           ;PowerFault_B1.c: 117: else
  9915                           ;PowerFault_B1.c: 118: {
  9916                           ;PowerFault_B1.c: 119: PF->Count=0;
  9917  0703  0876               	movf	_PF,w
  9918  0704  3E05               	addlw	5
  9919  0705  0086               	movwf	6
  9920  0706  3001               	movlw	1	; select bank2/3
  9921  0707  0087               	movwf	7
  9922  0708  0181               	clrf	1
  9923  0709                     l9403:	
  9924                           
  9925                           ;PowerFault_B1.c: 120: }
  9926                           ;PowerFault_B1.c: 122: }
  9927                           ;PowerFault_B1.c: 123: if(PF->ERROR == 0)
  9928  0709  0876               	movf	_PF,w
  9929  070A  0086               	movwf	6
  9930  070B  3001               	movlw	1	; select bank2/3
  9931  070C  0087               	movwf	7
  9932  070D  1881               	btfsc	1,1
  9933  070E  2F14               	goto	l2301
  9934                           
  9935                           ;PowerFault_B1.c: 124: {
  9936                           ;PowerFault_B1.c: 125: PF->Safe=1;
  9937  070F  0876               	movf	_PF,w
  9938  0710  0086               	movwf	6
  9939  0711  3001               	movlw	1	; select bank2/3
  9940  0712  0087               	movwf	7
  9941  0713  1501               	bsf	1,2
  9942  0714                     l2301:	
  9943                           
  9944                           ;PowerFault_B1.c: 126: }
  9945                           ;PowerFault_B1.c: 127: PF->AD=0;
  9946  0714  0A76               	incf	_PF,w
  9947  0715  0086               	movwf	6
  9948  0716  3001               	movlw	1	; select bank2/3
  9949  0717  0087               	movwf	7
  9950  0718  3000               	movlw	0
  9951  0719  3FC0               	movwi [0]fsr1
  9952  071A  3FC1               	movwi [1]fsr1
  9953  071B  0008               	return
  9954  071C                     __end_of_setPowerFault_Main:	
  9955                           
  9956                           	psect	text45
  9957  1001                     __ptext45:	
  9958 ;; *************** function _setPowerFault_Exceptions *****************
  9959 ;; Defined at:
  9960 ;;		line 133 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\PowerFault_B1.c"
  9961 ;; Parameters:    Size  Location     Type
  9962 ;;  command         1    wreg     unsigned char 
  9963 ;; Auto vars:     Size  Location     Type
  9964 ;;  command         1   12[BANK0 ] unsigned char 
  9965 ;; Return value:  Size  Location     Type
  9966 ;;		None               void
  9967 ;; Registers used:
  9968 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9969 ;; Tracked objects:
  9970 ;;		On entry : 0/0
  9971 ;;		On exit  : 0/0
  9972 ;;		Unchanged: 0/0
  9973 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9974 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9975 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9976 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9977 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9978 ;;Total ram usage:        2 bytes
  9979 ;; Hardware stack levels used:    1
  9980 ;; Hardware stack levels required when called:    8
  9981 ;; This function calls:
  9982 ;;		_DimmerLights_Exceptions
  9983 ;;		_setLED
  9984 ;;		_setRF_Enable
  9985 ;;		_setSw_Enable
  9986 ;; This function is called by:
  9987 ;;		_setPowerFault_Main
  9988 ;; This function uses a non-reentrant model
  9989 ;;
  9990                           
  9991                           
  9992                           ;psect for function _setPowerFault_Exceptions
  9993  1001                     _setPowerFault_Exceptions:	
  9994                           
  9995                           ;incstack = 0
  9996                           ; Regs used in _setPowerFault_Exceptions: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cst
      +                          ack]
  9997                           ;setPowerFault_Exceptions@command stored from wreg
  9998  1001  0020               	movlb	0	; select bank0
  9999  1002  00AC               	movwf	setPowerFault_Exceptions@command
 10000                           
 10001                           ;PowerFault_B1.c: 135: PF->ERROR=command;
 10002  1003  0876               	movf	_PF,w
 10003  1004  0086               	movwf	6
 10004  1005  3001               	movlw	1	; select bank2/3
 10005  1006  0087               	movwf	7
 10006  1007  082C               	movf	setPowerFault_Exceptions@command,w
 10007  1008  1081               	bcf	1,1
 10008  1009  1D03               	skipz
 10009  100A  1481               	bsf	1,1
 10010                           
 10011                           ;PowerFault_B1.c: 136: PF->Safe=(~command) & 0x01;
 10012  100B  092C               	comf	setPowerFault_Exceptions@command,w
 10013  100C  3901               	andlw	1
 10014  100D  00AB               	movwf	??_setPowerFault_Exceptions
 10015  100E  0876               	movf	_PF,w
 10016  100F  0086               	movwf	6
 10017  1010  3001               	movlw	1	; select bank2/3
 10018  1011  0087               	movwf	7
 10019  1012  0DAB               	rlf	??_setPowerFault_Exceptions,f
 10020  1013  0DAB               	rlf	??_setPowerFault_Exceptions,f
 10021  1014  0801               	movf	1,w
 10022  1015  062B               	xorwf	??_setPowerFault_Exceptions,w
 10023  1016  39FB               	andlw	-5
 10024  1017  062B               	xorwf	??_setPowerFault_Exceptions,w
 10025  1018  0081               	movwf	1
 10026                           
 10027                           ;PowerFault_B1.c: 137: if(command == 1)
 10028  1019  082C               	movf	setPowerFault_Exceptions@command,w
 10029  101A  3A01               	xorlw	1
 10030  101B  1D03               	skipz
 10031  101C  2821               	goto	l2305
 10032                           
 10033                           ;PowerFault_B1.c: 138: {
 10034                           ;PowerFault_B1.c: 139: DimmerLights_Exceptions(3);
 10035  101D  3003               	movlw	3
 10036  101E  3194  2493  3190   	fcall	_DimmerLights_Exceptions
 10037  1021                     l2305:	
 10038                           
 10039                           ;PowerFault_B1.c: 143: }
 10040                           ;PowerFault_B1.c: 144: setLED(99,command+10);
 10041  1021  0020               	movlb	0	; select bank0
 10042  1022  082C               	movf	setPowerFault_Exceptions@command,w
 10043  1023  3E0A               	addlw	10
 10044  1024  00AB               	movwf	??_setPowerFault_Exceptions
 10045  1025  082B               	movf	??_setPowerFault_Exceptions,w
 10046  1026  00A2               	movwf	setLED@command
 10047  1027  3063               	movlw	99
 10048  1028  3193  236C  3190   	fcall	_setLED
 10049                           
 10050                           ;PowerFault_B1.c: 146: setSw_Enable((~command) & 0x01);
 10051  102B  0020               	movlb	0	; select bank0
 10052  102C  092C               	comf	setPowerFault_Exceptions@command,w
 10053  102D  3901               	andlw	1
 10054  102E  319C  2466  3190   	fcall	_setSw_Enable
 10055                           
 10056                           ;PowerFault_B1.c: 148: setRF_Enable(1,(~command) & 0x01);
 10057  1031  0020               	movlb	0	; select bank0
 10058  1032  092C               	comf	setPowerFault_Exceptions@command,w
 10059  1033  3901               	andlw	1
 10060  1034  00AB               	movwf	??_setPowerFault_Exceptions
 10061  1035  082B               	movf	??_setPowerFault_Exceptions,w
 10062  1036  00A2               	movwf	setRF_Enable@command
 10063  1037  3001               	movlw	1
 10064  1038  319D  25FF         	fcall	_setRF_Enable
 10065  103A  0008               	return
 10066  103B                     __end_of_setPowerFault_Exceptions:	
 10067                           
 10068                           	psect	text46
 10069  1493                     __ptext46:	
 10070 ;; *************** function _DimmerLights_Exceptions *****************
 10071 ;; Defined at:
 10072 ;;		line 246 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 10073 ;; Parameters:    Size  Location     Type
 10074 ;;  status          1    wreg     unsigned char 
 10075 ;; Auto vars:     Size  Location     Type
 10076 ;;  status          1   10[BANK0 ] unsigned char 
 10077 ;; Return value:  Size  Location     Type
 10078 ;;		None               void
 10079 ;; Registers used:
 10080 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10081 ;; Tracked objects:
 10082 ;;		On entry : 0/0
 10083 ;;		On exit  : 0/0
 10084 ;;		Unchanged: 0/0
 10085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10087 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10089 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10090 ;;Total ram usage:        1 bytes
 10091 ;; Hardware stack levels used:    1
 10092 ;; Hardware stack levels required when called:    7
 10093 ;; This function calls:
 10094 ;;		_getDimmerLights_StatusFlag
 10095 ;;		_setBuz
 10096 ;;		_setDimmerLights_ERROR
 10097 ;;		_setDimmerLights_TriggerERROR
 10098 ;; This function is called by:
 10099 ;;		_setOverTemp_Exceptions
 10100 ;;		_setPowerFault_Exceptions
 10101 ;; This function uses a non-reentrant model
 10102 ;;
 10103                           
 10104                           
 10105                           ;psect for function _DimmerLights_Exceptions
 10106  1493                     _DimmerLights_Exceptions:	
 10107                           
 10108                           ;incstack = 0
 10109                           ; Regs used in _DimmerLights_Exceptions: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 10110                           ;DimmerLights_Exceptions@status stored from wreg
 10111  1493  0020               	movlb	0	; select bank0
 10112  1494  00AA               	movwf	DimmerLights_Exceptions@status
 10113                           
 10114                           ;Dimmer_B1.c: 248: if(status == 1)
 10115  1495  082A               	movf	DimmerLights_Exceptions@status,w
 10116  1496  3A01               	xorlw	1
 10117  1497  1D03               	skipz
 10118  1498  2CA9               	goto	l8593
 10119                           
 10120                           ;Dimmer_B1.c: 249: {
 10121                           ;Dimmer_B1.c: 250: if(getDimmerLights_StatusFlag())
 10122  1499  319B  2373  3194   	fcall	_getDimmerLights_StatusFlag
 10123  149C  3A00               	xorlw	0
 10124  149D  1903               	skipnz
 10125  149E  2CC1               	goto	l8599
 10126                           
 10127                           ;Dimmer_B1.c: 251: {
 10128                           ;Dimmer_B1.c: 252: setBuz(10,300);
 10129  149F  302C               	movlw	44
 10130  14A0  0020               	movlb	0	; select bank0
 10131  14A1  00A6               	movwf	setBuz@time
 10132  14A2  3001               	movlw	1
 10133  14A3  00A7               	movwf	setBuz@time+1
 10134  14A4  300A               	movlw	10
 10135  14A5  3197  2789  3194   	fcall	_setBuz
 10136  14A8  2CC1               	goto	l8599
 10137  14A9                     l8593:	
 10138                           ;Dimmer_B1.c: 264: }
 10139                           
 10140                           ;Dimmer_B1.c: 259: setDimmerLights_ERROR(2);
 10141                           
 10142                           ;Dimmer_B1.c: 253: }
 10143                           ;Dimmer_B1.c: 256: setDimmerLights_ERROR(1);
 10144                           
 10145                           
 10146                           ;Dimmer_B1.c: 265: else if(status == 2)
 10147  14A9  0020               	movlb	0	; select bank0
 10148  14AA  082A               	movf	DimmerLights_Exceptions@status,w
 10149  14AB  3A02               	xorlw	2
 10150  14AC  1D03               	skipz
 10151  14AD  2CBC               	goto	l8597
 10152                           
 10153                           ;Dimmer_B1.c: 266: {
 10154                           ;Dimmer_B1.c: 267: setBuz(5,300);
 10155  14AE  302C               	movlw	44
 10156  14AF  00A6               	movwf	setBuz@time
 10157  14B0  3001               	movlw	1
 10158  14B1  00A7               	movwf	setBuz@time+1
 10159  14B2  3005               	movlw	5
 10160  14B3  3197  2789  3194   	fcall	_setBuz
 10161                           
 10162                           ;Dimmer_B1.c: 268: setDimmerLights_ERROR(Dimmer->Load);
 10163  14B6  0021               	movlb	1	; select bank1
 10164  14B7  0A38               	incf	_Dimmer^(0+128),w
 10165  14B8  0086               	movwf	6
 10166  14B9  0187               	clrf	7
 10167  14BA  0801               	movf	1,w
 10168  14BB  2CC6               	goto	L12
 10169  14BC                     l8597:	
 10170                           ;Dimmer_B1.c: 269: }
 10171                           
 10172                           
 10173                           ;Dimmer_B1.c: 270: else if(status == 3)
 10174  14BC  0020               	movlb	0	; select bank0
 10175  14BD  082A               	movf	DimmerLights_Exceptions@status,w
 10176  14BE  3A03               	xorlw	3
 10177  14BF  1D03               	skipz
 10178  14C0  2CC9               	goto	l894
 10179  14C1                     l8599:	
 10180                           
 10181                           ;Dimmer_B1.c: 271: {
 10182                           ;Dimmer_B1.c: 273: setDimmerLights_ERROR(1);
 10183  14C1  3001               	movlw	1
 10184  14C2  3192  2217  3194   	fcall	_setDimmerLights_ERROR
 10185                           
 10186                           ;Dimmer_B1.c: 276: setDimmerLights_ERROR(2);
 10187  14C5  3002               	movlw	2
 10188  14C6                     L12:	
 10189  14C6  3192  2217  3194   	fcall	_setDimmerLights_ERROR
 10190  14C9                     l894:	
 10191                           
 10192                           ;Dimmer_B1.c: 281: }
 10193                           ;Dimmer_B1.c: 284: setDimmerLights_TriggerERROR(1,0);
 10194  14C9  0020               	movlb	0	; select bank0
 10195  14CA  01A2               	clrf	setDimmerLights_TriggerERROR@command
 10196  14CB  3001               	movlw	1
 10197  14CC  319E  2629  3194   	fcall	_setDimmerLights_TriggerERROR
 10198                           
 10199                           ;Dimmer_B1.c: 287: setDimmerLights_TriggerERROR(2,0);
 10200  14CF  0020               	movlb	0	; select bank0
 10201  14D0  01A2               	clrf	setDimmerLights_TriggerERROR@command
 10202  14D1  3002               	movlw	2
 10203  14D2  319E  2629  3194   	fcall	_setDimmerLights_TriggerERROR
 10204                           
 10205                           ;Dimmer_B1.c: 293: if(TMain->SelfTest == 0)
 10206  14D5  0020               	movlb	0	; select bank0
 10207  14D6  086F               	movf	_TMain,w
 10208  14D7  3E03               	addlw	3
 10209  14D8  0086               	movwf	6
 10210  14D9  3001               	movlw	1	; select bank2/3
 10211  14DA  0087               	movwf	7
 10212  14DB  1801               	btfsc	1,0
 10213  14DC  0008               	return
 10214                           
 10215                           ;Dimmer_B1.c: 294: {
 10216                           ;Dimmer_B1.c: 295: TMain->i=0;
 10217  14DD  086F               	movf	_TMain,w
 10218  14DE  3E0E               	addlw	14
 10219  14DF  0086               	movwf	6
 10220  14E0  3001               	movlw	1	; select bank2/3
 10221  14E1  0087               	movwf	7
 10222  14E2  1001               	bcf	1,0
 10223                           
 10224                           ;Dimmer_B1.c: 296: TMain->j=0;
 10225  14E3  086F               	movf	_TMain,w
 10226  14E4  3E0E               	addlw	14
 10227  14E5  0086               	movwf	6
 10228  14E6  3001               	movlw	1	; select bank2/3
 10229  14E7  0087               	movwf	7
 10230  14E8  1081               	bcf	1,1
 10231                           
 10232                           ;Dimmer_B1.c: 297: TMain->k=1;
 10233  14E9  086F               	movf	_TMain,w
 10234  14EA  3E0E               	addlw	14
 10235  14EB  0086               	movwf	6
 10236  14EC  3001               	movlw	1	; select bank2/3
 10237  14ED  0087               	movwf	7
 10238  14EE  1501               	bsf	1,2
 10239                           
 10240                           ;Dimmer_B1.c: 298: TMain->Count2=0;
 10241  14EF  086F               	movf	_TMain,w
 10242  14F0  3E08               	addlw	8
 10243  14F1  0086               	movwf	6
 10244  14F2  3001               	movlw	1	; select bank2/3
 10245  14F3  0087               	movwf	7
 10246  14F4  3000               	movlw	0
 10247  14F5  3FC0               	movwi [0]fsr1
 10248  14F6  3FC1               	movwi [1]fsr1
 10249  14F7  0008               	return
 10250  14F8                     __end_of_DimmerLights_Exceptions:	
 10251                           
 10252                           	psect	text47
 10253  1E29                     __ptext47:	
 10254 ;; *************** function _setDimmerLights_TriggerERROR *****************
 10255 ;; Defined at:
 10256 ;;		line 320 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 10257 ;; Parameters:    Size  Location     Type
 10258 ;;  lights          1    wreg     unsigned char 
 10259 ;;  command         1    2[BANK0 ] unsigned char 
 10260 ;; Auto vars:     Size  Location     Type
 10261 ;;  lights          1    3[BANK0 ] unsigned char 
 10262 ;; Return value:  Size  Location     Type
 10263 ;;		None               void
 10264 ;; Registers used:
 10265 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10266 ;; Tracked objects:
 10267 ;;		On entry : 0/0
 10268 ;;		On exit  : 0/0
 10269 ;;		Unchanged: 0/0
 10270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10271 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10272 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10274 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10275 ;;Total ram usage:        2 bytes
 10276 ;; Hardware stack levels used:    1
 10277 ;; Hardware stack levels required when called:    5
 10278 ;; This function calls:
 10279 ;;		_DimmerLightsPointSelect
 10280 ;; This function is called by:
 10281 ;;		_DimmerLights_Exceptions
 10282 ;; This function uses a non-reentrant model
 10283 ;;
 10284                           
 10285                           
 10286                           ;psect for function _setDimmerLights_TriggerERROR
 10287  1E29                     _setDimmerLights_TriggerERROR:	
 10288                           
 10289                           ;incstack = 0
 10290                           ; Regs used in _setDimmerLights_TriggerERROR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath
      +                          +cstack]
 10291                           ;setDimmerLights_TriggerERROR@lights stored from wreg
 10292  1E29  0020               	movlb	0	; select bank0
 10293  1E2A  00A3               	movwf	setDimmerLights_TriggerERROR@lights
 10294                           
 10295                           ;Dimmer_B1.c: 322: DimmerLightsPointSelect(lights);
 10296  1E2B  0823               	movf	setDimmerLights_TriggerERROR@lights,w
 10297  1E2C  319A  22E5         	fcall	_DimmerLightsPointSelect
 10298                           
 10299                           ;Dimmer_B1.c: 323: DimmerLights->Trigger=command;
 10300  1E2E  0020               	movlb	0	; select bank0
 10301  1E2F  086A               	movf	_DimmerLights,w
 10302  1E30  3E09               	addlw	9
 10303  1E31  0086               	movwf	6
 10304  1E32  3001               	movlw	1	; select bank2/3
 10305  1E33  0087               	movwf	7
 10306  1E34  0822               	movf	setDimmerLights_TriggerERROR@command,w
 10307  1E35  1081               	bcf	1,1
 10308  1E36  1D03               	skipz
 10309  1E37  1481               	bsf	1,1
 10310                           
 10311                           ;Dimmer_B1.c: 324: DimmerLights->Switch=command;
 10312  1E38  086A               	movf	_DimmerLights,w
 10313  1E39  3E09               	addlw	9
 10314  1E3A  0086               	movwf	6
 10315  1E3B  3001               	movlw	1	; select bank2/3
 10316  1E3C  0087               	movwf	7
 10317  1E3D  0822               	movf	setDimmerLights_TriggerERROR@command,w
 10318  1E3E  1001               	bcf	1,0
 10319  1E3F  1D03               	skipz
 10320  1E40  1401               	bsf	1,0
 10321                           
 10322                           ;Dimmer_B1.c: 325: DimmerLights->TriggerAdj=command;
 10323  1E41  086A               	movf	_DimmerLights,w
 10324  1E42  3E09               	addlw	9
 10325  1E43  0086               	movwf	6
 10326  1E44  3001               	movlw	1	; select bank2/3
 10327  1E45  0087               	movwf	7
 10328  1E46  0822               	movf	setDimmerLights_TriggerERROR@command,w
 10329  1E47  1181               	bcf	1,3
 10330  1E48  1D03               	skipz
 10331  1E49  1581               	bsf	1,3
 10332                           
 10333                           ;Dimmer_B1.c: 326: DimmerLights->AdjGo=command;
 10334  1E4A  086A               	movf	_DimmerLights,w
 10335  1E4B  3E09               	addlw	9
 10336  1E4C  0086               	movwf	6
 10337  1E4D  3001               	movlw	1	; select bank2/3
 10338  1E4E  0087               	movwf	7
 10339  1E4F  0822               	movf	setDimmerLights_TriggerERROR@command,w
 10340  1E50  1101               	bcf	1,2
 10341  1E51  1D03               	skipz
 10342  1E52  1501               	bsf	1,2
 10343  1E53  0008               	return
 10344  1E54                     __end_of_setDimmerLights_TriggerERROR:	
 10345                           
 10346                           	psect	text48
 10347  1217                     __ptext48:	
 10348 ;; *************** function _setDimmerLights_ERROR *****************
 10349 ;; Defined at:
 10350 ;;		line 302 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 10351 ;; Parameters:    Size  Location     Type
 10352 ;;  lights          1    wreg     unsigned char 
 10353 ;; Auto vars:     Size  Location     Type
 10354 ;;  lights          1    5[BANK0 ] unsigned char 
 10355 ;; Return value:  Size  Location     Type
 10356 ;;		None               void
 10357 ;; Registers used:
 10358 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10359 ;; Tracked objects:
 10360 ;;		On entry : 0/0
 10361 ;;		On exit  : 0/0
 10362 ;;		Unchanged: 0/0
 10363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10365 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10366 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10367 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10368 ;;Total ram usage:        2 bytes
 10369 ;; Hardware stack levels used:    1
 10370 ;; Hardware stack levels required when called:    6
 10371 ;; This function calls:
 10372 ;;		_DimmerLightsPointSelect
 10373 ;;		_setLED
 10374 ;;		_setRFSW_Status
 10375 ;;		_setSw_Status
 10376 ;; This function is called by:
 10377 ;;		_DimmerLights_Exceptions
 10378 ;; This function uses a non-reentrant model
 10379 ;;
 10380                           
 10381                           
 10382                           ;psect for function _setDimmerLights_ERROR
 10383  1217                     _setDimmerLights_ERROR:	
 10384                           
 10385                           ;incstack = 0
 10386                           ; Regs used in _setDimmerLights_ERROR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 10387                           ;setDimmerLights_ERROR@lights stored from wreg
 10388  1217  0020               	movlb	0	; select bank0
 10389  1218  00A5               	movwf	setDimmerLights_ERROR@lights
 10390                           
 10391                           ;Dimmer_B1.c: 304: DimmerLightsPointSelect(lights);
 10392  1219  0825               	movf	setDimmerLights_ERROR@lights,w
 10393  121A  319A  22E5  3192   	fcall	_DimmerLightsPointSelect
 10394                           
 10395                           ;Dimmer_B1.c: 305: if(DimmerLights->Status)
 10396  121D  0020               	movlb	0	; select bank0
 10397  121E  086A               	movf	_DimmerLights,w
 10398  121F  0086               	movwf	6
 10399  1220  3001               	movlw	1	; select bank2/3
 10400  1221  0087               	movwf	7
 10401  1222  1E81               	btfss	1,5
 10402  1223  0008               	return
 10403                           
 10404                           ;Dimmer_B1.c: 306: {
 10405                           ;Dimmer_B1.c: 307: DimmerLights->Signal=0;
 10406  1224  086A               	movf	_DimmerLights,w
 10407  1225  0086               	movwf	6
 10408  1226  3001               	movlw	1	; select bank2/3
 10409  1227  0087               	movwf	7
 10410  1228  1081               	bcf	1,1
 10411                           
 10412                           ;Dimmer_B1.c: 308: DimmerLights->AdjFlag=0;
 10413  1229  086A               	movf	_DimmerLights,w
 10414  122A  0086               	movwf	6
 10415  122B  3001               	movlw	1	; select bank2/3
 10416  122C  0087               	movwf	7
 10417  122D  1181               	bcf	1,3
 10418                           
 10419                           ;Dimmer_B1.c: 309: DimmerLights->AdjStatus=0;
 10420  122E  086A               	movf	_DimmerLights,w
 10421  122F  0086               	movwf	6
 10422  1230  3001               	movlw	1	; select bank2/3
 10423  1231  0087               	movwf	7
 10424  1232  1201               	bcf	1,4
 10425                           
 10426                           ;Dimmer_B1.c: 310: DimmerLights->StatusFlag=0;
 10427  1233  086A               	movf	_DimmerLights,w
 10428  1234  0086               	movwf	6
 10429  1235  3001               	movlw	1	; select bank2/3
 10430  1236  0087               	movwf	7
 10431  1237  1301               	bcf	1,6
 10432                           
 10433                           ;Dimmer_B1.c: 311: DimmerLights->DimmingTimeValue=3;
 10434  1238  3003               	movlw	3
 10435  1239  00A4               	movwf	??_setDimmerLights_ERROR
 10436  123A  086A               	movf	_DimmerLights,w
 10437  123B  3E02               	addlw	2
 10438  123C  0086               	movwf	6
 10439  123D  3001               	movlw	1	; select bank2/3
 10440  123E  0087               	movwf	7
 10441  123F  0824               	movf	??_setDimmerLights_ERROR,w
 10442  1240  0081               	movwf	1
 10443                           
 10444                           ;Dimmer_B1.c: 312: DimmerLights->DimmingValue=DimmerLights->MinimumValue;
 10445  1241  086A               	movf	_DimmerLights,w
 10446  1242  3E06               	addlw	6
 10447  1243  0086               	movwf	6
 10448  1244  3001               	movlw	1	; select bank2/3
 10449  1245  0087               	movwf	7
 10450  1246  0801               	movf	1,w
 10451  1247  00A4               	movwf	??_setDimmerLights_ERROR
 10452  1248  086A               	movf	_DimmerLights,w
 10453  1249  3E04               	addlw	4
 10454  124A  0086               	movwf	6
 10455  124B  3001               	movlw	1	; select bank2/3
 10456  124C  0087               	movwf	7
 10457  124D  0824               	movf	??_setDimmerLights_ERROR,w
 10458  124E  0081               	movwf	1
 10459                           
 10460                           ;Dimmer_B1.c: 313: Dimmer->Detect=1;
 10461  124F  0021               	movlb	1	; select bank1
 10462  1250  0838               	movf	_Dimmer^(0+128),w
 10463  1251  0086               	movwf	6
 10464  1252  0187               	clrf	7
 10465  1253  1401               	bsf	1,0
 10466                           
 10467                           ;Dimmer_B1.c: 314: ;;
 10468                           ;Dimmer_B1.c: 315: setLED(lights,1);
 10469  1254  0020               	movlb	0	; select bank0
 10470  1255  01A2               	clrf	setLED@command
 10471  1256  0AA2               	incf	setLED@command,f
 10472  1257  0825               	movf	setDimmerLights_ERROR@lights,w
 10473  1258  3193  236C  3192   	fcall	_setLED
 10474                           
 10475                           ;Dimmer_B1.c: 316: setSw_Status(lights,0);
 10476  125B  0020               	movlb	0	; select bank0
 10477  125C  01A2               	clrf	setSw_Status@command
 10478  125D  0825               	movf	setDimmerLights_ERROR@lights,w
 10479  125E  319A  2265  3192   	fcall	_setSw_Status
 10480                           
 10481                           ;Dimmer_B1.c: 317: setRFSW_Status(lights,0);
 10482  1261  0020               	movlb	0	; select bank0
 10483  1262  01A2               	clrf	setRFSW_Status@command
 10484  1263  0825               	movf	setDimmerLights_ERROR@lights,w
 10485  1264  319A  2256         	fcall	_setRFSW_Status
 10486  1266  0008               	return
 10487  1267                     __end_of_setDimmerLights_ERROR:	
 10488                           
 10489                           	psect	text49
 10490  1937                     __ptext49:	
 10491 ;; *************** function _getTemp_Safe *****************
 10492 ;; Defined at:
 10493 ;;		line 26 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\OverTemperature_B1.c"
 10494 ;; Parameters:    Size  Location     Type
 10495 ;;		None
 10496 ;; Auto vars:     Size  Location     Type
 10497 ;;		None
 10498 ;; Return value:  Size  Location     Type
 10499 ;;                  1    wreg      unsigned char 
 10500 ;; Registers used:
 10501 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10502 ;; Tracked objects:
 10503 ;;		On entry : 0/0
 10504 ;;		On exit  : 0/0
 10505 ;;		Unchanged: 0/0
 10506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10507 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10510 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10511 ;;Total ram usage:        0 bytes
 10512 ;; Hardware stack levels used:    1
 10513 ;; Hardware stack levels required when called:    4
 10514 ;; This function calls:
 10515 ;;		Nothing
 10516 ;; This function is called by:
 10517 ;;		_setPowerFault_Main
 10518 ;; This function uses a non-reentrant model
 10519 ;;
 10520                           
 10521                           
 10522                           ;psect for function _getTemp_Safe
 10523  1937                     _getTemp_Safe:	
 10524                           
 10525                           ;OverTemperature_B1.c: 28: return Temp->Safe;
 10526                           
 10527                           ;incstack = 0
 10528                           ; Regs used in _getTemp_Safe: [wreg+fsr1l+fsr1h+status,2+status,0]
 10529  1937  0879               	movf	_Temp,w
 10530  1938  0086               	movwf	6
 10531  1939  3001               	movlw	1	; select bank2/3
 10532  193A  0087               	movwf	7
 10533  193B  0E01               	swapf	1,w
 10534  193C  3901               	andlw	1
 10535  193D  0008               	return
 10536  193E                     __end_of_getTemp_Safe:	
 10537                           
 10538                           	psect	text50
 10539  18F2                     __ptext50:	
 10540 ;; *************** function _PowerFault_Initialization *****************
 10541 ;; Defined at:
 10542 ;;		line 15 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\PowerFault_B1.c"
 10543 ;; Parameters:    Size  Location     Type
 10544 ;;		None
 10545 ;; Auto vars:     Size  Location     Type
 10546 ;;		None
 10547 ;; Return value:  Size  Location     Type
 10548 ;;		None               void
 10549 ;; Registers used:
 10550 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10551 ;; Tracked objects:
 10552 ;;		On entry : 0/0
 10553 ;;		On exit  : 0/0
 10554 ;;		Unchanged: 0/0
 10555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10557 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10559 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10560 ;;Total ram usage:        0 bytes
 10561 ;; Hardware stack levels used:    1
 10562 ;; Hardware stack levels required when called:    5
 10563 ;; This function calls:
 10564 ;;		_setPowerFault_Initialization
 10565 ;; This function is called by:
 10566 ;;		_main
 10567 ;; This function uses a non-reentrant model
 10568 ;;
 10569                           
 10570                           
 10571                           ;psect for function _PowerFault_Initialization
 10572  18F2                     _PowerFault_Initialization:	
 10573                           
 10574                           ;PowerFault_B1.c: 18: setPowerFault_Initialization();
 10575                           
 10576                           ;incstack = 0
 10577                           ; Regs used in _PowerFault_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cs
      +                          tack]
 10578  18F2  319A  22A4         	fcall	_setPowerFault_Initialization
 10579  18F4  0008               	return
 10580  18F5                     __end_of_PowerFault_Initialization:	
 10581                           
 10582                           	psect	text51
 10583  1AA4                     __ptext51:	
 10584 ;; *************** function _setPowerFault_Initialization *****************
 10585 ;; Defined at:
 10586 ;;		line 29 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\PowerFault_B1.c"
 10587 ;; Parameters:    Size  Location     Type
 10588 ;;		None
 10589 ;; Auto vars:     Size  Location     Type
 10590 ;;		None
 10591 ;; Return value:  Size  Location     Type
 10592 ;;		None               void
 10593 ;; Registers used:
 10594 ;;		wreg, fsr1l, fsr1h
 10595 ;; Tracked objects:
 10596 ;;		On entry : 0/0
 10597 ;;		On exit  : 0/0
 10598 ;;		Unchanged: 0/0
 10599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10600 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10601 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10602 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10603 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10604 ;;Total ram usage:        1 bytes
 10605 ;; Hardware stack levels used:    1
 10606 ;; Hardware stack levels required when called:    4
 10607 ;; This function calls:
 10608 ;;		Nothing
 10609 ;; This function is called by:
 10610 ;;		_PowerFault_Initialization
 10611 ;; This function uses a non-reentrant model
 10612 ;;
 10613                           
 10614                           
 10615                           ;psect for function _setPowerFault_Initialization
 10616  1AA4                     _setPowerFault_Initialization:	
 10617                           
 10618                           ;PowerFault_B1.c: 31: PF=&PF1;
 10619                           
 10620                           ;incstack = 0
 10621                           ; Regs used in _setPowerFault_Initialization: [wregfsr1]
 10622  1AA4  3068               	movlw	_PF1& (0+255)
 10623  1AA5  0020               	movlb	0	; select bank0
 10624  1AA6  00A0               	movwf	??_setPowerFault_Initialization
 10625  1AA7  0820               	movf	??_setPowerFault_Initialization,w
 10626  1AA8  00F6               	movwf	_PF
 10627                           
 10628                           ;PowerFault_B1.c: 32: PF->Enable=1;
 10629  1AA9  0876               	movf	_PF,w
 10630  1AAA  0086               	movwf	6
 10631  1AAB  3001               	movlw	1	; select bank2/3
 10632  1AAC  0087               	movwf	7
 10633  1AAD  1401               	bsf	1,0
 10634                           
 10635                           ;PowerFault_B1.c: 33: PF->Safe=1;
 10636  1AAE  0876               	movf	_PF,w
 10637  1AAF  0086               	movwf	6
 10638  1AB0  3001               	movlw	1	; select bank2/3
 10639  1AB1  0087               	movwf	7
 10640  1AB2  1501               	bsf	1,2
 10641  1AB3  0008               	return
 10642  1AB4                     __end_of_setPowerFault_Initialization:	
 10643                           
 10644                           	psect	text52
 10645  1B9F                     __ptext52:	
 10646 ;; *************** function _Mcu_Initialization *****************
 10647 ;; Defined at:
 10648 ;;		line 24 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
 10649 ;; Parameters:    Size  Location     Type
 10650 ;;		None
 10651 ;; Auto vars:     Size  Location     Type
 10652 ;;		None
 10653 ;; Return value:  Size  Location     Type
 10654 ;;		None               void
 10655 ;; Registers used:
 10656 ;;		wreg, status,2, status,0, pclath, cstack
 10657 ;; Tracked objects:
 10658 ;;		On entry : 0/0
 10659 ;;		On exit  : 0/0
 10660 ;;		Unchanged: 0/0
 10661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10663 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10664 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10665 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10666 ;;Total ram usage:        1 bytes
 10667 ;; Hardware stack levels used:    1
 10668 ;; Hardware stack levels required when called:    5
 10669 ;; This function calls:
 10670 ;;		_ADC_Set
 10671 ;;		_INT_Set
 10672 ;;		_IOC_Set
 10673 ;;		_IO_Set
 10674 ;;		_TMR0_Set
 10675 ;; This function is called by:
 10676 ;;		_main
 10677 ;; This function uses a non-reentrant model
 10678 ;;
 10679                           
 10680                           
 10681                           ;psect for function _Mcu_Initialization
 10682  1B9F                     _Mcu_Initialization:	
 10683                           
 10684                           ;MCU_B1.c: 27: OSCCON=0x78; ;;
 10685                           
 10686                           ;incstack = 0
 10687                           ; Regs used in _Mcu_Initialization: [wreg+status,2+status,0+pclath+cstack]
 10688  1B9F  3078               	movlw	120
 10689  1BA0  0021               	movlb	1	; select bank1
 10690  1BA1  0099               	movwf	25	;volatile
 10691                           
 10692                           ;MCU_B1.c: 29: IO_Set();
 10693  1BA2  319C  2419  319B   	fcall	_IO_Set
 10694                           
 10695                           ;MCU_B1.c: 31: TMR0_Set();
 10696  1BA5  319A  2220  319B   	fcall	_TMR0_Set
 10697                           
 10698                           ;MCU_B1.c: 33: ;;
 10699                           ;MCU_B1.c: 35: ADC_Set();
 10700  1BA8  3199  2130  319B   	fcall	_ADC_Set
 10701                           
 10702                           ;MCU_B1.c: 39: INT_Set();
 10703  1BAB  3199  2117  319B   	fcall	_INT_Set
 10704                           
 10705                           ;MCU_B1.c: 41: IOC_Set();
 10706  1BAE  319A  2213         	fcall	_IOC_Set
 10707                           
 10708                           ;MCU_B1.c: 43: ;;
 10709                           ;MCU_B1.c: 45: ;;
 10710                           ;MCU_B1.c: 47: Memory=&VarMemory;
 10711  1BB0  3020               	movlw	_VarMemory& (0+255)
 10712  1BB1  0020               	movlb	0	; select bank0
 10713  1BB2  00A1               	movwf	??_Mcu_Initialization
 10714  1BB3  0821               	movf	??_Mcu_Initialization,w
 10715  1BB4  00ED               	movwf	_Memory
 10716  1BB5  0008               	return
 10717  1BB6                     __end_of_Mcu_Initialization:	
 10718                           
 10719                           	psect	text53
 10720  1A20                     __ptext53:	
 10721 ;; *************** function _TMR0_Set *****************
 10722 ;; Defined at:
 10723 ;;		line 114 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
 10724 ;; Parameters:    Size  Location     Type
 10725 ;;		None
 10726 ;; Auto vars:     Size  Location     Type
 10727 ;;		None
 10728 ;; Return value:  Size  Location     Type
 10729 ;;		None               void
 10730 ;; Registers used:
 10731 ;;		wreg, status,2
 10732 ;; Tracked objects:
 10733 ;;		On entry : 0/0
 10734 ;;		On exit  : 0/0
 10735 ;;		Unchanged: 0/0
 10736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10739 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10740 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10741 ;;Total ram usage:        1 bytes
 10742 ;; Hardware stack levels used:    1
 10743 ;; Hardware stack levels required when called:    4
 10744 ;; This function calls:
 10745 ;;		Nothing
 10746 ;; This function is called by:
 10747 ;;		_Mcu_Initialization
 10748 ;; This function uses a non-reentrant model
 10749 ;;
 10750                           
 10751                           
 10752                           ;psect for function _TMR0_Set
 10753  1A20                     _TMR0_Set:	
 10754                           
 10755                           ;MCU_B1.c: 116: Timer0=&VarTimer0;
 10756                           
 10757                           ;incstack = 0
 10758                           ; Regs used in _TMR0_Set: [wreg+status,2]
 10759  1A20  30C3               	movlw	_VarTimer0& (0+255)
 10760  1A21  0020               	movlb	0	; select bank0
 10761  1A22  00A0               	movwf	??_TMR0_Set
 10762  1A23  0820               	movf	??_TMR0_Set,w
 10763  1A24  0021               	movlb	1	; select bank1
 10764  1A25  00EE               	movwf	_Timer0^(0+128)
 10765                           
 10766                           ;MCU_B1.c: 117: OPTION_REG=0x00;
 10767  1A26  0195               	clrf	21	;volatile
 10768                           
 10769                           ;MCU_B1.c: 118: TMR0=(256-90);
 10770  1A27  30A6               	movlw	166
 10771  1A28  0020               	movlb	0	; select bank0
 10772  1A29  0095               	movwf	21	;volatile
 10773                           
 10774                           ;MCU_B1.c: 119: TMR0IE=1;
 10775  1A2A  168B               	bsf	11,5	;volatile
 10776                           
 10777                           ;MCU_B1.c: 120: GIE=1;
 10778  1A2B  178B               	bsf	11,7	;volatile
 10779  1A2C  0008               	return
 10780  1A2D                     __end_of_TMR0_Set:	
 10781                           
 10782                           	psect	text54
 10783  1C19                     __ptext54:	
 10784 ;; *************** function _IO_Set *****************
 10785 ;; Defined at:
 10786 ;;		line 50 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
 10787 ;; Parameters:    Size  Location     Type
 10788 ;;		None
 10789 ;; Auto vars:     Size  Location     Type
 10790 ;;		None
 10791 ;; Return value:  Size  Location     Type
 10792 ;;		None               void
 10793 ;; Registers used:
 10794 ;;		wreg, status,2
 10795 ;; Tracked objects:
 10796 ;;		On entry : 0/0
 10797 ;;		On exit  : 0/0
 10798 ;;		Unchanged: 0/0
 10799 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10803 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10804 ;;Total ram usage:        0 bytes
 10805 ;; Hardware stack levels used:    1
 10806 ;; Hardware stack levels required when called:    4
 10807 ;; This function calls:
 10808 ;;		Nothing
 10809 ;; This function is called by:
 10810 ;;		_Mcu_Initialization
 10811 ;; This function uses a non-reentrant model
 10812 ;;
 10813                           
 10814                           
 10815                           ;psect for function _IO_Set
 10816  1C19                     _IO_Set:	
 10817                           
 10818                           ;MCU_B1.c: 79: TRISA=0b01110111;;
 10819                           
 10820                           ;incstack = 0
 10821                           ; Regs used in _IO_Set: [wreg+status,2]
 10822  1C19  3077               	movlw	119
 10823  1C1A  0021               	movlb	1	; select bank1
 10824  1C1B  008C               	movwf	12	;volatile
 10825                           
 10826                           ;MCU_B1.c: 80: TRISB=0b00000111;;
 10827  1C1C  3007               	movlw	7
 10828  1C1D  008D               	movwf	13	;volatile
 10829                           
 10830                           ;MCU_B1.c: 81: TRISC=0b00001100;;
 10831  1C1E  300C               	movlw	12
 10832  1C1F  008E               	movwf	14	;volatile
 10833                           
 10834                           ;MCU_B1.c: 82: LATA=0b00000000;;
 10835  1C20  0022               	movlb	2	; select bank2
 10836  1C21  018C               	clrf	12	;volatile
 10837                           
 10838                           ;MCU_B1.c: 83: LATB=0b00000010;;
 10839  1C22  3002               	movlw	2
 10840  1C23  008D               	movwf	13	;volatile
 10841                           
 10842                           ;MCU_B1.c: 84: LATC=0b00000000;;
 10843  1C24  018E               	clrf	14	;volatile
 10844                           
 10845                           ;MCU_B1.c: 85: ANSELA=0b00100010;;
 10846  1C25  3022               	movlw	34
 10847  1C26  0023               	movlb	3	; select bank3
 10848  1C27  008C               	movwf	12	;volatile
 10849                           
 10850                           ;MCU_B1.c: 86: ANSELB=0b00000000;;
 10851  1C28  018D               	clrf	13	;volatile
 10852                           
 10853                           ;MCU_B1.c: 87: ANSELC=0b00000000;;
 10854  1C29  018E               	clrf	14	;volatile
 10855                           
 10856                           ;MCU_B1.c: 88: PORTA=0b01110111;;
 10857  1C2A  3077               	movlw	119
 10858  1C2B  0020               	movlb	0	; select bank0
 10859  1C2C  008C               	movwf	12	;volatile
 10860                           
 10861                           ;MCU_B1.c: 89: PORTB=0b00000111;;
 10862  1C2D  3007               	movlw	7
 10863  1C2E  008D               	movwf	13	;volatile
 10864                           
 10865                           ;MCU_B1.c: 90: PORTC=0b00001100;;
 10866  1C2F  300C               	movlw	12
 10867  1C30  008E               	movwf	14	;volatile
 10868  1C31  0008               	return
 10869  1C32                     __end_of_IO_Set:	
 10870                           
 10871                           	psect	text55
 10872  1A13                     __ptext55:	
 10873 ;; *************** function _IOC_Set *****************
 10874 ;; Defined at:
 10875 ;;		line 310 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
 10876 ;; Parameters:    Size  Location     Type
 10877 ;;		None
 10878 ;; Auto vars:     Size  Location     Type
 10879 ;;		None
 10880 ;; Return value:  Size  Location     Type
 10881 ;;		None               void
 10882 ;; Registers used:
 10883 ;;		wreg, status,2
 10884 ;; Tracked objects:
 10885 ;;		On entry : 0/0
 10886 ;;		On exit  : 0/0
 10887 ;;		Unchanged: 0/0
 10888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10892 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10893 ;;Total ram usage:        0 bytes
 10894 ;; Hardware stack levels used:    1
 10895 ;; Hardware stack levels required when called:    4
 10896 ;; This function calls:
 10897 ;;		Nothing
 10898 ;; This function is called by:
 10899 ;;		_Mcu_Initialization
 10900 ;; This function uses a non-reentrant model
 10901 ;;
 10902                           
 10903                           
 10904                           ;psect for function _IOC_Set
 10905  1A13                     _IOC_Set:	
 10906                           
 10907                           ;MCU_B1.c: 312: WPUB2=0;
 10908                           
 10909                           ;incstack = 0
 10910                           ; Regs used in _IOC_Set: [wreg+status,2]
 10911  1A13  0024               	movlb	4	; select bank4
 10912  1A14  110D               	bcf	13,2	;volatile
 10913                           
 10914                           ;MCU_B1.c: 314: IOCBP=0b00000100;
 10915  1A15  3004               	movlw	4
 10916  1A16  0027               	movlb	7	; select bank7
 10917  1A17  0094               	movwf	20	;volatile
 10918                           
 10919                           ;MCU_B1.c: 315: IOCBN=0b00000100;
 10920  1A18  3004               	movlw	4
 10921  1A19  0095               	movwf	21	;volatile
 10922                           
 10923                           ;MCU_B1.c: 330: IOCBF=0b00000000;
 10924  1A1A  0196               	clrf	22	;volatile
 10925                           
 10926                           ;MCU_B1.c: 332: IOCIE=1;
 10927  1A1B  158B               	bsf	11,3	;volatile
 10928                           
 10929                           ;MCU_B1.c: 333: IOCIF=0;
 10930  1A1C  100B               	bcf	11,0	;volatile
 10931                           
 10932                           ;MCU_B1.c: 334: PEIE=1;
 10933  1A1D  170B               	bsf	11,6	;volatile
 10934                           
 10935                           ;MCU_B1.c: 335: GIE=1;
 10936  1A1E  178B               	bsf	11,7	;volatile
 10937  1A1F  0008               	return
 10938  1A20                     __end_of_IOC_Set:	
 10939                           
 10940                           	psect	text56
 10941  1917                     __ptext56:	
 10942 ;; *************** function _INT_Set *****************
 10943 ;; Defined at:
 10944 ;;		line 281 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
 10945 ;; Parameters:    Size  Location     Type
 10946 ;;		None
 10947 ;; Auto vars:     Size  Location     Type
 10948 ;;		None
 10949 ;; Return value:  Size  Location     Type
 10950 ;;		None               void
 10951 ;; Registers used:
 10952 ;;		None
 10953 ;; Tracked objects:
 10954 ;;		On entry : 0/0
 10955 ;;		On exit  : 0/0
 10956 ;;		Unchanged: 0/0
 10957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10961 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10962 ;;Total ram usage:        0 bytes
 10963 ;; Hardware stack levels used:    1
 10964 ;; Hardware stack levels required when called:    4
 10965 ;; This function calls:
 10966 ;;		Nothing
 10967 ;; This function is called by:
 10968 ;;		_Mcu_Initialization
 10969 ;; This function uses a non-reentrant model
 10970 ;;
 10971                           
 10972                           
 10973                           ;psect for function _INT_Set
 10974  1917                     _INT_Set:	
 10975                           
 10976                           ;MCU_B1.c: 283: WPUB0=0;
 10977                           
 10978                           ;incstack = 0
 10979                           ; Regs used in _INT_Set: []
 10980  1917  0024               	movlb	4	; select bank4
 10981  1918  100D               	bcf	13,0	;volatile
 10982                           
 10983                           ;MCU_B1.c: 284: INTE=1;
 10984  1919  160B               	bsf	11,4	;volatile
 10985                           
 10986                           ;MCU_B1.c: 285: PEIE=1;
 10987  191A  170B               	bsf	11,6	;volatile
 10988                           
 10989                           ;MCU_B1.c: 286: GIE=1;
 10990  191B  178B               	bsf	11,7	;volatile
 10991  191C  0008               	return
 10992  191D                     __end_of_INT_Set:	
 10993                           
 10994                           	psect	text57
 10995  1930                     __ptext57:	
 10996 ;; *************** function _ADC_Set *****************
 10997 ;; Defined at:
 10998 ;;		line 375 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
 10999 ;; Parameters:    Size  Location     Type
 11000 ;;		None
 11001 ;; Auto vars:     Size  Location     Type
 11002 ;;		None
 11003 ;; Return value:  Size  Location     Type
 11004 ;;		None               void
 11005 ;; Registers used:
 11006 ;;		wreg
 11007 ;; Tracked objects:
 11008 ;;		On entry : 0/0
 11009 ;;		On exit  : 0/0
 11010 ;;		Unchanged: 0/0
 11011 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11012 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11013 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11014 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11015 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11016 ;;Total ram usage:        0 bytes
 11017 ;; Hardware stack levels used:    1
 11018 ;; Hardware stack levels required when called:    4
 11019 ;; This function calls:
 11020 ;;		Nothing
 11021 ;; This function is called by:
 11022 ;;		_Mcu_Initialization
 11023 ;; This function uses a non-reentrant model
 11024 ;;
 11025                           
 11026                           
 11027                           ;psect for function _ADC_Set
 11028  1930                     _ADC_Set:	
 11029                           
 11030                           ;MCU_B1.c: 377: ADCON1=0xf2;
 11031                           
 11032                           ;incstack = 0
 11033                           ; Regs used in _ADC_Set: [wreg]
 11034  1930  30F2               	movlw	242
 11035  1931  0021               	movlb	1	; select bank1
 11036  1932  009E               	movwf	30	;volatile
 11037                           
 11038                           ;MCU_B1.c: 378: FVRCON=0xc0;
 11039  1933  30C0               	movlw	192
 11040  1934  0022               	movlb	2	; select bank2
 11041  1935  0097               	movwf	23	;volatile
 11042  1936  0008               	return
 11043  1937                     __end_of_ADC_Set:	
 11044                           
 11045                           	psect	text58
 11046  1C4C                     __ptext58:	
 11047 ;; *************** function _MainT_ResetClock *****************
 11048 ;; Defined at:
 11049 ;;		line 193 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\main.c"
 11050 ;; Parameters:    Size  Location     Type
 11051 ;;		None
 11052 ;; Auto vars:     Size  Location     Type
 11053 ;;  i               1    1[BANK0 ] unsigned char 
 11054 ;; Return value:  Size  Location     Type
 11055 ;;		None               void
 11056 ;; Registers used:
 11057 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11058 ;; Tracked objects:
 11059 ;;		On entry : 0/0
 11060 ;;		On exit  : 0/0
 11061 ;;		Unchanged: 0/0
 11062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11063 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11064 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11065 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11066 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11067 ;;Total ram usage:        2 bytes
 11068 ;; Hardware stack levels used:    1
 11069 ;; Hardware stack levels required when called:    4
 11070 ;; This function calls:
 11071 ;;		Nothing
 11072 ;; This function is called by:
 11073 ;;		_main
 11074 ;; This function uses a non-reentrant model
 11075 ;;
 11076                           
 11077                           
 11078                           ;psect for function _MainT_ResetClock
 11079  1C4C                     _MainT_ResetClock:	
 11080                           
 11081                           ;main.c: 194: char i;
 11082                           ;main.c: 195: if(!TMain->ClockStop){
 11083                           
 11084                           ;incstack = 0
 11085                           ; Regs used in _MainT_ResetClock: [wreg+fsr1l+fsr1h+status,2+status,0]
 11086  1C4C  0020               	movlb	0	; select bank0
 11087  1C4D  086F               	movf	_TMain,w
 11088  1C4E  3E0F               	addlw	15
 11089  1C4F  0086               	movwf	6
 11090  1C50  3001               	movlw	1	; select bank2/3
 11091  1C51  0087               	movwf	7
 11092  1C52  1901               	btfsc	1,2
 11093  1C53  0008               	return
 11094                           
 11095                           ;main.c: 197: if(RB5){
 11096  1C54  1E8D               	btfss	13,5	;volatile
 11097  1C55  0008               	return
 11098                           
 11099                           ;main.c: 198: RB5=0;
 11100  1C56  128D               	bcf	13,5	;volatile
 11101                           
 11102                           ;main.c: 199: for(i=0 ;i<10 ; i++);
 11103  1C57  01A1               	clrf	MainT_ResetClock@i
 11104  1C58  300A               	movlw	10
 11105  1C59  0221               	subwf	MainT_ResetClock@i,w
 11106  1C5A  1803               	btfsc	3,0
 11107  1C5B  2C64               	goto	l1331
 11108  1C5C                     l9771:	
 11109  1C5C  3001               	movlw	1
 11110  1C5D  00A0               	movwf	??_MainT_ResetClock
 11111  1C5E  0820               	movf	??_MainT_ResetClock,w
 11112  1C5F  07A1               	addwf	MainT_ResetClock@i,f
 11113  1C60  300A               	movlw	10
 11114  1C61  0221               	subwf	MainT_ResetClock@i,w
 11115  1C62  1C03               	skipc
 11116  1C63  2C5C               	goto	l9771
 11117  1C64                     l1331:	
 11118                           
 11119                           ;main.c: 200: RB5=1;
 11120  1C64  168D               	bsf	13,5	;volatile
 11121  1C65  0008               	return
 11122  1C66                     __end_of_MainT_ResetClock:	
 11123                           
 11124                           	psect	text59
 11125  1AF8                     __ptext59:	
 11126 ;; *************** function _MainT_Initialization *****************
 11127 ;; Defined at:
 11128 ;;		line 93 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\main.c"
 11129 ;; Parameters:    Size  Location     Type
 11130 ;;		None
 11131 ;; Auto vars:     Size  Location     Type
 11132 ;;		None
 11133 ;; Return value:  Size  Location     Type
 11134 ;;		None               void
 11135 ;; Registers used:
 11136 ;;		wreg, fsr1l, fsr1h
 11137 ;; Tracked objects:
 11138 ;;		On entry : 0/0
 11139 ;;		On exit  : 0/0
 11140 ;;		Unchanged: 0/0
 11141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11142 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11143 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11144 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11145 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11146 ;;Total ram usage:        1 bytes
 11147 ;; Hardware stack levels used:    1
 11148 ;; Hardware stack levels required when called:    4
 11149 ;; This function calls:
 11150 ;;		Nothing
 11151 ;; This function is called by:
 11152 ;;		_main
 11153 ;; This function uses a non-reentrant model
 11154 ;;
 11155                           
 11156                           
 11157                           ;psect for function _MainT_Initialization
 11158  1AF8                     _MainT_Initialization:	
 11159                           
 11160                           ;main.c: 96: Product=&VarProduct;
 11161                           
 11162                           ;incstack = 0
 11163                           ; Regs used in _MainT_Initialization: [wregfsr1]
 11164  1AF8  30A0               	movlw	_VarProduct& (0+255)
 11165  1AF9  0020               	movlb	0	; select bank0
 11166  1AFA  00A0               	movwf	??_MainT_Initialization
 11167  1AFB  0820               	movf	??_MainT_Initialization,w
 11168  1AFC  00EE               	movwf	_Product
 11169                           
 11170                           ;main.c: 97: Product->Data[20]=210;
 11171  1AFD  30D2               	movlw	210
 11172  1AFE  00A0               	movwf	??_MainT_Initialization
 11173  1AFF  086E               	movf	_Product,w
 11174  1B00  3E14               	addlw	20
 11175  1B01  0086               	movwf	6
 11176  1B02  3001               	movlw	1	; select bank2/3
 11177  1B03  0087               	movwf	7
 11178  1B04  0820               	movf	??_MainT_Initialization,w
 11179  1B05  0081               	movwf	1
 11180                           
 11181                           ;main.c: 100: TMain=&VarTMain;
 11182  1B06  30C0               	movlw	_VarTMain& (0+255)
 11183  1B07  00A0               	movwf	??_MainT_Initialization
 11184  1B08  0820               	movf	??_MainT_Initialization,w
 11185  1B09  00EF               	movwf	_TMain
 11186  1B0A  0008               	return
 11187  1B0B                     __end_of_MainT_Initialization:	
 11188                           
 11189                           	psect	text60
 11190  0863                     __ptext60:	
 11191 ;; *************** function _MainT *****************
 11192 ;; Defined at:
 11193 ;;		line 105 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\main.c"
 11194 ;; Parameters:    Size  Location     Type
 11195 ;;		None
 11196 ;; Auto vars:     Size  Location     Type
 11197 ;;		None
 11198 ;; Return value:  Size  Location     Type
 11199 ;;		None               void
 11200 ;; Registers used:
 11201 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11202 ;; Tracked objects:
 11203 ;;		On entry : 0/0
 11204 ;;		On exit  : 0/0
 11205 ;;		Unchanged: 0/0
 11206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11208 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11210 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11211 ;;Total ram usage:        0 bytes
 11212 ;; Hardware stack levels used:    1
 11213 ;; Hardware stack levels required when called:    6
 11214 ;; This function calls:
 11215 ;;		_setBuz
 11216 ;;		_setRF_Enable
 11217 ;;		_setSw_Enable
 11218 ;;		_setTemp_Enable
 11219 ;; This function is called by:
 11220 ;;		_main
 11221 ;; This function uses a non-reentrant model
 11222 ;;
 11223                           
 11224                           
 11225                           ;psect for function _MainT
 11226  0863                     _MainT:	
 11227                           
 11228                           ;main.c: 108: if(!TMain->PowerON)
 11229                           
 11230                           ;incstack = 0
 11231                           ; Regs used in _MainT: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11232  0863  0020               	movlb	0	; select bank0
 11233  0864  086F               	movf	_TMain,w
 11234  0865  0086               	movwf	6
 11235  0866  3001               	movlw	1	; select bank2/3
 11236  0867  0087               	movwf	7
 11237  0868  1801               	btfsc	1,0
 11238  0869  28AA               	goto	l9749
 11239                           
 11240                           ;main.c: 109: {
 11241                           ;main.c: 110: TMain->PowerCount++;
 11242  086A  0A6F               	incf	_TMain,w
 11243  086B  0086               	movwf	6
 11244  086C  3001               	movlw	1	; select bank2/3
 11245  086D  0087               	movwf	7
 11246  086E  3001               	movlw	1
 11247  086F  0781               	addwf	1,f
 11248  0870  3141               	addfsr 1,1
 11249  0871  1803               	skipnc
 11250  0872  0A81               	incf	1,f
 11251                           
 11252                           ;main.c: 111: if(TMain->PowerCount == 150)
 11253  0873  0A6F               	incf	_TMain,w
 11254  0874  0086               	movwf	6
 11255  0875  3001               	movlw	1	; select bank2/3
 11256  0876  0087               	movwf	7
 11257  0877  3F40               	moviw [0]fsr1
 11258  0878  3A96               	xorlw	150
 11259  0879  1D03               	skipz
 11260  087A  287D               	goto	u10185
 11261  087B  3F41               	moviw [1]fsr1
 11262  087C  3A00               	xorlw	0
 11263  087D                     u10185:	
 11264  087D  1D03               	skipz
 11265  087E  0008               	return
 11266                           
 11267                           ;main.c: 112: {
 11268                           ;main.c: 113: TMain->PowerCount=0;
 11269  087F  0A6F               	incf	_TMain,w
 11270  0880  0086               	movwf	6
 11271  0881  3001               	movlw	1	; select bank2/3
 11272  0882  0087               	movwf	7
 11273  0883  3000               	movlw	0
 11274  0884  3FC0               	movwi [0]fsr1
 11275  0885  3FC1               	movwi [1]fsr1
 11276                           
 11277                           ;main.c: 114: TMain->PowerON=1;
 11278  0886  086F               	movf	_TMain,w
 11279  0887  0086               	movwf	6
 11280  0888  3001               	movlw	1	; select bank2/3
 11281  0889  0087               	movwf	7
 11282  088A  1401               	bsf	1,0
 11283                           
 11284                           ;main.c: 117: setTemp_Enable(1);
 11285  088B  3001               	movlw	1
 11286  088C  3199  21B5  3188   	fcall	_setTemp_Enable
 11287                           
 11288                           ;main.c: 121: ;;
 11289                           ;main.c: 127: setBuz(3,50);
 11290  088F  3032               	movlw	50
 11291  0890  0020               	movlb	0	; select bank0
 11292  0891  00A6               	movwf	setBuz@time
 11293  0892  3000               	movlw	0
 11294  0893  00A7               	movwf	setBuz@time+1
 11295  0894  3003               	movlw	3
 11296  0895  3197  2789  3188   	fcall	_setBuz
 11297                           
 11298                           ;main.c: 128: TMain->SelfTest=1;
 11299  0898  0020               	movlb	0	; select bank0
 11300  0899  086F               	movf	_TMain,w
 11301  089A  3E03               	addlw	3
 11302  089B  0086               	movwf	6
 11303  089C  3001               	movlw	1	; select bank2/3
 11304  089D  0087               	movwf	7
 11305  089E  1401               	bsf	1,0
 11306                           
 11307                           ;main.c: 130: setSw_Enable(1);
 11308  089F  3001               	movlw	1
 11309  08A0  319C  2466  3188   	fcall	_setSw_Enable
 11310                           
 11311                           ;main.c: 133: setRF_Enable(1,1);
 11312  08A3  0020               	movlb	0	; select bank0
 11313  08A4  01A2               	clrf	setRF_Enable@command
 11314  08A5  0AA2               	incf	setRF_Enable@command,f
 11315  08A6  3001               	movlw	1
 11316  08A7  319D  25FF         	fcall	_setRF_Enable
 11317                           
 11318                           ;main.c: 137: }
 11319                           ;main.c: 138: }
 11320  08A9  0008               	return
 11321  08AA                     l9749:	
 11322                           
 11323                           ;main.c: 139: else
 11324                           ;main.c: 140: {
 11325                           ;main.c: 148: TMain->Count1++;
 11326  08AA  0020               	movlb	0	; select bank0
 11327  08AB  086F               	movf	_TMain,w
 11328  08AC  3E06               	addlw	6
 11329  08AD  0086               	movwf	6
 11330  08AE  3001               	movlw	1	; select bank2/3
 11331  08AF  0087               	movwf	7
 11332  08B0  3001               	movlw	1
 11333  08B1  0781               	addwf	1,f
 11334  08B2  3141               	addfsr 1,1
 11335  08B3  1803               	skipnc
 11336  08B4  0A81               	incf	1,f
 11337                           
 11338                           ;main.c: 149: if(TMain->Count1 == 100)
 11339  08B5  086F               	movf	_TMain,w
 11340  08B6  3E06               	addlw	6
 11341  08B7  0086               	movwf	6
 11342  08B8  3001               	movlw	1	; select bank2/3
 11343  08B9  0087               	movwf	7
 11344  08BA  3F40               	moviw [0]fsr1
 11345  08BB  3A64               	xorlw	100
 11346  08BC  1D03               	skipz
 11347  08BD  28C0               	goto	u10195
 11348  08BE  3F41               	moviw [1]fsr1
 11349  08BF  3A00               	xorlw	0
 11350  08C0                     u10195:	
 11351  08C0  1D03               	skipz
 11352  08C1  0008               	return
 11353                           
 11354                           ;main.c: 150: {
 11355                           ;main.c: 151: TMain->Count1=0;
 11356  08C2  086F               	movf	_TMain,w
 11357  08C3  3E06               	addlw	6
 11358  08C4  0086               	movwf	6
 11359  08C5  3001               	movlw	1	; select bank2/3
 11360  08C6  0087               	movwf	7
 11361  08C7  3000               	movlw	0
 11362  08C8  3FC0               	movwi [0]fsr1
 11363  08C9  3FC1               	movwi [1]fsr1
 11364                           
 11365                           ;main.c: 164: if(TMain->Flag)
 11366  08CA  086F               	movf	_TMain,w
 11367  08CB  0086               	movwf	6
 11368  08CC  3001               	movlw	1	; select bank2/3
 11369  08CD  0087               	movwf	7
 11370  08CE  1D81               	btfss	1,3
 11371  08CF  28D6               	goto	l9757
 11372                           
 11373                           ;main.c: 165: {
 11374                           ;main.c: 166: TMain->Flag=0;
 11375  08D0  086F               	movf	_TMain,w
 11376  08D1  0086               	movwf	6
 11377  08D2  3001               	movlw	1	; select bank2/3
 11378  08D3  0087               	movwf	7
 11379  08D4  1181               	bcf	1,3
 11380                           
 11381                           ;main.c: 175: }
 11382  08D5  0008               	return
 11383  08D6                     l9757:	
 11384                           
 11385                           ;main.c: 176: else
 11386                           ;main.c: 177: {
 11387                           ;main.c: 178: TMain->Flag=1;
 11388  08D6  086F               	movf	_TMain,w
 11389  08D7  0086               	movwf	6
 11390  08D8  3001               	movlw	1	; select bank2/3
 11391  08D9  0087               	movwf	7
 11392  08DA  1581               	bsf	1,3
 11393  08DB  0008               	return
 11394  08DC                     __end_of_MainT:	
 11395                           
 11396                           	psect	text61
 11397  19B5                     __ptext61:	
 11398 ;; *************** function _setTemp_Enable *****************
 11399 ;; Defined at:
 11400 ;;		line 22 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\OverTemperature_B1.c"
 11401 ;; Parameters:    Size  Location     Type
 11402 ;;  command         1    wreg     unsigned char 
 11403 ;; Auto vars:     Size  Location     Type
 11404 ;;  command         1    0[BANK0 ] unsigned char 
 11405 ;; Return value:  Size  Location     Type
 11406 ;;		None               void
 11407 ;; Registers used:
 11408 ;;		wreg, fsr1l, fsr1h
 11409 ;; Tracked objects:
 11410 ;;		On entry : 0/0
 11411 ;;		On exit  : 0/0
 11412 ;;		Unchanged: 0/0
 11413 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11415 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11417 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11418 ;;Total ram usage:        1 bytes
 11419 ;; Hardware stack levels used:    1
 11420 ;; Hardware stack levels required when called:    4
 11421 ;; This function calls:
 11422 ;;		Nothing
 11423 ;; This function is called by:
 11424 ;;		_MainT
 11425 ;; This function uses a non-reentrant model
 11426 ;;
 11427                           
 11428                           
 11429                           ;psect for function _setTemp_Enable
 11430  19B5                     _setTemp_Enable:	
 11431                           
 11432                           ;incstack = 0
 11433                           ; Regs used in _setTemp_Enable: [wregfsr1]
 11434                           ;setTemp_Enable@command stored from wreg
 11435  19B5  0020               	movlb	0	; select bank0
 11436  19B6  00A0               	movwf	setTemp_Enable@command
 11437                           
 11438                           ;OverTemperature_B1.c: 24: Temp->Enable=command;
 11439  19B7  0879               	movf	_Temp,w
 11440  19B8  0086               	movwf	6
 11441  19B9  3001               	movlw	1	; select bank2/3
 11442  19BA  0087               	movwf	7
 11443  19BB  0820               	movf	setTemp_Enable@command,w
 11444  19BC  1001               	bcf	1,0
 11445  19BD  1D03               	skipz
 11446  19BE  1401               	bsf	1,0
 11447  19BF  0008               	return
 11448  19C0                     __end_of_setTemp_Enable:	
 11449                           
 11450                           	psect	text62
 11451  1C66                     __ptext62:	
 11452 ;; *************** function _setSw_Enable *****************
 11453 ;; Defined at:
 11454 ;;		line 86 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Switch_B1.c"
 11455 ;; Parameters:    Size  Location     Type
 11456 ;;  command         1    wreg     unsigned char 
 11457 ;; Auto vars:     Size  Location     Type
 11458 ;;  command         1    2[BANK0 ] unsigned char 
 11459 ;; Return value:  Size  Location     Type
 11460 ;;		None               void
 11461 ;; Registers used:
 11462 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11463 ;; Tracked objects:
 11464 ;;		On entry : 0/0
 11465 ;;		On exit  : 0/0
 11466 ;;		Unchanged: 0/0
 11467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11468 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11469 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11471 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11472 ;;Total ram usage:        1 bytes
 11473 ;; Hardware stack levels used:    1
 11474 ;; Hardware stack levels required when called:    5
 11475 ;; This function calls:
 11476 ;;		_SwPointSelect
 11477 ;; This function is called by:
 11478 ;;		_MainT
 11479 ;;		_setOverTemp_Exceptions
 11480 ;;		_setPowerFault_Exceptions
 11481 ;; This function uses a non-reentrant model
 11482 ;;
 11483                           
 11484                           
 11485                           ;psect for function _setSw_Enable
 11486  1C66                     _setSw_Enable:	
 11487                           
 11488                           ;incstack = 0
 11489                           ; Regs used in _setSw_Enable: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11490                           ;setSw_Enable@command stored from wreg
 11491  1C66  0020               	movlb	0	; select bank0
 11492  1C67  00A2               	movwf	setSw_Enable@command
 11493                           
 11494                           ;Switch_B1.c: 90: SwPointSelect(1);
 11495  1C68  3001               	movlw	1
 11496  1C69  319B  231F  319C   	fcall	_SwPointSelect
 11497                           
 11498                           ;Switch_B1.c: 91: Sw->Enable=command;
 11499  1C6C  0878               	movf	_Sw,w
 11500  1C6D  0086               	movwf	6
 11501  1C6E  3001               	movlw	1	; select bank2/3
 11502  1C6F  0087               	movwf	7
 11503  1C70  0020               	movlb	0	; select bank0
 11504  1C71  0822               	movf	setSw_Enable@command,w
 11505  1C72  1001               	bcf	1,0
 11506  1C73  1D03               	skipz
 11507  1C74  1401               	bsf	1,0
 11508                           
 11509                           ;Switch_B1.c: 95: SwPointSelect(2);
 11510  1C75  3002               	movlw	2
 11511  1C76  319B  231F         	fcall	_SwPointSelect
 11512                           
 11513                           ;Switch_B1.c: 96: Sw->Enable=command;
 11514  1C78  0878               	movf	_Sw,w
 11515  1C79  0086               	movwf	6
 11516  1C7A  3001               	movlw	1	; select bank2/3
 11517  1C7B  0087               	movwf	7
 11518  1C7C  0020               	movlb	0	; select bank0
 11519  1C7D  0822               	movf	setSw_Enable@command,w
 11520  1C7E  1001               	bcf	1,0
 11521  1C7F  1D03               	skipz
 11522  1C80  1401               	bsf	1,0
 11523  1C81  0008               	return
 11524  1C82                     __end_of_setSw_Enable:	
 11525                           
 11526                           	psect	text63
 11527  1DFF                     __ptext63:	
 11528 ;; *************** function _setRF_Enable *****************
 11529 ;; Defined at:
 11530 ;;		line 185 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
 11531 ;; Parameters:    Size  Location     Type
 11532 ;;  rf              1    wreg     unsigned char 
 11533 ;;  command         1    2[BANK0 ] unsigned char 
 11534 ;; Auto vars:     Size  Location     Type
 11535 ;;  rf              1    3[BANK0 ] unsigned char 
 11536 ;; Return value:  Size  Location     Type
 11537 ;;		None               void
 11538 ;; Registers used:
 11539 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11540 ;; Tracked objects:
 11541 ;;		On entry : 0/0
 11542 ;;		On exit  : 0/0
 11543 ;;		Unchanged: 0/0
 11544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11545 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11546 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11548 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11549 ;;Total ram usage:        2 bytes
 11550 ;; Hardware stack levels used:    1
 11551 ;; Hardware stack levels required when called:    5
 11552 ;; This function calls:
 11553 ;;		_RfPointSelect
 11554 ;;		_setINT_GO
 11555 ;; This function is called by:
 11556 ;;		_MainT
 11557 ;;		_setOverTemp_Exceptions
 11558 ;;		_setPowerFault_Exceptions
 11559 ;; This function uses a non-reentrant model
 11560 ;;
 11561                           
 11562                           
 11563                           ;psect for function _setRF_Enable
 11564  1DFF                     _setRF_Enable:	
 11565                           
 11566                           ;incstack = 0
 11567                           ; Regs used in _setRF_Enable: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11568                           ;setRF_Enable@rf stored from wreg
 11569  1DFF  0020               	movlb	0	; select bank0
 11570  1E00  00A3               	movwf	setRF_Enable@rf
 11571                           
 11572                           ;RF_Control_B1.c: 187: RfPointSelect(rf);
 11573  1E01  0823               	movf	setRF_Enable@rf,w
 11574  1E02  3199  219F  319D   	fcall	_RfPointSelect
 11575                           
 11576                           ;RF_Control_B1.c: 188: RF->Enable=command;
 11577  1E05  0877               	movf	_RF,w
 11578  1E06  0086               	movwf	6
 11579  1E07  0187               	clrf	7
 11580  1E08  0020               	movlb	0	; select bank0
 11581  1E09  0822               	movf	setRF_Enable@command,w
 11582  1E0A  1001               	bcf	1,0
 11583  1E0B  1D03               	skipz
 11584  1E0C  1401               	bsf	1,0
 11585                           
 11586                           ;RF_Control_B1.c: 189: RF->Learn=0;
 11587  1E0D  0877               	movf	_RF,w
 11588  1E0E  0086               	movwf	6
 11589  1E0F  0187               	clrf	7
 11590  1E10  1301               	bcf	1,6
 11591                           
 11592                           ;RF_Control_B1.c: 190: RF->TransceiveGO=0;
 11593  1E11  0877               	movf	_RF,w
 11594  1E12  0086               	movwf	6
 11595  1E13  0187               	clrf	7
 11596  1E14  1101               	bcf	1,2
 11597                           
 11598                           ;RF_Control_B1.c: 191: RF->RxStatus=0;
 11599  1E15  0877               	movf	_RF,w
 11600  1E16  0086               	movwf	6
 11601  1E17  0187               	clrf	7
 11602  1E18  1181               	bcf	1,3
 11603                           
 11604                           ;RF_Control_B1.c: 192: RF->ReceiveGO=0;
 11605  1E19  0877               	movf	_RF,w
 11606  1E1A  0086               	movwf	6
 11607  1E1B  0187               	clrf	7
 11608  1E1C  1081               	bcf	1,1
 11609                           
 11610                           ;RF_Control_B1.c: 193: RF->DebounceTime=0;
 11611  1E1D  0A77               	incf	_RF,w
 11612  1E1E  0086               	movwf	6
 11613  1E1F  0187               	clrf	7
 11614  1E20  0181               	clrf	1
 11615                           
 11616                           ;RF_Control_B1.c: 194: RF->Debounce=0;
 11617  1E21  0877               	movf	_RF,w
 11618  1E22  0086               	movwf	6
 11619  1E23  0187               	clrf	7
 11620  1E24  1281               	bcf	1,5
 11621                           
 11622                           ;RF_Control_B1.c: 195: setINT_GO(0);
 11623  1E25  3000               	movlw	0
 11624  1E26  3199  2176         	fcall	_setINT_GO
 11625  1E28  0008               	return
 11626  1E29                     __end_of_setRF_Enable:	
 11627                           
 11628                           	psect	text64
 11629  1976                     __ptext64:	
 11630 ;; *************** function _setINT_GO *****************
 11631 ;; Defined at:
 11632 ;;		line 299 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
 11633 ;; Parameters:    Size  Location     Type
 11634 ;;  command         1    wreg     unsigned char 
 11635 ;; Auto vars:     Size  Location     Type
 11636 ;;  command         1    0[BANK0 ] unsigned char 
 11637 ;; Return value:  Size  Location     Type
 11638 ;;		None               void
 11639 ;; Registers used:
 11640 ;;		wreg
 11641 ;; Tracked objects:
 11642 ;;		On entry : 0/0
 11643 ;;		On exit  : 0/0
 11644 ;;		Unchanged: 0/0
 11645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11646 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11647 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11649 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11650 ;;Total ram usage:        1 bytes
 11651 ;; Hardware stack levels used:    1
 11652 ;; Hardware stack levels required when called:    4
 11653 ;; This function calls:
 11654 ;;		Nothing
 11655 ;; This function is called by:
 11656 ;;		_setRF_Main
 11657 ;;		_setRF_Enable
 11658 ;;		_RF_RxDisable
 11659 ;; This function uses a non-reentrant model
 11660 ;;
 11661                           
 11662                           
 11663                           ;psect for function _setINT_GO
 11664  1976                     _setINT_GO:	
 11665                           
 11666                           ;incstack = 0
 11667                           ; Regs used in _setINT_GO: [wreg]
 11668                           ;setINT_GO@command stored from wreg
 11669  1976  0020               	movlb	0	; select bank0
 11670  1977  00A0               	movwf	setINT_GO@command
 11671                           
 11672                           ;MCU_B1.c: 301: INTF=0;
 11673  1978  108B               	bcf	11,1	;volatile
 11674                           
 11675                           ;MCU_B1.c: 302: INTE=command;
 11676  1979  1C20               	btfss	setINT_GO@command,0
 11677  197A  297D               	goto	u8530
 11678  197B  160B               	bsf	11,4	;volatile
 11679  197C  0008               	return
 11680  197D                     u8530:	
 11681  197D  120B               	bcf	11,4	;volatile
 11682  197E  0008               	return
 11683  197F                     __end_of_setINT_GO:	
 11684                           
 11685                           	psect	text65
 11686  1A07                     __ptext65:	
 11687 ;; *************** function _LED_Main *****************
 11688 ;; Defined at:
 11689 ;;		line 51 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\LED_B1.c"
 11690 ;; Parameters:    Size  Location     Type
 11691 ;;		None
 11692 ;; Auto vars:     Size  Location     Type
 11693 ;;		None
 11694 ;; Return value:  Size  Location     Type
 11695 ;;		None               void
 11696 ;; Registers used:
 11697 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11698 ;; Tracked objects:
 11699 ;;		On entry : 0/0
 11700 ;;		On exit  : 0/0
 11701 ;;		Unchanged: 0/0
 11702 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11703 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11704 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11706 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11707 ;;Total ram usage:        0 bytes
 11708 ;; Hardware stack levels used:    1
 11709 ;; Hardware stack levels required when called:    6
 11710 ;; This function calls:
 11711 ;;		_setLED_Main
 11712 ;; This function is called by:
 11713 ;;		_main
 11714 ;; This function uses a non-reentrant model
 11715 ;;
 11716                           
 11717                           
 11718                           ;psect for function _LED_Main
 11719  1A07                     _LED_Main:	
 11720                           
 11721                           ;LED_B1.c: 54: setLED_Main(1);
 11722                           
 11723                           ;incstack = 0
 11724                           ; Regs used in _LED_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11725  1A07  3001               	movlw	1
 11726  1A08  319F  2780  319A   	fcall	_setLED_Main
 11727                           
 11728                           ;LED_B1.c: 57: setLED_Main(2);
 11729  1A0B  3002               	movlw	2
 11730  1A0C  319F  2780  319A   	fcall	_setLED_Main
 11731                           
 11732                           ;LED_B1.c: 63: setLED_Main(99);
 11733  1A0F  3063               	movlw	99
 11734  1A10  319F  2780         	fcall	_setLED_Main
 11735  1A12  0008               	return
 11736  1A13                     __end_of_LED_Main:	
 11737                           
 11738                           	psect	text66
 11739  1F80                     __ptext66:	
 11740 ;; *************** function _setLED_Main *****************
 11741 ;; Defined at:
 11742 ;;		line 214 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\LED_B1.c"
 11743 ;; Parameters:    Size  Location     Type
 11744 ;;  led             1    wreg     unsigned char 
 11745 ;; Auto vars:     Size  Location     Type
 11746 ;;  led             1    4[BANK0 ] unsigned char 
 11747 ;; Return value:  Size  Location     Type
 11748 ;;		None               void
 11749 ;; Registers used:
 11750 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11751 ;; Tracked objects:
 11752 ;;		On entry : 0/0
 11753 ;;		On exit  : 0/0
 11754 ;;		Unchanged: 0/0
 11755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11757 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11758 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11759 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11760 ;;Total ram usage:        3 bytes
 11761 ;; Hardware stack levels used:    1
 11762 ;; Hardware stack levels required when called:    5
 11763 ;; This function calls:
 11764 ;;		_LedPointSelect
 11765 ;; This function is called by:
 11766 ;;		_LED_Main
 11767 ;; This function uses a non-reentrant model
 11768 ;;
 11769                           
 11770                           
 11771                           ;psect for function _setLED_Main
 11772  1F80                     _setLED_Main:	
 11773                           
 11774                           ;incstack = 0
 11775                           ; Regs used in _setLED_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11776                           ;setLED_Main@led stored from wreg
 11777  1F80  0020               	movlb	0	; select bank0
 11778  1F81  00A4               	movwf	setLED_Main@led
 11779                           
 11780                           ;LED_B1.c: 216: LedPointSelect(led);
 11781  1F82  0824               	movf	setLED_Main@led,w
 11782  1F83  319D  251E  319F   	fcall	_LedPointSelect
 11783                           
 11784                           ;LED_B1.c: 217: if(LED->GO)
 11785  1F86  0021               	movlb	1	; select bank1
 11786  1F87  083A               	movf	_LED^(0+128),w
 11787  1F88  0086               	movwf	6
 11788  1F89  0187               	clrf	7
 11789  1F8A  1C81               	btfss	1,1
 11790  1F8B  0008               	return
 11791                           
 11792                           ;LED_B1.c: 218: {
 11793                           ;LED_B1.c: 219: LED->Time++;
 11794  1F8C  0A3A               	incf	_LED^(0+128),w
 11795  1F8D  0086               	movwf	6
 11796  1F8E  0187               	clrf	7
 11797  1F8F  3001               	movlw	1
 11798  1F90  0781               	addwf	1,f
 11799  1F91  3141               	addfsr 1,1
 11800  1F92  1803               	skipnc
 11801  1F93  0A81               	incf	1,f
 11802                           
 11803                           ;LED_B1.c: 220: if(LED->Time >= 500/10)
 11804  1F94  0A3A               	incf	_LED^(0+128),w
 11805  1F95  0086               	movwf	6
 11806  1F96  0187               	clrf	7
 11807  1F97  3F40               	moviw [0]fsr1
 11808  1F98  0020               	movlb	0	; select bank0
 11809  1F99  00A2               	movwf	??_setLED_Main
 11810  1F9A  3F41               	moviw [1]fsr1
 11811  1F9B  00A3               	movwf	??_setLED_Main+1
 11812  1F9C  3000               	movlw	0
 11813  1F9D  0223               	subwf	??_setLED_Main+1,w
 11814  1F9E  3032               	movlw	50
 11815  1F9F  1903               	skipnz
 11816  1FA0  0222               	subwf	??_setLED_Main,w
 11817  1FA1  1C03               	skipc
 11818  1FA2  0008               	return
 11819                           
 11820                           ;LED_B1.c: 221: {
 11821                           ;LED_B1.c: 222: LED->Time=0;
 11822  1FA3  0021               	movlb	1	; select bank1
 11823  1FA4  0A3A               	incf	_LED^(0+128),w
 11824  1FA5  0086               	movwf	6
 11825  1FA6  0187               	clrf	7
 11826  1FA7  3000               	movlw	0
 11827  1FA8  3FC0               	movwi [0]fsr1
 11828  1FA9  3FC1               	movwi [1]fsr1
 11829                           
 11830                           ;LED_B1.c: 224: if(led == 1)
 11831  1FAA  0020               	movlb	0	; select bank0
 11832  1FAB  0824               	movf	setLED_Main@led,w
 11833  1FAC  3A01               	xorlw	1
 11834  1FAD  1D03               	skipz
 11835  1FAE  2FB2               	goto	l9197
 11836                           
 11837                           ;LED_B1.c: 225: {
 11838                           ;LED_B1.c: 226: RA3=~RA3;
 11839  1FAF  3008               	movlw	8
 11840  1FB0  068C               	xorwf	12,f
 11841                           
 11842                           ;LED_B1.c: 227: }
 11843  1FB1  0008               	return
 11844  1FB2                     l9197:	
 11845                           
 11846                           ;LED_B1.c: 230: else if(led == 2)
 11847  1FB2  0824               	movf	setLED_Main@led,w
 11848  1FB3  3A02               	xorlw	2
 11849  1FB4  1D03               	skipz
 11850  1FB5  2FB9               	goto	l9201
 11851                           
 11852                           ;LED_B1.c: 231: {
 11853                           ;LED_B1.c: 232: RC7=~RC7;
 11854  1FB6  3080               	movlw	128
 11855  1FB7  068E               	xorwf	14,f
 11856                           
 11857                           ;LED_B1.c: 233: }
 11858  1FB8  0008               	return
 11859  1FB9                     l9201:	
 11860                           
 11861                           ;LED_B1.c: 242: else if(led == 99)
 11862  1FB9  0824               	movf	setLED_Main@led,w
 11863  1FBA  3A63               	xorlw	99
 11864  1FBB  1D03               	skipz
 11865  1FBC  0008               	return
 11866                           
 11867                           ;LED_B1.c: 243: {
 11868                           ;LED_B1.c: 244: RB5=~RB5;
 11869  1FBD  3020               	movlw	32
 11870  1FBE  068D               	xorwf	13,f
 11871  1FBF  0008               	return
 11872  1FC0                     __end_of_setLED_Main:	
 11873                           
 11874                           	psect	text67
 11875  19FB                     __ptext67:	
 11876 ;; *************** function _LED_Initialization *****************
 11877 ;; Defined at:
 11878 ;;		line 35 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\LED_B1.c"
 11879 ;; Parameters:    Size  Location     Type
 11880 ;;		None
 11881 ;; Auto vars:     Size  Location     Type
 11882 ;;		None
 11883 ;; Return value:  Size  Location     Type
 11884 ;;		None               void
 11885 ;; Registers used:
 11886 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11887 ;; Tracked objects:
 11888 ;;		On entry : 0/0
 11889 ;;		On exit  : 0/0
 11890 ;;		Unchanged: 0/0
 11891 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11892 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11893 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11895 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11896 ;;Total ram usage:        0 bytes
 11897 ;; Hardware stack levels used:    1
 11898 ;; Hardware stack levels required when called:    7
 11899 ;; This function calls:
 11900 ;;		_setLED_Initialization
 11901 ;; This function is called by:
 11902 ;;		_main
 11903 ;; This function uses a non-reentrant model
 11904 ;;
 11905                           
 11906                           
 11907                           ;psect for function _LED_Initialization
 11908  19FB                     _LED_Initialization:	
 11909                           
 11910                           ;LED_B1.c: 38: setLED_Initialization(1);
 11911                           
 11912                           ;incstack = 0
 11913                           ; Regs used in _LED_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11914  19FB  3001               	movlw	1
 11915  19FC  319A  22D4  3199   	fcall	_setLED_Initialization
 11916                           
 11917                           ;LED_B1.c: 41: setLED_Initialization(2);
 11918  19FF  3002               	movlw	2
 11919  1A00  319A  22D4  3199   	fcall	_setLED_Initialization
 11920                           
 11921                           ;LED_B1.c: 47: setLED_Initialization(99);
 11922  1A03  3063               	movlw	99
 11923  1A04  319A  22D4         	fcall	_setLED_Initialization
 11924  1A06  0008               	return
 11925  1A07                     __end_of_LED_Initialization:	
 11926                           
 11927                           	psect	text68
 11928  1AD4                     __ptext68:	
 11929 ;; *************** function _setLED_Initialization *****************
 11930 ;; Defined at:
 11931 ;;		line 67 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\LED_B1.c"
 11932 ;; Parameters:    Size  Location     Type
 11933 ;;  led             1    wreg     unsigned char 
 11934 ;; Auto vars:     Size  Location     Type
 11935 ;;  led             1    4[BANK0 ] unsigned char 
 11936 ;; Return value:  Size  Location     Type
 11937 ;;		None               void
 11938 ;; Registers used:
 11939 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11940 ;; Tracked objects:
 11941 ;;		On entry : 0/0
 11942 ;;		On exit  : 0/0
 11943 ;;		Unchanged: 0/0
 11944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11946 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11948 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11949 ;;Total ram usage:        1 bytes
 11950 ;; Hardware stack levels used:    1
 11951 ;; Hardware stack levels required when called:    6
 11952 ;; This function calls:
 11953 ;;		_LedPointSelect
 11954 ;;		_setLED
 11955 ;; This function is called by:
 11956 ;;		_LED_Initialization
 11957 ;; This function uses a non-reentrant model
 11958 ;;
 11959                           
 11960                           
 11961                           ;psect for function _setLED_Initialization
 11962  1AD4                     _setLED_Initialization:	
 11963                           
 11964                           ;incstack = 0
 11965                           ; Regs used in _setLED_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 11966                           ;setLED_Initialization@led stored from wreg
 11967  1AD4  0020               	movlb	0	; select bank0
 11968  1AD5  00A4               	movwf	setLED_Initialization@led
 11969                           
 11970                           ;LED_B1.c: 69: LedPointSelect(led);
 11971  1AD6  0824               	movf	setLED_Initialization@led,w
 11972  1AD7  319D  251E  319A   	fcall	_LedPointSelect
 11973                           
 11974                           ;LED_B1.c: 70: LED->Enable=1;
 11975  1ADA  0021               	movlb	1	; select bank1
 11976  1ADB  083A               	movf	_LED^(0+128),w
 11977  1ADC  0086               	movwf	6
 11978  1ADD  0187               	clrf	7
 11979  1ADE  1401               	bsf	1,0
 11980                           
 11981                           ;LED_B1.c: 71: setLED(led,0);
 11982  1ADF  0020               	movlb	0	; select bank0
 11983  1AE0  01A2               	clrf	setLED@command
 11984  1AE1  0824               	movf	setLED_Initialization@led,w
 11985  1AE2  3193  236C         	fcall	_setLED
 11986  1AE4  0008               	return
 11987  1AE5                     __end_of_setLED_Initialization:	
 11988                           
 11989                           	psect	text69
 11990  1144                     __ptext69:	
 11991 ;; *************** function _Flash_Memory_Main *****************
 11992 ;; Defined at:
 11993 ;;		line 852 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
 11994 ;; Parameters:    Size  Location     Type
 11995 ;;		None
 11996 ;; Auto vars:     Size  Location     Type
 11997 ;;		None
 11998 ;; Return value:  Size  Location     Type
 11999 ;;		None               void
 12000 ;; Registers used:
 12001 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12002 ;; Tracked objects:
 12003 ;;		On entry : 0/0
 12004 ;;		On exit  : 0/0
 12005 ;;		Unchanged: 0/0
 12006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12008 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12010 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12011 ;;Total ram usage:        0 bytes
 12012 ;; Hardware stack levels used:    1
 12013 ;; Hardware stack levels required when called:    7
 12014 ;; This function calls:
 12015 ;;		_Flash_Memory_Modify
 12016 ;; This function is called by:
 12017 ;;		_main
 12018 ;; This function uses a non-reentrant model
 12019 ;;
 12020                           
 12021                           
 12022                           ;psect for function _Flash_Memory_Main
 12023  1144                     _Flash_Memory_Main:	
 12024                           
 12025                           ;MCU_B1.c: 854: if(Memory->GO)
 12026                           
 12027                           ;incstack = 0
 12028                           ; Regs used in _Flash_Memory_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12029  1144  0020               	movlb	0	; select bank0
 12030  1145  086D               	movf	_Memory,w
 12031  1146  3E22               	addlw	34
 12032  1147  0086               	movwf	6
 12033  1148  3002               	movlw	2	; select bank4/5
 12034  1149  0087               	movwf	7
 12035  114A  1C81               	btfss	1,1
 12036  114B  0008               	return
 12037                           
 12038                           ;MCU_B1.c: 855: {
 12039                           ;MCU_B1.c: 856: if(Memory->Modify)
 12040  114C  086D               	movf	_Memory,w
 12041  114D  3E22               	addlw	34
 12042  114E  0086               	movwf	6
 12043  114F  3002               	movlw	2	; select bank4/5
 12044  1150  0087               	movwf	7
 12045  1151  1C01               	btfss	1,0
 12046  1152  2981               	goto	l9787
 12047                           
 12048                           ;MCU_B1.c: 857: {
 12049                           ;MCU_B1.c: 858: Memory->Time++;
 12050  1153  086D               	movf	_Memory,w
 12051  1154  3E23               	addlw	35
 12052  1155  0086               	movwf	6
 12053  1156  3002               	movlw	2	; select bank4/5
 12054  1157  0087               	movwf	7
 12055  1158  3001               	movlw	1
 12056  1159  0781               	addwf	1,f
 12057  115A  3141               	addfsr 1,1
 12058  115B  1803               	skipnc
 12059  115C  0A81               	incf	1,f
 12060                           
 12061                           ;MCU_B1.c: 859: if(Memory->Time == 25)
 12062  115D  086D               	movf	_Memory,w
 12063  115E  3E23               	addlw	35
 12064  115F  0086               	movwf	6
 12065  1160  3002               	movlw	2	; select bank4/5
 12066  1161  0087               	movwf	7
 12067  1162  3F40               	moviw [0]fsr1
 12068  1163  3A19               	xorlw	25
 12069  1164  1D03               	skipz
 12070  1165  2968               	goto	u10275
 12071  1166  3F41               	moviw [1]fsr1
 12072  1167  3A00               	xorlw	0
 12073  1168                     u10275:	
 12074  1168  1D03               	skipz
 12075  1169  0008               	return
 12076                           
 12077                           ;MCU_B1.c: 860: {
 12078                           ;MCU_B1.c: 861: Memory->Time=0;
 12079  116A  086D               	movf	_Memory,w
 12080  116B  3E23               	addlw	35
 12081  116C  0086               	movwf	6
 12082  116D  3002               	movlw	2	; select bank4/5
 12083  116E  0087               	movwf	7
 12084  116F  3000               	movlw	0
 12085  1170  3FC0               	movwi [0]fsr1
 12086  1171  3FC1               	movwi [1]fsr1
 12087                           
 12088                           ;MCU_B1.c: 862: Memory->Modify=0;
 12089  1172  086D               	movf	_Memory,w
 12090  1173  3E22               	addlw	34
 12091  1174  0086               	movwf	6
 12092  1175  3002               	movlw	2	; select bank4/5
 12093  1176  0087               	movwf	7
 12094  1177  1001               	bcf	1,0
 12095                           
 12096                           ;MCU_B1.c: 863: Memory->GO=0;
 12097  1178  086D               	movf	_Memory,w
 12098  1179  3E22               	addlw	34
 12099  117A  0086               	movwf	6
 12100  117B  3002               	movlw	2	; select bank4/5
 12101  117C  0087               	movwf	7
 12102  117D  1081               	bcf	1,1
 12103                           
 12104                           ;MCU_B1.c: 864: Flash_Memory_Modify();
 12105  117E  3194  242E         	fcall	_Flash_Memory_Modify
 12106                           
 12107                           ;MCU_B1.c: 866: }
 12108                           ;MCU_B1.c: 867: }
 12109  1180  0008               	return
 12110  1181                     l9787:	
 12111                           
 12112                           ;MCU_B1.c: 868: else
 12113                           ;MCU_B1.c: 869: {
 12114                           ;MCU_B1.c: 870: Memory->GO=0;
 12115  1181  0020               	movlb	0	; select bank0
 12116  1182  086D               	movf	_Memory,w
 12117  1183  3E22               	addlw	34
 12118  1184  0086               	movwf	6
 12119  1185  3002               	movlw	2	; select bank4/5
 12120  1186  0087               	movwf	7
 12121  1187  1081               	bcf	1,1
 12122  1188  0008               	return
 12123  1189                     __end_of_Flash_Memory_Main:	
 12124                           
 12125                           	psect	text70
 12126  142E                     __ptext70:	
 12127 ;; *************** function _Flash_Memory_Modify *****************
 12128 ;; Defined at:
 12129 ;;		line 927 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
 12130 ;; Parameters:    Size  Location     Type
 12131 ;;		None
 12132 ;; Auto vars:     Size  Location     Type
 12133 ;;  i               1    6[BANK0 ] unsigned char 
 12134 ;; Return value:  Size  Location     Type
 12135 ;;		None               void
 12136 ;; Registers used:
 12137 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12138 ;; Tracked objects:
 12139 ;;		On entry : 0/0
 12140 ;;		On exit  : 0/0
 12141 ;;		Unchanged: 0/0
 12142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12144 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12145 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12146 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12147 ;;Total ram usage:        3 bytes
 12148 ;; Hardware stack levels used:    1
 12149 ;; Hardware stack levels required when called:    6
 12150 ;; This function calls:
 12151 ;;		_Flash_Memory_Erasing
 12152 ;;		_Flash_Memory_Read
 12153 ;;		_Flash_Memory_Write
 12154 ;; This function is called by:
 12155 ;;		_Flash_Memory_Main
 12156 ;; This function uses a non-reentrant model
 12157 ;;
 12158                           
 12159                           
 12160                           ;psect for function _Flash_Memory_Modify
 12161  142E                     _Flash_Memory_Modify:	
 12162                           
 12163                           ;MCU_B1.c: 929: char i;
 12164                           ;MCU_B1.c: 930: for(i=0;i<32;i++)
 12165                           
 12166                           ;incstack = 0
 12167                           ; Regs used in _Flash_Memory_Modify: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12168  142E  0020               	movlb	0	; select bank0
 12169  142F  01A6               	clrf	Flash_Memory_Modify@i
 12170  1430  3020               	movlw	32
 12171  1431  0226               	subwf	Flash_Memory_Modify@i,w
 12172  1432  1803               	btfsc	3,0
 12173  1433  2C4B               	goto	l9273
 12174  1434                     l9267:	
 12175                           
 12176                           ;MCU_B1.c: 931: {
 12177                           ;MCU_B1.c: 932: Memory->Data[i]=Flash_Memory_Read(i);
 12178  1434  0826               	movf	Flash_Memory_Modify@i,w
 12179  1435  319C  2400  3194   	fcall	_Flash_Memory_Read
 12180  1438  0020               	movlb	0	; select bank0
 12181  1439  00A4               	movwf	??_Flash_Memory_Modify
 12182  143A  0826               	movf	Flash_Memory_Modify@i,w
 12183  143B  076D               	addwf	_Memory,w
 12184  143C  00A5               	movwf	??_Flash_Memory_Modify+1
 12185  143D  0825               	movf	??_Flash_Memory_Modify+1,w
 12186  143E  0086               	movwf	6
 12187  143F  3002               	movlw	2	; select bank4/5
 12188  1440  0087               	movwf	7
 12189  1441  0824               	movf	??_Flash_Memory_Modify,w
 12190  1442  0081               	movwf	1
 12191  1443  3001               	movlw	1
 12192  1444  00A4               	movwf	??_Flash_Memory_Modify
 12193  1445  0824               	movf	??_Flash_Memory_Modify,w
 12194  1446  07A6               	addwf	Flash_Memory_Modify@i,f
 12195  1447  3020               	movlw	32
 12196  1448  0226               	subwf	Flash_Memory_Modify@i,w
 12197  1449  1C03               	skipc
 12198  144A  2C34               	goto	l9267
 12199  144B                     l9273:	
 12200                           
 12201                           ;MCU_B1.c: 933: }
 12202                           ;MCU_B1.c: 934: Memory->Data[0]=Product->Data[12];
 12203  144B  086E               	movf	_Product,w
 12204  144C  3E0C               	addlw	12
 12205  144D  0086               	movwf	6
 12206  144E  3001               	movlw	1	; select bank2/3
 12207  144F  0087               	movwf	7
 12208  1450  0801               	movf	1,w
 12209  1451  00A4               	movwf	??_Flash_Memory_Modify
 12210  1452  086D               	movf	_Memory,w
 12211  1453  0086               	movwf	6
 12212  1454  3002               	movlw	2	; select bank4/5
 12213  1455  0087               	movwf	7
 12214  1456  0824               	movf	??_Flash_Memory_Modify,w
 12215  1457  0081               	movwf	1
 12216                           
 12217                           ;MCU_B1.c: 935: Memory->Data[1]=Product->Data[13];
 12218  1458  086E               	movf	_Product,w
 12219  1459  3E0D               	addlw	13
 12220  145A  0086               	movwf	6
 12221  145B  3001               	movlw	1	; select bank2/3
 12222  145C  0087               	movwf	7
 12223  145D  0801               	movf	1,w
 12224  145E  00A4               	movwf	??_Flash_Memory_Modify
 12225  145F  0A6D               	incf	_Memory,w
 12226  1460  0086               	movwf	6
 12227  1461  3002               	movlw	2	; select bank4/5
 12228  1462  0087               	movwf	7
 12229  1463  0824               	movf	??_Flash_Memory_Modify,w
 12230  1464  0081               	movwf	1
 12231                           
 12232                           ;MCU_B1.c: 936: Memory->Data[2]=Product->Data[14];
 12233  1465  086E               	movf	_Product,w
 12234  1466  3E0E               	addlw	14
 12235  1467  0086               	movwf	6
 12236  1468  3001               	movlw	1	; select bank2/3
 12237  1469  0087               	movwf	7
 12238  146A  0801               	movf	1,w
 12239  146B  00A4               	movwf	??_Flash_Memory_Modify
 12240  146C  086D               	movf	_Memory,w
 12241  146D  3E02               	addlw	2
 12242  146E  0086               	movwf	6
 12243  146F  3002               	movlw	2	; select bank4/5
 12244  1470  0087               	movwf	7
 12245  1471  0824               	movf	??_Flash_Memory_Modify,w
 12246  1472  0081               	movwf	1
 12247                           
 12248                           ;MCU_B1.c: 942: if(Memory->LoopSave)
 12249  1473  086D               	movf	_Memory,w
 12250  1474  3E22               	addlw	34
 12251  1475  0086               	movwf	6
 12252  1476  3002               	movlw	2	; select bank4/5
 12253  1477  0087               	movwf	7
 12254  1478  1D01               	btfss	1,2
 12255  1479  2C8B               	goto	l9277
 12256                           
 12257                           ;MCU_B1.c: 943: {
 12258                           ;MCU_B1.c: 944: Memory->LoopSave=0;
 12259  147A  086D               	movf	_Memory,w
 12260  147B  3E22               	addlw	34
 12261  147C  0086               	movwf	6
 12262  147D  3002               	movlw	2	; select bank4/5
 12263  147E  0087               	movwf	7
 12264  147F  1101               	bcf	1,2
 12265                           
 12266                           ;MCU_B1.c: 945: TMain->FirstOpen=0;
 12267  1480  086F               	movf	_TMain,w
 12268  1481  0086               	movwf	6
 12269  1482  3001               	movlw	1	; select bank2/3
 12270  1483  0087               	movwf	7
 12271  1484  1281               	bcf	1,5
 12272                           
 12273                           ;MCU_B1.c: 946: TMain->First=0;
 12274  1485  086F               	movf	_TMain,w
 12275  1486  3E03               	addlw	3
 12276  1487  0086               	movwf	6
 12277  1488  3001               	movlw	1	; select bank2/3
 12278  1489  0087               	movwf	7
 12279  148A  1081               	bcf	1,1
 12280  148B                     l9277:	
 12281                           
 12282                           ;MCU_B1.c: 948: }
 12283                           ;MCU_B1.c: 949: GIE=0;
 12284  148B  138B               	bcf	11,7	;volatile
 12285                           
 12286                           ;MCU_B1.c: 950: Flash_Memory_Erasing();
 12287  148C  3199  21EF  3194   	fcall	_Flash_Memory_Erasing
 12288                           
 12289                           ;MCU_B1.c: 951: Flash_Memory_Write();
 12290  148F  319E  26AF         	fcall	_Flash_Memory_Write
 12291                           
 12292                           ;MCU_B1.c: 952: GIE=1;
 12293  1491  178B               	bsf	11,7	;volatile
 12294  1492  0008               	return
 12295  1493                     __end_of_Flash_Memory_Modify:	
 12296                           
 12297                           	psect	text71
 12298  19EF                     __ptext71:	
 12299 ;; *************** function _Flash_Memory_Erasing *****************
 12300 ;; Defined at:
 12301 ;;		line 916 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
 12302 ;; Parameters:    Size  Location     Type
 12303 ;;		None
 12304 ;; Auto vars:     Size  Location     Type
 12305 ;;		None
 12306 ;; Return value:  Size  Location     Type
 12307 ;;		None               void
 12308 ;; Registers used:
 12309 ;;		wreg, status,2, status,0, pclath, cstack
 12310 ;; Tracked objects:
 12311 ;;		On entry : 0/0
 12312 ;;		On exit  : 0/0
 12313 ;;		Unchanged: 0/0
 12314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12316 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12318 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12319 ;;Total ram usage:        0 bytes
 12320 ;; Hardware stack levels used:    1
 12321 ;; Hardware stack levels required when called:    5
 12322 ;; This function calls:
 12323 ;;		_Flash_Memory_Unlock
 12324 ;; This function is called by:
 12325 ;;		_Flash_Memory_Modify
 12326 ;; This function uses a non-reentrant model
 12327 ;;
 12328                           
 12329                           
 12330                           ;psect for function _Flash_Memory_Erasing
 12331  19EF                     _Flash_Memory_Erasing:	
 12332                           
 12333                           ;MCU_B1.c: 918: CFGS=0;
 12334                           
 12335                           ;incstack = 0
 12336                           ; Regs used in _Flash_Memory_Erasing: [wreg+status,2+status,0+pclath+cstack]
 12337  19EF  0023               	movlb	3	; select bank3
 12338  19F0  1315               	bcf	21,6	;volatile
 12339                           
 12340                           ;MCU_B1.c: 919: PMADRH=0x30;
 12341  19F1  3030               	movlw	48
 12342  19F2  0092               	movwf	18	;volatile
 12343                           
 12344                           ;MCU_B1.c: 920: PMADRL=0x00;
 12345  19F3  0191               	clrf	17	;volatile
 12346                           
 12347                           ;MCU_B1.c: 921: FREE=1;
 12348  19F4  1615               	bsf	21,4	;volatile
 12349                           
 12350                           ;MCU_B1.c: 922: WREN=1;
 12351  19F5  1515               	bsf	21,2	;volatile
 12352                           
 12353                           ;MCU_B1.c: 923: Flash_Memory_Unlock();
 12354  19F6  3199  216D         	fcall	_Flash_Memory_Unlock
 12355                           
 12356                           ;MCU_B1.c: 924: WREN=0;
 12357  19F8  0023               	movlb	3	; select bank3
 12358  19F9  1115               	bcf	21,2	;volatile
 12359  19FA  0008               	return
 12360  19FB                     __end_of_Flash_Memory_Erasing:	
 12361                           
 12362                           	psect	text72
 12363  0E21                     __ptext72:	
 12364 ;; *************** function _Flash_Memory_Initialization *****************
 12365 ;; Defined at:
 12366 ;;		line 807 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
 12367 ;; Parameters:    Size  Location     Type
 12368 ;;		None
 12369 ;; Auto vars:     Size  Location     Type
 12370 ;;  i               1   62[BANK0 ] unsigned char 
 12371 ;; Return value:  Size  Location     Type
 12372 ;;		None               void
 12373 ;; Registers used:
 12374 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12375 ;; Tracked objects:
 12376 ;;		On entry : 0/0
 12377 ;;		On exit  : 0/0
 12378 ;;		Unchanged: 0/0
 12379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12381 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12382 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12383 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12384 ;;Total ram usage:        2 bytes
 12385 ;; Hardware stack levels used:    1
 12386 ;; Hardware stack levels required when called:    7
 12387 ;; This function calls:
 12388 ;;		_Flash_Memory_Read
 12389 ;;		_Flash_Memory_Write
 12390 ;;		_setPercentValue
 12391 ;; This function is called by:
 12392 ;;		_main
 12393 ;; This function uses a non-reentrant model
 12394 ;;
 12395                           
 12396                           
 12397                           ;psect for function _Flash_Memory_Initialization
 12398  0E21                     _Flash_Memory_Initialization:	
 12399                           
 12400                           ;MCU_B1.c: 809: char i;
 12401                           ;MCU_B1.c: 810: if(Flash_Memory_Read(31) == 0xaa)
 12402                           
 12403                           ;incstack = 0
 12404                           ; Regs used in _Flash_Memory_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 12405  0E21  301F               	movlw	31
 12406  0E22  319C  2400  318E   	fcall	_Flash_Memory_Read
 12407  0E25  3AAA               	xorlw	170
 12408  0E26  1D03               	skipz
 12409  0E27  2E99               	goto	l9667
 12410                           
 12411                           ;MCU_B1.c: 811: {
 12412                           ;MCU_B1.c: 812: Product->Data[12]=Flash_Memory_Read(0);
 12413  0E28  3000               	movlw	0
 12414  0E29  319C  2400  318E   	fcall	_Flash_Memory_Read
 12415  0E2C  0020               	movlb	0	; select bank0
 12416  0E2D  00DD               	movwf	??_Flash_Memory_Initialization
 12417  0E2E  086E               	movf	_Product,w
 12418  0E2F  3E0C               	addlw	12
 12419  0E30  0086               	movwf	6
 12420  0E31  3001               	movlw	1	; select bank2/3
 12421  0E32  0087               	movwf	7
 12422  0E33  085D               	movf	??_Flash_Memory_Initialization,w
 12423  0E34  0081               	movwf	1
 12424                           
 12425                           ;MCU_B1.c: 813: Product->Data[13]=Flash_Memory_Read(1);
 12426  0E35  3001               	movlw	1
 12427  0E36  319C  2400  318E   	fcall	_Flash_Memory_Read
 12428  0E39  0020               	movlb	0	; select bank0
 12429  0E3A  00DD               	movwf	??_Flash_Memory_Initialization
 12430  0E3B  086E               	movf	_Product,w
 12431  0E3C  3E0D               	addlw	13
 12432  0E3D  0086               	movwf	6
 12433  0E3E  3001               	movlw	1	; select bank2/3
 12434  0E3F  0087               	movwf	7
 12435  0E40  085D               	movf	??_Flash_Memory_Initialization,w
 12436  0E41  0081               	movwf	1
 12437                           
 12438                           ;MCU_B1.c: 814: Product->Data[14]=Flash_Memory_Read(2);
 12439  0E42  3002               	movlw	2
 12440  0E43  319C  2400  318E   	fcall	_Flash_Memory_Read
 12441  0E46  0020               	movlb	0	; select bank0
 12442  0E47  00DD               	movwf	??_Flash_Memory_Initialization
 12443  0E48  086E               	movf	_Product,w
 12444  0E49  3E0E               	addlw	14
 12445  0E4A  0086               	movwf	6
 12446  0E4B  3001               	movlw	1	; select bank2/3
 12447  0E4C  0087               	movwf	7
 12448  0E4D  085D               	movf	??_Flash_Memory_Initialization,w
 12449  0E4E  0081               	movwf	1
 12450                           
 12451                           ;MCU_B1.c: 820: i=setPercentValue(((char)((100-55)*1.5)));
 12452  0E4F  3043               	movlw	67
 12453  0E50  3191  2189  318E   	fcall	_setPercentValue
 12454  0E53  0020               	movlb	0	; select bank0
 12455  0E54  00DD               	movwf	??_Flash_Memory_Initialization
 12456  0E55  085D               	movf	??_Flash_Memory_Initialization,w
 12457  0E56  00DE               	movwf	Flash_Memory_Initialization@i
 12458                           
 12459                           ;MCU_B1.c: 821: Product->Data[21]=i;
 12460  0E57  085E               	movf	Flash_Memory_Initialization@i,w
 12461  0E58  00DD               	movwf	??_Flash_Memory_Initialization
 12462  0E59  086E               	movf	_Product,w
 12463  0E5A  3E15               	addlw	21
 12464  0E5B  0086               	movwf	6
 12465  0E5C  3001               	movlw	1	; select bank2/3
 12466  0E5D  0087               	movwf	7
 12467  0E5E  085D               	movf	??_Flash_Memory_Initialization,w
 12468  0E5F  0081               	movwf	1
 12469                           
 12470                           ;MCU_B1.c: 822: Product->Data[22]=i;
 12471  0E60  085E               	movf	Flash_Memory_Initialization@i,w
 12472  0E61  00DD               	movwf	??_Flash_Memory_Initialization
 12473  0E62  086E               	movf	_Product,w
 12474  0E63  3E16               	addlw	22
 12475  0E64  0086               	movwf	6
 12476  0E65  3001               	movlw	1	; select bank2/3
 12477  0E66  0087               	movwf	7
 12478  0E67  085D               	movf	??_Flash_Memory_Initialization,w
 12479  0E68  0081               	movwf	1
 12480                           
 12481                           ;MCU_B1.c: 823: Product->Data[23]=i;
 12482  0E69  085E               	movf	Flash_Memory_Initialization@i,w
 12483  0E6A  00DD               	movwf	??_Flash_Memory_Initialization
 12484  0E6B  086E               	movf	_Product,w
 12485  0E6C  3E17               	addlw	23
 12486  0E6D  0086               	movwf	6
 12487  0E6E  3001               	movlw	1	; select bank2/3
 12488  0E6F  0087               	movwf	7
 12489  0E70  085D               	movf	??_Flash_Memory_Initialization,w
 12490  0E71  0081               	movwf	1
 12491                           
 12492                           ;MCU_B1.c: 825: if(Product->Data[12]==0xff && Product->Data[13]==0xff && Product->Data[1
      +                          4]==0xff)
 12493  0E72  086E               	movf	_Product,w
 12494  0E73  3E0C               	addlw	12
 12495  0E74  0086               	movwf	6
 12496  0E75  3001               	movlw	1	; select bank2/3
 12497  0E76  0087               	movwf	7
 12498  0E77  0801               	movf	1,w
 12499  0E78  3AFF               	xorlw	255
 12500  0E79  1D03               	skipz
 12501  0E7A  0008               	return
 12502  0E7B  086E               	movf	_Product,w
 12503  0E7C  3E0D               	addlw	13
 12504  0E7D  0086               	movwf	6
 12505  0E7E  3001               	movlw	1	; select bank2/3
 12506  0E7F  0087               	movwf	7
 12507  0E80  0801               	movf	1,w
 12508  0E81  3AFF               	xorlw	255
 12509  0E82  1D03               	skipz
 12510  0E83  0008               	return
 12511  0E84  086E               	movf	_Product,w
 12512  0E85  3E0E               	addlw	14
 12513  0E86  0086               	movwf	6
 12514  0E87  3001               	movlw	1	; select bank2/3
 12515  0E88  0087               	movwf	7
 12516  0E89  0801               	movf	1,w
 12517  0E8A  3AFF               	xorlw	255
 12518  0E8B  1D03               	skipz
 12519  0E8C  0008               	return
 12520                           
 12521                           ;MCU_B1.c: 826: {
 12522                           ;MCU_B1.c: 827: TMain->FirstOpen=1;
 12523  0E8D  086F               	movf	_TMain,w
 12524  0E8E  0086               	movwf	6
 12525  0E8F  3001               	movlw	1	; select bank2/3
 12526  0E90  0087               	movwf	7
 12527  0E91  1681               	bsf	1,5
 12528                           
 12529                           ;MCU_B1.c: 828: TMain->First=1;
 12530  0E92  086F               	movf	_TMain,w
 12531  0E93  3E03               	addlw	3
 12532  0E94  0086               	movwf	6
 12533  0E95  3001               	movlw	1	; select bank2/3
 12534  0E96  0087               	movwf	7
 12535  0E97  1481               	bsf	1,1
 12536                           
 12537                           ;MCU_B1.c: 829: }
 12538                           ;MCU_B1.c: 830: }
 12539  0E98  0008               	return
 12540  0E99                     l9667:	
 12541                           
 12542                           ;MCU_B1.c: 831: else
 12543                           ;MCU_B1.c: 832: {
 12544                           ;MCU_B1.c: 833: i=setPercentValue(((char)((100-55)*1.5)));
 12545  0E99  3043               	movlw	67
 12546  0E9A  3191  2189  318E   	fcall	_setPercentValue
 12547  0E9D  0020               	movlb	0	; select bank0
 12548  0E9E  00DD               	movwf	??_Flash_Memory_Initialization
 12549  0E9F  085D               	movf	??_Flash_Memory_Initialization,w
 12550  0EA0  00DE               	movwf	Flash_Memory_Initialization@i
 12551                           
 12552                           ;MCU_B1.c: 834: Memory->Data[0]=0xff;
 12553  0EA1  30FF               	movlw	255
 12554  0EA2  00DD               	movwf	??_Flash_Memory_Initialization
 12555  0EA3  086D               	movf	_Memory,w
 12556  0EA4  0086               	movwf	6
 12557  0EA5  3002               	movlw	2	; select bank4/5
 12558  0EA6  0087               	movwf	7
 12559  0EA7  085D               	movf	??_Flash_Memory_Initialization,w
 12560  0EA8  0081               	movwf	1
 12561                           
 12562                           ;MCU_B1.c: 835: Memory->Data[1]=0xff;
 12563  0EA9  30FF               	movlw	255
 12564  0EAA  00DD               	movwf	??_Flash_Memory_Initialization
 12565  0EAB  0A6D               	incf	_Memory,w
 12566  0EAC  0086               	movwf	6
 12567  0EAD  3002               	movlw	2	; select bank4/5
 12568  0EAE  0087               	movwf	7
 12569  0EAF  085D               	movf	??_Flash_Memory_Initialization,w
 12570  0EB0  0081               	movwf	1
 12571                           
 12572                           ;MCU_B1.c: 836: Memory->Data[2]=0xff;
 12573  0EB1  30FF               	movlw	255
 12574  0EB2  00DD               	movwf	??_Flash_Memory_Initialization
 12575  0EB3  086D               	movf	_Memory,w
 12576  0EB4  3E02               	addlw	2
 12577  0EB5  0086               	movwf	6
 12578  0EB6  3002               	movlw	2	; select bank4/5
 12579  0EB7  0087               	movwf	7
 12580  0EB8  085D               	movf	??_Flash_Memory_Initialization,w
 12581  0EB9  0081               	movwf	1
 12582                           
 12583                           ;MCU_B1.c: 837: Memory->Data[3]=0xff;
 12584  0EBA  30FF               	movlw	255
 12585  0EBB  00DD               	movwf	??_Flash_Memory_Initialization
 12586  0EBC  086D               	movf	_Memory,w
 12587  0EBD  3E03               	addlw	3
 12588  0EBE  0086               	movwf	6
 12589  0EBF  3002               	movlw	2	; select bank4/5
 12590  0EC0  0087               	movwf	7
 12591  0EC1  085D               	movf	??_Flash_Memory_Initialization,w
 12592  0EC2  0081               	movwf	1
 12593                           
 12594                           ;MCU_B1.c: 838: Memory->Data[4]=0xff;
 12595  0EC3  30FF               	movlw	255
 12596  0EC4  00DD               	movwf	??_Flash_Memory_Initialization
 12597  0EC5  086D               	movf	_Memory,w
 12598  0EC6  3E04               	addlw	4
 12599  0EC7  0086               	movwf	6
 12600  0EC8  3002               	movlw	2	; select bank4/5
 12601  0EC9  0087               	movwf	7
 12602  0ECA  085D               	movf	??_Flash_Memory_Initialization,w
 12603  0ECB  0081               	movwf	1
 12604                           
 12605                           ;MCU_B1.c: 839: Memory->Data[5]=0xff;
 12606  0ECC  30FF               	movlw	255
 12607  0ECD  00DD               	movwf	??_Flash_Memory_Initialization
 12608  0ECE  086D               	movf	_Memory,w
 12609  0ECF  3E05               	addlw	5
 12610  0ED0  0086               	movwf	6
 12611  0ED1  3002               	movlw	2	; select bank4/5
 12612  0ED2  0087               	movwf	7
 12613  0ED3  085D               	movf	??_Flash_Memory_Initialization,w
 12614  0ED4  0081               	movwf	1
 12615                           
 12616                           ;MCU_B1.c: 840: Memory->Data[31]=0xaa;
 12617  0ED5  30AA               	movlw	170
 12618  0ED6  00DD               	movwf	??_Flash_Memory_Initialization
 12619  0ED7  086D               	movf	_Memory,w
 12620  0ED8  3E1F               	addlw	31
 12621  0ED9  0086               	movwf	6
 12622  0EDA  3002               	movlw	2	; select bank4/5
 12623  0EDB  0087               	movwf	7
 12624  0EDC  085D               	movf	??_Flash_Memory_Initialization,w
 12625  0EDD  0081               	movwf	1
 12626                           
 12627                           ;MCU_B1.c: 841: Product->Data[21]=i;
 12628  0EDE  085E               	movf	Flash_Memory_Initialization@i,w
 12629  0EDF  00DD               	movwf	??_Flash_Memory_Initialization
 12630  0EE0  086E               	movf	_Product,w
 12631  0EE1  3E15               	addlw	21
 12632  0EE2  0086               	movwf	6
 12633  0EE3  3001               	movlw	1	; select bank2/3
 12634  0EE4  0087               	movwf	7
 12635  0EE5  085D               	movf	??_Flash_Memory_Initialization,w
 12636  0EE6  0081               	movwf	1
 12637                           
 12638                           ;MCU_B1.c: 842: Product->Data[22]=i;
 12639  0EE7  085E               	movf	Flash_Memory_Initialization@i,w
 12640  0EE8  00DD               	movwf	??_Flash_Memory_Initialization
 12641  0EE9  086E               	movf	_Product,w
 12642  0EEA  3E16               	addlw	22
 12643  0EEB  0086               	movwf	6
 12644  0EEC  3001               	movlw	1	; select bank2/3
 12645  0EED  0087               	movwf	7
 12646  0EEE  085D               	movf	??_Flash_Memory_Initialization,w
 12647  0EEF  0081               	movwf	1
 12648                           
 12649                           ;MCU_B1.c: 843: Product->Data[23]=i;
 12650  0EF0  085E               	movf	Flash_Memory_Initialization@i,w
 12651  0EF1  00DD               	movwf	??_Flash_Memory_Initialization
 12652  0EF2  086E               	movf	_Product,w
 12653  0EF3  3E17               	addlw	23
 12654  0EF4  0086               	movwf	6
 12655  0EF5  3001               	movlw	1	; select bank2/3
 12656  0EF6  0087               	movwf	7
 12657  0EF7  085D               	movf	??_Flash_Memory_Initialization,w
 12658  0EF8  0081               	movwf	1
 12659                           
 12660                           ;MCU_B1.c: 844: GIE=0;
 12661  0EF9  138B               	bcf	11,7	;volatile
 12662                           
 12663                           ;MCU_B1.c: 845: Flash_Memory_Write();
 12664  0EFA  319E  26AF         	fcall	_Flash_Memory_Write
 12665                           
 12666                           ;MCU_B1.c: 846: GIE=1;
 12667  0EFC  178B               	bsf	11,7	;volatile
 12668                           
 12669                           ;MCU_B1.c: 847: TMain->FirstOpen=1;
 12670  0EFD  0020               	movlb	0	; select bank0
 12671  0EFE  086F               	movf	_TMain,w
 12672  0EFF  0086               	movwf	6
 12673  0F00  3001               	movlw	1	; select bank2/3
 12674  0F01  0087               	movwf	7
 12675  0F02  1681               	bsf	1,5
 12676                           
 12677                           ;MCU_B1.c: 848: TMain->First=1;
 12678  0F03  086F               	movf	_TMain,w
 12679  0F04  3E03               	addlw	3
 12680  0F05  0086               	movwf	6
 12681  0F06  3001               	movlw	1	; select bank2/3
 12682  0F07  0087               	movwf	7
 12683  0F08  1481               	bsf	1,1
 12684  0F09  0008               	return
 12685  0F0A                     __end_of_Flash_Memory_Initialization:	
 12686                           
 12687                           	psect	text73
 12688  1EAF                     __ptext73:	
 12689 ;; *************** function _Flash_Memory_Write *****************
 12690 ;; Defined at:
 12691 ;;		line 896 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
 12692 ;; Parameters:    Size  Location     Type
 12693 ;;		None
 12694 ;; Auto vars:     Size  Location     Type
 12695 ;;  i               1    1[BANK0 ] unsigned char 
 12696 ;; Return value:  Size  Location     Type
 12697 ;;		None               void
 12698 ;; Registers used:
 12699 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12700 ;; Tracked objects:
 12701 ;;		On entry : 0/0
 12702 ;;		On exit  : 0/0
 12703 ;;		Unchanged: 0/0
 12704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12705 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12706 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12707 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12708 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12709 ;;Total ram usage:        2 bytes
 12710 ;; Hardware stack levels used:    1
 12711 ;; Hardware stack levels required when called:    5
 12712 ;; This function calls:
 12713 ;;		_Flash_Memory_Unlock
 12714 ;; This function is called by:
 12715 ;;		_Flash_Memory_Initialization
 12716 ;;		_Flash_Memory_Modify
 12717 ;; This function uses a non-reentrant model
 12718 ;;
 12719                           
 12720                           
 12721                           ;psect for function _Flash_Memory_Write
 12722  1EAF                     _Flash_Memory_Write:	
 12723                           
 12724                           ;MCU_B1.c: 898: char i;
 12725                           ;MCU_B1.c: 899: CFGS=0;
 12726                           
 12727                           ;incstack = 0
 12728                           ; Regs used in _Flash_Memory_Write: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12729  1EAF  0023               	movlb	3	; select bank3
 12730  1EB0  1315               	bcf	21,6	;volatile
 12731                           
 12732                           ;MCU_B1.c: 900: PMADRH=0x30;
 12733  1EB1  3030               	movlw	48
 12734  1EB2  0092               	movwf	18	;volatile
 12735                           
 12736                           ;MCU_B1.c: 901: PMDATH=0;
 12737  1EB3  0194               	clrf	20	;volatile
 12738                           
 12739                           ;MCU_B1.c: 902: FREE=0;
 12740  1EB4  1215               	bcf	21,4	;volatile
 12741                           
 12742                           ;MCU_B1.c: 903: LWLO=1;
 12743  1EB5  1695               	bsf	21,5	;volatile
 12744                           
 12745                           ;MCU_B1.c: 904: WREN=1;
 12746  1EB6  1515               	bsf	21,2	;volatile
 12747                           
 12748                           ;MCU_B1.c: 905: for(i=0 ; i<32 ; i++)
 12749  1EB7  0020               	movlb	0	; select bank0
 12750  1EB8  01A1               	clrf	Flash_Memory_Write@i
 12751  1EB9  3020               	movlw	32
 12752  1EBA  0221               	subwf	Flash_Memory_Write@i,w
 12753  1EBB  1803               	btfsc	3,0
 12754  1EBC  2ED7               	goto	l1705
 12755  1EBD                     l8839:	
 12756                           
 12757                           ;MCU_B1.c: 906: {
 12758                           ;MCU_B1.c: 907: PMADRL=i;
 12759  1EBD  0821               	movf	Flash_Memory_Write@i,w
 12760  1EBE  0023               	movlb	3	; select bank3
 12761  1EBF  0091               	movwf	17	;volatile
 12762                           
 12763                           ;MCU_B1.c: 908: PMDATL=Memory->Data[i];
 12764  1EC0  0020               	movlb	0	; select bank0
 12765  1EC1  0821               	movf	Flash_Memory_Write@i,w
 12766  1EC2  076D               	addwf	_Memory,w
 12767  1EC3  00A0               	movwf	??_Flash_Memory_Write
 12768  1EC4  0820               	movf	??_Flash_Memory_Write,w
 12769  1EC5  0086               	movwf	6
 12770  1EC6  3002               	movlw	2	; select bank4/5
 12771  1EC7  0087               	movwf	7
 12772  1EC8  0801               	movf	1,w
 12773  1EC9  0023               	movlb	3	; select bank3
 12774  1ECA  0093               	movwf	19	;volatile
 12775                           
 12776                           ;MCU_B1.c: 909: Flash_Memory_Unlock();
 12777  1ECB  3199  216D  319E   	fcall	_Flash_Memory_Unlock
 12778  1ECE  3001               	movlw	1
 12779  1ECF  0020               	movlb	0	; select bank0
 12780  1ED0  00A0               	movwf	??_Flash_Memory_Write
 12781  1ED1  0820               	movf	??_Flash_Memory_Write,w
 12782  1ED2  07A1               	addwf	Flash_Memory_Write@i,f
 12783  1ED3  3020               	movlw	32
 12784  1ED4  0221               	subwf	Flash_Memory_Write@i,w
 12785  1ED5  1C03               	skipc
 12786  1ED6  2EBD               	goto	l8839
 12787  1ED7                     l1705:	
 12788                           
 12789                           ;MCU_B1.c: 910: }
 12790                           ;MCU_B1.c: 911: LWLO=0;
 12791  1ED7  0023               	movlb	3	; select bank3
 12792  1ED8  1295               	bcf	21,5	;volatile
 12793                           
 12794                           ;MCU_B1.c: 912: Flash_Memory_Unlock();
 12795  1ED9  3199  216D         	fcall	_Flash_Memory_Unlock
 12796                           
 12797                           ;MCU_B1.c: 913: WREN=0;
 12798  1EDB  0023               	movlb	3	; select bank3
 12799  1EDC  1115               	bcf	21,2	;volatile
 12800  1EDD  0008               	return
 12801  1EDE                     __end_of_Flash_Memory_Write:	
 12802                           
 12803                           	psect	text74
 12804  196D                     __ptext74:	
 12805 ;; *************** function _Flash_Memory_Unlock *****************
 12806 ;; Defined at:
 12807 ;;		line 875 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
 12808 ;; Parameters:    Size  Location     Type
 12809 ;;		None
 12810 ;; Auto vars:     Size  Location     Type
 12811 ;;		None
 12812 ;; Return value:  Size  Location     Type
 12813 ;;		None               void
 12814 ;; Registers used:
 12815 ;;		wreg
 12816 ;; Tracked objects:
 12817 ;;		On entry : 0/0
 12818 ;;		On exit  : 0/0
 12819 ;;		Unchanged: 0/0
 12820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12821 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12822 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12823 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12824 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12825 ;;Total ram usage:        0 bytes
 12826 ;; Hardware stack levels used:    1
 12827 ;; Hardware stack levels required when called:    4
 12828 ;; This function calls:
 12829 ;;		Nothing
 12830 ;; This function is called by:
 12831 ;;		_Flash_Memory_Write
 12832 ;;		_Flash_Memory_Erasing
 12833 ;; This function uses a non-reentrant model
 12834 ;;
 12835                           
 12836                           
 12837                           ;psect for function _Flash_Memory_Unlock
 12838  196D                     _Flash_Memory_Unlock:	
 12839                           
 12840                           ;MCU_B1.c: 877: PMCON2=0x55;
 12841                           
 12842                           ;incstack = 0
 12843                           ; Regs used in _Flash_Memory_Unlock: [wreg]
 12844  196D  3055               	movlw	85
 12845  196E  0023               	movlb	3	; select bank3
 12846  196F  0096               	movwf	22	;volatile
 12847                           
 12848                           ;MCU_B1.c: 878: PMCON2=0xaa;
 12849  1970  30AA               	movlw	170
 12850  1971  0096               	movwf	22	;volatile
 12851                           
 12852                           ;MCU_B1.c: 879: WR=1;
 12853  1972  1495               	bsf	21,1	;volatile
 12854                           
 12855                           ;MCU_B1.c: 880: __nop();
 12856  1973  0000               	nop
 12857                           
 12858                           ;MCU_B1.c: 881: __nop();
 12859  1974  0000               	nop
 12860  1975  0008               	return
 12861  1976                     __end_of_Flash_Memory_Unlock:	
 12862                           
 12863                           	psect	text75
 12864  1C00                     __ptext75:	
 12865 ;; *************** function _Flash_Memory_Read *****************
 12866 ;; Defined at:
 12867 ;;		line 884 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
 12868 ;; Parameters:    Size  Location     Type
 12869 ;;  address         1    wreg     unsigned char 
 12870 ;; Auto vars:     Size  Location     Type
 12871 ;;  address         1    2[BANK0 ] unsigned char 
 12872 ;;  ret             1    3[BANK0 ] unsigned char 
 12873 ;;  i               1    1[BANK0 ] unsigned char 
 12874 ;; Return value:  Size  Location     Type
 12875 ;;                  1    wreg      unsigned char 
 12876 ;; Registers used:
 12877 ;;		wreg, status,2
 12878 ;; Tracked objects:
 12879 ;;		On entry : 0/0
 12880 ;;		On exit  : 0/0
 12881 ;;		Unchanged: 0/0
 12882 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12884 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12885 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12886 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12887 ;;Total ram usage:        4 bytes
 12888 ;; Hardware stack levels used:    1
 12889 ;; Hardware stack levels required when called:    4
 12890 ;; This function calls:
 12891 ;;		Nothing
 12892 ;; This function is called by:
 12893 ;;		_Flash_Memory_Initialization
 12894 ;;		_Flash_Memory_Modify
 12895 ;; This function uses a non-reentrant model
 12896 ;;
 12897                           
 12898                           
 12899                           ;psect for function _Flash_Memory_Read
 12900  1C00                     _Flash_Memory_Read:	
 12901                           
 12902                           ;incstack = 0
 12903                           ; Regs used in _Flash_Memory_Read: [wreg+status,2]
 12904                           ;Flash_Memory_Read@address stored from wreg
 12905  1C00  0020               	movlb	0	; select bank0
 12906  1C01  00A2               	movwf	Flash_Memory_Read@address
 12907                           
 12908                           ;MCU_B1.c: 886: char i,ret=0;
 12909  1C02  01A3               	clrf	Flash_Memory_Read@ret
 12910                           
 12911                           ;MCU_B1.c: 887: PMADRH=0x30;
 12912  1C03  3030               	movlw	48
 12913  1C04  0023               	movlb	3	; select bank3
 12914  1C05  0092               	movwf	18	;volatile
 12915                           
 12916                           ;MCU_B1.c: 888: PMADRL=address;
 12917  1C06  0020               	movlb	0	; select bank0
 12918  1C07  0822               	movf	Flash_Memory_Read@address,w
 12919  1C08  0023               	movlb	3	; select bank3
 12920  1C09  0091               	movwf	17	;volatile
 12921                           
 12922                           ;MCU_B1.c: 889: CFGS=0;
 12923  1C0A  1315               	bcf	21,6	;volatile
 12924                           
 12925                           ;MCU_B1.c: 890: RD=1;
 12926  1C0B  1415               	bsf	21,0	;volatile
 12927                           
 12928                           ;MCU_B1.c: 891: i=PMDATH;
 12929  1C0C  0814               	movf	20,w	;volatile
 12930  1C0D  0020               	movlb	0	; select bank0
 12931  1C0E  00A0               	movwf	??_Flash_Memory_Read
 12932  1C0F  0820               	movf	??_Flash_Memory_Read,w
 12933  1C10  00A1               	movwf	Flash_Memory_Read@i
 12934                           
 12935                           ;MCU_B1.c: 892: ret=PMDATL;
 12936  1C11  0023               	movlb	3	; select bank3
 12937  1C12  0813               	movf	19,w	;volatile
 12938  1C13  0020               	movlb	0	; select bank0
 12939  1C14  00A0               	movwf	??_Flash_Memory_Read
 12940  1C15  0820               	movf	??_Flash_Memory_Read,w
 12941  1C16  00A3               	movwf	Flash_Memory_Read@ret
 12942                           
 12943                           ;MCU_B1.c: 893: return ret;
 12944  1C17  0823               	movf	Flash_Memory_Read@ret,w
 12945  1C18  0008               	return
 12946  1C19                     __end_of_Flash_Memory_Read:	
 12947                           
 12948                           	psect	text76
 12949  19AA                     __ptext76:	
 12950 ;; *************** function _DimmerLights_Main *****************
 12951 ;; Defined at:
 12952 ;;		line 114 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 12953 ;; Parameters:    Size  Location     Type
 12954 ;;		None
 12955 ;; Auto vars:     Size  Location     Type
 12956 ;;		None
 12957 ;; Return value:  Size  Location     Type
 12958 ;;		None               void
 12959 ;; Registers used:
 12960 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12961 ;; Tracked objects:
 12962 ;;		On entry : 0/0
 12963 ;;		On exit  : 0/0
 12964 ;;		Unchanged: 0/0
 12965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12966 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12967 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12969 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12970 ;;Total ram usage:        0 bytes
 12971 ;; Hardware stack levels used:    1
 12972 ;; Hardware stack levels required when called:   10
 12973 ;; This function calls:
 12974 ;;		_DimmerLights_Close
 12975 ;;		_setDimmerLights_Main
 12976 ;; This function is called by:
 12977 ;;		_main
 12978 ;; This function uses a non-reentrant model
 12979 ;;
 12980                           
 12981                           
 12982                           ;psect for function _DimmerLights_Main
 12983  19AA                     _DimmerLights_Main:	
 12984                           
 12985                           ;Dimmer_B1.c: 117: setDimmerLights_Main(1);
 12986                           
 12987                           ;incstack = 0
 12988                           ; Regs used in _DimmerLights_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12989  19AA  3001               	movlw	1
 12990  19AB  3188  20DC  3199   	fcall	_setDimmerLights_Main
 12991                           
 12992                           ;Dimmer_B1.c: 121: setDimmerLights_Main(2);
 12993  19AE  3002               	movlw	2
 12994  19AF  3188  20DC  3199   	fcall	_setDimmerLights_Main
 12995                           
 12996                           ;Dimmer_B1.c: 128: DimmerLights_Close();
 12997  19B2  319B  23B6         	fcall	_DimmerLights_Close
 12998  19B4  0008               	return
 12999  19B5                     __end_of_DimmerLights_Main:	
 13000                           
 13001                           	psect	text77
 13002  08DC                     __ptext77:	
 13003 ;; *************** function _setDimmerLights_Main *****************
 13004 ;; Defined at:
 13005 ;;		line 131 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 13006 ;; Parameters:    Size  Location     Type
 13007 ;;  lights          1    wreg     unsigned char 
 13008 ;; Auto vars:     Size  Location     Type
 13009 ;;  lights          1   70[BANK0 ] unsigned char 
 13010 ;;  clear           1   69[BANK0 ] unsigned char 
 13011 ;; Return value:  Size  Location     Type
 13012 ;;		None               void
 13013 ;; Registers used:
 13014 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13015 ;; Tracked objects:
 13016 ;;		On entry : 0/0
 13017 ;;		On exit  : 0/0
 13018 ;;		Unchanged: 0/0
 13019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13020 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13021 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13023 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13024 ;;Total ram usage:        2 bytes
 13025 ;; Hardware stack levels used:    1
 13026 ;; Hardware stack levels required when called:    9
 13027 ;; This function calls:
 13028 ;;		_DimmerLightsPointSelect
 13029 ;;		_setBuz
 13030 ;;		_setDimmerLights
 13031 ;;		_setDimmerLights_Adj
 13032 ;; This function is called by:
 13033 ;;		_DimmerLights_Main
 13034 ;; This function uses a non-reentrant model
 13035 ;;
 13036                           
 13037                           
 13038                           ;psect for function _setDimmerLights_Main
 13039  08DC                     _setDimmerLights_Main:	
 13040                           
 13041                           ;incstack = 0
 13042                           ; Regs used in _setDimmerLights_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13043                           ;setDimmerLights_Main@lights stored from wreg
 13044  08DC  0020               	movlb	0	; select bank0
 13045  08DD  00E6               	movwf	setDimmerLights_Main@lights
 13046                           
 13047                           ;Dimmer_B1.c: 133: char clear=1;
 13048  08DE  01E5               	clrf	setDimmerLights_Main@clear
 13049  08DF  0AE5               	incf	setDimmerLights_Main@clear,f
 13050                           
 13051                           ;Dimmer_B1.c: 134: DimmerLightsPointSelect(lights);
 13052  08E0  0866               	movf	setDimmerLights_Main@lights,w
 13053  08E1  319A  22E5  3188   	fcall	_DimmerLightsPointSelect
 13054                           
 13055                           ;Dimmer_B1.c: 152: if(lights == 1)
 13056  08E4  0020               	movlb	0	; select bank0
 13057  08E5  0866               	movf	setDimmerLights_Main@lights,w
 13058  08E6  3A01               	xorlw	1
 13059  08E7  1D03               	skipz
 13060  08E8  28EB               	goto	l9145
 13061                           
 13062                           ;Dimmer_B1.c: 153: {
 13063                           ;Dimmer_B1.c: 154: clear=(!DimmerLights22->Clear)?0:1;
 13064  08E9  086C               	movf	_DimmerLights22,w
 13065  08EA  28F0               	goto	L13
 13066  08EB                     l9145:	
 13067                           ;Dimmer_B1.c: 155: }
 13068                           
 13069                           
 13070                           ;Dimmer_B1.c: 156: else if(lights == 2)
 13071  08EB  0866               	movf	setDimmerLights_Main@lights,w
 13072  08EC  3A02               	xorlw	2
 13073  08ED  1D03               	skipz
 13074  08EE  28F8               	goto	l9149
 13075                           
 13076                           ;Dimmer_B1.c: 157: {
 13077                           ;Dimmer_B1.c: 158: clear=(!DimmerLights11->Clear)?0:1;
 13078  08EF  086B               	movf	_DimmerLights11,w
 13079  08F0                     L13:	
 13080  08F0  3E0C               	addlw	12
 13081  08F1  0086               	movwf	6
 13082  08F2  3001               	movlw	1	; select bank2/3
 13083  08F3  0087               	movwf	7
 13084  08F4  3000               	movlw	0
 13085  08F5  1801               	btfsc	1,0
 13086  08F6  3001               	movlw	1
 13087  08F7  00E5               	movwf	setDimmerLights_Main@clear
 13088  08F8                     l9149:	
 13089                           
 13090                           ;Dimmer_B1.c: 159: }
 13091                           ;Dimmer_B1.c: 162: if(DimmerLights->Trigger)
 13092  08F8  086A               	movf	_DimmerLights,w
 13093  08F9  3E09               	addlw	9
 13094  08FA  0086               	movwf	6
 13095  08FB  3001               	movlw	1	; select bank2/3
 13096  08FC  0087               	movwf	7
 13097  08FD  1C81               	btfss	1,1
 13098  08FE  2923               	goto	l9163
 13099                           
 13100                           ;Dimmer_B1.c: 163: {
 13101                           ;Dimmer_B1.c: 164: if(clear)
 13102  08FF  0865               	movf	setDimmerLights_Main@clear,w
 13103  0900  1903               	btfsc	3,2
 13104  0901  0008               	return
 13105                           
 13106                           ;Dimmer_B1.c: 165: {
 13107                           ;Dimmer_B1.c: 166: if(DimmerLights->Switch)
 13108  0902  086A               	movf	_DimmerLights,w
 13109  0903  3E09               	addlw	9
 13110  0904  0086               	movwf	6
 13111  0905  3001               	movlw	1	; select bank2/3
 13112  0906  0087               	movwf	7
 13113  0907  1C01               	btfss	1,0
 13114  0908  2916               	goto	l9159
 13115                           
 13116                           ;Dimmer_B1.c: 167: {
 13117                           ;Dimmer_B1.c: 168: DimmerLights->Trigger=0;
 13118  0909  086A               	movf	_DimmerLights,w
 13119  090A  3E09               	addlw	9
 13120  090B  0086               	movwf	6
 13121  090C  3001               	movlw	1	; select bank2/3
 13122  090D  0087               	movwf	7
 13123  090E  1081               	bcf	1,1
 13124                           
 13125                           ;Dimmer_B1.c: 169: setDimmerLights(lights,1);
 13126  090F  01A4               	clrf	setDimmerLights@status
 13127  0910  0AA4               	incf	setDimmerLights@status,f
 13128  0911  0866               	movf	setDimmerLights_Main@lights,w
 13129  0912  3189  21DE         	fcall	_setDimmerLights
 13130                           
 13131                           ;Dimmer_B1.c: 174: }
 13132  0914  0020               	movlb	0	; select bank0
 13133  0915  0008               	return
 13134  0916                     l9159:	
 13135                           
 13136                           ;Dimmer_B1.c: 175: else
 13137                           ;Dimmer_B1.c: 176: {
 13138                           ;Dimmer_B1.c: 177: DimmerLights->Trigger=0;
 13139  0916  0020               	movlb	0	; select bank0
 13140  0917  086A               	movf	_DimmerLights,w
 13141  0918  3E09               	addlw	9
 13142  0919  0086               	movwf	6
 13143  091A  3001               	movlw	1	; select bank2/3
 13144  091B  0087               	movwf	7
 13145  091C  1081               	bcf	1,1
 13146                           
 13147                           ;Dimmer_B1.c: 178: setDimmerLights(lights,0);
 13148  091D  01A4               	clrf	setDimmerLights@status
 13149  091E  0866               	movf	setDimmerLights_Main@lights,w
 13150  091F  3189  21DE         	fcall	_setDimmerLights
 13151  0921  0020               	movlb	0	; select bank0
 13152  0922  0008               	return
 13153  0923                     l9163:	
 13154                           ;Dimmer_B1.c: 183: }
 13155                           ;Dimmer_B1.c: 184: }
 13156                           ;Dimmer_B1.c: 185: }
 13157                           
 13158                           
 13159                           ;Dimmer_B1.c: 186: else
 13160                           ;Dimmer_B1.c: 187: {
 13161                           ;Dimmer_B1.c: 188: if(DimmerLights->TriggerAdj)
 13162  0923  0020               	movlb	0	; select bank0
 13163  0924  086A               	movf	_DimmerLights,w
 13164  0925  3E09               	addlw	9
 13165  0926  0086               	movwf	6
 13166  0927  3001               	movlw	1	; select bank2/3
 13167  0928  0087               	movwf	7
 13168  0929  1D81               	btfss	1,3
 13169  092A  0008               	return
 13170                           
 13171                           ;Dimmer_B1.c: 189: {
 13172                           ;Dimmer_B1.c: 190: if(clear)
 13173  092B  0865               	movf	setDimmerLights_Main@clear,w
 13174  092C  1903               	btfsc	3,2
 13175  092D  0008               	return
 13176                           
 13177                           ;Dimmer_B1.c: 191: {
 13178                           ;Dimmer_B1.c: 192: DimmerLightsPointSelect(lights);
 13179  092E  0866               	movf	setDimmerLights_Main@lights,w
 13180  092F  319A  22E5  3188   	fcall	_DimmerLightsPointSelect
 13181                           
 13182                           ;Dimmer_B1.c: 193: DimmerLights->TriggerAdj=0;
 13183  0932  0020               	movlb	0	; select bank0
 13184  0933  086A               	movf	_DimmerLights,w
 13185  0934  3E09               	addlw	9
 13186  0935  0086               	movwf	6
 13187  0936  3001               	movlw	1	; select bank2/3
 13188  0937  0087               	movwf	7
 13189  0938  1181               	bcf	1,3
 13190                           
 13191                           ;Dimmer_B1.c: 194: if(DimmerLights->AdjGo)
 13192  0939  086A               	movf	_DimmerLights,w
 13193  093A  3E09               	addlw	9
 13194  093B  0086               	movwf	6
 13195  093C  3001               	movlw	1	; select bank2/3
 13196  093D  0087               	movwf	7
 13197  093E  1D01               	btfss	1,2
 13198  093F  2950               	goto	l9175
 13199                           
 13200                           ;Dimmer_B1.c: 195: {
 13201                           ;Dimmer_B1.c: 196: setDimmerLights_Adj(lights,1);
 13202  0940  01E2               	clrf	setDimmerLights_Adj@status
 13203  0941  0AE2               	incf	setDimmerLights_Adj@status,f
 13204  0942  0866               	movf	setDimmerLights_Main@lights,w
 13205  0943  319F  2743  3188   	fcall	_setDimmerLights_Adj
 13206                           
 13207                           ;Dimmer_B1.c: 197: setBuz(1,100);
 13208  0946  3064               	movlw	100
 13209  0947  0020               	movlb	0	; select bank0
 13210  0948  00A6               	movwf	setBuz@time
 13211  0949  3000               	movlw	0
 13212  094A  00A7               	movwf	setBuz@time+1
 13213  094B  3001               	movlw	1
 13214  094C  3197  2789         	fcall	_setBuz
 13215                           
 13216                           ;Dimmer_B1.c: 198: }
 13217  094E  0020               	movlb	0	; select bank0
 13218  094F  0008               	return
 13219  0950                     l9175:	
 13220                           
 13221                           ;Dimmer_B1.c: 199: else
 13222                           ;Dimmer_B1.c: 200: {
 13223                           ;Dimmer_B1.c: 201: setDimmerLights_Adj(lights,0);
 13224  0950  0020               	movlb	0	; select bank0
 13225  0951  01E2               	clrf	setDimmerLights_Adj@status
 13226  0952  0866               	movf	setDimmerLights_Main@lights,w
 13227  0953  319F  2743         	fcall	_setDimmerLights_Adj
 13228  0955  0020               	movlb	0	; select bank0
 13229  0956  0008               	return
 13230  0957                     __end_of_setDimmerLights_Main:	
 13231                           
 13232                           	psect	text78
 13233  1F43                     __ptext78:	
 13234 ;; *************** function _setDimmerLights_Adj *****************
 13235 ;; Defined at:
 13236 ;;		line 388 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 13237 ;; Parameters:    Size  Location     Type
 13238 ;;  lights          1    wreg     unsigned char 
 13239 ;;  status          1   66[BANK0 ] unsigned char 
 13240 ;; Auto vars:     Size  Location     Type
 13241 ;;  lights          1   68[BANK0 ] unsigned char 
 13242 ;; Return value:  Size  Location     Type
 13243 ;;		None               void
 13244 ;; Registers used:
 13245 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13246 ;; Tracked objects:
 13247 ;;		On entry : 0/0
 13248 ;;		On exit  : 0/0
 13249 ;;		Unchanged: 0/0
 13250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13251 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13252 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13253 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13254 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13255 ;;Total ram usage:        3 bytes
 13256 ;; Hardware stack levels used:    1
 13257 ;; Hardware stack levels required when called:    8
 13258 ;; This function calls:
 13259 ;;		_DimmerLightsPointSelect
 13260 ;;		_setRF_DimmerLights
 13261 ;;		_setTxData
 13262 ;; This function is called by:
 13263 ;;		_setDimmerLights_Main
 13264 ;; This function uses a non-reentrant model
 13265 ;;
 13266                           
 13267                           
 13268                           ;psect for function _setDimmerLights_Adj
 13269  1F43                     _setDimmerLights_Adj:	
 13270                           
 13271                           ;incstack = 0
 13272                           ; Regs used in _setDimmerLights_Adj: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13273                           ;setDimmerLights_Adj@lights stored from wreg
 13274  1F43  0020               	movlb	0	; select bank0
 13275  1F44  00E4               	movwf	setDimmerLights_Adj@lights
 13276                           
 13277                           ;Dimmer_B1.c: 390: DimmerLightsPointSelect(lights);
 13278  1F45  0864               	movf	setDimmerLights_Adj@lights,w
 13279  1F46  319A  22E5  319F   	fcall	_DimmerLightsPointSelect
 13280                           
 13281                           ;Dimmer_B1.c: 391: if(status)
 13282  1F49  0020               	movlb	0	; select bank0
 13283  1F4A  0862               	movf	setDimmerLights_Adj@status,w
 13284  1F4B  1903               	btfsc	3,2
 13285  1F4C  2F58               	goto	l8797
 13286                           
 13287                           ;Dimmer_B1.c: 392: {
 13288                           ;Dimmer_B1.c: 393: DimmerLights->AdjFlag=1;
 13289  1F4D  086A               	movf	_DimmerLights,w
 13290  1F4E  0086               	movwf	6
 13291  1F4F  3001               	movlw	1	; select bank2/3
 13292  1F50  0087               	movwf	7
 13293  1F51  1581               	bsf	1,3
 13294                           
 13295                           ;Dimmer_B1.c: 394: DimmerLights->Signal=1;
 13296  1F52  086A               	movf	_DimmerLights,w
 13297  1F53  0086               	movwf	6
 13298  1F54  3001               	movlw	1	; select bank2/3
 13299  1F55  0087               	movwf	7
 13300  1F56  1481               	bsf	1,1
 13301                           
 13302                           ;Dimmer_B1.c: 395: }
 13303  1F57  0008               	return
 13304  1F58                     l8797:	
 13305                           
 13306                           ;Dimmer_B1.c: 396: else
 13307                           ;Dimmer_B1.c: 397: {
 13308                           ;Dimmer_B1.c: 398: if(DimmerLights->AdjFlag)
 13309  1F58  086A               	movf	_DimmerLights,w
 13310  1F59  0086               	movwf	6
 13311  1F5A  3001               	movlw	1	; select bank2/3
 13312  1F5B  0087               	movwf	7
 13313  1F5C  1D81               	btfss	1,3
 13314  1F5D  0008               	return
 13315                           
 13316                           ;Dimmer_B1.c: 399: {
 13317                           ;Dimmer_B1.c: 400: DimmerLights->Signal=0;
 13318  1F5E  086A               	movf	_DimmerLights,w
 13319  1F5F  0086               	movwf	6
 13320  1F60  3001               	movlw	1	; select bank2/3
 13321  1F61  0087               	movwf	7
 13322  1F62  1081               	bcf	1,1
 13323                           
 13324                           ;Dimmer_B1.c: 401: DimmerLights->AdjFlag=0;
 13325  1F63  086A               	movf	_DimmerLights,w
 13326  1F64  0086               	movwf	6
 13327  1F65  3001               	movlw	1	; select bank2/3
 13328  1F66  0087               	movwf	7
 13329  1F67  1181               	bcf	1,3
 13330                           
 13331                           ;Dimmer_B1.c: 402: ;;
 13332                           ;Dimmer_B1.c: 403: DimmerLights->MaxmumValue=DimmerLights->DimmingValue;
 13333  1F68  086A               	movf	_DimmerLights,w
 13334  1F69  3E04               	addlw	4
 13335  1F6A  0086               	movwf	6
 13336  1F6B  3001               	movlw	1	; select bank2/3
 13337  1F6C  0087               	movwf	7
 13338  1F6D  0801               	movf	1,w
 13339  1F6E  00E3               	movwf	??_setDimmerLights_Adj
 13340  1F6F  086A               	movf	_DimmerLights,w
 13341  1F70  3E05               	addlw	5
 13342  1F71  0086               	movwf	6
 13343  1F72  3001               	movlw	1	; select bank2/3
 13344  1F73  0087               	movwf	7
 13345  1F74  0863               	movf	??_setDimmerLights_Adj,w
 13346  1F75  0081               	movwf	1
 13347                           
 13348                           ;Dimmer_B1.c: 411: setRF_DimmerLights(lights,1);
 13349  1F76  01DD               	clrf	setRF_DimmerLights@on
 13350  1F77  0ADD               	incf	setRF_DimmerLights@on,f
 13351  1F78  0864               	movf	setDimmerLights_Adj@lights,w
 13352  1F79  3195  2560  319F   	fcall	_setRF_DimmerLights
 13353                           
 13354                           ;Dimmer_B1.c: 412: setTxData(1);
 13355  1F7C  3001               	movlw	1
 13356  1F7D  3187  271C         	fcall	_setTxData
 13357  1F7F  0008               	return
 13358  1F80                     __end_of_setDimmerLights_Adj:	
 13359                           
 13360                           	psect	text79
 13361  09DE                     __ptext79:	
 13362 ;; *************** function _setDimmerLights *****************
 13363 ;; Defined at:
 13364 ;;		line 330 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 13365 ;; Parameters:    Size  Location     Type
 13366 ;;  lights          1    wreg     unsigned char 
 13367 ;;  status          1    4[BANK0 ] unsigned char 
 13368 ;; Auto vars:     Size  Location     Type
 13369 ;;  lights          1    6[BANK0 ] unsigned char 
 13370 ;; Return value:  Size  Location     Type
 13371 ;;		None               void
 13372 ;; Registers used:
 13373 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13374 ;; Tracked objects:
 13375 ;;		On entry : 0/0
 13376 ;;		On exit  : 0/0
 13377 ;;		Unchanged: 0/0
 13378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13379 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13380 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13381 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13382 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13383 ;;Total ram usage:        3 bytes
 13384 ;; Hardware stack levels used:    1
 13385 ;; Hardware stack levels required when called:    6
 13386 ;; This function calls:
 13387 ;;		_DimmerLightsPointSelect
 13388 ;;		_setLED
 13389 ;; This function is called by:
 13390 ;;		_setDimmerLights_Main
 13391 ;;		_setControl_Lights_Table
 13392 ;; This function uses a non-reentrant model
 13393 ;;
 13394                           
 13395                           
 13396                           ;psect for function _setDimmerLights
 13397  09DE                     _setDimmerLights:	
 13398                           
 13399                           ;incstack = 0
 13400                           ; Regs used in _setDimmerLights: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13401                           ;setDimmerLights@lights stored from wreg
 13402  09DE  0020               	movlb	0	; select bank0
 13403  09DF  00A6               	movwf	setDimmerLights@lights
 13404                           
 13405                           ;Dimmer_B1.c: 332: DimmerLightsPointSelect(lights);
 13406  09E0  0826               	movf	setDimmerLights@lights,w
 13407  09E1  319A  22E5  3189   	fcall	_DimmerLightsPointSelect
 13408                           
 13409                           ;Dimmer_B1.c: 333: Dimmer->Load=lights;
 13410  09E4  0020               	movlb	0	; select bank0
 13411  09E5  0826               	movf	setDimmerLights@lights,w
 13412  09E6  00A5               	movwf	??_setDimmerLights
 13413  09E7  0021               	movlb	1	; select bank1
 13414  09E8  0A38               	incf	_Dimmer^(0+128),w
 13415  09E9  0086               	movwf	6
 13416  09EA  0187               	clrf	7
 13417  09EB  0020               	movlb	0	; select bank0
 13418  09EC  0825               	movf	??_setDimmerLights,w
 13419  09ED  0081               	movwf	1
 13420                           
 13421                           ;Dimmer_B1.c: 334: if(status)
 13422  09EE  0824               	movf	setDimmerLights@status,w
 13423  09EF  1903               	btfsc	3,2
 13424  09F0  2A3B               	goto	l8487
 13425                           
 13426                           ;Dimmer_B1.c: 335: {
 13427                           ;Dimmer_B1.c: 336: DimmerLights->Status=1;
 13428  09F1  086A               	movf	_DimmerLights,w
 13429  09F2  0086               	movwf	6
 13430  09F3  3001               	movlw	1	; select bank2/3
 13431  09F4  0087               	movwf	7
 13432  09F5  1681               	bsf	1,5
 13433                           
 13434                           ;Dimmer_B1.c: 337: setLED(lights,0);
 13435  09F6  01A2               	clrf	setLED@command
 13436  09F7  0826               	movf	setDimmerLights@lights,w
 13437  09F8  3193  236C  3189   	fcall	_setLED
 13438                           
 13439                           ;Dimmer_B1.c: 339: ;;
 13440                           ;Dimmer_B1.c: 341: DimmerLights->Signal=1;
 13441  09FB  0020               	movlb	0	; select bank0
 13442  09FC  086A               	movf	_DimmerLights,w
 13443  09FD  0086               	movwf	6
 13444  09FE  3001               	movlw	1	; select bank2/3
 13445  09FF  0087               	movwf	7
 13446  0A00  1481               	bsf	1,1
 13447                           
 13448                           ;Dimmer_B1.c: 342: DimmerLights->DimmingTimeValue=3;
 13449  0A01  3003               	movlw	3
 13450  0A02  00A5               	movwf	??_setDimmerLights
 13451  0A03  086A               	movf	_DimmerLights,w
 13452  0A04  3E02               	addlw	2
 13453  0A05  0086               	movwf	6
 13454  0A06  3001               	movlw	1	; select bank2/3
 13455  0A07  0087               	movwf	7
 13456  0A08  0825               	movf	??_setDimmerLights,w
 13457  0A09  0081               	movwf	1
 13458                           
 13459                           ;Dimmer_B1.c: 344: if(!DimmerLights->StatusFlag)
 13460  0A0A  086A               	movf	_DimmerLights,w
 13461  0A0B  0086               	movwf	6
 13462  0A0C  3001               	movlw	1	; select bank2/3
 13463  0A0D  0087               	movwf	7
 13464  0A0E  1B01               	btfsc	1,6
 13465  0A0F  0008               	return
 13466                           
 13467                           ;Dimmer_B1.c: 345: {
 13468                           ;Dimmer_B1.c: 346: DimmerLights->StatusFlag=1;
 13469  0A10  086A               	movf	_DimmerLights,w
 13470  0A11  0086               	movwf	6
 13471  0A12  3001               	movlw	1	; select bank2/3
 13472  0A13  0087               	movwf	7
 13473  0A14  1701               	bsf	1,6
 13474                           
 13475                           ;Dimmer_B1.c: 347: ;;
 13476                           ;Dimmer_B1.c: 348: Memory->GO=0; if(!0) { Memory->Time=0; } ;;
 13477  0A15  086D               	movf	_Memory,w
 13478  0A16  3E22               	addlw	34
 13479  0A17  0086               	movwf	6
 13480  0A18  3002               	movlw	2	; select bank4/5
 13481  0A19  0087               	movwf	7
 13482  0A1A  1081               	bcf	1,1
 13483  0A1B  086D               	movf	_Memory,w
 13484  0A1C  3E23               	addlw	35
 13485  0A1D  0086               	movwf	6
 13486  0A1E  3002               	movlw	2	; select bank4/5
 13487  0A1F  0087               	movwf	7
 13488  0A20  3000               	movlw	0
 13489  0A21  3FC0               	movwi [0]fsr1
 13490  0A22  3FC1               	movwi [1]fsr1
 13491                           
 13492                           ;Dimmer_B1.c: 351: DimmerLights->DimmingValue=DimmerLights->MaxmumValue;
 13493  0A23  086A               	movf	_DimmerLights,w
 13494  0A24  3E05               	addlw	5
 13495  0A25  0086               	movwf	6
 13496  0A26  3001               	movlw	1	; select bank2/3
 13497  0A27  0087               	movwf	7
 13498  0A28  0801               	movf	1,w
 13499  0A29  00A5               	movwf	??_setDimmerLights
 13500  0A2A  086A               	movf	_DimmerLights,w
 13501  0A2B  3E04               	addlw	4
 13502  0A2C  0086               	movwf	6
 13503  0A2D  3001               	movlw	1	; select bank2/3
 13504  0A2E  0087               	movwf	7
 13505  0A2F  0825               	movf	??_setDimmerLights,w
 13506  0A30  0081               	movwf	1
 13507                           
 13508                           ;Dimmer_B1.c: 355: DimmerLights->DimmingValue=((char)((100-55)*1.5));
 13509  0A31  3043               	movlw	67
 13510  0A32  00A5               	movwf	??_setDimmerLights
 13511  0A33  086A               	movf	_DimmerLights,w
 13512  0A34  3E04               	addlw	4
 13513  0A35  0086               	movwf	6
 13514  0A36  3001               	movlw	1	; select bank2/3
 13515  0A37  0087               	movwf	7
 13516  0A38  0825               	movf	??_setDimmerLights,w
 13517  0A39  0081               	movwf	1
 13518                           
 13519                           ;Dimmer_B1.c: 357: }
 13520                           ;Dimmer_B1.c: 358: }
 13521  0A3A  0008               	return
 13522  0A3B                     l8487:	
 13523                           
 13524                           ;Dimmer_B1.c: 359: else
 13525                           ;Dimmer_B1.c: 360: {
 13526                           ;Dimmer_B1.c: 361: DimmerLights->Status=0;
 13527  0A3B  086A               	movf	_DimmerLights,w
 13528  0A3C  0086               	movwf	6
 13529  0A3D  3001               	movlw	1	; select bank2/3
 13530  0A3E  0087               	movwf	7
 13531  0A3F  1281               	bcf	1,5
 13532                           
 13533                           ;Dimmer_B1.c: 363: DimmerLights->DimmingValue=DimmerLights->MinimumValue;
 13534  0A40  086A               	movf	_DimmerLights,w
 13535  0A41  3E06               	addlw	6
 13536  0A42  0086               	movwf	6
 13537  0A43  3001               	movlw	1	; select bank2/3
 13538  0A44  0087               	movwf	7
 13539  0A45  0801               	movf	1,w
 13540  0A46  00A5               	movwf	??_setDimmerLights
 13541  0A47  086A               	movf	_DimmerLights,w
 13542  0A48  3E04               	addlw	4
 13543  0A49  0086               	movwf	6
 13544  0A4A  3001               	movlw	1	; select bank2/3
 13545  0A4B  0087               	movwf	7
 13546  0A4C  0825               	movf	??_setDimmerLights,w
 13547  0A4D  0081               	movwf	1
 13548                           
 13549                           ;Dimmer_B1.c: 370: DimmerLights->Signal=1;
 13550  0A4E  086A               	movf	_DimmerLights,w
 13551  0A4F  0086               	movwf	6
 13552  0A50  3001               	movlw	1	; select bank2/3
 13553  0A51  0087               	movwf	7
 13554  0A52  1481               	bsf	1,1
 13555                           
 13556                           ;Dimmer_B1.c: 371: DimmerLights->AdjFlag=0;
 13557  0A53  086A               	movf	_DimmerLights,w
 13558  0A54  0086               	movwf	6
 13559  0A55  3001               	movlw	1	; select bank2/3
 13560  0A56  0087               	movwf	7
 13561  0A57  1181               	bcf	1,3
 13562                           
 13563                           ;Dimmer_B1.c: 372: DimmerLights->AdjStatus=0;
 13564  0A58  086A               	movf	_DimmerLights,w
 13565  0A59  0086               	movwf	6
 13566  0A5A  3001               	movlw	1	; select bank2/3
 13567  0A5B  0087               	movwf	7
 13568  0A5C  1201               	bcf	1,4
 13569                           
 13570                           ;Dimmer_B1.c: 373: DimmerLights->DimmingTimeValue=3;
 13571  0A5D  3003               	movlw	3
 13572  0A5E  00A5               	movwf	??_setDimmerLights
 13573  0A5F  086A               	movf	_DimmerLights,w
 13574  0A60  3E02               	addlw	2
 13575  0A61  0086               	movwf	6
 13576  0A62  3001               	movlw	1	; select bank2/3
 13577  0A63  0087               	movwf	7
 13578  0A64  0825               	movf	??_setDimmerLights,w
 13579  0A65  0081               	movwf	1
 13580  0A66  0008               	return
 13581  0A67                     __end_of_setDimmerLights:	
 13582                           
 13583                           	psect	text80
 13584  136C                     __ptext80:	
 13585 ;; *************** function _setLED *****************
 13586 ;; Defined at:
 13587 ;;		line 74 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\LED_B1.c"
 13588 ;; Parameters:    Size  Location     Type
 13589 ;;  led             1    wreg     unsigned char 
 13590 ;;  command         1    2[BANK0 ] unsigned char 
 13591 ;; Auto vars:     Size  Location     Type
 13592 ;;  led             1    3[BANK0 ] unsigned char 
 13593 ;; Return value:  Size  Location     Type
 13594 ;;		None               void
 13595 ;; Registers used:
 13596 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13597 ;; Tracked objects:
 13598 ;;		On entry : 0/0
 13599 ;;		On exit  : 0/0
 13600 ;;		Unchanged: 0/0
 13601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13602 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13603 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13605 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13606 ;;Total ram usage:        2 bytes
 13607 ;; Hardware stack levels used:    1
 13608 ;; Hardware stack levels required when called:    5
 13609 ;; This function calls:
 13610 ;;		_LedPointSelect
 13611 ;; This function is called by:
 13612 ;;		_setDimmerLights_ERROR
 13613 ;;		_setDimmerLights
 13614 ;;		_setLED_Initialization
 13615 ;;		_setOverTemp_Exceptions
 13616 ;;		_setPowerFault_Exceptions
 13617 ;;		_setSw_Initialization
 13618 ;; This function uses a non-reentrant model
 13619 ;;
 13620                           
 13621                           
 13622                           ;psect for function _setLED
 13623  136C                     _setLED:	
 13624                           
 13625                           ;incstack = 0
 13626                           ; Regs used in _setLED: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13627                           ;setLED@led stored from wreg
 13628  136C  0020               	movlb	0	; select bank0
 13629  136D  00A3               	movwf	setLED@led
 13630                           
 13631                           ;LED_B1.c: 76: LedPointSelect(led);
 13632  136E  0823               	movf	setLED@led,w
 13633  136F  319D  251E  3193   	fcall	_LedPointSelect
 13634                           
 13635                           ;LED_B1.c: 77: if(command == 0)
 13636  1372  0020               	movlb	0	; select bank0
 13637  1373  08A2               	movf	setLED@command,f
 13638  1374  1D03               	skipz
 13639  1375  2B88               	goto	l8373
 13640                           
 13641                           ;LED_B1.c: 78: {
 13642                           ;LED_B1.c: 80: if(led == 1)
 13643  1376  0823               	movf	setLED@led,w
 13644  1377  3A01               	xorlw	1
 13645  1378  1D03               	skipz
 13646  1379  2B7C               	goto	l8365
 13647                           
 13648                           ;LED_B1.c: 81: {
 13649                           ;LED_B1.c: 85: RA3=1;
 13650  137A  158C               	bsf	12,3	;volatile
 13651                           
 13652                           ;LED_B1.c: 87: }
 13653  137B  0008               	return
 13654  137C                     l8365:	
 13655                           
 13656                           ;LED_B1.c: 90: else if(led == 2)
 13657  137C  0823               	movf	setLED@led,w
 13658  137D  3A02               	xorlw	2
 13659  137E  1D03               	skipz
 13660  137F  2B82               	goto	l8369
 13661                           
 13662                           ;LED_B1.c: 91: {
 13663                           ;LED_B1.c: 95: RC7=1;
 13664  1380  178E               	bsf	14,7	;volatile
 13665                           
 13666                           ;LED_B1.c: 97: }
 13667  1381  0008               	return
 13668  1382                     l8369:	
 13669                           
 13670                           ;LED_B1.c: 110: else if(led == 99)
 13671  1382  0823               	movf	setLED@led,w
 13672  1383  3A63               	xorlw	99
 13673  1384  1D03               	skipz
 13674  1385  0008               	return
 13675                           
 13676                           ;LED_B1.c: 111: {
 13677                           ;LED_B1.c: 115: RB5=1;
 13678  1386  168D               	bsf	13,5	;volatile
 13679                           
 13680                           ;LED_B1.c: 117: }
 13681                           ;LED_B1.c: 119: }
 13682  1387  0008               	return
 13683  1388                     l8373:	
 13684                           
 13685                           ;LED_B1.c: 120: else if(command == 1)
 13686  1388  0822               	movf	setLED@command,w
 13687  1389  3A01               	xorlw	1
 13688  138A  1D03               	skipz
 13689  138B  2B9E               	goto	l8387
 13690                           
 13691                           ;LED_B1.c: 121: {
 13692                           ;LED_B1.c: 123: if(led == 1)
 13693  138C  0823               	movf	setLED@led,w
 13694  138D  3A01               	xorlw	1
 13695  138E  1D03               	skipz
 13696  138F  2B92               	goto	l8379
 13697                           
 13698                           ;LED_B1.c: 124: {
 13699                           ;LED_B1.c: 128: RA3=0;
 13700  1390  118C               	bcf	12,3	;volatile
 13701                           
 13702                           ;LED_B1.c: 130: }
 13703  1391  0008               	return
 13704  1392                     l8379:	
 13705                           
 13706                           ;LED_B1.c: 133: else if(led == 2)
 13707  1392  0823               	movf	setLED@led,w
 13708  1393  3A02               	xorlw	2
 13709  1394  1D03               	skipz
 13710  1395  2B98               	goto	l8383
 13711                           
 13712                           ;LED_B1.c: 134: {
 13713                           ;LED_B1.c: 138: RC7=0;
 13714  1396  138E               	bcf	14,7	;volatile
 13715                           
 13716                           ;LED_B1.c: 140: }
 13717  1397  0008               	return
 13718  1398                     l8383:	
 13719                           
 13720                           ;LED_B1.c: 153: else if(led == 99)
 13721  1398  0823               	movf	setLED@led,w
 13722  1399  3A63               	xorlw	99
 13723  139A  1D03               	skipz
 13724  139B  0008               	return
 13725                           
 13726                           ;LED_B1.c: 154: {
 13727                           ;LED_B1.c: 158: RB5=0;
 13728  139C  128D               	bcf	13,5	;volatile
 13729                           
 13730                           ;LED_B1.c: 160: }
 13731                           ;LED_B1.c: 162: }
 13732  139D  0008               	return
 13733  139E                     l8387:	
 13734                           
 13735                           ;LED_B1.c: 163: else if(command == 10)
 13736  139E  0822               	movf	setLED@command,w
 13737  139F  3A0A               	xorlw	10
 13738  13A0  1D03               	skipz
 13739  13A1  2BC0               	goto	l8403
 13740                           
 13741                           ;LED_B1.c: 164: {
 13742                           ;LED_B1.c: 165: LED->GO=0;
 13743  13A2  0021               	movlb	1	; select bank1
 13744  13A3  083A               	movf	_LED^(0+128),w
 13745  13A4  0086               	movwf	6
 13746  13A5  0187               	clrf	7
 13747  13A6  1081               	bcf	1,1
 13748                           
 13749                           ;LED_B1.c: 166: LED->Time=0;
 13750  13A7  0A3A               	incf	_LED^(0+128),w
 13751  13A8  0086               	movwf	6
 13752  13A9  0187               	clrf	7
 13753  13AA  3000               	movlw	0
 13754  13AB  3FC0               	movwi [0]fsr1
 13755  13AC  3FC1               	movwi [1]fsr1
 13756                           
 13757                           ;LED_B1.c: 168: if(led == 1)
 13758  13AD  0020               	movlb	0	; select bank0
 13759  13AE  0823               	movf	setLED@led,w
 13760  13AF  3A01               	xorlw	1
 13761  13B0  1D03               	skipz
 13762  13B1  2BB4               	goto	l8395
 13763                           
 13764                           ;LED_B1.c: 169: {
 13765                           ;LED_B1.c: 173: RA3=1;
 13766  13B2  158C               	bsf	12,3	;volatile
 13767                           
 13768                           ;LED_B1.c: 175: }
 13769  13B3  0008               	return
 13770  13B4                     l8395:	
 13771                           
 13772                           ;LED_B1.c: 178: else if(led == 2)
 13773  13B4  0823               	movf	setLED@led,w
 13774  13B5  3A02               	xorlw	2
 13775  13B6  1D03               	skipz
 13776  13B7  2BBA               	goto	l8399
 13777                           
 13778                           ;LED_B1.c: 179: {
 13779                           ;LED_B1.c: 183: RC7=1;
 13780  13B8  178E               	bsf	14,7	;volatile
 13781                           
 13782                           ;LED_B1.c: 185: }
 13783  13B9  0008               	return
 13784  13BA                     l8399:	
 13785                           
 13786                           ;LED_B1.c: 198: else if(led == 99)
 13787  13BA  0823               	movf	setLED@led,w
 13788  13BB  3A63               	xorlw	99
 13789  13BC  1D03               	skipz
 13790  13BD  0008               	return
 13791                           
 13792                           ;LED_B1.c: 199: {
 13793                           ;LED_B1.c: 203: RB5=1;
 13794  13BE  168D               	bsf	13,5	;volatile
 13795                           
 13796                           ;LED_B1.c: 205: }
 13797                           ;LED_B1.c: 207: }
 13798  13BF  0008               	return
 13799  13C0                     l8403:	
 13800                           
 13801                           ;LED_B1.c: 208: else if(command == 11)
 13802  13C0  0822               	movf	setLED@command,w
 13803  13C1  3A0B               	xorlw	11
 13804  13C2  1D03               	skipz
 13805  13C3  0008               	return
 13806                           
 13807                           ;LED_B1.c: 209: {
 13808                           ;LED_B1.c: 210: LED->GO=1;
 13809  13C4  0021               	movlb	1	; select bank1
 13810  13C5  083A               	movf	_LED^(0+128),w
 13811  13C6  0086               	movwf	6
 13812  13C7  0187               	clrf	7
 13813  13C8  1481               	bsf	1,1
 13814  13C9  0008               	return
 13815  13CA                     __end_of_setLED:	
 13816                           
 13817                           	psect	text81
 13818  1D1E                     __ptext81:	
 13819 ;; *************** function _LedPointSelect *****************
 13820 ;; Defined at:
 13821 ;;		line 7 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\LED_B1.c"
 13822 ;; Parameters:    Size  Location     Type
 13823 ;;  led             1    wreg     unsigned char 
 13824 ;; Auto vars:     Size  Location     Type
 13825 ;;  led             1    1[BANK0 ] unsigned char 
 13826 ;; Return value:  Size  Location     Type
 13827 ;;		None               void
 13828 ;; Registers used:
 13829 ;;		wreg
 13830 ;; Tracked objects:
 13831 ;;		On entry : 0/0
 13832 ;;		On exit  : 0/0
 13833 ;;		Unchanged: 0/0
 13834 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13836 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13837 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13838 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13839 ;;Total ram usage:        2 bytes
 13840 ;; Hardware stack levels used:    1
 13841 ;; Hardware stack levels required when called:    4
 13842 ;; This function calls:
 13843 ;;		Nothing
 13844 ;; This function is called by:
 13845 ;;		_setLED_Initialization
 13846 ;;		_setLED
 13847 ;;		_setLED_Main
 13848 ;; This function uses a non-reentrant model
 13849 ;;
 13850                           
 13851                           
 13852                           ;psect for function _LedPointSelect
 13853  1D1E                     _LedPointSelect:	
 13854                           
 13855                           ;incstack = 0
 13856                           ; Regs used in _LedPointSelect: [wreg]
 13857                           ;LedPointSelect@led stored from wreg
 13858  1D1E  0020               	movlb	0	; select bank0
 13859  1D1F  00A1               	movwf	LedPointSelect@led
 13860                           
 13861                           ;LED_B1.c: 10: if(led == 1)
 13862  1D20  0821               	movf	LedPointSelect@led,w
 13863  1D21  3A01               	xorlw	1
 13864  1D22  1D03               	skipz
 13865  1D23  2D2A               	goto	l8225
 13866                           
 13867                           ;LED_B1.c: 11: {
 13868                           ;LED_B1.c: 12: LED=&VarLED1;
 13869  1D24  30DA               	movlw	_VarLED1& (0+255)
 13870  1D25  00A0               	movwf	??_LedPointSelect
 13871  1D26  0820               	movf	??_LedPointSelect,w
 13872  1D27  0021               	movlb	1	; select bank1
 13873  1D28  00BA               	movwf	_LED^(0+128)
 13874                           
 13875                           ;LED_B1.c: 13: }
 13876  1D29  0008               	return
 13877  1D2A                     l8225:	
 13878                           
 13879                           ;LED_B1.c: 16: else if(led == 2)
 13880  1D2A  0020               	movlb	0	; select bank0
 13881  1D2B  0821               	movf	LedPointSelect@led,w
 13882  1D2C  3A02               	xorlw	2
 13883  1D2D  1D03               	skipz
 13884  1D2E  2D35               	goto	l8229
 13885                           
 13886                           ;LED_B1.c: 17: {
 13887                           ;LED_B1.c: 18: LED=&VarLED2;
 13888  1D2F  30DE               	movlw	_VarLED2& (0+255)
 13889  1D30  00A0               	movwf	??_LedPointSelect
 13890  1D31  0820               	movf	??_LedPointSelect,w
 13891  1D32  0021               	movlb	1	; select bank1
 13892  1D33  00BA               	movwf	_LED^(0+128)
 13893                           
 13894                           ;LED_B1.c: 19: }
 13895  1D34  0008               	return
 13896  1D35                     l8229:	
 13897                           
 13898                           ;LED_B1.c: 28: else if(led == 99)
 13899  1D35  0020               	movlb	0	; select bank0
 13900  1D36  0821               	movf	LedPointSelect@led,w
 13901  1D37  3A63               	xorlw	99
 13902  1D38  1D03               	skipz
 13903  1D39  0008               	return
 13904                           
 13905                           ;LED_B1.c: 29: {
 13906                           ;LED_B1.c: 30: LED=&VarErrLED;
 13907  1D3A  30D6               	movlw	_VarErrLED& (0+255)
 13908  1D3B  00A0               	movwf	??_LedPointSelect
 13909  1D3C  0820               	movf	??_LedPointSelect,w
 13910  1D3D  0021               	movlb	1	; select bank1
 13911  1D3E  00BA               	movwf	_LED^(0+128)
 13912  1D3F  0008               	return
 13913  1D40                     __end_of_LedPointSelect:	
 13914                           
 13915                           	psect	text82
 13916  1BB6                     __ptext82:	
 13917 ;; *************** function _DimmerLights_Close *****************
 13918 ;; Defined at:
 13919 ;;		line 101 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 13920 ;; Parameters:    Size  Location     Type
 13921 ;;		None
 13922 ;; Auto vars:     Size  Location     Type
 13923 ;;		None
 13924 ;; Return value:  Size  Location     Type
 13925 ;;		None               void
 13926 ;; Registers used:
 13927 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13928 ;; Tracked objects:
 13929 ;;		On entry : 0/0
 13930 ;;		On exit  : 0/0
 13931 ;;		Unchanged: 0/0
 13932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13934 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13936 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13937 ;;Total ram usage:        0 bytes
 13938 ;; Hardware stack levels used:    1
 13939 ;; Hardware stack levels required when called:    5
 13940 ;; This function calls:
 13941 ;;		_getDimmerLights_StatusFlag
 13942 ;; This function is called by:
 13943 ;;		_DimmerLights_Main
 13944 ;; This function uses a non-reentrant model
 13945 ;;
 13946                           
 13947                           
 13948                           ;psect for function _DimmerLights_Close
 13949  1BB6                     _DimmerLights_Close:	
 13950                           
 13951                           ;Dimmer_B1.c: 103: if(Dimmer->Detect)
 13952                           
 13953                           ;incstack = 0
 13954                           ; Regs used in _DimmerLights_Close: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13955  1BB6  0021               	movlb	1	; select bank1
 13956  1BB7  0838               	movf	_Dimmer^(0+128),w
 13957  1BB8  0086               	movwf	6
 13958  1BB9  0187               	clrf	7
 13959  1BBA  1C01               	btfss	1,0
 13960  1BBB  0008               	return
 13961                           
 13962                           ;Dimmer_B1.c: 104: {
 13963                           ;Dimmer_B1.c: 105: Dimmer->Detect=0;
 13964  1BBC  0838               	movf	_Dimmer^(0+128),w
 13965  1BBD  0086               	movwf	6
 13966  1BBE  0187               	clrf	7
 13967  1BBF  1001               	bcf	1,0
 13968                           
 13969                           ;Dimmer_B1.c: 106: if(!getDimmerLights_StatusFlag())
 13970  1BC0  319B  2373  319B   	fcall	_getDimmerLights_StatusFlag
 13971  1BC3  3800               	iorlw	0
 13972  1BC4  1D03               	skipz
 13973  1BC5  0008               	return
 13974                           
 13975                           ;Dimmer_B1.c: 107: {
 13976                           ;Dimmer_B1.c: 108: ;;
 13977                           ;Dimmer_B1.c: 109: Memory->GO=1; if(!1) { Memory->Time=1; } ;;
 13978  1BC6  0020               	movlb	0	; select bank0
 13979  1BC7  086D               	movf	_Memory,w
 13980  1BC8  3E22               	addlw	34
 13981  1BC9  0086               	movwf	6
 13982  1BCA  3002               	movlw	2	; select bank4/5
 13983  1BCB  0087               	movwf	7
 13984  1BCC  1481               	bsf	1,1
 13985  1BCD  0008               	return
 13986  1BCE                     __end_of_DimmerLights_Close:	
 13987                           
 13988                           	psect	text83
 13989  1B73                     __ptext83:	
 13990 ;; *************** function _getDimmerLights_StatusFlag *****************
 13991 ;; Defined at:
 13992 ;;		line 208 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 13993 ;; Parameters:    Size  Location     Type
 13994 ;;		None
 13995 ;; Auto vars:     Size  Location     Type
 13996 ;;  Status          1    1[BANK0 ] unsigned char 
 13997 ;; Return value:  Size  Location     Type
 13998 ;;                  1    wreg      unsigned char 
 13999 ;; Registers used:
 14000 ;;		wreg, fsr1l, fsr1h, status,2
 14001 ;; Tracked objects:
 14002 ;;		On entry : 0/0
 14003 ;;		On exit  : 0/0
 14004 ;;		Unchanged: 0/0
 14005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14006 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14007 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14008 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14009 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14010 ;;Total ram usage:        3 bytes
 14011 ;; Hardware stack levels used:    1
 14012 ;; Hardware stack levels required when called:    4
 14013 ;; This function calls:
 14014 ;;		Nothing
 14015 ;; This function is called by:
 14016 ;;		_DimmerLights_Close
 14017 ;;		_DimmerLights_Exceptions
 14018 ;; This function uses a non-reentrant model
 14019 ;;
 14020                           
 14021                           
 14022                           ;psect for function _getDimmerLights_StatusFlag
 14023  1B73                     _getDimmerLights_StatusFlag:	
 14024                           
 14025                           ;Dimmer_B1.c: 210: char Status=0;
 14026                           
 14027                           ;incstack = 0
 14028                           ; Regs used in _getDimmerLights_StatusFlag: [wreg+fsr1l+fsr1h+status,2]
 14029  1B73  0020               	movlb	0	; select bank0
 14030  1B74  01A1               	clrf	getDimmerLights_StatusFlag@Status
 14031                           
 14032                           ;Dimmer_B1.c: 217: Status=(DimmerLights11->StatusFlag || DimmerLights22->StatusFlag)?1:0
      +                          ;
 14033  1B75  01A2               	clrf	_getDimmerLights_StatusFlag$1623
 14034  1B76  0AA2               	incf	_getDimmerLights_StatusFlag$1623,f
 14035  1B77  086B               	movf	_DimmerLights11,w
 14036  1B78  0086               	movwf	6
 14037  1B79  3001               	movlw	1	; select bank2/3
 14038  1B7A  0087               	movwf	7
 14039  1B7B  1B01               	btfsc	1,6
 14040  1B7C  2B83               	goto	l8463
 14041  1B7D  086C               	movf	_DimmerLights22,w
 14042  1B7E  0086               	movwf	6
 14043  1B7F  3001               	movlw	1	; select bank2/3
 14044  1B80  0087               	movwf	7
 14045  1B81  1F01               	btfss	1,6
 14046  1B82  01A2               	clrf	_getDimmerLights_StatusFlag$1623
 14047  1B83                     l8463:	
 14048  1B83  0822               	movf	_getDimmerLights_StatusFlag$1623,w
 14049  1B84  00A0               	movwf	??_getDimmerLights_StatusFlag
 14050  1B85  0820               	movf	??_getDimmerLights_StatusFlag,w
 14051  1B86  00A1               	movwf	getDimmerLights_StatusFlag@Status
 14052                           
 14053                           ;Dimmer_B1.c: 224: return Status;
 14054  1B87  0821               	movf	getDimmerLights_StatusFlag@Status,w
 14055  1B88  0008               	return
 14056  1B89                     __end_of_getDimmerLights_StatusFlag:	
 14057                           
 14058                           	psect	text84
 14059  1B48                     __ptext84:	
 14060 ;; *************** function _DimmerLights_Initialization *****************
 14061 ;; Defined at:
 14062 ;;		line 41 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 14063 ;; Parameters:    Size  Location     Type
 14064 ;;		None
 14065 ;; Auto vars:     Size  Location     Type
 14066 ;;		None
 14067 ;; Return value:  Size  Location     Type
 14068 ;;		None               void
 14069 ;; Registers used:
 14070 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14071 ;; Tracked objects:
 14072 ;;		On entry : 0/0
 14073 ;;		On exit  : 0/0
 14074 ;;		Unchanged: 0/0
 14075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14077 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14078 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14079 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14080 ;;Total ram usage:        1 bytes
 14081 ;; Hardware stack levels used:    1
 14082 ;; Hardware stack levels required when called:    6
 14083 ;; This function calls:
 14084 ;;		_Dimmer_Initialization
 14085 ;;		_setDimmerLights_Initialization
 14086 ;; This function is called by:
 14087 ;;		_main
 14088 ;; This function uses a non-reentrant model
 14089 ;;
 14090                           
 14091                           
 14092                           ;psect for function _DimmerLights_Initialization
 14093  1B48                     _DimmerLights_Initialization:	
 14094                           
 14095                           ;Dimmer_B1.c: 44: DimmerLights11=&DimmerLights1;
 14096                           
 14097                           ;incstack = 0
 14098                           ; Regs used in _DimmerLights_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 14099  1B48  3020               	movlw	_DimmerLights1& (0+255)
 14100  1B49  0020               	movlb	0	; select bank0
 14101  1B4A  00A4               	movwf	??_DimmerLights_Initialization
 14102  1B4B  0824               	movf	??_DimmerLights_Initialization,w
 14103  1B4C  00EB               	movwf	_DimmerLights11
 14104                           
 14105                           ;Dimmer_B1.c: 45: setDimmerLights_Initialization(1);
 14106  1B4D  3001               	movlw	1
 14107  1B4E  319E  2654  319B   	fcall	_setDimmerLights_Initialization
 14108                           
 14109                           ;Dimmer_B1.c: 49: DimmerLights22=&DimmerLights2;
 14110  1B51  302E               	movlw	_DimmerLights2& (0+255)
 14111  1B52  0020               	movlb	0	; select bank0
 14112  1B53  00A4               	movwf	??_DimmerLights_Initialization
 14113  1B54  0824               	movf	??_DimmerLights_Initialization,w
 14114  1B55  00EC               	movwf	_DimmerLights22
 14115                           
 14116                           ;Dimmer_B1.c: 50: setDimmerLights_Initialization(2);
 14117  1B56  3002               	movlw	2
 14118  1B57  319E  2654  319B   	fcall	_setDimmerLights_Initialization
 14119                           
 14120                           ;Dimmer_B1.c: 59: Dimmer_Initialization();
 14121  1B5A  3199  2129         	fcall	_Dimmer_Initialization
 14122  1B5C  0008               	return
 14123  1B5D                     __end_of_DimmerLights_Initialization:	
 14124                           
 14125                           	psect	text85
 14126  1E54                     __ptext85:	
 14127 ;; *************** function _setDimmerLights_Initialization *****************
 14128 ;; Defined at:
 14129 ;;		line 63 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 14130 ;; Parameters:    Size  Location     Type
 14131 ;;  lights          1    wreg     unsigned char 
 14132 ;; Auto vars:     Size  Location     Type
 14133 ;;  lights          1    3[BANK0 ] unsigned char 
 14134 ;; Return value:  Size  Location     Type
 14135 ;;		None               void
 14136 ;; Registers used:
 14137 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14138 ;; Tracked objects:
 14139 ;;		On entry : 0/0
 14140 ;;		On exit  : 0/0
 14141 ;;		Unchanged: 0/0
 14142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14144 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14145 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14146 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14147 ;;Total ram usage:        2 bytes
 14148 ;; Hardware stack levels used:    1
 14149 ;; Hardware stack levels required when called:    5
 14150 ;; This function calls:
 14151 ;;		_DimmerLightsPointSelect
 14152 ;; This function is called by:
 14153 ;;		_DimmerLights_Initialization
 14154 ;; This function uses a non-reentrant model
 14155 ;;
 14156                           
 14157                           
 14158                           ;psect for function _setDimmerLights_Initialization
 14159  1E54                     _setDimmerLights_Initialization:	
 14160                           
 14161                           ;incstack = 0
 14162                           ; Regs used in _setDimmerLights_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pcla
      +                          th+cstack]
 14163                           ;setDimmerLights_Initialization@lights stored from wreg
 14164  1E54  0020               	movlb	0	; select bank0
 14165  1E55  00A3               	movwf	setDimmerLights_Initialization@lights
 14166                           
 14167                           ;Dimmer_B1.c: 65: DimmerLightsPointSelect(lights);
 14168  1E56  0823               	movf	setDimmerLights_Initialization@lights,w
 14169  1E57  319A  22E5         	fcall	_DimmerLightsPointSelect
 14170                           
 14171                           ;Dimmer_B1.c: 66: DimmerLights->Clear=1;
 14172  1E59  0020               	movlb	0	; select bank0
 14173  1E5A  086A               	movf	_DimmerLights,w
 14174  1E5B  3E0C               	addlw	12
 14175  1E5C  0086               	movwf	6
 14176  1E5D  3001               	movlw	1	; select bank2/3
 14177  1E5E  0087               	movwf	7
 14178  1E5F  1401               	bsf	1,0
 14179                           
 14180                           ;Dimmer_B1.c: 72: DimmerLights->MaxmumValue=((char)((100-55)*1.5));
 14181  1E60  3043               	movlw	67
 14182  1E61  00A2               	movwf	??_setDimmerLights_Initialization
 14183  1E62  086A               	movf	_DimmerLights,w
 14184  1E63  3E05               	addlw	5
 14185  1E64  0086               	movwf	6
 14186  1E65  3001               	movlw	1	; select bank2/3
 14187  1E66  0087               	movwf	7
 14188  1E67  0822               	movf	??_setDimmerLights_Initialization,w
 14189  1E68  0081               	movwf	1
 14190                           
 14191                           ;Dimmer_B1.c: 73: DimmerLights->MinimumValue=((char)((100-20)*1.5));
 14192  1E69  3078               	movlw	120
 14193  1E6A  00A2               	movwf	??_setDimmerLights_Initialization
 14194  1E6B  086A               	movf	_DimmerLights,w
 14195  1E6C  3E06               	addlw	6
 14196  1E6D  0086               	movwf	6
 14197  1E6E  3001               	movlw	1	; select bank2/3
 14198  1E6F  0087               	movwf	7
 14199  1E70  0822               	movf	??_setDimmerLights_Initialization,w
 14200  1E71  0081               	movwf	1
 14201                           
 14202                           ;Dimmer_B1.c: 83: DimmerLights->DimmingValue=DimmerLights->MinimumValue;
 14203  1E72  086A               	movf	_DimmerLights,w
 14204  1E73  3E06               	addlw	6
 14205  1E74  0086               	movwf	6
 14206  1E75  3001               	movlw	1	; select bank2/3
 14207  1E76  0087               	movwf	7
 14208  1E77  0801               	movf	1,w
 14209  1E78  00A2               	movwf	??_setDimmerLights_Initialization
 14210  1E79  086A               	movf	_DimmerLights,w
 14211  1E7A  3E04               	addlw	4
 14212  1E7B  0086               	movwf	6
 14213  1E7C  3001               	movlw	1	; select bank2/3
 14214  1E7D  0087               	movwf	7
 14215  1E7E  0822               	movf	??_setDimmerLights_Initialization,w
 14216  1E7F  0081               	movwf	1
 14217  1E80  0008               	return
 14218  1E81                     __end_of_setDimmerLights_Initialization:	
 14219                           
 14220                           	psect	text86
 14221  1929                     __ptext86:	
 14222 ;; *************** function _Dimmer_Initialization *****************
 14223 ;; Defined at:
 14224 ;;		line 520 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 14225 ;; Parameters:    Size  Location     Type
 14226 ;;		None
 14227 ;; Auto vars:     Size  Location     Type
 14228 ;;		None
 14229 ;; Return value:  Size  Location     Type
 14230 ;;		None               void
 14231 ;; Registers used:
 14232 ;;		wreg
 14233 ;; Tracked objects:
 14234 ;;		On entry : 0/0
 14235 ;;		On exit  : 0/0
 14236 ;;		Unchanged: 0/0
 14237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14240 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14241 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14242 ;;Total ram usage:        1 bytes
 14243 ;; Hardware stack levels used:    1
 14244 ;; Hardware stack levels required when called:    4
 14245 ;; This function calls:
 14246 ;;		Nothing
 14247 ;; This function is called by:
 14248 ;;		_DimmerLights_Initialization
 14249 ;; This function uses a non-reentrant model
 14250 ;;
 14251                           
 14252                           
 14253                           ;psect for function _Dimmer_Initialization
 14254  1929                     _Dimmer_Initialization:	
 14255                           
 14256                           ;Dimmer_B1.c: 522: Dimmer=&Dimmer1;
 14257                           
 14258                           ;incstack = 0
 14259                           ; Regs used in _Dimmer_Initialization: [wreg]
 14260  1929  30E2               	movlw	_Dimmer1& (0+255)
 14261  192A  0020               	movlb	0	; select bank0
 14262  192B  00A0               	movwf	??_Dimmer_Initialization
 14263  192C  0820               	movf	??_Dimmer_Initialization,w
 14264  192D  0021               	movlb	1	; select bank1
 14265  192E  00B8               	movwf	_Dimmer^(0+128)
 14266  192F  0008               	return
 14267  1930                     __end_of_Dimmer_Initialization:	
 14268                           
 14269                           	psect	text87
 14270  194D                     __ptext87:	
 14271 ;; *************** function _DelayOff_Main *****************
 14272 ;; Defined at:
 14273 ;;		line 45 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\DelayOff_B1.c"
 14274 ;; Parameters:    Size  Location     Type
 14275 ;;		None
 14276 ;; Auto vars:     Size  Location     Type
 14277 ;;		None
 14278 ;; Return value:  Size  Location     Type
 14279 ;;		None               void
 14280 ;; Registers used:
 14281 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14282 ;; Tracked objects:
 14283 ;;		On entry : 0/0
 14284 ;;		On exit  : 0/0
 14285 ;;		Unchanged: 0/0
 14286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14287 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14288 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14290 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14291 ;;Total ram usage:        0 bytes
 14292 ;; Hardware stack levels used:    1
 14293 ;; Hardware stack levels required when called:    9
 14294 ;; This function calls:
 14295 ;;		_DlyOff_Main
 14296 ;; This function is called by:
 14297 ;;		_main
 14298 ;; This function uses a non-reentrant model
 14299 ;;
 14300                           
 14301                           
 14302                           ;psect for function _DelayOff_Main
 14303  194D                     _DelayOff_Main:	
 14304                           
 14305                           ;DelayOff_B1.c: 48: DlyOff_Main(1);
 14306                           
 14307                           ;incstack = 0
 14308                           ; Regs used in _DelayOff_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14309  194D  3001               	movlw	1
 14310  194E  3197  2717  3199   	fcall	_DlyOff_Main
 14311                           
 14312                           ;DelayOff_B1.c: 52: DlyOff_Main(2);
 14313  1951  3002               	movlw	2
 14314  1952  3197  2717         	fcall	_DlyOff_Main
 14315  1954  0008               	return
 14316  1955                     __end_of_DelayOff_Main:	
 14317                           
 14318                           	psect	text88
 14319  1717                     __ptext88:	
 14320 ;; *************** function _DlyOff_Main *****************
 14321 ;; Defined at:
 14322 ;;		line 66 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\DelayOff_B1.c"
 14323 ;; Parameters:    Size  Location     Type
 14324 ;;  sw              1    wreg     unsigned char 
 14325 ;; Auto vars:     Size  Location     Type
 14326 ;;  sw              1   68[BANK0 ] unsigned char 
 14327 ;; Return value:  Size  Location     Type
 14328 ;;		None               void
 14329 ;; Registers used:
 14330 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14331 ;; Tracked objects:
 14332 ;;		On entry : 0/0
 14333 ;;		On exit  : 0/0
 14334 ;;		Unchanged: 0/0
 14335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14337 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14338 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14339 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14340 ;;Total ram usage:        3 bytes
 14341 ;; Hardware stack levels used:    1
 14342 ;; Hardware stack levels required when called:    8
 14343 ;; This function calls:
 14344 ;;		_DelayOffPointSelect
 14345 ;;		_setBuz
 14346 ;;		_setDimmerLights_Switch
 14347 ;;		_setDimmerLights_Trigger
 14348 ;;		_setRFSW_Status
 14349 ;;		_setRF_DimmerLights
 14350 ;;		_setSw_Status
 14351 ;;		_setTxData
 14352 ;; This function is called by:
 14353 ;;		_DelayOff_Main
 14354 ;; This function uses a non-reentrant model
 14355 ;;
 14356                           
 14357                           
 14358                           ;psect for function _DlyOff_Main
 14359  1717                     _DlyOff_Main:	
 14360                           
 14361                           ;incstack = 0
 14362                           ; Regs used in _DlyOff_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14363                           ;DlyOff_Main@sw stored from wreg
 14364  1717  0020               	movlb	0	; select bank0
 14365  1718  00E4               	movwf	DlyOff_Main@sw
 14366                           
 14367                           ;DelayOff_B1.c: 68: DelayOffPointSelect(sw);
 14368  1719  0864               	movf	DlyOff_Main@sw,w
 14369  171A  319B  230B  3197   	fcall	_DelayOffPointSelect
 14370                           
 14371                           ;DelayOff_B1.c: 69: if(DelayOff->GO)
 14372  171D  0020               	movlb	0	; select bank0
 14373  171E  0869               	movf	_DelayOff,w
 14374  171F  0086               	movwf	6
 14375  1720  0187               	clrf	7
 14376  1721  1C81               	btfss	1,1
 14377  1722  0008               	return
 14378                           
 14379                           ;DelayOff_B1.c: 70: {
 14380                           ;DelayOff_B1.c: 71: DelayOff->SecondTime++;
 14381  1723  0869               	movf	_DelayOff,w
 14382  1724  3E02               	addlw	2
 14383  1725  0086               	movwf	6
 14384  1726  0187               	clrf	7
 14385  1727  3001               	movlw	1
 14386  1728  0781               	addwf	1,f
 14387  1729  3141               	addfsr 1,1
 14388  172A  1803               	skipnc
 14389  172B  0A81               	incf	1,f
 14390                           
 14391                           ;DelayOff_B1.c: 72: if(DelayOff->SecondTime >= 5650)
 14392  172C  0869               	movf	_DelayOff,w
 14393  172D  3E02               	addlw	2
 14394  172E  0086               	movwf	6
 14395  172F  0187               	clrf	7
 14396  1730  3F40               	moviw [0]fsr1
 14397  1731  00E2               	movwf	??_DlyOff_Main
 14398  1732  3F41               	moviw [1]fsr1
 14399  1733  00E3               	movwf	??_DlyOff_Main+1
 14400  1734  3016               	movlw	22
 14401  1735  0263               	subwf	??_DlyOff_Main+1,w
 14402  1736  3012               	movlw	18
 14403  1737  1903               	skipnz
 14404  1738  0262               	subwf	??_DlyOff_Main,w
 14405  1739  1C03               	skipc
 14406  173A  0008               	return
 14407                           
 14408                           ;DelayOff_B1.c: 73: {
 14409                           ;DelayOff_B1.c: 74: DelayOff->SecondTime=0;
 14410  173B  0869               	movf	_DelayOff,w
 14411  173C  3E02               	addlw	2
 14412  173D  0086               	movwf	6
 14413  173E  0187               	clrf	7
 14414  173F  3000               	movlw	0
 14415  1740  3FC0               	movwi [0]fsr1
 14416  1741  3FC1               	movwi [1]fsr1
 14417                           
 14418                           ;DelayOff_B1.c: 75: DelayOff->MinuteTime++;
 14419  1742  3001               	movlw	1
 14420  1743  00E2               	movwf	??_DlyOff_Main
 14421  1744  0869               	movf	_DelayOff,w
 14422  1745  3E04               	addlw	4
 14423  1746  0086               	movwf	6
 14424  1747  0187               	clrf	7
 14425  1748  0862               	movf	??_DlyOff_Main,w
 14426  1749  0781               	addwf	1,f
 14427                           
 14428                           ;DelayOff_B1.c: 76: if(DelayOff->MinuteTime >= DelayOff->Value)
 14429  174A  0869               	movf	_DelayOff,w
 14430  174B  3E04               	addlw	4
 14431  174C  0086               	movwf	6
 14432  174D  0187               	clrf	7
 14433  174E  0A69               	incf	_DelayOff,w
 14434  174F  0084               	movwf	4
 14435  1750  0185               	clrf	5
 14436  1751  0800               	movf	0,w
 14437  1752  0201               	subwf	1,w
 14438  1753  1C03               	skipc
 14439  1754  0008               	return
 14440                           
 14441                           ;DelayOff_B1.c: 77: {
 14442                           ;DelayOff_B1.c: 78: DelayOff->MinuteTime=0;
 14443  1755  0869               	movf	_DelayOff,w
 14444  1756  3E04               	addlw	4
 14445  1757  0086               	movwf	6
 14446  1758  0187               	clrf	7
 14447  1759  0181               	clrf	1
 14448                           
 14449                           ;DelayOff_B1.c: 79: DelayOff->GO=0;
 14450  175A  0869               	movf	_DelayOff,w
 14451  175B  0086               	movwf	6
 14452  175C  0187               	clrf	7
 14453  175D  1081               	bcf	1,1
 14454                           
 14455                           ;DelayOff_B1.c: 80: setSw_Status(sw,0);
 14456  175E  01A2               	clrf	setSw_Status@command
 14457  175F  0864               	movf	DlyOff_Main@sw,w
 14458  1760  319A  2265  3197   	fcall	_setSw_Status
 14459                           
 14460                           ;DelayOff_B1.c: 81: setRFSW_Status(sw,0);
 14461  1763  0020               	movlb	0	; select bank0
 14462  1764  01A2               	clrf	setRFSW_Status@command
 14463  1765  0864               	movf	DlyOff_Main@sw,w
 14464  1766  319A  2256  3197   	fcall	_setRFSW_Status
 14465                           
 14466                           ;DelayOff_B1.c: 82: setRF_DimmerLights(sw,0);
 14467  1769  0020               	movlb	0	; select bank0
 14468  176A  01DD               	clrf	setRF_DimmerLights@on
 14469  176B  0864               	movf	DlyOff_Main@sw,w
 14470  176C  3195  2560  3197   	fcall	_setRF_DimmerLights
 14471                           
 14472                           ;DelayOff_B1.c: 83: setDimmerLights_Trigger(sw,1);
 14473  176F  0020               	movlb	0	; select bank0
 14474  1770  01A2               	clrf	setDimmerLights_Trigger@command
 14475  1771  0AA2               	incf	setDimmerLights_Trigger@command,f
 14476  1772  0864               	movf	DlyOff_Main@sw,w
 14477  1773  319A  2294  3197   	fcall	_setDimmerLights_Trigger
 14478                           
 14479                           ;DelayOff_B1.c: 84: setDimmerLights_Switch(sw,0);
 14480  1776  0020               	movlb	0	; select bank0
 14481  1777  01A2               	clrf	setDimmerLights_Switch@command
 14482  1778  0864               	movf	DlyOff_Main@sw,w
 14483  1779  319A  2284  3197   	fcall	_setDimmerLights_Switch
 14484                           
 14485                           ;DelayOff_B1.c: 85: setTxData(1);
 14486  177C  3001               	movlw	1
 14487  177D  3187  271C  3197   	fcall	_setTxData
 14488                           
 14489                           ;DelayOff_B1.c: 86: setBuz(1,100);
 14490  1780  3064               	movlw	100
 14491  1781  0020               	movlb	0	; select bank0
 14492  1782  00A6               	movwf	setBuz@time
 14493  1783  3000               	movlw	0
 14494  1784  00A7               	movwf	setBuz@time+1
 14495  1785  3001               	movlw	1
 14496  1786  3197  2789         	fcall	_setBuz
 14497  1788  0008               	return
 14498  1789                     __end_of_DlyOff_Main:	
 14499                           
 14500                           	psect	text89
 14501  071C                     __ptext89:	
 14502 ;; *************** function _setTxData *****************
 14503 ;; Defined at:
 14504 ;;		line 140 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
 14505 ;; Parameters:    Size  Location     Type
 14506 ;;  rf              1    wreg     unsigned char 
 14507 ;; Auto vars:     Size  Location     Type
 14508 ;;  rf              1    3[BANK0 ] unsigned char 
 14509 ;;  i               1    0        unsigned char 
 14510 ;; Return value:  Size  Location     Type
 14511 ;;		None               void
 14512 ;; Registers used:
 14513 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14514 ;; Tracked objects:
 14515 ;;		On entry : 0/0
 14516 ;;		On exit  : 0/0
 14517 ;;		Unchanged: 0/0
 14518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14520 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14521 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14522 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14523 ;;Total ram usage:        2 bytes
 14524 ;; Hardware stack levels used:    1
 14525 ;; Hardware stack levels required when called:    5
 14526 ;; This function calls:
 14527 ;;		_RfPointSelect
 14528 ;; This function is called by:
 14529 ;;		_DlyOff_Main
 14530 ;;		_setDimmerLights_Adj
 14531 ;;		_setControl_Lights_Table
 14532 ;;		_setRFSW_Control
 14533 ;;		_setRFSW_AdjControl
 14534 ;;		_Sw_DimmerOnFunc
 14535 ;;		_Sw_DimmerOffFunc
 14536 ;; This function uses a non-reentrant model
 14537 ;;
 14538                           
 14539                           
 14540                           ;psect for function _setTxData
 14541  071C                     _setTxData:	
 14542                           
 14543                           ;incstack = 0
 14544                           ; Regs used in _setTxData: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14545                           ;setTxData@rf stored from wreg
 14546  071C  0020               	movlb	0	; select bank0
 14547  071D  00A3               	movwf	setTxData@rf
 14548                           
 14549                           ;RF_Control_B1.c: 142: char i;
 14550                           ;RF_Control_B1.c: 143: RfPointSelect(rf);
 14551  071E  0823               	movf	setTxData@rf,w
 14552  071F  3199  219F  3187   	fcall	_RfPointSelect
 14553                           
 14554                           ;RF_Control_B1.c: 144: if(RF->Enable)
 14555  0722  0877               	movf	_RF,w
 14556  0723  0086               	movwf	6
 14557  0724  0187               	clrf	7
 14558  0725  1C01               	btfss	1,0
 14559  0726  0008               	return
 14560                           
 14561                           ;RF_Control_B1.c: 145: {
 14562                           ;RF_Control_B1.c: 147: if(!RF->TransceiveGO)
 14563  0727  0877               	movf	_RF,w
 14564  0728  0086               	movwf	6
 14565  0729  0187               	clrf	7
 14566  072A  1901               	btfsc	1,2
 14567  072B  0008               	return
 14568                           
 14569                           ;RF_Control_B1.c: 148: {
 14570                           ;RF_Control_B1.c: 149: RF->TransceiveGO=1;
 14571  072C  0877               	movf	_RF,w
 14572  072D  0086               	movwf	6
 14573  072E  0187               	clrf	7
 14574  072F  1501               	bsf	1,2
 14575                           
 14576                           ;RF_Control_B1.c: 158: RF_Data[0]=0x63;
 14577  0730  3063               	movlw	99
 14578  0731  0020               	movlb	0	; select bank0
 14579  0732  00A2               	movwf	??_setTxData
 14580  0733  0822               	movf	??_setTxData,w
 14581  0734  0021               	movlb	1	; select bank1
 14582  0735  00A0               	movwf	_RF_Data^(0+128)
 14583                           
 14584                           ;RF_Control_B1.c: 159: RF_Data[1]=0x02;
 14585  0736  3002               	movlw	2
 14586  0737  0020               	movlb	0	; select bank0
 14587  0738  00A2               	movwf	??_setTxData
 14588  0739  0822               	movf	??_setTxData,w
 14589  073A  0021               	movlb	1	; select bank1
 14590  073B  00A1               	movwf	(_RF_Data^(0+128)+1)
 14591                           
 14592                           ;RF_Control_B1.c: 160: RF_Data[2]=Product->Data[2];
 14593  073C  0020               	movlb	0	; select bank0
 14594  073D  086E               	movf	_Product,w
 14595  073E  0086               	movwf	6
 14596  073F  3001               	movlw	1	; select bank2/3
 14597  0740  0087               	movwf	7
 14598  0741  3001               	movlw	1	; select bank2/3
 14599  0742  3F42               	moviw [2]fsr1
 14600  0743  0021               	movlb	1	; select bank1
 14601  0744  00A2               	movwf	(_RF_Data^(0+128)+2)
 14602                           
 14603                           ;RF_Control_B1.c: 161: RF_Data[3]=Product->Data[3];
 14604  0745  0020               	movlb	0	; select bank0
 14605  0746  086E               	movf	_Product,w
 14606  0747  0086               	movwf	6
 14607  0748  3001               	movlw	1	; select bank2/3
 14608  0749  0087               	movwf	7
 14609  074A  3001               	movlw	1	; select bank2/3
 14610  074B  3F43               	moviw [3]fsr1
 14611  074C  0021               	movlb	1	; select bank1
 14612  074D  00A3               	movwf	(_RF_Data^(0+128)+3)
 14613                           
 14614                           ;RF_Control_B1.c: 162: RF_Data[4]=Product->Data[4];
 14615  074E  0020               	movlb	0	; select bank0
 14616  074F  086E               	movf	_Product,w
 14617  0750  0086               	movwf	6
 14618  0751  3001               	movlw	1	; select bank2/3
 14619  0752  0087               	movwf	7
 14620  0753  3001               	movlw	1	; select bank2/3
 14621  0754  3F44               	moviw [4]fsr1
 14622  0755  0021               	movlb	1	; select bank1
 14623  0756  00A4               	movwf	(_RF_Data^(0+128)+4)
 14624                           
 14625                           ;RF_Control_B1.c: 163: RF_Data[5]=Product->Data[5];
 14626  0757  0020               	movlb	0	; select bank0
 14627  0758  086E               	movf	_Product,w
 14628  0759  0086               	movwf	6
 14629  075A  3001               	movlw	1	; select bank2/3
 14630  075B  0087               	movwf	7
 14631  075C  3001               	movlw	1	; select bank2/3
 14632  075D  3F45               	moviw [5]fsr1
 14633  075E  0021               	movlb	1	; select bank1
 14634  075F  00A5               	movwf	(_RF_Data^(0+128)+5)
 14635                           
 14636                           ;RF_Control_B1.c: 164: RF_Data[6]=Product->Data[6];
 14637  0760  0020               	movlb	0	; select bank0
 14638  0761  086E               	movf	_Product,w
 14639  0762  0086               	movwf	6
 14640  0763  3001               	movlw	1	; select bank2/3
 14641  0764  0087               	movwf	7
 14642  0765  3001               	movlw	1	; select bank2/3
 14643  0766  3F46               	moviw [6]fsr1
 14644  0767  0021               	movlb	1	; select bank1
 14645  0768  00A6               	movwf	(_RF_Data^(0+128)+6)
 14646                           
 14647                           ;RF_Control_B1.c: 165: RF_Data[7]=Product->Data[7];
 14648  0769  0020               	movlb	0	; select bank0
 14649  076A  086E               	movf	_Product,w
 14650  076B  0086               	movwf	6
 14651  076C  3001               	movlw	1	; select bank2/3
 14652  076D  0087               	movwf	7
 14653  076E  3001               	movlw	1	; select bank2/3
 14654  076F  3F47               	moviw [7]fsr1
 14655  0770  0021               	movlb	1	; select bank1
 14656  0771  00A7               	movwf	(_RF_Data^(0+128)+7)
 14657                           
 14658                           ;RF_Control_B1.c: 166: RF_Data[8]=Product->Data[8];
 14659  0772  0020               	movlb	0	; select bank0
 14660  0773  086E               	movf	_Product,w
 14661  0774  0086               	movwf	6
 14662  0775  3001               	movlw	1	; select bank2/3
 14663  0776  0087               	movwf	7
 14664  0777  3001               	movlw	1	; select bank2/3
 14665  0778  3F48               	moviw [8]fsr1
 14666  0779  0021               	movlb	1	; select bank1
 14667  077A  00A8               	movwf	(_RF_Data^(0+128)+8)
 14668                           
 14669                           ;RF_Control_B1.c: 167: RF_Data[9]=Product->Data[9];
 14670  077B  0020               	movlb	0	; select bank0
 14671  077C  086E               	movf	_Product,w
 14672  077D  0086               	movwf	6
 14673  077E  3001               	movlw	1	; select bank2/3
 14674  077F  0087               	movwf	7
 14675  0780  3001               	movlw	1	; select bank2/3
 14676  0781  3F49               	moviw [9]fsr1
 14677  0782  0021               	movlb	1	; select bank1
 14678  0783  00A9               	movwf	(_RF_Data^(0+128)+9)
 14679                           
 14680                           ;RF_Control_B1.c: 168: RF_Data[10]=Product->Data[10];
 14681  0784  0020               	movlb	0	; select bank0
 14682  0785  086E               	movf	_Product,w
 14683  0786  0086               	movwf	6
 14684  0787  3001               	movlw	1	; select bank2/3
 14685  0788  0087               	movwf	7
 14686  0789  3001               	movlw	1	; select bank2/3
 14687  078A  3F4A               	moviw [10]fsr1
 14688  078B  0021               	movlb	1	; select bank1
 14689  078C  00AA               	movwf	(_RF_Data^(0+128)+10)
 14690                           
 14691                           ;RF_Control_B1.c: 169: RF_Data[11]=Product->Data[11];
 14692  078D  0020               	movlb	0	; select bank0
 14693  078E  086E               	movf	_Product,w
 14694  078F  0086               	movwf	6
 14695  0790  3001               	movlw	1	; select bank2/3
 14696  0791  0087               	movwf	7
 14697  0792  3001               	movlw	1	; select bank2/3
 14698  0793  3F4B               	moviw [11]fsr1
 14699  0794  0021               	movlb	1	; select bank1
 14700  0795  00AB               	movwf	(_RF_Data^(0+128)+11)
 14701                           
 14702                           ;RF_Control_B1.c: 170: RF_Data[12]=Product->Data[12];
 14703  0796  0020               	movlb	0	; select bank0
 14704  0797  086E               	movf	_Product,w
 14705  0798  0086               	movwf	6
 14706  0799  3001               	movlw	1	; select bank2/3
 14707  079A  0087               	movwf	7
 14708  079B  3001               	movlw	1	; select bank2/3
 14709  079C  3F4C               	moviw [12]fsr1
 14710  079D  0021               	movlb	1	; select bank1
 14711  079E  00AC               	movwf	(_RF_Data^(0+128)+12)
 14712                           
 14713                           ;RF_Control_B1.c: 171: RF_Data[13]=Product->Data[13];
 14714  079F  0020               	movlb	0	; select bank0
 14715  07A0  086E               	movf	_Product,w
 14716  07A1  0086               	movwf	6
 14717  07A2  3001               	movlw	1	; select bank2/3
 14718  07A3  0087               	movwf	7
 14719  07A4  3001               	movlw	1	; select bank2/3
 14720  07A5  3F4D               	moviw [13]fsr1
 14721  07A6  0021               	movlb	1	; select bank1
 14722  07A7  00AD               	movwf	(_RF_Data^(0+128)+13)
 14723                           
 14724                           ;RF_Control_B1.c: 172: RF_Data[14]=Product->Data[14];
 14725  07A8  0020               	movlb	0	; select bank0
 14726  07A9  086E               	movf	_Product,w
 14727  07AA  0086               	movwf	6
 14728  07AB  3001               	movlw	1	; select bank2/3
 14729  07AC  0087               	movwf	7
 14730  07AD  3001               	movlw	1	; select bank2/3
 14731  07AE  3F4E               	moviw [14]fsr1
 14732  07AF  0021               	movlb	1	; select bank1
 14733  07B0  00AE               	movwf	(_RF_Data^(0+128)+14)
 14734                           
 14735                           ;RF_Control_B1.c: 173: RF_Data[15]=Product->Data[15];
 14736  07B1  0020               	movlb	0	; select bank0
 14737  07B2  086E               	movf	_Product,w
 14738  07B3  0086               	movwf	6
 14739  07B4  3001               	movlw	1	; select bank2/3
 14740  07B5  0087               	movwf	7
 14741  07B6  3001               	movlw	1	; select bank2/3
 14742  07B7  3F4F               	moviw [15]fsr1
 14743  07B8  0021               	movlb	1	; select bank1
 14744  07B9  00AF               	movwf	(_RF_Data^(0+128)+15)
 14745                           
 14746                           ;RF_Control_B1.c: 174: RF_Data[16]=Product->Data[16];
 14747  07BA  0020               	movlb	0	; select bank0
 14748  07BB  086E               	movf	_Product,w
 14749  07BC  0086               	movwf	6
 14750  07BD  3001               	movlw	1	; select bank2/3
 14751  07BE  0087               	movwf	7
 14752  07BF  3001               	movlw	1	; select bank2/3
 14753  07C0  3F50               	moviw [16]fsr1
 14754  07C1  0021               	movlb	1	; select bank1
 14755  07C2  00B0               	movwf	(_RF_Data^(0+128)+16)
 14756                           
 14757                           ;RF_Control_B1.c: 175: RF_Data[17]=Product->Data[17];
 14758  07C3  0020               	movlb	0	; select bank0
 14759  07C4  086E               	movf	_Product,w
 14760  07C5  0086               	movwf	6
 14761  07C6  3001               	movlw	1	; select bank2/3
 14762  07C7  0087               	movwf	7
 14763  07C8  3001               	movlw	1	; select bank2/3
 14764  07C9  3F51               	moviw [17]fsr1
 14765  07CA  0021               	movlb	1	; select bank1
 14766  07CB  00B1               	movwf	(_RF_Data^(0+128)+17)
 14767                           
 14768                           ;RF_Control_B1.c: 176: RF_Data[18]=Product->Data[18];
 14769  07CC  0020               	movlb	0	; select bank0
 14770  07CD  086E               	movf	_Product,w
 14771  07CE  0086               	movwf	6
 14772  07CF  3001               	movlw	1	; select bank2/3
 14773  07D0  0087               	movwf	7
 14774  07D1  3001               	movlw	1	; select bank2/3
 14775  07D2  3F52               	moviw [18]fsr1
 14776  07D3  0021               	movlb	1	; select bank1
 14777  07D4  00B2               	movwf	(_RF_Data^(0+128)+18)
 14778                           
 14779                           ;RF_Control_B1.c: 177: RF_Data[19]=Product->Data[19];
 14780  07D5  0020               	movlb	0	; select bank0
 14781  07D6  086E               	movf	_Product,w
 14782  07D7  0086               	movwf	6
 14783  07D8  3001               	movlw	1	; select bank2/3
 14784  07D9  0087               	movwf	7
 14785  07DA  3001               	movlw	1	; select bank2/3
 14786  07DB  3F53               	moviw [19]fsr1
 14787  07DC  0021               	movlb	1	; select bank1
 14788  07DD  00B3               	movwf	(_RF_Data^(0+128)+19)
 14789                           
 14790                           ;RF_Control_B1.c: 178: RF_Data[20]=210;
 14791  07DE  30D2               	movlw	210
 14792  07DF  0020               	movlb	0	; select bank0
 14793  07E0  00A2               	movwf	??_setTxData
 14794  07E1  0822               	movf	??_setTxData,w
 14795  07E2  0021               	movlb	1	; select bank1
 14796  07E3  00B4               	movwf	(_RF_Data^(0+128)+20)
 14797  07E4  0008               	return
 14798  07E5                     __end_of_setTxData:	
 14799                           
 14800                           	psect	text90
 14801  199F                     __ptext90:	
 14802 ;; *************** function _RfPointSelect *****************
 14803 ;; Defined at:
 14804 ;;		line 7 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
 14805 ;; Parameters:    Size  Location     Type
 14806 ;;  rf              1    wreg     unsigned char 
 14807 ;; Auto vars:     Size  Location     Type
 14808 ;;  rf              1    1[BANK0 ] unsigned char 
 14809 ;; Return value:  Size  Location     Type
 14810 ;;		None               void
 14811 ;; Registers used:
 14812 ;;		wreg
 14813 ;; Tracked objects:
 14814 ;;		On entry : 0/0
 14815 ;;		On exit  : 0/0
 14816 ;;		Unchanged: 0/0
 14817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14819 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14820 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14821 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14822 ;;Total ram usage:        2 bytes
 14823 ;; Hardware stack levels used:    1
 14824 ;; Hardware stack levels required when called:    4
 14825 ;; This function calls:
 14826 ;;		Nothing
 14827 ;; This function is called by:
 14828 ;;		_setRF_Learn
 14829 ;;		_setRF_RxStatus
 14830 ;;		_setRF_Main
 14831 ;;		_setTxData
 14832 ;;		_setRF_Enable
 14833 ;;		_RF_RxDisable
 14834 ;;		_getRxData
 14835 ;;		_setLog_Code
 14836 ;;		_setControl_Lights_Table
 14837 ;; This function uses a non-reentrant model
 14838 ;;
 14839                           
 14840                           
 14841                           ;psect for function _RfPointSelect
 14842  199F                     _RfPointSelect:	
 14843                           
 14844                           ;incstack = 0
 14845                           ; Regs used in _RfPointSelect: [wreg]
 14846                           ;RfPointSelect@rf stored from wreg
 14847  199F  0020               	movlb	0	; select bank0
 14848  19A0  00A1               	movwf	RfPointSelect@rf
 14849                           
 14850                           ;RF_Control_B1.c: 10: if(rf == 1)
 14851  19A1  0821               	movf	RfPointSelect@rf,w
 14852  19A2  3A01               	xorlw	1
 14853  19A3  1D03               	skipz
 14854  19A4  0008               	return
 14855                           
 14856                           ;RF_Control_B1.c: 11: {
 14857                           ;RF_Control_B1.c: 12: RF=&RF1;
 14858  19A5  30E5               	movlw	_RF1& (0+255)
 14859  19A6  00A0               	movwf	??_RfPointSelect
 14860  19A7  0820               	movf	??_RfPointSelect,w
 14861  19A8  00F7               	movwf	_RF
 14862  19A9  0008               	return
 14863  19AA                     __end_of_RfPointSelect:	
 14864                           
 14865                           	psect	text91
 14866  1A65                     __ptext91:	
 14867 ;; *************** function _setSw_Status *****************
 14868 ;; Defined at:
 14869 ;;		line 106 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Switch_B1.c"
 14870 ;; Parameters:    Size  Location     Type
 14871 ;;  sw              1    wreg     unsigned char 
 14872 ;;  command         1    2[BANK0 ] unsigned char 
 14873 ;; Auto vars:     Size  Location     Type
 14874 ;;  sw              1    3[BANK0 ] unsigned char 
 14875 ;; Return value:  Size  Location     Type
 14876 ;;		None               void
 14877 ;; Registers used:
 14878 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14879 ;; Tracked objects:
 14880 ;;		On entry : 0/0
 14881 ;;		On exit  : 0/0
 14882 ;;		Unchanged: 0/0
 14883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14884 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14885 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14887 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14888 ;;Total ram usage:        2 bytes
 14889 ;; Hardware stack levels used:    1
 14890 ;; Hardware stack levels required when called:    5
 14891 ;; This function calls:
 14892 ;;		_SwPointSelect
 14893 ;; This function is called by:
 14894 ;;		_DlyOff_Main
 14895 ;;		_setDimmerLights_ERROR
 14896 ;;		_setControl_Lights_Table
 14897 ;;		_setRFSW_Control
 14898 ;; This function uses a non-reentrant model
 14899 ;;
 14900                           
 14901                           
 14902                           ;psect for function _setSw_Status
 14903  1A65                     _setSw_Status:	
 14904                           
 14905                           ;incstack = 0
 14906                           ; Regs used in _setSw_Status: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14907                           ;setSw_Status@sw stored from wreg
 14908  1A65  0020               	movlb	0	; select bank0
 14909  1A66  00A3               	movwf	setSw_Status@sw
 14910                           
 14911                           ;Switch_B1.c: 108: SwPointSelect(sw);
 14912  1A67  0823               	movf	setSw_Status@sw,w
 14913  1A68  319B  231F         	fcall	_SwPointSelect
 14914                           
 14915                           ;Switch_B1.c: 109: Sw->Status=command;
 14916  1A6A  0878               	movf	_Sw,w
 14917  1A6B  0086               	movwf	6
 14918  1A6C  3001               	movlw	1	; select bank2/3
 14919  1A6D  0087               	movwf	7
 14920  1A6E  0020               	movlb	0	; select bank0
 14921  1A6F  0822               	movf	setSw_Status@command,w
 14922  1A70  1301               	bcf	1,6
 14923  1A71  1D03               	skipz
 14924  1A72  1701               	bsf	1,6
 14925  1A73  0008               	return
 14926  1A74                     __end_of_setSw_Status:	
 14927                           
 14928                           	psect	text92
 14929  1B1F                     __ptext92:	
 14930 ;; *************** function _SwPointSelect *****************
 14931 ;; Defined at:
 14932 ;;		line 16 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Switch_B1.c"
 14933 ;; Parameters:    Size  Location     Type
 14934 ;;  sw              1    wreg     unsigned char 
 14935 ;; Auto vars:     Size  Location     Type
 14936 ;;  sw              1    1[BANK0 ] unsigned char 
 14937 ;; Return value:  Size  Location     Type
 14938 ;;		None               void
 14939 ;; Registers used:
 14940 ;;		wreg
 14941 ;; Tracked objects:
 14942 ;;		On entry : 0/0
 14943 ;;		On exit  : 0/0
 14944 ;;		Unchanged: 0/0
 14945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14947 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14948 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14949 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14950 ;;Total ram usage:        2 bytes
 14951 ;; Hardware stack levels used:    1
 14952 ;; Hardware stack levels required when called:    4
 14953 ;; This function calls:
 14954 ;;		Nothing
 14955 ;; This function is called by:
 14956 ;;		_setSw_Enable
 14957 ;;		_setSw_Status
 14958 ;;		_setSw_Main
 14959 ;;		_Sw_Detect
 14960 ;; This function uses a non-reentrant model
 14961 ;;
 14962                           
 14963                           
 14964                           ;psect for function _SwPointSelect
 14965  1B1F                     _SwPointSelect:	
 14966                           
 14967                           ;incstack = 0
 14968                           ; Regs used in _SwPointSelect: [wreg]
 14969                           ;SwPointSelect@sw stored from wreg
 14970  1B1F  0020               	movlb	0	; select bank0
 14971  1B20  00A1               	movwf	SwPointSelect@sw
 14972                           
 14973                           ;Switch_B1.c: 19: if(sw == 1)
 14974  1B21  0821               	movf	SwPointSelect@sw,w
 14975  1B22  3A01               	xorlw	1
 14976  1B23  1D03               	skipz
 14977  1B24  2B2A               	goto	l8247
 14978                           
 14979                           ;Switch_B1.c: 20: {
 14980                           ;Switch_B1.c: 21: Sw=&Sw1;
 14981  1B25  3056               	movlw	_Sw1& (0+255)
 14982  1B26  00A0               	movwf	??_SwPointSelect
 14983  1B27  0820               	movf	??_SwPointSelect,w
 14984  1B28  00F8               	movwf	_Sw
 14985                           
 14986                           ;Switch_B1.c: 22: }
 14987  1B29  0008               	return
 14988  1B2A                     l8247:	
 14989                           
 14990                           ;Switch_B1.c: 25: else if(sw == 2)
 14991  1B2A  0821               	movf	SwPointSelect@sw,w
 14992  1B2B  3A02               	xorlw	2
 14993  1B2C  1D03               	skipz
 14994  1B2D  0008               	return
 14995                           
 14996                           ;Switch_B1.c: 26: {
 14997                           ;Switch_B1.c: 27: Sw=&Sw2;
 14998  1B2E  305F               	movlw	_Sw2& (0+255)
 14999  1B2F  00A0               	movwf	??_SwPointSelect
 15000  1B30  0820               	movf	??_SwPointSelect,w
 15001  1B31  00F8               	movwf	_Sw
 15002  1B32  0008               	return
 15003  1B33                     __end_of_SwPointSelect:	
 15004                           
 15005                           	psect	text93
 15006  1560                     __ptext93:	
 15007 ;; *************** function _setRF_DimmerLights *****************
 15008 ;; Defined at:
 15009 ;;		line 445 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
 15010 ;; Parameters:    Size  Location     Type
 15011 ;;  lights          1    wreg     unsigned char 
 15012 ;;  on              1   61[BANK0 ] unsigned char 
 15013 ;; Auto vars:     Size  Location     Type
 15014 ;;  lights          1   65[BANK0 ] unsigned char 
 15015 ;;  status          1   64[BANK0 ] unsigned char 
 15016 ;; Return value:  Size  Location     Type
 15017 ;;		None               void
 15018 ;; Registers used:
 15019 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15020 ;; Tracked objects:
 15021 ;;		On entry : 0/0
 15022 ;;		On exit  : 0/0
 15023 ;;		Unchanged: 0/0
 15024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15025 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15026 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15027 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15028 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15029 ;;Total ram usage:        5 bytes
 15030 ;; Hardware stack levels used:    1
 15031 ;; Hardware stack levels required when called:    7
 15032 ;; This function calls:
 15033 ;;		_setPercentValue
 15034 ;; This function is called by:
 15035 ;;		_DlyOff_Main
 15036 ;;		_setDimmerLights_Adj
 15037 ;;		_setRFSW_Control
 15038 ;;		_Sw_DimmerOnFunc
 15039 ;;		_Sw_DimmerOffFunc
 15040 ;; This function uses a non-reentrant model
 15041 ;;
 15042                           
 15043                           
 15044                           ;psect for function _setRF_DimmerLights
 15045  1560                     _setRF_DimmerLights:	
 15046                           
 15047                           ;incstack = 0
 15048                           ; Regs used in _setRF_DimmerLights: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15049                           ;setRF_DimmerLights@lights stored from wreg
 15050  1560  0020               	movlb	0	; select bank0
 15051  1561  00E1               	movwf	setRF_DimmerLights@lights
 15052                           
 15053                           ;RF_Control_B1.c: 447: char status;
 15054                           ;RF_Control_B1.c: 448: status=1;
 15055  1562  01E0               	clrf	setRF_DimmerLights@status
 15056  1563  0AE0               	incf	setRF_DimmerLights@status,f
 15057                           
 15058                           ;RF_Control_B1.c: 449: status<<=(lights-1);
 15059  1564  0861               	movf	setRF_DimmerLights@lights,w
 15060  1565  3EFF               	addlw	-1
 15061  1566  0A89               	incf	9,f
 15062  1567  2D6A               	goto	u8180
 15063  1568                     u8185:	
 15064  1568  1003               	clrc
 15065  1569  0DE0               	rlf	setRF_DimmerLights@status,f
 15066  156A                     u8180:	
 15067  156A  3EFF               	addlw	-1
 15068  156B  1D03               	skipz
 15069  156C  2D68               	goto	u8185
 15070                           
 15071                           ;RF_Control_B1.c: 450: Product->Data[11]=lights;
 15072  156D  0861               	movf	setRF_DimmerLights@lights,w
 15073  156E  00DE               	movwf	??_setRF_DimmerLights
 15074  156F  086E               	movf	_Product,w
 15075  1570  3E0B               	addlw	11
 15076  1571  0086               	movwf	6
 15077  1572  3001               	movlw	1	; select bank2/3
 15078  1573  0087               	movwf	7
 15079  1574  085E               	movf	??_setRF_DimmerLights,w
 15080  1575  0081               	movwf	1
 15081                           
 15082                           ;RF_Control_B1.c: 453: Product->Data[(20+lights)]=setPercentValue(((char)((100-55)*1.5))
      +                          );
 15083  1576  3043               	movlw	67
 15084  1577  3191  2189  3195   	fcall	_setPercentValue
 15085  157A  0020               	movlb	0	; select bank0
 15086  157B  00DE               	movwf	??_setRF_DimmerLights
 15087  157C  0861               	movf	setRF_DimmerLights@lights,w
 15088  157D  3E14               	addlw	20
 15089  157E  076E               	addwf	_Product,w
 15090  157F  00DF               	movwf	??_setRF_DimmerLights+1
 15091  1580  085F               	movf	??_setRF_DimmerLights+1,w
 15092  1581  0086               	movwf	6
 15093  1582  3001               	movlw	1	; select bank2/3
 15094  1583  0087               	movwf	7
 15095  1584  085E               	movf	??_setRF_DimmerLights,w
 15096  1585  0081               	movwf	1
 15097                           
 15098                           ;RF_Control_B1.c: 456: Product->Data[9]=Product->Data[20+lights];
 15099  1586  0861               	movf	setRF_DimmerLights@lights,w
 15100  1587  3E14               	addlw	20
 15101  1588  076E               	addwf	_Product,w
 15102  1589  00DE               	movwf	??_setRF_DimmerLights
 15103  158A  085E               	movf	??_setRF_DimmerLights,w
 15104  158B  0086               	movwf	6
 15105  158C  3001               	movlw	1	; select bank2/3
 15106  158D  0087               	movwf	7
 15107  158E  0801               	movf	1,w
 15108  158F  00DF               	movwf	??_setRF_DimmerLights+1
 15109  1590  086E               	movf	_Product,w
 15110  1591  3E09               	addlw	9
 15111  1592  0086               	movwf	6
 15112  1593  3001               	movlw	1	; select bank2/3
 15113  1594  0087               	movwf	7
 15114  1595  085F               	movf	??_setRF_DimmerLights+1,w
 15115  1596  0081               	movwf	1
 15116                           
 15117                           ;RF_Control_B1.c: 457: Product->Data[17]=Product->Data[26+lights];
 15118  1597  0861               	movf	setRF_DimmerLights@lights,w
 15119  1598  3E1A               	addlw	26
 15120  1599  076E               	addwf	_Product,w
 15121  159A  00DE               	movwf	??_setRF_DimmerLights
 15122  159B  085E               	movf	??_setRF_DimmerLights,w
 15123  159C  0086               	movwf	6
 15124  159D  3001               	movlw	1	; select bank2/3
 15125  159E  0087               	movwf	7
 15126  159F  0801               	movf	1,w
 15127  15A0  00DF               	movwf	??_setRF_DimmerLights+1
 15128  15A1  086E               	movf	_Product,w
 15129  15A2  3E11               	addlw	17
 15130  15A3  0086               	movwf	6
 15131  15A4  3001               	movlw	1	; select bank2/3
 15132  15A5  0087               	movwf	7
 15133  15A6  085F               	movf	??_setRF_DimmerLights+1,w
 15134  15A7  0081               	movwf	1
 15135                           
 15136                           ;RF_Control_B1.c: 458: if(on)
 15137  15A8  085D               	movf	setRF_DimmerLights@on,w
 15138  15A9  1903               	btfsc	3,2
 15139  15AA  2DBB               	goto	l8305
 15140                           
 15141                           ;RF_Control_B1.c: 459: {
 15142                           ;RF_Control_B1.c: 460: Product->Data[15]=(Product->Data[15]|status);
 15143  15AB  086E               	movf	_Product,w
 15144  15AC  3E0F               	addlw	15
 15145  15AD  0086               	movwf	6
 15146  15AE  3001               	movlw	1	; select bank2/3
 15147  15AF  0087               	movwf	7
 15148  15B0  0801               	movf	1,w
 15149  15B1  0460               	iorwf	setRF_DimmerLights@status,w
 15150  15B2  00DE               	movwf	??_setRF_DimmerLights
 15151  15B3  086E               	movf	_Product,w
 15152  15B4  3E0F               	addlw	15
 15153  15B5  0086               	movwf	6
 15154  15B6  3001               	movlw	1	; select bank2/3
 15155  15B7  0087               	movwf	7
 15156  15B8  085E               	movf	??_setRF_DimmerLights,w
 15157  15B9  0081               	movwf	1
 15158                           
 15159                           ;RF_Control_B1.c: 461: }
 15160  15BA  0008               	return
 15161  15BB                     l8305:	
 15162                           
 15163                           ;RF_Control_B1.c: 462: else
 15164                           ;RF_Control_B1.c: 463: {
 15165                           ;RF_Control_B1.c: 464: Product->Data[15]=(Product->Data[15]&(~status));
 15166  15BB  086E               	movf	_Product,w
 15167  15BC  3E0F               	addlw	15
 15168  15BD  0086               	movwf	6
 15169  15BE  3001               	movlw	1	; select bank2/3
 15170  15BF  0087               	movwf	7
 15171  15C0  0960               	comf	setRF_DimmerLights@status,w
 15172  15C1  0501               	andwf	1,w
 15173  15C2  00DE               	movwf	??_setRF_DimmerLights
 15174  15C3  086E               	movf	_Product,w
 15175  15C4  3E0F               	addlw	15
 15176  15C5  0086               	movwf	6
 15177  15C6  3001               	movlw	1	; select bank2/3
 15178  15C7  0087               	movwf	7
 15179  15C8  085E               	movf	??_setRF_DimmerLights,w
 15180  15C9  0081               	movwf	1
 15181  15CA  0008               	return
 15182  15CB                     __end_of_setRF_DimmerLights:	
 15183                           
 15184                           	psect	text94
 15185  1189                     __ptext94:	
 15186 ;; *************** function _setPercentValue *****************
 15187 ;; Defined at:
 15188 ;;		line 505 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 15189 ;; Parameters:    Size  Location     Type
 15190 ;;  value           1    wreg     unsigned char 
 15191 ;; Auto vars:     Size  Location     Type
 15192 ;;  value           1   57[BANK0 ] unsigned char 
 15193 ;;  i               3   58[BANK0 ] float 
 15194 ;; Return value:  Size  Location     Type
 15195 ;;                  1    wreg      unsigned char 
 15196 ;; Registers used:
 15197 ;;		wreg, status,2, status,0, pclath, cstack
 15198 ;; Tracked objects:
 15199 ;;		On entry : 0/0
 15200 ;;		On exit  : 0/0
 15201 ;;		Unchanged: 0/0
 15202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15203 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15204 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15205 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15206 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15207 ;;Total ram usage:        4 bytes
 15208 ;; Hardware stack levels used:    1
 15209 ;; Hardware stack levels required when called:    6
 15210 ;; This function calls:
 15211 ;;		___awtoft
 15212 ;;		___ftdiv
 15213 ;;		___fttol
 15214 ;; This function is called by:
 15215 ;;		_Flash_Memory_Initialization
 15216 ;;		_setRF_DimmerLights
 15217 ;; This function uses a non-reentrant model
 15218 ;;
 15219                           
 15220                           
 15221                           ;psect for function _setPercentValue
 15222  1189                     _setPercentValue:	
 15223                           
 15224                           ;incstack = 0
 15225                           ; Regs used in _setPercentValue: [wreg+status,2+status,0+pclath+cstack]
 15226                           ;setPercentValue@value stored from wreg
 15227  1189  0020               	movlb	0	; select bank0
 15228  118A  00D9               	movwf	setPercentValue@value
 15229                           
 15230                           ;Dimmer_B1.c: 508: float i=((char)((100-20)*1.5))-((char)((100-55)*1.5));
 15231  118B  3000               	movlw	0
 15232  118C  00DA               	movwf	setPercentValue@i
 15233  118D  3054               	movlw	84
 15234  118E  00DB               	movwf	setPercentValue@i+1
 15235  118F  3042               	movlw	66
 15236  1190  00DC               	movwf	setPercentValue@i+2
 15237                           
 15238                           ;Dimmer_B1.c: 509: i/=100;
 15239  1191  3000               	movlw	0
 15240  1192  00AE               	movwf	___ftdiv@f2
 15241  1193  30C8               	movlw	200
 15242  1194  00AF               	movwf	___ftdiv@f2+1
 15243  1195  3042               	movlw	66
 15244  1196  00B0               	movwf	___ftdiv@f2+2
 15245  1197  085A               	movf	setPercentValue@i,w
 15246  1198  00B1               	movwf	___ftdiv@f1
 15247  1199  085B               	movf	setPercentValue@i+1,w
 15248  119A  00B2               	movwf	___ftdiv@f1+1
 15249  119B  085C               	movf	setPercentValue@i+2,w
 15250  119C  00B3               	movwf	___ftdiv@f1+2
 15251  119D  318C  24C4  3191   	fcall	___ftdiv
 15252  11A0  0020               	movlb	0	; select bank0
 15253  11A1  082E               	movf	?___ftdiv,w
 15254  11A2  00DA               	movwf	setPercentValue@i
 15255  11A3  082F               	movf	?___ftdiv+1,w
 15256  11A4  00DB               	movwf	setPercentValue@i+1
 15257  11A5  0830               	movf	?___ftdiv+2,w
 15258  11A6  00DC               	movwf	setPercentValue@i+2
 15259                           
 15260                           ;Dimmer_B1.c: 510: return (100-(char)((value-((char)((100-55)*1.5)))/i));
 15261  11A7  0859               	movf	setPercentValue@value,w
 15262  11A8  3EBD               	addlw	189
 15263  11A9  00A8               	movwf	___awtoft@c
 15264  11AA  30FF               	movlw	255
 15265  11AB  1803               	skipnc
 15266  11AC  3000               	movlw	0
 15267  11AD  00A9               	movwf	___awtoft@c+1
 15268  11AE  319C  24FC  3191   	fcall	___awtoft
 15269  11B1  0020               	movlb	0	; select bank0
 15270  11B2  0828               	movf	?___awtoft,w
 15271  11B3  00B1               	movwf	___ftdiv@f1
 15272  11B4  0829               	movf	?___awtoft+1,w
 15273  11B5  00B2               	movwf	___ftdiv@f1+1
 15274  11B6  082A               	movf	?___awtoft+2,w
 15275  11B7  00B3               	movwf	___ftdiv@f1+2
 15276  11B8  085A               	movf	setPercentValue@i,w
 15277  11B9  00AE               	movwf	___ftdiv@f2
 15278  11BA  085B               	movf	setPercentValue@i+1,w
 15279  11BB  00AF               	movwf	___ftdiv@f2+1
 15280  11BC  085C               	movf	setPercentValue@i+2,w
 15281  11BD  00B0               	movwf	___ftdiv@f2+2
 15282  11BE  318C  24C4  3191   	fcall	___ftdiv
 15283  11C1  0020               	movlb	0	; select bank0
 15284  11C2  082E               	movf	?___ftdiv,w
 15285  11C3  00CB               	movwf	___fttol@f1
 15286  11C4  082F               	movf	?___ftdiv+1,w
 15287  11C5  00CC               	movwf	___fttol@f1+1
 15288  11C6  0830               	movf	?___ftdiv+2,w
 15289  11C7  00CD               	movwf	___fttol@f1+2
 15290  11C8  3189  2157         	fcall	___fttol
 15291  11CA  0020               	movlb	0	; select bank0
 15292  11CB  034B               	decf	?___fttol,w
 15293  11CC  3AFF               	xorlw	255
 15294  11CD  3E64               	addlw	100
 15295  11CE  0008               	return
 15296  11CF                     __end_of_setPercentValue:	
 15297                           
 15298                           	psect	text95
 15299  0957                     __ptext95:	
 15300 ;; *************** function ___fttol *****************
 15301 ;; Defined at:
 15302 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\fttol.c"
 15303 ;; Parameters:    Size  Location     Type
 15304 ;;  f1              3   43[BANK0 ] float 
 15305 ;; Auto vars:     Size  Location     Type
 15306 ;;  lval            4   52[BANK0 ] unsigned long 
 15307 ;;  exp1            1   56[BANK0 ] unsigned char 
 15308 ;;  sign1           1   51[BANK0 ] unsigned char 
 15309 ;; Return value:  Size  Location     Type
 15310 ;;                  4   43[BANK0 ] long 
 15311 ;; Registers used:
 15312 ;;		wreg, status,2, status,0
 15313 ;; Tracked objects:
 15314 ;;		On entry : 0/0
 15315 ;;		On exit  : 0/0
 15316 ;;		Unchanged: 0/0
 15317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15318 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15319 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15320 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15321 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15322 ;;Total ram usage:       14 bytes
 15323 ;; Hardware stack levels used:    1
 15324 ;; Hardware stack levels required when called:    4
 15325 ;; This function calls:
 15326 ;;		Nothing
 15327 ;; This function is called by:
 15328 ;;		_getPercentValue
 15329 ;;		_setPercentValue
 15330 ;; This function uses a non-reentrant model
 15331 ;;
 15332                           
 15333                           
 15334                           ;psect for function ___fttol
 15335  0957                     ___fttol:	
 15336                           
 15337                           ;incstack = 0
 15338                           ; Regs used in ___fttol: [wreg+status,2+status,0]
 15339  0957  0020               	movlb	0	; select bank0
 15340  0958  084B               	movf	___fttol@f1,w
 15341  0959  00CF               	movwf	??___fttol
 15342  095A  084C               	movf	___fttol@f1+1,w
 15343  095B  00D0               	movwf	??___fttol+1
 15344  095C  084D               	movf	___fttol@f1+2,w
 15345  095D  00D1               	movwf	??___fttol+2
 15346  095E  1003               	clrc
 15347  095F  0D50               	rlf	??___fttol+1,w
 15348  0960  0D51               	rlf	??___fttol+2,w
 15349  0961  00D2               	movwf	??___fttol+3
 15350  0962  0852               	movf	??___fttol+3,w
 15351  0963  00D8               	movwf	___fttol@exp1
 15352  0964  08D8               	movf	___fttol@exp1,f
 15353  0965  1D03               	skipz
 15354  0966  2970               	goto	l8119
 15355  0967  3000               	movlw	0
 15356  0968  00CE               	movwf	?___fttol+3
 15357  0969  3000               	movlw	0
 15358  096A  00CD               	movwf	?___fttol+2
 15359  096B  3000               	movlw	0
 15360  096C  00CC               	movwf	?___fttol+1
 15361  096D  3000               	movlw	0
 15362  096E  00CB               	movwf	?___fttol
 15363  096F  0008               	return
 15364  0970                     l8119:	
 15365  0970  084B               	movf	___fttol@f1,w
 15366  0971  00CF               	movwf	??___fttol
 15367  0972  084C               	movf	___fttol@f1+1,w
 15368  0973  00D0               	movwf	??___fttol+1
 15369  0974  084D               	movf	___fttol@f1+2,w
 15370  0975  00D1               	movwf	??___fttol+2
 15371  0976  3017               	movlw	23
 15372  0977                     u7835:	
 15373  0977  36D1               	lsrf	??___fttol+2,f
 15374  0978  0CD0               	rrf	??___fttol+1,f
 15375  0979  0CCF               	rrf	??___fttol,f
 15376  097A  0B89               	decfsz	9,f
 15377  097B  2977               	goto	u7835
 15378  097C  084F               	movf	??___fttol,w
 15379  097D  00D2               	movwf	??___fttol+3
 15380  097E  0852               	movf	??___fttol+3,w
 15381  097F  00D3               	movwf	___fttol@sign1
 15382  0980  17CC               	bsf	___fttol@f1+1,7
 15383  0981  30FF               	movlw	255
 15384  0982  05CB               	andwf	___fttol@f1,f
 15385  0983  30FF               	movlw	255
 15386  0984  05CC               	andwf	___fttol@f1+1,f
 15387  0985  3000               	movlw	0
 15388  0986  05CD               	andwf	___fttol@f1+2,f
 15389  0987  084B               	movf	___fttol@f1,w
 15390  0988  00D4               	movwf	___fttol@lval
 15391  0989  084C               	movf	___fttol@f1+1,w
 15392  098A  00D5               	movwf	___fttol@lval+1
 15393  098B  084D               	movf	___fttol@f1+2,w
 15394  098C  00D6               	movwf	___fttol@lval+2
 15395  098D  01D7               	clrf	___fttol@lval+3
 15396  098E  308E               	movlw	142
 15397  098F  02D8               	subwf	___fttol@exp1,f
 15398  0990  1FD8               	btfss	___fttol@exp1,7
 15399  0991  29AE               	goto	l8139
 15400  0992  0858               	movf	___fttol@exp1,w
 15401  0993  3A80               	xorlw	128
 15402  0994  3E8F               	addlw	143
 15403  0995  1803               	skipnc
 15404  0996  29A0               	goto	l8137
 15405  0997  3000               	movlw	0
 15406  0998  00CE               	movwf	?___fttol+3
 15407  0999  3000               	movlw	0
 15408  099A  00CD               	movwf	?___fttol+2
 15409  099B  3000               	movlw	0
 15410  099C  00CC               	movwf	?___fttol+1
 15411  099D  3000               	movlw	0
 15412  099E  00CB               	movwf	?___fttol
 15413  099F  0008               	return
 15414  09A0                     l8137:	
 15415  09A0  3001               	movlw	1
 15416  09A1                     u7865:	
 15417  09A1  36D7               	lsrf	___fttol@lval+3,f
 15418  09A2  0CD6               	rrf	___fttol@lval+2,f
 15419  09A3  0CD5               	rrf	___fttol@lval+1,f
 15420  09A4  0CD4               	rrf	___fttol@lval,f
 15421  09A5  0B89               	decfsz	9,f
 15422  09A6  29A1               	goto	u7865
 15423  09A7  3001               	movlw	1
 15424  09A8  00CF               	movwf	??___fttol
 15425  09A9  084F               	movf	??___fttol,w
 15426  09AA  07D8               	addwf	___fttol@exp1,f
 15427  09AB  1903               	btfsc	3,2
 15428  09AC  29C7               	goto	l8149
 15429  09AD  29A0               	goto	l8137
 15430  09AE                     l8139:	
 15431  09AE  3018               	movlw	24
 15432  09AF  0258               	subwf	___fttol@exp1,w
 15433  09B0  1C03               	skipc
 15434  09B1  29C4               	goto	l8147
 15435  09B2  3000               	movlw	0
 15436  09B3  00CE               	movwf	?___fttol+3
 15437  09B4  3000               	movlw	0
 15438  09B5  00CD               	movwf	?___fttol+2
 15439  09B6  3000               	movlw	0
 15440  09B7  00CC               	movwf	?___fttol+1
 15441  09B8  3000               	movlw	0
 15442  09B9  00CB               	movwf	?___fttol
 15443  09BA  0008               	return
 15444  09BB                     l8145:	
 15445  09BB  3001               	movlw	1
 15446  09BC                     u7895:	
 15447  09BC  35D4               	lslf	___fttol@lval,f
 15448  09BD  0DD5               	rlf	___fttol@lval+1,f
 15449  09BE  0DD6               	rlf	___fttol@lval+2,f
 15450  09BF  0DD7               	rlf	___fttol@lval+3,f
 15451  09C0  0B89               	decfsz	9,f
 15452  09C1  29BC               	goto	u7895
 15453  09C2  3001               	movlw	1
 15454  09C3  02D8               	subwf	___fttol@exp1,f
 15455  09C4                     l8147:	
 15456  09C4  08D8               	movf	___fttol@exp1,f
 15457  09C5  1D03               	skipz
 15458  09C6  29BB               	goto	l8145
 15459  09C7                     l8149:	
 15460  09C7  0853               	movf	___fttol@sign1,w
 15461  09C8  1903               	btfsc	3,2
 15462  09C9  29D5               	goto	l8153
 15463  09CA  09D4               	comf	___fttol@lval,f
 15464  09CB  09D5               	comf	___fttol@lval+1,f
 15465  09CC  09D6               	comf	___fttol@lval+2,f
 15466  09CD  09D7               	comf	___fttol@lval+3,f
 15467  09CE  0AD4               	incf	___fttol@lval,f
 15468  09CF  1903               	skipnz
 15469  09D0  0AD5               	incf	___fttol@lval+1,f
 15470  09D1  1903               	skipnz
 15471  09D2  0AD6               	incf	___fttol@lval+2,f
 15472  09D3  1903               	skipnz
 15473  09D4  0AD7               	incf	___fttol@lval+3,f
 15474  09D5                     l8153:	
 15475  09D5  0857               	movf	___fttol@lval+3,w
 15476  09D6  00CE               	movwf	?___fttol+3
 15477  09D7  0856               	movf	___fttol@lval+2,w
 15478  09D8  00CD               	movwf	?___fttol+2
 15479  09D9  0855               	movf	___fttol@lval+1,w
 15480  09DA  00CC               	movwf	?___fttol+1
 15481  09DB  0854               	movf	___fttol@lval,w
 15482  09DC  00CB               	movwf	?___fttol
 15483  09DD  0008               	return
 15484  09DE                     __end_of___fttol:	
 15485                           
 15486                           	psect	text96
 15487  0CC4                     __ptext96:	
 15488 ;; *************** function ___ftdiv *****************
 15489 ;; Defined at:
 15490 ;;		line 49 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic\ftdiv.c"
 15491 ;; Parameters:    Size  Location     Type
 15492 ;;  f2              3   14[BANK0 ] float 
 15493 ;;  f1              3   17[BANK0 ] float 
 15494 ;; Auto vars:     Size  Location     Type
 15495 ;;  f3              3   25[BANK0 ] float 
 15496 ;;  sign            1   29[BANK0 ] unsigned char 
 15497 ;;  exp             1   28[BANK0 ] unsigned char 
 15498 ;;  cntr            1   24[BANK0 ] unsigned char 
 15499 ;; Return value:  Size  Location     Type
 15500 ;;                  3   14[BANK0 ] float 
 15501 ;; Registers used:
 15502 ;;		wreg, status,2, status,0, pclath, cstack
 15503 ;; Tracked objects:
 15504 ;;		On entry : 0/0
 15505 ;;		On exit  : 0/0
 15506 ;;		Unchanged: 0/0
 15507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15508 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15509 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15510 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15511 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15512 ;;Total ram usage:       16 bytes
 15513 ;; Hardware stack levels used:    1
 15514 ;; Hardware stack levels required when called:    5
 15515 ;; This function calls:
 15516 ;;		___ftpack
 15517 ;; This function is called by:
 15518 ;;		_getPercentValue
 15519 ;;		_setPercentValue
 15520 ;; This function uses a non-reentrant model
 15521 ;;
 15522                           
 15523                           
 15524                           ;psect for function ___ftdiv
 15525  0CC4                     ___ftdiv:	
 15526                           
 15527                           ;incstack = 0
 15528                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
 15529  0CC4  0020               	movlb	0	; select bank0
 15530  0CC5  0831               	movf	___ftdiv@f1,w
 15531  0CC6  00B4               	movwf	??___ftdiv
 15532  0CC7  0832               	movf	___ftdiv@f1+1,w
 15533  0CC8  00B5               	movwf	??___ftdiv+1
 15534  0CC9  0833               	movf	___ftdiv@f1+2,w
 15535  0CCA  00B6               	movwf	??___ftdiv+2
 15536  0CCB  1003               	clrc
 15537  0CCC  0D35               	rlf	??___ftdiv+1,w
 15538  0CCD  0D36               	rlf	??___ftdiv+2,w
 15539  0CCE  00B7               	movwf	??___ftdiv+3
 15540  0CCF  0837               	movf	??___ftdiv+3,w
 15541  0CD0  00BC               	movwf	___ftdiv@exp
 15542  0CD1  08BC               	movf	___ftdiv@exp,f
 15543  0CD2  1D03               	skipz
 15544  0CD3  2CDB               	goto	l8027
 15545  0CD4  3000               	movlw	0
 15546  0CD5  00AE               	movwf	?___ftdiv
 15547  0CD6  3000               	movlw	0
 15548  0CD7  00AF               	movwf	?___ftdiv+1
 15549  0CD8  3000               	movlw	0
 15550  0CD9  00B0               	movwf	?___ftdiv+2
 15551  0CDA  0008               	return
 15552  0CDB                     l8027:	
 15553  0CDB  082E               	movf	___ftdiv@f2,w
 15554  0CDC  00B4               	movwf	??___ftdiv
 15555  0CDD  082F               	movf	___ftdiv@f2+1,w
 15556  0CDE  00B5               	movwf	??___ftdiv+1
 15557  0CDF  0830               	movf	___ftdiv@f2+2,w
 15558  0CE0  00B6               	movwf	??___ftdiv+2
 15559  0CE1  1003               	clrc
 15560  0CE2  0D35               	rlf	??___ftdiv+1,w
 15561  0CE3  0D36               	rlf	??___ftdiv+2,w
 15562  0CE4  00B7               	movwf	??___ftdiv+3
 15563  0CE5  0837               	movf	??___ftdiv+3,w
 15564  0CE6  00BD               	movwf	___ftdiv@sign
 15565  0CE7  08BD               	movf	___ftdiv@sign,f
 15566  0CE8  1D03               	skipz
 15567  0CE9  2CF1               	goto	l8033
 15568  0CEA  3000               	movlw	0
 15569  0CEB  00AE               	movwf	?___ftdiv
 15570  0CEC  3000               	movlw	0
 15571  0CED  00AF               	movwf	?___ftdiv+1
 15572  0CEE  3000               	movlw	0
 15573  0CEF  00B0               	movwf	?___ftdiv+2
 15574  0CF0  0008               	return
 15575  0CF1                     l8033:	
 15576  0CF1  3000               	movlw	0
 15577  0CF2  00B9               	movwf	___ftdiv@f3
 15578  0CF3  3000               	movlw	0
 15579  0CF4  00BA               	movwf	___ftdiv@f3+1
 15580  0CF5  3000               	movlw	0
 15581  0CF6  00BB               	movwf	___ftdiv@f3+2
 15582  0CF7  3089               	movlw	137
 15583  0CF8  073D               	addwf	___ftdiv@sign,w
 15584  0CF9  00B4               	movwf	??___ftdiv
 15585  0CFA  0834               	movf	??___ftdiv,w
 15586  0CFB  02BC               	subwf	___ftdiv@exp,f
 15587  0CFC  0831               	movf	___ftdiv@f1,w
 15588  0CFD  00B4               	movwf	??___ftdiv
 15589  0CFE  0832               	movf	___ftdiv@f1+1,w
 15590  0CFF  00B5               	movwf	??___ftdiv+1
 15591  0D00  0833               	movf	___ftdiv@f1+2,w
 15592  0D01  00B6               	movwf	??___ftdiv+2
 15593  0D02  3010               	movlw	16
 15594  0D03                     u7645:	
 15595  0D03  36B6               	lsrf	??___ftdiv+2,f
 15596  0D04  0CB5               	rrf	??___ftdiv+1,f
 15597  0D05  0CB4               	rrf	??___ftdiv,f
 15598  0D06  0B89               	decfsz	9,f
 15599  0D07  2D03               	goto	u7645
 15600  0D08  0834               	movf	??___ftdiv,w
 15601  0D09  00B7               	movwf	??___ftdiv+3
 15602  0D0A  0837               	movf	??___ftdiv+3,w
 15603  0D0B  00BD               	movwf	___ftdiv@sign
 15604  0D0C  082E               	movf	___ftdiv@f2,w
 15605  0D0D  00B4               	movwf	??___ftdiv
 15606  0D0E  082F               	movf	___ftdiv@f2+1,w
 15607  0D0F  00B5               	movwf	??___ftdiv+1
 15608  0D10  0830               	movf	___ftdiv@f2+2,w
 15609  0D11  00B6               	movwf	??___ftdiv+2
 15610  0D12  3010               	movlw	16
 15611  0D13                     u7655:	
 15612  0D13  36B6               	lsrf	??___ftdiv+2,f
 15613  0D14  0CB5               	rrf	??___ftdiv+1,f
 15614  0D15  0CB4               	rrf	??___ftdiv,f
 15615  0D16  0B89               	decfsz	9,f
 15616  0D17  2D13               	goto	u7655
 15617  0D18  0834               	movf	??___ftdiv,w
 15618  0D19  00B7               	movwf	??___ftdiv+3
 15619  0D1A  0837               	movf	??___ftdiv+3,w
 15620  0D1B  06BD               	xorwf	___ftdiv@sign,f
 15621  0D1C  3080               	movlw	128
 15622  0D1D  00B4               	movwf	??___ftdiv
 15623  0D1E  0834               	movf	??___ftdiv,w
 15624  0D1F  05BD               	andwf	___ftdiv@sign,f
 15625  0D20  17B2               	bsf	___ftdiv@f1+1,7
 15626  0D21  30FF               	movlw	255
 15627  0D22  05B1               	andwf	___ftdiv@f1,f
 15628  0D23  30FF               	movlw	255
 15629  0D24  05B2               	andwf	___ftdiv@f1+1,f
 15630  0D25  3000               	movlw	0
 15631  0D26  05B3               	andwf	___ftdiv@f1+2,f
 15632  0D27  17AF               	bsf	___ftdiv@f2+1,7
 15633  0D28  30FF               	movlw	255
 15634  0D29  05AE               	andwf	___ftdiv@f2,f
 15635  0D2A  30FF               	movlw	255
 15636  0D2B  05AF               	andwf	___ftdiv@f2+1,f
 15637  0D2C  3000               	movlw	0
 15638  0D2D  05B0               	andwf	___ftdiv@f2+2,f
 15639  0D2E  3018               	movlw	24
 15640  0D2F  00B4               	movwf	??___ftdiv
 15641  0D30  0834               	movf	??___ftdiv,w
 15642  0D31  00B8               	movwf	___ftdiv@cntr
 15643  0D32                     l8047:	
 15644  0D32  3001               	movlw	1
 15645  0D33                     u7665:	
 15646  0D33  35B9               	lslf	___ftdiv@f3,f
 15647  0D34  0DBA               	rlf	___ftdiv@f3+1,f
 15648  0D35  0DBB               	rlf	___ftdiv@f3+2,f
 15649  0D36  0B89               	decfsz	9,f
 15650  0D37  2D33               	goto	u7665
 15651  0D38  0830               	movf	___ftdiv@f2+2,w
 15652  0D39  0233               	subwf	___ftdiv@f1+2,w
 15653  0D3A  1D03               	skipz
 15654  0D3B  2D42               	goto	u7675
 15655  0D3C  082F               	movf	___ftdiv@f2+1,w
 15656  0D3D  0232               	subwf	___ftdiv@f1+1,w
 15657  0D3E  1D03               	skipz
 15658  0D3F  2D42               	goto	u7675
 15659  0D40  082E               	movf	___ftdiv@f2,w
 15660  0D41  0231               	subwf	___ftdiv@f1,w
 15661  0D42                     u7675:	
 15662  0D42  1C03               	skipc
 15663  0D43  2D4B               	goto	l8055
 15664  0D44  082E               	movf	___ftdiv@f2,w
 15665  0D45  02B1               	subwf	___ftdiv@f1,f
 15666  0D46  082F               	movf	___ftdiv@f2+1,w
 15667  0D47  3BB2               	subwfb	___ftdiv@f1+1,f
 15668  0D48  0830               	movf	___ftdiv@f2+2,w
 15669  0D49  3BB3               	subwfb	___ftdiv@f1+2,f
 15670  0D4A  1439               	bsf	___ftdiv@f3,0
 15671  0D4B                     l8055:	
 15672  0D4B  3001               	movlw	1
 15673  0D4C                     u7685:	
 15674  0D4C  35B1               	lslf	___ftdiv@f1,f
 15675  0D4D  0DB2               	rlf	___ftdiv@f1+1,f
 15676  0D4E  0DB3               	rlf	___ftdiv@f1+2,f
 15677  0D4F  0B89               	decfsz	9,f
 15678  0D50  2D4C               	goto	u7685
 15679  0D51  3001               	movlw	1
 15680  0D52  02B8               	subwf	___ftdiv@cntr,f
 15681  0D53  1D03               	btfss	3,2
 15682  0D54  2D32               	goto	l8047
 15683  0D55  0839               	movf	___ftdiv@f3,w
 15684  0D56  00A0               	movwf	___ftpack@arg
 15685  0D57  083A               	movf	___ftdiv@f3+1,w
 15686  0D58  00A1               	movwf	___ftpack@arg+1
 15687  0D59  083B               	movf	___ftdiv@f3+2,w
 15688  0D5A  00A2               	movwf	___ftpack@arg+2
 15689  0D5B  083C               	movf	___ftdiv@exp,w
 15690  0D5C  00B4               	movwf	??___ftdiv
 15691  0D5D  0834               	movf	??___ftdiv,w
 15692  0D5E  00A3               	movwf	___ftpack@exp
 15693  0D5F  083D               	movf	___ftdiv@sign,w
 15694  0D60  00B5               	movwf	??___ftdiv+1
 15695  0D61  0835               	movf	??___ftdiv+1,w
 15696  0D62  00A4               	movwf	___ftpack@sign
 15697  0D63  3188  2002         	fcall	___ftpack
 15698  0D65  0020               	movlb	0	; select bank0
 15699  0D66  0820               	movf	?___ftpack,w
 15700  0D67  00AE               	movwf	?___ftdiv
 15701  0D68  0821               	movf	?___ftpack+1,w
 15702  0D69  00AF               	movwf	?___ftdiv+1
 15703  0D6A  0822               	movf	?___ftpack+2,w
 15704  0D6B  00B0               	movwf	?___ftdiv+2
 15705  0D6C  0008               	return
 15706  0D6D                     __end_of___ftdiv:	
 15707                           
 15708                           	psect	text97
 15709  1CFC                     __ptext97:	
 15710 ;; *************** function ___awtoft *****************
 15711 ;; Defined at:
 15712 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\awtoft.c"
 15713 ;; Parameters:    Size  Location     Type
 15714 ;;  c               2    8[BANK0 ] int 
 15715 ;; Auto vars:     Size  Location     Type
 15716 ;;  sign            1   13[BANK0 ] unsigned char 
 15717 ;; Return value:  Size  Location     Type
 15718 ;;                  3    8[BANK0 ] float 
 15719 ;; Registers used:
 15720 ;;		wreg, status,2, status,0, pclath, cstack
 15721 ;; Tracked objects:
 15722 ;;		On entry : 0/0
 15723 ;;		On exit  : 0/0
 15724 ;;		Unchanged: 0/0
 15725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15726 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15727 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15728 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15729 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15730 ;;Total ram usage:        6 bytes
 15731 ;; Hardware stack levels used:    1
 15732 ;; Hardware stack levels required when called:    5
 15733 ;; This function calls:
 15734 ;;		___ftpack
 15735 ;; This function is called by:
 15736 ;;		_getPercentValue
 15737 ;;		_setPercentValue
 15738 ;; This function uses a non-reentrant model
 15739 ;;
 15740                           
 15741                           
 15742                           ;psect for function ___awtoft
 15743  1CFC                     ___awtoft:	
 15744                           
 15745                           ;incstack = 0
 15746                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
 15747  1CFC  0020               	movlb	0	; select bank0
 15748  1CFD  01AD               	clrf	___awtoft@sign
 15749  1CFE  1FA9               	btfss	___awtoft@c+1,7
 15750  1CFF  2D07               	goto	l7945
 15751  1D00  09A8               	comf	___awtoft@c,f
 15752  1D01  09A9               	comf	___awtoft@c+1,f
 15753  1D02  0AA8               	incf	___awtoft@c,f
 15754  1D03  1903               	skipnz
 15755  1D04  0AA9               	incf	___awtoft@c+1,f
 15756  1D05  01AD               	clrf	___awtoft@sign
 15757  1D06  0AAD               	incf	___awtoft@sign,f
 15758  1D07                     l7945:	
 15759  1D07  0828               	movf	___awtoft@c,w
 15760  1D08  00A0               	movwf	___ftpack@arg
 15761  1D09  0829               	movf	___awtoft@c+1,w
 15762  1D0A  00A1               	movwf	___ftpack@arg+1
 15763  1D0B  01A2               	clrf	___ftpack@arg+2
 15764  1D0C  308E               	movlw	142
 15765  1D0D  00AB               	movwf	??___awtoft
 15766  1D0E  082B               	movf	??___awtoft,w
 15767  1D0F  00A3               	movwf	___ftpack@exp
 15768  1D10  082D               	movf	___awtoft@sign,w
 15769  1D11  00AC               	movwf	??___awtoft+1
 15770  1D12  082C               	movf	??___awtoft+1,w
 15771  1D13  00A4               	movwf	___ftpack@sign
 15772  1D14  3188  2002         	fcall	___ftpack
 15773  1D16  0020               	movlb	0	; select bank0
 15774  1D17  0820               	movf	?___ftpack,w
 15775  1D18  00A8               	movwf	?___awtoft
 15776  1D19  0821               	movf	?___ftpack+1,w
 15777  1D1A  00A9               	movwf	?___awtoft+1
 15778  1D1B  0822               	movf	?___ftpack+2,w
 15779  1D1C  00AA               	movwf	?___awtoft+2
 15780  1D1D  0008               	return
 15781  1D1E                     __end_of___awtoft:	
 15782                           
 15783                           	psect	text98
 15784  0802                     __ptext98:	
 15785 ;; *************** function ___ftpack *****************
 15786 ;; Defined at:
 15787 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\float.c"
 15788 ;; Parameters:    Size  Location     Type
 15789 ;;  arg             3    0[BANK0 ] unsigned um
 15790 ;;  exp             1    3[BANK0 ] unsigned char 
 15791 ;;  sign            1    4[BANK0 ] unsigned char 
 15792 ;; Auto vars:     Size  Location     Type
 15793 ;;		None
 15794 ;; Return value:  Size  Location     Type
 15795 ;;                  3    0[BANK0 ] float 
 15796 ;; Registers used:
 15797 ;;		wreg, status,2, status,0
 15798 ;; Tracked objects:
 15799 ;;		On entry : 0/0
 15800 ;;		On exit  : 0/0
 15801 ;;		Unchanged: 0/0
 15802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15803 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15805 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15806 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15807 ;;Total ram usage:        8 bytes
 15808 ;; Hardware stack levels used:    1
 15809 ;; Hardware stack levels required when called:    4
 15810 ;; This function calls:
 15811 ;;		Nothing
 15812 ;; This function is called by:
 15813 ;;		___awtoft
 15814 ;;		___ftadd
 15815 ;;		___ftdiv
 15816 ;;		___ftmul
 15817 ;; This function uses a non-reentrant model
 15818 ;;
 15819                           
 15820                           
 15821                           ;psect for function ___ftpack
 15822  0802                     ___ftpack:	
 15823                           
 15824                           ;incstack = 0
 15825                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
 15826  0802  0020               	movlb	0	; select bank0
 15827  0803  0823               	movf	___ftpack@exp,w
 15828  0804  1903               	btfsc	3,2
 15829  0805  280B               	goto	l7911
 15830  0806  0822               	movf	___ftpack@arg+2,w
 15831  0807  0421               	iorwf	___ftpack@arg+1,w
 15832  0808  0420               	iorwf	___ftpack@arg,w
 15833  0809  1D03               	skipz
 15834  080A  281C               	goto	l7917
 15835  080B                     l7911:	
 15836  080B  3000               	movlw	0
 15837  080C  00A0               	movwf	?___ftpack
 15838  080D  3000               	movlw	0
 15839  080E  00A1               	movwf	?___ftpack+1
 15840  080F  3000               	movlw	0
 15841  0810  00A2               	movwf	?___ftpack+2
 15842  0811  0008               	return
 15843  0812                     l7915:	
 15844  0812  3001               	movlw	1
 15845  0813  00A5               	movwf	??___ftpack
 15846  0814  0825               	movf	??___ftpack,w
 15847  0815  07A3               	addwf	___ftpack@exp,f
 15848  0816  3001               	movlw	1
 15849  0817                     u7295:	
 15850  0817  36A2               	lsrf	___ftpack@arg+2,f
 15851  0818  0CA1               	rrf	___ftpack@arg+1,f
 15852  0819  0CA0               	rrf	___ftpack@arg,f
 15853  081A  0B89               	decfsz	9,f
 15854  081B  2817               	goto	u7295
 15855  081C                     l7917:	
 15856  081C  30FE               	movlw	254
 15857  081D  0522               	andwf	___ftpack@arg+2,w
 15858  081E  1903               	btfsc	3,2
 15859  081F  2835               	goto	l3227
 15860  0820  2812               	goto	l7915
 15861  0821                     l7919:	
 15862  0821  3001               	movlw	1
 15863  0822  00A5               	movwf	??___ftpack
 15864  0823  0825               	movf	??___ftpack,w
 15865  0824  07A3               	addwf	___ftpack@exp,f
 15866  0825  3001               	movlw	1
 15867  0826  07A0               	addwf	___ftpack@arg,f
 15868  0827  3000               	movlw	0
 15869  0828  1803               	skipnc
 15870  0829  3001               	movlw	1
 15871  082A  07A1               	addwf	___ftpack@arg+1,f
 15872  082B  3000               	movlw	0
 15873  082C  1803               	skipnc
 15874  082D  3001               	movlw	1
 15875  082E  07A2               	addwf	___ftpack@arg+2,f
 15876  082F  3001               	movlw	1
 15877  0830                     u7315:	
 15878  0830  36A2               	lsrf	___ftpack@arg+2,f
 15879  0831  0CA1               	rrf	___ftpack@arg+1,f
 15880  0832  0CA0               	rrf	___ftpack@arg,f
 15881  0833  0B89               	decfsz	9,f
 15882  0834  2830               	goto	u7315
 15883  0835                     l3227:	
 15884  0835  30FF               	movlw	255
 15885  0836  0522               	andwf	___ftpack@arg+2,w
 15886  0837  1903               	btfsc	3,2
 15887  0838  2842               	goto	l7927
 15888  0839  2821               	goto	l7919
 15889  083A                     l7925:	
 15890  083A  3001               	movlw	1
 15891  083B  02A3               	subwf	___ftpack@exp,f
 15892  083C  3001               	movlw	1
 15893  083D                     u7335:	
 15894  083D  35A0               	lslf	___ftpack@arg,f
 15895  083E  0DA1               	rlf	___ftpack@arg+1,f
 15896  083F  0DA2               	rlf	___ftpack@arg+2,f
 15897  0840  0B89               	decfsz	9,f
 15898  0841  283D               	goto	u7335
 15899  0842                     l7927:	
 15900  0842  1FA1               	btfss	___ftpack@arg+1,7
 15901  0843  283A               	goto	l7925
 15902  0844  1823               	btfsc	___ftpack@exp,0
 15903  0845  284C               	goto	l3233
 15904  0846  30FF               	movlw	255
 15905  0847  05A0               	andwf	___ftpack@arg,f
 15906  0848  307F               	movlw	127
 15907  0849  05A1               	andwf	___ftpack@arg+1,f
 15908  084A  30FF               	movlw	255
 15909  084B  05A2               	andwf	___ftpack@arg+2,f
 15910  084C                     l3233:	
 15911  084C  1003               	clrc
 15912  084D  0CA3               	rrf	___ftpack@exp,f
 15913  084E  0823               	movf	___ftpack@exp,w
 15914  084F  00A5               	movwf	??___ftpack
 15915  0850  01A6               	clrf	??___ftpack+1
 15916  0851  01A7               	clrf	??___ftpack+2
 15917  0852  3010               	movlw	16
 15918  0853                     u7365:	
 15919  0853  35A5               	lslf	??___ftpack,f
 15920  0854  0DA6               	rlf	??___ftpack+1,f
 15921  0855  0DA7               	rlf	??___ftpack+2,f
 15922  0856  0B89               	decfsz	9,f
 15923  0857  2853               	goto	u7365
 15924  0858  0825               	movf	??___ftpack,w
 15925  0859  04A0               	iorwf	___ftpack@arg,f
 15926  085A  0826               	movf	??___ftpack+1,w
 15927  085B  04A1               	iorwf	___ftpack@arg+1,f
 15928  085C  0827               	movf	??___ftpack+2,w
 15929  085D  04A2               	iorwf	___ftpack@arg+2,f
 15930  085E  0824               	movf	___ftpack@sign,w
 15931  085F  1903               	btfsc	3,2
 15932  0860  0008               	return
 15933  0861  17A2               	bsf	___ftpack@arg+2,7
 15934  0862  0008               	return
 15935  0863                     __end_of___ftpack:	
 15936                           
 15937                           	psect	text99
 15938  1A56                     __ptext99:	
 15939 ;; *************** function _setRFSW_Status *****************
 15940 ;; Defined at:
 15941 ;;		line 425 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
 15942 ;; Parameters:    Size  Location     Type
 15943 ;;  sw              1    wreg     unsigned char 
 15944 ;;  command         1    2[BANK0 ] unsigned char 
 15945 ;; Auto vars:     Size  Location     Type
 15946 ;;  sw              1    3[BANK0 ] unsigned char 
 15947 ;; Return value:  Size  Location     Type
 15948 ;;		None               void
 15949 ;; Registers used:
 15950 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15951 ;; Tracked objects:
 15952 ;;		On entry : 0/0
 15953 ;;		On exit  : 0/0
 15954 ;;		Unchanged: 0/0
 15955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15956 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15957 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15959 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15960 ;;Total ram usage:        2 bytes
 15961 ;; Hardware stack levels used:    1
 15962 ;; Hardware stack levels required when called:    5
 15963 ;; This function calls:
 15964 ;;		_RfSWPointSelect
 15965 ;; This function is called by:
 15966 ;;		_DlyOff_Main
 15967 ;;		_setDimmerLights_ERROR
 15968 ;;		_setControl_Lights_Table
 15969 ;;		_Sw_DimmerOnFunc
 15970 ;;		_Sw_DimmerAdjFunc
 15971 ;; This function uses a non-reentrant model
 15972 ;;
 15973                           
 15974                           
 15975                           ;psect for function _setRFSW_Status
 15976  1A56                     _setRFSW_Status:	
 15977                           
 15978                           ;incstack = 0
 15979                           ; Regs used in _setRFSW_Status: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15980                           ;setRFSW_Status@sw stored from wreg
 15981  1A56  0020               	movlb	0	; select bank0
 15982  1A57  00A3               	movwf	setRFSW_Status@sw
 15983                           
 15984                           ;RF_Control_B1.c: 427: RfSWPointSelect(sw);
 15985  1A58  0823               	movf	setRFSW_Status@sw,w
 15986  1A59  319B  235D         	fcall	_RfSWPointSelect
 15987                           
 15988                           ;RF_Control_B1.c: 428: RFSW->Status=command;
 15989  1A5B  0021               	movlb	1	; select bank1
 15990  1A5C  083B               	movf	_RFSW^(0+128),w
 15991  1A5D  0086               	movwf	6
 15992  1A5E  0187               	clrf	7
 15993  1A5F  0020               	movlb	0	; select bank0
 15994  1A60  0822               	movf	setRFSW_Status@command,w
 15995  1A61  1001               	bcf	1,0
 15996  1A62  1D03               	skipz
 15997  1A63  1401               	bsf	1,0
 15998  1A64  0008               	return
 15999  1A65                     __end_of_setRFSW_Status:	
 16000                           
 16001                           	psect	text100
 16002  1B5D                     __ptext100:	
 16003 ;; *************** function _RfSWPointSelect *****************
 16004 ;; Defined at:
 16005 ;;		line 347 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
 16006 ;; Parameters:    Size  Location     Type
 16007 ;;  sw              1    wreg     unsigned char 
 16008 ;; Auto vars:     Size  Location     Type
 16009 ;;  sw              1    1[BANK0 ] unsigned char 
 16010 ;; Return value:  Size  Location     Type
 16011 ;;		None               void
 16012 ;; Registers used:
 16013 ;;		wreg
 16014 ;; Tracked objects:
 16015 ;;		On entry : 0/0
 16016 ;;		On exit  : 0/0
 16017 ;;		Unchanged: 0/0
 16018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16019 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16020 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16021 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16022 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16023 ;;Total ram usage:        2 bytes
 16024 ;; Hardware stack levels used:    1
 16025 ;; Hardware stack levels required when called:    4
 16026 ;; This function calls:
 16027 ;;		Nothing
 16028 ;; This function is called by:
 16029 ;;		_setRFSW_Control
 16030 ;;		_setRFSW_AdjControl
 16031 ;;		_setRFSW_Status
 16032 ;; This function uses a non-reentrant model
 16033 ;;
 16034                           
 16035                           
 16036                           ;psect for function _RfSWPointSelect
 16037  1B5D                     _RfSWPointSelect:	
 16038                           
 16039                           ;incstack = 0
 16040                           ; Regs used in _RfSWPointSelect: [wreg]
 16041                           ;RfSWPointSelect@sw stored from wreg
 16042  1B5D  0020               	movlb	0	; select bank0
 16043  1B5E  00A1               	movwf	RfSWPointSelect@sw
 16044                           
 16045                           ;RF_Control_B1.c: 350: if(sw == 1)
 16046  1B5F  0821               	movf	RfSWPointSelect@sw,w
 16047  1B60  3A01               	xorlw	1
 16048  1B61  1D03               	skipz
 16049  1B62  2B68               	goto	l2561
 16050                           
 16051                           ;RF_Control_B1.c: 351: {
 16052                           ;RF_Control_B1.c: 352: RFSW=&RFSW1;
 16053  1B63  30E8               	movlw	_RFSW1& (0+255)
 16054  1B64  00A0               	movwf	??_RfSWPointSelect
 16055  1B65  0820               	movf	??_RfSWPointSelect,w
 16056  1B66  0021               	movlb	1	; select bank1
 16057  1B67  00BB               	movwf	_RFSW^(0+128)
 16058  1B68                     l2561:	
 16059                           
 16060                           ;RF_Control_B1.c: 353: }
 16061                           ;RF_Control_B1.c: 356: if(sw == 2)
 16062  1B68  0020               	movlb	0	; select bank0
 16063  1B69  0821               	movf	RfSWPointSelect@sw,w
 16064  1B6A  3A02               	xorlw	2
 16065  1B6B  1D03               	skipz
 16066  1B6C  0008               	return
 16067                           
 16068                           ;RF_Control_B1.c: 357: {
 16069                           ;RF_Control_B1.c: 358: RFSW=&RFSW2;
 16070  1B6D  30E9               	movlw	_RFSW2& (0+255)
 16071  1B6E  00A0               	movwf	??_RfSWPointSelect
 16072  1B6F  0820               	movf	??_RfSWPointSelect,w
 16073  1B70  0021               	movlb	1	; select bank1
 16074  1B71  00BB               	movwf	_RFSW^(0+128)
 16075  1B72  0008               	return
 16076  1B73                     __end_of_RfSWPointSelect:	
 16077                           
 16078                           	psect	text101
 16079  1A94                     __ptext101:	
 16080 ;; *************** function _setDimmerLights_Trigger *****************
 16081 ;; Defined at:
 16082 ;;		line 445 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 16083 ;; Parameters:    Size  Location     Type
 16084 ;;  lights          1    wreg     unsigned char 
 16085 ;;  command         1    2[BANK0 ] unsigned char 
 16086 ;; Auto vars:     Size  Location     Type
 16087 ;;  lights          1    3[BANK0 ] unsigned char 
 16088 ;; Return value:  Size  Location     Type
 16089 ;;		None               void
 16090 ;; Registers used:
 16091 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16092 ;; Tracked objects:
 16093 ;;		On entry : 0/0
 16094 ;;		On exit  : 0/0
 16095 ;;		Unchanged: 0/0
 16096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16097 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16098 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16100 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16101 ;;Total ram usage:        2 bytes
 16102 ;; Hardware stack levels used:    1
 16103 ;; Hardware stack levels required when called:    5
 16104 ;; This function calls:
 16105 ;;		_DimmerLightsPointSelect
 16106 ;; This function is called by:
 16107 ;;		_DlyOff_Main
 16108 ;;		_setRFSW_Control
 16109 ;;		_Sw_DimmerOnFunc
 16110 ;;		_Sw_DimmerOffFunc
 16111 ;; This function uses a non-reentrant model
 16112 ;;
 16113                           
 16114                           
 16115                           ;psect for function _setDimmerLights_Trigger
 16116  1A94                     _setDimmerLights_Trigger:	
 16117                           
 16118                           ;incstack = 0
 16119                           ; Regs used in _setDimmerLights_Trigger: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 16120                           ;setDimmerLights_Trigger@lights stored from wreg
 16121  1A94  0020               	movlb	0	; select bank0
 16122  1A95  00A3               	movwf	setDimmerLights_Trigger@lights
 16123                           
 16124                           ;Dimmer_B1.c: 447: DimmerLightsPointSelect(lights);
 16125  1A96  0823               	movf	setDimmerLights_Trigger@lights,w
 16126  1A97  319A  22E5         	fcall	_DimmerLightsPointSelect
 16127                           
 16128                           ;Dimmer_B1.c: 448: DimmerLights->Trigger=command;
 16129  1A99  0020               	movlb	0	; select bank0
 16130  1A9A  086A               	movf	_DimmerLights,w
 16131  1A9B  3E09               	addlw	9
 16132  1A9C  0086               	movwf	6
 16133  1A9D  3001               	movlw	1	; select bank2/3
 16134  1A9E  0087               	movwf	7
 16135  1A9F  0822               	movf	setDimmerLights_Trigger@command,w
 16136  1AA0  1081               	bcf	1,1
 16137  1AA1  1D03               	skipz
 16138  1AA2  1481               	bsf	1,1
 16139  1AA3  0008               	return
 16140  1AA4                     __end_of_setDimmerLights_Trigger:	
 16141                           
 16142                           	psect	text102
 16143  1A84                     __ptext102:	
 16144 ;; *************** function _setDimmerLights_Switch *****************
 16145 ;; Defined at:
 16146 ;;		line 435 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 16147 ;; Parameters:    Size  Location     Type
 16148 ;;  lights          1    wreg     unsigned char 
 16149 ;;  command         1    2[BANK0 ] unsigned char 
 16150 ;; Auto vars:     Size  Location     Type
 16151 ;;  lights          1    3[BANK0 ] unsigned char 
 16152 ;; Return value:  Size  Location     Type
 16153 ;;		None               void
 16154 ;; Registers used:
 16155 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16156 ;; Tracked objects:
 16157 ;;		On entry : 0/0
 16158 ;;		On exit  : 0/0
 16159 ;;		Unchanged: 0/0
 16160 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16161 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16162 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16164 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16165 ;;Total ram usage:        2 bytes
 16166 ;; Hardware stack levels used:    1
 16167 ;; Hardware stack levels required when called:    5
 16168 ;; This function calls:
 16169 ;;		_DimmerLightsPointSelect
 16170 ;; This function is called by:
 16171 ;;		_DlyOff_Main
 16172 ;;		_setRFSW_Control
 16173 ;;		_Sw_DimmerOnFunc
 16174 ;;		_Sw_DimmerOffFunc
 16175 ;; This function uses a non-reentrant model
 16176 ;;
 16177                           
 16178                           
 16179                           ;psect for function _setDimmerLights_Switch
 16180  1A84                     _setDimmerLights_Switch:	
 16181                           
 16182                           ;incstack = 0
 16183                           ; Regs used in _setDimmerLights_Switch: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
 16184                           ;setDimmerLights_Switch@lights stored from wreg
 16185  1A84  0020               	movlb	0	; select bank0
 16186  1A85  00A3               	movwf	setDimmerLights_Switch@lights
 16187                           
 16188                           ;Dimmer_B1.c: 437: DimmerLightsPointSelect(lights);
 16189  1A86  0823               	movf	setDimmerLights_Switch@lights,w
 16190  1A87  319A  22E5         	fcall	_DimmerLightsPointSelect
 16191                           
 16192                           ;Dimmer_B1.c: 438: DimmerLights->Switch=command;
 16193  1A89  0020               	movlb	0	; select bank0
 16194  1A8A  086A               	movf	_DimmerLights,w
 16195  1A8B  3E09               	addlw	9
 16196  1A8C  0086               	movwf	6
 16197  1A8D  3001               	movlw	1	; select bank2/3
 16198  1A8E  0087               	movwf	7
 16199  1A8F  0822               	movf	setDimmerLights_Switch@command,w
 16200  1A90  1001               	bcf	1,0
 16201  1A91  1D03               	skipz
 16202  1A92  1401               	bsf	1,0
 16203  1A93  0008               	return
 16204  1A94                     __end_of_setDimmerLights_Switch:	
 16205                           
 16206                           	psect	text103
 16207  1AE5                     __ptext103:	
 16208 ;; *************** function _DimmerLightsPointSelect *****************
 16209 ;; Defined at:
 16210 ;;		line 7 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 16211 ;; Parameters:    Size  Location     Type
 16212 ;;  lights          1    wreg     unsigned char 
 16213 ;; Auto vars:     Size  Location     Type
 16214 ;;  lights          1    1[BANK0 ] unsigned char 
 16215 ;; Return value:  Size  Location     Type
 16216 ;;		None               void
 16217 ;; Registers used:
 16218 ;;		wreg
 16219 ;; Tracked objects:
 16220 ;;		On entry : 0/0
 16221 ;;		On exit  : 0/0
 16222 ;;		Unchanged: 0/0
 16223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16224 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16225 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16226 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16227 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16228 ;;Total ram usage:        2 bytes
 16229 ;; Hardware stack levels used:    1
 16230 ;; Hardware stack levels required when called:    4
 16231 ;; This function calls:
 16232 ;;		Nothing
 16233 ;; This function is called by:
 16234 ;;		_setDimmerLights_Initialization
 16235 ;;		_setDimmerLights_Main
 16236 ;;		_setDimmerLights_ERROR
 16237 ;;		_setDimmerLights_TriggerERROR
 16238 ;;		_setDimmerLights
 16239 ;;		_setDimmerLights_Adj
 16240 ;;		_setDimmerLights_AdjRF
 16241 ;;		_setDimmerLights_Switch
 16242 ;;		_setDimmerLights_AdjGo
 16243 ;;		_setDimmerLights_Trigger
 16244 ;;		_setDimmerLights_TriggerAdj
 16245 ;;		_setDimmerLights_GO
 16246 ;;		_setDimmerLights_MaxmumValue
 16247 ;;		_setDimmerLights_Clear
 16248 ;; This function uses a non-reentrant model
 16249 ;;
 16250                           
 16251                           
 16252                           ;psect for function _DimmerLightsPointSelect
 16253  1AE5                     _DimmerLightsPointSelect:	
 16254                           
 16255                           ;incstack = 0
 16256                           ; Regs used in _DimmerLightsPointSelect: [wreg]
 16257                           ;DimmerLightsPointSelect@lights stored from wreg
 16258  1AE5  0020               	movlb	0	; select bank0
 16259  1AE6  00A1               	movwf	DimmerLightsPointSelect@lights
 16260                           
 16261                           ;Dimmer_B1.c: 10: if(lights == 1)
 16262  1AE7  0821               	movf	DimmerLightsPointSelect@lights,w
 16263  1AE8  3A01               	xorlw	1
 16264  1AE9  1D03               	skipz
 16265  1AEA  2AEF               	goto	l847
 16266                           
 16267                           ;Dimmer_B1.c: 11: {
 16268                           ;Dimmer_B1.c: 12: DimmerLights=&DimmerLights1;
 16269  1AEB  3020               	movlw	_DimmerLights1& (0+255)
 16270  1AEC  00A0               	movwf	??_DimmerLightsPointSelect
 16271  1AED  0820               	movf	??_DimmerLightsPointSelect,w
 16272  1AEE  00EA               	movwf	_DimmerLights
 16273  1AEF                     l847:	
 16274                           
 16275                           ;Dimmer_B1.c: 13: }
 16276                           ;Dimmer_B1.c: 20: if(lights == 2)
 16277  1AEF  0821               	movf	DimmerLightsPointSelect@lights,w
 16278  1AF0  3A02               	xorlw	2
 16279  1AF1  1D03               	skipz
 16280  1AF2  0008               	return
 16281                           
 16282                           ;Dimmer_B1.c: 21: {
 16283                           ;Dimmer_B1.c: 22: DimmerLights=&DimmerLights2;
 16284  1AF3  302E               	movlw	_DimmerLights2& (0+255)
 16285  1AF4  00A0               	movwf	??_DimmerLightsPointSelect
 16286  1AF5  0820               	movf	??_DimmerLightsPointSelect,w
 16287  1AF6  00EA               	movwf	_DimmerLights
 16288  1AF7  0008               	return
 16289  1AF8                     __end_of_DimmerLightsPointSelect:	
 16290                           
 16291                           	psect	text104
 16292  1789                     __ptext104:	
 16293 ;; *************** function _setBuz *****************
 16294 ;; Defined at:
 16295 ;;		line 22 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Buzzer_B1.c"
 16296 ;; Parameters:    Size  Location     Type
 16297 ;;  count           1    wreg     unsigned char 
 16298 ;;  time            2    6[BANK0 ] int 
 16299 ;; Auto vars:     Size  Location     Type
 16300 ;;  count           1    9[BANK0 ] unsigned char 
 16301 ;; Return value:  Size  Location     Type
 16302 ;;		None               void
 16303 ;; Registers used:
 16304 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16305 ;; Tracked objects:
 16306 ;;		On entry : 0/0
 16307 ;;		On exit  : 0/0
 16308 ;;		Unchanged: 0/0
 16309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16310 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16311 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16312 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16313 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16314 ;;Total ram usage:        4 bytes
 16315 ;; Hardware stack levels used:    1
 16316 ;; Hardware stack levels required when called:    5
 16317 ;; This function calls:
 16318 ;;		___wmul
 16319 ;; This function is called by:
 16320 ;;		_DlyOff_Main
 16321 ;;		_setDimmerLights_Main
 16322 ;;		_DimmerLights_Exceptions
 16323 ;;		_MainT
 16324 ;;		_setOverTemp_Exceptions
 16325 ;;		_setLog_Code
 16326 ;;		_setControl_Lights_Table
 16327 ;;		_setRFSW_Control
 16328 ;;		_setSw_Main
 16329 ;;		_Sw_DimmerOnFunc
 16330 ;; This function uses a non-reentrant model
 16331 ;;
 16332                           
 16333                           
 16334                           ;psect for function _setBuz
 16335  1789                     _setBuz:	
 16336                           
 16337                           ;incstack = 0
 16338                           ; Regs used in _setBuz: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 16339                           ;setBuz@count stored from wreg
 16340  1789  0020               	movlb	0	; select bank0
 16341  178A  00A9               	movwf	setBuz@count
 16342                           
 16343                           ;Buzzer_B1.c: 24: time*=20;
 16344  178B  3014               	movlw	20
 16345  178C  00A0               	movwf	___wmul@multiplier
 16346  178D  3000               	movlw	0
 16347  178E  00A1               	movwf	___wmul@multiplier+1
 16348  178F  0827               	movf	setBuz@time+1,w
 16349  1790  01A3               	clrf	___wmul@multiplicand+1
 16350  1791  07A3               	addwf	___wmul@multiplicand+1,f
 16351  1792  0826               	movf	setBuz@time,w
 16352  1793  01A2               	clrf	___wmul@multiplicand
 16353  1794  07A2               	addwf	___wmul@multiplicand,f
 16354  1795  319C  249F  3197   	fcall	___wmul
 16355  1798  0020               	movlb	0	; select bank0
 16356  1799  0821               	movf	?___wmul+1,w
 16357  179A  01A7               	clrf	setBuz@time+1
 16358  179B  07A7               	addwf	setBuz@time+1,f
 16359  179C  0820               	movf	?___wmul,w
 16360  179D  01A6               	clrf	setBuz@time
 16361  179E  07A6               	addwf	setBuz@time,f
 16362                           
 16363                           ;Buzzer_B1.c: 25: if(Buz->Enable)
 16364  179F  0868               	movf	_Buz,w
 16365  17A0  0086               	movwf	6
 16366  17A1  3001               	movlw	1	; select bank2/3
 16367  17A2  0087               	movwf	7
 16368  17A3  1C01               	btfss	1,0
 16369  17A4  0008               	return
 16370                           
 16371                           ;Buzzer_B1.c: 26: {
 16372                           ;Buzzer_B1.c: 27: if(!Buz->GO)
 16373  17A5  0868               	movf	_Buz,w
 16374  17A6  0086               	movwf	6
 16375  17A7  3001               	movlw	1	; select bank2/3
 16376  17A8  0087               	movwf	7
 16377  17A9  1881               	btfsc	1,1
 16378  17AA  2FC4               	goto	l8273
 16379                           
 16380                           ;Buzzer_B1.c: 28: {
 16381                           ;Buzzer_B1.c: 29: Buz->GO=1;
 16382  17AB  0868               	movf	_Buz,w
 16383  17AC  0086               	movwf	6
 16384  17AD  3001               	movlw	1	; select bank2/3
 16385  17AE  0087               	movwf	7
 16386  17AF  1481               	bsf	1,1
 16387                           
 16388                           ;Buzzer_B1.c: 30: Buz->Count=count;
 16389  17B0  0829               	movf	setBuz@count,w
 16390  17B1  00A8               	movwf	??_setBuz
 16391  17B2  0868               	movf	_Buz,w
 16392  17B3  3E03               	addlw	3
 16393  17B4  0086               	movwf	6
 16394  17B5  3001               	movlw	1	; select bank2/3
 16395  17B6  0087               	movwf	7
 16396  17B7  0828               	movf	??_setBuz,w
 16397  17B8  0081               	movwf	1
 16398                           
 16399                           ;Buzzer_B1.c: 31: Buz->TimeValue=time;
 16400  17B9  0868               	movf	_Buz,w
 16401  17BA  3E06               	addlw	6
 16402  17BB  0086               	movwf	6
 16403  17BC  3001               	movlw	1	; select bank2/3
 16404  17BD  0087               	movwf	7
 16405  17BE  0826               	movf	setBuz@time,w
 16406  17BF  3FC0               	movwi [0]fsr1
 16407  17C0  0827               	movf	setBuz@time+1,w
 16408  17C1  3FC1               	movwi [1]fsr1
 16409                           
 16410                           ;Buzzer_B1.c: 33: RB3=1;
 16411  17C2  158D               	bsf	13,3	;volatile
 16412                           
 16413                           ;Buzzer_B1.c: 34: }
 16414  17C3  0008               	return
 16415  17C4                     l8273:	
 16416                           
 16417                           ;Buzzer_B1.c: 35: else
 16418                           ;Buzzer_B1.c: 36: {
 16419                           ;Buzzer_B1.c: 37: if(!Buz->BufferStatus1)
 16420  17C4  0868               	movf	_Buz,w
 16421  17C5  0086               	movwf	6
 16422  17C6  3001               	movlw	1	; select bank2/3
 16423  17C7  0087               	movwf	7
 16424  17C8  1981               	btfsc	1,3
 16425  17C9  2FE2               	goto	l8277
 16426                           
 16427                           ;Buzzer_B1.c: 38: {
 16428                           ;Buzzer_B1.c: 39: Buz->BufferStatus1=1;
 16429  17CA  0868               	movf	_Buz,w
 16430  17CB  0086               	movwf	6
 16431  17CC  3001               	movlw	1	; select bank2/3
 16432  17CD  0087               	movwf	7
 16433  17CE  1581               	bsf	1,3
 16434                           
 16435                           ;Buzzer_B1.c: 40: Buz->CountBuffer1=count;
 16436  17CF  0829               	movf	setBuz@count,w
 16437  17D0  00A8               	movwf	??_setBuz
 16438  17D1  0868               	movf	_Buz,w
 16439  17D2  3E04               	addlw	4
 16440  17D3  0086               	movwf	6
 16441  17D4  3001               	movlw	1	; select bank2/3
 16442  17D5  0087               	movwf	7
 16443  17D6  0828               	movf	??_setBuz,w
 16444  17D7  0081               	movwf	1
 16445                           
 16446                           ;Buzzer_B1.c: 41: Buz->TimeValueBuffer1=time;
 16447  17D8  0868               	movf	_Buz,w
 16448  17D9  3E08               	addlw	8
 16449  17DA  0086               	movwf	6
 16450  17DB  3001               	movlw	1	; select bank2/3
 16451  17DC  0087               	movwf	7
 16452  17DD  0826               	movf	setBuz@time,w
 16453  17DE  3FC0               	movwi [0]fsr1
 16454  17DF  0827               	movf	setBuz@time+1,w
 16455  17E0  3FC1               	movwi [1]fsr1
 16456                           
 16457                           ;Buzzer_B1.c: 42: }
 16458  17E1  0008               	return
 16459  17E2                     l8277:	
 16460                           
 16461                           ;Buzzer_B1.c: 43: else if(!Buz->BufferStatus2)
 16462  17E2  0868               	movf	_Buz,w
 16463  17E3  0086               	movwf	6
 16464  17E4  3001               	movlw	1	; select bank2/3
 16465  17E5  0087               	movwf	7
 16466  17E6  1A01               	btfsc	1,4
 16467  17E7  0008               	return
 16468                           
 16469                           ;Buzzer_B1.c: 44: {
 16470                           ;Buzzer_B1.c: 45: Buz->BufferStatus2=1;
 16471  17E8  0868               	movf	_Buz,w
 16472  17E9  0086               	movwf	6
 16473  17EA  3001               	movlw	1	; select bank2/3
 16474  17EB  0087               	movwf	7
 16475  17EC  1601               	bsf	1,4
 16476                           
 16477                           ;Buzzer_B1.c: 46: Buz->CountBuffer2=count;
 16478  17ED  0829               	movf	setBuz@count,w
 16479  17EE  00A8               	movwf	??_setBuz
 16480  17EF  0868               	movf	_Buz,w
 16481  17F0  3E05               	addlw	5
 16482  17F1  0086               	movwf	6
 16483  17F2  3001               	movlw	1	; select bank2/3
 16484  17F3  0087               	movwf	7
 16485  17F4  0828               	movf	??_setBuz,w
 16486  17F5  0081               	movwf	1
 16487                           
 16488                           ;Buzzer_B1.c: 47: Buz->TimeValueBuffer2=time;
 16489  17F6  0868               	movf	_Buz,w
 16490  17F7  3E0A               	addlw	10
 16491  17F8  0086               	movwf	6
 16492  17F9  3001               	movlw	1	; select bank2/3
 16493  17FA  0087               	movwf	7
 16494  17FB  0826               	movf	setBuz@time,w
 16495  17FC  3FC0               	movwi [0]fsr1
 16496  17FD  0827               	movf	setBuz@time+1,w
 16497  17FE  3FC1               	movwi [1]fsr1
 16498  17FF  0008               	return
 16499  1800                     __end_of_setBuz:	
 16500                           
 16501                           	psect	text105
 16502  1C9F                     __ptext105:	
 16503 ;; *************** function ___wmul *****************
 16504 ;; Defined at:
 16505 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\Umul16.c"
 16506 ;; Parameters:    Size  Location     Type
 16507 ;;  multiplier      2    0[BANK0 ] unsigned int 
 16508 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 16509 ;; Auto vars:     Size  Location     Type
 16510 ;;  product         2    4[BANK0 ] unsigned int 
 16511 ;; Return value:  Size  Location     Type
 16512 ;;                  2    0[BANK0 ] unsigned int 
 16513 ;; Registers used:
 16514 ;;		wreg, status,2, status,0
 16515 ;; Tracked objects:
 16516 ;;		On entry : 0/0
 16517 ;;		On exit  : 0/0
 16518 ;;		Unchanged: 0/0
 16519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16520 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16521 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16523 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16524 ;;Total ram usage:        6 bytes
 16525 ;; Hardware stack levels used:    1
 16526 ;; Hardware stack levels required when called:    4
 16527 ;; This function calls:
 16528 ;;		Nothing
 16529 ;; This function is called by:
 16530 ;;		_setBuz
 16531 ;; This function uses a non-reentrant model
 16532 ;;
 16533                           
 16534                           
 16535                           ;psect for function ___wmul
 16536  1C9F                     ___wmul:	
 16537                           
 16538                           ;incstack = 0
 16539                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 16540  1C9F  0020               	movlb	0	; select bank0
 16541  1CA0  01A4               	clrf	___wmul@product
 16542  1CA1  01A5               	clrf	___wmul@product+1
 16543  1CA2                     l8253:	
 16544  1CA2  1C20               	btfss	___wmul@multiplier,0
 16545  1CA3  2CA8               	goto	l3066
 16546  1CA4  0822               	movf	___wmul@multiplicand,w
 16547  1CA5  07A4               	addwf	___wmul@product,f
 16548  1CA6  0823               	movf	___wmul@multiplicand+1,w
 16549  1CA7  3DA5               	addwfc	___wmul@product+1,f
 16550  1CA8                     l3066:	
 16551  1CA8  3001               	movlw	1
 16552  1CA9                     u8115:	
 16553  1CA9  35A2               	lslf	___wmul@multiplicand,f
 16554  1CAA  0DA3               	rlf	___wmul@multiplicand+1,f
 16555  1CAB  0B89               	decfsz	9,f
 16556  1CAC  2CA9               	goto	u8115
 16557  1CAD  3001               	movlw	1
 16558  1CAE                     u8125:	
 16559  1CAE  36A1               	lsrf	___wmul@multiplier+1,f
 16560  1CAF  0CA0               	rrf	___wmul@multiplier,f
 16561  1CB0  0B89               	decfsz	9,f
 16562  1CB1  2CAE               	goto	u8125
 16563  1CB2  0821               	movf	___wmul@multiplier+1,w
 16564  1CB3  0420               	iorwf	___wmul@multiplier,w
 16565  1CB4  1D03               	skipz
 16566  1CB5  2CA2               	goto	l8253
 16567  1CB6  0825               	movf	___wmul@product+1,w
 16568  1CB7  01A1               	clrf	?___wmul+1
 16569  1CB8  07A1               	addwf	?___wmul+1,f
 16570  1CB9  0824               	movf	___wmul@product,w
 16571  1CBA  01A0               	clrf	?___wmul
 16572  1CBB  07A0               	addwf	?___wmul,f
 16573  1CBC  0008               	return
 16574  1CBD                     __end_of___wmul:	
 16575                           
 16576                           	psect	text106
 16577  1945                     __ptext106:	
 16578 ;; *************** function _DelayOff_Initialization *****************
 16579 ;; Defined at:
 16580 ;;		line 30 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\DelayOff_B1.c"
 16581 ;; Parameters:    Size  Location     Type
 16582 ;;		None
 16583 ;; Auto vars:     Size  Location     Type
 16584 ;;		None
 16585 ;; Return value:  Size  Location     Type
 16586 ;;		None               void
 16587 ;; Registers used:
 16588 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16589 ;; Tracked objects:
 16590 ;;		On entry : 0/0
 16591 ;;		On exit  : 0/0
 16592 ;;		Unchanged: 0/0
 16593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16594 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16595 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16597 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16598 ;;Total ram usage:        0 bytes
 16599 ;; Hardware stack levels used:    1
 16600 ;; Hardware stack levels required when called:    6
 16601 ;; This function calls:
 16602 ;;		_DlyOff_Initialization
 16603 ;; This function is called by:
 16604 ;;		_main
 16605 ;; This function uses a non-reentrant model
 16606 ;;
 16607                           
 16608                           
 16609                           ;psect for function _DelayOff_Initialization
 16610  1945                     _DelayOff_Initialization:	
 16611                           
 16612                           ;DelayOff_B1.c: 33: DlyOff_Initialization(1);
 16613                           
 16614                           ;incstack = 0
 16615                           ; Regs used in _DelayOff_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 16616  1945  3001               	movlw	1
 16617  1946  3199  2194  3199   	fcall	_DlyOff_Initialization
 16618                           
 16619                           ;DelayOff_B1.c: 37: DlyOff_Initialization(2);
 16620  1949  3002               	movlw	2
 16621  194A  3199  2194         	fcall	_DlyOff_Initialization
 16622  194C  0008               	return
 16623  194D                     __end_of_DelayOff_Initialization:	
 16624                           
 16625                           	psect	text107
 16626  1994                     __ptext107:	
 16627 ;; *************** function _DlyOff_Initialization *****************
 16628 ;; Defined at:
 16629 ;;		line 60 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\DelayOff_B1.c"
 16630 ;; Parameters:    Size  Location     Type
 16631 ;;  sw              1    wreg     unsigned char 
 16632 ;; Auto vars:     Size  Location     Type
 16633 ;;  sw              1    2[BANK0 ] unsigned char 
 16634 ;; Return value:  Size  Location     Type
 16635 ;;		None               void
 16636 ;; Registers used:
 16637 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16638 ;; Tracked objects:
 16639 ;;		On entry : 0/0
 16640 ;;		On exit  : 0/0
 16641 ;;		Unchanged: 0/0
 16642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16644 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16646 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16647 ;;Total ram usage:        1 bytes
 16648 ;; Hardware stack levels used:    1
 16649 ;; Hardware stack levels required when called:    5
 16650 ;; This function calls:
 16651 ;;		_DelayOffPointSelect
 16652 ;; This function is called by:
 16653 ;;		_DelayOff_Initialization
 16654 ;; This function uses a non-reentrant model
 16655 ;;
 16656                           
 16657                           
 16658                           ;psect for function _DlyOff_Initialization
 16659  1994                     _DlyOff_Initialization:	
 16660                           
 16661                           ;incstack = 0
 16662                           ; Regs used in _DlyOff_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 16663                           ;DlyOff_Initialization@sw stored from wreg
 16664  1994  0020               	movlb	0	; select bank0
 16665  1995  00A2               	movwf	DlyOff_Initialization@sw
 16666                           
 16667                           ;DelayOff_B1.c: 62: DelayOffPointSelect(sw);
 16668  1996  0822               	movf	DlyOff_Initialization@sw,w
 16669  1997  319B  230B         	fcall	_DelayOffPointSelect
 16670                           
 16671                           ;DelayOff_B1.c: 63: DelayOff->Enable=1;
 16672  1999  0020               	movlb	0	; select bank0
 16673  199A  0869               	movf	_DelayOff,w
 16674  199B  0086               	movwf	6
 16675  199C  0187               	clrf	7
 16676  199D  1401               	bsf	1,0
 16677  199E  0008               	return
 16678  199F                     __end_of_DlyOff_Initialization:	
 16679                           
 16680                           	psect	text108
 16681  1B0B                     __ptext108:	
 16682 ;; *************** function _DelayOffPointSelect *****************
 16683 ;; Defined at:
 16684 ;;		line 8 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\DelayOff_B1.c"
 16685 ;; Parameters:    Size  Location     Type
 16686 ;;  sw              1    wreg     unsigned char 
 16687 ;; Auto vars:     Size  Location     Type
 16688 ;;  sw              1    1[BANK0 ] unsigned char 
 16689 ;; Return value:  Size  Location     Type
 16690 ;;		None               void
 16691 ;; Registers used:
 16692 ;;		wreg
 16693 ;; Tracked objects:
 16694 ;;		On entry : 0/0
 16695 ;;		On exit  : 0/0
 16696 ;;		Unchanged: 0/0
 16697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16699 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16700 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16701 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16702 ;;Total ram usage:        2 bytes
 16703 ;; Hardware stack levels used:    1
 16704 ;; Hardware stack levels required when called:    4
 16705 ;; This function calls:
 16706 ;;		Nothing
 16707 ;; This function is called by:
 16708 ;;		_DlyOff_Initialization
 16709 ;;		_DlyOff_Main
 16710 ;;		_setDelayOff_GO
 16711 ;; This function uses a non-reentrant model
 16712 ;;
 16713                           
 16714                           
 16715                           ;psect for function _DelayOffPointSelect
 16716  1B0B                     _DelayOffPointSelect:	
 16717                           
 16718                           ;incstack = 0
 16719                           ; Regs used in _DelayOffPointSelect: [wreg]
 16720                           ;DelayOffPointSelect@sw stored from wreg
 16721  1B0B  0020               	movlb	0	; select bank0
 16722  1B0C  00A1               	movwf	DelayOffPointSelect@sw
 16723                           
 16724                           ;DelayOff_B1.c: 11: if(sw == 1)
 16725  1B0D  0821               	movf	DelayOffPointSelect@sw,w
 16726  1B0E  3A01               	xorlw	1
 16727  1B0F  1D03               	skipz
 16728  1B10  2B16               	goto	l8175
 16729                           
 16730                           ;DelayOff_B1.c: 12: {
 16731                           ;DelayOff_B1.c: 13: DelayOff=&DlySw1;
 16732  1B11  30CC               	movlw	_DlySw1& (0+255)
 16733  1B12  00A0               	movwf	??_DelayOffPointSelect
 16734  1B13  0820               	movf	??_DelayOffPointSelect,w
 16735  1B14  00E9               	movwf	_DelayOff
 16736                           
 16737                           ;DelayOff_B1.c: 14: }
 16738  1B15  0008               	return
 16739  1B16                     l8175:	
 16740                           
 16741                           ;DelayOff_B1.c: 17: else if(sw == 2)
 16742  1B16  0821               	movf	DelayOffPointSelect@sw,w
 16743  1B17  3A02               	xorlw	2
 16744  1B18  1D03               	skipz
 16745  1B19  0008               	return
 16746                           
 16747                           ;DelayOff_B1.c: 18: {
 16748                           ;DelayOff_B1.c: 19: DelayOff=&DlySw2;
 16749  1B1A  30D1               	movlw	_DlySw2& (0+255)
 16750  1B1B  00A0               	movwf	??_DelayOffPointSelect
 16751  1B1C  0820               	movf	??_DelayOffPointSelect,w
 16752  1B1D  00E9               	movwf	_DelayOff
 16753  1B1E  0008               	return
 16754  1B1F                     __end_of_DelayOffPointSelect:	
 16755                           
 16756                           	psect	text109
 16757  1B33                     __ptext109:	
 16758 ;; *************** function _CC2500_PowerOnInitial *****************
 16759 ;; Defined at:
 16760 ;;		line 97 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
 16761 ;; Parameters:    Size  Location     Type
 16762 ;;		None
 16763 ;; Auto vars:     Size  Location     Type
 16764 ;;		None
 16765 ;; Return value:  Size  Location     Type
 16766 ;;		None               void
 16767 ;; Registers used:
 16768 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 16769 ;; Tracked objects:
 16770 ;;		On entry : 0/0
 16771 ;;		On exit  : 0/0
 16772 ;;		Unchanged: 0/0
 16773 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16775 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16777 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16778 ;;Total ram usage:        0 bytes
 16779 ;; Hardware stack levels used:    1
 16780 ;; Hardware stack levels required when called:    7
 16781 ;; This function calls:
 16782 ;;		_CC2500_ClearRXFIFO
 16783 ;;		_CC2500_ClearTXFIFO
 16784 ;;		_CC2500_FrequencyCabr
 16785 ;;		_CC2500_InitPATable
 16786 ;;		_CC2500_InitSetREG
 16787 ;;		_CC2500_PowerRST
 16788 ;;		_CC2500_SIDLEMode
 16789 ;; This function is called by:
 16790 ;;		_main
 16791 ;; This function uses a non-reentrant model
 16792 ;;
 16793                           
 16794                           
 16795                           ;psect for function _CC2500_PowerOnInitial
 16796  1B33                     _CC2500_PowerOnInitial:	
 16797                           
 16798                           ;CC2500_B1.c: 99: CC2500_PowerRST();
 16799                           
 16800                           ;incstack = 0
 16801                           ; Regs used in _CC2500_PowerOnInitial: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 16802  1B33  319E  26DE  319B   	fcall	_CC2500_PowerRST
 16803                           
 16804                           ;CC2500_B1.c: 100: CC2500_InitSetREG();
 16805  1B36  319D  25D5  319B   	fcall	_CC2500_InitSetREG
 16806                           
 16807                           ;CC2500_B1.c: 101: CC2500_InitPATable();
 16808  1B39  319C  24BD  319B   	fcall	_CC2500_InitPATable
 16809                           
 16810                           ;CC2500_B1.c: 102: CC2500_ClearTXFIFO();
 16811  1B3C  3199  2102  319B   	fcall	_CC2500_ClearTXFIFO
 16812                           
 16813                           ;CC2500_B1.c: 103: CC2500_ClearRXFIFO();
 16814  1B3F  3198  20FE  319B   	fcall	_CC2500_ClearRXFIFO
 16815                           
 16816                           ;CC2500_B1.c: 104: CC2500_FrequencyCabr();
 16817  1B42  3199  21E3  319B   	fcall	_CC2500_FrequencyCabr
 16818                           
 16819                           ;CC2500_B1.c: 105: CC2500_SIDLEMode();
 16820  1B45  3199  2106         	fcall	_CC2500_SIDLEMode
 16821  1B47  0008               	return
 16822  1B48                     __end_of_CC2500_PowerOnInitial:	
 16823                           
 16824                           	psect	text110
 16825  1906                     __ptext110:	
 16826 ;; *************** function _CC2500_SIDLEMode *****************
 16827 ;; Defined at:
 16828 ;;		line 183 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
 16829 ;; Parameters:    Size  Location     Type
 16830 ;;		None
 16831 ;; Auto vars:     Size  Location     Type
 16832 ;;		None
 16833 ;; Return value:  Size  Location     Type
 16834 ;;		None               void
 16835 ;; Registers used:
 16836 ;;		wreg, status,2, status,0, pclath, cstack
 16837 ;; Tracked objects:
 16838 ;;		On entry : 0/0
 16839 ;;		On exit  : 0/0
 16840 ;;		Unchanged: 0/0
 16841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16845 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16846 ;;Total ram usage:        0 bytes
 16847 ;; Hardware stack levels used:    1
 16848 ;; Hardware stack levels required when called:    6
 16849 ;; This function calls:
 16850 ;;		_CC2500_WriteCommand
 16851 ;; This function is called by:
 16852 ;;		_CC2500_PowerOnInitial
 16853 ;; This function uses a non-reentrant model
 16854 ;;
 16855                           
 16856                           
 16857                           ;psect for function _CC2500_SIDLEMode
 16858  1906                     _CC2500_SIDLEMode:	
 16859                           
 16860                           ;CC2500_B1.c: 185: CC2500_WriteCommand(0x36);
 16861                           
 16862                           ;incstack = 0
 16863                           ; Regs used in _CC2500_SIDLEMode: [wreg+status,2+status,0+pclath+cstack]
 16864  1906  3036               	movlw	54
 16865  1907  319A  2274         	fcall	_CC2500_WriteCommand
 16866  1909  0008               	return
 16867  190A                     __end_of_CC2500_SIDLEMode:	
 16868                           
 16869                           	psect	text111
 16870  1EDE                     __ptext111:	
 16871 ;; *************** function _CC2500_PowerRST *****************
 16872 ;; Defined at:
 16873 ;;		line 110 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
 16874 ;; Parameters:    Size  Location     Type
 16875 ;;		None
 16876 ;; Auto vars:     Size  Location     Type
 16877 ;;		None
 16878 ;; Return value:  Size  Location     Type
 16879 ;;		None               void
 16880 ;; Registers used:
 16881 ;;		wreg, status,2, status,0, pclath, cstack
 16882 ;; Tracked objects:
 16883 ;;		On entry : 0/0
 16884 ;;		On exit  : 0/0
 16885 ;;		Unchanged: 0/0
 16886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16888 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16889 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16890 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16891 ;;Total ram usage:        1 bytes
 16892 ;; Hardware stack levels used:    1
 16893 ;; Hardware stack levels required when called:    5
 16894 ;; This function calls:
 16895 ;;		_CC2500_WriteByte
 16896 ;;		_DelayTime_1us
 16897 ;; This function is called by:
 16898 ;;		_CC2500_PowerOnInitial
 16899 ;; This function uses a non-reentrant model
 16900 ;;
 16901                           
 16902                           
 16903                           ;psect for function _CC2500_PowerRST
 16904  1EDE                     _CC2500_PowerRST:	
 16905                           
 16906                           ;CC2500_B1.c: 112: RC1=0;
 16907                           
 16908                           ;incstack = 0
 16909                           ; Regs used in _CC2500_PowerRST: [wreg+status,2+status,0+pclath+cstack]
 16910  1EDE  0020               	movlb	0	; select bank0
 16911  1EDF  108E               	bcf	14,1	;volatile
 16912                           
 16913                           ;CC2500_B1.c: 113: RC0=0;
 16914  1EE0  100E               	bcf	14,0	;volatile
 16915                           
 16916                           ;CC2500_B1.c: 114: RC4=1;
 16917  1EE1  160E               	bsf	14,4	;volatile
 16918                           
 16919                           ;CC2500_B1.c: 115: DelayTime_1us(10);
 16920  1EE2  300A               	movlw	10
 16921  1EE3  00A0               	movwf	DelayTime_1us@count
 16922  1EE4  3000               	movlw	0
 16923  1EE5  00A1               	movwf	DelayTime_1us@count+1
 16924  1EE6  319D  2588  319E   	fcall	_DelayTime_1us
 16925                           
 16926                           ;CC2500_B1.c: 116: RC4=0;
 16927  1EE9  0020               	movlb	0	; select bank0
 16928  1EEA  120E               	bcf	14,4	;volatile
 16929                           
 16930                           ;CC2500_B1.c: 117: DelayTime_1us(10);
 16931  1EEB  300A               	movlw	10
 16932  1EEC  00A0               	movwf	DelayTime_1us@count
 16933  1EED  3000               	movlw	0
 16934  1EEE  00A1               	movwf	DelayTime_1us@count+1
 16935  1EEF  319D  2588  319E   	fcall	_DelayTime_1us
 16936                           
 16937                           ;CC2500_B1.c: 118: RC4=1;
 16938  1EF2  0020               	movlb	0	; select bank0
 16939  1EF3  160E               	bsf	14,4	;volatile
 16940                           
 16941                           ;CC2500_B1.c: 119: DelayTime_1us(40);
 16942  1EF4  3028               	movlw	40
 16943  1EF5  00A0               	movwf	DelayTime_1us@count
 16944  1EF6  3000               	movlw	0
 16945  1EF7  00A1               	movwf	DelayTime_1us@count+1
 16946  1EF8  319D  2588  319E   	fcall	_DelayTime_1us
 16947                           
 16948                           ;CC2500_B1.c: 120: RC4=0;
 16949  1EFB  0020               	movlb	0	; select bank0
 16950  1EFC  120E               	bcf	14,4	;volatile
 16951                           
 16952                           ;CC2500_B1.c: 121: SPI0Buffer=0x30;
 16953  1EFD  3030               	movlw	48
 16954  1EFE  00A6               	movwf	??_CC2500_PowerRST
 16955  1EFF  0826               	movf	??_CC2500_PowerRST,w
 16956  1F00  0021               	movlb	1	; select bank1
 16957  1F01  00BE               	movwf	_SPI0Buffer^(0+128)
 16958  1F02                     l332:	
 16959                           ;CC2500_B1.c: 122: while(RC2==1);
 16960                           
 16961  1F02  0020               	movlb	0	; select bank0
 16962  1F03  190E               	btfsc	14,2	;volatile
 16963  1F04  2F02               	goto	l332
 16964                           
 16965                           ;CC2500_B1.c: 123: CC2500_WriteByte();
 16966  1F05  319B  23CE  319E   	fcall	_CC2500_WriteByte
 16967  1F08                     l335:	
 16968                           ;CC2500_B1.c: 124: while(RC2==1);
 16969                           
 16970  1F08  0020               	movlb	0	; select bank0
 16971  1F09  190E               	btfsc	14,2	;volatile
 16972  1F0A  2F08               	goto	l335
 16973                           
 16974                           ;CC2500_B1.c: 125: RC0=0;
 16975  1F0B  100E               	bcf	14,0	;volatile
 16976                           
 16977                           ;CC2500_B1.c: 126: RC4=1;
 16978  1F0C  160E               	bsf	14,4	;volatile
 16979  1F0D  0008               	return
 16980  1F0E                     __end_of_CC2500_PowerRST:	
 16981                           
 16982                           	psect	text112
 16983  1DD5                     __ptext112:	
 16984 ;; *************** function _CC2500_InitSetREG *****************
 16985 ;; Defined at:
 16986 ;;		line 131 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
 16987 ;; Parameters:    Size  Location     Type
 16988 ;;		None
 16989 ;; Auto vars:     Size  Location     Type
 16990 ;;  loop_c          1    8[BANK0 ] unsigned char 
 16991 ;;  temp2           1    7[BANK0 ] unsigned char 
 16992 ;;  temp1           1    6[BANK0 ] unsigned char 
 16993 ;; Return value:  Size  Location     Type
 16994 ;;		None               void
 16995 ;; Registers used:
 16996 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 16997 ;; Tracked objects:
 16998 ;;		On entry : 0/0
 16999 ;;		On exit  : 0/0
 17000 ;;		Unchanged: 0/0
 17001 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17002 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17003 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17004 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17005 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17006 ;;Total ram usage:        4 bytes
 17007 ;; Hardware stack levels used:    1
 17008 ;; Hardware stack levels required when called:    6
 17009 ;; This function calls:
 17010 ;;		_CC2500_WriteREG
 17011 ;; This function is called by:
 17012 ;;		_CC2500_PowerOnInitial
 17013 ;; This function uses a non-reentrant model
 17014 ;;
 17015                           
 17016                           
 17017                           ;psect for function _CC2500_InitSetREG
 17018  1DD5                     _CC2500_InitSetREG:	
 17019                           
 17020                           ;CC2500_B1.c: 133: unsigned char loop_c;
 17021                           ;CC2500_B1.c: 134: unsigned char temp1,temp2;
 17022                           ;CC2500_B1.c: 136: for(loop_c=0;loop_c<47;loop_c++)
 17023                           
 17024                           ;incstack = 0
 17025                           ; Regs used in _CC2500_InitSetREG: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 17026  1DD5  0020               	movlb	0	; select bank0
 17027  1DD6  01A8               	clrf	CC2500_InitSetREG@loop_c
 17028  1DD7                     L14:	
 17029  1DD7  302F               	movlw	47
 17030  1DD8  0228               	subwf	CC2500_InitSetREG@loop_c,w
 17031  1DD9  1803               	btfsc	3,0
 17032  1DDA  0008               	return
 17033                           
 17034                           ;CC2500_B1.c: 137: {
 17035                           ;CC2500_B1.c: 138: temp1 = CC2500_registers_address[loop_c];
 17036  1DDB  0828               	movf	CC2500_InitSetREG@loop_c,w
 17037  1DDC  3E00               	addlw	low (_CC2500_registers_address| (0+32768))
 17038  1DDD  0084               	movwf	4
 17039  1DDE  3098               	movlw	high (_CC2500_registers_address| (0+32768))
 17040  1DDF  1803               	skipnc
 17041  1DE0  3E01               	addlw	1
 17042  1DE1  0085               	movwf	5
 17043  1DE2  0800               	movf	0,w	;code access
 17044  1DE3  00A5               	movwf	??_CC2500_InitSetREG
 17045  1DE4  0825               	movf	??_CC2500_InitSetREG,w
 17046  1DE5  00A6               	movwf	CC2500_InitSetREG@temp1
 17047                           
 17048                           ;CC2500_B1.c: 139: temp2 = CC2500_rfSettings[loop_c];
 17049  1DE6  0828               	movf	CC2500_InitSetREG@loop_c,w
 17050  1DE7  3E2F               	addlw	low (_CC2500_rfSettings| (0+32768))
 17051  1DE8  0084               	movwf	4
 17052  1DE9  3098               	movlw	high (_CC2500_rfSettings| (0+32768))
 17053  1DEA  1803               	skipnc
 17054  1DEB  3E01               	addlw	1
 17055  1DEC  0085               	movwf	5
 17056  1DED  0800               	movf	0,w	;code access
 17057  1DEE  00A5               	movwf	??_CC2500_InitSetREG
 17058  1DEF  0825               	movf	??_CC2500_InitSetREG,w
 17059  1DF0  00A7               	movwf	CC2500_InitSetREG@temp2
 17060                           
 17061                           ;CC2500_B1.c: 141: CC2500_WriteREG(temp1,temp2);
 17062  1DF1  0827               	movf	CC2500_InitSetREG@temp2,w
 17063  1DF2  00A5               	movwf	??_CC2500_InitSetREG
 17064  1DF3  0825               	movf	??_CC2500_InitSetREG,w
 17065  1DF4  00A2               	movwf	CC2500_WriteREG@value
 17066  1DF5  0826               	movf	CC2500_InitSetREG@temp1,w
 17067  1DF6  319B  23E7  319D   	fcall	_CC2500_WriteREG
 17068  1DF9  3001               	movlw	1
 17069  1DFA  0020               	movlb	0	; select bank0
 17070  1DFB  00A5               	movwf	??_CC2500_InitSetREG
 17071  1DFC  0825               	movf	??_CC2500_InitSetREG,w
 17072  1DFD  07A8               	addwf	CC2500_InitSetREG@loop_c,f
 17073  1DFE  2DD7               	goto	L14
 17074  1DFF                     __end_of_CC2500_InitSetREG:	
 17075                           
 17076                           	psect	text113
 17077  1CBD                     __ptext113:	
 17078 ;; *************** function _CC2500_InitPATable *****************
 17079 ;; Defined at:
 17080 ;;		line 147 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
 17081 ;; Parameters:    Size  Location     Type
 17082 ;;		None
 17083 ;; Auto vars:     Size  Location     Type
 17084 ;;  loop_d          1    7[BANK0 ] unsigned char 
 17085 ;;  temp            1    6[BANK0 ] unsigned char 
 17086 ;; Return value:  Size  Location     Type
 17087 ;;		None               void
 17088 ;; Registers used:
 17089 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 17090 ;; Tracked objects:
 17091 ;;		On entry : 0/0
 17092 ;;		On exit  : 0/0
 17093 ;;		Unchanged: 0/0
 17094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17095 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17096 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17097 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17098 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17099 ;;Total ram usage:        3 bytes
 17100 ;; Hardware stack levels used:    1
 17101 ;; Hardware stack levels required when called:    6
 17102 ;; This function calls:
 17103 ;;		_CC2500_WriteREG
 17104 ;; This function is called by:
 17105 ;;		_CC2500_PowerOnInitial
 17106 ;; This function uses a non-reentrant model
 17107 ;;
 17108                           
 17109                           
 17110                           ;psect for function _CC2500_InitPATable
 17111  1CBD                     _CC2500_InitPATable:	
 17112                           
 17113                           ;CC2500_B1.c: 149: unsigned char loop_d;
 17114                           ;CC2500_B1.c: 150: unsigned char temp;
 17115                           ;CC2500_B1.c: 152: for(loop_d=0;loop_d<8;loop_d++)
 17116                           
 17117                           ;incstack = 0
 17118                           ; Regs used in _CC2500_InitPATable: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 17119  1CBD  0020               	movlb	0	; select bank0
 17120  1CBE  01A7               	clrf	CC2500_InitPATable@loop_d
 17121  1CBF                     L15:	
 17122  1CBF  3008               	movlw	8
 17123  1CC0  0227               	subwf	CC2500_InitPATable@loop_d,w
 17124  1CC1  1803               	btfsc	3,0
 17125  1CC2  0008               	return
 17126                           
 17127                           ;CC2500_B1.c: 153: {
 17128                           ;CC2500_B1.c: 154: temp=CC2500_patable_vaule[loop_d];
 17129  1CC3  0827               	movf	CC2500_InitPATable@loop_d,w
 17130  1CC4  3E5E               	addlw	low (_CC2500_patable_vaule| (0+32768))
 17131  1CC5  0084               	movwf	4
 17132  1CC6  3098               	movlw	high (_CC2500_patable_vaule| (0+32768))
 17133  1CC7  1803               	skipnc
 17134  1CC8  3E01               	addlw	1
 17135  1CC9  0085               	movwf	5
 17136  1CCA  0800               	movf	0,w	;code access
 17137  1CCB  00A5               	movwf	??_CC2500_InitPATable
 17138  1CCC  0825               	movf	??_CC2500_InitPATable,w
 17139  1CCD  00A6               	movwf	CC2500_InitPATable@temp
 17140                           
 17141                           ;CC2500_B1.c: 155: CC2500_WriteREG(0x3E,temp);
 17142  1CCE  0826               	movf	CC2500_InitPATable@temp,w
 17143  1CCF  00A5               	movwf	??_CC2500_InitPATable
 17144  1CD0  0825               	movf	??_CC2500_InitPATable,w
 17145  1CD1  00A2               	movwf	CC2500_WriteREG@value
 17146  1CD2  303E               	movlw	62
 17147  1CD3  319B  23E7  319C   	fcall	_CC2500_WriteREG
 17148  1CD6  3001               	movlw	1
 17149  1CD7  0020               	movlb	0	; select bank0
 17150  1CD8  00A5               	movwf	??_CC2500_InitPATable
 17151  1CD9  0825               	movf	??_CC2500_InitPATable,w
 17152  1CDA  07A7               	addwf	CC2500_InitPATable@loop_d,f
 17153  1CDB  2CBF               	goto	L15
 17154  1CDC                     __end_of_CC2500_InitPATable:	
 17155                           
 17156                           	psect	text114
 17157  1BE7                     __ptext114:	
 17158 ;; *************** function _CC2500_WriteREG *****************
 17159 ;; Defined at:
 17160 ;;		line 227 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
 17161 ;; Parameters:    Size  Location     Type
 17162 ;;  w_addr          1    wreg     unsigned char 
 17163 ;;  value           1    2[BANK0 ] unsigned char 
 17164 ;; Auto vars:     Size  Location     Type
 17165 ;;  w_addr          1    4[BANK0 ] unsigned char 
 17166 ;; Return value:  Size  Location     Type
 17167 ;;		None               void
 17168 ;; Registers used:
 17169 ;;		wreg, status,2, status,0, pclath, cstack
 17170 ;; Tracked objects:
 17171 ;;		On entry : 0/0
 17172 ;;		On exit  : 0/0
 17173 ;;		Unchanged: 0/0
 17174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17175 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17176 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17177 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17178 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17179 ;;Total ram usage:        3 bytes
 17180 ;; Hardware stack levels used:    1
 17181 ;; Hardware stack levels required when called:    5
 17182 ;; This function calls:
 17183 ;;		_CC2500_WriteByte
 17184 ;; This function is called by:
 17185 ;;		_CC2500_InitSetREG
 17186 ;;		_CC2500_InitPATable
 17187 ;; This function uses a non-reentrant model
 17188 ;;
 17189                           
 17190                           
 17191                           ;psect for function _CC2500_WriteREG
 17192  1BE7                     _CC2500_WriteREG:	
 17193                           
 17194                           ;incstack = 0
 17195                           ; Regs used in _CC2500_WriteREG: [wreg+status,2+status,0+pclath+cstack]
 17196                           ;CC2500_WriteREG@w_addr stored from wreg
 17197  1BE7  0020               	movlb	0	; select bank0
 17198  1BE8  00A4               	movwf	CC2500_WriteREG@w_addr
 17199                           
 17200                           ;CC2500_B1.c: 229: RC4=0;
 17201  1BE9  120E               	bcf	14,4	;volatile
 17202                           
 17203                           ;CC2500_B1.c: 230: SPI0Buffer=w_addr;
 17204  1BEA  0824               	movf	CC2500_WriteREG@w_addr,w
 17205  1BEB  00A3               	movwf	??_CC2500_WriteREG
 17206  1BEC  0823               	movf	??_CC2500_WriteREG,w
 17207  1BED  0021               	movlb	1	; select bank1
 17208  1BEE  00BE               	movwf	_SPI0Buffer^(0+128)
 17209  1BEF                     l377:	
 17210                           ;CC2500_B1.c: 231: while(RC2==1);
 17211                           
 17212  1BEF  0020               	movlb	0	; select bank0
 17213  1BF0  190E               	btfsc	14,2	;volatile
 17214  1BF1  2BEF               	goto	l377
 17215                           
 17216                           ;CC2500_B1.c: 232: CC2500_WriteByte();
 17217  1BF2  319B  23CE  319B   	fcall	_CC2500_WriteByte
 17218                           
 17219                           ;CC2500_B1.c: 233: SPI0Buffer=value;
 17220  1BF5  0020               	movlb	0	; select bank0
 17221  1BF6  0822               	movf	CC2500_WriteREG@value,w
 17222  1BF7  00A3               	movwf	??_CC2500_WriteREG
 17223  1BF8  0823               	movf	??_CC2500_WriteREG,w
 17224  1BF9  0021               	movlb	1	; select bank1
 17225  1BFA  00BE               	movwf	_SPI0Buffer^(0+128)
 17226                           
 17227                           ;CC2500_B1.c: 234: CC2500_WriteByte();
 17228  1BFB  319B  23CE         	fcall	_CC2500_WriteByte
 17229                           
 17230                           ;CC2500_B1.c: 235: RC4=1;
 17231  1BFD  0020               	movlb	0	; select bank0
 17232  1BFE  160E               	bsf	14,4	;volatile
 17233  1BFF  0008               	return
 17234  1C00                     __end_of_CC2500_WriteREG:	
 17235                           
 17236                           	psect	text115
 17237  19E3                     __ptext115:	
 17238 ;; *************** function _CC2500_FrequencyCabr *****************
 17239 ;; Defined at:
 17240 ;;		line 175 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
 17241 ;; Parameters:    Size  Location     Type
 17242 ;;		None
 17243 ;; Auto vars:     Size  Location     Type
 17244 ;;		None
 17245 ;; Return value:  Size  Location     Type
 17246 ;;		None               void
 17247 ;; Registers used:
 17248 ;;		wreg, status,2, status,0, pclath, cstack
 17249 ;; Tracked objects:
 17250 ;;		On entry : 0/0
 17251 ;;		On exit  : 0/0
 17252 ;;		Unchanged: 0/0
 17253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17255 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17257 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17258 ;;Total ram usage:        0 bytes
 17259 ;; Hardware stack levels used:    1
 17260 ;; Hardware stack levels required when called:    6
 17261 ;; This function calls:
 17262 ;;		_CC2500_WriteCommand
 17263 ;;		_DelayTime_1us
 17264 ;; This function is called by:
 17265 ;;		_CC2500_PowerOnInitial
 17266 ;; This function uses a non-reentrant model
 17267 ;;
 17268                           
 17269                           
 17270                           ;psect for function _CC2500_FrequencyCabr
 17271  19E3                     _CC2500_FrequencyCabr:	
 17272                           
 17273                           ;CC2500_B1.c: 177: CC2500_WriteCommand(0x33);
 17274                           
 17275                           ;incstack = 0
 17276                           ; Regs used in _CC2500_FrequencyCabr: [wreg+status,2+status,0+pclath+cstack]
 17277  19E3  3033               	movlw	51
 17278  19E4  319A  2274  3199   	fcall	_CC2500_WriteCommand
 17279                           
 17280                           ;CC2500_B1.c: 178: DelayTime_1us(1000);
 17281  19E7  30E8               	movlw	232
 17282  19E8  0020               	movlb	0	; select bank0
 17283  19E9  00A0               	movwf	DelayTime_1us@count
 17284  19EA  3003               	movlw	3
 17285  19EB  00A1               	movwf	DelayTime_1us@count+1
 17286  19EC  319D  2588         	fcall	_DelayTime_1us
 17287  19EE  0008               	return
 17288  19EF                     __end_of_CC2500_FrequencyCabr:	
 17289                           
 17290                           	psect	text116
 17291  1D88                     __ptext116:	
 17292 ;; *************** function _DelayTime_1us *****************
 17293 ;; Defined at:
 17294 ;;		line 283 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
 17295 ;; Parameters:    Size  Location     Type
 17296 ;;  count           2    0[BANK0 ] int 
 17297 ;; Auto vars:     Size  Location     Type
 17298 ;;  j               2    4[BANK0 ] unsigned int 
 17299 ;;  i               2    2[BANK0 ] unsigned int 
 17300 ;; Return value:  Size  Location     Type
 17301 ;;		None               void
 17302 ;; Registers used:
 17303 ;;		wreg, status,2
 17304 ;; Tracked objects:
 17305 ;;		On entry : 0/0
 17306 ;;		On exit  : 0/0
 17307 ;;		Unchanged: 0/0
 17308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17309 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17310 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17312 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17313 ;;Total ram usage:        6 bytes
 17314 ;; Hardware stack levels used:    1
 17315 ;; Hardware stack levels required when called:    4
 17316 ;; This function calls:
 17317 ;;		Nothing
 17318 ;; This function is called by:
 17319 ;;		_CC2500_PowerRST
 17320 ;;		_CC2500_FrequencyCabr
 17321 ;; This function uses a non-reentrant model
 17322 ;;
 17323                           
 17324                           
 17325                           ;psect for function _DelayTime_1us
 17326  1D88                     _DelayTime_1us:	
 17327                           
 17328                           ;CC2500_B1.c: 285: unsigned int i,j;
 17329                           ;CC2500_B1.c: 286: for(i=1;i<count;i++)
 17330                           
 17331                           ;incstack = 0
 17332                           ; Regs used in _DelayTime_1us: [wreg+status,2]
 17333  1D88  3001               	movlw	1
 17334  1D89  0020               	movlb	0	; select bank0
 17335  1D8A  00A2               	movwf	DelayTime_1us@i
 17336  1D8B  3000               	movlw	0
 17337  1D8C  00A3               	movwf	DelayTime_1us@i+1
 17338  1D8D                     l401:	
 17339  1D8D  0821               	movf	DelayTime_1us@count+1,w
 17340  1D8E  0223               	subwf	DelayTime_1us@i+1,w
 17341  1D8F  1D03               	skipz
 17342  1D90  2D93               	goto	u8855
 17343  1D91  0820               	movf	DelayTime_1us@count,w
 17344  1D92  0222               	subwf	DelayTime_1us@i,w
 17345  1D93                     u8855:	
 17346  1D93  1803               	btfsc	3,0
 17347  1D94  0008               	return
 17348                           
 17349                           ;CC2500_B1.c: 287: for(j=0;j<=1;j++);
 17350  1D95  01A4               	clrf	DelayTime_1us@j
 17351  1D96  01A5               	clrf	DelayTime_1us@j+1
 17352  1D97  3000               	movlw	0
 17353  1D98  0225               	subwf	DelayTime_1us@j+1,w
 17354  1D99  3002               	movlw	2
 17355  1D9A  1903               	skipnz
 17356  1D9B  0224               	subwf	DelayTime_1us@j,w
 17357  1D9C  1803               	btfsc	3,0
 17358  1D9D  2DA9               	goto	l8777
 17359  1D9E                     l8775:	
 17360  1D9E  3001               	movlw	1
 17361  1D9F  07A4               	addwf	DelayTime_1us@j,f
 17362  1DA0  3000               	movlw	0
 17363  1DA1  3DA5               	addwfc	DelayTime_1us@j+1,f
 17364  1DA2  3000               	movlw	0
 17365  1DA3  0225               	subwf	DelayTime_1us@j+1,w
 17366  1DA4  3002               	movlw	2
 17367  1DA5  1903               	skipnz
 17368  1DA6  0224               	subwf	DelayTime_1us@j,w
 17369  1DA7  1C03               	skipc
 17370  1DA8  2D9E               	goto	l8775
 17371  1DA9                     l8777:	
 17372  1DA9  3001               	movlw	1
 17373  1DAA  07A2               	addwf	DelayTime_1us@i,f
 17374  1DAB  3000               	movlw	0
 17375  1DAC  3DA3               	addwfc	DelayTime_1us@i+1,f
 17376  1DAD  2D8D               	goto	l401
 17377  1DAE                     __end_of_DelayTime_1us:	
 17378                           
 17379                           	psect	text117
 17380  1902                     __ptext117:	
 17381 ;; *************** function _CC2500_ClearTXFIFO *****************
 17382 ;; Defined at:
 17383 ;;		line 161 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
 17384 ;; Parameters:    Size  Location     Type
 17385 ;;		None
 17386 ;; Auto vars:     Size  Location     Type
 17387 ;;		None
 17388 ;; Return value:  Size  Location     Type
 17389 ;;		None               void
 17390 ;; Registers used:
 17391 ;;		wreg, status,2, status,0, pclath, cstack
 17392 ;; Tracked objects:
 17393 ;;		On entry : 0/0
 17394 ;;		On exit  : 0/0
 17395 ;;		Unchanged: 0/0
 17396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17400 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17401 ;;Total ram usage:        0 bytes
 17402 ;; Hardware stack levels used:    1
 17403 ;; Hardware stack levels required when called:    6
 17404 ;; This function calls:
 17405 ;;		_CC2500_WriteCommand
 17406 ;; This function is called by:
 17407 ;;		_CC2500_PowerOnInitial
 17408 ;; This function uses a non-reentrant model
 17409 ;;
 17410                           
 17411                           
 17412                           ;psect for function _CC2500_ClearTXFIFO
 17413  1902                     _CC2500_ClearTXFIFO:	
 17414                           
 17415                           ;CC2500_B1.c: 163: CC2500_WriteCommand(0x3B);
 17416                           
 17417                           ;incstack = 0
 17418                           ; Regs used in _CC2500_ClearTXFIFO: [wreg+status,2+status,0+pclath+cstack]
 17419  1902  303B               	movlw	59
 17420  1903  319A  2274         	fcall	_CC2500_WriteCommand
 17421  1905  0008               	return
 17422  1906                     __end_of_CC2500_ClearTXFIFO:	
 17423                           
 17424                           	psect	text118
 17425  18FE                     __ptext118:	
 17426 ;; *************** function _CC2500_ClearRXFIFO *****************
 17427 ;; Defined at:
 17428 ;;		line 168 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
 17429 ;; Parameters:    Size  Location     Type
 17430 ;;		None
 17431 ;; Auto vars:     Size  Location     Type
 17432 ;;		None
 17433 ;; Return value:  Size  Location     Type
 17434 ;;		None               void
 17435 ;; Registers used:
 17436 ;;		wreg, status,2, status,0, pclath, cstack
 17437 ;; Tracked objects:
 17438 ;;		On entry : 0/0
 17439 ;;		On exit  : 0/0
 17440 ;;		Unchanged: 0/0
 17441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17442 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17445 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17446 ;;Total ram usage:        0 bytes
 17447 ;; Hardware stack levels used:    1
 17448 ;; Hardware stack levels required when called:    6
 17449 ;; This function calls:
 17450 ;;		_CC2500_WriteCommand
 17451 ;; This function is called by:
 17452 ;;		_CC2500_PowerOnInitial
 17453 ;; This function uses a non-reentrant model
 17454 ;;
 17455                           
 17456                           
 17457                           ;psect for function _CC2500_ClearRXFIFO
 17458  18FE                     _CC2500_ClearRXFIFO:	
 17459                           
 17460                           ;CC2500_B1.c: 170: CC2500_WriteCommand(0x3A);
 17461                           
 17462                           ;incstack = 0
 17463                           ; Regs used in _CC2500_ClearRXFIFO: [wreg+status,2+status,0+pclath+cstack]
 17464  18FE  303A               	movlw	58
 17465  18FF  319A  2274         	fcall	_CC2500_WriteCommand
 17466  1901  0008               	return
 17467  1902                     __end_of_CC2500_ClearRXFIFO:	
 17468                           
 17469                           	psect	text119
 17470  1A74                     __ptext119:	
 17471 ;; *************** function _CC2500_WriteCommand *****************
 17472 ;; Defined at:
 17473 ;;		line 253 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
 17474 ;; Parameters:    Size  Location     Type
 17475 ;;  command         1    wreg     unsigned char 
 17476 ;; Auto vars:     Size  Location     Type
 17477 ;;  command         1    3[BANK0 ] unsigned char 
 17478 ;; Return value:  Size  Location     Type
 17479 ;;		None               void
 17480 ;; Registers used:
 17481 ;;		wreg, status,2, status,0, pclath, cstack
 17482 ;; Tracked objects:
 17483 ;;		On entry : 0/0
 17484 ;;		On exit  : 0/0
 17485 ;;		Unchanged: 0/0
 17486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17487 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17488 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17489 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17490 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17491 ;;Total ram usage:        2 bytes
 17492 ;; Hardware stack levels used:    1
 17493 ;; Hardware stack levels required when called:    5
 17494 ;; This function calls:
 17495 ;;		_CC2500_WriteByte
 17496 ;; This function is called by:
 17497 ;;		_CC2500_TxData
 17498 ;;		_CC2500_RxData
 17499 ;;		_CC2500_ClearTXFIFO
 17500 ;;		_CC2500_ClearRXFIFO
 17501 ;;		_CC2500_FrequencyCabr
 17502 ;;		_CC2500_SIDLEMode
 17503 ;;		_setRF_Main
 17504 ;;		_RF_RxDisable
 17505 ;; This function uses a non-reentrant model
 17506 ;;
 17507                           
 17508                           
 17509                           ;psect for function _CC2500_WriteCommand
 17510  1A74                     _CC2500_WriteCommand:	
 17511                           
 17512                           ;incstack = 0
 17513                           ; Regs used in _CC2500_WriteCommand: [wreg+status,2+status,0+pclath+cstack]
 17514                           ;CC2500_WriteCommand@command stored from wreg
 17515  1A74  0020               	movlb	0	; select bank0
 17516  1A75  00A3               	movwf	CC2500_WriteCommand@command
 17517                           
 17518                           ;CC2500_B1.c: 255: RC4=0;
 17519  1A76  120E               	bcf	14,4	;volatile
 17520                           
 17521                           ;CC2500_B1.c: 256: SPI0Buffer=command;
 17522  1A77  0823               	movf	CC2500_WriteCommand@command,w
 17523  1A78  00A2               	movwf	??_CC2500_WriteCommand
 17524  1A79  0822               	movf	??_CC2500_WriteCommand,w
 17525  1A7A  0021               	movlb	1	; select bank1
 17526  1A7B  00BE               	movwf	_SPI0Buffer^(0+128)
 17527  1A7C                     l389:	
 17528                           ;CC2500_B1.c: 258: while(RC2==1);
 17529                           
 17530  1A7C  0020               	movlb	0	; select bank0
 17531  1A7D  190E               	btfsc	14,2	;volatile
 17532  1A7E  2A7C               	goto	l389
 17533                           
 17534                           ;CC2500_B1.c: 260: CC2500_WriteByte();
 17535  1A7F  319B  23CE         	fcall	_CC2500_WriteByte
 17536                           
 17537                           ;CC2500_B1.c: 261: RC4=1;
 17538  1A81  0020               	movlb	0	; select bank0
 17539  1A82  160E               	bsf	14,4	;volatile
 17540  1A83  0008               	return
 17541  1A84                     __end_of_CC2500_WriteCommand:	
 17542                           
 17543                           	psect	text120
 17544  1BCE                     __ptext120:	
 17545 ;; *************** function _CC2500_WriteByte *****************
 17546 ;; Defined at:
 17547 ;;		line 193 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
 17548 ;; Parameters:    Size  Location     Type
 17549 ;;		None
 17550 ;; Auto vars:     Size  Location     Type
 17551 ;;  loop_a          1    1[BANK0 ] unsigned char 
 17552 ;; Return value:  Size  Location     Type
 17553 ;;		None               void
 17554 ;; Registers used:
 17555 ;;		wreg, status,2, status,0
 17556 ;; Tracked objects:
 17557 ;;		On entry : 0/0
 17558 ;;		On exit  : 0/0
 17559 ;;		Unchanged: 0/0
 17560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17562 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17563 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17564 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17565 ;;Total ram usage:        2 bytes
 17566 ;; Hardware stack levels used:    1
 17567 ;; Hardware stack levels required when called:    4
 17568 ;; This function calls:
 17569 ;;		Nothing
 17570 ;; This function is called by:
 17571 ;;		_CC2500_TxData
 17572 ;;		_CC2500_RxData
 17573 ;;		_CC2500_PowerRST
 17574 ;;		_CC2500_WriteREG
 17575 ;;		_CC2500_WriteCommand
 17576 ;;		_CC2500_ReadStatus
 17577 ;;		_CC2500_ReadREG
 17578 ;; This function uses a non-reentrant model
 17579 ;;
 17580                           
 17581                           
 17582                           ;psect for function _CC2500_WriteByte
 17583  1BCE                     _CC2500_WriteByte:	
 17584                           
 17585                           ;CC2500_B1.c: 195: unsigned char loop_a;
 17586                           ;CC2500_B1.c: 196: for(loop_a=0;loop_a<8;loop_a++)
 17587                           
 17588                           ;incstack = 0
 17589                           ; Regs used in _CC2500_WriteByte: [wreg+status,2+status,0]
 17590  1BCE  0020               	movlb	0	; select bank0
 17591  1BCF  01A1               	clrf	CC2500_WriteByte@loop_a
 17592  1BD0                     L16:	
 17593  1BD0  3008               	movlw	8
 17594  1BD1  0221               	subwf	CC2500_WriteByte@loop_a,w
 17595  1BD2  1803               	btfsc	3,0
 17596  1BD3  0008               	return
 17597                           
 17598                           ;CC2500_B1.c: 197: {
 17599                           ;CC2500_B1.c: 198: if(SPI0Buffer&0x80)
 17600  1BD4  0021               	movlb	1	; select bank1
 17601  1BD5  1FBE               	btfss	_SPI0Buffer^(0+128),7
 17602  1BD6  2BDA               	goto	l365
 17603                           
 17604                           ;CC2500_B1.c: 199: RC0=1;
 17605  1BD7  0020               	movlb	0	; select bank0
 17606  1BD8  140E               	bsf	14,0	;volatile
 17607  1BD9  2BDC               	goto	l366
 17608  1BDA                     l365:	
 17609                           
 17610                           ;CC2500_B1.c: 200: else
 17611                           ;CC2500_B1.c: 201: RC0=0;
 17612  1BDA  0020               	movlb	0	; select bank0
 17613  1BDB  100E               	bcf	14,0	;volatile
 17614  1BDC                     l366:	
 17615                           
 17616                           ;CC2500_B1.c: 202: RC1=1;
 17617  1BDC  148E               	bsf	14,1	;volatile
 17618                           
 17619                           ;CC2500_B1.c: 203: SPI0Buffer<<=1;
 17620  1BDD  1003               	clrc
 17621  1BDE  0021               	movlb	1	; select bank1
 17622  1BDF  0DBE               	rlf	_SPI0Buffer^(0+128),f
 17623                           
 17624                           ;CC2500_B1.c: 204: RC1=0;
 17625  1BE0  0020               	movlb	0	; select bank0
 17626  1BE1  108E               	bcf	14,1	;volatile
 17627  1BE2  3001               	movlw	1
 17628  1BE3  00A0               	movwf	??_CC2500_WriteByte
 17629  1BE4  0820               	movf	??_CC2500_WriteByte,w
 17630  1BE5  07A1               	addwf	CC2500_WriteByte@loop_a,f
 17631  1BE6  2BD0               	goto	L16
 17632  1BE7                     __end_of_CC2500_WriteByte:	
 17633                           
 17634                           	psect	text121
 17635  0C1C                     __ptext121:	
 17636 ;; *************** function _Buzzer_Main *****************
 17637 ;; Defined at:
 17638 ;;		line 53 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Buzzer_B1.c"
 17639 ;; Parameters:    Size  Location     Type
 17640 ;;		None
 17641 ;; Auto vars:     Size  Location     Type
 17642 ;;		None
 17643 ;; Return value:  Size  Location     Type
 17644 ;;		None               void
 17645 ;; Registers used:
 17646 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 17647 ;; Tracked objects:
 17648 ;;		On entry : 0/0
 17649 ;;		On exit  : 0/0
 17650 ;;		Unchanged: 0/0
 17651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17653 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17654 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17655 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17656 ;;Total ram usage:        4 bytes
 17657 ;; Hardware stack levels used:    1
 17658 ;; Hardware stack levels required when called:    4
 17659 ;; This function calls:
 17660 ;;		Nothing
 17661 ;; This function is called by:
 17662 ;;		_main
 17663 ;; This function uses a non-reentrant model
 17664 ;;
 17665                           
 17666                           
 17667                           ;psect for function _Buzzer_Main
 17668  0C1C                     _Buzzer_Main:	
 17669                           
 17670                           ;Buzzer_B1.c: 55: Buz->Switch=(RB3)?1:0;
 17671                           
 17672                           ;incstack = 0
 17673                           ; Regs used in _Buzzer_Main: [wreg-fsr1h+status,2+status,0]
 17674  0C1C  0020               	movlb	0	; select bank0
 17675  0C1D  0868               	movf	_Buz,w
 17676  0C1E  0086               	movwf	6
 17677  0C1F  3001               	movlw	1	; select bank2/3
 17678  0C20  0087               	movwf	7
 17679  0C21  1281               	bcf	1,5
 17680  0C22  198D               	btfsc	13,3	;volatile
 17681  0C23  1681               	bsf	1,5
 17682                           
 17683                           ;Buzzer_B1.c: 57: if(Buz->GO)
 17684  0C24  0020               	movlb	0	; select bank0
 17685  0C25  0868               	movf	_Buz,w
 17686  0C26  0086               	movwf	6
 17687  0C27  3001               	movlw	1	; select bank2/3
 17688  0C28  0087               	movwf	7
 17689  0C29  1C81               	btfss	1,1
 17690  0C2A  0008               	return
 17691                           
 17692                           ;Buzzer_B1.c: 58: {
 17693                           ;Buzzer_B1.c: 60: if(Buz->Time >= Buz->TimeValue)
 17694  0C2B  0868               	movf	_Buz,w
 17695  0C2C  3E06               	addlw	6
 17696  0C2D  0086               	movwf	6
 17697  0C2E  3001               	movlw	1	; select bank2/3
 17698  0C2F  0087               	movwf	7
 17699  0C30  3F40               	moviw [0]fsr1
 17700  0C31  00A0               	movwf	??_Buzzer_Main
 17701  0C32  3F41               	moviw [1]fsr1
 17702  0C33  00A1               	movwf	??_Buzzer_Main+1
 17703  0C34  0A68               	incf	_Buz,w
 17704  0C35  0086               	movwf	6
 17705  0C36  3001               	movlw	1	; select bank2/3
 17706  0C37  0087               	movwf	7
 17707  0C38  3F40               	moviw [0]fsr1
 17708  0C39  00A2               	movwf	??_Buzzer_Main+2
 17709  0C3A  3F41               	moviw [1]fsr1
 17710  0C3B  00A3               	movwf	??_Buzzer_Main+3
 17711  0C3C  0821               	movf	??_Buzzer_Main+1,w
 17712  0C3D  0223               	subwf	??_Buzzer_Main+3,w
 17713  0C3E  1D03               	skipz
 17714  0C3F  2C42               	goto	u10035
 17715  0C40  0820               	movf	??_Buzzer_Main,w
 17716  0C41  0222               	subwf	??_Buzzer_Main+2,w
 17717  0C42                     u10035:	
 17718  0C42  1C03               	skipc
 17719  0C43  0008               	return
 17720                           
 17721                           ;Buzzer_B1.c: 61: {
 17722                           ;Buzzer_B1.c: 62: Buz->Time=0;
 17723  0C44  0A68               	incf	_Buz,w
 17724  0C45  0086               	movwf	6
 17725  0C46  3001               	movlw	1	; select bank2/3
 17726  0C47  0087               	movwf	7
 17727  0C48  3000               	movlw	0
 17728  0C49  3FC0               	movwi [0]fsr1
 17729  0C4A  3FC1               	movwi [1]fsr1
 17730                           
 17731                           ;Buzzer_B1.c: 63: if(!Buz->Switch)
 17732  0C4B  0868               	movf	_Buz,w
 17733  0C4C  0086               	movwf	6
 17734  0C4D  3001               	movlw	1	; select bank2/3
 17735  0C4E  0087               	movwf	7
 17736  0C4F  1A81               	btfsc	1,5
 17737  0C50  2CB6               	goto	l9601
 17738                           
 17739                           ;Buzzer_B1.c: 64: {
 17740                           ;Buzzer_B1.c: 65: if(Buz->Count == 0)
 17741  0C51  0868               	movf	_Buz,w
 17742  0C52  3E03               	addlw	3
 17743  0C53  0086               	movwf	6
 17744  0C54  3001               	movlw	1	; select bank2/3
 17745  0C55  0087               	movwf	7
 17746  0C56  0881               	movf	1,f
 17747  0C57  1D03               	skipz
 17748  0C58  2CAF               	goto	l9597
 17749                           
 17750                           ;Buzzer_B1.c: 66: {
 17751                           ;Buzzer_B1.c: 67: if(Buz->BufferStatus1)
 17752  0C59  0868               	movf	_Buz,w
 17753  0C5A  0086               	movwf	6
 17754  0C5B  3001               	movlw	1	; select bank2/3
 17755  0C5C  0087               	movwf	7
 17756  0C5D  1D81               	btfss	1,3
 17757  0C5E  2C81               	goto	l9589
 17758                           
 17759                           ;Buzzer_B1.c: 68: {
 17760                           ;Buzzer_B1.c: 69: Buz->BufferStatus1=0;
 17761  0C5F  0868               	movf	_Buz,w
 17762  0C60  0086               	movwf	6
 17763  0C61  3001               	movlw	1	; select bank2/3
 17764  0C62  0087               	movwf	7
 17765  0C63  1181               	bcf	1,3
 17766                           
 17767                           ;Buzzer_B1.c: 70: Buz->Count=Buz->CountBuffer1;
 17768  0C64  0868               	movf	_Buz,w
 17769  0C65  3E04               	addlw	4
 17770  0C66  0086               	movwf	6
 17771  0C67  3001               	movlw	1	; select bank2/3
 17772  0C68  0087               	movwf	7
 17773  0C69  0801               	movf	1,w
 17774  0C6A  00A0               	movwf	??_Buzzer_Main
 17775  0C6B  0868               	movf	_Buz,w
 17776  0C6C  3E03               	addlw	3
 17777  0C6D  0086               	movwf	6
 17778  0C6E  3001               	movlw	1	; select bank2/3
 17779  0C6F  0087               	movwf	7
 17780  0C70  0820               	movf	??_Buzzer_Main,w
 17781  0C71  0081               	movwf	1
 17782                           
 17783                           ;Buzzer_B1.c: 71: Buz->TimeValue=Buz->TimeValueBuffer1;
 17784  0C72  0868               	movf	_Buz,w
 17785  0C73  3E08               	addlw	8
 17786  0C74  0086               	movwf	6
 17787  0C75  3001               	movlw	1	; select bank2/3
 17788  0C76  0087               	movwf	7
 17789  0C77  0868               	movf	_Buz,w
 17790  0C78  3E06               	addlw	6
 17791  0C79  0084               	movwf	4
 17792  0C7A  3001               	movlw	1	; select bank2/3
 17793  0C7B  0085               	movwf	5
 17794  0C7C  3F40               	moviw [0]fsr1
 17795  0C7D  3F80               	movwi [0]fsr0
 17796  0C7E  3F41               	moviw [1]fsr1
 17797  0C7F  3F81               	movwi [1]fsr0
 17798                           
 17799                           ;Buzzer_B1.c: 72: }
 17800  0C80  0008               	return
 17801  0C81                     l9589:	
 17802                           
 17803                           ;Buzzer_B1.c: 73: else if(Buz->BufferStatus2)
 17804  0C81  0868               	movf	_Buz,w
 17805  0C82  0086               	movwf	6
 17806  0C83  3001               	movlw	1	; select bank2/3
 17807  0C84  0087               	movwf	7
 17808  0C85  1E01               	btfss	1,4
 17809  0C86  2CA9               	goto	l9595
 17810                           
 17811                           ;Buzzer_B1.c: 74: {
 17812                           ;Buzzer_B1.c: 75: Buz->BufferStatus2=0;
 17813  0C87  0868               	movf	_Buz,w
 17814  0C88  0086               	movwf	6
 17815  0C89  3001               	movlw	1	; select bank2/3
 17816  0C8A  0087               	movwf	7
 17817  0C8B  1201               	bcf	1,4
 17818                           
 17819                           ;Buzzer_B1.c: 76: Buz->Count=Buz->CountBuffer2;
 17820  0C8C  0868               	movf	_Buz,w
 17821  0C8D  3E05               	addlw	5
 17822  0C8E  0086               	movwf	6
 17823  0C8F  3001               	movlw	1	; select bank2/3
 17824  0C90  0087               	movwf	7
 17825  0C91  0801               	movf	1,w
 17826  0C92  00A0               	movwf	??_Buzzer_Main
 17827  0C93  0868               	movf	_Buz,w
 17828  0C94  3E03               	addlw	3
 17829  0C95  0086               	movwf	6
 17830  0C96  3001               	movlw	1	; select bank2/3
 17831  0C97  0087               	movwf	7
 17832  0C98  0820               	movf	??_Buzzer_Main,w
 17833  0C99  0081               	movwf	1
 17834                           
 17835                           ;Buzzer_B1.c: 77: Buz->TimeValue=Buz->TimeValueBuffer2;
 17836  0C9A  0868               	movf	_Buz,w
 17837  0C9B  3E0A               	addlw	10
 17838  0C9C  0086               	movwf	6
 17839  0C9D  3001               	movlw	1	; select bank2/3
 17840  0C9E  0087               	movwf	7
 17841  0C9F  0868               	movf	_Buz,w
 17842  0CA0  3E06               	addlw	6
 17843  0CA1  0084               	movwf	4
 17844  0CA2  3001               	movlw	1	; select bank2/3
 17845  0CA3  0085               	movwf	5
 17846  0CA4  3F40               	moviw [0]fsr1
 17847  0CA5  3F80               	movwi [0]fsr0
 17848  0CA6  3F41               	moviw [1]fsr1
 17849  0CA7  3F81               	movwi [1]fsr0
 17850                           
 17851                           ;Buzzer_B1.c: 78: }
 17852  0CA8  0008               	return
 17853  0CA9                     l9595:	
 17854                           
 17855                           ;Buzzer_B1.c: 79: else
 17856                           ;Buzzer_B1.c: 80: {
 17857                           ;Buzzer_B1.c: 81: Buz->GO=0;
 17858  0CA9  0868               	movf	_Buz,w
 17859  0CAA  0086               	movwf	6
 17860  0CAB  3001               	movlw	1	; select bank2/3
 17861  0CAC  0087               	movwf	7
 17862  0CAD  1081               	bcf	1,1
 17863                           
 17864                           ;Buzzer_B1.c: 82: }
 17865                           ;Buzzer_B1.c: 83: }
 17866  0CAE  0008               	return
 17867  0CAF                     l9597:	
 17868                           
 17869                           ;Buzzer_B1.c: 84: else
 17870                           ;Buzzer_B1.c: 85: {
 17871                           ;Buzzer_B1.c: 86: Buz->Switch=1;
 17872  0CAF  0868               	movf	_Buz,w
 17873  0CB0  0086               	movwf	6
 17874  0CB1  3001               	movlw	1	; select bank2/3
 17875  0CB2  0087               	movwf	7
 17876  0CB3  1681               	bsf	1,5
 17877                           
 17878                           ;Buzzer_B1.c: 88: RB3=1;
 17879  0CB4  158D               	bsf	13,3	;volatile
 17880                           
 17881                           ;Buzzer_B1.c: 89: }
 17882                           ;Buzzer_B1.c: 90: }
 17883  0CB5  0008               	return
 17884  0CB6                     l9601:	
 17885                           
 17886                           ;Buzzer_B1.c: 91: else
 17887                           ;Buzzer_B1.c: 92: {
 17888                           ;Buzzer_B1.c: 93: Buz->Switch=0;
 17889  0CB6  0868               	movf	_Buz,w
 17890  0CB7  0086               	movwf	6
 17891  0CB8  3001               	movlw	1	; select bank2/3
 17892  0CB9  0087               	movwf	7
 17893  0CBA  1281               	bcf	1,5
 17894                           
 17895                           ;Buzzer_B1.c: 95: RB3=0;
 17896  0CBB  118D               	bcf	13,3	;volatile
 17897                           
 17898                           ;Buzzer_B1.c: 97: Buz->Count--;
 17899  0CBC  0868               	movf	_Buz,w
 17900  0CBD  3E03               	addlw	3
 17901  0CBE  0086               	movwf	6
 17902  0CBF  3001               	movlw	1	; select bank2/3
 17903  0CC0  0087               	movwf	7
 17904  0CC1  3001               	movlw	1
 17905  0CC2  0281               	subwf	1,f
 17906  0CC3  0008               	return
 17907  0CC4                     __end_of_Buzzer_Main:	
 17908                           
 17909                           	psect	text122
 17910  1989                     __ptext122:	
 17911 ;; *************** function _Buzzer_Initialization *****************
 17912 ;; Defined at:
 17913 ;;		line 10 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Buzzer_B1.c"
 17914 ;; Parameters:    Size  Location     Type
 17915 ;;		None
 17916 ;; Auto vars:     Size  Location     Type
 17917 ;;		None
 17918 ;; Return value:  Size  Location     Type
 17919 ;;		None               void
 17920 ;; Registers used:
 17921 ;;		wreg, fsr1l, fsr1h
 17922 ;; Tracked objects:
 17923 ;;		On entry : 0/0
 17924 ;;		On exit  : 0/0
 17925 ;;		Unchanged: 0/0
 17926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17929 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17930 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17931 ;;Total ram usage:        1 bytes
 17932 ;; Hardware stack levels used:    1
 17933 ;; Hardware stack levels required when called:    4
 17934 ;; This function calls:
 17935 ;;		Nothing
 17936 ;; This function is called by:
 17937 ;;		_main
 17938 ;; This function uses a non-reentrant model
 17939 ;;
 17940                           
 17941                           
 17942                           ;psect for function _Buzzer_Initialization
 17943  1989                     _Buzzer_Initialization:	
 17944                           
 17945                           ;Buzzer_B1.c: 12: Buz=&Buz1;
 17946                           
 17947                           ;incstack = 0
 17948                           ; Regs used in _Buzzer_Initialization: [wregfsr1]
 17949  1989  304A               	movlw	_Buz1& (0+255)
 17950  198A  0020               	movlb	0	; select bank0
 17951  198B  00A0               	movwf	??_Buzzer_Initialization
 17952  198C  0820               	movf	??_Buzzer_Initialization,w
 17953  198D  00E8               	movwf	_Buz
 17954                           
 17955                           ;Buzzer_B1.c: 13: Buz->Enable=1;
 17956  198E  0868               	movf	_Buz,w
 17957  198F  0086               	movwf	6
 17958  1990  3001               	movlw	1	; select bank2/3
 17959  1991  0087               	movwf	7
 17960  1992  1401               	bsf	1,0
 17961  1993  0008               	return
 17962  1994                     __end_of_Buzzer_Initialization:	
 17963                           
 17964                           	psect	intentry
 17965  0004                     __pintentry:	
 17966 ;; *************** function _ISR *****************
 17967 ;; Defined at:
 17968 ;;		line 97 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
 17969 ;; Parameters:    Size  Location     Type
 17970 ;;		None
 17971 ;; Auto vars:     Size  Location     Type
 17972 ;;		None
 17973 ;; Return value:  Size  Location     Type
 17974 ;;		None               void
 17975 ;; Registers used:
 17976 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17977 ;; Tracked objects:
 17978 ;;		On entry : 0/0
 17979 ;;		On exit  : 0/0
 17980 ;;		Unchanged: 0/0
 17981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17984 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17985 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17986 ;;Total ram usage:        1 bytes
 17987 ;; Hardware stack levels used:    1
 17988 ;; Hardware stack levels required when called:    3
 17989 ;; This function calls:
 17990 ;;		_INT_ISR
 17991 ;;		_IOC_ISR
 17992 ;;		_TMR0_ISR
 17993 ;; This function is called by:
 17994 ;;		Interrupt level 1
 17995 ;; This function uses a non-reentrant model
 17996 ;;
 17997                           
 17998  0004                     _ISR:	
 17999                           
 18000                           ;incstack = 0
 18001                           ; Regs used in _ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18002  0004  147E               	bsf	126,0	;set compiler interrupt flag
 18003  0005  3180               	pagesel	$
 18004  0006  0020               	movlb	0	; select bank0
 18005  0007  087F               	movf	127,w
 18006  0008  00F5               	movwf	??_ISR
 18007                           
 18008                           ;MCU_B1.c: 99: IOC_ISR();
 18009  0009  319D  2563  3180   	fcall	_IOC_ISR
 18010                           
 18011                           ;MCU_B1.c: 101: TMR0_ISR();
 18012  000C  3180  2051  3180   	fcall	_TMR0_ISR
 18013                           
 18014                           ;MCU_B1.c: 103: ;;
 18015                           ;MCU_B1.c: 107: INT_ISR();
 18016  000F  3199  21D7         	fcall	_INT_ISR
 18017  0011  0875               	movf	??_ISR,w
 18018  0012  0020               	movlb	0	; select bank0
 18019  0013  00FF               	movwf	127
 18020  0014  107E               	bcf	126,0	;clear compiler interrupt flag
 18021  0015  0009               	retfie
 18022  0016                     __end_of_ISR:	
 18023                           
 18024                           	psect	text124
 18025  0051                     __ptext124:	
 18026 ;; *************** function _TMR0_ISR *****************
 18027 ;; Defined at:
 18028 ;;		line 123 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
 18029 ;; Parameters:    Size  Location     Type
 18030 ;;		None
 18031 ;; Auto vars:     Size  Location     Type
 18032 ;;		None
 18033 ;; Return value:  Size  Location     Type
 18034 ;;		None               void
 18035 ;; Registers used:
 18036 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 18037 ;; Tracked objects:
 18038 ;;		On entry : 0/0
 18039 ;;		On exit  : 0/0
 18040 ;;		Unchanged: 0/0
 18041 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18042 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18043 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18044 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18045 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18046 ;;Total ram usage:        4 bytes
 18047 ;; Hardware stack levels used:    1
 18048 ;; This function calls:
 18049 ;;		Nothing
 18050 ;; This function is called by:
 18051 ;;		_ISR
 18052 ;; This function uses a non-reentrant model
 18053 ;;
 18054                           
 18055                           
 18056                           ;psect for function _TMR0_ISR
 18057  0051                     _TMR0_ISR:	
 18058                           
 18059                           ;MCU_B1.c: 125: if(TMR0IE && TMR0IF)
 18060                           
 18061                           ;incstack = 0
 18062                           ; Regs used in _TMR0_ISR: [wreg-fsr1h+status,2+status,0]
 18063  0051  1E8B               	btfss	11,5	;volatile
 18064  0052  0008               	return
 18065  0053  1D0B               	btfss	11,2	;volatile
 18066  0054  0008               	return
 18067                           
 18068                           ;MCU_B1.c: 126: {
 18069                           ;MCU_B1.c: 127: TMR0=(256-90);
 18070  0055  30A6               	movlw	166
 18071  0056  0020               	movlb	0	; select bank0
 18072  0057  0095               	movwf	21	;volatile
 18073                           
 18074                           ;MCU_B1.c: 128: TMR0IF=0;
 18075  0058  110B               	bcf	11,2	;volatile
 18076                           
 18077                           ;MCU_B1.c: 133: if(DimmerLights11->GO) { DimmerLights11->Count++; if(DimmerLights11->Cou
      +                          nt >= (DimmerLights11->DimmingValue-Dimmer->Correction)) { DimmerLights11->Count=0; Dimm
      +                          erLights11->GO=0; DimmerLights11->Flag=1; if(DimmerLights11->StatusFlag) { RA7=1; ;; } }
      +                           }
 18078  0059  086B               	movf	_DimmerLights11,w
 18079  005A  0086               	movwf	6
 18080  005B  3001               	movlw	1	; select bank2/3
 18081  005C  0087               	movwf	7
 18082  005D  1C01               	btfss	1,0
 18083  005E  28AA               	goto	i1l7625
 18084  005F  3001               	movlw	1
 18085  0060  00F1               	movwf	??_TMR0_ISR
 18086  0061  086B               	movf	_DimmerLights11,w
 18087  0062  3E03               	addlw	3
 18088  0063  0086               	movwf	6
 18089  0064  3001               	movlw	1	; select bank2/3
 18090  0065  0087               	movwf	7
 18091  0066  0871               	movf	??_TMR0_ISR,w
 18092  0067  0781               	addwf	1,f
 18093  0068  0021               	movlb	1	; select bank1
 18094  0069  0838               	movf	_Dimmer^(0+128),w
 18095  006A  3E02               	addlw	2
 18096  006B  0086               	movwf	6
 18097  006C  0187               	clrf	7
 18098  006D  0801               	movf	1,w
 18099  006E  00F1               	movwf	??_TMR0_ISR
 18100  006F  01F2               	clrf	??_TMR0_ISR+1
 18101  0070  09F1               	comf	??_TMR0_ISR,f
 18102  0071  09F2               	comf	??_TMR0_ISR+1,f
 18103  0072  0AF1               	incf	??_TMR0_ISR,f
 18104  0073  1903               	skipnz
 18105  0074  0AF2               	incf	??_TMR0_ISR+1,f
 18106  0075  0020               	movlb	0	; select bank0
 18107  0076  086B               	movf	_DimmerLights11,w
 18108  0077  3E04               	addlw	4
 18109  0078  0086               	movwf	6
 18110  0079  3001               	movlw	1	; select bank2/3
 18111  007A  0087               	movwf	7
 18112  007B  0801               	movf	1,w
 18113  007C  0771               	addwf	??_TMR0_ISR,w
 18114  007D  00F3               	movwf	??_TMR0_ISR+2
 18115  007E  0872               	movf	??_TMR0_ISR+1,w
 18116  007F  1803               	skipnc
 18117  0080  0A72               	incf	??_TMR0_ISR+1,w
 18118  0081  00F4               	movwf	??_TMR0_ISR+3
 18119  0082  086B               	movf	_DimmerLights11,w
 18120  0083  3E03               	addlw	3
 18121  0084  0086               	movwf	6
 18122  0085  3001               	movlw	1	; select bank2/3
 18123  0086  0087               	movwf	7
 18124  0087  0874               	movf	??_TMR0_ISR+3,w
 18125  0088  3A80               	xorlw	128
 18126  0089  3C80               	sublw	128
 18127  008A  1D03               	skipz
 18128  008B  288E               	goto	u675_25
 18129  008C  0873               	movf	??_TMR0_ISR+2,w
 18130  008D  0201               	subwf	1,w
 18131  008E                     u675_25:	
 18132  008E  1C03               	skipc
 18133  008F  29DD               	goto	i1l7689
 18134  0090  0020               	movlb	0	; select bank0
 18135  0091  086B               	movf	_DimmerLights11,w
 18136  0092  3E03               	addlw	3
 18137  0093  0086               	movwf	6
 18138  0094  3001               	movlw	1	; select bank2/3
 18139  0095  0087               	movwf	7
 18140  0096  0181               	clrf	1
 18141  0097  086B               	movf	_DimmerLights11,w
 18142  0098  0086               	movwf	6
 18143  0099  3001               	movlw	1	; select bank2/3
 18144  009A  0087               	movwf	7
 18145  009B  1001               	bcf	1,0
 18146  009C  086B               	movf	_DimmerLights11,w
 18147  009D  3E07               	addlw	7
 18148  009E  0086               	movwf	6
 18149  009F  3001               	movlw	1	; select bank2/3
 18150  00A0  0087               	movwf	7
 18151  00A1  1401               	bsf	1,0
 18152  00A2  086B               	movf	_DimmerLights11,w
 18153  00A3  0086               	movwf	6
 18154  00A4  3001               	movlw	1	; select bank2/3
 18155  00A5  0087               	movwf	7
 18156  00A6  1F01               	btfss	1,6
 18157  00A7  29DD               	goto	i1l7689
 18158  00A8  178C               	bsf	12,7	;volatile
 18159  00A9  29DD               	goto	i1l7689
 18160  00AA                     i1l7625:	
 18161  00AA  086B               	movf	_DimmerLights11,w
 18162  00AB  3E07               	addlw	7
 18163  00AC  0086               	movwf	6
 18164  00AD  3001               	movlw	1	; select bank2/3
 18165  00AE  0087               	movwf	7
 18166  00AF  1C01               	btfss	1,0
 18167  00B0  29A9               	goto	i1l7681
 18168  00B1  086B               	movf	_DimmerLights11,w
 18169  00B2  3E07               	addlw	7
 18170  00B3  0086               	movwf	6
 18171  00B4  3001               	movlw	1	; select bank2/3
 18172  00B5  0087               	movwf	7
 18173  00B6  1001               	bcf	1,0
 18174  00B7  086B               	movf	_DimmerLights11,w
 18175  00B8  0086               	movwf	6
 18176  00B9  3001               	movlw	1	; select bank2/3
 18177  00BA  0087               	movwf	7
 18178  00BB  1C81               	btfss	1,1
 18179  00BC  29A9               	goto	i1l7681
 18180  00BD  3001               	movlw	1
 18181  00BE  00F1               	movwf	??_TMR0_ISR
 18182  00BF  0A6B               	incf	_DimmerLights11,w
 18183  00C0  0086               	movwf	6
 18184  00C1  3001               	movlw	1	; select bank2/3
 18185  00C2  0087               	movwf	7
 18186  00C3  0871               	movf	??_TMR0_ISR,w
 18187  00C4  0781               	addwf	1,f
 18188  00C5  0A6B               	incf	_DimmerLights11,w
 18189  00C6  0086               	movwf	6
 18190  00C7  3001               	movlw	1	; select bank2/3
 18191  00C8  0087               	movwf	7
 18192  00C9  086B               	movf	_DimmerLights11,w
 18193  00CA  3E02               	addlw	2
 18194  00CB  0084               	movwf	4
 18195  00CC  3001               	movlw	1	; select bank2/3
 18196  00CD  0085               	movwf	5
 18197  00CE  0800               	movf	0,w
 18198  00CF  0201               	subwf	1,w
 18199  00D0  1C03               	skipc
 18200  00D1  29A9               	goto	i1l7681
 18201  00D2  0A6B               	incf	_DimmerLights11,w
 18202  00D3  0086               	movwf	6
 18203  00D4  3001               	movlw	1	; select bank2/3
 18204  00D5  0087               	movwf	7
 18205  00D6  0181               	clrf	1
 18206  00D7  086B               	movf	_DimmerLights11,w
 18207  00D8  0086               	movwf	6
 18208  00D9  3001               	movlw	1	; select bank2/3
 18209  00DA  0087               	movwf	7
 18210  00DB  1D81               	btfss	1,3
 18211  00DC  2913               	goto	i1l7651
 18212  00DD  086B               	movf	_DimmerLights11,w
 18213  00DE  0086               	movwf	6
 18214  00DF  3001               	movlw	1	; select bank2/3
 18215  00E0  0087               	movwf	7
 18216  00E1  1A01               	btfsc	1,4
 18217  00E2  28FA               	goto	i1l7645
 18218  00E3  086B               	movf	_DimmerLights11,w
 18219  00E4  3E04               	addlw	4
 18220  00E5  0086               	movwf	6
 18221  00E6  3001               	movlw	1	; select bank2/3
 18222  00E7  0087               	movwf	7
 18223  00E8  3044               	movlw	68
 18224  00E9  0201               	subwf	1,w
 18225  00EA  1C03               	skipc
 18226  00EB  28F4               	goto	i1l7643
 18227  00EC  086B               	movf	_DimmerLights11,w
 18228  00ED  3E04               	addlw	4
 18229  00EE  0086               	movwf	6
 18230  00EF  3001               	movlw	1	; select bank2/3
 18231  00F0  0087               	movwf	7
 18232  00F1  3001               	movlw	1
 18233  00F2  0281               	subwf	1,f
 18234  00F3  29A9               	goto	i1l7681
 18235  00F4                     i1l7643:	
 18236  00F4  086B               	movf	_DimmerLights11,w
 18237  00F5  0086               	movwf	6
 18238  00F6  3001               	movlw	1	; select bank2/3
 18239  00F7  0087               	movwf	7
 18240  00F8  1601               	bsf	1,4
 18241  00F9  29A9               	goto	i1l7681
 18242  00FA                     i1l7645:	
 18243  00FA  086B               	movf	_DimmerLights11,w
 18244  00FB  3E04               	addlw	4
 18245  00FC  0086               	movwf	6
 18246  00FD  3001               	movlw	1	; select bank2/3
 18247  00FE  0087               	movwf	7
 18248  00FF  3078               	movlw	120
 18249  0100  0201               	subwf	1,w
 18250  0101  1803               	skipnc
 18251  0102  290D               	goto	i1l7649
 18252  0103  3001               	movlw	1
 18253  0104  00F1               	movwf	??_TMR0_ISR
 18254  0105  086B               	movf	_DimmerLights11,w
 18255  0106  3E04               	addlw	4
 18256  0107  0086               	movwf	6
 18257  0108  3001               	movlw	1	; select bank2/3
 18258  0109  0087               	movwf	7
 18259  010A  0871               	movf	??_TMR0_ISR,w
 18260  010B  0781               	addwf	1,f
 18261  010C  29A9               	goto	i1l7681
 18262  010D                     i1l7649:	
 18263  010D  086B               	movf	_DimmerLights11,w
 18264  010E  0086               	movwf	6
 18265  010F  3001               	movlw	1	; select bank2/3
 18266  0110  0087               	movwf	7
 18267  0111  1201               	bcf	1,4
 18268  0112  29A9               	goto	i1l7681
 18269  0113                     i1l7651:	
 18270  0113  086B               	movf	_DimmerLights11,w
 18271  0114  0086               	movwf	6
 18272  0115  3001               	movlw	1	; select bank2/3
 18273  0116  0087               	movwf	7
 18274  0117  1D01               	btfss	1,2
 18275  0118  295A               	goto	i1l7665
 18276  0119  086B               	movf	_DimmerLights11,w
 18277  011A  3E05               	addlw	5
 18278  011B  0086               	movwf	6
 18279  011C  3001               	movlw	1	; select bank2/3
 18280  011D  0087               	movwf	7
 18281  011E  086B               	movf	_DimmerLights11,w
 18282  011F  3E04               	addlw	4
 18283  0120  0084               	movwf	4
 18284  0121  3001               	movlw	1	; select bank2/3
 18285  0122  0085               	movwf	5
 18286  0123  0800               	movf	0,w
 18287  0124  0201               	subwf	1,w
 18288  0125  1803               	skipnc
 18289  0126  292F               	goto	i1l7657
 18290  0127  086B               	movf	_DimmerLights11,w
 18291  0128  3E04               	addlw	4
 18292  0129  0086               	movwf	6
 18293  012A  3001               	movlw	1	; select bank2/3
 18294  012B  0087               	movwf	7
 18295  012C  3001               	movlw	1
 18296  012D  0281               	subwf	1,f
 18297  012E  2946               	goto	i1l7661
 18298  012F                     i1l7657:	
 18299  012F  086B               	movf	_DimmerLights11,w
 18300  0130  3E04               	addlw	4
 18301  0131  0086               	movwf	6
 18302  0132  3001               	movlw	1	; select bank2/3
 18303  0133  0087               	movwf	7
 18304  0134  086B               	movf	_DimmerLights11,w
 18305  0135  3E05               	addlw	5
 18306  0136  0084               	movwf	4
 18307  0137  3001               	movlw	1	; select bank2/3
 18308  0138  0085               	movwf	5
 18309  0139  0800               	movf	0,w
 18310  013A  0201               	subwf	1,w
 18311  013B  1803               	skipnc
 18312  013C  2946               	goto	i1l7661
 18313  013D  3001               	movlw	1
 18314  013E  00F1               	movwf	??_TMR0_ISR
 18315  013F  086B               	movf	_DimmerLights11,w
 18316  0140  3E04               	addlw	4
 18317  0141  0086               	movwf	6
 18318  0142  3001               	movlw	1	; select bank2/3
 18319  0143  0087               	movwf	7
 18320  0144  0871               	movf	??_TMR0_ISR,w
 18321  0145  0781               	addwf	1,f
 18322  0146                     i1l7661:	
 18323  0146  086B               	movf	_DimmerLights11,w
 18324  0147  3E05               	addlw	5
 18325  0148  0086               	movwf	6
 18326  0149  3001               	movlw	1	; select bank2/3
 18327  014A  0087               	movwf	7
 18328  014B  086B               	movf	_DimmerLights11,w
 18329  014C  3E04               	addlw	4
 18330  014D  0084               	movwf	4
 18331  014E  3001               	movlw	1	; select bank2/3
 18332  014F  0085               	movwf	5
 18333  0150  0800               	movf	0,w
 18334  0151  0601               	xorwf	1,w
 18335  0152  1D03               	skipz
 18336  0153  29A9               	goto	i1l7681
 18337  0154  086B               	movf	_DimmerLights11,w
 18338  0155  0086               	movwf	6
 18339  0156  3001               	movlw	1	; select bank2/3
 18340  0157  0087               	movwf	7
 18341  0158  1101               	bcf	1,2
 18342  0159  2975               	goto	i1l7671
 18343  015A                     i1l7665:	
 18344  015A  086B               	movf	_DimmerLights11,w
 18345  015B  0086               	movwf	6
 18346  015C  3001               	movlw	1	; select bank2/3
 18347  015D  0087               	movwf	7
 18348  015E  1E81               	btfss	1,5
 18349  015F  297B               	goto	i1l7673
 18350  0160  086B               	movf	_DimmerLights11,w
 18351  0161  3E04               	addlw	4
 18352  0162  0086               	movwf	6
 18353  0163  3001               	movlw	1	; select bank2/3
 18354  0164  0087               	movwf	7
 18355  0165  3001               	movlw	1
 18356  0166  0281               	subwf	1,f
 18357  0167  086B               	movf	_DimmerLights11,w
 18358  0168  3E05               	addlw	5
 18359  0169  0086               	movwf	6
 18360  016A  3001               	movlw	1	; select bank2/3
 18361  016B  0087               	movwf	7
 18362  016C  086B               	movf	_DimmerLights11,w
 18363  016D  3E04               	addlw	4
 18364  016E  0084               	movwf	4
 18365  016F  3001               	movlw	1	; select bank2/3
 18366  0170  0085               	movwf	5
 18367  0171  0800               	movf	0,w
 18368  0172  0201               	subwf	1,w
 18369  0173  1C03               	skipc
 18370  0174  29A9               	goto	i1l7681
 18371  0175                     i1l7671:	
 18372  0175  086B               	movf	_DimmerLights11,w
 18373  0176  0086               	movwf	6
 18374  0177  3001               	movlw	1	; select bank2/3
 18375  0178  0087               	movwf	7
 18376  0179  1081               	bcf	1,1
 18377  017A  29A9               	goto	i1l7681
 18378  017B                     i1l7673:	
 18379  017B  3001               	movlw	1
 18380  017C  00F1               	movwf	??_TMR0_ISR
 18381  017D  086B               	movf	_DimmerLights11,w
 18382  017E  3E04               	addlw	4
 18383  017F  0086               	movwf	6
 18384  0180  3001               	movlw	1	; select bank2/3
 18385  0181  0087               	movwf	7
 18386  0182  0871               	movf	??_TMR0_ISR,w
 18387  0183  0781               	addwf	1,f
 18388  0184  086B               	movf	_DimmerLights11,w
 18389  0185  3E04               	addlw	4
 18390  0186  0086               	movwf	6
 18391  0187  3001               	movlw	1	; select bank2/3
 18392  0188  0087               	movwf	7
 18393  0189  086B               	movf	_DimmerLights11,w
 18394  018A  3E06               	addlw	6
 18395  018B  0084               	movwf	4
 18396  018C  3001               	movlw	1	; select bank2/3
 18397  018D  0085               	movwf	5
 18398  018E  0800               	movf	0,w
 18399  018F  0201               	subwf	1,w
 18400  0190  1C03               	skipc
 18401  0191  29A9               	goto	i1l7681
 18402  0192  086B               	movf	_DimmerLights11,w
 18403  0193  0086               	movwf	6
 18404  0194  3001               	movlw	1	; select bank2/3
 18405  0195  0087               	movwf	7
 18406  0196  1081               	bcf	1,1
 18407  0197  086B               	movf	_DimmerLights11,w
 18408  0198  0086               	movwf	6
 18409  0199  3001               	movlw	1	; select bank2/3
 18410  019A  0087               	movwf	7
 18411  019B  1301               	bcf	1,6
 18412  019C  086B               	movf	_DimmerLights11,w
 18413  019D  3E0C               	addlw	12
 18414  019E  0086               	movwf	6
 18415  019F  3001               	movlw	1	; select bank2/3
 18416  01A0  0087               	movwf	7
 18417  01A1  1401               	bsf	1,0
 18418  01A2  0021               	movlb	1	; select bank1
 18419  01A3  0838               	movf	_Dimmer^(0+128),w
 18420  01A4  0086               	movwf	6
 18421  01A5  0187               	clrf	7
 18422  01A6  1401               	bsf	1,0
 18423  01A7  0020               	movlb	0	; select bank0
 18424  01A8  118C               	bcf	12,3	;volatile
 18425  01A9                     i1l7681:	
 18426  01A9  1F8C               	btfss	12,7	;volatile
 18427  01AA  29DD               	goto	i1l7689
 18428  01AB  3001               	movlw	1
 18429  01AC  00F1               	movwf	??_TMR0_ISR
 18430  01AD  086B               	movf	_DimmerLights11,w
 18431  01AE  3E08               	addlw	8
 18432  01AF  0086               	movwf	6
 18433  01B0  3001               	movlw	1	; select bank2/3
 18434  01B1  0087               	movwf	7
 18435  01B2  0871               	movf	??_TMR0_ISR,w
 18436  01B3  0781               	addwf	1,f
 18437  01B4  086B               	movf	_DimmerLights11,w
 18438  01B5  3E04               	addlw	4
 18439  01B6  0086               	movwf	6
 18440  01B7  3001               	movlw	1	; select bank2/3
 18441  01B8  0087               	movwf	7
 18442  01B9  0801               	movf	1,w
 18443  01BA  00F1               	movwf	??_TMR0_ISR
 18444  01BB  01F2               	clrf	??_TMR0_ISR+1
 18445  01BC  09F1               	comf	??_TMR0_ISR,f
 18446  01BD  09F2               	comf	??_TMR0_ISR+1,f
 18447  01BE  0AF1               	incf	??_TMR0_ISR,f
 18448  01BF  1903               	skipnz
 18449  01C0  0AF2               	incf	??_TMR0_ISR+1,f
 18450  01C1  0871               	movf	??_TMR0_ISR,w
 18451  01C2  3E78               	addlw	120
 18452  01C3  00F3               	movwf	??_TMR0_ISR+2
 18453  01C4  3000               	movlw	0
 18454  01C5  3D72               	addwfc	??_TMR0_ISR+1,w
 18455  01C6  00F4               	movwf	??_TMR0_ISR+3
 18456  01C7  086B               	movf	_DimmerLights11,w
 18457  01C8  3E08               	addlw	8
 18458  01C9  0086               	movwf	6
 18459  01CA  3001               	movlw	1	; select bank2/3
 18460  01CB  0087               	movwf	7
 18461  01CC  0874               	movf	??_TMR0_ISR+3,w
 18462  01CD  3A80               	xorlw	128
 18463  01CE  3C80               	sublw	128
 18464  01CF  1D03               	skipz
 18465  01D0  29D3               	goto	u692_25
 18466  01D1  0873               	movf	??_TMR0_ISR+2,w
 18467  01D2  0201               	subwf	1,w
 18468  01D3                     u692_25:	
 18469  01D3  1C03               	skipc
 18470  01D4  29DD               	goto	i1l7689
 18471  01D5  0020               	movlb	0	; select bank0
 18472  01D6  086B               	movf	_DimmerLights11,w
 18473  01D7  3E08               	addlw	8
 18474  01D8  0086               	movwf	6
 18475  01D9  3001               	movlw	1	; select bank2/3
 18476  01DA  0087               	movwf	7
 18477  01DB  0181               	clrf	1
 18478  01DC  138C               	bcf	12,7	;volatile
 18479  01DD                     i1l7689:	
 18480                           
 18481                           ;MCU_B1.c: 137: if(DimmerLights22->GO) { DimmerLights22->Count++; if(DimmerLights22->Cou
      +                          nt >= (DimmerLights22->DimmingValue-Dimmer->Correction)) { DimmerLights22->Count=0; Dimm
      +                          erLights22->GO=0; DimmerLights22->Flag=1; if(DimmerLights22->StatusFlag) { RB4=1; } } } 
      +                          el
 18482  01DD  0020               	movlb	0	; select bank0
 18483  01DE  086C               	movf	_DimmerLights22,w
 18484  01DF  0086               	movwf	6
 18485  01E0  3001               	movlw	1	; select bank2/3
 18486  01E1  0087               	movwf	7
 18487  01E2  1C01               	btfss	1,0
 18488  01E3  2A2F               	goto	i1l7703
 18489  01E4  3001               	movlw	1
 18490  01E5  00F1               	movwf	??_TMR0_ISR
 18491  01E6  086C               	movf	_DimmerLights22,w
 18492  01E7  3E03               	addlw	3
 18493  01E8  0086               	movwf	6
 18494  01E9  3001               	movlw	1	; select bank2/3
 18495  01EA  0087               	movwf	7
 18496  01EB  0871               	movf	??_TMR0_ISR,w
 18497  01EC  0781               	addwf	1,f
 18498  01ED  0021               	movlb	1	; select bank1
 18499  01EE  0838               	movf	_Dimmer^(0+128),w
 18500  01EF  3E02               	addlw	2
 18501  01F0  0086               	movwf	6
 18502  01F1  0187               	clrf	7
 18503  01F2  0801               	movf	1,w
 18504  01F3  00F1               	movwf	??_TMR0_ISR
 18505  01F4  01F2               	clrf	??_TMR0_ISR+1
 18506  01F5  09F1               	comf	??_TMR0_ISR,f
 18507  01F6  09F2               	comf	??_TMR0_ISR+1,f
 18508  01F7  0AF1               	incf	??_TMR0_ISR,f
 18509  01F8  1903               	skipnz
 18510  01F9  0AF2               	incf	??_TMR0_ISR+1,f
 18511  01FA  0020               	movlb	0	; select bank0
 18512  01FB  086C               	movf	_DimmerLights22,w
 18513  01FC  3E04               	addlw	4
 18514  01FD  0086               	movwf	6
 18515  01FE  3001               	movlw	1	; select bank2/3
 18516  01FF  0087               	movwf	7
 18517  0200  0801               	movf	1,w
 18518  0201  0771               	addwf	??_TMR0_ISR,w
 18519  0202  00F3               	movwf	??_TMR0_ISR+2
 18520  0203  0872               	movf	??_TMR0_ISR+1,w
 18521  0204  1803               	skipnc
 18522  0205  0A72               	incf	??_TMR0_ISR+1,w
 18523  0206  00F4               	movwf	??_TMR0_ISR+3
 18524  0207  086C               	movf	_DimmerLights22,w
 18525  0208  3E03               	addlw	3
 18526  0209  0086               	movwf	6
 18527  020A  3001               	movlw	1	; select bank2/3
 18528  020B  0087               	movwf	7
 18529  020C  0874               	movf	??_TMR0_ISR+3,w
 18530  020D  3A80               	xorlw	128
 18531  020E  3C80               	sublw	128
 18532  020F  1D03               	skipz
 18533  0210  2A13               	goto	u694_25
 18534  0211  0873               	movf	??_TMR0_ISR+2,w
 18535  0212  0201               	subwf	1,w
 18536  0213                     u694_25:	
 18537  0213  1C03               	skipc
 18538  0214  2B62               	goto	i1l7767
 18539  0215  0020               	movlb	0	; select bank0
 18540  0216  086C               	movf	_DimmerLights22,w
 18541  0217  3E03               	addlw	3
 18542  0218  0086               	movwf	6
 18543  0219  3001               	movlw	1	; select bank2/3
 18544  021A  0087               	movwf	7
 18545  021B  0181               	clrf	1
 18546  021C  086C               	movf	_DimmerLights22,w
 18547  021D  0086               	movwf	6
 18548  021E  3001               	movlw	1	; select bank2/3
 18549  021F  0087               	movwf	7
 18550  0220  1001               	bcf	1,0
 18551  0221  086C               	movf	_DimmerLights22,w
 18552  0222  3E07               	addlw	7
 18553  0223  0086               	movwf	6
 18554  0224  3001               	movlw	1	; select bank2/3
 18555  0225  0087               	movwf	7
 18556  0226  1401               	bsf	1,0
 18557  0227  086C               	movf	_DimmerLights22,w
 18558  0228  0086               	movwf	6
 18559  0229  3001               	movlw	1	; select bank2/3
 18560  022A  0087               	movwf	7
 18561  022B  1F01               	btfss	1,6
 18562  022C  2B62               	goto	i1l7767
 18563  022D  160D               	bsf	13,4	;volatile
 18564  022E  2B62               	goto	i1l7767
 18565  022F                     i1l7703:	
 18566  022F  086C               	movf	_DimmerLights22,w
 18567  0230  3E07               	addlw	7
 18568  0231  0086               	movwf	6
 18569  0232  3001               	movlw	1	; select bank2/3
 18570  0233  0087               	movwf	7
 18571  0234  1C01               	btfss	1,0
 18572  0235  2B2E               	goto	i1l7759
 18573  0236  086C               	movf	_DimmerLights22,w
 18574  0237  3E07               	addlw	7
 18575  0238  0086               	movwf	6
 18576  0239  3001               	movlw	1	; select bank2/3
 18577  023A  0087               	movwf	7
 18578  023B  1001               	bcf	1,0
 18579  023C  086C               	movf	_DimmerLights22,w
 18580  023D  0086               	movwf	6
 18581  023E  3001               	movlw	1	; select bank2/3
 18582  023F  0087               	movwf	7
 18583  0240  1C81               	btfss	1,1
 18584  0241  2B2E               	goto	i1l7759
 18585  0242  3001               	movlw	1
 18586  0243  00F1               	movwf	??_TMR0_ISR
 18587  0244  0A6C               	incf	_DimmerLights22,w
 18588  0245  0086               	movwf	6
 18589  0246  3001               	movlw	1	; select bank2/3
 18590  0247  0087               	movwf	7
 18591  0248  0871               	movf	??_TMR0_ISR,w
 18592  0249  0781               	addwf	1,f
 18593  024A  0A6C               	incf	_DimmerLights22,w
 18594  024B  0086               	movwf	6
 18595  024C  3001               	movlw	1	; select bank2/3
 18596  024D  0087               	movwf	7
 18597  024E  086C               	movf	_DimmerLights22,w
 18598  024F  3E02               	addlw	2
 18599  0250  0084               	movwf	4
 18600  0251  3001               	movlw	1	; select bank2/3
 18601  0252  0085               	movwf	5
 18602  0253  0800               	movf	0,w
 18603  0254  0201               	subwf	1,w
 18604  0255  1C03               	skipc
 18605  0256  2B2E               	goto	i1l7759
 18606  0257  0A6C               	incf	_DimmerLights22,w
 18607  0258  0086               	movwf	6
 18608  0259  3001               	movlw	1	; select bank2/3
 18609  025A  0087               	movwf	7
 18610  025B  0181               	clrf	1
 18611  025C  086C               	movf	_DimmerLights22,w
 18612  025D  0086               	movwf	6
 18613  025E  3001               	movlw	1	; select bank2/3
 18614  025F  0087               	movwf	7
 18615  0260  1D81               	btfss	1,3
 18616  0261  2A98               	goto	i1l7729
 18617  0262  086C               	movf	_DimmerLights22,w
 18618  0263  0086               	movwf	6
 18619  0264  3001               	movlw	1	; select bank2/3
 18620  0265  0087               	movwf	7
 18621  0266  1A01               	btfsc	1,4
 18622  0267  2A7F               	goto	i1l7723
 18623  0268  086C               	movf	_DimmerLights22,w
 18624  0269  3E04               	addlw	4
 18625  026A  0086               	movwf	6
 18626  026B  3001               	movlw	1	; select bank2/3
 18627  026C  0087               	movwf	7
 18628  026D  3044               	movlw	68
 18629  026E  0201               	subwf	1,w
 18630  026F  1C03               	skipc
 18631  0270  2A79               	goto	i1l7721
 18632  0271  086C               	movf	_DimmerLights22,w
 18633  0272  3E04               	addlw	4
 18634  0273  0086               	movwf	6
 18635  0274  3001               	movlw	1	; select bank2/3
 18636  0275  0087               	movwf	7
 18637  0276  3001               	movlw	1
 18638  0277  0281               	subwf	1,f
 18639  0278  2B2E               	goto	i1l7759
 18640  0279                     i1l7721:	
 18641  0279  086C               	movf	_DimmerLights22,w
 18642  027A  0086               	movwf	6
 18643  027B  3001               	movlw	1	; select bank2/3
 18644  027C  0087               	movwf	7
 18645  027D  1601               	bsf	1,4
 18646  027E  2B2E               	goto	i1l7759
 18647  027F                     i1l7723:	
 18648  027F  086C               	movf	_DimmerLights22,w
 18649  0280  3E04               	addlw	4
 18650  0281  0086               	movwf	6
 18651  0282  3001               	movlw	1	; select bank2/3
 18652  0283  0087               	movwf	7
 18653  0284  3078               	movlw	120
 18654  0285  0201               	subwf	1,w
 18655  0286  1803               	skipnc
 18656  0287  2A92               	goto	i1l7727
 18657  0288  3001               	movlw	1
 18658  0289  00F1               	movwf	??_TMR0_ISR
 18659  028A  086C               	movf	_DimmerLights22,w
 18660  028B  3E04               	addlw	4
 18661  028C  0086               	movwf	6
 18662  028D  3001               	movlw	1	; select bank2/3
 18663  028E  0087               	movwf	7
 18664  028F  0871               	movf	??_TMR0_ISR,w
 18665  0290  0781               	addwf	1,f
 18666  0291  2B2E               	goto	i1l7759
 18667  0292                     i1l7727:	
 18668  0292  086C               	movf	_DimmerLights22,w
 18669  0293  0086               	movwf	6
 18670  0294  3001               	movlw	1	; select bank2/3
 18671  0295  0087               	movwf	7
 18672  0296  1201               	bcf	1,4
 18673  0297  2B2E               	goto	i1l7759
 18674  0298                     i1l7729:	
 18675  0298  086C               	movf	_DimmerLights22,w
 18676  0299  0086               	movwf	6
 18677  029A  3001               	movlw	1	; select bank2/3
 18678  029B  0087               	movwf	7
 18679  029C  1D01               	btfss	1,2
 18680  029D  2ADF               	goto	i1l7743
 18681  029E  086C               	movf	_DimmerLights22,w
 18682  029F  3E05               	addlw	5
 18683  02A0  0086               	movwf	6
 18684  02A1  3001               	movlw	1	; select bank2/3
 18685  02A2  0087               	movwf	7
 18686  02A3  086C               	movf	_DimmerLights22,w
 18687  02A4  3E04               	addlw	4
 18688  02A5  0084               	movwf	4
 18689  02A6  3001               	movlw	1	; select bank2/3
 18690  02A7  0085               	movwf	5
 18691  02A8  0800               	movf	0,w
 18692  02A9  0201               	subwf	1,w
 18693  02AA  1803               	skipnc
 18694  02AB  2AB4               	goto	i1l7735
 18695  02AC  086C               	movf	_DimmerLights22,w
 18696  02AD  3E04               	addlw	4
 18697  02AE  0086               	movwf	6
 18698  02AF  3001               	movlw	1	; select bank2/3
 18699  02B0  0087               	movwf	7
 18700  02B1  3001               	movlw	1
 18701  02B2  0281               	subwf	1,f
 18702  02B3  2ACB               	goto	i1l7739
 18703  02B4                     i1l7735:	
 18704  02B4  086C               	movf	_DimmerLights22,w
 18705  02B5  3E04               	addlw	4
 18706  02B6  0086               	movwf	6
 18707  02B7  3001               	movlw	1	; select bank2/3
 18708  02B8  0087               	movwf	7
 18709  02B9  086C               	movf	_DimmerLights22,w
 18710  02BA  3E05               	addlw	5
 18711  02BB  0084               	movwf	4
 18712  02BC  3001               	movlw	1	; select bank2/3
 18713  02BD  0085               	movwf	5
 18714  02BE  0800               	movf	0,w
 18715  02BF  0201               	subwf	1,w
 18716  02C0  1803               	skipnc
 18717  02C1  2ACB               	goto	i1l7739
 18718  02C2  3001               	movlw	1
 18719  02C3  00F1               	movwf	??_TMR0_ISR
 18720  02C4  086C               	movf	_DimmerLights22,w
 18721  02C5  3E04               	addlw	4
 18722  02C6  0086               	movwf	6
 18723  02C7  3001               	movlw	1	; select bank2/3
 18724  02C8  0087               	movwf	7
 18725  02C9  0871               	movf	??_TMR0_ISR,w
 18726  02CA  0781               	addwf	1,f
 18727  02CB                     i1l7739:	
 18728  02CB  086C               	movf	_DimmerLights22,w
 18729  02CC  3E05               	addlw	5
 18730  02CD  0086               	movwf	6
 18731  02CE  3001               	movlw	1	; select bank2/3
 18732  02CF  0087               	movwf	7
 18733  02D0  086C               	movf	_DimmerLights22,w
 18734  02D1  3E04               	addlw	4
 18735  02D2  0084               	movwf	4
 18736  02D3  3001               	movlw	1	; select bank2/3
 18737  02D4  0085               	movwf	5
 18738  02D5  0800               	movf	0,w
 18739  02D6  0601               	xorwf	1,w
 18740  02D7  1D03               	skipz
 18741  02D8  2B2E               	goto	i1l7759
 18742  02D9  086C               	movf	_DimmerLights22,w
 18743  02DA  0086               	movwf	6
 18744  02DB  3001               	movlw	1	; select bank2/3
 18745  02DC  0087               	movwf	7
 18746  02DD  1101               	bcf	1,2
 18747  02DE  2AFA               	goto	i1l7749
 18748  02DF                     i1l7743:	
 18749  02DF  086C               	movf	_DimmerLights22,w
 18750  02E0  0086               	movwf	6
 18751  02E1  3001               	movlw	1	; select bank2/3
 18752  02E2  0087               	movwf	7
 18753  02E3  1E81               	btfss	1,5
 18754  02E4  2B00               	goto	i1l7751
 18755  02E5  086C               	movf	_DimmerLights22,w
 18756  02E6  3E04               	addlw	4
 18757  02E7  0086               	movwf	6
 18758  02E8  3001               	movlw	1	; select bank2/3
 18759  02E9  0087               	movwf	7
 18760  02EA  3001               	movlw	1
 18761  02EB  0281               	subwf	1,f
 18762  02EC  086C               	movf	_DimmerLights22,w
 18763  02ED  3E05               	addlw	5
 18764  02EE  0086               	movwf	6
 18765  02EF  3001               	movlw	1	; select bank2/3
 18766  02F0  0087               	movwf	7
 18767  02F1  086C               	movf	_DimmerLights22,w
 18768  02F2  3E04               	addlw	4
 18769  02F3  0084               	movwf	4
 18770  02F4  3001               	movlw	1	; select bank2/3
 18771  02F5  0085               	movwf	5
 18772  02F6  0800               	movf	0,w
 18773  02F7  0201               	subwf	1,w
 18774  02F8  1C03               	skipc
 18775  02F9  2B2E               	goto	i1l7759
 18776  02FA                     i1l7749:	
 18777  02FA  086C               	movf	_DimmerLights22,w
 18778  02FB  0086               	movwf	6
 18779  02FC  3001               	movlw	1	; select bank2/3
 18780  02FD  0087               	movwf	7
 18781  02FE  1081               	bcf	1,1
 18782  02FF  2B2E               	goto	i1l7759
 18783  0300                     i1l7751:	
 18784  0300  3001               	movlw	1
 18785  0301  00F1               	movwf	??_TMR0_ISR
 18786  0302  086C               	movf	_DimmerLights22,w
 18787  0303  3E04               	addlw	4
 18788  0304  0086               	movwf	6
 18789  0305  3001               	movlw	1	; select bank2/3
 18790  0306  0087               	movwf	7
 18791  0307  0871               	movf	??_TMR0_ISR,w
 18792  0308  0781               	addwf	1,f
 18793  0309  086C               	movf	_DimmerLights22,w
 18794  030A  3E04               	addlw	4
 18795  030B  0086               	movwf	6
 18796  030C  3001               	movlw	1	; select bank2/3
 18797  030D  0087               	movwf	7
 18798  030E  086C               	movf	_DimmerLights22,w
 18799  030F  3E06               	addlw	6
 18800  0310  0084               	movwf	4
 18801  0311  3001               	movlw	1	; select bank2/3
 18802  0312  0085               	movwf	5
 18803  0313  0800               	movf	0,w
 18804  0314  0201               	subwf	1,w
 18805  0315  1C03               	skipc
 18806  0316  2B2E               	goto	i1l7759
 18807  0317  086C               	movf	_DimmerLights22,w
 18808  0318  0086               	movwf	6
 18809  0319  3001               	movlw	1	; select bank2/3
 18810  031A  0087               	movwf	7
 18811  031B  1081               	bcf	1,1
 18812  031C  086C               	movf	_DimmerLights22,w
 18813  031D  0086               	movwf	6
 18814  031E  3001               	movlw	1	; select bank2/3
 18815  031F  0087               	movwf	7
 18816  0320  1301               	bcf	1,6
 18817  0321  086C               	movf	_DimmerLights22,w
 18818  0322  3E0C               	addlw	12
 18819  0323  0086               	movwf	6
 18820  0324  3001               	movlw	1	; select bank2/3
 18821  0325  0087               	movwf	7
 18822  0326  1401               	bsf	1,0
 18823  0327  0021               	movlb	1	; select bank1
 18824  0328  0838               	movf	_Dimmer^(0+128),w
 18825  0329  0086               	movwf	6
 18826  032A  0187               	clrf	7
 18827  032B  1401               	bsf	1,0
 18828  032C  0020               	movlb	0	; select bank0
 18829  032D  138E               	bcf	14,7	;volatile
 18830  032E                     i1l7759:	
 18831  032E  1E0D               	btfss	13,4	;volatile
 18832  032F  2B62               	goto	i1l7767
 18833  0330  3001               	movlw	1
 18834  0331  00F1               	movwf	??_TMR0_ISR
 18835  0332  086C               	movf	_DimmerLights22,w
 18836  0333  3E08               	addlw	8
 18837  0334  0086               	movwf	6
 18838  0335  3001               	movlw	1	; select bank2/3
 18839  0336  0087               	movwf	7
 18840  0337  0871               	movf	??_TMR0_ISR,w
 18841  0338  0781               	addwf	1,f
 18842  0339  086C               	movf	_DimmerLights22,w
 18843  033A  3E04               	addlw	4
 18844  033B  0086               	movwf	6
 18845  033C  3001               	movlw	1	; select bank2/3
 18846  033D  0087               	movwf	7
 18847  033E  0801               	movf	1,w
 18848  033F  00F1               	movwf	??_TMR0_ISR
 18849  0340  01F2               	clrf	??_TMR0_ISR+1
 18850  0341  09F1               	comf	??_TMR0_ISR,f
 18851  0342  09F2               	comf	??_TMR0_ISR+1,f
 18852  0343  0AF1               	incf	??_TMR0_ISR,f
 18853  0344  1903               	skipnz
 18854  0345  0AF2               	incf	??_TMR0_ISR+1,f
 18855  0346  0871               	movf	??_TMR0_ISR,w
 18856  0347  3E78               	addlw	120
 18857  0348  00F3               	movwf	??_TMR0_ISR+2
 18858  0349  3000               	movlw	0
 18859  034A  3D72               	addwfc	??_TMR0_ISR+1,w
 18860  034B  00F4               	movwf	??_TMR0_ISR+3
 18861  034C  086C               	movf	_DimmerLights22,w
 18862  034D  3E08               	addlw	8
 18863  034E  0086               	movwf	6
 18864  034F  3001               	movlw	1	; select bank2/3
 18865  0350  0087               	movwf	7
 18866  0351  0874               	movf	??_TMR0_ISR+3,w
 18867  0352  3A80               	xorlw	128
 18868  0353  3C80               	sublw	128
 18869  0354  1D03               	skipz
 18870  0355  2B58               	goto	u711_25
 18871  0356  0873               	movf	??_TMR0_ISR+2,w
 18872  0357  0201               	subwf	1,w
 18873  0358                     u711_25:	
 18874  0358  1C03               	skipc
 18875  0359  2B62               	goto	i1l7767
 18876  035A  0020               	movlb	0	; select bank0
 18877  035B  086C               	movf	_DimmerLights22,w
 18878  035C  3E08               	addlw	8
 18879  035D  0086               	movwf	6
 18880  035E  3001               	movlw	1	; select bank2/3
 18881  035F  0087               	movwf	7
 18882  0360  0181               	clrf	1
 18883  0361  120D               	bcf	13,4	;volatile
 18884  0362                     i1l7767:	
 18885                           
 18886                           ;MCU_B1.c: 146: Timer0->Count++;
 18887  0362  0021               	movlb	1	; select bank1
 18888  0363  0A6E               	incf	_Timer0^(0+128),w
 18889  0364  0086               	movwf	6
 18890  0365  0187               	clrf	7
 18891  0366  3001               	movlw	1
 18892  0367  0781               	addwf	1,f
 18893  0368  3141               	addfsr 1,1
 18894  0369  1803               	skipnc
 18895  036A  0A81               	incf	1,f
 18896                           
 18897                           ;MCU_B1.c: 147: if(Timer0->Count == 200)
 18898  036B  0A6E               	incf	_Timer0^(0+128),w
 18899  036C  0086               	movwf	6
 18900  036D  0187               	clrf	7
 18901  036E  3F40               	moviw [0]fsr1
 18902  036F  3AC8               	xorlw	200
 18903  0370  1D03               	skipz
 18904  0371  2B74               	goto	u712_25
 18905  0372  3F41               	moviw [1]fsr1
 18906  0373  3A00               	xorlw	0
 18907  0374                     u712_25:	
 18908  0374  1D03               	skipz
 18909  0375  2B82               	goto	i1l1646
 18910                           
 18911                           ;MCU_B1.c: 148: {
 18912                           ;MCU_B1.c: 149: Timer0->Count=0;
 18913  0376  0A6E               	incf	_Timer0^(0+128),w
 18914  0377  0086               	movwf	6
 18915  0378  0187               	clrf	7
 18916  0379  3000               	movlw	0
 18917  037A  3FC0               	movwi [0]fsr1
 18918  037B  3FC1               	movwi [1]fsr1
 18919                           
 18920                           ;MCU_B1.c: 150: TMain->T0_Timerout=1;
 18921  037C  0020               	movlb	0	; select bank0
 18922  037D  086F               	movf	_TMain,w
 18923  037E  0086               	movwf	6
 18924  037F  3001               	movlw	1	; select bank2/3
 18925  0380  0087               	movwf	7
 18926  0381  1481               	bsf	1,1
 18927  0382                     i1l1646:	
 18928                           
 18929                           ;MCU_B1.c: 151: }
 18930                           ;MCU_B1.c: 154: if(Buz->GO)
 18931  0382  0020               	movlb	0	; select bank0
 18932  0383  0868               	movf	_Buz,w
 18933  0384  0086               	movwf	6
 18934  0385  3001               	movlw	1	; select bank2/3
 18935  0386  0087               	movwf	7
 18936  0387  1C81               	btfss	1,1
 18937  0388  0008               	return
 18938                           
 18939                           ;MCU_B1.c: 155: {
 18940                           ;MCU_B1.c: 156: Buz->Time++;
 18941  0389  0A68               	incf	_Buz,w
 18942  038A  0086               	movwf	6
 18943  038B  3001               	movlw	1	; select bank2/3
 18944  038C  0087               	movwf	7
 18945  038D  3001               	movlw	1
 18946  038E  0781               	addwf	1,f
 18947  038F  3141               	addfsr 1,1
 18948  0390  1803               	skipnc
 18949  0391  0A81               	incf	1,f
 18950  0392  0008               	return
 18951  0393                     __end_of_TMR0_ISR:	
 18952                           
 18953                           	psect	text125
 18954  1D63                     __ptext125:	
 18955 ;; *************** function _IOC_ISR *****************
 18956 ;; Defined at:
 18957 ;;		line 338 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
 18958 ;; Parameters:    Size  Location     Type
 18959 ;;		None
 18960 ;; Auto vars:     Size  Location     Type
 18961 ;;		None
 18962 ;; Return value:  Size  Location     Type
 18963 ;;		None               void
 18964 ;; Registers used:
 18965 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18966 ;; Tracked objects:
 18967 ;;		On entry : 0/0
 18968 ;;		On exit  : 0/0
 18969 ;;		Unchanged: 0/0
 18970 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18973 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18974 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18975 ;;Total ram usage:        1 bytes
 18976 ;; Hardware stack levels used:    1
 18977 ;; Hardware stack levels required when called:    1
 18978 ;; This function calls:
 18979 ;;		_setDimmerReClock
 18980 ;; This function is called by:
 18981 ;;		_ISR
 18982 ;; This function uses a non-reentrant model
 18983 ;;
 18984                           
 18985                           
 18986                           ;psect for function _IOC_ISR
 18987  1D63                     _IOC_ISR:	
 18988                           
 18989                           ;MCU_B1.c: 340: if(IOCIE && IOCBF2)
 18990                           
 18991                           ;incstack = 0
 18992                           ; Regs used in _IOC_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 18993  1D63  1D8B               	btfss	11,3	;volatile
 18994  1D64  0008               	return
 18995  1D65  0027               	movlb	7	; select bank7
 18996  1D66  1D16               	btfss	22,2	;volatile
 18997  1D67  0008               	return
 18998                           
 18999                           ;MCU_B1.c: 341: {
 19000                           ;MCU_B1.c: 342: IOCBF2=0;
 19001  1D68  1116               	bcf	22,2	;volatile
 19002                           
 19003                           ;MCU_B1.c: 343: IOCIF=0;
 19004  1D69  100B               	bcf	11,0	;volatile
 19005                           
 19006                           ;MCU_B1.c: 344: if(TMain->PowerON)
 19007  1D6A  0020               	movlb	0	; select bank0
 19008  1D6B  086F               	movf	_TMain,w
 19009  1D6C  0086               	movwf	6
 19010  1D6D  3001               	movlw	1	; select bank2/3
 19011  1D6E  0087               	movwf	7
 19012  1D6F  1C01               	btfss	1,0
 19013  1D70  0008               	return
 19014                           
 19015                           ;MCU_B1.c: 345: {
 19016                           ;MCU_B1.c: 349: setDimmerReClock();
 19017  1D71  319C  2432  319D   	fcall	_setDimmerReClock
 19018                           
 19019                           ;MCU_B1.c: 350: if(RB2)
 19020  1D74  0020               	movlb	0	; select bank0
 19021  1D75  1D0D               	btfss	13,2	;volatile
 19022  1D76  2D7E               	goto	i1l7601
 19023                           
 19024                           ;MCU_B1.c: 351: {
 19025                           ;MCU_B1.c: 352: Dimmer->Correction=0;
 19026  1D77  0021               	movlb	1	; select bank1
 19027  1D78  0838               	movf	_Dimmer^(0+128),w
 19028  1D79  3E02               	addlw	2
 19029  1D7A  0086               	movwf	6
 19030  1D7B  0187               	clrf	7
 19031  1D7C  0181               	clrf	1
 19032                           
 19033                           ;MCU_B1.c: 353: }
 19034  1D7D  0008               	return
 19035  1D7E                     i1l7601:	
 19036                           
 19037                           ;MCU_B1.c: 354: else
 19038                           ;MCU_B1.c: 355: {
 19039                           ;MCU_B1.c: 356: Dimmer->Correction=8;
 19040  1D7E  3008               	movlw	8
 19041  1D7F  00F1               	movwf	??_IOC_ISR
 19042  1D80  0021               	movlb	1	; select bank1
 19043  1D81  0838               	movf	_Dimmer^(0+128),w
 19044  1D82  3E02               	addlw	2
 19045  1D83  0086               	movwf	6
 19046  1D84  0187               	clrf	7
 19047  1D85  0871               	movf	??_IOC_ISR,w
 19048  1D86  0081               	movwf	1
 19049  1D87  0008               	return
 19050  1D88                     __end_of_IOC_ISR:	
 19051                           
 19052                           	psect	text126
 19053  1C32                     __ptext126:	
 19054 ;; *************** function _setDimmerReClock *****************
 19055 ;; Defined at:
 19056 ;;		line 164 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
 19057 ;; Parameters:    Size  Location     Type
 19058 ;;		None
 19059 ;; Auto vars:     Size  Location     Type
 19060 ;;		None
 19061 ;; Return value:  Size  Location     Type
 19062 ;;		None               void
 19063 ;; Registers used:
 19064 ;;		wreg, fsr1l, fsr1h
 19065 ;; Tracked objects:
 19066 ;;		On entry : 0/0
 19067 ;;		On exit  : 0/0
 19068 ;;		Unchanged: 0/0
 19069 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19070 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19071 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19073 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19074 ;;Total ram usage:        0 bytes
 19075 ;; Hardware stack levels used:    1
 19076 ;; This function calls:
 19077 ;;		Nothing
 19078 ;; This function is called by:
 19079 ;;		_IOC_ISR
 19080 ;; This function uses a non-reentrant model
 19081 ;;
 19082                           
 19083                           
 19084                           ;psect for function _setDimmerReClock
 19085  1C32                     _setDimmerReClock:	
 19086                           
 19087                           ;MCU_B1.c: 166: TMR0=255;
 19088                           
 19089                           ;incstack = 0
 19090                           ; Regs used in _setDimmerReClock: [wregfsr1]
 19091  1C32  30FF               	movlw	255
 19092  1C33  0020               	movlb	0	; select bank0
 19093  1C34  0095               	movwf	21	;volatile
 19094                           
 19095                           ;MCU_B1.c: 171: if(!DimmerLights11->GO)
 19096  1C35  086B               	movf	_DimmerLights11,w
 19097  1C36  0086               	movwf	6
 19098  1C37  3001               	movlw	1	; select bank2/3
 19099  1C38  0087               	movwf	7
 19100  1C39  1801               	btfsc	1,0
 19101  1C3A  2C40               	goto	i1l1651
 19102                           
 19103                           ;MCU_B1.c: 172: {
 19104                           ;MCU_B1.c: 173: DimmerLights11->GO=1;
 19105  1C3B  086B               	movf	_DimmerLights11,w
 19106  1C3C  0086               	movwf	6
 19107  1C3D  3001               	movlw	1	; select bank2/3
 19108  1C3E  0087               	movwf	7
 19109  1C3F  1401               	bsf	1,0
 19110  1C40                     i1l1651:	
 19111                           
 19112                           ;MCU_B1.c: 174: }
 19113                           ;MCU_B1.c: 198: if(!DimmerLights22->GO)
 19114  1C40  086C               	movf	_DimmerLights22,w
 19115  1C41  0086               	movwf	6
 19116  1C42  3001               	movlw	1	; select bank2/3
 19117  1C43  0087               	movwf	7
 19118  1C44  1801               	btfsc	1,0
 19119  1C45  0008               	return
 19120                           
 19121                           ;MCU_B1.c: 199: {
 19122                           ;MCU_B1.c: 200: DimmerLights22->GO=1;
 19123  1C46  086C               	movf	_DimmerLights22,w
 19124  1C47  0086               	movwf	6
 19125  1C48  3001               	movlw	1	; select bank2/3
 19126  1C49  0087               	movwf	7
 19127  1C4A  1401               	bsf	1,0
 19128  1C4B  0008               	return
 19129  1C4C                     __end_of_setDimmerReClock:	
 19130                           
 19131                           	psect	text127
 19132  19D7                     __ptext127:	
 19133 ;; *************** function _INT_ISR *****************
 19134 ;; Defined at:
 19135 ;;		line 289 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
 19136 ;; Parameters:    Size  Location     Type
 19137 ;;		None
 19138 ;; Auto vars:     Size  Location     Type
 19139 ;;		None
 19140 ;; Return value:  Size  Location     Type
 19141 ;;		None               void
 19142 ;; Registers used:
 19143 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19144 ;; Tracked objects:
 19145 ;;		On entry : 0/0
 19146 ;;		On exit  : 0/0
 19147 ;;		Unchanged: 0/0
 19148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19150 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19152 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19153 ;;Total ram usage:        0 bytes
 19154 ;; Hardware stack levels used:    1
 19155 ;; Hardware stack levels required when called:    2
 19156 ;; This function calls:
 19157 ;;		_setRF_ReceiveGO
 19158 ;; This function is called by:
 19159 ;;		_ISR
 19160 ;; This function uses a non-reentrant model
 19161 ;;
 19162                           
 19163                           
 19164                           ;psect for function _INT_ISR
 19165  19D7                     _INT_ISR:	
 19166                           
 19167                           ;MCU_B1.c: 291: if(INTE && INTF)
 19168                           
 19169                           ;incstack = 0
 19170                           ; Regs used in _INT_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 19171  19D7  1E0B               	btfss	11,4	;volatile
 19172  19D8  0008               	return
 19173  19D9  1C8B               	btfss	11,1	;volatile
 19174  19DA  0008               	return
 19175                           
 19176                           ;MCU_B1.c: 292: {
 19177                           ;MCU_B1.c: 293: INTF=0;
 19178  19DB  108B               	bcf	11,1	;volatile
 19179                           
 19180                           ;MCU_B1.c: 294: INTE=0;
 19181  19DC  120B               	bcf	11,4	;volatile
 19182                           
 19183                           ;MCU_B1.c: 295: setRF_ReceiveGO(1,1);
 19184  19DD  01F3               	clrf	setRF_ReceiveGO@command
 19185  19DE  0AF3               	incf	setRF_ReceiveGO@command,f
 19186  19DF  3001               	movlw	1
 19187  19E0  3199  21CB         	fcall	_setRF_ReceiveGO
 19188  19E2  0008               	return
 19189  19E3                     __end_of_INT_ISR:	
 19190                           
 19191                           	psect	text128
 19192  19CB                     __ptext128:	
 19193 ;; *************** function _setRF_ReceiveGO *****************
 19194 ;; Defined at:
 19195 ;;		line 37 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
 19196 ;; Parameters:    Size  Location     Type
 19197 ;;  rf              1    wreg     unsigned char 
 19198 ;;  command         1    2[COMMON] unsigned char 
 19199 ;; Auto vars:     Size  Location     Type
 19200 ;;  rf              1    3[COMMON] unsigned char 
 19201 ;; Return value:  Size  Location     Type
 19202 ;;		None               void
 19203 ;; Registers used:
 19204 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19205 ;; Tracked objects:
 19206 ;;		On entry : 0/0
 19207 ;;		On exit  : 0/0
 19208 ;;		Unchanged: 0/0
 19209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19210 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19211 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19213 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19214 ;;Total ram usage:        2 bytes
 19215 ;; Hardware stack levels used:    1
 19216 ;; Hardware stack levels required when called:    1
 19217 ;; This function calls:
 19218 ;;		i1_RfPointSelect
 19219 ;; This function is called by:
 19220 ;;		_INT_ISR
 19221 ;; This function uses a non-reentrant model
 19222 ;;
 19223                           
 19224                           
 19225                           ;psect for function _setRF_ReceiveGO
 19226  19CB                     _setRF_ReceiveGO:	
 19227                           
 19228                           ;incstack = 0
 19229                           ; Regs used in _setRF_ReceiveGO: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 19230                           ;setRF_ReceiveGO@rf stored from wreg
 19231  19CB  00F4               	movwf	setRF_ReceiveGO@rf
 19232                           
 19233                           ;RF_Control_B1.c: 39: RfPointSelect(rf);
 19234  19CC  0874               	movf	setRF_ReceiveGO@rf,w
 19235  19CD  3199  217F         	fcall	i1_RfPointSelect
 19236                           
 19237                           ;RF_Control_B1.c: 40: RF->ReceiveGO=command;
 19238  19CF  0877               	movf	_RF,w
 19239  19D0  0086               	movwf	6
 19240  19D1  0187               	clrf	7
 19241  19D2  0873               	movf	setRF_ReceiveGO@command,w
 19242  19D3  1081               	bcf	1,1
 19243  19D4  1D03               	skipz
 19244  19D5  1481               	bsf	1,1
 19245  19D6  0008               	return
 19246  19D7                     __end_of_setRF_ReceiveGO:	
 19247                           
 19248                           	psect	text129
 19249  197F                     __ptext129:	
 19250 ;; *************** function i1_RfPointSelect *****************
 19251 ;; Defined at:
 19252 ;;		line 7 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
 19253 ;; Parameters:    Size  Location     Type
 19254 ;;  rf              1    wreg     unsigned char 
 19255 ;; Auto vars:     Size  Location     Type
 19256 ;;  rf              1    1[COMMON] unsigned char 
 19257 ;; Return value:  Size  Location     Type
 19258 ;;		None               void
 19259 ;; Registers used:
 19260 ;;		wreg
 19261 ;; Tracked objects:
 19262 ;;		On entry : 0/0
 19263 ;;		On exit  : 0/0
 19264 ;;		Unchanged: 0/0
 19265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19267 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19268 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19269 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19270 ;;Total ram usage:        2 bytes
 19271 ;; Hardware stack levels used:    1
 19272 ;; This function calls:
 19273 ;;		Nothing
 19274 ;; This function is called by:
 19275 ;;		_setRF_ReceiveGO
 19276 ;; This function uses a non-reentrant model
 19277 ;;
 19278                           
 19279                           
 19280                           ;psect for function i1_RfPointSelect
 19281  197F                     i1_RfPointSelect:	
 19282                           
 19283                           ;incstack = 0
 19284                           ; Regs used in i1_RfPointSelect: [wreg]
 19285                           ;i1RfPointSelect@rf stored from wreg
 19286  197F  00F2               	movwf	i1RfPointSelect@rf
 19287                           
 19288                           ;RF_Control_B1.c: 10: if(rf == 1)
 19289  1980  0872               	movf	i1RfPointSelect@rf,w
 19290  1981  3A01               	xorlw	1
 19291  1982  1D03               	skipz
 19292  1983  0008               	return
 19293                           
 19294                           ;RF_Control_B1.c: 11: {
 19295                           ;RF_Control_B1.c: 12: RF=&RF1;
 19296  1984  30E5               	movlw	_RF1& (0+255)
 19297  1985  00F1               	movwf	??i1_RfPointSelect
 19298  1986  0871               	movf	??i1_RfPointSelect,w
 19299  1987  00F7               	movwf	_RF
 19300  1988  0008               	return
 19301  1989                     __end_ofi1_RfPointSelect:	
 19302  007E                     btemp	set	126	;btemp
 19303  007E                     pic14e$flags	set	126
 19304  007E                     wtemp	set	126
 19305  007E                     wtemp0	set	126
 19306  0080                     wtemp1	set	128
 19307  0082                     wtemp2	set	130
 19308  0084                     wtemp3	set	132
 19309  0086                     wtemp4	set	134
 19310  0088                     wtemp5	set	136
 19311  007F                     wtemp6	set	127
 19312  007E                     ttemp	set	126
 19313  007E                     ttemp0	set	126
 19314  0081                     ttemp1	set	129
 19315  0084                     ttemp2	set	132
 19316  0087                     ttemp3	set	135
 19317  007F                     ttemp4	set	127
 19318  007E                     ltemp	set	126
 19319  007E                     ltemp0	set	126
 19320  0082                     ltemp1	set	130
 19321  0086                     ltemp2	set	134
 19322  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    102
    Data        32
    BSS         216
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      10
    BANK0            80     72      80
    BANK1            80      4      79
    BANK2            80      0      80
    BANK3            80      0      48
    BANK4            80      0      37
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    DimmerLightsIntr	PTR struct DimmerLights size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    Sw	PTR struct Switch size(1) Largest target is 9
		 -> NULL(NULL[0]), Sw2(BANK2[9]), Sw1(BANK2[9]), 

    RFSW	PTR struct RFSW size(1) Largest target is 1
		 -> NULL(NULL[0]), RFSW2(BANK1[1]), RFSW1(BANK1[1]), 

    RF	PTR struct RF size(1) Largest target is 3
		 -> NULL(NULL[0]), RF1(BANK1[3]), 

    PF	PTR struct PF size(1) Largest target is 8
		 -> NULL(NULL[0]), PF1(BANK2[8]), 

    Temp	PTR struct OverTemp size(1) Largest target is 14
		 -> NULL(NULL[0]), Temp1(BANK2[14]), 

    Timer0	PTR struct Timer0 size(1) Largest target is 9
		 -> NULL(NULL[0]), VarTimer0(BANK1[9]), 

    LED	PTR struct LED size(1) Largest target is 4
		 -> NULL(NULL[0]), VarErrLED(BANK1[4]), VarLED2(BANK1[4]), VarLED1(BANK1[4]), 

    TMain	PTR struct TMain size(1) Largest target is 16
		 -> NULL(NULL[0]), VarTMain(BANK3[16]), 

    Memory	PTR struct FlashMemory size(1) Largest target is 37
		 -> NULL(NULL[0]), VarMemory(BANK4[37]), 

    Dimmer	PTR struct Dimmer size(1) Largest target is 3
		 -> NULL(NULL[0]), Dimmer1(BANK1[3]), 

    DimmerLights22	PTR struct DimmerLights size(1) Largest target is 14
		 -> NULL(NULL[0]), DimmerLights2(BANK2[14]), 

    DimmerLights11	PTR struct DimmerLights size(1) Largest target is 14
		 -> NULL(NULL[0]), DimmerLights1(BANK2[14]), 

    DimmerLights	PTR struct DimmerLights size(1) Largest target is 14
		 -> NULL(NULL[0]), DimmerLights2(BANK2[14]), DimmerLights1(BANK2[14]), 

    Product	PTR struct Product size(1) Largest target is 32
		 -> NULL(NULL[0]), VarProduct(BANK3[32]), 

    DelayOff	PTR struct DelayOff size(1) Largest target is 5
		 -> NULL(NULL[0]), DlySw2(BANK1[5]), DlySw1(BANK1[5]), 

    Buz	PTR struct Buzzer size(1) Largest target is 12
		 -> NULL(NULL[0]), Buz1(BANK2[12]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_TMR0_ISR
    _INT_ISR->_setRF_ReceiveGO
    _setRF_ReceiveGO->i1_RfPointSelect

Critical Paths under _main in BANK0

    _getTemp_AD->_getAD
    _getPowerFault_AD->_getAD
    _Temp_Main->_setTemp_Main
    _setTemp_Main->_setOverTemp_Exceptions
    _setOverTemp_Exceptions->_DimmerLights_Exceptions
    _Temp_Initialization->_setTemp_Initialization
    _Switch_Main->_setSw_Main
    _setSw_Main->_Sw_DimmerOffFunc
    _setRF_Learn->_RfPointSelect
    _Sw_DimmerOnFunc->_setRF_DimmerLights
    _Sw_DimmerOffFunc->_setRF_DimmerLights
    _Sw_DimmerAdjFunc->_setDimmerLights_AdjGo
    _Sw_DimmerAdjFunc->_setDimmerLights_TriggerAdj
    _Sw_DimmerAdjFunc->_setRFSW_Status
    _setDimmerLights_TriggerAdj->_DimmerLightsPointSelect
    _setDimmerLights_AdjGo->_DimmerLightsPointSelect
    _Switch_Initialization->_setSw_Initialization
    _setSw_Initialization->_setLED
    _getRxData->_setControl_Lights_Table
    _setLog_Code->_setBuz
    _setControl_Lights_Table->_setRFSW_AdjControl
    _setRFSW_Control->_setRF_DimmerLights
    _setDelayOff_GO->_DelayTimejudge
    _setRFSW_AdjControl->_setRF_DimmerValue
    _setRF_DimmerValue->_setDimmerLights_AdjRF
    _setDimmerLights_AdjRF->_getPercentValue
    _getPercentValue->___fttol
    ___ftmul->___awtoft
    ___ftadd->___ftmul
    _RF_RxDisable->_CC2500_WriteCommand
    _CC2500_TxData->_CC2500_WriteCommand
    _CC2500_RxData->_CC2500_ReadStatus
    _CC2500_RxData->_CC2500_WriteCommand
    _CC2500_RxData->_setRF_RxStatus
    _setRF_RxStatus->_RfPointSelect
    _CC2500_ReadStatus->_CC2500_ReadByte
    _CC2500_ReadStatus->_CC2500_WriteByte
    _RF_Initialization->_setRF_Initialization
    _PowerFault_Main->_setPowerFault_Main
    _setPowerFault_Main->_setPowerFault_Exceptions
    _setPowerFault_Exceptions->_DimmerLights_Exceptions
    _DimmerLights_Exceptions->_setBuz
    _setDimmerLights_TriggerERROR->_DimmerLightsPointSelect
    _setDimmerLights_ERROR->_setLED
    _setDimmerLights_ERROR->_setRFSW_Status
    _setDimmerLights_ERROR->_setSw_Status
    _PowerFault_Initialization->_setPowerFault_Initialization
    _Mcu_Initialization->_TMR0_Set
    _MainT->_setBuz
    _setSw_Enable->_SwPointSelect
    _setRF_Enable->_RfPointSelect
    _LED_Main->_setLED_Main
    _setLED_Main->_LedPointSelect
    _LED_Initialization->_setLED_Initialization
    _setLED_Initialization->_setLED
    _Flash_Memory_Main->_Flash_Memory_Modify
    _Flash_Memory_Modify->_Flash_Memory_Read
    _Flash_Memory_Initialization->_setPercentValue
    _DimmerLights_Main->_setDimmerLights_Main
    _setDimmerLights_Main->_setDimmerLights_Adj
    _setDimmerLights_Adj->_setRF_DimmerLights
    _setDimmerLights->_setLED
    _setLED->_LedPointSelect
    _DimmerLights_Close->_getDimmerLights_StatusFlag
    _DimmerLights_Initialization->_setDimmerLights_Initialization
    _setDimmerLights_Initialization->_DimmerLightsPointSelect
    _DelayOff_Main->_DlyOff_Main
    _DlyOff_Main->_setRF_DimmerLights
    _setTxData->_RfPointSelect
    _setSw_Status->_SwPointSelect
    _setRF_DimmerLights->_setPercentValue
    _setPercentValue->___fttol
    ___fttol->___ftadd
    ___ftdiv->___awtoft
    ___awtoft->___ftpack
    _setRFSW_Status->_RfSWPointSelect
    _setDimmerLights_Trigger->_DimmerLightsPointSelect
    _setDimmerLights_Switch->_DimmerLightsPointSelect
    _setBuz->___wmul
    _DelayOff_Initialization->_DlyOff_Initialization
    _DlyOff_Initialization->_DelayOffPointSelect
    _CC2500_PowerOnInitial->_CC2500_InitSetREG
    _CC2500_SIDLEMode->_CC2500_WriteCommand
    _CC2500_PowerRST->_DelayTime_1us
    _CC2500_InitSetREG->_CC2500_WriteREG
    _CC2500_InitPATable->_CC2500_WriteREG
    _CC2500_WriteREG->_CC2500_WriteByte
    _CC2500_FrequencyCabr->_DelayTime_1us
    _CC2500_ClearTXFIFO->_CC2500_WriteCommand
    _CC2500_ClearRXFIFO->_CC2500_WriteCommand
    _CC2500_WriteCommand->_CC2500_WriteByte

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _Switch_Main->_setSw_Main
    _RF_Main->_setRF_Main
    _setRF_Main->_getRxData

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   96816
              _Buzzer_Initialization
                        _Buzzer_Main
              _CC2500_PowerOnInitial
            _DelayOff_Initialization
                      _DelayOff_Main
        _DimmerLights_Initialization
                  _DimmerLights_Main
        _Flash_Memory_Initialization
                  _Flash_Memory_Main
                 _LED_Initialization
                           _LED_Main
                              _MainT
               _MainT_Initialization
                   _MainT_ResetClock
                 _Mcu_Initialization
          _PowerFault_Initialization
                    _PowerFault_Main
                  _RF_Initialization
                            _RF_Main
              _Switch_Initialization
                        _Switch_Main
                _Temp_Initialization
                          _Temp_Main
                   _getPowerFault_AD
                         _getTemp_AD
 ---------------------------------------------------------------------------------
 (1) _getTemp_AD                                           5     5      0     223
                                              4 BANK0      5     5      0
                              _getAD
 ---------------------------------------------------------------------------------
 (1) _getPowerFault_AD                                     5     5      0     223
                                              4 BANK0      5     5      0
                              _getAD
 ---------------------------------------------------------------------------------
 (2) _getAD                                                4     1      3     192
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (1) _Temp_Main                                            0     0      0    6658
                       _setTemp_Main
 ---------------------------------------------------------------------------------
 (2) _setTemp_Main                                         3     3      0    6658
                                             13 BANK0      3     3      0
                         _getPF_Safe
             _setOverTemp_Exceptions
 ---------------------------------------------------------------------------------
 (3) _setOverTemp_Exceptions                               2     2      0    6658
                                             11 BANK0      2     2      0
            _DimmerLights_Exceptions
                             _setBuz
                             _setLED
                       _setRF_Enable
                       _setSw_Enable
 ---------------------------------------------------------------------------------
 (3) _getPF_Safe                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Temp_Initialization                                  0     0      0       0
             _setTemp_Initialization
 ---------------------------------------------------------------------------------
 (2) _setTemp_Initialization                               1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Switch_Main                                          0     0      0   22040
                         _setSw_Main
 ---------------------------------------------------------------------------------
 (2) _setSw_Main                                           5     5      0   22040
                                             69 BANK0      2     2      0
                                              0 BANK1      3     3      0
                      _SwPointSelect
                   _Sw_DimmerAdjFunc
                   _Sw_DimmerOffFunc
                    _Sw_DimmerOnFunc
                             _setBuz
                        _setRF_Learn
 ---------------------------------------------------------------------------------
 (3) _setRF_Learn                                          2     1      1     288
                                              2 BANK0      2     1      1
                      _RfPointSelect
 ---------------------------------------------------------------------------------
 (3) _Sw_DimmerOnFunc                                      2     2      0    9518
                                             66 BANK0      2     2      0
                             _setBuz
             _setDimmerLights_Switch
            _setDimmerLights_Trigger
                     _setRFSW_Status
                 _setRF_DimmerLights
                          _setTxData
 ---------------------------------------------------------------------------------
 (3) _Sw_DimmerOffFunc                                     3     3      0    9429
                                             66 BANK0      3     3      0
                     _setDelayOff_GO
              _setDimmerLights_AdjGo
             _setDimmerLights_Switch
            _setDimmerLights_Trigger
         _setDimmerLights_TriggerAdj
                 _setRF_DimmerLights
                          _setTxData
 ---------------------------------------------------------------------------------
 (3) _Sw_DimmerAdjFunc                                     2     2      0    1282
                                              4 BANK0      2     2      0
              _setDimmerLights_AdjGo
         _setDimmerLights_TriggerAdj
                     _setRFSW_Status
 ---------------------------------------------------------------------------------
 (4) _setDimmerLights_TriggerAdj                           2     1      1     254
                                              2 BANK0      2     1      1
            _DimmerLightsPointSelect
 ---------------------------------------------------------------------------------
 (4) _setDimmerLights_AdjGo                                2     1      1     254
                                              2 BANK0      2     1      1
            _DimmerLightsPointSelect
 ---------------------------------------------------------------------------------
 (1) _Switch_Initialization                                0     0      0     948
                         _TouchPower
               _setSw_Initialization
 ---------------------------------------------------------------------------------
 (2) _setSw_Initialization                                 1     1      0     948
                                              4 BANK0      1     1      0
                             _setLED
 ---------------------------------------------------------------------------------
 (2) _TouchPower                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RF_Main                                              0     0      0   29561
                         _setRF_Main
 ---------------------------------------------------------------------------------
 (2) _setRF_Main                                           3     3      0   29561
                                              1 BANK1      3     3      0
                      _CC2500_RxData
                      _CC2500_TxData
                _CC2500_WriteCommand
                       _RF_RxDisable
                      _RfPointSelect
                          _getRxData
                          _setINT_GO
 ---------------------------------------------------------------------------------
 (3) _getRxData                                            2     2      0   28277
                                              0 BANK1      1     1      0
                      _RfPointSelect
            _setControl_Lights_Table
                        _setLog_Code
 ---------------------------------------------------------------------------------
 (4) _setLog_Code                                          2     2      0    1263
                                             10 BANK0      2     2      0
                      _RfPointSelect
                             _setBuz
 ---------------------------------------------------------------------------------
 (4) _setControl_Lights_Table                              1     1      0   26952
                                             71 BANK0      1     1      0
                      _RfPointSelect
                             _setBuz
                    _setDimmerLights
                 _setRFSW_AdjControl
                    _setRFSW_Control
                     _setRFSW_Status
                       _setSw_Status
                          _setTxData
 ---------------------------------------------------------------------------------
 (5) _setRFSW_Control                                      2     2      0   10853
                                             66 BANK0      2     2      0
                    _RfSWPointSelect
                             _setBuz
                     _setDelayOff_GO
             _setDimmerLights_Switch
            _setDimmerLights_Trigger
                 _setRF_DimmerLights
                       _setSw_Status
                          _setTxData
 ---------------------------------------------------------------------------------
 (4) _setDelayOff_GO                                       5     3      2    1192
                                              3 BANK0      5     3      2
                _DelayOffPointSelect
                     _DelayTimejudge
 ---------------------------------------------------------------------------------
 (5) _DelayTimejudge                                       3     3      0     238
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (5) _setRFSW_AdjControl                                   3     3      0   12318
                                             68 BANK0      3     3      0
                    _RfSWPointSelect
                  _setRF_DimmerValue
                          _setTxData
 ---------------------------------------------------------------------------------
 (6) _setRF_DimmerValue                                    3     3      0   12070
                                             65 BANK0      3     3      0
              _setDimmerLights_AdjRF
 ---------------------------------------------------------------------------------
 (7) _setDimmerLights_AdjRF                                2     2      0   11977
                                             63 BANK0      2     2      0
            _DimmerLightsPointSelect
                    _getPercentValue
 ---------------------------------------------------------------------------------
 (8) _getPercentValue                                      6     6      0   11884
                                             57 BANK0      6     6      0
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___fttol
 ---------------------------------------------------------------------------------
 (9) ___ftmul                                             16    10      6    2655
                                             14 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (9) ___ftadd                                             13     7      6    3482
                                             30 BANK0     13     7      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) _RF_RxDisable                                         1     1      0     192
                                              4 BANK0      1     1      0
                _CC2500_WriteCommand
                      _RfPointSelect
                          _setINT_GO
 ---------------------------------------------------------------------------------
 (3) _CC2500_TxData                                        2     2      0     235
                                              4 BANK0      2     2      0
                   _CC2500_WriteByte
                _CC2500_WriteCommand
 ---------------------------------------------------------------------------------
 (3) _CC2500_RxData                                        2     2      0     628
                                              4 BANK0      2     2      0
                    _CC2500_ReadByte
                  _CC2500_ReadStatus
                   _CC2500_WriteByte
                _CC2500_WriteCommand
                     _setRF_RxStatus
 ---------------------------------------------------------------------------------
 (4) _setRF_RxStatus                                       2     1      1     158
                                              2 BANK0      2     1      1
                      _RfPointSelect
 ---------------------------------------------------------------------------------
 (4) _CC2500_ReadStatus                                    2     2      0     167
                                              2 BANK0      2     2      0
                    _CC2500_ReadByte
                   _CC2500_WriteByte
 ---------------------------------------------------------------------------------
 (5) _CC2500_ReadByte                                      2     2      0      68
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _RF_Initialization                                    0     0      0       0
               _setRF_Initialization
 ---------------------------------------------------------------------------------
 (2) _setRF_Initialization                                 2     2      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _PowerFault_Main                                      0     0      0    5457
                 _setPowerFault_Main
 ---------------------------------------------------------------------------------
 (2) _setPowerFault_Main                                   2     2      0    5457
                                             13 BANK0      2     2      0
                       _getTemp_Safe
           _setPowerFault_Exceptions
 ---------------------------------------------------------------------------------
 (3) _setPowerFault_Exceptions                             2     2      0    5457
                                             11 BANK0      2     2      0
            _DimmerLights_Exceptions
                             _setLED
                       _setRF_Enable
                       _setSw_Enable
 ---------------------------------------------------------------------------------
 (4) _DimmerLights_Exceptions                              1     1      0    3911
                                             10 BANK0      1     1      0
         _getDimmerLights_StatusFlag
                             _setBuz
              _setDimmerLights_ERROR
       _setDimmerLights_TriggerERROR
 ---------------------------------------------------------------------------------
 (5) _setDimmerLights_TriggerERROR                         2     1      1     347
                                              2 BANK0      2     1      1
            _DimmerLightsPointSelect
 ---------------------------------------------------------------------------------
 (5) _setDimmerLights_ERROR                                2     2      0    2196
                                              4 BANK0      2     2      0
            _DimmerLightsPointSelect
                             _setLED
                     _setRFSW_Status
                       _setSw_Status
 ---------------------------------------------------------------------------------
 (3) _getTemp_Safe                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PowerFault_Initialization                            0     0      0       0
       _setPowerFault_Initialization
 ---------------------------------------------------------------------------------
 (2) _setPowerFault_Initialization                         1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Mcu_Initialization                                   1     1      0       0
                                              1 BANK0      1     1      0
                            _ADC_Set
                            _INT_Set
                            _IOC_Set
                             _IO_Set
                           _TMR0_Set
 ---------------------------------------------------------------------------------
 (2) _TMR0_Set                                             1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _IO_Set                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _IOC_Set                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INT_Set                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Set                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MainT_ResetClock                                     2     2      0      68
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _MainT_Initialization                                 1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _MainT                                                0     0      0    1675
                             _setBuz
                       _setRF_Enable
                       _setSw_Enable
                     _setTemp_Enable
 ---------------------------------------------------------------------------------
 (2) _setTemp_Enable                                       1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _setSw_Enable                                         1     1      0     124
                                              2 BANK0      1     1      0
                      _SwPointSelect
 ---------------------------------------------------------------------------------
 (4) _setRF_Enable                                         2     1      1     319
                                              2 BANK0      2     1      1
                      _RfPointSelect
                          _setINT_GO
 ---------------------------------------------------------------------------------
 (5) _setINT_GO                                            1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _LED_Main                                             0     0      0     217
                        _setLED_Main
 ---------------------------------------------------------------------------------
 (2) _setLED_Main                                          3     3      0     217
                                              2 BANK0      3     3      0
                     _LedPointSelect
 ---------------------------------------------------------------------------------
 (1) _LED_Initialization                                   0     0      0    1072
              _setLED_Initialization
 ---------------------------------------------------------------------------------
 (2) _setLED_Initialization                                1     1      0    1072
                                              4 BANK0      1     1      0
                     _LedPointSelect
                             _setLED
 ---------------------------------------------------------------------------------
 (1) _Flash_Memory_Main                                    0     0      0     331
                _Flash_Memory_Modify
 ---------------------------------------------------------------------------------
 (2) _Flash_Memory_Modify                                  3     3      0     331
                                              4 BANK0      3     3      0
               _Flash_Memory_Erasing
                  _Flash_Memory_Read
                 _Flash_Memory_Write
 ---------------------------------------------------------------------------------
 (3) _Flash_Memory_Erasing                                 0     0      0       0
                _Flash_Memory_Unlock
 ---------------------------------------------------------------------------------
 (1) _Flash_Memory_Initialization                          2     2      0    6140
                                             61 BANK0      2     2      0
                  _Flash_Memory_Read
                 _Flash_Memory_Write
                    _setPercentValue
 ---------------------------------------------------------------------------------
 (3) _Flash_Memory_Write                                   2     2      0     130
                                              0 BANK0      2     2      0
                _Flash_Memory_Unlock
 ---------------------------------------------------------------------------------
 (4) _Flash_Memory_Unlock                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Flash_Memory_Read                                    4     4      0      71
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _DimmerLights_Main                                    0     0      0    9887
                 _DimmerLights_Close
               _setDimmerLights_Main
 ---------------------------------------------------------------------------------
 (2) _setDimmerLights_Main                                 2     2      0    9813
                                             69 BANK0      2     2      0
            _DimmerLightsPointSelect
                             _setBuz
                    _setDimmerLights
                _setDimmerLights_Adj
 ---------------------------------------------------------------------------------
 (3) _setDimmerLights_Adj                                  3     2      1    6868
                                             66 BANK0      3     2      1
            _DimmerLightsPointSelect
                 _setRF_DimmerLights
                          _setTxData
 ---------------------------------------------------------------------------------
 (5) _setDimmerLights                                      3     2      1    1363
                                              4 BANK0      3     2      1
            _DimmerLightsPointSelect
                             _setLED
 ---------------------------------------------------------------------------------
 (4) _setLED                                               2     1      1     917
                                              2 BANK0      2     1      1
                     _LedPointSelect
 ---------------------------------------------------------------------------------
 (5) _LedPointSelect                                       2     2      0      93
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _DimmerLights_Close                                   0     0      0      74
         _getDimmerLights_StatusFlag
 ---------------------------------------------------------------------------------
 (5) _getDimmerLights_StatusFlag                           3     3      0      74
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _DimmerLights_Initialization                          1     1      0      93
                                              4 BANK0      1     1      0
              _Dimmer_Initialization
     _setDimmerLights_Initialization
 ---------------------------------------------------------------------------------
 (2) _setDimmerLights_Initialization                       2     2      0      93
                                              2 BANK0      2     2      0
            _DimmerLightsPointSelect
 ---------------------------------------------------------------------------------
 (2) _Dimmer_Initialization                                1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _DelayOff_Main                                        0     0      0   10023
                        _DlyOff_Main
 ---------------------------------------------------------------------------------
 (2) _DlyOff_Main                                          3     3      0   10023
                                             66 BANK0      3     3      0
                _DelayOffPointSelect
                             _setBuz
             _setDimmerLights_Switch
            _setDimmerLights_Trigger
                     _setRFSW_Status
                 _setRF_DimmerLights
                       _setSw_Status
                          _setTxData
 ---------------------------------------------------------------------------------
 (4) _setTxData                                            3     3      0      62
                                              2 BANK0      2     2      0
                      _RfPointSelect
 ---------------------------------------------------------------------------------
 (5) _RfPointSelect                                        2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (6) _setSw_Status                                         2     1      1     514
                                              2 BANK0      2     1      1
                      _SwPointSelect
 ---------------------------------------------------------------------------------
 (5) _SwPointSelect                                        2     2      0      62
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _setRF_DimmerLights                                   5     4      1    6521
                                             61 BANK0      5     4      1
                    _setPercentValue
 ---------------------------------------------------------------------------------
 (5) _setPercentValue                                      4     4      0    5747
                                             57 BANK0      4     4      0
                           ___awtoft
                            ___ftdiv
                            ___fttol
 ---------------------------------------------------------------------------------
 (6) ___fttol                                             14    10      4     501
                                             43 BANK0     14    10      4
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___ftdiv                                             16    10      6    2847
                                             14 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (6) ___awtoft                                             6     3      3    2300
                                              8 BANK0      6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (7) ___ftpack                                             8     3      5    2037
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (6) _setRFSW_Status                                       2     1      1     579
                                              2 BANK0      2     1      1
                    _RfSWPointSelect
 ---------------------------------------------------------------------------------
 (7) _RfSWPointSelect                                      2     2      0      62
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _setDimmerLights_Trigger                              2     1      1     449
                                              2 BANK0      2     1      1
            _DimmerLightsPointSelect
 ---------------------------------------------------------------------------------
 (4) _setDimmerLights_Switch                               2     1      1     449
                                              2 BANK0      2     1      1
            _DimmerLightsPointSelect
 ---------------------------------------------------------------------------------
 (6) _DimmerLightsPointSelect                              2     2      0      62
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _setBuz                                               4     2      2    1201
                                              6 BANK0      4     2      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     266
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _DelayOff_Initialization                              0     0      0      93
              _DlyOff_Initialization
 ---------------------------------------------------------------------------------
 (2) _DlyOff_Initialization                                1     1      0      93
                                              2 BANK0      1     1      0
                _DelayOffPointSelect
 ---------------------------------------------------------------------------------
 (5) _DelayOffPointSelect                                  2     2      0      62
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _CC2500_PowerOnInitial                                0     0      0    2107
                 _CC2500_ClearRXFIFO
                 _CC2500_ClearTXFIFO
               _CC2500_FrequencyCabr
                 _CC2500_InitPATable
                  _CC2500_InitSetREG
                    _CC2500_PowerRST
                   _CC2500_SIDLEMode
 ---------------------------------------------------------------------------------
 (2) _CC2500_SIDLEMode                                     0     0      0      99
                _CC2500_WriteCommand
 ---------------------------------------------------------------------------------
 (2) _CC2500_PowerRST                                      1     1      0     464
                                              6 BANK0      1     1      0
                   _CC2500_WriteByte
                      _DelayTime_1us
 ---------------------------------------------------------------------------------
 (2) _CC2500_InitSetREG                                    4     4      0     458
                                              5 BANK0      4     4      0
                    _CC2500_WriteREG
 ---------------------------------------------------------------------------------
 (2) _CC2500_InitPATable                                   3     3      0     393
                                              5 BANK0      3     3      0
                    _CC2500_WriteREG
 ---------------------------------------------------------------------------------
 (3) _CC2500_WriteREG                                      3     2      1     260
                                              2 BANK0      3     2      1
                   _CC2500_WriteByte
 ---------------------------------------------------------------------------------
 (2) _CC2500_FrequencyCabr                                 0     0      0     495
                _CC2500_WriteCommand
                      _DelayTime_1us
 ---------------------------------------------------------------------------------
 (3) _DelayTime_1us                                        6     4      2     396
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (2) _CC2500_ClearTXFIFO                                   0     0      0      99
                _CC2500_WriteCommand
 ---------------------------------------------------------------------------------
 (2) _CC2500_ClearRXFIFO                                   0     0      0      99
                _CC2500_WriteCommand
 ---------------------------------------------------------------------------------
 (4) _CC2500_WriteCommand                                  2     2      0      99
                                              2 BANK0      2     2      0
                   _CC2500_WriteByte
 ---------------------------------------------------------------------------------
 (5) _CC2500_WriteByte                                     2     2      0      68
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _Buzzer_Main                                          4     4      0       0
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _Buzzer_Initialization                                1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _ISR                                                 1     1      0     119
                                              4 COMMON     1     1      0
                            _INT_ISR
                            _IOC_ISR
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (12) _TMR0_ISR                                            4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (12) _IOC_ISR                                             1     1      0       0
                                              0 COMMON     1     1      0
                   _setDimmerReClock
 ---------------------------------------------------------------------------------
 (13) _setDimmerReClock                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _INT_ISR                                             0     0      0     119
                    _setRF_ReceiveGO
 ---------------------------------------------------------------------------------
 (13) _setRF_ReceiveGO                                     2     1      1     119
                                              2 COMMON     2     1      1
                    i1_RfPointSelect
 ---------------------------------------------------------------------------------
 (14) i1_RfPointSelect                                     2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Buzzer_Initialization
   _Buzzer_Main
   _CC2500_PowerOnInitial
     _CC2500_ClearRXFIFO
       _CC2500_WriteCommand
         _CC2500_WriteByte
     _CC2500_ClearTXFIFO
       _CC2500_WriteCommand
         _CC2500_WriteByte
     _CC2500_FrequencyCabr
       _CC2500_WriteCommand
         _CC2500_WriteByte
       _DelayTime_1us
     _CC2500_InitPATable
       _CC2500_WriteREG
         _CC2500_WriteByte
     _CC2500_InitSetREG
       _CC2500_WriteREG
         _CC2500_WriteByte
     _CC2500_PowerRST
       _CC2500_WriteByte
       _DelayTime_1us
     _CC2500_SIDLEMode
       _CC2500_WriteCommand
         _CC2500_WriteByte
   _DelayOff_Initialization
     _DlyOff_Initialization
       _DelayOffPointSelect
   _DelayOff_Main
     _DlyOff_Main
       _DelayOffPointSelect
       _setBuz
         ___wmul
       _setDimmerLights_Switch
         _DimmerLightsPointSelect
       _setDimmerLights_Trigger
         _DimmerLightsPointSelect
       _setRFSW_Status
         _RfSWPointSelect
       _setRF_DimmerLights
         _setPercentValue
           ___awtoft
             ___ftpack
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
       _setSw_Status
         _SwPointSelect
       _setTxData
         _RfPointSelect
   _DimmerLights_Initialization
     _Dimmer_Initialization
     _setDimmerLights_Initialization
       _DimmerLightsPointSelect
   _DimmerLights_Main
     _DimmerLights_Close
       _getDimmerLights_StatusFlag
     _setDimmerLights_Main
       _DimmerLightsPointSelect
       _setBuz
         ___wmul
       _setDimmerLights
         _DimmerLightsPointSelect
         _setLED
           _LedPointSelect
       _setDimmerLights_Adj
         _DimmerLightsPointSelect
         _setRF_DimmerLights
           _setPercentValue
             ___awtoft
               ___ftpack
             ___ftdiv
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___fttol
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
         _setTxData
           _RfPointSelect
   _Flash_Memory_Initialization
     _Flash_Memory_Read
     _Flash_Memory_Write
       _Flash_Memory_Unlock
     _setPercentValue
       ___awtoft
         ___ftpack
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
   _Flash_Memory_Main
     _Flash_Memory_Modify
       _Flash_Memory_Erasing
         _Flash_Memory_Unlock
       _Flash_Memory_Read
       _Flash_Memory_Write
         _Flash_Memory_Unlock
   _LED_Initialization
     _setLED_Initialization
       _LedPointSelect
       _setLED
         _LedPointSelect
   _LED_Main
     _setLED_Main
       _LedPointSelect
   _MainT
     _setBuz
       ___wmul
     _setRF_Enable
       _RfPointSelect
       _setINT_GO
     _setSw_Enable
       _SwPointSelect
     _setTemp_Enable
   _MainT_Initialization
   _MainT_ResetClock
   _Mcu_Initialization
     _ADC_Set
     _INT_Set
     _IOC_Set
     _IO_Set
     _TMR0_Set
   _PowerFault_Initialization
     _setPowerFault_Initialization
   _PowerFault_Main
     _setPowerFault_Main
       _getTemp_Safe
       _setPowerFault_Exceptions
         _DimmerLights_Exceptions
           _getDimmerLights_StatusFlag
           _setBuz
             ___wmul
           _setDimmerLights_ERROR
             _DimmerLightsPointSelect
             _setLED
               _LedPointSelect
             _setRFSW_Status
               _RfSWPointSelect
             _setSw_Status
               _SwPointSelect
           _setDimmerLights_TriggerERROR
             _DimmerLightsPointSelect
         _setLED
           _LedPointSelect
         _setRF_Enable
           _RfPointSelect
           _setINT_GO
         _setSw_Enable
           _SwPointSelect
   _RF_Initialization
     _setRF_Initialization
   _RF_Main
     _setRF_Main
       _CC2500_RxData
         _CC2500_ReadByte
         _CC2500_ReadStatus
           _CC2500_ReadByte
           _CC2500_WriteByte
         _CC2500_WriteByte
         _CC2500_WriteCommand
           _CC2500_WriteByte
         _setRF_RxStatus
           _RfPointSelect
       _CC2500_TxData
         _CC2500_WriteByte
         _CC2500_WriteCommand
           _CC2500_WriteByte
       _CC2500_WriteCommand
         _CC2500_WriteByte
       _RF_RxDisable
         _CC2500_WriteCommand
           _CC2500_WriteByte
         _RfPointSelect
         _setINT_GO
       _RfPointSelect
       _getRxData
         _RfPointSelect
         _setControl_Lights_Table
           _RfPointSelect
           _setBuz
             ___wmul
           _setDimmerLights
             _DimmerLightsPointSelect
             _setLED
               _LedPointSelect
           _setRFSW_AdjControl
             _RfSWPointSelect
             _setRF_DimmerValue
               _setDimmerLights_AdjRF
                 _DimmerLightsPointSelect
                 _getPercentValue
                   ___awtoft
                     ___ftpack
                   ___ftadd
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftmul (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                     ___ftpack (ARG)
                   ___ftdiv
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                   ___ftmul
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                   ___fttol
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftadd (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftmul (ARG)
                         ___awtoft (ARG)
                           ___ftpack
                         ___ftpack (ARG)
                       ___ftpack (ARG)
                     ___ftdiv (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                     ___ftmul (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
             _setTxData
               _RfPointSelect
           _setRFSW_Control
             _RfSWPointSelect
             _setBuz
               ___wmul
             _setDelayOff_GO
               _DelayOffPointSelect
               _DelayTimejudge
             _setDimmerLights_Switch
               _DimmerLightsPointSelect
             _setDimmerLights_Trigger
               _DimmerLightsPointSelect
             _setRF_DimmerLights
               _setPercentValue
                 ___awtoft
                   ___ftpack
                 ___ftdiv
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___fttol
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftadd (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftmul (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                     ___ftpack (ARG)
                   ___ftdiv (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
             _setSw_Status
               _SwPointSelect
             _setTxData
               _RfPointSelect
           _setRFSW_Status
             _RfSWPointSelect
           _setSw_Status
             _SwPointSelect
           _setTxData
             _RfPointSelect
         _setLog_Code
           _RfPointSelect
           _setBuz
             ___wmul
       _setINT_GO
   _Switch_Initialization
     _TouchPower
     _setSw_Initialization
       _setLED
         _LedPointSelect
   _Switch_Main
     _setSw_Main
       _SwPointSelect
       _Sw_DimmerAdjFunc
         _setDimmerLights_AdjGo
           _DimmerLightsPointSelect
         _setDimmerLights_TriggerAdj
           _DimmerLightsPointSelect
         _setRFSW_Status
           _RfSWPointSelect
       _Sw_DimmerOffFunc
         _setDelayOff_GO
           _DelayOffPointSelect
           _DelayTimejudge
         _setDimmerLights_AdjGo
           _DimmerLightsPointSelect
         _setDimmerLights_Switch
           _DimmerLightsPointSelect
         _setDimmerLights_Trigger
           _DimmerLightsPointSelect
         _setDimmerLights_TriggerAdj
           _DimmerLightsPointSelect
         _setRF_DimmerLights
           _setPercentValue
             ___awtoft
               ___ftpack
             ___ftdiv
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___fttol
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
         _setTxData
           _RfPointSelect
       _Sw_DimmerOnFunc
         _setBuz
           ___wmul
         _setDimmerLights_Switch
           _DimmerLightsPointSelect
         _setDimmerLights_Trigger
           _DimmerLightsPointSelect
         _setRFSW_Status
           _RfSWPointSelect
         _setRF_DimmerLights
           _setPercentValue
             ___awtoft
               ___ftpack
             ___ftdiv
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___fttol
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
         _setTxData
           _RfPointSelect
       _setBuz
         ___wmul
       _setRF_Learn
         _RfPointSelect
   _Temp_Initialization
     _setTemp_Initialization
   _Temp_Main
     _setTemp_Main
       _getPF_Safe
       _setOverTemp_Exceptions
         _DimmerLights_Exceptions
           _getDimmerLights_StatusFlag
           _setBuz
             ___wmul
           _setDimmerLights_ERROR
             _DimmerLightsPointSelect
             _setLED
               _LedPointSelect
             _setRFSW_Status
               _RfSWPointSelect
             _setSw_Status
               _SwPointSelect
           _setDimmerLights_TriggerERROR
             _DimmerLightsPointSelect
         _setBuz
           ___wmul
         _setLED
           _LedPointSelect
         _setRF_Enable
           _RfPointSelect
           _setINT_GO
         _setSw_Enable
           _SwPointSelect
   _getPowerFault_AD
     _getAD
   _getTemp_AD
     _getAD

 _ISR (ROOT)
   _INT_ISR
     _setRF_ReceiveGO
       i1_RfPointSelect
   _IOC_ISR
     _setDimmerReClock
   _TMR0_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       1       1        7.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      5       A       2       71.4%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     48      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      4      4F       7       98.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      50       9      100.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      30      11       60.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      25      13       46.3%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     14E      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     14E      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Fri Sep 26 17:17:08 2014

                   __size_of_Switch_Main 0008                    ?_Flash_Memory_Erasing 0071  
           ??_setDimmerLights_TriggerAdj 0023                                       _PF 0076  
                                     _RD 0CA8                                       _RF 0077  
                __end_of_CC2500_WriteREG 1C00                                       _WR 0CA9  
                                     _Sw 0078       __end_of_getDimmerLights_StatusFlag 1B89  
             _getDimmerLights_StatusFlag 1B73                      ___wmul@multiplicand 0022  
                 __end_of_setDelayOff_GO 1311                             ___ftadd@exp1 004A  
                           ___ftadd@exp2 0049                setDimmerLights_Adj@lights 0064  
                   _setDimmerLights_Main 08DC                             ___ftadd@sign 0048  
                                    l304 1131                                      l401 1D8D  
                                    l305 1136                                      l315 13CC  
                                    l332 1F02                                      l308 1139  
                                    l335 1F08                                      l319 13DD  
                                    l365 1BDA                                      l366 1BDC  
                                    l377 1BEF                                      l395 07EE  
                                    l299 1107                                      l389 1A7C  
                                    l690 1EAD                                      l847 1AEF  
                                    l894 14C9                                      _GIE 005F  
                                    _CRC 00B7                                      _RA0 0060  
                                    _RB0 0068     __size_of_DimmerLights_Initialization 0015  
                                    _RB1 0069                                      _RA3 0063  
                                    _PF1 0168                                      _RC0 0070  
                                    _RB2 006A                                      _RA4 0064  
                                    _LED 00BA                                      _RC1 0071  
                                    _RB3 006B                                      _RC2 0072  
                                    _RB4 006C                                      _RA6 0066  
                                    _RB5 006D                                      _RA7 0067  
                                    _RC4 0074                                      _RC5 0075  
                                    _RC7 0077                                      _RF1 00E5  
                                    _ISR 0004          setPowerFault_Exceptions@command 002C  
                                    _Sw1 0156                                      _Sw2 015F  
                                    _Buz 0068                setDimmerLights_Adj@status 0062  
               __end_of_CC2500_WriteByte 1BE7           ??_setDimmerLights_TriggerERROR 0023  
                  _Buzzer_Initialization 1989                          __end_of_ADC_Set 1937  
                        ?_DelayTimejudge 0071                                      wreg 0009  
   setDimmerLights_Initialization@lights 0023                          _setDimmerLights 09DE  
                  _setDimmerLights_ERROR 1217                    _setDimmerLights_AdjRF 1D40  
                  _setDimmerLights_AdjGo 1AB4                  __size_of_setTemp_Enable 000B  
                                   ?_ISR 0071                          _PowerFault_Main 18F5  
                           ___ftdiv@cntr 0038                          __end_of_IOC_ISR 1D88  
                           ___ftdiv@sign 003D                                     l2011 10E6  
                                   l1331 1C64                                     l2301 0714  
                                   l2305 1021                 ?_DimmerLightsPointSelect 0071  
                                   l3233 084C                                     l1705 1ED7  
                                   l3066 1CA8                                     l3227 0835  
                        __end_of_IOC_Set 1A20                                     l2543 1210  
                                   l3256 0FA9                                     l2561 1B68  
                                   l2575 1FEA                                     l1679 1B93  
                                   l2753 1912                                     l8003 0FBB  
                                   l8007 0FCD                                     l8103 0DF9  
                                   l8033 0CF1                                     l8017 0FE8  
                                   l8027 0CDB                                     l8055 0D4B  
                                   l8047 0D32                                     l8119 0970  
                                   l8153 09D5                                     l8145 09BB  
                                   l8137 09A0                                     l8305 15BB  
                                   l8225 1D2A                                     l9201 1FB9  
                                   l8147 09C4                                     l8139 09AE  
                                   l8403 13C0                                     l8091 0DDD  
                                   l8075 0D9A                                     l8411 1F1B  
                                   l9027 16F2                                     l8253 1CA2  
                                   l8149 09C7                                     l8229 1D35  
                                   l8069 0D84                                     l9301 0534  
                                   l8175 1B16                                     l8247 1B2A  
                                   l8087 0DD5                                     l8191 1E99  
                                   l8183 1E8D                                     l8343 12E5  
                                   l9303 053D                                     l8273 17C4  
                                   l9145 08EB                                     l9401 0703  
                                   l8353 1304                                     l9163 0923  
                                   l9403 0709                                     l8099 0DF1  
                                   l8195 1E9F                                     l8187 1E93  
                                   l8347 12EB                                     l8523 0B0F  
                                   l8277 17E2                                     l8365 137C  
                                   l8373 1388                                     l9149 08F8  
                                   l8349 12F8                                     l8533 0B33  
                                   l9341 05E2                                     l9325 05A3  
                                   l7911 080B                                     l8463 1B83  
                                   l8383 1398                                     l9175 0950  
                                   l9159 0916                                     l8447 1C92  
                                   l8199 1EA5                                     l9423 0A7C  
                                   l9511 03F7                                     l9335 05D1  
                                   l9601 0CB6                                     l8369 1382  
                                   l9273 144B                                     l8449 1C98  
                                   l8561 1FD8                                     l8537 0B49  
                                   l9521 042A                                     l9337 05D7  
                                   l7915 0812                                     l8395 13B4  
                                   l8379 1392                                     l8387 139E  
                                   l9267 1434                                     l9451 0AC1  
                                   l9427 0A84                                     l7925 083A  
                                   l7917 081C                                     l9277 148B  
                                   l9197 1FB2                                     l8717 1119  
                                   l9437 0AA2                                     l7927 0842  
                                   l7919 0821                                     l8399 13BA  
                                   l8487 0A3B                                     l9367 0654  
                                   l8751 1407                                     l9535 046E  
                                   l7945 1D07                                     l8593 14A9  
                                   l9393 06E6                                     l9369 065E  
                                   l7961 0F39                                     l8681 0BF1  
                                   l9465 0AE7                                     l9449 0ABD  
                                   l9545 04A1                                     l9721 160E  
                                   l8763 1420                                     l8691 0C0A  
                                   l8675 0BD5                                     l8907 127E  
                                   l8597 14BC                                     l9389 06C7  
                                   l8749 13EF                                     l7957 0F32  
                                   l8685 0BFA                                     l9485 03AC  
                                   l8775 1D9E                                     l8839 1EBD  
                                   l8599 14C1                                     l7991 0F88  
                                   l7967 0F48                                     l8695 0C13  
                                   l8919 1294                                     l9495 03BF  
                                   l9487 03B3                                     l8777 1DA9  
                                   l7985 0F75                                     l9497 03C8  
                                   _CFGS 0CAE                                     l9595 0CA9  
                                   l9667 0E99                                     l9771 1C5C  
                                   l7987 0F7F                                     l7979 0F62  
                                   l8963 1651                                     l8883 10DD  
                                   l9843 151C                                     l9589 0C81  
                                   l9597 0CAF                                     l8797 1F58  
                                   l9757 08D6                                     l9749 08AA  
                                   l7997 0F9B                                     l7989 0F84  
                                   l7999 0FA5                                     l8983 1693  
                                   l8959 1641                                     l9847 152E  
                                   l8993 1086                                     l9787 1181  
                                   l8997 1096                                     _FREE 0CAC  
                                   _LATA 010C                                     _LATB 010D  
                        __end_of_INT_ISR 19E3                                     _LATC 010E  
                                   _PEIE 005E                                     _INTE 005C  
                                   _INTF 0059                                     u8115 1CA9  
                                   u7315 0830                                     u8125 1CAE  
                                   u7335 083D                                     u7515 0F76  
                                   u8180 156A                                     u7365 0853  
                                   u7295 0817                                     u8185 1568  
                                   u7545 0F89                                     u8530 197D  
                                   u7645 0D03                                     u7485 0F63  
                                   u7805 0E00                                     u7725 0DA6  
                                   u7655 0D13                                     u7575 0F9C  
                                   u7735 0DB6                                     u7665 0D33  
                                   u7675 0D42                                     u7835 0977  
                                   u7755 0DDE                                     u7685 0D4C  
                                   u7765 0DE4                                     u7865 09A1  
                                   u7795 0DFA                                     u8855 1D93  
                                   u7895 09BC                                     _LWLO 0CAD  
                                   _RFSW 00BB                                     _TMR0 0015  
                        __end_of_INT_Set 191D                                     _RSSI 00BC  
                                   _WREN 0CAA                                     _Buz1 014A  
                                   _Temp 0079                                     _main 14F8  
                           ___ftpack@arg 0020        __end_of_PowerFault_Initialization 18F5  
                    __end_of_DlyOff_Main 1789                          __end_of_RF_Main 1912  
                           ___ftpack@exp 0023                                     fsr0h 0005  
                                   fsr1h 0007                                     fsr0l 0004  
                                   indf0 0000                                     indf1 0001  
                                   fsr1l 0006      __size_of_setDimmerLights_TriggerAdj 0010  
                                   btemp 007E                                     ltemp 007E  
          __size_of_setRF_Initialization 0007                         _setDimmerReClock 1C32  
                                   start 0016                                     ttemp 007E  
                                   wtemp 007E                 _setPowerFault_Exceptions 1001  
                    DelayTimejudge@value 0022                            _RfPointSelect 199F  
             __end_of_setRFSW_AdjControl 2000                             ___ftmul@cntr 003C  
                           ___ftmul@sign 003D             __size_of_Temp_Initialization 0003  
            __size_of_setPowerFault_Main 0108                                    ??_ISR 0075  
                           ___fttol@exp1 0058                             ___fttol@lval 0054  
                       __end_of_LED_Main 1A13                    ?_setDimmerLights_Main 0071  
                        ?_setDelayOff_GO 0023                                    ?_main 0071  
              setControl_Lights_Table@rf 0067                          __end_of___ftadd 1000  
                          __CFG_WDTE$OFF 0000                          __end_of___ftdiv 0D6D  
                                  u10035 0C42                                    u10135 15FD  
                                  u10145 1626                          __end_of___ftmul 0E21  
                                  u10165 106C                                    u10185 087D  
                                  u10275 1168                                    u10195 08C0  
                        __end_of___fttol 09DE             setDimmerLights_AdjGo@command 0022  
                                  _IOCBF 0396                                    _IOCBN 0395  
                                  _IOCBP 0394                                    _IOCIE 005B  
                                  _IOCIF 0058                   _setDimmerLights_Switch 1A84  
          __size_of_CC2500_FrequencyCabr 000C                                    _RFSW1 00E8  
                                  _RFSW2 00E9                                    _PORTA 000C  
                                  _PORTB 000D                                    _PORTC 000E  
                           ?_setLED_Main 0071                       setRF_Learn@command 0022  
                                  _TRISA 008C                                    _TRISB 008D  
                                  _TRISC 008E                                    _WPUB0 1068  
                                  _WPUB1 1069                                    _WPUB2 106A  
                                  _TMain 006F                            setRF_Learn@rf 0023  
                                  _MainT 0863                            __CFG_WRT$HALF 0000  
                                  _Temp1 013C                         __end_of_TMR0_ISR 0393  
           __size_of_CC2500_WriteCommand 0010                         __end_of_TMR0_Set 1A2D  
                      ?_MainT_ResetClock 0071                                    _getAD 1B89  
                          ___awtoft@sign 002D          __end_of_DimmerLights_Exceptions 14F8  
          DimmerLights_Exceptions@status 002A                            ___ftpack@sign 0024  
            __size_of_CC2500_ClearRXFIFO 0004                       ??_MainT_ResetClock 0020  
                          ??_Buzzer_Main 0020              __size_of_CC2500_ClearTXFIFO 0004  
                    CC2500_RxData@loop_f 0025                           __pbitbssCOMMON 0380  
                         __CFG_BOREN$OFF 0000                       Flash_Memory_Read@i 0021  
                       ?_CC2500_ReadByte 0071                                    ltemp0 007E  
                                  ltemp1 0082                                    ltemp2 0086  
                                  ltemp3 0080           __size_of_setLED_Initialization 0011  
          __end_of_setLED_Initialization 1AE5                                    ttemp0 007E  
                                  ttemp1 0081                                    ttemp2 0084  
                                  ttemp3 0087                                    ttemp4 007F  
                           ?_setRF_Learn 0022                                    status 0003  
                                  wtemp0 007E                                    wtemp1 0080  
                                  wtemp2 0082                                    wtemp3 0084  
                                  wtemp4 0086                                    wtemp5 0088  
                                  wtemp6 007F                       _setRF_DimmerLights 1560  
            __size_of_Flash_Memory_Write 002F                   ??_MainT_Initialization 0020  
                      ?_CC2500_SIDLEMode 0071               __size_of_RF_Initialization 0004  
                         ?_RfPointSelect 0071                           setSw_Status@sw 0023  
       __size_of_DelayOff_Initialization 0008                setDimmerLights_Main@clear 0065  
                 ??_Flash_Memory_Erasing 0020                          _getPercentValue 1311  
                     ??_CC2500_SIDLEMode 0024                          __initialization 0018  
                       ?_CC2500_PowerRST 0071                        ??_Sw_DimmerOnFunc 0062  
                      ??_setPercentValue 0059                             __end_of_main 1560  
                    ?_setRF_DimmerLights 005D                         ?_CC2500_WriteREG 0022  
                              ??_ADC_Set 0020                  __end_of_setDimmerLights 0A67  
                   _setSw_Initialization 1955                                   ??_main 0068  
                          ___fttol@sign1 0053                             ?_setLog_Code 0071  
                _setControl_Lights_Table 0B82                   ?_Buzzer_Initialization 0071  
                ??_DlyOff_Initialization 0022                  __end_of_PowerFault_Main 18F8  
                             _Receive_GO 0381                               _Receive_OK 0382  
                              ??_IOC_ISR 0071                   ?_setDimmerLights_ERROR 0071  
                              ??_IOC_Set 0020          __end_of_DimmerLightsPointSelect 1AF8  
                                 ?_MainT 0071                   ?_setDimmerLights_AdjRF 0071  
                              ??_INT_ISR 0075                   ?_setDimmerLights_AdjGo 0022  
               __size_of_setRFSW_Control 0090                         ??_setRFSW_Status 0023  
                              ??_INT_Set 0020                  ??_Switch_Initialization 0025  
                   __end_of_getTemp_Safe 193E                        i1RfPointSelect@rf 0072  
                   ??_setRF_DimmerLights 005E                                   ?_getAD 0020  
                            _DlyOff_Main 1717                                   _ADCON0 009D  
                                 _ADCON1 009E                                ??_RF_Main 0068  
                                 _ADRESH 009C                                   _ADRESL 009B  
                      ?_getPowerFault_AD 0071                           setRF_Enable@rf 0023  
                       __end_of___awtoft 1D1E                                   _ANSELA 018C  
                                 _ANSELB 018D                                   _ANSELC 018E  
                       __end_of___ftpack 0863                                   _IOCBF2 1CB2  
                _setDimmerLights_Trigger 1A94                                   i1l1651 1C40  
                                 i1l1646 0382                                   i1l7601 1D7E  
                                 i1l7703 022F                                   i1l7721 0279  
                                 i1l7625 00AA                                   i1l7723 027F  
                                 i1l7643 00F4                                   i1l7651 0113  
                                 i1l7661 0146                                   i1l7645 00FA  
                                 i1l7751 0300                                   i1l7735 02B4  
                                 i1l7743 02DF                                   i1l7727 0292  
                                 i1l7671 0175                                   i1l7729 0298  
                                 i1l7673 017B                                   i1l7657 012F  
                                 i1l7665 015A                                   i1l7649 010D  
                                 i1l7681 01A9                                   i1l7739 02CB  
                                 i1l7749 02FA                                   i1l7759 032E  
                                 i1l7767 0362                                   i1l7689 01DD  
                                 _FVRCON 0117                                   _PMADRH 0192  
                                 _PMADRL 0191                                   _PMDATH 0194  
                                 _PMDATL 0193                                   _PMCON2 0196  
                                 u711_25 0358                       ??_getPowerFault_AD 0024  
                                 u712_25 0374                                   _OSCCON 0099  
                                 u675_25 008E                                   u692_25 01D3  
                                 _TMR0IE 005D                                   _TMR0IF 005A  
                                 u694_25 0213                                   _IO_Set 1C19  
                     DelayTime_1us@count 0020                               _VarProduct 01A0  
                  _Dimmer_Initialization 1929           __size_of_CC2500_PowerOnInitial 0015  
          __end_of_CC2500_PowerOnInitial 1B48                                   _Dimmer 00B8  
                                 _DlySw1 00CC                                   _DlySw2 00D1  
             __end_of_Mcu_Initialization 1BB6                      __end_of_Buzzer_Main 0CC4  
                                 _Memory 006D                                   _Timer0 00EE  
     __end_of_setDimmerLights_TriggerAdj 1AD4               _setDimmerLights_TriggerAdj 1AC4  
          setDimmerLights_Switch@command 0022                                   ___wmul 1C9F  
                              ??___ftadd 0044             __size_of_DelayOffPointSelect 0014  
                              ??___ftdiv 0034                    setDimmerLights@lights 0026  
                              ??___ftmul 0034                                ??___fttol 004F  
           ?_Flash_Memory_Initialization 0071                          i1_RfPointSelect 197F  
            setDimmerLights_AdjRF@lights 0060                   ??_setDimmerLights_Main 0065  
                                 _r_data 00C1                                   _s_data 00C2  
                                 _setLED 136C                         _DimmerLightsIntr 00B9  
                  ?_setSw_Initialization 0071                    setDimmerLights@status 0024  
                                 _setBuz 1789                       __size_of_Temp_Main 0003  
       ??_setDimmerLights_Initialization 0022          ?_setDimmerLights_Initialization 0071  
                  ___ftmul@f3_as_product 0039             ??_getDimmerLights_StatusFlag 0020  
               Flash_Memory_Read@address 0022                        RfSWPointSelect@sw 0021  
                       ??_setRF_RxStatus 0023                    __end_of_SwPointSelect 1B33  
                getPowerFault_AD@channel 0028                            ?_setRF_Enable 0022  
                         _setTemp_Enable 19B5                          _RfSWPointSelect 1B5D  
           __size_of_Flash_Memory_Modify 0065              __size_of_DimmerLights_Close 0018  
                __size_of_LedPointSelect 0022                      Flash_Memory_Write@i 0021  
           __size_of_Flash_Memory_Unlock 0009                               _TouchPower 1912  
                      ?_Sw_DimmerAdjFunc 0071              __size_of_CC2500_InitPATable 001F  
                    CC2500_TxData@loop_e 0025                  __end_of_getPercentValue 136C  
       __end_of_CC2500_registers_address 182F     __end_of_setPowerFault_Initialization 1AB4  
  __size_of_setPowerFault_Initialization 0010             _setPowerFault_Initialization 1AA4  
                __end_of__initialization 004D              ??_PowerFault_Initialization 0021  
                        ??_RfPointSelect 0020              setDimmerLights_AdjGo@lights 0023  
                              ?_LED_Main 0071                               ___ftadd@f1 003E  
                             ___ftadd@f2 0041                       ??_Sw_DimmerAdjFunc 0024  
                    setSw_Enable@command 0022                               ___ftdiv@f1 0031  
                             ___ftdiv@f2 002E                               ___ftdiv@f3 0039  
                      ?_Sw_DimmerOffFunc 0071                               ___awtoft@c 0028  
           ?_DimmerLights_Initialization 0071                               ___ftmul@f1 002E  
                             ___ftmul@f2 0031                            __end_of_MainT 08DC  
                             ___fttol@f1 004B                           __pcstackCOMMON 0071  
                     ??_Sw_DimmerOffFunc 0062                             __pidataBANK3 1CDC  
                          __end_of_getAD 1B9F                                ?_TMR0_ISR 0071  
                              ?_TMR0_Set 0071             __size_of_setDimmerLights_Adj 003D  
                     _LED_Initialization 19FB                ??_setControl_Lights_Table 0067  
       __size_of_DimmerLights_Exceptions 0065                         ??_DelayTimejudge 0020  
            ?_getDimmerLights_StatusFlag 0071            ??_Flash_Memory_Initialization 005D  
               __size_of_setRF_ReceiveGO 000C                         ?_setDimmerLights 0024  
                       ?_PowerFault_Main 0071                 __end_of_setDimmerReClock 1C4C  
                     __size_of_getRxData 0052                      ?_LED_Initialization 0071  
                 __end_of_setTemp_Enable 19C0                        ?_CC2500_WriteByte 0071  
                                ??_MainT 002A                           ??_setRF_Enable 0023  
                         _DimmerLights11 006B                           _DimmerLights22 006C  
                   __size_of_setLED_Main 0040                ??_setDimmerLights_Trigger 0023  
                                ??_getAD 0023                      _Temp_Initialization 18F8  
                     ??_CC2500_WriteByte 0020               ??_setPowerFault_Exceptions 002B  
           setDimmerLights_Switch@lights 0023                               __pbssBANK0 0068  
                             __pbssBANK1 00A0                               __pbssBANK2 0120  
                             __pbssBANK3 01C0                               __pbssBANK4 0220  
                            _Buzzer_Main 0C1C                        ??_setRFSW_Control 0062  
                      __end_of_Temp_Main 18FE                   ?_Dimmer_Initialization 0071  
                                ?_IO_Set 0071                               ??_LED_Main 0025  
                _DelayOff_Initialization 1945            ?_setPowerFault_Initialization 0071  
                             _getPF_Safe 1965                            ??_Switch_Main 0067  
                         DelayTime_1us@i 0022                           DelayTime_1us@j 0024  
                   ??_LED_Initialization 0025                             _DimmerLights 006A  
                      LedPointSelect@led 0021                  __end_ofi1_RfPointSelect 1989  
                     __size_of_setINT_GO 0009                   __size_of_DelayOff_Main 0008  
                   __size_of_setRF_Learn 000E                              setBuz@count 0029  
                             __pmaintext 14F8                      _CC2500_WriteCommand 1A74  
                   ?_Temp_Initialization 0071         __size_of_DimmerLightsPointSelect 0013  
                       ??_setDelayOff_GO 0025            ??_DimmerLights_Initialization 0024  
                                ?___wmul 0020                               ??_TMR0_ISR 0071  
                          ?_setTemp_Main 0071                               ??_TMR0_Set 0020  
                             __pintentry 0004                   ??_setSw_Initialization 0024  
                          ?_setSw_Enable 0071                       __size_of_setTxData 00C9  
                ?_setDimmerLights_Switch 0022                     Sw_DimmerAdjFunc@Idle 0024  
                                ?_setLED 0022                   __size_of_DelayTime_1us 0026  
                                _ADC_Set 1930                _PowerFault_Initialization 18F2  
                                ?_setBuz 0026                                ?___awtoft 0028  
                              ?___ftpack 0020                               _getTemp_AD 15CB  
           __end_of_setRF_Initialization 1945                    __size_of_getTemp_Safe 0007  
                          ?_setSw_Status 0022                       _setRFSW_AdjControl 1FC0  
                __end_of_RfSWPointSelect 1B73                        Sw_DimmerOnFunc@sw 0063  
                                _IOC_ISR 1D63                          ?_setTemp_Enable 0071  
                                _IOC_Set 1A13                     __size_of_setLog_Code 0048  
                                _INT_ISR 19D7                                  _INT_Set 1917  
                   ?_CC2500_WriteCommand 0071                        _Flash_Memory_Main 1144  
                      _Flash_Memory_Read 1C00                   __size_of_CC2500_RxData 0064  
                 __size_of_CC2500_TxData 0044                      ?_setRFSW_AdjControl 0071  
    setDimmerLights_TriggerERROR@command 0022                              setTxData@rf 0023  
                                _RF_Data 00A0                                  _RF_Main 190E  
                     ?_Flash_Memory_Main 0071                       ?_Flash_Memory_Read 0071  
        __end_of_setControl_Lights_Table 0C1C                              ?_TouchPower 0071  
                        _Sw_DimmerOnFunc 1637                          _setPercentValue 1189  
                          setLog_Code@rf 002B                         ?_getPercentValue 0071  
                                _Dimmer1 00E2             __end_of_CC2500_FrequencyCabr 19EF  
                        __size_of_IO_Set 0019                      ??_Flash_Memory_Main 0027  
                    ??_Flash_Memory_Read 0020                                  _VarLED1 00DA  
                                _VarLED2 00DE                        __end_of_getRxData 12B9  
             __end_of_setPowerFault_Main 071C                 _CC2500_registers_address 1800  
                         RF_RxDisable@rf 0024                    ??_Temp_Initialization 0021  
              __size_of_MainT_ResetClock 001A          __end_of_setDimmerLights_Trigger 1AA4  
                                _Product 006E                     ??_setRFSW_AdjControl 0064  
                           _getTemp_Safe 1937                           ??_setTemp_Main 002D  
         __end_of_setDimmerLights_Switch 1A94                                  ___ftadd 0F0A  
                         ??_setSw_Enable 0022                                  ___ftdiv 0CC4  
                        __size_of___wmul 001E                                  ___ftmul 0D6D  
                                ___fttol 0957                      __end_of_Switch_Main 1965  
                ??_Buzzer_Initialization 0020                 ??_setOverTemp_Exceptions 002B  
                             ??___awtoft 002B                               ??___ftpack 0025  
                        __size_of_setLED 005E                     setRFSW_AdjControl@sw 0066  
                ??_setDimmerLights_ERROR 0024                          __size_of_setBuz 0077  
                         ??_setSw_Status 0023                                  __ptext1 15CB  
                                __ptext2 103B                                  __ptext3 1B89  
                                __ptext4 18FB                                  __ptext5 04F7  
                                __ptext6 10BE                                  __ptext7 1965  
                                __ptext8 18F8                                  __ptext9 19C0  
                ??_setDimmerLights_AdjRF 005F                  ??_setDimmerLights_AdjGo 0023  
              __size_of_CC2500_SIDLEMode 0004                      Sw_DimmerOnFunc@Idle 0062  
                           __size_of_ISR 0012                __end_of_Flash_Memory_Main 1189  
              __end_of_Flash_Memory_Read 1C19                               _setRF_Main 0A67  
                          _DelayOff_Main 194D                        _DimmerLights_Main 19AA  
                      __end_of_setINT_GO 197F           __size_of_DlyOff_Initialization 000B  
                  ??_CC2500_WriteCommand 0022            __end_of_DlyOff_Initialization 199F  
                      ??_setRF_ReceiveGO 0074               __end_of_CC2500_ClearRXFIFO 1902  
               ??_setTemp_Initialization 0020               __end_of_CC2500_ClearTXFIFO 1906  
          DimmerLightsPointSelect@lights 0021                             ?_DlyOff_Main 0071  
                     ?_DimmerLights_Main 0071                           _LedPointSelect 1D1E  
                    _DelayOffPointSelect 1B0B                                  clrloop0 1924  
         __size_of_Switch_Initialization 000D            __end_of_Switch_Initialization 1A3A  
                   end_of_initialization 004D                ??_DelayOff_Initialization 0023  
                      _CC2500_InitSetREG 1DD5                            _DelayTime_1us 1D88  
                      __end_of_setTxData 07E5               __end_of_Flash_Memory_Write 1EDE  
                                init_ram 191D                       ?_CC2500_InitSetREG 0071  
                    ??_DimmerLights_Main 0067                     Flash_Memory_Read@ret 0023  
                                initloop 191E                               _setSw_Main 0393  
                  CC2500_ReadByte@loop_b 0021                        _CC2500_ReadStatus 07E5  
                            ?_getPF_Safe 0071                     Flash_Memory_Modify@i 0026  
                  _setLED_Initialization 1AD4                            _CC2500_Enable 0380  
                       ?i1_RfPointSelect 0071                       ?_CC2500_ReadStatus 0071  
                       setRFSW_Status@sw 0023            __size_of_MainT_Initialization 0013  
               __size_of_CC2500_ReadByte 001D                            _CC2500_RxData 13CA  
                          _CC2500_TxData 1100                      ??_CC2500_InitSetREG 0025  
                   __end_of_setRF_Enable 1E29           ??_setPowerFault_Initialization 0020  
            ?_setDimmerLights_TriggerAdj 0022                __size_of_getPowerFault_AD 0041  
          __size_of_Flash_Memory_Erasing 000C                     ?_DelayOffPointSelect 0071  
                    _Flash_Memory_Modify 142E                  _DimmerLights_Exceptions 1493  
                           __pstringtext 1800                      _Flash_Memory_Unlock 196D  
                    ??_CC2500_ReadStatus 0022                   setRF_Initialization@rf 0071  
       getDimmerLights_StatusFlag@Status 0021                  CC2500_InitSetREG@loop_c 0028  
                            ?_getTemp_AD 0071                      __size_of_TouchPower 0005  
               setLED_Initialization@led 0024                   setSw_Initialization@sw 0024  
              __end_of_DimmerLights_Main 19B5                       _Mcu_Initialization 1B9F  
               __size_of_CC2500_PowerRST 0030                           ?_DelayOff_Main 0071  
                       ?_RfSWPointSelect 0071                          _setSw_Main$4153 00EA  
                        _setSw_Main$4154 00EB                         __CFG_FOSC$INTOSC 0000  
                 __end_of_LedPointSelect 1D40                  __end_of_Sw_DimmerOnFunc 16A6  
                __end_of_setPercentValue 11CF                 __size_of_CC2500_WriteREG 0019  
              __end_of_CC2500_InitSetREG 1DFF                      ?_Mcu_Initialization 0071  
       __end_of_setPowerFault_Exceptions 103B                     ?_Flash_Memory_Modify 0071  
            __size_of_setRF_DimmerLights 006B                           ?_DelayTime_1us 0020  
                    _setDimmerLights_Adj 1F43                     ?_Flash_Memory_Unlock 0071  
              __end_of_CC2500_ReadStatus 0800                            ?_RF_RxDisable 0071  
                            ___ftdiv@exp 003C                           __end_of_IO_Set 1C32  
                   _setRF_Initialization 193E                              _Switch_Main 195D  
                      __size_of_LED_Main 000C                           ?_CC2500_RxData 0071  
                         ?_CC2500_TxData 0071                  _DimmerLightsPointSelect 1AE5  
                            ___ftmul@exp 0038                    _CC2500_PowerOnInitial 1B33  
                   ??_Mcu_Initialization 0021                    ??_DelayOffPointSelect 0020  
                   ?_setDimmerLights_Adj 0062                __size_of_Sw_DimmerAdjFunc 0042  
                   setRF_DimmerLights@on 005D                           __end_of___wmul 1CBD  
                           setRF_Main@rf 00EC                        __size_of_TMR0_ISR 0342  
        __size_of_setOverTemp_Exceptions 0042                        __size_of_TMR0_Set 000D  
          __size_of_setDimmerLights_Main 007B                           __end_of_setLED 13CA  
                         __end_of_setBuz 1800          _getDimmerLights_StatusFlag$1623 0022  
                   _CC2500_FrequencyCabr 19E3                __size_of_Sw_DimmerOffFunc 0071  
             __size_of_Flash_Memory_Main 0045               __size_of_Flash_Memory_Read 0019  
                            ?_setRF_Main 0071                          _setRFSW_Control 0AF2  
                    __size_of_getPF_Safe 0008                        ?_setDimmerReClock 0071  
                    start_initialization 0018                        _setRF_DimmerValue 1F0E  
                        ?_LedPointSelect 0071               __end_of_DimmerLights_Close 1BCE  
                            __end_of_ISR 0016                    ??_Flash_Memory_Modify 0024  
     __size_of_PowerFault_Initialization 0003                       ??_setDimmerReClock 0071  
                     ?_setRF_DimmerValue 0071               __end_of_CC2500_InitPATable 1CDC  
        __size_of_setTemp_Initialization 000B                    ??_Flash_Memory_Unlock 0020  
                ??_Dimmer_Initialization 0020                     __end_of_setTemp_Main 0614  
                         ??_RF_RxDisable 0024                     __end_of_setSw_Enable 1C82  
                        RfPointSelect@rf 0021                             ?_Buzzer_Main 0071  
                               ??_IO_Set 0020                                _VarErrLED 00D6  
                            ?_setSw_Main 0071                      ??_setRF_DimmerValue 0061  
                    __size_of_getTemp_AD 006C                   ?_setLED_Initialization 0071  
                   __end_of_setSw_Status 1A74                       Sw_DimmerAdjFunc@sw 0025  
                  ?_setRF_Initialization 0071                                _VarMemory 0220  
                __size_of_setRFSW_Status 000F                    __end_of_RfPointSelect 19AA  
              __size_of_CC2500_WriteByte 0019                                _VarTimer0 00C3  
                              _Temp_Main 18FB                ??_DimmerLights_Exceptions 002A  
          setOverTemp_Exceptions@command 002C                         _MainT_ResetClock 1C4C  
                              _Rx_Length 00BD                  setRF_DimmerValue@lights 0063  
                  ??_setDimmerLights_Adj 0063                                 ??___wmul 0024  
                 __size_of_SwPointSelect 0014                                _Tx_Length 00BF  
                            __pdataBANK3 01A0                                 ??_setLED 0023  
                       ??_setTemp_Enable 0020                                 ?_ADC_Set 0071  
                               ??_setBuz 0028                          ??_DelayOff_Main 0065  
                      ??_CC2500_ReadByte 0020                         _CC2500_SIDLEMode 1906  
             __size_of_DimmerLights_Main 000B                __end_of_setRF_DimmerValue 1F43  
                  ?_CC2500_FrequencyCabr 0071                         setINT_GO@command 0020  
                          ??_setLED_Main 0022                        __size_of___awtoft 0022  
                      __size_of___ftpack 0061                                 ?_IOC_ISR 0071  
                        _setRF_Main$3833 00ED                              __pbssCOMMON 0076  
                               ?_IOC_Set 0071                                ___latbits 0003  
                  setTemp_Enable@command 0020                                 ?_INT_ISR 0071  
                    setRF_Enable@command 0022                         ?_Sw_DimmerOnFunc 0071  
                          __pcstackBANK0 0020                            __pcstackBANK1 00EA  
                               ?_INT_Set 0071                         ?_setPercentValue 0071  
                        ??_DelayTime_1us 0022               __size_of_CC2500_InitSetREG 002A  
               __size_of_setDimmerLights 0089                            DlyOff_Main@sw 0064  
                      ??_CC2500_PowerRST 0026                                 ?_RF_Main 0071  
                           ??_TouchPower 0020                 __size_of_PowerFault_Main 0003  
                   __size_of_DlyOff_Main 0072               __size_of_CC2500_ReadStatus 001B  
                 _setOverTemp_Exceptions 10BE                            ??_setRF_Learn 0023  
                      ??_CC2500_WriteREG 0023                            _DimmerLights1 0120  
                          _DimmerLights2 012E                    CC2500_WriteREG@w_addr 0024  
                  setDelayOff_GO@command 0023                ??_DimmerLightsPointSelect 0020  
                  __size_of_setRF_Enable 002A                          ??_CC2500_RxData 0024  
                __size_of_setRF_RxStatus 000E                          ??_CC2500_TxData 0024  
                              __pnvBANK0 006D                                __pnvBANK1 00EE  
            __size_of_LED_Initialization 000C                   ?_CC2500_PowerOnInitial 0071  
                             ?_Temp_Main 0071                      __size_of_setRF_Main 008B  
                  DelayOffPointSelect@sw 0021                               setBuz@time 0026  
                    setDelayOff_GO@value 0024                 ?_setControl_Lights_Table 0071  
                 _setTemp_Initialization 19C0                         _getPowerFault_AD 103B  
      __size_of_setPowerFault_Exceptions 003A      __end_of_Flash_Memory_Initialization 0F0A  
            _Flash_Memory_Initialization 0E21                ?_setPowerFault_Exceptions 0071  
                              __ptext100 1B5D                                __ptext101 1A94  
                              __ptext110 1906                                __ptext102 1A84  
                              __ptext111 1EDE                                __ptext103 1AE5  
                              __ptext120 1BCE                                __ptext112 1DD5  
                              __ptext104 1789                                __ptext121 0C1C  
                              __ptext113 1CBD                                __ptext105 1C9F  
                              __ptext122 1989                                __ptext114 1BE7  
                              __ptext106 1945                                __ptext115 19E3  
                              __ptext107 1994                                __ptext124 0051  
                              __ptext116 1D88                                __ptext108 1B0B  
                              __ptext125 1D63                                __ptext117 1902  
                              __ptext109 1B33                                 ?___ftadd 003E  
                              __ptext126 1C32                                __ptext118 18FE  
                              __ptext127 19D7                                __ptext119 1A74  
                              __ptext128 19CB                                __ptext129 197F  
                              _getRxData 1267                                 ?___ftdiv 002E  
                               ?___ftmul 002E                                 ?___fttol 004B  
                __end_of_setRFSW_Control 0B82                          _setRF_ReceiveGO 19CB  
          __size_of_setSw_Initialization 0008           __size_of_Buzzer_Initialization 000B  
          __end_of_Buzzer_Initialization 1994                         getPercentValue@i 005C  
                       setPercentValue@i 005A                            ??_setLog_Code 002A  
                     __end_of_TouchPower 1917                       _setPowerFault_Main 0614  
     setDimmerLights_TriggerERROR@lights 0023           __size_of_setDimmerLights_ERROR 0050  
               ?_setDimmerLights_Trigger 0022                          DelayTimejudge@i 0021  
                    __size_of_setSw_Main 0164            __end_of_setDimmerLights_ERROR 1267  
           CC2500_ReadStatus@status_addr 0023           __size_of_setDimmerLights_AdjRF 0023  
         __size_of_setDimmerLights_AdjGo 0010            __end_of_setDimmerLights_AdjRF 1D63  
          __end_of_setDimmerLights_AdjGo 1AC4                   CC2500_WriteByte@loop_a 0021  
                         __size_of_MainT 0079                                _r_address 00C0  
           __end_of_CC2500_patable_vaule 1866                      ?_setPowerFault_Main 0071  
                         __size_of_getAD 0016                             _setRF_Enable 1DFF  
                __size_of_DelayTimejudge 002E                            _SwPointSelect 1B1F  
                     Sw_DimmerOffFunc@sw 0064                                _setINT_GO 1976  
                    __end_of_setLED_Main 1FC0                        MainT_ResetClock@i 0021  
                 ??_setRF_Initialization 0020              __end_of_Temp_Initialization 18FB  
                      _CC2500_rfSettings 182F                           ___wmul@product 0024  
                               _LED_Main 1A07                             ??_getPF_Safe 0020  
                        SwPointSelect@sw 0021                                clear_ram0 1923  
               CC2500_InitPATable@loop_d 0027                                _setTxData 071C  
    __end_of_DimmerLights_Initialization 1B5D              _DimmerLights_Initialization 1B48  
                     _CC2500_ClearRXFIFO 18FE                       _CC2500_ClearTXFIFO 1902  
         setDimmerLights_Trigger@command 0022                 setRF_DimmerLights@lights 0061  
                               _GO_nDONE 04E9                      __end_of_setRF_Learn 1A56  
                   ??_setPowerFault_Main 002D                 __size_of_getPercentValue 005B  
               setRF_DimmerLights@status 0060                   setRF_ReceiveGO@command 0073  
            __size_of_setRFSW_AdjControl 0040                       _Flash_Memory_Write 1EAF  
                             ?_getRxData 0071                                 _TMR0_ISR 0051  
                 CC2500_InitSetREG@temp1 0026                   CC2500_InitSetREG@temp2 0027  
                      setRF_ReceiveGO@rf 0074                                 _TMR0_Set 1A20  
                       _Sw_DimmerAdjFunc 107C                      ?_CC2500_ClearRXFIFO 0071  
                    ?_CC2500_ClearTXFIFO 0071        setDimmerLights_TriggerAdj@command 0022  
                               _RF_Count 00B5                     __end_of_RF_RxDisable 1DD5  
                           ??_getTemp_AD 0024              __end_of_CC2500_WriteCommand 1A84  
                 ??_CC2500_FrequencyCabr 0026                  DlyOff_Initialization@sw 0022  
                       __size_of_ADC_Set 0007                        ___wmul@multiplier 0020  
             __size_of_setRF_DimmerValue 0035                      ?_Flash_Memory_Write 0071  
                       _Sw_DimmerOffFunc 16A6                    __size_of_setTemp_Main 011D  
           __end_of_MainT_Initialization 1B0B                  __size_of_setDelayOff_GO 0058  
                  __size_of_setSw_Enable 001C                                 _DelayOff 0069  
                           setSw_Main@sw 00EC                       __end_of_getPF_Safe 196D  
                       __size_of_IOC_ISR 0025                         __size_of_IOC_Set 000D  
           __end_of_Flash_Memory_Erasing 19FB                           ?_SwPointSelect 0071  
                            getAD@adcon0 0023                              getAD@adcon1 0020  
                       __size_of_INT_ISR 000C                           setLED_Main@led 0024  
                       __size_of_INT_Set 0006                      __end_of_setLog_Code 1217  
                  _DlyOff_Initialization 1994                    __size_of_setSw_Status 000F  
                             ?_setINT_GO 0071                     ??_CC2500_ClearRXFIFO 0024  
                   ??_CC2500_ClearTXFIFO 0024                __end_of_CC2500_rfSettings 185E  
                       __size_of_RF_Main 0004                    _Switch_Initialization 1A2D  
                   ??_Flash_Memory_Write 0020                        ??_setDimmerLights 0025  
                         _setRFSW_Status 1A56                     __size_of_Buzzer_Main 00A8  
                     __end_of_getTemp_AD 1637                               ?_setTxData 0071  
                           ?_Switch_Main 0071                         _CC2500_WriteByte 1BCE  
                               _VarTMain 01C0             Flash_Memory_Initialization@i 005E  
                __end_of_setRF_ReceiveGO 19D7                              ??_Temp_Main 0030  
                      ??_PowerFault_Main 002F                        setRFSW_Control@sw 0063  
                              setLED@led 0023                                 _RxStatus 0383  
   __end_of_setDimmerLights_TriggerERROR 1E54    __size_of_setDimmerLights_TriggerERROR 002B  
           _setDimmerLights_TriggerERROR 1E29                                 _TxStatus 0386  
                           _setTemp_Main 04F7                         __size_of___ftadd 00F6  
                       ?_setRFSW_Control 0071                         __size_of___ftdiv 00A9  
                           _setSw_Enable 1C66                         __size_of___ftmul 00B4  
                       __size_of___fttol 0087                 __size_ofi1_RfPointSelect 000A  
                               ___awtoft 1CFC                         ??_LedPointSelect 0020  
                               ___ftpack 0802                             _setSw_Status 1A65  
                      getTemp_AD@channel 0028                             ??_setRF_Main 00EB  
                   CC2500_WriteREG@value 0022                              _setLED_Main 1F80  
                  setRFSW_Status@command 0022               __end_of_setRF_DimmerLights 15CB  
               ?_DelayOff_Initialization 0071                 __end_of_MainT_ResetClock 1C66  
                       setDelayOff_GO@sw 0027                                 __ptext10 195D  
                               __ptext11 0393                                 __ptext20 1912  
                               __ptext12 1A48                                 __ptext21 190E  
                               __ptext13 1637                                 __ptext30 1F0E  
                               __ptext22 0A67                                 __ptext14 16A6  
                               __ptext31 1D40                                 __ptext23 1267  
                               __ptext15 107C                                 __ptext40 1C82  
                               __ptext32 1311                                 __ptext24 11CF  
                               __ptext16 1AC4                                 __ptext41 190A  
                               __ptext33 0D6D                                 __ptext25 0B82  
                               __ptext17 1AB4                                 __ptext50 18F2  
                               __ptext42 193E                                 __ptext34 0F0A  
                               __ptext26 0AF2                                 __ptext18 1A2D  
                               __ptext51 1AA4                                 __ptext43 18F5  
                               __ptext35 1DAE                                 __ptext27 12B9  
                               __ptext19 1955                                 __ptext60 0863  
                               __ptext52 1B9F                                 __ptext44 0614  
                               __ptext36 1100                                 __ptext28 1E81  
                               __ptext61 19B5                                 __ptext53 1A20  
                               __ptext45 1001                                 __ptext37 13CA  
                               __ptext29 1FC0                                 __ptext70 142E  
                               __ptext62 1C66                                 __ptext54 1C19  
                               __ptext46 1493                                 __ptext38 1A3A  
                               __ptext71 19EF                                 __ptext63 1DFF  
                               __ptext55 1A13                                 __ptext47 1E29  
                               __ptext39 07E5                                 __ptext80 136C  
                               __ptext72 0E21                                 __ptext64 1976  
                               __ptext56 1917                                 __ptext48 1217  
                               __ptext81 1D1E                                 __ptext73 1EAF  
                               __ptext65 1A07                                 __ptext57 1930  
                               __ptext49 1937                                 __ptext90 199F  
                               __ptext82 1BB6                                 __ptext74 196D  
                               __ptext66 1F80                                 __ptext58 1C4C  
                               __ptext91 1A65                                 __ptext83 1B73  
                               __ptext75 1C00                                 __ptext67 19FB  
                               __ptext59 1AF8                                 __ptext92 1B1F  
                               __ptext84 1B48                                 __ptext76 19AA  
                               __ptext68 1AD4                                 __ptext93 1560  
                               __ptext85 1E54                                 __ptext77 08DC  
                               __ptext69 1144                                 __ptext94 1189  
                               __ptext86 1929                                 __ptext78 1F43  
                               __ptext95 0957                                 __ptext87 194D  
                               __ptext79 09DE                                 __ptext96 0CC4  
                               __ptext88 1717                                 __ptext97 1CFC  
                               __ptext89 071C                                 __ptext98 0802  
                               __ptext99 1A56                  ??_setLED_Initialization 0024  
               __size_of_RfSWPointSelect 0016           __size_of_Dimmer_Initialization 0007  
                 __end_of_setRFSW_Status 1A65            __end_of_Dimmer_Initialization 1930  
           __end_of_setDimmerLights_Main 0957              setDimmerLights_ERROR@lights 0025  
                           ??_setSw_Main 0065                            setLED@command 0022  
                          __size_of_main 0068                              _setRF_Learn 1A48  
               __end_of_CC2500_SIDLEMode 190A                           _setRF_RxStatus 1A3A  
             setDimmerLights_Main@lights 0066              __end_of_DelayOffPointSelect 1B1F  
             CC2500_WriteCommand@command 0023                       _DimmerLights_Close 1BB6  
               ??_setDimmerLights_Switch 0023                __size_of_setDimmerReClock 001A  
                        _CC2500_ReadByte 1C82                       _CC2500_InitPATable 1CBD  
    __size_of_getDimmerLights_StatusFlag 0016            setDimmerLights_Trigger@lights 0023  
                     __end_of_setRF_Main 0AF2              __size_of_Mcu_Initialization 0017  
                   _CC2500_patable_vaule 185E                              ??_getRxData 0068  
                    ?_DimmerLights_Close 0071         setDimmerLights_TriggerAdj@lights 0023  
          ?_setDimmerLights_TriggerERROR 0022                      ?_CC2500_InitPATable 0071  
                        _CC2500_PowerRST 1EDE              __end_of_Flash_Memory_Modify 1493  
                      ??_getPercentValue 0059                              _setLog_Code 11CF  
                  setRF_RxStatus@command 0022              __end_of_Flash_Memory_Unlock 1976  
                        ??_SwPointSelect 0020                          _CC2500_WriteREG 1BE7  
                     __end_of_setSw_Main 04F7                            _Transceive_GO 0384  
                          _Transceive_OK 0385                   ?_DlyOff_Initialization 0071  
                ?_setOverTemp_Exceptions 0071                           _DelayTimejudge 1E81  
                            pic14e$flags 007E                 __end_of_getPowerFault_AD 107C  
                   ??_DimmerLights_Close 0023                              ??_setINT_GO 0020  
                               intlevel1 0000                     ??_CC2500_InitPATable 0025  
                 ?_Switch_Initialization 0071                   __end_of_setRF_RxStatus 1A48  
                        ?_setRFSW_Status 0022                  ??_CC2500_PowerOnInitial 0029  
 __end_of_setDimmerLights_Initialization 1E81  __size_of_setDimmerLights_Initialization 002D  
         _setDimmerLights_Initialization 1E54              __end_of_setDimmerLights_Adj 1F80  
                ?_setTemp_Initialization 0071                              ??_setTxData 0022  
                       ?_setRF_ReceiveGO 0073                   CC2500_InitPATable@temp 0026  
                   _MainT_Initialization 1AF8                    __size_of_RF_RxDisable 0027  
                      _RF_Initialization 190A                            ?_getTemp_Safe 0071  
                   _Flash_Memory_Erasing 19EF                       ?_RF_Initialization 0071  
                             _SPI0Buffer 00BE          __end_of_DelayOff_Initialization 194D  
                             _OPTION_REG 0095                    __end_of_DelayOff_Main 1955  
                    ??_RF_Initialization 0021                              getRxData@rf 00EA  
                         _setDelayOff_GO 12B9         __size_of_setControl_Lights_Table 009A  
                 __end_of_DelayTimejudge 1EAF           __end_of_setOverTemp_Exceptions 1100  
                 __size_of_RfPointSelect 000B                        ??i1_RfPointSelect 0071  
   __size_of_Flash_Memory_Initialization 00E9                            ??_DlyOff_Main 0062  
                  __end_of_DelayTime_1us 1DAE                 __end_of_Sw_DimmerAdjFunc 10BE  
                __end_of_CC2500_ReadByte 1C9F             __end_of_setSw_Initialization 195D  
                        ?_setRF_RxStatus 0022                     getPercentValue@value 005B  
                           _RF_RxDisable 1DAE               ?_PowerFault_Initialization 0071  
             __end_of_LED_Initialization 1A07         __size_of_setDimmerLights_Trigger 0010  
         __end_of_setTemp_Initialization 19CB                 __size_of_Sw_DimmerOnFunc 006F  
               ?_DimmerLights_Exceptions 0071                 __size_of_setPercentValue 0046  
                   setPercentValue@value 0059                __end_of_RF_Initialization 190E  
               __end_of_Sw_DimmerOffFunc 1717          __size_of_setDimmerLights_Switch 0010  
                      ??_RfSWPointSelect 0020                    ?_MainT_Initialization 0071  
                       setRF_RxStatus@rf 0023                    __end_of_CC2500_RxData 142E  
                  __end_of_CC2500_TxData 1144                           ??_getTemp_Safe 0020  
                    setSw_Status@command 0022                  __end_of_CC2500_PowerRST 1F0E  
