

Microchip Technology PIC LITE Macro Assembler V1.32 build 58300 
                                                                                               Tue Sep 30 16:52:32 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	16F1518
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK3,global,class=CODE,delta=2
     5                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1
    10                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    14                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    15                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    16                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    17                           	psect	clrtext,global,class=CODE,delta=2
    18                           	psect	inittext,global,class=CODE,delta=2
    19                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    20                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    21                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    22                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    23                           	psect	text1,local,class=CODE,merge=1,delta=2
    24                           	psect	text2,local,class=CODE,merge=1,delta=2
    25                           	psect	text3,local,class=CODE,merge=1,delta=2
    26                           	psect	text4,local,class=CODE,merge=1,delta=2
    27                           	psect	text5,local,class=CODE,merge=1,delta=2
    28                           	psect	text6,local,class=CODE,merge=1,delta=2
    29                           	psect	text7,local,class=CODE,merge=1,delta=2
    30                           	psect	text8,local,class=CODE,merge=1,delta=2
    31                           	psect	text9,local,class=CODE,merge=1,delta=2
    32                           	psect	text10,local,class=CODE,merge=1,delta=2
    33                           	psect	text11,local,class=CODE,merge=1,delta=2
    34                           	psect	text12,local,class=CODE,merge=1,delta=2
    35                           	psect	text13,local,class=CODE,merge=1,delta=2
    36                           	psect	text14,local,class=CODE,merge=1,delta=2
    37                           	psect	text15,local,class=CODE,merge=1,delta=2
    38                           	psect	text16,local,class=CODE,merge=1,delta=2
    39                           	psect	text17,local,class=CODE,merge=1,delta=2
    40                           	psect	text18,local,class=CODE,merge=1,delta=2
    41                           	psect	text19,local,class=CODE,merge=1,delta=2
    42                           	psect	text20,local,class=CODE,merge=1,delta=2
    43                           	psect	text21,local,class=CODE,merge=1,delta=2
    44                           	psect	text22,local,class=CODE,merge=1,delta=2
    45                           	psect	text23,local,class=CODE,merge=1,delta=2
    46                           	psect	text24,local,class=CODE,merge=1,delta=2
    47                           	psect	text25,local,class=CODE,merge=1,delta=2
    48                           	psect	text26,local,class=CODE,merge=1,delta=2
    49                           	psect	text27,local,class=CODE,merge=1,delta=2
    50                           	psect	text28,local,class=CODE,merge=1,delta=2
    51                           	psect	text29,local,class=CODE,merge=1,delta=2
    52                           	psect	text30,local,class=CODE,merge=1,delta=2
    53                           	psect	text31,local,class=CODE,merge=1,delta=2
    54                           	psect	text32,local,class=CODE,merge=1,delta=2
    55                           	psect	text33,local,class=CODE,merge=1,delta=2
    56                           	psect	text34,local,class=CODE,merge=1,delta=2
    57                           	psect	text35,local,class=CODE,merge=1,delta=2
    58                           	psect	text36,local,class=CODE,merge=1,delta=2
    59                           	psect	text37,local,class=CODE,merge=1,delta=2
    60                           	psect	text38,local,class=CODE,merge=1,delta=2
    61                           	psect	text39,local,class=CODE,merge=1,delta=2
    62                           	psect	text40,local,class=CODE,merge=1,delta=2
    63                           	psect	text41,local,class=CODE,merge=1,delta=2
    64                           	psect	text42,local,class=CODE,merge=1,delta=2
    65                           	psect	text43,local,class=CODE,merge=1,delta=2
    66                           	psect	text44,local,class=CODE,merge=1,delta=2
    67                           	psect	text45,local,class=CODE,merge=1,delta=2
    68                           	psect	text46,local,class=CODE,merge=1,delta=2
    69                           	psect	text47,local,class=CODE,merge=1,delta=2
    70                           	psect	text48,local,class=CODE,merge=1,delta=2
    71                           	psect	text49,local,class=CODE,merge=1,delta=2
    72                           	psect	text50,local,class=CODE,merge=1,delta=2
    73                           	psect	text51,local,class=CODE,merge=1,delta=2
    74                           	psect	text52,local,class=CODE,merge=1,delta=2
    75                           	psect	text53,local,class=CODE,merge=1,delta=2
    76                           	psect	text54,local,class=CODE,merge=1,delta=2
    77                           	psect	text55,local,class=CODE,merge=1,delta=2
    78                           	psect	text56,local,class=CODE,merge=1,delta=2
    79                           	psect	text57,local,class=CODE,merge=1,delta=2
    80                           	psect	text58,local,class=CODE,merge=1,delta=2
    81                           	psect	text59,local,class=CODE,merge=1,delta=2
    82                           	psect	text60,local,class=CODE,merge=1,delta=2
    83                           	psect	text61,local,class=CODE,merge=1,delta=2
    84                           	psect	text62,local,class=CODE,merge=1,delta=2
    85                           	psect	text63,local,class=CODE,merge=1,delta=2
    86                           	psect	text64,local,class=CODE,merge=1,delta=2
    87                           	psect	text65,local,class=CODE,merge=1,delta=2
    88                           	psect	text66,local,class=CODE,merge=1,delta=2
    89                           	psect	text67,local,class=CODE,merge=1,delta=2
    90                           	psect	text68,local,class=CODE,merge=1,delta=2
    91                           	psect	text69,local,class=CODE,merge=1,delta=2
    92                           	psect	text70,local,class=CODE,merge=1,delta=2
    93                           	psect	text71,local,class=CODE,merge=1,delta=2
    94                           	psect	text72,local,class=CODE,merge=1,delta=2
    95                           	psect	text73,local,class=CODE,merge=1,delta=2
    96                           	psect	text74,local,class=CODE,merge=1,delta=2
    97                           	psect	text75,local,class=CODE,merge=1,delta=2
    98                           	psect	text76,local,class=CODE,merge=1,delta=2
    99                           	psect	text77,local,class=CODE,merge=1,delta=2
   100                           	psect	text78,local,class=CODE,merge=1,delta=2
   101                           	psect	text79,local,class=CODE,merge=1,delta=2
   102                           	psect	text80,local,class=CODE,merge=1,delta=2
   103                           	psect	text81,local,class=CODE,merge=1,delta=2
   104                           	psect	text82,local,class=CODE,merge=1,delta=2
   105                           	psect	text83,local,class=CODE,merge=1,delta=2
   106                           	psect	text84,local,class=CODE,merge=1,delta=2
   107                           	psect	text85,local,class=CODE,merge=1,delta=2
   108                           	psect	text86,local,class=CODE,merge=1,delta=2
   109                           	psect	text87,local,class=CODE,merge=1,delta=2
   110                           	psect	text88,local,class=CODE,merge=1,delta=2
   111                           	psect	text89,local,class=CODE,merge=1,delta=2
   112                           	psect	text90,local,class=CODE,merge=1,delta=2
   113                           	psect	text91,local,class=CODE,merge=1,delta=2
   114                           	psect	text92,local,class=CODE,merge=1,delta=2
   115                           	psect	text93,local,class=CODE,merge=1,delta=2
   116                           	psect	text94,local,class=CODE,merge=1,delta=2
   117                           	psect	text95,local,class=CODE,merge=1,delta=2
   118                           	psect	text96,local,class=CODE,merge=1,delta=2
   119                           	psect	text97,local,class=CODE,merge=1,delta=2
   120                           	psect	text98,local,class=CODE,merge=1,delta=2
   121                           	psect	text99,local,class=CODE,merge=1,delta=2
   122                           	psect	text100,local,class=CODE,merge=1,delta=2
   123                           	psect	text101,local,class=CODE,merge=1,delta=2
   124                           	psect	text102,local,class=CODE,merge=1,delta=2
   125                           	psect	text103,local,class=CODE,merge=1,delta=2
   126                           	psect	text104,local,class=CODE,merge=1,delta=2
   127                           	psect	text105,local,class=CODE,merge=1,delta=2
   128                           	psect	text106,local,class=CODE,merge=1,delta=2
   129                           	psect	text107,local,class=CODE,merge=1,delta=2
   130                           	psect	text108,local,class=CODE,merge=1,delta=2
   131                           	psect	text109,local,class=CODE,merge=1,delta=2
   132                           	psect	text110,local,class=CODE,merge=1,delta=2
   133                           	psect	text111,local,class=CODE,merge=1,delta=2
   134                           	psect	text112,local,class=CODE,merge=1,delta=2
   135                           	psect	text113,local,class=CODE,merge=1,delta=2
   136                           	psect	text114,local,class=CODE,merge=1,delta=2
   137                           	psect	text115,local,class=CODE,merge=1,delta=2
   138                           	psect	text116,local,class=CODE,merge=1,delta=2
   139                           	psect	text117,local,class=CODE,merge=1,delta=2
   140                           	psect	text118,local,class=CODE,merge=1,delta=2
   141                           	psect	text119,local,class=CODE,merge=1,delta=2
   142                           	psect	text120,local,class=CODE,merge=1,delta=2
   143                           	psect	text121,local,class=CODE,merge=1,delta=2
   144                           	psect	text122,local,class=CODE,merge=1,delta=2
   145                           	psect	text123,local,class=CODE,merge=1,delta=2
   146                           	psect	text124,local,class=CODE,merge=1,delta=2
   147                           	psect	intentry,global,class=CODE,delta=2
   148                           	psect	text126,local,class=CODE,merge=1,delta=2
   149                           	psect	text127,local,class=CODE,merge=1,delta=2
   150                           	psect	text128,local,class=CODE,merge=1,delta=2
   151                           	psect	text129,local,class=CODE,merge=1,delta=2
   152                           	psect	text130,local,class=CODE,merge=1,delta=2
   153                           	psect	text131,local,class=CODE,merge=1,delta=2
   154                           	dabs	1,0x7E,2
   155  0000                     	;# 
   156  0001                     	;# 
   157  0002                     	;# 
   158  0003                     	;# 
   159  0004                     	;# 
   160  0005                     	;# 
   161  0006                     	;# 
   162  0007                     	;# 
   163  0008                     	;# 
   164  0009                     	;# 
   165  000A                     	;# 
   166  000B                     	;# 
   167  000C                     	;# 
   168  000D                     	;# 
   169  000E                     	;# 
   170  0010                     	;# 
   171  0011                     	;# 
   172  0012                     	;# 
   173  0015                     	;# 
   174  0016                     	;# 
   175  0016                     	;# 
   176  0017                     	;# 
   177  0018                     	;# 
   178  0019                     	;# 
   179  001A                     	;# 
   180  001B                     	;# 
   181  001C                     	;# 
   182  008C                     	;# 
   183  008D                     	;# 
   184  008E                     	;# 
   185  0090                     	;# 
   186  0091                     	;# 
   187  0092                     	;# 
   188  0095                     	;# 
   189  0096                     	;# 
   190  0097                     	;# 
   191  0099                     	;# 
   192  009A                     	;# 
   193  009B                     	;# 
   194  009B                     	;# 
   195  009C                     	;# 
   196  009D                     	;# 
   197  009E                     	;# 
   198  010C                     	;# 
   199  010D                     	;# 
   200  010E                     	;# 
   201  0116                     	;# 
   202  0117                     	;# 
   203  011D                     	;# 
   204  018C                     	;# 
   205  018D                     	;# 
   206  018E                     	;# 
   207  0191                     	;# 
   208  0191                     	;# 
   209  0192                     	;# 
   210  0193                     	;# 
   211  0193                     	;# 
   212  0194                     	;# 
   213  0195                     	;# 
   214  0196                     	;# 
   215  0197                     	;# 
   216  0199                     	;# 
   217  019A                     	;# 
   218  019B                     	;# 
   219  019B                     	;# 
   220  019B                     	;# 
   221  019B                     	;# 
   222  019C                     	;# 
   223  019C                     	;# 
   224  019D                     	;# 
   225  019E                     	;# 
   226  019F                     	;# 
   227  020D                     	;# 
   228  0210                     	;# 
   229  0211                     	;# 
   230  0211                     	;# 
   231  0212                     	;# 
   232  0212                     	;# 
   233  0213                     	;# 
   234  0213                     	;# 
   235  0214                     	;# 
   236  0214                     	;# 
   237  0215                     	;# 
   238  0215                     	;# 
   239  0215                     	;# 
   240  0216                     	;# 
   241  0216                     	;# 
   242  0217                     	;# 
   243  0217                     	;# 
   244  0291                     	;# 
   245  0291                     	;# 
   246  0292                     	;# 
   247  0293                     	;# 
   248  0298                     	;# 
   249  0298                     	;# 
   250  0299                     	;# 
   251  029A                     	;# 
   252  0394                     	;# 
   253  0395                     	;# 
   254  0396                     	;# 
   255  0FE4                     	;# 
   256  0FE5                     	;# 
   257  0FE6                     	;# 
   258  0FE7                     	;# 
   259  0FE8                     	;# 
   260  0FE9                     	;# 
   261  0FEA                     	;# 
   262  0FEB                     	;# 
   263  0FED                     	;# 
   264  0FEE                     	;# 
   265  0FEF                     	;# 
   266  0000                     	;# 
   267  0001                     	;# 
   268  0002                     	;# 
   269  0003                     	;# 
   270  0004                     	;# 
   271  0005                     	;# 
   272  0006                     	;# 
   273  0007                     	;# 
   274  0008                     	;# 
   275  0009                     	;# 
   276  000A                     	;# 
   277  000B                     	;# 
   278  000C                     	;# 
   279  000D                     	;# 
   280  000E                     	;# 
   281  0010                     	;# 
   282  0011                     	;# 
   283  0012                     	;# 
   284  0015                     	;# 
   285  0016                     	;# 
   286  0016                     	;# 
   287  0017                     	;# 
   288  0018                     	;# 
   289  0019                     	;# 
   290  001A                     	;# 
   291  001B                     	;# 
   292  001C                     	;# 
   293  008C                     	;# 
   294  008D                     	;# 
   295  008E                     	;# 
   296  0090                     	;# 
   297  0091                     	;# 
   298  0092                     	;# 
   299  0095                     	;# 
   300  0096                     	;# 
   301  0097                     	;# 
   302  0099                     	;# 
   303  009A                     	;# 
   304  009B                     	;# 
   305  009B                     	;# 
   306  009C                     	;# 
   307  009D                     	;# 
   308  009E                     	;# 
   309  010C                     	;# 
   310  010D                     	;# 
   311  010E                     	;# 
   312  0116                     	;# 
   313  0117                     	;# 
   314  011D                     	;# 
   315  018C                     	;# 
   316  018D                     	;# 
   317  018E                     	;# 
   318  0191                     	;# 
   319  0191                     	;# 
   320  0192                     	;# 
   321  0193                     	;# 
   322  0193                     	;# 
   323  0194                     	;# 
   324  0195                     	;# 
   325  0196                     	;# 
   326  0197                     	;# 
   327  0199                     	;# 
   328  019A                     	;# 
   329  019B                     	;# 
   330  019B                     	;# 
   331  019B                     	;# 
   332  019B                     	;# 
   333  019C                     	;# 
   334  019C                     	;# 
   335  019D                     	;# 
   336  019E                     	;# 
   337  019F                     	;# 
   338  020D                     	;# 
   339  0210                     	;# 
   340  0211                     	;# 
   341  0211                     	;# 
   342  0212                     	;# 
   343  0212                     	;# 
   344  0213                     	;# 
   345  0213                     	;# 
   346  0214                     	;# 
   347  0214                     	;# 
   348  0215                     	;# 
   349  0215                     	;# 
   350  0215                     	;# 
   351  0216                     	;# 
   352  0216                     	;# 
   353  0217                     	;# 
   354  0217                     	;# 
   355  0291                     	;# 
   356  0291                     	;# 
   357  0292                     	;# 
   358  0293                     	;# 
   359  0298                     	;# 
   360  0298                     	;# 
   361  0299                     	;# 
   362  029A                     	;# 
   363  0394                     	;# 
   364  0395                     	;# 
   365  0396                     	;# 
   366  0FE4                     	;# 
   367  0FE5                     	;# 
   368  0FE6                     	;# 
   369  0FE7                     	;# 
   370  0FE8                     	;# 
   371  0FE9                     	;# 
   372  0FEA                     	;# 
   373  0FEB                     	;# 
   374  0FED                     	;# 
   375  0FEE                     	;# 
   376  0FEF                     	;# 
   377  0000                     	;# 
   378  0001                     	;# 
   379  0002                     	;# 
   380  0003                     	;# 
   381  0004                     	;# 
   382  0005                     	;# 
   383  0006                     	;# 
   384  0007                     	;# 
   385  0008                     	;# 
   386  0009                     	;# 
   387  000A                     	;# 
   388  000B                     	;# 
   389  000C                     	;# 
   390  000D                     	;# 
   391  000E                     	;# 
   392  0010                     	;# 
   393  0011                     	;# 
   394  0012                     	;# 
   395  0015                     	;# 
   396  0016                     	;# 
   397  0016                     	;# 
   398  0017                     	;# 
   399  0018                     	;# 
   400  0019                     	;# 
   401  001A                     	;# 
   402  001B                     	;# 
   403  001C                     	;# 
   404  008C                     	;# 
   405  008D                     	;# 
   406  008E                     	;# 
   407  0090                     	;# 
   408  0091                     	;# 
   409  0092                     	;# 
   410  0095                     	;# 
   411  0096                     	;# 
   412  0097                     	;# 
   413  0099                     	;# 
   414  009A                     	;# 
   415  009B                     	;# 
   416  009B                     	;# 
   417  009C                     	;# 
   418  009D                     	;# 
   419  009E                     	;# 
   420  010C                     	;# 
   421  010D                     	;# 
   422  010E                     	;# 
   423  0116                     	;# 
   424  0117                     	;# 
   425  011D                     	;# 
   426  018C                     	;# 
   427  018D                     	;# 
   428  018E                     	;# 
   429  0191                     	;# 
   430  0191                     	;# 
   431  0192                     	;# 
   432  0193                     	;# 
   433  0193                     	;# 
   434  0194                     	;# 
   435  0195                     	;# 
   436  0196                     	;# 
   437  0197                     	;# 
   438  0199                     	;# 
   439  019A                     	;# 
   440  019B                     	;# 
   441  019B                     	;# 
   442  019B                     	;# 
   443  019B                     	;# 
   444  019C                     	;# 
   445  019C                     	;# 
   446  019D                     	;# 
   447  019E                     	;# 
   448  019F                     	;# 
   449  020D                     	;# 
   450  0210                     	;# 
   451  0211                     	;# 
   452  0211                     	;# 
   453  0212                     	;# 
   454  0212                     	;# 
   455  0213                     	;# 
   456  0213                     	;# 
   457  0214                     	;# 
   458  0214                     	;# 
   459  0215                     	;# 
   460  0215                     	;# 
   461  0215                     	;# 
   462  0216                     	;# 
   463  0216                     	;# 
   464  0217                     	;# 
   465  0217                     	;# 
   466  0291                     	;# 
   467  0291                     	;# 
   468  0292                     	;# 
   469  0293                     	;# 
   470  0298                     	;# 
   471  0298                     	;# 
   472  0299                     	;# 
   473  029A                     	;# 
   474  0394                     	;# 
   475  0395                     	;# 
   476  0396                     	;# 
   477  0FE4                     	;# 
   478  0FE5                     	;# 
   479  0FE6                     	;# 
   480  0FE7                     	;# 
   481  0FE8                     	;# 
   482  0FE9                     	;# 
   483  0FEA                     	;# 
   484  0FEB                     	;# 
   485  0FED                     	;# 
   486  0FEE                     	;# 
   487  0FEF                     	;# 
   488  0000                     	;# 
   489  0001                     	;# 
   490  0002                     	;# 
   491  0003                     	;# 
   492  0004                     	;# 
   493  0005                     	;# 
   494  0006                     	;# 
   495  0007                     	;# 
   496  0008                     	;# 
   497  0009                     	;# 
   498  000A                     	;# 
   499  000B                     	;# 
   500  000C                     	;# 
   501  000D                     	;# 
   502  000E                     	;# 
   503  0010                     	;# 
   504  0011                     	;# 
   505  0012                     	;# 
   506  0015                     	;# 
   507  0016                     	;# 
   508  0016                     	;# 
   509  0017                     	;# 
   510  0018                     	;# 
   511  0019                     	;# 
   512  001A                     	;# 
   513  001B                     	;# 
   514  001C                     	;# 
   515  008C                     	;# 
   516  008D                     	;# 
   517  008E                     	;# 
   518  0090                     	;# 
   519  0091                     	;# 
   520  0092                     	;# 
   521  0095                     	;# 
   522  0096                     	;# 
   523  0097                     	;# 
   524  0099                     	;# 
   525  009A                     	;# 
   526  009B                     	;# 
   527  009B                     	;# 
   528  009C                     	;# 
   529  009D                     	;# 
   530  009E                     	;# 
   531  010C                     	;# 
   532  010D                     	;# 
   533  010E                     	;# 
   534  0116                     	;# 
   535  0117                     	;# 
   536  011D                     	;# 
   537  018C                     	;# 
   538  018D                     	;# 
   539  018E                     	;# 
   540  0191                     	;# 
   541  0191                     	;# 
   542  0192                     	;# 
   543  0193                     	;# 
   544  0193                     	;# 
   545  0194                     	;# 
   546  0195                     	;# 
   547  0196                     	;# 
   548  0197                     	;# 
   549  0199                     	;# 
   550  019A                     	;# 
   551  019B                     	;# 
   552  019B                     	;# 
   553  019B                     	;# 
   554  019B                     	;# 
   555  019C                     	;# 
   556  019C                     	;# 
   557  019D                     	;# 
   558  019E                     	;# 
   559  019F                     	;# 
   560  020D                     	;# 
   561  0210                     	;# 
   562  0211                     	;# 
   563  0211                     	;# 
   564  0212                     	;# 
   565  0212                     	;# 
   566  0213                     	;# 
   567  0213                     	;# 
   568  0214                     	;# 
   569  0214                     	;# 
   570  0215                     	;# 
   571  0215                     	;# 
   572  0215                     	;# 
   573  0216                     	;# 
   574  0216                     	;# 
   575  0217                     	;# 
   576  0217                     	;# 
   577  0291                     	;# 
   578  0291                     	;# 
   579  0292                     	;# 
   580  0293                     	;# 
   581  0298                     	;# 
   582  0298                     	;# 
   583  0299                     	;# 
   584  029A                     	;# 
   585  0394                     	;# 
   586  0395                     	;# 
   587  0396                     	;# 
   588  0FE4                     	;# 
   589  0FE5                     	;# 
   590  0FE6                     	;# 
   591  0FE7                     	;# 
   592  0FE8                     	;# 
   593  0FE9                     	;# 
   594  0FEA                     	;# 
   595  0FEB                     	;# 
   596  0FED                     	;# 
   597  0FEE                     	;# 
   598  0FEF                     	;# 
   599  0000                     	;# 
   600  0001                     	;# 
   601  0002                     	;# 
   602  0003                     	;# 
   603  0004                     	;# 
   604  0005                     	;# 
   605  0006                     	;# 
   606  0007                     	;# 
   607  0008                     	;# 
   608  0009                     	;# 
   609  000A                     	;# 
   610  000B                     	;# 
   611  000C                     	;# 
   612  000D                     	;# 
   613  000E                     	;# 
   614  0010                     	;# 
   615  0011                     	;# 
   616  0012                     	;# 
   617  0015                     	;# 
   618  0016                     	;# 
   619  0016                     	;# 
   620  0017                     	;# 
   621  0018                     	;# 
   622  0019                     	;# 
   623  001A                     	;# 
   624  001B                     	;# 
   625  001C                     	;# 
   626  008C                     	;# 
   627  008D                     	;# 
   628  008E                     	;# 
   629  0090                     	;# 
   630  0091                     	;# 
   631  0092                     	;# 
   632  0095                     	;# 
   633  0096                     	;# 
   634  0097                     	;# 
   635  0099                     	;# 
   636  009A                     	;# 
   637  009B                     	;# 
   638  009B                     	;# 
   639  009C                     	;# 
   640  009D                     	;# 
   641  009E                     	;# 
   642  010C                     	;# 
   643  010D                     	;# 
   644  010E                     	;# 
   645  0116                     	;# 
   646  0117                     	;# 
   647  011D                     	;# 
   648  018C                     	;# 
   649  018D                     	;# 
   650  018E                     	;# 
   651  0191                     	;# 
   652  0191                     	;# 
   653  0192                     	;# 
   654  0193                     	;# 
   655  0193                     	;# 
   656  0194                     	;# 
   657  0195                     	;# 
   658  0196                     	;# 
   659  0197                     	;# 
   660  0199                     	;# 
   661  019A                     	;# 
   662  019B                     	;# 
   663  019B                     	;# 
   664  019B                     	;# 
   665  019B                     	;# 
   666  019C                     	;# 
   667  019C                     	;# 
   668  019D                     	;# 
   669  019E                     	;# 
   670  019F                     	;# 
   671  020D                     	;# 
   672  0210                     	;# 
   673  0211                     	;# 
   674  0211                     	;# 
   675  0212                     	;# 
   676  0212                     	;# 
   677  0213                     	;# 
   678  0213                     	;# 
   679  0214                     	;# 
   680  0214                     	;# 
   681  0215                     	;# 
   682  0215                     	;# 
   683  0215                     	;# 
   684  0216                     	;# 
   685  0216                     	;# 
   686  0217                     	;# 
   687  0217                     	;# 
   688  0291                     	;# 
   689  0291                     	;# 
   690  0292                     	;# 
   691  0293                     	;# 
   692  0298                     	;# 
   693  0298                     	;# 
   694  0299                     	;# 
   695  029A                     	;# 
   696  0394                     	;# 
   697  0395                     	;# 
   698  0396                     	;# 
   699  0FE4                     	;# 
   700  0FE5                     	;# 
   701  0FE6                     	;# 
   702  0FE7                     	;# 
   703  0FE8                     	;# 
   704  0FE9                     	;# 
   705  0FEA                     	;# 
   706  0FEB                     	;# 
   707  0FED                     	;# 
   708  0FEE                     	;# 
   709  0FEF                     	;# 
   710  0000                     	;# 
   711  0001                     	;# 
   712  0002                     	;# 
   713  0003                     	;# 
   714  0004                     	;# 
   715  0005                     	;# 
   716  0006                     	;# 
   717  0007                     	;# 
   718  0008                     	;# 
   719  0009                     	;# 
   720  000A                     	;# 
   721  000B                     	;# 
   722  000C                     	;# 
   723  000D                     	;# 
   724  000E                     	;# 
   725  0010                     	;# 
   726  0011                     	;# 
   727  0012                     	;# 
   728  0015                     	;# 
   729  0016                     	;# 
   730  0016                     	;# 
   731  0017                     	;# 
   732  0018                     	;# 
   733  0019                     	;# 
   734  001A                     	;# 
   735  001B                     	;# 
   736  001C                     	;# 
   737  008C                     	;# 
   738  008D                     	;# 
   739  008E                     	;# 
   740  0090                     	;# 
   741  0091                     	;# 
   742  0092                     	;# 
   743  0095                     	;# 
   744  0096                     	;# 
   745  0097                     	;# 
   746  0099                     	;# 
   747  009A                     	;# 
   748  009B                     	;# 
   749  009B                     	;# 
   750  009C                     	;# 
   751  009D                     	;# 
   752  009E                     	;# 
   753  010C                     	;# 
   754  010D                     	;# 
   755  010E                     	;# 
   756  0116                     	;# 
   757  0117                     	;# 
   758  011D                     	;# 
   759  018C                     	;# 
   760  018D                     	;# 
   761  018E                     	;# 
   762  0191                     	;# 
   763  0191                     	;# 
   764  0192                     	;# 
   765  0193                     	;# 
   766  0193                     	;# 
   767  0194                     	;# 
   768  0195                     	;# 
   769  0196                     	;# 
   770  0197                     	;# 
   771  0199                     	;# 
   772  019A                     	;# 
   773  019B                     	;# 
   774  019B                     	;# 
   775  019B                     	;# 
   776  019B                     	;# 
   777  019C                     	;# 
   778  019C                     	;# 
   779  019D                     	;# 
   780  019E                     	;# 
   781  019F                     	;# 
   782  020D                     	;# 
   783  0210                     	;# 
   784  0211                     	;# 
   785  0211                     	;# 
   786  0212                     	;# 
   787  0212                     	;# 
   788  0213                     	;# 
   789  0213                     	;# 
   790  0214                     	;# 
   791  0214                     	;# 
   792  0215                     	;# 
   793  0215                     	;# 
   794  0215                     	;# 
   795  0216                     	;# 
   796  0216                     	;# 
   797  0217                     	;# 
   798  0217                     	;# 
   799  0291                     	;# 
   800  0291                     	;# 
   801  0292                     	;# 
   802  0293                     	;# 
   803  0298                     	;# 
   804  0298                     	;# 
   805  0299                     	;# 
   806  029A                     	;# 
   807  0394                     	;# 
   808  0395                     	;# 
   809  0396                     	;# 
   810  0FE4                     	;# 
   811  0FE5                     	;# 
   812  0FE6                     	;# 
   813  0FE7                     	;# 
   814  0FE8                     	;# 
   815  0FE9                     	;# 
   816  0FEA                     	;# 
   817  0FEB                     	;# 
   818  0FED                     	;# 
   819  0FEE                     	;# 
   820  0FEF                     	;# 
   821  0000                     	;# 
   822  0001                     	;# 
   823  0002                     	;# 
   824  0003                     	;# 
   825  0004                     	;# 
   826  0005                     	;# 
   827  0006                     	;# 
   828  0007                     	;# 
   829  0008                     	;# 
   830  0009                     	;# 
   831  000A                     	;# 
   832  000B                     	;# 
   833  000C                     	;# 
   834  000D                     	;# 
   835  000E                     	;# 
   836  0010                     	;# 
   837  0011                     	;# 
   838  0012                     	;# 
   839  0015                     	;# 
   840  0016                     	;# 
   841  0016                     	;# 
   842  0017                     	;# 
   843  0018                     	;# 
   844  0019                     	;# 
   845  001A                     	;# 
   846  001B                     	;# 
   847  001C                     	;# 
   848  008C                     	;# 
   849  008D                     	;# 
   850  008E                     	;# 
   851  0090                     	;# 
   852  0091                     	;# 
   853  0092                     	;# 
   854  0095                     	;# 
   855  0096                     	;# 
   856  0097                     	;# 
   857  0099                     	;# 
   858  009A                     	;# 
   859  009B                     	;# 
   860  009B                     	;# 
   861  009C                     	;# 
   862  009D                     	;# 
   863  009E                     	;# 
   864  010C                     	;# 
   865  010D                     	;# 
   866  010E                     	;# 
   867  0116                     	;# 
   868  0117                     	;# 
   869  011D                     	;# 
   870  018C                     	;# 
   871  018D                     	;# 
   872  018E                     	;# 
   873  0191                     	;# 
   874  0191                     	;# 
   875  0192                     	;# 
   876  0193                     	;# 
   877  0193                     	;# 
   878  0194                     	;# 
   879  0195                     	;# 
   880  0196                     	;# 
   881  0197                     	;# 
   882  0199                     	;# 
   883  019A                     	;# 
   884  019B                     	;# 
   885  019B                     	;# 
   886  019B                     	;# 
   887  019B                     	;# 
   888  019C                     	;# 
   889  019C                     	;# 
   890  019D                     	;# 
   891  019E                     	;# 
   892  019F                     	;# 
   893  020D                     	;# 
   894  0210                     	;# 
   895  0211                     	;# 
   896  0211                     	;# 
   897  0212                     	;# 
   898  0212                     	;# 
   899  0213                     	;# 
   900  0213                     	;# 
   901  0214                     	;# 
   902  0214                     	;# 
   903  0215                     	;# 
   904  0215                     	;# 
   905  0215                     	;# 
   906  0216                     	;# 
   907  0216                     	;# 
   908  0217                     	;# 
   909  0217                     	;# 
   910  0291                     	;# 
   911  0291                     	;# 
   912  0292                     	;# 
   913  0293                     	;# 
   914  0298                     	;# 
   915  0298                     	;# 
   916  0299                     	;# 
   917  029A                     	;# 
   918  0394                     	;# 
   919  0395                     	;# 
   920  0396                     	;# 
   921  0FE4                     	;# 
   922  0FE5                     	;# 
   923  0FE6                     	;# 
   924  0FE7                     	;# 
   925  0FE8                     	;# 
   926  0FE9                     	;# 
   927  0FEA                     	;# 
   928  0FEB                     	;# 
   929  0FED                     	;# 
   930  0FEE                     	;# 
   931  0FEF                     	;# 
   932  0000                     	;# 
   933  0001                     	;# 
   934  0002                     	;# 
   935  0003                     	;# 
   936  0004                     	;# 
   937  0005                     	;# 
   938  0006                     	;# 
   939  0007                     	;# 
   940  0008                     	;# 
   941  0009                     	;# 
   942  000A                     	;# 
   943  000B                     	;# 
   944  000C                     	;# 
   945  000D                     	;# 
   946  000E                     	;# 
   947  0010                     	;# 
   948  0011                     	;# 
   949  0012                     	;# 
   950  0015                     	;# 
   951  0016                     	;# 
   952  0016                     	;# 
   953  0017                     	;# 
   954  0018                     	;# 
   955  0019                     	;# 
   956  001A                     	;# 
   957  001B                     	;# 
   958  001C                     	;# 
   959  008C                     	;# 
   960  008D                     	;# 
   961  008E                     	;# 
   962  0090                     	;# 
   963  0091                     	;# 
   964  0092                     	;# 
   965  0095                     	;# 
   966  0096                     	;# 
   967  0097                     	;# 
   968  0099                     	;# 
   969  009A                     	;# 
   970  009B                     	;# 
   971  009B                     	;# 
   972  009C                     	;# 
   973  009D                     	;# 
   974  009E                     	;# 
   975  010C                     	;# 
   976  010D                     	;# 
   977  010E                     	;# 
   978  0116                     	;# 
   979  0117                     	;# 
   980  011D                     	;# 
   981  018C                     	;# 
   982  018D                     	;# 
   983  018E                     	;# 
   984  0191                     	;# 
   985  0191                     	;# 
   986  0192                     	;# 
   987  0193                     	;# 
   988  0193                     	;# 
   989  0194                     	;# 
   990  0195                     	;# 
   991  0196                     	;# 
   992  0197                     	;# 
   993  0199                     	;# 
   994  019A                     	;# 
   995  019B                     	;# 
   996  019B                     	;# 
   997  019B                     	;# 
   998  019B                     	;# 
   999  019C                     	;# 
  1000  019C                     	;# 
  1001  019D                     	;# 
  1002  019E                     	;# 
  1003  019F                     	;# 
  1004  020D                     	;# 
  1005  0210                     	;# 
  1006  0211                     	;# 
  1007  0211                     	;# 
  1008  0212                     	;# 
  1009  0212                     	;# 
  1010  0213                     	;# 
  1011  0213                     	;# 
  1012  0214                     	;# 
  1013  0214                     	;# 
  1014  0215                     	;# 
  1015  0215                     	;# 
  1016  0215                     	;# 
  1017  0216                     	;# 
  1018  0216                     	;# 
  1019  0217                     	;# 
  1020  0217                     	;# 
  1021  0291                     	;# 
  1022  0291                     	;# 
  1023  0292                     	;# 
  1024  0293                     	;# 
  1025  0298                     	;# 
  1026  0298                     	;# 
  1027  0299                     	;# 
  1028  029A                     	;# 
  1029  0394                     	;# 
  1030  0395                     	;# 
  1031  0396                     	;# 
  1032  0FE4                     	;# 
  1033  0FE5                     	;# 
  1034  0FE6                     	;# 
  1035  0FE7                     	;# 
  1036  0FE8                     	;# 
  1037  0FE9                     	;# 
  1038  0FEA                     	;# 
  1039  0FEB                     	;# 
  1040  0FED                     	;# 
  1041  0FEE                     	;# 
  1042  0FEF                     	;# 
  1043  0000                     	;# 
  1044  0001                     	;# 
  1045  0002                     	;# 
  1046  0003                     	;# 
  1047  0004                     	;# 
  1048  0005                     	;# 
  1049  0006                     	;# 
  1050  0007                     	;# 
  1051  0008                     	;# 
  1052  0009                     	;# 
  1053  000A                     	;# 
  1054  000B                     	;# 
  1055  000C                     	;# 
  1056  000D                     	;# 
  1057  000E                     	;# 
  1058  0010                     	;# 
  1059  0011                     	;# 
  1060  0012                     	;# 
  1061  0015                     	;# 
  1062  0016                     	;# 
  1063  0016                     	;# 
  1064  0017                     	;# 
  1065  0018                     	;# 
  1066  0019                     	;# 
  1067  001A                     	;# 
  1068  001B                     	;# 
  1069  001C                     	;# 
  1070  008C                     	;# 
  1071  008D                     	;# 
  1072  008E                     	;# 
  1073  0090                     	;# 
  1074  0091                     	;# 
  1075  0092                     	;# 
  1076  0095                     	;# 
  1077  0096                     	;# 
  1078  0097                     	;# 
  1079  0099                     	;# 
  1080  009A                     	;# 
  1081  009B                     	;# 
  1082  009B                     	;# 
  1083  009C                     	;# 
  1084  009D                     	;# 
  1085  009E                     	;# 
  1086  010C                     	;# 
  1087  010D                     	;# 
  1088  010E                     	;# 
  1089  0116                     	;# 
  1090  0117                     	;# 
  1091  011D                     	;# 
  1092  018C                     	;# 
  1093  018D                     	;# 
  1094  018E                     	;# 
  1095  0191                     	;# 
  1096  0191                     	;# 
  1097  0192                     	;# 
  1098  0193                     	;# 
  1099  0193                     	;# 
  1100  0194                     	;# 
  1101  0195                     	;# 
  1102  0196                     	;# 
  1103  0197                     	;# 
  1104  0199                     	;# 
  1105  019A                     	;# 
  1106  019B                     	;# 
  1107  019B                     	;# 
  1108  019B                     	;# 
  1109  019B                     	;# 
  1110  019C                     	;# 
  1111  019C                     	;# 
  1112  019D                     	;# 
  1113  019E                     	;# 
  1114  019F                     	;# 
  1115  020D                     	;# 
  1116  0210                     	;# 
  1117  0211                     	;# 
  1118  0211                     	;# 
  1119  0212                     	;# 
  1120  0212                     	;# 
  1121  0213                     	;# 
  1122  0213                     	;# 
  1123  0214                     	;# 
  1124  0214                     	;# 
  1125  0215                     	;# 
  1126  0215                     	;# 
  1127  0215                     	;# 
  1128  0216                     	;# 
  1129  0216                     	;# 
  1130  0217                     	;# 
  1131  0217                     	;# 
  1132  0291                     	;# 
  1133  0291                     	;# 
  1134  0292                     	;# 
  1135  0293                     	;# 
  1136  0298                     	;# 
  1137  0298                     	;# 
  1138  0299                     	;# 
  1139  029A                     	;# 
  1140  0394                     	;# 
  1141  0395                     	;# 
  1142  0396                     	;# 
  1143  0FE4                     	;# 
  1144  0FE5                     	;# 
  1145  0FE6                     	;# 
  1146  0FE7                     	;# 
  1147  0FE8                     	;# 
  1148  0FE9                     	;# 
  1149  0FEA                     	;# 
  1150  0FEB                     	;# 
  1151  0FED                     	;# 
  1152  0FEE                     	;# 
  1153  0FEF                     	;# 
  1154  0000                     	;# 
  1155  0001                     	;# 
  1156  0002                     	;# 
  1157  0003                     	;# 
  1158  0004                     	;# 
  1159  0005                     	;# 
  1160  0006                     	;# 
  1161  0007                     	;# 
  1162  0008                     	;# 
  1163  0009                     	;# 
  1164  000A                     	;# 
  1165  000B                     	;# 
  1166  000C                     	;# 
  1167  000D                     	;# 
  1168  000E                     	;# 
  1169  0010                     	;# 
  1170  0011                     	;# 
  1171  0012                     	;# 
  1172  0015                     	;# 
  1173  0016                     	;# 
  1174  0016                     	;# 
  1175  0017                     	;# 
  1176  0018                     	;# 
  1177  0019                     	;# 
  1178  001A                     	;# 
  1179  001B                     	;# 
  1180  001C                     	;# 
  1181  008C                     	;# 
  1182  008D                     	;# 
  1183  008E                     	;# 
  1184  0090                     	;# 
  1185  0091                     	;# 
  1186  0092                     	;# 
  1187  0095                     	;# 
  1188  0096                     	;# 
  1189  0097                     	;# 
  1190  0099                     	;# 
  1191  009A                     	;# 
  1192  009B                     	;# 
  1193  009B                     	;# 
  1194  009C                     	;# 
  1195  009D                     	;# 
  1196  009E                     	;# 
  1197  010C                     	;# 
  1198  010D                     	;# 
  1199  010E                     	;# 
  1200  0116                     	;# 
  1201  0117                     	;# 
  1202  011D                     	;# 
  1203  018C                     	;# 
  1204  018D                     	;# 
  1205  018E                     	;# 
  1206  0191                     	;# 
  1207  0191                     	;# 
  1208  0192                     	;# 
  1209  0193                     	;# 
  1210  0193                     	;# 
  1211  0194                     	;# 
  1212  0195                     	;# 
  1213  0196                     	;# 
  1214  0197                     	;# 
  1215  0199                     	;# 
  1216  019A                     	;# 
  1217  019B                     	;# 
  1218  019B                     	;# 
  1219  019B                     	;# 
  1220  019B                     	;# 
  1221  019C                     	;# 
  1222  019C                     	;# 
  1223  019D                     	;# 
  1224  019E                     	;# 
  1225  019F                     	;# 
  1226  020D                     	;# 
  1227  0210                     	;# 
  1228  0211                     	;# 
  1229  0211                     	;# 
  1230  0212                     	;# 
  1231  0212                     	;# 
  1232  0213                     	;# 
  1233  0213                     	;# 
  1234  0214                     	;# 
  1235  0214                     	;# 
  1236  0215                     	;# 
  1237  0215                     	;# 
  1238  0215                     	;# 
  1239  0216                     	;# 
  1240  0216                     	;# 
  1241  0217                     	;# 
  1242  0217                     	;# 
  1243  0291                     	;# 
  1244  0291                     	;# 
  1245  0292                     	;# 
  1246  0293                     	;# 
  1247  0298                     	;# 
  1248  0298                     	;# 
  1249  0299                     	;# 
  1250  029A                     	;# 
  1251  0394                     	;# 
  1252  0395                     	;# 
  1253  0396                     	;# 
  1254  0FE4                     	;# 
  1255  0FE5                     	;# 
  1256  0FE6                     	;# 
  1257  0FE7                     	;# 
  1258  0FE8                     	;# 
  1259  0FE9                     	;# 
  1260  0FEA                     	;# 
  1261  0FEB                     	;# 
  1262  0FED                     	;# 
  1263  0FEE                     	;# 
  1264  0FEF                     	;# 
  1265  0000                     	;# 
  1266  0001                     	;# 
  1267  0002                     	;# 
  1268  0003                     	;# 
  1269  0004                     	;# 
  1270  0005                     	;# 
  1271  0006                     	;# 
  1272  0007                     	;# 
  1273  0008                     	;# 
  1274  0009                     	;# 
  1275  000A                     	;# 
  1276  000B                     	;# 
  1277  000C                     	;# 
  1278  000D                     	;# 
  1279  000E                     	;# 
  1280  0010                     	;# 
  1281  0011                     	;# 
  1282  0012                     	;# 
  1283  0015                     	;# 
  1284  0016                     	;# 
  1285  0016                     	;# 
  1286  0017                     	;# 
  1287  0018                     	;# 
  1288  0019                     	;# 
  1289  001A                     	;# 
  1290  001B                     	;# 
  1291  001C                     	;# 
  1292  008C                     	;# 
  1293  008D                     	;# 
  1294  008E                     	;# 
  1295  0090                     	;# 
  1296  0091                     	;# 
  1297  0092                     	;# 
  1298  0095                     	;# 
  1299  0096                     	;# 
  1300  0097                     	;# 
  1301  0099                     	;# 
  1302  009A                     	;# 
  1303  009B                     	;# 
  1304  009B                     	;# 
  1305  009C                     	;# 
  1306  009D                     	;# 
  1307  009E                     	;# 
  1308  010C                     	;# 
  1309  010D                     	;# 
  1310  010E                     	;# 
  1311  0116                     	;# 
  1312  0117                     	;# 
  1313  011D                     	;# 
  1314  018C                     	;# 
  1315  018D                     	;# 
  1316  018E                     	;# 
  1317  0191                     	;# 
  1318  0191                     	;# 
  1319  0192                     	;# 
  1320  0193                     	;# 
  1321  0193                     	;# 
  1322  0194                     	;# 
  1323  0195                     	;# 
  1324  0196                     	;# 
  1325  0197                     	;# 
  1326  0199                     	;# 
  1327  019A                     	;# 
  1328  019B                     	;# 
  1329  019B                     	;# 
  1330  019B                     	;# 
  1331  019B                     	;# 
  1332  019C                     	;# 
  1333  019C                     	;# 
  1334  019D                     	;# 
  1335  019E                     	;# 
  1336  019F                     	;# 
  1337  020D                     	;# 
  1338  0210                     	;# 
  1339  0211                     	;# 
  1340  0211                     	;# 
  1341  0212                     	;# 
  1342  0212                     	;# 
  1343  0213                     	;# 
  1344  0213                     	;# 
  1345  0214                     	;# 
  1346  0214                     	;# 
  1347  0215                     	;# 
  1348  0215                     	;# 
  1349  0215                     	;# 
  1350  0216                     	;# 
  1351  0216                     	;# 
  1352  0217                     	;# 
  1353  0217                     	;# 
  1354  0291                     	;# 
  1355  0291                     	;# 
  1356  0292                     	;# 
  1357  0293                     	;# 
  1358  0298                     	;# 
  1359  0298                     	;# 
  1360  0299                     	;# 
  1361  029A                     	;# 
  1362  0394                     	;# 
  1363  0395                     	;# 
  1364  0396                     	;# 
  1365  0FE4                     	;# 
  1366  0FE5                     	;# 
  1367  0FE6                     	;# 
  1368  0FE7                     	;# 
  1369  0FE8                     	;# 
  1370  0FE9                     	;# 
  1371  0FEA                     	;# 
  1372  0FEB                     	;# 
  1373  0FED                     	;# 
  1374  0FEE                     	;# 
  1375  0FEF                     	;# 
  1376  0000                     	;# 
  1377  0001                     	;# 
  1378  0002                     	;# 
  1379  0003                     	;# 
  1380  0004                     	;# 
  1381  0005                     	;# 
  1382  0006                     	;# 
  1383  0007                     	;# 
  1384  0008                     	;# 
  1385  0009                     	;# 
  1386  000A                     	;# 
  1387  000B                     	;# 
  1388  000C                     	;# 
  1389  000D                     	;# 
  1390  000E                     	;# 
  1391  0010                     	;# 
  1392  0011                     	;# 
  1393  0012                     	;# 
  1394  0015                     	;# 
  1395  0016                     	;# 
  1396  0016                     	;# 
  1397  0017                     	;# 
  1398  0018                     	;# 
  1399  0019                     	;# 
  1400  001A                     	;# 
  1401  001B                     	;# 
  1402  001C                     	;# 
  1403  008C                     	;# 
  1404  008D                     	;# 
  1405  008E                     	;# 
  1406  0090                     	;# 
  1407  0091                     	;# 
  1408  0092                     	;# 
  1409  0095                     	;# 
  1410  0096                     	;# 
  1411  0097                     	;# 
  1412  0099                     	;# 
  1413  009A                     	;# 
  1414  009B                     	;# 
  1415  009B                     	;# 
  1416  009C                     	;# 
  1417  009D                     	;# 
  1418  009E                     	;# 
  1419  010C                     	;# 
  1420  010D                     	;# 
  1421  010E                     	;# 
  1422  0116                     	;# 
  1423  0117                     	;# 
  1424  011D                     	;# 
  1425  018C                     	;# 
  1426  018D                     	;# 
  1427  018E                     	;# 
  1428  0191                     	;# 
  1429  0191                     	;# 
  1430  0192                     	;# 
  1431  0193                     	;# 
  1432  0193                     	;# 
  1433  0194                     	;# 
  1434  0195                     	;# 
  1435  0196                     	;# 
  1436  0197                     	;# 
  1437  0199                     	;# 
  1438  019A                     	;# 
  1439  019B                     	;# 
  1440  019B                     	;# 
  1441  019B                     	;# 
  1442  019B                     	;# 
  1443  019C                     	;# 
  1444  019C                     	;# 
  1445  019D                     	;# 
  1446  019E                     	;# 
  1447  019F                     	;# 
  1448  020D                     	;# 
  1449  0210                     	;# 
  1450  0211                     	;# 
  1451  0211                     	;# 
  1452  0212                     	;# 
  1453  0212                     	;# 
  1454  0213                     	;# 
  1455  0213                     	;# 
  1456  0214                     	;# 
  1457  0214                     	;# 
  1458  0215                     	;# 
  1459  0215                     	;# 
  1460  0215                     	;# 
  1461  0216                     	;# 
  1462  0216                     	;# 
  1463  0217                     	;# 
  1464  0217                     	;# 
  1465  0291                     	;# 
  1466  0291                     	;# 
  1467  0292                     	;# 
  1468  0293                     	;# 
  1469  0298                     	;# 
  1470  0298                     	;# 
  1471  0299                     	;# 
  1472  029A                     	;# 
  1473  0394                     	;# 
  1474  0395                     	;# 
  1475  0396                     	;# 
  1476  0FE4                     	;# 
  1477  0FE5                     	;# 
  1478  0FE6                     	;# 
  1479  0FE7                     	;# 
  1480  0FE8                     	;# 
  1481  0FE9                     	;# 
  1482  0FEA                     	;# 
  1483  0FEB                     	;# 
  1484  0FED                     	;# 
  1485  0FEE                     	;# 
  1486  0FEF                     	;# 
  1487  0000                     	;# 
  1488  0001                     	;# 
  1489  0002                     	;# 
  1490  0003                     	;# 
  1491  0004                     	;# 
  1492  0005                     	;# 
  1493  0006                     	;# 
  1494  0007                     	;# 
  1495  0008                     	;# 
  1496  0009                     	;# 
  1497  000A                     	;# 
  1498  000B                     	;# 
  1499  000C                     	;# 
  1500  000D                     	;# 
  1501  000E                     	;# 
  1502  0010                     	;# 
  1503  0011                     	;# 
  1504  0012                     	;# 
  1505  0015                     	;# 
  1506  0016                     	;# 
  1507  0016                     	;# 
  1508  0017                     	;# 
  1509  0018                     	;# 
  1510  0019                     	;# 
  1511  001A                     	;# 
  1512  001B                     	;# 
  1513  001C                     	;# 
  1514  008C                     	;# 
  1515  008D                     	;# 
  1516  008E                     	;# 
  1517  0090                     	;# 
  1518  0091                     	;# 
  1519  0092                     	;# 
  1520  0095                     	;# 
  1521  0096                     	;# 
  1522  0097                     	;# 
  1523  0099                     	;# 
  1524  009A                     	;# 
  1525  009B                     	;# 
  1526  009B                     	;# 
  1527  009C                     	;# 
  1528  009D                     	;# 
  1529  009E                     	;# 
  1530  010C                     	;# 
  1531  010D                     	;# 
  1532  010E                     	;# 
  1533  0116                     	;# 
  1534  0117                     	;# 
  1535  011D                     	;# 
  1536  018C                     	;# 
  1537  018D                     	;# 
  1538  018E                     	;# 
  1539  0191                     	;# 
  1540  0191                     	;# 
  1541  0192                     	;# 
  1542  0193                     	;# 
  1543  0193                     	;# 
  1544  0194                     	;# 
  1545  0195                     	;# 
  1546  0196                     	;# 
  1547  0197                     	;# 
  1548  0199                     	;# 
  1549  019A                     	;# 
  1550  019B                     	;# 
  1551  019B                     	;# 
  1552  019B                     	;# 
  1553  019B                     	;# 
  1554  019C                     	;# 
  1555  019C                     	;# 
  1556  019D                     	;# 
  1557  019E                     	;# 
  1558  019F                     	;# 
  1559  020D                     	;# 
  1560  0210                     	;# 
  1561  0211                     	;# 
  1562  0211                     	;# 
  1563  0212                     	;# 
  1564  0212                     	;# 
  1565  0213                     	;# 
  1566  0213                     	;# 
  1567  0214                     	;# 
  1568  0214                     	;# 
  1569  0215                     	;# 
  1570  0215                     	;# 
  1571  0215                     	;# 
  1572  0216                     	;# 
  1573  0216                     	;# 
  1574  0217                     	;# 
  1575  0217                     	;# 
  1576  0291                     	;# 
  1577  0291                     	;# 
  1578  0292                     	;# 
  1579  0293                     	;# 
  1580  0298                     	;# 
  1581  0298                     	;# 
  1582  0299                     	;# 
  1583  029A                     	;# 
  1584  0394                     	;# 
  1585  0395                     	;# 
  1586  0396                     	;# 
  1587  0FE4                     	;# 
  1588  0FE5                     	;# 
  1589  0FE6                     	;# 
  1590  0FE7                     	;# 
  1591  0FE8                     	;# 
  1592  0FE9                     	;# 
  1593  0FEA                     	;# 
  1594  0FEB                     	;# 
  1595  0FED                     	;# 
  1596  0FEE                     	;# 
  1597  0FEF                     	;# 
  1598  0000                     	;# 
  1599  0001                     	;# 
  1600  0002                     	;# 
  1601  0003                     	;# 
  1602  0004                     	;# 
  1603  0005                     	;# 
  1604  0006                     	;# 
  1605  0007                     	;# 
  1606  0008                     	;# 
  1607  0009                     	;# 
  1608  000A                     	;# 
  1609  000B                     	;# 
  1610  000C                     	;# 
  1611  000D                     	;# 
  1612  000E                     	;# 
  1613  0010                     	;# 
  1614  0011                     	;# 
  1615  0012                     	;# 
  1616  0015                     	;# 
  1617  0016                     	;# 
  1618  0016                     	;# 
  1619  0017                     	;# 
  1620  0018                     	;# 
  1621  0019                     	;# 
  1622  001A                     	;# 
  1623  001B                     	;# 
  1624  001C                     	;# 
  1625  008C                     	;# 
  1626  008D                     	;# 
  1627  008E                     	;# 
  1628  0090                     	;# 
  1629  0091                     	;# 
  1630  0092                     	;# 
  1631  0095                     	;# 
  1632  0096                     	;# 
  1633  0097                     	;# 
  1634  0099                     	;# 
  1635  009A                     	;# 
  1636  009B                     	;# 
  1637  009B                     	;# 
  1638  009C                     	;# 
  1639  009D                     	;# 
  1640  009E                     	;# 
  1641  010C                     	;# 
  1642  010D                     	;# 
  1643  010E                     	;# 
  1644  0116                     	;# 
  1645  0117                     	;# 
  1646  011D                     	;# 
  1647  018C                     	;# 
  1648  018D                     	;# 
  1649  018E                     	;# 
  1650  0191                     	;# 
  1651  0191                     	;# 
  1652  0192                     	;# 
  1653  0193                     	;# 
  1654  0193                     	;# 
  1655  0194                     	;# 
  1656  0195                     	;# 
  1657  0196                     	;# 
  1658  0197                     	;# 
  1659  0199                     	;# 
  1660  019A                     	;# 
  1661  019B                     	;# 
  1662  019B                     	;# 
  1663  019B                     	;# 
  1664  019B                     	;# 
  1665  019C                     	;# 
  1666  019C                     	;# 
  1667  019D                     	;# 
  1668  019E                     	;# 
  1669  019F                     	;# 
  1670  020D                     	;# 
  1671  0210                     	;# 
  1672  0211                     	;# 
  1673  0211                     	;# 
  1674  0212                     	;# 
  1675  0212                     	;# 
  1676  0213                     	;# 
  1677  0213                     	;# 
  1678  0214                     	;# 
  1679  0214                     	;# 
  1680  0215                     	;# 
  1681  0215                     	;# 
  1682  0215                     	;# 
  1683  0216                     	;# 
  1684  0216                     	;# 
  1685  0217                     	;# 
  1686  0217                     	;# 
  1687  0291                     	;# 
  1688  0291                     	;# 
  1689  0292                     	;# 
  1690  0293                     	;# 
  1691  0298                     	;# 
  1692  0298                     	;# 
  1693  0299                     	;# 
  1694  029A                     	;# 
  1695  0394                     	;# 
  1696  0395                     	;# 
  1697  0396                     	;# 
  1698  0FE4                     	;# 
  1699  0FE5                     	;# 
  1700  0FE6                     	;# 
  1701  0FE7                     	;# 
  1702  0FE8                     	;# 
  1703  0FE9                     	;# 
  1704  0FEA                     	;# 
  1705  0FEB                     	;# 
  1706  0FED                     	;# 
  1707  0FEE                     	;# 
  1708  0FEF                     	;# 
  1709  0000                     	;# 
  1710  0001                     	;# 
  1711  0002                     	;# 
  1712  0003                     	;# 
  1713  0004                     	;# 
  1714  0005                     	;# 
  1715  0006                     	;# 
  1716  0007                     	;# 
  1717  0008                     	;# 
  1718  0009                     	;# 
  1719  000A                     	;# 
  1720  000B                     	;# 
  1721  000C                     	;# 
  1722  000D                     	;# 
  1723  000E                     	;# 
  1724  0010                     	;# 
  1725  0011                     	;# 
  1726  0012                     	;# 
  1727  0015                     	;# 
  1728  0016                     	;# 
  1729  0016                     	;# 
  1730  0017                     	;# 
  1731  0018                     	;# 
  1732  0019                     	;# 
  1733  001A                     	;# 
  1734  001B                     	;# 
  1735  001C                     	;# 
  1736  008C                     	;# 
  1737  008D                     	;# 
  1738  008E                     	;# 
  1739  0090                     	;# 
  1740  0091                     	;# 
  1741  0092                     	;# 
  1742  0095                     	;# 
  1743  0096                     	;# 
  1744  0097                     	;# 
  1745  0099                     	;# 
  1746  009A                     	;# 
  1747  009B                     	;# 
  1748  009B                     	;# 
  1749  009C                     	;# 
  1750  009D                     	;# 
  1751  009E                     	;# 
  1752  010C                     	;# 
  1753  010D                     	;# 
  1754  010E                     	;# 
  1755  0116                     	;# 
  1756  0117                     	;# 
  1757  011D                     	;# 
  1758  018C                     	;# 
  1759  018D                     	;# 
  1760  018E                     	;# 
  1761  0191                     	;# 
  1762  0191                     	;# 
  1763  0192                     	;# 
  1764  0193                     	;# 
  1765  0193                     	;# 
  1766  0194                     	;# 
  1767  0195                     	;# 
  1768  0196                     	;# 
  1769  0197                     	;# 
  1770  0199                     	;# 
  1771  019A                     	;# 
  1772  019B                     	;# 
  1773  019B                     	;# 
  1774  019B                     	;# 
  1775  019B                     	;# 
  1776  019C                     	;# 
  1777  019C                     	;# 
  1778  019D                     	;# 
  1779  019E                     	;# 
  1780  019F                     	;# 
  1781  020D                     	;# 
  1782  0210                     	;# 
  1783  0211                     	;# 
  1784  0211                     	;# 
  1785  0212                     	;# 
  1786  0212                     	;# 
  1787  0213                     	;# 
  1788  0213                     	;# 
  1789  0214                     	;# 
  1790  0214                     	;# 
  1791  0215                     	;# 
  1792  0215                     	;# 
  1793  0215                     	;# 
  1794  0216                     	;# 
  1795  0216                     	;# 
  1796  0217                     	;# 
  1797  0217                     	;# 
  1798  0291                     	;# 
  1799  0291                     	;# 
  1800  0292                     	;# 
  1801  0293                     	;# 
  1802  0298                     	;# 
  1803  0298                     	;# 
  1804  0299                     	;# 
  1805  029A                     	;# 
  1806  0394                     	;# 
  1807  0395                     	;# 
  1808  0396                     	;# 
  1809  0FE4                     	;# 
  1810  0FE5                     	;# 
  1811  0FE6                     	;# 
  1812  0FE7                     	;# 
  1813  0FE8                     	;# 
  1814  0FE9                     	;# 
  1815  0FEA                     	;# 
  1816  0FEB                     	;# 
  1817  0FED                     	;# 
  1818  0FEE                     	;# 
  1819  0FEF                     	;# 
  1820  0000                     	;# 
  1821  0001                     	;# 
  1822  0002                     	;# 
  1823  0003                     	;# 
  1824  0004                     	;# 
  1825  0005                     	;# 
  1826  0006                     	;# 
  1827  0007                     	;# 
  1828  0008                     	;# 
  1829  0009                     	;# 
  1830  000A                     	;# 
  1831  000B                     	;# 
  1832  000C                     	;# 
  1833  000D                     	;# 
  1834  000E                     	;# 
  1835  0010                     	;# 
  1836  0011                     	;# 
  1837  0012                     	;# 
  1838  0015                     	;# 
  1839  0016                     	;# 
  1840  0016                     	;# 
  1841  0017                     	;# 
  1842  0018                     	;# 
  1843  0019                     	;# 
  1844  001A                     	;# 
  1845  001B                     	;# 
  1846  001C                     	;# 
  1847  008C                     	;# 
  1848  008D                     	;# 
  1849  008E                     	;# 
  1850  0090                     	;# 
  1851  0091                     	;# 
  1852  0092                     	;# 
  1853  0095                     	;# 
  1854  0096                     	;# 
  1855  0097                     	;# 
  1856  0099                     	;# 
  1857  009A                     	;# 
  1858  009B                     	;# 
  1859  009B                     	;# 
  1860  009C                     	;# 
  1861  009D                     	;# 
  1862  009E                     	;# 
  1863  010C                     	;# 
  1864  010D                     	;# 
  1865  010E                     	;# 
  1866  0116                     	;# 
  1867  0117                     	;# 
  1868  011D                     	;# 
  1869  018C                     	;# 
  1870  018D                     	;# 
  1871  018E                     	;# 
  1872  0191                     	;# 
  1873  0191                     	;# 
  1874  0192                     	;# 
  1875  0193                     	;# 
  1876  0193                     	;# 
  1877  0194                     	;# 
  1878  0195                     	;# 
  1879  0196                     	;# 
  1880  0197                     	;# 
  1881  0199                     	;# 
  1882  019A                     	;# 
  1883  019B                     	;# 
  1884  019B                     	;# 
  1885  019B                     	;# 
  1886  019B                     	;# 
  1887  019C                     	;# 
  1888  019C                     	;# 
  1889  019D                     	;# 
  1890  019E                     	;# 
  1891  019F                     	;# 
  1892  020D                     	;# 
  1893  0210                     	;# 
  1894  0211                     	;# 
  1895  0211                     	;# 
  1896  0212                     	;# 
  1897  0212                     	;# 
  1898  0213                     	;# 
  1899  0213                     	;# 
  1900  0214                     	;# 
  1901  0214                     	;# 
  1902  0215                     	;# 
  1903  0215                     	;# 
  1904  0215                     	;# 
  1905  0216                     	;# 
  1906  0216                     	;# 
  1907  0217                     	;# 
  1908  0217                     	;# 
  1909  0291                     	;# 
  1910  0291                     	;# 
  1911  0292                     	;# 
  1912  0293                     	;# 
  1913  0298                     	;# 
  1914  0298                     	;# 
  1915  0299                     	;# 
  1916  029A                     	;# 
  1917  0394                     	;# 
  1918  0395                     	;# 
  1919  0396                     	;# 
  1920  0FE4                     	;# 
  1921  0FE5                     	;# 
  1922  0FE6                     	;# 
  1923  0FE7                     	;# 
  1924  0FE8                     	;# 
  1925  0FE9                     	;# 
  1926  0FEA                     	;# 
  1927  0FEB                     	;# 
  1928  0FED                     	;# 
  1929  0FEE                     	;# 
  1930  0FEF                     	;# 
  1931                           
  1932                           	psect	idataBANK3
  1933  1CB4                     __pidataBANK3:	
  1934                           
  1935                           ;initializer for _VarProduct
  1936  1CB4  3463               	retlw	99
  1937  1CB5  3402               	retlw	2
  1938  1CB6  3400               	retlw	0
  1939  1CB7  3400               	retlw	0
  1940  1CB8  3400               	retlw	0
  1941  1CB9  3400               	retlw	0
  1942  1CBA  3400               	retlw	0
  1943  1CBB  3400               	retlw	0
  1944  1CBC  3400               	retlw	0
  1945  1CBD  3400               	retlw	0
  1946  1CBE  3400               	retlw	0
  1947  1CBF  3400               	retlw	0
  1948  1CC0  34FF               	retlw	255
  1949  1CC1  34FF               	retlw	255
  1950  1CC2  34FF               	retlw	255
  1951  1CC3  3400               	retlw	0
  1952  1CC4  3400               	retlw	0
  1953  1CC5  3400               	retlw	0
  1954  1CC6  3400               	retlw	0
  1955  1CC7  3400               	retlw	0
  1956  1CC8  3400               	retlw	0
  1957  1CC9  3400               	retlw	0
  1958  1CCA  3400               	retlw	0
  1959  1CCB  3400               	retlw	0
  1960  1CCC  3400               	retlw	0
  1961  1CCD  3400               	retlw	0
  1962  1CCE  3400               	retlw	0
  1963  1CCF  3400               	retlw	0
  1964  1CD0  3400               	retlw	0
  1965  1CD1  3400               	retlw	0
  1966  1CD2  3400               	retlw	0
  1967  1CD3  3400               	retlw	0
  1968                           
  1969                           	psect	stringtext
  1970  1800                     __pstringtext:	
  1971  1800                     _CC2500_registers_address:	
  1972  1800  3403               	retlw	3
  1973  1801  3416               	retlw	22
  1974  1802  3417               	retlw	23
  1975  1803  341E               	retlw	30
  1976  1804  341F               	retlw	31
  1977  1805  3420               	retlw	32
  1978  1806  342A               	retlw	42
  1979  1807  342B               	retlw	43
  1980  1808  340B               	retlw	11
  1981  1809  340C               	retlw	12
  1982  180A  340D               	retlw	13
  1983  180B  340E               	retlw	14
  1984  180C  340F               	retlw	15
  1985  180D  3410               	retlw	16
  1986  180E  3411               	retlw	17
  1987  180F  3412               	retlw	18
  1988  1810  3413               	retlw	19
  1989  1811  3414               	retlw	20
  1990  1812  340A               	retlw	10
  1991  1813  3415               	retlw	21
  1992  1814  3421               	retlw	33
  1993  1815  3422               	retlw	34
  1994  1816  3418               	retlw	24
  1995  1817  3419               	retlw	25
  1996  1818  341A               	retlw	26
  1997  1819  341B               	retlw	27
  1998  181A  341C               	retlw	28
  1999  181B  341D               	retlw	29
  2000  181C  3423               	retlw	35
  2001  181D  3424               	retlw	36
  2002  181E  3425               	retlw	37
  2003  181F  3426               	retlw	38
  2004  1820  3429               	retlw	41
  2005  1821  342C               	retlw	44
  2006  1822  342D               	retlw	45
  2007  1823  342E               	retlw	46
  2008  1824  3400               	retlw	0
  2009  1825  3401               	retlw	1
  2010  1826  3402               	retlw	2
  2011  1827  3407               	retlw	7
  2012  1828  3408               	retlw	8
  2013  1829  3409               	retlw	9
  2014  182A  3406               	retlw	6
  2015  182B  3404               	retlw	4
  2016  182C  3405               	retlw	5
  2017  182D  3427               	retlw	39
  2018  182E  3428               	retlw	40
  2019  182F                     __end_of_CC2500_registers_address:	
  2020  182F                     _CC2500_rfSettings:	
  2021  182F  3407               	retlw	7
  2022  1830  3407               	retlw	7
  2023  1831  3430               	retlw	48
  2024  1832  3487               	retlw	135
  2025  1833  346B               	retlw	107
  2026  1834  34F8               	retlw	248
  2027  1835  347F               	retlw	127
  2028  1836  343F               	retlw	63
  2029  1837  3409               	retlw	9
  2030  1838  3400               	retlw	0
  2031  1839  345C               	retlw	92
  2032  183A  34A7               	retlw	167
  2033  183B  3462               	retlw	98
  2034  183C  3486               	retlw	134
  2035  183D  3483               	retlw	131
  2036  183E  3403               	retlw	3
  2037  183F  3422               	retlw	34
  2038  1840  34F8               	retlw	248
  2039  1841  3400               	retlw	0
  2040  1842  3444               	retlw	68
  2041  1843  34B6               	retlw	182
  2042  1844  3410               	retlw	16
  2043  1845  3418               	retlw	24
  2044  1846  341D               	retlw	29
  2045  1847  341C               	retlw	28
  2046  1848  34C7               	retlw	199
  2047  1849  3400               	retlw	0
  2048  184A  34B2               	retlw	178
  2049  184B  34EA               	retlw	234
  2050  184C  340A               	retlw	10
  2051  184D  3400               	retlw	0
  2052  184E  3411               	retlw	17
  2053  184F  3459               	retlw	89
  2054  1850  3488               	retlw	136
  2055  1851  3431               	retlw	49
  2056  1852  340B               	retlw	11
  2057  1853  342F               	retlw	47
  2058  1854  342E               	retlw	46
  2059  1855  3406               	retlw	6
  2060  1856  3404               	retlw	4
  2061  1857  3405               	retlw	5
  2062  1858  3400               	retlw	0
  2063  1859  3430               	retlw	48
  2064  185A  34D3               	retlw	211
  2065  185B  3491               	retlw	145
  2066  185C  3441               	retlw	65
  2067  185D  3400               	retlw	0
  2068  185E                     __end_of_CC2500_rfSettings:	
  2069  185E                     _CC2500_patable_vaule:	
  2070  185E  34FE               	retlw	254
  2071  185F  34FE               	retlw	254
  2072  1860  34FE               	retlw	254
  2073  1861  34FE               	retlw	254
  2074  1862  34FE               	retlw	254
  2075  1863  34FE               	retlw	254
  2076  1864  34FE               	retlw	254
  2077  1865  34FE               	retlw	254
  2078  1866                     __end_of_CC2500_patable_vaule:	
  2079                           
  2080                           	psect	nvBANK0
  2081  006D                     __pnvBANK0:	
  2082  006D                     _Memory:	
  2083  006D                     	ds	1
  2084  006E                     _Product:	
  2085  006E                     	ds	1
  2086  006F                     _TMain:	
  2087  006F                     	ds	1
  2088                           
  2089                           	psect	nvBANK1
  2090  00EE                     __pnvBANK1:	
  2091  00EE                     _Timer0:	
  2092  00EE                     	ds	1
  2093  000C                     _PORTA	set	12
  2094  000D                     _PORTB	set	13
  2095  000E                     _PORTC	set	14
  2096  0015                     _TMR0	set	21
  2097  005F                     _GIE	set	95
  2098  005C                     _INTE	set	92
  2099  0059                     _INTF	set	89
  2100  005B                     _IOCIE	set	91
  2101  0058                     _IOCIF	set	88
  2102  005E                     _PEIE	set	94
  2103  0060                     _RA0	set	96
  2104  0063                     _RA3	set	99
  2105  0064                     _RA4	set	100
  2106  0066                     _RA6	set	102
  2107  0067                     _RA7	set	103
  2108  0068                     _RB0	set	104
  2109  0069                     _RB1	set	105
  2110  006A                     _RB2	set	106
  2111  006B                     _RB3	set	107
  2112  006C                     _RB4	set	108
  2113  006D                     _RB5	set	109
  2114  0070                     _RC0	set	112
  2115  0071                     _RC1	set	113
  2116  0072                     _RC2	set	114
  2117  0074                     _RC4	set	116
  2118  0075                     _RC5	set	117
  2119  0077                     _RC7	set	119
  2120  005D                     _TMR0IE	set	93
  2121  005A                     _TMR0IF	set	90
  2122  009D                     _ADCON0	set	157
  2123  009E                     _ADCON1	set	158
  2124  009C                     _ADRESH	set	156
  2125  009B                     _ADRESL	set	155
  2126  0095                     _OPTION_REG	set	149
  2127  0099                     _OSCCON	set	153
  2128  008C                     _TRISA	set	140
  2129  008D                     _TRISB	set	141
  2130  008E                     _TRISC	set	142
  2131  0097                     _WDTCON	set	151
  2132  04E9                     _GO_nDONE	set	1257
  2133  0117                     _FVRCON	set	279
  2134  010C                     _LATA	set	268
  2135  010D                     _LATB	set	269
  2136  010E                     _LATC	set	270
  2137  018C                     _ANSELA	set	396
  2138  018D                     _ANSELB	set	397
  2139  018E                     _ANSELC	set	398
  2140  0192                     _PMADRH	set	402
  2141  0191                     _PMADRL	set	401
  2142  0196                     _PMCON2	set	406
  2143  0194                     _PMDATH	set	404
  2144  0193                     _PMDATL	set	403
  2145  0CAE                     _CFGS	set	3246
  2146  0CAC                     _FREE	set	3244
  2147  0CAD                     _LWLO	set	3245
  2148  0CA8                     _RD	set	3240
  2149  0CA9                     _WR	set	3241
  2150  0CAA                     _WREN	set	3242
  2151  1068                     _WPUB0	set	4200
  2152  1069                     _WPUB1	set	4201
  2153  106A                     _WPUB2	set	4202
  2154  0396                     _IOCBF	set	918
  2155  0395                     _IOCBN	set	917
  2156  0394                     _IOCBP	set	916
  2157  1CB2                     _IOCBF2	set	7346
  2158                           
  2159                           ; #config settings
  2160  0000                     
  2161                           	psect	cinit
  2162  0018                     start_initialization:	
  2163  0018                     __initialization:	
  2164                           
  2165                           ; Clear objects allocated to BITCOMMON
  2166  0018  01F0               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
  2167                           
  2168                           ; Clear objects allocated to COMMON
  2169  0019  01F6               	clrf	__pbssCOMMON& (0+127)
  2170  001A  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
  2171  001B  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
  2172  001C  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
  2173                           
  2174                           ; Clear objects allocated to BANK0
  2175  001D  01E8               	clrf	__pbssBANK0& (0+127)
  2176  001E  01E9               	clrf	(__pbssBANK0+1)& (0+127)
  2177  001F  01EA               	clrf	(__pbssBANK0+2)& (0+127)
  2178  0020  01EB               	clrf	(__pbssBANK0+3)& (0+127)
  2179  0021  01EC               	clrf	(__pbssBANK0+4)& (0+127)
  2180                           
  2181                           ; Clear objects allocated to BANK1
  2182  0022  30A0               	movlw	low __pbssBANK1
  2183  0023  0084               	movwf	4
  2184  0024  3000               	movlw	high __pbssBANK1
  2185  0025  0085               	movwf	5
  2186  0026  304A               	movlw	74
  2187  0027  3199  2112  3180   	fcall	clear_ram0
  2188                           
  2189                           ; Clear objects allocated to BANK2
  2190  002A  3020               	movlw	low __pbssBANK2
  2191  002B  0084               	movwf	4
  2192  002C  3001               	movlw	high __pbssBANK2
  2193  002D  0085               	movwf	5
  2194  002E  3050               	movlw	80
  2195  002F  3199  2112  3180   	fcall	clear_ram0
  2196                           
  2197                           ; Clear objects allocated to BANK3
  2198  0032  30C0               	movlw	low __pbssBANK3
  2199  0033  0084               	movwf	4
  2200  0034  3001               	movlw	high __pbssBANK3
  2201  0035  0085               	movwf	5
  2202  0036  3011               	movlw	17
  2203  0037  3199  2112  3180   	fcall	clear_ram0
  2204                           
  2205                           ; Clear objects allocated to BANK4
  2206  003A  3020               	movlw	low __pbssBANK4
  2207  003B  0084               	movwf	4
  2208  003C  3002               	movlw	high __pbssBANK4
  2209  003D  0085               	movwf	5
  2210  003E  3025               	movlw	37
  2211  003F  3199  2112  3180   	fcall	clear_ram0
  2212                           
  2213                           ; Initialize objects allocated to BANK3
  2214  0042  30B4               	movlw	low __pidataBANK3
  2215  0043  0084               	movwf	4
  2216  0044  309C               	movlw	(high __pidataBANK3)| (0+128)
  2217  0045  0085               	movwf	5
  2218  0046  30A0               	movlw	low __pdataBANK3
  2219  0047  0086               	movwf	6
  2220  0048  3001               	movlw	high __pdataBANK3
  2221  0049  0087               	movwf	7
  2222  004A  3020               	movlw	32
  2223  004B  3199  210C         	fcall	init_ram
  2224  004D                     end_of_initialization:	
  2225                           ;End of C runtime variable initialization code
  2226                           
  2227  004D                     __end_of__initialization:	
  2228  004D  107E               	bcf	pic14e$flags,0	;clear compiler interrupt flag
  2229  004E  0020               	movlb	0
  2230  004F  3188  2802         	ljmp	_main	;jump to C main() function
  2231                           
  2232                           	psect	bitbssCOMMON
  2233  0380                     __pbitbssCOMMON:	
  2234  0380                     _CC2500_Enable:	
  2235  0380                     	ds	1
  2236  0381                     _Receive_GO:	
  2237  0381                     	ds	1
  2238  0382                     _Receive_OK:	
  2239  0382                     	ds	1
  2240  0383                     _RxStatus:	
  2241  0383                     	ds	1
  2242  0384                     _Transceive_GO:	
  2243  0384                     	ds	1
  2244  0385                     _Transceive_OK:	
  2245  0385                     	ds	1
  2246  0386                     _TxStatus:	
  2247  0386                     	ds	1
  2248                           
  2249                           	psect	bssCOMMON
  2250  0076                     __pbssCOMMON:	
  2251  0076                     _PF:	
  2252  0076                     	ds	1
  2253  0077                     _RF:	
  2254  0077                     	ds	1
  2255  0078                     _Sw:	
  2256  0078                     	ds	1
  2257  0079                     _Temp:	
  2258  0079                     	ds	1
  2259                           
  2260                           	psect	bssBANK0
  2261  0068                     __pbssBANK0:	
  2262  0068                     _Buz:	
  2263  0068                     	ds	1
  2264  0069                     _DelayOff:	
  2265  0069                     	ds	1
  2266  006A                     _DimmerLights:	
  2267  006A                     	ds	1
  2268  006B                     _DimmerLights11:	
  2269  006B                     	ds	1
  2270  006C                     _DimmerLights22:	
  2271  006C                     	ds	1
  2272                           
  2273                           	psect	bssBANK1
  2274  00A0                     __pbssBANK1:	
  2275  00A0                     _RF_Data:	
  2276  00A0                     	ds	21
  2277  00B5                     _RF_Count:	
  2278  00B5                     	ds	2
  2279  00B7                     _CRC:	
  2280  00B7                     	ds	1
  2281  00B8                     _Dimmer:	
  2282  00B8                     	ds	1
  2283  00B9                     _DimmerLightsIntr:	
  2284  00B9                     	ds	1
  2285  00BA                     _LED:	
  2286  00BA                     	ds	1
  2287  00BB                     _RFSW:	
  2288  00BB                     	ds	1
  2289  00BC                     _RSSI:	
  2290  00BC                     	ds	1
  2291  00BD                     _Rx_Length:	
  2292  00BD                     	ds	1
  2293  00BE                     _SPI0Buffer:	
  2294  00BE                     	ds	1
  2295  00BF                     _Tx_Length:	
  2296  00BF                     	ds	1
  2297  00C0                     _r_address:	
  2298  00C0                     	ds	1
  2299  00C1                     _r_data:	
  2300  00C1                     	ds	1
  2301  00C2                     _s_data:	
  2302  00C2                     	ds	1
  2303  00C3                     _VarTimer0:	
  2304  00C3                     	ds	9
  2305  00CC                     _DlySw1:	
  2306  00CC                     	ds	5
  2307  00D1                     _DlySw2:	
  2308  00D1                     	ds	5
  2309  00D6                     _VarErrLED:	
  2310  00D6                     	ds	4
  2311  00DA                     _VarLED1:	
  2312  00DA                     	ds	4
  2313  00DE                     _VarLED2:	
  2314  00DE                     	ds	4
  2315  00E2                     _Dimmer1:	
  2316  00E2                     	ds	3
  2317  00E5                     _RF1:	
  2318  00E5                     	ds	3
  2319  00E8                     _RFSW1:	
  2320  00E8                     	ds	1
  2321  00E9                     _RFSW2:	
  2322  00E9                     	ds	1
  2323                           
  2324                           	psect	bssBANK2
  2325  0120                     __pbssBANK2:	
  2326  0120                     _DimmerLights1:	
  2327  0120                     	ds	14
  2328  012E                     _DimmerLights2:	
  2329  012E                     	ds	14
  2330  013C                     _Temp1:	
  2331  013C                     	ds	14
  2332  014A                     _Buz1:	
  2333  014A                     	ds	12
  2334  0156                     _Sw1:	
  2335  0156                     	ds	9
  2336  015F                     _Sw2:	
  2337  015F                     	ds	9
  2338  0168                     _PF1:	
  2339  0168                     	ds	8
  2340                           
  2341                           	psect	bssBANK3
  2342  01C0                     __pbssBANK3:	
  2343  01C0                     _VarTMain:	
  2344  01C0                     	ds	17
  2345                           
  2346                           	psect	dataBANK3
  2347  01A0                     __pdataBANK3:	
  2348  01A0                     _VarProduct:	
  2349  01A0                     	ds	32
  2350                           
  2351                           	psect	bssBANK4
  2352  0220                     __pbssBANK4:	
  2353  0220                     _VarMemory:	
  2354  0220                     	ds	37
  2355                           
  2356                           	psect	clrtext
  2357  1912                     clear_ram0:	
  2358                           ;	Called with FSR0 containing the base address, and
  2359                           ;	WREG with the size to clear
  2360                           
  2361  1912  0064               	clrwdt	;clear the watchdog before getting into this loop
  2362  1913                     clrloop0:	
  2363  1913  0180               	clrf	0	;clear RAM location pointed to by FSR
  2364  1914  3101               	addfsr 0,1
  2365  1915  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2366  1916  2913               	goto	clrloop0	;have we reached the end yet?
  2367  1917  3400               	retlw	0	;all done for this memory range, return
  2368                           
  2369                           	psect	inittext
  2370  190C                     init_ram:	
  2371  190C  00FE               	movwf	126
  2372  190D                     initloop:	
  2373  190D  0012               	moviw fsr0++
  2374  190E  001E               	movwi fsr1++
  2375  190F  0BFE               	decfsz	126,f
  2376  1910  290D               	goto	initloop
  2377  1911  3400               	retlw	0
  2378                           
  2379                           	psect	cstackBANK1
  2380  00EA                     __pcstackBANK1:	
  2381  00EA                     getRxData@rf:	
  2382  00EA                     _setSw_Main$4179:	
  2383                           ; 1 bytes @ 0x0
  2384                           
  2385                           
  2386                           ; 1 bytes @ 0x0
  2387  00EA                     	ds	1
  2388  00EB                     ??_setRF_Main:	
  2389  00EB                     _setSw_Main$4180:	
  2390                           ; 0 bytes @ 0x1
  2391                           
  2392                           
  2393                           ; 1 bytes @ 0x1
  2394  00EB                     	ds	1
  2395  00EC                     setRF_Main@rf:	
  2396  00EC                     setSw_Main@sw:	
  2397                           ; 1 bytes @ 0x2
  2398                           
  2399                           
  2400                           ; 1 bytes @ 0x2
  2401  00EC                     	ds	1
  2402  00ED                     _setRF_Main$3858:	
  2403                           
  2404                           ; 1 bytes @ 0x3
  2405  00ED                     	ds	1
  2406                           
  2407                           	psect	cstackCOMMON
  2408  0071                     __pcstackCOMMON:	
  2409  0071                     ?_CC2500_WriteByte:	
  2410  0071                     ?_CC2500_WriteCommand:	
  2411                           ; 0 bytes @ 0x0
  2412                           
  2413  0071                     ?_CC2500_ReadStatus:	
  2414                           ; 0 bytes @ 0x0
  2415                           
  2416  0071                     ?_CC2500_ReadByte:	
  2417                           ; 0 bytes @ 0x0
  2418                           
  2419  0071                     ?_CC2500_PowerRST:	
  2420                           ; 0 bytes @ 0x0
  2421                           
  2422  0071                     ?_CC2500_InitSetREG:	
  2423                           ; 0 bytes @ 0x0
  2424                           
  2425  0071                     ?_CC2500_InitPATable:	
  2426                           ; 0 bytes @ 0x0
  2427                           
  2428  0071                     ?_CC2500_ClearTXFIFO:	
  2429                           ; 0 bytes @ 0x0
  2430                           
  2431  0071                     ?_CC2500_ClearRXFIFO:	
  2432                           ; 0 bytes @ 0x0
  2433                           
  2434  0071                     ?_CC2500_FrequencyCabr:	
  2435                           ; 0 bytes @ 0x0
  2436                           
  2437  0071                     ?_CC2500_SIDLEMode:	
  2438                           ; 0 bytes @ 0x0
  2439                           
  2440  0071                     ?_DlyOff_Initialization:	
  2441                           ; 0 bytes @ 0x0
  2442                           
  2443  0071                     ?_DlyOff_Main:	
  2444                           ; 0 bytes @ 0x0
  2445                           
  2446  0071                     ?_setTxData:	
  2447                           ; 0 bytes @ 0x0
  2448                           
  2449  0071                     ?_setDimmerLights_Initialization:	
  2450                           ; 0 bytes @ 0x0
  2451                           
  2452  0071                     ?_Dimmer_Initialization:	
  2453                           ; 0 bytes @ 0x0
  2454                           
  2455  0071                     ?_setDimmerLights_Main:	
  2456                           ; 0 bytes @ 0x0
  2457                           
  2458  0071                     ?_setDimmerLights_ERROR:	
  2459                           ; 0 bytes @ 0x0
  2460                           
  2461  0071                     ?_setLED_Initialization:	
  2462                           ; 0 bytes @ 0x0
  2463                           
  2464  0071                     ?_setLED_Main:	
  2465                           ; 0 bytes @ 0x0
  2466                           
  2467  0071                     ?_MainT_Initialization:	
  2468                           ; 0 bytes @ 0x0
  2469                           
  2470  0071                     ?_Mcu_Initialization:	
  2471                           ; 0 bytes @ 0x0
  2472                           
  2473  0071                     ?_Flash_Memory_Initialization:	
  2474                           ; 0 bytes @ 0x0
  2475                           
  2476  0071                     ?_Temp_Initialization:	
  2477                           ; 0 bytes @ 0x0
  2478                           
  2479  0071                     ?_PowerFault_Initialization:	
  2480                           ; 0 bytes @ 0x0
  2481                           
  2482  0071                     ?_Switch_Initialization:	
  2483                           ; 0 bytes @ 0x0
  2484                           
  2485  0071                     ?_RF_Initialization:	
  2486                           ; 0 bytes @ 0x0
  2487                           
  2488  0071                     ?_getTemp_AD:	
  2489                           ; 0 bytes @ 0x0
  2490                           
  2491  0071                     ?_getPowerFault_AD:	
  2492                           ; 0 bytes @ 0x0
  2493                           
  2494  0071                     ?_MainT:	
  2495                           ; 0 bytes @ 0x0
  2496                           
  2497  0071                     ?_MainT_ResetClock:	
  2498                           ; 0 bytes @ 0x0
  2499                           
  2500  0071                     ?_Flash_Memory_Main:	
  2501                           ; 0 bytes @ 0x0
  2502                           
  2503  0071                     ?_Temp_Main:	
  2504                           ; 0 bytes @ 0x0
  2505                           
  2506  0071                     ?_PowerFault_Main:	
  2507                           ; 0 bytes @ 0x0
  2508                           
  2509  0071                     ?_Switch_Main:	
  2510                           ; 0 bytes @ 0x0
  2511                           
  2512  0071                     ?_RF_Main:	
  2513                           ; 0 bytes @ 0x0
  2514                           
  2515  0071                     ?_setTemp_Enable:	
  2516                           ; 0 bytes @ 0x0
  2517                           
  2518  0071                     ?_setSw_Enable:	
  2519                           ; 0 bytes @ 0x0
  2520                           
  2521  0071                     ?_clearingWDT:	
  2522                           ; 0 bytes @ 0x0
  2523                           
  2524  0071                     ?_IO_Set:	
  2525                           ; 0 bytes @ 0x0
  2526                           
  2527  0071                     ?_TMR0_Set:	
  2528                           ; 0 bytes @ 0x0
  2529                           
  2530  0071                     ?_ADC_Set:	
  2531                           ; 0 bytes @ 0x0
  2532                           
  2533  0071                     ?_INT_Set:	
  2534                           ; 0 bytes @ 0x0
  2535                           
  2536  0071                     ?_IOC_Set:	
  2537                           ; 0 bytes @ 0x0
  2538                           
  2539  0071                     ?_Watch_Dog_set:	
  2540                           ; 0 bytes @ 0x0
  2541                           
  2542  0071                     ?_IOC_ISR:	
  2543                           ; 0 bytes @ 0x0
  2544                           
  2545  0071                     ??_IOC_ISR:	
  2546                           ; 0 bytes @ 0x0
  2547                           
  2548  0071                     ?_TMR0_ISR:	
  2549                           ; 0 bytes @ 0x0
  2550                           
  2551  0071                     ??_TMR0_ISR:	
  2552                           ; 0 bytes @ 0x0
  2553                           
  2554  0071                     ?_INT_ISR:	
  2555                           ; 0 bytes @ 0x0
  2556                           
  2557  0071                     ?_Flash_Memory_Write:	
  2558                           ; 0 bytes @ 0x0
  2559                           
  2560  0071                     ?_Flash_Memory_Modify:	
  2561                           ; 0 bytes @ 0x0
  2562                           
  2563  0071                     ?_setTemp_Initialization:	
  2564                           ; 0 bytes @ 0x0
  2565                           
  2566  0071                     ?_setTemp_Main:	
  2567                           ; 0 bytes @ 0x0
  2568                           
  2569  0071                     ?_setOverTemp_Exceptions:	
  2570                           ; 0 bytes @ 0x0
  2571                           
  2572  0071                     ?_setPowerFault_Initialization:	
  2573                           ; 0 bytes @ 0x0
  2574                           
  2575  0071                     ?_setPowerFault_Main:	
  2576                           ; 0 bytes @ 0x0
  2577                           
  2578  0071                     ?_setPowerFault_Exceptions:	
  2579                           ; 0 bytes @ 0x0
  2580                           
  2581  0071                     ?_setRF_Initialization:	
  2582                           ; 0 bytes @ 0x0
  2583                           
  2584  0071                     ?_setRF_Main:	
  2585                           ; 0 bytes @ 0x0
  2586                           
  2587  0071                     ?_getRxData:	
  2588                           ; 0 bytes @ 0x0
  2589                           
  2590  0071                     ?_RF_RxDisable:	
  2591                           ; 0 bytes @ 0x0
  2592                           
  2593  0071                     ?_setLog_Code:	
  2594                           ; 0 bytes @ 0x0
  2595                           
  2596  0071                     ?_setControl_Lights_Table:	
  2597                           ; 0 bytes @ 0x0
  2598                           
  2599  0071                     ?_setRFSW_Control:	
  2600                           ; 0 bytes @ 0x0
  2601                           
  2602  0071                     ?_setRFSW_AdjControl:	
  2603                           ; 0 bytes @ 0x0
  2604                           
  2605  0071                     ?_setRF_DimmerValue:	
  2606                           ; 0 bytes @ 0x0
  2607                           
  2608  0071                     ?_setSw_Initialization:	
  2609                           ; 0 bytes @ 0x0
  2610                           
  2611  0071                     ?_setSw_Main:	
  2612                           ; 0 bytes @ 0x0
  2613                           
  2614  0071                     ?_Sw_DimmerOnFunc:	
  2615                           ; 0 bytes @ 0x0
  2616                           
  2617  0071                     ?_Sw_DimmerAdjFunc:	
  2618                           ; 0 bytes @ 0x0
  2619                           
  2620  0071                     ?_Sw_DimmerOffFunc:	
  2621                           ; 0 bytes @ 0x0
  2622                           
  2623  0071                     ?_Buzzer_Initialization:	
  2624                           ; 0 bytes @ 0x0
  2625                           
  2626  0071                     ?_Buzzer_Main:	
  2627                           ; 0 bytes @ 0x0
  2628                           
  2629  0071                     ?_CC2500_TxData:	
  2630                           ; 0 bytes @ 0x0
  2631                           
  2632  0071                     ?_CC2500_RxData:	
  2633                           ; 0 bytes @ 0x0
  2634                           
  2635  0071                     ?_CC2500_PowerOnInitial:	
  2636                           ; 0 bytes @ 0x0
  2637                           
  2638  0071                     ?_DelayOffPointSelect:	
  2639                           ; 0 bytes @ 0x0
  2640                           
  2641  0071                     ?_DelayOff_Initialization:	
  2642                           ; 0 bytes @ 0x0
  2643                           
  2644  0071                     ?_DelayOff_Main:	
  2645                           ; 0 bytes @ 0x0
  2646                           
  2647  0071                     ?_DimmerLightsPointSelect:	
  2648                           ; 0 bytes @ 0x0
  2649                           
  2650  0071                     ?_DimmerLights_Initialization:	
  2651                           ; 0 bytes @ 0x0
  2652                           
  2653  0071                     ?_DimmerLights_Close:	
  2654                           ; 0 bytes @ 0x0
  2655                           
  2656  0071                     ?_DimmerLights_Main:	
  2657                           ; 0 bytes @ 0x0
  2658                           
  2659  0071                     ?_DimmerLights_Exceptions:	
  2660                           ; 0 bytes @ 0x0
  2661                           
  2662  0071                     ?_setDimmerLights_AdjRF:	
  2663                           ; 0 bytes @ 0x0
  2664                           
  2665  0071                     ?_LedPointSelect:	
  2666                           ; 0 bytes @ 0x0
  2667                           
  2668  0071                     ?_LED_Initialization:	
  2669                           ; 0 bytes @ 0x0
  2670                           
  2671  0071                     ?_LED_Main:	
  2672                           ; 0 bytes @ 0x0
  2673                           
  2674  0071                     ?_main:	
  2675                           ; 0 bytes @ 0x0
  2676                           
  2677  0071                     ?_ISR:	
  2678                           ; 0 bytes @ 0x0
  2679                           
  2680  0071                     ?_setDimmerReClock:	
  2681                           ; 0 bytes @ 0x0
  2682                           
  2683  0071                     ??_setDimmerReClock:	
  2684                           ; 0 bytes @ 0x0
  2685                           
  2686  0071                     ?_setINT_GO:	
  2687                           ; 0 bytes @ 0x0
  2688                           
  2689  0071                     ?_Flash_Memory_Unlock:	
  2690                           ; 0 bytes @ 0x0
  2691                           
  2692  0071                     ?_Flash_Memory_Erasing:	
  2693                           ; 0 bytes @ 0x0
  2694                           
  2695  0071                     ?_RfPointSelect:	
  2696                           ; 0 bytes @ 0x0
  2697                           
  2698  0071                     ?_RfSWPointSelect:	
  2699                           ; 0 bytes @ 0x0
  2700                           
  2701  0071                     ?_TouchPower:	
  2702                           ; 0 bytes @ 0x0
  2703                           
  2704  0071                     ?_SwPointSelect:	
  2705                           ; 0 bytes @ 0x0
  2706                           
  2707  0071                     ?i1_RfPointSelect:	
  2708                           ; 0 bytes @ 0x0
  2709                           
  2710  0071                     ??i1_RfPointSelect:	
  2711                           ; 0 bytes @ 0x0
  2712                           
  2713  0071                     ?_DelayTimejudge:	
  2714                           ; 0 bytes @ 0x0
  2715                           
  2716  0071                     ?_getDimmerLights_StatusFlag:	
  2717                           ; 1 bytes @ 0x0
  2718                           
  2719  0071                     ?_getPercentValue:	
  2720                           ; 1 bytes @ 0x0
  2721                           
  2722  0071                     ?_Flash_Memory_Read:	
  2723                           ; 1 bytes @ 0x0
  2724                           
  2725  0071                     ?_getPF_Safe:	
  2726                           ; 1 bytes @ 0x0
  2727                           
  2728  0071                     ?_setPercentValue:	
  2729                           ; 1 bytes @ 0x0
  2730                           
  2731  0071                     ?_getTemp_Safe:	
  2732                           ; 1 bytes @ 0x0
  2733                           
  2734  0071                     setRF_Initialization@rf:	
  2735                           ; 1 bytes @ 0x0
  2736                           
  2737                           
  2738                           ; 1 bytes @ 0x0
  2739  0071                     	ds	1
  2740  0072                     i1RfPointSelect@rf:	
  2741                           
  2742                           ; 1 bytes @ 0x1
  2743  0072                     	ds	1
  2744  0073                     ?_setRF_ReceiveGO:	
  2745  0073                     setRF_ReceiveGO@command:	
  2746                           ; 0 bytes @ 0x2
  2747                           
  2748                           
  2749                           ; 1 bytes @ 0x2
  2750  0073                     	ds	1
  2751  0074                     ??_setRF_ReceiveGO:	
  2752  0074                     setRF_ReceiveGO@rf:	
  2753                           ; 0 bytes @ 0x3
  2754                           
  2755                           
  2756                           ; 1 bytes @ 0x3
  2757  0074                     	ds	1
  2758  0075                     ??_INT_ISR:	
  2759  0075                     ??_ISR:	
  2760                           ; 0 bytes @ 0x4
  2761                           
  2762                           
  2763                           ; 0 bytes @ 0x4
  2764  0075                     	ds	1
  2765                           
  2766                           	psect	cstackBANK0
  2767  0020                     __pcstackBANK0:	
  2768  0020                     ??_CC2500_WriteByte:	
  2769  0020                     ??_CC2500_ReadByte:	
  2770                           ; 0 bytes @ 0x0
  2771                           
  2772  0020                     ?_DelayTime_1us:	
  2773                           ; 0 bytes @ 0x0
  2774                           
  2775  0020                     ??_DelayTimejudge:	
  2776                           ; 0 bytes @ 0x0
  2777                           
  2778  0020                     ??_Dimmer_Initialization:	
  2779                           ; 0 bytes @ 0x0
  2780                           
  2781  0020                     ??_getDimmerLights_StatusFlag:	
  2782                           ; 0 bytes @ 0x0
  2783                           
  2784  0020                     ??_MainT_Initialization:	
  2785                           ; 0 bytes @ 0x0
  2786                           
  2787  0020                     ??_MainT_ResetClock:	
  2788                           ; 0 bytes @ 0x0
  2789                           
  2790  0020                     ??_setTemp_Enable:	
  2791                           ; 0 bytes @ 0x0
  2792                           
  2793  0020                     ??_clearingWDT:	
  2794                           ; 0 bytes @ 0x0
  2795                           
  2796  0020                     ??_IO_Set:	
  2797                           ; 0 bytes @ 0x0
  2798                           
  2799  0020                     ??_TMR0_Set:	
  2800                           ; 0 bytes @ 0x0
  2801                           
  2802  0020                     ??_ADC_Set:	
  2803                           ; 0 bytes @ 0x0
  2804                           
  2805  0020                     ??_INT_Set:	
  2806                           ; 0 bytes @ 0x0
  2807                           
  2808  0020                     ??_IOC_Set:	
  2809                           ; 0 bytes @ 0x0
  2810                           
  2811  0020                     ??_Watch_Dog_set:	
  2812                           ; 0 bytes @ 0x0
  2813                           
  2814  0020                     ??_Flash_Memory_Read:	
  2815                           ; 0 bytes @ 0x0
  2816                           
  2817  0020                     ??_Flash_Memory_Write:	
  2818                           ; 0 bytes @ 0x0
  2819                           
  2820  0020                     ??_setTemp_Initialization:	
  2821                           ; 0 bytes @ 0x0
  2822                           
  2823  0020                     ??_getPF_Safe:	
  2824                           ; 0 bytes @ 0x0
  2825                           
  2826  0020                     ??_setPowerFault_Initialization:	
  2827                           ; 0 bytes @ 0x0
  2828                           
  2829  0020                     ??_setRF_Initialization:	
  2830                           ; 0 bytes @ 0x0
  2831                           
  2832  0020                     ??_Buzzer_Initialization:	
  2833                           ; 0 bytes @ 0x0
  2834                           
  2835  0020                     ??_Buzzer_Main:	
  2836                           ; 0 bytes @ 0x0
  2837                           
  2838  0020                     ??_DelayOffPointSelect:	
  2839                           ; 0 bytes @ 0x0
  2840                           
  2841  0020                     ??_DimmerLightsPointSelect:	
  2842                           ; 0 bytes @ 0x0
  2843                           
  2844  0020                     ??_LedPointSelect:	
  2845                           ; 0 bytes @ 0x0
  2846                           
  2847  0020                     ??_setINT_GO:	
  2848                           ; 0 bytes @ 0x0
  2849                           
  2850  0020                     ??_Flash_Memory_Unlock:	
  2851                           ; 0 bytes @ 0x0
  2852                           
  2853  0020                     ??_Flash_Memory_Erasing:	
  2854                           ; 0 bytes @ 0x0
  2855                           
  2856  0020                     ??_getTemp_Safe:	
  2857                           ; 0 bytes @ 0x0
  2858                           
  2859  0020                     ??_RfPointSelect:	
  2860                           ; 0 bytes @ 0x0
  2861                           
  2862  0020                     ??_RfSWPointSelect:	
  2863                           ; 0 bytes @ 0x0
  2864                           
  2865  0020                     ??_TouchPower:	
  2866                           ; 0 bytes @ 0x0
  2867                           
  2868  0020                     ??_SwPointSelect:	
  2869                           ; 0 bytes @ 0x0
  2870                           
  2871  0020                     ?_getAD:	
  2872                           ; 0 bytes @ 0x0
  2873                           
  2874  0020                     ?___wmul:	
  2875                           ; 2 bytes @ 0x0
  2876                           
  2877  0020                     ?___ftpack:	
  2878                           ; 2 bytes @ 0x0
  2879                           
  2880  0020                     setINT_GO@command:	
  2881                           ; 3 bytes @ 0x0
  2882                           
  2883  0020                     getAD@adcon1:	
  2884                           ; 1 bytes @ 0x0
  2885                           
  2886  0020                     setTemp_Enable@command:	
  2887                           ; 1 bytes @ 0x0
  2888                           
  2889  0020                     DelayTime_1us@count:	
  2890                           ; 1 bytes @ 0x0
  2891                           
  2892  0020                     ___wmul@multiplier:	
  2893                           ; 2 bytes @ 0x0
  2894                           
  2895  0020                     ___ftpack@arg:	
  2896                           ; 2 bytes @ 0x0
  2897                           
  2898                           
  2899                           ; 3 bytes @ 0x0
  2900  0020                     	ds	1
  2901  0021                     ??_Mcu_Initialization:	
  2902  0021                     ??_Temp_Initialization:	
  2903                           ; 0 bytes @ 0x1
  2904                           
  2905  0021                     ??_PowerFault_Initialization:	
  2906                           ; 0 bytes @ 0x1
  2907                           
  2908  0021                     ??_RF_Initialization:	
  2909                           ; 0 bytes @ 0x1
  2910                           
  2911  0021                     CC2500_WriteByte@loop_a:	
  2912                           ; 0 bytes @ 0x1
  2913                           
  2914  0021                     CC2500_ReadByte@loop_b:	
  2915                           ; 1 bytes @ 0x1
  2916                           
  2917  0021                     DelayOffPointSelect@sw:	
  2918                           ; 1 bytes @ 0x1
  2919                           
  2920  0021                     DelayTimejudge@i:	
  2921                           ; 1 bytes @ 0x1
  2922                           
  2923  0021                     DimmerLightsPointSelect@lights:	
  2924                           ; 1 bytes @ 0x1
  2925                           
  2926  0021                     getDimmerLights_StatusFlag@Status:	
  2927                           ; 1 bytes @ 0x1
  2928                           
  2929  0021                     LedPointSelect@led:	
  2930                           ; 1 bytes @ 0x1
  2931                           
  2932  0021                     Flash_Memory_Read@i:	
  2933                           ; 1 bytes @ 0x1
  2934                           
  2935  0021                     Flash_Memory_Write@i:	
  2936                           ; 1 bytes @ 0x1
  2937                           
  2938  0021                     RfPointSelect@rf:	
  2939                           ; 1 bytes @ 0x1
  2940                           
  2941  0021                     RfSWPointSelect@sw:	
  2942                           ; 1 bytes @ 0x1
  2943                           
  2944  0021                     SwPointSelect@sw:	
  2945                           ; 1 bytes @ 0x1
  2946                           
  2947                           
  2948                           ; 1 bytes @ 0x1
  2949  0021                     	ds	1
  2950  0022                     ??_CC2500_WriteCommand:	
  2951  0022                     ??_CC2500_ReadStatus:	
  2952                           ; 0 bytes @ 0x2
  2953                           
  2954  0022                     ?_setRF_RxStatus:	
  2955                           ; 0 bytes @ 0x2
  2956                           
  2957  0022                     ??_DelayTime_1us:	
  2958                           ; 0 bytes @ 0x2
  2959                           
  2960  0022                     ?_CC2500_WriteREG:	
  2961                           ; 0 bytes @ 0x2
  2962                           
  2963  0022                     ??_DlyOff_Initialization:	
  2964                           ; 0 bytes @ 0x2
  2965                           
  2966  0022                     ?_setSw_Status:	
  2967                           ; 0 bytes @ 0x2
  2968                           
  2969  0022                     ?_setRFSW_Status:	
  2970                           ; 0 bytes @ 0x2
  2971                           
  2972  0022                     ?_setDimmerLights_Trigger:	
  2973                           ; 0 bytes @ 0x2
  2974                           
  2975  0022                     ?_setDimmerLights_Switch:	
  2976                           ; 0 bytes @ 0x2
  2977                           
  2978  0022                     ??_setTxData:	
  2979                           ; 0 bytes @ 0x2
  2980                           
  2981  0022                     ??_setDimmerLights_Initialization:	
  2982                           ; 0 bytes @ 0x2
  2983                           
  2984  0022                     ?_setDimmerLights_TriggerERROR:	
  2985                           ; 0 bytes @ 0x2
  2986                           
  2987  0022                     ?_setLED:	
  2988                           ; 0 bytes @ 0x2
  2989                           
  2990  0022                     ??_setLED_Main:	
  2991                           ; 0 bytes @ 0x2
  2992                           
  2993  0022                     ??_setSw_Enable:	
  2994                           ; 0 bytes @ 0x2
  2995                           
  2996  0022                     ?_setRF_Enable:	
  2997                           ; 0 bytes @ 0x2
  2998                           
  2999  0022                     ?_setDimmerLights_AdjGo:	
  3000                           ; 0 bytes @ 0x2
  3001                           
  3002  0022                     ?_setDimmerLights_TriggerAdj:	
  3003                           ; 0 bytes @ 0x2
  3004                           
  3005  0022                     ?_setRF_Learn:	
  3006                           ; 0 bytes @ 0x2
  3007                           
  3008  0022                     CC2500_WriteREG@value:	
  3009                           ; 0 bytes @ 0x2
  3010                           
  3011  0022                     DlyOff_Initialization@sw:	
  3012                           ; 1 bytes @ 0x2
  3013                           
  3014  0022                     DelayTimejudge@value:	
  3015                           ; 1 bytes @ 0x2
  3016                           
  3017  0022                     _getDimmerLights_StatusFlag$1629:	
  3018                           ; 1 bytes @ 0x2
  3019                           
  3020  0022                     setDimmerLights_TriggerERROR@command:	
  3021                           ; 1 bytes @ 0x2
  3022                           
  3023  0022                     setDimmerLights_Switch@command:	
  3024                           ; 1 bytes @ 0x2
  3025                           
  3026  0022                     setDimmerLights_AdjGo@command:	
  3027                           ; 1 bytes @ 0x2
  3028                           
  3029  0022                     setDimmerLights_Trigger@command:	
  3030                           ; 1 bytes @ 0x2
  3031                           
  3032  0022                     setDimmerLights_TriggerAdj@command:	
  3033                           ; 1 bytes @ 0x2
  3034                           
  3035  0022                     setLED@command:	
  3036                           ; 1 bytes @ 0x2
  3037                           
  3038  0022                     Flash_Memory_Read@address:	
  3039                           ; 1 bytes @ 0x2
  3040                           
  3041  0022                     setRF_Learn@command:	
  3042                           ; 1 bytes @ 0x2
  3043                           
  3044  0022                     setRF_RxStatus@command:	
  3045                           ; 1 bytes @ 0x2
  3046                           
  3047  0022                     setRF_Enable@command:	
  3048                           ; 1 bytes @ 0x2
  3049                           
  3050  0022                     setRFSW_Status@command:	
  3051                           ; 1 bytes @ 0x2
  3052                           
  3053  0022                     setSw_Enable@command:	
  3054                           ; 1 bytes @ 0x2
  3055                           
  3056  0022                     setSw_Status@command:	
  3057                           ; 1 bytes @ 0x2
  3058                           
  3059  0022                     DelayTime_1us@i:	
  3060                           ; 1 bytes @ 0x2
  3061                           
  3062  0022                     ___wmul@multiplicand:	
  3063                           ; 2 bytes @ 0x2
  3064                           
  3065                           
  3066                           ; 2 bytes @ 0x2
  3067  0022                     	ds	1
  3068  0023                     ??_setRF_RxStatus:	
  3069  0023                     ??_CC2500_WriteREG:	
  3070                           ; 0 bytes @ 0x3
  3071                           
  3072  0023                     ??_setSw_Status:	
  3073                           ; 0 bytes @ 0x3
  3074                           
  3075  0023                     ??_setRFSW_Status:	
  3076                           ; 0 bytes @ 0x3
  3077                           
  3078  0023                     ??_setDimmerLights_Trigger:	
  3079                           ; 0 bytes @ 0x3
  3080                           
  3081  0023                     ??_setDimmerLights_Switch:	
  3082                           ; 0 bytes @ 0x3
  3083                           
  3084  0023                     ??_setDimmerLights_TriggerERROR:	
  3085                           ; 0 bytes @ 0x3
  3086                           
  3087  0023                     ??_setLED:	
  3088                           ; 0 bytes @ 0x3
  3089                           
  3090  0023                     ??_setRF_Enable:	
  3091                           ; 0 bytes @ 0x3
  3092                           
  3093  0023                     ??_DelayOff_Initialization:	
  3094                           ; 0 bytes @ 0x3
  3095                           
  3096  0023                     ?_setDelayOff_GO:	
  3097                           ; 0 bytes @ 0x3
  3098                           
  3099  0023                     ??_DimmerLights_Close:	
  3100                           ; 0 bytes @ 0x3
  3101                           
  3102  0023                     ??_setDimmerLights_AdjGo:	
  3103                           ; 0 bytes @ 0x3
  3104                           
  3105  0023                     ??_setDimmerLights_TriggerAdj:	
  3106                           ; 0 bytes @ 0x3
  3107                           
  3108  0023                     ??_getAD:	
  3109                           ; 0 bytes @ 0x3
  3110                           
  3111  0023                     ??_setRF_Learn:	
  3112                           ; 0 bytes @ 0x3
  3113                           
  3114  0023                     CC2500_WriteCommand@command:	
  3115                           ; 0 bytes @ 0x3
  3116                           
  3117  0023                     CC2500_ReadStatus@status_addr:	
  3118                           ; 1 bytes @ 0x3
  3119                           
  3120  0023                     setDelayOff_GO@command:	
  3121                           ; 1 bytes @ 0x3
  3122                           
  3123  0023                     setDimmerLights_Initialization@lights:	
  3124                           ; 1 bytes @ 0x3
  3125                           
  3126  0023                     setDimmerLights_TriggerERROR@lights:	
  3127                           ; 1 bytes @ 0x3
  3128                           
  3129  0023                     setDimmerLights_Switch@lights:	
  3130                           ; 1 bytes @ 0x3
  3131                           
  3132  0023                     setDimmerLights_AdjGo@lights:	
  3133                           ; 1 bytes @ 0x3
  3134                           
  3135  0023                     setDimmerLights_Trigger@lights:	
  3136                           ; 1 bytes @ 0x3
  3137                           
  3138  0023                     setDimmerLights_TriggerAdj@lights:	
  3139                           ; 1 bytes @ 0x3
  3140                           
  3141  0023                     setLED@led:	
  3142                           ; 1 bytes @ 0x3
  3143                           
  3144  0023                     getAD@adcon0:	
  3145                           ; 1 bytes @ 0x3
  3146                           
  3147  0023                     Flash_Memory_Read@ret:	
  3148                           ; 1 bytes @ 0x3
  3149                           
  3150  0023                     setRF_Learn@rf:	
  3151                           ; 1 bytes @ 0x3
  3152                           
  3153  0023                     setRF_RxStatus@rf:	
  3154                           ; 1 bytes @ 0x3
  3155                           
  3156  0023                     setTxData@rf:	
  3157                           ; 1 bytes @ 0x3
  3158                           
  3159  0023                     setRF_Enable@rf:	
  3160                           ; 1 bytes @ 0x3
  3161                           
  3162  0023                     setRFSW_Status@sw:	
  3163                           ; 1 bytes @ 0x3
  3164                           
  3165  0023                     setSw_Status@sw:	
  3166                           ; 1 bytes @ 0x3
  3167                           
  3168  0023                     ___ftpack@exp:	
  3169                           ; 1 bytes @ 0x3
  3170                           
  3171                           
  3172                           ; 1 bytes @ 0x3
  3173  0023                     	ds	1
  3174  0024                     ??_CC2500_ClearTXFIFO:	
  3175  0024                     ??_CC2500_ClearRXFIFO:	
  3176                           ; 0 bytes @ 0x4
  3177                           
  3178  0024                     ??_CC2500_SIDLEMode:	
  3179                           ; 0 bytes @ 0x4
  3180                           
  3181  0024                     ?_setDimmerLights:	
  3182                           ; 0 bytes @ 0x4
  3183                           
  3184  0024                     ??_setDimmerLights_ERROR:	
  3185                           ; 0 bytes @ 0x4
  3186                           
  3187  0024                     ??_setLED_Initialization:	
  3188                           ; 0 bytes @ 0x4
  3189                           
  3190  0024                     ??_getTemp_AD:	
  3191                           ; 0 bytes @ 0x4
  3192                           
  3193  0024                     ??_getPowerFault_AD:	
  3194                           ; 0 bytes @ 0x4
  3195                           
  3196  0024                     ??_Flash_Memory_Modify:	
  3197                           ; 0 bytes @ 0x4
  3198                           
  3199  0024                     ??_RF_RxDisable:	
  3200                           ; 0 bytes @ 0x4
  3201                           
  3202  0024                     ??_setSw_Initialization:	
  3203                           ; 0 bytes @ 0x4
  3204                           
  3205  0024                     ??_Sw_DimmerAdjFunc:	
  3206                           ; 0 bytes @ 0x4
  3207                           
  3208  0024                     ??_CC2500_TxData:	
  3209                           ; 0 bytes @ 0x4
  3210                           
  3211  0024                     ??_CC2500_RxData:	
  3212                           ; 0 bytes @ 0x4
  3213                           
  3214  0024                     ??_DimmerLights_Initialization:	
  3215                           ; 0 bytes @ 0x4
  3216                           
  3217  0024                     ??___wmul:	
  3218                           ; 0 bytes @ 0x4
  3219                           
  3220  0024                     CC2500_WriteREG@w_addr:	
  3221                           ; 0 bytes @ 0x4
  3222                           
  3223  0024                     setDelayOff_GO@value:	
  3224                           ; 1 bytes @ 0x4
  3225                           
  3226  0024                     setDimmerLights@status:	
  3227                           ; 1 bytes @ 0x4
  3228                           
  3229  0024                     setLED_Initialization@led:	
  3230                           ; 1 bytes @ 0x4
  3231                           
  3232  0024                     setLED_Main@led:	
  3233                           ; 1 bytes @ 0x4
  3234                           
  3235  0024                     RF_RxDisable@rf:	
  3236                           ; 1 bytes @ 0x4
  3237                           
  3238  0024                     setSw_Initialization@sw:	
  3239                           ; 1 bytes @ 0x4
  3240                           
  3241  0024                     Sw_DimmerAdjFunc@Idle:	
  3242                           ; 1 bytes @ 0x4
  3243                           
  3244  0024                     ___ftpack@sign:	
  3245                           ; 1 bytes @ 0x4
  3246                           
  3247  0024                     DelayTime_1us@j:	
  3248                           ; 1 bytes @ 0x4
  3249                           
  3250  0024                     ___wmul@product:	
  3251                           ; 2 bytes @ 0x4
  3252                           
  3253                           
  3254                           ; 2 bytes @ 0x4
  3255  0024                     	ds	1
  3256  0025                     ??_CC2500_InitSetREG:	
  3257  0025                     ??_CC2500_InitPATable:	
  3258                           ; 0 bytes @ 0x5
  3259                           
  3260  0025                     ??_setDimmerLights:	
  3261                           ; 0 bytes @ 0x5
  3262                           
  3263  0025                     ??_Switch_Initialization:	
  3264                           ; 0 bytes @ 0x5
  3265                           
  3266  0025                     ??___ftpack:	
  3267                           ; 0 bytes @ 0x5
  3268                           
  3269  0025                     ??_setDelayOff_GO:	
  3270                           ; 0 bytes @ 0x5
  3271                           
  3272  0025                     ??_LED_Initialization:	
  3273                           ; 0 bytes @ 0x5
  3274                           
  3275  0025                     ??_LED_Main:	
  3276                           ; 0 bytes @ 0x5
  3277                           
  3278  0025                     CC2500_TxData@loop_e:	
  3279                           ; 0 bytes @ 0x5
  3280                           
  3281  0025                     CC2500_RxData@loop_f:	
  3282                           ; 1 bytes @ 0x5
  3283                           
  3284  0025                     setDimmerLights_ERROR@lights:	
  3285                           ; 1 bytes @ 0x5
  3286                           
  3287  0025                     Sw_DimmerAdjFunc@sw:	
  3288                           ; 1 bytes @ 0x5
  3289                           
  3290                           
  3291                           ; 1 bytes @ 0x5
  3292  0025                     	ds	1
  3293  0026                     ??_CC2500_PowerRST:	
  3294  0026                     ??_CC2500_FrequencyCabr:	
  3295                           ; 0 bytes @ 0x6
  3296                           
  3297  0026                     ?_setBuz:	
  3298                           ; 0 bytes @ 0x6
  3299                           
  3300  0026                     CC2500_InitSetREG@temp1:	
  3301                           ; 0 bytes @ 0x6
  3302                           
  3303  0026                     CC2500_InitPATable@temp:	
  3304                           ; 1 bytes @ 0x6
  3305                           
  3306  0026                     setDimmerLights@lights:	
  3307                           ; 1 bytes @ 0x6
  3308                           
  3309  0026                     Flash_Memory_Modify@i:	
  3310                           ; 1 bytes @ 0x6
  3311                           
  3312  0026                     setBuz@time:	
  3313                           ; 1 bytes @ 0x6
  3314                           
  3315                           
  3316                           ; 2 bytes @ 0x6
  3317  0026                     	ds	1
  3318  0027                     ??_Flash_Memory_Main:	
  3319  0027                     CC2500_InitSetREG@temp2:	
  3320                           ; 0 bytes @ 0x7
  3321                           
  3322  0027                     CC2500_InitPATable@loop_d:	
  3323                           ; 1 bytes @ 0x7
  3324                           
  3325  0027                     setDelayOff_GO@sw:	
  3326                           ; 1 bytes @ 0x7
  3327                           
  3328                           
  3329                           ; 1 bytes @ 0x7
  3330  0027                     	ds	1
  3331  0028                     ??_setBuz:	
  3332  0028                     ?___awtoft:	
  3333                           ; 0 bytes @ 0x8
  3334                           
  3335  0028                     CC2500_InitSetREG@loop_c:	
  3336                           ; 3 bytes @ 0x8
  3337                           
  3338  0028                     getTemp_AD@channel:	
  3339                           ; 1 bytes @ 0x8
  3340                           
  3341  0028                     getPowerFault_AD@channel:	
  3342                           ; 1 bytes @ 0x8
  3343                           
  3344  0028                     ___awtoft@c:	
  3345                           ; 1 bytes @ 0x8
  3346                           
  3347                           
  3348                           ; 2 bytes @ 0x8
  3349  0028                     	ds	1
  3350  0029                     ??_CC2500_PowerOnInitial:	
  3351  0029                     setBuz@count:	
  3352                           ; 0 bytes @ 0x9
  3353                           
  3354                           
  3355                           ; 1 bytes @ 0x9
  3356  0029                     	ds	1
  3357  002A                     ??_MainT:	
  3358  002A                     ??_setLog_Code:	
  3359                           ; 0 bytes @ 0xA
  3360                           
  3361  002A                     ??_DimmerLights_Exceptions:	
  3362                           ; 0 bytes @ 0xA
  3363                           
  3364  002A                     DimmerLights_Exceptions@status:	
  3365                           ; 0 bytes @ 0xA
  3366                           
  3367                           
  3368                           ; 1 bytes @ 0xA
  3369  002A                     	ds	1
  3370  002B                     ??_setOverTemp_Exceptions:	
  3371  002B                     ??_setPowerFault_Exceptions:	
  3372                           ; 0 bytes @ 0xB
  3373                           
  3374  002B                     ??___awtoft:	
  3375                           ; 0 bytes @ 0xB
  3376                           
  3377  002B                     setLog_Code@rf:	
  3378                           ; 0 bytes @ 0xB
  3379                           
  3380                           
  3381                           ; 1 bytes @ 0xB
  3382  002B                     	ds	1
  3383  002C                     setOverTemp_Exceptions@command:	
  3384  002C                     setPowerFault_Exceptions@command:	
  3385                           ; 1 bytes @ 0xC
  3386                           
  3387                           
  3388                           ; 1 bytes @ 0xC
  3389  002C                     	ds	1
  3390  002D                     ??_setTemp_Main:	
  3391  002D                     ??_setPowerFault_Main:	
  3392                           ; 0 bytes @ 0xD
  3393                           
  3394  002D                     ___awtoft@sign:	
  3395                           ; 0 bytes @ 0xD
  3396                           
  3397                           
  3398                           ; 1 bytes @ 0xD
  3399  002D                     	ds	1
  3400  002E                     ?___ftdiv:	
  3401  002E                     ?___ftmul:	
  3402                           ; 3 bytes @ 0xE
  3403                           
  3404  002E                     ___ftdiv@f2:	
  3405                           ; 3 bytes @ 0xE
  3406                           
  3407  002E                     ___ftmul@f1:	
  3408                           ; 3 bytes @ 0xE
  3409                           
  3410                           
  3411                           ; 3 bytes @ 0xE
  3412  002E                     	ds	1
  3413  002F                     ??_PowerFault_Main:	
  3414                           
  3415                           ; 0 bytes @ 0xF
  3416  002F                     	ds	1
  3417  0030                     ??_Temp_Main:	
  3418                           
  3419                           ; 0 bytes @ 0x10
  3420  0030                     	ds	1
  3421  0031                     ___ftdiv@f1:	
  3422  0031                     ___ftmul@f2:	
  3423                           ; 3 bytes @ 0x11
  3424                           
  3425                           
  3426                           ; 3 bytes @ 0x11
  3427  0031                     	ds	3
  3428  0034                     ??___ftdiv:	
  3429  0034                     ??___ftmul:	
  3430                           ; 0 bytes @ 0x14
  3431                           
  3432                           
  3433                           ; 0 bytes @ 0x14
  3434  0034                     	ds	4
  3435  0038                     ___ftdiv@cntr:	
  3436  0038                     ___ftmul@exp:	
  3437                           ; 1 bytes @ 0x18
  3438                           
  3439                           
  3440                           ; 1 bytes @ 0x18
  3441  0038                     	ds	1
  3442  0039                     ___ftdiv@f3:	
  3443  0039                     ___ftmul@f3_as_product:	
  3444                           ; 3 bytes @ 0x19
  3445                           
  3446                           
  3447                           ; 3 bytes @ 0x19
  3448  0039                     	ds	3
  3449  003C                     ___ftdiv@exp:	
  3450  003C                     ___ftmul@cntr:	
  3451                           ; 1 bytes @ 0x1C
  3452                           
  3453                           
  3454                           ; 1 bytes @ 0x1C
  3455  003C                     	ds	1
  3456  003D                     ___ftdiv@sign:	
  3457  003D                     ___ftmul@sign:	
  3458                           ; 1 bytes @ 0x1D
  3459                           
  3460                           
  3461                           ; 1 bytes @ 0x1D
  3462  003D                     	ds	1
  3463  003E                     ?___ftadd:	
  3464  003E                     ___ftadd@f1:	
  3465                           ; 3 bytes @ 0x1E
  3466                           
  3467                           
  3468                           ; 3 bytes @ 0x1E
  3469  003E                     	ds	3
  3470  0041                     ___ftadd@f2:	
  3471                           
  3472                           ; 3 bytes @ 0x21
  3473  0041                     	ds	3
  3474  0044                     ??___ftadd:	
  3475                           
  3476                           ; 0 bytes @ 0x24
  3477  0044                     	ds	4
  3478  0048                     ___ftadd@sign:	
  3479                           
  3480                           ; 1 bytes @ 0x28
  3481  0048                     	ds	1
  3482  0049                     ___ftadd@exp2:	
  3483                           
  3484                           ; 1 bytes @ 0x29
  3485  0049                     	ds	1
  3486  004A                     ___ftadd@exp1:	
  3487                           
  3488                           ; 1 bytes @ 0x2A
  3489  004A                     	ds	1
  3490  004B                     ?___fttol:	
  3491  004B                     ___fttol@f1:	
  3492                           ; 4 bytes @ 0x2B
  3493                           
  3494                           
  3495                           ; 3 bytes @ 0x2B
  3496  004B                     	ds	4
  3497  004F                     ??___fttol:	
  3498                           
  3499                           ; 0 bytes @ 0x2F
  3500  004F                     	ds	4
  3501  0053                     ___fttol@sign1:	
  3502                           
  3503                           ; 1 bytes @ 0x33
  3504  0053                     	ds	1
  3505  0054                     ___fttol@lval:	
  3506                           
  3507                           ; 4 bytes @ 0x34
  3508  0054                     	ds	4
  3509  0058                     ___fttol@exp1:	
  3510                           
  3511                           ; 1 bytes @ 0x38
  3512  0058                     	ds	1
  3513  0059                     ??_getPercentValue:	
  3514  0059                     ??_setPercentValue:	
  3515                           ; 0 bytes @ 0x39
  3516                           
  3517  0059                     setPercentValue@value:	
  3518                           ; 0 bytes @ 0x39
  3519                           
  3520                           
  3521                           ; 1 bytes @ 0x39
  3522  0059                     	ds	1
  3523  005A                     setPercentValue@i:	
  3524                           
  3525                           ; 3 bytes @ 0x3A
  3526  005A                     	ds	1
  3527  005B                     getPercentValue@value:	
  3528                           
  3529                           ; 1 bytes @ 0x3B
  3530  005B                     	ds	1
  3531  005C                     getPercentValue@i:	
  3532                           
  3533                           ; 3 bytes @ 0x3C
  3534  005C                     	ds	1
  3535  005D                     ?_setRF_DimmerLights:	
  3536  005D                     ??_Flash_Memory_Initialization:	
  3537                           ; 0 bytes @ 0x3D
  3538                           
  3539  005D                     setRF_DimmerLights@on:	
  3540                           ; 0 bytes @ 0x3D
  3541                           
  3542                           
  3543                           ; 1 bytes @ 0x3D
  3544  005D                     	ds	1
  3545  005E                     ??_setRF_DimmerLights:	
  3546  005E                     Flash_Memory_Initialization@i:	
  3547                           ; 0 bytes @ 0x3E
  3548                           
  3549                           
  3550                           ; 1 bytes @ 0x3E
  3551  005E                     	ds	1
  3552  005F                     ??_setDimmerLights_AdjRF:	
  3553                           
  3554                           ; 0 bytes @ 0x3F
  3555  005F                     	ds	1
  3556  0060                     setDimmerLights_AdjRF@lights:	
  3557  0060                     setRF_DimmerLights@status:	
  3558                           ; 1 bytes @ 0x40
  3559                           
  3560                           
  3561                           ; 1 bytes @ 0x40
  3562  0060                     	ds	1
  3563  0061                     ??_setRF_DimmerValue:	
  3564  0061                     setRF_DimmerLights@lights:	
  3565                           ; 0 bytes @ 0x41
  3566                           
  3567                           
  3568                           ; 1 bytes @ 0x41
  3569  0061                     	ds	1
  3570  0062                     ??_DlyOff_Main:	
  3571  0062                     ?_setDimmerLights_Adj:	
  3572                           ; 0 bytes @ 0x42
  3573                           
  3574  0062                     ??_setRFSW_Control:	
  3575                           ; 0 bytes @ 0x42
  3576                           
  3577  0062                     ??_Sw_DimmerOnFunc:	
  3578                           ; 0 bytes @ 0x42
  3579                           
  3580  0062                     ??_Sw_DimmerOffFunc:	
  3581                           ; 0 bytes @ 0x42
  3582                           
  3583  0062                     setDimmerLights_Adj@status:	
  3584                           ; 0 bytes @ 0x42
  3585                           
  3586  0062                     Sw_DimmerOnFunc@Idle:	
  3587                           ; 1 bytes @ 0x42
  3588                           
  3589                           
  3590                           ; 1 bytes @ 0x42
  3591  0062                     	ds	1
  3592  0063                     ??_setDimmerLights_Adj:	
  3593  0063                     setRFSW_Control@sw:	
  3594                           ; 0 bytes @ 0x43
  3595                           
  3596  0063                     setRF_DimmerValue@lights:	
  3597                           ; 1 bytes @ 0x43
  3598                           
  3599  0063                     Sw_DimmerOnFunc@sw:	
  3600                           ; 1 bytes @ 0x43
  3601                           
  3602                           
  3603                           ; 1 bytes @ 0x43
  3604  0063                     	ds	1
  3605  0064                     ??_setRFSW_AdjControl:	
  3606  0064                     DlyOff_Main@sw:	
  3607                           ; 0 bytes @ 0x44
  3608                           
  3609  0064                     setDimmerLights_Adj@lights:	
  3610                           ; 1 bytes @ 0x44
  3611                           
  3612  0064                     Sw_DimmerOffFunc@sw:	
  3613                           ; 1 bytes @ 0x44
  3614                           
  3615                           
  3616                           ; 1 bytes @ 0x44
  3617  0064                     	ds	1
  3618  0065                     ??_setDimmerLights_Main:	
  3619  0065                     ??_setSw_Main:	
  3620                           ; 0 bytes @ 0x45
  3621                           
  3622  0065                     ??_DelayOff_Main:	
  3623                           ; 0 bytes @ 0x45
  3624                           
  3625  0065                     setDimmerLights_Main@clear:	
  3626                           ; 0 bytes @ 0x45
  3627                           
  3628                           
  3629                           ; 1 bytes @ 0x45
  3630  0065                     	ds	1
  3631  0066                     setDimmerLights_Main@lights:	
  3632  0066                     setRFSW_AdjControl@sw:	
  3633                           ; 1 bytes @ 0x46
  3634                           
  3635                           
  3636                           ; 1 bytes @ 0x46
  3637  0066                     	ds	1
  3638  0067                     ??_Switch_Main:	
  3639  0067                     ??_setControl_Lights_Table:	
  3640                           ; 0 bytes @ 0x47
  3641                           
  3642  0067                     ??_DimmerLights_Main:	
  3643                           ; 0 bytes @ 0x47
  3644                           
  3645  0067                     setControl_Lights_Table@rf:	
  3646                           ; 0 bytes @ 0x47
  3647                           
  3648                           
  3649                           ; 1 bytes @ 0x47
  3650  0067                     	ds	1
  3651  0068                     ??_RF_Main:	
  3652  0068                     ??_getRxData:	
  3653                           ; 0 bytes @ 0x48
  3654                           
  3655  0068                     ??_main:	
  3656                           ; 0 bytes @ 0x48
  3657                           
  3658                           
  3659                           	psect	maintext
  3660  0802                     __pmaintext:	
  3661                           ; 0 bytes @ 0x48
  3662 ;;
  3663 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3664 ;;
  3665 ;; *************** function _main *****************
  3666 ;; Defined at:
  3667 ;;		line 7 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\main.c"
  3668 ;; Parameters:    Size  Location     Type
  3669 ;;		None
  3670 ;; Auto vars:     Size  Location     Type
  3671 ;;		None
  3672 ;; Return value:  Size  Location     Type
  3673 ;;		None               void
  3674 ;; Registers used:
  3675 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3676 ;; Tracked objects:
  3677 ;;		On entry : 17F/0
  3678 ;;		On exit  : 0/0
  3679 ;;		Unchanged: 0/0
  3680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3684 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3685 ;;Total ram usage:        0 bytes
  3686 ;; Hardware stack levels required when called:   14
  3687 ;; This function calls:
  3688 ;;		_Buzzer_Initialization
  3689 ;;		_Buzzer_Main
  3690 ;;		_CC2500_PowerOnInitial
  3691 ;;		_DelayOff_Initialization
  3692 ;;		_DelayOff_Main
  3693 ;;		_DimmerLights_Initialization
  3694 ;;		_DimmerLights_Main
  3695 ;;		_Flash_Memory_Initialization
  3696 ;;		_Flash_Memory_Main
  3697 ;;		_LED_Initialization
  3698 ;;		_LED_Main
  3699 ;;		_MainT
  3700 ;;		_MainT_Initialization
  3701 ;;		_MainT_ResetClock
  3702 ;;		_Mcu_Initialization
  3703 ;;		_PowerFault_Initialization
  3704 ;;		_PowerFault_Main
  3705 ;;		_RF_Initialization
  3706 ;;		_RF_Main
  3707 ;;		_Switch_Initialization
  3708 ;;		_Switch_Main
  3709 ;;		_Temp_Initialization
  3710 ;;		_Temp_Main
  3711 ;;		_getPowerFault_AD
  3712 ;;		_getTemp_AD
  3713 ;; This function is called by:
  3714 ;;		Startup code after reset
  3715 ;; This function uses a non-reentrant model
  3716 ;;
  3717                           
  3718                           
  3719                           ;psect for function _main
  3720  0802                     _main:	
  3721                           
  3722                           ;main.c: 9: MainT_Initialization();
  3723                           
  3724                           ;incstack = 0
  3725                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3726  0802  319A  22E7  3188   	fcall	_MainT_Initialization
  3727                           
  3728                           ;main.c: 10: Mcu_Initialization();
  3729  0805  319C  2424  3188   	fcall	_Mcu_Initialization
  3730                           
  3731                           ;main.c: 11: Flash_Memory_Initialization();
  3732  0808  318E  2621  3188   	fcall	_Flash_Memory_Initialization
  3733                           
  3734                           ;main.c: 12: LED_Initialization();
  3735  080B  3199  21EA  3188   	fcall	_LED_Initialization
  3736                           
  3737                           ;main.c: 13: Buzzer_Initialization();
  3738  080E  3199  2178  3188   	fcall	_Buzzer_Initialization
  3739                           
  3740                           ;main.c: 15: ;;
  3741                           ;main.c: 16: Temp_Initialization();
  3742  0811  3198  20E3  3188   	fcall	_Temp_Initialization
  3743                           
  3744                           ;main.c: 17: ;;
  3745                           ;main.c: 18: PowerFault_Initialization();
  3746  0814  3198  20DD  3188   	fcall	_PowerFault_Initialization
  3747                           
  3748                           ;main.c: 19: DelayOff_Initialization();
  3749  0817  3199  2134  3188   	fcall	_DelayOff_Initialization
  3750                           
  3751                           ;main.c: 21: DimmerLights_Initialization();
  3752  081A  319B  2337  3188   	fcall	_DimmerLights_Initialization
  3753                           
  3754                           ;main.c: 22: ;;
  3755                           ;main.c: 23: ;;
  3756                           ;main.c: 24: ;;
  3757                           ;main.c: 26: Switch_Initialization();
  3758  081D  319A  221C  3188   	fcall	_Switch_Initialization
  3759                           
  3760                           ;main.c: 27: RF_Initialization();
  3761  0820  3198  20F9  3188   	fcall	_RF_Initialization
  3762                           
  3763                           ;main.c: 28: CC2500_PowerOnInitial();
  3764  0823  319B  2322  3188   	fcall	_CC2500_PowerOnInitial
  3765  0826                     l9857:	
  3766                           ;main.c: 30: while(1)
  3767                           
  3768                           
  3769                           ;main.c: 31: {
  3770                           ;main.c: 32: if(TMain->PowerON)
  3771  0826  0020               	movlb	0	; select bank0
  3772  0827  086F               	movf	_TMain,w
  3773  0828  0086               	movwf	6
  3774  0829  3001               	movlw	1	; select bank2/3
  3775  082A  0087               	movwf	7
  3776  082B  1C01               	btfss	1,0
  3777  082C  2838               	goto	l9861
  3778                           
  3779                           ;main.c: 33: {
  3780                           ;main.c: 35: ;;
  3781                           ;main.c: 39: ;;
  3782                           ;main.c: 43: getTemp_AD(0x09);
  3783  082D  3009               	movlw	9
  3784  082E  3195  25BE  3188   	fcall	_getTemp_AD
  3785                           
  3786                           ;main.c: 47: getPowerFault_AD(0x11);
  3787  0831  3011               	movlw	17
  3788  0832  3190  2035  3188   	fcall	_getPowerFault_AD
  3789                           
  3790                           ;main.c: 59: Buzzer_Main();
  3791  0835  318C  241C  3188   	fcall	_Buzzer_Main
  3792  0838                     l9861:	
  3793                           
  3794                           ;main.c: 61: }
  3795                           ;main.c: 63: if(TMain->T0_Timerout)
  3796  0838  0020               	movlb	0	; select bank0
  3797  0839  086F               	movf	_TMain,w
  3798  083A  0086               	movwf	6
  3799  083B  3001               	movlw	1	; select bank2/3
  3800  083C  0087               	movwf	7
  3801  083D  1C81               	btfss	1,1
  3802  083E  2826               	goto	l9857
  3803                           
  3804                           ;main.c: 64: {
  3805                           ;main.c: 65: TMain->T0_Timerout = 0;
  3806  083F  086F               	movf	_TMain,w
  3807  0840  0086               	movwf	6
  3808  0841  3001               	movlw	1	; select bank2/3
  3809  0842  0087               	movwf	7
  3810  0843  1081               	bcf	1,1
  3811                           
  3812                           ;main.c: 66: MainT();
  3813  0844  3188  206A  3188   	fcall	_MainT
  3814                           
  3815                           ;main.c: 67: MainT_ResetClock();
  3816  0847  319D  2518  3188   	fcall	_MainT_ResetClock
  3817                           
  3818                           ;main.c: 68: if(TMain->PowerON)
  3819  084A  0020               	movlb	0	; select bank0
  3820  084B  086F               	movf	_TMain,w
  3821  084C  0086               	movwf	6
  3822  084D  3001               	movlw	1	; select bank2/3
  3823  084E  0087               	movwf	7
  3824  084F  1C01               	btfss	1,0
  3825  0850  2826               	goto	l9857
  3826                           
  3827                           ;main.c: 69: {
  3828                           ;main.c: 70: Flash_Memory_Main();
  3829  0851  3191  213E  3188   	fcall	_Flash_Memory_Main
  3830                           
  3831                           ;main.c: 72: LED_Main();
  3832  0854  3199  21F6  3188   	fcall	_LED_Main
  3833                           
  3834                           ;main.c: 74: ;;
  3835                           ;main.c: 75: Temp_Main();
  3836  0857  3198  20E6  3188   	fcall	_Temp_Main
  3837                           
  3838                           ;main.c: 76: ;;
  3839                           ;main.c: 77: PowerFault_Main();
  3840  085A  3198  20E0  3188   	fcall	_PowerFault_Main
  3841                           
  3842                           ;main.c: 79: ;;
  3843                           ;main.c: 80: DimmerLights_Main();
  3844  085D  3199  2199  3188   	fcall	_DimmerLights_Main
  3845                           
  3846                           ;main.c: 81: Switch_Main();
  3847  0860  3199  214C  3188   	fcall	_Switch_Main
  3848                           
  3849                           ;main.c: 82: ;;
  3850                           ;main.c: 83: ;;
  3851                           ;main.c: 85: RF_Main();
  3852  0863  3198  20FD  3188   	fcall	_RF_Main
  3853                           
  3854                           ;main.c: 86: DelayOff_Main();
  3855  0866  3199  213C  3188   	fcall	_DelayOff_Main
  3856  0869  2826               	goto	l9857
  3857  086A                     __end_of_main:	
  3858                           
  3859                           	psect	text1
  3860  15BE                     __ptext1:	
  3861 ;; *************** function _getTemp_AD *****************
  3862 ;; Defined at:
  3863 ;;		line 35 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\OverTemperature_B1.c"
  3864 ;; Parameters:    Size  Location     Type
  3865 ;;  channel         1    wreg     unsigned char 
  3866 ;; Auto vars:     Size  Location     Type
  3867 ;;  channel         1    8[BANK0 ] unsigned char 
  3868 ;; Return value:  Size  Location     Type
  3869 ;;		None               void
  3870 ;; Registers used:
  3871 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3872 ;; Tracked objects:
  3873 ;;		On entry : 0/0
  3874 ;;		On exit  : 0/0
  3875 ;;		Unchanged: 0/0
  3876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3878 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3879 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3880 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3881 ;;Total ram usage:        5 bytes
  3882 ;; Hardware stack levels used:    1
  3883 ;; Hardware stack levels required when called:    5
  3884 ;; This function calls:
  3885 ;;		_getAD
  3886 ;; This function is called by:
  3887 ;;		_main
  3888 ;; This function uses a non-reentrant model
  3889 ;;
  3890                           
  3891                           
  3892                           ;psect for function _getTemp_AD
  3893  15BE                     _getTemp_AD:	
  3894                           
  3895                           ;incstack = 0
  3896                           ; Regs used in _getTemp_AD: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3897                           ;getTemp_AD@channel stored from wreg
  3898  15BE  0020               	movlb	0	; select bank0
  3899  15BF  00A8               	movwf	getTemp_AD@channel
  3900                           
  3901                           ;OverTemperature_B1.c: 37: if(Temp->ADtoGO)
  3902  15C0  0879               	movf	_Temp,w
  3903  15C1  0086               	movwf	6
  3904  15C2  3001               	movlw	1	; select bank2/3
  3905  15C3  0087               	movwf	7
  3906  15C4  1D01               	btfss	1,2
  3907  15C5  0008               	return
  3908                           
  3909                           ;OverTemperature_B1.c: 38: {
  3910                           ;OverTemperature_B1.c: 39: Temp->ADRES=getAD(channel,0xf0);
  3911  15C6  30F0               	movlw	240
  3912  15C7  00A4               	movwf	??_getTemp_AD
  3913  15C8  0824               	movf	??_getTemp_AD,w
  3914  15C9  00A0               	movwf	getAD@adcon1
  3915  15CA  0828               	movf	getTemp_AD@channel,w
  3916  15CB  319B  2378  3195   	fcall	_getAD
  3917  15CE  0879               	movf	_Temp,w
  3918  15CF  3E0A               	addlw	10
  3919  15D0  0086               	movwf	6
  3920  15D1  3001               	movlw	1	; select bank2/3
  3921  15D2  0087               	movwf	7
  3922  15D3  0020               	movlb	0	; select bank0
  3923  15D4  0820               	movf	?_getAD,w
  3924  15D5  3FC0               	movwi [0]fsr1
  3925  15D6  0821               	movf	?_getAD+1,w
  3926  15D7  3FC1               	movwi [1]fsr1
  3927                           
  3928                           ;OverTemperature_B1.c: 40: if(Temp->ADH[0] < Temp->ADRES)
  3929  15D8  0879               	movf	_Temp,w
  3930  15D9  3E0A               	addlw	10
  3931  15DA  0086               	movwf	6
  3932  15DB  3001               	movlw	1	; select bank2/3
  3933  15DC  0087               	movwf	7
  3934  15DD  3F40               	moviw [0]fsr1
  3935  15DE  00A4               	movwf	??_getTemp_AD
  3936  15DF  3F41               	moviw [1]fsr1
  3937  15E0  00A5               	movwf	??_getTemp_AD+1
  3938  15E1  0879               	movf	_Temp,w
  3939  15E2  3E06               	addlw	6
  3940  15E3  0086               	movwf	6
  3941  15E4  3001               	movlw	1	; select bank2/3
  3942  15E5  0087               	movwf	7
  3943  15E6  3F40               	moviw [0]fsr1
  3944  15E7  00A6               	movwf	??_getTemp_AD+2
  3945  15E8  3F41               	moviw [1]fsr1
  3946  15E9  00A7               	movwf	??_getTemp_AD+3
  3947  15EA  0825               	movf	??_getTemp_AD+1,w
  3948  15EB  0227               	subwf	??_getTemp_AD+3,w
  3949  15EC  1D03               	skipz
  3950  15ED  2DF0               	goto	u10095
  3951  15EE  0824               	movf	??_getTemp_AD,w
  3952  15EF  0226               	subwf	??_getTemp_AD+2,w
  3953  15F0                     u10095:	
  3954  15F0  1803               	skipnc
  3955  15F1  2E01               	goto	l9741
  3956                           
  3957                           ;OverTemperature_B1.c: 41: {
  3958                           ;OverTemperature_B1.c: 42: Temp->ADH[0]=Temp->ADRES;
  3959  15F2  0879               	movf	_Temp,w
  3960  15F3  3E0A               	addlw	10
  3961  15F4  0086               	movwf	6
  3962  15F5  3001               	movlw	1	; select bank2/3
  3963  15F6  0087               	movwf	7
  3964  15F7  0879               	movf	_Temp,w
  3965  15F8  3E06               	addlw	6
  3966  15F9  0084               	movwf	4
  3967  15FA  3001               	movlw	1	; select bank2/3
  3968  15FB  0085               	movwf	5
  3969  15FC  3F40               	moviw [0]fsr1
  3970  15FD  3F80               	movwi [0]fsr0
  3971  15FE  3F41               	moviw [1]fsr1
  3972  15FF  3F81               	movwi [1]fsr0
  3973                           
  3974                           ;OverTemperature_B1.c: 43: }
  3975  1600  0008               	return
  3976  1601                     l9741:	
  3977                           
  3978                           ;OverTemperature_B1.c: 44: else if(Temp->ADH[1] < Temp->ADRES)
  3979  1601  0879               	movf	_Temp,w
  3980  1602  3E0A               	addlw	10
  3981  1603  0086               	movwf	6
  3982  1604  3001               	movlw	1	; select bank2/3
  3983  1605  0087               	movwf	7
  3984  1606  3F40               	moviw [0]fsr1
  3985  1607  00A4               	movwf	??_getTemp_AD
  3986  1608  3F41               	moviw [1]fsr1
  3987  1609  00A5               	movwf	??_getTemp_AD+1
  3988  160A  0879               	movf	_Temp,w
  3989  160B  3E08               	addlw	8
  3990  160C  0086               	movwf	6
  3991  160D  3001               	movlw	1	; select bank2/3
  3992  160E  0087               	movwf	7
  3993  160F  3F40               	moviw [0]fsr1
  3994  1610  00A6               	movwf	??_getTemp_AD+2
  3995  1611  3F41               	moviw [1]fsr1
  3996  1612  00A7               	movwf	??_getTemp_AD+3
  3997  1613  0825               	movf	??_getTemp_AD+1,w
  3998  1614  0227               	subwf	??_getTemp_AD+3,w
  3999  1615  1D03               	skipz
  4000  1616  2E19               	goto	u10105
  4001  1617  0824               	movf	??_getTemp_AD,w
  4002  1618  0226               	subwf	??_getTemp_AD+2,w
  4003  1619                     u10105:	
  4004  1619  1803               	skipnc
  4005  161A  0008               	return
  4006                           
  4007                           ;OverTemperature_B1.c: 45: {
  4008                           ;OverTemperature_B1.c: 46: Temp->ADH[1]=Temp->ADRES;
  4009  161B  0879               	movf	_Temp,w
  4010  161C  3E0A               	addlw	10
  4011  161D  0086               	movwf	6
  4012  161E  3001               	movlw	1	; select bank2/3
  4013  161F  0087               	movwf	7
  4014  1620  0879               	movf	_Temp,w
  4015  1621  3E08               	addlw	8
  4016  1622  0084               	movwf	4
  4017  1623  3001               	movlw	1	; select bank2/3
  4018  1624  0085               	movwf	5
  4019  1625  3F40               	moviw [0]fsr1
  4020  1626  3F80               	movwi [0]fsr0
  4021  1627  3F41               	moviw [1]fsr1
  4022  1628  3F81               	movwi [1]fsr0
  4023  1629  0008               	return
  4024  162A                     __end_of_getTemp_AD:	
  4025                           
  4026                           	psect	text2
  4027  1035                     __ptext2:	
  4028 ;; *************** function _getPowerFault_AD *****************
  4029 ;; Defined at:
  4030 ;;		line 49 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\PowerFault_B1.c"
  4031 ;; Parameters:    Size  Location     Type
  4032 ;;  channel         1    wreg     unsigned char 
  4033 ;; Auto vars:     Size  Location     Type
  4034 ;;  channel         1    8[BANK0 ] unsigned char 
  4035 ;; Return value:  Size  Location     Type
  4036 ;;		None               void
  4037 ;; Registers used:
  4038 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4039 ;; Tracked objects:
  4040 ;;		On entry : 0/0
  4041 ;;		On exit  : 0/0
  4042 ;;		Unchanged: 0/0
  4043 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4044 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4045 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4046 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4047 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4048 ;;Total ram usage:        5 bytes
  4049 ;; Hardware stack levels used:    1
  4050 ;; Hardware stack levels required when called:    5
  4051 ;; This function calls:
  4052 ;;		_getAD
  4053 ;; This function is called by:
  4054 ;;		_main
  4055 ;; This function uses a non-reentrant model
  4056 ;;
  4057                           
  4058                           
  4059                           ;psect for function _getPowerFault_AD
  4060  1035                     _getPowerFault_AD:	
  4061                           
  4062                           ;incstack = 0
  4063                           ; Regs used in _getPowerFault_AD: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4064                           ;getPowerFault_AD@channel stored from wreg
  4065  1035  0020               	movlb	0	; select bank0
  4066  1036  00A8               	movwf	getPowerFault_AD@channel
  4067                           
  4068                           ;PowerFault_B1.c: 51: if(PF->ADtoGO)
  4069  1037  0876               	movf	_PF,w
  4070  1038  0086               	movwf	6
  4071  1039  3001               	movlw	1	; select bank2/3
  4072  103A  0087               	movwf	7
  4073  103B  1D81               	btfss	1,3
  4074  103C  0008               	return
  4075                           
  4076                           ;PowerFault_B1.c: 52: {
  4077                           ;PowerFault_B1.c: 53: PF->ADRES=getAD(channel,0xf0);
  4078  103D  30F0               	movlw	240
  4079  103E  00A4               	movwf	??_getPowerFault_AD
  4080  103F  0824               	movf	??_getPowerFault_AD,w
  4081  1040  00A0               	movwf	getAD@adcon1
  4082  1041  0828               	movf	getPowerFault_AD@channel,w
  4083  1042  319B  2378  3190   	fcall	_getAD
  4084  1045  0876               	movf	_PF,w
  4085  1046  3E03               	addlw	3
  4086  1047  0086               	movwf	6
  4087  1048  3001               	movlw	1	; select bank2/3
  4088  1049  0087               	movwf	7
  4089  104A  0020               	movlb	0	; select bank0
  4090  104B  0820               	movf	?_getAD,w
  4091  104C  3FC0               	movwi [0]fsr1
  4092  104D  0821               	movf	?_getAD+1,w
  4093  104E  3FC1               	movwi [1]fsr1
  4094                           
  4095                           ;PowerFault_B1.c: 54: if(PF->AD < PF->ADRES)
  4096  104F  0876               	movf	_PF,w
  4097  1050  3E03               	addlw	3
  4098  1051  0086               	movwf	6
  4099  1052  3001               	movlw	1	; select bank2/3
  4100  1053  0087               	movwf	7
  4101  1054  3F40               	moviw [0]fsr1
  4102  1055  00A4               	movwf	??_getPowerFault_AD
  4103  1056  3F41               	moviw [1]fsr1
  4104  1057  00A5               	movwf	??_getPowerFault_AD+1
  4105  1058  0A76               	incf	_PF,w
  4106  1059  0086               	movwf	6
  4107  105A  3001               	movlw	1	; select bank2/3
  4108  105B  0087               	movwf	7
  4109  105C  3F40               	moviw [0]fsr1
  4110  105D  00A6               	movwf	??_getPowerFault_AD+2
  4111  105E  3F41               	moviw [1]fsr1
  4112  105F  00A7               	movwf	??_getPowerFault_AD+3
  4113  1060  0825               	movf	??_getPowerFault_AD+1,w
  4114  1061  0227               	subwf	??_getPowerFault_AD+3,w
  4115  1062  1D03               	skipz
  4116  1063  2866               	goto	u10125
  4117  1064  0824               	movf	??_getPowerFault_AD,w
  4118  1065  0226               	subwf	??_getPowerFault_AD+2,w
  4119  1066                     u10125:	
  4120  1066  1803               	skipnc
  4121  1067  0008               	return
  4122                           
  4123                           ;PowerFault_B1.c: 55: {
  4124                           ;PowerFault_B1.c: 56: PF->AD=PF->ADRES;
  4125  1068  0876               	movf	_PF,w
  4126  1069  3E03               	addlw	3
  4127  106A  0086               	movwf	6
  4128  106B  3001               	movlw	1	; select bank2/3
  4129  106C  0087               	movwf	7
  4130  106D  0A76               	incf	_PF,w
  4131  106E  0084               	movwf	4
  4132  106F  3001               	movlw	1	; select bank2/3
  4133  1070  0085               	movwf	5
  4134  1071  3F40               	moviw [0]fsr1
  4135  1072  3F80               	movwi [0]fsr0
  4136  1073  3F41               	moviw [1]fsr1
  4137  1074  3F81               	movwi [1]fsr0
  4138  1075  0008               	return
  4139  1076                     __end_of_getPowerFault_AD:	
  4140                           
  4141                           	psect	text3
  4142  1B78                     __ptext3:	
  4143 ;; *************** function _getAD *****************
  4144 ;; Defined at:
  4145 ;;		line 385 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
  4146 ;; Parameters:    Size  Location     Type
  4147 ;;  adcon0          1    wreg     unsigned char 
  4148 ;;  adcon1          1    0[BANK0 ] unsigned char 
  4149 ;; Auto vars:     Size  Location     Type
  4150 ;;  adcon0          1    3[BANK0 ] unsigned char 
  4151 ;; Return value:  Size  Location     Type
  4152 ;;                  2    0[BANK0 ] int 
  4153 ;; Registers used:
  4154 ;;		wreg, status,2, status,0
  4155 ;; Tracked objects:
  4156 ;;		On entry : 0/0
  4157 ;;		On exit  : 0/0
  4158 ;;		Unchanged: 0/0
  4159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4160 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4161 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4163 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4164 ;;Total ram usage:        4 bytes
  4165 ;; Hardware stack levels used:    1
  4166 ;; Hardware stack levels required when called:    4
  4167 ;; This function calls:
  4168 ;;		Nothing
  4169 ;; This function is called by:
  4170 ;;		_getTemp_AD
  4171 ;;		_getPowerFault_AD
  4172 ;; This function uses a non-reentrant model
  4173 ;;
  4174                           
  4175                           
  4176                           ;psect for function _getAD
  4177  1B78                     _getAD:	
  4178                           
  4179                           ;incstack = 0
  4180                           ; Regs used in _getAD: [wreg+status,2+status,0]
  4181                           ;getAD@adcon0 stored from wreg
  4182  1B78  0020               	movlb	0	; select bank0
  4183  1B79  00A3               	movwf	getAD@adcon0
  4184                           
  4185                           ;MCU_B1.c: 387: ADCON0=adcon0;
  4186  1B7A  0823               	movf	getAD@adcon0,w
  4187  1B7B  0021               	movlb	1	; select bank1
  4188  1B7C  009D               	movwf	29	;volatile
  4189                           
  4190                           ;MCU_B1.c: 388: ADCON1=adcon1;
  4191  1B7D  0020               	movlb	0	; select bank0
  4192  1B7E  0820               	movf	getAD@adcon1,w
  4193  1B7F  0021               	movlb	1	; select bank1
  4194  1B80  009E               	movwf	30	;volatile
  4195                           
  4196                           ;MCU_B1.c: 389: GO_nDONE=1;
  4197  1B81  149D               	bsf	29,1	;volatile
  4198  1B82                     l1681:	
  4199                           ;MCU_B1.c: 390: while(GO_nDONE);
  4200                           
  4201  1B82  189D               	btfsc	29,1	;volatile
  4202  1B83  2B82               	goto	l1681
  4203                           
  4204                           ;MCU_B1.c: 391: return ((ADRESH*256)+ADRESL);
  4205  1B84  081C               	movf	28,w	;volatile
  4206  1B85  0020               	movlb	0	; select bank0
  4207  1B86  01A1               	clrf	?_getAD+1
  4208  1B87  07A1               	addwf	?_getAD+1,f
  4209  1B88  0021               	movlb	1	; select bank1
  4210  1B89  081B               	movf	27,w	;volatile
  4211  1B8A  0020               	movlb	0	; select bank0
  4212  1B8B  01A0               	clrf	?_getAD
  4213  1B8C  07A0               	addwf	?_getAD,f
  4214  1B8D  0008               	return
  4215  1B8E                     __end_of_getAD:	
  4216                           
  4217                           	psect	text4
  4218  18E6                     __ptext4:	
  4219 ;; *************** function _Temp_Main *****************
  4220 ;; Defined at:
  4221 ;;		line 57 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\OverTemperature_B1.c"
  4222 ;; Parameters:    Size  Location     Type
  4223 ;;		None
  4224 ;; Auto vars:     Size  Location     Type
  4225 ;;		None
  4226 ;; Return value:  Size  Location     Type
  4227 ;;		None               void
  4228 ;; Registers used:
  4229 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4230 ;; Tracked objects:
  4231 ;;		On entry : 0/0
  4232 ;;		On exit  : 0/0
  4233 ;;		Unchanged: 0/0
  4234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4235 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4236 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4238 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4239 ;;Total ram usage:        0 bytes
  4240 ;; Hardware stack levels used:    1
  4241 ;; Hardware stack levels required when called:   10
  4242 ;; This function calls:
  4243 ;;		_setTemp_Main
  4244 ;; This function is called by:
  4245 ;;		_main
  4246 ;; This function uses a non-reentrant model
  4247 ;;
  4248                           
  4249                           
  4250                           ;psect for function _Temp_Main
  4251  18E6                     _Temp_Main:	
  4252                           
  4253                           ;OverTemperature_B1.c: 60: setTemp_Main();
  4254                           
  4255                           ;incstack = 0
  4256                           ; Regs used in _Temp_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4257  18E6  3184  24F7         	fcall	_setTemp_Main
  4258  18E8  0008               	return
  4259  18E9                     __end_of_Temp_Main:	
  4260                           
  4261                           	psect	text5
  4262  04F7                     __ptext5:	
  4263 ;; *************** function _setTemp_Main *****************
  4264 ;; Defined at:
  4265 ;;		line 64 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\OverTemperature_B1.c"
  4266 ;; Parameters:    Size  Location     Type
  4267 ;;		None
  4268 ;; Auto vars:     Size  Location     Type
  4269 ;;		None
  4270 ;; Return value:  Size  Location     Type
  4271 ;;		None               void
  4272 ;; Registers used:
  4273 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4274 ;; Tracked objects:
  4275 ;;		On entry : 0/0
  4276 ;;		On exit  : 0/0
  4277 ;;		Unchanged: 0/0
  4278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4281 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4282 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4283 ;;Total ram usage:        3 bytes
  4284 ;; Hardware stack levels used:    1
  4285 ;; Hardware stack levels required when called:    9
  4286 ;; This function calls:
  4287 ;;		_getPF_Safe
  4288 ;;		_setOverTemp_Exceptions
  4289 ;; This function is called by:
  4290 ;;		_Temp_Main
  4291 ;; This function uses a non-reentrant model
  4292 ;;
  4293                           
  4294                           
  4295                           ;psect for function _setTemp_Main
  4296  04F7                     _setTemp_Main:	
  4297                           
  4298                           ;OverTemperature_B1.c: 66: if(Temp->Enable)
  4299                           
  4300                           ;incstack = 0
  4301                           ; Regs used in _setTemp_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4302  04F7  0879               	movf	_Temp,w
  4303  04F8  0086               	movwf	6
  4304  04F9  3001               	movlw	1	; select bank2/3
  4305  04FA  0087               	movwf	7
  4306  04FB  1C01               	btfss	1,0
  4307  04FC  0008               	return
  4308                           
  4309                           ;OverTemperature_B1.c: 67: {
  4310                           ;OverTemperature_B1.c: 68: if(Temp->ADtoGO == 0)
  4311  04FD  0879               	movf	_Temp,w
  4312  04FE  0086               	movwf	6
  4313  04FF  3001               	movlw	1	; select bank2/3
  4314  0500  0087               	movwf	7
  4315  0501  1901               	btfsc	1,2
  4316  0502  2D3D               	goto	l9321
  4317                           
  4318                           ;OverTemperature_B1.c: 69: {
  4319                           ;OverTemperature_B1.c: 70: Temp->Time++;
  4320  0503  0A79               	incf	_Temp,w
  4321  0504  0086               	movwf	6
  4322  0505  3001               	movlw	1	; select bank2/3
  4323  0506  0087               	movwf	7
  4324  0507  3001               	movlw	1
  4325  0508  0781               	addwf	1,f
  4326  0509  3141               	addfsr 1,1
  4327  050A  1803               	skipnc
  4328  050B  0A81               	incf	1,f
  4329                           
  4330                           ;OverTemperature_B1.c: 72: {
  4331                           ;OverTemperature_B1.c: 73: if(1 && getPF_Safe())
  4332  050C  0A79               	incf	_Temp,w
  4333  050D  0086               	movwf	6
  4334  050E  3001               	movlw	1	; select bank2/3
  4335  050F  0087               	movwf	7
  4336  0510  3F40               	moviw [0]fsr1
  4337  0511  0020               	movlb	0	; select bank0
  4338  0512  00AD               	movwf	??_setTemp_Main
  4339  0513  3F41               	moviw [1]fsr1
  4340  0514  00AE               	movwf	??_setTemp_Main+1
  4341  0515  3001               	movlw	1
  4342  0516  022E               	subwf	??_setTemp_Main+1,w
  4343  0517  30F4               	movlw	244
  4344  0518  1903               	skipnz
  4345  0519  022D               	subwf	??_setTemp_Main,w
  4346  051A  1C03               	skipc
  4347  051B  0008               	return
  4348  051C  3199  2154  3184   	fcall	_getPF_Safe
  4349  051F  3A00               	xorlw	0
  4350  0520  1903               	skipnz
  4351  0521  2D34               	goto	l9319
  4352                           
  4353                           ;OverTemperature_B1.c: 74: {
  4354                           ;OverTemperature_B1.c: 75: Temp->Time=0;
  4355  0522  0A79               	incf	_Temp,w
  4356  0523  0086               	movwf	6
  4357  0524  3001               	movlw	1	; select bank2/3
  4358  0525  0087               	movwf	7
  4359  0526  3000               	movlw	0
  4360  0527  3FC0               	movwi [0]fsr1
  4361  0528  3FC1               	movwi [1]fsr1
  4362                           
  4363                           ;OverTemperature_B1.c: 76: Temp->ADtoGO=1;
  4364  0529  0879               	movf	_Temp,w
  4365  052A  0086               	movwf	6
  4366  052B  3001               	movlw	1	; select bank2/3
  4367  052C  0087               	movwf	7
  4368  052D  1501               	bsf	1,2
  4369                           
  4370                           ;OverTemperature_B1.c: 77: Temp->Safe=0;
  4371  052E  0879               	movf	_Temp,w
  4372  052F  0086               	movwf	6
  4373  0530  3001               	movlw	1	; select bank2/3
  4374  0531  0087               	movwf	7
  4375  0532  1201               	bcf	1,4
  4376                           
  4377                           ;OverTemperature_B1.c: 78: }
  4378  0533  0008               	return
  4379  0534                     l9319:	
  4380                           
  4381                           ;OverTemperature_B1.c: 79: else
  4382                           ;OverTemperature_B1.c: 80: {
  4383                           ;OverTemperature_B1.c: 81: Temp->Time=1000;
  4384  0534  0A79               	incf	_Temp,w
  4385  0535  0086               	movwf	6
  4386  0536  3001               	movlw	1	; select bank2/3
  4387  0537  0087               	movwf	7
  4388  0538  30E8               	movlw	232
  4389  0539  3FC0               	movwi [0]fsr1
  4390  053A  3003               	movlw	3
  4391  053B  3FC1               	movwi [1]fsr1
  4392                           
  4393                           ;OverTemperature_B1.c: 82: }
  4394                           ;OverTemperature_B1.c: 83: }
  4395                           ;OverTemperature_B1.c: 84: }
  4396  053C  0008               	return
  4397  053D                     l9321:	
  4398                           
  4399                           ;OverTemperature_B1.c: 85: else
  4400                           ;OverTemperature_B1.c: 86: {
  4401                           ;OverTemperature_B1.c: 87: Temp->Time++;
  4402  053D  0A79               	incf	_Temp,w
  4403  053E  0086               	movwf	6
  4404  053F  3001               	movlw	1	; select bank2/3
  4405  0540  0087               	movwf	7
  4406  0541  3001               	movlw	1
  4407  0542  0781               	addwf	1,f
  4408  0543  3141               	addfsr 1,1
  4409  0544  1803               	skipnc
  4410  0545  0A81               	incf	1,f
  4411                           
  4412                           ;OverTemperature_B1.c: 88: if(Temp->Time >= 4)
  4413  0546  0A79               	incf	_Temp,w
  4414  0547  0086               	movwf	6
  4415  0548  3001               	movlw	1	; select bank2/3
  4416  0549  0087               	movwf	7
  4417  054A  3F40               	moviw [0]fsr1
  4418  054B  0020               	movlb	0	; select bank0
  4419  054C  00AD               	movwf	??_setTemp_Main
  4420  054D  3F41               	moviw [1]fsr1
  4421  054E  00AE               	movwf	??_setTemp_Main+1
  4422  054F  3000               	movlw	0
  4423  0550  022E               	subwf	??_setTemp_Main+1,w
  4424  0551  3004               	movlw	4
  4425  0552  1903               	skipnz
  4426  0553  022D               	subwf	??_setTemp_Main,w
  4427  0554  1C03               	skipc
  4428  0555  0008               	return
  4429                           
  4430                           ;OverTemperature_B1.c: 89: {
  4431                           ;OverTemperature_B1.c: 90: Temp->Time=0;
  4432  0556  0A79               	incf	_Temp,w
  4433  0557  0086               	movwf	6
  4434  0558  3001               	movlw	1	; select bank2/3
  4435  0559  0087               	movwf	7
  4436  055A  3000               	movlw	0
  4437  055B  3FC0               	movwi [0]fsr1
  4438  055C  3FC1               	movwi [1]fsr1
  4439                           
  4440                           ;OverTemperature_B1.c: 91: Temp->ADtoGO=0;
  4441  055D  0879               	movf	_Temp,w
  4442  055E  0086               	movwf	6
  4443  055F  3001               	movlw	1	; select bank2/3
  4444  0560  0087               	movwf	7
  4445  0561  1101               	bcf	1,2
  4446                           
  4447                           ;OverTemperature_B1.c: 92: Temp->AD=Temp->ADH[1];
  4448  0562  0879               	movf	_Temp,w
  4449  0563  3E08               	addlw	8
  4450  0564  0086               	movwf	6
  4451  0565  3001               	movlw	1	; select bank2/3
  4452  0566  0087               	movwf	7
  4453  0567  0879               	movf	_Temp,w
  4454  0568  3E04               	addlw	4
  4455  0569  0084               	movwf	4
  4456  056A  3001               	movlw	1	; select bank2/3
  4457  056B  0085               	movwf	5
  4458  056C  3F40               	moviw [0]fsr1
  4459  056D  3F80               	movwi [0]fsr0
  4460  056E  3F41               	moviw [1]fsr1
  4461  056F  3F81               	movwi [1]fsr0
  4462                           
  4463                           ;OverTemperature_B1.c: 93: if(Temp->ERROR)
  4464  0570  0879               	movf	_Temp,w
  4465  0571  0086               	movwf	6
  4466  0572  3001               	movlw	1	; select bank2/3
  4467  0573  0087               	movwf	7
  4468  0574  1C81               	btfss	1,1
  4469  0575  2DA3               	goto	l9343
  4470                           
  4471                           ;OverTemperature_B1.c: 94: {
  4472                           ;OverTemperature_B1.c: 95: if(Temp->AD >= 600)
  4473  0576  0879               	movf	_Temp,w
  4474  0577  3E04               	addlw	4
  4475  0578  0086               	movwf	6
  4476  0579  3001               	movlw	1	; select bank2/3
  4477  057A  0087               	movwf	7
  4478  057B  3F40               	moviw [0]fsr1
  4479  057C  00AD               	movwf	??_setTemp_Main
  4480  057D  3F41               	moviw [1]fsr1
  4481  057E  00AE               	movwf	??_setTemp_Main+1
  4482  057F  3002               	movlw	2
  4483  0580  022E               	subwf	??_setTemp_Main+1,w
  4484  0581  3058               	movlw	88
  4485  0582  1903               	skipnz
  4486  0583  022D               	subwf	??_setTemp_Main,w
  4487  0584  1C03               	skipc
  4488  0585  2DD1               	goto	l9353
  4489                           
  4490                           ;OverTemperature_B1.c: 96: {
  4491                           ;OverTemperature_B1.c: 97: Temp->Count++;
  4492  0586  3001               	movlw	1
  4493  0587  00AD               	movwf	??_setTemp_Main
  4494  0588  0879               	movf	_Temp,w
  4495  0589  3E03               	addlw	3
  4496  058A  0086               	movwf	6
  4497  058B  3001               	movlw	1	; select bank2/3
  4498  058C  0087               	movwf	7
  4499  058D  082D               	movf	??_setTemp_Main,w
  4500  058E  0781               	addwf	1,f
  4501                           
  4502                           ;OverTemperature_B1.c: 98: if(Temp->Count >= 3)
  4503  058F  0879               	movf	_Temp,w
  4504  0590  3E03               	addlw	3
  4505  0591  0086               	movwf	6
  4506  0592  3001               	movlw	1	; select bank2/3
  4507  0593  0087               	movwf	7
  4508  0594  3003               	movlw	3
  4509  0595  0201               	subwf	1,w
  4510  0596  1C03               	skipc
  4511  0597  2DD7               	goto	l9355
  4512                           
  4513                           ;OverTemperature_B1.c: 99: {
  4514                           ;OverTemperature_B1.c: 100: Temp->Count=0;
  4515  0598  0879               	movf	_Temp,w
  4516  0599  3E03               	addlw	3
  4517  059A  0086               	movwf	6
  4518  059B  3001               	movlw	1	; select bank2/3
  4519  059C  0087               	movwf	7
  4520  059D  0181               	clrf	1
  4521                           
  4522                           ;OverTemperature_B1.c: 101: setOverTemp_Exceptions(0);
  4523  059E  3000               	movlw	0
  4524  059F  3190  20B8  3184   	fcall	_setOverTemp_Exceptions
  4525                           
  4526                           ;OverTemperature_B1.c: 102: }
  4527                           ;OverTemperature_B1.c: 103: }
  4528  05A2  2DD7               	goto	l9355
  4529  05A3                     l9343:	
  4530                           ;OverTemperature_B1.c: 107: }
  4531                           ;OverTemperature_B1.c: 108: }
  4532                           
  4533                           ;OverTemperature_B1.c: 104: else
  4534                           ;OverTemperature_B1.c: 105: {
  4535                           ;OverTemperature_B1.c: 106: Temp->Count=0;
  4536                           
  4537                           
  4538                           ;OverTemperature_B1.c: 109: else
  4539                           ;OverTemperature_B1.c: 110: {
  4540                           ;OverTemperature_B1.c: 111: if(Temp->AD <= 550)
  4541  05A3  0879               	movf	_Temp,w
  4542  05A4  3E04               	addlw	4
  4543  05A5  0086               	movwf	6
  4544  05A6  3001               	movlw	1	; select bank2/3
  4545  05A7  0087               	movwf	7
  4546  05A8  3F40               	moviw [0]fsr1
  4547  05A9  0020               	movlb	0	; select bank0
  4548  05AA  00AD               	movwf	??_setTemp_Main
  4549  05AB  3F41               	moviw [1]fsr1
  4550  05AC  00AE               	movwf	??_setTemp_Main+1
  4551  05AD  3002               	movlw	2
  4552  05AE  022E               	subwf	??_setTemp_Main+1,w
  4553  05AF  3027               	movlw	39
  4554  05B0  1903               	skipnz
  4555  05B1  022D               	subwf	??_setTemp_Main,w
  4556  05B2  1803               	skipnc
  4557  05B3  2DD1               	goto	l9353
  4558                           
  4559                           ;OverTemperature_B1.c: 112: {
  4560                           ;OverTemperature_B1.c: 113: Temp->Count++;
  4561  05B4  3001               	movlw	1
  4562  05B5  00AD               	movwf	??_setTemp_Main
  4563  05B6  0879               	movf	_Temp,w
  4564  05B7  3E03               	addlw	3
  4565  05B8  0086               	movwf	6
  4566  05B9  3001               	movlw	1	; select bank2/3
  4567  05BA  0087               	movwf	7
  4568  05BB  082D               	movf	??_setTemp_Main,w
  4569  05BC  0781               	addwf	1,f
  4570                           
  4571                           ;OverTemperature_B1.c: 114: if(Temp->Count >= 3)
  4572  05BD  0879               	movf	_Temp,w
  4573  05BE  3E03               	addlw	3
  4574  05BF  0086               	movwf	6
  4575  05C0  3001               	movlw	1	; select bank2/3
  4576  05C1  0087               	movwf	7
  4577  05C2  3003               	movlw	3
  4578  05C3  0201               	subwf	1,w
  4579  05C4  1C03               	skipc
  4580  05C5  2DD7               	goto	l9355
  4581                           
  4582                           ;OverTemperature_B1.c: 115: {
  4583                           ;OverTemperature_B1.c: 116: Temp->Count=0;
  4584  05C6  0879               	movf	_Temp,w
  4585  05C7  3E03               	addlw	3
  4586  05C8  0086               	movwf	6
  4587  05C9  3001               	movlw	1	; select bank2/3
  4588  05CA  0087               	movwf	7
  4589  05CB  0181               	clrf	1
  4590                           
  4591                           ;OverTemperature_B1.c: 117: setOverTemp_Exceptions(1);
  4592  05CC  3001               	movlw	1
  4593  05CD  3190  20B8  3184   	fcall	_setOverTemp_Exceptions
  4594                           
  4595                           ;OverTemperature_B1.c: 118: }
  4596                           ;OverTemperature_B1.c: 119: }
  4597  05D0  2DD7               	goto	l9355
  4598  05D1                     l9353:	
  4599                           
  4600                           ;OverTemperature_B1.c: 120: else
  4601                           ;OverTemperature_B1.c: 121: {
  4602                           ;OverTemperature_B1.c: 122: Temp->Count=0;
  4603  05D1  0879               	movf	_Temp,w
  4604  05D2  3E03               	addlw	3
  4605  05D3  0086               	movwf	6
  4606  05D4  3001               	movlw	1	; select bank2/3
  4607  05D5  0087               	movwf	7
  4608  05D6  0181               	clrf	1
  4609  05D7                     l9355:	
  4610                           
  4611                           ;OverTemperature_B1.c: 123: }
  4612                           ;OverTemperature_B1.c: 124: }
  4613                           ;OverTemperature_B1.c: 125: if(Temp->ERROR == 0)
  4614  05D7  0879               	movf	_Temp,w
  4615  05D8  0086               	movwf	6
  4616  05D9  3001               	movlw	1	; select bank2/3
  4617  05DA  0087               	movwf	7
  4618  05DB  1881               	btfsc	1,1
  4619  05DC  2DE2               	goto	l9359
  4620                           
  4621                           ;OverTemperature_B1.c: 126: {
  4622                           ;OverTemperature_B1.c: 127: Temp->Safe=1;
  4623  05DD  0879               	movf	_Temp,w
  4624  05DE  0086               	movwf	6
  4625  05DF  3001               	movlw	1	; select bank2/3
  4626  05E0  0087               	movwf	7
  4627  05E1  1601               	bsf	1,4
  4628  05E2                     l9359:	
  4629                           
  4630                           ;OverTemperature_B1.c: 128: }
  4631                           ;OverTemperature_B1.c: 129: Product->Data[24]=Temp->AD >> 8;
  4632  05E2  0879               	movf	_Temp,w
  4633  05E3  3E04               	addlw	4
  4634  05E4  0086               	movwf	6
  4635  05E5  3001               	movlw	1	; select bank2/3
  4636  05E6  0087               	movwf	7
  4637  05E7  3F40               	moviw [0]fsr1
  4638  05E8  0020               	movlb	0	; select bank0
  4639  05E9  00AD               	movwf	??_setTemp_Main
  4640  05EA  3F41               	moviw [1]fsr1
  4641  05EB  00AE               	movwf	??_setTemp_Main+1
  4642  05EC  082E               	movf	??_setTemp_Main+1,w
  4643  05ED  00AF               	movwf	??_setTemp_Main+2
  4644  05EE  086E               	movf	_Product,w
  4645  05EF  3E18               	addlw	24
  4646  05F0  0086               	movwf	6
  4647  05F1  3001               	movlw	1	; select bank2/3
  4648  05F2  0087               	movwf	7
  4649  05F3  082F               	movf	??_setTemp_Main+2,w
  4650  05F4  0081               	movwf	1
  4651                           
  4652                           ;OverTemperature_B1.c: 130: Product->Data[25]=Temp->AD;
  4653  05F5  0879               	movf	_Temp,w
  4654  05F6  3E04               	addlw	4
  4655  05F7  0086               	movwf	6
  4656  05F8  3001               	movlw	1	; select bank2/3
  4657  05F9  0087               	movwf	7
  4658  05FA  0801               	movf	1,w
  4659  05FB  00AD               	movwf	??_setTemp_Main
  4660  05FC  086E               	movf	_Product,w
  4661  05FD  3E19               	addlw	25
  4662  05FE  0086               	movwf	6
  4663  05FF  3001               	movlw	1	; select bank2/3
  4664  0600  0087               	movwf	7
  4665  0601  082D               	movf	??_setTemp_Main,w
  4666  0602  0081               	movwf	1
  4667                           
  4668                           ;OverTemperature_B1.c: 131: Temp->ADH[0]=0;
  4669  0603  0879               	movf	_Temp,w
  4670  0604  3E06               	addlw	6
  4671  0605  0086               	movwf	6
  4672  0606  3001               	movlw	1	; select bank2/3
  4673  0607  0087               	movwf	7
  4674  0608  3000               	movlw	0
  4675  0609  3FC0               	movwi [0]fsr1
  4676  060A  3FC1               	movwi [1]fsr1
  4677                           
  4678                           ;OverTemperature_B1.c: 132: Temp->ADH[1]=0;
  4679  060B  0879               	movf	_Temp,w
  4680  060C  3E08               	addlw	8
  4681  060D  0086               	movwf	6
  4682  060E  3001               	movlw	1	; select bank2/3
  4683  060F  0087               	movwf	7
  4684  0610  3000               	movlw	0
  4685  0611  3FC0               	movwi [0]fsr1
  4686  0612  3FC1               	movwi [1]fsr1
  4687  0613  0008               	return
  4688  0614                     __end_of_setTemp_Main:	
  4689                           
  4690                           	psect	text6
  4691  10B8                     __ptext6:	
  4692 ;; *************** function _setOverTemp_Exceptions *****************
  4693 ;; Defined at:
  4694 ;;		line 138 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\OverTemperature_B1.c"
  4695 ;; Parameters:    Size  Location     Type
  4696 ;;  command         1    wreg     unsigned char 
  4697 ;; Auto vars:     Size  Location     Type
  4698 ;;  command         1   12[BANK0 ] unsigned char 
  4699 ;; Return value:  Size  Location     Type
  4700 ;;		None               void
  4701 ;; Registers used:
  4702 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4703 ;; Tracked objects:
  4704 ;;		On entry : 0/0
  4705 ;;		On exit  : 0/0
  4706 ;;		Unchanged: 0/0
  4707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4708 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4709 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4710 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4711 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4712 ;;Total ram usage:        2 bytes
  4713 ;; Hardware stack levels used:    1
  4714 ;; Hardware stack levels required when called:    8
  4715 ;; This function calls:
  4716 ;;		_DimmerLights_Exceptions
  4717 ;;		_setBuz
  4718 ;;		_setLED
  4719 ;;		_setRF_Enable
  4720 ;;		_setSw_Enable
  4721 ;; This function is called by:
  4722 ;;		_setTemp_Main
  4723 ;; This function uses a non-reentrant model
  4724 ;;
  4725                           
  4726                           
  4727                           ;psect for function _setOverTemp_Exceptions
  4728  10B8                     _setOverTemp_Exceptions:	
  4729                           
  4730                           ;incstack = 0
  4731                           ; Regs used in _setOverTemp_Exceptions: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
  4732                           ;setOverTemp_Exceptions@command stored from wreg
  4733  10B8  0020               	movlb	0	; select bank0
  4734  10B9  00AC               	movwf	setOverTemp_Exceptions@command
  4735                           
  4736                           ;OverTemperature_B1.c: 140: Temp->ERROR=command;
  4737  10BA  0879               	movf	_Temp,w
  4738  10BB  0086               	movwf	6
  4739  10BC  3001               	movlw	1	; select bank2/3
  4740  10BD  0087               	movwf	7
  4741  10BE  082C               	movf	setOverTemp_Exceptions@command,w
  4742  10BF  1081               	bcf	1,1
  4743  10C0  1D03               	skipz
  4744  10C1  1481               	bsf	1,1
  4745                           
  4746                           ;OverTemperature_B1.c: 141: Temp->Safe=(~command) & 0x01;
  4747  10C2  092C               	comf	setOverTemp_Exceptions@command,w
  4748  10C3  3901               	andlw	1
  4749  10C4  00AB               	movwf	??_setOverTemp_Exceptions
  4750  10C5  0879               	movf	_Temp,w
  4751  10C6  0086               	movwf	6
  4752  10C7  3001               	movlw	1	; select bank2/3
  4753  10C8  0087               	movwf	7
  4754  10C9  0EAB               	swapf	??_setOverTemp_Exceptions,f
  4755  10CA  0801               	movf	1,w
  4756  10CB  062B               	xorwf	??_setOverTemp_Exceptions,w
  4757  10CC  39EF               	andlw	-17
  4758  10CD  062B               	xorwf	??_setOverTemp_Exceptions,w
  4759  10CE  0081               	movwf	1
  4760                           
  4761                           ;OverTemperature_B1.c: 142: if(command)
  4762  10CF  082C               	movf	setOverTemp_Exceptions@command,w
  4763  10D0  1903               	btfsc	3,2
  4764  10D1  28D7               	goto	l8893
  4765                           
  4766                           ;OverTemperature_B1.c: 143: {
  4767                           ;OverTemperature_B1.c: 144: DimmerLights_Exceptions(1);
  4768  10D2  3001               	movlw	1
  4769  10D3  3194  24EE  3190   	fcall	_DimmerLights_Exceptions
  4770                           
  4771                           ;OverTemperature_B1.c: 148: }
  4772  10D6  28E0               	goto	l2019
  4773  10D7                     l8893:	
  4774                           
  4775                           ;OverTemperature_B1.c: 149: else
  4776                           ;OverTemperature_B1.c: 150: {
  4777                           ;OverTemperature_B1.c: 151: setBuz(2,100);
  4778  10D7  3064               	movlw	100
  4779  10D8  0020               	movlb	0	; select bank0
  4780  10D9  00A6               	movwf	setBuz@time
  4781  10DA  3000               	movlw	0
  4782  10DB  00A7               	movwf	setBuz@time+1
  4783  10DC  3002               	movlw	2
  4784  10DD  3197  2711  3190   	fcall	_setBuz
  4785  10E0                     l2019:	
  4786                           
  4787                           ;OverTemperature_B1.c: 152: }
  4788                           ;OverTemperature_B1.c: 155: setLED(99,command+10);
  4789  10E0  0020               	movlb	0	; select bank0
  4790  10E1  082C               	movf	setOverTemp_Exceptions@command,w
  4791  10E2  3E0A               	addlw	10
  4792  10E3  00AB               	movwf	??_setOverTemp_Exceptions
  4793  10E4  082B               	movf	??_setOverTemp_Exceptions,w
  4794  10E5  00A2               	movwf	setLED@command
  4795  10E6  3063               	movlw	99
  4796  10E7  3193  2366  3190   	fcall	_setLED
  4797                           
  4798                           ;OverTemperature_B1.c: 157: setSw_Enable((~command) & 0x01);
  4799  10EA  0020               	movlb	0	; select bank0
  4800  10EB  092C               	comf	setOverTemp_Exceptions@command,w
  4801  10EC  3901               	andlw	1
  4802  10ED  319C  243E  3190   	fcall	_setSw_Enable
  4803                           
  4804                           ;OverTemperature_B1.c: 159: setRF_Enable(1,(~command) & 0x01);
  4805  10F0  0020               	movlb	0	; select bank0
  4806  10F1  092C               	comf	setOverTemp_Exceptions@command,w
  4807  10F2  3901               	andlw	1
  4808  10F3  00AB               	movwf	??_setOverTemp_Exceptions
  4809  10F4  082B               	movf	??_setOverTemp_Exceptions,w
  4810  10F5  00A2               	movwf	setRF_Enable@command
  4811  10F6  3001               	movlw	1
  4812  10F7  319D  25FA         	fcall	_setRF_Enable
  4813  10F9  0008               	return
  4814  10FA                     __end_of_setOverTemp_Exceptions:	
  4815                           
  4816                           	psect	text7
  4817  1954                     __ptext7:	
  4818 ;; *************** function _getPF_Safe *****************
  4819 ;; Defined at:
  4820 ;;		line 40 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\PowerFault_B1.c"
  4821 ;; Parameters:    Size  Location     Type
  4822 ;;		None
  4823 ;; Auto vars:     Size  Location     Type
  4824 ;;		None
  4825 ;; Return value:  Size  Location     Type
  4826 ;;                  1    wreg      unsigned char 
  4827 ;; Registers used:
  4828 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4829 ;; Tracked objects:
  4830 ;;		On entry : 0/0
  4831 ;;		On exit  : 0/0
  4832 ;;		Unchanged: 0/0
  4833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4835 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4837 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4838 ;;Total ram usage:        0 bytes
  4839 ;; Hardware stack levels used:    1
  4840 ;; Hardware stack levels required when called:    4
  4841 ;; This function calls:
  4842 ;;		Nothing
  4843 ;; This function is called by:
  4844 ;;		_setTemp_Main
  4845 ;; This function uses a non-reentrant model
  4846 ;;
  4847                           
  4848                           
  4849                           ;psect for function _getPF_Safe
  4850  1954                     _getPF_Safe:	
  4851                           
  4852                           ;PowerFault_B1.c: 42: return PF->Safe;
  4853                           
  4854                           ;incstack = 0
  4855                           ; Regs used in _getPF_Safe: [wreg+fsr1l+fsr1h+status,2+status,0]
  4856  1954  0876               	movf	_PF,w
  4857  1955  0086               	movwf	6
  4858  1956  3001               	movlw	1	; select bank2/3
  4859  1957  0087               	movwf	7
  4860  1958  0C01               	rrf	1,w
  4861  1959  0C89               	rrf	9,f
  4862  195A  3901               	andlw	1
  4863  195B  0008               	return
  4864  195C                     __end_of_getPF_Safe:	
  4865                           
  4866                           	psect	text8
  4867  18E3                     __ptext8:	
  4868 ;; *************** function _Temp_Initialization *****************
  4869 ;; Defined at:
  4870 ;;		line 15 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\OverTemperature_B1.c"
  4871 ;; Parameters:    Size  Location     Type
  4872 ;;		None
  4873 ;; Auto vars:     Size  Location     Type
  4874 ;;		None
  4875 ;; Return value:  Size  Location     Type
  4876 ;;		None               void
  4877 ;; Registers used:
  4878 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4879 ;; Tracked objects:
  4880 ;;		On entry : 0/0
  4881 ;;		On exit  : 0/0
  4882 ;;		Unchanged: 0/0
  4883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4887 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4888 ;;Total ram usage:        0 bytes
  4889 ;; Hardware stack levels used:    1
  4890 ;; Hardware stack levels required when called:    5
  4891 ;; This function calls:
  4892 ;;		_setTemp_Initialization
  4893 ;; This function is called by:
  4894 ;;		_main
  4895 ;; This function uses a non-reentrant model
  4896 ;;
  4897                           
  4898                           
  4899                           ;psect for function _Temp_Initialization
  4900  18E3                     _Temp_Initialization:	
  4901                           
  4902                           ;OverTemperature_B1.c: 18: setTemp_Initialization();
  4903                           
  4904                           ;incstack = 0
  4905                           ; Regs used in _Temp_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4906  18E3  3199  21AF         	fcall	_setTemp_Initialization
  4907  18E5  0008               	return
  4908  18E6                     __end_of_Temp_Initialization:	
  4909                           
  4910                           	psect	text9
  4911  19AF                     __ptext9:	
  4912 ;; *************** function _setTemp_Initialization *****************
  4913 ;; Defined at:
  4914 ;;		line 51 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\OverTemperature_B1.c"
  4915 ;; Parameters:    Size  Location     Type
  4916 ;;		None
  4917 ;; Auto vars:     Size  Location     Type
  4918 ;;		None
  4919 ;; Return value:  Size  Location     Type
  4920 ;;		None               void
  4921 ;; Registers used:
  4922 ;;		wreg, fsr1l, fsr1h
  4923 ;; Tracked objects:
  4924 ;;		On entry : 0/0
  4925 ;;		On exit  : 0/0
  4926 ;;		Unchanged: 0/0
  4927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4930 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4931 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4932 ;;Total ram usage:        1 bytes
  4933 ;; Hardware stack levels used:    1
  4934 ;; Hardware stack levels required when called:    4
  4935 ;; This function calls:
  4936 ;;		Nothing
  4937 ;; This function is called by:
  4938 ;;		_Temp_Initialization
  4939 ;; This function uses a non-reentrant model
  4940 ;;
  4941                           
  4942                           
  4943                           ;psect for function _setTemp_Initialization
  4944  19AF                     _setTemp_Initialization:	
  4945                           
  4946                           ;OverTemperature_B1.c: 53: Temp=&Temp1;
  4947                           
  4948                           ;incstack = 0
  4949                           ; Regs used in _setTemp_Initialization: [wregfsr1]
  4950  19AF  303C               	movlw	_Temp1& (0+255)
  4951  19B0  0020               	movlb	0	; select bank0
  4952  19B1  00A0               	movwf	??_setTemp_Initialization
  4953  19B2  0820               	movf	??_setTemp_Initialization,w
  4954  19B3  00F9               	movwf	_Temp
  4955                           
  4956                           ;OverTemperature_B1.c: 54: Temp->Safe=1;
  4957  19B4  0879               	movf	_Temp,w
  4958  19B5  0086               	movwf	6
  4959  19B6  3001               	movlw	1	; select bank2/3
  4960  19B7  0087               	movwf	7
  4961  19B8  1601               	bsf	1,4
  4962  19B9  0008               	return
  4963  19BA                     __end_of_setTemp_Initialization:	
  4964                           
  4965                           	psect	text10
  4966  194C                     __ptext10:	
  4967 ;; *************** function _Switch_Main *****************
  4968 ;; Defined at:
  4969 ;;		line 62 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Switch_B1.c"
  4970 ;; Parameters:    Size  Location     Type
  4971 ;;		None
  4972 ;; Auto vars:     Size  Location     Type
  4973 ;;		None
  4974 ;; Return value:  Size  Location     Type
  4975 ;;		None               void
  4976 ;; Registers used:
  4977 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4978 ;; Tracked objects:
  4979 ;;		On entry : 0/0
  4980 ;;		On exit  : 0/0
  4981 ;;		Unchanged: 0/0
  4982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4986 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4987 ;;Total ram usage:        0 bytes
  4988 ;; Hardware stack levels used:    1
  4989 ;; Hardware stack levels required when called:   10
  4990 ;; This function calls:
  4991 ;;		_setSw_Main
  4992 ;; This function is called by:
  4993 ;;		_main
  4994 ;; This function uses a non-reentrant model
  4995 ;;
  4996                           
  4997                           
  4998                           ;psect for function _Switch_Main
  4999  194C                     _Switch_Main:	
  5000                           
  5001                           ;Switch_B1.c: 65: setSw_Main(1);
  5002                           
  5003                           ;incstack = 0
  5004                           ; Regs used in _Switch_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5005  194C  3001               	movlw	1
  5006  194D  3183  2393  3199   	fcall	_setSw_Main
  5007                           
  5008                           ;Switch_B1.c: 69: setSw_Main(2);
  5009  1950  3002               	movlw	2
  5010  1951  3183  2393         	fcall	_setSw_Main
  5011  1953  0008               	return
  5012  1954                     __end_of_Switch_Main:	
  5013                           
  5014                           	psect	text11
  5015  0393                     __ptext11:	
  5016 ;; *************** function _setSw_Main *****************
  5017 ;; Defined at:
  5018 ;;		line 112 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Switch_B1.c"
  5019 ;; Parameters:    Size  Location     Type
  5020 ;;  sw              1    wreg     unsigned char 
  5021 ;; Auto vars:     Size  Location     Type
  5022 ;;  sw              1    2[BANK1 ] unsigned char 
  5023 ;; Return value:  Size  Location     Type
  5024 ;;		None               void
  5025 ;; Registers used:
  5026 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5027 ;; Tracked objects:
  5028 ;;		On entry : 0/0
  5029 ;;		On exit  : 0/0
  5030 ;;		Unchanged: 0/0
  5031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5033 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  5034 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5035 ;;      Totals:         0       2       3       0       0       0       0       0       0       0       0       0       
      +0       0
  5036 ;;Total ram usage:        5 bytes
  5037 ;; Hardware stack levels used:    1
  5038 ;; Hardware stack levels required when called:    9
  5039 ;; This function calls:
  5040 ;;		_SwPointSelect
  5041 ;;		_Sw_DimmerAdjFunc
  5042 ;;		_Sw_DimmerOffFunc
  5043 ;;		_Sw_DimmerOnFunc
  5044 ;;		_setBuz
  5045 ;;		_setRF_Learn
  5046 ;; This function is called by:
  5047 ;;		_Switch_Main
  5048 ;; This function uses a non-reentrant model
  5049 ;;
  5050                           
  5051                           
  5052                           ;psect for function _setSw_Main
  5053  0393                     _setSw_Main:	
  5054                           
  5055                           ;incstack = 0
  5056                           ; Regs used in _setSw_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5057                           ;setSw_Main@sw stored from wreg
  5058  0393  0021               	movlb	1	; select bank1
  5059  0394  00EC               	movwf	setSw_Main@sw^(0+128)
  5060                           
  5061                           ;Switch_B1.c: 114: if(Sw->Enable)
  5062  0395  0878               	movf	_Sw,w
  5063  0396  0086               	movwf	6
  5064  0397  3001               	movlw	1	; select bank2/3
  5065  0398  0087               	movwf	7
  5066  0399  1C01               	btfss	1,0
  5067  039A  0008               	return
  5068                           
  5069                           ;Switch_B1.c: 115: {
  5070                           ;Switch_B1.c: 116: SwPointSelect(sw);
  5071  039B  086C               	movf	setSw_Main@sw^(0+128),w
  5072  039C  319B  230E  3183   	fcall	_SwPointSelect
  5073                           
  5074                           ;Switch_B1.c: 133: if(sw == 1)
  5075  039F  0021               	movlb	1	; select bank1
  5076  03A0  086C               	movf	setSw_Main@sw^(0+128),w
  5077  03A1  3A01               	xorlw	1
  5078  03A2  1D03               	skipz
  5079  03A3  2BB3               	goto	l9505
  5080                           
  5081                           ;Switch_B1.c: 134: {
  5082                           ;Switch_B1.c: 135: Sw->Touch=(RA6 || RA4)?1:0;
  5083  03A4  01EA               	clrf	_setSw_Main$4179^(0+128)
  5084  03A5  0AEA               	incf	_setSw_Main$4179^(0+128),f
  5085  03A6  0020               	movlb	0	; select bank0
  5086  03A7  1F0C               	btfss	12,6	;volatile
  5087  03A8  1A0C               	btfsc	12,4	;volatile
  5088  03A9  2BAC               	goto	l9503
  5089  03AA  0021               	movlb	1	; select bank1
  5090  03AB  01EA               	clrf	_setSw_Main$4179^(0+128)
  5091  03AC                     l9503:	
  5092  03AC  0878               	movf	_Sw,w
  5093  03AD  0086               	movwf	6
  5094  03AE  3001               	movlw	1	; select bank2/3
  5095  03AF  0087               	movwf	7
  5096  03B0  0021               	movlb	1	; select bank1
  5097  03B1  086A               	movf	_setSw_Main$4179^(0+128),w
  5098  03B2  2BC5               	goto	L1
  5099  03B3                     l9505:	
  5100                           ;Switch_B1.c: 136: }
  5101                           
  5102                           
  5103                           ;Switch_B1.c: 137: else if(sw == 2)
  5104  03B3  086C               	movf	setSw_Main@sw^(0+128),w
  5105  03B4  3A02               	xorlw	2
  5106  03B5  1D03               	skipz
  5107  03B6  2BC8               	goto	l9515
  5108                           
  5109                           ;Switch_B1.c: 138: {
  5110                           ;Switch_B1.c: 139: Sw->Touch=(RA0 || RB1)?1:0;
  5111  03B7  01EB               	clrf	_setSw_Main$4180^(0+128)
  5112  03B8  0AEB               	incf	_setSw_Main$4180^(0+128),f
  5113  03B9  0020               	movlb	0	; select bank0
  5114  03BA  1C0C               	btfss	12,0	;volatile
  5115  03BB  188D               	btfsc	13,1	;volatile
  5116  03BC  2BBF               	goto	l9513
  5117  03BD  0021               	movlb	1	; select bank1
  5118  03BE  01EB               	clrf	_setSw_Main$4180^(0+128)
  5119  03BF                     l9513:	
  5120  03BF  0878               	movf	_Sw,w
  5121  03C0  0086               	movwf	6
  5122  03C1  3001               	movlw	1	; select bank2/3
  5123  03C2  0087               	movwf	7
  5124  03C3  0021               	movlb	1	; select bank1
  5125  03C4  086B               	movf	_setSw_Main$4180^(0+128),w
  5126  03C5                     L1:	
  5127  03C5  1081               	bcf	1,1
  5128  03C6  1D03               	skipz
  5129  03C7  1481               	bsf	1,1
  5130  03C8                     l9515:	
  5131                           
  5132                           ;Switch_B1.c: 140: }
  5133                           ;Switch_B1.c: 148: if(Sw->Touch)
  5134  03C8  0878               	movf	_Sw,w
  5135  03C9  0086               	movwf	6
  5136  03CA  3001               	movlw	1	; select bank2/3
  5137  03CB  0087               	movwf	7
  5138  03CC  1C81               	btfss	1,1
  5139  03CD  2CA1               	goto	l9563
  5140                           
  5141                           ;Switch_B1.c: 149: {
  5142                           ;Switch_B1.c: 150: if(!Sw->Debounce)
  5143  03CE  0878               	movf	_Sw,w
  5144  03CF  0086               	movwf	6
  5145  03D0  3001               	movlw	1	; select bank2/3
  5146  03D1  0087               	movwf	7
  5147  03D2  1901               	btfsc	1,2
  5148  03D3  2BF7               	goto	l9529
  5149                           
  5150                           ;Switch_B1.c: 151: {
  5151                           ;Switch_B1.c: 152: Sw->DebounceTime++;
  5152  03D4  3001               	movlw	1
  5153  03D5  0020               	movlb	0	; select bank0
  5154  03D6  00E5               	movwf	??_setSw_Main
  5155  03D7  0878               	movf	_Sw,w
  5156  03D8  3E02               	addlw	2
  5157  03D9  0086               	movwf	6
  5158  03DA  3001               	movlw	1	; select bank2/3
  5159  03DB  0087               	movwf	7
  5160  03DC  0865               	movf	??_setSw_Main,w
  5161  03DD  0781               	addwf	1,f
  5162                           
  5163                           ;Switch_B1.c: 153: if(Sw->DebounceTime >= 5)
  5164  03DE  0878               	movf	_Sw,w
  5165  03DF  3E02               	addlw	2
  5166  03E0  0086               	movwf	6
  5167  03E1  3001               	movlw	1	; select bank2/3
  5168  03E2  0087               	movwf	7
  5169  03E3  3005               	movlw	5
  5170  03E4  0201               	subwf	1,w
  5171  03E5  1C03               	skipc
  5172  03E6  0008               	return
  5173                           
  5174                           ;Switch_B1.c: 154: {
  5175                           ;Switch_B1.c: 155: Sw->DebounceTime=0;
  5176  03E7  0878               	movf	_Sw,w
  5177  03E8  3E02               	addlw	2
  5178  03E9  0086               	movwf	6
  5179  03EA  3001               	movlw	1	; select bank2/3
  5180  03EB  0087               	movwf	7
  5181  03EC  0181               	clrf	1
  5182                           
  5183                           ;Switch_B1.c: 156: Sw->Debounce=1;
  5184  03ED  0878               	movf	_Sw,w
  5185  03EE  0086               	movwf	6
  5186  03EF  3001               	movlw	1	; select bank2/3
  5187  03F0  0087               	movwf	7
  5188  03F1  1501               	bsf	1,2
  5189                           
  5190                           ;Switch_B1.c: 159: Sw_DimmerOnFunc(sw);
  5191  03F2  0021               	movlb	1	; select bank1
  5192  03F3  086C               	movf	setSw_Main@sw^(0+128),w
  5193  03F4  3196  269C         	fcall	_Sw_DimmerOnFunc
  5194                           
  5195                           ;Switch_B1.c: 162: }
  5196                           ;Switch_B1.c: 163: }
  5197  03F6  0008               	return
  5198  03F7                     l9529:	
  5199                           
  5200                           ;Switch_B1.c: 164: else
  5201                           ;Switch_B1.c: 165: {
  5202                           ;Switch_B1.c: 166: if(!Sw->Hold1)
  5203  03F7  0878               	movf	_Sw,w
  5204  03F8  0086               	movwf	6
  5205  03F9  3001               	movlw	1	; select bank2/3
  5206  03FA  0087               	movwf	7
  5207  03FB  1981               	btfsc	1,3
  5208  03FC  2C2A               	goto	l9539
  5209                           
  5210                           ;Switch_B1.c: 167: {
  5211                           ;Switch_B1.c: 168: Sw->Hold1Time++;
  5212  03FD  0878               	movf	_Sw,w
  5213  03FE  3E03               	addlw	3
  5214  03FF  0086               	movwf	6
  5215  0400  3001               	movlw	1	; select bank2/3
  5216  0401  0087               	movwf	7
  5217  0402  3001               	movlw	1
  5218  0403  0781               	addwf	1,f
  5219  0404  3141               	addfsr 1,1
  5220  0405  1803               	skipnc
  5221  0406  0A81               	incf	1,f
  5222                           
  5223                           ;Switch_B1.c: 169: if(Sw->Hold1Time >= 150)
  5224  0407  0878               	movf	_Sw,w
  5225  0408  3E03               	addlw	3
  5226  0409  0086               	movwf	6
  5227  040A  3001               	movlw	1	; select bank2/3
  5228  040B  0087               	movwf	7
  5229  040C  3F40               	moviw [0]fsr1
  5230  040D  0020               	movlb	0	; select bank0
  5231  040E  00E5               	movwf	??_setSw_Main
  5232  040F  3F41               	moviw [1]fsr1
  5233  0410  00E6               	movwf	??_setSw_Main+1
  5234  0411  3000               	movlw	0
  5235  0412  0266               	subwf	??_setSw_Main+1,w
  5236  0413  3096               	movlw	150
  5237  0414  1903               	skipnz
  5238  0415  0265               	subwf	??_setSw_Main,w
  5239  0416  1C03               	skipc
  5240  0417  0008               	return
  5241                           
  5242                           ;Switch_B1.c: 170: {
  5243                           ;Switch_B1.c: 171: Sw->Hold1Time=0;
  5244  0418  0878               	movf	_Sw,w
  5245  0419  3E03               	addlw	3
  5246  041A  0086               	movwf	6
  5247  041B  3001               	movlw	1	; select bank2/3
  5248  041C  0087               	movwf	7
  5249  041D  3000               	movlw	0
  5250  041E  3FC0               	movwi [0]fsr1
  5251  041F  3FC1               	movwi [1]fsr1
  5252                           
  5253                           ;Switch_B1.c: 172: Sw->Hold1=1;
  5254  0420  0878               	movf	_Sw,w
  5255  0421  0086               	movwf	6
  5256  0422  3001               	movlw	1	; select bank2/3
  5257  0423  0087               	movwf	7
  5258  0424  1581               	bsf	1,3
  5259                           
  5260                           ;Switch_B1.c: 175: Sw_DimmerAdjFunc(sw);
  5261  0425  0021               	movlb	1	; select bank1
  5262  0426  086C               	movf	setSw_Main@sw^(0+128),w
  5263  0427  3190  2076         	fcall	_Sw_DimmerAdjFunc
  5264                           
  5265                           ;Switch_B1.c: 178: }
  5266                           ;Switch_B1.c: 179: }
  5267  0429  0008               	return
  5268  042A                     l9539:	
  5269                           
  5270                           ;Switch_B1.c: 180: else
  5271                           ;Switch_B1.c: 181: {
  5272                           ;Switch_B1.c: 182: if(!Sw->Hold2)
  5273  042A  0878               	movf	_Sw,w
  5274  042B  0086               	movwf	6
  5275  042C  3001               	movlw	1	; select bank2/3
  5276  042D  0087               	movwf	7
  5277  042E  1A01               	btfsc	1,4
  5278  042F  2C6E               	goto	l9553
  5279                           
  5280                           ;Switch_B1.c: 183: {
  5281                           ;Switch_B1.c: 184: Sw->Hold2Time++;
  5282  0430  0878               	movf	_Sw,w
  5283  0431  3E05               	addlw	5
  5284  0432  0086               	movwf	6
  5285  0433  3001               	movlw	1	; select bank2/3
  5286  0434  0087               	movwf	7
  5287  0435  3001               	movlw	1
  5288  0436  0781               	addwf	1,f
  5289  0437  3141               	addfsr 1,1
  5290  0438  1803               	skipnc
  5291  0439  0A81               	incf	1,f
  5292                           
  5293                           ;Switch_B1.c: 185: if(Sw->Hold2Time >= 150)
  5294  043A  0878               	movf	_Sw,w
  5295  043B  3E05               	addlw	5
  5296  043C  0086               	movwf	6
  5297  043D  3001               	movlw	1	; select bank2/3
  5298  043E  0087               	movwf	7
  5299  043F  3F40               	moviw [0]fsr1
  5300  0440  0020               	movlb	0	; select bank0
  5301  0441  00E5               	movwf	??_setSw_Main
  5302  0442  3F41               	moviw [1]fsr1
  5303  0443  00E6               	movwf	??_setSw_Main+1
  5304  0444  3000               	movlw	0
  5305  0445  0266               	subwf	??_setSw_Main+1,w
  5306  0446  3096               	movlw	150
  5307  0447  1903               	skipnz
  5308  0448  0265               	subwf	??_setSw_Main,w
  5309  0449  1C03               	skipc
  5310  044A  0008               	return
  5311                           
  5312                           ;Switch_B1.c: 186: {
  5313                           ;Switch_B1.c: 187: Sw->Hold2Time=0;
  5314  044B  0878               	movf	_Sw,w
  5315  044C  3E05               	addlw	5
  5316  044D  0086               	movwf	6
  5317  044E  3001               	movlw	1	; select bank2/3
  5318  044F  0087               	movwf	7
  5319  0450  3000               	movlw	0
  5320  0451  3FC0               	movwi [0]fsr1
  5321  0452  3FC1               	movwi [1]fsr1
  5322                           
  5323                           ;Switch_B1.c: 188: Sw->Hold2=1;
  5324  0453  0878               	movf	_Sw,w
  5325  0454  0086               	movwf	6
  5326  0455  3001               	movlw	1	; select bank2/3
  5327  0456  0087               	movwf	7
  5328  0457  1601               	bsf	1,4
  5329                           
  5330                           ;Switch_B1.c: 192: setRF_Learn(1,1);
  5331  0458  01A2               	clrf	setRF_Learn@command
  5332  0459  0AA2               	incf	setRF_Learn@command,f
  5333  045A  3001               	movlw	1
  5334  045B  319A  2237  3183   	fcall	_setRF_Learn
  5335                           
  5336                           ;Switch_B1.c: 194: if(TMain->First)
  5337  045E  0020               	movlb	0	; select bank0
  5338  045F  086F               	movf	_TMain,w
  5339  0460  3E03               	addlw	3
  5340  0461  0086               	movwf	6
  5341  0462  3001               	movlw	1	; select bank2/3
  5342  0463  0087               	movwf	7
  5343  0464  1C81               	btfss	1,1
  5344  0465  0008               	return
  5345                           
  5346                           ;Switch_B1.c: 195: {
  5347                           ;Switch_B1.c: 196: setBuz(2,100);
  5348  0466  3064               	movlw	100
  5349  0467  00A6               	movwf	setBuz@time
  5350  0468  3000               	movlw	0
  5351  0469  00A7               	movwf	setBuz@time+1
  5352  046A  3002               	movlw	2
  5353  046B  3197  2711         	fcall	_setBuz
  5354                           
  5355                           ;Switch_B1.c: 197: }
  5356                           ;Switch_B1.c: 199: }
  5357                           ;Switch_B1.c: 200: }
  5358  046D  0008               	return
  5359  046E                     l9553:	
  5360                           
  5361                           ;Switch_B1.c: 201: else
  5362                           ;Switch_B1.c: 202: {
  5363                           ;Switch_B1.c: 203: if(!Sw->Hold3)
  5364  046E  0878               	movf	_Sw,w
  5365  046F  0086               	movwf	6
  5366  0470  3001               	movlw	1	; select bank2/3
  5367  0471  0087               	movwf	7
  5368  0472  1A81               	btfsc	1,5
  5369  0473  0008               	return
  5370                           
  5371                           ;Switch_B1.c: 204: {
  5372                           ;Switch_B1.c: 205: Sw->Hold3Time++;
  5373  0474  0878               	movf	_Sw,w
  5374  0475  3E07               	addlw	7
  5375  0476  0086               	movwf	6
  5376  0477  3001               	movlw	1	; select bank2/3
  5377  0478  0087               	movwf	7
  5378  0479  3001               	movlw	1
  5379  047A  0781               	addwf	1,f
  5380  047B  3141               	addfsr 1,1
  5381  047C  1803               	skipnc
  5382  047D  0A81               	incf	1,f
  5383                           
  5384                           ;Switch_B1.c: 206: if(Sw->Hold3Time >= 300)
  5385  047E  0878               	movf	_Sw,w
  5386  047F  3E07               	addlw	7
  5387  0480  0086               	movwf	6
  5388  0481  3001               	movlw	1	; select bank2/3
  5389  0482  0087               	movwf	7
  5390  0483  3F40               	moviw [0]fsr1
  5391  0484  0020               	movlb	0	; select bank0
  5392  0485  00E5               	movwf	??_setSw_Main
  5393  0486  3F41               	moviw [1]fsr1
  5394  0487  00E6               	movwf	??_setSw_Main+1
  5395  0488  3001               	movlw	1
  5396  0489  0266               	subwf	??_setSw_Main+1,w
  5397  048A  302C               	movlw	44
  5398  048B  1903               	skipnz
  5399  048C  0265               	subwf	??_setSw_Main,w
  5400  048D  1C03               	skipc
  5401  048E  0008               	return
  5402                           
  5403                           ;Switch_B1.c: 207: {
  5404                           ;Switch_B1.c: 208: Sw->Hold3Time=0;
  5405  048F  0878               	movf	_Sw,w
  5406  0490  3E07               	addlw	7
  5407  0491  0086               	movwf	6
  5408  0492  3001               	movlw	1	; select bank2/3
  5409  0493  0087               	movwf	7
  5410  0494  3000               	movlw	0
  5411  0495  3FC0               	movwi [0]fsr1
  5412  0496  3FC1               	movwi [1]fsr1
  5413                           
  5414                           ;Switch_B1.c: 209: Sw->Hold3=1;
  5415  0497  0878               	movf	_Sw,w
  5416  0498  0086               	movwf	6
  5417  0499  3001               	movlw	1	; select bank2/3
  5418  049A  0087               	movwf	7
  5419  049B  1681               	bsf	1,5
  5420                           
  5421                           ;Switch_B1.c: 212: setRF_Learn(1,0);
  5422  049C  01A2               	clrf	setRF_Learn@command
  5423  049D  3001               	movlw	1
  5424  049E  319A  2237         	fcall	_setRF_Learn
  5425                           
  5426                           ;Switch_B1.c: 215: }
  5427                           ;Switch_B1.c: 216: }
  5428                           ;Switch_B1.c: 217: }
  5429                           ;Switch_B1.c: 218: }
  5430                           ;Switch_B1.c: 219: }
  5431                           ;Switch_B1.c: 220: }
  5432  04A0  0008               	return
  5433  04A1                     l9563:	
  5434                           
  5435                           ;Switch_B1.c: 221: else
  5436                           ;Switch_B1.c: 222: {
  5437                           ;Switch_B1.c: 223: if(Sw->Debounce)
  5438  04A1  0878               	movf	_Sw,w
  5439  04A2  0086               	movwf	6
  5440  04A3  3001               	movlw	1	; select bank2/3
  5441  04A4  0087               	movwf	7
  5442  04A5  1D01               	btfss	1,2
  5443  04A6  0008               	return
  5444                           
  5445                           ;Switch_B1.c: 224: {
  5446                           ;Switch_B1.c: 225: Sw->DebounceTime++;
  5447  04A7  3001               	movlw	1
  5448  04A8  0020               	movlb	0	; select bank0
  5449  04A9  00E5               	movwf	??_setSw_Main
  5450  04AA  0878               	movf	_Sw,w
  5451  04AB  3E02               	addlw	2
  5452  04AC  0086               	movwf	6
  5453  04AD  3001               	movlw	1	; select bank2/3
  5454  04AE  0087               	movwf	7
  5455  04AF  0865               	movf	??_setSw_Main,w
  5456  04B0  0781               	addwf	1,f
  5457                           
  5458                           ;Switch_B1.c: 226: if(Sw->DebounceTime >= 5)
  5459  04B1  0878               	movf	_Sw,w
  5460  04B2  3E02               	addlw	2
  5461  04B3  0086               	movwf	6
  5462  04B4  3001               	movlw	1	; select bank2/3
  5463  04B5  0087               	movwf	7
  5464  04B6  3005               	movlw	5
  5465  04B7  0201               	subwf	1,w
  5466  04B8  1C03               	skipc
  5467  04B9  0008               	return
  5468                           
  5469                           ;Switch_B1.c: 227: {
  5470                           ;Switch_B1.c: 228: Sw->DebounceTime=0;
  5471  04BA  0878               	movf	_Sw,w
  5472  04BB  3E02               	addlw	2
  5473  04BC  0086               	movwf	6
  5474  04BD  3001               	movlw	1	; select bank2/3
  5475  04BE  0087               	movwf	7
  5476  04BF  0181               	clrf	1
  5477                           
  5478                           ;Switch_B1.c: 229: Sw->Debounce=0;
  5479  04C0  0878               	movf	_Sw,w
  5480  04C1  0086               	movwf	6
  5481  04C2  3001               	movlw	1	; select bank2/3
  5482  04C3  0087               	movwf	7
  5483  04C4  1101               	bcf	1,2
  5484                           
  5485                           ;Switch_B1.c: 230: Sw->Hold1Time=0;
  5486  04C5  0878               	movf	_Sw,w
  5487  04C6  3E03               	addlw	3
  5488  04C7  0086               	movwf	6
  5489  04C8  3001               	movlw	1	; select bank2/3
  5490  04C9  0087               	movwf	7
  5491  04CA  3000               	movlw	0
  5492  04CB  3FC0               	movwi [0]fsr1
  5493  04CC  3FC1               	movwi [1]fsr1
  5494                           
  5495                           ;Switch_B1.c: 231: Sw->Hold1=0;
  5496  04CD  0878               	movf	_Sw,w
  5497  04CE  0086               	movwf	6
  5498  04CF  3001               	movlw	1	; select bank2/3
  5499  04D0  0087               	movwf	7
  5500  04D1  1181               	bcf	1,3
  5501                           
  5502                           ;Switch_B1.c: 232: Sw->Hold2Time=0;
  5503  04D2  0878               	movf	_Sw,w
  5504  04D3  3E05               	addlw	5
  5505  04D4  0086               	movwf	6
  5506  04D5  3001               	movlw	1	; select bank2/3
  5507  04D6  0087               	movwf	7
  5508  04D7  3000               	movlw	0
  5509  04D8  3FC0               	movwi [0]fsr1
  5510  04D9  3FC1               	movwi [1]fsr1
  5511                           
  5512                           ;Switch_B1.c: 233: Sw->Hold2=0;
  5513  04DA  0878               	movf	_Sw,w
  5514  04DB  0086               	movwf	6
  5515  04DC  3001               	movlw	1	; select bank2/3
  5516  04DD  0087               	movwf	7
  5517  04DE  1201               	bcf	1,4
  5518                           
  5519                           ;Switch_B1.c: 234: Sw->Hold3Time=0;
  5520  04DF  0878               	movf	_Sw,w
  5521  04E0  3E07               	addlw	7
  5522  04E1  0086               	movwf	6
  5523  04E2  3001               	movlw	1	; select bank2/3
  5524  04E3  0087               	movwf	7
  5525  04E4  3000               	movlw	0
  5526  04E5  3FC0               	movwi [0]fsr1
  5527  04E6  3FC1               	movwi [1]fsr1
  5528                           
  5529                           ;Switch_B1.c: 235: Sw->Hold3=0;
  5530  04E7  0878               	movf	_Sw,w
  5531  04E8  0086               	movwf	6
  5532  04E9  3001               	movlw	1	; select bank2/3
  5533  04EA  0087               	movwf	7
  5534  04EB  1281               	bcf	1,5
  5535                           
  5536                           ;Switch_B1.c: 238: Sw_DimmerOffFunc(sw);
  5537  04EC  0021               	movlb	1	; select bank1
  5538  04ED  086C               	movf	setSw_Main@sw^(0+128),w
  5539  04EE  3197  2788  3183   	fcall	_Sw_DimmerOffFunc
  5540                           
  5541                           ;Switch_B1.c: 243: setRF_Learn(1,0);
  5542  04F1  0020               	movlb	0	; select bank0
  5543  04F2  01A2               	clrf	setRF_Learn@command
  5544  04F3  3001               	movlw	1
  5545  04F4  319A  2237         	fcall	_setRF_Learn
  5546  04F6  0008               	return
  5547  04F7                     __end_of_setSw_Main:	
  5548                           
  5549                           	psect	text12
  5550  1A37                     __ptext12:	
  5551 ;; *************** function _setRF_Learn *****************
  5552 ;; Defined at:
  5553 ;;		line 31 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
  5554 ;; Parameters:    Size  Location     Type
  5555 ;;  rf              1    wreg     unsigned char 
  5556 ;;  command         1    2[BANK0 ] unsigned char 
  5557 ;; Auto vars:     Size  Location     Type
  5558 ;;  rf              1    3[BANK0 ] unsigned char 
  5559 ;; Return value:  Size  Location     Type
  5560 ;;		None               void
  5561 ;; Registers used:
  5562 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5563 ;; Tracked objects:
  5564 ;;		On entry : 0/0
  5565 ;;		On exit  : 0/0
  5566 ;;		Unchanged: 0/0
  5567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5568 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5569 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5571 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5572 ;;Total ram usage:        2 bytes
  5573 ;; Hardware stack levels used:    1
  5574 ;; Hardware stack levels required when called:    5
  5575 ;; This function calls:
  5576 ;;		_RfPointSelect
  5577 ;; This function is called by:
  5578 ;;		_setSw_Main
  5579 ;; This function uses a non-reentrant model
  5580 ;;
  5581                           
  5582                           
  5583                           ;psect for function _setRF_Learn
  5584  1A37                     _setRF_Learn:	
  5585                           
  5586                           ;incstack = 0
  5587                           ; Regs used in _setRF_Learn: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5588                           ;setRF_Learn@rf stored from wreg
  5589  1A37  0020               	movlb	0	; select bank0
  5590  1A38  00A3               	movwf	setRF_Learn@rf
  5591                           
  5592                           ;RF_Control_B1.c: 33: RfPointSelect(rf);
  5593  1A39  0823               	movf	setRF_Learn@rf,w
  5594  1A3A  3199  218E         	fcall	_RfPointSelect
  5595                           
  5596                           ;RF_Control_B1.c: 34: RF->Learn=command;
  5597  1A3C  0877               	movf	_RF,w
  5598  1A3D  0086               	movwf	6
  5599  1A3E  0187               	clrf	7
  5600  1A3F  0020               	movlb	0	; select bank0
  5601  1A40  0822               	movf	setRF_Learn@command,w
  5602  1A41  1301               	bcf	1,6
  5603  1A42  1D03               	skipz
  5604  1A43  1701               	bsf	1,6
  5605  1A44  0008               	return
  5606  1A45                     __end_of_setRF_Learn:	
  5607                           
  5608                           	psect	text13
  5609  169C                     __ptext13:	
  5610 ;; *************** function _Sw_DimmerOnFunc *****************
  5611 ;; Defined at:
  5612 ;;		line 251 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Switch_B1.c"
  5613 ;; Parameters:    Size  Location     Type
  5614 ;;  sw              1    wreg     unsigned char 
  5615 ;; Auto vars:     Size  Location     Type
  5616 ;;  sw              1   67[BANK0 ] unsigned char 
  5617 ;;  Idle            1   66[BANK0 ] unsigned char 
  5618 ;; Return value:  Size  Location     Type
  5619 ;;		None               void
  5620 ;; Registers used:
  5621 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5622 ;; Tracked objects:
  5623 ;;		On entry : 0/0
  5624 ;;		On exit  : 0/0
  5625 ;;		Unchanged: 0/0
  5626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5628 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5630 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5631 ;;Total ram usage:        2 bytes
  5632 ;; Hardware stack levels used:    1
  5633 ;; Hardware stack levels required when called:    8
  5634 ;; This function calls:
  5635 ;;		_setBuz
  5636 ;;		_setDimmerLights_Switch
  5637 ;;		_setDimmerLights_Trigger
  5638 ;;		_setRFSW_Status
  5639 ;;		_setRF_DimmerLights
  5640 ;;		_setTxData
  5641 ;; This function is called by:
  5642 ;;		_setSw_Main
  5643 ;; This function uses a non-reentrant model
  5644 ;;
  5645                           
  5646                           
  5647                           ;psect for function _Sw_DimmerOnFunc
  5648  169C                     _Sw_DimmerOnFunc:	
  5649                           
  5650                           ;incstack = 0
  5651                           ; Regs used in _Sw_DimmerOnFunc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5652                           ;Sw_DimmerOnFunc@sw stored from wreg
  5653  169C  0020               	movlb	0	; select bank0
  5654  169D  00E3               	movwf	Sw_DimmerOnFunc@sw
  5655                           
  5656                           ;Switch_B1.c: 253: char Idle=1;
  5657  169E  01E2               	clrf	Sw_DimmerOnFunc@Idle
  5658  169F  0AE2               	incf	Sw_DimmerOnFunc@Idle,f
  5659                           
  5660                           ;Switch_B1.c: 270: if(sw == 1)
  5661  16A0  0863               	movf	Sw_DimmerOnFunc@sw,w
  5662  16A1  3A01               	xorlw	1
  5663  16A2  1D03               	skipz
  5664  16A3  2EA6               	goto	l8969
  5665                           
  5666                           ;Switch_B1.c: 271: {
  5667                           ;Switch_B1.c: 272: Idle=(DimmerLights22->AdjGo)?0:1;
  5668  16A4  086C               	movf	_DimmerLights22,w
  5669  16A5  2EAB               	goto	L2
  5670  16A6                     l8969:	
  5671                           ;Switch_B1.c: 273: }
  5672                           
  5673                           
  5674                           ;Switch_B1.c: 274: else if(sw == 2)
  5675  16A6  0863               	movf	Sw_DimmerOnFunc@sw,w
  5676  16A7  3A02               	xorlw	2
  5677  16A8  1D03               	skipz
  5678  16A9  2EB6               	goto	l8973
  5679                           
  5680                           ;Switch_B1.c: 275: {
  5681                           ;Switch_B1.c: 276: Idle=(DimmerLights11->AdjGo)?0:1;
  5682  16AA  086B               	movf	_DimmerLights11,w
  5683  16AB                     L2:	
  5684  16AB  3E09               	addlw	9
  5685  16AC  0086               	movwf	6
  5686  16AD  3001               	movlw	1	; select bank2/3
  5687  16AE  0087               	movwf	7
  5688  16AF  1003               	clrc
  5689  16B0  1D01               	btfss	1,2
  5690  16B1  1403               	setc
  5691  16B2  3000               	movlw	0
  5692  16B3  1803               	btfsc	3,0
  5693  16B4  3001               	movlw	1
  5694  16B5  00E2               	movwf	Sw_DimmerOnFunc@Idle
  5695  16B6                     l8973:	
  5696                           
  5697                           ;Switch_B1.c: 277: }
  5698                           ;Switch_B1.c: 280: if(Idle)
  5699  16B6  0862               	movf	Sw_DimmerOnFunc@Idle,w
  5700  16B7  1903               	btfsc	3,2
  5701  16B8  0008               	return
  5702                           
  5703                           ;Switch_B1.c: 281: {
  5704                           ;Switch_B1.c: 282: Sw->Flag=1;
  5705  16B9  0878               	movf	_Sw,w
  5706  16BA  0086               	movwf	6
  5707  16BB  3001               	movlw	1	; select bank2/3
  5708  16BC  0087               	movwf	7
  5709  16BD  1781               	bsf	1,7
  5710                           
  5711                           ;Switch_B1.c: 283: setBuz(1,100);
  5712  16BE  3064               	movlw	100
  5713  16BF  00A6               	movwf	setBuz@time
  5714  16C0  3000               	movlw	0
  5715  16C1  00A7               	movwf	setBuz@time+1
  5716  16C2  3001               	movlw	1
  5717  16C3  3197  2711  3196   	fcall	_setBuz
  5718                           
  5719                           ;Switch_B1.c: 284: if(!Sw->Status)
  5720  16C6  0878               	movf	_Sw,w
  5721  16C7  0086               	movwf	6
  5722  16C8  3001               	movlw	1	; select bank2/3
  5723  16C9  0087               	movwf	7
  5724  16CA  1B01               	btfsc	1,6
  5725  16CB  2EFE               	goto	l8995
  5726                           
  5727                           ;Switch_B1.c: 285: {
  5728                           ;Switch_B1.c: 286: Sw->Status=1;
  5729  16CC  0878               	movf	_Sw,w
  5730  16CD  0086               	movwf	6
  5731  16CE  3001               	movlw	1	; select bank2/3
  5732  16CF  0087               	movwf	7
  5733  16D0  1701               	bsf	1,6
  5734                           
  5735                           ;Switch_B1.c: 287: setRFSW_Status(sw,1);
  5736  16D1  0020               	movlb	0	; select bank0
  5737  16D2  01A2               	clrf	setRFSW_Status@command
  5738  16D3  0AA2               	incf	setRFSW_Status@command,f
  5739  16D4  0863               	movf	Sw_DimmerOnFunc@sw,w
  5740  16D5  319A  2245  3196   	fcall	_setRFSW_Status
  5741                           
  5742                           ;Switch_B1.c: 289: setDimmerLights_Trigger(sw,1);
  5743  16D8  0020               	movlb	0	; select bank0
  5744  16D9  01A2               	clrf	setDimmerLights_Trigger@command
  5745  16DA  0AA2               	incf	setDimmerLights_Trigger@command,f
  5746  16DB  0863               	movf	Sw_DimmerOnFunc@sw,w
  5747  16DC  319A  2283  3196   	fcall	_setDimmerLights_Trigger
  5748                           
  5749                           ;Switch_B1.c: 290: setDimmerLights_Switch(sw,1);
  5750  16DF  0020               	movlb	0	; select bank0
  5751  16E0  01A2               	clrf	setDimmerLights_Switch@command
  5752  16E1  0AA2               	incf	setDimmerLights_Switch@command,f
  5753  16E2  0863               	movf	Sw_DimmerOnFunc@sw,w
  5754  16E3  319A  2273  3196   	fcall	_setDimmerLights_Switch
  5755                           
  5756                           ;Switch_B1.c: 292: setRF_DimmerLights(sw,Sw->Status);
  5757  16E6  0878               	movf	_Sw,w
  5758  16E7  0086               	movwf	6
  5759  16E8  3001               	movlw	1	; select bank2/3
  5760  16E9  0087               	movwf	7
  5761  16EA  3000               	movlw	0
  5762  16EB  1B01               	btfsc	1,6
  5763  16EC  3001               	movlw	1
  5764  16ED  0020               	movlb	0	; select bank0
  5765  16EE  00DD               	movwf	setRF_DimmerLights@on
  5766  16EF  0863               	movf	Sw_DimmerOnFunc@sw,w
  5767  16F0  3195  2553  3196   	fcall	_setRF_DimmerLights
  5768                           
  5769                           ;Switch_B1.c: 293: setTxData(1);
  5770  16F3  3001               	movlw	1
  5771  16F4  3187  271C         	fcall	_setTxData
  5772                           
  5773                           ;Switch_B1.c: 294: TMain->ClockStop=1;
  5774  16F6  0020               	movlb	0	; select bank0
  5775  16F7  086F               	movf	_TMain,w
  5776  16F8  3E10               	addlw	16
  5777  16F9  0086               	movwf	6
  5778  16FA  3001               	movlw	1	; select bank2/3
  5779  16FB  0087               	movwf	7
  5780  16FC  1501               	bsf	1,2
  5781                           
  5782                           ;Switch_B1.c: 295: }
  5783  16FD  0008               	return
  5784  16FE                     l8995:	
  5785                           
  5786                           ;Switch_B1.c: 296: else
  5787                           ;Switch_B1.c: 297: {
  5788                           ;Switch_B1.c: 298: Sw->Status=0;
  5789  16FE  0878               	movf	_Sw,w
  5790  16FF  0086               	movwf	6
  5791  1700  3001               	movlw	1	; select bank2/3
  5792  1701  0087               	movwf	7
  5793  1702  1301               	bcf	1,6
  5794                           
  5795                           ;Switch_B1.c: 299: setRFSW_Status(sw,Sw->Status);
  5796  1703  0878               	movf	_Sw,w
  5797  1704  0086               	movwf	6
  5798  1705  3001               	movlw	1	; select bank2/3
  5799  1706  0087               	movwf	7
  5800  1707  3000               	movlw	0
  5801  1708  1B01               	btfsc	1,6
  5802  1709  3001               	movlw	1
  5803  170A  0020               	movlb	0	; select bank0
  5804  170B  00A2               	movwf	setRFSW_Status@command
  5805  170C  0863               	movf	Sw_DimmerOnFunc@sw,w
  5806  170D  319A  2245         	fcall	_setRFSW_Status
  5807  170F  0020               	movlb	0	; select bank0
  5808  1710  0008               	return
  5809  1711                     __end_of_Sw_DimmerOnFunc:	
  5810                           
  5811                           	psect	text14
  5812  1788                     __ptext14:	
  5813 ;; *************** function _Sw_DimmerOffFunc *****************
  5814 ;; Defined at:
  5815 ;;		line 304 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Switch_B1.c"
  5816 ;; Parameters:    Size  Location     Type
  5817 ;;  sw              1    wreg     unsigned char 
  5818 ;; Auto vars:     Size  Location     Type
  5819 ;;  sw              1   68[BANK0 ] unsigned char 
  5820 ;; Return value:  Size  Location     Type
  5821 ;;		None               void
  5822 ;; Registers used:
  5823 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5824 ;; Tracked objects:
  5825 ;;		On entry : 0/0
  5826 ;;		On exit  : 0/0
  5827 ;;		Unchanged: 0/0
  5828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5830 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5831 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5832 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5833 ;;Total ram usage:        3 bytes
  5834 ;; Hardware stack levels used:    1
  5835 ;; Hardware stack levels required when called:    8
  5836 ;; This function calls:
  5837 ;;		_setDelayOff_GO
  5838 ;;		_setDimmerLights_AdjGo
  5839 ;;		_setDimmerLights_Switch
  5840 ;;		_setDimmerLights_Trigger
  5841 ;;		_setDimmerLights_TriggerAdj
  5842 ;;		_setRF_DimmerLights
  5843 ;;		_setTxData
  5844 ;; This function is called by:
  5845 ;;		_setSw_Main
  5846 ;; This function uses a non-reentrant model
  5847 ;;
  5848                           
  5849                           
  5850                           ;psect for function _Sw_DimmerOffFunc
  5851  1788                     _Sw_DimmerOffFunc:	
  5852                           
  5853                           ;incstack = 0
  5854                           ; Regs used in _Sw_DimmerOffFunc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5855                           ;Sw_DimmerOffFunc@sw stored from wreg
  5856  1788  0020               	movlb	0	; select bank0
  5857  1789  00E4               	movwf	Sw_DimmerOffFunc@sw
  5858                           
  5859                           ;Switch_B1.c: 306: if(Sw->Flag)
  5860  178A  0878               	movf	_Sw,w
  5861  178B  0086               	movwf	6
  5862  178C  3001               	movlw	1	; select bank2/3
  5863  178D  0087               	movwf	7
  5864  178E  1F81               	btfss	1,7
  5865  178F  0008               	return
  5866                           
  5867                           ;Switch_B1.c: 307: {
  5868                           ;Switch_B1.c: 308: Sw->Flag=0;
  5869  1790  0878               	movf	_Sw,w
  5870  1791  0086               	movwf	6
  5871  1792  3001               	movlw	1	; select bank2/3
  5872  1793  0087               	movwf	7
  5873  1794  1381               	bcf	1,7
  5874                           
  5875                           ;Switch_B1.c: 309: if(Sw->Status)
  5876  1795  0878               	movf	_Sw,w
  5877  1796  0086               	movwf	6
  5878  1797  3001               	movlw	1	; select bank2/3
  5879  1798  0087               	movwf	7
  5880  1799  1F01               	btfss	1,6
  5881  179A  2FD4               	goto	l9039
  5882                           
  5883                           ;Switch_B1.c: 310: {
  5884                           ;Switch_B1.c: 311: if(Sw->Adj)
  5885  179B  0A78               	incf	_Sw,w
  5886  179C  0086               	movwf	6
  5887  179D  3001               	movlw	1	; select bank2/3
  5888  179E  0087               	movwf	7
  5889  179F  1C01               	btfss	1,0
  5890  17A0  0008               	return
  5891                           
  5892                           ;Switch_B1.c: 312: {
  5893                           ;Switch_B1.c: 313: Sw->Adj=0;
  5894  17A1  0A78               	incf	_Sw,w
  5895  17A2  0086               	movwf	6
  5896  17A3  3001               	movlw	1	; select bank2/3
  5897  17A4  0087               	movwf	7
  5898  17A5  1001               	bcf	1,0
  5899                           
  5900                           ;Switch_B1.c: 314: setDimmerLights_TriggerAdj(sw,1);
  5901  17A6  01A2               	clrf	setDimmerLights_TriggerAdj@command
  5902  17A7  0AA2               	incf	setDimmerLights_TriggerAdj@command,f
  5903  17A8  0864               	movf	Sw_DimmerOffFunc@sw,w
  5904  17A9  319A  22B3  3197   	fcall	_setDimmerLights_TriggerAdj
  5905                           
  5906                           ;Switch_B1.c: 315: setDimmerLights_AdjGo(sw,0);
  5907  17AC  0020               	movlb	0	; select bank0
  5908  17AD  01A2               	clrf	setDimmerLights_AdjGo@command
  5909  17AE  0864               	movf	Sw_DimmerOffFunc@sw,w
  5910  17AF  319A  22A3  3197   	fcall	_setDimmerLights_AdjGo
  5911                           
  5912                           ;Switch_B1.c: 317: Product->Data[17]=Product->Data[26+sw];
  5913  17B2  0020               	movlb	0	; select bank0
  5914  17B3  0864               	movf	Sw_DimmerOffFunc@sw,w
  5915  17B4  3E1A               	addlw	26
  5916  17B5  076E               	addwf	_Product,w
  5917  17B6  00E2               	movwf	??_Sw_DimmerOffFunc
  5918  17B7  0862               	movf	??_Sw_DimmerOffFunc,w
  5919  17B8  0086               	movwf	6
  5920  17B9  3001               	movlw	1	; select bank2/3
  5921  17BA  0087               	movwf	7
  5922  17BB  0801               	movf	1,w
  5923  17BC  00E3               	movwf	??_Sw_DimmerOffFunc+1
  5924  17BD  086E               	movf	_Product,w
  5925  17BE  3E11               	addlw	17
  5926  17BF  0086               	movwf	6
  5927  17C0  3001               	movlw	1	; select bank2/3
  5928  17C1  0087               	movwf	7
  5929  17C2  0863               	movf	??_Sw_DimmerOffFunc+1,w
  5930  17C3  0081               	movwf	1
  5931                           
  5932                           ;Switch_B1.c: 318: setRF_DimmerLights(sw,Sw->Status);
  5933  17C4  0878               	movf	_Sw,w
  5934  17C5  0086               	movwf	6
  5935  17C6  3001               	movlw	1	; select bank2/3
  5936  17C7  0087               	movwf	7
  5937  17C8  3000               	movlw	0
  5938  17C9  1B01               	btfsc	1,6
  5939  17CA  3001               	movlw	1
  5940  17CB  00DD               	movwf	setRF_DimmerLights@on
  5941  17CC  0864               	movf	Sw_DimmerOffFunc@sw,w
  5942  17CD  3195  2553  3197   	fcall	_setRF_DimmerLights
  5943                           
  5944                           ;Switch_B1.c: 319: setTxData(1);
  5945  17D0  3001               	movlw	1
  5946  17D1  3187  271C         	fcall	_setTxData
  5947                           
  5948                           ;Switch_B1.c: 321: }
  5949                           ;Switch_B1.c: 322: }
  5950  17D3  0008               	return
  5951  17D4                     l9039:	
  5952                           
  5953                           ;Switch_B1.c: 323: else
  5954                           ;Switch_B1.c: 324: {
  5955                           ;Switch_B1.c: 325: setDimmerLights_Trigger(sw,1);
  5956  17D4  0020               	movlb	0	; select bank0
  5957  17D5  01A2               	clrf	setDimmerLights_Trigger@command
  5958  17D6  0AA2               	incf	setDimmerLights_Trigger@command,f
  5959  17D7  0864               	movf	Sw_DimmerOffFunc@sw,w
  5960  17D8  319A  2283  3197   	fcall	_setDimmerLights_Trigger
  5961                           
  5962                           ;Switch_B1.c: 326: setDimmerLights_Switch(sw,0);
  5963  17DB  0020               	movlb	0	; select bank0
  5964  17DC  01A2               	clrf	setDimmerLights_Switch@command
  5965  17DD  0864               	movf	Sw_DimmerOffFunc@sw,w
  5966  17DE  319A  2273  3197   	fcall	_setDimmerLights_Switch
  5967                           
  5968                           ;Switch_B1.c: 328: setDelayOff_GO(sw,0,0);
  5969  17E1  0020               	movlb	0	; select bank0
  5970  17E2  01A3               	clrf	setDelayOff_GO@command
  5971  17E3  01A4               	clrf	setDelayOff_GO@value
  5972  17E4  0864               	movf	Sw_DimmerOffFunc@sw,w
  5973  17E5  3192  22B3  3197   	fcall	_setDelayOff_GO
  5974                           
  5975                           ;Switch_B1.c: 329: setRF_DimmerLights(sw,Sw->Status);
  5976  17E8  0878               	movf	_Sw,w
  5977  17E9  0086               	movwf	6
  5978  17EA  3001               	movlw	1	; select bank2/3
  5979  17EB  0087               	movwf	7
  5980  17EC  3000               	movlw	0
  5981  17ED  1B01               	btfsc	1,6
  5982  17EE  3001               	movlw	1
  5983  17EF  0020               	movlb	0	; select bank0
  5984  17F0  00DD               	movwf	setRF_DimmerLights@on
  5985  17F1  0864               	movf	Sw_DimmerOffFunc@sw,w
  5986  17F2  3195  2553  3197   	fcall	_setRF_DimmerLights
  5987                           
  5988                           ;Switch_B1.c: 330: setTxData(1);
  5989  17F5  3001               	movlw	1
  5990  17F6  3187  271C         	fcall	_setTxData
  5991                           
  5992                           ;Switch_B1.c: 331: TMain->ClockStop=0;
  5993  17F8  0020               	movlb	0	; select bank0
  5994  17F9  086F               	movf	_TMain,w
  5995  17FA  3E10               	addlw	16
  5996  17FB  0086               	movwf	6
  5997  17FC  3001               	movlw	1	; select bank2/3
  5998  17FD  0087               	movwf	7
  5999  17FE  1101               	bcf	1,2
  6000  17FF  0008               	return
  6001  1800                     __end_of_Sw_DimmerOffFunc:	
  6002                           
  6003                           	psect	text15
  6004  1076                     __ptext15:	
  6005 ;; *************** function _Sw_DimmerAdjFunc *****************
  6006 ;; Defined at:
  6007 ;;		line 336 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Switch_B1.c"
  6008 ;; Parameters:    Size  Location     Type
  6009 ;;  sw              1    wreg     unsigned char 
  6010 ;; Auto vars:     Size  Location     Type
  6011 ;;  sw              1    5[BANK0 ] unsigned char 
  6012 ;;  Idle            1    4[BANK0 ] unsigned char 
  6013 ;; Return value:  Size  Location     Type
  6014 ;;		None               void
  6015 ;; Registers used:
  6016 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6017 ;; Tracked objects:
  6018 ;;		On entry : 0/0
  6019 ;;		On exit  : 0/0
  6020 ;;		Unchanged: 0/0
  6021 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6022 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6023 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6025 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6026 ;;Total ram usage:        2 bytes
  6027 ;; Hardware stack levels used:    1
  6028 ;; Hardware stack levels required when called:    6
  6029 ;; This function calls:
  6030 ;;		_setDimmerLights_AdjGo
  6031 ;;		_setDimmerLights_TriggerAdj
  6032 ;;		_setRFSW_Status
  6033 ;; This function is called by:
  6034 ;;		_setSw_Main
  6035 ;; This function uses a non-reentrant model
  6036 ;;
  6037                           
  6038                           
  6039                           ;psect for function _Sw_DimmerAdjFunc
  6040  1076                     _Sw_DimmerAdjFunc:	
  6041                           
  6042                           ;incstack = 0
  6043                           ; Regs used in _Sw_DimmerAdjFunc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6044                           ;Sw_DimmerAdjFunc@sw stored from wreg
  6045  1076  0020               	movlb	0	; select bank0
  6046  1077  00A5               	movwf	Sw_DimmerAdjFunc@sw
  6047                           
  6048                           ;Switch_B1.c: 338: char Idle=1;
  6049  1078  01A4               	clrf	Sw_DimmerAdjFunc@Idle
  6050  1079  0AA4               	incf	Sw_DimmerAdjFunc@Idle,f
  6051                           
  6052                           ;Switch_B1.c: 355: if(sw == 1)
  6053  107A  0825               	movf	Sw_DimmerAdjFunc@sw,w
  6054  107B  3A01               	xorlw	1
  6055  107C  1D03               	skipz
  6056  107D  2880               	goto	l9005
  6057                           
  6058                           ;Switch_B1.c: 356: {
  6059                           ;Switch_B1.c: 357: Idle=(DimmerLights22->AdjGo)?0:1;
  6060  107E  086C               	movf	_DimmerLights22,w
  6061  107F  2885               	goto	L3
  6062  1080                     l9005:	
  6063                           ;Switch_B1.c: 358: }
  6064                           
  6065                           
  6066                           ;Switch_B1.c: 359: else if(sw == 2)
  6067  1080  0825               	movf	Sw_DimmerAdjFunc@sw,w
  6068  1081  3A02               	xorlw	2
  6069  1082  1D03               	skipz
  6070  1083  2890               	goto	l9009
  6071                           
  6072                           ;Switch_B1.c: 360: {
  6073                           ;Switch_B1.c: 361: Idle=(DimmerLights11->AdjGo)?0:1;
  6074  1084  086B               	movf	_DimmerLights11,w
  6075  1085                     L3:	
  6076  1085  3E09               	addlw	9
  6077  1086  0086               	movwf	6
  6078  1087  3001               	movlw	1	; select bank2/3
  6079  1088  0087               	movwf	7
  6080  1089  1003               	clrc
  6081  108A  1D01               	btfss	1,2
  6082  108B  1403               	setc
  6083  108C  3000               	movlw	0
  6084  108D  1803               	btfsc	3,0
  6085  108E  3001               	movlw	1
  6086  108F  00A4               	movwf	Sw_DimmerAdjFunc@Idle
  6087  1090                     l9009:	
  6088                           
  6089                           ;Switch_B1.c: 362: }
  6090                           ;Switch_B1.c: 365: if(Idle)
  6091  1090  0824               	movf	Sw_DimmerAdjFunc@Idle,w
  6092  1091  1903               	btfsc	3,2
  6093  1092  0008               	return
  6094                           
  6095                           ;Switch_B1.c: 366: {
  6096                           ;Switch_B1.c: 367: if(Sw->Flag)
  6097  1093  0878               	movf	_Sw,w
  6098  1094  0086               	movwf	6
  6099  1095  3001               	movlw	1	; select bank2/3
  6100  1096  0087               	movwf	7
  6101  1097  1F81               	btfss	1,7
  6102  1098  0008               	return
  6103                           
  6104                           ;Switch_B1.c: 368: {
  6105                           ;Switch_B1.c: 369: Sw->Adj=1;
  6106  1099  0A78               	incf	_Sw,w
  6107  109A  0086               	movwf	6
  6108  109B  3001               	movlw	1	; select bank2/3
  6109  109C  0087               	movwf	7
  6110  109D  1401               	bsf	1,0
  6111                           
  6112                           ;Switch_B1.c: 370: Sw->Status=1;
  6113  109E  0878               	movf	_Sw,w
  6114  109F  0086               	movwf	6
  6115  10A0  3001               	movlw	1	; select bank2/3
  6116  10A1  0087               	movwf	7
  6117  10A2  1701               	bsf	1,6
  6118                           
  6119                           ;Switch_B1.c: 371: setRFSW_Status(sw,1);
  6120  10A3  01A2               	clrf	setRFSW_Status@command
  6121  10A4  0AA2               	incf	setRFSW_Status@command,f
  6122  10A5  0825               	movf	Sw_DimmerAdjFunc@sw,w
  6123  10A6  319A  2245  3190   	fcall	_setRFSW_Status
  6124                           
  6125                           ;Switch_B1.c: 373: setDimmerLights_TriggerAdj(sw,1);
  6126  10A9  0020               	movlb	0	; select bank0
  6127  10AA  01A2               	clrf	setDimmerLights_TriggerAdj@command
  6128  10AB  0AA2               	incf	setDimmerLights_TriggerAdj@command,f
  6129  10AC  0825               	movf	Sw_DimmerAdjFunc@sw,w
  6130  10AD  319A  22B3  3190   	fcall	_setDimmerLights_TriggerAdj
  6131                           
  6132                           ;Switch_B1.c: 374: setDimmerLights_AdjGo(sw,1);
  6133  10B0  0020               	movlb	0	; select bank0
  6134  10B1  01A2               	clrf	setDimmerLights_AdjGo@command
  6135  10B2  0AA2               	incf	setDimmerLights_AdjGo@command,f
  6136  10B3  0825               	movf	Sw_DimmerAdjFunc@sw,w
  6137  10B4  319A  22A3         	fcall	_setDimmerLights_AdjGo
  6138  10B6  0020               	movlb	0	; select bank0
  6139  10B7  0008               	return
  6140  10B8                     __end_of_Sw_DimmerAdjFunc:	
  6141                           
  6142                           	psect	text16
  6143  1AB3                     __ptext16:	
  6144 ;; *************** function _setDimmerLights_TriggerAdj *****************
  6145 ;; Defined at:
  6146 ;;		line 450 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
  6147 ;; Parameters:    Size  Location     Type
  6148 ;;  lights          1    wreg     unsigned char 
  6149 ;;  command         1    2[BANK0 ] unsigned char 
  6150 ;; Auto vars:     Size  Location     Type
  6151 ;;  lights          1    3[BANK0 ] unsigned char 
  6152 ;; Return value:  Size  Location     Type
  6153 ;;		None               void
  6154 ;; Registers used:
  6155 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6156 ;; Tracked objects:
  6157 ;;		On entry : 0/0
  6158 ;;		On exit  : 0/0
  6159 ;;		Unchanged: 0/0
  6160 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6161 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6162 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6164 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6165 ;;Total ram usage:        2 bytes
  6166 ;; Hardware stack levels used:    1
  6167 ;; Hardware stack levels required when called:    5
  6168 ;; This function calls:
  6169 ;;		_DimmerLightsPointSelect
  6170 ;; This function is called by:
  6171 ;;		_Sw_DimmerOffFunc
  6172 ;;		_Sw_DimmerAdjFunc
  6173 ;; This function uses a non-reentrant model
  6174 ;;
  6175                           
  6176                           
  6177                           ;psect for function _setDimmerLights_TriggerAdj
  6178  1AB3                     _setDimmerLights_TriggerAdj:	
  6179                           
  6180                           ;incstack = 0
  6181                           ; Regs used in _setDimmerLights_TriggerAdj: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  6182                           ;setDimmerLights_TriggerAdj@lights stored from wreg
  6183  1AB3  0020               	movlb	0	; select bank0
  6184  1AB4  00A3               	movwf	setDimmerLights_TriggerAdj@lights
  6185                           
  6186                           ;Dimmer_B1.c: 452: DimmerLightsPointSelect(lights);
  6187  1AB5  0823               	movf	setDimmerLights_TriggerAdj@lights,w
  6188  1AB6  319A  22D4         	fcall	_DimmerLightsPointSelect
  6189                           
  6190                           ;Dimmer_B1.c: 453: DimmerLights->TriggerAdj=command;
  6191  1AB8  0020               	movlb	0	; select bank0
  6192  1AB9  086A               	movf	_DimmerLights,w
  6193  1ABA  3E09               	addlw	9
  6194  1ABB  0086               	movwf	6
  6195  1ABC  3001               	movlw	1	; select bank2/3
  6196  1ABD  0087               	movwf	7
  6197  1ABE  0822               	movf	setDimmerLights_TriggerAdj@command,w
  6198  1ABF  1181               	bcf	1,3
  6199  1AC0  1D03               	skipz
  6200  1AC1  1581               	bsf	1,3
  6201  1AC2  0008               	return
  6202  1AC3                     __end_of_setDimmerLights_TriggerAdj:	
  6203                           
  6204                           	psect	text17
  6205  1AA3                     __ptext17:	
  6206 ;; *************** function _setDimmerLights_AdjGo *****************
  6207 ;; Defined at:
  6208 ;;		line 440 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
  6209 ;; Parameters:    Size  Location     Type
  6210 ;;  lights          1    wreg     unsigned char 
  6211 ;;  command         1    2[BANK0 ] unsigned char 
  6212 ;; Auto vars:     Size  Location     Type
  6213 ;;  lights          1    3[BANK0 ] unsigned char 
  6214 ;; Return value:  Size  Location     Type
  6215 ;;		None               void
  6216 ;; Registers used:
  6217 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6218 ;; Tracked objects:
  6219 ;;		On entry : 0/0
  6220 ;;		On exit  : 0/0
  6221 ;;		Unchanged: 0/0
  6222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6223 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6224 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6226 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6227 ;;Total ram usage:        2 bytes
  6228 ;; Hardware stack levels used:    1
  6229 ;; Hardware stack levels required when called:    5
  6230 ;; This function calls:
  6231 ;;		_DimmerLightsPointSelect
  6232 ;; This function is called by:
  6233 ;;		_Sw_DimmerOffFunc
  6234 ;;		_Sw_DimmerAdjFunc
  6235 ;; This function uses a non-reentrant model
  6236 ;;
  6237                           
  6238                           
  6239                           ;psect for function _setDimmerLights_AdjGo
  6240  1AA3                     _setDimmerLights_AdjGo:	
  6241                           
  6242                           ;incstack = 0
  6243                           ; Regs used in _setDimmerLights_AdjGo: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  6244                           ;setDimmerLights_AdjGo@lights stored from wreg
  6245  1AA3  0020               	movlb	0	; select bank0
  6246  1AA4  00A3               	movwf	setDimmerLights_AdjGo@lights
  6247                           
  6248                           ;Dimmer_B1.c: 442: DimmerLightsPointSelect(lights);
  6249  1AA5  0823               	movf	setDimmerLights_AdjGo@lights,w
  6250  1AA6  319A  22D4         	fcall	_DimmerLightsPointSelect
  6251                           
  6252                           ;Dimmer_B1.c: 443: DimmerLights->AdjGo=command;
  6253  1AA8  0020               	movlb	0	; select bank0
  6254  1AA9  086A               	movf	_DimmerLights,w
  6255  1AAA  3E09               	addlw	9
  6256  1AAB  0086               	movwf	6
  6257  1AAC  3001               	movlw	1	; select bank2/3
  6258  1AAD  0087               	movwf	7
  6259  1AAE  0822               	movf	setDimmerLights_AdjGo@command,w
  6260  1AAF  1101               	bcf	1,2
  6261  1AB0  1D03               	skipz
  6262  1AB1  1501               	bsf	1,2
  6263  1AB2  0008               	return
  6264  1AB3                     __end_of_setDimmerLights_AdjGo:	
  6265                           
  6266                           	psect	text18
  6267  1A1C                     __ptext18:	
  6268 ;; *************** function _Switch_Initialization *****************
  6269 ;; Defined at:
  6270 ;;		line 38 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Switch_B1.c"
  6271 ;; Parameters:    Size  Location     Type
  6272 ;;		None
  6273 ;; Auto vars:     Size  Location     Type
  6274 ;;		None
  6275 ;; Return value:  Size  Location     Type
  6276 ;;		None               void
  6277 ;; Registers used:
  6278 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6279 ;; Tracked objects:
  6280 ;;		On entry : 0/0
  6281 ;;		On exit  : 0/0
  6282 ;;		Unchanged: 0/0
  6283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6284 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6285 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6287 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6288 ;;Total ram usage:        0 bytes
  6289 ;; Hardware stack levels used:    1
  6290 ;; Hardware stack levels required when called:    7
  6291 ;; This function calls:
  6292 ;;		_TouchPower
  6293 ;;		_setSw_Initialization
  6294 ;; This function is called by:
  6295 ;;		_main
  6296 ;; This function uses a non-reentrant model
  6297 ;;
  6298                           
  6299                           
  6300                           ;psect for function _Switch_Initialization
  6301  1A1C                     _Switch_Initialization:	
  6302                           
  6303                           ;Switch_B1.c: 40: TouchPower();
  6304                           
  6305                           ;incstack = 0
  6306                           ; Regs used in _Switch_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  6307  1A1C  3199  2101  319A   	fcall	_TouchPower
  6308                           
  6309                           ;Switch_B1.c: 42: WPUB1=0;
  6310  1A1F  0024               	movlb	4	; select bank4
  6311  1A20  108D               	bcf	13,1	;volatile
  6312                           
  6313                           ;Switch_B1.c: 51: setSw_Initialization(1);
  6314  1A21  3001               	movlw	1
  6315  1A22  3199  2144  319A   	fcall	_setSw_Initialization
  6316                           
  6317                           ;Switch_B1.c: 54: setSw_Initialization(2);
  6318  1A25  3002               	movlw	2
  6319  1A26  3199  2144         	fcall	_setSw_Initialization
  6320  1A28  0008               	return
  6321  1A29                     __end_of_Switch_Initialization:	
  6322                           
  6323                           	psect	text19
  6324  1944                     __ptext19:	
  6325 ;; *************** function _setSw_Initialization *****************
  6326 ;; Defined at:
  6327 ;;		line 78 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Switch_B1.c"
  6328 ;; Parameters:    Size  Location     Type
  6329 ;;  sw              1    wreg     unsigned char 
  6330 ;; Auto vars:     Size  Location     Type
  6331 ;;  sw              1    4[BANK0 ] unsigned char 
  6332 ;; Return value:  Size  Location     Type
  6333 ;;		None               void
  6334 ;; Registers used:
  6335 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6336 ;; Tracked objects:
  6337 ;;		On entry : 0/0
  6338 ;;		On exit  : 0/0
  6339 ;;		Unchanged: 0/0
  6340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6341 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6342 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6344 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6345 ;;Total ram usage:        1 bytes
  6346 ;; Hardware stack levels used:    1
  6347 ;; Hardware stack levels required when called:    6
  6348 ;; This function calls:
  6349 ;;		_setLED
  6350 ;; This function is called by:
  6351 ;;		_Switch_Initialization
  6352 ;; This function uses a non-reentrant model
  6353 ;;
  6354                           
  6355                           
  6356                           ;psect for function _setSw_Initialization
  6357  1944                     _setSw_Initialization:	
  6358                           
  6359                           ;incstack = 0
  6360                           ; Regs used in _setSw_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6361                           ;setSw_Initialization@sw stored from wreg
  6362  1944  0020               	movlb	0	; select bank0
  6363  1945  00A4               	movwf	setSw_Initialization@sw
  6364                           
  6365                           ;Switch_B1.c: 80: setLED(sw,1);
  6366  1946  01A2               	clrf	setLED@command
  6367  1947  0AA2               	incf	setLED@command,f
  6368  1948  0824               	movf	setSw_Initialization@sw,w
  6369  1949  3193  2366         	fcall	_setLED
  6370  194B  0008               	return
  6371  194C                     __end_of_setSw_Initialization:	
  6372                           
  6373                           	psect	text20
  6374  1901                     __ptext20:	
  6375 ;; *************** function _TouchPower *****************
  6376 ;; Defined at:
  6377 ;;		line 9 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Switch_B1.c"
  6378 ;; Parameters:    Size  Location     Type
  6379 ;;		None
  6380 ;; Auto vars:     Size  Location     Type
  6381 ;;		None
  6382 ;; Return value:  Size  Location     Type
  6383 ;;		None               void
  6384 ;; Registers used:
  6385 ;;		None
  6386 ;; Tracked objects:
  6387 ;;		On entry : 0/0
  6388 ;;		On exit  : 0/0
  6389 ;;		Unchanged: 0/0
  6390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6391 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6392 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6394 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6395 ;;Total ram usage:        0 bytes
  6396 ;; Hardware stack levels used:    1
  6397 ;; Hardware stack levels required when called:    4
  6398 ;; This function calls:
  6399 ;;		Nothing
  6400 ;; This function is called by:
  6401 ;;		_Switch_Initialization
  6402 ;; This function uses a non-reentrant model
  6403 ;;
  6404                           
  6405                           
  6406                           ;psect for function _TouchPower
  6407  1901                     _TouchPower:	
  6408  1901                     l2761:	
  6409                           ;Switch_B1.c: 11: while(!RC5)
  6410                           
  6411                           ;incstack = 0
  6412                           ; Regs used in _TouchPower: []
  6413                           
  6414  1901  0020               	movlb	0	; select bank0
  6415  1902  1A8E               	btfsc	14,5	;volatile
  6416  1903  0008               	return
  6417                           
  6418                           ;Switch_B1.c: 12: RC5=1;
  6419  1904  168E               	bsf	14,5	;volatile
  6420  1905  2901               	goto	l2761
  6421  1906                     __end_of_TouchPower:	
  6422                           
  6423                           	psect	text21
  6424  18FD                     __ptext21:	
  6425 ;; *************** function _RF_Main *****************
  6426 ;; Defined at:
  6427 ;;		line 24 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
  6428 ;; Parameters:    Size  Location     Type
  6429 ;;		None
  6430 ;; Auto vars:     Size  Location     Type
  6431 ;;		None
  6432 ;; Return value:  Size  Location     Type
  6433 ;;		None               void
  6434 ;; Registers used:
  6435 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6436 ;; Tracked objects:
  6437 ;;		On entry : 0/0
  6438 ;;		On exit  : 0/0
  6439 ;;		Unchanged: 0/0
  6440 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6441 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6444 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6445 ;;Total ram usage:        0 bytes
  6446 ;; Hardware stack levels used:    1
  6447 ;; Hardware stack levels required when called:   13
  6448 ;; This function calls:
  6449 ;;		_setRF_Main
  6450 ;; This function is called by:
  6451 ;;		_main
  6452 ;; This function uses a non-reentrant model
  6453 ;;
  6454                           
  6455                           
  6456                           ;psect for function _RF_Main
  6457  18FD                     _RF_Main:	
  6458                           
  6459                           ;RF_Control_B1.c: 27: setRF_Main(1);
  6460                           
  6461                           ;incstack = 0
  6462                           ; Regs used in _RF_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6463  18FD  3001               	movlw	1
  6464  18FE  318A  226E         	fcall	_setRF_Main
  6465  1900  0008               	return
  6466  1901                     __end_of_RF_Main:	
  6467                           
  6468                           	psect	text22
  6469  0A6E                     __ptext22:	
  6470 ;; *************** function _setRF_Main *****************
  6471 ;; Defined at:
  6472 ;;		line 58 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
  6473 ;; Parameters:    Size  Location     Type
  6474 ;;  rf              1    wreg     unsigned char 
  6475 ;; Auto vars:     Size  Location     Type
  6476 ;;  rf              1    2[BANK1 ] unsigned char 
  6477 ;; Return value:  Size  Location     Type
  6478 ;;		None               void
  6479 ;; Registers used:
  6480 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6481 ;; Tracked objects:
  6482 ;;		On entry : 0/0
  6483 ;;		On exit  : 0/0
  6484 ;;		Unchanged: 0/0
  6485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6486 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6487 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6488 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6489 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  6490 ;;Total ram usage:        3 bytes
  6491 ;; Hardware stack levels used:    1
  6492 ;; Hardware stack levels required when called:   12
  6493 ;; This function calls:
  6494 ;;		_CC2500_RxData
  6495 ;;		_CC2500_TxData
  6496 ;;		_CC2500_WriteCommand
  6497 ;;		_RF_RxDisable
  6498 ;;		_RfPointSelect
  6499 ;;		_getRxData
  6500 ;;		_setINT_GO
  6501 ;; This function is called by:
  6502 ;;		_RF_Main
  6503 ;; This function uses a non-reentrant model
  6504 ;;
  6505                           
  6506                           
  6507                           ;psect for function _setRF_Main
  6508  0A6E                     _setRF_Main:	
  6509                           
  6510                           ;incstack = 0
  6511                           ; Regs used in _setRF_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6512                           ;setRF_Main@rf stored from wreg
  6513  0A6E  0021               	movlb	1	; select bank1
  6514  0A6F  00EC               	movwf	setRF_Main@rf^(0+128)
  6515                           
  6516                           ;RF_Control_B1.c: 60: RfPointSelect(rf);
  6517  0A70  086C               	movf	setRF_Main@rf^(0+128),w
  6518  0A71  3199  218E  318A   	fcall	_RfPointSelect
  6519                           
  6520                           ;RF_Control_B1.c: 61: if(RF->Enable)
  6521  0A74  0877               	movf	_RF,w
  6522  0A75  0086               	movwf	6
  6523  0A76  0187               	clrf	7
  6524  0A77  1C01               	btfss	1,0
  6525  0A78  0008               	return
  6526                           
  6527                           ;RF_Control_B1.c: 62: {
  6528                           ;RF_Control_B1.c: 69: RF->Key=((RA6 || RA4 || RA0 || RB1 ) && !RF->Learn)?1:0;
  6529  0A79  0021               	movlb	1	; select bank1
  6530  0A7A  01ED               	clrf	_setRF_Main$3858^(0+128)
  6531  0A7B  0020               	movlb	0	; select bank0
  6532  0A7C  1F0C               	btfss	12,6	;volatile
  6533  0A7D  1A0C               	btfsc	12,4	;volatile
  6534  0A7E  2A83               	goto	l9441
  6535  0A7F  180C               	btfsc	12,0	;volatile
  6536  0A80  2A83               	goto	l9441
  6537  0A81  1C8D               	btfss	13,1	;volatile
  6538  0A82  2A8B               	goto	l9445
  6539  0A83                     l9441:	
  6540  0A83  0877               	movf	_RF,w
  6541  0A84  0086               	movwf	6
  6542  0A85  0187               	clrf	7
  6543  0A86  1B01               	btfsc	1,6
  6544  0A87  2A8B               	goto	l9445
  6545  0A88  0021               	movlb	1	; select bank1
  6546  0A89  01ED               	clrf	_setRF_Main$3858^(0+128)
  6547  0A8A  0AED               	incf	_setRF_Main$3858^(0+128),f
  6548  0A8B                     l9445:	
  6549  0A8B  0877               	movf	_RF,w
  6550  0A8C  0086               	movwf	6
  6551  0A8D  0187               	clrf	7
  6552  0A8E  0021               	movlb	1	; select bank1
  6553  0A8F  086D               	movf	_setRF_Main$3858^(0+128),w
  6554  0A90  1381               	bcf	1,7
  6555  0A91  1D03               	skipz
  6556  0A92  1781               	bsf	1,7
  6557                           
  6558                           ;RF_Control_B1.c: 77: if(!RF->Key)
  6559  0A93  0877               	movf	_RF,w
  6560  0A94  0086               	movwf	6
  6561  0A95  0187               	clrf	7
  6562  0A96  1B81               	btfsc	1,7
  6563  0A97  2AC4               	goto	l9467
  6564                           
  6565                           ;RF_Control_B1.c: 78: {
  6566                           ;RF_Control_B1.c: 79: if(RF->ReceiveGO)
  6567  0A98  0877               	movf	_RF,w
  6568  0A99  0086               	movwf	6
  6569  0A9A  0187               	clrf	7
  6570  0A9B  1C81               	btfss	1,1
  6571  0A9C  2AA9               	goto	l9455
  6572                           
  6573                           ;RF_Control_B1.c: 80: {
  6574                           ;RF_Control_B1.c: 81: RF->ReceiveGO=0;
  6575  0A9D  0877               	movf	_RF,w
  6576  0A9E  0086               	movwf	6
  6577  0A9F  0187               	clrf	7
  6578  0AA0  1081               	bcf	1,1
  6579                           
  6580                           ;RF_Control_B1.c: 82: CC2500_RxData();
  6581  0AA1  3194  2425  318A   	fcall	_CC2500_RxData
  6582                           
  6583                           ;RF_Control_B1.c: 89: getRxData(1);
  6584  0AA4  3001               	movlw	1
  6585  0AA5  3192  2261  318A   	fcall	_getRxData
  6586                           
  6587                           ;RF_Control_B1.c: 92: }
  6588  0AA8  2AC8               	goto	l9469
  6589  0AA9                     l9455:	
  6590                           
  6591                           ;RF_Control_B1.c: 93: else
  6592                           ;RF_Control_B1.c: 94: {
  6593                           ;RF_Control_B1.c: 95: if(!RF->TransceiveGO)
  6594  0AA9  0877               	movf	_RF,w
  6595  0AAA  0086               	movwf	6
  6596  0AAB  0187               	clrf	7
  6597  0AAC  1901               	btfsc	1,2
  6598  0AAD  2AC8               	goto	l9469
  6599                           
  6600                           ;RF_Control_B1.c: 96: {
  6601                           ;RF_Control_B1.c: 98: if(!RF->RxStatus)
  6602  0AAE  0877               	movf	_RF,w
  6603  0AAF  0086               	movwf	6
  6604  0AB0  0187               	clrf	7
  6605  0AB1  1981               	btfsc	1,3
  6606  0AB2  2AC8               	goto	l9469
  6607                           
  6608                           ;RF_Control_B1.c: 99: {
  6609                           ;RF_Control_B1.c: 100: RF->RxStatus=1;
  6610  0AB3  0877               	movf	_RF,w
  6611  0AB4  0086               	movwf	6
  6612  0AB5  0187               	clrf	7
  6613  0AB6  1581               	bsf	1,3
  6614                           
  6615                           ;RF_Control_B1.c: 101: CC2500_WriteCommand(0x36);
  6616  0AB7  3036               	movlw	54
  6617  0AB8  319A  2263  318A   	fcall	_CC2500_WriteCommand
  6618                           
  6619                           ;RF_Control_B1.c: 102: CC2500_WriteCommand(0x34);
  6620  0ABB  3034               	movlw	52
  6621  0ABC  319A  2263  318A   	fcall	_CC2500_WriteCommand
  6622                           
  6623                           ;RF_Control_B1.c: 103: setINT_GO(1);
  6624  0ABF  3001               	movlw	1
  6625  0AC0  3199  2165  318A   	fcall	_setINT_GO
  6626                           
  6627                           ;RF_Control_B1.c: 104: }
  6628                           ;RF_Control_B1.c: 106: }
  6629                           ;RF_Control_B1.c: 107: }
  6630                           ;RF_Control_B1.c: 108: }
  6631  0AC3  2AC8               	goto	l9469
  6632  0AC4                     l9467:	
  6633                           
  6634                           ;RF_Control_B1.c: 109: else
  6635                           ;RF_Control_B1.c: 110: {
  6636                           ;RF_Control_B1.c: 111: RF_RxDisable(1);
  6637  0AC4  3001               	movlw	1
  6638  0AC5  319D  25A9  318A   	fcall	_RF_RxDisable
  6639  0AC8                     l9469:	
  6640                           
  6641                           ;RF_Control_B1.c: 112: }
  6642                           ;RF_Control_B1.c: 113: if(RF->TransceiveGO)
  6643  0AC8  0877               	movf	_RF,w
  6644  0AC9  0086               	movwf	6
  6645  0ACA  0187               	clrf	7
  6646  0ACB  1D01               	btfss	1,2
  6647  0ACC  0008               	return
  6648                           
  6649                           ;RF_Control_B1.c: 114: {
  6650                           ;RF_Control_B1.c: 115: RF_RxDisable(1);
  6651  0ACD  3001               	movlw	1
  6652  0ACE  319D  25A9  318A   	fcall	_RF_RxDisable
  6653                           
  6654                           ;RF_Control_B1.c: 116: if(!RF->Debounce)
  6655  0AD1  0877               	movf	_RF,w
  6656  0AD2  0086               	movwf	6
  6657  0AD3  0187               	clrf	7
  6658  0AD4  1A81               	btfsc	1,5
  6659  0AD5  2AEE               	goto	l9483
  6660                           
  6661                           ;RF_Control_B1.c: 117: {
  6662                           ;RF_Control_B1.c: 118: RF->DebounceTime++;
  6663  0AD6  3001               	movlw	1
  6664  0AD7  0021               	movlb	1	; select bank1
  6665  0AD8  00EB               	movwf	??_setRF_Main^(0+128)
  6666  0AD9  0A77               	incf	_RF,w
  6667  0ADA  0086               	movwf	6
  6668  0ADB  0187               	clrf	7
  6669  0ADC  086B               	movf	??_setRF_Main^(0+128),w
  6670  0ADD  0781               	addwf	1,f
  6671                           
  6672                           ;RF_Control_B1.c: 119: if(RF->DebounceTime == 25)
  6673  0ADE  0A77               	incf	_RF,w
  6674  0ADF  0086               	movwf	6
  6675  0AE0  0187               	clrf	7
  6676  0AE1  0801               	movf	1,w
  6677  0AE2  3A19               	xorlw	25
  6678  0AE3  1D03               	skipz
  6679  0AE4  0008               	return
  6680                           
  6681                           ;RF_Control_B1.c: 120: {
  6682                           ;RF_Control_B1.c: 121: RF->DebounceTime=0;
  6683  0AE5  0A77               	incf	_RF,w
  6684  0AE6  0086               	movwf	6
  6685  0AE7  0187               	clrf	7
  6686  0AE8  0181               	clrf	1
  6687                           
  6688                           ;RF_Control_B1.c: 122: RF->Debounce=1;
  6689  0AE9  0877               	movf	_RF,w
  6690  0AEA  0086               	movwf	6
  6691  0AEB  0187               	clrf	7
  6692  0AEC  1681               	bsf	1,5
  6693                           
  6694                           ;RF_Control_B1.c: 123: }
  6695                           ;RF_Control_B1.c: 124: }
  6696  0AED  0008               	return
  6697  0AEE                     l9483:	
  6698                           
  6699                           ;RF_Control_B1.c: 125: else
  6700                           ;RF_Control_B1.c: 126: {
  6701                           ;RF_Control_B1.c: 127: RF->Debounce=0;
  6702  0AEE  0877               	movf	_RF,w
  6703  0AEF  0086               	movwf	6
  6704  0AF0  0187               	clrf	7
  6705  0AF1  1281               	bcf	1,5
  6706                           
  6707                           ;RF_Control_B1.c: 128: RF->TransceiveGO=0;
  6708  0AF2  0877               	movf	_RF,w
  6709  0AF3  0086               	movwf	6
  6710  0AF4  0187               	clrf	7
  6711  0AF5  1101               	bcf	1,2
  6712                           
  6713                           ;RF_Control_B1.c: 129: CC2500_TxData();
  6714  0AF6  3190  20FA         	fcall	_CC2500_TxData
  6715  0AF8  0008               	return
  6716  0AF9                     __end_of_setRF_Main:	
  6717                           
  6718                           	psect	text23
  6719  1261                     __ptext23:	
  6720 ;; *************** function _getRxData *****************
  6721 ;; Defined at:
  6722 ;;		line 215 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
  6723 ;; Parameters:    Size  Location     Type
  6724 ;;  rf              1    wreg     unsigned char 
  6725 ;; Auto vars:     Size  Location     Type
  6726 ;;  rf              1    0[BANK1 ] unsigned char 
  6727 ;;  i               1    0        unsigned char 
  6728 ;; Return value:  Size  Location     Type
  6729 ;;		None               void
  6730 ;; Registers used:
  6731 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6732 ;; Tracked objects:
  6733 ;;		On entry : 0/0
  6734 ;;		On exit  : 0/0
  6735 ;;		Unchanged: 0/0
  6736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6738 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6740 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6741 ;;Total ram usage:        1 bytes
  6742 ;; Hardware stack levels used:    1
  6743 ;; Hardware stack levels required when called:   11
  6744 ;; This function calls:
  6745 ;;		_RfPointSelect
  6746 ;;		_setControl_Lights_Table
  6747 ;;		_setLog_Code
  6748 ;; This function is called by:
  6749 ;;		_setRF_Main
  6750 ;; This function uses a non-reentrant model
  6751 ;;
  6752                           
  6753                           
  6754                           ;psect for function _getRxData
  6755  1261                     _getRxData:	
  6756                           
  6757                           ;incstack = 0
  6758                           ; Regs used in _getRxData: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6759                           ;getRxData@rf stored from wreg
  6760  1261  0021               	movlb	1	; select bank1
  6761  1262  00EA               	movwf	getRxData@rf^(0+128)
  6762                           
  6763                           ;RF_Control_B1.c: 217: unsigned char i;
  6764                           ;RF_Control_B1.c: 218: RfPointSelect(rf);
  6765  1263  086A               	movf	getRxData@rf^(0+128),w
  6766  1264  3199  218E  3192   	fcall	_RfPointSelect
  6767                           
  6768                           ;RF_Control_B1.c: 219: if(RF->Learn)
  6769  1267  0877               	movf	_RF,w
  6770  1268  0086               	movwf	6
  6771  1269  0187               	clrf	7
  6772  126A  1F01               	btfss	1,6
  6773  126B  2A78               	goto	l8917
  6774                           
  6775                           ;RF_Control_B1.c: 220: {
  6776                           ;RF_Control_B1.c: 221: if(RF_Data[0] == 0x0 && RF_Data[1] == 0x64)
  6777  126C  0021               	movlb	1	; select bank1
  6778  126D  08A0               	movf	_RF_Data^(0+128),f
  6779  126E  1D03               	skipz
  6780  126F  0008               	return
  6781  1270  0821               	movf	(_RF_Data^(0+128)+1),w
  6782  1271  3A64               	xorlw	100
  6783  1272  1D03               	skipz
  6784  1273  0008               	return
  6785                           
  6786                           ;RF_Control_B1.c: 222: {
  6787                           ;RF_Control_B1.c: 223: setLog_Code(1);
  6788  1274  3001               	movlw	1
  6789  1275  3191  21C9         	fcall	_setLog_Code
  6790                           
  6791                           ;RF_Control_B1.c: 224: }
  6792                           ;RF_Control_B1.c: 225: }
  6793  1277  0008               	return
  6794  1278                     l8917:	
  6795                           
  6796                           ;RF_Control_B1.c: 226: else
  6797                           ;RF_Control_B1.c: 227: {
  6798                           ;RF_Control_B1.c: 228: if(RF_Data[0] == 0x00 && RF_Data[1] == 0x02)
  6799  1278  0021               	movlb	1	; select bank1
  6800  1279  08A0               	movf	_RF_Data^(0+128),f
  6801  127A  1D03               	skipz
  6802  127B  0008               	return
  6803  127C  0821               	movf	(_RF_Data^(0+128)+1),w
  6804  127D  3A02               	xorlw	2
  6805  127E  1D03               	skipz
  6806  127F  0008               	return
  6807                           
  6808                           ;RF_Control_B1.c: 229: {
  6809                           ;RF_Control_B1.c: 230: if(RF_Data[12] == 0xff && RF_Data[13] == 0xff && RF_Data[14] == 0
      +                          xff)
  6810  1280  082C               	movf	(_RF_Data^(0+128)+12),w
  6811  1281  3AFF               	xorlw	255
  6812  1282  1D03               	skipz
  6813  1283  2A8E               	goto	l8929
  6814  1284  082D               	movf	(_RF_Data^(0+128)+13),w
  6815  1285  3AFF               	xorlw	255
  6816  1286  1D03               	skipz
  6817  1287  2A8E               	goto	l8929
  6818  1288  082E               	movf	(_RF_Data^(0+128)+14),w
  6819  1289  3AFF               	xorlw	255
  6820  128A  1D03               	skipz
  6821  128B  2A8E               	goto	l8929
  6822                           
  6823                           ;RF_Control_B1.c: 231: {
  6824                           ;RF_Control_B1.c: 232: __nop();
  6825  128C  0000               	nop
  6826                           
  6827                           ;RF_Control_B1.c: 233: }
  6828  128D  0008               	return
  6829  128E                     l8929:	
  6830                           
  6831                           ;RF_Control_B1.c: 234: else
  6832                           ;RF_Control_B1.c: 235: {
  6833                           ;RF_Control_B1.c: 236: if(RF_Data[12] == Product->Data[12] && RF_Data[13] == Product->Da
      +                          ta[13] && RF_Data[14] == Product->Data[14])
  6834  128E  0020               	movlb	0	; select bank0
  6835  128F  086E               	movf	_Product,w
  6836  1290  3E0C               	addlw	12
  6837  1291  0086               	movwf	6
  6838  1292  3001               	movlw	1	; select bank2/3
  6839  1293  0087               	movwf	7
  6840  1294  0021               	movlb	1	; select bank1
  6841  1295  082C               	movf	(_RF_Data^(0+128)+12),w
  6842  1296  0601               	xorwf	1,w
  6843  1297  1D03               	skipz
  6844  1298  0008               	return
  6845  1299  0020               	movlb	0	; select bank0
  6846  129A  086E               	movf	_Product,w
  6847  129B  3E0D               	addlw	13
  6848  129C  0086               	movwf	6
  6849  129D  3001               	movlw	1	; select bank2/3
  6850  129E  0087               	movwf	7
  6851  129F  0021               	movlb	1	; select bank1
  6852  12A0  082D               	movf	(_RF_Data^(0+128)+13),w
  6853  12A1  0601               	xorwf	1,w
  6854  12A2  1D03               	skipz
  6855  12A3  0008               	return
  6856  12A4  0020               	movlb	0	; select bank0
  6857  12A5  086E               	movf	_Product,w
  6858  12A6  3E0E               	addlw	14
  6859  12A7  0086               	movwf	6
  6860  12A8  3001               	movlw	1	; select bank2/3
  6861  12A9  0087               	movwf	7
  6862  12AA  0021               	movlb	1	; select bank1
  6863  12AB  082E               	movf	(_RF_Data^(0+128)+14),w
  6864  12AC  0601               	xorwf	1,w
  6865  12AD  1D03               	skipz
  6866  12AE  0008               	return
  6867                           
  6868                           ;RF_Control_B1.c: 237: {
  6869                           ;RF_Control_B1.c: 238: setControl_Lights_Table(1);
  6870  12AF  3001               	movlw	1
  6871  12B0  318B  2389         	fcall	_setControl_Lights_Table
  6872                           
  6873                           ;RF_Control_B1.c: 247: {
  6874                           ;RF_Control_B1.c: 248: ;
  6875                           
  6876                           ;RF_Control_B1.c: 243: {
  6877                           ;RF_Control_B1.c: 244: ;
  6878                           ;RF_Control_B1.c: 245: }
  6879                           
  6880                           ;RF_Control_B1.c: 239: }
  6881                           ;RF_Control_B1.c: 240: }
  6882                           ;RF_Control_B1.c: 241: }
  6883  12B2  0008               	return
  6884  12B3                     __end_of_getRxData:	
  6885                           
  6886                           	psect	text24
  6887  11C9                     __ptext24:	
  6888 ;; *************** function _setLog_Code *****************
  6889 ;; Defined at:
  6890 ;;		line 257 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
  6891 ;; Parameters:    Size  Location     Type
  6892 ;;  rf              1    wreg     unsigned char 
  6893 ;; Auto vars:     Size  Location     Type
  6894 ;;  rf              1   11[BANK0 ] unsigned char 
  6895 ;; Return value:  Size  Location     Type
  6896 ;;		None               void
  6897 ;; Registers used:
  6898 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6899 ;; Tracked objects:
  6900 ;;		On entry : 0/0
  6901 ;;		On exit  : 0/0
  6902 ;;		Unchanged: 0/0
  6903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6905 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6906 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6907 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6908 ;;Total ram usage:        2 bytes
  6909 ;; Hardware stack levels used:    1
  6910 ;; Hardware stack levels required when called:    6
  6911 ;; This function calls:
  6912 ;;		_RfPointSelect
  6913 ;;		_setBuz
  6914 ;; This function is called by:
  6915 ;;		_getRxData
  6916 ;; This function uses a non-reentrant model
  6917 ;;
  6918                           
  6919                           
  6920                           ;psect for function _setLog_Code
  6921  11C9                     _setLog_Code:	
  6922                           
  6923                           ;incstack = 0
  6924                           ; Regs used in _setLog_Code: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6925                           ;setLog_Code@rf stored from wreg
  6926  11C9  0020               	movlb	0	; select bank0
  6927  11CA  00AB               	movwf	setLog_Code@rf
  6928                           
  6929                           ;RF_Control_B1.c: 259: RfPointSelect(rf);
  6930  11CB  082B               	movf	setLog_Code@rf,w
  6931  11CC  3199  218E  3191   	fcall	_RfPointSelect
  6932                           
  6933                           ;RF_Control_B1.c: 260: Product->Data[12]=RF_Data[12];
  6934  11CF  0021               	movlb	1	; select bank1
  6935  11D0  082C               	movf	(_RF_Data^(0+128)+12),w
  6936  11D1  0020               	movlb	0	; select bank0
  6937  11D2  00AA               	movwf	??_setLog_Code
  6938  11D3  086E               	movf	_Product,w
  6939  11D4  3E0C               	addlw	12
  6940  11D5  0086               	movwf	6
  6941  11D6  3001               	movlw	1	; select bank2/3
  6942  11D7  0087               	movwf	7
  6943  11D8  082A               	movf	??_setLog_Code,w
  6944  11D9  0081               	movwf	1
  6945                           
  6946                           ;RF_Control_B1.c: 261: Product->Data[13]=RF_Data[13];
  6947  11DA  0021               	movlb	1	; select bank1
  6948  11DB  082D               	movf	(_RF_Data^(0+128)+13),w
  6949  11DC  0020               	movlb	0	; select bank0
  6950  11DD  00AA               	movwf	??_setLog_Code
  6951  11DE  086E               	movf	_Product,w
  6952  11DF  3E0D               	addlw	13
  6953  11E0  0086               	movwf	6
  6954  11E1  3001               	movlw	1	; select bank2/3
  6955  11E2  0087               	movwf	7
  6956  11E3  082A               	movf	??_setLog_Code,w
  6957  11E4  0081               	movwf	1
  6958                           
  6959                           ;RF_Control_B1.c: 262: Product->Data[14]=RF_Data[14];
  6960  11E5  0021               	movlb	1	; select bank1
  6961  11E6  082E               	movf	(_RF_Data^(0+128)+14),w
  6962  11E7  0020               	movlb	0	; select bank0
  6963  11E8  00AA               	movwf	??_setLog_Code
  6964  11E9  086E               	movf	_Product,w
  6965  11EA  3E0E               	addlw	14
  6966  11EB  0086               	movwf	6
  6967  11EC  3001               	movlw	1	; select bank2/3
  6968  11ED  0087               	movwf	7
  6969  11EE  082A               	movf	??_setLog_Code,w
  6970  11EF  0081               	movwf	1
  6971                           
  6972                           ;RF_Control_B1.c: 263: setBuz(1,100);
  6973  11F0  3064               	movlw	100
  6974  11F1  00A6               	movwf	setBuz@time
  6975  11F2  3000               	movlw	0
  6976  11F3  00A7               	movwf	setBuz@time+1
  6977  11F4  3001               	movlw	1
  6978  11F5  3197  2711  3191   	fcall	_setBuz
  6979                           
  6980                           ;RF_Control_B1.c: 264: RF->Learn=0;
  6981  11F8  0877               	movf	_RF,w
  6982  11F9  0086               	movwf	6
  6983  11FA  0187               	clrf	7
  6984  11FB  1301               	bcf	1,6
  6985                           
  6986                           ;RF_Control_B1.c: 265: if(TMain->First)
  6987  11FC  0020               	movlb	0	; select bank0
  6988  11FD  086F               	movf	_TMain,w
  6989  11FE  3E03               	addlw	3
  6990  11FF  0086               	movwf	6
  6991  1200  3001               	movlw	1	; select bank2/3
  6992  1201  0087               	movwf	7
  6993  1202  1C81               	btfss	1,1
  6994  1203  2A0A               	goto	l2551
  6995                           
  6996                           ;RF_Control_B1.c: 266: {
  6997                           ;RF_Control_B1.c: 267: Memory->LoopSave=1;
  6998  1204  086D               	movf	_Memory,w
  6999  1205  3E22               	addlw	34
  7000  1206  0086               	movwf	6
  7001  1207  3002               	movlw	2	; select bank4/5
  7002  1208  0087               	movwf	7
  7003  1209  1501               	bsf	1,2
  7004  120A                     l2551:	
  7005                           
  7006                           ;RF_Control_B1.c: 268: }
  7007                           ;RF_Control_B1.c: 269: Memory->Modify=1;
  7008  120A  086D               	movf	_Memory,w
  7009  120B  3E22               	addlw	34
  7010  120C  0086               	movwf	6
  7011  120D  3002               	movlw	2	; select bank4/5
  7012  120E  0087               	movwf	7
  7013  120F  1401               	bsf	1,0
  7014  1210  0008               	return
  7015  1211                     __end_of_setLog_Code:	
  7016                           
  7017                           	psect	text25
  7018  0B89                     __ptext25:	
  7019 ;; *************** function _setControl_Lights_Table *****************
  7020 ;; Defined at:
  7021 ;;		line 272 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
  7022 ;; Parameters:    Size  Location     Type
  7023 ;;  rf              1    wreg     unsigned char 
  7024 ;; Auto vars:     Size  Location     Type
  7025 ;;  rf              1   71[BANK0 ] unsigned char 
  7026 ;; Return value:  Size  Location     Type
  7027 ;;		None               void
  7028 ;; Registers used:
  7029 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7030 ;; Tracked objects:
  7031 ;;		On entry : 0/0
  7032 ;;		On exit  : 0/0
  7033 ;;		Unchanged: 0/0
  7034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7036 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7038 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7039 ;;Total ram usage:        1 bytes
  7040 ;; Hardware stack levels used:    1
  7041 ;; Hardware stack levels required when called:   10
  7042 ;; This function calls:
  7043 ;;		_RfPointSelect
  7044 ;;		_setBuz
  7045 ;;		_setDimmerLights
  7046 ;;		_setRFSW_AdjControl
  7047 ;;		_setRFSW_Control
  7048 ;;		_setRFSW_Status
  7049 ;;		_setSw_Status
  7050 ;;		_setTxData
  7051 ;; This function is called by:
  7052 ;;		_getRxData
  7053 ;; This function uses a non-reentrant model
  7054 ;;
  7055                           
  7056                           
  7057                           ;psect for function _setControl_Lights_Table
  7058  0B89                     _setControl_Lights_Table:	
  7059                           
  7060                           ;incstack = 0
  7061                           ; Regs used in _setControl_Lights_Table: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
  7062                           ;setControl_Lights_Table@rf stored from wreg
  7063  0B89  0020               	movlb	0	; select bank0
  7064  0B8A  00E7               	movwf	setControl_Lights_Table@rf
  7065                           
  7066                           ;RF_Control_B1.c: 274: RfPointSelect(rf);
  7067  0B8B  0867               	movf	setControl_Lights_Table@rf,w
  7068  0B8C  3199  218E  318B   	fcall	_RfPointSelect
  7069                           
  7070                           ;RF_Control_B1.c: 275: if(RF_Data[15] == 0x00)
  7071  0B8F  0021               	movlb	1	; select bank1
  7072  0B90  08AF               	movf	(_RF_Data^(0+128)+15),f
  7073  0B91  1D03               	skipz
  7074  0B92  2BDC               	goto	l8687
  7075                           
  7076                           ;RF_Control_B1.c: 276: {
  7077                           ;RF_Control_B1.c: 278: setDimmerLights(1,0);
  7078  0B93  0020               	movlb	0	; select bank0
  7079  0B94  01A4               	clrf	setDimmerLights@status
  7080  0B95  3001               	movlw	1
  7081  0B96  3189  21E5  318B   	fcall	_setDimmerLights
  7082                           
  7083                           ;RF_Control_B1.c: 279: setRFSW_Status(1,0);
  7084  0B99  0020               	movlb	0	; select bank0
  7085  0B9A  01A2               	clrf	setRFSW_Status@command
  7086  0B9B  3001               	movlw	1
  7087  0B9C  319A  2245  318B   	fcall	_setRFSW_Status
  7088                           
  7089                           ;RF_Control_B1.c: 280: setSw_Status(1,0);
  7090  0B9F  0020               	movlb	0	; select bank0
  7091  0BA0  01A2               	clrf	setSw_Status@command
  7092  0BA1  3001               	movlw	1
  7093  0BA2  319A  2254  318B   	fcall	_setSw_Status
  7094                           
  7095                           ;RF_Control_B1.c: 283: setDimmerLights(2,0);
  7096  0BA5  0020               	movlb	0	; select bank0
  7097  0BA6  01A4               	clrf	setDimmerLights@status
  7098  0BA7  3002               	movlw	2
  7099  0BA8  3189  21E5  318B   	fcall	_setDimmerLights
  7100                           
  7101                           ;RF_Control_B1.c: 284: setRFSW_Status(2,0);
  7102  0BAB  0020               	movlb	0	; select bank0
  7103  0BAC  01A2               	clrf	setRFSW_Status@command
  7104  0BAD  3002               	movlw	2
  7105  0BAE  319A  2245  318B   	fcall	_setRFSW_Status
  7106                           
  7107                           ;RF_Control_B1.c: 285: setSw_Status(2,0);
  7108  0BB1  0020               	movlb	0	; select bank0
  7109  0BB2  01A2               	clrf	setSw_Status@command
  7110  0BB3  3002               	movlw	2
  7111  0BB4  319A  2254  318B   	fcall	_setSw_Status
  7112                           
  7113                           ;RF_Control_B1.c: 293: Product->Data[9]=0;
  7114  0BB7  0020               	movlb	0	; select bank0
  7115  0BB8  086E               	movf	_Product,w
  7116  0BB9  3E09               	addlw	9
  7117  0BBA  0086               	movwf	6
  7118  0BBB  3001               	movlw	1	; select bank2/3
  7119  0BBC  0087               	movwf	7
  7120  0BBD  0181               	clrf	1
  7121                           
  7122                           ;RF_Control_B1.c: 294: Product->Data[11]=0;
  7123  0BBE  086E               	movf	_Product,w
  7124  0BBF  3E0B               	addlw	11
  7125  0BC0  0086               	movwf	6
  7126  0BC1  3001               	movlw	1	; select bank2/3
  7127  0BC2  0087               	movwf	7
  7128  0BC3  0181               	clrf	1
  7129                           
  7130                           ;RF_Control_B1.c: 295: Product->Data[15]=0;
  7131  0BC4  086E               	movf	_Product,w
  7132  0BC5  3E0F               	addlw	15
  7133  0BC6  0086               	movwf	6
  7134  0BC7  3001               	movlw	1	; select bank2/3
  7135  0BC8  0087               	movwf	7
  7136  0BC9  0181               	clrf	1
  7137                           
  7138                           ;RF_Control_B1.c: 296: Product->Data[17]=0;
  7139  0BCA  086E               	movf	_Product,w
  7140  0BCB  3E11               	addlw	17
  7141  0BCC  0086               	movwf	6
  7142  0BCD  3001               	movlw	1	; select bank2/3
  7143  0BCE  0087               	movwf	7
  7144  0BCF  0181               	clrf	1
  7145                           
  7146                           ;RF_Control_B1.c: 297: setBuz(1,100);
  7147  0BD0  3064               	movlw	100
  7148  0BD1  00A6               	movwf	setBuz@time
  7149  0BD2  3000               	movlw	0
  7150  0BD3  00A7               	movwf	setBuz@time+1
  7151  0BD4  3001               	movlw	1
  7152  0BD5  3197  2711  318B   	fcall	_setBuz
  7153                           
  7154                           ;RF_Control_B1.c: 298: setTxData(1);
  7155  0BD8  3001               	movlw	1
  7156  0BD9  3187  271C         	fcall	_setTxData
  7157                           
  7158                           ;RF_Control_B1.c: 299: }
  7159  0BDB  0008               	return
  7160  0BDC                     l8687:	
  7161                           
  7162                           ;RF_Control_B1.c: 300: else if(RF_Data[15] == 0x20)
  7163  0BDC  0021               	movlb	1	; select bank1
  7164  0BDD  082F               	movf	(_RF_Data^(0+128)+15),w
  7165  0BDE  3A20               	xorlw	32
  7166  0BDF  1D03               	skipz
  7167  0BE0  2BF8               	goto	l8693
  7168                           
  7169                           ;RF_Control_B1.c: 301: {
  7170                           ;RF_Control_B1.c: 302: Product->Data[9]=0;
  7171  0BE1  0020               	movlb	0	; select bank0
  7172  0BE2  086E               	movf	_Product,w
  7173  0BE3  3E09               	addlw	9
  7174  0BE4  0086               	movwf	6
  7175  0BE5  3001               	movlw	1	; select bank2/3
  7176  0BE6  0087               	movwf	7
  7177  0BE7  0181               	clrf	1
  7178                           
  7179                           ;RF_Control_B1.c: 303: Product->Data[11]=0;
  7180  0BE8  086E               	movf	_Product,w
  7181  0BE9  3E0B               	addlw	11
  7182  0BEA  0086               	movwf	6
  7183  0BEB  3001               	movlw	1	; select bank2/3
  7184  0BEC  0087               	movwf	7
  7185  0BED  0181               	clrf	1
  7186                           
  7187                           ;RF_Control_B1.c: 304: Product->Data[17]=0;
  7188  0BEE  086E               	movf	_Product,w
  7189  0BEF  3E11               	addlw	17
  7190  0BF0  0086               	movwf	6
  7191  0BF1  3001               	movlw	1	; select bank2/3
  7192  0BF2  0087               	movwf	7
  7193  0BF3  0181               	clrf	1
  7194                           
  7195                           ;RF_Control_B1.c: 305: setTxData(1);
  7196  0BF4  3001               	movlw	1
  7197  0BF5  3187  271C         	fcall	_setTxData
  7198                           
  7199                           ;RF_Control_B1.c: 306: }
  7200  0BF7  0008               	return
  7201  0BF8                     l8693:	
  7202                           
  7203                           ;RF_Control_B1.c: 308: else if(RF_Data[15] == 0x01)
  7204  0BF8  0021               	movlb	1	; select bank1
  7205  0BF9  082F               	movf	(_RF_Data^(0+128)+15),w
  7206  0BFA  3A01               	xorlw	1
  7207  0BFB  1D03               	skipz
  7208  0BFC  2C01               	goto	l8697
  7209                           
  7210                           ;RF_Control_B1.c: 309: {
  7211                           ;RF_Control_B1.c: 310: setRFSW_Control(1);
  7212  0BFD  3001               	movlw	1
  7213  0BFE  318A  22F9         	fcall	_setRFSW_Control
  7214                           
  7215                           ;RF_Control_B1.c: 311: }
  7216  0C00  0008               	return
  7217  0C01                     l8697:	
  7218                           
  7219                           ;RF_Control_B1.c: 313: else if(RF_Data[15] == 0x11)
  7220  0C01  0021               	movlb	1	; select bank1
  7221  0C02  082F               	movf	(_RF_Data^(0+128)+15),w
  7222  0C03  3A11               	xorlw	17
  7223  0C04  1D03               	skipz
  7224  0C05  2C0A               	goto	l8701
  7225                           
  7226                           ;RF_Control_B1.c: 314: {
  7227                           ;RF_Control_B1.c: 315: setRFSW_AdjControl(1);
  7228  0C06  3001               	movlw	1
  7229  0C07  319F  27C0         	fcall	_setRFSW_AdjControl
  7230                           
  7231                           ;RF_Control_B1.c: 316: }
  7232  0C09  0008               	return
  7233  0C0A                     l8701:	
  7234                           
  7235                           ;RF_Control_B1.c: 321: else if(RF_Data[15] == 0x02)
  7236  0C0A  0021               	movlb	1	; select bank1
  7237  0C0B  082F               	movf	(_RF_Data^(0+128)+15),w
  7238  0C0C  3A02               	xorlw	2
  7239  0C0D  1D03               	skipz
  7240  0C0E  2C13               	goto	l8705
  7241                           
  7242                           ;RF_Control_B1.c: 322: {
  7243                           ;RF_Control_B1.c: 323: setRFSW_Control(2);
  7244  0C0F  3002               	movlw	2
  7245  0C10  318A  22F9         	fcall	_setRFSW_Control
  7246                           
  7247                           ;RF_Control_B1.c: 324: }
  7248  0C12  0008               	return
  7249  0C13                     l8705:	
  7250                           
  7251                           ;RF_Control_B1.c: 326: else if(RF_Data[15] == 0x21)
  7252  0C13  0021               	movlb	1	; select bank1
  7253  0C14  082F               	movf	(_RF_Data^(0+128)+15),w
  7254  0C15  3A21               	xorlw	33
  7255  0C16  1D03               	skipz
  7256  0C17  0008               	return
  7257                           
  7258                           ;RF_Control_B1.c: 327: {
  7259                           ;RF_Control_B1.c: 328: setRFSW_AdjControl(2);
  7260  0C18  3002               	movlw	2
  7261  0C19  319F  27C0         	fcall	_setRFSW_AdjControl
  7262  0C1B  0008               	return
  7263  0C1C                     __end_of_setControl_Lights_Table:	
  7264                           
  7265                           	psect	text26
  7266  0AF9                     __ptext26:	
  7267 ;; *************** function _setRFSW_Control *****************
  7268 ;; Defined at:
  7269 ;;		line 369 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
  7270 ;; Parameters:    Size  Location     Type
  7271 ;;  sw              1    wreg     unsigned char 
  7272 ;; Auto vars:     Size  Location     Type
  7273 ;;  sw              1   67[BANK0 ] unsigned char 
  7274 ;; Return value:  Size  Location     Type
  7275 ;;		None               void
  7276 ;; Registers used:
  7277 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7278 ;; Tracked objects:
  7279 ;;		On entry : 0/0
  7280 ;;		On exit  : 0/0
  7281 ;;		Unchanged: 0/0
  7282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7284 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7285 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7286 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7287 ;;Total ram usage:        2 bytes
  7288 ;; Hardware stack levels used:    1
  7289 ;; Hardware stack levels required when called:    8
  7290 ;; This function calls:
  7291 ;;		_RfSWPointSelect
  7292 ;;		_setBuz
  7293 ;;		_setDelayOff_GO
  7294 ;;		_setDimmerLights_Switch
  7295 ;;		_setDimmerLights_Trigger
  7296 ;;		_setRF_DimmerLights
  7297 ;;		_setSw_Status
  7298 ;;		_setTxData
  7299 ;; This function is called by:
  7300 ;;		_setControl_Lights_Table
  7301 ;; This function uses a non-reentrant model
  7302 ;;
  7303                           
  7304                           
  7305                           ;psect for function _setRFSW_Control
  7306  0AF9                     _setRFSW_Control:	
  7307                           
  7308                           ;incstack = 0
  7309                           ; Regs used in _setRFSW_Control: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7310                           ;setRFSW_Control@sw stored from wreg
  7311  0AF9  0020               	movlb	0	; select bank0
  7312  0AFA  00E3               	movwf	setRFSW_Control@sw
  7313                           
  7314                           ;RF_Control_B1.c: 371: RfSWPointSelect(sw);
  7315  0AFB  0863               	movf	setRFSW_Control@sw,w
  7316  0AFC  319B  234C  318A   	fcall	_RfSWPointSelect
  7317                           
  7318                           ;RF_Control_B1.c: 372: if(!RFSW->Status)
  7319  0AFF  0021               	movlb	1	; select bank1
  7320  0B00  083B               	movf	_RFSW^(0+128),w
  7321  0B01  0086               	movwf	6
  7322  0B02  0187               	clrf	7
  7323  0B03  1801               	btfsc	1,0
  7324  0B04  2B3A               	goto	l8545
  7325                           
  7326                           ;RF_Control_B1.c: 373: {
  7327                           ;RF_Control_B1.c: 374: if(RF_Data[16] == 0x80)
  7328  0B05  0830               	movf	(_RF_Data^(0+128)+16),w
  7329  0B06  3A80               	xorlw	128
  7330  0B07  1D03               	skipz
  7331  0B08  2B16               	goto	l8535
  7332                           
  7333                           ;RF_Control_B1.c: 375: {
  7334                           ;RF_Control_B1.c: 376: setDelayOff_GO(sw,1,RF_Data[17]);
  7335  0B09  0020               	movlb	0	; select bank0
  7336  0B0A  01A3               	clrf	setDelayOff_GO@command
  7337  0B0B  0AA3               	incf	setDelayOff_GO@command,f
  7338  0B0C  0021               	movlb	1	; select bank1
  7339  0B0D  0831               	movf	(_RF_Data^(0+128)+17),w
  7340  0B0E  0020               	movlb	0	; select bank0
  7341  0B0F  00E2               	movwf	??_setRFSW_Control
  7342  0B10  0862               	movf	??_setRFSW_Control,w
  7343  0B11  00A4               	movwf	setDelayOff_GO@value
  7344  0B12  0863               	movf	setRFSW_Control@sw,w
  7345  0B13  3192  22B3  318A   	fcall	_setDelayOff_GO
  7346  0B16                     l8535:	
  7347                           
  7348                           ;RF_Control_B1.c: 377: }
  7349                           ;RF_Control_B1.c: 378: RFSW->Status=1;
  7350  0B16  0021               	movlb	1	; select bank1
  7351  0B17  083B               	movf	_RFSW^(0+128),w
  7352  0B18  0086               	movwf	6
  7353  0B19  0187               	clrf	7
  7354  0B1A  1401               	bsf	1,0
  7355                           
  7356                           ;RF_Control_B1.c: 379: setSw_Status(sw,1);
  7357  0B1B  0020               	movlb	0	; select bank0
  7358  0B1C  01A2               	clrf	setSw_Status@command
  7359  0B1D  0AA2               	incf	setSw_Status@command,f
  7360  0B1E  0863               	movf	setRFSW_Control@sw,w
  7361  0B1F  319A  2254  318A   	fcall	_setSw_Status
  7362                           
  7363                           ;RF_Control_B1.c: 381: setDimmerLights_Trigger(sw,1);
  7364  0B22  0020               	movlb	0	; select bank0
  7365  0B23  01A2               	clrf	setDimmerLights_Trigger@command
  7366  0B24  0AA2               	incf	setDimmerLights_Trigger@command,f
  7367  0B25  0863               	movf	setRFSW_Control@sw,w
  7368  0B26  319A  2283  318A   	fcall	_setDimmerLights_Trigger
  7369                           
  7370                           ;RF_Control_B1.c: 382: setDimmerLights_Switch(sw,1);
  7371  0B29  0020               	movlb	0	; select bank0
  7372  0B2A  01A2               	clrf	setDimmerLights_Switch@command
  7373  0B2B  0AA2               	incf	setDimmerLights_Switch@command,f
  7374  0B2C  0863               	movf	setRFSW_Control@sw,w
  7375  0B2D  319A  2273  318A   	fcall	_setDimmerLights_Switch
  7376                           
  7377                           ;RF_Control_B1.c: 384: setRF_DimmerLights(sw,RFSW->Status);
  7378  0B30  0021               	movlb	1	; select bank1
  7379  0B31  083B               	movf	_RFSW^(0+128),w
  7380  0B32  0086               	movwf	6
  7381  0B33  0187               	clrf	7
  7382  0B34  3000               	movlw	0
  7383  0B35  1801               	btfsc	1,0
  7384  0B36  3001               	movlw	1
  7385  0B37  0020               	movlb	0	; select bank0
  7386  0B38  00DD               	movwf	setRF_DimmerLights@on
  7387  0B39  2B78               	goto	L4
  7388  0B3A                     l8545:	
  7389                           ;RF_Control_B1.c: 385: }
  7390                           
  7391                           
  7392                           ;RF_Control_B1.c: 386: else
  7393                           ;RF_Control_B1.c: 387: {
  7394                           ;RF_Control_B1.c: 388: if(RF_Data[16] == 0x80)
  7395  0B3A  0021               	movlb	1	; select bank1
  7396  0B3B  0830               	movf	(_RF_Data^(0+128)+16),w
  7397  0B3C  3A80               	xorlw	128
  7398  0B3D  1D03               	skipz
  7399  0B3E  2B50               	goto	l8549
  7400                           
  7401                           ;RF_Control_B1.c: 389: {
  7402                           ;RF_Control_B1.c: 390: setDelayOff_GO(sw,1,RF_Data[17]);
  7403  0B3F  0020               	movlb	0	; select bank0
  7404  0B40  01A3               	clrf	setDelayOff_GO@command
  7405  0B41  0AA3               	incf	setDelayOff_GO@command,f
  7406  0B42  0021               	movlb	1	; select bank1
  7407  0B43  0831               	movf	(_RF_Data^(0+128)+17),w
  7408  0B44  0020               	movlb	0	; select bank0
  7409  0B45  00E2               	movwf	??_setRFSW_Control
  7410  0B46  0862               	movf	??_setRFSW_Control,w
  7411  0B47  00A4               	movwf	setDelayOff_GO@value
  7412  0B48  0863               	movf	setRFSW_Control@sw,w
  7413  0B49  3192  22B3  318A   	fcall	_setDelayOff_GO
  7414                           
  7415                           ;RF_Control_B1.c: 391: setRF_DimmerLights(sw,1);
  7416  0B4C  0020               	movlb	0	; select bank0
  7417  0B4D  01DD               	clrf	setRF_DimmerLights@on
  7418  0B4E  0ADD               	incf	setRF_DimmerLights@on,f
  7419  0B4F  2B78               	goto	L4
  7420  0B50                     l8549:	
  7421                           ;RF_Control_B1.c: 392: }
  7422                           
  7423                           
  7424                           ;RF_Control_B1.c: 393: else
  7425                           ;RF_Control_B1.c: 394: {
  7426                           ;RF_Control_B1.c: 395: RFSW->Status=0;
  7427  0B50  0021               	movlb	1	; select bank1
  7428  0B51  083B               	movf	_RFSW^(0+128),w
  7429  0B52  0086               	movwf	6
  7430  0B53  0187               	clrf	7
  7431  0B54  1001               	bcf	1,0
  7432                           
  7433                           ;RF_Control_B1.c: 396: setSw_Status(sw,0);
  7434  0B55  0020               	movlb	0	; select bank0
  7435  0B56  01A2               	clrf	setSw_Status@command
  7436  0B57  0863               	movf	setRFSW_Control@sw,w
  7437  0B58  319A  2254  318A   	fcall	_setSw_Status
  7438                           
  7439                           ;RF_Control_B1.c: 398: setDimmerLights_Trigger(sw,1);
  7440  0B5B  0020               	movlb	0	; select bank0
  7441  0B5C  01A2               	clrf	setDimmerLights_Trigger@command
  7442  0B5D  0AA2               	incf	setDimmerLights_Trigger@command,f
  7443  0B5E  0863               	movf	setRFSW_Control@sw,w
  7444  0B5F  319A  2283  318A   	fcall	_setDimmerLights_Trigger
  7445                           
  7446                           ;RF_Control_B1.c: 399: setDimmerLights_Switch(sw,RFSW->Status);
  7447  0B62  0021               	movlb	1	; select bank1
  7448  0B63  083B               	movf	_RFSW^(0+128),w
  7449  0B64  0086               	movwf	6
  7450  0B65  0187               	clrf	7
  7451  0B66  3000               	movlw	0
  7452  0B67  1801               	btfsc	1,0
  7453  0B68  3001               	movlw	1
  7454  0B69  0020               	movlb	0	; select bank0
  7455  0B6A  00A2               	movwf	setDimmerLights_Switch@command
  7456  0B6B  0863               	movf	setRFSW_Control@sw,w
  7457  0B6C  319A  2273  318A   	fcall	_setDimmerLights_Switch
  7458                           
  7459                           ;RF_Control_B1.c: 401: setDelayOff_GO(sw,0,0);
  7460  0B6F  0020               	movlb	0	; select bank0
  7461  0B70  01A3               	clrf	setDelayOff_GO@command
  7462  0B71  01A4               	clrf	setDelayOff_GO@value
  7463  0B72  0863               	movf	setRFSW_Control@sw,w
  7464  0B73  3192  22B3  318A   	fcall	_setDelayOff_GO
  7465                           
  7466                           ;RF_Control_B1.c: 402: setRF_DimmerLights(sw,0);
  7467  0B76  0020               	movlb	0	; select bank0
  7468  0B77  01DD               	clrf	setRF_DimmerLights@on
  7469  0B78                     L4:	
  7470  0B78  0863               	movf	setRFSW_Control@sw,w
  7471  0B79  3195  2553  318A   	fcall	_setRF_DimmerLights
  7472                           
  7473                           ;RF_Control_B1.c: 403: }
  7474                           ;RF_Control_B1.c: 404: }
  7475                           ;RF_Control_B1.c: 405: setBuz(1,100);
  7476  0B7C  3064               	movlw	100
  7477  0B7D  0020               	movlb	0	; select bank0
  7478  0B7E  00A6               	movwf	setBuz@time
  7479  0B7F  3000               	movlw	0
  7480  0B80  00A7               	movwf	setBuz@time+1
  7481  0B81  3001               	movlw	1
  7482  0B82  3197  2711  318A   	fcall	_setBuz
  7483                           
  7484                           ;RF_Control_B1.c: 406: setTxData(1);
  7485  0B85  3001               	movlw	1
  7486  0B86  3187  271C         	fcall	_setTxData
  7487  0B88  0008               	return
  7488  0B89                     __end_of_setRFSW_Control:	
  7489                           
  7490                           	psect	text27
  7491  12B3                     __ptext27:	
  7492 ;; *************** function _setDelayOff_GO *****************
  7493 ;; Defined at:
  7494 ;;		line 92 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\DelayOff_B1.c"
  7495 ;; Parameters:    Size  Location     Type
  7496 ;;  sw              1    wreg     unsigned char 
  7497 ;;  command         1    3[BANK0 ] unsigned char 
  7498 ;;  value           1    4[BANK0 ] unsigned char 
  7499 ;; Auto vars:     Size  Location     Type
  7500 ;;  sw              1    7[BANK0 ] unsigned char 
  7501 ;; Return value:  Size  Location     Type
  7502 ;;		None               void
  7503 ;; Registers used:
  7504 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7505 ;; Tracked objects:
  7506 ;;		On entry : 0/0
  7507 ;;		On exit  : 0/0
  7508 ;;		Unchanged: 0/0
  7509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7510 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7511 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7512 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7513 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7514 ;;Total ram usage:        5 bytes
  7515 ;; Hardware stack levels used:    1
  7516 ;; Hardware stack levels required when called:    5
  7517 ;; This function calls:
  7518 ;;		_DelayOffPointSelect
  7519 ;;		_DelayTimejudge
  7520 ;; This function is called by:
  7521 ;;		_setRFSW_Control
  7522 ;;		_Sw_DimmerOffFunc
  7523 ;; This function uses a non-reentrant model
  7524 ;;
  7525                           
  7526                           
  7527                           ;psect for function _setDelayOff_GO
  7528  12B3                     _setDelayOff_GO:	
  7529                           
  7530                           ;incstack = 0
  7531                           ; Regs used in _setDelayOff_GO: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7532                           ;setDelayOff_GO@sw stored from wreg
  7533  12B3  0020               	movlb	0	; select bank0
  7534  12B4  00A7               	movwf	setDelayOff_GO@sw
  7535                           
  7536                           ;DelayOff_B1.c: 94: DelayOffPointSelect(sw);
  7537  12B5  0827               	movf	setDelayOff_GO@sw,w
  7538  12B6  319A  22FA  3192   	fcall	_DelayOffPointSelect
  7539                           
  7540                           ;DelayOff_B1.c: 95: if(DelayOff->Enable)
  7541  12B9  0020               	movlb	0	; select bank0
  7542  12BA  0869               	movf	_DelayOff,w
  7543  12BB  0086               	movwf	6
  7544  12BC  0187               	clrf	7
  7545  12BD  1C01               	btfss	1,0
  7546  12BE  0008               	return
  7547                           
  7548                           ;DelayOff_B1.c: 96: {
  7549                           ;DelayOff_B1.c: 97: DelayOff->GO=command;
  7550  12BF  0869               	movf	_DelayOff,w
  7551  12C0  0086               	movwf	6
  7552  12C1  0187               	clrf	7
  7553  12C2  0823               	movf	setDelayOff_GO@command,w
  7554  12C3  1081               	bcf	1,1
  7555  12C4  1D03               	skipz
  7556  12C5  1481               	bsf	1,1
  7557                           
  7558                           ;DelayOff_B1.c: 98: if(command)
  7559  12C6  0823               	movf	setDelayOff_GO@command,w
  7560  12C7  1903               	btfsc	3,2
  7561  12C8  2AF2               	goto	l8361
  7562                           
  7563                           ;DelayOff_B1.c: 99: {
  7564                           ;DelayOff_B1.c: 100: DelayOff->Value=DelayTimejudge(value);
  7565  12C9  0824               	movf	setDelayOff_GO@value,w
  7566  12CA  319E  267C  3192   	fcall	_DelayTimejudge
  7567  12CD  0020               	movlb	0	; select bank0
  7568  12CE  00A5               	movwf	??_setDelayOff_GO
  7569  12CF  0A69               	incf	_DelayOff,w
  7570  12D0  0086               	movwf	6
  7571  12D1  0187               	clrf	7
  7572  12D2  0825               	movf	??_setDelayOff_GO,w
  7573  12D3  0081               	movwf	1
  7574                           
  7575                           ;DelayOff_B1.c: 101: if(((value%16)==5 || !(value%16)) && value <= 0x25)
  7576  12D4  300F               	movlw	15
  7577  12D5  0524               	andwf	setDelayOff_GO@value,w
  7578  12D6  00A5               	movwf	??_setDelayOff_GO
  7579  12D7  0825               	movf	??_setDelayOff_GO,w
  7580  12D8  3A05               	xorlw	5
  7581  12D9  1903               	skipnz
  7582  12DA  2ADF               	goto	l8355
  7583  12DB  0824               	movf	setDelayOff_GO@value,w
  7584  12DC  390F               	andlw	15
  7585  12DD  1D03               	btfss	3,2
  7586  12DE  2AE5               	goto	l8359
  7587  12DF                     l8355:	
  7588  12DF  3026               	movlw	38
  7589  12E0  0224               	subwf	setDelayOff_GO@value,w
  7590  12E1  1803               	skipnc
  7591  12E2  2AE5               	goto	l8359
  7592                           
  7593                           ;DelayOff_B1.c: 102: {
  7594                           ;DelayOff_B1.c: 103: Product->Data[26+sw]=value;
  7595  12E3  0824               	movf	setDelayOff_GO@value,w
  7596  12E4  2AE6               	goto	L5
  7597  12E5                     l8359:	
  7598                           ;DelayOff_B1.c: 104: }
  7599                           
  7600                           
  7601                           ;DelayOff_B1.c: 105: else
  7602                           ;DelayOff_B1.c: 106: {
  7603                           ;DelayOff_B1.c: 107: Product->Data[26+sw]=0x05;
  7604  12E5  3005               	movlw	5
  7605  12E6                     L5:	
  7606  12E6  00A5               	movwf	??_setDelayOff_GO
  7607  12E7  0827               	movf	setDelayOff_GO@sw,w
  7608  12E8  3E1A               	addlw	26
  7609  12E9  076E               	addwf	_Product,w
  7610  12EA  00A6               	movwf	??_setDelayOff_GO+1
  7611  12EB  0826               	movf	??_setDelayOff_GO+1,w
  7612  12EC  0086               	movwf	6
  7613  12ED  3001               	movlw	1	; select bank2/3
  7614  12EE  0087               	movwf	7
  7615  12EF  0825               	movf	??_setDelayOff_GO,w
  7616  12F0  0081               	movwf	1
  7617                           
  7618                           ;DelayOff_B1.c: 108: }
  7619                           ;DelayOff_B1.c: 109: }
  7620  12F1  2AFE               	goto	l8365
  7621  12F2                     l8361:	
  7622                           
  7623                           ;DelayOff_B1.c: 110: else if(!command)
  7624  12F2  08A3               	movf	setDelayOff_GO@command,f
  7625  12F3  1D03               	skipz
  7626  12F4  2AFE               	goto	l8365
  7627                           
  7628                           ;DelayOff_B1.c: 111: {
  7629                           ;DelayOff_B1.c: 112: Product->Data[sw+26]=0;
  7630  12F5  0827               	movf	setDelayOff_GO@sw,w
  7631  12F6  3E1A               	addlw	26
  7632  12F7  076E               	addwf	_Product,w
  7633  12F8  00A5               	movwf	??_setDelayOff_GO
  7634  12F9  0825               	movf	??_setDelayOff_GO,w
  7635  12FA  0086               	movwf	6
  7636  12FB  3001               	movlw	1	; select bank2/3
  7637  12FC  0087               	movwf	7
  7638  12FD  0181               	clrf	1
  7639  12FE                     l8365:	
  7640                           
  7641                           ;DelayOff_B1.c: 113: }
  7642                           ;DelayOff_B1.c: 114: DelayOff->SecondTime=0;
  7643  12FE  0869               	movf	_DelayOff,w
  7644  12FF  3E02               	addlw	2
  7645  1300  0086               	movwf	6
  7646  1301  0187               	clrf	7
  7647  1302  3000               	movlw	0
  7648  1303  3FC0               	movwi [0]fsr1
  7649  1304  3FC1               	movwi [1]fsr1
  7650                           
  7651                           ;DelayOff_B1.c: 115: DelayOff->MinuteTime=0;
  7652  1305  0869               	movf	_DelayOff,w
  7653  1306  3E04               	addlw	4
  7654  1307  0086               	movwf	6
  7655  1308  0187               	clrf	7
  7656  1309  0181               	clrf	1
  7657  130A  0008               	return
  7658  130B                     __end_of_setDelayOff_GO:	
  7659                           
  7660                           	psect	text28
  7661  1E7C                     __ptext28:	
  7662 ;; *************** function _DelayTimejudge *****************
  7663 ;; Defined at:
  7664 ;;		line 119 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\DelayOff_B1.c"
  7665 ;; Parameters:    Size  Location     Type
  7666 ;;  value           1    wreg     unsigned char 
  7667 ;; Auto vars:     Size  Location     Type
  7668 ;;  value           1    2[BANK0 ] unsigned char 
  7669 ;;  i               1    1[BANK0 ] unsigned char 
  7670 ;; Return value:  Size  Location     Type
  7671 ;;                  1    wreg      unsigned char 
  7672 ;; Registers used:
  7673 ;;		wreg
  7674 ;; Tracked objects:
  7675 ;;		On entry : 0/0
  7676 ;;		On exit  : 0/0
  7677 ;;		Unchanged: 0/0
  7678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7679 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7680 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7681 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7682 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7683 ;;Total ram usage:        3 bytes
  7684 ;; Hardware stack levels used:    1
  7685 ;; Hardware stack levels required when called:    4
  7686 ;; This function calls:
  7687 ;;		Nothing
  7688 ;; This function is called by:
  7689 ;;		_setDelayOff_GO
  7690 ;; This function uses a non-reentrant model
  7691 ;;
  7692                           
  7693                           
  7694                           ;psect for function _DelayTimejudge
  7695  1E7C                     _DelayTimejudge:	
  7696                           
  7697                           ;incstack = 0
  7698                           ; Regs used in _DelayTimejudge: [wreg]
  7699                           ;DelayTimejudge@value stored from wreg
  7700  1E7C  0020               	movlb	0	; select bank0
  7701  1E7D  00A2               	movwf	DelayTimejudge@value
  7702                           
  7703                           ;DelayOff_B1.c: 121: char i=5;
  7704  1E7E  3005               	movlw	5
  7705  1E7F  00A0               	movwf	??_DelayTimejudge
  7706  1E80  0820               	movf	??_DelayTimejudge,w
  7707  1E81  00A1               	movwf	DelayTimejudge@i
  7708                           
  7709                           ;DelayOff_B1.c: 122: if(value == 0x05)
  7710  1E82  0822               	movf	DelayTimejudge@value,w
  7711  1E83  3A05               	xorlw	5
  7712  1E84  1D03               	skipz
  7713  1E85  2E88               	goto	l8195
  7714                           
  7715                           ;DelayOff_B1.c: 123: {
  7716                           ;DelayOff_B1.c: 124: i=5;
  7717  1E86  3005               	movlw	5
  7718  1E87  2EA5               	goto	L10
  7719  1E88                     l8195:	
  7720                           ;DelayOff_B1.c: 125: }
  7721                           
  7722                           
  7723                           ;DelayOff_B1.c: 126: else if(value == 0x10)
  7724  1E88  0822               	movf	DelayTimejudge@value,w
  7725  1E89  3A10               	xorlw	16
  7726  1E8A  1D03               	skipz
  7727  1E8B  2E8E               	goto	l8199
  7728                           
  7729                           ;DelayOff_B1.c: 127: {
  7730                           ;DelayOff_B1.c: 128: i=10;
  7731  1E8C  300A               	movlw	10
  7732  1E8D  2EA5               	goto	L10
  7733  1E8E                     l8199:	
  7734                           ;DelayOff_B1.c: 129: }
  7735                           
  7736                           
  7737                           ;DelayOff_B1.c: 130: else if(value == 0x15)
  7738  1E8E  0822               	movf	DelayTimejudge@value,w
  7739  1E8F  3A15               	xorlw	21
  7740  1E90  1D03               	skipz
  7741  1E91  2E94               	goto	l8203
  7742                           
  7743                           ;DelayOff_B1.c: 131: {
  7744                           ;DelayOff_B1.c: 132: i=15;
  7745  1E92  300F               	movlw	15
  7746  1E93  2EA5               	goto	L10
  7747  1E94                     l8203:	
  7748                           ;DelayOff_B1.c: 133: }
  7749                           
  7750                           
  7751                           ;DelayOff_B1.c: 134: else if(value == 0x20)
  7752  1E94  0822               	movf	DelayTimejudge@value,w
  7753  1E95  3A20               	xorlw	32
  7754  1E96  1D03               	skipz
  7755  1E97  2E9A               	goto	l8207
  7756                           
  7757                           ;DelayOff_B1.c: 135: {
  7758                           ;DelayOff_B1.c: 136: i=20;
  7759  1E98  3014               	movlw	20
  7760  1E99  2EA5               	goto	L10
  7761  1E9A                     l8207:	
  7762                           ;DelayOff_B1.c: 137: }
  7763                           
  7764                           
  7765                           ;DelayOff_B1.c: 138: else if(value == 0x25)
  7766  1E9A  0822               	movf	DelayTimejudge@value,w
  7767  1E9B  3A25               	xorlw	37
  7768  1E9C  1D03               	skipz
  7769  1E9D  2EA0               	goto	l8211
  7770                           
  7771                           ;DelayOff_B1.c: 139: {
  7772                           ;DelayOff_B1.c: 140: i=25;
  7773  1E9E  3019               	movlw	25
  7774  1E9F  2EA5               	goto	L10
  7775  1EA0                     l8211:	
  7776                           ;DelayOff_B1.c: 141: }
  7777                           
  7778                           
  7779                           ;DelayOff_B1.c: 142: else if(value == 0x30)
  7780  1EA0  0822               	movf	DelayTimejudge@value,w
  7781  1EA1  3A30               	xorlw	48
  7782  1EA2  1D03               	skipz
  7783  1EA3  2EA8               	goto	l690
  7784                           
  7785                           ;DelayOff_B1.c: 143: {
  7786                           ;DelayOff_B1.c: 144: i=30;
  7787  1EA4  301E               	movlw	30
  7788  1EA5                     L10:	
  7789  1EA5  00A0               	movwf	??_DelayTimejudge
  7790  1EA6  0820               	movf	??_DelayTimejudge,w
  7791  1EA7  00A1               	movwf	DelayTimejudge@i
  7792  1EA8                     l690:	
  7793                           
  7794                           ;DelayOff_B1.c: 145: }
  7795                           ;DelayOff_B1.c: 146: return i;
  7796  1EA8  0821               	movf	DelayTimejudge@i,w
  7797  1EA9  0008               	return
  7798  1EAA                     __end_of_DelayTimejudge:	
  7799                           
  7800                           	psect	text29
  7801  1FC0                     __ptext29:	
  7802 ;; *************** function _setRFSW_AdjControl *****************
  7803 ;; Defined at:
  7804 ;;		line 409 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
  7805 ;; Parameters:    Size  Location     Type
  7806 ;;  sw              1    wreg     unsigned char 
  7807 ;; Auto vars:     Size  Location     Type
  7808 ;;  sw              1   70[BANK0 ] unsigned char 
  7809 ;; Return value:  Size  Location     Type
  7810 ;;		None               void
  7811 ;; Registers used:
  7812 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7813 ;; Tracked objects:
  7814 ;;		On entry : 0/0
  7815 ;;		On exit  : 0/0
  7816 ;;		Unchanged: 0/0
  7817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7819 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7820 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7821 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7822 ;;Total ram usage:        3 bytes
  7823 ;; Hardware stack levels used:    1
  7824 ;; Hardware stack levels required when called:    9
  7825 ;; This function calls:
  7826 ;;		_RfSWPointSelect
  7827 ;;		_setRF_DimmerValue
  7828 ;;		_setTxData
  7829 ;; This function is called by:
  7830 ;;		_setControl_Lights_Table
  7831 ;; This function uses a non-reentrant model
  7832 ;;
  7833                           
  7834                           
  7835                           ;psect for function _setRFSW_AdjControl
  7836  1FC0                     _setRFSW_AdjControl:	
  7837                           
  7838                           ;incstack = 0
  7839                           ; Regs used in _setRFSW_AdjControl: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7840                           ;setRFSW_AdjControl@sw stored from wreg
  7841  1FC0  0020               	movlb	0	; select bank0
  7842  1FC1  00E6               	movwf	setRFSW_AdjControl@sw
  7843                           
  7844                           ;RF_Control_B1.c: 411: RfSWPointSelect(sw);
  7845  1FC2  0866               	movf	setRFSW_AdjControl@sw,w
  7846  1FC3  319B  234C  319F   	fcall	_RfSWPointSelect
  7847                           
  7848                           ;RF_Control_B1.c: 412: if(RFSW->Status)
  7849  1FC6  0021               	movlb	1	; select bank1
  7850  1FC7  083B               	movf	_RFSW^(0+128),w
  7851  1FC8  0086               	movwf	6
  7852  1FC9  0187               	clrf	7
  7853  1FCA  1C01               	btfss	1,0
  7854  1FCB  2FD8               	goto	l8573
  7855                           
  7856                           ;RF_Control_B1.c: 413: {
  7857                           ;RF_Control_B1.c: 414: Memory->Modify=1;
  7858  1FCC  0020               	movlb	0	; select bank0
  7859  1FCD  086D               	movf	_Memory,w
  7860  1FCE  3E22               	addlw	34
  7861  1FCF  0086               	movwf	6
  7862  1FD0  3002               	movlw	2	; select bank4/5
  7863  1FD1  0087               	movwf	7
  7864  1FD2  1401               	bsf	1,0
  7865                           
  7866                           ;RF_Control_B1.c: 415: setRF_DimmerValue(sw);
  7867  1FD3  0866               	movf	setRFSW_AdjControl@sw,w
  7868  1FD4  3190  2000  319F   	fcall	_setRF_DimmerValue
  7869                           
  7870                           ;RF_Control_B1.c: 416: }
  7871  1FD7  2FEA               	goto	l2583
  7872  1FD8                     l8573:	
  7873                           
  7874                           ;RF_Control_B1.c: 417: else
  7875                           ;RF_Control_B1.c: 418: {
  7876                           ;RF_Control_B1.c: 419: Product->Data[9]=Product->Data[20+sw];
  7877  1FD8  0020               	movlb	0	; select bank0
  7878  1FD9  0866               	movf	setRFSW_AdjControl@sw,w
  7879  1FDA  3E14               	addlw	20
  7880  1FDB  076E               	addwf	_Product,w
  7881  1FDC  00E4               	movwf	??_setRFSW_AdjControl
  7882  1FDD  0864               	movf	??_setRFSW_AdjControl,w
  7883  1FDE  0086               	movwf	6
  7884  1FDF  3001               	movlw	1	; select bank2/3
  7885  1FE0  0087               	movwf	7
  7886  1FE1  0801               	movf	1,w
  7887  1FE2  00E5               	movwf	??_setRFSW_AdjControl+1
  7888  1FE3  086E               	movf	_Product,w
  7889  1FE4  3E09               	addlw	9
  7890  1FE5  0086               	movwf	6
  7891  1FE6  3001               	movlw	1	; select bank2/3
  7892  1FE7  0087               	movwf	7
  7893  1FE8  0865               	movf	??_setRFSW_AdjControl+1,w
  7894  1FE9  0081               	movwf	1
  7895  1FEA                     l2583:	
  7896                           
  7897                           ;RF_Control_B1.c: 420: }
  7898                           ;RF_Control_B1.c: 421: Product->Data[17]=Product->Data[26+sw];
  7899  1FEA  0020               	movlb	0	; select bank0
  7900  1FEB  0866               	movf	setRFSW_AdjControl@sw,w
  7901  1FEC  3E1A               	addlw	26
  7902  1FED  076E               	addwf	_Product,w
  7903  1FEE  00E4               	movwf	??_setRFSW_AdjControl
  7904  1FEF  0864               	movf	??_setRFSW_AdjControl,w
  7905  1FF0  0086               	movwf	6
  7906  1FF1  3001               	movlw	1	; select bank2/3
  7907  1FF2  0087               	movwf	7
  7908  1FF3  0801               	movf	1,w
  7909  1FF4  00E5               	movwf	??_setRFSW_AdjControl+1
  7910  1FF5  086E               	movf	_Product,w
  7911  1FF6  3E11               	addlw	17
  7912  1FF7  0086               	movwf	6
  7913  1FF8  3001               	movlw	1	; select bank2/3
  7914  1FF9  0087               	movwf	7
  7915  1FFA  0865               	movf	??_setRFSW_AdjControl+1,w
  7916  1FFB  0081               	movwf	1
  7917                           
  7918                           ;RF_Control_B1.c: 422: setTxData(1);
  7919  1FFC  3001               	movlw	1
  7920  1FFD  3187  271C         	fcall	_setTxData
  7921  1FFF  0008               	return
  7922  2000                     __end_of_setRFSW_AdjControl:	
  7923                           
  7924                           	psect	text30
  7925  1000                     __ptext30:	
  7926 ;; *************** function _setRF_DimmerValue *****************
  7927 ;; Defined at:
  7928 ;;		line 433 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
  7929 ;; Parameters:    Size  Location     Type
  7930 ;;  lights          1    wreg     unsigned char 
  7931 ;; Auto vars:     Size  Location     Type
  7932 ;;  lights          1   67[BANK0 ] unsigned char 
  7933 ;; Return value:  Size  Location     Type
  7934 ;;		None               void
  7935 ;; Registers used:
  7936 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7937 ;; Tracked objects:
  7938 ;;		On entry : 0/0
  7939 ;;		On exit  : 0/0
  7940 ;;		Unchanged: 0/0
  7941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7943 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7944 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7945 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7946 ;;Total ram usage:        3 bytes
  7947 ;; Hardware stack levels used:    1
  7948 ;; Hardware stack levels required when called:    8
  7949 ;; This function calls:
  7950 ;;		_setDimmerLights_AdjRF
  7951 ;; This function is called by:
  7952 ;;		_setRFSW_AdjControl
  7953 ;; This function uses a non-reentrant model
  7954 ;;
  7955                           
  7956                           
  7957                           ;psect for function _setRF_DimmerValue
  7958  1000                     _setRF_DimmerValue:	
  7959                           
  7960                           ;incstack = 0
  7961                           ; Regs used in _setRF_DimmerValue: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7962                           ;setRF_DimmerValue@lights stored from wreg
  7963  1000  0020               	movlb	0	; select bank0
  7964  1001  00E3               	movwf	setRF_DimmerValue@lights
  7965                           
  7966                           ;RF_Control_B1.c: 435: if(RF_Data[9] > 0x64)
  7967  1002  3065               	movlw	101
  7968  1003  0021               	movlb	1	; select bank1
  7969  1004  0229               	subwf	(_RF_Data^(0+128)+9),w
  7970  1005  1C03               	skipc
  7971  1006  280D               	goto	l8423
  7972                           
  7973                           ;RF_Control_B1.c: 436: {
  7974                           ;RF_Control_B1.c: 437: RF_Data[9]=0x64;
  7975  1007  3064               	movlw	100
  7976  1008  0020               	movlb	0	; select bank0
  7977  1009  00E1               	movwf	??_setRF_DimmerValue
  7978  100A  0861               	movf	??_setRF_DimmerValue,w
  7979  100B  0021               	movlb	1	; select bank1
  7980  100C  00A9               	movwf	(_RF_Data^(0+128)+9)
  7981  100D                     l8423:	
  7982                           
  7983                           ;RF_Control_B1.c: 438: }
  7984                           ;RF_Control_B1.c: 439: Product->Data[9]=RF_Data[9];
  7985  100D  0829               	movf	(_RF_Data^(0+128)+9),w
  7986  100E  0020               	movlb	0	; select bank0
  7987  100F  00E1               	movwf	??_setRF_DimmerValue
  7988  1010  086E               	movf	_Product,w
  7989  1011  3E09               	addlw	9
  7990  1012  0086               	movwf	6
  7991  1013  3001               	movlw	1	; select bank2/3
  7992  1014  0087               	movwf	7
  7993  1015  0861               	movf	??_setRF_DimmerValue,w
  7994  1016  0081               	movwf	1
  7995                           
  7996                           ;RF_Control_B1.c: 440: Product->Data[11]=lights;
  7997  1017  0863               	movf	setRF_DimmerValue@lights,w
  7998  1018  00E1               	movwf	??_setRF_DimmerValue
  7999  1019  086E               	movf	_Product,w
  8000  101A  3E0B               	addlw	11
  8001  101B  0086               	movwf	6
  8002  101C  3001               	movlw	1	; select bank2/3
  8003  101D  0087               	movwf	7
  8004  101E  0861               	movf	??_setRF_DimmerValue,w
  8005  101F  0081               	movwf	1
  8006                           
  8007                           ;RF_Control_B1.c: 441: Product->Data[(20+lights)]=Product->Data[9];
  8008  1020  086E               	movf	_Product,w
  8009  1021  3E09               	addlw	9
  8010  1022  0086               	movwf	6
  8011  1023  3001               	movlw	1	; select bank2/3
  8012  1024  0087               	movwf	7
  8013  1025  0801               	movf	1,w
  8014  1026  00E1               	movwf	??_setRF_DimmerValue
  8015  1027  0863               	movf	setRF_DimmerValue@lights,w
  8016  1028  3E14               	addlw	20
  8017  1029  076E               	addwf	_Product,w
  8018  102A  00E2               	movwf	??_setRF_DimmerValue+1
  8019  102B  0862               	movf	??_setRF_DimmerValue+1,w
  8020  102C  0086               	movwf	6
  8021  102D  3001               	movlw	1	; select bank2/3
  8022  102E  0087               	movwf	7
  8023  102F  0861               	movf	??_setRF_DimmerValue,w
  8024  1030  0081               	movwf	1
  8025                           
  8026                           ;RF_Control_B1.c: 442: setDimmerLights_AdjRF(lights);
  8027  1031  0863               	movf	setRF_DimmerValue@lights,w
  8028  1032  319D  253B         	fcall	_setDimmerLights_AdjRF
  8029  1034  0008               	return
  8030  1035                     __end_of_setRF_DimmerValue:	
  8031                           
  8032                           	psect	text31
  8033  1D3B                     __ptext31:	
  8034 ;; *************** function _setDimmerLights_AdjRF *****************
  8035 ;; Defined at:
  8036 ;;		line 423 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
  8037 ;; Parameters:    Size  Location     Type
  8038 ;;  lights          1    wreg     unsigned char 
  8039 ;; Auto vars:     Size  Location     Type
  8040 ;;  lights          1   64[BANK0 ] unsigned char 
  8041 ;; Return value:  Size  Location     Type
  8042 ;;		None               void
  8043 ;; Registers used:
  8044 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8045 ;; Tracked objects:
  8046 ;;		On entry : 0/0
  8047 ;;		On exit  : 0/0
  8048 ;;		Unchanged: 0/0
  8049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8051 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8052 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8053 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8054 ;;Total ram usage:        2 bytes
  8055 ;; Hardware stack levels used:    1
  8056 ;; Hardware stack levels required when called:    7
  8057 ;; This function calls:
  8058 ;;		_DimmerLightsPointSelect
  8059 ;;		_getPercentValue
  8060 ;; This function is called by:
  8061 ;;		_setRF_DimmerValue
  8062 ;; This function uses a non-reentrant model
  8063 ;;
  8064                           
  8065                           
  8066                           ;psect for function _setDimmerLights_AdjRF
  8067  1D3B                     _setDimmerLights_AdjRF:	
  8068                           
  8069                           ;incstack = 0
  8070                           ; Regs used in _setDimmerLights_AdjRF: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  8071                           ;setDimmerLights_AdjRF@lights stored from wreg
  8072  1D3B  0020               	movlb	0	; select bank0
  8073  1D3C  00E0               	movwf	setDimmerLights_AdjRF@lights
  8074                           
  8075                           ;Dimmer_B1.c: 425: DimmerLightsPointSelect(lights);
  8076  1D3D  0860               	movf	setDimmerLights_AdjRF@lights,w
  8077  1D3E  319A  22D4  319D   	fcall	_DimmerLightsPointSelect
  8078                           
  8079                           ;Dimmer_B1.c: 426: DimmerLights->AdjRF=1;
  8080  1D41  0020               	movlb	0	; select bank0
  8081  1D42  086A               	movf	_DimmerLights,w
  8082  1D43  0086               	movwf	6
  8083  1D44  3001               	movlw	1	; select bank2/3
  8084  1D45  0087               	movwf	7
  8085  1D46  1501               	bsf	1,2
  8086                           
  8087                           ;Dimmer_B1.c: 427: DimmerLights->Signal=1;
  8088  1D47  086A               	movf	_DimmerLights,w
  8089  1D48  0086               	movwf	6
  8090  1D49  3001               	movlw	1	; select bank2/3
  8091  1D4A  0087               	movwf	7
  8092  1D4B  1481               	bsf	1,1
  8093                           
  8094                           ;Dimmer_B1.c: 428: DimmerLights->MaxmumValue=getPercentValue(Product->Data[9]);
  8095  1D4C  086E               	movf	_Product,w
  8096  1D4D  3E09               	addlw	9
  8097  1D4E  0086               	movwf	6
  8098  1D4F  3001               	movlw	1	; select bank2/3
  8099  1D50  0087               	movwf	7
  8100  1D51  0801               	movf	1,w
  8101  1D52  3193  230B         	fcall	_getPercentValue
  8102  1D54  0020               	movlb	0	; select bank0
  8103  1D55  00DF               	movwf	??_setDimmerLights_AdjRF
  8104  1D56  086A               	movf	_DimmerLights,w
  8105  1D57  3E05               	addlw	5
  8106  1D58  0086               	movwf	6
  8107  1D59  3001               	movlw	1	; select bank2/3
  8108  1D5A  0087               	movwf	7
  8109  1D5B  085F               	movf	??_setDimmerLights_AdjRF,w
  8110  1D5C  0081               	movwf	1
  8111  1D5D  0008               	return
  8112  1D5E                     __end_of_setDimmerLights_AdjRF:	
  8113                           
  8114                           	psect	text32
  8115  130B                     __ptext32:	
  8116 ;; *************** function _getPercentValue *****************
  8117 ;; Defined at:
  8118 ;;		line 490 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
  8119 ;; Parameters:    Size  Location     Type
  8120 ;;  value           1    wreg     unsigned char 
  8121 ;; Auto vars:     Size  Location     Type
  8122 ;;  value           1   59[BANK0 ] unsigned char 
  8123 ;;  i               3   60[BANK0 ] float 
  8124 ;; Return value:  Size  Location     Type
  8125 ;;                  1    wreg      unsigned char 
  8126 ;; Registers used:
  8127 ;;		wreg, status,2, status,0, pclath, cstack
  8128 ;; Tracked objects:
  8129 ;;		On entry : 0/0
  8130 ;;		On exit  : 0/0
  8131 ;;		Unchanged: 0/0
  8132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8134 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8135 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8136 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8137 ;;Total ram usage:        6 bytes
  8138 ;; Hardware stack levels used:    1
  8139 ;; Hardware stack levels required when called:    6
  8140 ;; This function calls:
  8141 ;;		___awtoft
  8142 ;;		___ftadd
  8143 ;;		___ftdiv
  8144 ;;		___ftmul
  8145 ;;		___fttol
  8146 ;; This function is called by:
  8147 ;;		_setDimmerLights_AdjRF
  8148 ;; This function uses a non-reentrant model
  8149 ;;
  8150                           
  8151                           
  8152                           ;psect for function _getPercentValue
  8153  130B                     _getPercentValue:	
  8154                           
  8155                           ;incstack = 0
  8156                           ; Regs used in _getPercentValue: [wreg+status,2+status,0+pclath+cstack]
  8157                           ;getPercentValue@value stored from wreg
  8158  130B  0020               	movlb	0	; select bank0
  8159  130C  00DB               	movwf	getPercentValue@value
  8160                           
  8161                           ;Dimmer_B1.c: 493: float i=((char)((100-20)*1.5))-((char)((100-55)*1.5));
  8162  130D  3000               	movlw	0
  8163  130E  00DC               	movwf	getPercentValue@i
  8164  130F  3054               	movlw	84
  8165  1310  00DD               	movwf	getPercentValue@i+1
  8166  1311  3042               	movlw	66
  8167  1312  00DE               	movwf	getPercentValue@i+2
  8168                           
  8169                           ;Dimmer_B1.c: 494: i/=100;
  8170  1313  3000               	movlw	0
  8171  1314  00AE               	movwf	___ftdiv@f2
  8172  1315  30C8               	movlw	200
  8173  1316  00AF               	movwf	___ftdiv@f2+1
  8174  1317  3042               	movlw	66
  8175  1318  00B0               	movwf	___ftdiv@f2+2
  8176  1319  085C               	movf	getPercentValue@i,w
  8177  131A  00B1               	movwf	___ftdiv@f1
  8178  131B  085D               	movf	getPercentValue@i+1,w
  8179  131C  00B2               	movwf	___ftdiv@f1+1
  8180  131D  085E               	movf	getPercentValue@i+2,w
  8181  131E  00B3               	movwf	___ftdiv@f1+2
  8182  131F  318C  24C4  3193   	fcall	___ftdiv
  8183  1322  0020               	movlb	0	; select bank0
  8184  1323  082E               	movf	?___ftdiv,w
  8185  1324  00DC               	movwf	getPercentValue@i
  8186  1325  082F               	movf	?___ftdiv+1,w
  8187  1326  00DD               	movwf	getPercentValue@i+1
  8188  1327  0830               	movf	?___ftdiv+2,w
  8189  1328  00DE               	movwf	getPercentValue@i+2
  8190                           
  8191                           ;Dimmer_B1.c: 495: return (char)(((100-value)*i)+((char)((100-55)*1.5)));
  8192  1329  085B               	movf	getPercentValue@value,w
  8193  132A  00D9               	movwf	??_getPercentValue
  8194  132B  01DA               	clrf	??_getPercentValue+1
  8195  132C  09D9               	comf	??_getPercentValue,f
  8196  132D  09DA               	comf	??_getPercentValue+1,f
  8197  132E  0AD9               	incf	??_getPercentValue,f
  8198  132F  1903               	skipnz
  8199  1330  0ADA               	incf	??_getPercentValue+1,f
  8200  1331  0859               	movf	??_getPercentValue,w
  8201  1332  3E64               	addlw	100
  8202  1333  00A8               	movwf	___awtoft@c
  8203  1334  3000               	movlw	0
  8204  1335  3D5A               	addwfc	??_getPercentValue+1,w
  8205  1336  00A9               	movwf	___awtoft@c+1
  8206  1337  319C  24D4  3193   	fcall	___awtoft
  8207  133A  0020               	movlb	0	; select bank0
  8208  133B  0828               	movf	?___awtoft,w
  8209  133C  00B1               	movwf	___ftmul@f2
  8210  133D  0829               	movf	?___awtoft+1,w
  8211  133E  00B2               	movwf	___ftmul@f2+1
  8212  133F  082A               	movf	?___awtoft+2,w
  8213  1340  00B3               	movwf	___ftmul@f2+2
  8214  1341  085C               	movf	getPercentValue@i,w
  8215  1342  00AE               	movwf	___ftmul@f1
  8216  1343  085D               	movf	getPercentValue@i+1,w
  8217  1344  00AF               	movwf	___ftmul@f1+1
  8218  1345  085E               	movf	getPercentValue@i+2,w
  8219  1346  00B0               	movwf	___ftmul@f1+2
  8220  1347  318D  256D  3193   	fcall	___ftmul
  8221  134A  0020               	movlb	0	; select bank0
  8222  134B  082E               	movf	?___ftmul,w
  8223  134C  00C1               	movwf	___ftadd@f2
  8224  134D  082F               	movf	?___ftmul+1,w
  8225  134E  00C2               	movwf	___ftadd@f2+1
  8226  134F  0830               	movf	?___ftmul+2,w
  8227  1350  00C3               	movwf	___ftadd@f2+2
  8228  1351  3000               	movlw	0
  8229  1352  00BE               	movwf	___ftadd@f1
  8230  1353  3086               	movlw	134
  8231  1354  00BF               	movwf	___ftadd@f1+1
  8232  1355  3042               	movlw	66
  8233  1356  00C0               	movwf	___ftadd@f1+2
  8234  1357  318F  270A  3193   	fcall	___ftadd
  8235  135A  0020               	movlb	0	; select bank0
  8236  135B  083E               	movf	?___ftadd,w
  8237  135C  00CB               	movwf	___fttol@f1
  8238  135D  083F               	movf	?___ftadd+1,w
  8239  135E  00CC               	movwf	___fttol@f1+1
  8240  135F  0840               	movf	?___ftadd+2,w
  8241  1360  00CD               	movwf	___fttol@f1+2
  8242  1361  3189  215E         	fcall	___fttol
  8243  1363  0020               	movlb	0	; select bank0
  8244  1364  084B               	movf	?___fttol,w
  8245  1365  0008               	return
  8246  1366                     __end_of_getPercentValue:	
  8247                           
  8248                           	psect	text33
  8249  0D6D                     __ptext33:	
  8250 ;; *************** function ___ftmul *****************
  8251 ;; Defined at:
  8252 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\ftmul.c"
  8253 ;; Parameters:    Size  Location     Type
  8254 ;;  f1              3   14[BANK0 ] float 
  8255 ;;  f2              3   17[BANK0 ] float 
  8256 ;; Auto vars:     Size  Location     Type
  8257 ;;  f3_as_produc    3   25[BANK0 ] unsigned um
  8258 ;;  sign            1   29[BANK0 ] unsigned char 
  8259 ;;  cntr            1   28[BANK0 ] unsigned char 
  8260 ;;  exp             1   24[BANK0 ] unsigned char 
  8261 ;; Return value:  Size  Location     Type
  8262 ;;                  3   14[BANK0 ] float 
  8263 ;; Registers used:
  8264 ;;		wreg, status,2, status,0, pclath, cstack
  8265 ;; Tracked objects:
  8266 ;;		On entry : 0/0
  8267 ;;		On exit  : 0/0
  8268 ;;		Unchanged: 0/0
  8269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8270 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8271 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8272 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8273 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8274 ;;Total ram usage:       16 bytes
  8275 ;; Hardware stack levels used:    1
  8276 ;; Hardware stack levels required when called:    5
  8277 ;; This function calls:
  8278 ;;		___ftpack
  8279 ;; This function is called by:
  8280 ;;		_getPercentValue
  8281 ;; This function uses a non-reentrant model
  8282 ;;
  8283                           
  8284                           
  8285                           ;psect for function ___ftmul
  8286  0D6D                     ___ftmul:	
  8287                           
  8288                           ;incstack = 0
  8289                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  8290  0D6D  0020               	movlb	0	; select bank0
  8291  0D6E  082E               	movf	___ftmul@f1,w
  8292  0D6F  00B4               	movwf	??___ftmul
  8293  0D70  082F               	movf	___ftmul@f1+1,w
  8294  0D71  00B5               	movwf	??___ftmul+1
  8295  0D72  0830               	movf	___ftmul@f1+2,w
  8296  0D73  00B6               	movwf	??___ftmul+2
  8297  0D74  1003               	clrc
  8298  0D75  0D35               	rlf	??___ftmul+1,w
  8299  0D76  0D36               	rlf	??___ftmul+2,w
  8300  0D77  00B7               	movwf	??___ftmul+3
  8301  0D78  0837               	movf	??___ftmul+3,w
  8302  0D79  00B8               	movwf	___ftmul@exp
  8303  0D7A  08B8               	movf	___ftmul@exp,f
  8304  0D7B  1D03               	skipz
  8305  0D7C  2D84               	goto	l8081
  8306  0D7D  3000               	movlw	0
  8307  0D7E  00AE               	movwf	?___ftmul
  8308  0D7F  3000               	movlw	0
  8309  0D80  00AF               	movwf	?___ftmul+1
  8310  0D81  3000               	movlw	0
  8311  0D82  00B0               	movwf	?___ftmul+2
  8312  0D83  0008               	return
  8313  0D84                     l8081:	
  8314  0D84  0831               	movf	___ftmul@f2,w
  8315  0D85  00B4               	movwf	??___ftmul
  8316  0D86  0832               	movf	___ftmul@f2+1,w
  8317  0D87  00B5               	movwf	??___ftmul+1
  8318  0D88  0833               	movf	___ftmul@f2+2,w
  8319  0D89  00B6               	movwf	??___ftmul+2
  8320  0D8A  1003               	clrc
  8321  0D8B  0D35               	rlf	??___ftmul+1,w
  8322  0D8C  0D36               	rlf	??___ftmul+2,w
  8323  0D8D  00B7               	movwf	??___ftmul+3
  8324  0D8E  0837               	movf	??___ftmul+3,w
  8325  0D8F  00BD               	movwf	___ftmul@sign
  8326  0D90  08BD               	movf	___ftmul@sign,f
  8327  0D91  1D03               	skipz
  8328  0D92  2D9A               	goto	l8087
  8329  0D93  3000               	movlw	0
  8330  0D94  00AE               	movwf	?___ftmul
  8331  0D95  3000               	movlw	0
  8332  0D96  00AF               	movwf	?___ftmul+1
  8333  0D97  3000               	movlw	0
  8334  0D98  00B0               	movwf	?___ftmul+2
  8335  0D99  0008               	return
  8336  0D9A                     l8087:	
  8337  0D9A  083D               	movf	___ftmul@sign,w
  8338  0D9B  3E7B               	addlw	123
  8339  0D9C  00B4               	movwf	??___ftmul
  8340  0D9D  0834               	movf	??___ftmul,w
  8341  0D9E  07B8               	addwf	___ftmul@exp,f
  8342  0D9F  082E               	movf	___ftmul@f1,w
  8343  0DA0  00B4               	movwf	??___ftmul
  8344  0DA1  082F               	movf	___ftmul@f1+1,w
  8345  0DA2  00B5               	movwf	??___ftmul+1
  8346  0DA3  0830               	movf	___ftmul@f1+2,w
  8347  0DA4  00B6               	movwf	??___ftmul+2
  8348  0DA5  3010               	movlw	16
  8349  0DA6                     u7685:	
  8350  0DA6  36B6               	lsrf	??___ftmul+2,f
  8351  0DA7  0CB5               	rrf	??___ftmul+1,f
  8352  0DA8  0CB4               	rrf	??___ftmul,f
  8353  0DA9  0B89               	decfsz	9,f
  8354  0DAA  2DA6               	goto	u7685
  8355  0DAB  0834               	movf	??___ftmul,w
  8356  0DAC  00B7               	movwf	??___ftmul+3
  8357  0DAD  0837               	movf	??___ftmul+3,w
  8358  0DAE  00BD               	movwf	___ftmul@sign
  8359  0DAF  0831               	movf	___ftmul@f2,w
  8360  0DB0  00B4               	movwf	??___ftmul
  8361  0DB1  0832               	movf	___ftmul@f2+1,w
  8362  0DB2  00B5               	movwf	??___ftmul+1
  8363  0DB3  0833               	movf	___ftmul@f2+2,w
  8364  0DB4  00B6               	movwf	??___ftmul+2
  8365  0DB5  3010               	movlw	16
  8366  0DB6                     u7695:	
  8367  0DB6  36B6               	lsrf	??___ftmul+2,f
  8368  0DB7  0CB5               	rrf	??___ftmul+1,f
  8369  0DB8  0CB4               	rrf	??___ftmul,f
  8370  0DB9  0B89               	decfsz	9,f
  8371  0DBA  2DB6               	goto	u7695
  8372  0DBB  0834               	movf	??___ftmul,w
  8373  0DBC  00B7               	movwf	??___ftmul+3
  8374  0DBD  0837               	movf	??___ftmul+3,w
  8375  0DBE  06BD               	xorwf	___ftmul@sign,f
  8376  0DBF  3080               	movlw	128
  8377  0DC0  00B4               	movwf	??___ftmul
  8378  0DC1  0834               	movf	??___ftmul,w
  8379  0DC2  05BD               	andwf	___ftmul@sign,f
  8380  0DC3  17AF               	bsf	___ftmul@f1+1,7
  8381  0DC4  17B2               	bsf	___ftmul@f2+1,7
  8382  0DC5  30FF               	movlw	255
  8383  0DC6  05B1               	andwf	___ftmul@f2,f
  8384  0DC7  30FF               	movlw	255
  8385  0DC8  05B2               	andwf	___ftmul@f2+1,f
  8386  0DC9  3000               	movlw	0
  8387  0DCA  05B3               	andwf	___ftmul@f2+2,f
  8388  0DCB  3000               	movlw	0
  8389  0DCC  00B9               	movwf	___ftmul@f3_as_product
  8390  0DCD  3000               	movlw	0
  8391  0DCE  00BA               	movwf	___ftmul@f3_as_product+1
  8392  0DCF  3000               	movlw	0
  8393  0DD0  00BB               	movwf	___ftmul@f3_as_product+2
  8394  0DD1  3007               	movlw	7
  8395  0DD2  00B4               	movwf	??___ftmul
  8396  0DD3  0834               	movf	??___ftmul,w
  8397  0DD4  00BC               	movwf	___ftmul@cntr
  8398  0DD5                     l8099:	
  8399  0DD5  1C2E               	btfss	___ftmul@f1,0
  8400  0DD6  2DDD               	goto	l8103
  8401  0DD7  0831               	movf	___ftmul@f2,w
  8402  0DD8  07B9               	addwf	___ftmul@f3_as_product,f
  8403  0DD9  0832               	movf	___ftmul@f2+1,w
  8404  0DDA  3DBA               	addwfc	___ftmul@f3_as_product+1,f
  8405  0DDB  0833               	movf	___ftmul@f2+2,w
  8406  0DDC  3DBB               	addwfc	___ftmul@f3_as_product+2,f
  8407  0DDD                     l8103:	
  8408  0DDD  3001               	movlw	1
  8409  0DDE                     u7715:	
  8410  0DDE  36B0               	lsrf	___ftmul@f1+2,f
  8411  0DDF  0CAF               	rrf	___ftmul@f1+1,f
  8412  0DE0  0CAE               	rrf	___ftmul@f1,f
  8413  0DE1  0B89               	decfsz	9,f
  8414  0DE2  2DDE               	goto	u7715
  8415  0DE3  3001               	movlw	1
  8416  0DE4                     u7725:	
  8417  0DE4  35B1               	lslf	___ftmul@f2,f
  8418  0DE5  0DB2               	rlf	___ftmul@f2+1,f
  8419  0DE6  0DB3               	rlf	___ftmul@f2+2,f
  8420  0DE7  0B89               	decfsz	9,f
  8421  0DE8  2DE4               	goto	u7725
  8422  0DE9  3001               	movlw	1
  8423  0DEA  02BC               	subwf	___ftmul@cntr,f
  8424  0DEB  1D03               	btfss	3,2
  8425  0DEC  2DD5               	goto	l8099
  8426  0DED  3009               	movlw	9
  8427  0DEE  00B4               	movwf	??___ftmul
  8428  0DEF  0834               	movf	??___ftmul,w
  8429  0DF0  00BC               	movwf	___ftmul@cntr
  8430  0DF1                     l8111:	
  8431  0DF1  1C2E               	btfss	___ftmul@f1,0
  8432  0DF2  2DF9               	goto	l8115
  8433  0DF3  0831               	movf	___ftmul@f2,w
  8434  0DF4  07B9               	addwf	___ftmul@f3_as_product,f
  8435  0DF5  0832               	movf	___ftmul@f2+1,w
  8436  0DF6  3DBA               	addwfc	___ftmul@f3_as_product+1,f
  8437  0DF7  0833               	movf	___ftmul@f2+2,w
  8438  0DF8  3DBB               	addwfc	___ftmul@f3_as_product+2,f
  8439  0DF9                     l8115:	
  8440  0DF9  3001               	movlw	1
  8441  0DFA                     u7755:	
  8442  0DFA  36B0               	lsrf	___ftmul@f1+2,f
  8443  0DFB  0CAF               	rrf	___ftmul@f1+1,f
  8444  0DFC  0CAE               	rrf	___ftmul@f1,f
  8445  0DFD  0B89               	decfsz	9,f
  8446  0DFE  2DFA               	goto	u7755
  8447  0DFF  3001               	movlw	1
  8448  0E00                     u7765:	
  8449  0E00  36BB               	lsrf	___ftmul@f3_as_product+2,f
  8450  0E01  0CBA               	rrf	___ftmul@f3_as_product+1,f
  8451  0E02  0CB9               	rrf	___ftmul@f3_as_product,f
  8452  0E03  0B89               	decfsz	9,f
  8453  0E04  2E00               	goto	u7765
  8454  0E05  3001               	movlw	1
  8455  0E06  02BC               	subwf	___ftmul@cntr,f
  8456  0E07  1D03               	btfss	3,2
  8457  0E08  2DF1               	goto	l8111
  8458  0E09  0839               	movf	___ftmul@f3_as_product,w
  8459  0E0A  00A0               	movwf	___ftpack@arg
  8460  0E0B  083A               	movf	___ftmul@f3_as_product+1,w
  8461  0E0C  00A1               	movwf	___ftpack@arg+1
  8462  0E0D  083B               	movf	___ftmul@f3_as_product+2,w
  8463  0E0E  00A2               	movwf	___ftpack@arg+2
  8464  0E0F  0838               	movf	___ftmul@exp,w
  8465  0E10  00B4               	movwf	??___ftmul
  8466  0E11  0834               	movf	??___ftmul,w
  8467  0E12  00A3               	movwf	___ftpack@exp
  8468  0E13  083D               	movf	___ftmul@sign,w
  8469  0E14  00B5               	movwf	??___ftmul+1
  8470  0E15  0835               	movf	??___ftmul+1,w
  8471  0E16  00A4               	movwf	___ftpack@sign
  8472  0E17  3193  23C4         	fcall	___ftpack
  8473  0E19  0020               	movlb	0	; select bank0
  8474  0E1A  0820               	movf	?___ftpack,w
  8475  0E1B  00AE               	movwf	?___ftmul
  8476  0E1C  0821               	movf	?___ftpack+1,w
  8477  0E1D  00AF               	movwf	?___ftmul+1
  8478  0E1E  0822               	movf	?___ftpack+2,w
  8479  0E1F  00B0               	movwf	?___ftmul+2
  8480  0E20  0008               	return
  8481  0E21                     __end_of___ftmul:	
  8482                           
  8483                           	psect	text34
  8484  0F0A                     __ptext34:	
  8485 ;; *************** function ___ftadd *****************
  8486 ;; Defined at:
  8487 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\ftadd.c"
  8488 ;; Parameters:    Size  Location     Type
  8489 ;;  f1              3   30[BANK0 ] float 
  8490 ;;  f2              3   33[BANK0 ] float 
  8491 ;; Auto vars:     Size  Location     Type
  8492 ;;  exp1            1   42[BANK0 ] unsigned char 
  8493 ;;  exp2            1   41[BANK0 ] unsigned char 
  8494 ;;  sign            1   40[BANK0 ] unsigned char 
  8495 ;; Return value:  Size  Location     Type
  8496 ;;                  3   30[BANK0 ] float 
  8497 ;; Registers used:
  8498 ;;		wreg, status,2, status,0, pclath, cstack
  8499 ;; Tracked objects:
  8500 ;;		On entry : 0/0
  8501 ;;		On exit  : 0/0
  8502 ;;		Unchanged: 0/0
  8503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8504 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8505 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8506 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8507 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8508 ;;Total ram usage:       13 bytes
  8509 ;; Hardware stack levels used:    1
  8510 ;; Hardware stack levels required when called:    5
  8511 ;; This function calls:
  8512 ;;		___ftpack
  8513 ;; This function is called by:
  8514 ;;		_getPercentValue
  8515 ;; This function uses a non-reentrant model
  8516 ;;
  8517                           
  8518                           
  8519                           ;psect for function ___ftadd
  8520  0F0A                     ___ftadd:	
  8521                           
  8522                           ;incstack = 0
  8523                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  8524  0F0A  0020               	movlb	0	; select bank0
  8525  0F0B  083E               	movf	___ftadd@f1,w
  8526  0F0C  00C4               	movwf	??___ftadd
  8527  0F0D  083F               	movf	___ftadd@f1+1,w
  8528  0F0E  00C5               	movwf	??___ftadd+1
  8529  0F0F  0840               	movf	___ftadd@f1+2,w
  8530  0F10  00C6               	movwf	??___ftadd+2
  8531  0F11  1003               	clrc
  8532  0F12  0D45               	rlf	??___ftadd+1,w
  8533  0F13  0D46               	rlf	??___ftadd+2,w
  8534  0F14  00C7               	movwf	??___ftadd+3
  8535  0F15  0847               	movf	??___ftadd+3,w
  8536  0F16  00CA               	movwf	___ftadd@exp1
  8537  0F17  0841               	movf	___ftadd@f2,w
  8538  0F18  00C4               	movwf	??___ftadd
  8539  0F19  0842               	movf	___ftadd@f2+1,w
  8540  0F1A  00C5               	movwf	??___ftadd+1
  8541  0F1B  0843               	movf	___ftadd@f2+2,w
  8542  0F1C  00C6               	movwf	??___ftadd+2
  8543  0F1D  1003               	clrc
  8544  0F1E  0D45               	rlf	??___ftadd+1,w
  8545  0F1F  0D46               	rlf	??___ftadd+2,w
  8546  0F20  00C7               	movwf	??___ftadd+3
  8547  0F21  0847               	movf	??___ftadd+3,w
  8548  0F22  00C9               	movwf	___ftadd@exp2
  8549  0F23  084A               	movf	___ftadd@exp1,w
  8550  0F24  1903               	btfsc	3,2
  8551  0F25  2F32               	goto	l7969
  8552  0F26  0849               	movf	___ftadd@exp2,w
  8553  0F27  024A               	subwf	___ftadd@exp1,w
  8554  0F28  1803               	skipnc
  8555  0F29  2F39               	goto	l7973
  8556  0F2A  034A               	decf	___ftadd@exp1,w
  8557  0F2B  3AFF               	xorlw	255
  8558  0F2C  0749               	addwf	___ftadd@exp2,w
  8559  0F2D  00C4               	movwf	??___ftadd
  8560  0F2E  3019               	movlw	25
  8561  0F2F  0244               	subwf	??___ftadd,w
  8562  0F30  1C03               	skipc
  8563  0F31  2F39               	goto	l7973
  8564  0F32                     l7969:	
  8565  0F32  0841               	movf	___ftadd@f2,w
  8566  0F33  00BE               	movwf	?___ftadd
  8567  0F34  0842               	movf	___ftadd@f2+1,w
  8568  0F35  00BF               	movwf	?___ftadd+1
  8569  0F36  0843               	movf	___ftadd@f2+2,w
  8570  0F37  00C0               	movwf	?___ftadd+2
  8571  0F38  0008               	return
  8572  0F39                     l7973:	
  8573  0F39  0849               	movf	___ftadd@exp2,w
  8574  0F3A  1903               	btfsc	3,2
  8575  0F3B  0008               	return
  8576  0F3C  084A               	movf	___ftadd@exp1,w
  8577  0F3D  0249               	subwf	___ftadd@exp2,w
  8578  0F3E  1803               	skipnc
  8579  0F3F  2F48               	goto	l7979
  8580  0F40  0349               	decf	___ftadd@exp2,w
  8581  0F41  3AFF               	xorlw	255
  8582  0F42  074A               	addwf	___ftadd@exp1,w
  8583  0F43  00C4               	movwf	??___ftadd
  8584  0F44  3019               	movlw	25
  8585  0F45  0244               	subwf	??___ftadd,w
  8586  0F46  1803               	btfsc	3,0
  8587  0F47  0008               	return
  8588  0F48                     l7979:	
  8589  0F48  3006               	movlw	6
  8590  0F49  00C4               	movwf	??___ftadd
  8591  0F4A  0844               	movf	??___ftadd,w
  8592  0F4B  00C8               	movwf	___ftadd@sign
  8593  0F4C  1BC0               	btfsc	___ftadd@f1+2,7
  8594  0F4D  17C8               	bsf	___ftadd@sign,7
  8595  0F4E  1BC3               	btfsc	___ftadd@f2+2,7
  8596  0F4F  1748               	bsf	___ftadd@sign,6
  8597  0F50  17BF               	bsf	___ftadd@f1+1,7
  8598  0F51  30FF               	movlw	255
  8599  0F52  05BE               	andwf	___ftadd@f1,f
  8600  0F53  30FF               	movlw	255
  8601  0F54  05BF               	andwf	___ftadd@f1+1,f
  8602  0F55  3000               	movlw	0
  8603  0F56  05C0               	andwf	___ftadd@f1+2,f
  8604  0F57  17C2               	bsf	___ftadd@f2+1,7
  8605  0F58  30FF               	movlw	255
  8606  0F59  05C1               	andwf	___ftadd@f2,f
  8607  0F5A  30FF               	movlw	255
  8608  0F5B  05C2               	andwf	___ftadd@f2+1,f
  8609  0F5C  3000               	movlw	0
  8610  0F5D  05C3               	andwf	___ftadd@f2+2,f
  8611  0F5E  0849               	movf	___ftadd@exp2,w
  8612  0F5F  024A               	subwf	___ftadd@exp1,w
  8613  0F60  1803               	skipnc
  8614  0F61  2F84               	goto	l8001
  8615  0F62                     l7991:	
  8616  0F62  3001               	movlw	1
  8617  0F63                     u7445:	
  8618  0F63  35C1               	lslf	___ftadd@f2,f
  8619  0F64  0DC2               	rlf	___ftadd@f2+1,f
  8620  0F65  0DC3               	rlf	___ftadd@f2+2,f
  8621  0F66  0B89               	decfsz	9,f
  8622  0F67  2F63               	goto	u7445
  8623  0F68  3001               	movlw	1
  8624  0F69  02C9               	subwf	___ftadd@exp2,f
  8625  0F6A  0849               	movf	___ftadd@exp2,w
  8626  0F6B  064A               	xorwf	___ftadd@exp1,w
  8627  0F6C  1903               	skipnz
  8628  0F6D  2F7F               	goto	l7999
  8629  0F6E  3001               	movlw	1
  8630  0F6F  02C8               	subwf	___ftadd@sign,f
  8631  0F70  0848               	movf	___ftadd@sign,w
  8632  0F71  3907               	andlw	7
  8633  0F72  1903               	btfsc	3,2
  8634  0F73  2F7F               	goto	l7999
  8635  0F74  2F62               	goto	l7991
  8636  0F75                     l7997:	
  8637  0F75  3001               	movlw	1
  8638  0F76                     u7475:	
  8639  0F76  36C0               	lsrf	___ftadd@f1+2,f
  8640  0F77  0CBF               	rrf	___ftadd@f1+1,f
  8641  0F78  0CBE               	rrf	___ftadd@f1,f
  8642  0F79  0B89               	decfsz	9,f
  8643  0F7A  2F76               	goto	u7475
  8644  0F7B  3001               	movlw	1
  8645  0F7C  00C4               	movwf	??___ftadd
  8646  0F7D  0844               	movf	??___ftadd,w
  8647  0F7E  07CA               	addwf	___ftadd@exp1,f
  8648  0F7F                     l7999:	
  8649  0F7F  084A               	movf	___ftadd@exp1,w
  8650  0F80  0649               	xorwf	___ftadd@exp2,w
  8651  0F81  1903               	btfsc	3,2
  8652  0F82  2FA9               	goto	l3264
  8653  0F83  2F75               	goto	l7997
  8654  0F84                     l8001:	
  8655  0F84  084A               	movf	___ftadd@exp1,w
  8656  0F85  0249               	subwf	___ftadd@exp2,w
  8657  0F86  1803               	skipnc
  8658  0F87  2FA9               	goto	l3264
  8659  0F88                     l8003:	
  8660  0F88  3001               	movlw	1
  8661  0F89                     u7505:	
  8662  0F89  35BE               	lslf	___ftadd@f1,f
  8663  0F8A  0DBF               	rlf	___ftadd@f1+1,f
  8664  0F8B  0DC0               	rlf	___ftadd@f1+2,f
  8665  0F8C  0B89               	decfsz	9,f
  8666  0F8D  2F89               	goto	u7505
  8667  0F8E  3001               	movlw	1
  8668  0F8F  02CA               	subwf	___ftadd@exp1,f
  8669  0F90  0849               	movf	___ftadd@exp2,w
  8670  0F91  064A               	xorwf	___ftadd@exp1,w
  8671  0F92  1903               	skipnz
  8672  0F93  2FA5               	goto	l8011
  8673  0F94  3001               	movlw	1
  8674  0F95  02C8               	subwf	___ftadd@sign,f
  8675  0F96  0848               	movf	___ftadd@sign,w
  8676  0F97  3907               	andlw	7
  8677  0F98  1903               	btfsc	3,2
  8678  0F99  2FA5               	goto	l8011
  8679  0F9A  2F88               	goto	l8003
  8680  0F9B                     l8009:	
  8681  0F9B  3001               	movlw	1
  8682  0F9C                     u7535:	
  8683  0F9C  36C3               	lsrf	___ftadd@f2+2,f
  8684  0F9D  0CC2               	rrf	___ftadd@f2+1,f
  8685  0F9E  0CC1               	rrf	___ftadd@f2,f
  8686  0F9F  0B89               	decfsz	9,f
  8687  0FA0  2F9C               	goto	u7535
  8688  0FA1  3001               	movlw	1
  8689  0FA2  00C4               	movwf	??___ftadd
  8690  0FA3  0844               	movf	??___ftadd,w
  8691  0FA4  07C9               	addwf	___ftadd@exp2,f
  8692  0FA5                     l8011:	
  8693  0FA5  084A               	movf	___ftadd@exp1,w
  8694  0FA6  0649               	xorwf	___ftadd@exp2,w
  8695  0FA7  1D03               	skipz
  8696  0FA8  2F9B               	goto	l8009
  8697  0FA9                     l3264:	
  8698  0FA9  1FC8               	btfss	___ftadd@sign,7
  8699  0FAA  2FBB               	goto	l8015
  8700  0FAB  30FF               	movlw	255
  8701  0FAC  06BE               	xorwf	___ftadd@f1,f
  8702  0FAD  30FF               	movlw	255
  8703  0FAE  06BF               	xorwf	___ftadd@f1+1,f
  8704  0FAF  30FF               	movlw	255
  8705  0FB0  06C0               	xorwf	___ftadd@f1+2,f
  8706  0FB1  3001               	movlw	1
  8707  0FB2  07BE               	addwf	___ftadd@f1,f
  8708  0FB3  3000               	movlw	0
  8709  0FB4  1803               	skipnc
  8710  0FB5  3001               	movlw	1
  8711  0FB6  07BF               	addwf	___ftadd@f1+1,f
  8712  0FB7  3000               	movlw	0
  8713  0FB8  1803               	skipnc
  8714  0FB9  3001               	movlw	1
  8715  0FBA  07C0               	addwf	___ftadd@f1+2,f
  8716  0FBB                     l8015:	
  8717  0FBB  1F48               	btfss	___ftadd@sign,6
  8718  0FBC  2FCD               	goto	l8019
  8719  0FBD  30FF               	movlw	255
  8720  0FBE  06C1               	xorwf	___ftadd@f2,f
  8721  0FBF  30FF               	movlw	255
  8722  0FC0  06C2               	xorwf	___ftadd@f2+1,f
  8723  0FC1  30FF               	movlw	255
  8724  0FC2  06C3               	xorwf	___ftadd@f2+2,f
  8725  0FC3  3001               	movlw	1
  8726  0FC4  07C1               	addwf	___ftadd@f2,f
  8727  0FC5  3000               	movlw	0
  8728  0FC6  1803               	skipnc
  8729  0FC7  3001               	movlw	1
  8730  0FC8  07C2               	addwf	___ftadd@f2+1,f
  8731  0FC9  3000               	movlw	0
  8732  0FCA  1803               	skipnc
  8733  0FCB  3001               	movlw	1
  8734  0FCC  07C3               	addwf	___ftadd@f2+2,f
  8735  0FCD                     l8019:	
  8736  0FCD  01C8               	clrf	___ftadd@sign
  8737  0FCE  083E               	movf	___ftadd@f1,w
  8738  0FCF  07C1               	addwf	___ftadd@f2,f
  8739  0FD0  083F               	movf	___ftadd@f1+1,w
  8740  0FD1  3DC2               	addwfc	___ftadd@f2+1,f
  8741  0FD2  0840               	movf	___ftadd@f1+2,w
  8742  0FD3  3DC3               	addwfc	___ftadd@f2+2,f
  8743  0FD4  1FC3               	btfss	___ftadd@f2+2,7
  8744  0FD5  2FE8               	goto	l8029
  8745  0FD6  30FF               	movlw	255
  8746  0FD7  06C1               	xorwf	___ftadd@f2,f
  8747  0FD8  30FF               	movlw	255
  8748  0FD9  06C2               	xorwf	___ftadd@f2+1,f
  8749  0FDA  30FF               	movlw	255
  8750  0FDB  06C3               	xorwf	___ftadd@f2+2,f
  8751  0FDC  3001               	movlw	1
  8752  0FDD  07C1               	addwf	___ftadd@f2,f
  8753  0FDE  3000               	movlw	0
  8754  0FDF  1803               	skipnc
  8755  0FE0  3001               	movlw	1
  8756  0FE1  07C2               	addwf	___ftadd@f2+1,f
  8757  0FE2  3000               	movlw	0
  8758  0FE3  1803               	skipnc
  8759  0FE4  3001               	movlw	1
  8760  0FE5  07C3               	addwf	___ftadd@f2+2,f
  8761  0FE6  01C8               	clrf	___ftadd@sign
  8762  0FE7  0AC8               	incf	___ftadd@sign,f
  8763  0FE8                     l8029:	
  8764  0FE8  0841               	movf	___ftadd@f2,w
  8765  0FE9  00A0               	movwf	___ftpack@arg
  8766  0FEA  0842               	movf	___ftadd@f2+1,w
  8767  0FEB  00A1               	movwf	___ftpack@arg+1
  8768  0FEC  0843               	movf	___ftadd@f2+2,w
  8769  0FED  00A2               	movwf	___ftpack@arg+2
  8770  0FEE  084A               	movf	___ftadd@exp1,w
  8771  0FEF  00C4               	movwf	??___ftadd
  8772  0FF0  0844               	movf	??___ftadd,w
  8773  0FF1  00A3               	movwf	___ftpack@exp
  8774  0FF2  0848               	movf	___ftadd@sign,w
  8775  0FF3  00C5               	movwf	??___ftadd+1
  8776  0FF4  0845               	movf	??___ftadd+1,w
  8777  0FF5  00A4               	movwf	___ftpack@sign
  8778  0FF6  3193  23C4         	fcall	___ftpack
  8779  0FF8  0020               	movlb	0	; select bank0
  8780  0FF9  0820               	movf	?___ftpack,w
  8781  0FFA  00BE               	movwf	?___ftadd
  8782  0FFB  0821               	movf	?___ftpack+1,w
  8783  0FFC  00BF               	movwf	?___ftadd+1
  8784  0FFD  0822               	movf	?___ftpack+2,w
  8785  0FFE  00C0               	movwf	?___ftadd+2
  8786  0FFF  0008               	return
  8787  1000                     __end_of___ftadd:	
  8788                           
  8789                           	psect	text35
  8790  1DA9                     __ptext35:	
  8791 ;; *************** function _RF_RxDisable *****************
  8792 ;; Defined at:
  8793 ;;		line 199 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
  8794 ;; Parameters:    Size  Location     Type
  8795 ;;  rf              1    wreg     unsigned char 
  8796 ;; Auto vars:     Size  Location     Type
  8797 ;;  rf              1    4[BANK0 ] unsigned char 
  8798 ;; Return value:  Size  Location     Type
  8799 ;;		None               void
  8800 ;; Registers used:
  8801 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8802 ;; Tracked objects:
  8803 ;;		On entry : 0/0
  8804 ;;		On exit  : 0/0
  8805 ;;		Unchanged: 0/0
  8806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8808 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8810 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8811 ;;Total ram usage:        1 bytes
  8812 ;; Hardware stack levels used:    1
  8813 ;; Hardware stack levels required when called:    6
  8814 ;; This function calls:
  8815 ;;		_CC2500_WriteCommand
  8816 ;;		_RfPointSelect
  8817 ;;		_setINT_GO
  8818 ;; This function is called by:
  8819 ;;		_setRF_Main
  8820 ;; This function uses a non-reentrant model
  8821 ;;
  8822                           
  8823                           
  8824                           ;psect for function _RF_RxDisable
  8825  1DA9                     _RF_RxDisable:	
  8826                           
  8827                           ;incstack = 0
  8828                           ; Regs used in _RF_RxDisable: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8829                           ;RF_RxDisable@rf stored from wreg
  8830  1DA9  0020               	movlb	0	; select bank0
  8831  1DAA  00A4               	movwf	RF_RxDisable@rf
  8832                           
  8833                           ;RF_Control_B1.c: 201: RfPointSelect(rf);
  8834  1DAB  0824               	movf	RF_RxDisable@rf,w
  8835  1DAC  3199  218E  319D   	fcall	_RfPointSelect
  8836                           
  8837                           ;RF_Control_B1.c: 203: if(RF->RxStatus)
  8838  1DAF  0877               	movf	_RF,w
  8839  1DB0  0086               	movwf	6
  8840  1DB1  0187               	clrf	7
  8841  1DB2  1D81               	btfss	1,3
  8842  1DB3  0008               	return
  8843                           
  8844                           ;RF_Control_B1.c: 204: {
  8845                           ;RF_Control_B1.c: 205: RF->RxStatus=0;
  8846  1DB4  0877               	movf	_RF,w
  8847  1DB5  0086               	movwf	6
  8848  1DB6  0187               	clrf	7
  8849  1DB7  1181               	bcf	1,3
  8850                           
  8851                           ;RF_Control_B1.c: 206: RF->ReceiveGO=0;
  8852  1DB8  0877               	movf	_RF,w
  8853  1DB9  0086               	movwf	6
  8854  1DBA  0187               	clrf	7
  8855  1DBB  1081               	bcf	1,1
  8856                           
  8857                           ;RF_Control_B1.c: 207: RF->DebounceTime=0;
  8858  1DBC  0A77               	incf	_RF,w
  8859  1DBD  0086               	movwf	6
  8860  1DBE  0187               	clrf	7
  8861  1DBF  0181               	clrf	1
  8862                           
  8863                           ;RF_Control_B1.c: 208: RF->Debounce=0;
  8864  1DC0  0877               	movf	_RF,w
  8865  1DC1  0086               	movwf	6
  8866  1DC2  0187               	clrf	7
  8867  1DC3  1281               	bcf	1,5
  8868                           
  8869                           ;RF_Control_B1.c: 209: CC2500_WriteCommand(0x36);
  8870  1DC4  3036               	movlw	54
  8871  1DC5  319A  2263  319D   	fcall	_CC2500_WriteCommand
  8872                           
  8873                           ;RF_Control_B1.c: 210: CC2500_WriteCommand(0x3A);
  8874  1DC8  303A               	movlw	58
  8875  1DC9  319A  2263  319D   	fcall	_CC2500_WriteCommand
  8876                           
  8877                           ;RF_Control_B1.c: 211: setINT_GO(0);
  8878  1DCC  3000               	movlw	0
  8879  1DCD  3199  2165         	fcall	_setINT_GO
  8880  1DCF  0008               	return
  8881  1DD0                     __end_of_RF_RxDisable:	
  8882                           
  8883                           	psect	text36
  8884  10FA                     __ptext36:	
  8885 ;; *************** function _CC2500_TxData *****************
  8886 ;; Defined at:
  8887 ;;		line 30 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
  8888 ;; Parameters:    Size  Location     Type
  8889 ;;		None
  8890 ;; Auto vars:     Size  Location     Type
  8891 ;;  loop_e          1    5[BANK0 ] unsigned char 
  8892 ;; Return value:  Size  Location     Type
  8893 ;;		None               void
  8894 ;; Registers used:
  8895 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8896 ;; Tracked objects:
  8897 ;;		On entry : 0/0
  8898 ;;		On exit  : 0/0
  8899 ;;		Unchanged: 0/0
  8900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8902 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8903 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8904 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8905 ;;Total ram usage:        2 bytes
  8906 ;; Hardware stack levels used:    1
  8907 ;; Hardware stack levels required when called:    6
  8908 ;; This function calls:
  8909 ;;		_CC2500_WriteByte
  8910 ;;		_CC2500_WriteCommand
  8911 ;; This function is called by:
  8912 ;;		_setRF_Main
  8913 ;; This function uses a non-reentrant model
  8914 ;;
  8915                           
  8916                           
  8917                           ;psect for function _CC2500_TxData
  8918  10FA                     _CC2500_TxData:	
  8919                           
  8920                           ;CC2500_B1.c: 32: unsigned char loop_e;
  8921                           ;CC2500_B1.c: 34: RC4=0;
  8922                           
  8923                           ;incstack = 0
  8924                           ; Regs used in _CC2500_TxData: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8925  10FA  0020               	movlb	0	; select bank0
  8926  10FB  120E               	bcf	14,4	;volatile
  8927                           
  8928                           ;CC2500_B1.c: 35: SPI0Buffer=0x3F+0x40;
  8929  10FC  307F               	movlw	127
  8930  10FD  00A4               	movwf	??_CC2500_TxData
  8931  10FE  0824               	movf	??_CC2500_TxData,w
  8932  10FF  0021               	movlb	1	; select bank1
  8933  1100  00BE               	movwf	_SPI0Buffer^(0+128)
  8934  1101                     l299:	
  8935                           ;CC2500_B1.c: 36: while(RC2==1);
  8936                           
  8937  1101  0020               	movlb	0	; select bank0
  8938  1102  190E               	btfsc	14,2	;volatile
  8939  1103  2901               	goto	l299
  8940                           
  8941                           ;CC2500_B1.c: 37: CC2500_WriteByte();
  8942  1104  319B  23A6  3190   	fcall	_CC2500_WriteByte
  8943                           
  8944                           ;CC2500_B1.c: 38: SPI0Buffer=Tx_Length;
  8945  1107  0021               	movlb	1	; select bank1
  8946  1108  083F               	movf	_Tx_Length^(0+128),w
  8947  1109  0020               	movlb	0	; select bank0
  8948  110A  00A4               	movwf	??_CC2500_TxData
  8949  110B  0824               	movf	??_CC2500_TxData,w
  8950  110C  0021               	movlb	1	; select bank1
  8951  110D  00BE               	movwf	_SPI0Buffer^(0+128)
  8952                           
  8953                           ;CC2500_B1.c: 39: CC2500_WriteByte();
  8954  110E  319B  23A6  3190   	fcall	_CC2500_WriteByte
  8955                           
  8956                           ;CC2500_B1.c: 40: for(loop_e=0;loop_e<Tx_Length;loop_e++)
  8957  1111  0020               	movlb	0	; select bank0
  8958  1112  01A5               	clrf	CC2500_TxData@loop_e
  8959  1113                     l8727:	
  8960  1113  0021               	movlb	1	; select bank1
  8961  1114  083F               	movf	_Tx_Length^(0+128),w
  8962  1115  0020               	movlb	0	; select bank0
  8963  1116  0225               	subwf	CC2500_TxData@loop_e,w
  8964  1117  1803               	btfsc	3,0
  8965  1118  292B               	goto	l304
  8966                           
  8967                           ;CC2500_B1.c: 41: {
  8968                           ;CC2500_B1.c: 42: SPI0Buffer=RF_Data[loop_e];
  8969  1119  0825               	movf	CC2500_TxData@loop_e,w
  8970  111A  3EA0               	addlw	_RF_Data& (0+255)
  8971  111B  0086               	movwf	6
  8972  111C  0187               	clrf	7
  8973  111D  0801               	movf	1,w
  8974  111E  00A4               	movwf	??_CC2500_TxData
  8975  111F  0824               	movf	??_CC2500_TxData,w
  8976  1120  0021               	movlb	1	; select bank1
  8977  1121  00BE               	movwf	_SPI0Buffer^(0+128)
  8978                           
  8979                           ;CC2500_B1.c: 43: CC2500_WriteByte();
  8980  1122  319B  23A6  3190   	fcall	_CC2500_WriteByte
  8981  1125  3001               	movlw	1
  8982  1126  0020               	movlb	0	; select bank0
  8983  1127  00A4               	movwf	??_CC2500_TxData
  8984  1128  0824               	movf	??_CC2500_TxData,w
  8985  1129  07A5               	addwf	CC2500_TxData@loop_e,f
  8986  112A  2913               	goto	l8727
  8987  112B                     l304:	
  8988                           
  8989                           ;CC2500_B1.c: 44: }
  8990                           ;CC2500_B1.c: 45: RC4=1;
  8991  112B  160E               	bsf	14,4	;volatile
  8992                           
  8993                           ;CC2500_B1.c: 46: CC2500_WriteCommand(0x35);
  8994  112C  3035               	movlw	53
  8995  112D  319A  2263  3190   	fcall	_CC2500_WriteCommand
  8996  1130                     l305:	
  8997                           ;CC2500_B1.c: 47: while(RB0==0);
  8998                           
  8999  1130  0020               	movlb	0	; select bank0
  9000  1131  1C0D               	btfss	13,0	;volatile
  9001  1132  2930               	goto	l305
  9002  1133                     l308:	
  9003                           ;CC2500_B1.c: 48: while(RB0==1);
  9004                           
  9005  1133  180D               	btfsc	13,0	;volatile
  9006  1134  2933               	goto	l308
  9007                           
  9008                           ;CC2500_B1.c: 49: CC2500_WriteCommand(0x36);
  9009  1135  3036               	movlw	54
  9010  1136  319A  2263  3190   	fcall	_CC2500_WriteCommand
  9011                           
  9012                           ;CC2500_B1.c: 50: CC2500_WriteCommand(0x3B);
  9013  1139  303B               	movlw	59
  9014  113A  319A  2263         	fcall	_CC2500_WriteCommand
  9015                           
  9016                           ;CC2500_B1.c: 51: Transceive_OK=1;
  9017  113C  16F0               	bsf	_Transceive_OK/(0+8),_Transceive_OK& (0+7)
  9018  113D  0008               	return
  9019  113E                     __end_of_CC2500_TxData:	
  9020                           
  9021                           	psect	text37
  9022  1425                     __ptext37:	
  9023 ;; *************** function _CC2500_RxData *****************
  9024 ;; Defined at:
  9025 ;;		line 56 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
  9026 ;; Parameters:    Size  Location     Type
  9027 ;;		None
  9028 ;; Auto vars:     Size  Location     Type
  9029 ;;  loop_f          1    5[BANK0 ] unsigned char 
  9030 ;; Return value:  Size  Location     Type
  9031 ;;		None               void
  9032 ;; Registers used:
  9033 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9034 ;; Tracked objects:
  9035 ;;		On entry : 0/0
  9036 ;;		On exit  : 0/0
  9037 ;;		Unchanged: 0/0
  9038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9039 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9040 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9041 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9042 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9043 ;;Total ram usage:        2 bytes
  9044 ;; Hardware stack levels used:    1
  9045 ;; Hardware stack levels required when called:    6
  9046 ;; This function calls:
  9047 ;;		_CC2500_ReadByte
  9048 ;;		_CC2500_ReadStatus
  9049 ;;		_CC2500_WriteByte
  9050 ;;		_CC2500_WriteCommand
  9051 ;;		_setRF_RxStatus
  9052 ;; This function is called by:
  9053 ;;		_setRF_Main
  9054 ;; This function uses a non-reentrant model
  9055 ;;
  9056                           
  9057                           
  9058                           ;psect for function _CC2500_RxData
  9059  1425                     _CC2500_RxData:	
  9060                           
  9061                           ;CC2500_B1.c: 58: unsigned char loop_f;
  9062                           ;CC2500_B1.c: 62: if(RB0 == 1)
  9063                           
  9064                           ;incstack = 0
  9065                           ; Regs used in _CC2500_RxData: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9066  1425  0020               	movlb	0	; select bank0
  9067  1426  180D               	btfsc	13,0	;volatile
  9068  1427                     l315:	
  9069                           ;CC2500_B1.c: 63: {
  9070                           ;CC2500_B1.c: 64: while(RB0 == 1);
  9071                           
  9072  1427  180D               	btfsc	13,0	;volatile
  9073  1428  2C27               	goto	l315
  9074                           
  9075                           ;CC2500_B1.c: 65: }
  9076                           ;CC2500_B1.c: 66: CC2500_ReadStatus(0x3B);
  9077  1429  303B               	movlw	59
  9078  142A  3187  27E5  3194   	fcall	_CC2500_ReadStatus
  9079                           
  9080                           ;CC2500_B1.c: 67: if(s_data != 0)
  9081  142D  0021               	movlb	1	; select bank1
  9082  142E  0842               	movf	_s_data^(0+128),w
  9083  142F  1903               	btfsc	3,2
  9084  1430  2C7B               	goto	l8773
  9085                           
  9086                           ;CC2500_B1.c: 69: {
  9087                           ;CC2500_B1.c: 70: RC4=0;
  9088  1431  0020               	movlb	0	; select bank0
  9089  1432  120E               	bcf	14,4	;volatile
  9090                           
  9091                           ;CC2500_B1.c: 71: SPI0Buffer=0x3F+0xC0;
  9092  1433  30FF               	movlw	255
  9093  1434  00A4               	movwf	??_CC2500_RxData
  9094  1435  0824               	movf	??_CC2500_RxData,w
  9095  1436  0021               	movlb	1	; select bank1
  9096  1437  00BE               	movwf	_SPI0Buffer^(0+128)
  9097  1438                     l319:	
  9098                           ;CC2500_B1.c: 72: while(RC2==1);
  9099                           
  9100  1438  0020               	movlb	0	; select bank0
  9101  1439  190E               	btfsc	14,2	;volatile
  9102  143A  2C38               	goto	l319
  9103                           
  9104                           ;CC2500_B1.c: 73: CC2500_WriteByte();
  9105  143B  319B  23A6  3194   	fcall	_CC2500_WriteByte
  9106                           
  9107                           ;CC2500_B1.c: 75: CC2500_ReadByte();
  9108  143E  319C  245A  3194   	fcall	_CC2500_ReadByte
  9109                           
  9110                           ;CC2500_B1.c: 76: Rx_Length=SPI0Buffer;
  9111  1441  0021               	movlb	1	; select bank1
  9112  1442  083E               	movf	_SPI0Buffer^(0+128),w
  9113  1443  0020               	movlb	0	; select bank0
  9114  1444  00A4               	movwf	??_CC2500_RxData
  9115  1445  0824               	movf	??_CC2500_RxData,w
  9116  1446  0021               	movlb	1	; select bank1
  9117  1447  00BD               	movwf	_Rx_Length^(0+128)
  9118                           
  9119                           ;CC2500_B1.c: 77: for(loop_f=0;loop_f<Rx_Length;loop_f++)
  9120  1448  0020               	movlb	0	; select bank0
  9121  1449  01A5               	clrf	CC2500_RxData@loop_f
  9122  144A                     l8759:	
  9123  144A  0021               	movlb	1	; select bank1
  9124  144B  083D               	movf	_Rx_Length^(0+128),w
  9125  144C  0020               	movlb	0	; select bank0
  9126  144D  0225               	subwf	CC2500_RxData@loop_f,w
  9127  144E  1803               	btfsc	3,0
  9128  144F  2C62               	goto	l8761
  9129                           
  9130                           ;CC2500_B1.c: 78: {
  9131                           ;CC2500_B1.c: 79: CC2500_ReadByte();
  9132  1450  319C  245A  3194   	fcall	_CC2500_ReadByte
  9133                           
  9134                           ;CC2500_B1.c: 80: RF_Data[loop_f]=SPI0Buffer;
  9135  1453  0021               	movlb	1	; select bank1
  9136  1454  083E               	movf	_SPI0Buffer^(0+128),w
  9137  1455  0020               	movlb	0	; select bank0
  9138  1456  00A4               	movwf	??_CC2500_RxData
  9139  1457  0825               	movf	CC2500_RxData@loop_f,w
  9140  1458  3EA0               	addlw	_RF_Data& (0+255)
  9141  1459  0086               	movwf	6
  9142  145A  0187               	clrf	7
  9143  145B  0824               	movf	??_CC2500_RxData,w
  9144  145C  0081               	movwf	1
  9145  145D  3001               	movlw	1
  9146  145E  00A4               	movwf	??_CC2500_RxData
  9147  145F  0824               	movf	??_CC2500_RxData,w
  9148  1460  07A5               	addwf	CC2500_RxData@loop_f,f
  9149  1461  2C4A               	goto	l8759
  9150  1462                     l8761:	
  9151                           
  9152                           ;CC2500_B1.c: 81: }
  9153                           ;CC2500_B1.c: 82: CC2500_ReadByte();
  9154  1462  319C  245A  3194   	fcall	_CC2500_ReadByte
  9155                           
  9156                           ;CC2500_B1.c: 83: RSSI=SPI0Buffer;
  9157  1465  0021               	movlb	1	; select bank1
  9158  1466  083E               	movf	_SPI0Buffer^(0+128),w
  9159  1467  0020               	movlb	0	; select bank0
  9160  1468  00A4               	movwf	??_CC2500_RxData
  9161  1469  0824               	movf	??_CC2500_RxData,w
  9162  146A  0021               	movlb	1	; select bank1
  9163  146B  00BC               	movwf	_RSSI^(0+128)
  9164                           
  9165                           ;CC2500_B1.c: 84: CC2500_ReadByte();
  9166  146C  319C  245A  3194   	fcall	_CC2500_ReadByte
  9167                           
  9168                           ;CC2500_B1.c: 85: CRC=SPI0Buffer;
  9169  146F  0021               	movlb	1	; select bank1
  9170  1470  083E               	movf	_SPI0Buffer^(0+128),w
  9171  1471  0020               	movlb	0	; select bank0
  9172  1472  00A4               	movwf	??_CC2500_RxData
  9173  1473  0824               	movf	??_CC2500_RxData,w
  9174  1474  0021               	movlb	1	; select bank1
  9175  1475  00B7               	movwf	_CRC^(0+128)
  9176                           
  9177                           ;CC2500_B1.c: 86: RC4=1;
  9178  1476  0020               	movlb	0	; select bank0
  9179  1477  160E               	bsf	14,4	;volatile
  9180                           
  9181                           ;CC2500_B1.c: 87: if(CRC & 0x80)
  9182  1478  0021               	movlb	1	; select bank1
  9183  1479  1BB7               	btfsc	_CRC^(0+128),7
  9184                           
  9185                           ;CC2500_B1.c: 88: Receive_OK=1;
  9186  147A  1570               	bsf	_Receive_OK/(0+8),_Receive_OK& (0+7)
  9187  147B                     l8773:	
  9188                           
  9189                           ;CC2500_B1.c: 89: }
  9190                           ;CC2500_B1.c: 90: CC2500_WriteCommand(0x36);
  9191  147B  3036               	movlw	54
  9192  147C  319A  2263  3194   	fcall	_CC2500_WriteCommand
  9193                           
  9194                           ;CC2500_B1.c: 91: CC2500_WriteCommand(0x3A);
  9195  147F  303A               	movlw	58
  9196  1480  319A  2263  3194   	fcall	_CC2500_WriteCommand
  9197                           
  9198                           ;CC2500_B1.c: 92: setRF_RxStatus(1,0);
  9199  1483  0020               	movlb	0	; select bank0
  9200  1484  01A2               	clrf	setRF_RxStatus@command
  9201  1485  3001               	movlw	1
  9202  1486  319A  2229         	fcall	_setRF_RxStatus
  9203  1488  0008               	return
  9204  1489                     __end_of_CC2500_RxData:	
  9205                           
  9206                           	psect	text38
  9207  1A29                     __ptext38:	
  9208 ;; *************** function _setRF_RxStatus *****************
  9209 ;; Defined at:
  9210 ;;		line 43 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
  9211 ;; Parameters:    Size  Location     Type
  9212 ;;  rf              1    wreg     unsigned char 
  9213 ;;  command         1    2[BANK0 ] unsigned char 
  9214 ;; Auto vars:     Size  Location     Type
  9215 ;;  rf              1    3[BANK0 ] unsigned char 
  9216 ;; Return value:  Size  Location     Type
  9217 ;;		None               void
  9218 ;; Registers used:
  9219 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9220 ;; Tracked objects:
  9221 ;;		On entry : 0/0
  9222 ;;		On exit  : 0/0
  9223 ;;		Unchanged: 0/0
  9224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9225 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9226 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9227 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9228 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9229 ;;Total ram usage:        2 bytes
  9230 ;; Hardware stack levels used:    1
  9231 ;; Hardware stack levels required when called:    5
  9232 ;; This function calls:
  9233 ;;		_RfPointSelect
  9234 ;; This function is called by:
  9235 ;;		_CC2500_RxData
  9236 ;; This function uses a non-reentrant model
  9237 ;;
  9238                           
  9239                           
  9240                           ;psect for function _setRF_RxStatus
  9241  1A29                     _setRF_RxStatus:	
  9242                           
  9243                           ;incstack = 0
  9244                           ; Regs used in _setRF_RxStatus: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9245                           ;setRF_RxStatus@rf stored from wreg
  9246  1A29  0020               	movlb	0	; select bank0
  9247  1A2A  00A3               	movwf	setRF_RxStatus@rf
  9248                           
  9249                           ;RF_Control_B1.c: 45: RfPointSelect(rf);
  9250  1A2B  0823               	movf	setRF_RxStatus@rf,w
  9251  1A2C  3199  218E         	fcall	_RfPointSelect
  9252                           
  9253                           ;RF_Control_B1.c: 46: RF->RxStatus=command;
  9254  1A2E  0877               	movf	_RF,w
  9255  1A2F  0086               	movwf	6
  9256  1A30  0187               	clrf	7
  9257  1A31  0020               	movlb	0	; select bank0
  9258  1A32  0822               	movf	setRF_RxStatus@command,w
  9259  1A33  1181               	bcf	1,3
  9260  1A34  1D03               	skipz
  9261  1A35  1581               	bsf	1,3
  9262  1A36  0008               	return
  9263  1A37                     __end_of_setRF_RxStatus:	
  9264                           
  9265                           	psect	text39
  9266  07E5                     __ptext39:	
  9267 ;; *************** function _CC2500_ReadStatus *****************
  9268 ;; Defined at:
  9269 ;;		line 267 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
  9270 ;; Parameters:    Size  Location     Type
  9271 ;;  status_addr     1    wreg     unsigned char 
  9272 ;; Auto vars:     Size  Location     Type
  9273 ;;  status_addr     1    3[BANK0 ] unsigned char 
  9274 ;; Return value:  Size  Location     Type
  9275 ;;		None               void
  9276 ;; Registers used:
  9277 ;;		wreg, status,2, status,0, pclath, cstack
  9278 ;; Tracked objects:
  9279 ;;		On entry : 0/0
  9280 ;;		On exit  : 0/0
  9281 ;;		Unchanged: 0/0
  9282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9284 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9285 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9286 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9287 ;;Total ram usage:        2 bytes
  9288 ;; Hardware stack levels used:    1
  9289 ;; Hardware stack levels required when called:    5
  9290 ;; This function calls:
  9291 ;;		_CC2500_ReadByte
  9292 ;;		_CC2500_WriteByte
  9293 ;; This function is called by:
  9294 ;;		_CC2500_RxData
  9295 ;; This function uses a non-reentrant model
  9296 ;;
  9297                           
  9298                           
  9299                           ;psect for function _CC2500_ReadStatus
  9300  07E5                     _CC2500_ReadStatus:	
  9301                           
  9302                           ;incstack = 0
  9303                           ; Regs used in _CC2500_ReadStatus: [wreg+status,2+status,0+pclath+cstack]
  9304                           ;CC2500_ReadStatus@status_addr stored from wreg
  9305  07E5  0020               	movlb	0	; select bank0
  9306  07E6  00A3               	movwf	CC2500_ReadStatus@status_addr
  9307                           
  9308                           ;CC2500_B1.c: 269: RC4=0;
  9309  07E7  120E               	bcf	14,4	;volatile
  9310                           
  9311                           ;CC2500_B1.c: 270: SPI0Buffer=status_addr+0xC0;
  9312  07E8  0823               	movf	CC2500_ReadStatus@status_addr,w
  9313  07E9  3EC0               	addlw	192
  9314  07EA  00A2               	movwf	??_CC2500_ReadStatus
  9315  07EB  0822               	movf	??_CC2500_ReadStatus,w
  9316  07EC  0021               	movlb	1	; select bank1
  9317  07ED  00BE               	movwf	_SPI0Buffer^(0+128)
  9318  07EE                     l395:	
  9319                           ;CC2500_B1.c: 272: while(RC2==1);
  9320                           
  9321  07EE  0020               	movlb	0	; select bank0
  9322  07EF  190E               	btfsc	14,2	;volatile
  9323  07F0  2FEE               	goto	l395
  9324                           
  9325                           ;CC2500_B1.c: 274: CC2500_WriteByte();
  9326  07F1  319B  23A6  3187   	fcall	_CC2500_WriteByte
  9327                           
  9328                           ;CC2500_B1.c: 275: CC2500_ReadByte();
  9329  07F4  319C  245A         	fcall	_CC2500_ReadByte
  9330                           
  9331                           ;CC2500_B1.c: 276: RC4=1;
  9332  07F6  0020               	movlb	0	; select bank0
  9333  07F7  160E               	bsf	14,4	;volatile
  9334                           
  9335                           ;CC2500_B1.c: 278: s_data=SPI0Buffer;
  9336  07F8  0021               	movlb	1	; select bank1
  9337  07F9  083E               	movf	_SPI0Buffer^(0+128),w
  9338  07FA  0020               	movlb	0	; select bank0
  9339  07FB  00A2               	movwf	??_CC2500_ReadStatus
  9340  07FC  0822               	movf	??_CC2500_ReadStatus,w
  9341  07FD  0021               	movlb	1	; select bank1
  9342  07FE  00C2               	movwf	_s_data^(0+128)
  9343  07FF  0008               	return
  9344  0800                     __end_of_CC2500_ReadStatus:	
  9345                           
  9346                           	psect	text40
  9347  1C5A                     __ptext40:	
  9348 ;; *************** function _CC2500_ReadByte *****************
  9349 ;; Defined at:
  9350 ;;		line 210 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
  9351 ;; Parameters:    Size  Location     Type
  9352 ;;		None
  9353 ;; Auto vars:     Size  Location     Type
  9354 ;;  loop_b          1    1[BANK0 ] unsigned char 
  9355 ;; Return value:  Size  Location     Type
  9356 ;;		None               void
  9357 ;; Registers used:
  9358 ;;		wreg, status,2, status,0
  9359 ;; Tracked objects:
  9360 ;;		On entry : 0/0
  9361 ;;		On exit  : 0/0
  9362 ;;		Unchanged: 0/0
  9363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9365 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9366 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9367 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9368 ;;Total ram usage:        2 bytes
  9369 ;; Hardware stack levels used:    1
  9370 ;; Hardware stack levels required when called:    4
  9371 ;; This function calls:
  9372 ;;		Nothing
  9373 ;; This function is called by:
  9374 ;;		_CC2500_RxData
  9375 ;;		_CC2500_ReadStatus
  9376 ;;		_CC2500_ReadREG
  9377 ;; This function uses a non-reentrant model
  9378 ;;
  9379                           
  9380                           
  9381                           ;psect for function _CC2500_ReadByte
  9382  1C5A                     _CC2500_ReadByte:	
  9383                           
  9384                           ;CC2500_B1.c: 212: unsigned char loop_b;
  9385                           ;CC2500_B1.c: 213: for(loop_b=0;loop_b<8;loop_b++)
  9386                           
  9387                           ;incstack = 0
  9388                           ; Regs used in _CC2500_ReadByte: [wreg+status,2+status,0]
  9389  1C5A  0020               	movlb	0	; select bank0
  9390  1C5B  01A1               	clrf	CC2500_ReadByte@loop_b
  9391  1C5C                     L11:	
  9392  1C5C  3008               	movlw	8
  9393  1C5D  0221               	subwf	CC2500_ReadByte@loop_b,w
  9394  1C5E  1803               	btfsc	3,0
  9395  1C5F  0008               	return
  9396                           
  9397                           ;CC2500_B1.c: 214: {
  9398                           ;CC2500_B1.c: 215: RC1=1;
  9399  1C60  148E               	bsf	14,1	;volatile
  9400                           
  9401                           ;CC2500_B1.c: 216: SPI0Buffer<<=1;
  9402  1C61  1003               	clrc
  9403  1C62  0021               	movlb	1	; select bank1
  9404  1C63  0DBE               	rlf	_SPI0Buffer^(0+128),f
  9405                           
  9406                           ;CC2500_B1.c: 217: if(RC2 == 1)
  9407  1C64  0020               	movlb	0	; select bank0
  9408  1C65  1D0E               	btfss	14,2	;volatile
  9409  1C66  2C6A               	goto	l8459
  9410                           
  9411                           ;CC2500_B1.c: 218: SPI0Buffer |= 0x01;
  9412  1C67  0021               	movlb	1	; select bank1
  9413  1C68  143E               	bsf	_SPI0Buffer^(0+128),0
  9414  1C69  2C70               	goto	l8461
  9415  1C6A                     l8459:	
  9416                           
  9417                           ;CC2500_B1.c: 219: else
  9418                           ;CC2500_B1.c: 220: SPI0Buffer &= 0xFE;
  9419  1C6A  30FE               	movlw	254
  9420  1C6B  0020               	movlb	0	; select bank0
  9421  1C6C  00A0               	movwf	??_CC2500_ReadByte
  9422  1C6D  0820               	movf	??_CC2500_ReadByte,w
  9423  1C6E  0021               	movlb	1	; select bank1
  9424  1C6F  05BE               	andwf	_SPI0Buffer^(0+128),f
  9425  1C70                     l8461:	
  9426                           
  9427                           ;CC2500_B1.c: 221: RC1=0;
  9428  1C70  0020               	movlb	0	; select bank0
  9429  1C71  108E               	bcf	14,1	;volatile
  9430  1C72  3001               	movlw	1
  9431  1C73  00A0               	movwf	??_CC2500_ReadByte
  9432  1C74  0820               	movf	??_CC2500_ReadByte,w
  9433  1C75  07A1               	addwf	CC2500_ReadByte@loop_b,f
  9434  1C76  2C5C               	goto	L11
  9435  1C77                     __end_of_CC2500_ReadByte:	
  9436                           
  9437                           	psect	text41
  9438  18F9                     __ptext41:	
  9439 ;; *************** function _RF_Initialization *****************
  9440 ;; Defined at:
  9441 ;;		line 17 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
  9442 ;; Parameters:    Size  Location     Type
  9443 ;;		None
  9444 ;; Auto vars:     Size  Location     Type
  9445 ;;		None
  9446 ;; Return value:  Size  Location     Type
  9447 ;;		None               void
  9448 ;; Registers used:
  9449 ;;		wreg, status,2, status,0, pclath, cstack
  9450 ;; Tracked objects:
  9451 ;;		On entry : 0/0
  9452 ;;		On exit  : 0/0
  9453 ;;		Unchanged: 0/0
  9454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9455 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9456 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9458 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9459 ;;Total ram usage:        0 bytes
  9460 ;; Hardware stack levels used:    1
  9461 ;; Hardware stack levels required when called:    5
  9462 ;; This function calls:
  9463 ;;		_setRF_Initialization
  9464 ;; This function is called by:
  9465 ;;		_main
  9466 ;; This function uses a non-reentrant model
  9467 ;;
  9468                           
  9469                           
  9470                           ;psect for function _RF_Initialization
  9471  18F9                     _RF_Initialization:	
  9472                           
  9473                           ;RF_Control_B1.c: 20: setRF_Initialization(1);
  9474                           
  9475                           ;incstack = 0
  9476                           ; Regs used in _RF_Initialization: [wreg+status,2+status,0+pclath+cstack]
  9477  18F9  3001               	movlw	1
  9478  18FA  3199  212D         	fcall	_setRF_Initialization
  9479  18FC  0008               	return
  9480  18FD                     __end_of_RF_Initialization:	
  9481                           
  9482                           	psect	text42
  9483  192D                     __ptext42:	
  9484 ;; *************** function _setRF_Initialization *****************
  9485 ;; Defined at:
  9486 ;;		line 50 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
  9487 ;; Parameters:    Size  Location     Type
  9488 ;;  rf              1    wreg     unsigned char 
  9489 ;; Auto vars:     Size  Location     Type
  9490 ;;  rf              1    0[COMMON] unsigned char 
  9491 ;; Return value:  Size  Location     Type
  9492 ;;		None               void
  9493 ;; Registers used:
  9494 ;;		wreg
  9495 ;; Tracked objects:
  9496 ;;		On entry : 0/0
  9497 ;;		On exit  : 0/0
  9498 ;;		Unchanged: 0/0
  9499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9500 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9501 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9502 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9503 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9504 ;;Total ram usage:        1 bytes
  9505 ;; Hardware stack levels used:    1
  9506 ;; Hardware stack levels required when called:    4
  9507 ;; This function calls:
  9508 ;;		Nothing
  9509 ;; This function is called by:
  9510 ;;		_RF_Initialization
  9511 ;; This function uses a non-reentrant model
  9512 ;;
  9513                           
  9514                           
  9515                           ;psect for function _setRF_Initialization
  9516  192D                     _setRF_Initialization:	
  9517                           
  9518                           ;RF_Control_B1.c: 54: Tx_Length=21;
  9519                           
  9520                           ;incstack = 0
  9521                           ; Regs used in _setRF_Initialization: [wreg]
  9522  192D  3015               	movlw	21
  9523  192E  0020               	movlb	0	; select bank0
  9524  192F  00A0               	movwf	??_setRF_Initialization
  9525  1930  0820               	movf	??_setRF_Initialization,w
  9526  1931  0021               	movlb	1	; select bank1
  9527  1932  00BF               	movwf	_Tx_Length^(0+128)
  9528  1933  0008               	return
  9529  1934                     __end_of_setRF_Initialization:	
  9530                           
  9531                           	psect	text43
  9532  18E0                     __ptext43:	
  9533 ;; *************** function _PowerFault_Main *****************
  9534 ;; Defined at:
  9535 ;;		line 22 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\PowerFault_B1.c"
  9536 ;; Parameters:    Size  Location     Type
  9537 ;;		None
  9538 ;; Auto vars:     Size  Location     Type
  9539 ;;		None
  9540 ;; Return value:  Size  Location     Type
  9541 ;;		None               void
  9542 ;; Registers used:
  9543 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9544 ;; Tracked objects:
  9545 ;;		On entry : 0/0
  9546 ;;		On exit  : 0/0
  9547 ;;		Unchanged: 0/0
  9548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9550 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9552 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9553 ;;Total ram usage:        0 bytes
  9554 ;; Hardware stack levels used:    1
  9555 ;; Hardware stack levels required when called:   10
  9556 ;; This function calls:
  9557 ;;		_setPowerFault_Main
  9558 ;; This function is called by:
  9559 ;;		_main
  9560 ;; This function uses a non-reentrant model
  9561 ;;
  9562                           
  9563                           
  9564                           ;psect for function _PowerFault_Main
  9565  18E0                     _PowerFault_Main:	
  9566                           
  9567                           ;PowerFault_B1.c: 25: setPowerFault_Main();
  9568                           
  9569                           ;incstack = 0
  9570                           ; Regs used in _PowerFault_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9571  18E0  3186  2614         	fcall	_setPowerFault_Main
  9572  18E2  0008               	return
  9573  18E3                     __end_of_PowerFault_Main:	
  9574                           
  9575                           	psect	text44
  9576  0614                     __ptext44:	
  9577 ;; *************** function _setPowerFault_Main *****************
  9578 ;; Defined at:
  9579 ;;		line 61 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\PowerFault_B1.c"
  9580 ;; Parameters:    Size  Location     Type
  9581 ;;		None
  9582 ;; Auto vars:     Size  Location     Type
  9583 ;;		None
  9584 ;; Return value:  Size  Location     Type
  9585 ;;		None               void
  9586 ;; Registers used:
  9587 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9588 ;; Tracked objects:
  9589 ;;		On entry : 0/0
  9590 ;;		On exit  : 0/0
  9591 ;;		Unchanged: 0/0
  9592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9595 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9596 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9597 ;;Total ram usage:        2 bytes
  9598 ;; Hardware stack levels used:    1
  9599 ;; Hardware stack levels required when called:    9
  9600 ;; This function calls:
  9601 ;;		_getTemp_Safe
  9602 ;;		_setPowerFault_Exceptions
  9603 ;; This function is called by:
  9604 ;;		_PowerFault_Main
  9605 ;; This function uses a non-reentrant model
  9606 ;;
  9607                           
  9608                           
  9609                           ;psect for function _setPowerFault_Main
  9610  0614                     _setPowerFault_Main:	
  9611                           
  9612                           ;PowerFault_B1.c: 63: if(PF->Enable)
  9613                           
  9614                           ;incstack = 0
  9615                           ; Regs used in _setPowerFault_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9616  0614  0876               	movf	_PF,w
  9617  0615  0086               	movwf	6
  9618  0616  3001               	movlw	1	; select bank2/3
  9619  0617  0087               	movwf	7
  9620  0618  1C01               	btfss	1,0
  9621  0619  0008               	return
  9622                           
  9623                           ;PowerFault_B1.c: 64: {
  9624                           ;PowerFault_B1.c: 65: if(PF->ADtoGO == 0)
  9625  061A  0876               	movf	_PF,w
  9626  061B  0086               	movwf	6
  9627  061C  3001               	movlw	1	; select bank2/3
  9628  061D  0087               	movwf	7
  9629  061E  1981               	btfsc	1,3
  9630  061F  2E5E               	goto	l9387
  9631                           
  9632                           ;PowerFault_B1.c: 66: {
  9633                           ;PowerFault_B1.c: 67: PF->Time++;
  9634  0620  0876               	movf	_PF,w
  9635  0621  3E06               	addlw	6
  9636  0622  0086               	movwf	6
  9637  0623  3001               	movlw	1	; select bank2/3
  9638  0624  0087               	movwf	7
  9639  0625  3001               	movlw	1
  9640  0626  0781               	addwf	1,f
  9641  0627  3141               	addfsr 1,1
  9642  0628  1803               	skipnc
  9643  0629  0A81               	incf	1,f
  9644                           
  9645                           ;PowerFault_B1.c: 69: {
  9646                           ;PowerFault_B1.c: 70: if(1 && getTemp_Safe())
  9647  062A  0876               	movf	_PF,w
  9648  062B  3E06               	addlw	6
  9649  062C  0086               	movwf	6
  9650  062D  3001               	movlw	1	; select bank2/3
  9651  062E  0087               	movwf	7
  9652  062F  3F40               	moviw [0]fsr1
  9653  0630  0020               	movlb	0	; select bank0
  9654  0631  00AD               	movwf	??_setPowerFault_Main
  9655  0632  3F41               	moviw [1]fsr1
  9656  0633  00AE               	movwf	??_setPowerFault_Main+1
  9657  0634  3002               	movlw	2
  9658  0635  022E               	subwf	??_setPowerFault_Main+1,w
  9659  0636  30BC               	movlw	188
  9660  0637  1903               	skipnz
  9661  0638  022D               	subwf	??_setPowerFault_Main,w
  9662  0639  1C03               	skipc
  9663  063A  0008               	return
  9664  063B  3199  2126  3186   	fcall	_getTemp_Safe
  9665  063E  3A00               	xorlw	0
  9666  063F  1903               	skipnz
  9667  0640  2E54               	goto	l9385
  9668                           
  9669                           ;PowerFault_B1.c: 71: {
  9670                           ;PowerFault_B1.c: 72: PF->Time=0;
  9671  0641  0876               	movf	_PF,w
  9672  0642  3E06               	addlw	6
  9673  0643  0086               	movwf	6
  9674  0644  3001               	movlw	1	; select bank2/3
  9675  0645  0087               	movwf	7
  9676  0646  3000               	movlw	0
  9677  0647  3FC0               	movwi [0]fsr1
  9678  0648  3FC1               	movwi [1]fsr1
  9679                           
  9680                           ;PowerFault_B1.c: 73: PF->ADtoGO=1;
  9681  0649  0876               	movf	_PF,w
  9682  064A  0086               	movwf	6
  9683  064B  3001               	movlw	1	; select bank2/3
  9684  064C  0087               	movwf	7
  9685  064D  1581               	bsf	1,3
  9686                           
  9687                           ;PowerFault_B1.c: 74: PF->Safe=0;
  9688  064E  0876               	movf	_PF,w
  9689  064F  0086               	movwf	6
  9690  0650  3001               	movlw	1	; select bank2/3
  9691  0651  0087               	movwf	7
  9692  0652  1101               	bcf	1,2
  9693                           
  9694                           ;PowerFault_B1.c: 75: }
  9695  0653  0008               	return
  9696  0654                     l9385:	
  9697                           
  9698                           ;PowerFault_B1.c: 76: else
  9699                           ;PowerFault_B1.c: 77: {
  9700                           ;PowerFault_B1.c: 78: PF->Time=700;
  9701  0654  0876               	movf	_PF,w
  9702  0655  3E06               	addlw	6
  9703  0656  0086               	movwf	6
  9704  0657  3001               	movlw	1	; select bank2/3
  9705  0658  0087               	movwf	7
  9706  0659  30BC               	movlw	188
  9707  065A  3FC0               	movwi [0]fsr1
  9708  065B  3002               	movlw	2
  9709  065C  3FC1               	movwi [1]fsr1
  9710                           
  9711                           ;PowerFault_B1.c: 79: }
  9712                           ;PowerFault_B1.c: 80: }
  9713                           ;PowerFault_B1.c: 81: }
  9714  065D  0008               	return
  9715  065E                     l9387:	
  9716                           
  9717                           ;PowerFault_B1.c: 82: else
  9718                           ;PowerFault_B1.c: 83: {
  9719                           ;PowerFault_B1.c: 84: PF->Time++;
  9720  065E  0876               	movf	_PF,w
  9721  065F  3E06               	addlw	6
  9722  0660  0086               	movwf	6
  9723  0661  3001               	movlw	1	; select bank2/3
  9724  0662  0087               	movwf	7
  9725  0663  3001               	movlw	1
  9726  0664  0781               	addwf	1,f
  9727  0665  3141               	addfsr 1,1
  9728  0666  1803               	skipnc
  9729  0667  0A81               	incf	1,f
  9730                           
  9731                           ;PowerFault_B1.c: 85: if(PF->Time >= 2)
  9732  0668  0876               	movf	_PF,w
  9733  0669  3E06               	addlw	6
  9734  066A  0086               	movwf	6
  9735  066B  3001               	movlw	1	; select bank2/3
  9736  066C  0087               	movwf	7
  9737  066D  3F40               	moviw [0]fsr1
  9738  066E  0020               	movlb	0	; select bank0
  9739  066F  00AD               	movwf	??_setPowerFault_Main
  9740  0670  3F41               	moviw [1]fsr1
  9741  0671  00AE               	movwf	??_setPowerFault_Main+1
  9742  0672  3000               	movlw	0
  9743  0673  022E               	subwf	??_setPowerFault_Main+1,w
  9744  0674  3002               	movlw	2
  9745  0675  1903               	skipnz
  9746  0676  022D               	subwf	??_setPowerFault_Main,w
  9747  0677  1C03               	skipc
  9748  0678  0008               	return
  9749                           
  9750                           ;PowerFault_B1.c: 86: {
  9751                           ;PowerFault_B1.c: 87: PF->Time=0;
  9752  0679  0876               	movf	_PF,w
  9753  067A  3E06               	addlw	6
  9754  067B  0086               	movwf	6
  9755  067C  3001               	movlw	1	; select bank2/3
  9756  067D  0087               	movwf	7
  9757  067E  3000               	movlw	0
  9758  067F  3FC0               	movwi [0]fsr1
  9759  0680  3FC1               	movwi [1]fsr1
  9760                           
  9761                           ;PowerFault_B1.c: 88: PF->ADtoGO=0;
  9762  0681  0876               	movf	_PF,w
  9763  0682  0086               	movwf	6
  9764  0683  3001               	movlw	1	; select bank2/3
  9765  0684  0087               	movwf	7
  9766  0685  1181               	bcf	1,3
  9767                           
  9768                           ;PowerFault_B1.c: 90: if(PF->ERROR)
  9769  0686  0876               	movf	_PF,w
  9770  0687  0086               	movwf	6
  9771  0688  3001               	movlw	1	; select bank2/3
  9772  0689  0087               	movwf	7
  9773  068A  1C81               	btfss	1,1
  9774  068B  2EC7               	goto	l9407
  9775                           
  9776                           ;PowerFault_B1.c: 91: {
  9777                           ;PowerFault_B1.c: 92: if(PF->AD <= (300+100) && PF->AD >= (300-100))
  9778  068C  0A76               	incf	_PF,w
  9779  068D  0086               	movwf	6
  9780  068E  3001               	movlw	1	; select bank2/3
  9781  068F  0087               	movwf	7
  9782  0690  3F40               	moviw [0]fsr1
  9783  0691  00AD               	movwf	??_setPowerFault_Main
  9784  0692  3F41               	moviw [1]fsr1
  9785  0693  00AE               	movwf	??_setPowerFault_Main+1
  9786  0694  3001               	movlw	1
  9787  0695  022E               	subwf	??_setPowerFault_Main+1,w
  9788  0696  3091               	movlw	145
  9789  0697  1903               	skipnz
  9790  0698  022D               	subwf	??_setPowerFault_Main,w
  9791  0699  1803               	skipnc
  9792  069A  2F03               	goto	l9419
  9793  069B  0A76               	incf	_PF,w
  9794  069C  0086               	movwf	6
  9795  069D  3001               	movlw	1	; select bank2/3
  9796  069E  0087               	movwf	7
  9797  069F  3F40               	moviw [0]fsr1
  9798  06A0  00AD               	movwf	??_setPowerFault_Main
  9799  06A1  3F41               	moviw [1]fsr1
  9800  06A2  00AE               	movwf	??_setPowerFault_Main+1
  9801  06A3  3000               	movlw	0
  9802  06A4  022E               	subwf	??_setPowerFault_Main+1,w
  9803  06A5  30C8               	movlw	200
  9804  06A6  1903               	skipnz
  9805  06A7  022D               	subwf	??_setPowerFault_Main,w
  9806  06A8  1C03               	skipc
  9807  06A9  2F03               	goto	l9419
  9808                           
  9809                           ;PowerFault_B1.c: 93: {
  9810                           ;PowerFault_B1.c: 94: PF->Count++;
  9811  06AA  3001               	movlw	1
  9812  06AB  00AD               	movwf	??_setPowerFault_Main
  9813  06AC  0876               	movf	_PF,w
  9814  06AD  3E05               	addlw	5
  9815  06AE  0086               	movwf	6
  9816  06AF  3001               	movlw	1	; select bank2/3
  9817  06B0  0087               	movwf	7
  9818  06B1  082D               	movf	??_setPowerFault_Main,w
  9819  06B2  0781               	addwf	1,f
  9820                           
  9821                           ;PowerFault_B1.c: 95: if(PF->Count > 1)
  9822  06B3  0876               	movf	_PF,w
  9823  06B4  3E05               	addlw	5
  9824  06B5  0086               	movwf	6
  9825  06B6  3001               	movlw	1	; select bank2/3
  9826  06B7  0087               	movwf	7
  9827  06B8  3002               	movlw	2
  9828  06B9  0201               	subwf	1,w
  9829  06BA  1C03               	skipc
  9830  06BB  2F09               	goto	l9421
  9831                           
  9832                           ;PowerFault_B1.c: 96: {
  9833                           ;PowerFault_B1.c: 97: PF->Count=0;
  9834  06BC  0876               	movf	_PF,w
  9835  06BD  3E05               	addlw	5
  9836  06BE  0086               	movwf	6
  9837  06BF  3001               	movlw	1	; select bank2/3
  9838  06C0  0087               	movwf	7
  9839  06C1  0181               	clrf	1
  9840                           
  9841                           ;PowerFault_B1.c: 98: setPowerFault_Exceptions(0);
  9842  06C2  3000               	movlw	0
  9843  06C3  319F  2709  3186   	fcall	_setPowerFault_Exceptions
  9844                           
  9845                           ;PowerFault_B1.c: 99: }
  9846                           ;PowerFault_B1.c: 100: }
  9847  06C6  2F09               	goto	l9421
  9848  06C7                     l9407:	
  9849                           ;PowerFault_B1.c: 104: }
  9850                           ;PowerFault_B1.c: 105: }
  9851                           
  9852                           ;PowerFault_B1.c: 101: else
  9853                           ;PowerFault_B1.c: 102: {
  9854                           ;PowerFault_B1.c: 103: PF->Count=0;
  9855                           
  9856                           
  9857                           ;PowerFault_B1.c: 106: else
  9858                           ;PowerFault_B1.c: 107: {
  9859                           ;PowerFault_B1.c: 108: if(PF->AD >= (300+100) || PF->AD <= (310-100))
  9860  06C7  0A76               	incf	_PF,w
  9861  06C8  0086               	movwf	6
  9862  06C9  3001               	movlw	1	; select bank2/3
  9863  06CA  0087               	movwf	7
  9864  06CB  3F40               	moviw [0]fsr1
  9865  06CC  0020               	movlb	0	; select bank0
  9866  06CD  00AD               	movwf	??_setPowerFault_Main
  9867  06CE  3F41               	moviw [1]fsr1
  9868  06CF  00AE               	movwf	??_setPowerFault_Main+1
  9869  06D0  3001               	movlw	1
  9870  06D1  022E               	subwf	??_setPowerFault_Main+1,w
  9871  06D2  3090               	movlw	144
  9872  06D3  1903               	skipnz
  9873  06D4  022D               	subwf	??_setPowerFault_Main,w
  9874  06D5  1803               	skipnc
  9875  06D6  2EE6               	goto	l9411
  9876  06D7  0A76               	incf	_PF,w
  9877  06D8  0086               	movwf	6
  9878  06D9  3001               	movlw	1	; select bank2/3
  9879  06DA  0087               	movwf	7
  9880  06DB  3F40               	moviw [0]fsr1
  9881  06DC  00AD               	movwf	??_setPowerFault_Main
  9882  06DD  3F41               	moviw [1]fsr1
  9883  06DE  00AE               	movwf	??_setPowerFault_Main+1
  9884  06DF  3000               	movlw	0
  9885  06E0  022E               	subwf	??_setPowerFault_Main+1,w
  9886  06E1  30D3               	movlw	211
  9887  06E2  1903               	skipnz
  9888  06E3  022D               	subwf	??_setPowerFault_Main,w
  9889  06E4  1803               	skipnc
  9890  06E5  2F03               	goto	l9419
  9891  06E6                     l9411:	
  9892                           
  9893                           ;PowerFault_B1.c: 109: {
  9894                           ;PowerFault_B1.c: 110: PF->Count++;
  9895  06E6  3001               	movlw	1
  9896  06E7  00AD               	movwf	??_setPowerFault_Main
  9897  06E8  0876               	movf	_PF,w
  9898  06E9  3E05               	addlw	5
  9899  06EA  0086               	movwf	6
  9900  06EB  3001               	movlw	1	; select bank2/3
  9901  06EC  0087               	movwf	7
  9902  06ED  082D               	movf	??_setPowerFault_Main,w
  9903  06EE  0781               	addwf	1,f
  9904                           
  9905                           ;PowerFault_B1.c: 111: if(PF->Count > 1)
  9906  06EF  0876               	movf	_PF,w
  9907  06F0  3E05               	addlw	5
  9908  06F1  0086               	movwf	6
  9909  06F2  3001               	movlw	1	; select bank2/3
  9910  06F3  0087               	movwf	7
  9911  06F4  3002               	movlw	2
  9912  06F5  0201               	subwf	1,w
  9913  06F6  1C03               	skipc
  9914  06F7  2F09               	goto	l9421
  9915                           
  9916                           ;PowerFault_B1.c: 112: {
  9917                           ;PowerFault_B1.c: 113: PF->Count=0;
  9918  06F8  0876               	movf	_PF,w
  9919  06F9  3E05               	addlw	5
  9920  06FA  0086               	movwf	6
  9921  06FB  3001               	movlw	1	; select bank2/3
  9922  06FC  0087               	movwf	7
  9923  06FD  0181               	clrf	1
  9924                           
  9925                           ;PowerFault_B1.c: 114: setPowerFault_Exceptions(1);
  9926  06FE  3001               	movlw	1
  9927  06FF  319F  2709  3186   	fcall	_setPowerFault_Exceptions
  9928                           
  9929                           ;PowerFault_B1.c: 115: }
  9930                           ;PowerFault_B1.c: 116: }
  9931  0702  2F09               	goto	l9421
  9932  0703                     l9419:	
  9933                           
  9934                           ;PowerFault_B1.c: 117: else
  9935                           ;PowerFault_B1.c: 118: {
  9936                           ;PowerFault_B1.c: 119: PF->Count=0;
  9937  0703  0876               	movf	_PF,w
  9938  0704  3E05               	addlw	5
  9939  0705  0086               	movwf	6
  9940  0706  3001               	movlw	1	; select bank2/3
  9941  0707  0087               	movwf	7
  9942  0708  0181               	clrf	1
  9943  0709                     l9421:	
  9944                           
  9945                           ;PowerFault_B1.c: 120: }
  9946                           ;PowerFault_B1.c: 122: }
  9947                           ;PowerFault_B1.c: 123: if(PF->ERROR == 0)
  9948  0709  0876               	movf	_PF,w
  9949  070A  0086               	movwf	6
  9950  070B  3001               	movlw	1	; select bank2/3
  9951  070C  0087               	movwf	7
  9952  070D  1881               	btfsc	1,1
  9953  070E  2F14               	goto	l2309
  9954                           
  9955                           ;PowerFault_B1.c: 124: {
  9956                           ;PowerFault_B1.c: 125: PF->Safe=1;
  9957  070F  0876               	movf	_PF,w
  9958  0710  0086               	movwf	6
  9959  0711  3001               	movlw	1	; select bank2/3
  9960  0712  0087               	movwf	7
  9961  0713  1501               	bsf	1,2
  9962  0714                     l2309:	
  9963                           
  9964                           ;PowerFault_B1.c: 126: }
  9965                           ;PowerFault_B1.c: 127: PF->AD=0;
  9966  0714  0A76               	incf	_PF,w
  9967  0715  0086               	movwf	6
  9968  0716  3001               	movlw	1	; select bank2/3
  9969  0717  0087               	movwf	7
  9970  0718  3000               	movlw	0
  9971  0719  3FC0               	movwi [0]fsr1
  9972  071A  3FC1               	movwi [1]fsr1
  9973  071B  0008               	return
  9974  071C                     __end_of_setPowerFault_Main:	
  9975                           
  9976                           	psect	text45
  9977  1F09                     __ptext45:	
  9978 ;; *************** function _setPowerFault_Exceptions *****************
  9979 ;; Defined at:
  9980 ;;		line 133 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\PowerFault_B1.c"
  9981 ;; Parameters:    Size  Location     Type
  9982 ;;  command         1    wreg     unsigned char 
  9983 ;; Auto vars:     Size  Location     Type
  9984 ;;  command         1   12[BANK0 ] unsigned char 
  9985 ;; Return value:  Size  Location     Type
  9986 ;;		None               void
  9987 ;; Registers used:
  9988 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9989 ;; Tracked objects:
  9990 ;;		On entry : 0/0
  9991 ;;		On exit  : 0/0
  9992 ;;		Unchanged: 0/0
  9993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9995 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9996 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9997 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9998 ;;Total ram usage:        2 bytes
  9999 ;; Hardware stack levels used:    1
 10000 ;; Hardware stack levels required when called:    8
 10001 ;; This function calls:
 10002 ;;		_DimmerLights_Exceptions
 10003 ;;		_setLED
 10004 ;;		_setRF_Enable
 10005 ;;		_setSw_Enable
 10006 ;; This function is called by:
 10007 ;;		_setPowerFault_Main
 10008 ;; This function uses a non-reentrant model
 10009 ;;
 10010                           
 10011                           
 10012                           ;psect for function _setPowerFault_Exceptions
 10013  1F09                     _setPowerFault_Exceptions:	
 10014                           
 10015                           ;incstack = 0
 10016                           ; Regs used in _setPowerFault_Exceptions: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cst
      +                          ack]
 10017                           ;setPowerFault_Exceptions@command stored from wreg
 10018  1F09  0020               	movlb	0	; select bank0
 10019  1F0A  00AC               	movwf	setPowerFault_Exceptions@command
 10020                           
 10021                           ;PowerFault_B1.c: 135: PF->ERROR=command;
 10022  1F0B  0876               	movf	_PF,w
 10023  1F0C  0086               	movwf	6
 10024  1F0D  3001               	movlw	1	; select bank2/3
 10025  1F0E  0087               	movwf	7
 10026  1F0F  082C               	movf	setPowerFault_Exceptions@command,w
 10027  1F10  1081               	bcf	1,1
 10028  1F11  1D03               	skipz
 10029  1F12  1481               	bsf	1,1
 10030                           
 10031                           ;PowerFault_B1.c: 136: PF->Safe=(~command) & 0x01;
 10032  1F13  092C               	comf	setPowerFault_Exceptions@command,w
 10033  1F14  3901               	andlw	1
 10034  1F15  00AB               	movwf	??_setPowerFault_Exceptions
 10035  1F16  0876               	movf	_PF,w
 10036  1F17  0086               	movwf	6
 10037  1F18  3001               	movlw	1	; select bank2/3
 10038  1F19  0087               	movwf	7
 10039  1F1A  0DAB               	rlf	??_setPowerFault_Exceptions,f
 10040  1F1B  0DAB               	rlf	??_setPowerFault_Exceptions,f
 10041  1F1C  0801               	movf	1,w
 10042  1F1D  062B               	xorwf	??_setPowerFault_Exceptions,w
 10043  1F1E  39FB               	andlw	-5
 10044  1F1F  062B               	xorwf	??_setPowerFault_Exceptions,w
 10045  1F20  0081               	movwf	1
 10046                           
 10047                           ;PowerFault_B1.c: 137: if(command == 1)
 10048  1F21  082C               	movf	setPowerFault_Exceptions@command,w
 10049  1F22  3A01               	xorlw	1
 10050  1F23  1D03               	skipz
 10051  1F24  2F29               	goto	l2313
 10052                           
 10053                           ;PowerFault_B1.c: 138: {
 10054                           ;PowerFault_B1.c: 139: DimmerLights_Exceptions(3);
 10055  1F25  3003               	movlw	3
 10056  1F26  3194  24EE  319F   	fcall	_DimmerLights_Exceptions
 10057  1F29                     l2313:	
 10058                           
 10059                           ;PowerFault_B1.c: 143: }
 10060                           ;PowerFault_B1.c: 144: setLED(99,command+10);
 10061  1F29  0020               	movlb	0	; select bank0
 10062  1F2A  082C               	movf	setPowerFault_Exceptions@command,w
 10063  1F2B  3E0A               	addlw	10
 10064  1F2C  00AB               	movwf	??_setPowerFault_Exceptions
 10065  1F2D  082B               	movf	??_setPowerFault_Exceptions,w
 10066  1F2E  00A2               	movwf	setLED@command
 10067  1F2F  3063               	movlw	99
 10068  1F30  3193  2366  319F   	fcall	_setLED
 10069                           
 10070                           ;PowerFault_B1.c: 146: setSw_Enable((~command) & 0x01);
 10071  1F33  0020               	movlb	0	; select bank0
 10072  1F34  092C               	comf	setPowerFault_Exceptions@command,w
 10073  1F35  3901               	andlw	1
 10074  1F36  319C  243E  319F   	fcall	_setSw_Enable
 10075                           
 10076                           ;PowerFault_B1.c: 148: setRF_Enable(1,(~command) & 0x01);
 10077  1F39  0020               	movlb	0	; select bank0
 10078  1F3A  092C               	comf	setPowerFault_Exceptions@command,w
 10079  1F3B  3901               	andlw	1
 10080  1F3C  00AB               	movwf	??_setPowerFault_Exceptions
 10081  1F3D  082B               	movf	??_setPowerFault_Exceptions,w
 10082  1F3E  00A2               	movwf	setRF_Enable@command
 10083  1F3F  3001               	movlw	1
 10084  1F40  319D  25FA         	fcall	_setRF_Enable
 10085  1F42  0008               	return
 10086  1F43                     __end_of_setPowerFault_Exceptions:	
 10087                           
 10088                           	psect	text46
 10089  14EE                     __ptext46:	
 10090 ;; *************** function _DimmerLights_Exceptions *****************
 10091 ;; Defined at:
 10092 ;;		line 246 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 10093 ;; Parameters:    Size  Location     Type
 10094 ;;  status          1    wreg     unsigned char 
 10095 ;; Auto vars:     Size  Location     Type
 10096 ;;  status          1   10[BANK0 ] unsigned char 
 10097 ;; Return value:  Size  Location     Type
 10098 ;;		None               void
 10099 ;; Registers used:
 10100 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10101 ;; Tracked objects:
 10102 ;;		On entry : 0/0
 10103 ;;		On exit  : 0/0
 10104 ;;		Unchanged: 0/0
 10105 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10106 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10107 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10109 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10110 ;;Total ram usage:        1 bytes
 10111 ;; Hardware stack levels used:    1
 10112 ;; Hardware stack levels required when called:    7
 10113 ;; This function calls:
 10114 ;;		_getDimmerLights_StatusFlag
 10115 ;;		_setBuz
 10116 ;;		_setDimmerLights_ERROR
 10117 ;;		_setDimmerLights_TriggerERROR
 10118 ;; This function is called by:
 10119 ;;		_setOverTemp_Exceptions
 10120 ;;		_setPowerFault_Exceptions
 10121 ;; This function uses a non-reentrant model
 10122 ;;
 10123                           
 10124                           
 10125                           ;psect for function _DimmerLights_Exceptions
 10126  14EE                     _DimmerLights_Exceptions:	
 10127                           
 10128                           ;incstack = 0
 10129                           ; Regs used in _DimmerLights_Exceptions: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 10130                           ;DimmerLights_Exceptions@status stored from wreg
 10131  14EE  0020               	movlb	0	; select bank0
 10132  14EF  00AA               	movwf	DimmerLights_Exceptions@status
 10133                           
 10134                           ;Dimmer_B1.c: 248: if(status == 1)
 10135  14F0  082A               	movf	DimmerLights_Exceptions@status,w
 10136  14F1  3A01               	xorlw	1
 10137  14F2  1D03               	skipz
 10138  14F3  2D04               	goto	l8605
 10139                           
 10140                           ;Dimmer_B1.c: 249: {
 10141                           ;Dimmer_B1.c: 250: if(getDimmerLights_StatusFlag())
 10142  14F4  319B  2362  3194   	fcall	_getDimmerLights_StatusFlag
 10143  14F7  3A00               	xorlw	0
 10144  14F8  1903               	skipnz
 10145  14F9  2D1C               	goto	l8611
 10146                           
 10147                           ;Dimmer_B1.c: 251: {
 10148                           ;Dimmer_B1.c: 252: setBuz(10,300);
 10149  14FA  302C               	movlw	44
 10150  14FB  0020               	movlb	0	; select bank0
 10151  14FC  00A6               	movwf	setBuz@time
 10152  14FD  3001               	movlw	1
 10153  14FE  00A7               	movwf	setBuz@time+1
 10154  14FF  300A               	movlw	10
 10155  1500  3197  2711  3194   	fcall	_setBuz
 10156  1503  2D1C               	goto	l8611
 10157  1504                     l8605:	
 10158                           ;Dimmer_B1.c: 264: }
 10159                           
 10160                           ;Dimmer_B1.c: 259: setDimmerLights_ERROR(2);
 10161                           
 10162                           ;Dimmer_B1.c: 253: }
 10163                           ;Dimmer_B1.c: 256: setDimmerLights_ERROR(1);
 10164                           
 10165                           
 10166                           ;Dimmer_B1.c: 265: else if(status == 2)
 10167  1504  0020               	movlb	0	; select bank0
 10168  1505  082A               	movf	DimmerLights_Exceptions@status,w
 10169  1506  3A02               	xorlw	2
 10170  1507  1D03               	skipz
 10171  1508  2D17               	goto	l8609
 10172                           
 10173                           ;Dimmer_B1.c: 266: {
 10174                           ;Dimmer_B1.c: 267: setBuz(5,300);
 10175  1509  302C               	movlw	44
 10176  150A  00A6               	movwf	setBuz@time
 10177  150B  3001               	movlw	1
 10178  150C  00A7               	movwf	setBuz@time+1
 10179  150D  3005               	movlw	5
 10180  150E  3197  2711  3194   	fcall	_setBuz
 10181                           
 10182                           ;Dimmer_B1.c: 268: setDimmerLights_ERROR(Dimmer->Load);
 10183  1511  0021               	movlb	1	; select bank1
 10184  1512  0A38               	incf	_Dimmer^(0+128),w
 10185  1513  0086               	movwf	6
 10186  1514  0187               	clrf	7
 10187  1515  0801               	movf	1,w
 10188  1516  2D21               	goto	L12
 10189  1517                     l8609:	
 10190                           ;Dimmer_B1.c: 269: }
 10191                           
 10192                           
 10193                           ;Dimmer_B1.c: 270: else if(status == 3)
 10194  1517  0020               	movlb	0	; select bank0
 10195  1518  082A               	movf	DimmerLights_Exceptions@status,w
 10196  1519  3A03               	xorlw	3
 10197  151A  1D03               	skipz
 10198  151B  2D24               	goto	l894
 10199  151C                     l8611:	
 10200                           
 10201                           ;Dimmer_B1.c: 271: {
 10202                           ;Dimmer_B1.c: 273: setDimmerLights_ERROR(1);
 10203  151C  3001               	movlw	1
 10204  151D  3192  2211  3194   	fcall	_setDimmerLights_ERROR
 10205                           
 10206                           ;Dimmer_B1.c: 276: setDimmerLights_ERROR(2);
 10207  1520  3002               	movlw	2
 10208  1521                     L12:	
 10209  1521  3192  2211  3194   	fcall	_setDimmerLights_ERROR
 10210  1524                     l894:	
 10211                           
 10212                           ;Dimmer_B1.c: 281: }
 10213                           ;Dimmer_B1.c: 284: setDimmerLights_TriggerERROR(1,0);
 10214  1524  0020               	movlb	0	; select bank0
 10215  1525  01A2               	clrf	setDimmerLights_TriggerERROR@command
 10216  1526  3001               	movlw	1
 10217  1527  319E  2624  3194   	fcall	_setDimmerLights_TriggerERROR
 10218                           
 10219                           ;Dimmer_B1.c: 287: setDimmerLights_TriggerERROR(2,0);
 10220  152A  0020               	movlb	0	; select bank0
 10221  152B  01A2               	clrf	setDimmerLights_TriggerERROR@command
 10222  152C  3002               	movlw	2
 10223  152D  319E  2624  3194   	fcall	_setDimmerLights_TriggerERROR
 10224                           
 10225                           ;Dimmer_B1.c: 293: if(TMain->SelfTest == 0)
 10226  1530  0020               	movlb	0	; select bank0
 10227  1531  086F               	movf	_TMain,w
 10228  1532  3E03               	addlw	3
 10229  1533  0086               	movwf	6
 10230  1534  3001               	movlw	1	; select bank2/3
 10231  1535  0087               	movwf	7
 10232  1536  1801               	btfsc	1,0
 10233  1537  0008               	return
 10234                           
 10235                           ;Dimmer_B1.c: 294: {
 10236                           ;Dimmer_B1.c: 295: TMain->i=0;
 10237  1538  086F               	movf	_TMain,w
 10238  1539  3E0F               	addlw	15
 10239  153A  0086               	movwf	6
 10240  153B  3001               	movlw	1	; select bank2/3
 10241  153C  0087               	movwf	7
 10242  153D  1001               	bcf	1,0
 10243                           
 10244                           ;Dimmer_B1.c: 296: TMain->j=0;
 10245  153E  086F               	movf	_TMain,w
 10246  153F  3E0F               	addlw	15
 10247  1540  0086               	movwf	6
 10248  1541  3001               	movlw	1	; select bank2/3
 10249  1542  0087               	movwf	7
 10250  1543  1081               	bcf	1,1
 10251                           
 10252                           ;Dimmer_B1.c: 297: TMain->k=1;
 10253  1544  086F               	movf	_TMain,w
 10254  1545  3E0F               	addlw	15
 10255  1546  0086               	movwf	6
 10256  1547  3001               	movlw	1	; select bank2/3
 10257  1548  0087               	movwf	7
 10258  1549  1501               	bsf	1,2
 10259                           
 10260                           ;Dimmer_B1.c: 298: TMain->Count2=0;
 10261  154A  086F               	movf	_TMain,w
 10262  154B  3E08               	addlw	8
 10263  154C  0086               	movwf	6
 10264  154D  3001               	movlw	1	; select bank2/3
 10265  154E  0087               	movwf	7
 10266  154F  3000               	movlw	0
 10267  1550  3FC0               	movwi [0]fsr1
 10268  1551  3FC1               	movwi [1]fsr1
 10269  1552  0008               	return
 10270  1553                     __end_of_DimmerLights_Exceptions:	
 10271                           
 10272                           	psect	text47
 10273  1E24                     __ptext47:	
 10274 ;; *************** function _setDimmerLights_TriggerERROR *****************
 10275 ;; Defined at:
 10276 ;;		line 320 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 10277 ;; Parameters:    Size  Location     Type
 10278 ;;  lights          1    wreg     unsigned char 
 10279 ;;  command         1    2[BANK0 ] unsigned char 
 10280 ;; Auto vars:     Size  Location     Type
 10281 ;;  lights          1    3[BANK0 ] unsigned char 
 10282 ;; Return value:  Size  Location     Type
 10283 ;;		None               void
 10284 ;; Registers used:
 10285 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10286 ;; Tracked objects:
 10287 ;;		On entry : 0/0
 10288 ;;		On exit  : 0/0
 10289 ;;		Unchanged: 0/0
 10290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10291 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10292 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10294 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10295 ;;Total ram usage:        2 bytes
 10296 ;; Hardware stack levels used:    1
 10297 ;; Hardware stack levels required when called:    5
 10298 ;; This function calls:
 10299 ;;		_DimmerLightsPointSelect
 10300 ;; This function is called by:
 10301 ;;		_DimmerLights_Exceptions
 10302 ;; This function uses a non-reentrant model
 10303 ;;
 10304                           
 10305                           
 10306                           ;psect for function _setDimmerLights_TriggerERROR
 10307  1E24                     _setDimmerLights_TriggerERROR:	
 10308                           
 10309                           ;incstack = 0
 10310                           ; Regs used in _setDimmerLights_TriggerERROR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath
      +                          +cstack]
 10311                           ;setDimmerLights_TriggerERROR@lights stored from wreg
 10312  1E24  0020               	movlb	0	; select bank0
 10313  1E25  00A3               	movwf	setDimmerLights_TriggerERROR@lights
 10314                           
 10315                           ;Dimmer_B1.c: 322: DimmerLightsPointSelect(lights);
 10316  1E26  0823               	movf	setDimmerLights_TriggerERROR@lights,w
 10317  1E27  319A  22D4         	fcall	_DimmerLightsPointSelect
 10318                           
 10319                           ;Dimmer_B1.c: 323: DimmerLights->Trigger=command;
 10320  1E29  0020               	movlb	0	; select bank0
 10321  1E2A  086A               	movf	_DimmerLights,w
 10322  1E2B  3E09               	addlw	9
 10323  1E2C  0086               	movwf	6
 10324  1E2D  3001               	movlw	1	; select bank2/3
 10325  1E2E  0087               	movwf	7
 10326  1E2F  0822               	movf	setDimmerLights_TriggerERROR@command,w
 10327  1E30  1081               	bcf	1,1
 10328  1E31  1D03               	skipz
 10329  1E32  1481               	bsf	1,1
 10330                           
 10331                           ;Dimmer_B1.c: 324: DimmerLights->Switch=command;
 10332  1E33  086A               	movf	_DimmerLights,w
 10333  1E34  3E09               	addlw	9
 10334  1E35  0086               	movwf	6
 10335  1E36  3001               	movlw	1	; select bank2/3
 10336  1E37  0087               	movwf	7
 10337  1E38  0822               	movf	setDimmerLights_TriggerERROR@command,w
 10338  1E39  1001               	bcf	1,0
 10339  1E3A  1D03               	skipz
 10340  1E3B  1401               	bsf	1,0
 10341                           
 10342                           ;Dimmer_B1.c: 325: DimmerLights->TriggerAdj=command;
 10343  1E3C  086A               	movf	_DimmerLights,w
 10344  1E3D  3E09               	addlw	9
 10345  1E3E  0086               	movwf	6
 10346  1E3F  3001               	movlw	1	; select bank2/3
 10347  1E40  0087               	movwf	7
 10348  1E41  0822               	movf	setDimmerLights_TriggerERROR@command,w
 10349  1E42  1181               	bcf	1,3
 10350  1E43  1D03               	skipz
 10351  1E44  1581               	bsf	1,3
 10352                           
 10353                           ;Dimmer_B1.c: 326: DimmerLights->AdjGo=command;
 10354  1E45  086A               	movf	_DimmerLights,w
 10355  1E46  3E09               	addlw	9
 10356  1E47  0086               	movwf	6
 10357  1E48  3001               	movlw	1	; select bank2/3
 10358  1E49  0087               	movwf	7
 10359  1E4A  0822               	movf	setDimmerLights_TriggerERROR@command,w
 10360  1E4B  1101               	bcf	1,2
 10361  1E4C  1D03               	skipz
 10362  1E4D  1501               	bsf	1,2
 10363  1E4E  0008               	return
 10364  1E4F                     __end_of_setDimmerLights_TriggerERROR:	
 10365                           
 10366                           	psect	text48
 10367  1211                     __ptext48:	
 10368 ;; *************** function _setDimmerLights_ERROR *****************
 10369 ;; Defined at:
 10370 ;;		line 302 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 10371 ;; Parameters:    Size  Location     Type
 10372 ;;  lights          1    wreg     unsigned char 
 10373 ;; Auto vars:     Size  Location     Type
 10374 ;;  lights          1    5[BANK0 ] unsigned char 
 10375 ;; Return value:  Size  Location     Type
 10376 ;;		None               void
 10377 ;; Registers used:
 10378 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10379 ;; Tracked objects:
 10380 ;;		On entry : 0/0
 10381 ;;		On exit  : 0/0
 10382 ;;		Unchanged: 0/0
 10383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10385 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10386 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10387 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10388 ;;Total ram usage:        2 bytes
 10389 ;; Hardware stack levels used:    1
 10390 ;; Hardware stack levels required when called:    6
 10391 ;; This function calls:
 10392 ;;		_DimmerLightsPointSelect
 10393 ;;		_setLED
 10394 ;;		_setRFSW_Status
 10395 ;;		_setSw_Status
 10396 ;; This function is called by:
 10397 ;;		_DimmerLights_Exceptions
 10398 ;; This function uses a non-reentrant model
 10399 ;;
 10400                           
 10401                           
 10402                           ;psect for function _setDimmerLights_ERROR
 10403  1211                     _setDimmerLights_ERROR:	
 10404                           
 10405                           ;incstack = 0
 10406                           ; Regs used in _setDimmerLights_ERROR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 10407                           ;setDimmerLights_ERROR@lights stored from wreg
 10408  1211  0020               	movlb	0	; select bank0
 10409  1212  00A5               	movwf	setDimmerLights_ERROR@lights
 10410                           
 10411                           ;Dimmer_B1.c: 304: DimmerLightsPointSelect(lights);
 10412  1213  0825               	movf	setDimmerLights_ERROR@lights,w
 10413  1214  319A  22D4  3192   	fcall	_DimmerLightsPointSelect
 10414                           
 10415                           ;Dimmer_B1.c: 305: if(DimmerLights->Status)
 10416  1217  0020               	movlb	0	; select bank0
 10417  1218  086A               	movf	_DimmerLights,w
 10418  1219  0086               	movwf	6
 10419  121A  3001               	movlw	1	; select bank2/3
 10420  121B  0087               	movwf	7
 10421  121C  1E81               	btfss	1,5
 10422  121D  0008               	return
 10423                           
 10424                           ;Dimmer_B1.c: 306: {
 10425                           ;Dimmer_B1.c: 307: DimmerLights->Signal=0;
 10426  121E  086A               	movf	_DimmerLights,w
 10427  121F  0086               	movwf	6
 10428  1220  3001               	movlw	1	; select bank2/3
 10429  1221  0087               	movwf	7
 10430  1222  1081               	bcf	1,1
 10431                           
 10432                           ;Dimmer_B1.c: 308: DimmerLights->AdjFlag=0;
 10433  1223  086A               	movf	_DimmerLights,w
 10434  1224  0086               	movwf	6
 10435  1225  3001               	movlw	1	; select bank2/3
 10436  1226  0087               	movwf	7
 10437  1227  1181               	bcf	1,3
 10438                           
 10439                           ;Dimmer_B1.c: 309: DimmerLights->AdjStatus=0;
 10440  1228  086A               	movf	_DimmerLights,w
 10441  1229  0086               	movwf	6
 10442  122A  3001               	movlw	1	; select bank2/3
 10443  122B  0087               	movwf	7
 10444  122C  1201               	bcf	1,4
 10445                           
 10446                           ;Dimmer_B1.c: 310: DimmerLights->StatusFlag=0;
 10447  122D  086A               	movf	_DimmerLights,w
 10448  122E  0086               	movwf	6
 10449  122F  3001               	movlw	1	; select bank2/3
 10450  1230  0087               	movwf	7
 10451  1231  1301               	bcf	1,6
 10452                           
 10453                           ;Dimmer_B1.c: 311: DimmerLights->DimmingTimeValue=3;
 10454  1232  3003               	movlw	3
 10455  1233  00A4               	movwf	??_setDimmerLights_ERROR
 10456  1234  086A               	movf	_DimmerLights,w
 10457  1235  3E02               	addlw	2
 10458  1236  0086               	movwf	6
 10459  1237  3001               	movlw	1	; select bank2/3
 10460  1238  0087               	movwf	7
 10461  1239  0824               	movf	??_setDimmerLights_ERROR,w
 10462  123A  0081               	movwf	1
 10463                           
 10464                           ;Dimmer_B1.c: 312: DimmerLights->DimmingValue=DimmerLights->MinimumValue;
 10465  123B  086A               	movf	_DimmerLights,w
 10466  123C  3E06               	addlw	6
 10467  123D  0086               	movwf	6
 10468  123E  3001               	movlw	1	; select bank2/3
 10469  123F  0087               	movwf	7
 10470  1240  0801               	movf	1,w
 10471  1241  00A4               	movwf	??_setDimmerLights_ERROR
 10472  1242  086A               	movf	_DimmerLights,w
 10473  1243  3E04               	addlw	4
 10474  1244  0086               	movwf	6
 10475  1245  3001               	movlw	1	; select bank2/3
 10476  1246  0087               	movwf	7
 10477  1247  0824               	movf	??_setDimmerLights_ERROR,w
 10478  1248  0081               	movwf	1
 10479                           
 10480                           ;Dimmer_B1.c: 313: Dimmer->Detect=1;
 10481  1249  0021               	movlb	1	; select bank1
 10482  124A  0838               	movf	_Dimmer^(0+128),w
 10483  124B  0086               	movwf	6
 10484  124C  0187               	clrf	7
 10485  124D  1401               	bsf	1,0
 10486                           
 10487                           ;Dimmer_B1.c: 314: ;;
 10488                           ;Dimmer_B1.c: 315: setLED(lights,1);
 10489  124E  0020               	movlb	0	; select bank0
 10490  124F  01A2               	clrf	setLED@command
 10491  1250  0AA2               	incf	setLED@command,f
 10492  1251  0825               	movf	setDimmerLights_ERROR@lights,w
 10493  1252  3193  2366  3192   	fcall	_setLED
 10494                           
 10495                           ;Dimmer_B1.c: 316: setSw_Status(lights,0);
 10496  1255  0020               	movlb	0	; select bank0
 10497  1256  01A2               	clrf	setSw_Status@command
 10498  1257  0825               	movf	setDimmerLights_ERROR@lights,w
 10499  1258  319A  2254  3192   	fcall	_setSw_Status
 10500                           
 10501                           ;Dimmer_B1.c: 317: setRFSW_Status(lights,0);
 10502  125B  0020               	movlb	0	; select bank0
 10503  125C  01A2               	clrf	setRFSW_Status@command
 10504  125D  0825               	movf	setDimmerLights_ERROR@lights,w
 10505  125E  319A  2245         	fcall	_setRFSW_Status
 10506  1260  0008               	return
 10507  1261                     __end_of_setDimmerLights_ERROR:	
 10508                           
 10509                           	psect	text49
 10510  1926                     __ptext49:	
 10511 ;; *************** function _getTemp_Safe *****************
 10512 ;; Defined at:
 10513 ;;		line 26 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\OverTemperature_B1.c"
 10514 ;; Parameters:    Size  Location     Type
 10515 ;;		None
 10516 ;; Auto vars:     Size  Location     Type
 10517 ;;		None
 10518 ;; Return value:  Size  Location     Type
 10519 ;;                  1    wreg      unsigned char 
 10520 ;; Registers used:
 10521 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10522 ;; Tracked objects:
 10523 ;;		On entry : 0/0
 10524 ;;		On exit  : 0/0
 10525 ;;		Unchanged: 0/0
 10526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10527 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10530 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10531 ;;Total ram usage:        0 bytes
 10532 ;; Hardware stack levels used:    1
 10533 ;; Hardware stack levels required when called:    4
 10534 ;; This function calls:
 10535 ;;		Nothing
 10536 ;; This function is called by:
 10537 ;;		_setPowerFault_Main
 10538 ;; This function uses a non-reentrant model
 10539 ;;
 10540                           
 10541                           
 10542                           ;psect for function _getTemp_Safe
 10543  1926                     _getTemp_Safe:	
 10544                           
 10545                           ;OverTemperature_B1.c: 28: return Temp->Safe;
 10546                           
 10547                           ;incstack = 0
 10548                           ; Regs used in _getTemp_Safe: [wreg+fsr1l+fsr1h+status,2+status,0]
 10549  1926  0879               	movf	_Temp,w
 10550  1927  0086               	movwf	6
 10551  1928  3001               	movlw	1	; select bank2/3
 10552  1929  0087               	movwf	7
 10553  192A  0E01               	swapf	1,w
 10554  192B  3901               	andlw	1
 10555  192C  0008               	return
 10556  192D                     __end_of_getTemp_Safe:	
 10557                           
 10558                           	psect	text50
 10559  18DD                     __ptext50:	
 10560 ;; *************** function _PowerFault_Initialization *****************
 10561 ;; Defined at:
 10562 ;;		line 15 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\PowerFault_B1.c"
 10563 ;; Parameters:    Size  Location     Type
 10564 ;;		None
 10565 ;; Auto vars:     Size  Location     Type
 10566 ;;		None
 10567 ;; Return value:  Size  Location     Type
 10568 ;;		None               void
 10569 ;; Registers used:
 10570 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10571 ;; Tracked objects:
 10572 ;;		On entry : 0/0
 10573 ;;		On exit  : 0/0
 10574 ;;		Unchanged: 0/0
 10575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10577 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10579 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10580 ;;Total ram usage:        0 bytes
 10581 ;; Hardware stack levels used:    1
 10582 ;; Hardware stack levels required when called:    5
 10583 ;; This function calls:
 10584 ;;		_setPowerFault_Initialization
 10585 ;; This function is called by:
 10586 ;;		_main
 10587 ;; This function uses a non-reentrant model
 10588 ;;
 10589                           
 10590                           
 10591                           ;psect for function _PowerFault_Initialization
 10592  18DD                     _PowerFault_Initialization:	
 10593                           
 10594                           ;PowerFault_B1.c: 18: setPowerFault_Initialization();
 10595                           
 10596                           ;incstack = 0
 10597                           ; Regs used in _PowerFault_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cs
      +                          tack]
 10598  18DD  319A  2293         	fcall	_setPowerFault_Initialization
 10599  18DF  0008               	return
 10600  18E0                     __end_of_PowerFault_Initialization:	
 10601                           
 10602                           	psect	text51
 10603  1A93                     __ptext51:	
 10604 ;; *************** function _setPowerFault_Initialization *****************
 10605 ;; Defined at:
 10606 ;;		line 29 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\PowerFault_B1.c"
 10607 ;; Parameters:    Size  Location     Type
 10608 ;;		None
 10609 ;; Auto vars:     Size  Location     Type
 10610 ;;		None
 10611 ;; Return value:  Size  Location     Type
 10612 ;;		None               void
 10613 ;; Registers used:
 10614 ;;		wreg, fsr1l, fsr1h
 10615 ;; Tracked objects:
 10616 ;;		On entry : 0/0
 10617 ;;		On exit  : 0/0
 10618 ;;		Unchanged: 0/0
 10619 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10620 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10621 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10622 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10623 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10624 ;;Total ram usage:        1 bytes
 10625 ;; Hardware stack levels used:    1
 10626 ;; Hardware stack levels required when called:    4
 10627 ;; This function calls:
 10628 ;;		Nothing
 10629 ;; This function is called by:
 10630 ;;		_PowerFault_Initialization
 10631 ;; This function uses a non-reentrant model
 10632 ;;
 10633                           
 10634                           
 10635                           ;psect for function _setPowerFault_Initialization
 10636  1A93                     _setPowerFault_Initialization:	
 10637                           
 10638                           ;PowerFault_B1.c: 31: PF=&PF1;
 10639                           
 10640                           ;incstack = 0
 10641                           ; Regs used in _setPowerFault_Initialization: [wregfsr1]
 10642  1A93  3068               	movlw	_PF1& (0+255)
 10643  1A94  0020               	movlb	0	; select bank0
 10644  1A95  00A0               	movwf	??_setPowerFault_Initialization
 10645  1A96  0820               	movf	??_setPowerFault_Initialization,w
 10646  1A97  00F6               	movwf	_PF
 10647                           
 10648                           ;PowerFault_B1.c: 32: PF->Enable=1;
 10649  1A98  0876               	movf	_PF,w
 10650  1A99  0086               	movwf	6
 10651  1A9A  3001               	movlw	1	; select bank2/3
 10652  1A9B  0087               	movwf	7
 10653  1A9C  1401               	bsf	1,0
 10654                           
 10655                           ;PowerFault_B1.c: 33: PF->Safe=1;
 10656  1A9D  0876               	movf	_PF,w
 10657  1A9E  0086               	movwf	6
 10658  1A9F  3001               	movlw	1	; select bank2/3
 10659  1AA0  0087               	movwf	7
 10660  1AA1  1501               	bsf	1,2
 10661  1AA2  0008               	return
 10662  1AA3                     __end_of_setPowerFault_Initialization:	
 10663                           
 10664                           	psect	text52
 10665  1C24                     __ptext52:	
 10666 ;; *************** function _Mcu_Initialization *****************
 10667 ;; Defined at:
 10668 ;;		line 24 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
 10669 ;; Parameters:    Size  Location     Type
 10670 ;;		None
 10671 ;; Auto vars:     Size  Location     Type
 10672 ;;		None
 10673 ;; Return value:  Size  Location     Type
 10674 ;;		None               void
 10675 ;; Registers used:
 10676 ;;		wreg, status,2, status,0, pclath, cstack
 10677 ;; Tracked objects:
 10678 ;;		On entry : 0/0
 10679 ;;		On exit  : 0/0
 10680 ;;		Unchanged: 0/0
 10681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10682 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10684 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10685 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10686 ;;Total ram usage:        1 bytes
 10687 ;; Hardware stack levels used:    1
 10688 ;; Hardware stack levels required when called:    5
 10689 ;; This function calls:
 10690 ;;		_ADC_Set
 10691 ;;		_INT_Set
 10692 ;;		_IOC_Set
 10693 ;;		_IO_Set
 10694 ;;		_TMR0_Set
 10695 ;;		_Watch_Dog_set
 10696 ;; This function is called by:
 10697 ;;		_main
 10698 ;; This function uses a non-reentrant model
 10699 ;;
 10700                           
 10701                           
 10702                           ;psect for function _Mcu_Initialization
 10703  1C24                     _Mcu_Initialization:	
 10704                           
 10705                           ;MCU_B1.c: 27: OSCCON=0x78; ;;
 10706                           
 10707                           ;incstack = 0
 10708                           ; Regs used in _Mcu_Initialization: [wreg+status,2+status,0+pclath+cstack]
 10709  1C24  3078               	movlw	120
 10710  1C25  0021               	movlb	1	; select bank1
 10711  1C26  0099               	movwf	25	;volatile
 10712                           
 10713                           ;MCU_B1.c: 29: IO_Set();
 10714  1C27  319B  23F1  319C   	fcall	_IO_Set
 10715                           
 10716                           ;MCU_B1.c: 31: TMR0_Set();
 10717  1C2A  319A  220F  319C   	fcall	_TMR0_Set
 10718                           
 10719                           ;MCU_B1.c: 33: ;;
 10720                           ;MCU_B1.c: 35: ADC_Set();
 10721  1C2D  3199  211F  319C   	fcall	_ADC_Set
 10722                           
 10723                           ;MCU_B1.c: 39: INT_Set();
 10724  1C30  3199  2106  319C   	fcall	_INT_Set
 10725                           
 10726                           ;MCU_B1.c: 41: IOC_Set();
 10727  1C33  319A  2202  319C   	fcall	_IOC_Set
 10728                           
 10729                           ;MCU_B1.c: 43: ;;
 10730                           ;MCU_B1.c: 45: ;;
 10731                           ;MCU_B1.c: 47: Memory=&VarMemory;
 10732  1C36  3020               	movlw	_VarMemory& (0+255)
 10733  1C37  0020               	movlb	0	; select bank0
 10734  1C38  00A1               	movwf	??_Mcu_Initialization
 10735  1C39  0821               	movf	??_Mcu_Initialization,w
 10736  1C3A  00ED               	movwf	_Memory
 10737                           
 10738                           ;MCU_B1.c: 49: Watch_Dog_set();
 10739  1C3B  3198  20F5         	fcall	_Watch_Dog_set
 10740  1C3D  0008               	return
 10741  1C3E                     __end_of_Mcu_Initialization:	
 10742                           
 10743                           	psect	text53
 10744  18F5                     __ptext53:	
 10745 ;; *************** function _Watch_Dog_set *****************
 10746 ;; Defined at:
 10747 ;;		line 979 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
 10748 ;; Parameters:    Size  Location     Type
 10749 ;;		None
 10750 ;; Auto vars:     Size  Location     Type
 10751 ;;		None
 10752 ;; Return value:  Size  Location     Type
 10753 ;;		None               void
 10754 ;; Registers used:
 10755 ;;		wreg
 10756 ;; Tracked objects:
 10757 ;;		On entry : 0/0
 10758 ;;		On exit  : 0/0
 10759 ;;		Unchanged: 0/0
 10760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10764 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10765 ;;Total ram usage:        0 bytes
 10766 ;; Hardware stack levels used:    1
 10767 ;; Hardware stack levels required when called:    4
 10768 ;; This function calls:
 10769 ;;		Nothing
 10770 ;; This function is called by:
 10771 ;;		_Mcu_Initialization
 10772 ;; This function uses a non-reentrant model
 10773 ;;
 10774                           
 10775                           
 10776                           ;psect for function _Watch_Dog_set
 10777  18F5                     _Watch_Dog_set:	
 10778                           
 10779                           ;MCU_B1.c: 980: WDTCON=0b00010111;;
 10780                           
 10781                           ;incstack = 0
 10782                           ; Regs used in _Watch_Dog_set: [wreg]
 10783  18F5  3017               	movlw	23
 10784  18F6  0021               	movlb	1	; select bank1
 10785  18F7  0097               	movwf	23	;volatile
 10786  18F8  0008               	return
 10787  18F9                     __end_of_Watch_Dog_set:	
 10788                           
 10789                           	psect	text54
 10790  1A0F                     __ptext54:	
 10791 ;; *************** function _TMR0_Set *****************
 10792 ;; Defined at:
 10793 ;;		line 118 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
 10794 ;; Parameters:    Size  Location     Type
 10795 ;;		None
 10796 ;; Auto vars:     Size  Location     Type
 10797 ;;		None
 10798 ;; Return value:  Size  Location     Type
 10799 ;;		None               void
 10800 ;; Registers used:
 10801 ;;		wreg, status,2
 10802 ;; Tracked objects:
 10803 ;;		On entry : 0/0
 10804 ;;		On exit  : 0/0
 10805 ;;		Unchanged: 0/0
 10806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10808 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10809 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10810 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10811 ;;Total ram usage:        1 bytes
 10812 ;; Hardware stack levels used:    1
 10813 ;; Hardware stack levels required when called:    4
 10814 ;; This function calls:
 10815 ;;		Nothing
 10816 ;; This function is called by:
 10817 ;;		_Mcu_Initialization
 10818 ;; This function uses a non-reentrant model
 10819 ;;
 10820                           
 10821                           
 10822                           ;psect for function _TMR0_Set
 10823  1A0F                     _TMR0_Set:	
 10824                           
 10825                           ;MCU_B1.c: 120: Timer0=&VarTimer0;
 10826                           
 10827                           ;incstack = 0
 10828                           ; Regs used in _TMR0_Set: [wreg+status,2]
 10829  1A0F  30C3               	movlw	_VarTimer0& (0+255)
 10830  1A10  0020               	movlb	0	; select bank0
 10831  1A11  00A0               	movwf	??_TMR0_Set
 10832  1A12  0820               	movf	??_TMR0_Set,w
 10833  1A13  0021               	movlb	1	; select bank1
 10834  1A14  00EE               	movwf	_Timer0^(0+128)
 10835                           
 10836                           ;MCU_B1.c: 121: OPTION_REG=0x00;
 10837  1A15  0195               	clrf	21	;volatile
 10838                           
 10839                           ;MCU_B1.c: 122: TMR0=(256-90);
 10840  1A16  30A6               	movlw	166
 10841  1A17  0020               	movlb	0	; select bank0
 10842  1A18  0095               	movwf	21	;volatile
 10843                           
 10844                           ;MCU_B1.c: 123: TMR0IE=1;
 10845  1A19  168B               	bsf	11,5	;volatile
 10846                           
 10847                           ;MCU_B1.c: 124: GIE=1;
 10848  1A1A  178B               	bsf	11,7	;volatile
 10849  1A1B  0008               	return
 10850  1A1C                     __end_of_TMR0_Set:	
 10851                           
 10852                           	psect	text55
 10853  1BF1                     __ptext55:	
 10854 ;; *************** function _IO_Set *****************
 10855 ;; Defined at:
 10856 ;;		line 52 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
 10857 ;; Parameters:    Size  Location     Type
 10858 ;;		None
 10859 ;; Auto vars:     Size  Location     Type
 10860 ;;		None
 10861 ;; Return value:  Size  Location     Type
 10862 ;;		None               void
 10863 ;; Registers used:
 10864 ;;		wreg, status,2
 10865 ;; Tracked objects:
 10866 ;;		On entry : 0/0
 10867 ;;		On exit  : 0/0
 10868 ;;		Unchanged: 0/0
 10869 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10870 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10871 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10873 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10874 ;;Total ram usage:        0 bytes
 10875 ;; Hardware stack levels used:    1
 10876 ;; Hardware stack levels required when called:    4
 10877 ;; This function calls:
 10878 ;;		Nothing
 10879 ;; This function is called by:
 10880 ;;		_Mcu_Initialization
 10881 ;; This function uses a non-reentrant model
 10882 ;;
 10883                           
 10884                           
 10885                           ;psect for function _IO_Set
 10886  1BF1                     _IO_Set:	
 10887                           
 10888                           ;MCU_B1.c: 81: TRISA=0b01110111;;
 10889                           
 10890                           ;incstack = 0
 10891                           ; Regs used in _IO_Set: [wreg+status,2]
 10892  1BF1  3077               	movlw	119
 10893  1BF2  0021               	movlb	1	; select bank1
 10894  1BF3  008C               	movwf	12	;volatile
 10895                           
 10896                           ;MCU_B1.c: 82: TRISB=0b00000111;;
 10897  1BF4  3007               	movlw	7
 10898  1BF5  008D               	movwf	13	;volatile
 10899                           
 10900                           ;MCU_B1.c: 83: TRISC=0b00001100;;
 10901  1BF6  300C               	movlw	12
 10902  1BF7  008E               	movwf	14	;volatile
 10903                           
 10904                           ;MCU_B1.c: 84: LATA=0b00000000;;
 10905  1BF8  0022               	movlb	2	; select bank2
 10906  1BF9  018C               	clrf	12	;volatile
 10907                           
 10908                           ;MCU_B1.c: 85: LATB=0b00000010;;
 10909  1BFA  3002               	movlw	2
 10910  1BFB  008D               	movwf	13	;volatile
 10911                           
 10912                           ;MCU_B1.c: 86: LATC=0b00000000;;
 10913  1BFC  018E               	clrf	14	;volatile
 10914                           
 10915                           ;MCU_B1.c: 87: ANSELA=0b00100010;;
 10916  1BFD  3022               	movlw	34
 10917  1BFE  0023               	movlb	3	; select bank3
 10918  1BFF  008C               	movwf	12	;volatile
 10919                           
 10920                           ;MCU_B1.c: 88: ANSELB=0b00000000;;
 10921  1C00  018D               	clrf	13	;volatile
 10922                           
 10923                           ;MCU_B1.c: 89: ANSELC=0b00000000;;
 10924  1C01  018E               	clrf	14	;volatile
 10925                           
 10926                           ;MCU_B1.c: 90: PORTA=0b01110111;;
 10927  1C02  3077               	movlw	119
 10928  1C03  0020               	movlb	0	; select bank0
 10929  1C04  008C               	movwf	12	;volatile
 10930                           
 10931                           ;MCU_B1.c: 91: PORTB=0b00000111;;
 10932  1C05  3007               	movlw	7
 10933  1C06  008D               	movwf	13	;volatile
 10934                           
 10935                           ;MCU_B1.c: 92: PORTC=0b00001100;;
 10936  1C07  300C               	movlw	12
 10937  1C08  008E               	movwf	14	;volatile
 10938  1C09  0008               	return
 10939  1C0A                     __end_of_IO_Set:	
 10940                           
 10941                           	psect	text56
 10942  1A02                     __ptext56:	
 10943 ;; *************** function _IOC_Set *****************
 10944 ;; Defined at:
 10945 ;;		line 314 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
 10946 ;; Parameters:    Size  Location     Type
 10947 ;;		None
 10948 ;; Auto vars:     Size  Location     Type
 10949 ;;		None
 10950 ;; Return value:  Size  Location     Type
 10951 ;;		None               void
 10952 ;; Registers used:
 10953 ;;		wreg, status,2
 10954 ;; Tracked objects:
 10955 ;;		On entry : 0/0
 10956 ;;		On exit  : 0/0
 10957 ;;		Unchanged: 0/0
 10958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10962 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10963 ;;Total ram usage:        0 bytes
 10964 ;; Hardware stack levels used:    1
 10965 ;; Hardware stack levels required when called:    4
 10966 ;; This function calls:
 10967 ;;		Nothing
 10968 ;; This function is called by:
 10969 ;;		_Mcu_Initialization
 10970 ;; This function uses a non-reentrant model
 10971 ;;
 10972                           
 10973                           
 10974                           ;psect for function _IOC_Set
 10975  1A02                     _IOC_Set:	
 10976                           
 10977                           ;MCU_B1.c: 316: WPUB2=0;
 10978                           
 10979                           ;incstack = 0
 10980                           ; Regs used in _IOC_Set: [wreg+status,2]
 10981  1A02  0024               	movlb	4	; select bank4
 10982  1A03  110D               	bcf	13,2	;volatile
 10983                           
 10984                           ;MCU_B1.c: 318: IOCBP=0b00000100;
 10985  1A04  3004               	movlw	4
 10986  1A05  0027               	movlb	7	; select bank7
 10987  1A06  0094               	movwf	20	;volatile
 10988                           
 10989                           ;MCU_B1.c: 319: IOCBN=0b00000100;
 10990  1A07  3004               	movlw	4
 10991  1A08  0095               	movwf	21	;volatile
 10992                           
 10993                           ;MCU_B1.c: 334: IOCBF=0b00000000;
 10994  1A09  0196               	clrf	22	;volatile
 10995                           
 10996                           ;MCU_B1.c: 336: IOCIE=1;
 10997  1A0A  158B               	bsf	11,3	;volatile
 10998                           
 10999                           ;MCU_B1.c: 337: IOCIF=0;
 11000  1A0B  100B               	bcf	11,0	;volatile
 11001                           
 11002                           ;MCU_B1.c: 338: PEIE=1;
 11003  1A0C  170B               	bsf	11,6	;volatile
 11004                           
 11005                           ;MCU_B1.c: 339: GIE=1;
 11006  1A0D  178B               	bsf	11,7	;volatile
 11007  1A0E  0008               	return
 11008  1A0F                     __end_of_IOC_Set:	
 11009                           
 11010                           	psect	text57
 11011  1906                     __ptext57:	
 11012 ;; *************** function _INT_Set *****************
 11013 ;; Defined at:
 11014 ;;		line 285 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
 11015 ;; Parameters:    Size  Location     Type
 11016 ;;		None
 11017 ;; Auto vars:     Size  Location     Type
 11018 ;;		None
 11019 ;; Return value:  Size  Location     Type
 11020 ;;		None               void
 11021 ;; Registers used:
 11022 ;;		None
 11023 ;; Tracked objects:
 11024 ;;		On entry : 0/0
 11025 ;;		On exit  : 0/0
 11026 ;;		Unchanged: 0/0
 11027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11028 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11029 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11031 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11032 ;;Total ram usage:        0 bytes
 11033 ;; Hardware stack levels used:    1
 11034 ;; Hardware stack levels required when called:    4
 11035 ;; This function calls:
 11036 ;;		Nothing
 11037 ;; This function is called by:
 11038 ;;		_Mcu_Initialization
 11039 ;; This function uses a non-reentrant model
 11040 ;;
 11041                           
 11042                           
 11043                           ;psect for function _INT_Set
 11044  1906                     _INT_Set:	
 11045                           
 11046                           ;MCU_B1.c: 287: WPUB0=0;
 11047                           
 11048                           ;incstack = 0
 11049                           ; Regs used in _INT_Set: []
 11050  1906  0024               	movlb	4	; select bank4
 11051  1907  100D               	bcf	13,0	;volatile
 11052                           
 11053                           ;MCU_B1.c: 288: INTE=1;
 11054  1908  160B               	bsf	11,4	;volatile
 11055                           
 11056                           ;MCU_B1.c: 289: PEIE=1;
 11057  1909  170B               	bsf	11,6	;volatile
 11058                           
 11059                           ;MCU_B1.c: 290: GIE=1;
 11060  190A  178B               	bsf	11,7	;volatile
 11061  190B  0008               	return
 11062  190C                     __end_of_INT_Set:	
 11063                           
 11064                           	psect	text58
 11065  191F                     __ptext58:	
 11066 ;; *************** function _ADC_Set *****************
 11067 ;; Defined at:
 11068 ;;		line 379 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
 11069 ;; Parameters:    Size  Location     Type
 11070 ;;		None
 11071 ;; Auto vars:     Size  Location     Type
 11072 ;;		None
 11073 ;; Return value:  Size  Location     Type
 11074 ;;		None               void
 11075 ;; Registers used:
 11076 ;;		wreg
 11077 ;; Tracked objects:
 11078 ;;		On entry : 0/0
 11079 ;;		On exit  : 0/0
 11080 ;;		Unchanged: 0/0
 11081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11085 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11086 ;;Total ram usage:        0 bytes
 11087 ;; Hardware stack levels used:    1
 11088 ;; Hardware stack levels required when called:    4
 11089 ;; This function calls:
 11090 ;;		Nothing
 11091 ;; This function is called by:
 11092 ;;		_Mcu_Initialization
 11093 ;; This function uses a non-reentrant model
 11094 ;;
 11095                           
 11096                           
 11097                           ;psect for function _ADC_Set
 11098  191F                     _ADC_Set:	
 11099                           
 11100                           ;MCU_B1.c: 381: ADCON1=0xf2;
 11101                           
 11102                           ;incstack = 0
 11103                           ; Regs used in _ADC_Set: [wreg]
 11104  191F  30F2               	movlw	242
 11105  1920  0021               	movlb	1	; select bank1
 11106  1921  009E               	movwf	30	;volatile
 11107                           
 11108                           ;MCU_B1.c: 382: FVRCON=0xc0;
 11109  1922  30C0               	movlw	192
 11110  1923  0022               	movlb	2	; select bank2
 11111  1924  0097               	movwf	23	;volatile
 11112  1925  0008               	return
 11113  1926                     __end_of_ADC_Set:	
 11114                           
 11115                           	psect	text59
 11116  1D18                     __ptext59:	
 11117 ;; *************** function _MainT_ResetClock *****************
 11118 ;; Defined at:
 11119 ;;		line 193 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\main.c"
 11120 ;; Parameters:    Size  Location     Type
 11121 ;;		None
 11122 ;; Auto vars:     Size  Location     Type
 11123 ;;  i               1    0        unsigned char 
 11124 ;; Return value:  Size  Location     Type
 11125 ;;		None               void
 11126 ;; Registers used:
 11127 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11128 ;; Tracked objects:
 11129 ;;		On entry : 0/0
 11130 ;;		On exit  : 0/0
 11131 ;;		Unchanged: 0/0
 11132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11134 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11135 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11136 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11137 ;;Total ram usage:        1 bytes
 11138 ;; Hardware stack levels used:    1
 11139 ;; Hardware stack levels required when called:    5
 11140 ;; This function calls:
 11141 ;;		_clearingWDT
 11142 ;; This function is called by:
 11143 ;;		_main
 11144 ;; This function uses a non-reentrant model
 11145 ;;
 11146                           
 11147                           
 11148                           ;psect for function _MainT_ResetClock
 11149  1D18                     _MainT_ResetClock:	
 11150                           
 11151                           ;main.c: 194: char i;
 11152                           ;main.c: 195: if(!TMain->ClockStop){
 11153                           
 11154                           ;incstack = 0
 11155                           ; Regs used in _MainT_ResetClock: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11156  1D18  0020               	movlb	0	; select bank0
 11157  1D19  086F               	movf	_TMain,w
 11158  1D1A  3E10               	addlw	16
 11159  1D1B  0086               	movwf	6
 11160  1D1C  3001               	movlw	1	; select bank2/3
 11161  1D1D  0087               	movwf	7
 11162  1D1E  1901               	btfsc	1,2
 11163  1D1F  0008               	return
 11164                           
 11165                           ;main.c: 196: TMain->ClockCount++;
 11166  1D20  3001               	movlw	1
 11167  1D21  00A0               	movwf	??_MainT_ResetClock
 11168  1D22  086F               	movf	_TMain,w
 11169  1D23  3E0E               	addlw	14
 11170  1D24  0086               	movwf	6
 11171  1D25  3001               	movlw	1	; select bank2/3
 11172  1D26  0087               	movwf	7
 11173  1D27  0820               	movf	??_MainT_ResetClock,w
 11174  1D28  0781               	addwf	1,f
 11175                           
 11176                           ;main.c: 197: if(TMain->ClockCount == 10){
 11177  1D29  086F               	movf	_TMain,w
 11178  1D2A  3E0E               	addlw	14
 11179  1D2B  0086               	movwf	6
 11180  1D2C  3001               	movlw	1	; select bank2/3
 11181  1D2D  0087               	movwf	7
 11182  1D2E  0801               	movf	1,w
 11183  1D2F  3A0A               	xorlw	10
 11184  1D30  1D03               	skipz
 11185  1D31  0008               	return
 11186                           
 11187                           ;main.c: 198: TMain->ClockCount=0;
 11188  1D32  086F               	movf	_TMain,w
 11189  1D33  3E0E               	addlw	14
 11190  1D34  0086               	movwf	6
 11191  1D35  3001               	movlw	1	; select bank2/3
 11192  1D36  0087               	movwf	7
 11193  1D37  0181               	clrf	1
 11194                           
 11195                           ;main.c: 199: clearingWDT();
 11196  1D38  3180  2002         	fcall	_clearingWDT
 11197  1D3A  0008               	return
 11198  1D3B                     __end_of_MainT_ResetClock:	
 11199                           
 11200                           	psect	text60
 11201  0002                     __ptext60:	
 11202 ;; *************** function _clearingWDT *****************
 11203 ;; Defined at:
 11204 ;;		line 983 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
 11205 ;; Parameters:    Size  Location     Type
 11206 ;;		None
 11207 ;; Auto vars:     Size  Location     Type
 11208 ;;		None
 11209 ;; Return value:  Size  Location     Type
 11210 ;;		None               void
 11211 ;; Registers used:
 11212 ;;		None
 11213 ;; Tracked objects:
 11214 ;;		On entry : 0/0
 11215 ;;		On exit  : 0/0
 11216 ;;		Unchanged: 0/0
 11217 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11218 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11219 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11221 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11222 ;;Total ram usage:        0 bytes
 11223 ;; Hardware stack levels used:    1
 11224 ;; Hardware stack levels required when called:    4
 11225 ;; This function calls:
 11226 ;;		Nothing
 11227 ;; This function is called by:
 11228 ;;		_MainT_ResetClock
 11229 ;; This function uses a non-reentrant model
 11230 ;;
 11231                           
 11232                           
 11233                           ;psect for function _clearingWDT
 11234  0002                     _clearingWDT:	
 11235                           
 11236                           ;incstack = 0
 11237                           ; Regs used in _clearingWDT: []
 11238  0002  0064               	clrwdt	;# 
 11239  0003  0008               	return
 11240  0004                     __end_of_clearingWDT:	
 11241                           
 11242                           	psect	text61
 11243  1AE7                     __ptext61:	
 11244 ;; *************** function _MainT_Initialization *****************
 11245 ;; Defined at:
 11246 ;;		line 93 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\main.c"
 11247 ;; Parameters:    Size  Location     Type
 11248 ;;		None
 11249 ;; Auto vars:     Size  Location     Type
 11250 ;;		None
 11251 ;; Return value:  Size  Location     Type
 11252 ;;		None               void
 11253 ;; Registers used:
 11254 ;;		wreg, fsr1l, fsr1h
 11255 ;; Tracked objects:
 11256 ;;		On entry : 0/0
 11257 ;;		On exit  : 0/0
 11258 ;;		Unchanged: 0/0
 11259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11260 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11261 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11262 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11263 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11264 ;;Total ram usage:        1 bytes
 11265 ;; Hardware stack levels used:    1
 11266 ;; Hardware stack levels required when called:    4
 11267 ;; This function calls:
 11268 ;;		Nothing
 11269 ;; This function is called by:
 11270 ;;		_main
 11271 ;; This function uses a non-reentrant model
 11272 ;;
 11273                           
 11274                           
 11275                           ;psect for function _MainT_Initialization
 11276  1AE7                     _MainT_Initialization:	
 11277                           
 11278                           ;main.c: 96: Product=&VarProduct;
 11279                           
 11280                           ;incstack = 0
 11281                           ; Regs used in _MainT_Initialization: [wregfsr1]
 11282  1AE7  30A0               	movlw	_VarProduct& (0+255)
 11283  1AE8  0020               	movlb	0	; select bank0
 11284  1AE9  00A0               	movwf	??_MainT_Initialization
 11285  1AEA  0820               	movf	??_MainT_Initialization,w
 11286  1AEB  00EE               	movwf	_Product
 11287                           
 11288                           ;main.c: 97: Product->Data[20]=210;
 11289  1AEC  30D2               	movlw	210
 11290  1AED  00A0               	movwf	??_MainT_Initialization
 11291  1AEE  086E               	movf	_Product,w
 11292  1AEF  3E14               	addlw	20
 11293  1AF0  0086               	movwf	6
 11294  1AF1  3001               	movlw	1	; select bank2/3
 11295  1AF2  0087               	movwf	7
 11296  1AF3  0820               	movf	??_MainT_Initialization,w
 11297  1AF4  0081               	movwf	1
 11298                           
 11299                           ;main.c: 100: TMain=&VarTMain;
 11300  1AF5  30C0               	movlw	_VarTMain& (0+255)
 11301  1AF6  00A0               	movwf	??_MainT_Initialization
 11302  1AF7  0820               	movf	??_MainT_Initialization,w
 11303  1AF8  00EF               	movwf	_TMain
 11304  1AF9  0008               	return
 11305  1AFA                     __end_of_MainT_Initialization:	
 11306                           
 11307                           	psect	text62
 11308  086A                     __ptext62:	
 11309 ;; *************** function _MainT *****************
 11310 ;; Defined at:
 11311 ;;		line 105 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\main.c"
 11312 ;; Parameters:    Size  Location     Type
 11313 ;;		None
 11314 ;; Auto vars:     Size  Location     Type
 11315 ;;		None
 11316 ;; Return value:  Size  Location     Type
 11317 ;;		None               void
 11318 ;; Registers used:
 11319 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11320 ;; Tracked objects:
 11321 ;;		On entry : 0/0
 11322 ;;		On exit  : 0/0
 11323 ;;		Unchanged: 0/0
 11324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11328 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11329 ;;Total ram usage:        0 bytes
 11330 ;; Hardware stack levels used:    1
 11331 ;; Hardware stack levels required when called:    6
 11332 ;; This function calls:
 11333 ;;		_setBuz
 11334 ;;		_setRF_Enable
 11335 ;;		_setSw_Enable
 11336 ;;		_setTemp_Enable
 11337 ;; This function is called by:
 11338 ;;		_main
 11339 ;; This function uses a non-reentrant model
 11340 ;;
 11341                           
 11342                           
 11343                           ;psect for function _MainT
 11344  086A                     _MainT:	
 11345                           
 11346                           ;main.c: 108: if(!TMain->PowerON)
 11347                           
 11348                           ;incstack = 0
 11349                           ; Regs used in _MainT: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11350  086A  0020               	movlb	0	; select bank0
 11351  086B  086F               	movf	_TMain,w
 11352  086C  0086               	movwf	6
 11353  086D  3001               	movlw	1	; select bank2/3
 11354  086E  0087               	movwf	7
 11355  086F  1801               	btfsc	1,0
 11356  0870  28B1               	goto	l9769
 11357                           
 11358                           ;main.c: 109: {
 11359                           ;main.c: 110: TMain->PowerCount++;
 11360  0871  0A6F               	incf	_TMain,w
 11361  0872  0086               	movwf	6
 11362  0873  3001               	movlw	1	; select bank2/3
 11363  0874  0087               	movwf	7
 11364  0875  3001               	movlw	1
 11365  0876  0781               	addwf	1,f
 11366  0877  3141               	addfsr 1,1
 11367  0878  1803               	skipnc
 11368  0879  0A81               	incf	1,f
 11369                           
 11370                           ;main.c: 111: if(TMain->PowerCount == 150)
 11371  087A  0A6F               	incf	_TMain,w
 11372  087B  0086               	movwf	6
 11373  087C  3001               	movlw	1	; select bank2/3
 11374  087D  0087               	movwf	7
 11375  087E  3F40               	moviw [0]fsr1
 11376  087F  3A96               	xorlw	150
 11377  0880  1D03               	skipz
 11378  0881  2884               	goto	u10145
 11379  0882  3F41               	moviw [1]fsr1
 11380  0883  3A00               	xorlw	0
 11381  0884                     u10145:	
 11382  0884  1D03               	skipz
 11383  0885  0008               	return
 11384                           
 11385                           ;main.c: 112: {
 11386                           ;main.c: 113: TMain->PowerCount=0;
 11387  0886  0A6F               	incf	_TMain,w
 11388  0887  0086               	movwf	6
 11389  0888  3001               	movlw	1	; select bank2/3
 11390  0889  0087               	movwf	7
 11391  088A  3000               	movlw	0
 11392  088B  3FC0               	movwi [0]fsr1
 11393  088C  3FC1               	movwi [1]fsr1
 11394                           
 11395                           ;main.c: 114: TMain->PowerON=1;
 11396  088D  086F               	movf	_TMain,w
 11397  088E  0086               	movwf	6
 11398  088F  3001               	movlw	1	; select bank2/3
 11399  0890  0087               	movwf	7
 11400  0891  1401               	bsf	1,0
 11401                           
 11402                           ;main.c: 117: setTemp_Enable(1);
 11403  0892  3001               	movlw	1
 11404  0893  3199  21A4  3188   	fcall	_setTemp_Enable
 11405                           
 11406                           ;main.c: 121: ;;
 11407                           ;main.c: 127: setBuz(3,50);
 11408  0896  3032               	movlw	50
 11409  0897  0020               	movlb	0	; select bank0
 11410  0898  00A6               	movwf	setBuz@time
 11411  0899  3000               	movlw	0
 11412  089A  00A7               	movwf	setBuz@time+1
 11413  089B  3003               	movlw	3
 11414  089C  3197  2711  3188   	fcall	_setBuz
 11415                           
 11416                           ;main.c: 128: TMain->SelfTest=1;
 11417  089F  0020               	movlb	0	; select bank0
 11418  08A0  086F               	movf	_TMain,w
 11419  08A1  3E03               	addlw	3
 11420  08A2  0086               	movwf	6
 11421  08A3  3001               	movlw	1	; select bank2/3
 11422  08A4  0087               	movwf	7
 11423  08A5  1401               	bsf	1,0
 11424                           
 11425                           ;main.c: 130: setSw_Enable(1);
 11426  08A6  3001               	movlw	1
 11427  08A7  319C  243E  3188   	fcall	_setSw_Enable
 11428                           
 11429                           ;main.c: 133: setRF_Enable(1,1);
 11430  08AA  0020               	movlb	0	; select bank0
 11431  08AB  01A2               	clrf	setRF_Enable@command
 11432  08AC  0AA2               	incf	setRF_Enable@command,f
 11433  08AD  3001               	movlw	1
 11434  08AE  319D  25FA         	fcall	_setRF_Enable
 11435                           
 11436                           ;main.c: 137: }
 11437                           ;main.c: 138: }
 11438  08B0  0008               	return
 11439  08B1                     l9769:	
 11440                           
 11441                           ;main.c: 139: else
 11442                           ;main.c: 140: {
 11443                           ;main.c: 148: TMain->Count1++;
 11444  08B1  0020               	movlb	0	; select bank0
 11445  08B2  086F               	movf	_TMain,w
 11446  08B3  3E06               	addlw	6
 11447  08B4  0086               	movwf	6
 11448  08B5  3001               	movlw	1	; select bank2/3
 11449  08B6  0087               	movwf	7
 11450  08B7  3001               	movlw	1
 11451  08B8  0781               	addwf	1,f
 11452  08B9  3141               	addfsr 1,1
 11453  08BA  1803               	skipnc
 11454  08BB  0A81               	incf	1,f
 11455                           
 11456                           ;main.c: 149: if(TMain->Count1 == 100)
 11457  08BC  086F               	movf	_TMain,w
 11458  08BD  3E06               	addlw	6
 11459  08BE  0086               	movwf	6
 11460  08BF  3001               	movlw	1	; select bank2/3
 11461  08C0  0087               	movwf	7
 11462  08C1  3F40               	moviw [0]fsr1
 11463  08C2  3A64               	xorlw	100
 11464  08C3  1D03               	skipz
 11465  08C4  28C7               	goto	u10155
 11466  08C5  3F41               	moviw [1]fsr1
 11467  08C6  3A00               	xorlw	0
 11468  08C7                     u10155:	
 11469  08C7  1D03               	skipz
 11470  08C8  0008               	return
 11471                           
 11472                           ;main.c: 150: {
 11473                           ;main.c: 151: TMain->Count1=0;
 11474  08C9  086F               	movf	_TMain,w
 11475  08CA  3E06               	addlw	6
 11476  08CB  0086               	movwf	6
 11477  08CC  3001               	movlw	1	; select bank2/3
 11478  08CD  0087               	movwf	7
 11479  08CE  3000               	movlw	0
 11480  08CF  3FC0               	movwi [0]fsr1
 11481  08D0  3FC1               	movwi [1]fsr1
 11482                           
 11483                           ;main.c: 164: if(TMain->Flag)
 11484  08D1  086F               	movf	_TMain,w
 11485  08D2  0086               	movwf	6
 11486  08D3  3001               	movlw	1	; select bank2/3
 11487  08D4  0087               	movwf	7
 11488  08D5  1D81               	btfss	1,3
 11489  08D6  28DD               	goto	l9777
 11490                           
 11491                           ;main.c: 165: {
 11492                           ;main.c: 166: TMain->Flag=0;
 11493  08D7  086F               	movf	_TMain,w
 11494  08D8  0086               	movwf	6
 11495  08D9  3001               	movlw	1	; select bank2/3
 11496  08DA  0087               	movwf	7
 11497  08DB  1181               	bcf	1,3
 11498                           
 11499                           ;main.c: 175: }
 11500  08DC  0008               	return
 11501  08DD                     l9777:	
 11502                           
 11503                           ;main.c: 176: else
 11504                           ;main.c: 177: {
 11505                           ;main.c: 178: TMain->Flag=1;
 11506  08DD  086F               	movf	_TMain,w
 11507  08DE  0086               	movwf	6
 11508  08DF  3001               	movlw	1	; select bank2/3
 11509  08E0  0087               	movwf	7
 11510  08E1  1581               	bsf	1,3
 11511  08E2  0008               	return
 11512  08E3                     __end_of_MainT:	
 11513                           
 11514                           	psect	text63
 11515  19A4                     __ptext63:	
 11516 ;; *************** function _setTemp_Enable *****************
 11517 ;; Defined at:
 11518 ;;		line 22 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\OverTemperature_B1.c"
 11519 ;; Parameters:    Size  Location     Type
 11520 ;;  command         1    wreg     unsigned char 
 11521 ;; Auto vars:     Size  Location     Type
 11522 ;;  command         1    0[BANK0 ] unsigned char 
 11523 ;; Return value:  Size  Location     Type
 11524 ;;		None               void
 11525 ;; Registers used:
 11526 ;;		wreg, fsr1l, fsr1h
 11527 ;; Tracked objects:
 11528 ;;		On entry : 0/0
 11529 ;;		On exit  : 0/0
 11530 ;;		Unchanged: 0/0
 11531 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11533 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11535 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11536 ;;Total ram usage:        1 bytes
 11537 ;; Hardware stack levels used:    1
 11538 ;; Hardware stack levels required when called:    4
 11539 ;; This function calls:
 11540 ;;		Nothing
 11541 ;; This function is called by:
 11542 ;;		_MainT
 11543 ;; This function uses a non-reentrant model
 11544 ;;
 11545                           
 11546                           
 11547                           ;psect for function _setTemp_Enable
 11548  19A4                     _setTemp_Enable:	
 11549                           
 11550                           ;incstack = 0
 11551                           ; Regs used in _setTemp_Enable: [wregfsr1]
 11552                           ;setTemp_Enable@command stored from wreg
 11553  19A4  0020               	movlb	0	; select bank0
 11554  19A5  00A0               	movwf	setTemp_Enable@command
 11555                           
 11556                           ;OverTemperature_B1.c: 24: Temp->Enable=command;
 11557  19A6  0879               	movf	_Temp,w
 11558  19A7  0086               	movwf	6
 11559  19A8  3001               	movlw	1	; select bank2/3
 11560  19A9  0087               	movwf	7
 11561  19AA  0820               	movf	setTemp_Enable@command,w
 11562  19AB  1001               	bcf	1,0
 11563  19AC  1D03               	skipz
 11564  19AD  1401               	bsf	1,0
 11565  19AE  0008               	return
 11566  19AF                     __end_of_setTemp_Enable:	
 11567                           
 11568                           	psect	text64
 11569  1C3E                     __ptext64:	
 11570 ;; *************** function _setSw_Enable *****************
 11571 ;; Defined at:
 11572 ;;		line 86 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Switch_B1.c"
 11573 ;; Parameters:    Size  Location     Type
 11574 ;;  command         1    wreg     unsigned char 
 11575 ;; Auto vars:     Size  Location     Type
 11576 ;;  command         1    2[BANK0 ] unsigned char 
 11577 ;; Return value:  Size  Location     Type
 11578 ;;		None               void
 11579 ;; Registers used:
 11580 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11581 ;; Tracked objects:
 11582 ;;		On entry : 0/0
 11583 ;;		On exit  : 0/0
 11584 ;;		Unchanged: 0/0
 11585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11586 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11587 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11589 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11590 ;;Total ram usage:        1 bytes
 11591 ;; Hardware stack levels used:    1
 11592 ;; Hardware stack levels required when called:    5
 11593 ;; This function calls:
 11594 ;;		_SwPointSelect
 11595 ;; This function is called by:
 11596 ;;		_MainT
 11597 ;;		_setOverTemp_Exceptions
 11598 ;;		_setPowerFault_Exceptions
 11599 ;; This function uses a non-reentrant model
 11600 ;;
 11601                           
 11602                           
 11603                           ;psect for function _setSw_Enable
 11604  1C3E                     _setSw_Enable:	
 11605                           
 11606                           ;incstack = 0
 11607                           ; Regs used in _setSw_Enable: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11608                           ;setSw_Enable@command stored from wreg
 11609  1C3E  0020               	movlb	0	; select bank0
 11610  1C3F  00A2               	movwf	setSw_Enable@command
 11611                           
 11612                           ;Switch_B1.c: 90: SwPointSelect(1);
 11613  1C40  3001               	movlw	1
 11614  1C41  319B  230E  319C   	fcall	_SwPointSelect
 11615                           
 11616                           ;Switch_B1.c: 91: Sw->Enable=command;
 11617  1C44  0878               	movf	_Sw,w
 11618  1C45  0086               	movwf	6
 11619  1C46  3001               	movlw	1	; select bank2/3
 11620  1C47  0087               	movwf	7
 11621  1C48  0020               	movlb	0	; select bank0
 11622  1C49  0822               	movf	setSw_Enable@command,w
 11623  1C4A  1001               	bcf	1,0
 11624  1C4B  1D03               	skipz
 11625  1C4C  1401               	bsf	1,0
 11626                           
 11627                           ;Switch_B1.c: 95: SwPointSelect(2);
 11628  1C4D  3002               	movlw	2
 11629  1C4E  319B  230E         	fcall	_SwPointSelect
 11630                           
 11631                           ;Switch_B1.c: 96: Sw->Enable=command;
 11632  1C50  0878               	movf	_Sw,w
 11633  1C51  0086               	movwf	6
 11634  1C52  3001               	movlw	1	; select bank2/3
 11635  1C53  0087               	movwf	7
 11636  1C54  0020               	movlb	0	; select bank0
 11637  1C55  0822               	movf	setSw_Enable@command,w
 11638  1C56  1001               	bcf	1,0
 11639  1C57  1D03               	skipz
 11640  1C58  1401               	bsf	1,0
 11641  1C59  0008               	return
 11642  1C5A                     __end_of_setSw_Enable:	
 11643                           
 11644                           	psect	text65
 11645  1DFA                     __ptext65:	
 11646 ;; *************** function _setRF_Enable *****************
 11647 ;; Defined at:
 11648 ;;		line 186 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
 11649 ;; Parameters:    Size  Location     Type
 11650 ;;  rf              1    wreg     unsigned char 
 11651 ;;  command         1    2[BANK0 ] unsigned char 
 11652 ;; Auto vars:     Size  Location     Type
 11653 ;;  rf              1    3[BANK0 ] unsigned char 
 11654 ;; Return value:  Size  Location     Type
 11655 ;;		None               void
 11656 ;; Registers used:
 11657 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11658 ;; Tracked objects:
 11659 ;;		On entry : 0/0
 11660 ;;		On exit  : 0/0
 11661 ;;		Unchanged: 0/0
 11662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11663 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11664 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11666 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11667 ;;Total ram usage:        2 bytes
 11668 ;; Hardware stack levels used:    1
 11669 ;; Hardware stack levels required when called:    5
 11670 ;; This function calls:
 11671 ;;		_RfPointSelect
 11672 ;;		_setINT_GO
 11673 ;; This function is called by:
 11674 ;;		_MainT
 11675 ;;		_setOverTemp_Exceptions
 11676 ;;		_setPowerFault_Exceptions
 11677 ;; This function uses a non-reentrant model
 11678 ;;
 11679                           
 11680                           
 11681                           ;psect for function _setRF_Enable
 11682  1DFA                     _setRF_Enable:	
 11683                           
 11684                           ;incstack = 0
 11685                           ; Regs used in _setRF_Enable: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11686                           ;setRF_Enable@rf stored from wreg
 11687  1DFA  0020               	movlb	0	; select bank0
 11688  1DFB  00A3               	movwf	setRF_Enable@rf
 11689                           
 11690                           ;RF_Control_B1.c: 188: RfPointSelect(rf);
 11691  1DFC  0823               	movf	setRF_Enable@rf,w
 11692  1DFD  3199  218E  319D   	fcall	_RfPointSelect
 11693                           
 11694                           ;RF_Control_B1.c: 189: RF->Enable=command;
 11695  1E00  0877               	movf	_RF,w
 11696  1E01  0086               	movwf	6
 11697  1E02  0187               	clrf	7
 11698  1E03  0020               	movlb	0	; select bank0
 11699  1E04  0822               	movf	setRF_Enable@command,w
 11700  1E05  1001               	bcf	1,0
 11701  1E06  1D03               	skipz
 11702  1E07  1401               	bsf	1,0
 11703                           
 11704                           ;RF_Control_B1.c: 190: RF->Learn=0;
 11705  1E08  0877               	movf	_RF,w
 11706  1E09  0086               	movwf	6
 11707  1E0A  0187               	clrf	7
 11708  1E0B  1301               	bcf	1,6
 11709                           
 11710                           ;RF_Control_B1.c: 191: RF->TransceiveGO=0;
 11711  1E0C  0877               	movf	_RF,w
 11712  1E0D  0086               	movwf	6
 11713  1E0E  0187               	clrf	7
 11714  1E0F  1101               	bcf	1,2
 11715                           
 11716                           ;RF_Control_B1.c: 192: RF->RxStatus=0;
 11717  1E10  0877               	movf	_RF,w
 11718  1E11  0086               	movwf	6
 11719  1E12  0187               	clrf	7
 11720  1E13  1181               	bcf	1,3
 11721                           
 11722                           ;RF_Control_B1.c: 193: RF->ReceiveGO=0;
 11723  1E14  0877               	movf	_RF,w
 11724  1E15  0086               	movwf	6
 11725  1E16  0187               	clrf	7
 11726  1E17  1081               	bcf	1,1
 11727                           
 11728                           ;RF_Control_B1.c: 194: RF->DebounceTime=0;
 11729  1E18  0A77               	incf	_RF,w
 11730  1E19  0086               	movwf	6
 11731  1E1A  0187               	clrf	7
 11732  1E1B  0181               	clrf	1
 11733                           
 11734                           ;RF_Control_B1.c: 195: RF->Debounce=0;
 11735  1E1C  0877               	movf	_RF,w
 11736  1E1D  0086               	movwf	6
 11737  1E1E  0187               	clrf	7
 11738  1E1F  1281               	bcf	1,5
 11739                           
 11740                           ;RF_Control_B1.c: 196: setINT_GO(0);
 11741  1E20  3000               	movlw	0
 11742  1E21  3199  2165         	fcall	_setINT_GO
 11743  1E23  0008               	return
 11744  1E24                     __end_of_setRF_Enable:	
 11745                           
 11746                           	psect	text66
 11747  1965                     __ptext66:	
 11748 ;; *************** function _setINT_GO *****************
 11749 ;; Defined at:
 11750 ;;		line 303 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
 11751 ;; Parameters:    Size  Location     Type
 11752 ;;  command         1    wreg     unsigned char 
 11753 ;; Auto vars:     Size  Location     Type
 11754 ;;  command         1    0[BANK0 ] unsigned char 
 11755 ;; Return value:  Size  Location     Type
 11756 ;;		None               void
 11757 ;; Registers used:
 11758 ;;		wreg
 11759 ;; Tracked objects:
 11760 ;;		On entry : 0/0
 11761 ;;		On exit  : 0/0
 11762 ;;		Unchanged: 0/0
 11763 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11765 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11767 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11768 ;;Total ram usage:        1 bytes
 11769 ;; Hardware stack levels used:    1
 11770 ;; Hardware stack levels required when called:    4
 11771 ;; This function calls:
 11772 ;;		Nothing
 11773 ;; This function is called by:
 11774 ;;		_setRF_Main
 11775 ;;		_setRF_Enable
 11776 ;;		_RF_RxDisable
 11777 ;; This function uses a non-reentrant model
 11778 ;;
 11779                           
 11780                           
 11781                           ;psect for function _setINT_GO
 11782  1965                     _setINT_GO:	
 11783                           
 11784                           ;incstack = 0
 11785                           ; Regs used in _setINT_GO: [wreg]
 11786                           ;setINT_GO@command stored from wreg
 11787  1965  0020               	movlb	0	; select bank0
 11788  1966  00A0               	movwf	setINT_GO@command
 11789                           
 11790                           ;MCU_B1.c: 305: INTF=0;
 11791  1967  108B               	bcf	11,1	;volatile
 11792                           
 11793                           ;MCU_B1.c: 306: INTE=command;
 11794  1968  1C20               	btfss	setINT_GO@command,0
 11795  1969  296C               	goto	u8490
 11796  196A  160B               	bsf	11,4	;volatile
 11797  196B  0008               	return
 11798  196C                     u8490:	
 11799  196C  120B               	bcf	11,4	;volatile
 11800  196D  0008               	return
 11801  196E                     __end_of_setINT_GO:	
 11802                           
 11803                           	psect	text67
 11804  19F6                     __ptext67:	
 11805 ;; *************** function _LED_Main *****************
 11806 ;; Defined at:
 11807 ;;		line 51 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\LED_B1.c"
 11808 ;; Parameters:    Size  Location     Type
 11809 ;;		None
 11810 ;; Auto vars:     Size  Location     Type
 11811 ;;		None
 11812 ;; Return value:  Size  Location     Type
 11813 ;;		None               void
 11814 ;; Registers used:
 11815 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11816 ;; Tracked objects:
 11817 ;;		On entry : 0/0
 11818 ;;		On exit  : 0/0
 11819 ;;		Unchanged: 0/0
 11820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11821 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11822 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11823 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11824 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11825 ;;Total ram usage:        0 bytes
 11826 ;; Hardware stack levels used:    1
 11827 ;; Hardware stack levels required when called:    6
 11828 ;; This function calls:
 11829 ;;		_setLED_Main
 11830 ;; This function is called by:
 11831 ;;		_main
 11832 ;; This function uses a non-reentrant model
 11833 ;;
 11834                           
 11835                           
 11836                           ;psect for function _LED_Main
 11837  19F6                     _LED_Main:	
 11838                           
 11839                           ;LED_B1.c: 54: setLED_Main(1);
 11840                           
 11841                           ;incstack = 0
 11842                           ; Regs used in _LED_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11843  19F6  3001               	movlw	1
 11844  19F7  319F  2780  3199   	fcall	_setLED_Main
 11845                           
 11846                           ;LED_B1.c: 57: setLED_Main(2);
 11847  19FA  3002               	movlw	2
 11848  19FB  319F  2780  3199   	fcall	_setLED_Main
 11849                           
 11850                           ;LED_B1.c: 63: setLED_Main(99);
 11851  19FE  3063               	movlw	99
 11852  19FF  319F  2780         	fcall	_setLED_Main
 11853  1A01  0008               	return
 11854  1A02                     __end_of_LED_Main:	
 11855                           
 11856                           	psect	text68
 11857  1F80                     __ptext68:	
 11858 ;; *************** function _setLED_Main *****************
 11859 ;; Defined at:
 11860 ;;		line 214 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\LED_B1.c"
 11861 ;; Parameters:    Size  Location     Type
 11862 ;;  led             1    wreg     unsigned char 
 11863 ;; Auto vars:     Size  Location     Type
 11864 ;;  led             1    4[BANK0 ] unsigned char 
 11865 ;; Return value:  Size  Location     Type
 11866 ;;		None               void
 11867 ;; Registers used:
 11868 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11869 ;; Tracked objects:
 11870 ;;		On entry : 0/0
 11871 ;;		On exit  : 0/0
 11872 ;;		Unchanged: 0/0
 11873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11875 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11876 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11877 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11878 ;;Total ram usage:        3 bytes
 11879 ;; Hardware stack levels used:    1
 11880 ;; Hardware stack levels required when called:    5
 11881 ;; This function calls:
 11882 ;;		_LedPointSelect
 11883 ;; This function is called by:
 11884 ;;		_LED_Main
 11885 ;; This function uses a non-reentrant model
 11886 ;;
 11887                           
 11888                           
 11889                           ;psect for function _setLED_Main
 11890  1F80                     _setLED_Main:	
 11891                           
 11892                           ;incstack = 0
 11893                           ; Regs used in _setLED_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11894                           ;setLED_Main@led stored from wreg
 11895  1F80  0020               	movlb	0	; select bank0
 11896  1F81  00A4               	movwf	setLED_Main@led
 11897                           
 11898                           ;LED_B1.c: 216: LedPointSelect(led);
 11899  1F82  0824               	movf	setLED_Main@led,w
 11900  1F83  319C  24F6  319F   	fcall	_LedPointSelect
 11901                           
 11902                           ;LED_B1.c: 217: if(LED->GO)
 11903  1F86  0021               	movlb	1	; select bank1
 11904  1F87  083A               	movf	_LED^(0+128),w
 11905  1F88  0086               	movwf	6
 11906  1F89  0187               	clrf	7
 11907  1F8A  1C81               	btfss	1,1
 11908  1F8B  0008               	return
 11909                           
 11910                           ;LED_B1.c: 218: {
 11911                           ;LED_B1.c: 219: LED->Time++;
 11912  1F8C  0A3A               	incf	_LED^(0+128),w
 11913  1F8D  0086               	movwf	6
 11914  1F8E  0187               	clrf	7
 11915  1F8F  3001               	movlw	1
 11916  1F90  0781               	addwf	1,f
 11917  1F91  3141               	addfsr 1,1
 11918  1F92  1803               	skipnc
 11919  1F93  0A81               	incf	1,f
 11920                           
 11921                           ;LED_B1.c: 220: if(LED->Time >= 500/10)
 11922  1F94  0A3A               	incf	_LED^(0+128),w
 11923  1F95  0086               	movwf	6
 11924  1F96  0187               	clrf	7
 11925  1F97  3F40               	moviw [0]fsr1
 11926  1F98  0020               	movlb	0	; select bank0
 11927  1F99  00A2               	movwf	??_setLED_Main
 11928  1F9A  3F41               	moviw [1]fsr1
 11929  1F9B  00A3               	movwf	??_setLED_Main+1
 11930  1F9C  3000               	movlw	0
 11931  1F9D  0223               	subwf	??_setLED_Main+1,w
 11932  1F9E  3032               	movlw	50
 11933  1F9F  1903               	skipnz
 11934  1FA0  0222               	subwf	??_setLED_Main,w
 11935  1FA1  1C03               	skipc
 11936  1FA2  0008               	return
 11937                           
 11938                           ;LED_B1.c: 221: {
 11939                           ;LED_B1.c: 222: LED->Time=0;
 11940  1FA3  0021               	movlb	1	; select bank1
 11941  1FA4  0A3A               	incf	_LED^(0+128),w
 11942  1FA5  0086               	movwf	6
 11943  1FA6  0187               	clrf	7
 11944  1FA7  3000               	movlw	0
 11945  1FA8  3FC0               	movwi [0]fsr1
 11946  1FA9  3FC1               	movwi [1]fsr1
 11947                           
 11948                           ;LED_B1.c: 224: if(led == 1)
 11949  1FAA  0020               	movlb	0	; select bank0
 11950  1FAB  0824               	movf	setLED_Main@led,w
 11951  1FAC  3A01               	xorlw	1
 11952  1FAD  1D03               	skipz
 11953  1FAE  2FB2               	goto	l9211
 11954                           
 11955                           ;LED_B1.c: 225: {
 11956                           ;LED_B1.c: 226: RA3=~RA3;
 11957  1FAF  3008               	movlw	8
 11958  1FB0  068C               	xorwf	12,f
 11959                           
 11960                           ;LED_B1.c: 227: }
 11961  1FB1  0008               	return
 11962  1FB2                     l9211:	
 11963                           
 11964                           ;LED_B1.c: 230: else if(led == 2)
 11965  1FB2  0824               	movf	setLED_Main@led,w
 11966  1FB3  3A02               	xorlw	2
 11967  1FB4  1D03               	skipz
 11968  1FB5  2FB9               	goto	l9215
 11969                           
 11970                           ;LED_B1.c: 231: {
 11971                           ;LED_B1.c: 232: RC7=~RC7;
 11972  1FB6  3080               	movlw	128
 11973  1FB7  068E               	xorwf	14,f
 11974                           
 11975                           ;LED_B1.c: 233: }
 11976  1FB8  0008               	return
 11977  1FB9                     l9215:	
 11978                           
 11979                           ;LED_B1.c: 242: else if(led == 99)
 11980  1FB9  0824               	movf	setLED_Main@led,w
 11981  1FBA  3A63               	xorlw	99
 11982  1FBB  1D03               	skipz
 11983  1FBC  0008               	return
 11984                           
 11985                           ;LED_B1.c: 243: {
 11986                           ;LED_B1.c: 244: RB5=~RB5;
 11987  1FBD  3020               	movlw	32
 11988  1FBE  068D               	xorwf	13,f
 11989  1FBF  0008               	return
 11990  1FC0                     __end_of_setLED_Main:	
 11991                           
 11992                           	psect	text69
 11993  19EA                     __ptext69:	
 11994 ;; *************** function _LED_Initialization *****************
 11995 ;; Defined at:
 11996 ;;		line 35 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\LED_B1.c"
 11997 ;; Parameters:    Size  Location     Type
 11998 ;;		None
 11999 ;; Auto vars:     Size  Location     Type
 12000 ;;		None
 12001 ;; Return value:  Size  Location     Type
 12002 ;;		None               void
 12003 ;; Registers used:
 12004 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12005 ;; Tracked objects:
 12006 ;;		On entry : 0/0
 12007 ;;		On exit  : 0/0
 12008 ;;		Unchanged: 0/0
 12009 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12011 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12013 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12014 ;;Total ram usage:        0 bytes
 12015 ;; Hardware stack levels used:    1
 12016 ;; Hardware stack levels required when called:    7
 12017 ;; This function calls:
 12018 ;;		_setLED_Initialization
 12019 ;; This function is called by:
 12020 ;;		_main
 12021 ;; This function uses a non-reentrant model
 12022 ;;
 12023                           
 12024                           
 12025                           ;psect for function _LED_Initialization
 12026  19EA                     _LED_Initialization:	
 12027                           
 12028                           ;LED_B1.c: 38: setLED_Initialization(1);
 12029                           
 12030                           ;incstack = 0
 12031                           ; Regs used in _LED_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12032  19EA  3001               	movlw	1
 12033  19EB  319A  22C3  3199   	fcall	_setLED_Initialization
 12034                           
 12035                           ;LED_B1.c: 41: setLED_Initialization(2);
 12036  19EE  3002               	movlw	2
 12037  19EF  319A  22C3  3199   	fcall	_setLED_Initialization
 12038                           
 12039                           ;LED_B1.c: 47: setLED_Initialization(99);
 12040  19F2  3063               	movlw	99
 12041  19F3  319A  22C3         	fcall	_setLED_Initialization
 12042  19F5  0008               	return
 12043  19F6                     __end_of_LED_Initialization:	
 12044                           
 12045                           	psect	text70
 12046  1AC3                     __ptext70:	
 12047 ;; *************** function _setLED_Initialization *****************
 12048 ;; Defined at:
 12049 ;;		line 67 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\LED_B1.c"
 12050 ;; Parameters:    Size  Location     Type
 12051 ;;  led             1    wreg     unsigned char 
 12052 ;; Auto vars:     Size  Location     Type
 12053 ;;  led             1    4[BANK0 ] unsigned char 
 12054 ;; Return value:  Size  Location     Type
 12055 ;;		None               void
 12056 ;; Registers used:
 12057 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12058 ;; Tracked objects:
 12059 ;;		On entry : 0/0
 12060 ;;		On exit  : 0/0
 12061 ;;		Unchanged: 0/0
 12062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12063 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12064 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12066 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12067 ;;Total ram usage:        1 bytes
 12068 ;; Hardware stack levels used:    1
 12069 ;; Hardware stack levels required when called:    6
 12070 ;; This function calls:
 12071 ;;		_LedPointSelect
 12072 ;;		_setLED
 12073 ;; This function is called by:
 12074 ;;		_LED_Initialization
 12075 ;; This function uses a non-reentrant model
 12076 ;;
 12077                           
 12078                           
 12079                           ;psect for function _setLED_Initialization
 12080  1AC3                     _setLED_Initialization:	
 12081                           
 12082                           ;incstack = 0
 12083                           ; Regs used in _setLED_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 12084                           ;setLED_Initialization@led stored from wreg
 12085  1AC3  0020               	movlb	0	; select bank0
 12086  1AC4  00A4               	movwf	setLED_Initialization@led
 12087                           
 12088                           ;LED_B1.c: 69: LedPointSelect(led);
 12089  1AC5  0824               	movf	setLED_Initialization@led,w
 12090  1AC6  319C  24F6  319A   	fcall	_LedPointSelect
 12091                           
 12092                           ;LED_B1.c: 70: LED->Enable=1;
 12093  1AC9  0021               	movlb	1	; select bank1
 12094  1ACA  083A               	movf	_LED^(0+128),w
 12095  1ACB  0086               	movwf	6
 12096  1ACC  0187               	clrf	7
 12097  1ACD  1401               	bsf	1,0
 12098                           
 12099                           ;LED_B1.c: 71: setLED(led,0);
 12100  1ACE  0020               	movlb	0	; select bank0
 12101  1ACF  01A2               	clrf	setLED@command
 12102  1AD0  0824               	movf	setLED_Initialization@led,w
 12103  1AD1  3193  2366         	fcall	_setLED
 12104  1AD3  0008               	return
 12105  1AD4                     __end_of_setLED_Initialization:	
 12106                           
 12107                           	psect	text71
 12108  113E                     __ptext71:	
 12109 ;; *************** function _Flash_Memory_Main *****************
 12110 ;; Defined at:
 12111 ;;		line 873 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
 12112 ;; Parameters:    Size  Location     Type
 12113 ;;		None
 12114 ;; Auto vars:     Size  Location     Type
 12115 ;;		None
 12116 ;; Return value:  Size  Location     Type
 12117 ;;		None               void
 12118 ;; Registers used:
 12119 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12120 ;; Tracked objects:
 12121 ;;		On entry : 0/0
 12122 ;;		On exit  : 0/0
 12123 ;;		Unchanged: 0/0
 12124 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12125 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12126 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12128 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12129 ;;Total ram usage:        0 bytes
 12130 ;; Hardware stack levels used:    1
 12131 ;; Hardware stack levels required when called:    7
 12132 ;; This function calls:
 12133 ;;		_Flash_Memory_Modify
 12134 ;; This function is called by:
 12135 ;;		_main
 12136 ;; This function uses a non-reentrant model
 12137 ;;
 12138                           
 12139                           
 12140                           ;psect for function _Flash_Memory_Main
 12141  113E                     _Flash_Memory_Main:	
 12142                           
 12143                           ;MCU_B1.c: 875: if(Memory->GO)
 12144                           
 12145                           ;incstack = 0
 12146                           ; Regs used in _Flash_Memory_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12147  113E  0020               	movlb	0	; select bank0
 12148  113F  086D               	movf	_Memory,w
 12149  1140  3E22               	addlw	34
 12150  1141  0086               	movwf	6
 12151  1142  3002               	movlw	2	; select bank4/5
 12152  1143  0087               	movwf	7
 12153  1144  1C81               	btfss	1,1
 12154  1145  0008               	return
 12155                           
 12156                           ;MCU_B1.c: 876: {
 12157                           ;MCU_B1.c: 877: if(Memory->Modify)
 12158  1146  086D               	movf	_Memory,w
 12159  1147  3E22               	addlw	34
 12160  1148  0086               	movwf	6
 12161  1149  3002               	movlw	2	; select bank4/5
 12162  114A  0087               	movwf	7
 12163  114B  1C01               	btfss	1,0
 12164  114C  297B               	goto	l9801
 12165                           
 12166                           ;MCU_B1.c: 878: {
 12167                           ;MCU_B1.c: 879: Memory->Time++;
 12168  114D  086D               	movf	_Memory,w
 12169  114E  3E23               	addlw	35
 12170  114F  0086               	movwf	6
 12171  1150  3002               	movlw	2	; select bank4/5
 12172  1151  0087               	movwf	7
 12173  1152  3001               	movlw	1
 12174  1153  0781               	addwf	1,f
 12175  1154  3141               	addfsr 1,1
 12176  1155  1803               	skipnc
 12177  1156  0A81               	incf	1,f
 12178                           
 12179                           ;MCU_B1.c: 880: if(Memory->Time == 25)
 12180  1157  086D               	movf	_Memory,w
 12181  1158  3E23               	addlw	35
 12182  1159  0086               	movwf	6
 12183  115A  3002               	movlw	2	; select bank4/5
 12184  115B  0087               	movwf	7
 12185  115C  3F40               	moviw [0]fsr1
 12186  115D  3A19               	xorlw	25
 12187  115E  1D03               	skipz
 12188  115F  2962               	goto	u10215
 12189  1160  3F41               	moviw [1]fsr1
 12190  1161  3A00               	xorlw	0
 12191  1162                     u10215:	
 12192  1162  1D03               	skipz
 12193  1163  0008               	return
 12194                           
 12195                           ;MCU_B1.c: 881: {
 12196                           ;MCU_B1.c: 882: Memory->Time=0;
 12197  1164  086D               	movf	_Memory,w
 12198  1165  3E23               	addlw	35
 12199  1166  0086               	movwf	6
 12200  1167  3002               	movlw	2	; select bank4/5
 12201  1168  0087               	movwf	7
 12202  1169  3000               	movlw	0
 12203  116A  3FC0               	movwi [0]fsr1
 12204  116B  3FC1               	movwi [1]fsr1
 12205                           
 12206                           ;MCU_B1.c: 883: Memory->Modify=0;
 12207  116C  086D               	movf	_Memory,w
 12208  116D  3E22               	addlw	34
 12209  116E  0086               	movwf	6
 12210  116F  3002               	movlw	2	; select bank4/5
 12211  1170  0087               	movwf	7
 12212  1171  1001               	bcf	1,0
 12213                           
 12214                           ;MCU_B1.c: 884: Memory->GO=0;
 12215  1172  086D               	movf	_Memory,w
 12216  1173  3E22               	addlw	34
 12217  1174  0086               	movwf	6
 12218  1175  3002               	movlw	2	; select bank4/5
 12219  1176  0087               	movwf	7
 12220  1177  1081               	bcf	1,1
 12221                           
 12222                           ;MCU_B1.c: 885: Flash_Memory_Modify();
 12223  1178  3194  2489         	fcall	_Flash_Memory_Modify
 12224                           
 12225                           ;MCU_B1.c: 887: }
 12226                           ;MCU_B1.c: 888: }
 12227  117A  0008               	return
 12228  117B                     l9801:	
 12229                           
 12230                           ;MCU_B1.c: 889: else
 12231                           ;MCU_B1.c: 890: {
 12232                           ;MCU_B1.c: 891: Memory->GO=0;
 12233  117B  0020               	movlb	0	; select bank0
 12234  117C  086D               	movf	_Memory,w
 12235  117D  3E22               	addlw	34
 12236  117E  0086               	movwf	6
 12237  117F  3002               	movlw	2	; select bank4/5
 12238  1180  0087               	movwf	7
 12239  1181  1081               	bcf	1,1
 12240  1182  0008               	return
 12241  1183                     __end_of_Flash_Memory_Main:	
 12242                           
 12243                           	psect	text72
 12244  1489                     __ptext72:	
 12245 ;; *************** function _Flash_Memory_Modify *****************
 12246 ;; Defined at:
 12247 ;;		line 948 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
 12248 ;; Parameters:    Size  Location     Type
 12249 ;;		None
 12250 ;; Auto vars:     Size  Location     Type
 12251 ;;  i               1    6[BANK0 ] unsigned char 
 12252 ;; Return value:  Size  Location     Type
 12253 ;;		None               void
 12254 ;; Registers used:
 12255 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12256 ;; Tracked objects:
 12257 ;;		On entry : 0/0
 12258 ;;		On exit  : 0/0
 12259 ;;		Unchanged: 0/0
 12260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12262 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12263 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12264 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12265 ;;Total ram usage:        3 bytes
 12266 ;; Hardware stack levels used:    1
 12267 ;; Hardware stack levels required when called:    6
 12268 ;; This function calls:
 12269 ;;		_Flash_Memory_Erasing
 12270 ;;		_Flash_Memory_Read
 12271 ;;		_Flash_Memory_Write
 12272 ;; This function is called by:
 12273 ;;		_Flash_Memory_Main
 12274 ;; This function uses a non-reentrant model
 12275 ;;
 12276                           
 12277                           
 12278                           ;psect for function _Flash_Memory_Modify
 12279  1489                     _Flash_Memory_Modify:	
 12280                           
 12281                           ;MCU_B1.c: 950: char i;
 12282                           ;MCU_B1.c: 951: for(i=0;i<32;i++)
 12283                           
 12284                           ;incstack = 0
 12285                           ; Regs used in _Flash_Memory_Modify: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12286  1489  0020               	movlb	0	; select bank0
 12287  148A  01A6               	clrf	Flash_Memory_Modify@i
 12288  148B  3020               	movlw	32
 12289  148C  0226               	subwf	Flash_Memory_Modify@i,w
 12290  148D  1803               	btfsc	3,0
 12291  148E  2CA6               	goto	l9291
 12292  148F                     l9285:	
 12293                           
 12294                           ;MCU_B1.c: 952: {
 12295                           ;MCU_B1.c: 953: Memory->Data[i]=Flash_Memory_Read(i);
 12296  148F  0826               	movf	Flash_Memory_Modify@i,w
 12297  1490  319B  23D8  3194   	fcall	_Flash_Memory_Read
 12298  1493  0020               	movlb	0	; select bank0
 12299  1494  00A4               	movwf	??_Flash_Memory_Modify
 12300  1495  0826               	movf	Flash_Memory_Modify@i,w
 12301  1496  076D               	addwf	_Memory,w
 12302  1497  00A5               	movwf	??_Flash_Memory_Modify+1
 12303  1498  0825               	movf	??_Flash_Memory_Modify+1,w
 12304  1499  0086               	movwf	6
 12305  149A  3002               	movlw	2	; select bank4/5
 12306  149B  0087               	movwf	7
 12307  149C  0824               	movf	??_Flash_Memory_Modify,w
 12308  149D  0081               	movwf	1
 12309  149E  3001               	movlw	1
 12310  149F  00A4               	movwf	??_Flash_Memory_Modify
 12311  14A0  0824               	movf	??_Flash_Memory_Modify,w
 12312  14A1  07A6               	addwf	Flash_Memory_Modify@i,f
 12313  14A2  3020               	movlw	32
 12314  14A3  0226               	subwf	Flash_Memory_Modify@i,w
 12315  14A4  1C03               	skipc
 12316  14A5  2C8F               	goto	l9285
 12317  14A6                     l9291:	
 12318                           
 12319                           ;MCU_B1.c: 954: }
 12320                           ;MCU_B1.c: 955: Memory->Data[0]=Product->Data[12];
 12321  14A6  086E               	movf	_Product,w
 12322  14A7  3E0C               	addlw	12
 12323  14A8  0086               	movwf	6
 12324  14A9  3001               	movlw	1	; select bank2/3
 12325  14AA  0087               	movwf	7
 12326  14AB  0801               	movf	1,w
 12327  14AC  00A4               	movwf	??_Flash_Memory_Modify
 12328  14AD  086D               	movf	_Memory,w
 12329  14AE  0086               	movwf	6
 12330  14AF  3002               	movlw	2	; select bank4/5
 12331  14B0  0087               	movwf	7
 12332  14B1  0824               	movf	??_Flash_Memory_Modify,w
 12333  14B2  0081               	movwf	1
 12334                           
 12335                           ;MCU_B1.c: 956: Memory->Data[1]=Product->Data[13];
 12336  14B3  086E               	movf	_Product,w
 12337  14B4  3E0D               	addlw	13
 12338  14B5  0086               	movwf	6
 12339  14B6  3001               	movlw	1	; select bank2/3
 12340  14B7  0087               	movwf	7
 12341  14B8  0801               	movf	1,w
 12342  14B9  00A4               	movwf	??_Flash_Memory_Modify
 12343  14BA  0A6D               	incf	_Memory,w
 12344  14BB  0086               	movwf	6
 12345  14BC  3002               	movlw	2	; select bank4/5
 12346  14BD  0087               	movwf	7
 12347  14BE  0824               	movf	??_Flash_Memory_Modify,w
 12348  14BF  0081               	movwf	1
 12349                           
 12350                           ;MCU_B1.c: 957: Memory->Data[2]=Product->Data[14];
 12351  14C0  086E               	movf	_Product,w
 12352  14C1  3E0E               	addlw	14
 12353  14C2  0086               	movwf	6
 12354  14C3  3001               	movlw	1	; select bank2/3
 12355  14C4  0087               	movwf	7
 12356  14C5  0801               	movf	1,w
 12357  14C6  00A4               	movwf	??_Flash_Memory_Modify
 12358  14C7  086D               	movf	_Memory,w
 12359  14C8  3E02               	addlw	2
 12360  14C9  0086               	movwf	6
 12361  14CA  3002               	movlw	2	; select bank4/5
 12362  14CB  0087               	movwf	7
 12363  14CC  0824               	movf	??_Flash_Memory_Modify,w
 12364  14CD  0081               	movwf	1
 12365                           
 12366                           ;MCU_B1.c: 963: if(Memory->LoopSave)
 12367  14CE  086D               	movf	_Memory,w
 12368  14CF  3E22               	addlw	34
 12369  14D0  0086               	movwf	6
 12370  14D1  3002               	movlw	2	; select bank4/5
 12371  14D2  0087               	movwf	7
 12372  14D3  1D01               	btfss	1,2
 12373  14D4  2CE6               	goto	l9295
 12374                           
 12375                           ;MCU_B1.c: 964: {
 12376                           ;MCU_B1.c: 965: Memory->LoopSave=0;
 12377  14D5  086D               	movf	_Memory,w
 12378  14D6  3E22               	addlw	34
 12379  14D7  0086               	movwf	6
 12380  14D8  3002               	movlw	2	; select bank4/5
 12381  14D9  0087               	movwf	7
 12382  14DA  1101               	bcf	1,2
 12383                           
 12384                           ;MCU_B1.c: 966: TMain->FirstOpen=0;
 12385  14DB  086F               	movf	_TMain,w
 12386  14DC  0086               	movwf	6
 12387  14DD  3001               	movlw	1	; select bank2/3
 12388  14DE  0087               	movwf	7
 12389  14DF  1281               	bcf	1,5
 12390                           
 12391                           ;MCU_B1.c: 967: TMain->First=0;
 12392  14E0  086F               	movf	_TMain,w
 12393  14E1  3E03               	addlw	3
 12394  14E2  0086               	movwf	6
 12395  14E3  3001               	movlw	1	; select bank2/3
 12396  14E4  0087               	movwf	7
 12397  14E5  1081               	bcf	1,1
 12398  14E6                     l9295:	
 12399                           
 12400                           ;MCU_B1.c: 969: }
 12401                           ;MCU_B1.c: 970: GIE=0;
 12402  14E6  138B               	bcf	11,7	;volatile
 12403                           
 12404                           ;MCU_B1.c: 971: Flash_Memory_Erasing();
 12405  14E7  3199  21DE  3194   	fcall	_Flash_Memory_Erasing
 12406                           
 12407                           ;MCU_B1.c: 972: Flash_Memory_Write();
 12408  14EA  319E  26AA         	fcall	_Flash_Memory_Write
 12409                           
 12410                           ;MCU_B1.c: 973: GIE=1;
 12411  14EC  178B               	bsf	11,7	;volatile
 12412  14ED  0008               	return
 12413  14EE                     __end_of_Flash_Memory_Modify:	
 12414                           
 12415                           	psect	text73
 12416  19DE                     __ptext73:	
 12417 ;; *************** function _Flash_Memory_Erasing *****************
 12418 ;; Defined at:
 12419 ;;		line 937 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
 12420 ;; Parameters:    Size  Location     Type
 12421 ;;		None
 12422 ;; Auto vars:     Size  Location     Type
 12423 ;;		None
 12424 ;; Return value:  Size  Location     Type
 12425 ;;		None               void
 12426 ;; Registers used:
 12427 ;;		wreg, status,2, status,0, pclath, cstack
 12428 ;; Tracked objects:
 12429 ;;		On entry : 0/0
 12430 ;;		On exit  : 0/0
 12431 ;;		Unchanged: 0/0
 12432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12433 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12434 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12436 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12437 ;;Total ram usage:        0 bytes
 12438 ;; Hardware stack levels used:    1
 12439 ;; Hardware stack levels required when called:    5
 12440 ;; This function calls:
 12441 ;;		_Flash_Memory_Unlock
 12442 ;; This function is called by:
 12443 ;;		_Flash_Memory_Modify
 12444 ;; This function uses a non-reentrant model
 12445 ;;
 12446                           
 12447                           
 12448                           ;psect for function _Flash_Memory_Erasing
 12449  19DE                     _Flash_Memory_Erasing:	
 12450                           
 12451                           ;MCU_B1.c: 939: CFGS=0;
 12452                           
 12453                           ;incstack = 0
 12454                           ; Regs used in _Flash_Memory_Erasing: [wreg+status,2+status,0+pclath+cstack]
 12455  19DE  0023               	movlb	3	; select bank3
 12456  19DF  1315               	bcf	21,6	;volatile
 12457                           
 12458                           ;MCU_B1.c: 940: PMADRH=0x30;
 12459  19E0  3030               	movlw	48
 12460  19E1  0092               	movwf	18	;volatile
 12461                           
 12462                           ;MCU_B1.c: 941: PMADRL=0x00;
 12463  19E2  0191               	clrf	17	;volatile
 12464                           
 12465                           ;MCU_B1.c: 942: FREE=1;
 12466  19E3  1615               	bsf	21,4	;volatile
 12467                           
 12468                           ;MCU_B1.c: 943: WREN=1;
 12469  19E4  1515               	bsf	21,2	;volatile
 12470                           
 12471                           ;MCU_B1.c: 944: Flash_Memory_Unlock();
 12472  19E5  3199  215C         	fcall	_Flash_Memory_Unlock
 12473                           
 12474                           ;MCU_B1.c: 945: WREN=0;
 12475  19E7  0023               	movlb	3	; select bank3
 12476  19E8  1115               	bcf	21,2	;volatile
 12477  19E9  0008               	return
 12478  19EA                     __end_of_Flash_Memory_Erasing:	
 12479                           
 12480                           	psect	text74
 12481  0E21                     __ptext74:	
 12482 ;; *************** function _Flash_Memory_Initialization *****************
 12483 ;; Defined at:
 12484 ;;		line 828 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
 12485 ;; Parameters:    Size  Location     Type
 12486 ;;		None
 12487 ;; Auto vars:     Size  Location     Type
 12488 ;;  i               1   62[BANK0 ] unsigned char 
 12489 ;; Return value:  Size  Location     Type
 12490 ;;		None               void
 12491 ;; Registers used:
 12492 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12493 ;; Tracked objects:
 12494 ;;		On entry : 0/0
 12495 ;;		On exit  : 0/0
 12496 ;;		Unchanged: 0/0
 12497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12498 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12499 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12500 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12501 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12502 ;;Total ram usage:        2 bytes
 12503 ;; Hardware stack levels used:    1
 12504 ;; Hardware stack levels required when called:    7
 12505 ;; This function calls:
 12506 ;;		_Flash_Memory_Read
 12507 ;;		_Flash_Memory_Write
 12508 ;;		_setPercentValue
 12509 ;; This function is called by:
 12510 ;;		_main
 12511 ;; This function uses a non-reentrant model
 12512 ;;
 12513                           
 12514                           
 12515                           ;psect for function _Flash_Memory_Initialization
 12516  0E21                     _Flash_Memory_Initialization:	
 12517                           
 12518                           ;MCU_B1.c: 830: char i;
 12519                           ;MCU_B1.c: 831: if(Flash_Memory_Read(31) == 0xaa)
 12520                           
 12521                           ;incstack = 0
 12522                           ; Regs used in _Flash_Memory_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 12523  0E21  301F               	movlw	31
 12524  0E22  319B  23D8  318E   	fcall	_Flash_Memory_Read
 12525  0E25  3AAA               	xorlw	170
 12526  0E26  1D03               	skipz
 12527  0E27  2E99               	goto	l9687
 12528                           
 12529                           ;MCU_B1.c: 832: {
 12530                           ;MCU_B1.c: 833: Product->Data[12]=Flash_Memory_Read(0);
 12531  0E28  3000               	movlw	0
 12532  0E29  319B  23D8  318E   	fcall	_Flash_Memory_Read
 12533  0E2C  0020               	movlb	0	; select bank0
 12534  0E2D  00DD               	movwf	??_Flash_Memory_Initialization
 12535  0E2E  086E               	movf	_Product,w
 12536  0E2F  3E0C               	addlw	12
 12537  0E30  0086               	movwf	6
 12538  0E31  3001               	movlw	1	; select bank2/3
 12539  0E32  0087               	movwf	7
 12540  0E33  085D               	movf	??_Flash_Memory_Initialization,w
 12541  0E34  0081               	movwf	1
 12542                           
 12543                           ;MCU_B1.c: 834: Product->Data[13]=Flash_Memory_Read(1);
 12544  0E35  3001               	movlw	1
 12545  0E36  319B  23D8  318E   	fcall	_Flash_Memory_Read
 12546  0E39  0020               	movlb	0	; select bank0
 12547  0E3A  00DD               	movwf	??_Flash_Memory_Initialization
 12548  0E3B  086E               	movf	_Product,w
 12549  0E3C  3E0D               	addlw	13
 12550  0E3D  0086               	movwf	6
 12551  0E3E  3001               	movlw	1	; select bank2/3
 12552  0E3F  0087               	movwf	7
 12553  0E40  085D               	movf	??_Flash_Memory_Initialization,w
 12554  0E41  0081               	movwf	1
 12555                           
 12556                           ;MCU_B1.c: 835: Product->Data[14]=Flash_Memory_Read(2);
 12557  0E42  3002               	movlw	2
 12558  0E43  319B  23D8  318E   	fcall	_Flash_Memory_Read
 12559  0E46  0020               	movlb	0	; select bank0
 12560  0E47  00DD               	movwf	??_Flash_Memory_Initialization
 12561  0E48  086E               	movf	_Product,w
 12562  0E49  3E0E               	addlw	14
 12563  0E4A  0086               	movwf	6
 12564  0E4B  3001               	movlw	1	; select bank2/3
 12565  0E4C  0087               	movwf	7
 12566  0E4D  085D               	movf	??_Flash_Memory_Initialization,w
 12567  0E4E  0081               	movwf	1
 12568                           
 12569                           ;MCU_B1.c: 841: i=setPercentValue(((char)((100-55)*1.5)));
 12570  0E4F  3043               	movlw	67
 12571  0E50  3191  2183  318E   	fcall	_setPercentValue
 12572  0E53  0020               	movlb	0	; select bank0
 12573  0E54  00DD               	movwf	??_Flash_Memory_Initialization
 12574  0E55  085D               	movf	??_Flash_Memory_Initialization,w
 12575  0E56  00DE               	movwf	Flash_Memory_Initialization@i
 12576                           
 12577                           ;MCU_B1.c: 842: Product->Data[21]=i;
 12578  0E57  085E               	movf	Flash_Memory_Initialization@i,w
 12579  0E58  00DD               	movwf	??_Flash_Memory_Initialization
 12580  0E59  086E               	movf	_Product,w
 12581  0E5A  3E15               	addlw	21
 12582  0E5B  0086               	movwf	6
 12583  0E5C  3001               	movlw	1	; select bank2/3
 12584  0E5D  0087               	movwf	7
 12585  0E5E  085D               	movf	??_Flash_Memory_Initialization,w
 12586  0E5F  0081               	movwf	1
 12587                           
 12588                           ;MCU_B1.c: 843: Product->Data[22]=i;
 12589  0E60  085E               	movf	Flash_Memory_Initialization@i,w
 12590  0E61  00DD               	movwf	??_Flash_Memory_Initialization
 12591  0E62  086E               	movf	_Product,w
 12592  0E63  3E16               	addlw	22
 12593  0E64  0086               	movwf	6
 12594  0E65  3001               	movlw	1	; select bank2/3
 12595  0E66  0087               	movwf	7
 12596  0E67  085D               	movf	??_Flash_Memory_Initialization,w
 12597  0E68  0081               	movwf	1
 12598                           
 12599                           ;MCU_B1.c: 844: Product->Data[23]=i;
 12600  0E69  085E               	movf	Flash_Memory_Initialization@i,w
 12601  0E6A  00DD               	movwf	??_Flash_Memory_Initialization
 12602  0E6B  086E               	movf	_Product,w
 12603  0E6C  3E17               	addlw	23
 12604  0E6D  0086               	movwf	6
 12605  0E6E  3001               	movlw	1	; select bank2/3
 12606  0E6F  0087               	movwf	7
 12607  0E70  085D               	movf	??_Flash_Memory_Initialization,w
 12608  0E71  0081               	movwf	1
 12609                           
 12610                           ;MCU_B1.c: 846: if(Product->Data[12]==0xff && Product->Data[13]==0xff && Product->Data[1
      +                          4]==0xff)
 12611  0E72  086E               	movf	_Product,w
 12612  0E73  3E0C               	addlw	12
 12613  0E74  0086               	movwf	6
 12614  0E75  3001               	movlw	1	; select bank2/3
 12615  0E76  0087               	movwf	7
 12616  0E77  0801               	movf	1,w
 12617  0E78  3AFF               	xorlw	255
 12618  0E79  1D03               	skipz
 12619  0E7A  0008               	return
 12620  0E7B  086E               	movf	_Product,w
 12621  0E7C  3E0D               	addlw	13
 12622  0E7D  0086               	movwf	6
 12623  0E7E  3001               	movlw	1	; select bank2/3
 12624  0E7F  0087               	movwf	7
 12625  0E80  0801               	movf	1,w
 12626  0E81  3AFF               	xorlw	255
 12627  0E82  1D03               	skipz
 12628  0E83  0008               	return
 12629  0E84  086E               	movf	_Product,w
 12630  0E85  3E0E               	addlw	14
 12631  0E86  0086               	movwf	6
 12632  0E87  3001               	movlw	1	; select bank2/3
 12633  0E88  0087               	movwf	7
 12634  0E89  0801               	movf	1,w
 12635  0E8A  3AFF               	xorlw	255
 12636  0E8B  1D03               	skipz
 12637  0E8C  0008               	return
 12638                           
 12639                           ;MCU_B1.c: 847: {
 12640                           ;MCU_B1.c: 848: TMain->FirstOpen=1;
 12641  0E8D  086F               	movf	_TMain,w
 12642  0E8E  0086               	movwf	6
 12643  0E8F  3001               	movlw	1	; select bank2/3
 12644  0E90  0087               	movwf	7
 12645  0E91  1681               	bsf	1,5
 12646                           
 12647                           ;MCU_B1.c: 849: TMain->First=1;
 12648  0E92  086F               	movf	_TMain,w
 12649  0E93  3E03               	addlw	3
 12650  0E94  0086               	movwf	6
 12651  0E95  3001               	movlw	1	; select bank2/3
 12652  0E96  0087               	movwf	7
 12653  0E97  1481               	bsf	1,1
 12654                           
 12655                           ;MCU_B1.c: 850: }
 12656                           ;MCU_B1.c: 851: }
 12657  0E98  0008               	return
 12658  0E99                     l9687:	
 12659                           
 12660                           ;MCU_B1.c: 852: else
 12661                           ;MCU_B1.c: 853: {
 12662                           ;MCU_B1.c: 854: i=setPercentValue(((char)((100-55)*1.5)));
 12663  0E99  3043               	movlw	67
 12664  0E9A  3191  2183  318E   	fcall	_setPercentValue
 12665  0E9D  0020               	movlb	0	; select bank0
 12666  0E9E  00DD               	movwf	??_Flash_Memory_Initialization
 12667  0E9F  085D               	movf	??_Flash_Memory_Initialization,w
 12668  0EA0  00DE               	movwf	Flash_Memory_Initialization@i
 12669                           
 12670                           ;MCU_B1.c: 855: Memory->Data[0]=0xff;
 12671  0EA1  30FF               	movlw	255
 12672  0EA2  00DD               	movwf	??_Flash_Memory_Initialization
 12673  0EA3  086D               	movf	_Memory,w
 12674  0EA4  0086               	movwf	6
 12675  0EA5  3002               	movlw	2	; select bank4/5
 12676  0EA6  0087               	movwf	7
 12677  0EA7  085D               	movf	??_Flash_Memory_Initialization,w
 12678  0EA8  0081               	movwf	1
 12679                           
 12680                           ;MCU_B1.c: 856: Memory->Data[1]=0xff;
 12681  0EA9  30FF               	movlw	255
 12682  0EAA  00DD               	movwf	??_Flash_Memory_Initialization
 12683  0EAB  0A6D               	incf	_Memory,w
 12684  0EAC  0086               	movwf	6
 12685  0EAD  3002               	movlw	2	; select bank4/5
 12686  0EAE  0087               	movwf	7
 12687  0EAF  085D               	movf	??_Flash_Memory_Initialization,w
 12688  0EB0  0081               	movwf	1
 12689                           
 12690                           ;MCU_B1.c: 857: Memory->Data[2]=0xff;
 12691  0EB1  30FF               	movlw	255
 12692  0EB2  00DD               	movwf	??_Flash_Memory_Initialization
 12693  0EB3  086D               	movf	_Memory,w
 12694  0EB4  3E02               	addlw	2
 12695  0EB5  0086               	movwf	6
 12696  0EB6  3002               	movlw	2	; select bank4/5
 12697  0EB7  0087               	movwf	7
 12698  0EB8  085D               	movf	??_Flash_Memory_Initialization,w
 12699  0EB9  0081               	movwf	1
 12700                           
 12701                           ;MCU_B1.c: 858: Memory->Data[3]=0xff;
 12702  0EBA  30FF               	movlw	255
 12703  0EBB  00DD               	movwf	??_Flash_Memory_Initialization
 12704  0EBC  086D               	movf	_Memory,w
 12705  0EBD  3E03               	addlw	3
 12706  0EBE  0086               	movwf	6
 12707  0EBF  3002               	movlw	2	; select bank4/5
 12708  0EC0  0087               	movwf	7
 12709  0EC1  085D               	movf	??_Flash_Memory_Initialization,w
 12710  0EC2  0081               	movwf	1
 12711                           
 12712                           ;MCU_B1.c: 859: Memory->Data[4]=0xff;
 12713  0EC3  30FF               	movlw	255
 12714  0EC4  00DD               	movwf	??_Flash_Memory_Initialization
 12715  0EC5  086D               	movf	_Memory,w
 12716  0EC6  3E04               	addlw	4
 12717  0EC7  0086               	movwf	6
 12718  0EC8  3002               	movlw	2	; select bank4/5
 12719  0EC9  0087               	movwf	7
 12720  0ECA  085D               	movf	??_Flash_Memory_Initialization,w
 12721  0ECB  0081               	movwf	1
 12722                           
 12723                           ;MCU_B1.c: 860: Memory->Data[5]=0xff;
 12724  0ECC  30FF               	movlw	255
 12725  0ECD  00DD               	movwf	??_Flash_Memory_Initialization
 12726  0ECE  086D               	movf	_Memory,w
 12727  0ECF  3E05               	addlw	5
 12728  0ED0  0086               	movwf	6
 12729  0ED1  3002               	movlw	2	; select bank4/5
 12730  0ED2  0087               	movwf	7
 12731  0ED3  085D               	movf	??_Flash_Memory_Initialization,w
 12732  0ED4  0081               	movwf	1
 12733                           
 12734                           ;MCU_B1.c: 861: Memory->Data[31]=0xaa;
 12735  0ED5  30AA               	movlw	170
 12736  0ED6  00DD               	movwf	??_Flash_Memory_Initialization
 12737  0ED7  086D               	movf	_Memory,w
 12738  0ED8  3E1F               	addlw	31
 12739  0ED9  0086               	movwf	6
 12740  0EDA  3002               	movlw	2	; select bank4/5
 12741  0EDB  0087               	movwf	7
 12742  0EDC  085D               	movf	??_Flash_Memory_Initialization,w
 12743  0EDD  0081               	movwf	1
 12744                           
 12745                           ;MCU_B1.c: 862: Product->Data[21]=i;
 12746  0EDE  085E               	movf	Flash_Memory_Initialization@i,w
 12747  0EDF  00DD               	movwf	??_Flash_Memory_Initialization
 12748  0EE0  086E               	movf	_Product,w
 12749  0EE1  3E15               	addlw	21
 12750  0EE2  0086               	movwf	6
 12751  0EE3  3001               	movlw	1	; select bank2/3
 12752  0EE4  0087               	movwf	7
 12753  0EE5  085D               	movf	??_Flash_Memory_Initialization,w
 12754  0EE6  0081               	movwf	1
 12755                           
 12756                           ;MCU_B1.c: 863: Product->Data[22]=i;
 12757  0EE7  085E               	movf	Flash_Memory_Initialization@i,w
 12758  0EE8  00DD               	movwf	??_Flash_Memory_Initialization
 12759  0EE9  086E               	movf	_Product,w
 12760  0EEA  3E16               	addlw	22
 12761  0EEB  0086               	movwf	6
 12762  0EEC  3001               	movlw	1	; select bank2/3
 12763  0EED  0087               	movwf	7
 12764  0EEE  085D               	movf	??_Flash_Memory_Initialization,w
 12765  0EEF  0081               	movwf	1
 12766                           
 12767                           ;MCU_B1.c: 864: Product->Data[23]=i;
 12768  0EF0  085E               	movf	Flash_Memory_Initialization@i,w
 12769  0EF1  00DD               	movwf	??_Flash_Memory_Initialization
 12770  0EF2  086E               	movf	_Product,w
 12771  0EF3  3E17               	addlw	23
 12772  0EF4  0086               	movwf	6
 12773  0EF5  3001               	movlw	1	; select bank2/3
 12774  0EF6  0087               	movwf	7
 12775  0EF7  085D               	movf	??_Flash_Memory_Initialization,w
 12776  0EF8  0081               	movwf	1
 12777                           
 12778                           ;MCU_B1.c: 865: GIE=0;
 12779  0EF9  138B               	bcf	11,7	;volatile
 12780                           
 12781                           ;MCU_B1.c: 866: Flash_Memory_Write();
 12782  0EFA  319E  26AA         	fcall	_Flash_Memory_Write
 12783                           
 12784                           ;MCU_B1.c: 867: GIE=1;
 12785  0EFC  178B               	bsf	11,7	;volatile
 12786                           
 12787                           ;MCU_B1.c: 868: TMain->FirstOpen=1;
 12788  0EFD  0020               	movlb	0	; select bank0
 12789  0EFE  086F               	movf	_TMain,w
 12790  0EFF  0086               	movwf	6
 12791  0F00  3001               	movlw	1	; select bank2/3
 12792  0F01  0087               	movwf	7
 12793  0F02  1681               	bsf	1,5
 12794                           
 12795                           ;MCU_B1.c: 869: TMain->First=1;
 12796  0F03  086F               	movf	_TMain,w
 12797  0F04  3E03               	addlw	3
 12798  0F05  0086               	movwf	6
 12799  0F06  3001               	movlw	1	; select bank2/3
 12800  0F07  0087               	movwf	7
 12801  0F08  1481               	bsf	1,1
 12802  0F09  0008               	return
 12803  0F0A                     __end_of_Flash_Memory_Initialization:	
 12804                           
 12805                           	psect	text75
 12806  1EAA                     __ptext75:	
 12807 ;; *************** function _Flash_Memory_Write *****************
 12808 ;; Defined at:
 12809 ;;		line 917 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
 12810 ;; Parameters:    Size  Location     Type
 12811 ;;		None
 12812 ;; Auto vars:     Size  Location     Type
 12813 ;;  i               1    1[BANK0 ] unsigned char 
 12814 ;; Return value:  Size  Location     Type
 12815 ;;		None               void
 12816 ;; Registers used:
 12817 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12818 ;; Tracked objects:
 12819 ;;		On entry : 0/0
 12820 ;;		On exit  : 0/0
 12821 ;;		Unchanged: 0/0
 12822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12823 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12824 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12825 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12826 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12827 ;;Total ram usage:        2 bytes
 12828 ;; Hardware stack levels used:    1
 12829 ;; Hardware stack levels required when called:    5
 12830 ;; This function calls:
 12831 ;;		_Flash_Memory_Unlock
 12832 ;; This function is called by:
 12833 ;;		_Flash_Memory_Initialization
 12834 ;;		_Flash_Memory_Modify
 12835 ;; This function uses a non-reentrant model
 12836 ;;
 12837                           
 12838                           
 12839                           ;psect for function _Flash_Memory_Write
 12840  1EAA                     _Flash_Memory_Write:	
 12841                           
 12842                           ;MCU_B1.c: 919: char i;
 12843                           ;MCU_B1.c: 920: CFGS=0;
 12844                           
 12845                           ;incstack = 0
 12846                           ; Regs used in _Flash_Memory_Write: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12847  1EAA  0023               	movlb	3	; select bank3
 12848  1EAB  1315               	bcf	21,6	;volatile
 12849                           
 12850                           ;MCU_B1.c: 921: PMADRH=0x30;
 12851  1EAC  3030               	movlw	48
 12852  1EAD  0092               	movwf	18	;volatile
 12853                           
 12854                           ;MCU_B1.c: 922: PMDATH=0;
 12855  1EAE  0194               	clrf	20	;volatile
 12856                           
 12857                           ;MCU_B1.c: 923: FREE=0;
 12858  1EAF  1215               	bcf	21,4	;volatile
 12859                           
 12860                           ;MCU_B1.c: 924: LWLO=1;
 12861  1EB0  1695               	bsf	21,5	;volatile
 12862                           
 12863                           ;MCU_B1.c: 925: WREN=1;
 12864  1EB1  1515               	bsf	21,2	;volatile
 12865                           
 12866                           ;MCU_B1.c: 926: for(i=0 ; i<32 ; i++)
 12867  1EB2  0020               	movlb	0	; select bank0
 12868  1EB3  01A1               	clrf	Flash_Memory_Write@i
 12869  1EB4  3020               	movlw	32
 12870  1EB5  0221               	subwf	Flash_Memory_Write@i,w
 12871  1EB6  1803               	btfsc	3,0
 12872  1EB7  2ED2               	goto	l1707
 12873  1EB8                     l8849:	
 12874                           
 12875                           ;MCU_B1.c: 927: {
 12876                           ;MCU_B1.c: 928: PMADRL=i;
 12877  1EB8  0821               	movf	Flash_Memory_Write@i,w
 12878  1EB9  0023               	movlb	3	; select bank3
 12879  1EBA  0091               	movwf	17	;volatile
 12880                           
 12881                           ;MCU_B1.c: 929: PMDATL=Memory->Data[i];
 12882  1EBB  0020               	movlb	0	; select bank0
 12883  1EBC  0821               	movf	Flash_Memory_Write@i,w
 12884  1EBD  076D               	addwf	_Memory,w
 12885  1EBE  00A0               	movwf	??_Flash_Memory_Write
 12886  1EBF  0820               	movf	??_Flash_Memory_Write,w
 12887  1EC0  0086               	movwf	6
 12888  1EC1  3002               	movlw	2	; select bank4/5
 12889  1EC2  0087               	movwf	7
 12890  1EC3  0801               	movf	1,w
 12891  1EC4  0023               	movlb	3	; select bank3
 12892  1EC5  0093               	movwf	19	;volatile
 12893                           
 12894                           ;MCU_B1.c: 930: Flash_Memory_Unlock();
 12895  1EC6  3199  215C  319E   	fcall	_Flash_Memory_Unlock
 12896  1EC9  3001               	movlw	1
 12897  1ECA  0020               	movlb	0	; select bank0
 12898  1ECB  00A0               	movwf	??_Flash_Memory_Write
 12899  1ECC  0820               	movf	??_Flash_Memory_Write,w
 12900  1ECD  07A1               	addwf	Flash_Memory_Write@i,f
 12901  1ECE  3020               	movlw	32
 12902  1ECF  0221               	subwf	Flash_Memory_Write@i,w
 12903  1ED0  1C03               	skipc
 12904  1ED1  2EB8               	goto	l8849
 12905  1ED2                     l1707:	
 12906                           
 12907                           ;MCU_B1.c: 931: }
 12908                           ;MCU_B1.c: 932: LWLO=0;
 12909  1ED2  0023               	movlb	3	; select bank3
 12910  1ED3  1295               	bcf	21,5	;volatile
 12911                           
 12912                           ;MCU_B1.c: 933: Flash_Memory_Unlock();
 12913  1ED4  3199  215C         	fcall	_Flash_Memory_Unlock
 12914                           
 12915                           ;MCU_B1.c: 934: WREN=0;
 12916  1ED6  0023               	movlb	3	; select bank3
 12917  1ED7  1115               	bcf	21,2	;volatile
 12918  1ED8  0008               	return
 12919  1ED9                     __end_of_Flash_Memory_Write:	
 12920                           
 12921                           	psect	text76
 12922  195C                     __ptext76:	
 12923 ;; *************** function _Flash_Memory_Unlock *****************
 12924 ;; Defined at:
 12925 ;;		line 896 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
 12926 ;; Parameters:    Size  Location     Type
 12927 ;;		None
 12928 ;; Auto vars:     Size  Location     Type
 12929 ;;		None
 12930 ;; Return value:  Size  Location     Type
 12931 ;;		None               void
 12932 ;; Registers used:
 12933 ;;		wreg
 12934 ;; Tracked objects:
 12935 ;;		On entry : 0/0
 12936 ;;		On exit  : 0/0
 12937 ;;		Unchanged: 0/0
 12938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12939 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12942 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12943 ;;Total ram usage:        0 bytes
 12944 ;; Hardware stack levels used:    1
 12945 ;; Hardware stack levels required when called:    4
 12946 ;; This function calls:
 12947 ;;		Nothing
 12948 ;; This function is called by:
 12949 ;;		_Flash_Memory_Write
 12950 ;;		_Flash_Memory_Erasing
 12951 ;; This function uses a non-reentrant model
 12952 ;;
 12953                           
 12954                           
 12955                           ;psect for function _Flash_Memory_Unlock
 12956  195C                     _Flash_Memory_Unlock:	
 12957                           
 12958                           ;MCU_B1.c: 898: PMCON2=0x55;
 12959                           
 12960                           ;incstack = 0
 12961                           ; Regs used in _Flash_Memory_Unlock: [wreg]
 12962  195C  3055               	movlw	85
 12963  195D  0023               	movlb	3	; select bank3
 12964  195E  0096               	movwf	22	;volatile
 12965                           
 12966                           ;MCU_B1.c: 899: PMCON2=0xaa;
 12967  195F  30AA               	movlw	170
 12968  1960  0096               	movwf	22	;volatile
 12969                           
 12970                           ;MCU_B1.c: 900: WR=1;
 12971  1961  1495               	bsf	21,1	;volatile
 12972                           
 12973                           ;MCU_B1.c: 901: __nop();
 12974  1962  0000               	nop
 12975                           
 12976                           ;MCU_B1.c: 902: __nop();
 12977  1963  0000               	nop
 12978  1964  0008               	return
 12979  1965                     __end_of_Flash_Memory_Unlock:	
 12980                           
 12981                           	psect	text77
 12982  1BD8                     __ptext77:	
 12983 ;; *************** function _Flash_Memory_Read *****************
 12984 ;; Defined at:
 12985 ;;		line 905 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
 12986 ;; Parameters:    Size  Location     Type
 12987 ;;  address         1    wreg     unsigned char 
 12988 ;; Auto vars:     Size  Location     Type
 12989 ;;  address         1    2[BANK0 ] unsigned char 
 12990 ;;  ret             1    3[BANK0 ] unsigned char 
 12991 ;;  i               1    1[BANK0 ] unsigned char 
 12992 ;; Return value:  Size  Location     Type
 12993 ;;                  1    wreg      unsigned char 
 12994 ;; Registers used:
 12995 ;;		wreg, status,2
 12996 ;; Tracked objects:
 12997 ;;		On entry : 0/0
 12998 ;;		On exit  : 0/0
 12999 ;;		Unchanged: 0/0
 13000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13001 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13002 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13003 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13004 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13005 ;;Total ram usage:        4 bytes
 13006 ;; Hardware stack levels used:    1
 13007 ;; Hardware stack levels required when called:    4
 13008 ;; This function calls:
 13009 ;;		Nothing
 13010 ;; This function is called by:
 13011 ;;		_Flash_Memory_Initialization
 13012 ;;		_Flash_Memory_Modify
 13013 ;; This function uses a non-reentrant model
 13014 ;;
 13015                           
 13016                           
 13017                           ;psect for function _Flash_Memory_Read
 13018  1BD8                     _Flash_Memory_Read:	
 13019                           
 13020                           ;incstack = 0
 13021                           ; Regs used in _Flash_Memory_Read: [wreg+status,2]
 13022                           ;Flash_Memory_Read@address stored from wreg
 13023  1BD8  0020               	movlb	0	; select bank0
 13024  1BD9  00A2               	movwf	Flash_Memory_Read@address
 13025                           
 13026                           ;MCU_B1.c: 907: char i,ret=0;
 13027  1BDA  01A3               	clrf	Flash_Memory_Read@ret
 13028                           
 13029                           ;MCU_B1.c: 908: PMADRH=0x30;
 13030  1BDB  3030               	movlw	48
 13031  1BDC  0023               	movlb	3	; select bank3
 13032  1BDD  0092               	movwf	18	;volatile
 13033                           
 13034                           ;MCU_B1.c: 909: PMADRL=address;
 13035  1BDE  0020               	movlb	0	; select bank0
 13036  1BDF  0822               	movf	Flash_Memory_Read@address,w
 13037  1BE0  0023               	movlb	3	; select bank3
 13038  1BE1  0091               	movwf	17	;volatile
 13039                           
 13040                           ;MCU_B1.c: 910: CFGS=0;
 13041  1BE2  1315               	bcf	21,6	;volatile
 13042                           
 13043                           ;MCU_B1.c: 911: RD=1;
 13044  1BE3  1415               	bsf	21,0	;volatile
 13045                           
 13046                           ;MCU_B1.c: 912: i=PMDATH;
 13047  1BE4  0814               	movf	20,w	;volatile
 13048  1BE5  0020               	movlb	0	; select bank0
 13049  1BE6  00A0               	movwf	??_Flash_Memory_Read
 13050  1BE7  0820               	movf	??_Flash_Memory_Read,w
 13051  1BE8  00A1               	movwf	Flash_Memory_Read@i
 13052                           
 13053                           ;MCU_B1.c: 913: ret=PMDATL;
 13054  1BE9  0023               	movlb	3	; select bank3
 13055  1BEA  0813               	movf	19,w	;volatile
 13056  1BEB  0020               	movlb	0	; select bank0
 13057  1BEC  00A0               	movwf	??_Flash_Memory_Read
 13058  1BED  0820               	movf	??_Flash_Memory_Read,w
 13059  1BEE  00A3               	movwf	Flash_Memory_Read@ret
 13060                           
 13061                           ;MCU_B1.c: 914: return ret;
 13062  1BEF  0823               	movf	Flash_Memory_Read@ret,w
 13063  1BF0  0008               	return
 13064  1BF1                     __end_of_Flash_Memory_Read:	
 13065                           
 13066                           	psect	text78
 13067  1999                     __ptext78:	
 13068 ;; *************** function _DimmerLights_Main *****************
 13069 ;; Defined at:
 13070 ;;		line 114 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 13071 ;; Parameters:    Size  Location     Type
 13072 ;;		None
 13073 ;; Auto vars:     Size  Location     Type
 13074 ;;		None
 13075 ;; Return value:  Size  Location     Type
 13076 ;;		None               void
 13077 ;; Registers used:
 13078 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13079 ;; Tracked objects:
 13080 ;;		On entry : 0/0
 13081 ;;		On exit  : 0/0
 13082 ;;		Unchanged: 0/0
 13083 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13084 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13085 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13087 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13088 ;;Total ram usage:        0 bytes
 13089 ;; Hardware stack levels used:    1
 13090 ;; Hardware stack levels required when called:   10
 13091 ;; This function calls:
 13092 ;;		_DimmerLights_Close
 13093 ;;		_setDimmerLights_Main
 13094 ;; This function is called by:
 13095 ;;		_main
 13096 ;; This function uses a non-reentrant model
 13097 ;;
 13098                           
 13099                           
 13100                           ;psect for function _DimmerLights_Main
 13101  1999                     _DimmerLights_Main:	
 13102                           
 13103                           ;Dimmer_B1.c: 117: setDimmerLights_Main(1);
 13104                           
 13105                           ;incstack = 0
 13106                           ; Regs used in _DimmerLights_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13107  1999  3001               	movlw	1
 13108  199A  3188  20E3  3199   	fcall	_setDimmerLights_Main
 13109                           
 13110                           ;Dimmer_B1.c: 121: setDimmerLights_Main(2);
 13111  199D  3002               	movlw	2
 13112  199E  3188  20E3  3199   	fcall	_setDimmerLights_Main
 13113                           
 13114                           ;Dimmer_B1.c: 128: DimmerLights_Close();
 13115  19A1  319B  238E         	fcall	_DimmerLights_Close
 13116  19A3  0008               	return
 13117  19A4                     __end_of_DimmerLights_Main:	
 13118                           
 13119                           	psect	text79
 13120  08E3                     __ptext79:	
 13121 ;; *************** function _setDimmerLights_Main *****************
 13122 ;; Defined at:
 13123 ;;		line 131 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 13124 ;; Parameters:    Size  Location     Type
 13125 ;;  lights          1    wreg     unsigned char 
 13126 ;; Auto vars:     Size  Location     Type
 13127 ;;  lights          1   70[BANK0 ] unsigned char 
 13128 ;;  clear           1   69[BANK0 ] unsigned char 
 13129 ;; Return value:  Size  Location     Type
 13130 ;;		None               void
 13131 ;; Registers used:
 13132 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13133 ;; Tracked objects:
 13134 ;;		On entry : 0/0
 13135 ;;		On exit  : 0/0
 13136 ;;		Unchanged: 0/0
 13137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13138 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13139 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13141 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13142 ;;Total ram usage:        2 bytes
 13143 ;; Hardware stack levels used:    1
 13144 ;; Hardware stack levels required when called:    9
 13145 ;; This function calls:
 13146 ;;		_DimmerLightsPointSelect
 13147 ;;		_setBuz
 13148 ;;		_setDimmerLights
 13149 ;;		_setDimmerLights_Adj
 13150 ;; This function is called by:
 13151 ;;		_DimmerLights_Main
 13152 ;; This function uses a non-reentrant model
 13153 ;;
 13154                           
 13155                           
 13156                           ;psect for function _setDimmerLights_Main
 13157  08E3                     _setDimmerLights_Main:	
 13158                           
 13159                           ;incstack = 0
 13160                           ; Regs used in _setDimmerLights_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13161                           ;setDimmerLights_Main@lights stored from wreg
 13162  08E3  0020               	movlb	0	; select bank0
 13163  08E4  00E6               	movwf	setDimmerLights_Main@lights
 13164                           
 13165                           ;Dimmer_B1.c: 133: char clear=1;
 13166  08E5  01E5               	clrf	setDimmerLights_Main@clear
 13167  08E6  0AE5               	incf	setDimmerLights_Main@clear,f
 13168                           
 13169                           ;Dimmer_B1.c: 134: DimmerLightsPointSelect(lights);
 13170  08E7  0866               	movf	setDimmerLights_Main@lights,w
 13171  08E8  319A  22D4  3188   	fcall	_DimmerLightsPointSelect
 13172                           
 13173                           ;Dimmer_B1.c: 152: if(lights == 1)
 13174  08EB  0020               	movlb	0	; select bank0
 13175  08EC  0866               	movf	setDimmerLights_Main@lights,w
 13176  08ED  3A01               	xorlw	1
 13177  08EE  1D03               	skipz
 13178  08EF  28F2               	goto	l9159
 13179                           
 13180                           ;Dimmer_B1.c: 153: {
 13181                           ;Dimmer_B1.c: 154: clear=(!DimmerLights22->Clear)?0:1;
 13182  08F0  086C               	movf	_DimmerLights22,w
 13183  08F1  28F7               	goto	L13
 13184  08F2                     l9159:	
 13185                           ;Dimmer_B1.c: 155: }
 13186                           
 13187                           
 13188                           ;Dimmer_B1.c: 156: else if(lights == 2)
 13189  08F2  0866               	movf	setDimmerLights_Main@lights,w
 13190  08F3  3A02               	xorlw	2
 13191  08F4  1D03               	skipz
 13192  08F5  28FF               	goto	l9163
 13193                           
 13194                           ;Dimmer_B1.c: 157: {
 13195                           ;Dimmer_B1.c: 158: clear=(!DimmerLights11->Clear)?0:1;
 13196  08F6  086B               	movf	_DimmerLights11,w
 13197  08F7                     L13:	
 13198  08F7  3E0C               	addlw	12
 13199  08F8  0086               	movwf	6
 13200  08F9  3001               	movlw	1	; select bank2/3
 13201  08FA  0087               	movwf	7
 13202  08FB  3000               	movlw	0
 13203  08FC  1801               	btfsc	1,0
 13204  08FD  3001               	movlw	1
 13205  08FE  00E5               	movwf	setDimmerLights_Main@clear
 13206  08FF                     l9163:	
 13207                           
 13208                           ;Dimmer_B1.c: 159: }
 13209                           ;Dimmer_B1.c: 162: if(DimmerLights->Trigger)
 13210  08FF  086A               	movf	_DimmerLights,w
 13211  0900  3E09               	addlw	9
 13212  0901  0086               	movwf	6
 13213  0902  3001               	movlw	1	; select bank2/3
 13214  0903  0087               	movwf	7
 13215  0904  1C81               	btfss	1,1
 13216  0905  292A               	goto	l9177
 13217                           
 13218                           ;Dimmer_B1.c: 163: {
 13219                           ;Dimmer_B1.c: 164: if(clear)
 13220  0906  0865               	movf	setDimmerLights_Main@clear,w
 13221  0907  1903               	btfsc	3,2
 13222  0908  0008               	return
 13223                           
 13224                           ;Dimmer_B1.c: 165: {
 13225                           ;Dimmer_B1.c: 166: if(DimmerLights->Switch)
 13226  0909  086A               	movf	_DimmerLights,w
 13227  090A  3E09               	addlw	9
 13228  090B  0086               	movwf	6
 13229  090C  3001               	movlw	1	; select bank2/3
 13230  090D  0087               	movwf	7
 13231  090E  1C01               	btfss	1,0
 13232  090F  291D               	goto	l9173
 13233                           
 13234                           ;Dimmer_B1.c: 167: {
 13235                           ;Dimmer_B1.c: 168: DimmerLights->Trigger=0;
 13236  0910  086A               	movf	_DimmerLights,w
 13237  0911  3E09               	addlw	9
 13238  0912  0086               	movwf	6
 13239  0913  3001               	movlw	1	; select bank2/3
 13240  0914  0087               	movwf	7
 13241  0915  1081               	bcf	1,1
 13242                           
 13243                           ;Dimmer_B1.c: 169: setDimmerLights(lights,1);
 13244  0916  01A4               	clrf	setDimmerLights@status
 13245  0917  0AA4               	incf	setDimmerLights@status,f
 13246  0918  0866               	movf	setDimmerLights_Main@lights,w
 13247  0919  3189  21E5         	fcall	_setDimmerLights
 13248                           
 13249                           ;Dimmer_B1.c: 174: }
 13250  091B  0020               	movlb	0	; select bank0
 13251  091C  0008               	return
 13252  091D                     l9173:	
 13253                           
 13254                           ;Dimmer_B1.c: 175: else
 13255                           ;Dimmer_B1.c: 176: {
 13256                           ;Dimmer_B1.c: 177: DimmerLights->Trigger=0;
 13257  091D  0020               	movlb	0	; select bank0
 13258  091E  086A               	movf	_DimmerLights,w
 13259  091F  3E09               	addlw	9
 13260  0920  0086               	movwf	6
 13261  0921  3001               	movlw	1	; select bank2/3
 13262  0922  0087               	movwf	7
 13263  0923  1081               	bcf	1,1
 13264                           
 13265                           ;Dimmer_B1.c: 178: setDimmerLights(lights,0);
 13266  0924  01A4               	clrf	setDimmerLights@status
 13267  0925  0866               	movf	setDimmerLights_Main@lights,w
 13268  0926  3189  21E5         	fcall	_setDimmerLights
 13269  0928  0020               	movlb	0	; select bank0
 13270  0929  0008               	return
 13271  092A                     l9177:	
 13272                           ;Dimmer_B1.c: 183: }
 13273                           ;Dimmer_B1.c: 184: }
 13274                           ;Dimmer_B1.c: 185: }
 13275                           
 13276                           
 13277                           ;Dimmer_B1.c: 186: else
 13278                           ;Dimmer_B1.c: 187: {
 13279                           ;Dimmer_B1.c: 188: if(DimmerLights->TriggerAdj)
 13280  092A  0020               	movlb	0	; select bank0
 13281  092B  086A               	movf	_DimmerLights,w
 13282  092C  3E09               	addlw	9
 13283  092D  0086               	movwf	6
 13284  092E  3001               	movlw	1	; select bank2/3
 13285  092F  0087               	movwf	7
 13286  0930  1D81               	btfss	1,3
 13287  0931  0008               	return
 13288                           
 13289                           ;Dimmer_B1.c: 189: {
 13290                           ;Dimmer_B1.c: 190: if(clear)
 13291  0932  0865               	movf	setDimmerLights_Main@clear,w
 13292  0933  1903               	btfsc	3,2
 13293  0934  0008               	return
 13294                           
 13295                           ;Dimmer_B1.c: 191: {
 13296                           ;Dimmer_B1.c: 192: DimmerLightsPointSelect(lights);
 13297  0935  0866               	movf	setDimmerLights_Main@lights,w
 13298  0936  319A  22D4  3188   	fcall	_DimmerLightsPointSelect
 13299                           
 13300                           ;Dimmer_B1.c: 193: DimmerLights->TriggerAdj=0;
 13301  0939  0020               	movlb	0	; select bank0
 13302  093A  086A               	movf	_DimmerLights,w
 13303  093B  3E09               	addlw	9
 13304  093C  0086               	movwf	6
 13305  093D  3001               	movlw	1	; select bank2/3
 13306  093E  0087               	movwf	7
 13307  093F  1181               	bcf	1,3
 13308                           
 13309                           ;Dimmer_B1.c: 194: if(DimmerLights->AdjGo)
 13310  0940  086A               	movf	_DimmerLights,w
 13311  0941  3E09               	addlw	9
 13312  0942  0086               	movwf	6
 13313  0943  3001               	movlw	1	; select bank2/3
 13314  0944  0087               	movwf	7
 13315  0945  1D01               	btfss	1,2
 13316  0946  2957               	goto	l9189
 13317                           
 13318                           ;Dimmer_B1.c: 195: {
 13319                           ;Dimmer_B1.c: 196: setDimmerLights_Adj(lights,1);
 13320  0947  01E2               	clrf	setDimmerLights_Adj@status
 13321  0948  0AE2               	incf	setDimmerLights_Adj@status,f
 13322  0949  0866               	movf	setDimmerLights_Main@lights,w
 13323  094A  319F  2743  3188   	fcall	_setDimmerLights_Adj
 13324                           
 13325                           ;Dimmer_B1.c: 197: setBuz(1,100);
 13326  094D  3064               	movlw	100
 13327  094E  0020               	movlb	0	; select bank0
 13328  094F  00A6               	movwf	setBuz@time
 13329  0950  3000               	movlw	0
 13330  0951  00A7               	movwf	setBuz@time+1
 13331  0952  3001               	movlw	1
 13332  0953  3197  2711         	fcall	_setBuz
 13333                           
 13334                           ;Dimmer_B1.c: 198: }
 13335  0955  0020               	movlb	0	; select bank0
 13336  0956  0008               	return
 13337  0957                     l9189:	
 13338                           
 13339                           ;Dimmer_B1.c: 199: else
 13340                           ;Dimmer_B1.c: 200: {
 13341                           ;Dimmer_B1.c: 201: setDimmerLights_Adj(lights,0);
 13342  0957  0020               	movlb	0	; select bank0
 13343  0958  01E2               	clrf	setDimmerLights_Adj@status
 13344  0959  0866               	movf	setDimmerLights_Main@lights,w
 13345  095A  319F  2743         	fcall	_setDimmerLights_Adj
 13346  095C  0020               	movlb	0	; select bank0
 13347  095D  0008               	return
 13348  095E                     __end_of_setDimmerLights_Main:	
 13349                           
 13350                           	psect	text80
 13351  1F43                     __ptext80:	
 13352 ;; *************** function _setDimmerLights_Adj *****************
 13353 ;; Defined at:
 13354 ;;		line 388 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 13355 ;; Parameters:    Size  Location     Type
 13356 ;;  lights          1    wreg     unsigned char 
 13357 ;;  status          1   66[BANK0 ] unsigned char 
 13358 ;; Auto vars:     Size  Location     Type
 13359 ;;  lights          1   68[BANK0 ] unsigned char 
 13360 ;; Return value:  Size  Location     Type
 13361 ;;		None               void
 13362 ;; Registers used:
 13363 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13364 ;; Tracked objects:
 13365 ;;		On entry : 0/0
 13366 ;;		On exit  : 0/0
 13367 ;;		Unchanged: 0/0
 13368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13369 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13370 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13371 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13372 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13373 ;;Total ram usage:        3 bytes
 13374 ;; Hardware stack levels used:    1
 13375 ;; Hardware stack levels required when called:    8
 13376 ;; This function calls:
 13377 ;;		_DimmerLightsPointSelect
 13378 ;;		_setRF_DimmerLights
 13379 ;;		_setTxData
 13380 ;; This function is called by:
 13381 ;;		_setDimmerLights_Main
 13382 ;; This function uses a non-reentrant model
 13383 ;;
 13384                           
 13385                           
 13386                           ;psect for function _setDimmerLights_Adj
 13387  1F43                     _setDimmerLights_Adj:	
 13388                           
 13389                           ;incstack = 0
 13390                           ; Regs used in _setDimmerLights_Adj: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13391                           ;setDimmerLights_Adj@lights stored from wreg
 13392  1F43  0020               	movlb	0	; select bank0
 13393  1F44  00E4               	movwf	setDimmerLights_Adj@lights
 13394                           
 13395                           ;Dimmer_B1.c: 390: DimmerLightsPointSelect(lights);
 13396  1F45  0864               	movf	setDimmerLights_Adj@lights,w
 13397  1F46  319A  22D4  319F   	fcall	_DimmerLightsPointSelect
 13398                           
 13399                           ;Dimmer_B1.c: 391: if(status)
 13400  1F49  0020               	movlb	0	; select bank0
 13401  1F4A  0862               	movf	setDimmerLights_Adj@status,w
 13402  1F4B  1903               	btfsc	3,2
 13403  1F4C  2F58               	goto	l8807
 13404                           
 13405                           ;Dimmer_B1.c: 392: {
 13406                           ;Dimmer_B1.c: 393: DimmerLights->AdjFlag=1;
 13407  1F4D  086A               	movf	_DimmerLights,w
 13408  1F4E  0086               	movwf	6
 13409  1F4F  3001               	movlw	1	; select bank2/3
 13410  1F50  0087               	movwf	7
 13411  1F51  1581               	bsf	1,3
 13412                           
 13413                           ;Dimmer_B1.c: 394: DimmerLights->Signal=1;
 13414  1F52  086A               	movf	_DimmerLights,w
 13415  1F53  0086               	movwf	6
 13416  1F54  3001               	movlw	1	; select bank2/3
 13417  1F55  0087               	movwf	7
 13418  1F56  1481               	bsf	1,1
 13419                           
 13420                           ;Dimmer_B1.c: 395: }
 13421  1F57  0008               	return
 13422  1F58                     l8807:	
 13423                           
 13424                           ;Dimmer_B1.c: 396: else
 13425                           ;Dimmer_B1.c: 397: {
 13426                           ;Dimmer_B1.c: 398: if(DimmerLights->AdjFlag)
 13427  1F58  086A               	movf	_DimmerLights,w
 13428  1F59  0086               	movwf	6
 13429  1F5A  3001               	movlw	1	; select bank2/3
 13430  1F5B  0087               	movwf	7
 13431  1F5C  1D81               	btfss	1,3
 13432  1F5D  0008               	return
 13433                           
 13434                           ;Dimmer_B1.c: 399: {
 13435                           ;Dimmer_B1.c: 400: DimmerLights->Signal=0;
 13436  1F5E  086A               	movf	_DimmerLights,w
 13437  1F5F  0086               	movwf	6
 13438  1F60  3001               	movlw	1	; select bank2/3
 13439  1F61  0087               	movwf	7
 13440  1F62  1081               	bcf	1,1
 13441                           
 13442                           ;Dimmer_B1.c: 401: DimmerLights->AdjFlag=0;
 13443  1F63  086A               	movf	_DimmerLights,w
 13444  1F64  0086               	movwf	6
 13445  1F65  3001               	movlw	1	; select bank2/3
 13446  1F66  0087               	movwf	7
 13447  1F67  1181               	bcf	1,3
 13448                           
 13449                           ;Dimmer_B1.c: 402: ;;
 13450                           ;Dimmer_B1.c: 403: DimmerLights->MaxmumValue=DimmerLights->DimmingValue;
 13451  1F68  086A               	movf	_DimmerLights,w
 13452  1F69  3E04               	addlw	4
 13453  1F6A  0086               	movwf	6
 13454  1F6B  3001               	movlw	1	; select bank2/3
 13455  1F6C  0087               	movwf	7
 13456  1F6D  0801               	movf	1,w
 13457  1F6E  00E3               	movwf	??_setDimmerLights_Adj
 13458  1F6F  086A               	movf	_DimmerLights,w
 13459  1F70  3E05               	addlw	5
 13460  1F71  0086               	movwf	6
 13461  1F72  3001               	movlw	1	; select bank2/3
 13462  1F73  0087               	movwf	7
 13463  1F74  0863               	movf	??_setDimmerLights_Adj,w
 13464  1F75  0081               	movwf	1
 13465                           
 13466                           ;Dimmer_B1.c: 411: setRF_DimmerLights(lights,1);
 13467  1F76  01DD               	clrf	setRF_DimmerLights@on
 13468  1F77  0ADD               	incf	setRF_DimmerLights@on,f
 13469  1F78  0864               	movf	setDimmerLights_Adj@lights,w
 13470  1F79  3195  2553  319F   	fcall	_setRF_DimmerLights
 13471                           
 13472                           ;Dimmer_B1.c: 412: setTxData(1);
 13473  1F7C  3001               	movlw	1
 13474  1F7D  3187  271C         	fcall	_setTxData
 13475  1F7F  0008               	return
 13476  1F80                     __end_of_setDimmerLights_Adj:	
 13477                           
 13478                           	psect	text81
 13479  09E5                     __ptext81:	
 13480 ;; *************** function _setDimmerLights *****************
 13481 ;; Defined at:
 13482 ;;		line 330 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 13483 ;; Parameters:    Size  Location     Type
 13484 ;;  lights          1    wreg     unsigned char 
 13485 ;;  status          1    4[BANK0 ] unsigned char 
 13486 ;; Auto vars:     Size  Location     Type
 13487 ;;  lights          1    6[BANK0 ] unsigned char 
 13488 ;; Return value:  Size  Location     Type
 13489 ;;		None               void
 13490 ;; Registers used:
 13491 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13492 ;; Tracked objects:
 13493 ;;		On entry : 0/0
 13494 ;;		On exit  : 0/0
 13495 ;;		Unchanged: 0/0
 13496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13497 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13498 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13499 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13500 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13501 ;;Total ram usage:        3 bytes
 13502 ;; Hardware stack levels used:    1
 13503 ;; Hardware stack levels required when called:    6
 13504 ;; This function calls:
 13505 ;;		_DimmerLightsPointSelect
 13506 ;;		_setLED
 13507 ;; This function is called by:
 13508 ;;		_setDimmerLights_Main
 13509 ;;		_setControl_Lights_Table
 13510 ;; This function uses a non-reentrant model
 13511 ;;
 13512                           
 13513                           
 13514                           ;psect for function _setDimmerLights
 13515  09E5                     _setDimmerLights:	
 13516                           
 13517                           ;incstack = 0
 13518                           ; Regs used in _setDimmerLights: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13519                           ;setDimmerLights@lights stored from wreg
 13520  09E5  0020               	movlb	0	; select bank0
 13521  09E6  00A6               	movwf	setDimmerLights@lights
 13522                           
 13523                           ;Dimmer_B1.c: 332: DimmerLightsPointSelect(lights);
 13524  09E7  0826               	movf	setDimmerLights@lights,w
 13525  09E8  319A  22D4  3189   	fcall	_DimmerLightsPointSelect
 13526                           
 13527                           ;Dimmer_B1.c: 333: Dimmer->Load=lights;
 13528  09EB  0020               	movlb	0	; select bank0
 13529  09EC  0826               	movf	setDimmerLights@lights,w
 13530  09ED  00A5               	movwf	??_setDimmerLights
 13531  09EE  0021               	movlb	1	; select bank1
 13532  09EF  0A38               	incf	_Dimmer^(0+128),w
 13533  09F0  0086               	movwf	6
 13534  09F1  0187               	clrf	7
 13535  09F2  0020               	movlb	0	; select bank0
 13536  09F3  0825               	movf	??_setDimmerLights,w
 13537  09F4  0081               	movwf	1
 13538                           
 13539                           ;Dimmer_B1.c: 334: if(status)
 13540  09F5  0824               	movf	setDimmerLights@status,w
 13541  09F6  1903               	btfsc	3,2
 13542  09F7  2A42               	goto	l8499
 13543                           
 13544                           ;Dimmer_B1.c: 335: {
 13545                           ;Dimmer_B1.c: 336: DimmerLights->Status=1;
 13546  09F8  086A               	movf	_DimmerLights,w
 13547  09F9  0086               	movwf	6
 13548  09FA  3001               	movlw	1	; select bank2/3
 13549  09FB  0087               	movwf	7
 13550  09FC  1681               	bsf	1,5
 13551                           
 13552                           ;Dimmer_B1.c: 337: setLED(lights,0);
 13553  09FD  01A2               	clrf	setLED@command
 13554  09FE  0826               	movf	setDimmerLights@lights,w
 13555  09FF  3193  2366  3189   	fcall	_setLED
 13556                           
 13557                           ;Dimmer_B1.c: 339: ;;
 13558                           ;Dimmer_B1.c: 341: DimmerLights->Signal=1;
 13559  0A02  0020               	movlb	0	; select bank0
 13560  0A03  086A               	movf	_DimmerLights,w
 13561  0A04  0086               	movwf	6
 13562  0A05  3001               	movlw	1	; select bank2/3
 13563  0A06  0087               	movwf	7
 13564  0A07  1481               	bsf	1,1
 13565                           
 13566                           ;Dimmer_B1.c: 342: DimmerLights->DimmingTimeValue=3;
 13567  0A08  3003               	movlw	3
 13568  0A09  00A5               	movwf	??_setDimmerLights
 13569  0A0A  086A               	movf	_DimmerLights,w
 13570  0A0B  3E02               	addlw	2
 13571  0A0C  0086               	movwf	6
 13572  0A0D  3001               	movlw	1	; select bank2/3
 13573  0A0E  0087               	movwf	7
 13574  0A0F  0825               	movf	??_setDimmerLights,w
 13575  0A10  0081               	movwf	1
 13576                           
 13577                           ;Dimmer_B1.c: 344: if(!DimmerLights->StatusFlag)
 13578  0A11  086A               	movf	_DimmerLights,w
 13579  0A12  0086               	movwf	6
 13580  0A13  3001               	movlw	1	; select bank2/3
 13581  0A14  0087               	movwf	7
 13582  0A15  1B01               	btfsc	1,6
 13583  0A16  0008               	return
 13584                           
 13585                           ;Dimmer_B1.c: 345: {
 13586                           ;Dimmer_B1.c: 346: DimmerLights->StatusFlag=1;
 13587  0A17  086A               	movf	_DimmerLights,w
 13588  0A18  0086               	movwf	6
 13589  0A19  3001               	movlw	1	; select bank2/3
 13590  0A1A  0087               	movwf	7
 13591  0A1B  1701               	bsf	1,6
 13592                           
 13593                           ;Dimmer_B1.c: 347: ;;
 13594                           ;Dimmer_B1.c: 348: Memory->GO=0; if(!0) { Memory->Time=0; } ;;
 13595  0A1C  086D               	movf	_Memory,w
 13596  0A1D  3E22               	addlw	34
 13597  0A1E  0086               	movwf	6
 13598  0A1F  3002               	movlw	2	; select bank4/5
 13599  0A20  0087               	movwf	7
 13600  0A21  1081               	bcf	1,1
 13601  0A22  086D               	movf	_Memory,w
 13602  0A23  3E23               	addlw	35
 13603  0A24  0086               	movwf	6
 13604  0A25  3002               	movlw	2	; select bank4/5
 13605  0A26  0087               	movwf	7
 13606  0A27  3000               	movlw	0
 13607  0A28  3FC0               	movwi [0]fsr1
 13608  0A29  3FC1               	movwi [1]fsr1
 13609                           
 13610                           ;Dimmer_B1.c: 351: DimmerLights->DimmingValue=DimmerLights->MaxmumValue;
 13611  0A2A  086A               	movf	_DimmerLights,w
 13612  0A2B  3E05               	addlw	5
 13613  0A2C  0086               	movwf	6
 13614  0A2D  3001               	movlw	1	; select bank2/3
 13615  0A2E  0087               	movwf	7
 13616  0A2F  0801               	movf	1,w
 13617  0A30  00A5               	movwf	??_setDimmerLights
 13618  0A31  086A               	movf	_DimmerLights,w
 13619  0A32  3E04               	addlw	4
 13620  0A33  0086               	movwf	6
 13621  0A34  3001               	movlw	1	; select bank2/3
 13622  0A35  0087               	movwf	7
 13623  0A36  0825               	movf	??_setDimmerLights,w
 13624  0A37  0081               	movwf	1
 13625                           
 13626                           ;Dimmer_B1.c: 355: DimmerLights->DimmingValue=((char)((100-55)*1.5));
 13627  0A38  3043               	movlw	67
 13628  0A39  00A5               	movwf	??_setDimmerLights
 13629  0A3A  086A               	movf	_DimmerLights,w
 13630  0A3B  3E04               	addlw	4
 13631  0A3C  0086               	movwf	6
 13632  0A3D  3001               	movlw	1	; select bank2/3
 13633  0A3E  0087               	movwf	7
 13634  0A3F  0825               	movf	??_setDimmerLights,w
 13635  0A40  0081               	movwf	1
 13636                           
 13637                           ;Dimmer_B1.c: 357: }
 13638                           ;Dimmer_B1.c: 358: }
 13639  0A41  0008               	return
 13640  0A42                     l8499:	
 13641                           
 13642                           ;Dimmer_B1.c: 359: else
 13643                           ;Dimmer_B1.c: 360: {
 13644                           ;Dimmer_B1.c: 361: DimmerLights->Status=0;
 13645  0A42  086A               	movf	_DimmerLights,w
 13646  0A43  0086               	movwf	6
 13647  0A44  3001               	movlw	1	; select bank2/3
 13648  0A45  0087               	movwf	7
 13649  0A46  1281               	bcf	1,5
 13650                           
 13651                           ;Dimmer_B1.c: 363: DimmerLights->DimmingValue=DimmerLights->MinimumValue;
 13652  0A47  086A               	movf	_DimmerLights,w
 13653  0A48  3E06               	addlw	6
 13654  0A49  0086               	movwf	6
 13655  0A4A  3001               	movlw	1	; select bank2/3
 13656  0A4B  0087               	movwf	7
 13657  0A4C  0801               	movf	1,w
 13658  0A4D  00A5               	movwf	??_setDimmerLights
 13659  0A4E  086A               	movf	_DimmerLights,w
 13660  0A4F  3E04               	addlw	4
 13661  0A50  0086               	movwf	6
 13662  0A51  3001               	movlw	1	; select bank2/3
 13663  0A52  0087               	movwf	7
 13664  0A53  0825               	movf	??_setDimmerLights,w
 13665  0A54  0081               	movwf	1
 13666                           
 13667                           ;Dimmer_B1.c: 370: DimmerLights->Signal=1;
 13668  0A55  086A               	movf	_DimmerLights,w
 13669  0A56  0086               	movwf	6
 13670  0A57  3001               	movlw	1	; select bank2/3
 13671  0A58  0087               	movwf	7
 13672  0A59  1481               	bsf	1,1
 13673                           
 13674                           ;Dimmer_B1.c: 371: DimmerLights->AdjFlag=0;
 13675  0A5A  086A               	movf	_DimmerLights,w
 13676  0A5B  0086               	movwf	6
 13677  0A5C  3001               	movlw	1	; select bank2/3
 13678  0A5D  0087               	movwf	7
 13679  0A5E  1181               	bcf	1,3
 13680                           
 13681                           ;Dimmer_B1.c: 372: DimmerLights->AdjStatus=0;
 13682  0A5F  086A               	movf	_DimmerLights,w
 13683  0A60  0086               	movwf	6
 13684  0A61  3001               	movlw	1	; select bank2/3
 13685  0A62  0087               	movwf	7
 13686  0A63  1201               	bcf	1,4
 13687                           
 13688                           ;Dimmer_B1.c: 373: DimmerLights->DimmingTimeValue=3;
 13689  0A64  3003               	movlw	3
 13690  0A65  00A5               	movwf	??_setDimmerLights
 13691  0A66  086A               	movf	_DimmerLights,w
 13692  0A67  3E02               	addlw	2
 13693  0A68  0086               	movwf	6
 13694  0A69  3001               	movlw	1	; select bank2/3
 13695  0A6A  0087               	movwf	7
 13696  0A6B  0825               	movf	??_setDimmerLights,w
 13697  0A6C  0081               	movwf	1
 13698  0A6D  0008               	return
 13699  0A6E                     __end_of_setDimmerLights:	
 13700                           
 13701                           	psect	text82
 13702  1366                     __ptext82:	
 13703 ;; *************** function _setLED *****************
 13704 ;; Defined at:
 13705 ;;		line 74 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\LED_B1.c"
 13706 ;; Parameters:    Size  Location     Type
 13707 ;;  led             1    wreg     unsigned char 
 13708 ;;  command         1    2[BANK0 ] unsigned char 
 13709 ;; Auto vars:     Size  Location     Type
 13710 ;;  led             1    3[BANK0 ] unsigned char 
 13711 ;; Return value:  Size  Location     Type
 13712 ;;		None               void
 13713 ;; Registers used:
 13714 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13715 ;; Tracked objects:
 13716 ;;		On entry : 0/0
 13717 ;;		On exit  : 0/0
 13718 ;;		Unchanged: 0/0
 13719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13720 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13721 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13723 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13724 ;;Total ram usage:        2 bytes
 13725 ;; Hardware stack levels used:    1
 13726 ;; Hardware stack levels required when called:    5
 13727 ;; This function calls:
 13728 ;;		_LedPointSelect
 13729 ;; This function is called by:
 13730 ;;		_setDimmerLights_ERROR
 13731 ;;		_setDimmerLights
 13732 ;;		_setLED_Initialization
 13733 ;;		_setOverTemp_Exceptions
 13734 ;;		_setPowerFault_Exceptions
 13735 ;;		_setSw_Initialization
 13736 ;; This function uses a non-reentrant model
 13737 ;;
 13738                           
 13739                           
 13740                           ;psect for function _setLED
 13741  1366                     _setLED:	
 13742                           
 13743                           ;incstack = 0
 13744                           ; Regs used in _setLED: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13745                           ;setLED@led stored from wreg
 13746  1366  0020               	movlb	0	; select bank0
 13747  1367  00A3               	movwf	setLED@led
 13748                           
 13749                           ;LED_B1.c: 76: LedPointSelect(led);
 13750  1368  0823               	movf	setLED@led,w
 13751  1369  319C  24F6  3193   	fcall	_LedPointSelect
 13752                           
 13753                           ;LED_B1.c: 77: if(command == 0)
 13754  136C  0020               	movlb	0	; select bank0
 13755  136D  08A2               	movf	setLED@command,f
 13756  136E  1D03               	skipz
 13757  136F  2B82               	goto	l8385
 13758                           
 13759                           ;LED_B1.c: 78: {
 13760                           ;LED_B1.c: 80: if(led == 1)
 13761  1370  0823               	movf	setLED@led,w
 13762  1371  3A01               	xorlw	1
 13763  1372  1D03               	skipz
 13764  1373  2B76               	goto	l8377
 13765                           
 13766                           ;LED_B1.c: 81: {
 13767                           ;LED_B1.c: 85: RA3=1;
 13768  1374  158C               	bsf	12,3	;volatile
 13769                           
 13770                           ;LED_B1.c: 87: }
 13771  1375  0008               	return
 13772  1376                     l8377:	
 13773                           
 13774                           ;LED_B1.c: 90: else if(led == 2)
 13775  1376  0823               	movf	setLED@led,w
 13776  1377  3A02               	xorlw	2
 13777  1378  1D03               	skipz
 13778  1379  2B7C               	goto	l8381
 13779                           
 13780                           ;LED_B1.c: 91: {
 13781                           ;LED_B1.c: 95: RC7=1;
 13782  137A  178E               	bsf	14,7	;volatile
 13783                           
 13784                           ;LED_B1.c: 97: }
 13785  137B  0008               	return
 13786  137C                     l8381:	
 13787                           
 13788                           ;LED_B1.c: 110: else if(led == 99)
 13789  137C  0823               	movf	setLED@led,w
 13790  137D  3A63               	xorlw	99
 13791  137E  1D03               	skipz
 13792  137F  0008               	return
 13793                           
 13794                           ;LED_B1.c: 111: {
 13795                           ;LED_B1.c: 115: RB5=1;
 13796  1380  168D               	bsf	13,5	;volatile
 13797                           
 13798                           ;LED_B1.c: 117: }
 13799                           ;LED_B1.c: 119: }
 13800  1381  0008               	return
 13801  1382                     l8385:	
 13802                           
 13803                           ;LED_B1.c: 120: else if(command == 1)
 13804  1382  0822               	movf	setLED@command,w
 13805  1383  3A01               	xorlw	1
 13806  1384  1D03               	skipz
 13807  1385  2B98               	goto	l8399
 13808                           
 13809                           ;LED_B1.c: 121: {
 13810                           ;LED_B1.c: 123: if(led == 1)
 13811  1386  0823               	movf	setLED@led,w
 13812  1387  3A01               	xorlw	1
 13813  1388  1D03               	skipz
 13814  1389  2B8C               	goto	l8391
 13815                           
 13816                           ;LED_B1.c: 124: {
 13817                           ;LED_B1.c: 128: RA3=0;
 13818  138A  118C               	bcf	12,3	;volatile
 13819                           
 13820                           ;LED_B1.c: 130: }
 13821  138B  0008               	return
 13822  138C                     l8391:	
 13823                           
 13824                           ;LED_B1.c: 133: else if(led == 2)
 13825  138C  0823               	movf	setLED@led,w
 13826  138D  3A02               	xorlw	2
 13827  138E  1D03               	skipz
 13828  138F  2B92               	goto	l8395
 13829                           
 13830                           ;LED_B1.c: 134: {
 13831                           ;LED_B1.c: 138: RC7=0;
 13832  1390  138E               	bcf	14,7	;volatile
 13833                           
 13834                           ;LED_B1.c: 140: }
 13835  1391  0008               	return
 13836  1392                     l8395:	
 13837                           
 13838                           ;LED_B1.c: 153: else if(led == 99)
 13839  1392  0823               	movf	setLED@led,w
 13840  1393  3A63               	xorlw	99
 13841  1394  1D03               	skipz
 13842  1395  0008               	return
 13843                           
 13844                           ;LED_B1.c: 154: {
 13845                           ;LED_B1.c: 158: RB5=0;
 13846  1396  128D               	bcf	13,5	;volatile
 13847                           
 13848                           ;LED_B1.c: 160: }
 13849                           ;LED_B1.c: 162: }
 13850  1397  0008               	return
 13851  1398                     l8399:	
 13852                           
 13853                           ;LED_B1.c: 163: else if(command == 10)
 13854  1398  0822               	movf	setLED@command,w
 13855  1399  3A0A               	xorlw	10
 13856  139A  1D03               	skipz
 13857  139B  2BBA               	goto	l8415
 13858                           
 13859                           ;LED_B1.c: 164: {
 13860                           ;LED_B1.c: 165: LED->GO=0;
 13861  139C  0021               	movlb	1	; select bank1
 13862  139D  083A               	movf	_LED^(0+128),w
 13863  139E  0086               	movwf	6
 13864  139F  0187               	clrf	7
 13865  13A0  1081               	bcf	1,1
 13866                           
 13867                           ;LED_B1.c: 166: LED->Time=0;
 13868  13A1  0A3A               	incf	_LED^(0+128),w
 13869  13A2  0086               	movwf	6
 13870  13A3  0187               	clrf	7
 13871  13A4  3000               	movlw	0
 13872  13A5  3FC0               	movwi [0]fsr1
 13873  13A6  3FC1               	movwi [1]fsr1
 13874                           
 13875                           ;LED_B1.c: 168: if(led == 1)
 13876  13A7  0020               	movlb	0	; select bank0
 13877  13A8  0823               	movf	setLED@led,w
 13878  13A9  3A01               	xorlw	1
 13879  13AA  1D03               	skipz
 13880  13AB  2BAE               	goto	l8407
 13881                           
 13882                           ;LED_B1.c: 169: {
 13883                           ;LED_B1.c: 173: RA3=1;
 13884  13AC  158C               	bsf	12,3	;volatile
 13885                           
 13886                           ;LED_B1.c: 175: }
 13887  13AD  0008               	return
 13888  13AE                     l8407:	
 13889                           
 13890                           ;LED_B1.c: 178: else if(led == 2)
 13891  13AE  0823               	movf	setLED@led,w
 13892  13AF  3A02               	xorlw	2
 13893  13B0  1D03               	skipz
 13894  13B1  2BB4               	goto	l8411
 13895                           
 13896                           ;LED_B1.c: 179: {
 13897                           ;LED_B1.c: 183: RC7=1;
 13898  13B2  178E               	bsf	14,7	;volatile
 13899                           
 13900                           ;LED_B1.c: 185: }
 13901  13B3  0008               	return
 13902  13B4                     l8411:	
 13903                           
 13904                           ;LED_B1.c: 198: else if(led == 99)
 13905  13B4  0823               	movf	setLED@led,w
 13906  13B5  3A63               	xorlw	99
 13907  13B6  1D03               	skipz
 13908  13B7  0008               	return
 13909                           
 13910                           ;LED_B1.c: 199: {
 13911                           ;LED_B1.c: 203: RB5=1;
 13912  13B8  168D               	bsf	13,5	;volatile
 13913                           
 13914                           ;LED_B1.c: 205: }
 13915                           ;LED_B1.c: 207: }
 13916  13B9  0008               	return
 13917  13BA                     l8415:	
 13918                           
 13919                           ;LED_B1.c: 208: else if(command == 11)
 13920  13BA  0822               	movf	setLED@command,w
 13921  13BB  3A0B               	xorlw	11
 13922  13BC  1D03               	skipz
 13923  13BD  0008               	return
 13924                           
 13925                           ;LED_B1.c: 209: {
 13926                           ;LED_B1.c: 210: LED->GO=1;
 13927  13BE  0021               	movlb	1	; select bank1
 13928  13BF  083A               	movf	_LED^(0+128),w
 13929  13C0  0086               	movwf	6
 13930  13C1  0187               	clrf	7
 13931  13C2  1481               	bsf	1,1
 13932  13C3  0008               	return
 13933  13C4                     __end_of_setLED:	
 13934                           
 13935                           	psect	text83
 13936  1CF6                     __ptext83:	
 13937 ;; *************** function _LedPointSelect *****************
 13938 ;; Defined at:
 13939 ;;		line 7 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\LED_B1.c"
 13940 ;; Parameters:    Size  Location     Type
 13941 ;;  led             1    wreg     unsigned char 
 13942 ;; Auto vars:     Size  Location     Type
 13943 ;;  led             1    1[BANK0 ] unsigned char 
 13944 ;; Return value:  Size  Location     Type
 13945 ;;		None               void
 13946 ;; Registers used:
 13947 ;;		wreg
 13948 ;; Tracked objects:
 13949 ;;		On entry : 0/0
 13950 ;;		On exit  : 0/0
 13951 ;;		Unchanged: 0/0
 13952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13954 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13955 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13956 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13957 ;;Total ram usage:        2 bytes
 13958 ;; Hardware stack levels used:    1
 13959 ;; Hardware stack levels required when called:    4
 13960 ;; This function calls:
 13961 ;;		Nothing
 13962 ;; This function is called by:
 13963 ;;		_setLED_Initialization
 13964 ;;		_setLED
 13965 ;;		_setLED_Main
 13966 ;; This function uses a non-reentrant model
 13967 ;;
 13968                           
 13969                           
 13970                           ;psect for function _LedPointSelect
 13971  1CF6                     _LedPointSelect:	
 13972                           
 13973                           ;incstack = 0
 13974                           ; Regs used in _LedPointSelect: [wreg]
 13975                           ;LedPointSelect@led stored from wreg
 13976  1CF6  0020               	movlb	0	; select bank0
 13977  1CF7  00A1               	movwf	LedPointSelect@led
 13978                           
 13979                           ;LED_B1.c: 10: if(led == 1)
 13980  1CF8  0821               	movf	LedPointSelect@led,w
 13981  1CF9  3A01               	xorlw	1
 13982  1CFA  1D03               	skipz
 13983  1CFB  2D02               	goto	l8237
 13984                           
 13985                           ;LED_B1.c: 11: {
 13986                           ;LED_B1.c: 12: LED=&VarLED1;
 13987  1CFC  30DA               	movlw	_VarLED1& (0+255)
 13988  1CFD  00A0               	movwf	??_LedPointSelect
 13989  1CFE  0820               	movf	??_LedPointSelect,w
 13990  1CFF  0021               	movlb	1	; select bank1
 13991  1D00  00BA               	movwf	_LED^(0+128)
 13992                           
 13993                           ;LED_B1.c: 13: }
 13994  1D01  0008               	return
 13995  1D02                     l8237:	
 13996                           
 13997                           ;LED_B1.c: 16: else if(led == 2)
 13998  1D02  0020               	movlb	0	; select bank0
 13999  1D03  0821               	movf	LedPointSelect@led,w
 14000  1D04  3A02               	xorlw	2
 14001  1D05  1D03               	skipz
 14002  1D06  2D0D               	goto	l8241
 14003                           
 14004                           ;LED_B1.c: 17: {
 14005                           ;LED_B1.c: 18: LED=&VarLED2;
 14006  1D07  30DE               	movlw	_VarLED2& (0+255)
 14007  1D08  00A0               	movwf	??_LedPointSelect
 14008  1D09  0820               	movf	??_LedPointSelect,w
 14009  1D0A  0021               	movlb	1	; select bank1
 14010  1D0B  00BA               	movwf	_LED^(0+128)
 14011                           
 14012                           ;LED_B1.c: 19: }
 14013  1D0C  0008               	return
 14014  1D0D                     l8241:	
 14015                           
 14016                           ;LED_B1.c: 28: else if(led == 99)
 14017  1D0D  0020               	movlb	0	; select bank0
 14018  1D0E  0821               	movf	LedPointSelect@led,w
 14019  1D0F  3A63               	xorlw	99
 14020  1D10  1D03               	skipz
 14021  1D11  0008               	return
 14022                           
 14023                           ;LED_B1.c: 29: {
 14024                           ;LED_B1.c: 30: LED=&VarErrLED;
 14025  1D12  30D6               	movlw	_VarErrLED& (0+255)
 14026  1D13  00A0               	movwf	??_LedPointSelect
 14027  1D14  0820               	movf	??_LedPointSelect,w
 14028  1D15  0021               	movlb	1	; select bank1
 14029  1D16  00BA               	movwf	_LED^(0+128)
 14030  1D17  0008               	return
 14031  1D18                     __end_of_LedPointSelect:	
 14032                           
 14033                           	psect	text84
 14034  1B8E                     __ptext84:	
 14035 ;; *************** function _DimmerLights_Close *****************
 14036 ;; Defined at:
 14037 ;;		line 101 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 14038 ;; Parameters:    Size  Location     Type
 14039 ;;		None
 14040 ;; Auto vars:     Size  Location     Type
 14041 ;;		None
 14042 ;; Return value:  Size  Location     Type
 14043 ;;		None               void
 14044 ;; Registers used:
 14045 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14046 ;; Tracked objects:
 14047 ;;		On entry : 0/0
 14048 ;;		On exit  : 0/0
 14049 ;;		Unchanged: 0/0
 14050 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14051 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14052 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14053 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14054 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14055 ;;Total ram usage:        0 bytes
 14056 ;; Hardware stack levels used:    1
 14057 ;; Hardware stack levels required when called:    5
 14058 ;; This function calls:
 14059 ;;		_getDimmerLights_StatusFlag
 14060 ;; This function is called by:
 14061 ;;		_DimmerLights_Main
 14062 ;; This function uses a non-reentrant model
 14063 ;;
 14064                           
 14065                           
 14066                           ;psect for function _DimmerLights_Close
 14067  1B8E                     _DimmerLights_Close:	
 14068                           
 14069                           ;Dimmer_B1.c: 103: if(Dimmer->Detect)
 14070                           
 14071                           ;incstack = 0
 14072                           ; Regs used in _DimmerLights_Close: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14073  1B8E  0021               	movlb	1	; select bank1
 14074  1B8F  0838               	movf	_Dimmer^(0+128),w
 14075  1B90  0086               	movwf	6
 14076  1B91  0187               	clrf	7
 14077  1B92  1C01               	btfss	1,0
 14078  1B93  0008               	return
 14079                           
 14080                           ;Dimmer_B1.c: 104: {
 14081                           ;Dimmer_B1.c: 105: Dimmer->Detect=0;
 14082  1B94  0838               	movf	_Dimmer^(0+128),w
 14083  1B95  0086               	movwf	6
 14084  1B96  0187               	clrf	7
 14085  1B97  1001               	bcf	1,0
 14086                           
 14087                           ;Dimmer_B1.c: 106: if(!getDimmerLights_StatusFlag())
 14088  1B98  319B  2362  319B   	fcall	_getDimmerLights_StatusFlag
 14089  1B9B  3800               	iorlw	0
 14090  1B9C  1D03               	skipz
 14091  1B9D  0008               	return
 14092                           
 14093                           ;Dimmer_B1.c: 107: {
 14094                           ;Dimmer_B1.c: 108: ;;
 14095                           ;Dimmer_B1.c: 109: Memory->GO=1; if(!1) { Memory->Time=1; } ;;
 14096  1B9E  0020               	movlb	0	; select bank0
 14097  1B9F  086D               	movf	_Memory,w
 14098  1BA0  3E22               	addlw	34
 14099  1BA1  0086               	movwf	6
 14100  1BA2  3002               	movlw	2	; select bank4/5
 14101  1BA3  0087               	movwf	7
 14102  1BA4  1481               	bsf	1,1
 14103  1BA5  0008               	return
 14104  1BA6                     __end_of_DimmerLights_Close:	
 14105                           
 14106                           	psect	text85
 14107  1B62                     __ptext85:	
 14108 ;; *************** function _getDimmerLights_StatusFlag *****************
 14109 ;; Defined at:
 14110 ;;		line 208 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 14111 ;; Parameters:    Size  Location     Type
 14112 ;;		None
 14113 ;; Auto vars:     Size  Location     Type
 14114 ;;  Status          1    1[BANK0 ] unsigned char 
 14115 ;; Return value:  Size  Location     Type
 14116 ;;                  1    wreg      unsigned char 
 14117 ;; Registers used:
 14118 ;;		wreg, fsr1l, fsr1h, status,2
 14119 ;; Tracked objects:
 14120 ;;		On entry : 0/0
 14121 ;;		On exit  : 0/0
 14122 ;;		Unchanged: 0/0
 14123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14124 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14125 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14126 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14127 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14128 ;;Total ram usage:        3 bytes
 14129 ;; Hardware stack levels used:    1
 14130 ;; Hardware stack levels required when called:    4
 14131 ;; This function calls:
 14132 ;;		Nothing
 14133 ;; This function is called by:
 14134 ;;		_DimmerLights_Close
 14135 ;;		_DimmerLights_Exceptions
 14136 ;; This function uses a non-reentrant model
 14137 ;;
 14138                           
 14139                           
 14140                           ;psect for function _getDimmerLights_StatusFlag
 14141  1B62                     _getDimmerLights_StatusFlag:	
 14142                           
 14143                           ;Dimmer_B1.c: 210: char Status=0;
 14144                           
 14145                           ;incstack = 0
 14146                           ; Regs used in _getDimmerLights_StatusFlag: [wreg+fsr1l+fsr1h+status,2]
 14147  1B62  0020               	movlb	0	; select bank0
 14148  1B63  01A1               	clrf	getDimmerLights_StatusFlag@Status
 14149                           
 14150                           ;Dimmer_B1.c: 217: Status=(DimmerLights11->StatusFlag || DimmerLights22->StatusFlag)?1:0
      +                          ;
 14151  1B64  01A2               	clrf	_getDimmerLights_StatusFlag$1629
 14152  1B65  0AA2               	incf	_getDimmerLights_StatusFlag$1629,f
 14153  1B66  086B               	movf	_DimmerLights11,w
 14154  1B67  0086               	movwf	6
 14155  1B68  3001               	movlw	1	; select bank2/3
 14156  1B69  0087               	movwf	7
 14157  1B6A  1B01               	btfsc	1,6
 14158  1B6B  2B72               	goto	l8475
 14159  1B6C  086C               	movf	_DimmerLights22,w
 14160  1B6D  0086               	movwf	6
 14161  1B6E  3001               	movlw	1	; select bank2/3
 14162  1B6F  0087               	movwf	7
 14163  1B70  1F01               	btfss	1,6
 14164  1B71  01A2               	clrf	_getDimmerLights_StatusFlag$1629
 14165  1B72                     l8475:	
 14166  1B72  0822               	movf	_getDimmerLights_StatusFlag$1629,w
 14167  1B73  00A0               	movwf	??_getDimmerLights_StatusFlag
 14168  1B74  0820               	movf	??_getDimmerLights_StatusFlag,w
 14169  1B75  00A1               	movwf	getDimmerLights_StatusFlag@Status
 14170                           
 14171                           ;Dimmer_B1.c: 224: return Status;
 14172  1B76  0821               	movf	getDimmerLights_StatusFlag@Status,w
 14173  1B77  0008               	return
 14174  1B78                     __end_of_getDimmerLights_StatusFlag:	
 14175                           
 14176                           	psect	text86
 14177  1B37                     __ptext86:	
 14178 ;; *************** function _DimmerLights_Initialization *****************
 14179 ;; Defined at:
 14180 ;;		line 41 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 14181 ;; Parameters:    Size  Location     Type
 14182 ;;		None
 14183 ;; Auto vars:     Size  Location     Type
 14184 ;;		None
 14185 ;; Return value:  Size  Location     Type
 14186 ;;		None               void
 14187 ;; Registers used:
 14188 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14189 ;; Tracked objects:
 14190 ;;		On entry : 0/0
 14191 ;;		On exit  : 0/0
 14192 ;;		Unchanged: 0/0
 14193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14194 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14195 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14196 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14197 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14198 ;;Total ram usage:        1 bytes
 14199 ;; Hardware stack levels used:    1
 14200 ;; Hardware stack levels required when called:    6
 14201 ;; This function calls:
 14202 ;;		_Dimmer_Initialization
 14203 ;;		_setDimmerLights_Initialization
 14204 ;; This function is called by:
 14205 ;;		_main
 14206 ;; This function uses a non-reentrant model
 14207 ;;
 14208                           
 14209                           
 14210                           ;psect for function _DimmerLights_Initialization
 14211  1B37                     _DimmerLights_Initialization:	
 14212                           
 14213                           ;Dimmer_B1.c: 44: DimmerLights11=&DimmerLights1;
 14214                           
 14215                           ;incstack = 0
 14216                           ; Regs used in _DimmerLights_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 14217  1B37  3020               	movlw	_DimmerLights1& (0+255)
 14218  1B38  0020               	movlb	0	; select bank0
 14219  1B39  00A4               	movwf	??_DimmerLights_Initialization
 14220  1B3A  0824               	movf	??_DimmerLights_Initialization,w
 14221  1B3B  00EB               	movwf	_DimmerLights11
 14222                           
 14223                           ;Dimmer_B1.c: 45: setDimmerLights_Initialization(1);
 14224  1B3C  3001               	movlw	1
 14225  1B3D  319E  264F  319B   	fcall	_setDimmerLights_Initialization
 14226                           
 14227                           ;Dimmer_B1.c: 49: DimmerLights22=&DimmerLights2;
 14228  1B40  302E               	movlw	_DimmerLights2& (0+255)
 14229  1B41  0020               	movlb	0	; select bank0
 14230  1B42  00A4               	movwf	??_DimmerLights_Initialization
 14231  1B43  0824               	movf	??_DimmerLights_Initialization,w
 14232  1B44  00EC               	movwf	_DimmerLights22
 14233                           
 14234                           ;Dimmer_B1.c: 50: setDimmerLights_Initialization(2);
 14235  1B45  3002               	movlw	2
 14236  1B46  319E  264F  319B   	fcall	_setDimmerLights_Initialization
 14237                           
 14238                           ;Dimmer_B1.c: 59: Dimmer_Initialization();
 14239  1B49  3199  2118         	fcall	_Dimmer_Initialization
 14240  1B4B  0008               	return
 14241  1B4C                     __end_of_DimmerLights_Initialization:	
 14242                           
 14243                           	psect	text87
 14244  1E4F                     __ptext87:	
 14245 ;; *************** function _setDimmerLights_Initialization *****************
 14246 ;; Defined at:
 14247 ;;		line 63 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 14248 ;; Parameters:    Size  Location     Type
 14249 ;;  lights          1    wreg     unsigned char 
 14250 ;; Auto vars:     Size  Location     Type
 14251 ;;  lights          1    3[BANK0 ] unsigned char 
 14252 ;; Return value:  Size  Location     Type
 14253 ;;		None               void
 14254 ;; Registers used:
 14255 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14256 ;; Tracked objects:
 14257 ;;		On entry : 0/0
 14258 ;;		On exit  : 0/0
 14259 ;;		Unchanged: 0/0
 14260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14262 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14263 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14264 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14265 ;;Total ram usage:        2 bytes
 14266 ;; Hardware stack levels used:    1
 14267 ;; Hardware stack levels required when called:    5
 14268 ;; This function calls:
 14269 ;;		_DimmerLightsPointSelect
 14270 ;; This function is called by:
 14271 ;;		_DimmerLights_Initialization
 14272 ;; This function uses a non-reentrant model
 14273 ;;
 14274                           
 14275                           
 14276                           ;psect for function _setDimmerLights_Initialization
 14277  1E4F                     _setDimmerLights_Initialization:	
 14278                           
 14279                           ;incstack = 0
 14280                           ; Regs used in _setDimmerLights_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pcla
      +                          th+cstack]
 14281                           ;setDimmerLights_Initialization@lights stored from wreg
 14282  1E4F  0020               	movlb	0	; select bank0
 14283  1E50  00A3               	movwf	setDimmerLights_Initialization@lights
 14284                           
 14285                           ;Dimmer_B1.c: 65: DimmerLightsPointSelect(lights);
 14286  1E51  0823               	movf	setDimmerLights_Initialization@lights,w
 14287  1E52  319A  22D4         	fcall	_DimmerLightsPointSelect
 14288                           
 14289                           ;Dimmer_B1.c: 66: DimmerLights->Clear=1;
 14290  1E54  0020               	movlb	0	; select bank0
 14291  1E55  086A               	movf	_DimmerLights,w
 14292  1E56  3E0C               	addlw	12
 14293  1E57  0086               	movwf	6
 14294  1E58  3001               	movlw	1	; select bank2/3
 14295  1E59  0087               	movwf	7
 14296  1E5A  1401               	bsf	1,0
 14297                           
 14298                           ;Dimmer_B1.c: 72: DimmerLights->MaxmumValue=((char)((100-55)*1.5));
 14299  1E5B  3043               	movlw	67
 14300  1E5C  00A2               	movwf	??_setDimmerLights_Initialization
 14301  1E5D  086A               	movf	_DimmerLights,w
 14302  1E5E  3E05               	addlw	5
 14303  1E5F  0086               	movwf	6
 14304  1E60  3001               	movlw	1	; select bank2/3
 14305  1E61  0087               	movwf	7
 14306  1E62  0822               	movf	??_setDimmerLights_Initialization,w
 14307  1E63  0081               	movwf	1
 14308                           
 14309                           ;Dimmer_B1.c: 73: DimmerLights->MinimumValue=((char)((100-20)*1.5));
 14310  1E64  3078               	movlw	120
 14311  1E65  00A2               	movwf	??_setDimmerLights_Initialization
 14312  1E66  086A               	movf	_DimmerLights,w
 14313  1E67  3E06               	addlw	6
 14314  1E68  0086               	movwf	6
 14315  1E69  3001               	movlw	1	; select bank2/3
 14316  1E6A  0087               	movwf	7
 14317  1E6B  0822               	movf	??_setDimmerLights_Initialization,w
 14318  1E6C  0081               	movwf	1
 14319                           
 14320                           ;Dimmer_B1.c: 83: DimmerLights->DimmingValue=DimmerLights->MinimumValue;
 14321  1E6D  086A               	movf	_DimmerLights,w
 14322  1E6E  3E06               	addlw	6
 14323  1E6F  0086               	movwf	6
 14324  1E70  3001               	movlw	1	; select bank2/3
 14325  1E71  0087               	movwf	7
 14326  1E72  0801               	movf	1,w
 14327  1E73  00A2               	movwf	??_setDimmerLights_Initialization
 14328  1E74  086A               	movf	_DimmerLights,w
 14329  1E75  3E04               	addlw	4
 14330  1E76  0086               	movwf	6
 14331  1E77  3001               	movlw	1	; select bank2/3
 14332  1E78  0087               	movwf	7
 14333  1E79  0822               	movf	??_setDimmerLights_Initialization,w
 14334  1E7A  0081               	movwf	1
 14335  1E7B  0008               	return
 14336  1E7C                     __end_of_setDimmerLights_Initialization:	
 14337                           
 14338                           	psect	text88
 14339  1918                     __ptext88:	
 14340 ;; *************** function _Dimmer_Initialization *****************
 14341 ;; Defined at:
 14342 ;;		line 520 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 14343 ;; Parameters:    Size  Location     Type
 14344 ;;		None
 14345 ;; Auto vars:     Size  Location     Type
 14346 ;;		None
 14347 ;; Return value:  Size  Location     Type
 14348 ;;		None               void
 14349 ;; Registers used:
 14350 ;;		wreg
 14351 ;; Tracked objects:
 14352 ;;		On entry : 0/0
 14353 ;;		On exit  : 0/0
 14354 ;;		Unchanged: 0/0
 14355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14358 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14359 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14360 ;;Total ram usage:        1 bytes
 14361 ;; Hardware stack levels used:    1
 14362 ;; Hardware stack levels required when called:    4
 14363 ;; This function calls:
 14364 ;;		Nothing
 14365 ;; This function is called by:
 14366 ;;		_DimmerLights_Initialization
 14367 ;; This function uses a non-reentrant model
 14368 ;;
 14369                           
 14370                           
 14371                           ;psect for function _Dimmer_Initialization
 14372  1918                     _Dimmer_Initialization:	
 14373                           
 14374                           ;Dimmer_B1.c: 522: Dimmer=&Dimmer1;
 14375                           
 14376                           ;incstack = 0
 14377                           ; Regs used in _Dimmer_Initialization: [wreg]
 14378  1918  30E2               	movlw	_Dimmer1& (0+255)
 14379  1919  0020               	movlb	0	; select bank0
 14380  191A  00A0               	movwf	??_Dimmer_Initialization
 14381  191B  0820               	movf	??_Dimmer_Initialization,w
 14382  191C  0021               	movlb	1	; select bank1
 14383  191D  00B8               	movwf	_Dimmer^(0+128)
 14384  191E  0008               	return
 14385  191F                     __end_of_Dimmer_Initialization:	
 14386                           
 14387                           	psect	text89
 14388  193C                     __ptext89:	
 14389 ;; *************** function _DelayOff_Main *****************
 14390 ;; Defined at:
 14391 ;;		line 45 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\DelayOff_B1.c"
 14392 ;; Parameters:    Size  Location     Type
 14393 ;;		None
 14394 ;; Auto vars:     Size  Location     Type
 14395 ;;		None
 14396 ;; Return value:  Size  Location     Type
 14397 ;;		None               void
 14398 ;; Registers used:
 14399 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14400 ;; Tracked objects:
 14401 ;;		On entry : 0/0
 14402 ;;		On exit  : 0/0
 14403 ;;		Unchanged: 0/0
 14404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14406 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14408 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14409 ;;Total ram usage:        0 bytes
 14410 ;; Hardware stack levels used:    1
 14411 ;; Hardware stack levels required when called:    9
 14412 ;; This function calls:
 14413 ;;		_DlyOff_Main
 14414 ;; This function is called by:
 14415 ;;		_main
 14416 ;; This function uses a non-reentrant model
 14417 ;;
 14418                           
 14419                           
 14420                           ;psect for function _DelayOff_Main
 14421  193C                     _DelayOff_Main:	
 14422                           
 14423                           ;DelayOff_B1.c: 48: DlyOff_Main(1);
 14424                           
 14425                           ;incstack = 0
 14426                           ; Regs used in _DelayOff_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14427  193C  3001               	movlw	1
 14428  193D  3196  262A  3199   	fcall	_DlyOff_Main
 14429                           
 14430                           ;DelayOff_B1.c: 52: DlyOff_Main(2);
 14431  1940  3002               	movlw	2
 14432  1941  3196  262A         	fcall	_DlyOff_Main
 14433  1943  0008               	return
 14434  1944                     __end_of_DelayOff_Main:	
 14435                           
 14436                           	psect	text90
 14437  162A                     __ptext90:	
 14438 ;; *************** function _DlyOff_Main *****************
 14439 ;; Defined at:
 14440 ;;		line 66 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\DelayOff_B1.c"
 14441 ;; Parameters:    Size  Location     Type
 14442 ;;  sw              1    wreg     unsigned char 
 14443 ;; Auto vars:     Size  Location     Type
 14444 ;;  sw              1   68[BANK0 ] unsigned char 
 14445 ;; Return value:  Size  Location     Type
 14446 ;;		None               void
 14447 ;; Registers used:
 14448 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14449 ;; Tracked objects:
 14450 ;;		On entry : 0/0
 14451 ;;		On exit  : 0/0
 14452 ;;		Unchanged: 0/0
 14453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14455 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14456 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14457 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14458 ;;Total ram usage:        3 bytes
 14459 ;; Hardware stack levels used:    1
 14460 ;; Hardware stack levels required when called:    8
 14461 ;; This function calls:
 14462 ;;		_DelayOffPointSelect
 14463 ;;		_setBuz
 14464 ;;		_setDimmerLights_Switch
 14465 ;;		_setDimmerLights_Trigger
 14466 ;;		_setRFSW_Status
 14467 ;;		_setRF_DimmerLights
 14468 ;;		_setSw_Status
 14469 ;;		_setTxData
 14470 ;; This function is called by:
 14471 ;;		_DelayOff_Main
 14472 ;; This function uses a non-reentrant model
 14473 ;;
 14474                           
 14475                           
 14476                           ;psect for function _DlyOff_Main
 14477  162A                     _DlyOff_Main:	
 14478                           
 14479                           ;incstack = 0
 14480                           ; Regs used in _DlyOff_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14481                           ;DlyOff_Main@sw stored from wreg
 14482  162A  0020               	movlb	0	; select bank0
 14483  162B  00E4               	movwf	DlyOff_Main@sw
 14484                           
 14485                           ;DelayOff_B1.c: 68: DelayOffPointSelect(sw);
 14486  162C  0864               	movf	DlyOff_Main@sw,w
 14487  162D  319A  22FA  3196   	fcall	_DelayOffPointSelect
 14488                           
 14489                           ;DelayOff_B1.c: 69: if(DelayOff->GO)
 14490  1630  0020               	movlb	0	; select bank0
 14491  1631  0869               	movf	_DelayOff,w
 14492  1632  0086               	movwf	6
 14493  1633  0187               	clrf	7
 14494  1634  1C81               	btfss	1,1
 14495  1635  0008               	return
 14496                           
 14497                           ;DelayOff_B1.c: 70: {
 14498                           ;DelayOff_B1.c: 71: DelayOff->SecondTime++;
 14499  1636  0869               	movf	_DelayOff,w
 14500  1637  3E02               	addlw	2
 14501  1638  0086               	movwf	6
 14502  1639  0187               	clrf	7
 14503  163A  3001               	movlw	1
 14504  163B  0781               	addwf	1,f
 14505  163C  3141               	addfsr 1,1
 14506  163D  1803               	skipnc
 14507  163E  0A81               	incf	1,f
 14508                           
 14509                           ;DelayOff_B1.c: 72: if(DelayOff->SecondTime >= 5650)
 14510  163F  0869               	movf	_DelayOff,w
 14511  1640  3E02               	addlw	2
 14512  1641  0086               	movwf	6
 14513  1642  0187               	clrf	7
 14514  1643  3F40               	moviw [0]fsr1
 14515  1644  00E2               	movwf	??_DlyOff_Main
 14516  1645  3F41               	moviw [1]fsr1
 14517  1646  00E3               	movwf	??_DlyOff_Main+1
 14518  1647  3016               	movlw	22
 14519  1648  0263               	subwf	??_DlyOff_Main+1,w
 14520  1649  3012               	movlw	18
 14521  164A  1903               	skipnz
 14522  164B  0262               	subwf	??_DlyOff_Main,w
 14523  164C  1C03               	skipc
 14524  164D  0008               	return
 14525                           
 14526                           ;DelayOff_B1.c: 73: {
 14527                           ;DelayOff_B1.c: 74: DelayOff->SecondTime=0;
 14528  164E  0869               	movf	_DelayOff,w
 14529  164F  3E02               	addlw	2
 14530  1650  0086               	movwf	6
 14531  1651  0187               	clrf	7
 14532  1652  3000               	movlw	0
 14533  1653  3FC0               	movwi [0]fsr1
 14534  1654  3FC1               	movwi [1]fsr1
 14535                           
 14536                           ;DelayOff_B1.c: 75: DelayOff->MinuteTime++;
 14537  1655  3001               	movlw	1
 14538  1656  00E2               	movwf	??_DlyOff_Main
 14539  1657  0869               	movf	_DelayOff,w
 14540  1658  3E04               	addlw	4
 14541  1659  0086               	movwf	6
 14542  165A  0187               	clrf	7
 14543  165B  0862               	movf	??_DlyOff_Main,w
 14544  165C  0781               	addwf	1,f
 14545                           
 14546                           ;DelayOff_B1.c: 76: if(DelayOff->MinuteTime >= DelayOff->Value)
 14547  165D  0869               	movf	_DelayOff,w
 14548  165E  3E04               	addlw	4
 14549  165F  0086               	movwf	6
 14550  1660  0187               	clrf	7
 14551  1661  0A69               	incf	_DelayOff,w
 14552  1662  0084               	movwf	4
 14553  1663  0185               	clrf	5
 14554  1664  0800               	movf	0,w
 14555  1665  0201               	subwf	1,w
 14556  1666  1C03               	skipc
 14557  1667  0008               	return
 14558                           
 14559                           ;DelayOff_B1.c: 77: {
 14560                           ;DelayOff_B1.c: 78: DelayOff->MinuteTime=0;
 14561  1668  0869               	movf	_DelayOff,w
 14562  1669  3E04               	addlw	4
 14563  166A  0086               	movwf	6
 14564  166B  0187               	clrf	7
 14565  166C  0181               	clrf	1
 14566                           
 14567                           ;DelayOff_B1.c: 79: DelayOff->GO=0;
 14568  166D  0869               	movf	_DelayOff,w
 14569  166E  0086               	movwf	6
 14570  166F  0187               	clrf	7
 14571  1670  1081               	bcf	1,1
 14572                           
 14573                           ;DelayOff_B1.c: 80: setSw_Status(sw,0);
 14574  1671  01A2               	clrf	setSw_Status@command
 14575  1672  0864               	movf	DlyOff_Main@sw,w
 14576  1673  319A  2254  3196   	fcall	_setSw_Status
 14577                           
 14578                           ;DelayOff_B1.c: 81: setRFSW_Status(sw,0);
 14579  1676  0020               	movlb	0	; select bank0
 14580  1677  01A2               	clrf	setRFSW_Status@command
 14581  1678  0864               	movf	DlyOff_Main@sw,w
 14582  1679  319A  2245  3196   	fcall	_setRFSW_Status
 14583                           
 14584                           ;DelayOff_B1.c: 82: setRF_DimmerLights(sw,0);
 14585  167C  0020               	movlb	0	; select bank0
 14586  167D  01DD               	clrf	setRF_DimmerLights@on
 14587  167E  0864               	movf	DlyOff_Main@sw,w
 14588  167F  3195  2553  3196   	fcall	_setRF_DimmerLights
 14589                           
 14590                           ;DelayOff_B1.c: 83: setDimmerLights_Trigger(sw,1);
 14591  1682  0020               	movlb	0	; select bank0
 14592  1683  01A2               	clrf	setDimmerLights_Trigger@command
 14593  1684  0AA2               	incf	setDimmerLights_Trigger@command,f
 14594  1685  0864               	movf	DlyOff_Main@sw,w
 14595  1686  319A  2283  3196   	fcall	_setDimmerLights_Trigger
 14596                           
 14597                           ;DelayOff_B1.c: 84: setDimmerLights_Switch(sw,0);
 14598  1689  0020               	movlb	0	; select bank0
 14599  168A  01A2               	clrf	setDimmerLights_Switch@command
 14600  168B  0864               	movf	DlyOff_Main@sw,w
 14601  168C  319A  2273  3196   	fcall	_setDimmerLights_Switch
 14602                           
 14603                           ;DelayOff_B1.c: 85: setTxData(1);
 14604  168F  3001               	movlw	1
 14605  1690  3187  271C  3196   	fcall	_setTxData
 14606                           
 14607                           ;DelayOff_B1.c: 86: setBuz(1,100);
 14608  1693  3064               	movlw	100
 14609  1694  0020               	movlb	0	; select bank0
 14610  1695  00A6               	movwf	setBuz@time
 14611  1696  3000               	movlw	0
 14612  1697  00A7               	movwf	setBuz@time+1
 14613  1698  3001               	movlw	1
 14614  1699  3197  2711         	fcall	_setBuz
 14615  169B  0008               	return
 14616  169C                     __end_of_DlyOff_Main:	
 14617                           
 14618                           	psect	text91
 14619  071C                     __ptext91:	
 14620 ;; *************** function _setTxData *****************
 14621 ;; Defined at:
 14622 ;;		line 141 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
 14623 ;; Parameters:    Size  Location     Type
 14624 ;;  rf              1    wreg     unsigned char 
 14625 ;; Auto vars:     Size  Location     Type
 14626 ;;  rf              1    3[BANK0 ] unsigned char 
 14627 ;;  i               1    0        unsigned char 
 14628 ;; Return value:  Size  Location     Type
 14629 ;;		None               void
 14630 ;; Registers used:
 14631 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14632 ;; Tracked objects:
 14633 ;;		On entry : 0/0
 14634 ;;		On exit  : 0/0
 14635 ;;		Unchanged: 0/0
 14636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14638 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14639 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14640 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14641 ;;Total ram usage:        2 bytes
 14642 ;; Hardware stack levels used:    1
 14643 ;; Hardware stack levels required when called:    5
 14644 ;; This function calls:
 14645 ;;		_RfPointSelect
 14646 ;; This function is called by:
 14647 ;;		_DlyOff_Main
 14648 ;;		_setDimmerLights_Adj
 14649 ;;		_setControl_Lights_Table
 14650 ;;		_setRFSW_Control
 14651 ;;		_setRFSW_AdjControl
 14652 ;;		_Sw_DimmerOnFunc
 14653 ;;		_Sw_DimmerOffFunc
 14654 ;; This function uses a non-reentrant model
 14655 ;;
 14656                           
 14657                           
 14658                           ;psect for function _setTxData
 14659  071C                     _setTxData:	
 14660                           
 14661                           ;incstack = 0
 14662                           ; Regs used in _setTxData: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14663                           ;setTxData@rf stored from wreg
 14664  071C  0020               	movlb	0	; select bank0
 14665  071D  00A3               	movwf	setTxData@rf
 14666                           
 14667                           ;RF_Control_B1.c: 143: char i;
 14668                           ;RF_Control_B1.c: 144: RfPointSelect(rf);
 14669  071E  0823               	movf	setTxData@rf,w
 14670  071F  3199  218E  3187   	fcall	_RfPointSelect
 14671                           
 14672                           ;RF_Control_B1.c: 145: if(RF->Enable)
 14673  0722  0877               	movf	_RF,w
 14674  0723  0086               	movwf	6
 14675  0724  0187               	clrf	7
 14676  0725  1C01               	btfss	1,0
 14677  0726  0008               	return
 14678                           
 14679                           ;RF_Control_B1.c: 146: {
 14680                           ;RF_Control_B1.c: 148: if(!RF->TransceiveGO)
 14681  0727  0877               	movf	_RF,w
 14682  0728  0086               	movwf	6
 14683  0729  0187               	clrf	7
 14684  072A  1901               	btfsc	1,2
 14685  072B  0008               	return
 14686                           
 14687                           ;RF_Control_B1.c: 149: {
 14688                           ;RF_Control_B1.c: 150: RF->TransceiveGO=1;
 14689  072C  0877               	movf	_RF,w
 14690  072D  0086               	movwf	6
 14691  072E  0187               	clrf	7
 14692  072F  1501               	bsf	1,2
 14693                           
 14694                           ;RF_Control_B1.c: 159: RF_Data[0]=0x63;
 14695  0730  3063               	movlw	99
 14696  0731  0020               	movlb	0	; select bank0
 14697  0732  00A2               	movwf	??_setTxData
 14698  0733  0822               	movf	??_setTxData,w
 14699  0734  0021               	movlb	1	; select bank1
 14700  0735  00A0               	movwf	_RF_Data^(0+128)
 14701                           
 14702                           ;RF_Control_B1.c: 160: RF_Data[1]=0x02;
 14703  0736  3002               	movlw	2
 14704  0737  0020               	movlb	0	; select bank0
 14705  0738  00A2               	movwf	??_setTxData
 14706  0739  0822               	movf	??_setTxData,w
 14707  073A  0021               	movlb	1	; select bank1
 14708  073B  00A1               	movwf	(_RF_Data^(0+128)+1)
 14709                           
 14710                           ;RF_Control_B1.c: 161: RF_Data[2]=Product->Data[2];
 14711  073C  0020               	movlb	0	; select bank0
 14712  073D  086E               	movf	_Product,w
 14713  073E  0086               	movwf	6
 14714  073F  3001               	movlw	1	; select bank2/3
 14715  0740  0087               	movwf	7
 14716  0741  3001               	movlw	1	; select bank2/3
 14717  0742  3F42               	moviw [2]fsr1
 14718  0743  0021               	movlb	1	; select bank1
 14719  0744  00A2               	movwf	(_RF_Data^(0+128)+2)
 14720                           
 14721                           ;RF_Control_B1.c: 162: RF_Data[3]=Product->Data[3];
 14722  0745  0020               	movlb	0	; select bank0
 14723  0746  086E               	movf	_Product,w
 14724  0747  0086               	movwf	6
 14725  0748  3001               	movlw	1	; select bank2/3
 14726  0749  0087               	movwf	7
 14727  074A  3001               	movlw	1	; select bank2/3
 14728  074B  3F43               	moviw [3]fsr1
 14729  074C  0021               	movlb	1	; select bank1
 14730  074D  00A3               	movwf	(_RF_Data^(0+128)+3)
 14731                           
 14732                           ;RF_Control_B1.c: 163: RF_Data[4]=Product->Data[4];
 14733  074E  0020               	movlb	0	; select bank0
 14734  074F  086E               	movf	_Product,w
 14735  0750  0086               	movwf	6
 14736  0751  3001               	movlw	1	; select bank2/3
 14737  0752  0087               	movwf	7
 14738  0753  3001               	movlw	1	; select bank2/3
 14739  0754  3F44               	moviw [4]fsr1
 14740  0755  0021               	movlb	1	; select bank1
 14741  0756  00A4               	movwf	(_RF_Data^(0+128)+4)
 14742                           
 14743                           ;RF_Control_B1.c: 164: RF_Data[5]=Product->Data[5];
 14744  0757  0020               	movlb	0	; select bank0
 14745  0758  086E               	movf	_Product,w
 14746  0759  0086               	movwf	6
 14747  075A  3001               	movlw	1	; select bank2/3
 14748  075B  0087               	movwf	7
 14749  075C  3001               	movlw	1	; select bank2/3
 14750  075D  3F45               	moviw [5]fsr1
 14751  075E  0021               	movlb	1	; select bank1
 14752  075F  00A5               	movwf	(_RF_Data^(0+128)+5)
 14753                           
 14754                           ;RF_Control_B1.c: 165: RF_Data[6]=Product->Data[6];
 14755  0760  0020               	movlb	0	; select bank0
 14756  0761  086E               	movf	_Product,w
 14757  0762  0086               	movwf	6
 14758  0763  3001               	movlw	1	; select bank2/3
 14759  0764  0087               	movwf	7
 14760  0765  3001               	movlw	1	; select bank2/3
 14761  0766  3F46               	moviw [6]fsr1
 14762  0767  0021               	movlb	1	; select bank1
 14763  0768  00A6               	movwf	(_RF_Data^(0+128)+6)
 14764                           
 14765                           ;RF_Control_B1.c: 166: RF_Data[7]=Product->Data[7];
 14766  0769  0020               	movlb	0	; select bank0
 14767  076A  086E               	movf	_Product,w
 14768  076B  0086               	movwf	6
 14769  076C  3001               	movlw	1	; select bank2/3
 14770  076D  0087               	movwf	7
 14771  076E  3001               	movlw	1	; select bank2/3
 14772  076F  3F47               	moviw [7]fsr1
 14773  0770  0021               	movlb	1	; select bank1
 14774  0771  00A7               	movwf	(_RF_Data^(0+128)+7)
 14775                           
 14776                           ;RF_Control_B1.c: 167: RF_Data[8]=Product->Data[8];
 14777  0772  0020               	movlb	0	; select bank0
 14778  0773  086E               	movf	_Product,w
 14779  0774  0086               	movwf	6
 14780  0775  3001               	movlw	1	; select bank2/3
 14781  0776  0087               	movwf	7
 14782  0777  3001               	movlw	1	; select bank2/3
 14783  0778  3F48               	moviw [8]fsr1
 14784  0779  0021               	movlb	1	; select bank1
 14785  077A  00A8               	movwf	(_RF_Data^(0+128)+8)
 14786                           
 14787                           ;RF_Control_B1.c: 168: RF_Data[9]=Product->Data[9];
 14788  077B  0020               	movlb	0	; select bank0
 14789  077C  086E               	movf	_Product,w
 14790  077D  0086               	movwf	6
 14791  077E  3001               	movlw	1	; select bank2/3
 14792  077F  0087               	movwf	7
 14793  0780  3001               	movlw	1	; select bank2/3
 14794  0781  3F49               	moviw [9]fsr1
 14795  0782  0021               	movlb	1	; select bank1
 14796  0783  00A9               	movwf	(_RF_Data^(0+128)+9)
 14797                           
 14798                           ;RF_Control_B1.c: 169: RF_Data[10]=Product->Data[10];
 14799  0784  0020               	movlb	0	; select bank0
 14800  0785  086E               	movf	_Product,w
 14801  0786  0086               	movwf	6
 14802  0787  3001               	movlw	1	; select bank2/3
 14803  0788  0087               	movwf	7
 14804  0789  3001               	movlw	1	; select bank2/3
 14805  078A  3F4A               	moviw [10]fsr1
 14806  078B  0021               	movlb	1	; select bank1
 14807  078C  00AA               	movwf	(_RF_Data^(0+128)+10)
 14808                           
 14809                           ;RF_Control_B1.c: 170: RF_Data[11]=Product->Data[11];
 14810  078D  0020               	movlb	0	; select bank0
 14811  078E  086E               	movf	_Product,w
 14812  078F  0086               	movwf	6
 14813  0790  3001               	movlw	1	; select bank2/3
 14814  0791  0087               	movwf	7
 14815  0792  3001               	movlw	1	; select bank2/3
 14816  0793  3F4B               	moviw [11]fsr1
 14817  0794  0021               	movlb	1	; select bank1
 14818  0795  00AB               	movwf	(_RF_Data^(0+128)+11)
 14819                           
 14820                           ;RF_Control_B1.c: 171: RF_Data[12]=Product->Data[12];
 14821  0796  0020               	movlb	0	; select bank0
 14822  0797  086E               	movf	_Product,w
 14823  0798  0086               	movwf	6
 14824  0799  3001               	movlw	1	; select bank2/3
 14825  079A  0087               	movwf	7
 14826  079B  3001               	movlw	1	; select bank2/3
 14827  079C  3F4C               	moviw [12]fsr1
 14828  079D  0021               	movlb	1	; select bank1
 14829  079E  00AC               	movwf	(_RF_Data^(0+128)+12)
 14830                           
 14831                           ;RF_Control_B1.c: 172: RF_Data[13]=Product->Data[13];
 14832  079F  0020               	movlb	0	; select bank0
 14833  07A0  086E               	movf	_Product,w
 14834  07A1  0086               	movwf	6
 14835  07A2  3001               	movlw	1	; select bank2/3
 14836  07A3  0087               	movwf	7
 14837  07A4  3001               	movlw	1	; select bank2/3
 14838  07A5  3F4D               	moviw [13]fsr1
 14839  07A6  0021               	movlb	1	; select bank1
 14840  07A7  00AD               	movwf	(_RF_Data^(0+128)+13)
 14841                           
 14842                           ;RF_Control_B1.c: 173: RF_Data[14]=Product->Data[14];
 14843  07A8  0020               	movlb	0	; select bank0
 14844  07A9  086E               	movf	_Product,w
 14845  07AA  0086               	movwf	6
 14846  07AB  3001               	movlw	1	; select bank2/3
 14847  07AC  0087               	movwf	7
 14848  07AD  3001               	movlw	1	; select bank2/3
 14849  07AE  3F4E               	moviw [14]fsr1
 14850  07AF  0021               	movlb	1	; select bank1
 14851  07B0  00AE               	movwf	(_RF_Data^(0+128)+14)
 14852                           
 14853                           ;RF_Control_B1.c: 174: RF_Data[15]=Product->Data[15];
 14854  07B1  0020               	movlb	0	; select bank0
 14855  07B2  086E               	movf	_Product,w
 14856  07B3  0086               	movwf	6
 14857  07B4  3001               	movlw	1	; select bank2/3
 14858  07B5  0087               	movwf	7
 14859  07B6  3001               	movlw	1	; select bank2/3
 14860  07B7  3F4F               	moviw [15]fsr1
 14861  07B8  0021               	movlb	1	; select bank1
 14862  07B9  00AF               	movwf	(_RF_Data^(0+128)+15)
 14863                           
 14864                           ;RF_Control_B1.c: 175: RF_Data[16]=Product->Data[16];
 14865  07BA  0020               	movlb	0	; select bank0
 14866  07BB  086E               	movf	_Product,w
 14867  07BC  0086               	movwf	6
 14868  07BD  3001               	movlw	1	; select bank2/3
 14869  07BE  0087               	movwf	7
 14870  07BF  3001               	movlw	1	; select bank2/3
 14871  07C0  3F50               	moviw [16]fsr1
 14872  07C1  0021               	movlb	1	; select bank1
 14873  07C2  00B0               	movwf	(_RF_Data^(0+128)+16)
 14874                           
 14875                           ;RF_Control_B1.c: 176: RF_Data[17]=Product->Data[17];
 14876  07C3  0020               	movlb	0	; select bank0
 14877  07C4  086E               	movf	_Product,w
 14878  07C5  0086               	movwf	6
 14879  07C6  3001               	movlw	1	; select bank2/3
 14880  07C7  0087               	movwf	7
 14881  07C8  3001               	movlw	1	; select bank2/3
 14882  07C9  3F51               	moviw [17]fsr1
 14883  07CA  0021               	movlb	1	; select bank1
 14884  07CB  00B1               	movwf	(_RF_Data^(0+128)+17)
 14885                           
 14886                           ;RF_Control_B1.c: 177: RF_Data[18]=Product->Data[18];
 14887  07CC  0020               	movlb	0	; select bank0
 14888  07CD  086E               	movf	_Product,w
 14889  07CE  0086               	movwf	6
 14890  07CF  3001               	movlw	1	; select bank2/3
 14891  07D0  0087               	movwf	7
 14892  07D1  3001               	movlw	1	; select bank2/3
 14893  07D2  3F52               	moviw [18]fsr1
 14894  07D3  0021               	movlb	1	; select bank1
 14895  07D4  00B2               	movwf	(_RF_Data^(0+128)+18)
 14896                           
 14897                           ;RF_Control_B1.c: 178: RF_Data[19]=Product->Data[19];
 14898  07D5  0020               	movlb	0	; select bank0
 14899  07D6  086E               	movf	_Product,w
 14900  07D7  0086               	movwf	6
 14901  07D8  3001               	movlw	1	; select bank2/3
 14902  07D9  0087               	movwf	7
 14903  07DA  3001               	movlw	1	; select bank2/3
 14904  07DB  3F53               	moviw [19]fsr1
 14905  07DC  0021               	movlb	1	; select bank1
 14906  07DD  00B3               	movwf	(_RF_Data^(0+128)+19)
 14907                           
 14908                           ;RF_Control_B1.c: 179: RF_Data[20]=210;
 14909  07DE  30D2               	movlw	210
 14910  07DF  0020               	movlb	0	; select bank0
 14911  07E0  00A2               	movwf	??_setTxData
 14912  07E1  0822               	movf	??_setTxData,w
 14913  07E2  0021               	movlb	1	; select bank1
 14914  07E3  00B4               	movwf	(_RF_Data^(0+128)+20)
 14915  07E4  0008               	return
 14916  07E5                     __end_of_setTxData:	
 14917                           
 14918                           	psect	text92
 14919  198E                     __ptext92:	
 14920 ;; *************** function _RfPointSelect *****************
 14921 ;; Defined at:
 14922 ;;		line 7 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
 14923 ;; Parameters:    Size  Location     Type
 14924 ;;  rf              1    wreg     unsigned char 
 14925 ;; Auto vars:     Size  Location     Type
 14926 ;;  rf              1    1[BANK0 ] unsigned char 
 14927 ;; Return value:  Size  Location     Type
 14928 ;;		None               void
 14929 ;; Registers used:
 14930 ;;		wreg
 14931 ;; Tracked objects:
 14932 ;;		On entry : 0/0
 14933 ;;		On exit  : 0/0
 14934 ;;		Unchanged: 0/0
 14935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14937 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14938 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14939 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14940 ;;Total ram usage:        2 bytes
 14941 ;; Hardware stack levels used:    1
 14942 ;; Hardware stack levels required when called:    4
 14943 ;; This function calls:
 14944 ;;		Nothing
 14945 ;; This function is called by:
 14946 ;;		_setRF_Learn
 14947 ;;		_setRF_RxStatus
 14948 ;;		_setRF_Main
 14949 ;;		_setTxData
 14950 ;;		_setRF_Enable
 14951 ;;		_RF_RxDisable
 14952 ;;		_getRxData
 14953 ;;		_setLog_Code
 14954 ;;		_setControl_Lights_Table
 14955 ;; This function uses a non-reentrant model
 14956 ;;
 14957                           
 14958                           
 14959                           ;psect for function _RfPointSelect
 14960  198E                     _RfPointSelect:	
 14961                           
 14962                           ;incstack = 0
 14963                           ; Regs used in _RfPointSelect: [wreg]
 14964                           ;RfPointSelect@rf stored from wreg
 14965  198E  0020               	movlb	0	; select bank0
 14966  198F  00A1               	movwf	RfPointSelect@rf
 14967                           
 14968                           ;RF_Control_B1.c: 10: if(rf == 1)
 14969  1990  0821               	movf	RfPointSelect@rf,w
 14970  1991  3A01               	xorlw	1
 14971  1992  1D03               	skipz
 14972  1993  0008               	return
 14973                           
 14974                           ;RF_Control_B1.c: 11: {
 14975                           ;RF_Control_B1.c: 12: RF=&RF1;
 14976  1994  30E5               	movlw	_RF1& (0+255)
 14977  1995  00A0               	movwf	??_RfPointSelect
 14978  1996  0820               	movf	??_RfPointSelect,w
 14979  1997  00F7               	movwf	_RF
 14980  1998  0008               	return
 14981  1999                     __end_of_RfPointSelect:	
 14982                           
 14983                           	psect	text93
 14984  1A54                     __ptext93:	
 14985 ;; *************** function _setSw_Status *****************
 14986 ;; Defined at:
 14987 ;;		line 106 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Switch_B1.c"
 14988 ;; Parameters:    Size  Location     Type
 14989 ;;  sw              1    wreg     unsigned char 
 14990 ;;  command         1    2[BANK0 ] unsigned char 
 14991 ;; Auto vars:     Size  Location     Type
 14992 ;;  sw              1    3[BANK0 ] unsigned char 
 14993 ;; Return value:  Size  Location     Type
 14994 ;;		None               void
 14995 ;; Registers used:
 14996 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14997 ;; Tracked objects:
 14998 ;;		On entry : 0/0
 14999 ;;		On exit  : 0/0
 15000 ;;		Unchanged: 0/0
 15001 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15002 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15003 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15004 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15005 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15006 ;;Total ram usage:        2 bytes
 15007 ;; Hardware stack levels used:    1
 15008 ;; Hardware stack levels required when called:    5
 15009 ;; This function calls:
 15010 ;;		_SwPointSelect
 15011 ;; This function is called by:
 15012 ;;		_DlyOff_Main
 15013 ;;		_setDimmerLights_ERROR
 15014 ;;		_setControl_Lights_Table
 15015 ;;		_setRFSW_Control
 15016 ;; This function uses a non-reentrant model
 15017 ;;
 15018                           
 15019                           
 15020                           ;psect for function _setSw_Status
 15021  1A54                     _setSw_Status:	
 15022                           
 15023                           ;incstack = 0
 15024                           ; Regs used in _setSw_Status: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15025                           ;setSw_Status@sw stored from wreg
 15026  1A54  0020               	movlb	0	; select bank0
 15027  1A55  00A3               	movwf	setSw_Status@sw
 15028                           
 15029                           ;Switch_B1.c: 108: SwPointSelect(sw);
 15030  1A56  0823               	movf	setSw_Status@sw,w
 15031  1A57  319B  230E         	fcall	_SwPointSelect
 15032                           
 15033                           ;Switch_B1.c: 109: Sw->Status=command;
 15034  1A59  0878               	movf	_Sw,w
 15035  1A5A  0086               	movwf	6
 15036  1A5B  3001               	movlw	1	; select bank2/3
 15037  1A5C  0087               	movwf	7
 15038  1A5D  0020               	movlb	0	; select bank0
 15039  1A5E  0822               	movf	setSw_Status@command,w
 15040  1A5F  1301               	bcf	1,6
 15041  1A60  1D03               	skipz
 15042  1A61  1701               	bsf	1,6
 15043  1A62  0008               	return
 15044  1A63                     __end_of_setSw_Status:	
 15045                           
 15046                           	psect	text94
 15047  1B0E                     __ptext94:	
 15048 ;; *************** function _SwPointSelect *****************
 15049 ;; Defined at:
 15050 ;;		line 16 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Switch_B1.c"
 15051 ;; Parameters:    Size  Location     Type
 15052 ;;  sw              1    wreg     unsigned char 
 15053 ;; Auto vars:     Size  Location     Type
 15054 ;;  sw              1    1[BANK0 ] unsigned char 
 15055 ;; Return value:  Size  Location     Type
 15056 ;;		None               void
 15057 ;; Registers used:
 15058 ;;		wreg
 15059 ;; Tracked objects:
 15060 ;;		On entry : 0/0
 15061 ;;		On exit  : 0/0
 15062 ;;		Unchanged: 0/0
 15063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15064 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15065 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15066 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15067 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15068 ;;Total ram usage:        2 bytes
 15069 ;; Hardware stack levels used:    1
 15070 ;; Hardware stack levels required when called:    4
 15071 ;; This function calls:
 15072 ;;		Nothing
 15073 ;; This function is called by:
 15074 ;;		_setSw_Enable
 15075 ;;		_setSw_Status
 15076 ;;		_setSw_Main
 15077 ;;		_Sw_Detect
 15078 ;; This function uses a non-reentrant model
 15079 ;;
 15080                           
 15081                           
 15082                           ;psect for function _SwPointSelect
 15083  1B0E                     _SwPointSelect:	
 15084                           
 15085                           ;incstack = 0
 15086                           ; Regs used in _SwPointSelect: [wreg]
 15087                           ;SwPointSelect@sw stored from wreg
 15088  1B0E  0020               	movlb	0	; select bank0
 15089  1B0F  00A1               	movwf	SwPointSelect@sw
 15090                           
 15091                           ;Switch_B1.c: 19: if(sw == 1)
 15092  1B10  0821               	movf	SwPointSelect@sw,w
 15093  1B11  3A01               	xorlw	1
 15094  1B12  1D03               	skipz
 15095  1B13  2B19               	goto	l8259
 15096                           
 15097                           ;Switch_B1.c: 20: {
 15098                           ;Switch_B1.c: 21: Sw=&Sw1;
 15099  1B14  3056               	movlw	_Sw1& (0+255)
 15100  1B15  00A0               	movwf	??_SwPointSelect
 15101  1B16  0820               	movf	??_SwPointSelect,w
 15102  1B17  00F8               	movwf	_Sw
 15103                           
 15104                           ;Switch_B1.c: 22: }
 15105  1B18  0008               	return
 15106  1B19                     l8259:	
 15107                           
 15108                           ;Switch_B1.c: 25: else if(sw == 2)
 15109  1B19  0821               	movf	SwPointSelect@sw,w
 15110  1B1A  3A02               	xorlw	2
 15111  1B1B  1D03               	skipz
 15112  1B1C  0008               	return
 15113                           
 15114                           ;Switch_B1.c: 26: {
 15115                           ;Switch_B1.c: 27: Sw=&Sw2;
 15116  1B1D  305F               	movlw	_Sw2& (0+255)
 15117  1B1E  00A0               	movwf	??_SwPointSelect
 15118  1B1F  0820               	movf	??_SwPointSelect,w
 15119  1B20  00F8               	movwf	_Sw
 15120  1B21  0008               	return
 15121  1B22                     __end_of_SwPointSelect:	
 15122                           
 15123                           	psect	text95
 15124  1553                     __ptext95:	
 15125 ;; *************** function _setRF_DimmerLights *****************
 15126 ;; Defined at:
 15127 ;;		line 445 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
 15128 ;; Parameters:    Size  Location     Type
 15129 ;;  lights          1    wreg     unsigned char 
 15130 ;;  on              1   61[BANK0 ] unsigned char 
 15131 ;; Auto vars:     Size  Location     Type
 15132 ;;  lights          1   65[BANK0 ] unsigned char 
 15133 ;;  status          1   64[BANK0 ] unsigned char 
 15134 ;; Return value:  Size  Location     Type
 15135 ;;		None               void
 15136 ;; Registers used:
 15137 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15138 ;; Tracked objects:
 15139 ;;		On entry : 0/0
 15140 ;;		On exit  : 0/0
 15141 ;;		Unchanged: 0/0
 15142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15143 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15144 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15145 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15146 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15147 ;;Total ram usage:        5 bytes
 15148 ;; Hardware stack levels used:    1
 15149 ;; Hardware stack levels required when called:    7
 15150 ;; This function calls:
 15151 ;;		_setPercentValue
 15152 ;; This function is called by:
 15153 ;;		_DlyOff_Main
 15154 ;;		_setDimmerLights_Adj
 15155 ;;		_setRFSW_Control
 15156 ;;		_Sw_DimmerOnFunc
 15157 ;;		_Sw_DimmerOffFunc
 15158 ;; This function uses a non-reentrant model
 15159 ;;
 15160                           
 15161                           
 15162                           ;psect for function _setRF_DimmerLights
 15163  1553                     _setRF_DimmerLights:	
 15164                           
 15165                           ;incstack = 0
 15166                           ; Regs used in _setRF_DimmerLights: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15167                           ;setRF_DimmerLights@lights stored from wreg
 15168  1553  0020               	movlb	0	; select bank0
 15169  1554  00E1               	movwf	setRF_DimmerLights@lights
 15170                           
 15171                           ;RF_Control_B1.c: 447: char status;
 15172                           ;RF_Control_B1.c: 448: status=1;
 15173  1555  01E0               	clrf	setRF_DimmerLights@status
 15174  1556  0AE0               	incf	setRF_DimmerLights@status,f
 15175                           
 15176                           ;RF_Control_B1.c: 449: status<<=(lights-1);
 15177  1557  0861               	movf	setRF_DimmerLights@lights,w
 15178  1558  3EFF               	addlw	-1
 15179  1559  0A89               	incf	9,f
 15180  155A  2D5D               	goto	u8140
 15181  155B                     u8145:	
 15182  155B  1003               	clrc
 15183  155C  0DE0               	rlf	setRF_DimmerLights@status,f
 15184  155D                     u8140:	
 15185  155D  3EFF               	addlw	-1
 15186  155E  1D03               	skipz
 15187  155F  2D5B               	goto	u8145
 15188                           
 15189                           ;RF_Control_B1.c: 450: Product->Data[11]=lights;
 15190  1560  0861               	movf	setRF_DimmerLights@lights,w
 15191  1561  00DE               	movwf	??_setRF_DimmerLights
 15192  1562  086E               	movf	_Product,w
 15193  1563  3E0B               	addlw	11
 15194  1564  0086               	movwf	6
 15195  1565  3001               	movlw	1	; select bank2/3
 15196  1566  0087               	movwf	7
 15197  1567  085E               	movf	??_setRF_DimmerLights,w
 15198  1568  0081               	movwf	1
 15199                           
 15200                           ;RF_Control_B1.c: 453: Product->Data[(20+lights)]=setPercentValue(((char)((100-55)*1.5))
      +                          );
 15201  1569  3043               	movlw	67
 15202  156A  3191  2183  3195   	fcall	_setPercentValue
 15203  156D  0020               	movlb	0	; select bank0
 15204  156E  00DE               	movwf	??_setRF_DimmerLights
 15205  156F  0861               	movf	setRF_DimmerLights@lights,w
 15206  1570  3E14               	addlw	20
 15207  1571  076E               	addwf	_Product,w
 15208  1572  00DF               	movwf	??_setRF_DimmerLights+1
 15209  1573  085F               	movf	??_setRF_DimmerLights+1,w
 15210  1574  0086               	movwf	6
 15211  1575  3001               	movlw	1	; select bank2/3
 15212  1576  0087               	movwf	7
 15213  1577  085E               	movf	??_setRF_DimmerLights,w
 15214  1578  0081               	movwf	1
 15215                           
 15216                           ;RF_Control_B1.c: 456: Product->Data[9]=Product->Data[20+lights];
 15217  1579  0861               	movf	setRF_DimmerLights@lights,w
 15218  157A  3E14               	addlw	20
 15219  157B  076E               	addwf	_Product,w
 15220  157C  00DE               	movwf	??_setRF_DimmerLights
 15221  157D  085E               	movf	??_setRF_DimmerLights,w
 15222  157E  0086               	movwf	6
 15223  157F  3001               	movlw	1	; select bank2/3
 15224  1580  0087               	movwf	7
 15225  1581  0801               	movf	1,w
 15226  1582  00DF               	movwf	??_setRF_DimmerLights+1
 15227  1583  086E               	movf	_Product,w
 15228  1584  3E09               	addlw	9
 15229  1585  0086               	movwf	6
 15230  1586  3001               	movlw	1	; select bank2/3
 15231  1587  0087               	movwf	7
 15232  1588  085F               	movf	??_setRF_DimmerLights+1,w
 15233  1589  0081               	movwf	1
 15234                           
 15235                           ;RF_Control_B1.c: 457: Product->Data[17]=Product->Data[26+lights];
 15236  158A  0861               	movf	setRF_DimmerLights@lights,w
 15237  158B  3E1A               	addlw	26
 15238  158C  076E               	addwf	_Product,w
 15239  158D  00DE               	movwf	??_setRF_DimmerLights
 15240  158E  085E               	movf	??_setRF_DimmerLights,w
 15241  158F  0086               	movwf	6
 15242  1590  3001               	movlw	1	; select bank2/3
 15243  1591  0087               	movwf	7
 15244  1592  0801               	movf	1,w
 15245  1593  00DF               	movwf	??_setRF_DimmerLights+1
 15246  1594  086E               	movf	_Product,w
 15247  1595  3E11               	addlw	17
 15248  1596  0086               	movwf	6
 15249  1597  3001               	movlw	1	; select bank2/3
 15250  1598  0087               	movwf	7
 15251  1599  085F               	movf	??_setRF_DimmerLights+1,w
 15252  159A  0081               	movwf	1
 15253                           
 15254                           ;RF_Control_B1.c: 458: if(on)
 15255  159B  085D               	movf	setRF_DimmerLights@on,w
 15256  159C  1903               	btfsc	3,2
 15257  159D  2DAE               	goto	l8317
 15258                           
 15259                           ;RF_Control_B1.c: 459: {
 15260                           ;RF_Control_B1.c: 460: Product->Data[15]=(Product->Data[15]|status);
 15261  159E  086E               	movf	_Product,w
 15262  159F  3E0F               	addlw	15
 15263  15A0  0086               	movwf	6
 15264  15A1  3001               	movlw	1	; select bank2/3
 15265  15A2  0087               	movwf	7
 15266  15A3  0801               	movf	1,w
 15267  15A4  0460               	iorwf	setRF_DimmerLights@status,w
 15268  15A5  00DE               	movwf	??_setRF_DimmerLights
 15269  15A6  086E               	movf	_Product,w
 15270  15A7  3E0F               	addlw	15
 15271  15A8  0086               	movwf	6
 15272  15A9  3001               	movlw	1	; select bank2/3
 15273  15AA  0087               	movwf	7
 15274  15AB  085E               	movf	??_setRF_DimmerLights,w
 15275  15AC  0081               	movwf	1
 15276                           
 15277                           ;RF_Control_B1.c: 461: }
 15278  15AD  0008               	return
 15279  15AE                     l8317:	
 15280                           
 15281                           ;RF_Control_B1.c: 462: else
 15282                           ;RF_Control_B1.c: 463: {
 15283                           ;RF_Control_B1.c: 464: Product->Data[15]=(Product->Data[15]&(~status));
 15284  15AE  086E               	movf	_Product,w
 15285  15AF  3E0F               	addlw	15
 15286  15B0  0086               	movwf	6
 15287  15B1  3001               	movlw	1	; select bank2/3
 15288  15B2  0087               	movwf	7
 15289  15B3  0960               	comf	setRF_DimmerLights@status,w
 15290  15B4  0501               	andwf	1,w
 15291  15B5  00DE               	movwf	??_setRF_DimmerLights
 15292  15B6  086E               	movf	_Product,w
 15293  15B7  3E0F               	addlw	15
 15294  15B8  0086               	movwf	6
 15295  15B9  3001               	movlw	1	; select bank2/3
 15296  15BA  0087               	movwf	7
 15297  15BB  085E               	movf	??_setRF_DimmerLights,w
 15298  15BC  0081               	movwf	1
 15299  15BD  0008               	return
 15300  15BE                     __end_of_setRF_DimmerLights:	
 15301                           
 15302                           	psect	text96
 15303  1183                     __ptext96:	
 15304 ;; *************** function _setPercentValue *****************
 15305 ;; Defined at:
 15306 ;;		line 505 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 15307 ;; Parameters:    Size  Location     Type
 15308 ;;  value           1    wreg     unsigned char 
 15309 ;; Auto vars:     Size  Location     Type
 15310 ;;  value           1   57[BANK0 ] unsigned char 
 15311 ;;  i               3   58[BANK0 ] float 
 15312 ;; Return value:  Size  Location     Type
 15313 ;;                  1    wreg      unsigned char 
 15314 ;; Registers used:
 15315 ;;		wreg, status,2, status,0, pclath, cstack
 15316 ;; Tracked objects:
 15317 ;;		On entry : 0/0
 15318 ;;		On exit  : 0/0
 15319 ;;		Unchanged: 0/0
 15320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15321 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15322 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15324 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15325 ;;Total ram usage:        4 bytes
 15326 ;; Hardware stack levels used:    1
 15327 ;; Hardware stack levels required when called:    6
 15328 ;; This function calls:
 15329 ;;		___awtoft
 15330 ;;		___ftdiv
 15331 ;;		___fttol
 15332 ;; This function is called by:
 15333 ;;		_Flash_Memory_Initialization
 15334 ;;		_setRF_DimmerLights
 15335 ;; This function uses a non-reentrant model
 15336 ;;
 15337                           
 15338                           
 15339                           ;psect for function _setPercentValue
 15340  1183                     _setPercentValue:	
 15341                           
 15342                           ;incstack = 0
 15343                           ; Regs used in _setPercentValue: [wreg+status,2+status,0+pclath+cstack]
 15344                           ;setPercentValue@value stored from wreg
 15345  1183  0020               	movlb	0	; select bank0
 15346  1184  00D9               	movwf	setPercentValue@value
 15347                           
 15348                           ;Dimmer_B1.c: 508: float i=((char)((100-20)*1.5))-((char)((100-55)*1.5));
 15349  1185  3000               	movlw	0
 15350  1186  00DA               	movwf	setPercentValue@i
 15351  1187  3054               	movlw	84
 15352  1188  00DB               	movwf	setPercentValue@i+1
 15353  1189  3042               	movlw	66
 15354  118A  00DC               	movwf	setPercentValue@i+2
 15355                           
 15356                           ;Dimmer_B1.c: 509: i/=100;
 15357  118B  3000               	movlw	0
 15358  118C  00AE               	movwf	___ftdiv@f2
 15359  118D  30C8               	movlw	200
 15360  118E  00AF               	movwf	___ftdiv@f2+1
 15361  118F  3042               	movlw	66
 15362  1190  00B0               	movwf	___ftdiv@f2+2
 15363  1191  085A               	movf	setPercentValue@i,w
 15364  1192  00B1               	movwf	___ftdiv@f1
 15365  1193  085B               	movf	setPercentValue@i+1,w
 15366  1194  00B2               	movwf	___ftdiv@f1+1
 15367  1195  085C               	movf	setPercentValue@i+2,w
 15368  1196  00B3               	movwf	___ftdiv@f1+2
 15369  1197  318C  24C4  3191   	fcall	___ftdiv
 15370  119A  0020               	movlb	0	; select bank0
 15371  119B  082E               	movf	?___ftdiv,w
 15372  119C  00DA               	movwf	setPercentValue@i
 15373  119D  082F               	movf	?___ftdiv+1,w
 15374  119E  00DB               	movwf	setPercentValue@i+1
 15375  119F  0830               	movf	?___ftdiv+2,w
 15376  11A0  00DC               	movwf	setPercentValue@i+2
 15377                           
 15378                           ;Dimmer_B1.c: 510: return (100-(char)((value-((char)((100-55)*1.5)))/i));
 15379  11A1  0859               	movf	setPercentValue@value,w
 15380  11A2  3EBD               	addlw	189
 15381  11A3  00A8               	movwf	___awtoft@c
 15382  11A4  30FF               	movlw	255
 15383  11A5  1803               	skipnc
 15384  11A6  3000               	movlw	0
 15385  11A7  00A9               	movwf	___awtoft@c+1
 15386  11A8  319C  24D4  3191   	fcall	___awtoft
 15387  11AB  0020               	movlb	0	; select bank0
 15388  11AC  0828               	movf	?___awtoft,w
 15389  11AD  00B1               	movwf	___ftdiv@f1
 15390  11AE  0829               	movf	?___awtoft+1,w
 15391  11AF  00B2               	movwf	___ftdiv@f1+1
 15392  11B0  082A               	movf	?___awtoft+2,w
 15393  11B1  00B3               	movwf	___ftdiv@f1+2
 15394  11B2  085A               	movf	setPercentValue@i,w
 15395  11B3  00AE               	movwf	___ftdiv@f2
 15396  11B4  085B               	movf	setPercentValue@i+1,w
 15397  11B5  00AF               	movwf	___ftdiv@f2+1
 15398  11B6  085C               	movf	setPercentValue@i+2,w
 15399  11B7  00B0               	movwf	___ftdiv@f2+2
 15400  11B8  318C  24C4  3191   	fcall	___ftdiv
 15401  11BB  0020               	movlb	0	; select bank0
 15402  11BC  082E               	movf	?___ftdiv,w
 15403  11BD  00CB               	movwf	___fttol@f1
 15404  11BE  082F               	movf	?___ftdiv+1,w
 15405  11BF  00CC               	movwf	___fttol@f1+1
 15406  11C0  0830               	movf	?___ftdiv+2,w
 15407  11C1  00CD               	movwf	___fttol@f1+2
 15408  11C2  3189  215E         	fcall	___fttol
 15409  11C4  0020               	movlb	0	; select bank0
 15410  11C5  034B               	decf	?___fttol,w
 15411  11C6  3AFF               	xorlw	255
 15412  11C7  3E64               	addlw	100
 15413  11C8  0008               	return
 15414  11C9                     __end_of_setPercentValue:	
 15415                           
 15416                           	psect	text97
 15417  095E                     __ptext97:	
 15418 ;; *************** function ___fttol *****************
 15419 ;; Defined at:
 15420 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\fttol.c"
 15421 ;; Parameters:    Size  Location     Type
 15422 ;;  f1              3   43[BANK0 ] float 
 15423 ;; Auto vars:     Size  Location     Type
 15424 ;;  lval            4   52[BANK0 ] unsigned long 
 15425 ;;  exp1            1   56[BANK0 ] unsigned char 
 15426 ;;  sign1           1   51[BANK0 ] unsigned char 
 15427 ;; Return value:  Size  Location     Type
 15428 ;;                  4   43[BANK0 ] long 
 15429 ;; Registers used:
 15430 ;;		wreg, status,2, status,0
 15431 ;; Tracked objects:
 15432 ;;		On entry : 0/0
 15433 ;;		On exit  : 0/0
 15434 ;;		Unchanged: 0/0
 15435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15436 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15437 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15438 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15439 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15440 ;;Total ram usage:       14 bytes
 15441 ;; Hardware stack levels used:    1
 15442 ;; Hardware stack levels required when called:    4
 15443 ;; This function calls:
 15444 ;;		Nothing
 15445 ;; This function is called by:
 15446 ;;		_getPercentValue
 15447 ;;		_setPercentValue
 15448 ;; This function uses a non-reentrant model
 15449 ;;
 15450                           
 15451                           
 15452                           ;psect for function ___fttol
 15453  095E                     ___fttol:	
 15454                           
 15455                           ;incstack = 0
 15456                           ; Regs used in ___fttol: [wreg+status,2+status,0]
 15457  095E  0020               	movlb	0	; select bank0
 15458  095F  084B               	movf	___fttol@f1,w
 15459  0960  00CF               	movwf	??___fttol
 15460  0961  084C               	movf	___fttol@f1+1,w
 15461  0962  00D0               	movwf	??___fttol+1
 15462  0963  084D               	movf	___fttol@f1+2,w
 15463  0964  00D1               	movwf	??___fttol+2
 15464  0965  1003               	clrc
 15465  0966  0D50               	rlf	??___fttol+1,w
 15466  0967  0D51               	rlf	??___fttol+2,w
 15467  0968  00D2               	movwf	??___fttol+3
 15468  0969  0852               	movf	??___fttol+3,w
 15469  096A  00D8               	movwf	___fttol@exp1
 15470  096B  08D8               	movf	___fttol@exp1,f
 15471  096C  1D03               	skipz
 15472  096D  2977               	goto	l8131
 15473  096E  3000               	movlw	0
 15474  096F  00CE               	movwf	?___fttol+3
 15475  0970  3000               	movlw	0
 15476  0971  00CD               	movwf	?___fttol+2
 15477  0972  3000               	movlw	0
 15478  0973  00CC               	movwf	?___fttol+1
 15479  0974  3000               	movlw	0
 15480  0975  00CB               	movwf	?___fttol
 15481  0976  0008               	return
 15482  0977                     l8131:	
 15483  0977  084B               	movf	___fttol@f1,w
 15484  0978  00CF               	movwf	??___fttol
 15485  0979  084C               	movf	___fttol@f1+1,w
 15486  097A  00D0               	movwf	??___fttol+1
 15487  097B  084D               	movf	___fttol@f1+2,w
 15488  097C  00D1               	movwf	??___fttol+2
 15489  097D  3017               	movlw	23
 15490  097E                     u7795:	
 15491  097E  36D1               	lsrf	??___fttol+2,f
 15492  097F  0CD0               	rrf	??___fttol+1,f
 15493  0980  0CCF               	rrf	??___fttol,f
 15494  0981  0B89               	decfsz	9,f
 15495  0982  297E               	goto	u7795
 15496  0983  084F               	movf	??___fttol,w
 15497  0984  00D2               	movwf	??___fttol+3
 15498  0985  0852               	movf	??___fttol+3,w
 15499  0986  00D3               	movwf	___fttol@sign1
 15500  0987  17CC               	bsf	___fttol@f1+1,7
 15501  0988  30FF               	movlw	255
 15502  0989  05CB               	andwf	___fttol@f1,f
 15503  098A  30FF               	movlw	255
 15504  098B  05CC               	andwf	___fttol@f1+1,f
 15505  098C  3000               	movlw	0
 15506  098D  05CD               	andwf	___fttol@f1+2,f
 15507  098E  084B               	movf	___fttol@f1,w
 15508  098F  00D4               	movwf	___fttol@lval
 15509  0990  084C               	movf	___fttol@f1+1,w
 15510  0991  00D5               	movwf	___fttol@lval+1
 15511  0992  084D               	movf	___fttol@f1+2,w
 15512  0993  00D6               	movwf	___fttol@lval+2
 15513  0994  01D7               	clrf	___fttol@lval+3
 15514  0995  308E               	movlw	142
 15515  0996  02D8               	subwf	___fttol@exp1,f
 15516  0997  1FD8               	btfss	___fttol@exp1,7
 15517  0998  29B5               	goto	l8151
 15518  0999  0858               	movf	___fttol@exp1,w
 15519  099A  3A80               	xorlw	128
 15520  099B  3E8F               	addlw	143
 15521  099C  1803               	skipnc
 15522  099D  29A7               	goto	l8149
 15523  099E  3000               	movlw	0
 15524  099F  00CE               	movwf	?___fttol+3
 15525  09A0  3000               	movlw	0
 15526  09A1  00CD               	movwf	?___fttol+2
 15527  09A2  3000               	movlw	0
 15528  09A3  00CC               	movwf	?___fttol+1
 15529  09A4  3000               	movlw	0
 15530  09A5  00CB               	movwf	?___fttol
 15531  09A6  0008               	return
 15532  09A7                     l8149:	
 15533  09A7  3001               	movlw	1
 15534  09A8                     u7825:	
 15535  09A8  36D7               	lsrf	___fttol@lval+3,f
 15536  09A9  0CD6               	rrf	___fttol@lval+2,f
 15537  09AA  0CD5               	rrf	___fttol@lval+1,f
 15538  09AB  0CD4               	rrf	___fttol@lval,f
 15539  09AC  0B89               	decfsz	9,f
 15540  09AD  29A8               	goto	u7825
 15541  09AE  3001               	movlw	1
 15542  09AF  00CF               	movwf	??___fttol
 15543  09B0  084F               	movf	??___fttol,w
 15544  09B1  07D8               	addwf	___fttol@exp1,f
 15545  09B2  1903               	btfsc	3,2
 15546  09B3  29CE               	goto	l8161
 15547  09B4  29A7               	goto	l8149
 15548  09B5                     l8151:	
 15549  09B5  3018               	movlw	24
 15550  09B6  0258               	subwf	___fttol@exp1,w
 15551  09B7  1C03               	skipc
 15552  09B8  29CB               	goto	l8159
 15553  09B9  3000               	movlw	0
 15554  09BA  00CE               	movwf	?___fttol+3
 15555  09BB  3000               	movlw	0
 15556  09BC  00CD               	movwf	?___fttol+2
 15557  09BD  3000               	movlw	0
 15558  09BE  00CC               	movwf	?___fttol+1
 15559  09BF  3000               	movlw	0
 15560  09C0  00CB               	movwf	?___fttol
 15561  09C1  0008               	return
 15562  09C2                     l8157:	
 15563  09C2  3001               	movlw	1
 15564  09C3                     u7855:	
 15565  09C3  35D4               	lslf	___fttol@lval,f
 15566  09C4  0DD5               	rlf	___fttol@lval+1,f
 15567  09C5  0DD6               	rlf	___fttol@lval+2,f
 15568  09C6  0DD7               	rlf	___fttol@lval+3,f
 15569  09C7  0B89               	decfsz	9,f
 15570  09C8  29C3               	goto	u7855
 15571  09C9  3001               	movlw	1
 15572  09CA  02D8               	subwf	___fttol@exp1,f
 15573  09CB                     l8159:	
 15574  09CB  08D8               	movf	___fttol@exp1,f
 15575  09CC  1D03               	skipz
 15576  09CD  29C2               	goto	l8157
 15577  09CE                     l8161:	
 15578  09CE  0853               	movf	___fttol@sign1,w
 15579  09CF  1903               	btfsc	3,2
 15580  09D0  29DC               	goto	l8165
 15581  09D1  09D4               	comf	___fttol@lval,f
 15582  09D2  09D5               	comf	___fttol@lval+1,f
 15583  09D3  09D6               	comf	___fttol@lval+2,f
 15584  09D4  09D7               	comf	___fttol@lval+3,f
 15585  09D5  0AD4               	incf	___fttol@lval,f
 15586  09D6  1903               	skipnz
 15587  09D7  0AD5               	incf	___fttol@lval+1,f
 15588  09D8  1903               	skipnz
 15589  09D9  0AD6               	incf	___fttol@lval+2,f
 15590  09DA  1903               	skipnz
 15591  09DB  0AD7               	incf	___fttol@lval+3,f
 15592  09DC                     l8165:	
 15593  09DC  0857               	movf	___fttol@lval+3,w
 15594  09DD  00CE               	movwf	?___fttol+3
 15595  09DE  0856               	movf	___fttol@lval+2,w
 15596  09DF  00CD               	movwf	?___fttol+2
 15597  09E0  0855               	movf	___fttol@lval+1,w
 15598  09E1  00CC               	movwf	?___fttol+1
 15599  09E2  0854               	movf	___fttol@lval,w
 15600  09E3  00CB               	movwf	?___fttol
 15601  09E4  0008               	return
 15602  09E5                     __end_of___fttol:	
 15603                           
 15604                           	psect	text98
 15605  0CC4                     __ptext98:	
 15606 ;; *************** function ___ftdiv *****************
 15607 ;; Defined at:
 15608 ;;		line 49 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic\ftdiv.c"
 15609 ;; Parameters:    Size  Location     Type
 15610 ;;  f2              3   14[BANK0 ] float 
 15611 ;;  f1              3   17[BANK0 ] float 
 15612 ;; Auto vars:     Size  Location     Type
 15613 ;;  f3              3   25[BANK0 ] float 
 15614 ;;  sign            1   29[BANK0 ] unsigned char 
 15615 ;;  exp             1   28[BANK0 ] unsigned char 
 15616 ;;  cntr            1   24[BANK0 ] unsigned char 
 15617 ;; Return value:  Size  Location     Type
 15618 ;;                  3   14[BANK0 ] float 
 15619 ;; Registers used:
 15620 ;;		wreg, status,2, status,0, pclath, cstack
 15621 ;; Tracked objects:
 15622 ;;		On entry : 0/0
 15623 ;;		On exit  : 0/0
 15624 ;;		Unchanged: 0/0
 15625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15626 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15627 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15628 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15629 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15630 ;;Total ram usage:       16 bytes
 15631 ;; Hardware stack levels used:    1
 15632 ;; Hardware stack levels required when called:    5
 15633 ;; This function calls:
 15634 ;;		___ftpack
 15635 ;; This function is called by:
 15636 ;;		_getPercentValue
 15637 ;;		_setPercentValue
 15638 ;; This function uses a non-reentrant model
 15639 ;;
 15640                           
 15641                           
 15642                           ;psect for function ___ftdiv
 15643  0CC4                     ___ftdiv:	
 15644                           
 15645                           ;incstack = 0
 15646                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
 15647  0CC4  0020               	movlb	0	; select bank0
 15648  0CC5  0831               	movf	___ftdiv@f1,w
 15649  0CC6  00B4               	movwf	??___ftdiv
 15650  0CC7  0832               	movf	___ftdiv@f1+1,w
 15651  0CC8  00B5               	movwf	??___ftdiv+1
 15652  0CC9  0833               	movf	___ftdiv@f1+2,w
 15653  0CCA  00B6               	movwf	??___ftdiv+2
 15654  0CCB  1003               	clrc
 15655  0CCC  0D35               	rlf	??___ftdiv+1,w
 15656  0CCD  0D36               	rlf	??___ftdiv+2,w
 15657  0CCE  00B7               	movwf	??___ftdiv+3
 15658  0CCF  0837               	movf	??___ftdiv+3,w
 15659  0CD0  00BC               	movwf	___ftdiv@exp
 15660  0CD1  08BC               	movf	___ftdiv@exp,f
 15661  0CD2  1D03               	skipz
 15662  0CD3  2CDB               	goto	l8039
 15663  0CD4  3000               	movlw	0
 15664  0CD5  00AE               	movwf	?___ftdiv
 15665  0CD6  3000               	movlw	0
 15666  0CD7  00AF               	movwf	?___ftdiv+1
 15667  0CD8  3000               	movlw	0
 15668  0CD9  00B0               	movwf	?___ftdiv+2
 15669  0CDA  0008               	return
 15670  0CDB                     l8039:	
 15671  0CDB  082E               	movf	___ftdiv@f2,w
 15672  0CDC  00B4               	movwf	??___ftdiv
 15673  0CDD  082F               	movf	___ftdiv@f2+1,w
 15674  0CDE  00B5               	movwf	??___ftdiv+1
 15675  0CDF  0830               	movf	___ftdiv@f2+2,w
 15676  0CE0  00B6               	movwf	??___ftdiv+2
 15677  0CE1  1003               	clrc
 15678  0CE2  0D35               	rlf	??___ftdiv+1,w
 15679  0CE3  0D36               	rlf	??___ftdiv+2,w
 15680  0CE4  00B7               	movwf	??___ftdiv+3
 15681  0CE5  0837               	movf	??___ftdiv+3,w
 15682  0CE6  00BD               	movwf	___ftdiv@sign
 15683  0CE7  08BD               	movf	___ftdiv@sign,f
 15684  0CE8  1D03               	skipz
 15685  0CE9  2CF1               	goto	l8045
 15686  0CEA  3000               	movlw	0
 15687  0CEB  00AE               	movwf	?___ftdiv
 15688  0CEC  3000               	movlw	0
 15689  0CED  00AF               	movwf	?___ftdiv+1
 15690  0CEE  3000               	movlw	0
 15691  0CEF  00B0               	movwf	?___ftdiv+2
 15692  0CF0  0008               	return
 15693  0CF1                     l8045:	
 15694  0CF1  3000               	movlw	0
 15695  0CF2  00B9               	movwf	___ftdiv@f3
 15696  0CF3  3000               	movlw	0
 15697  0CF4  00BA               	movwf	___ftdiv@f3+1
 15698  0CF5  3000               	movlw	0
 15699  0CF6  00BB               	movwf	___ftdiv@f3+2
 15700  0CF7  3089               	movlw	137
 15701  0CF8  073D               	addwf	___ftdiv@sign,w
 15702  0CF9  00B4               	movwf	??___ftdiv
 15703  0CFA  0834               	movf	??___ftdiv,w
 15704  0CFB  02BC               	subwf	___ftdiv@exp,f
 15705  0CFC  0831               	movf	___ftdiv@f1,w
 15706  0CFD  00B4               	movwf	??___ftdiv
 15707  0CFE  0832               	movf	___ftdiv@f1+1,w
 15708  0CFF  00B5               	movwf	??___ftdiv+1
 15709  0D00  0833               	movf	___ftdiv@f1+2,w
 15710  0D01  00B6               	movwf	??___ftdiv+2
 15711  0D02  3010               	movlw	16
 15712  0D03                     u7605:	
 15713  0D03  36B6               	lsrf	??___ftdiv+2,f
 15714  0D04  0CB5               	rrf	??___ftdiv+1,f
 15715  0D05  0CB4               	rrf	??___ftdiv,f
 15716  0D06  0B89               	decfsz	9,f
 15717  0D07  2D03               	goto	u7605
 15718  0D08  0834               	movf	??___ftdiv,w
 15719  0D09  00B7               	movwf	??___ftdiv+3
 15720  0D0A  0837               	movf	??___ftdiv+3,w
 15721  0D0B  00BD               	movwf	___ftdiv@sign
 15722  0D0C  082E               	movf	___ftdiv@f2,w
 15723  0D0D  00B4               	movwf	??___ftdiv
 15724  0D0E  082F               	movf	___ftdiv@f2+1,w
 15725  0D0F  00B5               	movwf	??___ftdiv+1
 15726  0D10  0830               	movf	___ftdiv@f2+2,w
 15727  0D11  00B6               	movwf	??___ftdiv+2
 15728  0D12  3010               	movlw	16
 15729  0D13                     u7615:	
 15730  0D13  36B6               	lsrf	??___ftdiv+2,f
 15731  0D14  0CB5               	rrf	??___ftdiv+1,f
 15732  0D15  0CB4               	rrf	??___ftdiv,f
 15733  0D16  0B89               	decfsz	9,f
 15734  0D17  2D13               	goto	u7615
 15735  0D18  0834               	movf	??___ftdiv,w
 15736  0D19  00B7               	movwf	??___ftdiv+3
 15737  0D1A  0837               	movf	??___ftdiv+3,w
 15738  0D1B  06BD               	xorwf	___ftdiv@sign,f
 15739  0D1C  3080               	movlw	128
 15740  0D1D  00B4               	movwf	??___ftdiv
 15741  0D1E  0834               	movf	??___ftdiv,w
 15742  0D1F  05BD               	andwf	___ftdiv@sign,f
 15743  0D20  17B2               	bsf	___ftdiv@f1+1,7
 15744  0D21  30FF               	movlw	255
 15745  0D22  05B1               	andwf	___ftdiv@f1,f
 15746  0D23  30FF               	movlw	255
 15747  0D24  05B2               	andwf	___ftdiv@f1+1,f
 15748  0D25  3000               	movlw	0
 15749  0D26  05B3               	andwf	___ftdiv@f1+2,f
 15750  0D27  17AF               	bsf	___ftdiv@f2+1,7
 15751  0D28  30FF               	movlw	255
 15752  0D29  05AE               	andwf	___ftdiv@f2,f
 15753  0D2A  30FF               	movlw	255
 15754  0D2B  05AF               	andwf	___ftdiv@f2+1,f
 15755  0D2C  3000               	movlw	0
 15756  0D2D  05B0               	andwf	___ftdiv@f2+2,f
 15757  0D2E  3018               	movlw	24
 15758  0D2F  00B4               	movwf	??___ftdiv
 15759  0D30  0834               	movf	??___ftdiv,w
 15760  0D31  00B8               	movwf	___ftdiv@cntr
 15761  0D32                     l8059:	
 15762  0D32  3001               	movlw	1
 15763  0D33                     u7625:	
 15764  0D33  35B9               	lslf	___ftdiv@f3,f
 15765  0D34  0DBA               	rlf	___ftdiv@f3+1,f
 15766  0D35  0DBB               	rlf	___ftdiv@f3+2,f
 15767  0D36  0B89               	decfsz	9,f
 15768  0D37  2D33               	goto	u7625
 15769  0D38  0830               	movf	___ftdiv@f2+2,w
 15770  0D39  0233               	subwf	___ftdiv@f1+2,w
 15771  0D3A  1D03               	skipz
 15772  0D3B  2D42               	goto	u7635
 15773  0D3C  082F               	movf	___ftdiv@f2+1,w
 15774  0D3D  0232               	subwf	___ftdiv@f1+1,w
 15775  0D3E  1D03               	skipz
 15776  0D3F  2D42               	goto	u7635
 15777  0D40  082E               	movf	___ftdiv@f2,w
 15778  0D41  0231               	subwf	___ftdiv@f1,w
 15779  0D42                     u7635:	
 15780  0D42  1C03               	skipc
 15781  0D43  2D4B               	goto	l8067
 15782  0D44  082E               	movf	___ftdiv@f2,w
 15783  0D45  02B1               	subwf	___ftdiv@f1,f
 15784  0D46  082F               	movf	___ftdiv@f2+1,w
 15785  0D47  3BB2               	subwfb	___ftdiv@f1+1,f
 15786  0D48  0830               	movf	___ftdiv@f2+2,w
 15787  0D49  3BB3               	subwfb	___ftdiv@f1+2,f
 15788  0D4A  1439               	bsf	___ftdiv@f3,0
 15789  0D4B                     l8067:	
 15790  0D4B  3001               	movlw	1
 15791  0D4C                     u7645:	
 15792  0D4C  35B1               	lslf	___ftdiv@f1,f
 15793  0D4D  0DB2               	rlf	___ftdiv@f1+1,f
 15794  0D4E  0DB3               	rlf	___ftdiv@f1+2,f
 15795  0D4F  0B89               	decfsz	9,f
 15796  0D50  2D4C               	goto	u7645
 15797  0D51  3001               	movlw	1
 15798  0D52  02B8               	subwf	___ftdiv@cntr,f
 15799  0D53  1D03               	btfss	3,2
 15800  0D54  2D32               	goto	l8059
 15801  0D55  0839               	movf	___ftdiv@f3,w
 15802  0D56  00A0               	movwf	___ftpack@arg
 15803  0D57  083A               	movf	___ftdiv@f3+1,w
 15804  0D58  00A1               	movwf	___ftpack@arg+1
 15805  0D59  083B               	movf	___ftdiv@f3+2,w
 15806  0D5A  00A2               	movwf	___ftpack@arg+2
 15807  0D5B  083C               	movf	___ftdiv@exp,w
 15808  0D5C  00B4               	movwf	??___ftdiv
 15809  0D5D  0834               	movf	??___ftdiv,w
 15810  0D5E  00A3               	movwf	___ftpack@exp
 15811  0D5F  083D               	movf	___ftdiv@sign,w
 15812  0D60  00B5               	movwf	??___ftdiv+1
 15813  0D61  0835               	movf	??___ftdiv+1,w
 15814  0D62  00A4               	movwf	___ftpack@sign
 15815  0D63  3193  23C4         	fcall	___ftpack
 15816  0D65  0020               	movlb	0	; select bank0
 15817  0D66  0820               	movf	?___ftpack,w
 15818  0D67  00AE               	movwf	?___ftdiv
 15819  0D68  0821               	movf	?___ftpack+1,w
 15820  0D69  00AF               	movwf	?___ftdiv+1
 15821  0D6A  0822               	movf	?___ftpack+2,w
 15822  0D6B  00B0               	movwf	?___ftdiv+2
 15823  0D6C  0008               	return
 15824  0D6D                     __end_of___ftdiv:	
 15825                           
 15826                           	psect	text99
 15827  1CD4                     __ptext99:	
 15828 ;; *************** function ___awtoft *****************
 15829 ;; Defined at:
 15830 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\awtoft.c"
 15831 ;; Parameters:    Size  Location     Type
 15832 ;;  c               2    8[BANK0 ] int 
 15833 ;; Auto vars:     Size  Location     Type
 15834 ;;  sign            1   13[BANK0 ] unsigned char 
 15835 ;; Return value:  Size  Location     Type
 15836 ;;                  3    8[BANK0 ] float 
 15837 ;; Registers used:
 15838 ;;		wreg, status,2, status,0, pclath, cstack
 15839 ;; Tracked objects:
 15840 ;;		On entry : 0/0
 15841 ;;		On exit  : 0/0
 15842 ;;		Unchanged: 0/0
 15843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15844 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15845 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15846 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15847 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15848 ;;Total ram usage:        6 bytes
 15849 ;; Hardware stack levels used:    1
 15850 ;; Hardware stack levels required when called:    5
 15851 ;; This function calls:
 15852 ;;		___ftpack
 15853 ;; This function is called by:
 15854 ;;		_getPercentValue
 15855 ;;		_setPercentValue
 15856 ;; This function uses a non-reentrant model
 15857 ;;
 15858                           
 15859                           
 15860                           ;psect for function ___awtoft
 15861  1CD4                     ___awtoft:	
 15862                           
 15863                           ;incstack = 0
 15864                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
 15865  1CD4  0020               	movlb	0	; select bank0
 15866  1CD5  01AD               	clrf	___awtoft@sign
 15867  1CD6  1FA9               	btfss	___awtoft@c+1,7
 15868  1CD7  2CDF               	goto	l7957
 15869  1CD8  09A8               	comf	___awtoft@c,f
 15870  1CD9  09A9               	comf	___awtoft@c+1,f
 15871  1CDA  0AA8               	incf	___awtoft@c,f
 15872  1CDB  1903               	skipnz
 15873  1CDC  0AA9               	incf	___awtoft@c+1,f
 15874  1CDD  01AD               	clrf	___awtoft@sign
 15875  1CDE  0AAD               	incf	___awtoft@sign,f
 15876  1CDF                     l7957:	
 15877  1CDF  0828               	movf	___awtoft@c,w
 15878  1CE0  00A0               	movwf	___ftpack@arg
 15879  1CE1  0829               	movf	___awtoft@c+1,w
 15880  1CE2  00A1               	movwf	___ftpack@arg+1
 15881  1CE3  01A2               	clrf	___ftpack@arg+2
 15882  1CE4  308E               	movlw	142
 15883  1CE5  00AB               	movwf	??___awtoft
 15884  1CE6  082B               	movf	??___awtoft,w
 15885  1CE7  00A3               	movwf	___ftpack@exp
 15886  1CE8  082D               	movf	___awtoft@sign,w
 15887  1CE9  00AC               	movwf	??___awtoft+1
 15888  1CEA  082C               	movf	??___awtoft+1,w
 15889  1CEB  00A4               	movwf	___ftpack@sign
 15890  1CEC  3193  23C4         	fcall	___ftpack
 15891  1CEE  0020               	movlb	0	; select bank0
 15892  1CEF  0820               	movf	?___ftpack,w
 15893  1CF0  00A8               	movwf	?___awtoft
 15894  1CF1  0821               	movf	?___ftpack+1,w
 15895  1CF2  00A9               	movwf	?___awtoft+1
 15896  1CF3  0822               	movf	?___ftpack+2,w
 15897  1CF4  00AA               	movwf	?___awtoft+2
 15898  1CF5  0008               	return
 15899  1CF6                     __end_of___awtoft:	
 15900                           
 15901                           	psect	text100
 15902  13C4                     __ptext100:	
 15903 ;; *************** function ___ftpack *****************
 15904 ;; Defined at:
 15905 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\float.c"
 15906 ;; Parameters:    Size  Location     Type
 15907 ;;  arg             3    0[BANK0 ] unsigned um
 15908 ;;  exp             1    3[BANK0 ] unsigned char 
 15909 ;;  sign            1    4[BANK0 ] unsigned char 
 15910 ;; Auto vars:     Size  Location     Type
 15911 ;;		None
 15912 ;; Return value:  Size  Location     Type
 15913 ;;                  3    0[BANK0 ] float 
 15914 ;; Registers used:
 15915 ;;		wreg, status,2, status,0
 15916 ;; Tracked objects:
 15917 ;;		On entry : 0/0
 15918 ;;		On exit  : 0/0
 15919 ;;		Unchanged: 0/0
 15920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15921 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15923 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15924 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15925 ;;Total ram usage:        8 bytes
 15926 ;; Hardware stack levels used:    1
 15927 ;; Hardware stack levels required when called:    4
 15928 ;; This function calls:
 15929 ;;		Nothing
 15930 ;; This function is called by:
 15931 ;;		___awtoft
 15932 ;;		___ftadd
 15933 ;;		___ftdiv
 15934 ;;		___ftmul
 15935 ;; This function uses a non-reentrant model
 15936 ;;
 15937                           
 15938                           
 15939                           ;psect for function ___ftpack
 15940  13C4                     ___ftpack:	
 15941                           
 15942                           ;incstack = 0
 15943                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
 15944  13C4  0020               	movlb	0	; select bank0
 15945  13C5  0823               	movf	___ftpack@exp,w
 15946  13C6  1903               	btfsc	3,2
 15947  13C7  2BCD               	goto	l7923
 15948  13C8  0822               	movf	___ftpack@arg+2,w
 15949  13C9  0421               	iorwf	___ftpack@arg+1,w
 15950  13CA  0420               	iorwf	___ftpack@arg,w
 15951  13CB  1D03               	skipz
 15952  13CC  2BDE               	goto	l7929
 15953  13CD                     l7923:	
 15954  13CD  3000               	movlw	0
 15955  13CE  00A0               	movwf	?___ftpack
 15956  13CF  3000               	movlw	0
 15957  13D0  00A1               	movwf	?___ftpack+1
 15958  13D1  3000               	movlw	0
 15959  13D2  00A2               	movwf	?___ftpack+2
 15960  13D3  0008               	return
 15961  13D4                     l7927:	
 15962  13D4  3001               	movlw	1
 15963  13D5  00A5               	movwf	??___ftpack
 15964  13D6  0825               	movf	??___ftpack,w
 15965  13D7  07A3               	addwf	___ftpack@exp,f
 15966  13D8  3001               	movlw	1
 15967  13D9                     u7255:	
 15968  13D9  36A2               	lsrf	___ftpack@arg+2,f
 15969  13DA  0CA1               	rrf	___ftpack@arg+1,f
 15970  13DB  0CA0               	rrf	___ftpack@arg,f
 15971  13DC  0B89               	decfsz	9,f
 15972  13DD  2BD9               	goto	u7255
 15973  13DE                     l7929:	
 15974  13DE  30FE               	movlw	254
 15975  13DF  0522               	andwf	___ftpack@arg+2,w
 15976  13E0  1903               	btfsc	3,2
 15977  13E1  2BF7               	goto	l3235
 15978  13E2  2BD4               	goto	l7927
 15979  13E3                     l7931:	
 15980  13E3  3001               	movlw	1
 15981  13E4  00A5               	movwf	??___ftpack
 15982  13E5  0825               	movf	??___ftpack,w
 15983  13E6  07A3               	addwf	___ftpack@exp,f
 15984  13E7  3001               	movlw	1
 15985  13E8  07A0               	addwf	___ftpack@arg,f
 15986  13E9  3000               	movlw	0
 15987  13EA  1803               	skipnc
 15988  13EB  3001               	movlw	1
 15989  13EC  07A1               	addwf	___ftpack@arg+1,f
 15990  13ED  3000               	movlw	0
 15991  13EE  1803               	skipnc
 15992  13EF  3001               	movlw	1
 15993  13F0  07A2               	addwf	___ftpack@arg+2,f
 15994  13F1  3001               	movlw	1
 15995  13F2                     u7275:	
 15996  13F2  36A2               	lsrf	___ftpack@arg+2,f
 15997  13F3  0CA1               	rrf	___ftpack@arg+1,f
 15998  13F4  0CA0               	rrf	___ftpack@arg,f
 15999  13F5  0B89               	decfsz	9,f
 16000  13F6  2BF2               	goto	u7275
 16001  13F7                     l3235:	
 16002  13F7  30FF               	movlw	255
 16003  13F8  0522               	andwf	___ftpack@arg+2,w
 16004  13F9  1903               	btfsc	3,2
 16005  13FA  2C04               	goto	l7939
 16006  13FB  2BE3               	goto	l7931
 16007  13FC                     l7937:	
 16008  13FC  3001               	movlw	1
 16009  13FD  02A3               	subwf	___ftpack@exp,f
 16010  13FE  3001               	movlw	1
 16011  13FF                     u7295:	
 16012  13FF  35A0               	lslf	___ftpack@arg,f
 16013  1400  0DA1               	rlf	___ftpack@arg+1,f
 16014  1401  0DA2               	rlf	___ftpack@arg+2,f
 16015  1402  0B89               	decfsz	9,f
 16016  1403  2BFF               	goto	u7295
 16017  1404                     l7939:	
 16018  1404  1FA1               	btfss	___ftpack@arg+1,7
 16019  1405  2BFC               	goto	l7937
 16020  1406  1823               	btfsc	___ftpack@exp,0
 16021  1407  2C0E               	goto	l3241
 16022  1408  30FF               	movlw	255
 16023  1409  05A0               	andwf	___ftpack@arg,f
 16024  140A  307F               	movlw	127
 16025  140B  05A1               	andwf	___ftpack@arg+1,f
 16026  140C  30FF               	movlw	255
 16027  140D  05A2               	andwf	___ftpack@arg+2,f
 16028  140E                     l3241:	
 16029  140E  1003               	clrc
 16030  140F  0CA3               	rrf	___ftpack@exp,f
 16031  1410  0823               	movf	___ftpack@exp,w
 16032  1411  00A5               	movwf	??___ftpack
 16033  1412  01A6               	clrf	??___ftpack+1
 16034  1413  01A7               	clrf	??___ftpack+2
 16035  1414  3010               	movlw	16
 16036  1415                     u7325:	
 16037  1415  35A5               	lslf	??___ftpack,f
 16038  1416  0DA6               	rlf	??___ftpack+1,f
 16039  1417  0DA7               	rlf	??___ftpack+2,f
 16040  1418  0B89               	decfsz	9,f
 16041  1419  2C15               	goto	u7325
 16042  141A  0825               	movf	??___ftpack,w
 16043  141B  04A0               	iorwf	___ftpack@arg,f
 16044  141C  0826               	movf	??___ftpack+1,w
 16045  141D  04A1               	iorwf	___ftpack@arg+1,f
 16046  141E  0827               	movf	??___ftpack+2,w
 16047  141F  04A2               	iorwf	___ftpack@arg+2,f
 16048  1420  0824               	movf	___ftpack@sign,w
 16049  1421  1903               	btfsc	3,2
 16050  1422  0008               	return
 16051  1423  17A2               	bsf	___ftpack@arg+2,7
 16052  1424  0008               	return
 16053  1425                     __end_of___ftpack:	
 16054                           
 16055                           	psect	text101
 16056  1A45                     __ptext101:	
 16057 ;; *************** function _setRFSW_Status *****************
 16058 ;; Defined at:
 16059 ;;		line 425 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
 16060 ;; Parameters:    Size  Location     Type
 16061 ;;  sw              1    wreg     unsigned char 
 16062 ;;  command         1    2[BANK0 ] unsigned char 
 16063 ;; Auto vars:     Size  Location     Type
 16064 ;;  sw              1    3[BANK0 ] unsigned char 
 16065 ;; Return value:  Size  Location     Type
 16066 ;;		None               void
 16067 ;; Registers used:
 16068 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16069 ;; Tracked objects:
 16070 ;;		On entry : 0/0
 16071 ;;		On exit  : 0/0
 16072 ;;		Unchanged: 0/0
 16073 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16074 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16075 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16077 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16078 ;;Total ram usage:        2 bytes
 16079 ;; Hardware stack levels used:    1
 16080 ;; Hardware stack levels required when called:    5
 16081 ;; This function calls:
 16082 ;;		_RfSWPointSelect
 16083 ;; This function is called by:
 16084 ;;		_DlyOff_Main
 16085 ;;		_setDimmerLights_ERROR
 16086 ;;		_setControl_Lights_Table
 16087 ;;		_Sw_DimmerOnFunc
 16088 ;;		_Sw_DimmerAdjFunc
 16089 ;; This function uses a non-reentrant model
 16090 ;;
 16091                           
 16092                           
 16093                           ;psect for function _setRFSW_Status
 16094  1A45                     _setRFSW_Status:	
 16095                           
 16096                           ;incstack = 0
 16097                           ; Regs used in _setRFSW_Status: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 16098                           ;setRFSW_Status@sw stored from wreg
 16099  1A45  0020               	movlb	0	; select bank0
 16100  1A46  00A3               	movwf	setRFSW_Status@sw
 16101                           
 16102                           ;RF_Control_B1.c: 427: RfSWPointSelect(sw);
 16103  1A47  0823               	movf	setRFSW_Status@sw,w
 16104  1A48  319B  234C         	fcall	_RfSWPointSelect
 16105                           
 16106                           ;RF_Control_B1.c: 428: RFSW->Status=command;
 16107  1A4A  0021               	movlb	1	; select bank1
 16108  1A4B  083B               	movf	_RFSW^(0+128),w
 16109  1A4C  0086               	movwf	6
 16110  1A4D  0187               	clrf	7
 16111  1A4E  0020               	movlb	0	; select bank0
 16112  1A4F  0822               	movf	setRFSW_Status@command,w
 16113  1A50  1001               	bcf	1,0
 16114  1A51  1D03               	skipz
 16115  1A52  1401               	bsf	1,0
 16116  1A53  0008               	return
 16117  1A54                     __end_of_setRFSW_Status:	
 16118                           
 16119                           	psect	text102
 16120  1B4C                     __ptext102:	
 16121 ;; *************** function _RfSWPointSelect *****************
 16122 ;; Defined at:
 16123 ;;		line 347 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
 16124 ;; Parameters:    Size  Location     Type
 16125 ;;  sw              1    wreg     unsigned char 
 16126 ;; Auto vars:     Size  Location     Type
 16127 ;;  sw              1    1[BANK0 ] unsigned char 
 16128 ;; Return value:  Size  Location     Type
 16129 ;;		None               void
 16130 ;; Registers used:
 16131 ;;		wreg
 16132 ;; Tracked objects:
 16133 ;;		On entry : 0/0
 16134 ;;		On exit  : 0/0
 16135 ;;		Unchanged: 0/0
 16136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16137 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16138 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16139 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16140 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16141 ;;Total ram usage:        2 bytes
 16142 ;; Hardware stack levels used:    1
 16143 ;; Hardware stack levels required when called:    4
 16144 ;; This function calls:
 16145 ;;		Nothing
 16146 ;; This function is called by:
 16147 ;;		_setRFSW_Control
 16148 ;;		_setRFSW_AdjControl
 16149 ;;		_setRFSW_Status
 16150 ;; This function uses a non-reentrant model
 16151 ;;
 16152                           
 16153                           
 16154                           ;psect for function _RfSWPointSelect
 16155  1B4C                     _RfSWPointSelect:	
 16156                           
 16157                           ;incstack = 0
 16158                           ; Regs used in _RfSWPointSelect: [wreg]
 16159                           ;RfSWPointSelect@sw stored from wreg
 16160  1B4C  0020               	movlb	0	; select bank0
 16161  1B4D  00A1               	movwf	RfSWPointSelect@sw
 16162                           
 16163                           ;RF_Control_B1.c: 350: if(sw == 1)
 16164  1B4E  0821               	movf	RfSWPointSelect@sw,w
 16165  1B4F  3A01               	xorlw	1
 16166  1B50  1D03               	skipz
 16167  1B51  2B57               	goto	l2569
 16168                           
 16169                           ;RF_Control_B1.c: 351: {
 16170                           ;RF_Control_B1.c: 352: RFSW=&RFSW1;
 16171  1B52  30E8               	movlw	_RFSW1& (0+255)
 16172  1B53  00A0               	movwf	??_RfSWPointSelect
 16173  1B54  0820               	movf	??_RfSWPointSelect,w
 16174  1B55  0021               	movlb	1	; select bank1
 16175  1B56  00BB               	movwf	_RFSW^(0+128)
 16176  1B57                     l2569:	
 16177                           
 16178                           ;RF_Control_B1.c: 353: }
 16179                           ;RF_Control_B1.c: 356: if(sw == 2)
 16180  1B57  0020               	movlb	0	; select bank0
 16181  1B58  0821               	movf	RfSWPointSelect@sw,w
 16182  1B59  3A02               	xorlw	2
 16183  1B5A  1D03               	skipz
 16184  1B5B  0008               	return
 16185                           
 16186                           ;RF_Control_B1.c: 357: {
 16187                           ;RF_Control_B1.c: 358: RFSW=&RFSW2;
 16188  1B5C  30E9               	movlw	_RFSW2& (0+255)
 16189  1B5D  00A0               	movwf	??_RfSWPointSelect
 16190  1B5E  0820               	movf	??_RfSWPointSelect,w
 16191  1B5F  0021               	movlb	1	; select bank1
 16192  1B60  00BB               	movwf	_RFSW^(0+128)
 16193  1B61  0008               	return
 16194  1B62                     __end_of_RfSWPointSelect:	
 16195                           
 16196                           	psect	text103
 16197  1A83                     __ptext103:	
 16198 ;; *************** function _setDimmerLights_Trigger *****************
 16199 ;; Defined at:
 16200 ;;		line 445 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 16201 ;; Parameters:    Size  Location     Type
 16202 ;;  lights          1    wreg     unsigned char 
 16203 ;;  command         1    2[BANK0 ] unsigned char 
 16204 ;; Auto vars:     Size  Location     Type
 16205 ;;  lights          1    3[BANK0 ] unsigned char 
 16206 ;; Return value:  Size  Location     Type
 16207 ;;		None               void
 16208 ;; Registers used:
 16209 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16210 ;; Tracked objects:
 16211 ;;		On entry : 0/0
 16212 ;;		On exit  : 0/0
 16213 ;;		Unchanged: 0/0
 16214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16215 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16216 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16218 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16219 ;;Total ram usage:        2 bytes
 16220 ;; Hardware stack levels used:    1
 16221 ;; Hardware stack levels required when called:    5
 16222 ;; This function calls:
 16223 ;;		_DimmerLightsPointSelect
 16224 ;; This function is called by:
 16225 ;;		_DlyOff_Main
 16226 ;;		_setRFSW_Control
 16227 ;;		_Sw_DimmerOnFunc
 16228 ;;		_Sw_DimmerOffFunc
 16229 ;; This function uses a non-reentrant model
 16230 ;;
 16231                           
 16232                           
 16233                           ;psect for function _setDimmerLights_Trigger
 16234  1A83                     _setDimmerLights_Trigger:	
 16235                           
 16236                           ;incstack = 0
 16237                           ; Regs used in _setDimmerLights_Trigger: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 16238                           ;setDimmerLights_Trigger@lights stored from wreg
 16239  1A83  0020               	movlb	0	; select bank0
 16240  1A84  00A3               	movwf	setDimmerLights_Trigger@lights
 16241                           
 16242                           ;Dimmer_B1.c: 447: DimmerLightsPointSelect(lights);
 16243  1A85  0823               	movf	setDimmerLights_Trigger@lights,w
 16244  1A86  319A  22D4         	fcall	_DimmerLightsPointSelect
 16245                           
 16246                           ;Dimmer_B1.c: 448: DimmerLights->Trigger=command;
 16247  1A88  0020               	movlb	0	; select bank0
 16248  1A89  086A               	movf	_DimmerLights,w
 16249  1A8A  3E09               	addlw	9
 16250  1A8B  0086               	movwf	6
 16251  1A8C  3001               	movlw	1	; select bank2/3
 16252  1A8D  0087               	movwf	7
 16253  1A8E  0822               	movf	setDimmerLights_Trigger@command,w
 16254  1A8F  1081               	bcf	1,1
 16255  1A90  1D03               	skipz
 16256  1A91  1481               	bsf	1,1
 16257  1A92  0008               	return
 16258  1A93                     __end_of_setDimmerLights_Trigger:	
 16259                           
 16260                           	psect	text104
 16261  1A73                     __ptext104:	
 16262 ;; *************** function _setDimmerLights_Switch *****************
 16263 ;; Defined at:
 16264 ;;		line 435 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 16265 ;; Parameters:    Size  Location     Type
 16266 ;;  lights          1    wreg     unsigned char 
 16267 ;;  command         1    2[BANK0 ] unsigned char 
 16268 ;; Auto vars:     Size  Location     Type
 16269 ;;  lights          1    3[BANK0 ] unsigned char 
 16270 ;; Return value:  Size  Location     Type
 16271 ;;		None               void
 16272 ;; Registers used:
 16273 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16274 ;; Tracked objects:
 16275 ;;		On entry : 0/0
 16276 ;;		On exit  : 0/0
 16277 ;;		Unchanged: 0/0
 16278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16279 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16280 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16282 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16283 ;;Total ram usage:        2 bytes
 16284 ;; Hardware stack levels used:    1
 16285 ;; Hardware stack levels required when called:    5
 16286 ;; This function calls:
 16287 ;;		_DimmerLightsPointSelect
 16288 ;; This function is called by:
 16289 ;;		_DlyOff_Main
 16290 ;;		_setRFSW_Control
 16291 ;;		_Sw_DimmerOnFunc
 16292 ;;		_Sw_DimmerOffFunc
 16293 ;; This function uses a non-reentrant model
 16294 ;;
 16295                           
 16296                           
 16297                           ;psect for function _setDimmerLights_Switch
 16298  1A73                     _setDimmerLights_Switch:	
 16299                           
 16300                           ;incstack = 0
 16301                           ; Regs used in _setDimmerLights_Switch: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
 16302                           ;setDimmerLights_Switch@lights stored from wreg
 16303  1A73  0020               	movlb	0	; select bank0
 16304  1A74  00A3               	movwf	setDimmerLights_Switch@lights
 16305                           
 16306                           ;Dimmer_B1.c: 437: DimmerLightsPointSelect(lights);
 16307  1A75  0823               	movf	setDimmerLights_Switch@lights,w
 16308  1A76  319A  22D4         	fcall	_DimmerLightsPointSelect
 16309                           
 16310                           ;Dimmer_B1.c: 438: DimmerLights->Switch=command;
 16311  1A78  0020               	movlb	0	; select bank0
 16312  1A79  086A               	movf	_DimmerLights,w
 16313  1A7A  3E09               	addlw	9
 16314  1A7B  0086               	movwf	6
 16315  1A7C  3001               	movlw	1	; select bank2/3
 16316  1A7D  0087               	movwf	7
 16317  1A7E  0822               	movf	setDimmerLights_Switch@command,w
 16318  1A7F  1001               	bcf	1,0
 16319  1A80  1D03               	skipz
 16320  1A81  1401               	bsf	1,0
 16321  1A82  0008               	return
 16322  1A83                     __end_of_setDimmerLights_Switch:	
 16323                           
 16324                           	psect	text105
 16325  1AD4                     __ptext105:	
 16326 ;; *************** function _DimmerLightsPointSelect *****************
 16327 ;; Defined at:
 16328 ;;		line 7 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 16329 ;; Parameters:    Size  Location     Type
 16330 ;;  lights          1    wreg     unsigned char 
 16331 ;; Auto vars:     Size  Location     Type
 16332 ;;  lights          1    1[BANK0 ] unsigned char 
 16333 ;; Return value:  Size  Location     Type
 16334 ;;		None               void
 16335 ;; Registers used:
 16336 ;;		wreg
 16337 ;; Tracked objects:
 16338 ;;		On entry : 0/0
 16339 ;;		On exit  : 0/0
 16340 ;;		Unchanged: 0/0
 16341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16343 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16344 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16345 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16346 ;;Total ram usage:        2 bytes
 16347 ;; Hardware stack levels used:    1
 16348 ;; Hardware stack levels required when called:    4
 16349 ;; This function calls:
 16350 ;;		Nothing
 16351 ;; This function is called by:
 16352 ;;		_setDimmerLights_Initialization
 16353 ;;		_setDimmerLights_Main
 16354 ;;		_setDimmerLights_ERROR
 16355 ;;		_setDimmerLights_TriggerERROR
 16356 ;;		_setDimmerLights
 16357 ;;		_setDimmerLights_Adj
 16358 ;;		_setDimmerLights_AdjRF
 16359 ;;		_setDimmerLights_Switch
 16360 ;;		_setDimmerLights_AdjGo
 16361 ;;		_setDimmerLights_Trigger
 16362 ;;		_setDimmerLights_TriggerAdj
 16363 ;;		_setDimmerLights_GO
 16364 ;;		_setDimmerLights_MaxmumValue
 16365 ;;		_setDimmerLights_Clear
 16366 ;; This function uses a non-reentrant model
 16367 ;;
 16368                           
 16369                           
 16370                           ;psect for function _DimmerLightsPointSelect
 16371  1AD4                     _DimmerLightsPointSelect:	
 16372                           
 16373                           ;incstack = 0
 16374                           ; Regs used in _DimmerLightsPointSelect: [wreg]
 16375                           ;DimmerLightsPointSelect@lights stored from wreg
 16376  1AD4  0020               	movlb	0	; select bank0
 16377  1AD5  00A1               	movwf	DimmerLightsPointSelect@lights
 16378                           
 16379                           ;Dimmer_B1.c: 10: if(lights == 1)
 16380  1AD6  0821               	movf	DimmerLightsPointSelect@lights,w
 16381  1AD7  3A01               	xorlw	1
 16382  1AD8  1D03               	skipz
 16383  1AD9  2ADE               	goto	l847
 16384                           
 16385                           ;Dimmer_B1.c: 11: {
 16386                           ;Dimmer_B1.c: 12: DimmerLights=&DimmerLights1;
 16387  1ADA  3020               	movlw	_DimmerLights1& (0+255)
 16388  1ADB  00A0               	movwf	??_DimmerLightsPointSelect
 16389  1ADC  0820               	movf	??_DimmerLightsPointSelect,w
 16390  1ADD  00EA               	movwf	_DimmerLights
 16391  1ADE                     l847:	
 16392                           
 16393                           ;Dimmer_B1.c: 13: }
 16394                           ;Dimmer_B1.c: 20: if(lights == 2)
 16395  1ADE  0821               	movf	DimmerLightsPointSelect@lights,w
 16396  1ADF  3A02               	xorlw	2
 16397  1AE0  1D03               	skipz
 16398  1AE1  0008               	return
 16399                           
 16400                           ;Dimmer_B1.c: 21: {
 16401                           ;Dimmer_B1.c: 22: DimmerLights=&DimmerLights2;
 16402  1AE2  302E               	movlw	_DimmerLights2& (0+255)
 16403  1AE3  00A0               	movwf	??_DimmerLightsPointSelect
 16404  1AE4  0820               	movf	??_DimmerLightsPointSelect,w
 16405  1AE5  00EA               	movwf	_DimmerLights
 16406  1AE6  0008               	return
 16407  1AE7                     __end_of_DimmerLightsPointSelect:	
 16408                           
 16409                           	psect	text106
 16410  1711                     __ptext106:	
 16411 ;; *************** function _setBuz *****************
 16412 ;; Defined at:
 16413 ;;		line 22 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Buzzer_B1.c"
 16414 ;; Parameters:    Size  Location     Type
 16415 ;;  count           1    wreg     unsigned char 
 16416 ;;  time            2    6[BANK0 ] int 
 16417 ;; Auto vars:     Size  Location     Type
 16418 ;;  count           1    9[BANK0 ] unsigned char 
 16419 ;; Return value:  Size  Location     Type
 16420 ;;		None               void
 16421 ;; Registers used:
 16422 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16423 ;; Tracked objects:
 16424 ;;		On entry : 0/0
 16425 ;;		On exit  : 0/0
 16426 ;;		Unchanged: 0/0
 16427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16428 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16429 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16430 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16431 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16432 ;;Total ram usage:        4 bytes
 16433 ;; Hardware stack levels used:    1
 16434 ;; Hardware stack levels required when called:    5
 16435 ;; This function calls:
 16436 ;;		___wmul
 16437 ;; This function is called by:
 16438 ;;		_DlyOff_Main
 16439 ;;		_setDimmerLights_Main
 16440 ;;		_DimmerLights_Exceptions
 16441 ;;		_MainT
 16442 ;;		_setOverTemp_Exceptions
 16443 ;;		_setLog_Code
 16444 ;;		_setControl_Lights_Table
 16445 ;;		_setRFSW_Control
 16446 ;;		_setSw_Main
 16447 ;;		_Sw_DimmerOnFunc
 16448 ;; This function uses a non-reentrant model
 16449 ;;
 16450                           
 16451                           
 16452                           ;psect for function _setBuz
 16453  1711                     _setBuz:	
 16454                           
 16455                           ;incstack = 0
 16456                           ; Regs used in _setBuz: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 16457                           ;setBuz@count stored from wreg
 16458  1711  0020               	movlb	0	; select bank0
 16459  1712  00A9               	movwf	setBuz@count
 16460                           
 16461                           ;Buzzer_B1.c: 24: time*=20;
 16462  1713  3014               	movlw	20
 16463  1714  00A0               	movwf	___wmul@multiplier
 16464  1715  3000               	movlw	0
 16465  1716  00A1               	movwf	___wmul@multiplier+1
 16466  1717  0827               	movf	setBuz@time+1,w
 16467  1718  01A3               	clrf	___wmul@multiplicand+1
 16468  1719  07A3               	addwf	___wmul@multiplicand+1,f
 16469  171A  0826               	movf	setBuz@time,w
 16470  171B  01A2               	clrf	___wmul@multiplicand
 16471  171C  07A2               	addwf	___wmul@multiplicand,f
 16472  171D  319C  2477  3197   	fcall	___wmul
 16473  1720  0020               	movlb	0	; select bank0
 16474  1721  0821               	movf	?___wmul+1,w
 16475  1722  01A7               	clrf	setBuz@time+1
 16476  1723  07A7               	addwf	setBuz@time+1,f
 16477  1724  0820               	movf	?___wmul,w
 16478  1725  01A6               	clrf	setBuz@time
 16479  1726  07A6               	addwf	setBuz@time,f
 16480                           
 16481                           ;Buzzer_B1.c: 25: if(Buz->Enable)
 16482  1727  0868               	movf	_Buz,w
 16483  1728  0086               	movwf	6
 16484  1729  3001               	movlw	1	; select bank2/3
 16485  172A  0087               	movwf	7
 16486  172B  1C01               	btfss	1,0
 16487  172C  0008               	return
 16488                           
 16489                           ;Buzzer_B1.c: 26: {
 16490                           ;Buzzer_B1.c: 27: if(!Buz->GO)
 16491  172D  0868               	movf	_Buz,w
 16492  172E  0086               	movwf	6
 16493  172F  3001               	movlw	1	; select bank2/3
 16494  1730  0087               	movwf	7
 16495  1731  1881               	btfsc	1,1
 16496  1732  2F4C               	goto	l8285
 16497                           
 16498                           ;Buzzer_B1.c: 28: {
 16499                           ;Buzzer_B1.c: 29: Buz->GO=1;
 16500  1733  0868               	movf	_Buz,w
 16501  1734  0086               	movwf	6
 16502  1735  3001               	movlw	1	; select bank2/3
 16503  1736  0087               	movwf	7
 16504  1737  1481               	bsf	1,1
 16505                           
 16506                           ;Buzzer_B1.c: 30: Buz->Count=count;
 16507  1738  0829               	movf	setBuz@count,w
 16508  1739  00A8               	movwf	??_setBuz
 16509  173A  0868               	movf	_Buz,w
 16510  173B  3E03               	addlw	3
 16511  173C  0086               	movwf	6
 16512  173D  3001               	movlw	1	; select bank2/3
 16513  173E  0087               	movwf	7
 16514  173F  0828               	movf	??_setBuz,w
 16515  1740  0081               	movwf	1
 16516                           
 16517                           ;Buzzer_B1.c: 31: Buz->TimeValue=time;
 16518  1741  0868               	movf	_Buz,w
 16519  1742  3E06               	addlw	6
 16520  1743  0086               	movwf	6
 16521  1744  3001               	movlw	1	; select bank2/3
 16522  1745  0087               	movwf	7
 16523  1746  0826               	movf	setBuz@time,w
 16524  1747  3FC0               	movwi [0]fsr1
 16525  1748  0827               	movf	setBuz@time+1,w
 16526  1749  3FC1               	movwi [1]fsr1
 16527                           
 16528                           ;Buzzer_B1.c: 33: RB3=1;
 16529  174A  158D               	bsf	13,3	;volatile
 16530                           
 16531                           ;Buzzer_B1.c: 34: }
 16532  174B  0008               	return
 16533  174C                     l8285:	
 16534                           
 16535                           ;Buzzer_B1.c: 35: else
 16536                           ;Buzzer_B1.c: 36: {
 16537                           ;Buzzer_B1.c: 37: if(!Buz->BufferStatus1)
 16538  174C  0868               	movf	_Buz,w
 16539  174D  0086               	movwf	6
 16540  174E  3001               	movlw	1	; select bank2/3
 16541  174F  0087               	movwf	7
 16542  1750  1981               	btfsc	1,3
 16543  1751  2F6A               	goto	l8289
 16544                           
 16545                           ;Buzzer_B1.c: 38: {
 16546                           ;Buzzer_B1.c: 39: Buz->BufferStatus1=1;
 16547  1752  0868               	movf	_Buz,w
 16548  1753  0086               	movwf	6
 16549  1754  3001               	movlw	1	; select bank2/3
 16550  1755  0087               	movwf	7
 16551  1756  1581               	bsf	1,3
 16552                           
 16553                           ;Buzzer_B1.c: 40: Buz->CountBuffer1=count;
 16554  1757  0829               	movf	setBuz@count,w
 16555  1758  00A8               	movwf	??_setBuz
 16556  1759  0868               	movf	_Buz,w
 16557  175A  3E04               	addlw	4
 16558  175B  0086               	movwf	6
 16559  175C  3001               	movlw	1	; select bank2/3
 16560  175D  0087               	movwf	7
 16561  175E  0828               	movf	??_setBuz,w
 16562  175F  0081               	movwf	1
 16563                           
 16564                           ;Buzzer_B1.c: 41: Buz->TimeValueBuffer1=time;
 16565  1760  0868               	movf	_Buz,w
 16566  1761  3E08               	addlw	8
 16567  1762  0086               	movwf	6
 16568  1763  3001               	movlw	1	; select bank2/3
 16569  1764  0087               	movwf	7
 16570  1765  0826               	movf	setBuz@time,w
 16571  1766  3FC0               	movwi [0]fsr1
 16572  1767  0827               	movf	setBuz@time+1,w
 16573  1768  3FC1               	movwi [1]fsr1
 16574                           
 16575                           ;Buzzer_B1.c: 42: }
 16576  1769  0008               	return
 16577  176A                     l8289:	
 16578                           
 16579                           ;Buzzer_B1.c: 43: else if(!Buz->BufferStatus2)
 16580  176A  0868               	movf	_Buz,w
 16581  176B  0086               	movwf	6
 16582  176C  3001               	movlw	1	; select bank2/3
 16583  176D  0087               	movwf	7
 16584  176E  1A01               	btfsc	1,4
 16585  176F  0008               	return
 16586                           
 16587                           ;Buzzer_B1.c: 44: {
 16588                           ;Buzzer_B1.c: 45: Buz->BufferStatus2=1;
 16589  1770  0868               	movf	_Buz,w
 16590  1771  0086               	movwf	6
 16591  1772  3001               	movlw	1	; select bank2/3
 16592  1773  0087               	movwf	7
 16593  1774  1601               	bsf	1,4
 16594                           
 16595                           ;Buzzer_B1.c: 46: Buz->CountBuffer2=count;
 16596  1775  0829               	movf	setBuz@count,w
 16597  1776  00A8               	movwf	??_setBuz
 16598  1777  0868               	movf	_Buz,w
 16599  1778  3E05               	addlw	5
 16600  1779  0086               	movwf	6
 16601  177A  3001               	movlw	1	; select bank2/3
 16602  177B  0087               	movwf	7
 16603  177C  0828               	movf	??_setBuz,w
 16604  177D  0081               	movwf	1
 16605                           
 16606                           ;Buzzer_B1.c: 47: Buz->TimeValueBuffer2=time;
 16607  177E  0868               	movf	_Buz,w
 16608  177F  3E0A               	addlw	10
 16609  1780  0086               	movwf	6
 16610  1781  3001               	movlw	1	; select bank2/3
 16611  1782  0087               	movwf	7
 16612  1783  0826               	movf	setBuz@time,w
 16613  1784  3FC0               	movwi [0]fsr1
 16614  1785  0827               	movf	setBuz@time+1,w
 16615  1786  3FC1               	movwi [1]fsr1
 16616  1787  0008               	return
 16617  1788                     __end_of_setBuz:	
 16618                           
 16619                           	psect	text107
 16620  1C77                     __ptext107:	
 16621 ;; *************** function ___wmul *****************
 16622 ;; Defined at:
 16623 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\Umul16.c"
 16624 ;; Parameters:    Size  Location     Type
 16625 ;;  multiplier      2    0[BANK0 ] unsigned int 
 16626 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 16627 ;; Auto vars:     Size  Location     Type
 16628 ;;  product         2    4[BANK0 ] unsigned int 
 16629 ;; Return value:  Size  Location     Type
 16630 ;;                  2    0[BANK0 ] unsigned int 
 16631 ;; Registers used:
 16632 ;;		wreg, status,2, status,0
 16633 ;; Tracked objects:
 16634 ;;		On entry : 0/0
 16635 ;;		On exit  : 0/0
 16636 ;;		Unchanged: 0/0
 16637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16638 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16639 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16641 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16642 ;;Total ram usage:        6 bytes
 16643 ;; Hardware stack levels used:    1
 16644 ;; Hardware stack levels required when called:    4
 16645 ;; This function calls:
 16646 ;;		Nothing
 16647 ;; This function is called by:
 16648 ;;		_setBuz
 16649 ;; This function uses a non-reentrant model
 16650 ;;
 16651                           
 16652                           
 16653                           ;psect for function ___wmul
 16654  1C77                     ___wmul:	
 16655                           
 16656                           ;incstack = 0
 16657                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 16658  1C77  0020               	movlb	0	; select bank0
 16659  1C78  01A4               	clrf	___wmul@product
 16660  1C79  01A5               	clrf	___wmul@product+1
 16661  1C7A                     l8265:	
 16662  1C7A  1C20               	btfss	___wmul@multiplier,0
 16663  1C7B  2C80               	goto	l3074
 16664  1C7C  0822               	movf	___wmul@multiplicand,w
 16665  1C7D  07A4               	addwf	___wmul@product,f
 16666  1C7E  0823               	movf	___wmul@multiplicand+1,w
 16667  1C7F  3DA5               	addwfc	___wmul@product+1,f
 16668  1C80                     l3074:	
 16669  1C80  3001               	movlw	1
 16670  1C81                     u8075:	
 16671  1C81  35A2               	lslf	___wmul@multiplicand,f
 16672  1C82  0DA3               	rlf	___wmul@multiplicand+1,f
 16673  1C83  0B89               	decfsz	9,f
 16674  1C84  2C81               	goto	u8075
 16675  1C85  3001               	movlw	1
 16676  1C86                     u8085:	
 16677  1C86  36A1               	lsrf	___wmul@multiplier+1,f
 16678  1C87  0CA0               	rrf	___wmul@multiplier,f
 16679  1C88  0B89               	decfsz	9,f
 16680  1C89  2C86               	goto	u8085
 16681  1C8A  0821               	movf	___wmul@multiplier+1,w
 16682  1C8B  0420               	iorwf	___wmul@multiplier,w
 16683  1C8C  1D03               	skipz
 16684  1C8D  2C7A               	goto	l8265
 16685  1C8E  0825               	movf	___wmul@product+1,w
 16686  1C8F  01A1               	clrf	?___wmul+1
 16687  1C90  07A1               	addwf	?___wmul+1,f
 16688  1C91  0824               	movf	___wmul@product,w
 16689  1C92  01A0               	clrf	?___wmul
 16690  1C93  07A0               	addwf	?___wmul,f
 16691  1C94  0008               	return
 16692  1C95                     __end_of___wmul:	
 16693                           
 16694                           	psect	text108
 16695  1934                     __ptext108:	
 16696 ;; *************** function _DelayOff_Initialization *****************
 16697 ;; Defined at:
 16698 ;;		line 30 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\DelayOff_B1.c"
 16699 ;; Parameters:    Size  Location     Type
 16700 ;;		None
 16701 ;; Auto vars:     Size  Location     Type
 16702 ;;		None
 16703 ;; Return value:  Size  Location     Type
 16704 ;;		None               void
 16705 ;; Registers used:
 16706 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16707 ;; Tracked objects:
 16708 ;;		On entry : 0/0
 16709 ;;		On exit  : 0/0
 16710 ;;		Unchanged: 0/0
 16711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16712 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16713 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16715 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16716 ;;Total ram usage:        0 bytes
 16717 ;; Hardware stack levels used:    1
 16718 ;; Hardware stack levels required when called:    6
 16719 ;; This function calls:
 16720 ;;		_DlyOff_Initialization
 16721 ;; This function is called by:
 16722 ;;		_main
 16723 ;; This function uses a non-reentrant model
 16724 ;;
 16725                           
 16726                           
 16727                           ;psect for function _DelayOff_Initialization
 16728  1934                     _DelayOff_Initialization:	
 16729                           
 16730                           ;DelayOff_B1.c: 33: DlyOff_Initialization(1);
 16731                           
 16732                           ;incstack = 0
 16733                           ; Regs used in _DelayOff_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 16734  1934  3001               	movlw	1
 16735  1935  3199  2183  3199   	fcall	_DlyOff_Initialization
 16736                           
 16737                           ;DelayOff_B1.c: 37: DlyOff_Initialization(2);
 16738  1938  3002               	movlw	2
 16739  1939  3199  2183         	fcall	_DlyOff_Initialization
 16740  193B  0008               	return
 16741  193C                     __end_of_DelayOff_Initialization:	
 16742                           
 16743                           	psect	text109
 16744  1983                     __ptext109:	
 16745 ;; *************** function _DlyOff_Initialization *****************
 16746 ;; Defined at:
 16747 ;;		line 60 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\DelayOff_B1.c"
 16748 ;; Parameters:    Size  Location     Type
 16749 ;;  sw              1    wreg     unsigned char 
 16750 ;; Auto vars:     Size  Location     Type
 16751 ;;  sw              1    2[BANK0 ] unsigned char 
 16752 ;; Return value:  Size  Location     Type
 16753 ;;		None               void
 16754 ;; Registers used:
 16755 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16756 ;; Tracked objects:
 16757 ;;		On entry : 0/0
 16758 ;;		On exit  : 0/0
 16759 ;;		Unchanged: 0/0
 16760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16762 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16764 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16765 ;;Total ram usage:        1 bytes
 16766 ;; Hardware stack levels used:    1
 16767 ;; Hardware stack levels required when called:    5
 16768 ;; This function calls:
 16769 ;;		_DelayOffPointSelect
 16770 ;; This function is called by:
 16771 ;;		_DelayOff_Initialization
 16772 ;; This function uses a non-reentrant model
 16773 ;;
 16774                           
 16775                           
 16776                           ;psect for function _DlyOff_Initialization
 16777  1983                     _DlyOff_Initialization:	
 16778                           
 16779                           ;incstack = 0
 16780                           ; Regs used in _DlyOff_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 16781                           ;DlyOff_Initialization@sw stored from wreg
 16782  1983  0020               	movlb	0	; select bank0
 16783  1984  00A2               	movwf	DlyOff_Initialization@sw
 16784                           
 16785                           ;DelayOff_B1.c: 62: DelayOffPointSelect(sw);
 16786  1985  0822               	movf	DlyOff_Initialization@sw,w
 16787  1986  319A  22FA         	fcall	_DelayOffPointSelect
 16788                           
 16789                           ;DelayOff_B1.c: 63: DelayOff->Enable=1;
 16790  1988  0020               	movlb	0	; select bank0
 16791  1989  0869               	movf	_DelayOff,w
 16792  198A  0086               	movwf	6
 16793  198B  0187               	clrf	7
 16794  198C  1401               	bsf	1,0
 16795  198D  0008               	return
 16796  198E                     __end_of_DlyOff_Initialization:	
 16797                           
 16798                           	psect	text110
 16799  1AFA                     __ptext110:	
 16800 ;; *************** function _DelayOffPointSelect *****************
 16801 ;; Defined at:
 16802 ;;		line 8 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\DelayOff_B1.c"
 16803 ;; Parameters:    Size  Location     Type
 16804 ;;  sw              1    wreg     unsigned char 
 16805 ;; Auto vars:     Size  Location     Type
 16806 ;;  sw              1    1[BANK0 ] unsigned char 
 16807 ;; Return value:  Size  Location     Type
 16808 ;;		None               void
 16809 ;; Registers used:
 16810 ;;		wreg
 16811 ;; Tracked objects:
 16812 ;;		On entry : 0/0
 16813 ;;		On exit  : 0/0
 16814 ;;		Unchanged: 0/0
 16815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16816 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16817 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16818 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16819 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16820 ;;Total ram usage:        2 bytes
 16821 ;; Hardware stack levels used:    1
 16822 ;; Hardware stack levels required when called:    4
 16823 ;; This function calls:
 16824 ;;		Nothing
 16825 ;; This function is called by:
 16826 ;;		_DlyOff_Initialization
 16827 ;;		_DlyOff_Main
 16828 ;;		_setDelayOff_GO
 16829 ;; This function uses a non-reentrant model
 16830 ;;
 16831                           
 16832                           
 16833                           ;psect for function _DelayOffPointSelect
 16834  1AFA                     _DelayOffPointSelect:	
 16835                           
 16836                           ;incstack = 0
 16837                           ; Regs used in _DelayOffPointSelect: [wreg]
 16838                           ;DelayOffPointSelect@sw stored from wreg
 16839  1AFA  0020               	movlb	0	; select bank0
 16840  1AFB  00A1               	movwf	DelayOffPointSelect@sw
 16841                           
 16842                           ;DelayOff_B1.c: 11: if(sw == 1)
 16843  1AFC  0821               	movf	DelayOffPointSelect@sw,w
 16844  1AFD  3A01               	xorlw	1
 16845  1AFE  1D03               	skipz
 16846  1AFF  2B05               	goto	l8187
 16847                           
 16848                           ;DelayOff_B1.c: 12: {
 16849                           ;DelayOff_B1.c: 13: DelayOff=&DlySw1;
 16850  1B00  30CC               	movlw	_DlySw1& (0+255)
 16851  1B01  00A0               	movwf	??_DelayOffPointSelect
 16852  1B02  0820               	movf	??_DelayOffPointSelect,w
 16853  1B03  00E9               	movwf	_DelayOff
 16854                           
 16855                           ;DelayOff_B1.c: 14: }
 16856  1B04  0008               	return
 16857  1B05                     l8187:	
 16858                           
 16859                           ;DelayOff_B1.c: 17: else if(sw == 2)
 16860  1B05  0821               	movf	DelayOffPointSelect@sw,w
 16861  1B06  3A02               	xorlw	2
 16862  1B07  1D03               	skipz
 16863  1B08  0008               	return
 16864                           
 16865                           ;DelayOff_B1.c: 18: {
 16866                           ;DelayOff_B1.c: 19: DelayOff=&DlySw2;
 16867  1B09  30D1               	movlw	_DlySw2& (0+255)
 16868  1B0A  00A0               	movwf	??_DelayOffPointSelect
 16869  1B0B  0820               	movf	??_DelayOffPointSelect,w
 16870  1B0C  00E9               	movwf	_DelayOff
 16871  1B0D  0008               	return
 16872  1B0E                     __end_of_DelayOffPointSelect:	
 16873                           
 16874                           	psect	text111
 16875  1B22                     __ptext111:	
 16876 ;; *************** function _CC2500_PowerOnInitial *****************
 16877 ;; Defined at:
 16878 ;;		line 97 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
 16879 ;; Parameters:    Size  Location     Type
 16880 ;;		None
 16881 ;; Auto vars:     Size  Location     Type
 16882 ;;		None
 16883 ;; Return value:  Size  Location     Type
 16884 ;;		None               void
 16885 ;; Registers used:
 16886 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 16887 ;; Tracked objects:
 16888 ;;		On entry : 0/0
 16889 ;;		On exit  : 0/0
 16890 ;;		Unchanged: 0/0
 16891 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16892 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16893 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16895 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16896 ;;Total ram usage:        0 bytes
 16897 ;; Hardware stack levels used:    1
 16898 ;; Hardware stack levels required when called:    7
 16899 ;; This function calls:
 16900 ;;		_CC2500_ClearRXFIFO
 16901 ;;		_CC2500_ClearTXFIFO
 16902 ;;		_CC2500_FrequencyCabr
 16903 ;;		_CC2500_InitPATable
 16904 ;;		_CC2500_InitSetREG
 16905 ;;		_CC2500_PowerRST
 16906 ;;		_CC2500_SIDLEMode
 16907 ;; This function is called by:
 16908 ;;		_main
 16909 ;; This function uses a non-reentrant model
 16910 ;;
 16911                           
 16912                           
 16913                           ;psect for function _CC2500_PowerOnInitial
 16914  1B22                     _CC2500_PowerOnInitial:	
 16915                           
 16916                           ;CC2500_B1.c: 99: CC2500_PowerRST();
 16917                           
 16918                           ;incstack = 0
 16919                           ; Regs used in _CC2500_PowerOnInitial: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 16920  1B22  319E  26D9  319B   	fcall	_CC2500_PowerRST
 16921                           
 16922                           ;CC2500_B1.c: 100: CC2500_InitSetREG();
 16923  1B25  319D  25D0  319B   	fcall	_CC2500_InitSetREG
 16924                           
 16925                           ;CC2500_B1.c: 101: CC2500_InitPATable();
 16926  1B28  319C  2495  319B   	fcall	_CC2500_InitPATable
 16927                           
 16928                           ;CC2500_B1.c: 102: CC2500_ClearTXFIFO();
 16929  1B2B  3198  20ED  319B   	fcall	_CC2500_ClearTXFIFO
 16930                           
 16931                           ;CC2500_B1.c: 103: CC2500_ClearRXFIFO();
 16932  1B2E  3198  20E9  319B   	fcall	_CC2500_ClearRXFIFO
 16933                           
 16934                           ;CC2500_B1.c: 104: CC2500_FrequencyCabr();
 16935  1B31  3199  21D2  319B   	fcall	_CC2500_FrequencyCabr
 16936                           
 16937                           ;CC2500_B1.c: 105: CC2500_SIDLEMode();
 16938  1B34  3198  20F1         	fcall	_CC2500_SIDLEMode
 16939  1B36  0008               	return
 16940  1B37                     __end_of_CC2500_PowerOnInitial:	
 16941                           
 16942                           	psect	text112
 16943  18F1                     __ptext112:	
 16944 ;; *************** function _CC2500_SIDLEMode *****************
 16945 ;; Defined at:
 16946 ;;		line 183 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
 16947 ;; Parameters:    Size  Location     Type
 16948 ;;		None
 16949 ;; Auto vars:     Size  Location     Type
 16950 ;;		None
 16951 ;; Return value:  Size  Location     Type
 16952 ;;		None               void
 16953 ;; Registers used:
 16954 ;;		wreg, status,2, status,0, pclath, cstack
 16955 ;; Tracked objects:
 16956 ;;		On entry : 0/0
 16957 ;;		On exit  : 0/0
 16958 ;;		Unchanged: 0/0
 16959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16961 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16963 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16964 ;;Total ram usage:        0 bytes
 16965 ;; Hardware stack levels used:    1
 16966 ;; Hardware stack levels required when called:    6
 16967 ;; This function calls:
 16968 ;;		_CC2500_WriteCommand
 16969 ;; This function is called by:
 16970 ;;		_CC2500_PowerOnInitial
 16971 ;; This function uses a non-reentrant model
 16972 ;;
 16973                           
 16974                           
 16975                           ;psect for function _CC2500_SIDLEMode
 16976  18F1                     _CC2500_SIDLEMode:	
 16977                           
 16978                           ;CC2500_B1.c: 185: CC2500_WriteCommand(0x36);
 16979                           
 16980                           ;incstack = 0
 16981                           ; Regs used in _CC2500_SIDLEMode: [wreg+status,2+status,0+pclath+cstack]
 16982  18F1  3036               	movlw	54
 16983  18F2  319A  2263         	fcall	_CC2500_WriteCommand
 16984  18F4  0008               	return
 16985  18F5                     __end_of_CC2500_SIDLEMode:	
 16986                           
 16987                           	psect	text113
 16988  1ED9                     __ptext113:	
 16989 ;; *************** function _CC2500_PowerRST *****************
 16990 ;; Defined at:
 16991 ;;		line 110 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
 16992 ;; Parameters:    Size  Location     Type
 16993 ;;		None
 16994 ;; Auto vars:     Size  Location     Type
 16995 ;;		None
 16996 ;; Return value:  Size  Location     Type
 16997 ;;		None               void
 16998 ;; Registers used:
 16999 ;;		wreg, status,2, status,0, pclath, cstack
 17000 ;; Tracked objects:
 17001 ;;		On entry : 0/0
 17002 ;;		On exit  : 0/0
 17003 ;;		Unchanged: 0/0
 17004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17007 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17008 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17009 ;;Total ram usage:        1 bytes
 17010 ;; Hardware stack levels used:    1
 17011 ;; Hardware stack levels required when called:    5
 17012 ;; This function calls:
 17013 ;;		_CC2500_WriteByte
 17014 ;;		_DelayTime_1us
 17015 ;; This function is called by:
 17016 ;;		_CC2500_PowerOnInitial
 17017 ;; This function uses a non-reentrant model
 17018 ;;
 17019                           
 17020                           
 17021                           ;psect for function _CC2500_PowerRST
 17022  1ED9                     _CC2500_PowerRST:	
 17023                           
 17024                           ;CC2500_B1.c: 112: RC1=0;
 17025                           
 17026                           ;incstack = 0
 17027                           ; Regs used in _CC2500_PowerRST: [wreg+status,2+status,0+pclath+cstack]
 17028  1ED9  0020               	movlb	0	; select bank0
 17029  1EDA  108E               	bcf	14,1	;volatile
 17030                           
 17031                           ;CC2500_B1.c: 113: RC0=0;
 17032  1EDB  100E               	bcf	14,0	;volatile
 17033                           
 17034                           ;CC2500_B1.c: 114: RC4=1;
 17035  1EDC  160E               	bsf	14,4	;volatile
 17036                           
 17037                           ;CC2500_B1.c: 115: DelayTime_1us(10);
 17038  1EDD  300A               	movlw	10
 17039  1EDE  00A0               	movwf	DelayTime_1us@count
 17040  1EDF  3000               	movlw	0
 17041  1EE0  00A1               	movwf	DelayTime_1us@count+1
 17042  1EE1  319D  2583  319E   	fcall	_DelayTime_1us
 17043                           
 17044                           ;CC2500_B1.c: 116: RC4=0;
 17045  1EE4  0020               	movlb	0	; select bank0
 17046  1EE5  120E               	bcf	14,4	;volatile
 17047                           
 17048                           ;CC2500_B1.c: 117: DelayTime_1us(10);
 17049  1EE6  300A               	movlw	10
 17050  1EE7  00A0               	movwf	DelayTime_1us@count
 17051  1EE8  3000               	movlw	0
 17052  1EE9  00A1               	movwf	DelayTime_1us@count+1
 17053  1EEA  319D  2583  319E   	fcall	_DelayTime_1us
 17054                           
 17055                           ;CC2500_B1.c: 118: RC4=1;
 17056  1EED  0020               	movlb	0	; select bank0
 17057  1EEE  160E               	bsf	14,4	;volatile
 17058                           
 17059                           ;CC2500_B1.c: 119: DelayTime_1us(40);
 17060  1EEF  3028               	movlw	40
 17061  1EF0  00A0               	movwf	DelayTime_1us@count
 17062  1EF1  3000               	movlw	0
 17063  1EF2  00A1               	movwf	DelayTime_1us@count+1
 17064  1EF3  319D  2583  319E   	fcall	_DelayTime_1us
 17065                           
 17066                           ;CC2500_B1.c: 120: RC4=0;
 17067  1EF6  0020               	movlb	0	; select bank0
 17068  1EF7  120E               	bcf	14,4	;volatile
 17069                           
 17070                           ;CC2500_B1.c: 121: SPI0Buffer=0x30;
 17071  1EF8  3030               	movlw	48
 17072  1EF9  00A6               	movwf	??_CC2500_PowerRST
 17073  1EFA  0826               	movf	??_CC2500_PowerRST,w
 17074  1EFB  0021               	movlb	1	; select bank1
 17075  1EFC  00BE               	movwf	_SPI0Buffer^(0+128)
 17076  1EFD                     l332:	
 17077                           ;CC2500_B1.c: 122: while(RC2==1);
 17078                           
 17079  1EFD  0020               	movlb	0	; select bank0
 17080  1EFE  190E               	btfsc	14,2	;volatile
 17081  1EFF  2EFD               	goto	l332
 17082                           
 17083                           ;CC2500_B1.c: 123: CC2500_WriteByte();
 17084  1F00  319B  23A6  319E   	fcall	_CC2500_WriteByte
 17085  1F03                     l335:	
 17086                           ;CC2500_B1.c: 124: while(RC2==1);
 17087                           
 17088  1F03  0020               	movlb	0	; select bank0
 17089  1F04  190E               	btfsc	14,2	;volatile
 17090  1F05  2F03               	goto	l335
 17091                           
 17092                           ;CC2500_B1.c: 125: RC0=0;
 17093  1F06  100E               	bcf	14,0	;volatile
 17094                           
 17095                           ;CC2500_B1.c: 126: RC4=1;
 17096  1F07  160E               	bsf	14,4	;volatile
 17097  1F08  0008               	return
 17098  1F09                     __end_of_CC2500_PowerRST:	
 17099                           
 17100                           	psect	text114
 17101  1DD0                     __ptext114:	
 17102 ;; *************** function _CC2500_InitSetREG *****************
 17103 ;; Defined at:
 17104 ;;		line 131 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
 17105 ;; Parameters:    Size  Location     Type
 17106 ;;		None
 17107 ;; Auto vars:     Size  Location     Type
 17108 ;;  loop_c          1    8[BANK0 ] unsigned char 
 17109 ;;  temp2           1    7[BANK0 ] unsigned char 
 17110 ;;  temp1           1    6[BANK0 ] unsigned char 
 17111 ;; Return value:  Size  Location     Type
 17112 ;;		None               void
 17113 ;; Registers used:
 17114 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 17115 ;; Tracked objects:
 17116 ;;		On entry : 0/0
 17117 ;;		On exit  : 0/0
 17118 ;;		Unchanged: 0/0
 17119 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17120 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17121 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17122 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17123 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17124 ;;Total ram usage:        4 bytes
 17125 ;; Hardware stack levels used:    1
 17126 ;; Hardware stack levels required when called:    6
 17127 ;; This function calls:
 17128 ;;		_CC2500_WriteREG
 17129 ;; This function is called by:
 17130 ;;		_CC2500_PowerOnInitial
 17131 ;; This function uses a non-reentrant model
 17132 ;;
 17133                           
 17134                           
 17135                           ;psect for function _CC2500_InitSetREG
 17136  1DD0                     _CC2500_InitSetREG:	
 17137                           
 17138                           ;CC2500_B1.c: 133: unsigned char loop_c;
 17139                           ;CC2500_B1.c: 134: unsigned char temp1,temp2;
 17140                           ;CC2500_B1.c: 136: for(loop_c=0;loop_c<47;loop_c++)
 17141                           
 17142                           ;incstack = 0
 17143                           ; Regs used in _CC2500_InitSetREG: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 17144  1DD0  0020               	movlb	0	; select bank0
 17145  1DD1  01A8               	clrf	CC2500_InitSetREG@loop_c
 17146  1DD2                     L14:	
 17147  1DD2  302F               	movlw	47
 17148  1DD3  0228               	subwf	CC2500_InitSetREG@loop_c,w
 17149  1DD4  1803               	btfsc	3,0
 17150  1DD5  0008               	return
 17151                           
 17152                           ;CC2500_B1.c: 137: {
 17153                           ;CC2500_B1.c: 138: temp1 = CC2500_registers_address[loop_c];
 17154  1DD6  0828               	movf	CC2500_InitSetREG@loop_c,w
 17155  1DD7  3E00               	addlw	low (_CC2500_registers_address| (0+32768))
 17156  1DD8  0084               	movwf	4
 17157  1DD9  3098               	movlw	high (_CC2500_registers_address| (0+32768))
 17158  1DDA  1803               	skipnc
 17159  1DDB  3E01               	addlw	1
 17160  1DDC  0085               	movwf	5
 17161  1DDD  0800               	movf	0,w	;code access
 17162  1DDE  00A5               	movwf	??_CC2500_InitSetREG
 17163  1DDF  0825               	movf	??_CC2500_InitSetREG,w
 17164  1DE0  00A6               	movwf	CC2500_InitSetREG@temp1
 17165                           
 17166                           ;CC2500_B1.c: 139: temp2 = CC2500_rfSettings[loop_c];
 17167  1DE1  0828               	movf	CC2500_InitSetREG@loop_c,w
 17168  1DE2  3E2F               	addlw	low (_CC2500_rfSettings| (0+32768))
 17169  1DE3  0084               	movwf	4
 17170  1DE4  3098               	movlw	high (_CC2500_rfSettings| (0+32768))
 17171  1DE5  1803               	skipnc
 17172  1DE6  3E01               	addlw	1
 17173  1DE7  0085               	movwf	5
 17174  1DE8  0800               	movf	0,w	;code access
 17175  1DE9  00A5               	movwf	??_CC2500_InitSetREG
 17176  1DEA  0825               	movf	??_CC2500_InitSetREG,w
 17177  1DEB  00A7               	movwf	CC2500_InitSetREG@temp2
 17178                           
 17179                           ;CC2500_B1.c: 141: CC2500_WriteREG(temp1,temp2);
 17180  1DEC  0827               	movf	CC2500_InitSetREG@temp2,w
 17181  1DED  00A5               	movwf	??_CC2500_InitSetREG
 17182  1DEE  0825               	movf	??_CC2500_InitSetREG,w
 17183  1DEF  00A2               	movwf	CC2500_WriteREG@value
 17184  1DF0  0826               	movf	CC2500_InitSetREG@temp1,w
 17185  1DF1  319B  23BF  319D   	fcall	_CC2500_WriteREG
 17186  1DF4  3001               	movlw	1
 17187  1DF5  0020               	movlb	0	; select bank0
 17188  1DF6  00A5               	movwf	??_CC2500_InitSetREG
 17189  1DF7  0825               	movf	??_CC2500_InitSetREG,w
 17190  1DF8  07A8               	addwf	CC2500_InitSetREG@loop_c,f
 17191  1DF9  2DD2               	goto	L14
 17192  1DFA                     __end_of_CC2500_InitSetREG:	
 17193                           
 17194                           	psect	text115
 17195  1C95                     __ptext115:	
 17196 ;; *************** function _CC2500_InitPATable *****************
 17197 ;; Defined at:
 17198 ;;		line 147 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
 17199 ;; Parameters:    Size  Location     Type
 17200 ;;		None
 17201 ;; Auto vars:     Size  Location     Type
 17202 ;;  loop_d          1    7[BANK0 ] unsigned char 
 17203 ;;  temp            1    6[BANK0 ] unsigned char 
 17204 ;; Return value:  Size  Location     Type
 17205 ;;		None               void
 17206 ;; Registers used:
 17207 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 17208 ;; Tracked objects:
 17209 ;;		On entry : 0/0
 17210 ;;		On exit  : 0/0
 17211 ;;		Unchanged: 0/0
 17212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17213 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17214 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17215 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17216 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17217 ;;Total ram usage:        3 bytes
 17218 ;; Hardware stack levels used:    1
 17219 ;; Hardware stack levels required when called:    6
 17220 ;; This function calls:
 17221 ;;		_CC2500_WriteREG
 17222 ;; This function is called by:
 17223 ;;		_CC2500_PowerOnInitial
 17224 ;; This function uses a non-reentrant model
 17225 ;;
 17226                           
 17227                           
 17228                           ;psect for function _CC2500_InitPATable
 17229  1C95                     _CC2500_InitPATable:	
 17230                           
 17231                           ;CC2500_B1.c: 149: unsigned char loop_d;
 17232                           ;CC2500_B1.c: 150: unsigned char temp;
 17233                           ;CC2500_B1.c: 152: for(loop_d=0;loop_d<8;loop_d++)
 17234                           
 17235                           ;incstack = 0
 17236                           ; Regs used in _CC2500_InitPATable: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 17237  1C95  0020               	movlb	0	; select bank0
 17238  1C96  01A7               	clrf	CC2500_InitPATable@loop_d
 17239  1C97                     L15:	
 17240  1C97  3008               	movlw	8
 17241  1C98  0227               	subwf	CC2500_InitPATable@loop_d,w
 17242  1C99  1803               	btfsc	3,0
 17243  1C9A  0008               	return
 17244                           
 17245                           ;CC2500_B1.c: 153: {
 17246                           ;CC2500_B1.c: 154: temp=CC2500_patable_vaule[loop_d];
 17247  1C9B  0827               	movf	CC2500_InitPATable@loop_d,w
 17248  1C9C  3E5E               	addlw	low (_CC2500_patable_vaule| (0+32768))
 17249  1C9D  0084               	movwf	4
 17250  1C9E  3098               	movlw	high (_CC2500_patable_vaule| (0+32768))
 17251  1C9F  1803               	skipnc
 17252  1CA0  3E01               	addlw	1
 17253  1CA1  0085               	movwf	5
 17254  1CA2  0800               	movf	0,w	;code access
 17255  1CA3  00A5               	movwf	??_CC2500_InitPATable
 17256  1CA4  0825               	movf	??_CC2500_InitPATable,w
 17257  1CA5  00A6               	movwf	CC2500_InitPATable@temp
 17258                           
 17259                           ;CC2500_B1.c: 155: CC2500_WriteREG(0x3E,temp);
 17260  1CA6  0826               	movf	CC2500_InitPATable@temp,w
 17261  1CA7  00A5               	movwf	??_CC2500_InitPATable
 17262  1CA8  0825               	movf	??_CC2500_InitPATable,w
 17263  1CA9  00A2               	movwf	CC2500_WriteREG@value
 17264  1CAA  303E               	movlw	62
 17265  1CAB  319B  23BF  319C   	fcall	_CC2500_WriteREG
 17266  1CAE  3001               	movlw	1
 17267  1CAF  0020               	movlb	0	; select bank0
 17268  1CB0  00A5               	movwf	??_CC2500_InitPATable
 17269  1CB1  0825               	movf	??_CC2500_InitPATable,w
 17270  1CB2  07A7               	addwf	CC2500_InitPATable@loop_d,f
 17271  1CB3  2C97               	goto	L15
 17272  1CB4                     __end_of_CC2500_InitPATable:	
 17273                           
 17274                           	psect	text116
 17275  1BBF                     __ptext116:	
 17276 ;; *************** function _CC2500_WriteREG *****************
 17277 ;; Defined at:
 17278 ;;		line 227 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
 17279 ;; Parameters:    Size  Location     Type
 17280 ;;  w_addr          1    wreg     unsigned char 
 17281 ;;  value           1    2[BANK0 ] unsigned char 
 17282 ;; Auto vars:     Size  Location     Type
 17283 ;;  w_addr          1    4[BANK0 ] unsigned char 
 17284 ;; Return value:  Size  Location     Type
 17285 ;;		None               void
 17286 ;; Registers used:
 17287 ;;		wreg, status,2, status,0, pclath, cstack
 17288 ;; Tracked objects:
 17289 ;;		On entry : 0/0
 17290 ;;		On exit  : 0/0
 17291 ;;		Unchanged: 0/0
 17292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17293 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17294 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17295 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17296 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17297 ;;Total ram usage:        3 bytes
 17298 ;; Hardware stack levels used:    1
 17299 ;; Hardware stack levels required when called:    5
 17300 ;; This function calls:
 17301 ;;		_CC2500_WriteByte
 17302 ;; This function is called by:
 17303 ;;		_CC2500_InitSetREG
 17304 ;;		_CC2500_InitPATable
 17305 ;; This function uses a non-reentrant model
 17306 ;;
 17307                           
 17308                           
 17309                           ;psect for function _CC2500_WriteREG
 17310  1BBF                     _CC2500_WriteREG:	
 17311                           
 17312                           ;incstack = 0
 17313                           ; Regs used in _CC2500_WriteREG: [wreg+status,2+status,0+pclath+cstack]
 17314                           ;CC2500_WriteREG@w_addr stored from wreg
 17315  1BBF  0020               	movlb	0	; select bank0
 17316  1BC0  00A4               	movwf	CC2500_WriteREG@w_addr
 17317                           
 17318                           ;CC2500_B1.c: 229: RC4=0;
 17319  1BC1  120E               	bcf	14,4	;volatile
 17320                           
 17321                           ;CC2500_B1.c: 230: SPI0Buffer=w_addr;
 17322  1BC2  0824               	movf	CC2500_WriteREG@w_addr,w
 17323  1BC3  00A3               	movwf	??_CC2500_WriteREG
 17324  1BC4  0823               	movf	??_CC2500_WriteREG,w
 17325  1BC5  0021               	movlb	1	; select bank1
 17326  1BC6  00BE               	movwf	_SPI0Buffer^(0+128)
 17327  1BC7                     l377:	
 17328                           ;CC2500_B1.c: 231: while(RC2==1);
 17329                           
 17330  1BC7  0020               	movlb	0	; select bank0
 17331  1BC8  190E               	btfsc	14,2	;volatile
 17332  1BC9  2BC7               	goto	l377
 17333                           
 17334                           ;CC2500_B1.c: 232: CC2500_WriteByte();
 17335  1BCA  319B  23A6  319B   	fcall	_CC2500_WriteByte
 17336                           
 17337                           ;CC2500_B1.c: 233: SPI0Buffer=value;
 17338  1BCD  0020               	movlb	0	; select bank0
 17339  1BCE  0822               	movf	CC2500_WriteREG@value,w
 17340  1BCF  00A3               	movwf	??_CC2500_WriteREG
 17341  1BD0  0823               	movf	??_CC2500_WriteREG,w
 17342  1BD1  0021               	movlb	1	; select bank1
 17343  1BD2  00BE               	movwf	_SPI0Buffer^(0+128)
 17344                           
 17345                           ;CC2500_B1.c: 234: CC2500_WriteByte();
 17346  1BD3  319B  23A6         	fcall	_CC2500_WriteByte
 17347                           
 17348                           ;CC2500_B1.c: 235: RC4=1;
 17349  1BD5  0020               	movlb	0	; select bank0
 17350  1BD6  160E               	bsf	14,4	;volatile
 17351  1BD7  0008               	return
 17352  1BD8                     __end_of_CC2500_WriteREG:	
 17353                           
 17354                           	psect	text117
 17355  19D2                     __ptext117:	
 17356 ;; *************** function _CC2500_FrequencyCabr *****************
 17357 ;; Defined at:
 17358 ;;		line 175 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
 17359 ;; Parameters:    Size  Location     Type
 17360 ;;		None
 17361 ;; Auto vars:     Size  Location     Type
 17362 ;;		None
 17363 ;; Return value:  Size  Location     Type
 17364 ;;		None               void
 17365 ;; Registers used:
 17366 ;;		wreg, status,2, status,0, pclath, cstack
 17367 ;; Tracked objects:
 17368 ;;		On entry : 0/0
 17369 ;;		On exit  : 0/0
 17370 ;;		Unchanged: 0/0
 17371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17373 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17375 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17376 ;;Total ram usage:        0 bytes
 17377 ;; Hardware stack levels used:    1
 17378 ;; Hardware stack levels required when called:    6
 17379 ;; This function calls:
 17380 ;;		_CC2500_WriteCommand
 17381 ;;		_DelayTime_1us
 17382 ;; This function is called by:
 17383 ;;		_CC2500_PowerOnInitial
 17384 ;; This function uses a non-reentrant model
 17385 ;;
 17386                           
 17387                           
 17388                           ;psect for function _CC2500_FrequencyCabr
 17389  19D2                     _CC2500_FrequencyCabr:	
 17390                           
 17391                           ;CC2500_B1.c: 177: CC2500_WriteCommand(0x33);
 17392                           
 17393                           ;incstack = 0
 17394                           ; Regs used in _CC2500_FrequencyCabr: [wreg+status,2+status,0+pclath+cstack]
 17395  19D2  3033               	movlw	51
 17396  19D3  319A  2263  3199   	fcall	_CC2500_WriteCommand
 17397                           
 17398                           ;CC2500_B1.c: 178: DelayTime_1us(1000);
 17399  19D6  30E8               	movlw	232
 17400  19D7  0020               	movlb	0	; select bank0
 17401  19D8  00A0               	movwf	DelayTime_1us@count
 17402  19D9  3003               	movlw	3
 17403  19DA  00A1               	movwf	DelayTime_1us@count+1
 17404  19DB  319D  2583         	fcall	_DelayTime_1us
 17405  19DD  0008               	return
 17406  19DE                     __end_of_CC2500_FrequencyCabr:	
 17407                           
 17408                           	psect	text118
 17409  1D83                     __ptext118:	
 17410 ;; *************** function _DelayTime_1us *****************
 17411 ;; Defined at:
 17412 ;;		line 283 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
 17413 ;; Parameters:    Size  Location     Type
 17414 ;;  count           2    0[BANK0 ] int 
 17415 ;; Auto vars:     Size  Location     Type
 17416 ;;  j               2    4[BANK0 ] unsigned int 
 17417 ;;  i               2    2[BANK0 ] unsigned int 
 17418 ;; Return value:  Size  Location     Type
 17419 ;;		None               void
 17420 ;; Registers used:
 17421 ;;		wreg, status,2
 17422 ;; Tracked objects:
 17423 ;;		On entry : 0/0
 17424 ;;		On exit  : 0/0
 17425 ;;		Unchanged: 0/0
 17426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17427 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17428 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17429 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17430 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17431 ;;Total ram usage:        6 bytes
 17432 ;; Hardware stack levels used:    1
 17433 ;; Hardware stack levels required when called:    4
 17434 ;; This function calls:
 17435 ;;		Nothing
 17436 ;; This function is called by:
 17437 ;;		_CC2500_PowerRST
 17438 ;;		_CC2500_FrequencyCabr
 17439 ;; This function uses a non-reentrant model
 17440 ;;
 17441                           
 17442                           
 17443                           ;psect for function _DelayTime_1us
 17444  1D83                     _DelayTime_1us:	
 17445                           
 17446                           ;CC2500_B1.c: 285: unsigned int i,j;
 17447                           ;CC2500_B1.c: 286: for(i=1;i<count;i++)
 17448                           
 17449                           ;incstack = 0
 17450                           ; Regs used in _DelayTime_1us: [wreg+status,2]
 17451  1D83  3001               	movlw	1
 17452  1D84  0020               	movlb	0	; select bank0
 17453  1D85  00A2               	movwf	DelayTime_1us@i
 17454  1D86  3000               	movlw	0
 17455  1D87  00A3               	movwf	DelayTime_1us@i+1
 17456  1D88                     l401:	
 17457  1D88  0821               	movf	DelayTime_1us@count+1,w
 17458  1D89  0223               	subwf	DelayTime_1us@i+1,w
 17459  1D8A  1D03               	skipz
 17460  1D8B  2D8E               	goto	u8815
 17461  1D8C  0820               	movf	DelayTime_1us@count,w
 17462  1D8D  0222               	subwf	DelayTime_1us@i,w
 17463  1D8E                     u8815:	
 17464  1D8E  1803               	btfsc	3,0
 17465  1D8F  0008               	return
 17466                           
 17467                           ;CC2500_B1.c: 287: for(j=0;j<=1;j++);
 17468  1D90  01A4               	clrf	DelayTime_1us@j
 17469  1D91  01A5               	clrf	DelayTime_1us@j+1
 17470  1D92  3000               	movlw	0
 17471  1D93  0225               	subwf	DelayTime_1us@j+1,w
 17472  1D94  3002               	movlw	2
 17473  1D95  1903               	skipnz
 17474  1D96  0224               	subwf	DelayTime_1us@j,w
 17475  1D97  1803               	btfsc	3,0
 17476  1D98  2DA4               	goto	l8787
 17477  1D99                     l8785:	
 17478  1D99  3001               	movlw	1
 17479  1D9A  07A4               	addwf	DelayTime_1us@j,f
 17480  1D9B  3000               	movlw	0
 17481  1D9C  3DA5               	addwfc	DelayTime_1us@j+1,f
 17482  1D9D  3000               	movlw	0
 17483  1D9E  0225               	subwf	DelayTime_1us@j+1,w
 17484  1D9F  3002               	movlw	2
 17485  1DA0  1903               	skipnz
 17486  1DA1  0224               	subwf	DelayTime_1us@j,w
 17487  1DA2  1C03               	skipc
 17488  1DA3  2D99               	goto	l8785
 17489  1DA4                     l8787:	
 17490  1DA4  3001               	movlw	1
 17491  1DA5  07A2               	addwf	DelayTime_1us@i,f
 17492  1DA6  3000               	movlw	0
 17493  1DA7  3DA3               	addwfc	DelayTime_1us@i+1,f
 17494  1DA8  2D88               	goto	l401
 17495  1DA9                     __end_of_DelayTime_1us:	
 17496                           
 17497                           	psect	text119
 17498  18ED                     __ptext119:	
 17499 ;; *************** function _CC2500_ClearTXFIFO *****************
 17500 ;; Defined at:
 17501 ;;		line 161 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
 17502 ;; Parameters:    Size  Location     Type
 17503 ;;		None
 17504 ;; Auto vars:     Size  Location     Type
 17505 ;;		None
 17506 ;; Return value:  Size  Location     Type
 17507 ;;		None               void
 17508 ;; Registers used:
 17509 ;;		wreg, status,2, status,0, pclath, cstack
 17510 ;; Tracked objects:
 17511 ;;		On entry : 0/0
 17512 ;;		On exit  : 0/0
 17513 ;;		Unchanged: 0/0
 17514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17515 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17516 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17518 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17519 ;;Total ram usage:        0 bytes
 17520 ;; Hardware stack levels used:    1
 17521 ;; Hardware stack levels required when called:    6
 17522 ;; This function calls:
 17523 ;;		_CC2500_WriteCommand
 17524 ;; This function is called by:
 17525 ;;		_CC2500_PowerOnInitial
 17526 ;; This function uses a non-reentrant model
 17527 ;;
 17528                           
 17529                           
 17530                           ;psect for function _CC2500_ClearTXFIFO
 17531  18ED                     _CC2500_ClearTXFIFO:	
 17532                           
 17533                           ;CC2500_B1.c: 163: CC2500_WriteCommand(0x3B);
 17534                           
 17535                           ;incstack = 0
 17536                           ; Regs used in _CC2500_ClearTXFIFO: [wreg+status,2+status,0+pclath+cstack]
 17537  18ED  303B               	movlw	59
 17538  18EE  319A  2263         	fcall	_CC2500_WriteCommand
 17539  18F0  0008               	return
 17540  18F1                     __end_of_CC2500_ClearTXFIFO:	
 17541                           
 17542                           	psect	text120
 17543  18E9                     __ptext120:	
 17544 ;; *************** function _CC2500_ClearRXFIFO *****************
 17545 ;; Defined at:
 17546 ;;		line 168 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
 17547 ;; Parameters:    Size  Location     Type
 17548 ;;		None
 17549 ;; Auto vars:     Size  Location     Type
 17550 ;;		None
 17551 ;; Return value:  Size  Location     Type
 17552 ;;		None               void
 17553 ;; Registers used:
 17554 ;;		wreg, status,2, status,0, pclath, cstack
 17555 ;; Tracked objects:
 17556 ;;		On entry : 0/0
 17557 ;;		On exit  : 0/0
 17558 ;;		Unchanged: 0/0
 17559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17561 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17563 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17564 ;;Total ram usage:        0 bytes
 17565 ;; Hardware stack levels used:    1
 17566 ;; Hardware stack levels required when called:    6
 17567 ;; This function calls:
 17568 ;;		_CC2500_WriteCommand
 17569 ;; This function is called by:
 17570 ;;		_CC2500_PowerOnInitial
 17571 ;; This function uses a non-reentrant model
 17572 ;;
 17573                           
 17574                           
 17575                           ;psect for function _CC2500_ClearRXFIFO
 17576  18E9                     _CC2500_ClearRXFIFO:	
 17577                           
 17578                           ;CC2500_B1.c: 170: CC2500_WriteCommand(0x3A);
 17579                           
 17580                           ;incstack = 0
 17581                           ; Regs used in _CC2500_ClearRXFIFO: [wreg+status,2+status,0+pclath+cstack]
 17582  18E9  303A               	movlw	58
 17583  18EA  319A  2263         	fcall	_CC2500_WriteCommand
 17584  18EC  0008               	return
 17585  18ED                     __end_of_CC2500_ClearRXFIFO:	
 17586                           
 17587                           	psect	text121
 17588  1A63                     __ptext121:	
 17589 ;; *************** function _CC2500_WriteCommand *****************
 17590 ;; Defined at:
 17591 ;;		line 253 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
 17592 ;; Parameters:    Size  Location     Type
 17593 ;;  command         1    wreg     unsigned char 
 17594 ;; Auto vars:     Size  Location     Type
 17595 ;;  command         1    3[BANK0 ] unsigned char 
 17596 ;; Return value:  Size  Location     Type
 17597 ;;		None               void
 17598 ;; Registers used:
 17599 ;;		wreg, status,2, status,0, pclath, cstack
 17600 ;; Tracked objects:
 17601 ;;		On entry : 0/0
 17602 ;;		On exit  : 0/0
 17603 ;;		Unchanged: 0/0
 17604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17606 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17607 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17608 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17609 ;;Total ram usage:        2 bytes
 17610 ;; Hardware stack levels used:    1
 17611 ;; Hardware stack levels required when called:    5
 17612 ;; This function calls:
 17613 ;;		_CC2500_WriteByte
 17614 ;; This function is called by:
 17615 ;;		_CC2500_TxData
 17616 ;;		_CC2500_RxData
 17617 ;;		_CC2500_ClearTXFIFO
 17618 ;;		_CC2500_ClearRXFIFO
 17619 ;;		_CC2500_FrequencyCabr
 17620 ;;		_CC2500_SIDLEMode
 17621 ;;		_setRF_Main
 17622 ;;		_RF_RxDisable
 17623 ;; This function uses a non-reentrant model
 17624 ;;
 17625                           
 17626                           
 17627                           ;psect for function _CC2500_WriteCommand
 17628  1A63                     _CC2500_WriteCommand:	
 17629                           
 17630                           ;incstack = 0
 17631                           ; Regs used in _CC2500_WriteCommand: [wreg+status,2+status,0+pclath+cstack]
 17632                           ;CC2500_WriteCommand@command stored from wreg
 17633  1A63  0020               	movlb	0	; select bank0
 17634  1A64  00A3               	movwf	CC2500_WriteCommand@command
 17635                           
 17636                           ;CC2500_B1.c: 255: RC4=0;
 17637  1A65  120E               	bcf	14,4	;volatile
 17638                           
 17639                           ;CC2500_B1.c: 256: SPI0Buffer=command;
 17640  1A66  0823               	movf	CC2500_WriteCommand@command,w
 17641  1A67  00A2               	movwf	??_CC2500_WriteCommand
 17642  1A68  0822               	movf	??_CC2500_WriteCommand,w
 17643  1A69  0021               	movlb	1	; select bank1
 17644  1A6A  00BE               	movwf	_SPI0Buffer^(0+128)
 17645  1A6B                     l389:	
 17646                           ;CC2500_B1.c: 258: while(RC2==1);
 17647                           
 17648  1A6B  0020               	movlb	0	; select bank0
 17649  1A6C  190E               	btfsc	14,2	;volatile
 17650  1A6D  2A6B               	goto	l389
 17651                           
 17652                           ;CC2500_B1.c: 260: CC2500_WriteByte();
 17653  1A6E  319B  23A6         	fcall	_CC2500_WriteByte
 17654                           
 17655                           ;CC2500_B1.c: 261: RC4=1;
 17656  1A70  0020               	movlb	0	; select bank0
 17657  1A71  160E               	bsf	14,4	;volatile
 17658  1A72  0008               	return
 17659  1A73                     __end_of_CC2500_WriteCommand:	
 17660                           
 17661                           	psect	text122
 17662  1BA6                     __ptext122:	
 17663 ;; *************** function _CC2500_WriteByte *****************
 17664 ;; Defined at:
 17665 ;;		line 193 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
 17666 ;; Parameters:    Size  Location     Type
 17667 ;;		None
 17668 ;; Auto vars:     Size  Location     Type
 17669 ;;  loop_a          1    1[BANK0 ] unsigned char 
 17670 ;; Return value:  Size  Location     Type
 17671 ;;		None               void
 17672 ;; Registers used:
 17673 ;;		wreg, status,2, status,0
 17674 ;; Tracked objects:
 17675 ;;		On entry : 0/0
 17676 ;;		On exit  : 0/0
 17677 ;;		Unchanged: 0/0
 17678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17679 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17680 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17681 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17682 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17683 ;;Total ram usage:        2 bytes
 17684 ;; Hardware stack levels used:    1
 17685 ;; Hardware stack levels required when called:    4
 17686 ;; This function calls:
 17687 ;;		Nothing
 17688 ;; This function is called by:
 17689 ;;		_CC2500_TxData
 17690 ;;		_CC2500_RxData
 17691 ;;		_CC2500_PowerRST
 17692 ;;		_CC2500_WriteREG
 17693 ;;		_CC2500_WriteCommand
 17694 ;;		_CC2500_ReadStatus
 17695 ;;		_CC2500_ReadREG
 17696 ;; This function uses a non-reentrant model
 17697 ;;
 17698                           
 17699                           
 17700                           ;psect for function _CC2500_WriteByte
 17701  1BA6                     _CC2500_WriteByte:	
 17702                           
 17703                           ;CC2500_B1.c: 195: unsigned char loop_a;
 17704                           ;CC2500_B1.c: 196: for(loop_a=0;loop_a<8;loop_a++)
 17705                           
 17706                           ;incstack = 0
 17707                           ; Regs used in _CC2500_WriteByte: [wreg+status,2+status,0]
 17708  1BA6  0020               	movlb	0	; select bank0
 17709  1BA7  01A1               	clrf	CC2500_WriteByte@loop_a
 17710  1BA8                     L16:	
 17711  1BA8  3008               	movlw	8
 17712  1BA9  0221               	subwf	CC2500_WriteByte@loop_a,w
 17713  1BAA  1803               	btfsc	3,0
 17714  1BAB  0008               	return
 17715                           
 17716                           ;CC2500_B1.c: 197: {
 17717                           ;CC2500_B1.c: 198: if(SPI0Buffer&0x80)
 17718  1BAC  0021               	movlb	1	; select bank1
 17719  1BAD  1FBE               	btfss	_SPI0Buffer^(0+128),7
 17720  1BAE  2BB2               	goto	l365
 17721                           
 17722                           ;CC2500_B1.c: 199: RC0=1;
 17723  1BAF  0020               	movlb	0	; select bank0
 17724  1BB0  140E               	bsf	14,0	;volatile
 17725  1BB1  2BB4               	goto	l366
 17726  1BB2                     l365:	
 17727                           
 17728                           ;CC2500_B1.c: 200: else
 17729                           ;CC2500_B1.c: 201: RC0=0;
 17730  1BB2  0020               	movlb	0	; select bank0
 17731  1BB3  100E               	bcf	14,0	;volatile
 17732  1BB4                     l366:	
 17733                           
 17734                           ;CC2500_B1.c: 202: RC1=1;
 17735  1BB4  148E               	bsf	14,1	;volatile
 17736                           
 17737                           ;CC2500_B1.c: 203: SPI0Buffer<<=1;
 17738  1BB5  1003               	clrc
 17739  1BB6  0021               	movlb	1	; select bank1
 17740  1BB7  0DBE               	rlf	_SPI0Buffer^(0+128),f
 17741                           
 17742                           ;CC2500_B1.c: 204: RC1=0;
 17743  1BB8  0020               	movlb	0	; select bank0
 17744  1BB9  108E               	bcf	14,1	;volatile
 17745  1BBA  3001               	movlw	1
 17746  1BBB  00A0               	movwf	??_CC2500_WriteByte
 17747  1BBC  0820               	movf	??_CC2500_WriteByte,w
 17748  1BBD  07A1               	addwf	CC2500_WriteByte@loop_a,f
 17749  1BBE  2BA8               	goto	L16
 17750  1BBF                     __end_of_CC2500_WriteByte:	
 17751                           
 17752                           	psect	text123
 17753  0C1C                     __ptext123:	
 17754 ;; *************** function _Buzzer_Main *****************
 17755 ;; Defined at:
 17756 ;;		line 53 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Buzzer_B1.c"
 17757 ;; Parameters:    Size  Location     Type
 17758 ;;		None
 17759 ;; Auto vars:     Size  Location     Type
 17760 ;;		None
 17761 ;; Return value:  Size  Location     Type
 17762 ;;		None               void
 17763 ;; Registers used:
 17764 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 17765 ;; Tracked objects:
 17766 ;;		On entry : 0/0
 17767 ;;		On exit  : 0/0
 17768 ;;		Unchanged: 0/0
 17769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17771 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17772 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17773 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17774 ;;Total ram usage:        4 bytes
 17775 ;; Hardware stack levels used:    1
 17776 ;; Hardware stack levels required when called:    4
 17777 ;; This function calls:
 17778 ;;		Nothing
 17779 ;; This function is called by:
 17780 ;;		_main
 17781 ;; This function uses a non-reentrant model
 17782 ;;
 17783                           
 17784                           
 17785                           ;psect for function _Buzzer_Main
 17786  0C1C                     _Buzzer_Main:	
 17787                           
 17788                           ;Buzzer_B1.c: 55: Buz->Switch=(RB3)?1:0;
 17789                           
 17790                           ;incstack = 0
 17791                           ; Regs used in _Buzzer_Main: [wreg-fsr1h+status,2+status,0]
 17792  0C1C  0020               	movlb	0	; select bank0
 17793  0C1D  0868               	movf	_Buz,w
 17794  0C1E  0086               	movwf	6
 17795  0C1F  3001               	movlw	1	; select bank2/3
 17796  0C20  0087               	movwf	7
 17797  0C21  1281               	bcf	1,5
 17798  0C22  198D               	btfsc	13,3	;volatile
 17799  0C23  1681               	bsf	1,5
 17800                           
 17801                           ;Buzzer_B1.c: 57: if(Buz->GO)
 17802  0C24  0020               	movlb	0	; select bank0
 17803  0C25  0868               	movf	_Buz,w
 17804  0C26  0086               	movwf	6
 17805  0C27  3001               	movlw	1	; select bank2/3
 17806  0C28  0087               	movwf	7
 17807  0C29  1C81               	btfss	1,1
 17808  0C2A  0008               	return
 17809                           
 17810                           ;Buzzer_B1.c: 58: {
 17811                           ;Buzzer_B1.c: 60: if(Buz->Time >= Buz->TimeValue)
 17812  0C2B  0868               	movf	_Buz,w
 17813  0C2C  3E06               	addlw	6
 17814  0C2D  0086               	movwf	6
 17815  0C2E  3001               	movlw	1	; select bank2/3
 17816  0C2F  0087               	movwf	7
 17817  0C30  3F40               	moviw [0]fsr1
 17818  0C31  00A0               	movwf	??_Buzzer_Main
 17819  0C32  3F41               	moviw [1]fsr1
 17820  0C33  00A1               	movwf	??_Buzzer_Main+1
 17821  0C34  0A68               	incf	_Buz,w
 17822  0C35  0086               	movwf	6
 17823  0C36  3001               	movlw	1	; select bank2/3
 17824  0C37  0087               	movwf	7
 17825  0C38  3F40               	moviw [0]fsr1
 17826  0C39  00A2               	movwf	??_Buzzer_Main+2
 17827  0C3A  3F41               	moviw [1]fsr1
 17828  0C3B  00A3               	movwf	??_Buzzer_Main+3
 17829  0C3C  0821               	movf	??_Buzzer_Main+1,w
 17830  0C3D  0223               	subwf	??_Buzzer_Main+3,w
 17831  0C3E  1D03               	skipz
 17832  0C3F  2C42               	goto	u9995
 17833  0C40  0820               	movf	??_Buzzer_Main,w
 17834  0C41  0222               	subwf	??_Buzzer_Main+2,w
 17835  0C42                     u9995:	
 17836  0C42  1C03               	skipc
 17837  0C43  0008               	return
 17838                           
 17839                           ;Buzzer_B1.c: 61: {
 17840                           ;Buzzer_B1.c: 62: Buz->Time=0;
 17841  0C44  0A68               	incf	_Buz,w
 17842  0C45  0086               	movwf	6
 17843  0C46  3001               	movlw	1	; select bank2/3
 17844  0C47  0087               	movwf	7
 17845  0C48  3000               	movlw	0
 17846  0C49  3FC0               	movwi [0]fsr1
 17847  0C4A  3FC1               	movwi [1]fsr1
 17848                           
 17849                           ;Buzzer_B1.c: 63: if(!Buz->Switch)
 17850  0C4B  0868               	movf	_Buz,w
 17851  0C4C  0086               	movwf	6
 17852  0C4D  3001               	movlw	1	; select bank2/3
 17853  0C4E  0087               	movwf	7
 17854  0C4F  1A81               	btfsc	1,5
 17855  0C50  2CB6               	goto	l9619
 17856                           
 17857                           ;Buzzer_B1.c: 64: {
 17858                           ;Buzzer_B1.c: 65: if(Buz->Count == 0)
 17859  0C51  0868               	movf	_Buz,w
 17860  0C52  3E03               	addlw	3
 17861  0C53  0086               	movwf	6
 17862  0C54  3001               	movlw	1	; select bank2/3
 17863  0C55  0087               	movwf	7
 17864  0C56  0881               	movf	1,f
 17865  0C57  1D03               	skipz
 17866  0C58  2CAF               	goto	l9615
 17867                           
 17868                           ;Buzzer_B1.c: 66: {
 17869                           ;Buzzer_B1.c: 67: if(Buz->BufferStatus1)
 17870  0C59  0868               	movf	_Buz,w
 17871  0C5A  0086               	movwf	6
 17872  0C5B  3001               	movlw	1	; select bank2/3
 17873  0C5C  0087               	movwf	7
 17874  0C5D  1D81               	btfss	1,3
 17875  0C5E  2C81               	goto	l9607
 17876                           
 17877                           ;Buzzer_B1.c: 68: {
 17878                           ;Buzzer_B1.c: 69: Buz->BufferStatus1=0;
 17879  0C5F  0868               	movf	_Buz,w
 17880  0C60  0086               	movwf	6
 17881  0C61  3001               	movlw	1	; select bank2/3
 17882  0C62  0087               	movwf	7
 17883  0C63  1181               	bcf	1,3
 17884                           
 17885                           ;Buzzer_B1.c: 70: Buz->Count=Buz->CountBuffer1;
 17886  0C64  0868               	movf	_Buz,w
 17887  0C65  3E04               	addlw	4
 17888  0C66  0086               	movwf	6
 17889  0C67  3001               	movlw	1	; select bank2/3
 17890  0C68  0087               	movwf	7
 17891  0C69  0801               	movf	1,w
 17892  0C6A  00A0               	movwf	??_Buzzer_Main
 17893  0C6B  0868               	movf	_Buz,w
 17894  0C6C  3E03               	addlw	3
 17895  0C6D  0086               	movwf	6
 17896  0C6E  3001               	movlw	1	; select bank2/3
 17897  0C6F  0087               	movwf	7
 17898  0C70  0820               	movf	??_Buzzer_Main,w
 17899  0C71  0081               	movwf	1
 17900                           
 17901                           ;Buzzer_B1.c: 71: Buz->TimeValue=Buz->TimeValueBuffer1;
 17902  0C72  0868               	movf	_Buz,w
 17903  0C73  3E08               	addlw	8
 17904  0C74  0086               	movwf	6
 17905  0C75  3001               	movlw	1	; select bank2/3
 17906  0C76  0087               	movwf	7
 17907  0C77  0868               	movf	_Buz,w
 17908  0C78  3E06               	addlw	6
 17909  0C79  0084               	movwf	4
 17910  0C7A  3001               	movlw	1	; select bank2/3
 17911  0C7B  0085               	movwf	5
 17912  0C7C  3F40               	moviw [0]fsr1
 17913  0C7D  3F80               	movwi [0]fsr0
 17914  0C7E  3F41               	moviw [1]fsr1
 17915  0C7F  3F81               	movwi [1]fsr0
 17916                           
 17917                           ;Buzzer_B1.c: 72: }
 17918  0C80  0008               	return
 17919  0C81                     l9607:	
 17920                           
 17921                           ;Buzzer_B1.c: 73: else if(Buz->BufferStatus2)
 17922  0C81  0868               	movf	_Buz,w
 17923  0C82  0086               	movwf	6
 17924  0C83  3001               	movlw	1	; select bank2/3
 17925  0C84  0087               	movwf	7
 17926  0C85  1E01               	btfss	1,4
 17927  0C86  2CA9               	goto	l9613
 17928                           
 17929                           ;Buzzer_B1.c: 74: {
 17930                           ;Buzzer_B1.c: 75: Buz->BufferStatus2=0;
 17931  0C87  0868               	movf	_Buz,w
 17932  0C88  0086               	movwf	6
 17933  0C89  3001               	movlw	1	; select bank2/3
 17934  0C8A  0087               	movwf	7
 17935  0C8B  1201               	bcf	1,4
 17936                           
 17937                           ;Buzzer_B1.c: 76: Buz->Count=Buz->CountBuffer2;
 17938  0C8C  0868               	movf	_Buz,w
 17939  0C8D  3E05               	addlw	5
 17940  0C8E  0086               	movwf	6
 17941  0C8F  3001               	movlw	1	; select bank2/3
 17942  0C90  0087               	movwf	7
 17943  0C91  0801               	movf	1,w
 17944  0C92  00A0               	movwf	??_Buzzer_Main
 17945  0C93  0868               	movf	_Buz,w
 17946  0C94  3E03               	addlw	3
 17947  0C95  0086               	movwf	6
 17948  0C96  3001               	movlw	1	; select bank2/3
 17949  0C97  0087               	movwf	7
 17950  0C98  0820               	movf	??_Buzzer_Main,w
 17951  0C99  0081               	movwf	1
 17952                           
 17953                           ;Buzzer_B1.c: 77: Buz->TimeValue=Buz->TimeValueBuffer2;
 17954  0C9A  0868               	movf	_Buz,w
 17955  0C9B  3E0A               	addlw	10
 17956  0C9C  0086               	movwf	6
 17957  0C9D  3001               	movlw	1	; select bank2/3
 17958  0C9E  0087               	movwf	7
 17959  0C9F  0868               	movf	_Buz,w
 17960  0CA0  3E06               	addlw	6
 17961  0CA1  0084               	movwf	4
 17962  0CA2  3001               	movlw	1	; select bank2/3
 17963  0CA3  0085               	movwf	5
 17964  0CA4  3F40               	moviw [0]fsr1
 17965  0CA5  3F80               	movwi [0]fsr0
 17966  0CA6  3F41               	moviw [1]fsr1
 17967  0CA7  3F81               	movwi [1]fsr0
 17968                           
 17969                           ;Buzzer_B1.c: 78: }
 17970  0CA8  0008               	return
 17971  0CA9                     l9613:	
 17972                           
 17973                           ;Buzzer_B1.c: 79: else
 17974                           ;Buzzer_B1.c: 80: {
 17975                           ;Buzzer_B1.c: 81: Buz->GO=0;
 17976  0CA9  0868               	movf	_Buz,w
 17977  0CAA  0086               	movwf	6
 17978  0CAB  3001               	movlw	1	; select bank2/3
 17979  0CAC  0087               	movwf	7
 17980  0CAD  1081               	bcf	1,1
 17981                           
 17982                           ;Buzzer_B1.c: 82: }
 17983                           ;Buzzer_B1.c: 83: }
 17984  0CAE  0008               	return
 17985  0CAF                     l9615:	
 17986                           
 17987                           ;Buzzer_B1.c: 84: else
 17988                           ;Buzzer_B1.c: 85: {
 17989                           ;Buzzer_B1.c: 86: Buz->Switch=1;
 17990  0CAF  0868               	movf	_Buz,w
 17991  0CB0  0086               	movwf	6
 17992  0CB1  3001               	movlw	1	; select bank2/3
 17993  0CB2  0087               	movwf	7
 17994  0CB3  1681               	bsf	1,5
 17995                           
 17996                           ;Buzzer_B1.c: 88: RB3=1;
 17997  0CB4  158D               	bsf	13,3	;volatile
 17998                           
 17999                           ;Buzzer_B1.c: 89: }
 18000                           ;Buzzer_B1.c: 90: }
 18001  0CB5  0008               	return
 18002  0CB6                     l9619:	
 18003                           
 18004                           ;Buzzer_B1.c: 91: else
 18005                           ;Buzzer_B1.c: 92: {
 18006                           ;Buzzer_B1.c: 93: Buz->Switch=0;
 18007  0CB6  0868               	movf	_Buz,w
 18008  0CB7  0086               	movwf	6
 18009  0CB8  3001               	movlw	1	; select bank2/3
 18010  0CB9  0087               	movwf	7
 18011  0CBA  1281               	bcf	1,5
 18012                           
 18013                           ;Buzzer_B1.c: 95: RB3=0;
 18014  0CBB  118D               	bcf	13,3	;volatile
 18015                           
 18016                           ;Buzzer_B1.c: 97: Buz->Count--;
 18017  0CBC  0868               	movf	_Buz,w
 18018  0CBD  3E03               	addlw	3
 18019  0CBE  0086               	movwf	6
 18020  0CBF  3001               	movlw	1	; select bank2/3
 18021  0CC0  0087               	movwf	7
 18022  0CC1  3001               	movlw	1
 18023  0CC2  0281               	subwf	1,f
 18024  0CC3  0008               	return
 18025  0CC4                     __end_of_Buzzer_Main:	
 18026                           
 18027                           	psect	text124
 18028  1978                     __ptext124:	
 18029 ;; *************** function _Buzzer_Initialization *****************
 18030 ;; Defined at:
 18031 ;;		line 10 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Buzzer_B1.c"
 18032 ;; Parameters:    Size  Location     Type
 18033 ;;		None
 18034 ;; Auto vars:     Size  Location     Type
 18035 ;;		None
 18036 ;; Return value:  Size  Location     Type
 18037 ;;		None               void
 18038 ;; Registers used:
 18039 ;;		wreg, fsr1l, fsr1h
 18040 ;; Tracked objects:
 18041 ;;		On entry : 0/0
 18042 ;;		On exit  : 0/0
 18043 ;;		Unchanged: 0/0
 18044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18045 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18046 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18047 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18048 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18049 ;;Total ram usage:        1 bytes
 18050 ;; Hardware stack levels used:    1
 18051 ;; Hardware stack levels required when called:    4
 18052 ;; This function calls:
 18053 ;;		Nothing
 18054 ;; This function is called by:
 18055 ;;		_main
 18056 ;; This function uses a non-reentrant model
 18057 ;;
 18058                           
 18059                           
 18060                           ;psect for function _Buzzer_Initialization
 18061  1978                     _Buzzer_Initialization:	
 18062                           
 18063                           ;Buzzer_B1.c: 12: Buz=&Buz1;
 18064                           
 18065                           ;incstack = 0
 18066                           ; Regs used in _Buzzer_Initialization: [wregfsr1]
 18067  1978  304A               	movlw	_Buz1& (0+255)
 18068  1979  0020               	movlb	0	; select bank0
 18069  197A  00A0               	movwf	??_Buzzer_Initialization
 18070  197B  0820               	movf	??_Buzzer_Initialization,w
 18071  197C  00E8               	movwf	_Buz
 18072                           
 18073                           ;Buzzer_B1.c: 13: Buz->Enable=1;
 18074  197D  0868               	movf	_Buz,w
 18075  197E  0086               	movwf	6
 18076  197F  3001               	movlw	1	; select bank2/3
 18077  1980  0087               	movwf	7
 18078  1981  1401               	bsf	1,0
 18079  1982  0008               	return
 18080  1983                     __end_of_Buzzer_Initialization:	
 18081                           
 18082                           	psect	intentry
 18083  0004                     __pintentry:	
 18084 ;; *************** function _ISR *****************
 18085 ;; Defined at:
 18086 ;;		line 99 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
 18087 ;; Parameters:    Size  Location     Type
 18088 ;;		None
 18089 ;; Auto vars:     Size  Location     Type
 18090 ;;		None
 18091 ;; Return value:  Size  Location     Type
 18092 ;;		None               void
 18093 ;; Registers used:
 18094 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18095 ;; Tracked objects:
 18096 ;;		On entry : 0/0
 18097 ;;		On exit  : 0/0
 18098 ;;		Unchanged: 0/0
 18099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18100 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18102 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18103 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18104 ;;Total ram usage:        1 bytes
 18105 ;; Hardware stack levels used:    1
 18106 ;; Hardware stack levels required when called:    3
 18107 ;; This function calls:
 18108 ;;		_INT_ISR
 18109 ;;		_IOC_ISR
 18110 ;;		_TMR0_ISR
 18111 ;; This function is called by:
 18112 ;;		Interrupt level 1
 18113 ;; This function uses a non-reentrant model
 18114 ;;
 18115                           
 18116  0004                     _ISR:	
 18117                           
 18118                           ;incstack = 0
 18119                           ; Regs used in _ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18120  0004  147E               	bsf	126,0	;set compiler interrupt flag
 18121  0005  3180               	pagesel	$
 18122  0006  0020               	movlb	0	; select bank0
 18123  0007  087F               	movf	127,w
 18124  0008  00F5               	movwf	??_ISR
 18125                           
 18126                           ;MCU_B1.c: 101: IOC_ISR();
 18127  0009  319D  255E  3180   	fcall	_IOC_ISR
 18128                           
 18129                           ;MCU_B1.c: 103: TMR0_ISR();
 18130  000C  3180  2051  3180   	fcall	_TMR0_ISR
 18131                           
 18132                           ;MCU_B1.c: 105: ;;
 18133                           ;MCU_B1.c: 109: INT_ISR();
 18134  000F  3199  21C6         	fcall	_INT_ISR
 18135  0011  0875               	movf	??_ISR,w
 18136  0012  0020               	movlb	0	; select bank0
 18137  0013  00FF               	movwf	127
 18138  0014  107E               	bcf	126,0	;clear compiler interrupt flag
 18139  0015  0009               	retfie
 18140  0016                     __end_of_ISR:	
 18141                           
 18142                           	psect	text126
 18143  0051                     __ptext126:	
 18144 ;; *************** function _TMR0_ISR *****************
 18145 ;; Defined at:
 18146 ;;		line 127 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
 18147 ;; Parameters:    Size  Location     Type
 18148 ;;		None
 18149 ;; Auto vars:     Size  Location     Type
 18150 ;;		None
 18151 ;; Return value:  Size  Location     Type
 18152 ;;		None               void
 18153 ;; Registers used:
 18154 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 18155 ;; Tracked objects:
 18156 ;;		On entry : 0/0
 18157 ;;		On exit  : 0/0
 18158 ;;		Unchanged: 0/0
 18159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18161 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18162 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18163 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18164 ;;Total ram usage:        4 bytes
 18165 ;; Hardware stack levels used:    1
 18166 ;; This function calls:
 18167 ;;		Nothing
 18168 ;; This function is called by:
 18169 ;;		_ISR
 18170 ;; This function uses a non-reentrant model
 18171 ;;
 18172                           
 18173                           
 18174                           ;psect for function _TMR0_ISR
 18175  0051                     _TMR0_ISR:	
 18176                           
 18177                           ;MCU_B1.c: 129: if(TMR0IE && TMR0IF)
 18178                           
 18179                           ;incstack = 0
 18180                           ; Regs used in _TMR0_ISR: [wreg-fsr1h+status,2+status,0]
 18181  0051  1E8B               	btfss	11,5	;volatile
 18182  0052  0008               	return
 18183  0053  1D0B               	btfss	11,2	;volatile
 18184  0054  0008               	return
 18185                           
 18186                           ;MCU_B1.c: 130: {
 18187                           ;MCU_B1.c: 131: TMR0=(256-90);
 18188  0055  30A6               	movlw	166
 18189  0056  0020               	movlb	0	; select bank0
 18190  0057  0095               	movwf	21	;volatile
 18191                           
 18192                           ;MCU_B1.c: 132: TMR0IF=0;
 18193  0058  110B               	bcf	11,2	;volatile
 18194                           
 18195                           ;MCU_B1.c: 137: if(DimmerLights11->GO) { DimmerLights11->Count++; if(DimmerLights11->Cou
      +                          nt >= (DimmerLights11->DimmingValue-Dimmer->Correction)) { DimmerLights11->Count=0; Dimm
      +                          erLights11->GO=0; DimmerLights11->Flag=1; if(DimmerLights11->StatusFlag) { RA7=1; ;; } }
      +                           }
 18196  0059  086B               	movf	_DimmerLights11,w
 18197  005A  0086               	movwf	6
 18198  005B  3001               	movlw	1	; select bank2/3
 18199  005C  0087               	movwf	7
 18200  005D  1C01               	btfss	1,0
 18201  005E  28AA               	goto	i1l7637
 18202  005F  3001               	movlw	1
 18203  0060  00F1               	movwf	??_TMR0_ISR
 18204  0061  086B               	movf	_DimmerLights11,w
 18205  0062  3E03               	addlw	3
 18206  0063  0086               	movwf	6
 18207  0064  3001               	movlw	1	; select bank2/3
 18208  0065  0087               	movwf	7
 18209  0066  0871               	movf	??_TMR0_ISR,w
 18210  0067  0781               	addwf	1,f
 18211  0068  0021               	movlb	1	; select bank1
 18212  0069  0838               	movf	_Dimmer^(0+128),w
 18213  006A  3E02               	addlw	2
 18214  006B  0086               	movwf	6
 18215  006C  0187               	clrf	7
 18216  006D  0801               	movf	1,w
 18217  006E  00F1               	movwf	??_TMR0_ISR
 18218  006F  01F2               	clrf	??_TMR0_ISR+1
 18219  0070  09F1               	comf	??_TMR0_ISR,f
 18220  0071  09F2               	comf	??_TMR0_ISR+1,f
 18221  0072  0AF1               	incf	??_TMR0_ISR,f
 18222  0073  1903               	skipnz
 18223  0074  0AF2               	incf	??_TMR0_ISR+1,f
 18224  0075  0020               	movlb	0	; select bank0
 18225  0076  086B               	movf	_DimmerLights11,w
 18226  0077  3E04               	addlw	4
 18227  0078  0086               	movwf	6
 18228  0079  3001               	movlw	1	; select bank2/3
 18229  007A  0087               	movwf	7
 18230  007B  0801               	movf	1,w
 18231  007C  0771               	addwf	??_TMR0_ISR,w
 18232  007D  00F3               	movwf	??_TMR0_ISR+2
 18233  007E  0872               	movf	??_TMR0_ISR+1,w
 18234  007F  1803               	skipnc
 18235  0080  0A72               	incf	??_TMR0_ISR+1,w
 18236  0081  00F4               	movwf	??_TMR0_ISR+3
 18237  0082  086B               	movf	_DimmerLights11,w
 18238  0083  3E03               	addlw	3
 18239  0084  0086               	movwf	6
 18240  0085  3001               	movlw	1	; select bank2/3
 18241  0086  0087               	movwf	7
 18242  0087  0874               	movf	??_TMR0_ISR+3,w
 18243  0088  3A80               	xorlw	128
 18244  0089  3C80               	sublw	128
 18245  008A  1D03               	skipz
 18246  008B  288E               	goto	u671_25
 18247  008C  0873               	movf	??_TMR0_ISR+2,w
 18248  008D  0201               	subwf	1,w
 18249  008E                     u671_25:	
 18250  008E  1C03               	skipc
 18251  008F  29DD               	goto	i1l7701
 18252  0090  0020               	movlb	0	; select bank0
 18253  0091  086B               	movf	_DimmerLights11,w
 18254  0092  3E03               	addlw	3
 18255  0093  0086               	movwf	6
 18256  0094  3001               	movlw	1	; select bank2/3
 18257  0095  0087               	movwf	7
 18258  0096  0181               	clrf	1
 18259  0097  086B               	movf	_DimmerLights11,w
 18260  0098  0086               	movwf	6
 18261  0099  3001               	movlw	1	; select bank2/3
 18262  009A  0087               	movwf	7
 18263  009B  1001               	bcf	1,0
 18264  009C  086B               	movf	_DimmerLights11,w
 18265  009D  3E07               	addlw	7
 18266  009E  0086               	movwf	6
 18267  009F  3001               	movlw	1	; select bank2/3
 18268  00A0  0087               	movwf	7
 18269  00A1  1401               	bsf	1,0
 18270  00A2  086B               	movf	_DimmerLights11,w
 18271  00A3  0086               	movwf	6
 18272  00A4  3001               	movlw	1	; select bank2/3
 18273  00A5  0087               	movwf	7
 18274  00A6  1F01               	btfss	1,6
 18275  00A7  29DD               	goto	i1l7701
 18276  00A8  178C               	bsf	12,7	;volatile
 18277  00A9  29DD               	goto	i1l7701
 18278  00AA                     i1l7637:	
 18279  00AA  086B               	movf	_DimmerLights11,w
 18280  00AB  3E07               	addlw	7
 18281  00AC  0086               	movwf	6
 18282  00AD  3001               	movlw	1	; select bank2/3
 18283  00AE  0087               	movwf	7
 18284  00AF  1C01               	btfss	1,0
 18285  00B0  29A9               	goto	i1l7693
 18286  00B1  086B               	movf	_DimmerLights11,w
 18287  00B2  3E07               	addlw	7
 18288  00B3  0086               	movwf	6
 18289  00B4  3001               	movlw	1	; select bank2/3
 18290  00B5  0087               	movwf	7
 18291  00B6  1001               	bcf	1,0
 18292  00B7  086B               	movf	_DimmerLights11,w
 18293  00B8  0086               	movwf	6
 18294  00B9  3001               	movlw	1	; select bank2/3
 18295  00BA  0087               	movwf	7
 18296  00BB  1C81               	btfss	1,1
 18297  00BC  29A9               	goto	i1l7693
 18298  00BD  3001               	movlw	1
 18299  00BE  00F1               	movwf	??_TMR0_ISR
 18300  00BF  0A6B               	incf	_DimmerLights11,w
 18301  00C0  0086               	movwf	6
 18302  00C1  3001               	movlw	1	; select bank2/3
 18303  00C2  0087               	movwf	7
 18304  00C3  0871               	movf	??_TMR0_ISR,w
 18305  00C4  0781               	addwf	1,f
 18306  00C5  0A6B               	incf	_DimmerLights11,w
 18307  00C6  0086               	movwf	6
 18308  00C7  3001               	movlw	1	; select bank2/3
 18309  00C8  0087               	movwf	7
 18310  00C9  086B               	movf	_DimmerLights11,w
 18311  00CA  3E02               	addlw	2
 18312  00CB  0084               	movwf	4
 18313  00CC  3001               	movlw	1	; select bank2/3
 18314  00CD  0085               	movwf	5
 18315  00CE  0800               	movf	0,w
 18316  00CF  0201               	subwf	1,w
 18317  00D0  1C03               	skipc
 18318  00D1  29A9               	goto	i1l7693
 18319  00D2  0A6B               	incf	_DimmerLights11,w
 18320  00D3  0086               	movwf	6
 18321  00D4  3001               	movlw	1	; select bank2/3
 18322  00D5  0087               	movwf	7
 18323  00D6  0181               	clrf	1
 18324  00D7  086B               	movf	_DimmerLights11,w
 18325  00D8  0086               	movwf	6
 18326  00D9  3001               	movlw	1	; select bank2/3
 18327  00DA  0087               	movwf	7
 18328  00DB  1D81               	btfss	1,3
 18329  00DC  2913               	goto	i1l7663
 18330  00DD  086B               	movf	_DimmerLights11,w
 18331  00DE  0086               	movwf	6
 18332  00DF  3001               	movlw	1	; select bank2/3
 18333  00E0  0087               	movwf	7
 18334  00E1  1A01               	btfsc	1,4
 18335  00E2  28FA               	goto	i1l7657
 18336  00E3  086B               	movf	_DimmerLights11,w
 18337  00E4  3E04               	addlw	4
 18338  00E5  0086               	movwf	6
 18339  00E6  3001               	movlw	1	; select bank2/3
 18340  00E7  0087               	movwf	7
 18341  00E8  3044               	movlw	68
 18342  00E9  0201               	subwf	1,w
 18343  00EA  1C03               	skipc
 18344  00EB  28F4               	goto	i1l7655
 18345  00EC  086B               	movf	_DimmerLights11,w
 18346  00ED  3E04               	addlw	4
 18347  00EE  0086               	movwf	6
 18348  00EF  3001               	movlw	1	; select bank2/3
 18349  00F0  0087               	movwf	7
 18350  00F1  3001               	movlw	1
 18351  00F2  0281               	subwf	1,f
 18352  00F3  29A9               	goto	i1l7693
 18353  00F4                     i1l7655:	
 18354  00F4  086B               	movf	_DimmerLights11,w
 18355  00F5  0086               	movwf	6
 18356  00F6  3001               	movlw	1	; select bank2/3
 18357  00F7  0087               	movwf	7
 18358  00F8  1601               	bsf	1,4
 18359  00F9  29A9               	goto	i1l7693
 18360  00FA                     i1l7657:	
 18361  00FA  086B               	movf	_DimmerLights11,w
 18362  00FB  3E04               	addlw	4
 18363  00FC  0086               	movwf	6
 18364  00FD  3001               	movlw	1	; select bank2/3
 18365  00FE  0087               	movwf	7
 18366  00FF  3078               	movlw	120
 18367  0100  0201               	subwf	1,w
 18368  0101  1803               	skipnc
 18369  0102  290D               	goto	i1l7661
 18370  0103  3001               	movlw	1
 18371  0104  00F1               	movwf	??_TMR0_ISR
 18372  0105  086B               	movf	_DimmerLights11,w
 18373  0106  3E04               	addlw	4
 18374  0107  0086               	movwf	6
 18375  0108  3001               	movlw	1	; select bank2/3
 18376  0109  0087               	movwf	7
 18377  010A  0871               	movf	??_TMR0_ISR,w
 18378  010B  0781               	addwf	1,f
 18379  010C  29A9               	goto	i1l7693
 18380  010D                     i1l7661:	
 18381  010D  086B               	movf	_DimmerLights11,w
 18382  010E  0086               	movwf	6
 18383  010F  3001               	movlw	1	; select bank2/3
 18384  0110  0087               	movwf	7
 18385  0111  1201               	bcf	1,4
 18386  0112  29A9               	goto	i1l7693
 18387  0113                     i1l7663:	
 18388  0113  086B               	movf	_DimmerLights11,w
 18389  0114  0086               	movwf	6
 18390  0115  3001               	movlw	1	; select bank2/3
 18391  0116  0087               	movwf	7
 18392  0117  1D01               	btfss	1,2
 18393  0118  295A               	goto	i1l7677
 18394  0119  086B               	movf	_DimmerLights11,w
 18395  011A  3E05               	addlw	5
 18396  011B  0086               	movwf	6
 18397  011C  3001               	movlw	1	; select bank2/3
 18398  011D  0087               	movwf	7
 18399  011E  086B               	movf	_DimmerLights11,w
 18400  011F  3E04               	addlw	4
 18401  0120  0084               	movwf	4
 18402  0121  3001               	movlw	1	; select bank2/3
 18403  0122  0085               	movwf	5
 18404  0123  0800               	movf	0,w
 18405  0124  0201               	subwf	1,w
 18406  0125  1803               	skipnc
 18407  0126  292F               	goto	i1l7669
 18408  0127  086B               	movf	_DimmerLights11,w
 18409  0128  3E04               	addlw	4
 18410  0129  0086               	movwf	6
 18411  012A  3001               	movlw	1	; select bank2/3
 18412  012B  0087               	movwf	7
 18413  012C  3001               	movlw	1
 18414  012D  0281               	subwf	1,f
 18415  012E  2946               	goto	i1l7673
 18416  012F                     i1l7669:	
 18417  012F  086B               	movf	_DimmerLights11,w
 18418  0130  3E04               	addlw	4
 18419  0131  0086               	movwf	6
 18420  0132  3001               	movlw	1	; select bank2/3
 18421  0133  0087               	movwf	7
 18422  0134  086B               	movf	_DimmerLights11,w
 18423  0135  3E05               	addlw	5
 18424  0136  0084               	movwf	4
 18425  0137  3001               	movlw	1	; select bank2/3
 18426  0138  0085               	movwf	5
 18427  0139  0800               	movf	0,w
 18428  013A  0201               	subwf	1,w
 18429  013B  1803               	skipnc
 18430  013C  2946               	goto	i1l7673
 18431  013D  3001               	movlw	1
 18432  013E  00F1               	movwf	??_TMR0_ISR
 18433  013F  086B               	movf	_DimmerLights11,w
 18434  0140  3E04               	addlw	4
 18435  0141  0086               	movwf	6
 18436  0142  3001               	movlw	1	; select bank2/3
 18437  0143  0087               	movwf	7
 18438  0144  0871               	movf	??_TMR0_ISR,w
 18439  0145  0781               	addwf	1,f
 18440  0146                     i1l7673:	
 18441  0146  086B               	movf	_DimmerLights11,w
 18442  0147  3E05               	addlw	5
 18443  0148  0086               	movwf	6
 18444  0149  3001               	movlw	1	; select bank2/3
 18445  014A  0087               	movwf	7
 18446  014B  086B               	movf	_DimmerLights11,w
 18447  014C  3E04               	addlw	4
 18448  014D  0084               	movwf	4
 18449  014E  3001               	movlw	1	; select bank2/3
 18450  014F  0085               	movwf	5
 18451  0150  0800               	movf	0,w
 18452  0151  0601               	xorwf	1,w
 18453  0152  1D03               	skipz
 18454  0153  29A9               	goto	i1l7693
 18455  0154  086B               	movf	_DimmerLights11,w
 18456  0155  0086               	movwf	6
 18457  0156  3001               	movlw	1	; select bank2/3
 18458  0157  0087               	movwf	7
 18459  0158  1101               	bcf	1,2
 18460  0159  2975               	goto	i1l7683
 18461  015A                     i1l7677:	
 18462  015A  086B               	movf	_DimmerLights11,w
 18463  015B  0086               	movwf	6
 18464  015C  3001               	movlw	1	; select bank2/3
 18465  015D  0087               	movwf	7
 18466  015E  1E81               	btfss	1,5
 18467  015F  297B               	goto	i1l7685
 18468  0160  086B               	movf	_DimmerLights11,w
 18469  0161  3E04               	addlw	4
 18470  0162  0086               	movwf	6
 18471  0163  3001               	movlw	1	; select bank2/3
 18472  0164  0087               	movwf	7
 18473  0165  3001               	movlw	1
 18474  0166  0281               	subwf	1,f
 18475  0167  086B               	movf	_DimmerLights11,w
 18476  0168  3E05               	addlw	5
 18477  0169  0086               	movwf	6
 18478  016A  3001               	movlw	1	; select bank2/3
 18479  016B  0087               	movwf	7
 18480  016C  086B               	movf	_DimmerLights11,w
 18481  016D  3E04               	addlw	4
 18482  016E  0084               	movwf	4
 18483  016F  3001               	movlw	1	; select bank2/3
 18484  0170  0085               	movwf	5
 18485  0171  0800               	movf	0,w
 18486  0172  0201               	subwf	1,w
 18487  0173  1C03               	skipc
 18488  0174  29A9               	goto	i1l7693
 18489  0175                     i1l7683:	
 18490  0175  086B               	movf	_DimmerLights11,w
 18491  0176  0086               	movwf	6
 18492  0177  3001               	movlw	1	; select bank2/3
 18493  0178  0087               	movwf	7
 18494  0179  1081               	bcf	1,1
 18495  017A  29A9               	goto	i1l7693
 18496  017B                     i1l7685:	
 18497  017B  3001               	movlw	1
 18498  017C  00F1               	movwf	??_TMR0_ISR
 18499  017D  086B               	movf	_DimmerLights11,w
 18500  017E  3E04               	addlw	4
 18501  017F  0086               	movwf	6
 18502  0180  3001               	movlw	1	; select bank2/3
 18503  0181  0087               	movwf	7
 18504  0182  0871               	movf	??_TMR0_ISR,w
 18505  0183  0781               	addwf	1,f
 18506  0184  086B               	movf	_DimmerLights11,w
 18507  0185  3E04               	addlw	4
 18508  0186  0086               	movwf	6
 18509  0187  3001               	movlw	1	; select bank2/3
 18510  0188  0087               	movwf	7
 18511  0189  086B               	movf	_DimmerLights11,w
 18512  018A  3E06               	addlw	6
 18513  018B  0084               	movwf	4
 18514  018C  3001               	movlw	1	; select bank2/3
 18515  018D  0085               	movwf	5
 18516  018E  0800               	movf	0,w
 18517  018F  0201               	subwf	1,w
 18518  0190  1C03               	skipc
 18519  0191  29A9               	goto	i1l7693
 18520  0192  086B               	movf	_DimmerLights11,w
 18521  0193  0086               	movwf	6
 18522  0194  3001               	movlw	1	; select bank2/3
 18523  0195  0087               	movwf	7
 18524  0196  1081               	bcf	1,1
 18525  0197  086B               	movf	_DimmerLights11,w
 18526  0198  0086               	movwf	6
 18527  0199  3001               	movlw	1	; select bank2/3
 18528  019A  0087               	movwf	7
 18529  019B  1301               	bcf	1,6
 18530  019C  086B               	movf	_DimmerLights11,w
 18531  019D  3E0C               	addlw	12
 18532  019E  0086               	movwf	6
 18533  019F  3001               	movlw	1	; select bank2/3
 18534  01A0  0087               	movwf	7
 18535  01A1  1401               	bsf	1,0
 18536  01A2  0021               	movlb	1	; select bank1
 18537  01A3  0838               	movf	_Dimmer^(0+128),w
 18538  01A4  0086               	movwf	6
 18539  01A5  0187               	clrf	7
 18540  01A6  1401               	bsf	1,0
 18541  01A7  0020               	movlb	0	; select bank0
 18542  01A8  118C               	bcf	12,3	;volatile
 18543  01A9                     i1l7693:	
 18544  01A9  1F8C               	btfss	12,7	;volatile
 18545  01AA  29DD               	goto	i1l7701
 18546  01AB  3001               	movlw	1
 18547  01AC  00F1               	movwf	??_TMR0_ISR
 18548  01AD  086B               	movf	_DimmerLights11,w
 18549  01AE  3E08               	addlw	8
 18550  01AF  0086               	movwf	6
 18551  01B0  3001               	movlw	1	; select bank2/3
 18552  01B1  0087               	movwf	7
 18553  01B2  0871               	movf	??_TMR0_ISR,w
 18554  01B3  0781               	addwf	1,f
 18555  01B4  086B               	movf	_DimmerLights11,w
 18556  01B5  3E04               	addlw	4
 18557  01B6  0086               	movwf	6
 18558  01B7  3001               	movlw	1	; select bank2/3
 18559  01B8  0087               	movwf	7
 18560  01B9  0801               	movf	1,w
 18561  01BA  00F1               	movwf	??_TMR0_ISR
 18562  01BB  01F2               	clrf	??_TMR0_ISR+1
 18563  01BC  09F1               	comf	??_TMR0_ISR,f
 18564  01BD  09F2               	comf	??_TMR0_ISR+1,f
 18565  01BE  0AF1               	incf	??_TMR0_ISR,f
 18566  01BF  1903               	skipnz
 18567  01C0  0AF2               	incf	??_TMR0_ISR+1,f
 18568  01C1  0871               	movf	??_TMR0_ISR,w
 18569  01C2  3E78               	addlw	120
 18570  01C3  00F3               	movwf	??_TMR0_ISR+2
 18571  01C4  3000               	movlw	0
 18572  01C5  3D72               	addwfc	??_TMR0_ISR+1,w
 18573  01C6  00F4               	movwf	??_TMR0_ISR+3
 18574  01C7  086B               	movf	_DimmerLights11,w
 18575  01C8  3E08               	addlw	8
 18576  01C9  0086               	movwf	6
 18577  01CA  3001               	movlw	1	; select bank2/3
 18578  01CB  0087               	movwf	7
 18579  01CC  0874               	movf	??_TMR0_ISR+3,w
 18580  01CD  3A80               	xorlw	128
 18581  01CE  3C80               	sublw	128
 18582  01CF  1D03               	skipz
 18583  01D0  29D3               	goto	u688_25
 18584  01D1  0873               	movf	??_TMR0_ISR+2,w
 18585  01D2  0201               	subwf	1,w
 18586  01D3                     u688_25:	
 18587  01D3  1C03               	skipc
 18588  01D4  29DD               	goto	i1l7701
 18589  01D5  0020               	movlb	0	; select bank0
 18590  01D6  086B               	movf	_DimmerLights11,w
 18591  01D7  3E08               	addlw	8
 18592  01D8  0086               	movwf	6
 18593  01D9  3001               	movlw	1	; select bank2/3
 18594  01DA  0087               	movwf	7
 18595  01DB  0181               	clrf	1
 18596  01DC  138C               	bcf	12,7	;volatile
 18597  01DD                     i1l7701:	
 18598                           
 18599                           ;MCU_B1.c: 141: if(DimmerLights22->GO) { DimmerLights22->Count++; if(DimmerLights22->Cou
      +                          nt >= (DimmerLights22->DimmingValue-Dimmer->Correction)) { DimmerLights22->Count=0; Dimm
      +                          erLights22->GO=0; DimmerLights22->Flag=1; if(DimmerLights22->StatusFlag) { RB4=1; } } } 
      +                          el
 18600  01DD  0020               	movlb	0	; select bank0
 18601  01DE  086C               	movf	_DimmerLights22,w
 18602  01DF  0086               	movwf	6
 18603  01E0  3001               	movlw	1	; select bank2/3
 18604  01E1  0087               	movwf	7
 18605  01E2  1C01               	btfss	1,0
 18606  01E3  2A2F               	goto	i1l7715
 18607  01E4  3001               	movlw	1
 18608  01E5  00F1               	movwf	??_TMR0_ISR
 18609  01E6  086C               	movf	_DimmerLights22,w
 18610  01E7  3E03               	addlw	3
 18611  01E8  0086               	movwf	6
 18612  01E9  3001               	movlw	1	; select bank2/3
 18613  01EA  0087               	movwf	7
 18614  01EB  0871               	movf	??_TMR0_ISR,w
 18615  01EC  0781               	addwf	1,f
 18616  01ED  0021               	movlb	1	; select bank1
 18617  01EE  0838               	movf	_Dimmer^(0+128),w
 18618  01EF  3E02               	addlw	2
 18619  01F0  0086               	movwf	6
 18620  01F1  0187               	clrf	7
 18621  01F2  0801               	movf	1,w
 18622  01F3  00F1               	movwf	??_TMR0_ISR
 18623  01F4  01F2               	clrf	??_TMR0_ISR+1
 18624  01F5  09F1               	comf	??_TMR0_ISR,f
 18625  01F6  09F2               	comf	??_TMR0_ISR+1,f
 18626  01F7  0AF1               	incf	??_TMR0_ISR,f
 18627  01F8  1903               	skipnz
 18628  01F9  0AF2               	incf	??_TMR0_ISR+1,f
 18629  01FA  0020               	movlb	0	; select bank0
 18630  01FB  086C               	movf	_DimmerLights22,w
 18631  01FC  3E04               	addlw	4
 18632  01FD  0086               	movwf	6
 18633  01FE  3001               	movlw	1	; select bank2/3
 18634  01FF  0087               	movwf	7
 18635  0200  0801               	movf	1,w
 18636  0201  0771               	addwf	??_TMR0_ISR,w
 18637  0202  00F3               	movwf	??_TMR0_ISR+2
 18638  0203  0872               	movf	??_TMR0_ISR+1,w
 18639  0204  1803               	skipnc
 18640  0205  0A72               	incf	??_TMR0_ISR+1,w
 18641  0206  00F4               	movwf	??_TMR0_ISR+3
 18642  0207  086C               	movf	_DimmerLights22,w
 18643  0208  3E03               	addlw	3
 18644  0209  0086               	movwf	6
 18645  020A  3001               	movlw	1	; select bank2/3
 18646  020B  0087               	movwf	7
 18647  020C  0874               	movf	??_TMR0_ISR+3,w
 18648  020D  3A80               	xorlw	128
 18649  020E  3C80               	sublw	128
 18650  020F  1D03               	skipz
 18651  0210  2A13               	goto	u690_25
 18652  0211  0873               	movf	??_TMR0_ISR+2,w
 18653  0212  0201               	subwf	1,w
 18654  0213                     u690_25:	
 18655  0213  1C03               	skipc
 18656  0214  2B62               	goto	i1l7779
 18657  0215  0020               	movlb	0	; select bank0
 18658  0216  086C               	movf	_DimmerLights22,w
 18659  0217  3E03               	addlw	3
 18660  0218  0086               	movwf	6
 18661  0219  3001               	movlw	1	; select bank2/3
 18662  021A  0087               	movwf	7
 18663  021B  0181               	clrf	1
 18664  021C  086C               	movf	_DimmerLights22,w
 18665  021D  0086               	movwf	6
 18666  021E  3001               	movlw	1	; select bank2/3
 18667  021F  0087               	movwf	7
 18668  0220  1001               	bcf	1,0
 18669  0221  086C               	movf	_DimmerLights22,w
 18670  0222  3E07               	addlw	7
 18671  0223  0086               	movwf	6
 18672  0224  3001               	movlw	1	; select bank2/3
 18673  0225  0087               	movwf	7
 18674  0226  1401               	bsf	1,0
 18675  0227  086C               	movf	_DimmerLights22,w
 18676  0228  0086               	movwf	6
 18677  0229  3001               	movlw	1	; select bank2/3
 18678  022A  0087               	movwf	7
 18679  022B  1F01               	btfss	1,6
 18680  022C  2B62               	goto	i1l7779
 18681  022D  160D               	bsf	13,4	;volatile
 18682  022E  2B62               	goto	i1l7779
 18683  022F                     i1l7715:	
 18684  022F  086C               	movf	_DimmerLights22,w
 18685  0230  3E07               	addlw	7
 18686  0231  0086               	movwf	6
 18687  0232  3001               	movlw	1	; select bank2/3
 18688  0233  0087               	movwf	7
 18689  0234  1C01               	btfss	1,0
 18690  0235  2B2E               	goto	i1l7771
 18691  0236  086C               	movf	_DimmerLights22,w
 18692  0237  3E07               	addlw	7
 18693  0238  0086               	movwf	6
 18694  0239  3001               	movlw	1	; select bank2/3
 18695  023A  0087               	movwf	7
 18696  023B  1001               	bcf	1,0
 18697  023C  086C               	movf	_DimmerLights22,w
 18698  023D  0086               	movwf	6
 18699  023E  3001               	movlw	1	; select bank2/3
 18700  023F  0087               	movwf	7
 18701  0240  1C81               	btfss	1,1
 18702  0241  2B2E               	goto	i1l7771
 18703  0242  3001               	movlw	1
 18704  0243  00F1               	movwf	??_TMR0_ISR
 18705  0244  0A6C               	incf	_DimmerLights22,w
 18706  0245  0086               	movwf	6
 18707  0246  3001               	movlw	1	; select bank2/3
 18708  0247  0087               	movwf	7
 18709  0248  0871               	movf	??_TMR0_ISR,w
 18710  0249  0781               	addwf	1,f
 18711  024A  0A6C               	incf	_DimmerLights22,w
 18712  024B  0086               	movwf	6
 18713  024C  3001               	movlw	1	; select bank2/3
 18714  024D  0087               	movwf	7
 18715  024E  086C               	movf	_DimmerLights22,w
 18716  024F  3E02               	addlw	2
 18717  0250  0084               	movwf	4
 18718  0251  3001               	movlw	1	; select bank2/3
 18719  0252  0085               	movwf	5
 18720  0253  0800               	movf	0,w
 18721  0254  0201               	subwf	1,w
 18722  0255  1C03               	skipc
 18723  0256  2B2E               	goto	i1l7771
 18724  0257  0A6C               	incf	_DimmerLights22,w
 18725  0258  0086               	movwf	6
 18726  0259  3001               	movlw	1	; select bank2/3
 18727  025A  0087               	movwf	7
 18728  025B  0181               	clrf	1
 18729  025C  086C               	movf	_DimmerLights22,w
 18730  025D  0086               	movwf	6
 18731  025E  3001               	movlw	1	; select bank2/3
 18732  025F  0087               	movwf	7
 18733  0260  1D81               	btfss	1,3
 18734  0261  2A98               	goto	i1l7741
 18735  0262  086C               	movf	_DimmerLights22,w
 18736  0263  0086               	movwf	6
 18737  0264  3001               	movlw	1	; select bank2/3
 18738  0265  0087               	movwf	7
 18739  0266  1A01               	btfsc	1,4
 18740  0267  2A7F               	goto	i1l7735
 18741  0268  086C               	movf	_DimmerLights22,w
 18742  0269  3E04               	addlw	4
 18743  026A  0086               	movwf	6
 18744  026B  3001               	movlw	1	; select bank2/3
 18745  026C  0087               	movwf	7
 18746  026D  3044               	movlw	68
 18747  026E  0201               	subwf	1,w
 18748  026F  1C03               	skipc
 18749  0270  2A79               	goto	i1l7733
 18750  0271  086C               	movf	_DimmerLights22,w
 18751  0272  3E04               	addlw	4
 18752  0273  0086               	movwf	6
 18753  0274  3001               	movlw	1	; select bank2/3
 18754  0275  0087               	movwf	7
 18755  0276  3001               	movlw	1
 18756  0277  0281               	subwf	1,f
 18757  0278  2B2E               	goto	i1l7771
 18758  0279                     i1l7733:	
 18759  0279  086C               	movf	_DimmerLights22,w
 18760  027A  0086               	movwf	6
 18761  027B  3001               	movlw	1	; select bank2/3
 18762  027C  0087               	movwf	7
 18763  027D  1601               	bsf	1,4
 18764  027E  2B2E               	goto	i1l7771
 18765  027F                     i1l7735:	
 18766  027F  086C               	movf	_DimmerLights22,w
 18767  0280  3E04               	addlw	4
 18768  0281  0086               	movwf	6
 18769  0282  3001               	movlw	1	; select bank2/3
 18770  0283  0087               	movwf	7
 18771  0284  3078               	movlw	120
 18772  0285  0201               	subwf	1,w
 18773  0286  1803               	skipnc
 18774  0287  2A92               	goto	i1l7739
 18775  0288  3001               	movlw	1
 18776  0289  00F1               	movwf	??_TMR0_ISR
 18777  028A  086C               	movf	_DimmerLights22,w
 18778  028B  3E04               	addlw	4
 18779  028C  0086               	movwf	6
 18780  028D  3001               	movlw	1	; select bank2/3
 18781  028E  0087               	movwf	7
 18782  028F  0871               	movf	??_TMR0_ISR,w
 18783  0290  0781               	addwf	1,f
 18784  0291  2B2E               	goto	i1l7771
 18785  0292                     i1l7739:	
 18786  0292  086C               	movf	_DimmerLights22,w
 18787  0293  0086               	movwf	6
 18788  0294  3001               	movlw	1	; select bank2/3
 18789  0295  0087               	movwf	7
 18790  0296  1201               	bcf	1,4
 18791  0297  2B2E               	goto	i1l7771
 18792  0298                     i1l7741:	
 18793  0298  086C               	movf	_DimmerLights22,w
 18794  0299  0086               	movwf	6
 18795  029A  3001               	movlw	1	; select bank2/3
 18796  029B  0087               	movwf	7
 18797  029C  1D01               	btfss	1,2
 18798  029D  2ADF               	goto	i1l7755
 18799  029E  086C               	movf	_DimmerLights22,w
 18800  029F  3E05               	addlw	5
 18801  02A0  0086               	movwf	6
 18802  02A1  3001               	movlw	1	; select bank2/3
 18803  02A2  0087               	movwf	7
 18804  02A3  086C               	movf	_DimmerLights22,w
 18805  02A4  3E04               	addlw	4
 18806  02A5  0084               	movwf	4
 18807  02A6  3001               	movlw	1	; select bank2/3
 18808  02A7  0085               	movwf	5
 18809  02A8  0800               	movf	0,w
 18810  02A9  0201               	subwf	1,w
 18811  02AA  1803               	skipnc
 18812  02AB  2AB4               	goto	i1l7747
 18813  02AC  086C               	movf	_DimmerLights22,w
 18814  02AD  3E04               	addlw	4
 18815  02AE  0086               	movwf	6
 18816  02AF  3001               	movlw	1	; select bank2/3
 18817  02B0  0087               	movwf	7
 18818  02B1  3001               	movlw	1
 18819  02B2  0281               	subwf	1,f
 18820  02B3  2ACB               	goto	i1l7751
 18821  02B4                     i1l7747:	
 18822  02B4  086C               	movf	_DimmerLights22,w
 18823  02B5  3E04               	addlw	4
 18824  02B6  0086               	movwf	6
 18825  02B7  3001               	movlw	1	; select bank2/3
 18826  02B8  0087               	movwf	7
 18827  02B9  086C               	movf	_DimmerLights22,w
 18828  02BA  3E05               	addlw	5
 18829  02BB  0084               	movwf	4
 18830  02BC  3001               	movlw	1	; select bank2/3
 18831  02BD  0085               	movwf	5
 18832  02BE  0800               	movf	0,w
 18833  02BF  0201               	subwf	1,w
 18834  02C0  1803               	skipnc
 18835  02C1  2ACB               	goto	i1l7751
 18836  02C2  3001               	movlw	1
 18837  02C3  00F1               	movwf	??_TMR0_ISR
 18838  02C4  086C               	movf	_DimmerLights22,w
 18839  02C5  3E04               	addlw	4
 18840  02C6  0086               	movwf	6
 18841  02C7  3001               	movlw	1	; select bank2/3
 18842  02C8  0087               	movwf	7
 18843  02C9  0871               	movf	??_TMR0_ISR,w
 18844  02CA  0781               	addwf	1,f
 18845  02CB                     i1l7751:	
 18846  02CB  086C               	movf	_DimmerLights22,w
 18847  02CC  3E05               	addlw	5
 18848  02CD  0086               	movwf	6
 18849  02CE  3001               	movlw	1	; select bank2/3
 18850  02CF  0087               	movwf	7
 18851  02D0  086C               	movf	_DimmerLights22,w
 18852  02D1  3E04               	addlw	4
 18853  02D2  0084               	movwf	4
 18854  02D3  3001               	movlw	1	; select bank2/3
 18855  02D4  0085               	movwf	5
 18856  02D5  0800               	movf	0,w
 18857  02D6  0601               	xorwf	1,w
 18858  02D7  1D03               	skipz
 18859  02D8  2B2E               	goto	i1l7771
 18860  02D9  086C               	movf	_DimmerLights22,w
 18861  02DA  0086               	movwf	6
 18862  02DB  3001               	movlw	1	; select bank2/3
 18863  02DC  0087               	movwf	7
 18864  02DD  1101               	bcf	1,2
 18865  02DE  2AFA               	goto	i1l7761
 18866  02DF                     i1l7755:	
 18867  02DF  086C               	movf	_DimmerLights22,w
 18868  02E0  0086               	movwf	6
 18869  02E1  3001               	movlw	1	; select bank2/3
 18870  02E2  0087               	movwf	7
 18871  02E3  1E81               	btfss	1,5
 18872  02E4  2B00               	goto	i1l7763
 18873  02E5  086C               	movf	_DimmerLights22,w
 18874  02E6  3E04               	addlw	4
 18875  02E7  0086               	movwf	6
 18876  02E8  3001               	movlw	1	; select bank2/3
 18877  02E9  0087               	movwf	7
 18878  02EA  3001               	movlw	1
 18879  02EB  0281               	subwf	1,f
 18880  02EC  086C               	movf	_DimmerLights22,w
 18881  02ED  3E05               	addlw	5
 18882  02EE  0086               	movwf	6
 18883  02EF  3001               	movlw	1	; select bank2/3
 18884  02F0  0087               	movwf	7
 18885  02F1  086C               	movf	_DimmerLights22,w
 18886  02F2  3E04               	addlw	4
 18887  02F3  0084               	movwf	4
 18888  02F4  3001               	movlw	1	; select bank2/3
 18889  02F5  0085               	movwf	5
 18890  02F6  0800               	movf	0,w
 18891  02F7  0201               	subwf	1,w
 18892  02F8  1C03               	skipc
 18893  02F9  2B2E               	goto	i1l7771
 18894  02FA                     i1l7761:	
 18895  02FA  086C               	movf	_DimmerLights22,w
 18896  02FB  0086               	movwf	6
 18897  02FC  3001               	movlw	1	; select bank2/3
 18898  02FD  0087               	movwf	7
 18899  02FE  1081               	bcf	1,1
 18900  02FF  2B2E               	goto	i1l7771
 18901  0300                     i1l7763:	
 18902  0300  3001               	movlw	1
 18903  0301  00F1               	movwf	??_TMR0_ISR
 18904  0302  086C               	movf	_DimmerLights22,w
 18905  0303  3E04               	addlw	4
 18906  0304  0086               	movwf	6
 18907  0305  3001               	movlw	1	; select bank2/3
 18908  0306  0087               	movwf	7
 18909  0307  0871               	movf	??_TMR0_ISR,w
 18910  0308  0781               	addwf	1,f
 18911  0309  086C               	movf	_DimmerLights22,w
 18912  030A  3E04               	addlw	4
 18913  030B  0086               	movwf	6
 18914  030C  3001               	movlw	1	; select bank2/3
 18915  030D  0087               	movwf	7
 18916  030E  086C               	movf	_DimmerLights22,w
 18917  030F  3E06               	addlw	6
 18918  0310  0084               	movwf	4
 18919  0311  3001               	movlw	1	; select bank2/3
 18920  0312  0085               	movwf	5
 18921  0313  0800               	movf	0,w
 18922  0314  0201               	subwf	1,w
 18923  0315  1C03               	skipc
 18924  0316  2B2E               	goto	i1l7771
 18925  0317  086C               	movf	_DimmerLights22,w
 18926  0318  0086               	movwf	6
 18927  0319  3001               	movlw	1	; select bank2/3
 18928  031A  0087               	movwf	7
 18929  031B  1081               	bcf	1,1
 18930  031C  086C               	movf	_DimmerLights22,w
 18931  031D  0086               	movwf	6
 18932  031E  3001               	movlw	1	; select bank2/3
 18933  031F  0087               	movwf	7
 18934  0320  1301               	bcf	1,6
 18935  0321  086C               	movf	_DimmerLights22,w
 18936  0322  3E0C               	addlw	12
 18937  0323  0086               	movwf	6
 18938  0324  3001               	movlw	1	; select bank2/3
 18939  0325  0087               	movwf	7
 18940  0326  1401               	bsf	1,0
 18941  0327  0021               	movlb	1	; select bank1
 18942  0328  0838               	movf	_Dimmer^(0+128),w
 18943  0329  0086               	movwf	6
 18944  032A  0187               	clrf	7
 18945  032B  1401               	bsf	1,0
 18946  032C  0020               	movlb	0	; select bank0
 18947  032D  138E               	bcf	14,7	;volatile
 18948  032E                     i1l7771:	
 18949  032E  1E0D               	btfss	13,4	;volatile
 18950  032F  2B62               	goto	i1l7779
 18951  0330  3001               	movlw	1
 18952  0331  00F1               	movwf	??_TMR0_ISR
 18953  0332  086C               	movf	_DimmerLights22,w
 18954  0333  3E08               	addlw	8
 18955  0334  0086               	movwf	6
 18956  0335  3001               	movlw	1	; select bank2/3
 18957  0336  0087               	movwf	7
 18958  0337  0871               	movf	??_TMR0_ISR,w
 18959  0338  0781               	addwf	1,f
 18960  0339  086C               	movf	_DimmerLights22,w
 18961  033A  3E04               	addlw	4
 18962  033B  0086               	movwf	6
 18963  033C  3001               	movlw	1	; select bank2/3
 18964  033D  0087               	movwf	7
 18965  033E  0801               	movf	1,w
 18966  033F  00F1               	movwf	??_TMR0_ISR
 18967  0340  01F2               	clrf	??_TMR0_ISR+1
 18968  0341  09F1               	comf	??_TMR0_ISR,f
 18969  0342  09F2               	comf	??_TMR0_ISR+1,f
 18970  0343  0AF1               	incf	??_TMR0_ISR,f
 18971  0344  1903               	skipnz
 18972  0345  0AF2               	incf	??_TMR0_ISR+1,f
 18973  0346  0871               	movf	??_TMR0_ISR,w
 18974  0347  3E78               	addlw	120
 18975  0348  00F3               	movwf	??_TMR0_ISR+2
 18976  0349  3000               	movlw	0
 18977  034A  3D72               	addwfc	??_TMR0_ISR+1,w
 18978  034B  00F4               	movwf	??_TMR0_ISR+3
 18979  034C  086C               	movf	_DimmerLights22,w
 18980  034D  3E08               	addlw	8
 18981  034E  0086               	movwf	6
 18982  034F  3001               	movlw	1	; select bank2/3
 18983  0350  0087               	movwf	7
 18984  0351  0874               	movf	??_TMR0_ISR+3,w
 18985  0352  3A80               	xorlw	128
 18986  0353  3C80               	sublw	128
 18987  0354  1D03               	skipz
 18988  0355  2B58               	goto	u707_25
 18989  0356  0873               	movf	??_TMR0_ISR+2,w
 18990  0357  0201               	subwf	1,w
 18991  0358                     u707_25:	
 18992  0358  1C03               	skipc
 18993  0359  2B62               	goto	i1l7779
 18994  035A  0020               	movlb	0	; select bank0
 18995  035B  086C               	movf	_DimmerLights22,w
 18996  035C  3E08               	addlw	8
 18997  035D  0086               	movwf	6
 18998  035E  3001               	movlw	1	; select bank2/3
 18999  035F  0087               	movwf	7
 19000  0360  0181               	clrf	1
 19001  0361  120D               	bcf	13,4	;volatile
 19002  0362                     i1l7779:	
 19003                           
 19004                           ;MCU_B1.c: 150: Timer0->Count++;
 19005  0362  0021               	movlb	1	; select bank1
 19006  0363  0A6E               	incf	_Timer0^(0+128),w
 19007  0364  0086               	movwf	6
 19008  0365  0187               	clrf	7
 19009  0366  3001               	movlw	1
 19010  0367  0781               	addwf	1,f
 19011  0368  3141               	addfsr 1,1
 19012  0369  1803               	skipnc
 19013  036A  0A81               	incf	1,f
 19014                           
 19015                           ;MCU_B1.c: 151: if(Timer0->Count == 200)
 19016  036B  0A6E               	incf	_Timer0^(0+128),w
 19017  036C  0086               	movwf	6
 19018  036D  0187               	clrf	7
 19019  036E  3F40               	moviw [0]fsr1
 19020  036F  3AC8               	xorlw	200
 19021  0370  1D03               	skipz
 19022  0371  2B74               	goto	u708_25
 19023  0372  3F41               	moviw [1]fsr1
 19024  0373  3A00               	xorlw	0
 19025  0374                     u708_25:	
 19026  0374  1D03               	skipz
 19027  0375  2B82               	goto	i1l1648
 19028                           
 19029                           ;MCU_B1.c: 152: {
 19030                           ;MCU_B1.c: 153: Timer0->Count=0;
 19031  0376  0A6E               	incf	_Timer0^(0+128),w
 19032  0377  0086               	movwf	6
 19033  0378  0187               	clrf	7
 19034  0379  3000               	movlw	0
 19035  037A  3FC0               	movwi [0]fsr1
 19036  037B  3FC1               	movwi [1]fsr1
 19037                           
 19038                           ;MCU_B1.c: 154: TMain->T0_Timerout=1;
 19039  037C  0020               	movlb	0	; select bank0
 19040  037D  086F               	movf	_TMain,w
 19041  037E  0086               	movwf	6
 19042  037F  3001               	movlw	1	; select bank2/3
 19043  0380  0087               	movwf	7
 19044  0381  1481               	bsf	1,1
 19045  0382                     i1l1648:	
 19046                           
 19047                           ;MCU_B1.c: 155: }
 19048                           ;MCU_B1.c: 158: if(Buz->GO)
 19049  0382  0020               	movlb	0	; select bank0
 19050  0383  0868               	movf	_Buz,w
 19051  0384  0086               	movwf	6
 19052  0385  3001               	movlw	1	; select bank2/3
 19053  0386  0087               	movwf	7
 19054  0387  1C81               	btfss	1,1
 19055  0388  0008               	return
 19056                           
 19057                           ;MCU_B1.c: 159: {
 19058                           ;MCU_B1.c: 160: Buz->Time++;
 19059  0389  0A68               	incf	_Buz,w
 19060  038A  0086               	movwf	6
 19061  038B  3001               	movlw	1	; select bank2/3
 19062  038C  0087               	movwf	7
 19063  038D  3001               	movlw	1
 19064  038E  0781               	addwf	1,f
 19065  038F  3141               	addfsr 1,1
 19066  0390  1803               	skipnc
 19067  0391  0A81               	incf	1,f
 19068  0392  0008               	return
 19069  0393                     __end_of_TMR0_ISR:	
 19070                           
 19071                           	psect	text127
 19072  1D5E                     __ptext127:	
 19073 ;; *************** function _IOC_ISR *****************
 19074 ;; Defined at:
 19075 ;;		line 342 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
 19076 ;; Parameters:    Size  Location     Type
 19077 ;;		None
 19078 ;; Auto vars:     Size  Location     Type
 19079 ;;		None
 19080 ;; Return value:  Size  Location     Type
 19081 ;;		None               void
 19082 ;; Registers used:
 19083 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19084 ;; Tracked objects:
 19085 ;;		On entry : 0/0
 19086 ;;		On exit  : 0/0
 19087 ;;		Unchanged: 0/0
 19088 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19090 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19091 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19092 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19093 ;;Total ram usage:        1 bytes
 19094 ;; Hardware stack levels used:    1
 19095 ;; Hardware stack levels required when called:    1
 19096 ;; This function calls:
 19097 ;;		_setDimmerReClock
 19098 ;; This function is called by:
 19099 ;;		_ISR
 19100 ;; This function uses a non-reentrant model
 19101 ;;
 19102                           
 19103                           
 19104                           ;psect for function _IOC_ISR
 19105  1D5E                     _IOC_ISR:	
 19106                           
 19107                           ;MCU_B1.c: 344: if(IOCIE && IOCBF2)
 19108                           
 19109                           ;incstack = 0
 19110                           ; Regs used in _IOC_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 19111  1D5E  1D8B               	btfss	11,3	;volatile
 19112  1D5F  0008               	return
 19113  1D60  0027               	movlb	7	; select bank7
 19114  1D61  1D16               	btfss	22,2	;volatile
 19115  1D62  0008               	return
 19116                           
 19117                           ;MCU_B1.c: 345: {
 19118                           ;MCU_B1.c: 346: IOCBF2=0;
 19119  1D63  1116               	bcf	22,2	;volatile
 19120                           
 19121                           ;MCU_B1.c: 347: IOCIF=0;
 19122  1D64  100B               	bcf	11,0	;volatile
 19123                           
 19124                           ;MCU_B1.c: 348: if(TMain->PowerON)
 19125  1D65  0020               	movlb	0	; select bank0
 19126  1D66  086F               	movf	_TMain,w
 19127  1D67  0086               	movwf	6
 19128  1D68  3001               	movlw	1	; select bank2/3
 19129  1D69  0087               	movwf	7
 19130  1D6A  1C01               	btfss	1,0
 19131  1D6B  0008               	return
 19132                           
 19133                           ;MCU_B1.c: 349: {
 19134                           ;MCU_B1.c: 353: setDimmerReClock();
 19135  1D6C  319C  240A  319D   	fcall	_setDimmerReClock
 19136                           
 19137                           ;MCU_B1.c: 354: if(RB2)
 19138  1D6F  0020               	movlb	0	; select bank0
 19139  1D70  1D0D               	btfss	13,2	;volatile
 19140  1D71  2D79               	goto	i1l7613
 19141                           
 19142                           ;MCU_B1.c: 355: {
 19143                           ;MCU_B1.c: 356: Dimmer->Correction=0;
 19144  1D72  0021               	movlb	1	; select bank1
 19145  1D73  0838               	movf	_Dimmer^(0+128),w
 19146  1D74  3E02               	addlw	2
 19147  1D75  0086               	movwf	6
 19148  1D76  0187               	clrf	7
 19149  1D77  0181               	clrf	1
 19150                           
 19151                           ;MCU_B1.c: 357: }
 19152  1D78  0008               	return
 19153  1D79                     i1l7613:	
 19154                           
 19155                           ;MCU_B1.c: 358: else
 19156                           ;MCU_B1.c: 359: {
 19157                           ;MCU_B1.c: 360: Dimmer->Correction=8;
 19158  1D79  3008               	movlw	8
 19159  1D7A  00F1               	movwf	??_IOC_ISR
 19160  1D7B  0021               	movlb	1	; select bank1
 19161  1D7C  0838               	movf	_Dimmer^(0+128),w
 19162  1D7D  3E02               	addlw	2
 19163  1D7E  0086               	movwf	6
 19164  1D7F  0187               	clrf	7
 19165  1D80  0871               	movf	??_IOC_ISR,w
 19166  1D81  0081               	movwf	1
 19167  1D82  0008               	return
 19168  1D83                     __end_of_IOC_ISR:	
 19169                           
 19170                           	psect	text128
 19171  1C0A                     __ptext128:	
 19172 ;; *************** function _setDimmerReClock *****************
 19173 ;; Defined at:
 19174 ;;		line 168 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
 19175 ;; Parameters:    Size  Location     Type
 19176 ;;		None
 19177 ;; Auto vars:     Size  Location     Type
 19178 ;;		None
 19179 ;; Return value:  Size  Location     Type
 19180 ;;		None               void
 19181 ;; Registers used:
 19182 ;;		wreg, fsr1l, fsr1h
 19183 ;; Tracked objects:
 19184 ;;		On entry : 0/0
 19185 ;;		On exit  : 0/0
 19186 ;;		Unchanged: 0/0
 19187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19191 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19192 ;;Total ram usage:        0 bytes
 19193 ;; Hardware stack levels used:    1
 19194 ;; This function calls:
 19195 ;;		Nothing
 19196 ;; This function is called by:
 19197 ;;		_IOC_ISR
 19198 ;; This function uses a non-reentrant model
 19199 ;;
 19200                           
 19201                           
 19202                           ;psect for function _setDimmerReClock
 19203  1C0A                     _setDimmerReClock:	
 19204                           
 19205                           ;MCU_B1.c: 170: TMR0=255;
 19206                           
 19207                           ;incstack = 0
 19208                           ; Regs used in _setDimmerReClock: [wregfsr1]
 19209  1C0A  30FF               	movlw	255
 19210  1C0B  0020               	movlb	0	; select bank0
 19211  1C0C  0095               	movwf	21	;volatile
 19212                           
 19213                           ;MCU_B1.c: 175: if(!DimmerLights11->GO)
 19214  1C0D  086B               	movf	_DimmerLights11,w
 19215  1C0E  0086               	movwf	6
 19216  1C0F  3001               	movlw	1	; select bank2/3
 19217  1C10  0087               	movwf	7
 19218  1C11  1801               	btfsc	1,0
 19219  1C12  2C18               	goto	i1l1653
 19220                           
 19221                           ;MCU_B1.c: 176: {
 19222                           ;MCU_B1.c: 177: DimmerLights11->GO=1;
 19223  1C13  086B               	movf	_DimmerLights11,w
 19224  1C14  0086               	movwf	6
 19225  1C15  3001               	movlw	1	; select bank2/3
 19226  1C16  0087               	movwf	7
 19227  1C17  1401               	bsf	1,0
 19228  1C18                     i1l1653:	
 19229                           
 19230                           ;MCU_B1.c: 178: }
 19231                           ;MCU_B1.c: 202: if(!DimmerLights22->GO)
 19232  1C18  086C               	movf	_DimmerLights22,w
 19233  1C19  0086               	movwf	6
 19234  1C1A  3001               	movlw	1	; select bank2/3
 19235  1C1B  0087               	movwf	7
 19236  1C1C  1801               	btfsc	1,0
 19237  1C1D  0008               	return
 19238                           
 19239                           ;MCU_B1.c: 203: {
 19240                           ;MCU_B1.c: 204: DimmerLights22->GO=1;
 19241  1C1E  086C               	movf	_DimmerLights22,w
 19242  1C1F  0086               	movwf	6
 19243  1C20  3001               	movlw	1	; select bank2/3
 19244  1C21  0087               	movwf	7
 19245  1C22  1401               	bsf	1,0
 19246  1C23  0008               	return
 19247  1C24                     __end_of_setDimmerReClock:	
 19248                           
 19249                           	psect	text129
 19250  19C6                     __ptext129:	
 19251 ;; *************** function _INT_ISR *****************
 19252 ;; Defined at:
 19253 ;;		line 293 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
 19254 ;; Parameters:    Size  Location     Type
 19255 ;;		None
 19256 ;; Auto vars:     Size  Location     Type
 19257 ;;		None
 19258 ;; Return value:  Size  Location     Type
 19259 ;;		None               void
 19260 ;; Registers used:
 19261 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19262 ;; Tracked objects:
 19263 ;;		On entry : 0/0
 19264 ;;		On exit  : 0/0
 19265 ;;		Unchanged: 0/0
 19266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19270 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19271 ;;Total ram usage:        0 bytes
 19272 ;; Hardware stack levels used:    1
 19273 ;; Hardware stack levels required when called:    2
 19274 ;; This function calls:
 19275 ;;		_setRF_ReceiveGO
 19276 ;; This function is called by:
 19277 ;;		_ISR
 19278 ;; This function uses a non-reentrant model
 19279 ;;
 19280                           
 19281                           
 19282                           ;psect for function _INT_ISR
 19283  19C6                     _INT_ISR:	
 19284                           
 19285                           ;MCU_B1.c: 295: if(INTE && INTF)
 19286                           
 19287                           ;incstack = 0
 19288                           ; Regs used in _INT_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 19289  19C6  1E0B               	btfss	11,4	;volatile
 19290  19C7  0008               	return
 19291  19C8  1C8B               	btfss	11,1	;volatile
 19292  19C9  0008               	return
 19293                           
 19294                           ;MCU_B1.c: 296: {
 19295                           ;MCU_B1.c: 297: INTF=0;
 19296  19CA  108B               	bcf	11,1	;volatile
 19297                           
 19298                           ;MCU_B1.c: 298: INTE=0;
 19299  19CB  120B               	bcf	11,4	;volatile
 19300                           
 19301                           ;MCU_B1.c: 299: setRF_ReceiveGO(1,1);
 19302  19CC  01F3               	clrf	setRF_ReceiveGO@command
 19303  19CD  0AF3               	incf	setRF_ReceiveGO@command,f
 19304  19CE  3001               	movlw	1
 19305  19CF  3199  21BA         	fcall	_setRF_ReceiveGO
 19306  19D1  0008               	return
 19307  19D2                     __end_of_INT_ISR:	
 19308                           
 19309                           	psect	text130
 19310  19BA                     __ptext130:	
 19311 ;; *************** function _setRF_ReceiveGO *****************
 19312 ;; Defined at:
 19313 ;;		line 37 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
 19314 ;; Parameters:    Size  Location     Type
 19315 ;;  rf              1    wreg     unsigned char 
 19316 ;;  command         1    2[COMMON] unsigned char 
 19317 ;; Auto vars:     Size  Location     Type
 19318 ;;  rf              1    3[COMMON] unsigned char 
 19319 ;; Return value:  Size  Location     Type
 19320 ;;		None               void
 19321 ;; Registers used:
 19322 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19323 ;; Tracked objects:
 19324 ;;		On entry : 0/0
 19325 ;;		On exit  : 0/0
 19326 ;;		Unchanged: 0/0
 19327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19328 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19329 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19331 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19332 ;;Total ram usage:        2 bytes
 19333 ;; Hardware stack levels used:    1
 19334 ;; Hardware stack levels required when called:    1
 19335 ;; This function calls:
 19336 ;;		i1_RfPointSelect
 19337 ;; This function is called by:
 19338 ;;		_INT_ISR
 19339 ;; This function uses a non-reentrant model
 19340 ;;
 19341                           
 19342                           
 19343                           ;psect for function _setRF_ReceiveGO
 19344  19BA                     _setRF_ReceiveGO:	
 19345                           
 19346                           ;incstack = 0
 19347                           ; Regs used in _setRF_ReceiveGO: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 19348                           ;setRF_ReceiveGO@rf stored from wreg
 19349  19BA  00F4               	movwf	setRF_ReceiveGO@rf
 19350                           
 19351                           ;RF_Control_B1.c: 39: RfPointSelect(rf);
 19352  19BB  0874               	movf	setRF_ReceiveGO@rf,w
 19353  19BC  3199  216E         	fcall	i1_RfPointSelect
 19354                           
 19355                           ;RF_Control_B1.c: 40: RF->ReceiveGO=command;
 19356  19BE  0877               	movf	_RF,w
 19357  19BF  0086               	movwf	6
 19358  19C0  0187               	clrf	7
 19359  19C1  0873               	movf	setRF_ReceiveGO@command,w
 19360  19C2  1081               	bcf	1,1
 19361  19C3  1D03               	skipz
 19362  19C4  1481               	bsf	1,1
 19363  19C5  0008               	return
 19364  19C6                     __end_of_setRF_ReceiveGO:	
 19365                           
 19366                           	psect	text131
 19367  196E                     __ptext131:	
 19368 ;; *************** function i1_RfPointSelect *****************
 19369 ;; Defined at:
 19370 ;;		line 7 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
 19371 ;; Parameters:    Size  Location     Type
 19372 ;;  rf              1    wreg     unsigned char 
 19373 ;; Auto vars:     Size  Location     Type
 19374 ;;  rf              1    1[COMMON] unsigned char 
 19375 ;; Return value:  Size  Location     Type
 19376 ;;		None               void
 19377 ;; Registers used:
 19378 ;;		wreg
 19379 ;; Tracked objects:
 19380 ;;		On entry : 0/0
 19381 ;;		On exit  : 0/0
 19382 ;;		Unchanged: 0/0
 19383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19385 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19386 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19387 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19388 ;;Total ram usage:        2 bytes
 19389 ;; Hardware stack levels used:    1
 19390 ;; This function calls:
 19391 ;;		Nothing
 19392 ;; This function is called by:
 19393 ;;		_setRF_ReceiveGO
 19394 ;; This function uses a non-reentrant model
 19395 ;;
 19396                           
 19397                           
 19398                           ;psect for function i1_RfPointSelect
 19399  196E                     i1_RfPointSelect:	
 19400                           
 19401                           ;incstack = 0
 19402                           ; Regs used in i1_RfPointSelect: [wreg]
 19403                           ;i1RfPointSelect@rf stored from wreg
 19404  196E  00F2               	movwf	i1RfPointSelect@rf
 19405                           
 19406                           ;RF_Control_B1.c: 10: if(rf == 1)
 19407  196F  0872               	movf	i1RfPointSelect@rf,w
 19408  1970  3A01               	xorlw	1
 19409  1971  1D03               	skipz
 19410  1972  0008               	return
 19411                           
 19412                           ;RF_Control_B1.c: 11: {
 19413                           ;RF_Control_B1.c: 12: RF=&RF1;
 19414  1973  30E5               	movlw	_RF1& (0+255)
 19415  1974  00F1               	movwf	??i1_RfPointSelect
 19416  1975  0871               	movf	??i1_RfPointSelect,w
 19417  1976  00F7               	movwf	_RF
 19418  1977  0008               	return
 19419  1978                     __end_ofi1_RfPointSelect:	
 19420  007E                     btemp	set	126	;btemp
 19421  007E                     pic14e$flags	set	126
 19422  007E                     wtemp	set	126
 19423  007E                     wtemp0	set	126
 19424  0080                     wtemp1	set	128
 19425  0082                     wtemp2	set	130
 19426  0084                     wtemp3	set	132
 19427  0086                     wtemp4	set	134
 19428  0088                     wtemp5	set	136
 19429  007F                     wtemp6	set	127
 19430  007E                     ttemp	set	126
 19431  007E                     ttemp0	set	126
 19432  0081                     ttemp1	set	129
 19433  0084                     ttemp2	set	132
 19434  0087                     ttemp3	set	135
 19435  007F                     ttemp4	set	127
 19436  007E                     ltemp	set	126
 19437  007E                     ltemp0	set	126
 19438  0082                     ltemp1	set	130
 19439  0086                     ltemp2	set	134
 19440  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    102
    Data        32
    BSS         217
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      10
    BANK0            80     72      80
    BANK1            80      4      79
    BANK2            80      0      80
    BANK3            80      0      49
    BANK4            80      0      37
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    DimmerLightsIntr	PTR struct DimmerLights size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    Sw	PTR struct Switch size(1) Largest target is 9
		 -> NULL(NULL[0]), Sw2(BANK2[9]), Sw1(BANK2[9]), 

    RFSW	PTR struct RFSW size(1) Largest target is 1
		 -> NULL(NULL[0]), RFSW2(BANK1[1]), RFSW1(BANK1[1]), 

    RF	PTR struct RF size(1) Largest target is 3
		 -> NULL(NULL[0]), RF1(BANK1[3]), 

    PF	PTR struct PF size(1) Largest target is 8
		 -> NULL(NULL[0]), PF1(BANK2[8]), 

    Temp	PTR struct OverTemp size(1) Largest target is 14
		 -> NULL(NULL[0]), Temp1(BANK2[14]), 

    Timer0	PTR struct Timer0 size(1) Largest target is 9
		 -> NULL(NULL[0]), VarTimer0(BANK1[9]), 

    LED	PTR struct LED size(1) Largest target is 4
		 -> NULL(NULL[0]), VarErrLED(BANK1[4]), VarLED2(BANK1[4]), VarLED1(BANK1[4]), 

    TMain	PTR struct TMain size(1) Largest target is 17
		 -> NULL(NULL[0]), VarTMain(BANK3[17]), 

    Memory	PTR struct FlashMemory size(1) Largest target is 37
		 -> NULL(NULL[0]), VarMemory(BANK4[37]), 

    Dimmer	PTR struct Dimmer size(1) Largest target is 3
		 -> NULL(NULL[0]), Dimmer1(BANK1[3]), 

    DimmerLights22	PTR struct DimmerLights size(1) Largest target is 14
		 -> NULL(NULL[0]), DimmerLights2(BANK2[14]), 

    DimmerLights11	PTR struct DimmerLights size(1) Largest target is 14
		 -> NULL(NULL[0]), DimmerLights1(BANK2[14]), 

    DimmerLights	PTR struct DimmerLights size(1) Largest target is 14
		 -> NULL(NULL[0]), DimmerLights2(BANK2[14]), DimmerLights1(BANK2[14]), 

    Product	PTR struct Product size(1) Largest target is 32
		 -> NULL(NULL[0]), VarProduct(BANK3[32]), 

    DelayOff	PTR struct DelayOff size(1) Largest target is 5
		 -> NULL(NULL[0]), DlySw2(BANK1[5]), DlySw1(BANK1[5]), 

    Buz	PTR struct Buzzer size(1) Largest target is 12
		 -> NULL(NULL[0]), Buz1(BANK2[12]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_TMR0_ISR
    _INT_ISR->_setRF_ReceiveGO
    _setRF_ReceiveGO->i1_RfPointSelect

Critical Paths under _main in BANK0

    _getTemp_AD->_getAD
    _getPowerFault_AD->_getAD
    _Temp_Main->_setTemp_Main
    _setTemp_Main->_setOverTemp_Exceptions
    _setOverTemp_Exceptions->_DimmerLights_Exceptions
    _Temp_Initialization->_setTemp_Initialization
    _Switch_Main->_setSw_Main
    _setSw_Main->_Sw_DimmerOffFunc
    _setRF_Learn->_RfPointSelect
    _Sw_DimmerOnFunc->_setRF_DimmerLights
    _Sw_DimmerOffFunc->_setRF_DimmerLights
    _Sw_DimmerAdjFunc->_setDimmerLights_AdjGo
    _Sw_DimmerAdjFunc->_setDimmerLights_TriggerAdj
    _Sw_DimmerAdjFunc->_setRFSW_Status
    _setDimmerLights_TriggerAdj->_DimmerLightsPointSelect
    _setDimmerLights_AdjGo->_DimmerLightsPointSelect
    _Switch_Initialization->_setSw_Initialization
    _setSw_Initialization->_setLED
    _getRxData->_setControl_Lights_Table
    _setLog_Code->_setBuz
    _setControl_Lights_Table->_setRFSW_AdjControl
    _setRFSW_Control->_setRF_DimmerLights
    _setDelayOff_GO->_DelayTimejudge
    _setRFSW_AdjControl->_setRF_DimmerValue
    _setRF_DimmerValue->_setDimmerLights_AdjRF
    _setDimmerLights_AdjRF->_getPercentValue
    _getPercentValue->___fttol
    ___ftmul->___awtoft
    ___ftadd->___ftmul
    _RF_RxDisable->_CC2500_WriteCommand
    _CC2500_TxData->_CC2500_WriteCommand
    _CC2500_RxData->_CC2500_ReadStatus
    _CC2500_RxData->_CC2500_WriteCommand
    _CC2500_RxData->_setRF_RxStatus
    _setRF_RxStatus->_RfPointSelect
    _CC2500_ReadStatus->_CC2500_ReadByte
    _CC2500_ReadStatus->_CC2500_WriteByte
    _RF_Initialization->_setRF_Initialization
    _PowerFault_Main->_setPowerFault_Main
    _setPowerFault_Main->_setPowerFault_Exceptions
    _setPowerFault_Exceptions->_DimmerLights_Exceptions
    _DimmerLights_Exceptions->_setBuz
    _setDimmerLights_TriggerERROR->_DimmerLightsPointSelect
    _setDimmerLights_ERROR->_setLED
    _setDimmerLights_ERROR->_setRFSW_Status
    _setDimmerLights_ERROR->_setSw_Status
    _PowerFault_Initialization->_setPowerFault_Initialization
    _Mcu_Initialization->_TMR0_Set
    _MainT->_setBuz
    _setSw_Enable->_SwPointSelect
    _setRF_Enable->_RfPointSelect
    _LED_Main->_setLED_Main
    _setLED_Main->_LedPointSelect
    _LED_Initialization->_setLED_Initialization
    _setLED_Initialization->_setLED
    _Flash_Memory_Main->_Flash_Memory_Modify
    _Flash_Memory_Modify->_Flash_Memory_Read
    _Flash_Memory_Initialization->_setPercentValue
    _DimmerLights_Main->_setDimmerLights_Main
    _setDimmerLights_Main->_setDimmerLights_Adj
    _setDimmerLights_Adj->_setRF_DimmerLights
    _setDimmerLights->_setLED
    _setLED->_LedPointSelect
    _DimmerLights_Close->_getDimmerLights_StatusFlag
    _DimmerLights_Initialization->_setDimmerLights_Initialization
    _setDimmerLights_Initialization->_DimmerLightsPointSelect
    _DelayOff_Main->_DlyOff_Main
    _DlyOff_Main->_setRF_DimmerLights
    _setTxData->_RfPointSelect
    _setSw_Status->_SwPointSelect
    _setRF_DimmerLights->_setPercentValue
    _setPercentValue->___fttol
    ___fttol->___ftadd
    ___ftdiv->___awtoft
    ___awtoft->___ftpack
    _setRFSW_Status->_RfSWPointSelect
    _setDimmerLights_Trigger->_DimmerLightsPointSelect
    _setDimmerLights_Switch->_DimmerLightsPointSelect
    _setBuz->___wmul
    _DelayOff_Initialization->_DlyOff_Initialization
    _DlyOff_Initialization->_DelayOffPointSelect
    _CC2500_PowerOnInitial->_CC2500_InitSetREG
    _CC2500_SIDLEMode->_CC2500_WriteCommand
    _CC2500_PowerRST->_DelayTime_1us
    _CC2500_InitSetREG->_CC2500_WriteREG
    _CC2500_InitPATable->_CC2500_WriteREG
    _CC2500_WriteREG->_CC2500_WriteByte
    _CC2500_FrequencyCabr->_DelayTime_1us
    _CC2500_ClearTXFIFO->_CC2500_WriteCommand
    _CC2500_ClearRXFIFO->_CC2500_WriteCommand
    _CC2500_WriteCommand->_CC2500_WriteByte

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _Switch_Main->_setSw_Main
    _RF_Main->_setRF_Main
    _setRF_Main->_getRxData

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   96748
              _Buzzer_Initialization
                        _Buzzer_Main
              _CC2500_PowerOnInitial
            _DelayOff_Initialization
                      _DelayOff_Main
        _DimmerLights_Initialization
                  _DimmerLights_Main
        _Flash_Memory_Initialization
                  _Flash_Memory_Main
                 _LED_Initialization
                           _LED_Main
                              _MainT
               _MainT_Initialization
                   _MainT_ResetClock
                 _Mcu_Initialization
          _PowerFault_Initialization
                    _PowerFault_Main
                  _RF_Initialization
                            _RF_Main
              _Switch_Initialization
                        _Switch_Main
                _Temp_Initialization
                          _Temp_Main
                   _getPowerFault_AD
                         _getTemp_AD
 ---------------------------------------------------------------------------------
 (1) _getTemp_AD                                           5     5      0     223
                                              4 BANK0      5     5      0
                              _getAD
 ---------------------------------------------------------------------------------
 (1) _getPowerFault_AD                                     5     5      0     223
                                              4 BANK0      5     5      0
                              _getAD
 ---------------------------------------------------------------------------------
 (2) _getAD                                                4     1      3     192
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (1) _Temp_Main                                            0     0      0    6658
                       _setTemp_Main
 ---------------------------------------------------------------------------------
 (2) _setTemp_Main                                         3     3      0    6658
                                             13 BANK0      3     3      0
                         _getPF_Safe
             _setOverTemp_Exceptions
 ---------------------------------------------------------------------------------
 (3) _setOverTemp_Exceptions                               2     2      0    6658
                                             11 BANK0      2     2      0
            _DimmerLights_Exceptions
                             _setBuz
                             _setLED
                       _setRF_Enable
                       _setSw_Enable
 ---------------------------------------------------------------------------------
 (3) _getPF_Safe                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Temp_Initialization                                  0     0      0       0
             _setTemp_Initialization
 ---------------------------------------------------------------------------------
 (2) _setTemp_Initialization                               1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Switch_Main                                          0     0      0   22040
                         _setSw_Main
 ---------------------------------------------------------------------------------
 (2) _setSw_Main                                           5     5      0   22040
                                             69 BANK0      2     2      0
                                              0 BANK1      3     3      0
                      _SwPointSelect
                   _Sw_DimmerAdjFunc
                   _Sw_DimmerOffFunc
                    _Sw_DimmerOnFunc
                             _setBuz
                        _setRF_Learn
 ---------------------------------------------------------------------------------
 (3) _setRF_Learn                                          2     1      1     288
                                              2 BANK0      2     1      1
                      _RfPointSelect
 ---------------------------------------------------------------------------------
 (3) _Sw_DimmerOnFunc                                      2     2      0    9518
                                             66 BANK0      2     2      0
                             _setBuz
             _setDimmerLights_Switch
            _setDimmerLights_Trigger
                     _setRFSW_Status
                 _setRF_DimmerLights
                          _setTxData
 ---------------------------------------------------------------------------------
 (3) _Sw_DimmerOffFunc                                     3     3      0    9429
                                             66 BANK0      3     3      0
                     _setDelayOff_GO
              _setDimmerLights_AdjGo
             _setDimmerLights_Switch
            _setDimmerLights_Trigger
         _setDimmerLights_TriggerAdj
                 _setRF_DimmerLights
                          _setTxData
 ---------------------------------------------------------------------------------
 (3) _Sw_DimmerAdjFunc                                     2     2      0    1282
                                              4 BANK0      2     2      0
              _setDimmerLights_AdjGo
         _setDimmerLights_TriggerAdj
                     _setRFSW_Status
 ---------------------------------------------------------------------------------
 (4) _setDimmerLights_TriggerAdj                           2     1      1     254
                                              2 BANK0      2     1      1
            _DimmerLightsPointSelect
 ---------------------------------------------------------------------------------
 (4) _setDimmerLights_AdjGo                                2     1      1     254
                                              2 BANK0      2     1      1
            _DimmerLightsPointSelect
 ---------------------------------------------------------------------------------
 (1) _Switch_Initialization                                0     0      0     948
                         _TouchPower
               _setSw_Initialization
 ---------------------------------------------------------------------------------
 (2) _setSw_Initialization                                 1     1      0     948
                                              4 BANK0      1     1      0
                             _setLED
 ---------------------------------------------------------------------------------
 (2) _TouchPower                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RF_Main                                              0     0      0   29561
                         _setRF_Main
 ---------------------------------------------------------------------------------
 (2) _setRF_Main                                           3     3      0   29561
                                              1 BANK1      3     3      0
                      _CC2500_RxData
                      _CC2500_TxData
                _CC2500_WriteCommand
                       _RF_RxDisable
                      _RfPointSelect
                          _getRxData
                          _setINT_GO
 ---------------------------------------------------------------------------------
 (3) _getRxData                                            2     2      0   28277
                                              0 BANK1      1     1      0
                      _RfPointSelect
            _setControl_Lights_Table
                        _setLog_Code
 ---------------------------------------------------------------------------------
 (4) _setLog_Code                                          2     2      0    1263
                                             10 BANK0      2     2      0
                      _RfPointSelect
                             _setBuz
 ---------------------------------------------------------------------------------
 (4) _setControl_Lights_Table                              1     1      0   26952
                                             71 BANK0      1     1      0
                      _RfPointSelect
                             _setBuz
                    _setDimmerLights
                 _setRFSW_AdjControl
                    _setRFSW_Control
                     _setRFSW_Status
                       _setSw_Status
                          _setTxData
 ---------------------------------------------------------------------------------
 (5) _setRFSW_Control                                      2     2      0   10853
                                             66 BANK0      2     2      0
                    _RfSWPointSelect
                             _setBuz
                     _setDelayOff_GO
             _setDimmerLights_Switch
            _setDimmerLights_Trigger
                 _setRF_DimmerLights
                       _setSw_Status
                          _setTxData
 ---------------------------------------------------------------------------------
 (4) _setDelayOff_GO                                       5     3      2    1192
                                              3 BANK0      5     3      2
                _DelayOffPointSelect
                     _DelayTimejudge
 ---------------------------------------------------------------------------------
 (5) _DelayTimejudge                                       3     3      0     238
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (5) _setRFSW_AdjControl                                   3     3      0   12318
                                             68 BANK0      3     3      0
                    _RfSWPointSelect
                  _setRF_DimmerValue
                          _setTxData
 ---------------------------------------------------------------------------------
 (6) _setRF_DimmerValue                                    3     3      0   12070
                                             65 BANK0      3     3      0
              _setDimmerLights_AdjRF
 ---------------------------------------------------------------------------------
 (7) _setDimmerLights_AdjRF                                2     2      0   11977
                                             63 BANK0      2     2      0
            _DimmerLightsPointSelect
                    _getPercentValue
 ---------------------------------------------------------------------------------
 (8) _getPercentValue                                      6     6      0   11884
                                             57 BANK0      6     6      0
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___fttol
 ---------------------------------------------------------------------------------
 (9) ___ftmul                                             16    10      6    2655
                                             14 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (9) ___ftadd                                             13     7      6    3482
                                             30 BANK0     13     7      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) _RF_RxDisable                                         1     1      0     192
                                              4 BANK0      1     1      0
                _CC2500_WriteCommand
                      _RfPointSelect
                          _setINT_GO
 ---------------------------------------------------------------------------------
 (3) _CC2500_TxData                                        2     2      0     235
                                              4 BANK0      2     2      0
                   _CC2500_WriteByte
                _CC2500_WriteCommand
 ---------------------------------------------------------------------------------
 (3) _CC2500_RxData                                        2     2      0     628
                                              4 BANK0      2     2      0
                    _CC2500_ReadByte
                  _CC2500_ReadStatus
                   _CC2500_WriteByte
                _CC2500_WriteCommand
                     _setRF_RxStatus
 ---------------------------------------------------------------------------------
 (4) _setRF_RxStatus                                       2     1      1     158
                                              2 BANK0      2     1      1
                      _RfPointSelect
 ---------------------------------------------------------------------------------
 (4) _CC2500_ReadStatus                                    2     2      0     167
                                              2 BANK0      2     2      0
                    _CC2500_ReadByte
                   _CC2500_WriteByte
 ---------------------------------------------------------------------------------
 (5) _CC2500_ReadByte                                      2     2      0      68
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _RF_Initialization                                    0     0      0       0
               _setRF_Initialization
 ---------------------------------------------------------------------------------
 (2) _setRF_Initialization                                 2     2      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _PowerFault_Main                                      0     0      0    5457
                 _setPowerFault_Main
 ---------------------------------------------------------------------------------
 (2) _setPowerFault_Main                                   2     2      0    5457
                                             13 BANK0      2     2      0
                       _getTemp_Safe
           _setPowerFault_Exceptions
 ---------------------------------------------------------------------------------
 (3) _setPowerFault_Exceptions                             2     2      0    5457
                                             11 BANK0      2     2      0
            _DimmerLights_Exceptions
                             _setLED
                       _setRF_Enable
                       _setSw_Enable
 ---------------------------------------------------------------------------------
 (4) _DimmerLights_Exceptions                              1     1      0    3911
                                             10 BANK0      1     1      0
         _getDimmerLights_StatusFlag
                             _setBuz
              _setDimmerLights_ERROR
       _setDimmerLights_TriggerERROR
 ---------------------------------------------------------------------------------
 (5) _setDimmerLights_TriggerERROR                         2     1      1     347
                                              2 BANK0      2     1      1
            _DimmerLightsPointSelect
 ---------------------------------------------------------------------------------
 (5) _setDimmerLights_ERROR                                2     2      0    2196
                                              4 BANK0      2     2      0
            _DimmerLightsPointSelect
                             _setLED
                     _setRFSW_Status
                       _setSw_Status
 ---------------------------------------------------------------------------------
 (3) _getTemp_Safe                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PowerFault_Initialization                            0     0      0       0
       _setPowerFault_Initialization
 ---------------------------------------------------------------------------------
 (2) _setPowerFault_Initialization                         1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Mcu_Initialization                                   1     1      0       0
                                              1 BANK0      1     1      0
                            _ADC_Set
                            _INT_Set
                            _IOC_Set
                             _IO_Set
                           _TMR0_Set
                      _Watch_Dog_set
 ---------------------------------------------------------------------------------
 (2) _Watch_Dog_set                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Set                                             1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _IO_Set                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _IOC_Set                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INT_Set                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Set                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MainT_ResetClock                                     2     2      0       0
                                              0 BANK0      1     1      0
                        _clearingWDT
 ---------------------------------------------------------------------------------
 (2) _clearingWDT                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MainT_Initialization                                 1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _MainT                                                0     0      0    1675
                             _setBuz
                       _setRF_Enable
                       _setSw_Enable
                     _setTemp_Enable
 ---------------------------------------------------------------------------------
 (2) _setTemp_Enable                                       1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _setSw_Enable                                         1     1      0     124
                                              2 BANK0      1     1      0
                      _SwPointSelect
 ---------------------------------------------------------------------------------
 (4) _setRF_Enable                                         2     1      1     319
                                              2 BANK0      2     1      1
                      _RfPointSelect
                          _setINT_GO
 ---------------------------------------------------------------------------------
 (5) _setINT_GO                                            1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _LED_Main                                             0     0      0     217
                        _setLED_Main
 ---------------------------------------------------------------------------------
 (2) _setLED_Main                                          3     3      0     217
                                              2 BANK0      3     3      0
                     _LedPointSelect
 ---------------------------------------------------------------------------------
 (1) _LED_Initialization                                   0     0      0    1072
              _setLED_Initialization
 ---------------------------------------------------------------------------------
 (2) _setLED_Initialization                                1     1      0    1072
                                              4 BANK0      1     1      0
                     _LedPointSelect
                             _setLED
 ---------------------------------------------------------------------------------
 (1) _Flash_Memory_Main                                    0     0      0     331
                _Flash_Memory_Modify
 ---------------------------------------------------------------------------------
 (2) _Flash_Memory_Modify                                  3     3      0     331
                                              4 BANK0      3     3      0
               _Flash_Memory_Erasing
                  _Flash_Memory_Read
                 _Flash_Memory_Write
 ---------------------------------------------------------------------------------
 (3) _Flash_Memory_Erasing                                 0     0      0       0
                _Flash_Memory_Unlock
 ---------------------------------------------------------------------------------
 (1) _Flash_Memory_Initialization                          2     2      0    6140
                                             61 BANK0      2     2      0
                  _Flash_Memory_Read
                 _Flash_Memory_Write
                    _setPercentValue
 ---------------------------------------------------------------------------------
 (3) _Flash_Memory_Write                                   2     2      0     130
                                              0 BANK0      2     2      0
                _Flash_Memory_Unlock
 ---------------------------------------------------------------------------------
 (4) _Flash_Memory_Unlock                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Flash_Memory_Read                                    4     4      0      71
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _DimmerLights_Main                                    0     0      0    9887
                 _DimmerLights_Close
               _setDimmerLights_Main
 ---------------------------------------------------------------------------------
 (2) _setDimmerLights_Main                                 2     2      0    9813
                                             69 BANK0      2     2      0
            _DimmerLightsPointSelect
                             _setBuz
                    _setDimmerLights
                _setDimmerLights_Adj
 ---------------------------------------------------------------------------------
 (3) _setDimmerLights_Adj                                  3     2      1    6868
                                             66 BANK0      3     2      1
            _DimmerLightsPointSelect
                 _setRF_DimmerLights
                          _setTxData
 ---------------------------------------------------------------------------------
 (5) _setDimmerLights                                      3     2      1    1363
                                              4 BANK0      3     2      1
            _DimmerLightsPointSelect
                             _setLED
 ---------------------------------------------------------------------------------
 (4) _setLED                                               2     1      1     917
                                              2 BANK0      2     1      1
                     _LedPointSelect
 ---------------------------------------------------------------------------------
 (5) _LedPointSelect                                       2     2      0      93
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _DimmerLights_Close                                   0     0      0      74
         _getDimmerLights_StatusFlag
 ---------------------------------------------------------------------------------
 (5) _getDimmerLights_StatusFlag                           3     3      0      74
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _DimmerLights_Initialization                          1     1      0      93
                                              4 BANK0      1     1      0
              _Dimmer_Initialization
     _setDimmerLights_Initialization
 ---------------------------------------------------------------------------------
 (2) _setDimmerLights_Initialization                       2     2      0      93
                                              2 BANK0      2     2      0
            _DimmerLightsPointSelect
 ---------------------------------------------------------------------------------
 (2) _Dimmer_Initialization                                1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _DelayOff_Main                                        0     0      0   10023
                        _DlyOff_Main
 ---------------------------------------------------------------------------------
 (2) _DlyOff_Main                                          3     3      0   10023
                                             66 BANK0      3     3      0
                _DelayOffPointSelect
                             _setBuz
             _setDimmerLights_Switch
            _setDimmerLights_Trigger
                     _setRFSW_Status
                 _setRF_DimmerLights
                       _setSw_Status
                          _setTxData
 ---------------------------------------------------------------------------------
 (4) _setTxData                                            3     3      0      62
                                              2 BANK0      2     2      0
                      _RfPointSelect
 ---------------------------------------------------------------------------------
 (5) _RfPointSelect                                        2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (6) _setSw_Status                                         2     1      1     514
                                              2 BANK0      2     1      1
                      _SwPointSelect
 ---------------------------------------------------------------------------------
 (5) _SwPointSelect                                        2     2      0      62
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _setRF_DimmerLights                                   5     4      1    6521
                                             61 BANK0      5     4      1
                    _setPercentValue
 ---------------------------------------------------------------------------------
 (5) _setPercentValue                                      4     4      0    5747
                                             57 BANK0      4     4      0
                           ___awtoft
                            ___ftdiv
                            ___fttol
 ---------------------------------------------------------------------------------
 (6) ___fttol                                             14    10      4     501
                                             43 BANK0     14    10      4
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___ftdiv                                             16    10      6    2847
                                             14 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (6) ___awtoft                                             6     3      3    2300
                                              8 BANK0      6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (7) ___ftpack                                             8     3      5    2037
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (6) _setRFSW_Status                                       2     1      1     579
                                              2 BANK0      2     1      1
                    _RfSWPointSelect
 ---------------------------------------------------------------------------------
 (7) _RfSWPointSelect                                      2     2      0      62
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _setDimmerLights_Trigger                              2     1      1     449
                                              2 BANK0      2     1      1
            _DimmerLightsPointSelect
 ---------------------------------------------------------------------------------
 (4) _setDimmerLights_Switch                               2     1      1     449
                                              2 BANK0      2     1      1
            _DimmerLightsPointSelect
 ---------------------------------------------------------------------------------
 (6) _DimmerLightsPointSelect                              2     2      0      62
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _setBuz                                               4     2      2    1201
                                              6 BANK0      4     2      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     266
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _DelayOff_Initialization                              0     0      0      93
              _DlyOff_Initialization
 ---------------------------------------------------------------------------------
 (2) _DlyOff_Initialization                                1     1      0      93
                                              2 BANK0      1     1      0
                _DelayOffPointSelect
 ---------------------------------------------------------------------------------
 (5) _DelayOffPointSelect                                  2     2      0      62
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _CC2500_PowerOnInitial                                0     0      0    2107
                 _CC2500_ClearRXFIFO
                 _CC2500_ClearTXFIFO
               _CC2500_FrequencyCabr
                 _CC2500_InitPATable
                  _CC2500_InitSetREG
                    _CC2500_PowerRST
                   _CC2500_SIDLEMode
 ---------------------------------------------------------------------------------
 (2) _CC2500_SIDLEMode                                     0     0      0      99
                _CC2500_WriteCommand
 ---------------------------------------------------------------------------------
 (2) _CC2500_PowerRST                                      1     1      0     464
                                              6 BANK0      1     1      0
                   _CC2500_WriteByte
                      _DelayTime_1us
 ---------------------------------------------------------------------------------
 (2) _CC2500_InitSetREG                                    4     4      0     458
                                              5 BANK0      4     4      0
                    _CC2500_WriteREG
 ---------------------------------------------------------------------------------
 (2) _CC2500_InitPATable                                   3     3      0     393
                                              5 BANK0      3     3      0
                    _CC2500_WriteREG
 ---------------------------------------------------------------------------------
 (3) _CC2500_WriteREG                                      3     2      1     260
                                              2 BANK0      3     2      1
                   _CC2500_WriteByte
 ---------------------------------------------------------------------------------
 (2) _CC2500_FrequencyCabr                                 0     0      0     495
                _CC2500_WriteCommand
                      _DelayTime_1us
 ---------------------------------------------------------------------------------
 (3) _DelayTime_1us                                        6     4      2     396
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (2) _CC2500_ClearTXFIFO                                   0     0      0      99
                _CC2500_WriteCommand
 ---------------------------------------------------------------------------------
 (2) _CC2500_ClearRXFIFO                                   0     0      0      99
                _CC2500_WriteCommand
 ---------------------------------------------------------------------------------
 (4) _CC2500_WriteCommand                                  2     2      0      99
                                              2 BANK0      2     2      0
                   _CC2500_WriteByte
 ---------------------------------------------------------------------------------
 (5) _CC2500_WriteByte                                     2     2      0      68
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _Buzzer_Main                                          4     4      0       0
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _Buzzer_Initialization                                1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _ISR                                                 1     1      0     119
                                              4 COMMON     1     1      0
                            _INT_ISR
                            _IOC_ISR
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (12) _TMR0_ISR                                            4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (12) _IOC_ISR                                             1     1      0       0
                                              0 COMMON     1     1      0
                   _setDimmerReClock
 ---------------------------------------------------------------------------------
 (13) _setDimmerReClock                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _INT_ISR                                             0     0      0     119
                    _setRF_ReceiveGO
 ---------------------------------------------------------------------------------
 (13) _setRF_ReceiveGO                                     2     1      1     119
                                              2 COMMON     2     1      1
                    i1_RfPointSelect
 ---------------------------------------------------------------------------------
 (14) i1_RfPointSelect                                     2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Buzzer_Initialization
   _Buzzer_Main
   _CC2500_PowerOnInitial
     _CC2500_ClearRXFIFO
       _CC2500_WriteCommand
         _CC2500_WriteByte
     _CC2500_ClearTXFIFO
       _CC2500_WriteCommand
         _CC2500_WriteByte
     _CC2500_FrequencyCabr
       _CC2500_WriteCommand
         _CC2500_WriteByte
       _DelayTime_1us
     _CC2500_InitPATable
       _CC2500_WriteREG
         _CC2500_WriteByte
     _CC2500_InitSetREG
       _CC2500_WriteREG
         _CC2500_WriteByte
     _CC2500_PowerRST
       _CC2500_WriteByte
       _DelayTime_1us
     _CC2500_SIDLEMode
       _CC2500_WriteCommand
         _CC2500_WriteByte
   _DelayOff_Initialization
     _DlyOff_Initialization
       _DelayOffPointSelect
   _DelayOff_Main
     _DlyOff_Main
       _DelayOffPointSelect
       _setBuz
         ___wmul
       _setDimmerLights_Switch
         _DimmerLightsPointSelect
       _setDimmerLights_Trigger
         _DimmerLightsPointSelect
       _setRFSW_Status
         _RfSWPointSelect
       _setRF_DimmerLights
         _setPercentValue
           ___awtoft
             ___ftpack
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
       _setSw_Status
         _SwPointSelect
       _setTxData
         _RfPointSelect
   _DimmerLights_Initialization
     _Dimmer_Initialization
     _setDimmerLights_Initialization
       _DimmerLightsPointSelect
   _DimmerLights_Main
     _DimmerLights_Close
       _getDimmerLights_StatusFlag
     _setDimmerLights_Main
       _DimmerLightsPointSelect
       _setBuz
         ___wmul
       _setDimmerLights
         _DimmerLightsPointSelect
         _setLED
           _LedPointSelect
       _setDimmerLights_Adj
         _DimmerLightsPointSelect
         _setRF_DimmerLights
           _setPercentValue
             ___awtoft
               ___ftpack
             ___ftdiv
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___fttol
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
         _setTxData
           _RfPointSelect
   _Flash_Memory_Initialization
     _Flash_Memory_Read
     _Flash_Memory_Write
       _Flash_Memory_Unlock
     _setPercentValue
       ___awtoft
         ___ftpack
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
   _Flash_Memory_Main
     _Flash_Memory_Modify
       _Flash_Memory_Erasing
         _Flash_Memory_Unlock
       _Flash_Memory_Read
       _Flash_Memory_Write
         _Flash_Memory_Unlock
   _LED_Initialization
     _setLED_Initialization
       _LedPointSelect
       _setLED
         _LedPointSelect
   _LED_Main
     _setLED_Main
       _LedPointSelect
   _MainT
     _setBuz
       ___wmul
     _setRF_Enable
       _RfPointSelect
       _setINT_GO
     _setSw_Enable
       _SwPointSelect
     _setTemp_Enable
   _MainT_Initialization
   _MainT_ResetClock
     _clearingWDT
   _Mcu_Initialization
     _ADC_Set
     _INT_Set
     _IOC_Set
     _IO_Set
     _TMR0_Set
     _Watch_Dog_set
   _PowerFault_Initialization
     _setPowerFault_Initialization
   _PowerFault_Main
     _setPowerFault_Main
       _getTemp_Safe
       _setPowerFault_Exceptions
         _DimmerLights_Exceptions
           _getDimmerLights_StatusFlag
           _setBuz
             ___wmul
           _setDimmerLights_ERROR
             _DimmerLightsPointSelect
             _setLED
               _LedPointSelect
             _setRFSW_Status
               _RfSWPointSelect
             _setSw_Status
               _SwPointSelect
           _setDimmerLights_TriggerERROR
             _DimmerLightsPointSelect
         _setLED
           _LedPointSelect
         _setRF_Enable
           _RfPointSelect
           _setINT_GO
         _setSw_Enable
           _SwPointSelect
   _RF_Initialization
     _setRF_Initialization
   _RF_Main
     _setRF_Main
       _CC2500_RxData
         _CC2500_ReadByte
         _CC2500_ReadStatus
           _CC2500_ReadByte
           _CC2500_WriteByte
         _CC2500_WriteByte
         _CC2500_WriteCommand
           _CC2500_WriteByte
         _setRF_RxStatus
           _RfPointSelect
       _CC2500_TxData
         _CC2500_WriteByte
         _CC2500_WriteCommand
           _CC2500_WriteByte
       _CC2500_WriteCommand
         _CC2500_WriteByte
       _RF_RxDisable
         _CC2500_WriteCommand
           _CC2500_WriteByte
         _RfPointSelect
         _setINT_GO
       _RfPointSelect
       _getRxData
         _RfPointSelect
         _setControl_Lights_Table
           _RfPointSelect
           _setBuz
             ___wmul
           _setDimmerLights
             _DimmerLightsPointSelect
             _setLED
               _LedPointSelect
           _setRFSW_AdjControl
             _RfSWPointSelect
             _setRF_DimmerValue
               _setDimmerLights_AdjRF
                 _DimmerLightsPointSelect
                 _getPercentValue
                   ___awtoft
                     ___ftpack
                   ___ftadd
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftmul (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                     ___ftpack (ARG)
                   ___ftdiv
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                   ___ftmul
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                   ___fttol
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftadd (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftmul (ARG)
                         ___awtoft (ARG)
                           ___ftpack
                         ___ftpack (ARG)
                       ___ftpack (ARG)
                     ___ftdiv (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                     ___ftmul (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
             _setTxData
               _RfPointSelect
           _setRFSW_Control
             _RfSWPointSelect
             _setBuz
               ___wmul
             _setDelayOff_GO
               _DelayOffPointSelect
               _DelayTimejudge
             _setDimmerLights_Switch
               _DimmerLightsPointSelect
             _setDimmerLights_Trigger
               _DimmerLightsPointSelect
             _setRF_DimmerLights
               _setPercentValue
                 ___awtoft
                   ___ftpack
                 ___ftdiv
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___fttol
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftadd (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftmul (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                     ___ftpack (ARG)
                   ___ftdiv (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
             _setSw_Status
               _SwPointSelect
             _setTxData
               _RfPointSelect
           _setRFSW_Status
             _RfSWPointSelect
           _setSw_Status
             _SwPointSelect
           _setTxData
             _RfPointSelect
         _setLog_Code
           _RfPointSelect
           _setBuz
             ___wmul
       _setINT_GO
   _Switch_Initialization
     _TouchPower
     _setSw_Initialization
       _setLED
         _LedPointSelect
   _Switch_Main
     _setSw_Main
       _SwPointSelect
       _Sw_DimmerAdjFunc
         _setDimmerLights_AdjGo
           _DimmerLightsPointSelect
         _setDimmerLights_TriggerAdj
           _DimmerLightsPointSelect
         _setRFSW_Status
           _RfSWPointSelect
       _Sw_DimmerOffFunc
         _setDelayOff_GO
           _DelayOffPointSelect
           _DelayTimejudge
         _setDimmerLights_AdjGo
           _DimmerLightsPointSelect
         _setDimmerLights_Switch
           _DimmerLightsPointSelect
         _setDimmerLights_Trigger
           _DimmerLightsPointSelect
         _setDimmerLights_TriggerAdj
           _DimmerLightsPointSelect
         _setRF_DimmerLights
           _setPercentValue
             ___awtoft
               ___ftpack
             ___ftdiv
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___fttol
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
         _setTxData
           _RfPointSelect
       _Sw_DimmerOnFunc
         _setBuz
           ___wmul
         _setDimmerLights_Switch
           _DimmerLightsPointSelect
         _setDimmerLights_Trigger
           _DimmerLightsPointSelect
         _setRFSW_Status
           _RfSWPointSelect
         _setRF_DimmerLights
           _setPercentValue
             ___awtoft
               ___ftpack
             ___ftdiv
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___fttol
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
         _setTxData
           _RfPointSelect
       _setBuz
         ___wmul
       _setRF_Learn
         _RfPointSelect
   _Temp_Initialization
     _setTemp_Initialization
   _Temp_Main
     _setTemp_Main
       _getPF_Safe
       _setOverTemp_Exceptions
         _DimmerLights_Exceptions
           _getDimmerLights_StatusFlag
           _setBuz
             ___wmul
           _setDimmerLights_ERROR
             _DimmerLightsPointSelect
             _setLED
               _LedPointSelect
             _setRFSW_Status
               _RfSWPointSelect
             _setSw_Status
               _SwPointSelect
           _setDimmerLights_TriggerERROR
             _DimmerLightsPointSelect
         _setBuz
           ___wmul
         _setLED
           _LedPointSelect
         _setRF_Enable
           _RfPointSelect
           _setINT_GO
         _setSw_Enable
           _SwPointSelect
   _getPowerFault_AD
     _getAD
   _getTemp_AD
     _getAD

 _ISR (ROOT)
   _INT_ISR
     _setRF_ReceiveGO
       i1_RfPointSelect
   _IOC_ISR
     _setDimmerReClock
   _TMR0_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       1       1        7.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      5       A       2       71.4%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     48      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      4      4F       7       98.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      50       9      100.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      31      11       61.3%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      25      13       46.3%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     14F      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     14F      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Tue Sep 30 16:52:32 2014

                   __size_of_Switch_Main 0008                    ?_Flash_Memory_Erasing 0071  
           ??_setDimmerLights_TriggerAdj 0023                                       _PF 0076  
                                     _RD 0CA8                                       _RF 0077  
                __end_of_CC2500_WriteREG 1BD8                                       _WR 0CA9  
                                     _Sw 0078       __end_of_getDimmerLights_StatusFlag 1B78  
             _getDimmerLights_StatusFlag 1B62                      ___wmul@multiplicand 0022  
                 __end_of_setDelayOff_GO 130B                             ___ftadd@exp1 004A  
                           ___ftadd@exp2 0049                setDimmerLights_Adj@lights 0064  
                   _setDimmerLights_Main 08E3                             ___ftadd@sign 0048  
                                    l304 112B                                      l401 1D88  
                                    l305 1130                                      l315 1427  
                                    l332 1EFD                                      l308 1133  
                                    l335 1F03                                      l319 1438  
                                    l365 1BB2                                      l366 1BB4  
                                    l377 1BC7                                      l395 07EE  
                                    l299 1101                                      l389 1A6B  
                                    l690 1EA8                                      l847 1ADE  
                                    l894 1524                                      _GIE 005F  
                                    _CRC 00B7                                      _RA0 0060  
                                    _RB0 0068     __size_of_DimmerLights_Initialization 0015  
                                    _RB1 0069                                      _RA3 0063  
                                    _PF1 0168                                      _RC0 0070  
                                    _RB2 006A                                      _RA4 0064  
                                    _LED 00BA                                      _RC1 0071  
                                    _RB3 006B                                      _RC2 0072  
                                    _RB4 006C                                      _RA6 0066  
                                    _RB5 006D                                      _RA7 0067  
                                    _RC4 0074                                      _RC5 0075  
                                    _RC7 0077                                      _RF1 00E5  
                                    _ISR 0004          setPowerFault_Exceptions@command 002C  
                                    _Sw1 0156                                      _Sw2 015F  
                                    _Buz 0068                setDimmerLights_Adj@status 0062  
               __end_of_CC2500_WriteByte 1BBF           ??_setDimmerLights_TriggerERROR 0023  
                  _Buzzer_Initialization 1978                          __end_of_ADC_Set 1926  
                        ?_DelayTimejudge 0071                                      wreg 0009  
   setDimmerLights_Initialization@lights 0023                          _setDimmerLights 09E5  
                  _setDimmerLights_ERROR 1211                    _setDimmerLights_AdjRF 1D3B  
                  _setDimmerLights_AdjGo 1AA3                  __size_of_setTemp_Enable 000B  
                                   ?_ISR 0071                          _PowerFault_Main 18E0  
                           ___ftdiv@cntr 0038                          __end_of_IOC_ISR 1D83  
                           ___ftdiv@sign 003D                                     l2019 10E0  
                                   l2313 1F29                 ?_DimmerLightsPointSelect 0071  
                                   l2309 0714                                     l3241 140E  
                                   l3074 1C80                                     l3235 13F7  
                                   l1707 1ED2                          __end_of_IOC_Set 1A0F  
                                   l2551 120A                                     l3264 0FA9  
                                   l1681 1B82                                     l2583 1FEA  
                                   l2569 1B57                                     l2761 1901  
                                   l8001 0F84                                     l8011 0FA5  
                                   l8003 0F88                                     l8015 0FBB  
                                   l8111 0DF1                                     l8103 0DDD  
                                   l8009 0F9B                                     l8131 0977  
                                   l8019 0FCD                                     l8115 0DF9  
                                   l8211 1EA0                                     l8203 1E94  
                                   l8045 0CF1                                     l8029 0FE8  
                                   l9005 1080                                     l8039 0CDB  
                                   l8151 09B5                                     l8207 1E9A  
                                   l8161 09CE                                     l8241 1D0D  
                                   l8081 0D84                                     l9009 1090  
                                   l8067 0D4B                                     l8059 0D32  
                                   l8411 13B4                                     l9211 1FB2  
                                   l8165 09DC                                     l8157 09C2  
                                   l8149 09A7                                     l8317 15AE  
                                   l8237 1D02                                     l8159 09CB  
                                   l8407 13AE                                     l8415 13BA  
                                   l9215 1FB9                                     l8087 0D9A  
                                   l8423 100D                                     l9039 17D4  
                                   l8265 1C7A                                     l8361 12F2  
                                   l9321 053D                                     l8187 1B05  
                                   l8259 1B19                                     l9163 08FF  
                                   l8611 151C                                     l9411 06E6  
                                   l8099 0DD5                                     l8195 1E88  
                                   l8355 12DF                                     l8285 174C  
                                   l8381 137C                                     l9173 091D  
                                   l8605 1504                                     l9421 0709  
                                   l8461 1C70                                     l8365 12FE  
                                   l8701 0C0A                                     l8391 138C  
                                   l9159 08F2                                     l9407 06C7  
                                   l8199 1E8E                                     l8359 12E5  
                                   l8535 0B16                                     l9503 03AC  
                                   l9343 05A3                                     l9319 0534  
                                   l8289 176A                                     l8377 1376  
                                   l8385 1382                                     l9177 092A  
                                   l8609 1517                                     l8545 0B3A  
                                   l8705 0C13                                     l9441 0A83  
                                   l9513 03BF                                     l9505 03B3  
                                   l9353 05D1                                     l7931 13E3  
                                   l7923 13CD                                     l8475 1B72  
                                   l8395 1392                                     l9291 14A6  
                                   l9419 0703                                     l8459 1C6A  
                                   l9515 03C8                                     l9355 05D7  
                                   l9613 0CA9                                     l9189 0957  
                                   l9285 148F                                     l8573 1FD8  
                                   l8549 0B50                                     l9445 0A8B  
                                   l9607 0C81                                     l9615 0CAF  
                                   l7927 13D4                                     l8399 1398  
                                   l8807 1F58                                     l9295 14E6  
                                   l8727 1113                                     l9455 0AA9  
                                   l9359 05E2                                     l7937 13FC  
                                   l7929 13DE                                     l9801 117B  
                                   l9385 0654                                     l8761 1462  
                                   l9553 046E                                     l9529 03F7  
                                   l9619 0CB6                                     l7939 1404  
                                   l8499 0A42                                     l9387 065E  
                                   l9483 0AEE                                     l9467 0AC4  
                                   l9539 042A                                     l9563 04A1  
                                   l7957 1CDF                                     l8773 147B  
                                   l7973 0F39                                     l8693 0BF8  
                                   l8917 1278                                     l9469 0AC8  
                                   l9741 1601                                     l8759 144A  
                                   l7991 0F62                                     l8687 0BDC  
                                   l8785 1D99                                     l8849 1EB8  
                                   l7969 0F32                                     l8697 0C01  
                                   l8929 128E                                     _CFGS 0CAE  
                                   l8787 1DA4                                     l7979 0F48  
                                   l7997 0F75                                     l8973 16B6  
                                   l8893 10D7                                     l9861 0838  
                                   l9687 0E99                                     l7999 0F7F  
                                   l9777 08DD                                     l9769 08B1  
                                   l8969 16A6                                     l9857 0826  
                                   l8995 16FE                                     _FREE 0CAC  
                                   _LATA 010C                                     _LATB 010D  
                        __end_of_INT_ISR 19D2                                     _LATC 010E  
                                   _PEIE 005E                                     _INTE 005C  
                                   _INTF 0059                                     u8140 155D  
                                   u7325 1415                                     u7255 13D9  
                                   u8145 155B                                     u7505 0F89  
                                   u8075 1C81                                     u7275 13F2  
                                   u8085 1C86                                     u7605 0D03  
                                   u7445 0F63                                     u7295 13FF  
                                   u7615 0D13                                     u7535 0F9C  
                                   u7625 0D33                                     u7635 0D42  
                                   u7475 0F76                                     u7715 0DDE  
                                   u7645 0D4C                                     u7725 0DE4  
                                   u7825 09A8                                     u8490 196C  
                                   u7755 0DFA                                     u7765 0E00  
                                   u7685 0DA6                                     u8815 1D8E  
                                   u7855 09C3                                     u7695 0DB6  
                                   u7795 097E                                     _LWLO 0CAD  
                                   _RFSW 00BB                                     _TMR0 0015  
                                   u9995 0C42                          __end_of_INT_Set 190C  
                                   _RSSI 00BC                                     _WREN 0CAA  
                                   _Buz1 014A                                     _Temp 0079  
                                   _main 0802                             ___ftpack@arg 0020  
      __end_of_PowerFault_Initialization 18E0                      __end_of_DlyOff_Main 169C  
                        __end_of_RF_Main 1901                             ___ftpack@exp 0023  
                                   fsr0h 0005                                     fsr1h 0007  
                                   fsr0l 0004                                     indf0 0000  
                                   indf1 0001                                     fsr1l 0006  
    __size_of_setDimmerLights_TriggerAdj 0010                                     btemp 007E  
                                   ltemp 007E            __size_of_setRF_Initialization 0007  
                       _setDimmerReClock 1C0A                                     start 0016  
                                   ttemp 007E                                     wtemp 007E  
               _setPowerFault_Exceptions 1F09                      DelayTimejudge@value 0022  
                          _RfPointSelect 198E               __end_of_setRFSW_AdjControl 2000  
                           ___ftmul@cntr 003C                             ___ftmul@sign 003D  
           __size_of_Temp_Initialization 0003              __size_of_setPowerFault_Main 0108  
                                  ??_ISR 0075                             ___fttol@exp1 0058  
                           ___fttol@lval 0054                         __end_of_LED_Main 1A02  
                  ?_setDimmerLights_Main 0071                          ?_setDelayOff_GO 0023  
                                  ?_main 0071                setControl_Lights_Table@rf 0067  
                        __end_of___ftadd 1000                          __end_of___ftdiv 0D6D  
                                  u10105 1619                                    u10125 1066  
                                  u10215 1162                                    u10145 0884  
                                  u10155 08C7                          __end_of___ftmul 0E21  
                                  u10095 15F0                          __end_of___fttol 09E5  
           setDimmerLights_AdjGo@command 0022                                    _IOCBF 0396  
                                  _IOCBN 0395                                    _IOCBP 0394  
                                  _IOCIE 005B                                    _IOCIF 0058  
                 _setDimmerLights_Switch 1A73            __size_of_CC2500_FrequencyCabr 000C  
                                  _RFSW1 00E8                                    _RFSW2 00E9  
                                  _PORTA 000C                                    _PORTB 000D  
                                  _PORTC 000E                             ?_setLED_Main 0071  
                     setRF_Learn@command 0022                                    _TRISA 008C  
                                  _TRISB 008D                                    _TRISC 008E  
                                  _WPUB0 1068                                    _WPUB1 1069  
                                  _WPUB2 106A                                    _TMain 006F  
                          setRF_Learn@rf 0023                                    _MainT 086A  
                          __CFG_WRT$HALF 0000                                    _Temp1 013C  
                       __end_of_TMR0_ISR 0393             __size_of_CC2500_WriteCommand 0010  
                       __end_of_TMR0_Set 1A1C                        ?_MainT_ResetClock 0071  
                                  _getAD 1B78                            ___awtoft@sign 002D  
        __end_of_DimmerLights_Exceptions 1553            DimmerLights_Exceptions@status 002A  
                          ___ftpack@sign 0024              __size_of_CC2500_ClearRXFIFO 0004  
                     ??_MainT_ResetClock 0020                            ??_Buzzer_Main 0020  
            __size_of_CC2500_ClearTXFIFO 0004                      CC2500_RxData@loop_f 0025  
                         __pbitbssCOMMON 0380                           __CFG_BOREN$OFF 0000  
                     Flash_Memory_Read@i 0021                         ?_CC2500_ReadByte 0071  
                                  ltemp0 007E                                    ltemp1 0082  
                                  ltemp2 0086                                    ltemp3 0080  
         __size_of_setLED_Initialization 0011            __end_of_setLED_Initialization 1AD4  
                                  ttemp0 007E                                    ttemp1 0081  
                                  ttemp2 0084                                    ttemp3 0087  
                                  ttemp4 007F                             ?_setRF_Learn 0022  
                                  status 0003                                    wtemp0 007E  
                                  wtemp1 0080                                    wtemp2 0082  
                                  wtemp3 0084                                    wtemp4 0086  
                                  wtemp5 0088                                    wtemp6 007F  
                     _setRF_DimmerLights 1553              __size_of_Flash_Memory_Write 002F  
                 ??_MainT_Initialization 0020                        ?_CC2500_SIDLEMode 0071  
             __size_of_RF_Initialization 0004                           ?_RfPointSelect 0071  
                         setSw_Status@sw 0023         __size_of_DelayOff_Initialization 0008  
              setDimmerLights_Main@clear 0065                   ??_Flash_Memory_Erasing 0020  
                        _getPercentValue 130B                       ??_CC2500_SIDLEMode 0024  
                        __initialization 0018                         ?_CC2500_PowerRST 0071  
                      ??_Sw_DimmerOnFunc 0062                        ??_setPercentValue 0059  
                           __end_of_main 086A                      ?_setRF_DimmerLights 005D  
                   __size_of_clearingWDT 0002                         ?_CC2500_WriteREG 0022  
                              ??_ADC_Set 0020                  __end_of_setDimmerLights 0A6E  
                   _setSw_Initialization 1944                                   ??_main 0068  
                          ___fttol@sign1 0053                             ?_setLog_Code 0071  
                _setControl_Lights_Table 0B89                   ?_Buzzer_Initialization 0071  
                ??_DlyOff_Initialization 0022                  __end_of_PowerFault_Main 18E3  
                             _Receive_GO 0381                               _Receive_OK 0382  
                              ??_IOC_ISR 0071                   ?_setDimmerLights_ERROR 0071  
                              ??_IOC_Set 0020          __end_of_DimmerLightsPointSelect 1AE7  
                                 ?_MainT 0071                   ?_setDimmerLights_AdjRF 0071  
                              ??_INT_ISR 0075                   ?_setDimmerLights_AdjGo 0022  
               __size_of_setRFSW_Control 0090                         ??_setRFSW_Status 0023  
                              ??_INT_Set 0020                  ??_Switch_Initialization 0025  
                   __end_of_getTemp_Safe 192D                        i1RfPointSelect@rf 0072  
                   ??_setRF_DimmerLights 005E                                   ?_getAD 0020  
                            _DlyOff_Main 162A                                   _ADCON0 009D  
                                 _ADCON1 009E                                ??_RF_Main 0068  
                                 _ADRESH 009C                                   _ADRESL 009B  
                      ?_getPowerFault_AD 0071                           setRF_Enable@rf 0023  
                       __end_of___awtoft 1CF6                                   _ANSELA 018C  
                                 _ANSELB 018D                                   _ANSELC 018E  
                       __end_of___ftpack 1425                                   _IOCBF2 1CB2  
                _setDimmerLights_Trigger 1A83                                   i1l1653 1C18  
                                 i1l1648 0382                                   i1l7613 1D79  
                                 i1l7701 01DD                                   i1l7715 022F  
                                 i1l7733 0279                                   i1l7741 0298  
                                 i1l7661 010D                                   i1l7637 00AA  
                                 i1l7751 02CB                                   i1l7735 027F  
                                 i1l7655 00F4                                   i1l7663 0113  
                                 i1l7761 02FA                                   i1l7673 0146  
                                 i1l7657 00FA                                   i1l7763 0300  
                                 i1l7747 02B4                                   i1l7755 02DF  
                                 i1l7739 0292                                   i1l7771 032E  
                                 i1l7683 0175                                   i1l7685 017B  
                                 i1l7669 012F                                   i1l7677 015A  
                                 i1l7693 01A9                                   i1l7779 0362  
                                 _FVRCON 0117                                   _PMADRH 0192  
                                 _PMADRL 0191                                   _PMDATH 0194  
                                 _PMDATL 0193                                   _PMCON2 0196  
                     ??_getPowerFault_AD 0024                                   _OSCCON 0099  
                                 u707_25 0358                                   u708_25 0374  
                                 u671_25 008E                                   u690_25 0213  
                                 _TMR0IE 005D                                   _TMR0IF 005A  
                                 _IO_Set 1BF1                                   u688_25 01D3  
                                 _WDTCON 0097                       DelayTime_1us@count 0020  
                             _VarProduct 01A0                    _Dimmer_Initialization 1918  
         __size_of_CC2500_PowerOnInitial 0015            __end_of_CC2500_PowerOnInitial 1B37  
                                 _Dimmer 00B8                                   _DlySw1 00CC  
                                 _DlySw2 00D1               __end_of_Mcu_Initialization 1C3E  
                    __end_of_Buzzer_Main 0CC4                    __end_of_Watch_Dog_set 18F9  
                                 _Memory 006D                                   _Timer0 00EE  
     __end_of_setDimmerLights_TriggerAdj 1AC3               _setDimmerLights_TriggerAdj 1AB3  
          setDimmerLights_Switch@command 0022                                   ___wmul 1C77  
                              ??___ftadd 0044             __size_of_DelayOffPointSelect 0014  
                              ??___ftdiv 0034                    setDimmerLights@lights 0026  
                              ??___ftmul 0034                                ??___fttol 004F  
           ?_Flash_Memory_Initialization 0071                          i1_RfPointSelect 196E  
            setDimmerLights_AdjRF@lights 0060                   ??_setDimmerLights_Main 0065  
                                 _r_data 00C1                                   _s_data 00C2  
                                 _setLED 1366                         _DimmerLightsIntr 00B9  
                  ?_setSw_Initialization 0071                    setDimmerLights@status 0024  
                                 _setBuz 1711                       __size_of_Temp_Main 0003  
       ??_setDimmerLights_Initialization 0022          ?_setDimmerLights_Initialization 0071  
                  ___ftmul@f3_as_product 0039             ??_getDimmerLights_StatusFlag 0020  
               Flash_Memory_Read@address 0022                        RfSWPointSelect@sw 0021  
                       ??_setRF_RxStatus 0023                    __end_of_SwPointSelect 1B22  
                getPowerFault_AD@channel 0028                            ?_setRF_Enable 0022  
                         _setTemp_Enable 19A4                          _RfSWPointSelect 1B4C  
           __size_of_Flash_Memory_Modify 0065              __size_of_DimmerLights_Close 0018  
                __size_of_LedPointSelect 0022                      Flash_Memory_Write@i 0021  
           __size_of_Flash_Memory_Unlock 0009                               _TouchPower 1901  
                      ?_Sw_DimmerAdjFunc 0071              __size_of_CC2500_InitPATable 001F  
                    CC2500_TxData@loop_e 0025                  __end_of_getPercentValue 1366  
       __end_of_CC2500_registers_address 182F     __end_of_setPowerFault_Initialization 1AA3  
  __size_of_setPowerFault_Initialization 0010             _setPowerFault_Initialization 1A93  
                __end_of__initialization 004D              ??_PowerFault_Initialization 0021  
                        ??_RfPointSelect 0020              setDimmerLights_AdjGo@lights 0023  
                              ?_LED_Main 0071                               ___ftadd@f1 003E  
                             ___ftadd@f2 0041                       ??_Sw_DimmerAdjFunc 0024  
                    setSw_Enable@command 0022                               ___ftdiv@f1 0031  
                             ___ftdiv@f2 002E                               ___ftdiv@f3 0039  
                      ?_Sw_DimmerOffFunc 0071                               ___awtoft@c 0028  
           ?_DimmerLights_Initialization 0071                               ___ftmul@f1 002E  
                             ___ftmul@f2 0031                            __end_of_MainT 08E3  
                             ___fttol@f1 004B                           __pcstackCOMMON 0071  
                     ??_Sw_DimmerOffFunc 0062                             __pidataBANK3 1CB4  
                          __end_of_getAD 1B8E                                ?_TMR0_ISR 0071  
                              ?_TMR0_Set 0071             __size_of_setDimmerLights_Adj 003D  
                     _LED_Initialization 19EA                ??_setControl_Lights_Table 0067  
       __size_of_DimmerLights_Exceptions 0065                         ??_DelayTimejudge 0020  
            ?_getDimmerLights_StatusFlag 0071            ??_Flash_Memory_Initialization 005D  
               __size_of_setRF_ReceiveGO 000C                         ?_setDimmerLights 0024  
                       ?_PowerFault_Main 0071                 __end_of_setDimmerReClock 1C24  
                     __size_of_getRxData 0052                      ?_LED_Initialization 0071  
                 __end_of_setTemp_Enable 19AF                        ?_CC2500_WriteByte 0071  
                                ??_MainT 002A                           ??_setRF_Enable 0023  
                         _DimmerLights11 006B                           _DimmerLights22 006C  
                   __size_of_setLED_Main 0040                ??_setDimmerLights_Trigger 0023  
                                ??_getAD 0023                      _Temp_Initialization 18E3  
                     ??_CC2500_WriteByte 0020               ??_setPowerFault_Exceptions 002B  
           setDimmerLights_Switch@lights 0023                               __pbssBANK0 0068  
                             __pbssBANK1 00A0                               __pbssBANK2 0120  
                             __pbssBANK3 01C0                               __pbssBANK4 0220  
                            _Buzzer_Main 0C1C                        ??_setRFSW_Control 0062  
                      __end_of_Temp_Main 18E9                   ?_Dimmer_Initialization 0071  
                                ?_IO_Set 0071                               ??_LED_Main 0025  
                _DelayOff_Initialization 1934            ?_setPowerFault_Initialization 0071  
                             _getPF_Safe 1954                            ??_Switch_Main 0067  
                         DelayTime_1us@i 0022                           DelayTime_1us@j 0024  
                   ??_LED_Initialization 0025                             _DimmerLights 006A  
                      LedPointSelect@led 0021                  __end_ofi1_RfPointSelect 1978  
                     __size_of_setINT_GO 0009                   __size_of_DelayOff_Main 0008  
                   __size_of_setRF_Learn 000E                              setBuz@count 0029  
                             __pmaintext 0802                      _CC2500_WriteCommand 1A63  
                   ?_Temp_Initialization 0071         __size_of_DimmerLightsPointSelect 0013  
                       ??_setDelayOff_GO 0025            ??_DimmerLights_Initialization 0024  
                                ?___wmul 0020                               ??_TMR0_ISR 0071  
                          ?_setTemp_Main 0071                               ??_TMR0_Set 0020  
                             __pintentry 0004                   ??_setSw_Initialization 0024  
                          ?_setSw_Enable 0071                       __size_of_setTxData 00C9  
                ?_setDimmerLights_Switch 0022                     Sw_DimmerAdjFunc@Idle 0024  
                                ?_setLED 0022                   __size_of_DelayTime_1us 0026  
                                _ADC_Set 191F                _PowerFault_Initialization 18DD  
                                ?_setBuz 0026                                ?___awtoft 0028  
                              ?___ftpack 0020                               _getTemp_AD 15BE  
           __end_of_setRF_Initialization 1934                    __size_of_getTemp_Safe 0007  
                          ?_setSw_Status 0022                       _setRFSW_AdjControl 1FC0  
                __end_of_RfSWPointSelect 1B62                        Sw_DimmerOnFunc@sw 0063  
                                _IOC_ISR 1D5E                          ?_setTemp_Enable 0071  
                                _IOC_Set 1A02                     __size_of_setLog_Code 0048  
                                _INT_ISR 19C6                                  _INT_Set 1906  
                   ?_CC2500_WriteCommand 0071                        _Flash_Memory_Main 113E  
                      _Flash_Memory_Read 1BD8                   __size_of_CC2500_RxData 0064  
                 __size_of_CC2500_TxData 0044                      ?_setRFSW_AdjControl 0071  
    setDimmerLights_TriggerERROR@command 0022                              setTxData@rf 0023  
                                _RF_Data 00A0                                  _RF_Main 18FD  
                     ?_Flash_Memory_Main 0071                       ?_Flash_Memory_Read 0071  
        __end_of_setControl_Lights_Table 0C1C                              ?_TouchPower 0071  
                        _Sw_DimmerOnFunc 169C                          _setPercentValue 1183  
                          setLog_Code@rf 002B                         ?_getPercentValue 0071  
                                _Dimmer1 00E2             __end_of_CC2500_FrequencyCabr 19DE  
                        __size_of_IO_Set 0019                      ??_Flash_Memory_Main 0027  
                    ??_Flash_Memory_Read 0020                                  _VarLED1 00DA  
                                _VarLED2 00DE                        __end_of_getRxData 12B3  
             __end_of_setPowerFault_Main 071C                 _CC2500_registers_address 1800  
                         RF_RxDisable@rf 0024                    ??_Temp_Initialization 0021  
              __size_of_MainT_ResetClock 0023          __end_of_setDimmerLights_Trigger 1A93  
                                _Product 006E                     ??_setRFSW_AdjControl 0064  
                           _getTemp_Safe 1926                           ??_setTemp_Main 002D  
         __end_of_setDimmerLights_Switch 1A83                                  ___ftadd 0F0A  
                         ??_setSw_Enable 0022                                  ___ftdiv 0CC4  
                        __size_of___wmul 001E                                  ___ftmul 0D6D  
                                ___fttol 095E                      __end_of_Switch_Main 1954  
                ??_Buzzer_Initialization 0020                 ??_setOverTemp_Exceptions 002B  
                             ??___awtoft 002B                               ??___ftpack 0025  
                        __size_of_setLED 005E                     setRFSW_AdjControl@sw 0066  
                ??_setDimmerLights_ERROR 0024                          __size_of_setBuz 0077  
                         ??_setSw_Status 0023                                  __ptext1 15BE  
                                __ptext2 1035                                  __ptext3 1B78  
                                __ptext4 18E6                                  __ptext5 04F7  
                                __ptext6 10B8                                  __ptext7 1954  
                                __ptext8 18E3                                  __ptext9 19AF  
                ??_setDimmerLights_AdjRF 005F                  ??_setDimmerLights_AdjGo 0023  
              __size_of_CC2500_SIDLEMode 0004                      Sw_DimmerOnFunc@Idle 0062  
                           __size_of_ISR 0012                __end_of_Flash_Memory_Main 1183  
              __end_of_Flash_Memory_Read 1BF1                               _setRF_Main 0A6E  
                          _DelayOff_Main 193C                        _DimmerLights_Main 1999  
                      __end_of_setINT_GO 196E           __size_of_DlyOff_Initialization 000B  
                  ??_CC2500_WriteCommand 0022            __end_of_DlyOff_Initialization 198E  
                      ??_setRF_ReceiveGO 0074               __end_of_CC2500_ClearRXFIFO 18ED  
               ??_setTemp_Initialization 0020               __end_of_CC2500_ClearTXFIFO 18F1  
          DimmerLightsPointSelect@lights 0021                             ?_DlyOff_Main 0071  
                     ?_DimmerLights_Main 0071                           _LedPointSelect 1CF6  
                    _DelayOffPointSelect 1AFA                                  clrloop0 1913  
         __size_of_Switch_Initialization 000D            __end_of_Switch_Initialization 1A29  
                   end_of_initialization 004D                ??_DelayOff_Initialization 0023  
                      _CC2500_InitSetREG 1DD0                            _DelayTime_1us 1D83  
                      __end_of_setTxData 07E5               __end_of_Flash_Memory_Write 1ED9  
                                init_ram 190C                       ?_CC2500_InitSetREG 0071  
                    ??_DimmerLights_Main 0067                     Flash_Memory_Read@ret 0023  
                                initloop 190D                               _setSw_Main 0393  
                  CC2500_ReadByte@loop_b 0021                        _CC2500_ReadStatus 07E5  
                            ?_getPF_Safe 0071                     Flash_Memory_Modify@i 0026  
                  _setLED_Initialization 1AC3                            _CC2500_Enable 0380  
                       ?i1_RfPointSelect 0071                       ?_CC2500_ReadStatus 0071  
                       setRFSW_Status@sw 0023            __size_of_MainT_Initialization 0013  
                          ??_clearingWDT 0020                 __size_of_CC2500_ReadByte 001D  
                          _CC2500_RxData 1425                            _CC2500_TxData 10FA  
                    ??_CC2500_InitSetREG 0025                     __end_of_setRF_Enable 1E24  
         ??_setPowerFault_Initialization 0020              ?_setDimmerLights_TriggerAdj 0022  
              __size_of_getPowerFault_AD 0041            __size_of_Flash_Memory_Erasing 000C  
                   ?_DelayOffPointSelect 0071                      _Flash_Memory_Modify 1489  
                _DimmerLights_Exceptions 14EE                             __pstringtext 1800  
                    _Flash_Memory_Unlock 195C                      ??_CC2500_ReadStatus 0022  
                 setRF_Initialization@rf 0071         getDimmerLights_StatusFlag@Status 0021  
                CC2500_InitSetREG@loop_c 0028                              ?_getTemp_AD 0071  
                    __size_of_TouchPower 0005                 setLED_Initialization@led 0024  
                 setSw_Initialization@sw 0024                __end_of_DimmerLights_Main 19A4  
                     _Mcu_Initialization 1C24                 __size_of_CC2500_PowerRST 0030  
                         ?_DelayOff_Main 0071                         ?_RfSWPointSelect 0071  
                        _setSw_Main$4180 00EB                          _setSw_Main$4179 00EA  
                       __CFG_FOSC$INTOSC 0000                   __end_of_LedPointSelect 1D18  
                __end_of_Sw_DimmerOnFunc 1711                  __end_of_setPercentValue 11C9  
               __size_of_CC2500_WriteREG 0019                __end_of_CC2500_InitSetREG 1DFA  
                    ?_Mcu_Initialization 0071         __end_of_setPowerFault_Exceptions 1F43  
                   ?_Flash_Memory_Modify 0071              __size_of_setRF_DimmerLights 006B  
                         ?_DelayTime_1us 0020                      _setDimmerLights_Adj 1F43  
                   ?_Flash_Memory_Unlock 0071                __end_of_CC2500_ReadStatus 0800  
                          ?_RF_RxDisable 0071                              ___ftdiv@exp 003C  
                         __end_of_IO_Set 1C0A                     _setRF_Initialization 192D  
                            _Switch_Main 194C                        __size_of_LED_Main 000C  
                         ?_CC2500_RxData 0071                           ?_CC2500_TxData 0071  
                _DimmerLightsPointSelect 1AD4                              ___ftmul@exp 0038  
                  _CC2500_PowerOnInitial 1B22                     ??_Mcu_Initialization 0021  
                  ??_DelayOffPointSelect 0020                     ?_setDimmerLights_Adj 0062  
              __size_of_Sw_DimmerAdjFunc 0042                     setRF_DimmerLights@on 005D  
                         __end_of___wmul 1C95                             setRF_Main@rf 00EC  
                      __size_of_TMR0_ISR 0342          __size_of_setOverTemp_Exceptions 0042  
                    __end_of_clearingWDT 0004                        __size_of_TMR0_Set 000D  
          __size_of_setDimmerLights_Main 007B                           __end_of_setLED 13C4  
                         __end_of_setBuz 1788          _getDimmerLights_StatusFlag$1629 0022  
                   _CC2500_FrequencyCabr 19D2                __size_of_Sw_DimmerOffFunc 0078  
             __size_of_Flash_Memory_Main 0045               __size_of_Flash_Memory_Read 0019  
                            ?_setRF_Main 0071                          _setRFSW_Control 0AF9  
                    __size_of_getPF_Safe 0008                        ?_setDimmerReClock 0071  
                    start_initialization 0018                        _setRF_DimmerValue 1000  
                        ?_LedPointSelect 0071               __end_of_DimmerLights_Close 1BA6  
                            __end_of_ISR 0016                    ??_Flash_Memory_Modify 0024  
                 __size_of_Watch_Dog_set 0004       __size_of_PowerFault_Initialization 0003  
                     ??_setDimmerReClock 0071                       ?_setRF_DimmerValue 0071  
             __end_of_CC2500_InitPATable 1CB4          __size_of_setTemp_Initialization 000B  
                  ??_Flash_Memory_Unlock 0020                  ??_Dimmer_Initialization 0020  
                   __end_of_setTemp_Main 0614                           ??_RF_RxDisable 0024  
                   __end_of_setSw_Enable 1C5A                          RfPointSelect@rf 0021  
                           ?_Buzzer_Main 0071                                 ??_IO_Set 0020  
                              _VarErrLED 00D6                              ?_setSw_Main 0071  
                    ??_setRF_DimmerValue 0061                      __size_of_getTemp_AD 006C  
                 ?_setLED_Initialization 0071                     __end_of_setSw_Status 1A63  
                     Sw_DimmerAdjFunc@sw 0025                    ?_setRF_Initialization 0071  
                              _VarMemory 0220                  __size_of_setRFSW_Status 000F  
                  __end_of_RfPointSelect 1999                __size_of_CC2500_WriteByte 0019  
                              _VarTimer0 00C3                                _Temp_Main 18E6  
              ??_DimmerLights_Exceptions 002A            setOverTemp_Exceptions@command 002C  
                       _MainT_ResetClock 1D18                                _Rx_Length 00BD  
                setRF_DimmerValue@lights 0063                    ??_setDimmerLights_Adj 0063  
                               ??___wmul 0024                   __size_of_SwPointSelect 0014  
                              _Tx_Length 00BF                              __pdataBANK3 01A0  
                               ??_setLED 0023                         ??_setTemp_Enable 0020  
                               ?_ADC_Set 0071                                 ??_setBuz 0028  
                        ??_DelayOff_Main 0065                        ??_CC2500_ReadByte 0020  
                       _CC2500_SIDLEMode 18F1               __size_of_DimmerLights_Main 000B  
              __end_of_setRF_DimmerValue 1035                    ?_CC2500_FrequencyCabr 0071  
                       setINT_GO@command 0020                            ??_setLED_Main 0022  
                      __size_of___awtoft 0022                        __size_of___ftpack 0061  
                               ?_IOC_ISR 0071                          _setRF_Main$3858 00ED  
                            __pbssCOMMON 0076                                 ?_IOC_Set 0071  
                              ___latbits 0003                    setTemp_Enable@command 0020  
                               ?_INT_ISR 0071                      setRF_Enable@command 0022  
                       ?_Sw_DimmerOnFunc 0071                            __pcstackBANK0 0020  
                          __pcstackBANK1 00EA                                 ?_INT_Set 0071  
                       ?_setPercentValue 0071                          ??_DelayTime_1us 0022  
             __size_of_CC2500_InitSetREG 002A                 __size_of_setDimmerLights 0089  
                          DlyOff_Main@sw 0064                        ??_CC2500_PowerRST 0026  
                               ?_RF_Main 0071                             ??_TouchPower 0020  
               __size_of_PowerFault_Main 0003                     __size_of_DlyOff_Main 0072  
             __size_of_CC2500_ReadStatus 001B                   _setOverTemp_Exceptions 10B8  
                          ??_setRF_Learn 0023                        ??_CC2500_WriteREG 0023  
                          _DimmerLights1 0120                            _DimmerLights2 012E  
                  CC2500_WriteREG@w_addr 0024                    setDelayOff_GO@command 0023  
              ??_DimmerLightsPointSelect 0020                    __size_of_setRF_Enable 002A  
                        ??_CC2500_RxData 0024                  __size_of_setRF_RxStatus 000E  
                        ??_CC2500_TxData 0024                                __pnvBANK0 006D  
                              __pnvBANK1 00EE              __size_of_LED_Initialization 000C  
                 ?_CC2500_PowerOnInitial 0071                               ?_Temp_Main 0071  
                    __size_of_setRF_Main 008B                    DelayOffPointSelect@sw 0021  
                             setBuz@time 0026                      setDelayOff_GO@value 0024  
               ?_setControl_Lights_Table 0071                            _Watch_Dog_set 18F5  
                            _clearingWDT 0002                   _setTemp_Initialization 19AF  
                       _getPowerFault_AD 1035        __size_of_setPowerFault_Exceptions 003A  
    __end_of_Flash_Memory_Initialization 0F0A              _Flash_Memory_Initialization 0E21  
              ?_setPowerFault_Exceptions 0071                                __ptext100 13C4  
                              __ptext101 1A45                                __ptext110 1AFA  
                              __ptext102 1B4C                                __ptext111 1B22  
                              __ptext103 1A83                                __ptext120 18E9  
                              __ptext112 18F1                                __ptext104 1A73  
                              __ptext121 1A63                                __ptext113 1ED9  
                              __ptext105 1AD4                                __ptext130 19BA  
                              __ptext122 1BA6                                __ptext114 1DD0  
                              __ptext106 1711                                __ptext131 196E  
                              __ptext123 0C1C                                __ptext115 1C95  
                              __ptext107 1C77                                __ptext124 1978  
                              __ptext116 1BBF                                __ptext108 1934  
                              __ptext117 19D2                                __ptext109 1983  
                               ?___ftadd 003E                                __ptext126 0051  
                              __ptext118 1D83                                __ptext127 1D5E  
                              __ptext119 18ED                                __ptext128 1C0A  
                              __ptext129 19C6                                _getRxData 1261  
                               ?___ftdiv 002E                                 ?___ftmul 002E  
                               ?___fttol 004B                  __end_of_setRFSW_Control 0B89  
                        _setRF_ReceiveGO 19BA            __size_of_setSw_Initialization 0008  
         __size_of_Buzzer_Initialization 000B            __end_of_Buzzer_Initialization 1983  
                       getPercentValue@i 005C                         setPercentValue@i 005A  
                          ??_setLog_Code 002A                       __end_of_TouchPower 1906  
                     _setPowerFault_Main 0614       setDimmerLights_TriggerERROR@lights 0023  
         __size_of_setDimmerLights_ERROR 0050                 ?_setDimmerLights_Trigger 0022  
                        DelayTimejudge@i 0021                      __size_of_setSw_Main 0164  
          __end_of_setDimmerLights_ERROR 1261             CC2500_ReadStatus@status_addr 0023  
         __size_of_setDimmerLights_AdjRF 0023           __size_of_setDimmerLights_AdjGo 0010  
          __end_of_setDimmerLights_AdjRF 1D5E            __end_of_setDimmerLights_AdjGo 1AB3  
                 CC2500_WriteByte@loop_a 0021                           __size_of_MainT 0079  
                              _r_address 00C0             __end_of_CC2500_patable_vaule 1866  
                       __CFG_WDTE$SWDTEN 0000                      ?_setPowerFault_Main 0071  
                         __size_of_getAD 0016                             _setRF_Enable 1DFA  
                __size_of_DelayTimejudge 002E                            _SwPointSelect 1B0E  
                     Sw_DimmerOffFunc@sw 0064                                _setINT_GO 1965  
                    __end_of_setLED_Main 1FC0                   ??_setRF_Initialization 0020  
            __end_of_Temp_Initialization 18E6                        _CC2500_rfSettings 182F  
                         ___wmul@product 0024                                 _LED_Main 19F6  
                           ??_getPF_Safe 0020                          SwPointSelect@sw 0021  
                              clear_ram0 1912                 CC2500_InitPATable@loop_d 0027  
                              _setTxData 071C      __end_of_DimmerLights_Initialization 1B4C  
            _DimmerLights_Initialization 1B37                       _CC2500_ClearRXFIFO 18E9  
                     _CC2500_ClearTXFIFO 18ED           setDimmerLights_Trigger@command 0022  
                         ?_Watch_Dog_set 0071                 setRF_DimmerLights@lights 0061  
                               _GO_nDONE 04E9                      __end_of_setRF_Learn 1A45  
                   ??_setPowerFault_Main 002D                 __size_of_getPercentValue 005B  
               setRF_DimmerLights@status 0060                   setRF_ReceiveGO@command 0073  
            __size_of_setRFSW_AdjControl 0040                       _Flash_Memory_Write 1EAA  
                             ?_getRxData 0071                                 _TMR0_ISR 0051  
                 CC2500_InitSetREG@temp1 0026                   CC2500_InitSetREG@temp2 0027  
                      setRF_ReceiveGO@rf 0074                                 _TMR0_Set 1A0F  
                       _Sw_DimmerAdjFunc 1076                      ?_CC2500_ClearRXFIFO 0071  
                    ?_CC2500_ClearTXFIFO 0071        setDimmerLights_TriggerAdj@command 0022  
                               _RF_Count 00B5                     __end_of_RF_RxDisable 1DD0  
                           ??_getTemp_AD 0024              __end_of_CC2500_WriteCommand 1A73  
                 ??_CC2500_FrequencyCabr 0026                  DlyOff_Initialization@sw 0022  
                       __size_of_ADC_Set 0007                        ___wmul@multiplier 0020  
             __size_of_setRF_DimmerValue 0035                      ?_Flash_Memory_Write 0071  
                       _Sw_DimmerOffFunc 1788                    __size_of_setTemp_Main 011D  
           __end_of_MainT_Initialization 1AFA                  __size_of_setDelayOff_GO 0058  
                  __size_of_setSw_Enable 001C                                 _DelayOff 0069  
                           setSw_Main@sw 00EC                       __end_of_getPF_Safe 195C  
                       __size_of_IOC_ISR 0025                         __size_of_IOC_Set 000D  
           __end_of_Flash_Memory_Erasing 19EA                           ?_SwPointSelect 0071  
                            getAD@adcon0 0023                              getAD@adcon1 0020  
                       __size_of_INT_ISR 000C                           setLED_Main@led 0024  
                       __size_of_INT_Set 0006                      __end_of_setLog_Code 1211  
                  _DlyOff_Initialization 1983                    __size_of_setSw_Status 000F  
                             ?_setINT_GO 0071                     ??_CC2500_ClearRXFIFO 0024  
                   ??_CC2500_ClearTXFIFO 0024                __end_of_CC2500_rfSettings 185E  
                       __size_of_RF_Main 0004                    _Switch_Initialization 1A1C  
                   ??_Flash_Memory_Write 0020                        ??_setDimmerLights 0025  
                         _setRFSW_Status 1A45                     __size_of_Buzzer_Main 00A8  
                     __end_of_getTemp_AD 162A                               ?_setTxData 0071  
                           ?_Switch_Main 0071                         _CC2500_WriteByte 1BA6  
                               _VarTMain 01C0             Flash_Memory_Initialization@i 005E  
                __end_of_setRF_ReceiveGO 19C6                              ??_Temp_Main 0030  
                      ??_PowerFault_Main 002F                        setRFSW_Control@sw 0063  
                              setLED@led 0023                                 _RxStatus 0383  
   __end_of_setDimmerLights_TriggerERROR 1E4F    __size_of_setDimmerLights_TriggerERROR 002B  
           _setDimmerLights_TriggerERROR 1E24                                 _TxStatus 0386  
                           _setTemp_Main 04F7                         __size_of___ftadd 00F6  
                       ?_setRFSW_Control 0071                         __size_of___ftdiv 00A9  
                           _setSw_Enable 1C3E                         __size_of___ftmul 00B4  
                       __size_of___fttol 0087                 __size_ofi1_RfPointSelect 000A  
                               ___awtoft 1CD4                         ??_LedPointSelect 0020  
                               ___ftpack 13C4                             _setSw_Status 1A54  
                      getTemp_AD@channel 0028                             ??_setRF_Main 00EB  
                   CC2500_WriteREG@value 0022                              _setLED_Main 1F80  
                  setRFSW_Status@command 0022               __end_of_setRF_DimmerLights 15BE  
               ?_DelayOff_Initialization 0071                 __end_of_MainT_ResetClock 1D3B  
                       setDelayOff_GO@sw 0027                                 __ptext10 194C  
                               __ptext11 0393                                 __ptext20 1901  
                               __ptext12 1A37                                 __ptext21 18FD  
                               __ptext13 169C                                 __ptext30 1000  
                               __ptext22 0A6E                                 __ptext14 1788  
                               __ptext31 1D3B                                 __ptext23 1261  
                               __ptext15 1076                                 __ptext40 1C5A  
                               __ptext32 130B                                 __ptext24 11C9  
                               __ptext16 1AB3                                 __ptext41 18F9  
                               __ptext33 0D6D                                 __ptext25 0B89  
                               __ptext17 1AA3                                 __ptext50 18DD  
                               __ptext42 192D                                 __ptext34 0F0A  
                               __ptext26 0AF9                                 __ptext18 1A1C  
                               __ptext51 1A93                                 __ptext43 18E0  
                               __ptext35 1DA9                                 __ptext27 12B3  
                               __ptext19 1944                                 __ptext60 0002  
                               __ptext52 1C24                                 __ptext44 0614  
                               __ptext36 10FA                                 __ptext28 1E7C  
                               __ptext61 1AE7                                 __ptext53 18F5  
                               __ptext45 1F09                                 __ptext37 1425  
                               __ptext29 1FC0                                 __ptext70 1AC3  
                               __ptext62 086A                                 __ptext54 1A0F  
                               __ptext46 14EE                                 __ptext38 1A29  
                               __ptext71 113E                                 __ptext63 19A4  
                               __ptext55 1BF1                                 __ptext47 1E24  
                               __ptext39 07E5                                 __ptext80 1F43  
                               __ptext72 1489                                 __ptext64 1C3E  
                               __ptext56 1A02                                 __ptext48 1211  
                               __ptext81 09E5                                 __ptext73 19DE  
                               __ptext65 1DFA                                 __ptext57 1906  
                               __ptext49 1926                                 __ptext90 162A  
                               __ptext82 1366                                 __ptext74 0E21  
                               __ptext66 1965                                 __ptext58 191F  
                               __ptext91 071C                                 __ptext83 1CF6  
                               __ptext75 1EAA                                 __ptext67 19F6  
                               __ptext59 1D18                                 __ptext92 198E  
                               __ptext84 1B8E                                 __ptext76 195C  
                               __ptext68 1F80                                 __ptext93 1A54  
                               __ptext85 1B62                                 __ptext77 1BD8  
                               __ptext69 19EA                                 __ptext94 1B0E  
                               __ptext86 1B37                                 __ptext78 1999  
                               __ptext95 1553                                 __ptext87 1E4F  
                               __ptext79 08E3                                 __ptext96 1183  
                               __ptext88 1918                                 __ptext97 095E  
                               __ptext89 193C                                 __ptext98 0CC4  
                               __ptext99 1CD4                  ??_setLED_Initialization 0024  
               __size_of_RfSWPointSelect 0016           __size_of_Dimmer_Initialization 0007  
                 __end_of_setRFSW_Status 1A54            __end_of_Dimmer_Initialization 191F  
           __end_of_setDimmerLights_Main 095E              setDimmerLights_ERROR@lights 0025  
                           ??_setSw_Main 0065                            setLED@command 0022  
                          __size_of_main 0068                              _setRF_Learn 1A37  
               __end_of_CC2500_SIDLEMode 18F5                           _setRF_RxStatus 1A29  
             setDimmerLights_Main@lights 0066              __end_of_DelayOffPointSelect 1B0E  
             CC2500_WriteCommand@command 0023                          ??_Watch_Dog_set 0020  
                     _DimmerLights_Close 1B8E                 ??_setDimmerLights_Switch 0023  
              __size_of_setDimmerReClock 001A                          _CC2500_ReadByte 1C5A  
                     _CC2500_InitPATable 1C95      __size_of_getDimmerLights_StatusFlag 0016  
          setDimmerLights_Trigger@lights 0023                       __end_of_setRF_Main 0AF9  
            __size_of_Mcu_Initialization 001A                     _CC2500_patable_vaule 185E  
                            ??_getRxData 0068                      ?_DimmerLights_Close 0071  
       setDimmerLights_TriggerAdj@lights 0023            ?_setDimmerLights_TriggerERROR 0022  
                    ?_CC2500_InitPATable 0071                          _CC2500_PowerRST 1ED9  
            __end_of_Flash_Memory_Modify 14EE                        ??_getPercentValue 0059  
                            _setLog_Code 11C9                    setRF_RxStatus@command 0022  
            __end_of_Flash_Memory_Unlock 1965                          ??_SwPointSelect 0020  
                        _CC2500_WriteREG 1BBF                       __end_of_setSw_Main 04F7  
                          _Transceive_GO 0384                            _Transceive_OK 0385  
                 ?_DlyOff_Initialization 0071                  ?_setOverTemp_Exceptions 0071  
                         _DelayTimejudge 1E7C                              pic14e$flags 007E  
               __end_of_getPowerFault_AD 1076                     ??_DimmerLights_Close 0023  
                            ??_setINT_GO 0020                                 intlevel1 0000  
                   ??_CC2500_InitPATable 0025                   ?_Switch_Initialization 0071  
                 __end_of_setRF_RxStatus 1A37                          ?_setRFSW_Status 0022  
                ??_CC2500_PowerOnInitial 0029   __end_of_setDimmerLights_Initialization 1E7C  
__size_of_setDimmerLights_Initialization 002D           _setDimmerLights_Initialization 1E4F  
            __end_of_setDimmerLights_Adj 1F80                  ?_setTemp_Initialization 0071  
                            ??_setTxData 0022                         ?_setRF_ReceiveGO 0073  
                 CC2500_InitPATable@temp 0026                     _MainT_Initialization 1AE7  
                  __size_of_RF_RxDisable 0027                        _RF_Initialization 18F9  
                           ?_clearingWDT 0071                            ?_getTemp_Safe 0071  
                   _Flash_Memory_Erasing 19DE                       ?_RF_Initialization 0071  
                             _SPI0Buffer 00BE          __end_of_DelayOff_Initialization 193C  
                             _OPTION_REG 0095                    __end_of_DelayOff_Main 1944  
                    ??_RF_Initialization 0021                              getRxData@rf 00EA  
                         _setDelayOff_GO 12B3         __size_of_setControl_Lights_Table 0093  
                 __end_of_DelayTimejudge 1EAA           __end_of_setOverTemp_Exceptions 10FA  
                 __size_of_RfPointSelect 000B                        ??i1_RfPointSelect 0071  
   __size_of_Flash_Memory_Initialization 00E9                            ??_DlyOff_Main 0062  
                  __end_of_DelayTime_1us 1DA9                 __end_of_Sw_DimmerAdjFunc 10B8  
                __end_of_CC2500_ReadByte 1C77             __end_of_setSw_Initialization 194C  
                        ?_setRF_RxStatus 0022                     getPercentValue@value 005B  
                           _RF_RxDisable 1DA9               ?_PowerFault_Initialization 0071  
             __end_of_LED_Initialization 19F6         __size_of_setDimmerLights_Trigger 0010  
         __end_of_setTemp_Initialization 19BA                 __size_of_Sw_DimmerOnFunc 0075  
               ?_DimmerLights_Exceptions 0071                 __size_of_setPercentValue 0046  
                   setPercentValue@value 0059                __end_of_RF_Initialization 18FD  
               __end_of_Sw_DimmerOffFunc 1800          __size_of_setDimmerLights_Switch 0010  
                      ??_RfSWPointSelect 0020                    ?_MainT_Initialization 0071  
                       setRF_RxStatus@rf 0023                    __end_of_CC2500_RxData 1489  
                  __end_of_CC2500_TxData 113E                           ??_getTemp_Safe 0020  
                    setSw_Status@command 0022                  __end_of_CC2500_PowerRST 1F09  
