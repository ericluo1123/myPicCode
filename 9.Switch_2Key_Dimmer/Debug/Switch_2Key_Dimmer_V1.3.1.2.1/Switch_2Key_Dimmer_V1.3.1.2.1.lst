

Microchip Technology PIC LITE Macro Assembler V1.32 build 58300 
                                                                                               Mon Sep 29 08:23:39 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	16F1518
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK3,global,class=CODE,delta=2
     5                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1
    10                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    14                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    15                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    16                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    17                           	psect	clrtext,global,class=CODE,delta=2
    18                           	psect	inittext,global,class=CODE,delta=2
    19                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    20                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    21                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    22                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    23                           	psect	text1,local,class=CODE,merge=1,delta=2
    24                           	psect	text2,local,class=CODE,merge=1,delta=2
    25                           	psect	text3,local,class=CODE,merge=1,delta=2
    26                           	psect	text4,local,class=CODE,merge=1,delta=2
    27                           	psect	text5,local,class=CODE,merge=1,delta=2
    28                           	psect	text6,local,class=CODE,merge=1,delta=2
    29                           	psect	text7,local,class=CODE,merge=1,delta=2
    30                           	psect	text8,local,class=CODE,merge=1,delta=2
    31                           	psect	text9,local,class=CODE,merge=1,delta=2
    32                           	psect	text10,local,class=CODE,merge=1,delta=2
    33                           	psect	text11,local,class=CODE,merge=1,delta=2
    34                           	psect	text12,local,class=CODE,merge=1,delta=2
    35                           	psect	text13,local,class=CODE,merge=1,delta=2
    36                           	psect	text14,local,class=CODE,merge=1,delta=2
    37                           	psect	text15,local,class=CODE,merge=1,delta=2
    38                           	psect	text16,local,class=CODE,merge=1,delta=2
    39                           	psect	text17,local,class=CODE,merge=1,delta=2
    40                           	psect	text18,local,class=CODE,merge=1,delta=2
    41                           	psect	text19,local,class=CODE,merge=1,delta=2
    42                           	psect	text20,local,class=CODE,merge=1,delta=2
    43                           	psect	text21,local,class=CODE,merge=1,delta=2
    44                           	psect	text22,local,class=CODE,merge=1,delta=2
    45                           	psect	text23,local,class=CODE,merge=1,delta=2
    46                           	psect	text24,local,class=CODE,merge=1,delta=2
    47                           	psect	text25,local,class=CODE,merge=1,delta=2
    48                           	psect	text26,local,class=CODE,merge=1,delta=2
    49                           	psect	text27,local,class=CODE,merge=1,delta=2
    50                           	psect	text28,local,class=CODE,merge=1,delta=2
    51                           	psect	text29,local,class=CODE,merge=1,delta=2
    52                           	psect	text30,local,class=CODE,merge=1,delta=2
    53                           	psect	text31,local,class=CODE,merge=1,delta=2
    54                           	psect	text32,local,class=CODE,merge=1,delta=2
    55                           	psect	text33,local,class=CODE,merge=1,delta=2
    56                           	psect	text34,local,class=CODE,merge=1,delta=2
    57                           	psect	text35,local,class=CODE,merge=1,delta=2
    58                           	psect	text36,local,class=CODE,merge=1,delta=2
    59                           	psect	text37,local,class=CODE,merge=1,delta=2
    60                           	psect	text38,local,class=CODE,merge=1,delta=2
    61                           	psect	text39,local,class=CODE,merge=1,delta=2
    62                           	psect	text40,local,class=CODE,merge=1,delta=2
    63                           	psect	text41,local,class=CODE,merge=1,delta=2
    64                           	psect	text42,local,class=CODE,merge=1,delta=2
    65                           	psect	text43,local,class=CODE,merge=1,delta=2
    66                           	psect	text44,local,class=CODE,merge=1,delta=2
    67                           	psect	text45,local,class=CODE,merge=1,delta=2
    68                           	psect	text46,local,class=CODE,merge=1,delta=2
    69                           	psect	text47,local,class=CODE,merge=1,delta=2
    70                           	psect	text48,local,class=CODE,merge=1,delta=2
    71                           	psect	text49,local,class=CODE,merge=1,delta=2
    72                           	psect	text50,local,class=CODE,merge=1,delta=2
    73                           	psect	text51,local,class=CODE,merge=1,delta=2
    74                           	psect	text52,local,class=CODE,merge=1,delta=2
    75                           	psect	text53,local,class=CODE,merge=1,delta=2
    76                           	psect	text54,local,class=CODE,merge=1,delta=2
    77                           	psect	text55,local,class=CODE,merge=1,delta=2
    78                           	psect	text56,local,class=CODE,merge=1,delta=2
    79                           	psect	text57,local,class=CODE,merge=1,delta=2
    80                           	psect	text58,local,class=CODE,merge=1,delta=2
    81                           	psect	text59,local,class=CODE,merge=1,delta=2
    82                           	psect	text60,local,class=CODE,merge=1,delta=2
    83                           	psect	text61,local,class=CODE,merge=1,delta=2
    84                           	psect	text62,local,class=CODE,merge=1,delta=2
    85                           	psect	text63,local,class=CODE,merge=1,delta=2
    86                           	psect	text64,local,class=CODE,merge=1,delta=2
    87                           	psect	text65,local,class=CODE,merge=1,delta=2
    88                           	psect	text66,local,class=CODE,merge=1,delta=2
    89                           	psect	text67,local,class=CODE,merge=1,delta=2
    90                           	psect	text68,local,class=CODE,merge=1,delta=2
    91                           	psect	text69,local,class=CODE,merge=1,delta=2
    92                           	psect	text70,local,class=CODE,merge=1,delta=2
    93                           	psect	text71,local,class=CODE,merge=1,delta=2
    94                           	psect	text72,local,class=CODE,merge=1,delta=2
    95                           	psect	text73,local,class=CODE,merge=1,delta=2
    96                           	psect	text74,local,class=CODE,merge=1,delta=2
    97                           	psect	text75,local,class=CODE,merge=1,delta=2
    98                           	psect	text76,local,class=CODE,merge=1,delta=2
    99                           	psect	text77,local,class=CODE,merge=1,delta=2
   100                           	psect	text78,local,class=CODE,merge=1,delta=2
   101                           	psect	text79,local,class=CODE,merge=1,delta=2
   102                           	psect	text80,local,class=CODE,merge=1,delta=2
   103                           	psect	text81,local,class=CODE,merge=1,delta=2
   104                           	psect	text82,local,class=CODE,merge=1,delta=2
   105                           	psect	text83,local,class=CODE,merge=1,delta=2
   106                           	psect	text84,local,class=CODE,merge=1,delta=2
   107                           	psect	text85,local,class=CODE,merge=1,delta=2
   108                           	psect	text86,local,class=CODE,merge=1,delta=2
   109                           	psect	text87,local,class=CODE,merge=1,delta=2
   110                           	psect	text88,local,class=CODE,merge=1,delta=2
   111                           	psect	text89,local,class=CODE,merge=1,delta=2
   112                           	psect	text90,local,class=CODE,merge=1,delta=2
   113                           	psect	text91,local,class=CODE,merge=1,delta=2
   114                           	psect	text92,local,class=CODE,merge=1,delta=2
   115                           	psect	text93,local,class=CODE,merge=1,delta=2
   116                           	psect	text94,local,class=CODE,merge=1,delta=2
   117                           	psect	text95,local,class=CODE,merge=1,delta=2
   118                           	psect	text96,local,class=CODE,merge=1,delta=2
   119                           	psect	text97,local,class=CODE,merge=1,delta=2
   120                           	psect	text98,local,class=CODE,merge=1,delta=2
   121                           	psect	text99,local,class=CODE,merge=1,delta=2
   122                           	psect	text100,local,class=CODE,merge=1,delta=2
   123                           	psect	text101,local,class=CODE,merge=1,delta=2
   124                           	psect	text102,local,class=CODE,merge=1,delta=2
   125                           	psect	text103,local,class=CODE,merge=1,delta=2
   126                           	psect	text104,local,class=CODE,merge=1,delta=2
   127                           	psect	text105,local,class=CODE,merge=1,delta=2
   128                           	psect	text106,local,class=CODE,merge=1,delta=2
   129                           	psect	text107,local,class=CODE,merge=1,delta=2
   130                           	psect	text108,local,class=CODE,merge=1,delta=2
   131                           	psect	text109,local,class=CODE,merge=1,delta=2
   132                           	psect	text110,local,class=CODE,merge=1,delta=2
   133                           	psect	text111,local,class=CODE,merge=1,delta=2
   134                           	psect	text112,local,class=CODE,merge=1,delta=2
   135                           	psect	text113,local,class=CODE,merge=1,delta=2
   136                           	psect	text114,local,class=CODE,merge=1,delta=2
   137                           	psect	text115,local,class=CODE,merge=1,delta=2
   138                           	psect	text116,local,class=CODE,merge=1,delta=2
   139                           	psect	text117,local,class=CODE,merge=1,delta=2
   140                           	psect	text118,local,class=CODE,merge=1,delta=2
   141                           	psect	text119,local,class=CODE,merge=1,delta=2
   142                           	psect	text120,local,class=CODE,merge=1,delta=2
   143                           	psect	text121,local,class=CODE,merge=1,delta=2
   144                           	psect	text122,local,class=CODE,merge=1,delta=2
   145                           	psect	intentry,global,class=CODE,delta=2
   146                           	psect	text124,local,class=CODE,merge=1,delta=2
   147                           	psect	text125,local,class=CODE,merge=1,delta=2
   148                           	psect	text126,local,class=CODE,merge=1,delta=2
   149                           	psect	text127,local,class=CODE,merge=1,delta=2
   150                           	psect	text128,local,class=CODE,merge=1,delta=2
   151                           	psect	text129,local,class=CODE,merge=1,delta=2
   152                           	dabs	1,0x7E,2
   153  0000                     	;# 
   154  0001                     	;# 
   155  0002                     	;# 
   156  0003                     	;# 
   157  0004                     	;# 
   158  0005                     	;# 
   159  0006                     	;# 
   160  0007                     	;# 
   161  0008                     	;# 
   162  0009                     	;# 
   163  000A                     	;# 
   164  000B                     	;# 
   165  000C                     	;# 
   166  000D                     	;# 
   167  000E                     	;# 
   168  0010                     	;# 
   169  0011                     	;# 
   170  0012                     	;# 
   171  0015                     	;# 
   172  0016                     	;# 
   173  0016                     	;# 
   174  0017                     	;# 
   175  0018                     	;# 
   176  0019                     	;# 
   177  001A                     	;# 
   178  001B                     	;# 
   179  001C                     	;# 
   180  008C                     	;# 
   181  008D                     	;# 
   182  008E                     	;# 
   183  0090                     	;# 
   184  0091                     	;# 
   185  0092                     	;# 
   186  0095                     	;# 
   187  0096                     	;# 
   188  0097                     	;# 
   189  0099                     	;# 
   190  009A                     	;# 
   191  009B                     	;# 
   192  009B                     	;# 
   193  009C                     	;# 
   194  009D                     	;# 
   195  009E                     	;# 
   196  010C                     	;# 
   197  010D                     	;# 
   198  010E                     	;# 
   199  0116                     	;# 
   200  0117                     	;# 
   201  011D                     	;# 
   202  018C                     	;# 
   203  018D                     	;# 
   204  018E                     	;# 
   205  0191                     	;# 
   206  0191                     	;# 
   207  0192                     	;# 
   208  0193                     	;# 
   209  0193                     	;# 
   210  0194                     	;# 
   211  0195                     	;# 
   212  0196                     	;# 
   213  0197                     	;# 
   214  0199                     	;# 
   215  019A                     	;# 
   216  019B                     	;# 
   217  019B                     	;# 
   218  019B                     	;# 
   219  019B                     	;# 
   220  019C                     	;# 
   221  019C                     	;# 
   222  019D                     	;# 
   223  019E                     	;# 
   224  019F                     	;# 
   225  020D                     	;# 
   226  0210                     	;# 
   227  0211                     	;# 
   228  0211                     	;# 
   229  0212                     	;# 
   230  0212                     	;# 
   231  0213                     	;# 
   232  0213                     	;# 
   233  0214                     	;# 
   234  0214                     	;# 
   235  0215                     	;# 
   236  0215                     	;# 
   237  0215                     	;# 
   238  0216                     	;# 
   239  0216                     	;# 
   240  0217                     	;# 
   241  0217                     	;# 
   242  0291                     	;# 
   243  0291                     	;# 
   244  0292                     	;# 
   245  0293                     	;# 
   246  0298                     	;# 
   247  0298                     	;# 
   248  0299                     	;# 
   249  029A                     	;# 
   250  0394                     	;# 
   251  0395                     	;# 
   252  0396                     	;# 
   253  0FE4                     	;# 
   254  0FE5                     	;# 
   255  0FE6                     	;# 
   256  0FE7                     	;# 
   257  0FE8                     	;# 
   258  0FE9                     	;# 
   259  0FEA                     	;# 
   260  0FEB                     	;# 
   261  0FED                     	;# 
   262  0FEE                     	;# 
   263  0FEF                     	;# 
   264  0000                     	;# 
   265  0001                     	;# 
   266  0002                     	;# 
   267  0003                     	;# 
   268  0004                     	;# 
   269  0005                     	;# 
   270  0006                     	;# 
   271  0007                     	;# 
   272  0008                     	;# 
   273  0009                     	;# 
   274  000A                     	;# 
   275  000B                     	;# 
   276  000C                     	;# 
   277  000D                     	;# 
   278  000E                     	;# 
   279  0010                     	;# 
   280  0011                     	;# 
   281  0012                     	;# 
   282  0015                     	;# 
   283  0016                     	;# 
   284  0016                     	;# 
   285  0017                     	;# 
   286  0018                     	;# 
   287  0019                     	;# 
   288  001A                     	;# 
   289  001B                     	;# 
   290  001C                     	;# 
   291  008C                     	;# 
   292  008D                     	;# 
   293  008E                     	;# 
   294  0090                     	;# 
   295  0091                     	;# 
   296  0092                     	;# 
   297  0095                     	;# 
   298  0096                     	;# 
   299  0097                     	;# 
   300  0099                     	;# 
   301  009A                     	;# 
   302  009B                     	;# 
   303  009B                     	;# 
   304  009C                     	;# 
   305  009D                     	;# 
   306  009E                     	;# 
   307  010C                     	;# 
   308  010D                     	;# 
   309  010E                     	;# 
   310  0116                     	;# 
   311  0117                     	;# 
   312  011D                     	;# 
   313  018C                     	;# 
   314  018D                     	;# 
   315  018E                     	;# 
   316  0191                     	;# 
   317  0191                     	;# 
   318  0192                     	;# 
   319  0193                     	;# 
   320  0193                     	;# 
   321  0194                     	;# 
   322  0195                     	;# 
   323  0196                     	;# 
   324  0197                     	;# 
   325  0199                     	;# 
   326  019A                     	;# 
   327  019B                     	;# 
   328  019B                     	;# 
   329  019B                     	;# 
   330  019B                     	;# 
   331  019C                     	;# 
   332  019C                     	;# 
   333  019D                     	;# 
   334  019E                     	;# 
   335  019F                     	;# 
   336  020D                     	;# 
   337  0210                     	;# 
   338  0211                     	;# 
   339  0211                     	;# 
   340  0212                     	;# 
   341  0212                     	;# 
   342  0213                     	;# 
   343  0213                     	;# 
   344  0214                     	;# 
   345  0214                     	;# 
   346  0215                     	;# 
   347  0215                     	;# 
   348  0215                     	;# 
   349  0216                     	;# 
   350  0216                     	;# 
   351  0217                     	;# 
   352  0217                     	;# 
   353  0291                     	;# 
   354  0291                     	;# 
   355  0292                     	;# 
   356  0293                     	;# 
   357  0298                     	;# 
   358  0298                     	;# 
   359  0299                     	;# 
   360  029A                     	;# 
   361  0394                     	;# 
   362  0395                     	;# 
   363  0396                     	;# 
   364  0FE4                     	;# 
   365  0FE5                     	;# 
   366  0FE6                     	;# 
   367  0FE7                     	;# 
   368  0FE8                     	;# 
   369  0FE9                     	;# 
   370  0FEA                     	;# 
   371  0FEB                     	;# 
   372  0FED                     	;# 
   373  0FEE                     	;# 
   374  0FEF                     	;# 
   375  0000                     	;# 
   376  0001                     	;# 
   377  0002                     	;# 
   378  0003                     	;# 
   379  0004                     	;# 
   380  0005                     	;# 
   381  0006                     	;# 
   382  0007                     	;# 
   383  0008                     	;# 
   384  0009                     	;# 
   385  000A                     	;# 
   386  000B                     	;# 
   387  000C                     	;# 
   388  000D                     	;# 
   389  000E                     	;# 
   390  0010                     	;# 
   391  0011                     	;# 
   392  0012                     	;# 
   393  0015                     	;# 
   394  0016                     	;# 
   395  0016                     	;# 
   396  0017                     	;# 
   397  0018                     	;# 
   398  0019                     	;# 
   399  001A                     	;# 
   400  001B                     	;# 
   401  001C                     	;# 
   402  008C                     	;# 
   403  008D                     	;# 
   404  008E                     	;# 
   405  0090                     	;# 
   406  0091                     	;# 
   407  0092                     	;# 
   408  0095                     	;# 
   409  0096                     	;# 
   410  0097                     	;# 
   411  0099                     	;# 
   412  009A                     	;# 
   413  009B                     	;# 
   414  009B                     	;# 
   415  009C                     	;# 
   416  009D                     	;# 
   417  009E                     	;# 
   418  010C                     	;# 
   419  010D                     	;# 
   420  010E                     	;# 
   421  0116                     	;# 
   422  0117                     	;# 
   423  011D                     	;# 
   424  018C                     	;# 
   425  018D                     	;# 
   426  018E                     	;# 
   427  0191                     	;# 
   428  0191                     	;# 
   429  0192                     	;# 
   430  0193                     	;# 
   431  0193                     	;# 
   432  0194                     	;# 
   433  0195                     	;# 
   434  0196                     	;# 
   435  0197                     	;# 
   436  0199                     	;# 
   437  019A                     	;# 
   438  019B                     	;# 
   439  019B                     	;# 
   440  019B                     	;# 
   441  019B                     	;# 
   442  019C                     	;# 
   443  019C                     	;# 
   444  019D                     	;# 
   445  019E                     	;# 
   446  019F                     	;# 
   447  020D                     	;# 
   448  0210                     	;# 
   449  0211                     	;# 
   450  0211                     	;# 
   451  0212                     	;# 
   452  0212                     	;# 
   453  0213                     	;# 
   454  0213                     	;# 
   455  0214                     	;# 
   456  0214                     	;# 
   457  0215                     	;# 
   458  0215                     	;# 
   459  0215                     	;# 
   460  0216                     	;# 
   461  0216                     	;# 
   462  0217                     	;# 
   463  0217                     	;# 
   464  0291                     	;# 
   465  0291                     	;# 
   466  0292                     	;# 
   467  0293                     	;# 
   468  0298                     	;# 
   469  0298                     	;# 
   470  0299                     	;# 
   471  029A                     	;# 
   472  0394                     	;# 
   473  0395                     	;# 
   474  0396                     	;# 
   475  0FE4                     	;# 
   476  0FE5                     	;# 
   477  0FE6                     	;# 
   478  0FE7                     	;# 
   479  0FE8                     	;# 
   480  0FE9                     	;# 
   481  0FEA                     	;# 
   482  0FEB                     	;# 
   483  0FED                     	;# 
   484  0FEE                     	;# 
   485  0FEF                     	;# 
   486  0000                     	;# 
   487  0001                     	;# 
   488  0002                     	;# 
   489  0003                     	;# 
   490  0004                     	;# 
   491  0005                     	;# 
   492  0006                     	;# 
   493  0007                     	;# 
   494  0008                     	;# 
   495  0009                     	;# 
   496  000A                     	;# 
   497  000B                     	;# 
   498  000C                     	;# 
   499  000D                     	;# 
   500  000E                     	;# 
   501  0010                     	;# 
   502  0011                     	;# 
   503  0012                     	;# 
   504  0015                     	;# 
   505  0016                     	;# 
   506  0016                     	;# 
   507  0017                     	;# 
   508  0018                     	;# 
   509  0019                     	;# 
   510  001A                     	;# 
   511  001B                     	;# 
   512  001C                     	;# 
   513  008C                     	;# 
   514  008D                     	;# 
   515  008E                     	;# 
   516  0090                     	;# 
   517  0091                     	;# 
   518  0092                     	;# 
   519  0095                     	;# 
   520  0096                     	;# 
   521  0097                     	;# 
   522  0099                     	;# 
   523  009A                     	;# 
   524  009B                     	;# 
   525  009B                     	;# 
   526  009C                     	;# 
   527  009D                     	;# 
   528  009E                     	;# 
   529  010C                     	;# 
   530  010D                     	;# 
   531  010E                     	;# 
   532  0116                     	;# 
   533  0117                     	;# 
   534  011D                     	;# 
   535  018C                     	;# 
   536  018D                     	;# 
   537  018E                     	;# 
   538  0191                     	;# 
   539  0191                     	;# 
   540  0192                     	;# 
   541  0193                     	;# 
   542  0193                     	;# 
   543  0194                     	;# 
   544  0195                     	;# 
   545  0196                     	;# 
   546  0197                     	;# 
   547  0199                     	;# 
   548  019A                     	;# 
   549  019B                     	;# 
   550  019B                     	;# 
   551  019B                     	;# 
   552  019B                     	;# 
   553  019C                     	;# 
   554  019C                     	;# 
   555  019D                     	;# 
   556  019E                     	;# 
   557  019F                     	;# 
   558  020D                     	;# 
   559  0210                     	;# 
   560  0211                     	;# 
   561  0211                     	;# 
   562  0212                     	;# 
   563  0212                     	;# 
   564  0213                     	;# 
   565  0213                     	;# 
   566  0214                     	;# 
   567  0214                     	;# 
   568  0215                     	;# 
   569  0215                     	;# 
   570  0215                     	;# 
   571  0216                     	;# 
   572  0216                     	;# 
   573  0217                     	;# 
   574  0217                     	;# 
   575  0291                     	;# 
   576  0291                     	;# 
   577  0292                     	;# 
   578  0293                     	;# 
   579  0298                     	;# 
   580  0298                     	;# 
   581  0299                     	;# 
   582  029A                     	;# 
   583  0394                     	;# 
   584  0395                     	;# 
   585  0396                     	;# 
   586  0FE4                     	;# 
   587  0FE5                     	;# 
   588  0FE6                     	;# 
   589  0FE7                     	;# 
   590  0FE8                     	;# 
   591  0FE9                     	;# 
   592  0FEA                     	;# 
   593  0FEB                     	;# 
   594  0FED                     	;# 
   595  0FEE                     	;# 
   596  0FEF                     	;# 
   597  0000                     	;# 
   598  0001                     	;# 
   599  0002                     	;# 
   600  0003                     	;# 
   601  0004                     	;# 
   602  0005                     	;# 
   603  0006                     	;# 
   604  0007                     	;# 
   605  0008                     	;# 
   606  0009                     	;# 
   607  000A                     	;# 
   608  000B                     	;# 
   609  000C                     	;# 
   610  000D                     	;# 
   611  000E                     	;# 
   612  0010                     	;# 
   613  0011                     	;# 
   614  0012                     	;# 
   615  0015                     	;# 
   616  0016                     	;# 
   617  0016                     	;# 
   618  0017                     	;# 
   619  0018                     	;# 
   620  0019                     	;# 
   621  001A                     	;# 
   622  001B                     	;# 
   623  001C                     	;# 
   624  008C                     	;# 
   625  008D                     	;# 
   626  008E                     	;# 
   627  0090                     	;# 
   628  0091                     	;# 
   629  0092                     	;# 
   630  0095                     	;# 
   631  0096                     	;# 
   632  0097                     	;# 
   633  0099                     	;# 
   634  009A                     	;# 
   635  009B                     	;# 
   636  009B                     	;# 
   637  009C                     	;# 
   638  009D                     	;# 
   639  009E                     	;# 
   640  010C                     	;# 
   641  010D                     	;# 
   642  010E                     	;# 
   643  0116                     	;# 
   644  0117                     	;# 
   645  011D                     	;# 
   646  018C                     	;# 
   647  018D                     	;# 
   648  018E                     	;# 
   649  0191                     	;# 
   650  0191                     	;# 
   651  0192                     	;# 
   652  0193                     	;# 
   653  0193                     	;# 
   654  0194                     	;# 
   655  0195                     	;# 
   656  0196                     	;# 
   657  0197                     	;# 
   658  0199                     	;# 
   659  019A                     	;# 
   660  019B                     	;# 
   661  019B                     	;# 
   662  019B                     	;# 
   663  019B                     	;# 
   664  019C                     	;# 
   665  019C                     	;# 
   666  019D                     	;# 
   667  019E                     	;# 
   668  019F                     	;# 
   669  020D                     	;# 
   670  0210                     	;# 
   671  0211                     	;# 
   672  0211                     	;# 
   673  0212                     	;# 
   674  0212                     	;# 
   675  0213                     	;# 
   676  0213                     	;# 
   677  0214                     	;# 
   678  0214                     	;# 
   679  0215                     	;# 
   680  0215                     	;# 
   681  0215                     	;# 
   682  0216                     	;# 
   683  0216                     	;# 
   684  0217                     	;# 
   685  0217                     	;# 
   686  0291                     	;# 
   687  0291                     	;# 
   688  0292                     	;# 
   689  0293                     	;# 
   690  0298                     	;# 
   691  0298                     	;# 
   692  0299                     	;# 
   693  029A                     	;# 
   694  0394                     	;# 
   695  0395                     	;# 
   696  0396                     	;# 
   697  0FE4                     	;# 
   698  0FE5                     	;# 
   699  0FE6                     	;# 
   700  0FE7                     	;# 
   701  0FE8                     	;# 
   702  0FE9                     	;# 
   703  0FEA                     	;# 
   704  0FEB                     	;# 
   705  0FED                     	;# 
   706  0FEE                     	;# 
   707  0FEF                     	;# 
   708  0000                     	;# 
   709  0001                     	;# 
   710  0002                     	;# 
   711  0003                     	;# 
   712  0004                     	;# 
   713  0005                     	;# 
   714  0006                     	;# 
   715  0007                     	;# 
   716  0008                     	;# 
   717  0009                     	;# 
   718  000A                     	;# 
   719  000B                     	;# 
   720  000C                     	;# 
   721  000D                     	;# 
   722  000E                     	;# 
   723  0010                     	;# 
   724  0011                     	;# 
   725  0012                     	;# 
   726  0015                     	;# 
   727  0016                     	;# 
   728  0016                     	;# 
   729  0017                     	;# 
   730  0018                     	;# 
   731  0019                     	;# 
   732  001A                     	;# 
   733  001B                     	;# 
   734  001C                     	;# 
   735  008C                     	;# 
   736  008D                     	;# 
   737  008E                     	;# 
   738  0090                     	;# 
   739  0091                     	;# 
   740  0092                     	;# 
   741  0095                     	;# 
   742  0096                     	;# 
   743  0097                     	;# 
   744  0099                     	;# 
   745  009A                     	;# 
   746  009B                     	;# 
   747  009B                     	;# 
   748  009C                     	;# 
   749  009D                     	;# 
   750  009E                     	;# 
   751  010C                     	;# 
   752  010D                     	;# 
   753  010E                     	;# 
   754  0116                     	;# 
   755  0117                     	;# 
   756  011D                     	;# 
   757  018C                     	;# 
   758  018D                     	;# 
   759  018E                     	;# 
   760  0191                     	;# 
   761  0191                     	;# 
   762  0192                     	;# 
   763  0193                     	;# 
   764  0193                     	;# 
   765  0194                     	;# 
   766  0195                     	;# 
   767  0196                     	;# 
   768  0197                     	;# 
   769  0199                     	;# 
   770  019A                     	;# 
   771  019B                     	;# 
   772  019B                     	;# 
   773  019B                     	;# 
   774  019B                     	;# 
   775  019C                     	;# 
   776  019C                     	;# 
   777  019D                     	;# 
   778  019E                     	;# 
   779  019F                     	;# 
   780  020D                     	;# 
   781  0210                     	;# 
   782  0211                     	;# 
   783  0211                     	;# 
   784  0212                     	;# 
   785  0212                     	;# 
   786  0213                     	;# 
   787  0213                     	;# 
   788  0214                     	;# 
   789  0214                     	;# 
   790  0215                     	;# 
   791  0215                     	;# 
   792  0215                     	;# 
   793  0216                     	;# 
   794  0216                     	;# 
   795  0217                     	;# 
   796  0217                     	;# 
   797  0291                     	;# 
   798  0291                     	;# 
   799  0292                     	;# 
   800  0293                     	;# 
   801  0298                     	;# 
   802  0298                     	;# 
   803  0299                     	;# 
   804  029A                     	;# 
   805  0394                     	;# 
   806  0395                     	;# 
   807  0396                     	;# 
   808  0FE4                     	;# 
   809  0FE5                     	;# 
   810  0FE6                     	;# 
   811  0FE7                     	;# 
   812  0FE8                     	;# 
   813  0FE9                     	;# 
   814  0FEA                     	;# 
   815  0FEB                     	;# 
   816  0FED                     	;# 
   817  0FEE                     	;# 
   818  0FEF                     	;# 
   819  0000                     	;# 
   820  0001                     	;# 
   821  0002                     	;# 
   822  0003                     	;# 
   823  0004                     	;# 
   824  0005                     	;# 
   825  0006                     	;# 
   826  0007                     	;# 
   827  0008                     	;# 
   828  0009                     	;# 
   829  000A                     	;# 
   830  000B                     	;# 
   831  000C                     	;# 
   832  000D                     	;# 
   833  000E                     	;# 
   834  0010                     	;# 
   835  0011                     	;# 
   836  0012                     	;# 
   837  0015                     	;# 
   838  0016                     	;# 
   839  0016                     	;# 
   840  0017                     	;# 
   841  0018                     	;# 
   842  0019                     	;# 
   843  001A                     	;# 
   844  001B                     	;# 
   845  001C                     	;# 
   846  008C                     	;# 
   847  008D                     	;# 
   848  008E                     	;# 
   849  0090                     	;# 
   850  0091                     	;# 
   851  0092                     	;# 
   852  0095                     	;# 
   853  0096                     	;# 
   854  0097                     	;# 
   855  0099                     	;# 
   856  009A                     	;# 
   857  009B                     	;# 
   858  009B                     	;# 
   859  009C                     	;# 
   860  009D                     	;# 
   861  009E                     	;# 
   862  010C                     	;# 
   863  010D                     	;# 
   864  010E                     	;# 
   865  0116                     	;# 
   866  0117                     	;# 
   867  011D                     	;# 
   868  018C                     	;# 
   869  018D                     	;# 
   870  018E                     	;# 
   871  0191                     	;# 
   872  0191                     	;# 
   873  0192                     	;# 
   874  0193                     	;# 
   875  0193                     	;# 
   876  0194                     	;# 
   877  0195                     	;# 
   878  0196                     	;# 
   879  0197                     	;# 
   880  0199                     	;# 
   881  019A                     	;# 
   882  019B                     	;# 
   883  019B                     	;# 
   884  019B                     	;# 
   885  019B                     	;# 
   886  019C                     	;# 
   887  019C                     	;# 
   888  019D                     	;# 
   889  019E                     	;# 
   890  019F                     	;# 
   891  020D                     	;# 
   892  0210                     	;# 
   893  0211                     	;# 
   894  0211                     	;# 
   895  0212                     	;# 
   896  0212                     	;# 
   897  0213                     	;# 
   898  0213                     	;# 
   899  0214                     	;# 
   900  0214                     	;# 
   901  0215                     	;# 
   902  0215                     	;# 
   903  0215                     	;# 
   904  0216                     	;# 
   905  0216                     	;# 
   906  0217                     	;# 
   907  0217                     	;# 
   908  0291                     	;# 
   909  0291                     	;# 
   910  0292                     	;# 
   911  0293                     	;# 
   912  0298                     	;# 
   913  0298                     	;# 
   914  0299                     	;# 
   915  029A                     	;# 
   916  0394                     	;# 
   917  0395                     	;# 
   918  0396                     	;# 
   919  0FE4                     	;# 
   920  0FE5                     	;# 
   921  0FE6                     	;# 
   922  0FE7                     	;# 
   923  0FE8                     	;# 
   924  0FE9                     	;# 
   925  0FEA                     	;# 
   926  0FEB                     	;# 
   927  0FED                     	;# 
   928  0FEE                     	;# 
   929  0FEF                     	;# 
   930  0000                     	;# 
   931  0001                     	;# 
   932  0002                     	;# 
   933  0003                     	;# 
   934  0004                     	;# 
   935  0005                     	;# 
   936  0006                     	;# 
   937  0007                     	;# 
   938  0008                     	;# 
   939  0009                     	;# 
   940  000A                     	;# 
   941  000B                     	;# 
   942  000C                     	;# 
   943  000D                     	;# 
   944  000E                     	;# 
   945  0010                     	;# 
   946  0011                     	;# 
   947  0012                     	;# 
   948  0015                     	;# 
   949  0016                     	;# 
   950  0016                     	;# 
   951  0017                     	;# 
   952  0018                     	;# 
   953  0019                     	;# 
   954  001A                     	;# 
   955  001B                     	;# 
   956  001C                     	;# 
   957  008C                     	;# 
   958  008D                     	;# 
   959  008E                     	;# 
   960  0090                     	;# 
   961  0091                     	;# 
   962  0092                     	;# 
   963  0095                     	;# 
   964  0096                     	;# 
   965  0097                     	;# 
   966  0099                     	;# 
   967  009A                     	;# 
   968  009B                     	;# 
   969  009B                     	;# 
   970  009C                     	;# 
   971  009D                     	;# 
   972  009E                     	;# 
   973  010C                     	;# 
   974  010D                     	;# 
   975  010E                     	;# 
   976  0116                     	;# 
   977  0117                     	;# 
   978  011D                     	;# 
   979  018C                     	;# 
   980  018D                     	;# 
   981  018E                     	;# 
   982  0191                     	;# 
   983  0191                     	;# 
   984  0192                     	;# 
   985  0193                     	;# 
   986  0193                     	;# 
   987  0194                     	;# 
   988  0195                     	;# 
   989  0196                     	;# 
   990  0197                     	;# 
   991  0199                     	;# 
   992  019A                     	;# 
   993  019B                     	;# 
   994  019B                     	;# 
   995  019B                     	;# 
   996  019B                     	;# 
   997  019C                     	;# 
   998  019C                     	;# 
   999  019D                     	;# 
  1000  019E                     	;# 
  1001  019F                     	;# 
  1002  020D                     	;# 
  1003  0210                     	;# 
  1004  0211                     	;# 
  1005  0211                     	;# 
  1006  0212                     	;# 
  1007  0212                     	;# 
  1008  0213                     	;# 
  1009  0213                     	;# 
  1010  0214                     	;# 
  1011  0214                     	;# 
  1012  0215                     	;# 
  1013  0215                     	;# 
  1014  0215                     	;# 
  1015  0216                     	;# 
  1016  0216                     	;# 
  1017  0217                     	;# 
  1018  0217                     	;# 
  1019  0291                     	;# 
  1020  0291                     	;# 
  1021  0292                     	;# 
  1022  0293                     	;# 
  1023  0298                     	;# 
  1024  0298                     	;# 
  1025  0299                     	;# 
  1026  029A                     	;# 
  1027  0394                     	;# 
  1028  0395                     	;# 
  1029  0396                     	;# 
  1030  0FE4                     	;# 
  1031  0FE5                     	;# 
  1032  0FE6                     	;# 
  1033  0FE7                     	;# 
  1034  0FE8                     	;# 
  1035  0FE9                     	;# 
  1036  0FEA                     	;# 
  1037  0FEB                     	;# 
  1038  0FED                     	;# 
  1039  0FEE                     	;# 
  1040  0FEF                     	;# 
  1041  0000                     	;# 
  1042  0001                     	;# 
  1043  0002                     	;# 
  1044  0003                     	;# 
  1045  0004                     	;# 
  1046  0005                     	;# 
  1047  0006                     	;# 
  1048  0007                     	;# 
  1049  0008                     	;# 
  1050  0009                     	;# 
  1051  000A                     	;# 
  1052  000B                     	;# 
  1053  000C                     	;# 
  1054  000D                     	;# 
  1055  000E                     	;# 
  1056  0010                     	;# 
  1057  0011                     	;# 
  1058  0012                     	;# 
  1059  0015                     	;# 
  1060  0016                     	;# 
  1061  0016                     	;# 
  1062  0017                     	;# 
  1063  0018                     	;# 
  1064  0019                     	;# 
  1065  001A                     	;# 
  1066  001B                     	;# 
  1067  001C                     	;# 
  1068  008C                     	;# 
  1069  008D                     	;# 
  1070  008E                     	;# 
  1071  0090                     	;# 
  1072  0091                     	;# 
  1073  0092                     	;# 
  1074  0095                     	;# 
  1075  0096                     	;# 
  1076  0097                     	;# 
  1077  0099                     	;# 
  1078  009A                     	;# 
  1079  009B                     	;# 
  1080  009B                     	;# 
  1081  009C                     	;# 
  1082  009D                     	;# 
  1083  009E                     	;# 
  1084  010C                     	;# 
  1085  010D                     	;# 
  1086  010E                     	;# 
  1087  0116                     	;# 
  1088  0117                     	;# 
  1089  011D                     	;# 
  1090  018C                     	;# 
  1091  018D                     	;# 
  1092  018E                     	;# 
  1093  0191                     	;# 
  1094  0191                     	;# 
  1095  0192                     	;# 
  1096  0193                     	;# 
  1097  0193                     	;# 
  1098  0194                     	;# 
  1099  0195                     	;# 
  1100  0196                     	;# 
  1101  0197                     	;# 
  1102  0199                     	;# 
  1103  019A                     	;# 
  1104  019B                     	;# 
  1105  019B                     	;# 
  1106  019B                     	;# 
  1107  019B                     	;# 
  1108  019C                     	;# 
  1109  019C                     	;# 
  1110  019D                     	;# 
  1111  019E                     	;# 
  1112  019F                     	;# 
  1113  020D                     	;# 
  1114  0210                     	;# 
  1115  0211                     	;# 
  1116  0211                     	;# 
  1117  0212                     	;# 
  1118  0212                     	;# 
  1119  0213                     	;# 
  1120  0213                     	;# 
  1121  0214                     	;# 
  1122  0214                     	;# 
  1123  0215                     	;# 
  1124  0215                     	;# 
  1125  0215                     	;# 
  1126  0216                     	;# 
  1127  0216                     	;# 
  1128  0217                     	;# 
  1129  0217                     	;# 
  1130  0291                     	;# 
  1131  0291                     	;# 
  1132  0292                     	;# 
  1133  0293                     	;# 
  1134  0298                     	;# 
  1135  0298                     	;# 
  1136  0299                     	;# 
  1137  029A                     	;# 
  1138  0394                     	;# 
  1139  0395                     	;# 
  1140  0396                     	;# 
  1141  0FE4                     	;# 
  1142  0FE5                     	;# 
  1143  0FE6                     	;# 
  1144  0FE7                     	;# 
  1145  0FE8                     	;# 
  1146  0FE9                     	;# 
  1147  0FEA                     	;# 
  1148  0FEB                     	;# 
  1149  0FED                     	;# 
  1150  0FEE                     	;# 
  1151  0FEF                     	;# 
  1152  0000                     	;# 
  1153  0001                     	;# 
  1154  0002                     	;# 
  1155  0003                     	;# 
  1156  0004                     	;# 
  1157  0005                     	;# 
  1158  0006                     	;# 
  1159  0007                     	;# 
  1160  0008                     	;# 
  1161  0009                     	;# 
  1162  000A                     	;# 
  1163  000B                     	;# 
  1164  000C                     	;# 
  1165  000D                     	;# 
  1166  000E                     	;# 
  1167  0010                     	;# 
  1168  0011                     	;# 
  1169  0012                     	;# 
  1170  0015                     	;# 
  1171  0016                     	;# 
  1172  0016                     	;# 
  1173  0017                     	;# 
  1174  0018                     	;# 
  1175  0019                     	;# 
  1176  001A                     	;# 
  1177  001B                     	;# 
  1178  001C                     	;# 
  1179  008C                     	;# 
  1180  008D                     	;# 
  1181  008E                     	;# 
  1182  0090                     	;# 
  1183  0091                     	;# 
  1184  0092                     	;# 
  1185  0095                     	;# 
  1186  0096                     	;# 
  1187  0097                     	;# 
  1188  0099                     	;# 
  1189  009A                     	;# 
  1190  009B                     	;# 
  1191  009B                     	;# 
  1192  009C                     	;# 
  1193  009D                     	;# 
  1194  009E                     	;# 
  1195  010C                     	;# 
  1196  010D                     	;# 
  1197  010E                     	;# 
  1198  0116                     	;# 
  1199  0117                     	;# 
  1200  011D                     	;# 
  1201  018C                     	;# 
  1202  018D                     	;# 
  1203  018E                     	;# 
  1204  0191                     	;# 
  1205  0191                     	;# 
  1206  0192                     	;# 
  1207  0193                     	;# 
  1208  0193                     	;# 
  1209  0194                     	;# 
  1210  0195                     	;# 
  1211  0196                     	;# 
  1212  0197                     	;# 
  1213  0199                     	;# 
  1214  019A                     	;# 
  1215  019B                     	;# 
  1216  019B                     	;# 
  1217  019B                     	;# 
  1218  019B                     	;# 
  1219  019C                     	;# 
  1220  019C                     	;# 
  1221  019D                     	;# 
  1222  019E                     	;# 
  1223  019F                     	;# 
  1224  020D                     	;# 
  1225  0210                     	;# 
  1226  0211                     	;# 
  1227  0211                     	;# 
  1228  0212                     	;# 
  1229  0212                     	;# 
  1230  0213                     	;# 
  1231  0213                     	;# 
  1232  0214                     	;# 
  1233  0214                     	;# 
  1234  0215                     	;# 
  1235  0215                     	;# 
  1236  0215                     	;# 
  1237  0216                     	;# 
  1238  0216                     	;# 
  1239  0217                     	;# 
  1240  0217                     	;# 
  1241  0291                     	;# 
  1242  0291                     	;# 
  1243  0292                     	;# 
  1244  0293                     	;# 
  1245  0298                     	;# 
  1246  0298                     	;# 
  1247  0299                     	;# 
  1248  029A                     	;# 
  1249  0394                     	;# 
  1250  0395                     	;# 
  1251  0396                     	;# 
  1252  0FE4                     	;# 
  1253  0FE5                     	;# 
  1254  0FE6                     	;# 
  1255  0FE7                     	;# 
  1256  0FE8                     	;# 
  1257  0FE9                     	;# 
  1258  0FEA                     	;# 
  1259  0FEB                     	;# 
  1260  0FED                     	;# 
  1261  0FEE                     	;# 
  1262  0FEF                     	;# 
  1263  0000                     	;# 
  1264  0001                     	;# 
  1265  0002                     	;# 
  1266  0003                     	;# 
  1267  0004                     	;# 
  1268  0005                     	;# 
  1269  0006                     	;# 
  1270  0007                     	;# 
  1271  0008                     	;# 
  1272  0009                     	;# 
  1273  000A                     	;# 
  1274  000B                     	;# 
  1275  000C                     	;# 
  1276  000D                     	;# 
  1277  000E                     	;# 
  1278  0010                     	;# 
  1279  0011                     	;# 
  1280  0012                     	;# 
  1281  0015                     	;# 
  1282  0016                     	;# 
  1283  0016                     	;# 
  1284  0017                     	;# 
  1285  0018                     	;# 
  1286  0019                     	;# 
  1287  001A                     	;# 
  1288  001B                     	;# 
  1289  001C                     	;# 
  1290  008C                     	;# 
  1291  008D                     	;# 
  1292  008E                     	;# 
  1293  0090                     	;# 
  1294  0091                     	;# 
  1295  0092                     	;# 
  1296  0095                     	;# 
  1297  0096                     	;# 
  1298  0097                     	;# 
  1299  0099                     	;# 
  1300  009A                     	;# 
  1301  009B                     	;# 
  1302  009B                     	;# 
  1303  009C                     	;# 
  1304  009D                     	;# 
  1305  009E                     	;# 
  1306  010C                     	;# 
  1307  010D                     	;# 
  1308  010E                     	;# 
  1309  0116                     	;# 
  1310  0117                     	;# 
  1311  011D                     	;# 
  1312  018C                     	;# 
  1313  018D                     	;# 
  1314  018E                     	;# 
  1315  0191                     	;# 
  1316  0191                     	;# 
  1317  0192                     	;# 
  1318  0193                     	;# 
  1319  0193                     	;# 
  1320  0194                     	;# 
  1321  0195                     	;# 
  1322  0196                     	;# 
  1323  0197                     	;# 
  1324  0199                     	;# 
  1325  019A                     	;# 
  1326  019B                     	;# 
  1327  019B                     	;# 
  1328  019B                     	;# 
  1329  019B                     	;# 
  1330  019C                     	;# 
  1331  019C                     	;# 
  1332  019D                     	;# 
  1333  019E                     	;# 
  1334  019F                     	;# 
  1335  020D                     	;# 
  1336  0210                     	;# 
  1337  0211                     	;# 
  1338  0211                     	;# 
  1339  0212                     	;# 
  1340  0212                     	;# 
  1341  0213                     	;# 
  1342  0213                     	;# 
  1343  0214                     	;# 
  1344  0214                     	;# 
  1345  0215                     	;# 
  1346  0215                     	;# 
  1347  0215                     	;# 
  1348  0216                     	;# 
  1349  0216                     	;# 
  1350  0217                     	;# 
  1351  0217                     	;# 
  1352  0291                     	;# 
  1353  0291                     	;# 
  1354  0292                     	;# 
  1355  0293                     	;# 
  1356  0298                     	;# 
  1357  0298                     	;# 
  1358  0299                     	;# 
  1359  029A                     	;# 
  1360  0394                     	;# 
  1361  0395                     	;# 
  1362  0396                     	;# 
  1363  0FE4                     	;# 
  1364  0FE5                     	;# 
  1365  0FE6                     	;# 
  1366  0FE7                     	;# 
  1367  0FE8                     	;# 
  1368  0FE9                     	;# 
  1369  0FEA                     	;# 
  1370  0FEB                     	;# 
  1371  0FED                     	;# 
  1372  0FEE                     	;# 
  1373  0FEF                     	;# 
  1374  0000                     	;# 
  1375  0001                     	;# 
  1376  0002                     	;# 
  1377  0003                     	;# 
  1378  0004                     	;# 
  1379  0005                     	;# 
  1380  0006                     	;# 
  1381  0007                     	;# 
  1382  0008                     	;# 
  1383  0009                     	;# 
  1384  000A                     	;# 
  1385  000B                     	;# 
  1386  000C                     	;# 
  1387  000D                     	;# 
  1388  000E                     	;# 
  1389  0010                     	;# 
  1390  0011                     	;# 
  1391  0012                     	;# 
  1392  0015                     	;# 
  1393  0016                     	;# 
  1394  0016                     	;# 
  1395  0017                     	;# 
  1396  0018                     	;# 
  1397  0019                     	;# 
  1398  001A                     	;# 
  1399  001B                     	;# 
  1400  001C                     	;# 
  1401  008C                     	;# 
  1402  008D                     	;# 
  1403  008E                     	;# 
  1404  0090                     	;# 
  1405  0091                     	;# 
  1406  0092                     	;# 
  1407  0095                     	;# 
  1408  0096                     	;# 
  1409  0097                     	;# 
  1410  0099                     	;# 
  1411  009A                     	;# 
  1412  009B                     	;# 
  1413  009B                     	;# 
  1414  009C                     	;# 
  1415  009D                     	;# 
  1416  009E                     	;# 
  1417  010C                     	;# 
  1418  010D                     	;# 
  1419  010E                     	;# 
  1420  0116                     	;# 
  1421  0117                     	;# 
  1422  011D                     	;# 
  1423  018C                     	;# 
  1424  018D                     	;# 
  1425  018E                     	;# 
  1426  0191                     	;# 
  1427  0191                     	;# 
  1428  0192                     	;# 
  1429  0193                     	;# 
  1430  0193                     	;# 
  1431  0194                     	;# 
  1432  0195                     	;# 
  1433  0196                     	;# 
  1434  0197                     	;# 
  1435  0199                     	;# 
  1436  019A                     	;# 
  1437  019B                     	;# 
  1438  019B                     	;# 
  1439  019B                     	;# 
  1440  019B                     	;# 
  1441  019C                     	;# 
  1442  019C                     	;# 
  1443  019D                     	;# 
  1444  019E                     	;# 
  1445  019F                     	;# 
  1446  020D                     	;# 
  1447  0210                     	;# 
  1448  0211                     	;# 
  1449  0211                     	;# 
  1450  0212                     	;# 
  1451  0212                     	;# 
  1452  0213                     	;# 
  1453  0213                     	;# 
  1454  0214                     	;# 
  1455  0214                     	;# 
  1456  0215                     	;# 
  1457  0215                     	;# 
  1458  0215                     	;# 
  1459  0216                     	;# 
  1460  0216                     	;# 
  1461  0217                     	;# 
  1462  0217                     	;# 
  1463  0291                     	;# 
  1464  0291                     	;# 
  1465  0292                     	;# 
  1466  0293                     	;# 
  1467  0298                     	;# 
  1468  0298                     	;# 
  1469  0299                     	;# 
  1470  029A                     	;# 
  1471  0394                     	;# 
  1472  0395                     	;# 
  1473  0396                     	;# 
  1474  0FE4                     	;# 
  1475  0FE5                     	;# 
  1476  0FE6                     	;# 
  1477  0FE7                     	;# 
  1478  0FE8                     	;# 
  1479  0FE9                     	;# 
  1480  0FEA                     	;# 
  1481  0FEB                     	;# 
  1482  0FED                     	;# 
  1483  0FEE                     	;# 
  1484  0FEF                     	;# 
  1485  0000                     	;# 
  1486  0001                     	;# 
  1487  0002                     	;# 
  1488  0003                     	;# 
  1489  0004                     	;# 
  1490  0005                     	;# 
  1491  0006                     	;# 
  1492  0007                     	;# 
  1493  0008                     	;# 
  1494  0009                     	;# 
  1495  000A                     	;# 
  1496  000B                     	;# 
  1497  000C                     	;# 
  1498  000D                     	;# 
  1499  000E                     	;# 
  1500  0010                     	;# 
  1501  0011                     	;# 
  1502  0012                     	;# 
  1503  0015                     	;# 
  1504  0016                     	;# 
  1505  0016                     	;# 
  1506  0017                     	;# 
  1507  0018                     	;# 
  1508  0019                     	;# 
  1509  001A                     	;# 
  1510  001B                     	;# 
  1511  001C                     	;# 
  1512  008C                     	;# 
  1513  008D                     	;# 
  1514  008E                     	;# 
  1515  0090                     	;# 
  1516  0091                     	;# 
  1517  0092                     	;# 
  1518  0095                     	;# 
  1519  0096                     	;# 
  1520  0097                     	;# 
  1521  0099                     	;# 
  1522  009A                     	;# 
  1523  009B                     	;# 
  1524  009B                     	;# 
  1525  009C                     	;# 
  1526  009D                     	;# 
  1527  009E                     	;# 
  1528  010C                     	;# 
  1529  010D                     	;# 
  1530  010E                     	;# 
  1531  0116                     	;# 
  1532  0117                     	;# 
  1533  011D                     	;# 
  1534  018C                     	;# 
  1535  018D                     	;# 
  1536  018E                     	;# 
  1537  0191                     	;# 
  1538  0191                     	;# 
  1539  0192                     	;# 
  1540  0193                     	;# 
  1541  0193                     	;# 
  1542  0194                     	;# 
  1543  0195                     	;# 
  1544  0196                     	;# 
  1545  0197                     	;# 
  1546  0199                     	;# 
  1547  019A                     	;# 
  1548  019B                     	;# 
  1549  019B                     	;# 
  1550  019B                     	;# 
  1551  019B                     	;# 
  1552  019C                     	;# 
  1553  019C                     	;# 
  1554  019D                     	;# 
  1555  019E                     	;# 
  1556  019F                     	;# 
  1557  020D                     	;# 
  1558  0210                     	;# 
  1559  0211                     	;# 
  1560  0211                     	;# 
  1561  0212                     	;# 
  1562  0212                     	;# 
  1563  0213                     	;# 
  1564  0213                     	;# 
  1565  0214                     	;# 
  1566  0214                     	;# 
  1567  0215                     	;# 
  1568  0215                     	;# 
  1569  0215                     	;# 
  1570  0216                     	;# 
  1571  0216                     	;# 
  1572  0217                     	;# 
  1573  0217                     	;# 
  1574  0291                     	;# 
  1575  0291                     	;# 
  1576  0292                     	;# 
  1577  0293                     	;# 
  1578  0298                     	;# 
  1579  0298                     	;# 
  1580  0299                     	;# 
  1581  029A                     	;# 
  1582  0394                     	;# 
  1583  0395                     	;# 
  1584  0396                     	;# 
  1585  0FE4                     	;# 
  1586  0FE5                     	;# 
  1587  0FE6                     	;# 
  1588  0FE7                     	;# 
  1589  0FE8                     	;# 
  1590  0FE9                     	;# 
  1591  0FEA                     	;# 
  1592  0FEB                     	;# 
  1593  0FED                     	;# 
  1594  0FEE                     	;# 
  1595  0FEF                     	;# 
  1596  0000                     	;# 
  1597  0001                     	;# 
  1598  0002                     	;# 
  1599  0003                     	;# 
  1600  0004                     	;# 
  1601  0005                     	;# 
  1602  0006                     	;# 
  1603  0007                     	;# 
  1604  0008                     	;# 
  1605  0009                     	;# 
  1606  000A                     	;# 
  1607  000B                     	;# 
  1608  000C                     	;# 
  1609  000D                     	;# 
  1610  000E                     	;# 
  1611  0010                     	;# 
  1612  0011                     	;# 
  1613  0012                     	;# 
  1614  0015                     	;# 
  1615  0016                     	;# 
  1616  0016                     	;# 
  1617  0017                     	;# 
  1618  0018                     	;# 
  1619  0019                     	;# 
  1620  001A                     	;# 
  1621  001B                     	;# 
  1622  001C                     	;# 
  1623  008C                     	;# 
  1624  008D                     	;# 
  1625  008E                     	;# 
  1626  0090                     	;# 
  1627  0091                     	;# 
  1628  0092                     	;# 
  1629  0095                     	;# 
  1630  0096                     	;# 
  1631  0097                     	;# 
  1632  0099                     	;# 
  1633  009A                     	;# 
  1634  009B                     	;# 
  1635  009B                     	;# 
  1636  009C                     	;# 
  1637  009D                     	;# 
  1638  009E                     	;# 
  1639  010C                     	;# 
  1640  010D                     	;# 
  1641  010E                     	;# 
  1642  0116                     	;# 
  1643  0117                     	;# 
  1644  011D                     	;# 
  1645  018C                     	;# 
  1646  018D                     	;# 
  1647  018E                     	;# 
  1648  0191                     	;# 
  1649  0191                     	;# 
  1650  0192                     	;# 
  1651  0193                     	;# 
  1652  0193                     	;# 
  1653  0194                     	;# 
  1654  0195                     	;# 
  1655  0196                     	;# 
  1656  0197                     	;# 
  1657  0199                     	;# 
  1658  019A                     	;# 
  1659  019B                     	;# 
  1660  019B                     	;# 
  1661  019B                     	;# 
  1662  019B                     	;# 
  1663  019C                     	;# 
  1664  019C                     	;# 
  1665  019D                     	;# 
  1666  019E                     	;# 
  1667  019F                     	;# 
  1668  020D                     	;# 
  1669  0210                     	;# 
  1670  0211                     	;# 
  1671  0211                     	;# 
  1672  0212                     	;# 
  1673  0212                     	;# 
  1674  0213                     	;# 
  1675  0213                     	;# 
  1676  0214                     	;# 
  1677  0214                     	;# 
  1678  0215                     	;# 
  1679  0215                     	;# 
  1680  0215                     	;# 
  1681  0216                     	;# 
  1682  0216                     	;# 
  1683  0217                     	;# 
  1684  0217                     	;# 
  1685  0291                     	;# 
  1686  0291                     	;# 
  1687  0292                     	;# 
  1688  0293                     	;# 
  1689  0298                     	;# 
  1690  0298                     	;# 
  1691  0299                     	;# 
  1692  029A                     	;# 
  1693  0394                     	;# 
  1694  0395                     	;# 
  1695  0396                     	;# 
  1696  0FE4                     	;# 
  1697  0FE5                     	;# 
  1698  0FE6                     	;# 
  1699  0FE7                     	;# 
  1700  0FE8                     	;# 
  1701  0FE9                     	;# 
  1702  0FEA                     	;# 
  1703  0FEB                     	;# 
  1704  0FED                     	;# 
  1705  0FEE                     	;# 
  1706  0FEF                     	;# 
  1707  0000                     	;# 
  1708  0001                     	;# 
  1709  0002                     	;# 
  1710  0003                     	;# 
  1711  0004                     	;# 
  1712  0005                     	;# 
  1713  0006                     	;# 
  1714  0007                     	;# 
  1715  0008                     	;# 
  1716  0009                     	;# 
  1717  000A                     	;# 
  1718  000B                     	;# 
  1719  000C                     	;# 
  1720  000D                     	;# 
  1721  000E                     	;# 
  1722  0010                     	;# 
  1723  0011                     	;# 
  1724  0012                     	;# 
  1725  0015                     	;# 
  1726  0016                     	;# 
  1727  0016                     	;# 
  1728  0017                     	;# 
  1729  0018                     	;# 
  1730  0019                     	;# 
  1731  001A                     	;# 
  1732  001B                     	;# 
  1733  001C                     	;# 
  1734  008C                     	;# 
  1735  008D                     	;# 
  1736  008E                     	;# 
  1737  0090                     	;# 
  1738  0091                     	;# 
  1739  0092                     	;# 
  1740  0095                     	;# 
  1741  0096                     	;# 
  1742  0097                     	;# 
  1743  0099                     	;# 
  1744  009A                     	;# 
  1745  009B                     	;# 
  1746  009B                     	;# 
  1747  009C                     	;# 
  1748  009D                     	;# 
  1749  009E                     	;# 
  1750  010C                     	;# 
  1751  010D                     	;# 
  1752  010E                     	;# 
  1753  0116                     	;# 
  1754  0117                     	;# 
  1755  011D                     	;# 
  1756  018C                     	;# 
  1757  018D                     	;# 
  1758  018E                     	;# 
  1759  0191                     	;# 
  1760  0191                     	;# 
  1761  0192                     	;# 
  1762  0193                     	;# 
  1763  0193                     	;# 
  1764  0194                     	;# 
  1765  0195                     	;# 
  1766  0196                     	;# 
  1767  0197                     	;# 
  1768  0199                     	;# 
  1769  019A                     	;# 
  1770  019B                     	;# 
  1771  019B                     	;# 
  1772  019B                     	;# 
  1773  019B                     	;# 
  1774  019C                     	;# 
  1775  019C                     	;# 
  1776  019D                     	;# 
  1777  019E                     	;# 
  1778  019F                     	;# 
  1779  020D                     	;# 
  1780  0210                     	;# 
  1781  0211                     	;# 
  1782  0211                     	;# 
  1783  0212                     	;# 
  1784  0212                     	;# 
  1785  0213                     	;# 
  1786  0213                     	;# 
  1787  0214                     	;# 
  1788  0214                     	;# 
  1789  0215                     	;# 
  1790  0215                     	;# 
  1791  0215                     	;# 
  1792  0216                     	;# 
  1793  0216                     	;# 
  1794  0217                     	;# 
  1795  0217                     	;# 
  1796  0291                     	;# 
  1797  0291                     	;# 
  1798  0292                     	;# 
  1799  0293                     	;# 
  1800  0298                     	;# 
  1801  0298                     	;# 
  1802  0299                     	;# 
  1803  029A                     	;# 
  1804  0394                     	;# 
  1805  0395                     	;# 
  1806  0396                     	;# 
  1807  0FE4                     	;# 
  1808  0FE5                     	;# 
  1809  0FE6                     	;# 
  1810  0FE7                     	;# 
  1811  0FE8                     	;# 
  1812  0FE9                     	;# 
  1813  0FEA                     	;# 
  1814  0FEB                     	;# 
  1815  0FED                     	;# 
  1816  0FEE                     	;# 
  1817  0FEF                     	;# 
  1818  0000                     	;# 
  1819  0001                     	;# 
  1820  0002                     	;# 
  1821  0003                     	;# 
  1822  0004                     	;# 
  1823  0005                     	;# 
  1824  0006                     	;# 
  1825  0007                     	;# 
  1826  0008                     	;# 
  1827  0009                     	;# 
  1828  000A                     	;# 
  1829  000B                     	;# 
  1830  000C                     	;# 
  1831  000D                     	;# 
  1832  000E                     	;# 
  1833  0010                     	;# 
  1834  0011                     	;# 
  1835  0012                     	;# 
  1836  0015                     	;# 
  1837  0016                     	;# 
  1838  0016                     	;# 
  1839  0017                     	;# 
  1840  0018                     	;# 
  1841  0019                     	;# 
  1842  001A                     	;# 
  1843  001B                     	;# 
  1844  001C                     	;# 
  1845  008C                     	;# 
  1846  008D                     	;# 
  1847  008E                     	;# 
  1848  0090                     	;# 
  1849  0091                     	;# 
  1850  0092                     	;# 
  1851  0095                     	;# 
  1852  0096                     	;# 
  1853  0097                     	;# 
  1854  0099                     	;# 
  1855  009A                     	;# 
  1856  009B                     	;# 
  1857  009B                     	;# 
  1858  009C                     	;# 
  1859  009D                     	;# 
  1860  009E                     	;# 
  1861  010C                     	;# 
  1862  010D                     	;# 
  1863  010E                     	;# 
  1864  0116                     	;# 
  1865  0117                     	;# 
  1866  011D                     	;# 
  1867  018C                     	;# 
  1868  018D                     	;# 
  1869  018E                     	;# 
  1870  0191                     	;# 
  1871  0191                     	;# 
  1872  0192                     	;# 
  1873  0193                     	;# 
  1874  0193                     	;# 
  1875  0194                     	;# 
  1876  0195                     	;# 
  1877  0196                     	;# 
  1878  0197                     	;# 
  1879  0199                     	;# 
  1880  019A                     	;# 
  1881  019B                     	;# 
  1882  019B                     	;# 
  1883  019B                     	;# 
  1884  019B                     	;# 
  1885  019C                     	;# 
  1886  019C                     	;# 
  1887  019D                     	;# 
  1888  019E                     	;# 
  1889  019F                     	;# 
  1890  020D                     	;# 
  1891  0210                     	;# 
  1892  0211                     	;# 
  1893  0211                     	;# 
  1894  0212                     	;# 
  1895  0212                     	;# 
  1896  0213                     	;# 
  1897  0213                     	;# 
  1898  0214                     	;# 
  1899  0214                     	;# 
  1900  0215                     	;# 
  1901  0215                     	;# 
  1902  0215                     	;# 
  1903  0216                     	;# 
  1904  0216                     	;# 
  1905  0217                     	;# 
  1906  0217                     	;# 
  1907  0291                     	;# 
  1908  0291                     	;# 
  1909  0292                     	;# 
  1910  0293                     	;# 
  1911  0298                     	;# 
  1912  0298                     	;# 
  1913  0299                     	;# 
  1914  029A                     	;# 
  1915  0394                     	;# 
  1916  0395                     	;# 
  1917  0396                     	;# 
  1918  0FE4                     	;# 
  1919  0FE5                     	;# 
  1920  0FE6                     	;# 
  1921  0FE7                     	;# 
  1922  0FE8                     	;# 
  1923  0FE9                     	;# 
  1924  0FEA                     	;# 
  1925  0FEB                     	;# 
  1926  0FED                     	;# 
  1927  0FEE                     	;# 
  1928  0FEF                     	;# 
  1929                           
  1930                           	psect	idataBANK3
  1931  1CB0                     __pidataBANK3:	
  1932                           
  1933                           ;initializer for _VarProduct
  1934  1CB0  3463               	retlw	99
  1935  1CB1  3402               	retlw	2
  1936  1CB2  3400               	retlw	0
  1937  1CB3  3400               	retlw	0
  1938  1CB4  3400               	retlw	0
  1939  1CB5  3400               	retlw	0
  1940  1CB6  3400               	retlw	0
  1941  1CB7  3400               	retlw	0
  1942  1CB8  3400               	retlw	0
  1943  1CB9  3400               	retlw	0
  1944  1CBA  3400               	retlw	0
  1945  1CBB  3400               	retlw	0
  1946  1CBC  34FF               	retlw	255
  1947  1CBD  34FF               	retlw	255
  1948  1CBE  34FF               	retlw	255
  1949  1CBF  3400               	retlw	0
  1950  1CC0  3400               	retlw	0
  1951  1CC1  3400               	retlw	0
  1952  1CC2  3400               	retlw	0
  1953  1CC3  3400               	retlw	0
  1954  1CC4  3400               	retlw	0
  1955  1CC5  3400               	retlw	0
  1956  1CC6  3400               	retlw	0
  1957  1CC7  3400               	retlw	0
  1958  1CC8  3400               	retlw	0
  1959  1CC9  3400               	retlw	0
  1960  1CCA  3400               	retlw	0
  1961  1CCB  3400               	retlw	0
  1962  1CCC  3400               	retlw	0
  1963  1CCD  3400               	retlw	0
  1964  1CCE  3400               	retlw	0
  1965  1CCF  3400               	retlw	0
  1966                           
  1967                           	psect	stringtext
  1968  1800                     __pstringtext:	
  1969  1800                     _CC2500_registers_address:	
  1970  1800  3403               	retlw	3
  1971  1801  3416               	retlw	22
  1972  1802  3417               	retlw	23
  1973  1803  341E               	retlw	30
  1974  1804  341F               	retlw	31
  1975  1805  3420               	retlw	32
  1976  1806  342A               	retlw	42
  1977  1807  342B               	retlw	43
  1978  1808  340B               	retlw	11
  1979  1809  340C               	retlw	12
  1980  180A  340D               	retlw	13
  1981  180B  340E               	retlw	14
  1982  180C  340F               	retlw	15
  1983  180D  3410               	retlw	16
  1984  180E  3411               	retlw	17
  1985  180F  3412               	retlw	18
  1986  1810  3413               	retlw	19
  1987  1811  3414               	retlw	20
  1988  1812  340A               	retlw	10
  1989  1813  3415               	retlw	21
  1990  1814  3421               	retlw	33
  1991  1815  3422               	retlw	34
  1992  1816  3418               	retlw	24
  1993  1817  3419               	retlw	25
  1994  1818  341A               	retlw	26
  1995  1819  341B               	retlw	27
  1996  181A  341C               	retlw	28
  1997  181B  341D               	retlw	29
  1998  181C  3423               	retlw	35
  1999  181D  3424               	retlw	36
  2000  181E  3425               	retlw	37
  2001  181F  3426               	retlw	38
  2002  1820  3429               	retlw	41
  2003  1821  342C               	retlw	44
  2004  1822  342D               	retlw	45
  2005  1823  342E               	retlw	46
  2006  1824  3400               	retlw	0
  2007  1825  3401               	retlw	1
  2008  1826  3402               	retlw	2
  2009  1827  3407               	retlw	7
  2010  1828  3408               	retlw	8
  2011  1829  3409               	retlw	9
  2012  182A  3406               	retlw	6
  2013  182B  3404               	retlw	4
  2014  182C  3405               	retlw	5
  2015  182D  3427               	retlw	39
  2016  182E  3428               	retlw	40
  2017  182F                     __end_of_CC2500_registers_address:	
  2018  182F                     _CC2500_rfSettings:	
  2019  182F  3407               	retlw	7
  2020  1830  3407               	retlw	7
  2021  1831  3430               	retlw	48
  2022  1832  3487               	retlw	135
  2023  1833  346B               	retlw	107
  2024  1834  34F8               	retlw	248
  2025  1835  347F               	retlw	127
  2026  1836  343F               	retlw	63
  2027  1837  3409               	retlw	9
  2028  1838  3400               	retlw	0
  2029  1839  345C               	retlw	92
  2030  183A  34A7               	retlw	167
  2031  183B  3462               	retlw	98
  2032  183C  3486               	retlw	134
  2033  183D  3483               	retlw	131
  2034  183E  3403               	retlw	3
  2035  183F  3422               	retlw	34
  2036  1840  34F8               	retlw	248
  2037  1841  3400               	retlw	0
  2038  1842  3444               	retlw	68
  2039  1843  34B6               	retlw	182
  2040  1844  3410               	retlw	16
  2041  1845  3418               	retlw	24
  2042  1846  341D               	retlw	29
  2043  1847  341C               	retlw	28
  2044  1848  34C7               	retlw	199
  2045  1849  3400               	retlw	0
  2046  184A  34B2               	retlw	178
  2047  184B  34EA               	retlw	234
  2048  184C  340A               	retlw	10
  2049  184D  3400               	retlw	0
  2050  184E  3411               	retlw	17
  2051  184F  3459               	retlw	89
  2052  1850  3488               	retlw	136
  2053  1851  3431               	retlw	49
  2054  1852  340B               	retlw	11
  2055  1853  342F               	retlw	47
  2056  1854  342E               	retlw	46
  2057  1855  3406               	retlw	6
  2058  1856  3404               	retlw	4
  2059  1857  3405               	retlw	5
  2060  1858  3400               	retlw	0
  2061  1859  3430               	retlw	48
  2062  185A  34D3               	retlw	211
  2063  185B  3491               	retlw	145
  2064  185C  3441               	retlw	65
  2065  185D  3400               	retlw	0
  2066  185E                     __end_of_CC2500_rfSettings:	
  2067  185E                     _CC2500_patable_vaule:	
  2068  185E  34FE               	retlw	254
  2069  185F  34FE               	retlw	254
  2070  1860  34FE               	retlw	254
  2071  1861  34FE               	retlw	254
  2072  1862  34FE               	retlw	254
  2073  1863  34FE               	retlw	254
  2074  1864  34FE               	retlw	254
  2075  1865  34FE               	retlw	254
  2076  1866                     __end_of_CC2500_patable_vaule:	
  2077                           
  2078                           	psect	nvBANK0
  2079  006D                     __pnvBANK0:	
  2080  006D                     _Memory:	
  2081  006D                     	ds	1
  2082  006E                     _Product:	
  2083  006E                     	ds	1
  2084  006F                     _TMain:	
  2085  006F                     	ds	1
  2086                           
  2087                           	psect	nvBANK1
  2088  00EE                     __pnvBANK1:	
  2089  00EE                     _Timer0:	
  2090  00EE                     	ds	1
  2091  000C                     _PORTA	set	12
  2092  000D                     _PORTB	set	13
  2093  000E                     _PORTC	set	14
  2094  0015                     _TMR0	set	21
  2095  005F                     _GIE	set	95
  2096  005C                     _INTE	set	92
  2097  0059                     _INTF	set	89
  2098  005B                     _IOCIE	set	91
  2099  0058                     _IOCIF	set	88
  2100  005E                     _PEIE	set	94
  2101  0060                     _RA0	set	96
  2102  0063                     _RA3	set	99
  2103  0064                     _RA4	set	100
  2104  0066                     _RA6	set	102
  2105  0067                     _RA7	set	103
  2106  0068                     _RB0	set	104
  2107  0069                     _RB1	set	105
  2108  006A                     _RB2	set	106
  2109  006B                     _RB3	set	107
  2110  006C                     _RB4	set	108
  2111  006D                     _RB5	set	109
  2112  0070                     _RC0	set	112
  2113  0071                     _RC1	set	113
  2114  0072                     _RC2	set	114
  2115  0074                     _RC4	set	116
  2116  0075                     _RC5	set	117
  2117  0077                     _RC7	set	119
  2118  005D                     _TMR0IE	set	93
  2119  005A                     _TMR0IF	set	90
  2120  009D                     _ADCON0	set	157
  2121  009E                     _ADCON1	set	158
  2122  009C                     _ADRESH	set	156
  2123  009B                     _ADRESL	set	155
  2124  0095                     _OPTION_REG	set	149
  2125  0099                     _OSCCON	set	153
  2126  008C                     _TRISA	set	140
  2127  008D                     _TRISB	set	141
  2128  008E                     _TRISC	set	142
  2129  04E9                     _GO_nDONE	set	1257
  2130  0117                     _FVRCON	set	279
  2131  010C                     _LATA	set	268
  2132  010D                     _LATB	set	269
  2133  010E                     _LATC	set	270
  2134  018C                     _ANSELA	set	396
  2135  018D                     _ANSELB	set	397
  2136  018E                     _ANSELC	set	398
  2137  0192                     _PMADRH	set	402
  2138  0191                     _PMADRL	set	401
  2139  0196                     _PMCON2	set	406
  2140  0194                     _PMDATH	set	404
  2141  0193                     _PMDATL	set	403
  2142  0CAE                     _CFGS	set	3246
  2143  0CAC                     _FREE	set	3244
  2144  0CAD                     _LWLO	set	3245
  2145  0CA8                     _RD	set	3240
  2146  0CA9                     _WR	set	3241
  2147  0CAA                     _WREN	set	3242
  2148  1068                     _WPUB0	set	4200
  2149  1069                     _WPUB1	set	4201
  2150  106A                     _WPUB2	set	4202
  2151  0396                     _IOCBF	set	918
  2152  0395                     _IOCBN	set	917
  2153  0394                     _IOCBP	set	916
  2154  1CB2                     _IOCBF2	set	7346
  2155                           
  2156                           ; #config settings
  2157  0000                     
  2158                           	psect	cinit
  2159  0018                     start_initialization:	
  2160  0018                     __initialization:	
  2161                           
  2162                           ; Clear objects allocated to BITCOMMON
  2163  0018  01F0               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
  2164                           
  2165                           ; Clear objects allocated to COMMON
  2166  0019  01F6               	clrf	__pbssCOMMON& (0+127)
  2167  001A  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
  2168  001B  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
  2169  001C  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
  2170                           
  2171                           ; Clear objects allocated to BANK0
  2172  001D  01E8               	clrf	__pbssBANK0& (0+127)
  2173  001E  01E9               	clrf	(__pbssBANK0+1)& (0+127)
  2174  001F  01EA               	clrf	(__pbssBANK0+2)& (0+127)
  2175  0020  01EB               	clrf	(__pbssBANK0+3)& (0+127)
  2176  0021  01EC               	clrf	(__pbssBANK0+4)& (0+127)
  2177                           
  2178                           ; Clear objects allocated to BANK1
  2179  0022  30A0               	movlw	low __pbssBANK1
  2180  0023  0084               	movwf	4
  2181  0024  3000               	movlw	high __pbssBANK1
  2182  0025  0085               	movwf	5
  2183  0026  304A               	movlw	74
  2184  0027  3199  210A  3180   	fcall	clear_ram0
  2185                           
  2186                           ; Clear objects allocated to BANK2
  2187  002A  3020               	movlw	low __pbssBANK2
  2188  002B  0084               	movwf	4
  2189  002C  3001               	movlw	high __pbssBANK2
  2190  002D  0085               	movwf	5
  2191  002E  3050               	movlw	80
  2192  002F  3199  210A  3180   	fcall	clear_ram0
  2193                           
  2194                           ; Clear objects allocated to BANK3
  2195  0032  30C0               	movlw	low __pbssBANK3
  2196  0033  0084               	movwf	4
  2197  0034  3001               	movlw	high __pbssBANK3
  2198  0035  0085               	movwf	5
  2199  0036  3011               	movlw	17
  2200  0037  3199  210A  3180   	fcall	clear_ram0
  2201                           
  2202                           ; Clear objects allocated to BANK4
  2203  003A  3020               	movlw	low __pbssBANK4
  2204  003B  0084               	movwf	4
  2205  003C  3002               	movlw	high __pbssBANK4
  2206  003D  0085               	movwf	5
  2207  003E  3025               	movlw	37
  2208  003F  3199  210A  3180   	fcall	clear_ram0
  2209                           
  2210                           ; Initialize objects allocated to BANK3
  2211  0042  30B0               	movlw	low __pidataBANK3
  2212  0043  0084               	movwf	4
  2213  0044  309C               	movlw	(high __pidataBANK3)| (0+128)
  2214  0045  0085               	movwf	5
  2215  0046  30A0               	movlw	low __pdataBANK3
  2216  0047  0086               	movwf	6
  2217  0048  3001               	movlw	high __pdataBANK3
  2218  0049  0087               	movwf	7
  2219  004A  3020               	movlw	32
  2220  004B  3199  2104         	fcall	init_ram
  2221  004D                     end_of_initialization:	
  2222                           ;End of C runtime variable initialization code
  2223                           
  2224  004D                     __end_of__initialization:	
  2225  004D  107E               	bcf	pic14e$flags,0	;clear compiler interrupt flag
  2226  004E  0020               	movlb	0
  2227  004F  3188  2802         	ljmp	_main	;jump to C main() function
  2228                           
  2229                           	psect	bitbssCOMMON
  2230  0380                     __pbitbssCOMMON:	
  2231  0380                     _CC2500_Enable:	
  2232  0380                     	ds	1
  2233  0381                     _Receive_GO:	
  2234  0381                     	ds	1
  2235  0382                     _Receive_OK:	
  2236  0382                     	ds	1
  2237  0383                     _RxStatus:	
  2238  0383                     	ds	1
  2239  0384                     _Transceive_GO:	
  2240  0384                     	ds	1
  2241  0385                     _Transceive_OK:	
  2242  0385                     	ds	1
  2243  0386                     _TxStatus:	
  2244  0386                     	ds	1
  2245                           
  2246                           	psect	bssCOMMON
  2247  0076                     __pbssCOMMON:	
  2248  0076                     _PF:	
  2249  0076                     	ds	1
  2250  0077                     _RF:	
  2251  0077                     	ds	1
  2252  0078                     _Sw:	
  2253  0078                     	ds	1
  2254  0079                     _Temp:	
  2255  0079                     	ds	1
  2256                           
  2257                           	psect	bssBANK0
  2258  0068                     __pbssBANK0:	
  2259  0068                     _Buz:	
  2260  0068                     	ds	1
  2261  0069                     _DelayOff:	
  2262  0069                     	ds	1
  2263  006A                     _DimmerLights:	
  2264  006A                     	ds	1
  2265  006B                     _DimmerLights11:	
  2266  006B                     	ds	1
  2267  006C                     _DimmerLights22:	
  2268  006C                     	ds	1
  2269                           
  2270                           	psect	bssBANK1
  2271  00A0                     __pbssBANK1:	
  2272  00A0                     _RF_Data:	
  2273  00A0                     	ds	21
  2274  00B5                     _RF_Count:	
  2275  00B5                     	ds	2
  2276  00B7                     _CRC:	
  2277  00B7                     	ds	1
  2278  00B8                     _Dimmer:	
  2279  00B8                     	ds	1
  2280  00B9                     _DimmerLightsIntr:	
  2281  00B9                     	ds	1
  2282  00BA                     _LED:	
  2283  00BA                     	ds	1
  2284  00BB                     _RFSW:	
  2285  00BB                     	ds	1
  2286  00BC                     _RSSI:	
  2287  00BC                     	ds	1
  2288  00BD                     _Rx_Length:	
  2289  00BD                     	ds	1
  2290  00BE                     _SPI0Buffer:	
  2291  00BE                     	ds	1
  2292  00BF                     _Tx_Length:	
  2293  00BF                     	ds	1
  2294  00C0                     _r_address:	
  2295  00C0                     	ds	1
  2296  00C1                     _r_data:	
  2297  00C1                     	ds	1
  2298  00C2                     _s_data:	
  2299  00C2                     	ds	1
  2300  00C3                     _VarTimer0:	
  2301  00C3                     	ds	9
  2302  00CC                     _DlySw1:	
  2303  00CC                     	ds	5
  2304  00D1                     _DlySw2:	
  2305  00D1                     	ds	5
  2306  00D6                     _VarErrLED:	
  2307  00D6                     	ds	4
  2308  00DA                     _VarLED1:	
  2309  00DA                     	ds	4
  2310  00DE                     _VarLED2:	
  2311  00DE                     	ds	4
  2312  00E2                     _Dimmer1:	
  2313  00E2                     	ds	3
  2314  00E5                     _RF1:	
  2315  00E5                     	ds	3
  2316  00E8                     _RFSW1:	
  2317  00E8                     	ds	1
  2318  00E9                     _RFSW2:	
  2319  00E9                     	ds	1
  2320                           
  2321                           	psect	bssBANK2
  2322  0120                     __pbssBANK2:	
  2323  0120                     _DimmerLights1:	
  2324  0120                     	ds	14
  2325  012E                     _DimmerLights2:	
  2326  012E                     	ds	14
  2327  013C                     _Temp1:	
  2328  013C                     	ds	14
  2329  014A                     _Buz1:	
  2330  014A                     	ds	12
  2331  0156                     _Sw1:	
  2332  0156                     	ds	9
  2333  015F                     _Sw2:	
  2334  015F                     	ds	9
  2335  0168                     _PF1:	
  2336  0168                     	ds	8
  2337                           
  2338                           	psect	bssBANK3
  2339  01C0                     __pbssBANK3:	
  2340  01C0                     _VarTMain:	
  2341  01C0                     	ds	17
  2342                           
  2343                           	psect	dataBANK3
  2344  01A0                     __pdataBANK3:	
  2345  01A0                     _VarProduct:	
  2346  01A0                     	ds	32
  2347                           
  2348                           	psect	bssBANK4
  2349  0220                     __pbssBANK4:	
  2350  0220                     _VarMemory:	
  2351  0220                     	ds	37
  2352                           
  2353                           	psect	clrtext
  2354  190A                     clear_ram0:	
  2355                           ;	Called with FSR0 containing the base address, and
  2356                           ;	WREG with the size to clear
  2357                           
  2358  190A  0064               	clrwdt	;clear the watchdog before getting into this loop
  2359  190B                     clrloop0:	
  2360  190B  0180               	clrf	0	;clear RAM location pointed to by FSR
  2361  190C  3101               	addfsr 0,1
  2362  190D  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2363  190E  290B               	goto	clrloop0	;have we reached the end yet?
  2364  190F  3400               	retlw	0	;all done for this memory range, return
  2365                           
  2366                           	psect	inittext
  2367  1904                     init_ram:	
  2368  1904  00FE               	movwf	126
  2369  1905                     initloop:	
  2370  1905  0012               	moviw fsr0++
  2371  1906  001E               	movwi fsr1++
  2372  1907  0BFE               	decfsz	126,f
  2373  1908  2905               	goto	initloop
  2374  1909  3400               	retlw	0
  2375                           
  2376                           	psect	cstackBANK1
  2377  00EA                     __pcstackBANK1:	
  2378  00EA                     getRxData@rf:	
  2379  00EA                     _setSw_Main$4169:	
  2380                           ; 1 bytes @ 0x0
  2381                           
  2382                           
  2383                           ; 1 bytes @ 0x0
  2384  00EA                     	ds	1
  2385  00EB                     ??_setRF_Main:	
  2386  00EB                     _setSw_Main$4170:	
  2387                           ; 0 bytes @ 0x1
  2388                           
  2389                           
  2390                           ; 1 bytes @ 0x1
  2391  00EB                     	ds	1
  2392  00EC                     setRF_Main@rf:	
  2393  00EC                     setSw_Main@sw:	
  2394                           ; 1 bytes @ 0x2
  2395                           
  2396                           
  2397                           ; 1 bytes @ 0x2
  2398  00EC                     	ds	1
  2399  00ED                     _setRF_Main$3848:	
  2400                           
  2401                           ; 1 bytes @ 0x3
  2402  00ED                     	ds	1
  2403                           
  2404                           	psect	cstackCOMMON
  2405  0071                     __pcstackCOMMON:	
  2406  0071                     ?_CC2500_WriteByte:	
  2407  0071                     ?_CC2500_WriteCommand:	
  2408                           ; 0 bytes @ 0x0
  2409                           
  2410  0071                     ?_CC2500_ReadStatus:	
  2411                           ; 0 bytes @ 0x0
  2412                           
  2413  0071                     ?_CC2500_ReadByte:	
  2414                           ; 0 bytes @ 0x0
  2415                           
  2416  0071                     ?_CC2500_PowerRST:	
  2417                           ; 0 bytes @ 0x0
  2418                           
  2419  0071                     ?_CC2500_InitSetREG:	
  2420                           ; 0 bytes @ 0x0
  2421                           
  2422  0071                     ?_CC2500_InitPATable:	
  2423                           ; 0 bytes @ 0x0
  2424                           
  2425  0071                     ?_CC2500_ClearTXFIFO:	
  2426                           ; 0 bytes @ 0x0
  2427                           
  2428  0071                     ?_CC2500_ClearRXFIFO:	
  2429                           ; 0 bytes @ 0x0
  2430                           
  2431  0071                     ?_CC2500_FrequencyCabr:	
  2432                           ; 0 bytes @ 0x0
  2433                           
  2434  0071                     ?_CC2500_SIDLEMode:	
  2435                           ; 0 bytes @ 0x0
  2436                           
  2437  0071                     ?_DlyOff_Initialization:	
  2438                           ; 0 bytes @ 0x0
  2439                           
  2440  0071                     ?_DlyOff_Main:	
  2441                           ; 0 bytes @ 0x0
  2442                           
  2443  0071                     ?_setTxData:	
  2444                           ; 0 bytes @ 0x0
  2445                           
  2446  0071                     ?_setDimmerLights_Initialization:	
  2447                           ; 0 bytes @ 0x0
  2448                           
  2449  0071                     ?_Dimmer_Initialization:	
  2450                           ; 0 bytes @ 0x0
  2451                           
  2452  0071                     ?_setDimmerLights_Main:	
  2453                           ; 0 bytes @ 0x0
  2454                           
  2455  0071                     ?_setDimmerLights_ERROR:	
  2456                           ; 0 bytes @ 0x0
  2457                           
  2458  0071                     ?_setLED_Initialization:	
  2459                           ; 0 bytes @ 0x0
  2460                           
  2461  0071                     ?_setLED_Main:	
  2462                           ; 0 bytes @ 0x0
  2463                           
  2464  0071                     ?_MainT_Initialization:	
  2465                           ; 0 bytes @ 0x0
  2466                           
  2467  0071                     ?_Mcu_Initialization:	
  2468                           ; 0 bytes @ 0x0
  2469                           
  2470  0071                     ?_Flash_Memory_Initialization:	
  2471                           ; 0 bytes @ 0x0
  2472                           
  2473  0071                     ?_Temp_Initialization:	
  2474                           ; 0 bytes @ 0x0
  2475                           
  2476  0071                     ?_PowerFault_Initialization:	
  2477                           ; 0 bytes @ 0x0
  2478                           
  2479  0071                     ?_Switch_Initialization:	
  2480                           ; 0 bytes @ 0x0
  2481                           
  2482  0071                     ?_RF_Initialization:	
  2483                           ; 0 bytes @ 0x0
  2484                           
  2485  0071                     ?_getTemp_AD:	
  2486                           ; 0 bytes @ 0x0
  2487                           
  2488  0071                     ?_getPowerFault_AD:	
  2489                           ; 0 bytes @ 0x0
  2490                           
  2491  0071                     ?_MainT:	
  2492                           ; 0 bytes @ 0x0
  2493                           
  2494  0071                     ?_MainT_ResetClock:	
  2495                           ; 0 bytes @ 0x0
  2496                           
  2497  0071                     ?_Flash_Memory_Main:	
  2498                           ; 0 bytes @ 0x0
  2499                           
  2500  0071                     ?_Temp_Main:	
  2501                           ; 0 bytes @ 0x0
  2502                           
  2503  0071                     ?_PowerFault_Main:	
  2504                           ; 0 bytes @ 0x0
  2505                           
  2506  0071                     ?_Switch_Main:	
  2507                           ; 0 bytes @ 0x0
  2508                           
  2509  0071                     ?_RF_Main:	
  2510                           ; 0 bytes @ 0x0
  2511                           
  2512  0071                     ?_setTemp_Enable:	
  2513                           ; 0 bytes @ 0x0
  2514                           
  2515  0071                     ?_setSw_Enable:	
  2516                           ; 0 bytes @ 0x0
  2517                           
  2518  0071                     ?_IO_Set:	
  2519                           ; 0 bytes @ 0x0
  2520                           
  2521  0071                     ?_TMR0_Set:	
  2522                           ; 0 bytes @ 0x0
  2523                           
  2524  0071                     ?_ADC_Set:	
  2525                           ; 0 bytes @ 0x0
  2526                           
  2527  0071                     ?_INT_Set:	
  2528                           ; 0 bytes @ 0x0
  2529                           
  2530  0071                     ?_IOC_Set:	
  2531                           ; 0 bytes @ 0x0
  2532                           
  2533  0071                     ?_IOC_ISR:	
  2534                           ; 0 bytes @ 0x0
  2535                           
  2536  0071                     ??_IOC_ISR:	
  2537                           ; 0 bytes @ 0x0
  2538                           
  2539  0071                     ?_TMR0_ISR:	
  2540                           ; 0 bytes @ 0x0
  2541                           
  2542  0071                     ??_TMR0_ISR:	
  2543                           ; 0 bytes @ 0x0
  2544                           
  2545  0071                     ?_INT_ISR:	
  2546                           ; 0 bytes @ 0x0
  2547                           
  2548  0071                     ?_Flash_Memory_Write:	
  2549                           ; 0 bytes @ 0x0
  2550                           
  2551  0071                     ?_Flash_Memory_Modify:	
  2552                           ; 0 bytes @ 0x0
  2553                           
  2554  0071                     ?_setTemp_Initialization:	
  2555                           ; 0 bytes @ 0x0
  2556                           
  2557  0071                     ?_setTemp_Main:	
  2558                           ; 0 bytes @ 0x0
  2559                           
  2560  0071                     ?_setOverTemp_Exceptions:	
  2561                           ; 0 bytes @ 0x0
  2562                           
  2563  0071                     ?_setPowerFault_Initialization:	
  2564                           ; 0 bytes @ 0x0
  2565                           
  2566  0071                     ?_setPowerFault_Main:	
  2567                           ; 0 bytes @ 0x0
  2568                           
  2569  0071                     ?_setPowerFault_Exceptions:	
  2570                           ; 0 bytes @ 0x0
  2571                           
  2572  0071                     ?_setRF_Initialization:	
  2573                           ; 0 bytes @ 0x0
  2574                           
  2575  0071                     ?_setRF_Main:	
  2576                           ; 0 bytes @ 0x0
  2577                           
  2578  0071                     ?_getRxData:	
  2579                           ; 0 bytes @ 0x0
  2580                           
  2581  0071                     ?_RF_RxDisable:	
  2582                           ; 0 bytes @ 0x0
  2583                           
  2584  0071                     ?_setLog_Code:	
  2585                           ; 0 bytes @ 0x0
  2586                           
  2587  0071                     ?_setControl_Lights_Table:	
  2588                           ; 0 bytes @ 0x0
  2589                           
  2590  0071                     ?_setRFSW_Control:	
  2591                           ; 0 bytes @ 0x0
  2592                           
  2593  0071                     ?_setRFSW_AdjControl:	
  2594                           ; 0 bytes @ 0x0
  2595                           
  2596  0071                     ?_setRF_DimmerValue:	
  2597                           ; 0 bytes @ 0x0
  2598                           
  2599  0071                     ?_setSw_Initialization:	
  2600                           ; 0 bytes @ 0x0
  2601                           
  2602  0071                     ?_setSw_Main:	
  2603                           ; 0 bytes @ 0x0
  2604                           
  2605  0071                     ?_Sw_DimmerOnFunc:	
  2606                           ; 0 bytes @ 0x0
  2607                           
  2608  0071                     ?_Sw_DimmerAdjFunc:	
  2609                           ; 0 bytes @ 0x0
  2610                           
  2611  0071                     ?_Sw_DimmerOffFunc:	
  2612                           ; 0 bytes @ 0x0
  2613                           
  2614  0071                     ?_Buzzer_Initialization:	
  2615                           ; 0 bytes @ 0x0
  2616                           
  2617  0071                     ?_Buzzer_Main:	
  2618                           ; 0 bytes @ 0x0
  2619                           
  2620  0071                     ?_CC2500_TxData:	
  2621                           ; 0 bytes @ 0x0
  2622                           
  2623  0071                     ?_CC2500_RxData:	
  2624                           ; 0 bytes @ 0x0
  2625                           
  2626  0071                     ?_CC2500_PowerOnInitial:	
  2627                           ; 0 bytes @ 0x0
  2628                           
  2629  0071                     ?_DelayOffPointSelect:	
  2630                           ; 0 bytes @ 0x0
  2631                           
  2632  0071                     ?_DelayOff_Initialization:	
  2633                           ; 0 bytes @ 0x0
  2634                           
  2635  0071                     ?_DelayOff_Main:	
  2636                           ; 0 bytes @ 0x0
  2637                           
  2638  0071                     ?_DimmerLightsPointSelect:	
  2639                           ; 0 bytes @ 0x0
  2640                           
  2641  0071                     ?_DimmerLights_Initialization:	
  2642                           ; 0 bytes @ 0x0
  2643                           
  2644  0071                     ?_DimmerLights_Close:	
  2645                           ; 0 bytes @ 0x0
  2646                           
  2647  0071                     ?_DimmerLights_Main:	
  2648                           ; 0 bytes @ 0x0
  2649                           
  2650  0071                     ?_DimmerLights_Exceptions:	
  2651                           ; 0 bytes @ 0x0
  2652                           
  2653  0071                     ?_setDimmerLights_AdjRF:	
  2654                           ; 0 bytes @ 0x0
  2655                           
  2656  0071                     ?_LedPointSelect:	
  2657                           ; 0 bytes @ 0x0
  2658                           
  2659  0071                     ?_LED_Initialization:	
  2660                           ; 0 bytes @ 0x0
  2661                           
  2662  0071                     ?_LED_Main:	
  2663                           ; 0 bytes @ 0x0
  2664                           
  2665  0071                     ?_main:	
  2666                           ; 0 bytes @ 0x0
  2667                           
  2668  0071                     ?_ISR:	
  2669                           ; 0 bytes @ 0x0
  2670                           
  2671  0071                     ?_setDimmerReClock:	
  2672                           ; 0 bytes @ 0x0
  2673                           
  2674  0071                     ??_setDimmerReClock:	
  2675                           ; 0 bytes @ 0x0
  2676                           
  2677  0071                     ?_setINT_GO:	
  2678                           ; 0 bytes @ 0x0
  2679                           
  2680  0071                     ?_Flash_Memory_Unlock:	
  2681                           ; 0 bytes @ 0x0
  2682                           
  2683  0071                     ?_Flash_Memory_Erasing:	
  2684                           ; 0 bytes @ 0x0
  2685                           
  2686  0071                     ?_RfPointSelect:	
  2687                           ; 0 bytes @ 0x0
  2688                           
  2689  0071                     ?_RfSWPointSelect:	
  2690                           ; 0 bytes @ 0x0
  2691                           
  2692  0071                     ?_TouchPower:	
  2693                           ; 0 bytes @ 0x0
  2694                           
  2695  0071                     ?_SwPointSelect:	
  2696                           ; 0 bytes @ 0x0
  2697                           
  2698  0071                     ?i1_RfPointSelect:	
  2699                           ; 0 bytes @ 0x0
  2700                           
  2701  0071                     ??i1_RfPointSelect:	
  2702                           ; 0 bytes @ 0x0
  2703                           
  2704  0071                     ?_DelayTimejudge:	
  2705                           ; 0 bytes @ 0x0
  2706                           
  2707  0071                     ?_getDimmerLights_StatusFlag:	
  2708                           ; 1 bytes @ 0x0
  2709                           
  2710  0071                     ?_getPercentValue:	
  2711                           ; 1 bytes @ 0x0
  2712                           
  2713  0071                     ?_Flash_Memory_Read:	
  2714                           ; 1 bytes @ 0x0
  2715                           
  2716  0071                     ?_getPF_Safe:	
  2717                           ; 1 bytes @ 0x0
  2718                           
  2719  0071                     ?_setPercentValue:	
  2720                           ; 1 bytes @ 0x0
  2721                           
  2722  0071                     ?_getTemp_Safe:	
  2723                           ; 1 bytes @ 0x0
  2724                           
  2725  0071                     setRF_Initialization@rf:	
  2726                           ; 1 bytes @ 0x0
  2727                           
  2728                           
  2729                           ; 1 bytes @ 0x0
  2730  0071                     	ds	1
  2731  0072                     i1RfPointSelect@rf:	
  2732                           
  2733                           ; 1 bytes @ 0x1
  2734  0072                     	ds	1
  2735  0073                     ?_setRF_ReceiveGO:	
  2736  0073                     setRF_ReceiveGO@command:	
  2737                           ; 0 bytes @ 0x2
  2738                           
  2739                           
  2740                           ; 1 bytes @ 0x2
  2741  0073                     	ds	1
  2742  0074                     ??_setRF_ReceiveGO:	
  2743  0074                     setRF_ReceiveGO@rf:	
  2744                           ; 0 bytes @ 0x3
  2745                           
  2746                           
  2747                           ; 1 bytes @ 0x3
  2748  0074                     	ds	1
  2749  0075                     ??_INT_ISR:	
  2750  0075                     ??_ISR:	
  2751                           ; 0 bytes @ 0x4
  2752                           
  2753                           
  2754                           ; 0 bytes @ 0x4
  2755  0075                     	ds	1
  2756                           
  2757                           	psect	cstackBANK0
  2758  0020                     __pcstackBANK0:	
  2759  0020                     ??_CC2500_WriteByte:	
  2760  0020                     ??_CC2500_ReadByte:	
  2761                           ; 0 bytes @ 0x0
  2762                           
  2763  0020                     ?_DelayTime_1us:	
  2764                           ; 0 bytes @ 0x0
  2765                           
  2766  0020                     ??_DelayTimejudge:	
  2767                           ; 0 bytes @ 0x0
  2768                           
  2769  0020                     ??_Dimmer_Initialization:	
  2770                           ; 0 bytes @ 0x0
  2771                           
  2772  0020                     ??_getDimmerLights_StatusFlag:	
  2773                           ; 0 bytes @ 0x0
  2774                           
  2775  0020                     ??_MainT_Initialization:	
  2776                           ; 0 bytes @ 0x0
  2777                           
  2778  0020                     ??_MainT_ResetClock:	
  2779                           ; 0 bytes @ 0x0
  2780                           
  2781  0020                     ??_setTemp_Enable:	
  2782                           ; 0 bytes @ 0x0
  2783                           
  2784  0020                     ??_IO_Set:	
  2785                           ; 0 bytes @ 0x0
  2786                           
  2787  0020                     ??_TMR0_Set:	
  2788                           ; 0 bytes @ 0x0
  2789                           
  2790  0020                     ??_ADC_Set:	
  2791                           ; 0 bytes @ 0x0
  2792                           
  2793  0020                     ??_INT_Set:	
  2794                           ; 0 bytes @ 0x0
  2795                           
  2796  0020                     ??_IOC_Set:	
  2797                           ; 0 bytes @ 0x0
  2798                           
  2799  0020                     ??_Flash_Memory_Read:	
  2800                           ; 0 bytes @ 0x0
  2801                           
  2802  0020                     ??_Flash_Memory_Write:	
  2803                           ; 0 bytes @ 0x0
  2804                           
  2805  0020                     ??_setTemp_Initialization:	
  2806                           ; 0 bytes @ 0x0
  2807                           
  2808  0020                     ??_getPF_Safe:	
  2809                           ; 0 bytes @ 0x0
  2810                           
  2811  0020                     ??_setPowerFault_Initialization:	
  2812                           ; 0 bytes @ 0x0
  2813                           
  2814  0020                     ??_setRF_Initialization:	
  2815                           ; 0 bytes @ 0x0
  2816                           
  2817  0020                     ??_Buzzer_Initialization:	
  2818                           ; 0 bytes @ 0x0
  2819                           
  2820  0020                     ??_Buzzer_Main:	
  2821                           ; 0 bytes @ 0x0
  2822                           
  2823  0020                     ??_DelayOffPointSelect:	
  2824                           ; 0 bytes @ 0x0
  2825                           
  2826  0020                     ??_DimmerLightsPointSelect:	
  2827                           ; 0 bytes @ 0x0
  2828                           
  2829  0020                     ??_LedPointSelect:	
  2830                           ; 0 bytes @ 0x0
  2831                           
  2832  0020                     ??_setINT_GO:	
  2833                           ; 0 bytes @ 0x0
  2834                           
  2835  0020                     ??_Flash_Memory_Unlock:	
  2836                           ; 0 bytes @ 0x0
  2837                           
  2838  0020                     ??_Flash_Memory_Erasing:	
  2839                           ; 0 bytes @ 0x0
  2840                           
  2841  0020                     ??_getTemp_Safe:	
  2842                           ; 0 bytes @ 0x0
  2843                           
  2844  0020                     ??_RfPointSelect:	
  2845                           ; 0 bytes @ 0x0
  2846                           
  2847  0020                     ??_RfSWPointSelect:	
  2848                           ; 0 bytes @ 0x0
  2849                           
  2850  0020                     ??_TouchPower:	
  2851                           ; 0 bytes @ 0x0
  2852                           
  2853  0020                     ??_SwPointSelect:	
  2854                           ; 0 bytes @ 0x0
  2855                           
  2856  0020                     ?_getAD:	
  2857                           ; 0 bytes @ 0x0
  2858                           
  2859  0020                     ?___wmul:	
  2860                           ; 2 bytes @ 0x0
  2861                           
  2862  0020                     ?___ftpack:	
  2863                           ; 2 bytes @ 0x0
  2864                           
  2865  0020                     setINT_GO@command:	
  2866                           ; 3 bytes @ 0x0
  2867                           
  2868  0020                     getAD@adcon1:	
  2869                           ; 1 bytes @ 0x0
  2870                           
  2871  0020                     setTemp_Enable@command:	
  2872                           ; 1 bytes @ 0x0
  2873                           
  2874  0020                     DelayTime_1us@count:	
  2875                           ; 1 bytes @ 0x0
  2876                           
  2877  0020                     ___wmul@multiplier:	
  2878                           ; 2 bytes @ 0x0
  2879                           
  2880  0020                     ___ftpack@arg:	
  2881                           ; 2 bytes @ 0x0
  2882                           
  2883                           
  2884                           ; 3 bytes @ 0x0
  2885  0020                     	ds	1
  2886  0021                     ??_Mcu_Initialization:	
  2887  0021                     ??_Temp_Initialization:	
  2888                           ; 0 bytes @ 0x1
  2889                           
  2890  0021                     ??_PowerFault_Initialization:	
  2891                           ; 0 bytes @ 0x1
  2892                           
  2893  0021                     ??_RF_Initialization:	
  2894                           ; 0 bytes @ 0x1
  2895                           
  2896  0021                     CC2500_WriteByte@loop_a:	
  2897                           ; 0 bytes @ 0x1
  2898                           
  2899  0021                     CC2500_ReadByte@loop_b:	
  2900                           ; 1 bytes @ 0x1
  2901                           
  2902  0021                     DelayOffPointSelect@sw:	
  2903                           ; 1 bytes @ 0x1
  2904                           
  2905  0021                     DelayTimejudge@i:	
  2906                           ; 1 bytes @ 0x1
  2907                           
  2908  0021                     DimmerLightsPointSelect@lights:	
  2909                           ; 1 bytes @ 0x1
  2910                           
  2911  0021                     getDimmerLights_StatusFlag@Status:	
  2912                           ; 1 bytes @ 0x1
  2913                           
  2914  0021                     LedPointSelect@led:	
  2915                           ; 1 bytes @ 0x1
  2916                           
  2917  0021                     MainT_ResetClock@i:	
  2918                           ; 1 bytes @ 0x1
  2919                           
  2920  0021                     Flash_Memory_Read@i:	
  2921                           ; 1 bytes @ 0x1
  2922                           
  2923  0021                     Flash_Memory_Write@i:	
  2924                           ; 1 bytes @ 0x1
  2925                           
  2926  0021                     RfPointSelect@rf:	
  2927                           ; 1 bytes @ 0x1
  2928                           
  2929  0021                     RfSWPointSelect@sw:	
  2930                           ; 1 bytes @ 0x1
  2931                           
  2932  0021                     SwPointSelect@sw:	
  2933                           ; 1 bytes @ 0x1
  2934                           
  2935                           
  2936                           ; 1 bytes @ 0x1
  2937  0021                     	ds	1
  2938  0022                     ??_CC2500_WriteCommand:	
  2939  0022                     ??_CC2500_ReadStatus:	
  2940                           ; 0 bytes @ 0x2
  2941                           
  2942  0022                     ?_setRF_RxStatus:	
  2943                           ; 0 bytes @ 0x2
  2944                           
  2945  0022                     ??_DelayTime_1us:	
  2946                           ; 0 bytes @ 0x2
  2947                           
  2948  0022                     ?_CC2500_WriteREG:	
  2949                           ; 0 bytes @ 0x2
  2950                           
  2951  0022                     ??_DlyOff_Initialization:	
  2952                           ; 0 bytes @ 0x2
  2953                           
  2954  0022                     ?_setSw_Status:	
  2955                           ; 0 bytes @ 0x2
  2956                           
  2957  0022                     ?_setRFSW_Status:	
  2958                           ; 0 bytes @ 0x2
  2959                           
  2960  0022                     ?_setDimmerLights_Trigger:	
  2961                           ; 0 bytes @ 0x2
  2962                           
  2963  0022                     ?_setDimmerLights_Switch:	
  2964                           ; 0 bytes @ 0x2
  2965                           
  2966  0022                     ??_setTxData:	
  2967                           ; 0 bytes @ 0x2
  2968                           
  2969  0022                     ??_setDimmerLights_Initialization:	
  2970                           ; 0 bytes @ 0x2
  2971                           
  2972  0022                     ?_setDimmerLights_TriggerERROR:	
  2973                           ; 0 bytes @ 0x2
  2974                           
  2975  0022                     ?_setLED:	
  2976                           ; 0 bytes @ 0x2
  2977                           
  2978  0022                     ??_setLED_Main:	
  2979                           ; 0 bytes @ 0x2
  2980                           
  2981  0022                     ??_setSw_Enable:	
  2982                           ; 0 bytes @ 0x2
  2983                           
  2984  0022                     ?_setRF_Enable:	
  2985                           ; 0 bytes @ 0x2
  2986                           
  2987  0022                     ?_setDimmerLights_AdjGo:	
  2988                           ; 0 bytes @ 0x2
  2989                           
  2990  0022                     ?_setDimmerLights_TriggerAdj:	
  2991                           ; 0 bytes @ 0x2
  2992                           
  2993  0022                     ?_setRF_Learn:	
  2994                           ; 0 bytes @ 0x2
  2995                           
  2996  0022                     CC2500_WriteREG@value:	
  2997                           ; 0 bytes @ 0x2
  2998                           
  2999  0022                     DlyOff_Initialization@sw:	
  3000                           ; 1 bytes @ 0x2
  3001                           
  3002  0022                     DelayTimejudge@value:	
  3003                           ; 1 bytes @ 0x2
  3004                           
  3005  0022                     _getDimmerLights_StatusFlag$1629:	
  3006                           ; 1 bytes @ 0x2
  3007                           
  3008  0022                     setDimmerLights_TriggerERROR@command:	
  3009                           ; 1 bytes @ 0x2
  3010                           
  3011  0022                     setDimmerLights_Switch@command:	
  3012                           ; 1 bytes @ 0x2
  3013                           
  3014  0022                     setDimmerLights_AdjGo@command:	
  3015                           ; 1 bytes @ 0x2
  3016                           
  3017  0022                     setDimmerLights_Trigger@command:	
  3018                           ; 1 bytes @ 0x2
  3019                           
  3020  0022                     setDimmerLights_TriggerAdj@command:	
  3021                           ; 1 bytes @ 0x2
  3022                           
  3023  0022                     setLED@command:	
  3024                           ; 1 bytes @ 0x2
  3025                           
  3026  0022                     Flash_Memory_Read@address:	
  3027                           ; 1 bytes @ 0x2
  3028                           
  3029  0022                     setRF_Learn@command:	
  3030                           ; 1 bytes @ 0x2
  3031                           
  3032  0022                     setRF_RxStatus@command:	
  3033                           ; 1 bytes @ 0x2
  3034                           
  3035  0022                     setRF_Enable@command:	
  3036                           ; 1 bytes @ 0x2
  3037                           
  3038  0022                     setRFSW_Status@command:	
  3039                           ; 1 bytes @ 0x2
  3040                           
  3041  0022                     setSw_Enable@command:	
  3042                           ; 1 bytes @ 0x2
  3043                           
  3044  0022                     setSw_Status@command:	
  3045                           ; 1 bytes @ 0x2
  3046                           
  3047  0022                     DelayTime_1us@i:	
  3048                           ; 1 bytes @ 0x2
  3049                           
  3050  0022                     ___wmul@multiplicand:	
  3051                           ; 2 bytes @ 0x2
  3052                           
  3053                           
  3054                           ; 2 bytes @ 0x2
  3055  0022                     	ds	1
  3056  0023                     ??_setRF_RxStatus:	
  3057  0023                     ??_CC2500_WriteREG:	
  3058                           ; 0 bytes @ 0x3
  3059                           
  3060  0023                     ??_setSw_Status:	
  3061                           ; 0 bytes @ 0x3
  3062                           
  3063  0023                     ??_setRFSW_Status:	
  3064                           ; 0 bytes @ 0x3
  3065                           
  3066  0023                     ??_setDimmerLights_Trigger:	
  3067                           ; 0 bytes @ 0x3
  3068                           
  3069  0023                     ??_setDimmerLights_Switch:	
  3070                           ; 0 bytes @ 0x3
  3071                           
  3072  0023                     ??_setDimmerLights_TriggerERROR:	
  3073                           ; 0 bytes @ 0x3
  3074                           
  3075  0023                     ??_setLED:	
  3076                           ; 0 bytes @ 0x3
  3077                           
  3078  0023                     ??_setRF_Enable:	
  3079                           ; 0 bytes @ 0x3
  3080                           
  3081  0023                     ??_DelayOff_Initialization:	
  3082                           ; 0 bytes @ 0x3
  3083                           
  3084  0023                     ?_setDelayOff_GO:	
  3085                           ; 0 bytes @ 0x3
  3086                           
  3087  0023                     ??_DimmerLights_Close:	
  3088                           ; 0 bytes @ 0x3
  3089                           
  3090  0023                     ??_setDimmerLights_AdjGo:	
  3091                           ; 0 bytes @ 0x3
  3092                           
  3093  0023                     ??_setDimmerLights_TriggerAdj:	
  3094                           ; 0 bytes @ 0x3
  3095                           
  3096  0023                     ??_getAD:	
  3097                           ; 0 bytes @ 0x3
  3098                           
  3099  0023                     ??_setRF_Learn:	
  3100                           ; 0 bytes @ 0x3
  3101                           
  3102  0023                     CC2500_WriteCommand@command:	
  3103                           ; 0 bytes @ 0x3
  3104                           
  3105  0023                     CC2500_ReadStatus@status_addr:	
  3106                           ; 1 bytes @ 0x3
  3107                           
  3108  0023                     setDelayOff_GO@command:	
  3109                           ; 1 bytes @ 0x3
  3110                           
  3111  0023                     setDimmerLights_Initialization@lights:	
  3112                           ; 1 bytes @ 0x3
  3113                           
  3114  0023                     setDimmerLights_TriggerERROR@lights:	
  3115                           ; 1 bytes @ 0x3
  3116                           
  3117  0023                     setDimmerLights_Switch@lights:	
  3118                           ; 1 bytes @ 0x3
  3119                           
  3120  0023                     setDimmerLights_AdjGo@lights:	
  3121                           ; 1 bytes @ 0x3
  3122                           
  3123  0023                     setDimmerLights_Trigger@lights:	
  3124                           ; 1 bytes @ 0x3
  3125                           
  3126  0023                     setDimmerLights_TriggerAdj@lights:	
  3127                           ; 1 bytes @ 0x3
  3128                           
  3129  0023                     setLED@led:	
  3130                           ; 1 bytes @ 0x3
  3131                           
  3132  0023                     getAD@adcon0:	
  3133                           ; 1 bytes @ 0x3
  3134                           
  3135  0023                     Flash_Memory_Read@ret:	
  3136                           ; 1 bytes @ 0x3
  3137                           
  3138  0023                     setRF_Learn@rf:	
  3139                           ; 1 bytes @ 0x3
  3140                           
  3141  0023                     setRF_RxStatus@rf:	
  3142                           ; 1 bytes @ 0x3
  3143                           
  3144  0023                     setTxData@rf:	
  3145                           ; 1 bytes @ 0x3
  3146                           
  3147  0023                     setRF_Enable@rf:	
  3148                           ; 1 bytes @ 0x3
  3149                           
  3150  0023                     setRFSW_Status@sw:	
  3151                           ; 1 bytes @ 0x3
  3152                           
  3153  0023                     setSw_Status@sw:	
  3154                           ; 1 bytes @ 0x3
  3155                           
  3156  0023                     ___ftpack@exp:	
  3157                           ; 1 bytes @ 0x3
  3158                           
  3159                           
  3160                           ; 1 bytes @ 0x3
  3161  0023                     	ds	1
  3162  0024                     ??_CC2500_ClearTXFIFO:	
  3163  0024                     ??_CC2500_ClearRXFIFO:	
  3164                           ; 0 bytes @ 0x4
  3165                           
  3166  0024                     ??_CC2500_SIDLEMode:	
  3167                           ; 0 bytes @ 0x4
  3168                           
  3169  0024                     ?_setDimmerLights:	
  3170                           ; 0 bytes @ 0x4
  3171                           
  3172  0024                     ??_setDimmerLights_ERROR:	
  3173                           ; 0 bytes @ 0x4
  3174                           
  3175  0024                     ??_setLED_Initialization:	
  3176                           ; 0 bytes @ 0x4
  3177                           
  3178  0024                     ??_getTemp_AD:	
  3179                           ; 0 bytes @ 0x4
  3180                           
  3181  0024                     ??_getPowerFault_AD:	
  3182                           ; 0 bytes @ 0x4
  3183                           
  3184  0024                     ??_Flash_Memory_Modify:	
  3185                           ; 0 bytes @ 0x4
  3186                           
  3187  0024                     ??_RF_RxDisable:	
  3188                           ; 0 bytes @ 0x4
  3189                           
  3190  0024                     ??_setSw_Initialization:	
  3191                           ; 0 bytes @ 0x4
  3192                           
  3193  0024                     ??_Sw_DimmerAdjFunc:	
  3194                           ; 0 bytes @ 0x4
  3195                           
  3196  0024                     ??_CC2500_TxData:	
  3197                           ; 0 bytes @ 0x4
  3198                           
  3199  0024                     ??_CC2500_RxData:	
  3200                           ; 0 bytes @ 0x4
  3201                           
  3202  0024                     ??_DimmerLights_Initialization:	
  3203                           ; 0 bytes @ 0x4
  3204                           
  3205  0024                     ??___wmul:	
  3206                           ; 0 bytes @ 0x4
  3207                           
  3208  0024                     CC2500_WriteREG@w_addr:	
  3209                           ; 0 bytes @ 0x4
  3210                           
  3211  0024                     setDelayOff_GO@value:	
  3212                           ; 1 bytes @ 0x4
  3213                           
  3214  0024                     setDimmerLights@status:	
  3215                           ; 1 bytes @ 0x4
  3216                           
  3217  0024                     setLED_Initialization@led:	
  3218                           ; 1 bytes @ 0x4
  3219                           
  3220  0024                     setLED_Main@led:	
  3221                           ; 1 bytes @ 0x4
  3222                           
  3223  0024                     RF_RxDisable@rf:	
  3224                           ; 1 bytes @ 0x4
  3225                           
  3226  0024                     setSw_Initialization@sw:	
  3227                           ; 1 bytes @ 0x4
  3228                           
  3229  0024                     Sw_DimmerAdjFunc@Idle:	
  3230                           ; 1 bytes @ 0x4
  3231                           
  3232  0024                     ___ftpack@sign:	
  3233                           ; 1 bytes @ 0x4
  3234                           
  3235  0024                     DelayTime_1us@j:	
  3236                           ; 1 bytes @ 0x4
  3237                           
  3238  0024                     ___wmul@product:	
  3239                           ; 2 bytes @ 0x4
  3240                           
  3241                           
  3242                           ; 2 bytes @ 0x4
  3243  0024                     	ds	1
  3244  0025                     ??_CC2500_InitSetREG:	
  3245  0025                     ??_CC2500_InitPATable:	
  3246                           ; 0 bytes @ 0x5
  3247                           
  3248  0025                     ??_setDimmerLights:	
  3249                           ; 0 bytes @ 0x5
  3250                           
  3251  0025                     ??_Switch_Initialization:	
  3252                           ; 0 bytes @ 0x5
  3253                           
  3254  0025                     ??___ftpack:	
  3255                           ; 0 bytes @ 0x5
  3256                           
  3257  0025                     ??_setDelayOff_GO:	
  3258                           ; 0 bytes @ 0x5
  3259                           
  3260  0025                     ??_LED_Initialization:	
  3261                           ; 0 bytes @ 0x5
  3262                           
  3263  0025                     ??_LED_Main:	
  3264                           ; 0 bytes @ 0x5
  3265                           
  3266  0025                     CC2500_TxData@loop_e:	
  3267                           ; 0 bytes @ 0x5
  3268                           
  3269  0025                     CC2500_RxData@loop_f:	
  3270                           ; 1 bytes @ 0x5
  3271                           
  3272  0025                     setDimmerLights_ERROR@lights:	
  3273                           ; 1 bytes @ 0x5
  3274                           
  3275  0025                     Sw_DimmerAdjFunc@sw:	
  3276                           ; 1 bytes @ 0x5
  3277                           
  3278                           
  3279                           ; 1 bytes @ 0x5
  3280  0025                     	ds	1
  3281  0026                     ??_CC2500_PowerRST:	
  3282  0026                     ??_CC2500_FrequencyCabr:	
  3283                           ; 0 bytes @ 0x6
  3284                           
  3285  0026                     ?_setBuz:	
  3286                           ; 0 bytes @ 0x6
  3287                           
  3288  0026                     CC2500_InitSetREG@temp1:	
  3289                           ; 0 bytes @ 0x6
  3290                           
  3291  0026                     CC2500_InitPATable@temp:	
  3292                           ; 1 bytes @ 0x6
  3293                           
  3294  0026                     setDimmerLights@lights:	
  3295                           ; 1 bytes @ 0x6
  3296                           
  3297  0026                     Flash_Memory_Modify@i:	
  3298                           ; 1 bytes @ 0x6
  3299                           
  3300  0026                     setBuz@time:	
  3301                           ; 1 bytes @ 0x6
  3302                           
  3303                           
  3304                           ; 2 bytes @ 0x6
  3305  0026                     	ds	1
  3306  0027                     ??_Flash_Memory_Main:	
  3307  0027                     CC2500_InitSetREG@temp2:	
  3308                           ; 0 bytes @ 0x7
  3309                           
  3310  0027                     CC2500_InitPATable@loop_d:	
  3311                           ; 1 bytes @ 0x7
  3312                           
  3313  0027                     setDelayOff_GO@sw:	
  3314                           ; 1 bytes @ 0x7
  3315                           
  3316                           
  3317                           ; 1 bytes @ 0x7
  3318  0027                     	ds	1
  3319  0028                     ??_setBuz:	
  3320  0028                     ?___awtoft:	
  3321                           ; 0 bytes @ 0x8
  3322                           
  3323  0028                     CC2500_InitSetREG@loop_c:	
  3324                           ; 3 bytes @ 0x8
  3325                           
  3326  0028                     getTemp_AD@channel:	
  3327                           ; 1 bytes @ 0x8
  3328                           
  3329  0028                     getPowerFault_AD@channel:	
  3330                           ; 1 bytes @ 0x8
  3331                           
  3332  0028                     ___awtoft@c:	
  3333                           ; 1 bytes @ 0x8
  3334                           
  3335                           
  3336                           ; 2 bytes @ 0x8
  3337  0028                     	ds	1
  3338  0029                     ??_CC2500_PowerOnInitial:	
  3339  0029                     setBuz@count:	
  3340                           ; 0 bytes @ 0x9
  3341                           
  3342                           
  3343                           ; 1 bytes @ 0x9
  3344  0029                     	ds	1
  3345  002A                     ??_MainT:	
  3346  002A                     ??_setLog_Code:	
  3347                           ; 0 bytes @ 0xA
  3348                           
  3349  002A                     ??_DimmerLights_Exceptions:	
  3350                           ; 0 bytes @ 0xA
  3351                           
  3352  002A                     DimmerLights_Exceptions@status:	
  3353                           ; 0 bytes @ 0xA
  3354                           
  3355                           
  3356                           ; 1 bytes @ 0xA
  3357  002A                     	ds	1
  3358  002B                     ??_setOverTemp_Exceptions:	
  3359  002B                     ??_setPowerFault_Exceptions:	
  3360                           ; 0 bytes @ 0xB
  3361                           
  3362  002B                     ??___awtoft:	
  3363                           ; 0 bytes @ 0xB
  3364                           
  3365  002B                     setLog_Code@rf:	
  3366                           ; 0 bytes @ 0xB
  3367                           
  3368                           
  3369                           ; 1 bytes @ 0xB
  3370  002B                     	ds	1
  3371  002C                     setOverTemp_Exceptions@command:	
  3372  002C                     setPowerFault_Exceptions@command:	
  3373                           ; 1 bytes @ 0xC
  3374                           
  3375                           
  3376                           ; 1 bytes @ 0xC
  3377  002C                     	ds	1
  3378  002D                     ??_setTemp_Main:	
  3379  002D                     ??_setPowerFault_Main:	
  3380                           ; 0 bytes @ 0xD
  3381                           
  3382  002D                     ___awtoft@sign:	
  3383                           ; 0 bytes @ 0xD
  3384                           
  3385                           
  3386                           ; 1 bytes @ 0xD
  3387  002D                     	ds	1
  3388  002E                     ?___ftdiv:	
  3389  002E                     ?___ftmul:	
  3390                           ; 3 bytes @ 0xE
  3391                           
  3392  002E                     ___ftdiv@f2:	
  3393                           ; 3 bytes @ 0xE
  3394                           
  3395  002E                     ___ftmul@f1:	
  3396                           ; 3 bytes @ 0xE
  3397                           
  3398                           
  3399                           ; 3 bytes @ 0xE
  3400  002E                     	ds	1
  3401  002F                     ??_PowerFault_Main:	
  3402                           
  3403                           ; 0 bytes @ 0xF
  3404  002F                     	ds	1
  3405  0030                     ??_Temp_Main:	
  3406                           
  3407                           ; 0 bytes @ 0x10
  3408  0030                     	ds	1
  3409  0031                     ___ftdiv@f1:	
  3410  0031                     ___ftmul@f2:	
  3411                           ; 3 bytes @ 0x11
  3412                           
  3413                           
  3414                           ; 3 bytes @ 0x11
  3415  0031                     	ds	3
  3416  0034                     ??___ftdiv:	
  3417  0034                     ??___ftmul:	
  3418                           ; 0 bytes @ 0x14
  3419                           
  3420                           
  3421                           ; 0 bytes @ 0x14
  3422  0034                     	ds	4
  3423  0038                     ___ftdiv@cntr:	
  3424  0038                     ___ftmul@exp:	
  3425                           ; 1 bytes @ 0x18
  3426                           
  3427                           
  3428                           ; 1 bytes @ 0x18
  3429  0038                     	ds	1
  3430  0039                     ___ftdiv@f3:	
  3431  0039                     ___ftmul@f3_as_product:	
  3432                           ; 3 bytes @ 0x19
  3433                           
  3434                           
  3435                           ; 3 bytes @ 0x19
  3436  0039                     	ds	3
  3437  003C                     ___ftdiv@exp:	
  3438  003C                     ___ftmul@cntr:	
  3439                           ; 1 bytes @ 0x1C
  3440                           
  3441                           
  3442                           ; 1 bytes @ 0x1C
  3443  003C                     	ds	1
  3444  003D                     ___ftdiv@sign:	
  3445  003D                     ___ftmul@sign:	
  3446                           ; 1 bytes @ 0x1D
  3447                           
  3448                           
  3449                           ; 1 bytes @ 0x1D
  3450  003D                     	ds	1
  3451  003E                     ?___ftadd:	
  3452  003E                     ___ftadd@f1:	
  3453                           ; 3 bytes @ 0x1E
  3454                           
  3455                           
  3456                           ; 3 bytes @ 0x1E
  3457  003E                     	ds	3
  3458  0041                     ___ftadd@f2:	
  3459                           
  3460                           ; 3 bytes @ 0x21
  3461  0041                     	ds	3
  3462  0044                     ??___ftadd:	
  3463                           
  3464                           ; 0 bytes @ 0x24
  3465  0044                     	ds	4
  3466  0048                     ___ftadd@sign:	
  3467                           
  3468                           ; 1 bytes @ 0x28
  3469  0048                     	ds	1
  3470  0049                     ___ftadd@exp2:	
  3471                           
  3472                           ; 1 bytes @ 0x29
  3473  0049                     	ds	1
  3474  004A                     ___ftadd@exp1:	
  3475                           
  3476                           ; 1 bytes @ 0x2A
  3477  004A                     	ds	1
  3478  004B                     ?___fttol:	
  3479  004B                     ___fttol@f1:	
  3480                           ; 4 bytes @ 0x2B
  3481                           
  3482                           
  3483                           ; 3 bytes @ 0x2B
  3484  004B                     	ds	4
  3485  004F                     ??___fttol:	
  3486                           
  3487                           ; 0 bytes @ 0x2F
  3488  004F                     	ds	4
  3489  0053                     ___fttol@sign1:	
  3490                           
  3491                           ; 1 bytes @ 0x33
  3492  0053                     	ds	1
  3493  0054                     ___fttol@lval:	
  3494                           
  3495                           ; 4 bytes @ 0x34
  3496  0054                     	ds	4
  3497  0058                     ___fttol@exp1:	
  3498                           
  3499                           ; 1 bytes @ 0x38
  3500  0058                     	ds	1
  3501  0059                     ??_getPercentValue:	
  3502  0059                     ??_setPercentValue:	
  3503                           ; 0 bytes @ 0x39
  3504                           
  3505  0059                     setPercentValue@value:	
  3506                           ; 0 bytes @ 0x39
  3507                           
  3508                           
  3509                           ; 1 bytes @ 0x39
  3510  0059                     	ds	1
  3511  005A                     setPercentValue@i:	
  3512                           
  3513                           ; 3 bytes @ 0x3A
  3514  005A                     	ds	1
  3515  005B                     getPercentValue@value:	
  3516                           
  3517                           ; 1 bytes @ 0x3B
  3518  005B                     	ds	1
  3519  005C                     getPercentValue@i:	
  3520                           
  3521                           ; 3 bytes @ 0x3C
  3522  005C                     	ds	1
  3523  005D                     ?_setRF_DimmerLights:	
  3524  005D                     ??_Flash_Memory_Initialization:	
  3525                           ; 0 bytes @ 0x3D
  3526                           
  3527  005D                     setRF_DimmerLights@on:	
  3528                           ; 0 bytes @ 0x3D
  3529                           
  3530                           
  3531                           ; 1 bytes @ 0x3D
  3532  005D                     	ds	1
  3533  005E                     ??_setRF_DimmerLights:	
  3534  005E                     Flash_Memory_Initialization@i:	
  3535                           ; 0 bytes @ 0x3E
  3536                           
  3537                           
  3538                           ; 1 bytes @ 0x3E
  3539  005E                     	ds	1
  3540  005F                     ??_setDimmerLights_AdjRF:	
  3541                           
  3542                           ; 0 bytes @ 0x3F
  3543  005F                     	ds	1
  3544  0060                     setDimmerLights_AdjRF@lights:	
  3545  0060                     setRF_DimmerLights@status:	
  3546                           ; 1 bytes @ 0x40
  3547                           
  3548                           
  3549                           ; 1 bytes @ 0x40
  3550  0060                     	ds	1
  3551  0061                     ??_setRF_DimmerValue:	
  3552  0061                     setRF_DimmerLights@lights:	
  3553                           ; 0 bytes @ 0x41
  3554                           
  3555                           
  3556                           ; 1 bytes @ 0x41
  3557  0061                     	ds	1
  3558  0062                     ??_DlyOff_Main:	
  3559  0062                     ?_setDimmerLights_Adj:	
  3560                           ; 0 bytes @ 0x42
  3561                           
  3562  0062                     ??_setRFSW_Control:	
  3563                           ; 0 bytes @ 0x42
  3564                           
  3565  0062                     ??_Sw_DimmerOnFunc:	
  3566                           ; 0 bytes @ 0x42
  3567                           
  3568  0062                     ??_Sw_DimmerOffFunc:	
  3569                           ; 0 bytes @ 0x42
  3570                           
  3571  0062                     setDimmerLights_Adj@status:	
  3572                           ; 0 bytes @ 0x42
  3573                           
  3574  0062                     Sw_DimmerOnFunc@Idle:	
  3575                           ; 1 bytes @ 0x42
  3576                           
  3577                           
  3578                           ; 1 bytes @ 0x42
  3579  0062                     	ds	1
  3580  0063                     ??_setDimmerLights_Adj:	
  3581  0063                     setRFSW_Control@sw:	
  3582                           ; 0 bytes @ 0x43
  3583                           
  3584  0063                     setRF_DimmerValue@lights:	
  3585                           ; 1 bytes @ 0x43
  3586                           
  3587  0063                     Sw_DimmerOnFunc@sw:	
  3588                           ; 1 bytes @ 0x43
  3589                           
  3590                           
  3591                           ; 1 bytes @ 0x43
  3592  0063                     	ds	1
  3593  0064                     ??_setRFSW_AdjControl:	
  3594  0064                     DlyOff_Main@sw:	
  3595                           ; 0 bytes @ 0x44
  3596                           
  3597  0064                     setDimmerLights_Adj@lights:	
  3598                           ; 1 bytes @ 0x44
  3599                           
  3600  0064                     Sw_DimmerOffFunc@sw:	
  3601                           ; 1 bytes @ 0x44
  3602                           
  3603                           
  3604                           ; 1 bytes @ 0x44
  3605  0064                     	ds	1
  3606  0065                     ??_setDimmerLights_Main:	
  3607  0065                     ??_setSw_Main:	
  3608                           ; 0 bytes @ 0x45
  3609                           
  3610  0065                     ??_DelayOff_Main:	
  3611                           ; 0 bytes @ 0x45
  3612                           
  3613  0065                     setDimmerLights_Main@clear:	
  3614                           ; 0 bytes @ 0x45
  3615                           
  3616                           
  3617                           ; 1 bytes @ 0x45
  3618  0065                     	ds	1
  3619  0066                     setDimmerLights_Main@lights:	
  3620  0066                     setRFSW_AdjControl@sw:	
  3621                           ; 1 bytes @ 0x46
  3622                           
  3623                           
  3624                           ; 1 bytes @ 0x46
  3625  0066                     	ds	1
  3626  0067                     ??_Switch_Main:	
  3627  0067                     ??_setControl_Lights_Table:	
  3628                           ; 0 bytes @ 0x47
  3629                           
  3630  0067                     ??_DimmerLights_Main:	
  3631                           ; 0 bytes @ 0x47
  3632                           
  3633  0067                     setControl_Lights_Table@rf:	
  3634                           ; 0 bytes @ 0x47
  3635                           
  3636                           
  3637                           ; 1 bytes @ 0x47
  3638  0067                     	ds	1
  3639  0068                     ??_RF_Main:	
  3640  0068                     ??_getRxData:	
  3641                           ; 0 bytes @ 0x48
  3642                           
  3643  0068                     ??_main:	
  3644                           ; 0 bytes @ 0x48
  3645                           
  3646                           
  3647                           	psect	maintext
  3648  0802                     __pmaintext:	
  3649                           ; 0 bytes @ 0x48
  3650 ;;
  3651 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3652 ;;
  3653 ;; *************** function _main *****************
  3654 ;; Defined at:
  3655 ;;		line 7 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\main.c"
  3656 ;; Parameters:    Size  Location     Type
  3657 ;;		None
  3658 ;; Auto vars:     Size  Location     Type
  3659 ;;		None
  3660 ;; Return value:  Size  Location     Type
  3661 ;;		None               void
  3662 ;; Registers used:
  3663 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3664 ;; Tracked objects:
  3665 ;;		On entry : 17F/0
  3666 ;;		On exit  : 0/0
  3667 ;;		Unchanged: 0/0
  3668 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3669 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3670 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3672 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3673 ;;Total ram usage:        0 bytes
  3674 ;; Hardware stack levels required when called:   14
  3675 ;; This function calls:
  3676 ;;		_Buzzer_Initialization
  3677 ;;		_Buzzer_Main
  3678 ;;		_CC2500_PowerOnInitial
  3679 ;;		_DelayOff_Initialization
  3680 ;;		_DelayOff_Main
  3681 ;;		_DimmerLights_Initialization
  3682 ;;		_DimmerLights_Main
  3683 ;;		_Flash_Memory_Initialization
  3684 ;;		_Flash_Memory_Main
  3685 ;;		_LED_Initialization
  3686 ;;		_LED_Main
  3687 ;;		_MainT
  3688 ;;		_MainT_Initialization
  3689 ;;		_MainT_ResetClock
  3690 ;;		_Mcu_Initialization
  3691 ;;		_PowerFault_Initialization
  3692 ;;		_PowerFault_Main
  3693 ;;		_RF_Initialization
  3694 ;;		_RF_Main
  3695 ;;		_Switch_Initialization
  3696 ;;		_Switch_Main
  3697 ;;		_Temp_Initialization
  3698 ;;		_Temp_Main
  3699 ;;		_getPowerFault_AD
  3700 ;;		_getTemp_AD
  3701 ;; This function is called by:
  3702 ;;		Startup code after reset
  3703 ;; This function uses a non-reentrant model
  3704 ;;
  3705                           
  3706                           
  3707                           ;psect for function _main
  3708  0802                     _main:	
  3709                           
  3710                           ;main.c: 9: MainT_Initialization();
  3711                           
  3712                           ;incstack = 0
  3713                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3714  0802  319A  22DF  3188   	fcall	_MainT_Initialization
  3715                           
  3716                           ;main.c: 10: Mcu_Initialization();
  3717  0805  319B  2372  3188   	fcall	_Mcu_Initialization
  3718                           
  3719                           ;main.c: 11: Flash_Memory_Initialization();
  3720  0808  318E  2621  3188   	fcall	_Flash_Memory_Initialization
  3721                           
  3722                           ;main.c: 12: LED_Initialization();
  3723  080B  3199  21E2  3188   	fcall	_LED_Initialization
  3724                           
  3725                           ;main.c: 13: Buzzer_Initialization();
  3726  080E  3199  2170  3188   	fcall	_Buzzer_Initialization
  3727                           
  3728                           ;main.c: 15: ;;
  3729                           ;main.c: 16: Temp_Initialization();
  3730  0811  3198  20DF  3188   	fcall	_Temp_Initialization
  3731                           
  3732                           ;main.c: 17: ;;
  3733                           ;main.c: 18: PowerFault_Initialization();
  3734  0814  3198  20D9  3188   	fcall	_PowerFault_Initialization
  3735                           
  3736                           ;main.c: 19: DelayOff_Initialization();
  3737  0817  3199  212C  3188   	fcall	_DelayOff_Initialization
  3738                           
  3739                           ;main.c: 21: DimmerLights_Initialization();
  3740  081A  319B  231B  3188   	fcall	_DimmerLights_Initialization
  3741                           
  3742                           ;main.c: 22: ;;
  3743                           ;main.c: 23: ;;
  3744                           ;main.c: 24: ;;
  3745                           ;main.c: 26: Switch_Initialization();
  3746  081D  319A  2214  3188   	fcall	_Switch_Initialization
  3747                           
  3748                           ;main.c: 27: RF_Initialization();
  3749  0820  3198  20F1  3188   	fcall	_RF_Initialization
  3750                           
  3751                           ;main.c: 28: CC2500_PowerOnInitial();
  3752  0823  319B  2306  3188   	fcall	_CC2500_PowerOnInitial
  3753  0826                     l9862:	
  3754                           ;main.c: 30: while(1)
  3755                           
  3756                           
  3757                           ;main.c: 31: {
  3758                           ;main.c: 32: if(TMain->PowerON)
  3759  0826  0020               	movlb	0	; select bank0
  3760  0827  086F               	movf	_TMain,w
  3761  0828  0086               	movwf	6
  3762  0829  3001               	movlw	1	; select bank2/3
  3763  082A  0087               	movwf	7
  3764  082B  1C01               	btfss	1,0
  3765  082C  2838               	goto	l9866
  3766                           
  3767                           ;main.c: 33: {
  3768                           ;main.c: 35: ;;
  3769                           ;main.c: 39: ;;
  3770                           ;main.c: 43: getTemp_AD(0x09);
  3771  082D  3009               	movlw	9
  3772  082E  3195  25CB  3188   	fcall	_getTemp_AD
  3773                           
  3774                           ;main.c: 47: getPowerFault_AD(0x11);
  3775  0831  3011               	movlw	17
  3776  0832  3190  2042  3188   	fcall	_getPowerFault_AD
  3777                           
  3778                           ;main.c: 59: Buzzer_Main();
  3779  0835  318C  241C  3188   	fcall	_Buzzer_Main
  3780  0838                     l9866:	
  3781                           
  3782                           ;main.c: 61: }
  3783                           ;main.c: 63: if(TMain->T0_Timerout)
  3784  0838  0020               	movlb	0	; select bank0
  3785  0839  086F               	movf	_TMain,w
  3786  083A  0086               	movwf	6
  3787  083B  3001               	movlw	1	; select bank2/3
  3788  083C  0087               	movwf	7
  3789  083D  1C81               	btfss	1,1
  3790  083E  2826               	goto	l9862
  3791                           
  3792                           ;main.c: 64: {
  3793                           ;main.c: 65: TMain->T0_Timerout = 0;
  3794  083F  086F               	movf	_TMain,w
  3795  0840  0086               	movwf	6
  3796  0841  3001               	movlw	1	; select bank2/3
  3797  0842  0087               	movwf	7
  3798  0843  1081               	bcf	1,1
  3799                           
  3800                           ;main.c: 66: MainT();
  3801  0844  3188  206A  3188   	fcall	_MainT
  3802                           
  3803                           ;main.c: 67: MainT_ResetClock();
  3804  0847  319E  26E2  3188   	fcall	_MainT_ResetClock
  3805                           
  3806                           ;main.c: 68: if(TMain->PowerON)
  3807  084A  0020               	movlb	0	; select bank0
  3808  084B  086F               	movf	_TMain,w
  3809  084C  0086               	movwf	6
  3810  084D  3001               	movlw	1	; select bank2/3
  3811  084E  0087               	movwf	7
  3812  084F  1C01               	btfss	1,0
  3813  0850  2826               	goto	l9862
  3814                           
  3815                           ;main.c: 69: {
  3816                           ;main.c: 70: Flash_Memory_Main();
  3817  0851  3191  214B  3188   	fcall	_Flash_Memory_Main
  3818                           
  3819                           ;main.c: 72: LED_Main();
  3820  0854  3199  21EE  3188   	fcall	_LED_Main
  3821                           
  3822                           ;main.c: 74: ;;
  3823                           ;main.c: 75: Temp_Main();
  3824  0857  3198  20E2  3188   	fcall	_Temp_Main
  3825                           
  3826                           ;main.c: 76: ;;
  3827                           ;main.c: 77: PowerFault_Main();
  3828  085A  3198  20DC  3188   	fcall	_PowerFault_Main
  3829                           
  3830                           ;main.c: 79: ;;
  3831                           ;main.c: 80: DimmerLights_Main();
  3832  085D  3199  2191  3188   	fcall	_DimmerLights_Main
  3833                           
  3834                           ;main.c: 81: Switch_Main();
  3835  0860  3199  2144  3188   	fcall	_Switch_Main
  3836                           
  3837                           ;main.c: 82: ;;
  3838                           ;main.c: 83: ;;
  3839                           ;main.c: 85: RF_Main();
  3840  0863  3198  20F5  3188   	fcall	_RF_Main
  3841                           
  3842                           ;main.c: 86: DelayOff_Main();
  3843  0866  3199  2134  3188   	fcall	_DelayOff_Main
  3844  0869  2826               	goto	l9862
  3845  086A                     __end_of_main:	
  3846                           
  3847                           	psect	text1
  3848  15CB                     __ptext1:	
  3849 ;; *************** function _getTemp_AD *****************
  3850 ;; Defined at:
  3851 ;;		line 35 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\OverTemperature_B1.c"
  3852 ;; Parameters:    Size  Location     Type
  3853 ;;  channel         1    wreg     unsigned char 
  3854 ;; Auto vars:     Size  Location     Type
  3855 ;;  channel         1    8[BANK0 ] unsigned char 
  3856 ;; Return value:  Size  Location     Type
  3857 ;;		None               void
  3858 ;; Registers used:
  3859 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3860 ;; Tracked objects:
  3861 ;;		On entry : 0/0
  3862 ;;		On exit  : 0/0
  3863 ;;		Unchanged: 0/0
  3864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3865 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3866 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3867 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3868 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3869 ;;Total ram usage:        5 bytes
  3870 ;; Hardware stack levels used:    1
  3871 ;; Hardware stack levels required when called:    5
  3872 ;; This function calls:
  3873 ;;		_getAD
  3874 ;; This function is called by:
  3875 ;;		_main
  3876 ;; This function uses a non-reentrant model
  3877 ;;
  3878                           
  3879                           
  3880                           ;psect for function _getTemp_AD
  3881  15CB                     _getTemp_AD:	
  3882                           
  3883                           ;incstack = 0
  3884                           ; Regs used in _getTemp_AD: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3885                           ;getTemp_AD@channel stored from wreg
  3886  15CB  0020               	movlb	0	; select bank0
  3887  15CC  00A8               	movwf	getTemp_AD@channel
  3888                           
  3889                           ;OverTemperature_B1.c: 37: if(Temp->ADtoGO)
  3890  15CD  0879               	movf	_Temp,w
  3891  15CE  0086               	movwf	6
  3892  15CF  3001               	movlw	1	; select bank2/3
  3893  15D0  0087               	movwf	7
  3894  15D1  1D01               	btfss	1,2
  3895  15D2  0008               	return
  3896                           
  3897                           ;OverTemperature_B1.c: 38: {
  3898                           ;OverTemperature_B1.c: 39: Temp->ADRES=getAD(channel,0xf0);
  3899  15D3  30F0               	movlw	240
  3900  15D4  00A4               	movwf	??_getTemp_AD
  3901  15D5  0824               	movf	??_getTemp_AD,w
  3902  15D6  00A0               	movwf	getAD@adcon1
  3903  15D7  0828               	movf	getTemp_AD@channel,w
  3904  15D8  319B  235C  3195   	fcall	_getAD
  3905  15DB  0879               	movf	_Temp,w
  3906  15DC  3E0A               	addlw	10
  3907  15DD  0086               	movwf	6
  3908  15DE  3001               	movlw	1	; select bank2/3
  3909  15DF  0087               	movwf	7
  3910  15E0  0020               	movlb	0	; select bank0
  3911  15E1  0820               	movf	?_getAD,w
  3912  15E2  3FC0               	movwi [0]fsr1
  3913  15E3  0821               	movf	?_getAD+1,w
  3914  15E4  3FC1               	movwi [1]fsr1
  3915                           
  3916                           ;OverTemperature_B1.c: 40: if(Temp->ADH[0] < Temp->ADRES)
  3917  15E5  0879               	movf	_Temp,w
  3918  15E6  3E0A               	addlw	10
  3919  15E7  0086               	movwf	6
  3920  15E8  3001               	movlw	1	; select bank2/3
  3921  15E9  0087               	movwf	7
  3922  15EA  3F40               	moviw [0]fsr1
  3923  15EB  00A4               	movwf	??_getTemp_AD
  3924  15EC  3F41               	moviw [1]fsr1
  3925  15ED  00A5               	movwf	??_getTemp_AD+1
  3926  15EE  0879               	movf	_Temp,w
  3927  15EF  3E06               	addlw	6
  3928  15F0  0086               	movwf	6
  3929  15F1  3001               	movlw	1	; select bank2/3
  3930  15F2  0087               	movwf	7
  3931  15F3  3F40               	moviw [0]fsr1
  3932  15F4  00A6               	movwf	??_getTemp_AD+2
  3933  15F5  3F41               	moviw [1]fsr1
  3934  15F6  00A7               	movwf	??_getTemp_AD+3
  3935  15F7  0825               	movf	??_getTemp_AD+1,w
  3936  15F8  0227               	subwf	??_getTemp_AD+3,w
  3937  15F9  1D03               	skipz
  3938  15FA  2DFD               	goto	u10155
  3939  15FB  0824               	movf	??_getTemp_AD,w
  3940  15FC  0226               	subwf	??_getTemp_AD+2,w
  3941  15FD                     u10155:	
  3942  15FD  1803               	skipnc
  3943  15FE  2E0E               	goto	l9734
  3944                           
  3945                           ;OverTemperature_B1.c: 41: {
  3946                           ;OverTemperature_B1.c: 42: Temp->ADH[0]=Temp->ADRES;
  3947  15FF  0879               	movf	_Temp,w
  3948  1600  3E0A               	addlw	10
  3949  1601  0086               	movwf	6
  3950  1602  3001               	movlw	1	; select bank2/3
  3951  1603  0087               	movwf	7
  3952  1604  0879               	movf	_Temp,w
  3953  1605  3E06               	addlw	6
  3954  1606  0084               	movwf	4
  3955  1607  3001               	movlw	1	; select bank2/3
  3956  1608  0085               	movwf	5
  3957  1609  3F40               	moviw [0]fsr1
  3958  160A  3F80               	movwi [0]fsr0
  3959  160B  3F41               	moviw [1]fsr1
  3960  160C  3F81               	movwi [1]fsr0
  3961                           
  3962                           ;OverTemperature_B1.c: 43: }
  3963  160D  0008               	return
  3964  160E                     l9734:	
  3965                           
  3966                           ;OverTemperature_B1.c: 44: else if(Temp->ADH[1] < Temp->ADRES)
  3967  160E  0879               	movf	_Temp,w
  3968  160F  3E0A               	addlw	10
  3969  1610  0086               	movwf	6
  3970  1611  3001               	movlw	1	; select bank2/3
  3971  1612  0087               	movwf	7
  3972  1613  3F40               	moviw [0]fsr1
  3973  1614  00A4               	movwf	??_getTemp_AD
  3974  1615  3F41               	moviw [1]fsr1
  3975  1616  00A5               	movwf	??_getTemp_AD+1
  3976  1617  0879               	movf	_Temp,w
  3977  1618  3E08               	addlw	8
  3978  1619  0086               	movwf	6
  3979  161A  3001               	movlw	1	; select bank2/3
  3980  161B  0087               	movwf	7
  3981  161C  3F40               	moviw [0]fsr1
  3982  161D  00A6               	movwf	??_getTemp_AD+2
  3983  161E  3F41               	moviw [1]fsr1
  3984  161F  00A7               	movwf	??_getTemp_AD+3
  3985  1620  0825               	movf	??_getTemp_AD+1,w
  3986  1621  0227               	subwf	??_getTemp_AD+3,w
  3987  1622  1D03               	skipz
  3988  1623  2E26               	goto	u10165
  3989  1624  0824               	movf	??_getTemp_AD,w
  3990  1625  0226               	subwf	??_getTemp_AD+2,w
  3991  1626                     u10165:	
  3992  1626  1803               	skipnc
  3993  1627  0008               	return
  3994                           
  3995                           ;OverTemperature_B1.c: 45: {
  3996                           ;OverTemperature_B1.c: 46: Temp->ADH[1]=Temp->ADRES;
  3997  1628  0879               	movf	_Temp,w
  3998  1629  3E0A               	addlw	10
  3999  162A  0086               	movwf	6
  4000  162B  3001               	movlw	1	; select bank2/3
  4001  162C  0087               	movwf	7
  4002  162D  0879               	movf	_Temp,w
  4003  162E  3E08               	addlw	8
  4004  162F  0084               	movwf	4
  4005  1630  3001               	movlw	1	; select bank2/3
  4006  1631  0085               	movwf	5
  4007  1632  3F40               	moviw [0]fsr1
  4008  1633  3F80               	movwi [0]fsr0
  4009  1634  3F41               	moviw [1]fsr1
  4010  1635  3F81               	movwi [1]fsr0
  4011  1636  0008               	return
  4012  1637                     __end_of_getTemp_AD:	
  4013                           
  4014                           	psect	text2
  4015  1042                     __ptext2:	
  4016 ;; *************** function _getPowerFault_AD *****************
  4017 ;; Defined at:
  4018 ;;		line 49 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\PowerFault_B1.c"
  4019 ;; Parameters:    Size  Location     Type
  4020 ;;  channel         1    wreg     unsigned char 
  4021 ;; Auto vars:     Size  Location     Type
  4022 ;;  channel         1    8[BANK0 ] unsigned char 
  4023 ;; Return value:  Size  Location     Type
  4024 ;;		None               void
  4025 ;; Registers used:
  4026 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4027 ;; Tracked objects:
  4028 ;;		On entry : 0/0
  4029 ;;		On exit  : 0/0
  4030 ;;		Unchanged: 0/0
  4031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4033 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4034 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4035 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4036 ;;Total ram usage:        5 bytes
  4037 ;; Hardware stack levels used:    1
  4038 ;; Hardware stack levels required when called:    5
  4039 ;; This function calls:
  4040 ;;		_getAD
  4041 ;; This function is called by:
  4042 ;;		_main
  4043 ;; This function uses a non-reentrant model
  4044 ;;
  4045                           
  4046                           
  4047                           ;psect for function _getPowerFault_AD
  4048  1042                     _getPowerFault_AD:	
  4049                           
  4050                           ;incstack = 0
  4051                           ; Regs used in _getPowerFault_AD: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4052                           ;getPowerFault_AD@channel stored from wreg
  4053  1042  0020               	movlb	0	; select bank0
  4054  1043  00A8               	movwf	getPowerFault_AD@channel
  4055                           
  4056                           ;PowerFault_B1.c: 51: if(PF->ADtoGO)
  4057  1044  0876               	movf	_PF,w
  4058  1045  0086               	movwf	6
  4059  1046  3001               	movlw	1	; select bank2/3
  4060  1047  0087               	movwf	7
  4061  1048  1D81               	btfss	1,3
  4062  1049  0008               	return
  4063                           
  4064                           ;PowerFault_B1.c: 52: {
  4065                           ;PowerFault_B1.c: 53: PF->ADRES=getAD(channel,0xf0);
  4066  104A  30F0               	movlw	240
  4067  104B  00A4               	movwf	??_getPowerFault_AD
  4068  104C  0824               	movf	??_getPowerFault_AD,w
  4069  104D  00A0               	movwf	getAD@adcon1
  4070  104E  0828               	movf	getPowerFault_AD@channel,w
  4071  104F  319B  235C  3190   	fcall	_getAD
  4072  1052  0876               	movf	_PF,w
  4073  1053  3E03               	addlw	3
  4074  1054  0086               	movwf	6
  4075  1055  3001               	movlw	1	; select bank2/3
  4076  1056  0087               	movwf	7
  4077  1057  0020               	movlb	0	; select bank0
  4078  1058  0820               	movf	?_getAD,w
  4079  1059  3FC0               	movwi [0]fsr1
  4080  105A  0821               	movf	?_getAD+1,w
  4081  105B  3FC1               	movwi [1]fsr1
  4082                           
  4083                           ;PowerFault_B1.c: 54: if(PF->AD < PF->ADRES)
  4084  105C  0876               	movf	_PF,w
  4085  105D  3E03               	addlw	3
  4086  105E  0086               	movwf	6
  4087  105F  3001               	movlw	1	; select bank2/3
  4088  1060  0087               	movwf	7
  4089  1061  3F40               	moviw [0]fsr1
  4090  1062  00A4               	movwf	??_getPowerFault_AD
  4091  1063  3F41               	moviw [1]fsr1
  4092  1064  00A5               	movwf	??_getPowerFault_AD+1
  4093  1065  0A76               	incf	_PF,w
  4094  1066  0086               	movwf	6
  4095  1067  3001               	movlw	1	; select bank2/3
  4096  1068  0087               	movwf	7
  4097  1069  3F40               	moviw [0]fsr1
  4098  106A  00A6               	movwf	??_getPowerFault_AD+2
  4099  106B  3F41               	moviw [1]fsr1
  4100  106C  00A7               	movwf	??_getPowerFault_AD+3
  4101  106D  0825               	movf	??_getPowerFault_AD+1,w
  4102  106E  0227               	subwf	??_getPowerFault_AD+3,w
  4103  106F  1D03               	skipz
  4104  1070  2873               	goto	u10185
  4105  1071  0824               	movf	??_getPowerFault_AD,w
  4106  1072  0226               	subwf	??_getPowerFault_AD+2,w
  4107  1073                     u10185:	
  4108  1073  1803               	skipnc
  4109  1074  0008               	return
  4110                           
  4111                           ;PowerFault_B1.c: 55: {
  4112                           ;PowerFault_B1.c: 56: PF->AD=PF->ADRES;
  4113  1075  0876               	movf	_PF,w
  4114  1076  3E03               	addlw	3
  4115  1077  0086               	movwf	6
  4116  1078  3001               	movlw	1	; select bank2/3
  4117  1079  0087               	movwf	7
  4118  107A  0A76               	incf	_PF,w
  4119  107B  0084               	movwf	4
  4120  107C  3001               	movlw	1	; select bank2/3
  4121  107D  0085               	movwf	5
  4122  107E  3F40               	moviw [0]fsr1
  4123  107F  3F80               	movwi [0]fsr0
  4124  1080  3F41               	moviw [1]fsr1
  4125  1081  3F81               	movwi [1]fsr0
  4126  1082  0008               	return
  4127  1083                     __end_of_getPowerFault_AD:	
  4128                           
  4129                           	psect	text3
  4130  1B5C                     __ptext3:	
  4131 ;; *************** function _getAD *****************
  4132 ;; Defined at:
  4133 ;;		line 383 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
  4134 ;; Parameters:    Size  Location     Type
  4135 ;;  adcon0          1    wreg     unsigned char 
  4136 ;;  adcon1          1    0[BANK0 ] unsigned char 
  4137 ;; Auto vars:     Size  Location     Type
  4138 ;;  adcon0          1    3[BANK0 ] unsigned char 
  4139 ;; Return value:  Size  Location     Type
  4140 ;;                  2    0[BANK0 ] int 
  4141 ;; Registers used:
  4142 ;;		wreg, status,2, status,0
  4143 ;; Tracked objects:
  4144 ;;		On entry : 0/0
  4145 ;;		On exit  : 0/0
  4146 ;;		Unchanged: 0/0
  4147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4148 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4149 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4151 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4152 ;;Total ram usage:        4 bytes
  4153 ;; Hardware stack levels used:    1
  4154 ;; Hardware stack levels required when called:    4
  4155 ;; This function calls:
  4156 ;;		Nothing
  4157 ;; This function is called by:
  4158 ;;		_getTemp_AD
  4159 ;;		_getPowerFault_AD
  4160 ;; This function uses a non-reentrant model
  4161 ;;
  4162                           
  4163                           
  4164                           ;psect for function _getAD
  4165  1B5C                     _getAD:	
  4166                           
  4167                           ;incstack = 0
  4168                           ; Regs used in _getAD: [wreg+status,2+status,0]
  4169                           ;getAD@adcon0 stored from wreg
  4170  1B5C  0020               	movlb	0	; select bank0
  4171  1B5D  00A3               	movwf	getAD@adcon0
  4172                           
  4173                           ;MCU_B1.c: 385: ADCON0=adcon0;
  4174  1B5E  0823               	movf	getAD@adcon0,w
  4175  1B5F  0021               	movlb	1	; select bank1
  4176  1B60  009D               	movwf	29	;volatile
  4177                           
  4178                           ;MCU_B1.c: 386: ADCON1=adcon1;
  4179  1B61  0020               	movlb	0	; select bank0
  4180  1B62  0820               	movf	getAD@adcon1,w
  4181  1B63  0021               	movlb	1	; select bank1
  4182  1B64  009E               	movwf	30	;volatile
  4183                           
  4184                           ;MCU_B1.c: 387: GO_nDONE=1;
  4185  1B65  149D               	bsf	29,1	;volatile
  4186  1B66                     l1680:	
  4187                           ;MCU_B1.c: 388: while(GO_nDONE);
  4188                           
  4189  1B66  189D               	btfsc	29,1	;volatile
  4190  1B67  2B66               	goto	l1680
  4191                           
  4192                           ;MCU_B1.c: 389: return ((ADRESH*256)+ADRESL);
  4193  1B68  081C               	movf	28,w	;volatile
  4194  1B69  0020               	movlb	0	; select bank0
  4195  1B6A  01A1               	clrf	?_getAD+1
  4196  1B6B  07A1               	addwf	?_getAD+1,f
  4197  1B6C  0021               	movlb	1	; select bank1
  4198  1B6D  081B               	movf	27,w	;volatile
  4199  1B6E  0020               	movlb	0	; select bank0
  4200  1B6F  01A0               	clrf	?_getAD
  4201  1B70  07A0               	addwf	?_getAD,f
  4202  1B71  0008               	return
  4203  1B72                     __end_of_getAD:	
  4204                           
  4205                           	psect	text4
  4206  18E2                     __ptext4:	
  4207 ;; *************** function _Temp_Main *****************
  4208 ;; Defined at:
  4209 ;;		line 57 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\OverTemperature_B1.c"
  4210 ;; Parameters:    Size  Location     Type
  4211 ;;		None
  4212 ;; Auto vars:     Size  Location     Type
  4213 ;;		None
  4214 ;; Return value:  Size  Location     Type
  4215 ;;		None               void
  4216 ;; Registers used:
  4217 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4218 ;; Tracked objects:
  4219 ;;		On entry : 0/0
  4220 ;;		On exit  : 0/0
  4221 ;;		Unchanged: 0/0
  4222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4223 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4224 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4226 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4227 ;;Total ram usage:        0 bytes
  4228 ;; Hardware stack levels used:    1
  4229 ;; Hardware stack levels required when called:   10
  4230 ;; This function calls:
  4231 ;;		_setTemp_Main
  4232 ;; This function is called by:
  4233 ;;		_main
  4234 ;; This function uses a non-reentrant model
  4235 ;;
  4236                           
  4237                           
  4238                           ;psect for function _Temp_Main
  4239  18E2                     _Temp_Main:	
  4240                           
  4241                           ;OverTemperature_B1.c: 60: setTemp_Main();
  4242                           
  4243                           ;incstack = 0
  4244                           ; Regs used in _Temp_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4245  18E2  3184  24FE         	fcall	_setTemp_Main
  4246  18E4  0008               	return
  4247  18E5                     __end_of_Temp_Main:	
  4248                           
  4249                           	psect	text5
  4250  04FE                     __ptext5:	
  4251 ;; *************** function _setTemp_Main *****************
  4252 ;; Defined at:
  4253 ;;		line 64 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\OverTemperature_B1.c"
  4254 ;; Parameters:    Size  Location     Type
  4255 ;;		None
  4256 ;; Auto vars:     Size  Location     Type
  4257 ;;		None
  4258 ;; Return value:  Size  Location     Type
  4259 ;;		None               void
  4260 ;; Registers used:
  4261 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4262 ;; Tracked objects:
  4263 ;;		On entry : 0/0
  4264 ;;		On exit  : 0/0
  4265 ;;		Unchanged: 0/0
  4266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4269 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4270 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4271 ;;Total ram usage:        3 bytes
  4272 ;; Hardware stack levels used:    1
  4273 ;; Hardware stack levels required when called:    9
  4274 ;; This function calls:
  4275 ;;		_getPF_Safe
  4276 ;;		_setOverTemp_Exceptions
  4277 ;; This function is called by:
  4278 ;;		_Temp_Main
  4279 ;; This function uses a non-reentrant model
  4280 ;;
  4281                           
  4282                           
  4283                           ;psect for function _setTemp_Main
  4284  04FE                     _setTemp_Main:	
  4285                           
  4286                           ;OverTemperature_B1.c: 66: if(Temp->Enable)
  4287                           
  4288                           ;incstack = 0
  4289                           ; Regs used in _setTemp_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4290  04FE  0879               	movf	_Temp,w
  4291  04FF  0086               	movwf	6
  4292  0500  3001               	movlw	1	; select bank2/3
  4293  0501  0087               	movwf	7
  4294  0502  1C01               	btfss	1,0
  4295  0503  0008               	return
  4296                           
  4297                           ;OverTemperature_B1.c: 67: {
  4298                           ;OverTemperature_B1.c: 68: if(Temp->ADtoGO == 0)
  4299  0504  0879               	movf	_Temp,w
  4300  0505  0086               	movwf	6
  4301  0506  3001               	movlw	1	; select bank2/3
  4302  0507  0087               	movwf	7
  4303  0508  1901               	btfsc	1,2
  4304  0509  2D44               	goto	l9314
  4305                           
  4306                           ;OverTemperature_B1.c: 69: {
  4307                           ;OverTemperature_B1.c: 70: Temp->Time++;
  4308  050A  0A79               	incf	_Temp,w
  4309  050B  0086               	movwf	6
  4310  050C  3001               	movlw	1	; select bank2/3
  4311  050D  0087               	movwf	7
  4312  050E  3001               	movlw	1
  4313  050F  0781               	addwf	1,f
  4314  0510  3141               	addfsr 1,1
  4315  0511  1803               	skipnc
  4316  0512  0A81               	incf	1,f
  4317                           
  4318                           ;OverTemperature_B1.c: 72: {
  4319                           ;OverTemperature_B1.c: 73: if(1 && getPF_Safe())
  4320  0513  0A79               	incf	_Temp,w
  4321  0514  0086               	movwf	6
  4322  0515  3001               	movlw	1	; select bank2/3
  4323  0516  0087               	movwf	7
  4324  0517  3F40               	moviw [0]fsr1
  4325  0518  0020               	movlb	0	; select bank0
  4326  0519  00AD               	movwf	??_setTemp_Main
  4327  051A  3F41               	moviw [1]fsr1
  4328  051B  00AE               	movwf	??_setTemp_Main+1
  4329  051C  3001               	movlw	1
  4330  051D  022E               	subwf	??_setTemp_Main+1,w
  4331  051E  30F4               	movlw	244
  4332  051F  1903               	skipnz
  4333  0520  022D               	subwf	??_setTemp_Main,w
  4334  0521  1C03               	skipc
  4335  0522  0008               	return
  4336  0523  3199  214C  3184   	fcall	_getPF_Safe
  4337  0526  3A00               	xorlw	0
  4338  0527  1903               	skipnz
  4339  0528  2D3B               	goto	l9312
  4340                           
  4341                           ;OverTemperature_B1.c: 74: {
  4342                           ;OverTemperature_B1.c: 75: Temp->Time=0;
  4343  0529  0A79               	incf	_Temp,w
  4344  052A  0086               	movwf	6
  4345  052B  3001               	movlw	1	; select bank2/3
  4346  052C  0087               	movwf	7
  4347  052D  3000               	movlw	0
  4348  052E  3FC0               	movwi [0]fsr1
  4349  052F  3FC1               	movwi [1]fsr1
  4350                           
  4351                           ;OverTemperature_B1.c: 76: Temp->ADtoGO=1;
  4352  0530  0879               	movf	_Temp,w
  4353  0531  0086               	movwf	6
  4354  0532  3001               	movlw	1	; select bank2/3
  4355  0533  0087               	movwf	7
  4356  0534  1501               	bsf	1,2
  4357                           
  4358                           ;OverTemperature_B1.c: 77: Temp->Safe=0;
  4359  0535  0879               	movf	_Temp,w
  4360  0536  0086               	movwf	6
  4361  0537  3001               	movlw	1	; select bank2/3
  4362  0538  0087               	movwf	7
  4363  0539  1201               	bcf	1,4
  4364                           
  4365                           ;OverTemperature_B1.c: 78: }
  4366  053A  0008               	return
  4367  053B                     l9312:	
  4368                           
  4369                           ;OverTemperature_B1.c: 79: else
  4370                           ;OverTemperature_B1.c: 80: {
  4371                           ;OverTemperature_B1.c: 81: Temp->Time=1000;
  4372  053B  0A79               	incf	_Temp,w
  4373  053C  0086               	movwf	6
  4374  053D  3001               	movlw	1	; select bank2/3
  4375  053E  0087               	movwf	7
  4376  053F  30E8               	movlw	232
  4377  0540  3FC0               	movwi [0]fsr1
  4378  0541  3003               	movlw	3
  4379  0542  3FC1               	movwi [1]fsr1
  4380                           
  4381                           ;OverTemperature_B1.c: 82: }
  4382                           ;OverTemperature_B1.c: 83: }
  4383                           ;OverTemperature_B1.c: 84: }
  4384  0543  0008               	return
  4385  0544                     l9314:	
  4386                           
  4387                           ;OverTemperature_B1.c: 85: else
  4388                           ;OverTemperature_B1.c: 86: {
  4389                           ;OverTemperature_B1.c: 87: Temp->Time++;
  4390  0544  0A79               	incf	_Temp,w
  4391  0545  0086               	movwf	6
  4392  0546  3001               	movlw	1	; select bank2/3
  4393  0547  0087               	movwf	7
  4394  0548  3001               	movlw	1
  4395  0549  0781               	addwf	1,f
  4396  054A  3141               	addfsr 1,1
  4397  054B  1803               	skipnc
  4398  054C  0A81               	incf	1,f
  4399                           
  4400                           ;OverTemperature_B1.c: 88: if(Temp->Time >= 4)
  4401  054D  0A79               	incf	_Temp,w
  4402  054E  0086               	movwf	6
  4403  054F  3001               	movlw	1	; select bank2/3
  4404  0550  0087               	movwf	7
  4405  0551  3F40               	moviw [0]fsr1
  4406  0552  0020               	movlb	0	; select bank0
  4407  0553  00AD               	movwf	??_setTemp_Main
  4408  0554  3F41               	moviw [1]fsr1
  4409  0555  00AE               	movwf	??_setTemp_Main+1
  4410  0556  3000               	movlw	0
  4411  0557  022E               	subwf	??_setTemp_Main+1,w
  4412  0558  3004               	movlw	4
  4413  0559  1903               	skipnz
  4414  055A  022D               	subwf	??_setTemp_Main,w
  4415  055B  1C03               	skipc
  4416  055C  0008               	return
  4417                           
  4418                           ;OverTemperature_B1.c: 89: {
  4419                           ;OverTemperature_B1.c: 90: Temp->Time=0;
  4420  055D  0A79               	incf	_Temp,w
  4421  055E  0086               	movwf	6
  4422  055F  3001               	movlw	1	; select bank2/3
  4423  0560  0087               	movwf	7
  4424  0561  3000               	movlw	0
  4425  0562  3FC0               	movwi [0]fsr1
  4426  0563  3FC1               	movwi [1]fsr1
  4427                           
  4428                           ;OverTemperature_B1.c: 91: Temp->ADtoGO=0;
  4429  0564  0879               	movf	_Temp,w
  4430  0565  0086               	movwf	6
  4431  0566  3001               	movlw	1	; select bank2/3
  4432  0567  0087               	movwf	7
  4433  0568  1101               	bcf	1,2
  4434                           
  4435                           ;OverTemperature_B1.c: 92: Temp->AD=Temp->ADH[1];
  4436  0569  0879               	movf	_Temp,w
  4437  056A  3E08               	addlw	8
  4438  056B  0086               	movwf	6
  4439  056C  3001               	movlw	1	; select bank2/3
  4440  056D  0087               	movwf	7
  4441  056E  0879               	movf	_Temp,w
  4442  056F  3E04               	addlw	4
  4443  0570  0084               	movwf	4
  4444  0571  3001               	movlw	1	; select bank2/3
  4445  0572  0085               	movwf	5
  4446  0573  3F40               	moviw [0]fsr1
  4447  0574  3F80               	movwi [0]fsr0
  4448  0575  3F41               	moviw [1]fsr1
  4449  0576  3F81               	movwi [1]fsr0
  4450                           
  4451                           ;OverTemperature_B1.c: 93: if(Temp->ERROR)
  4452  0577  0879               	movf	_Temp,w
  4453  0578  0086               	movwf	6
  4454  0579  3001               	movlw	1	; select bank2/3
  4455  057A  0087               	movwf	7
  4456  057B  1C81               	btfss	1,1
  4457  057C  2DAA               	goto	l9336
  4458                           
  4459                           ;OverTemperature_B1.c: 94: {
  4460                           ;OverTemperature_B1.c: 95: if(Temp->AD >= 600)
  4461  057D  0879               	movf	_Temp,w
  4462  057E  3E04               	addlw	4
  4463  057F  0086               	movwf	6
  4464  0580  3001               	movlw	1	; select bank2/3
  4465  0581  0087               	movwf	7
  4466  0582  3F40               	moviw [0]fsr1
  4467  0583  00AD               	movwf	??_setTemp_Main
  4468  0584  3F41               	moviw [1]fsr1
  4469  0585  00AE               	movwf	??_setTemp_Main+1
  4470  0586  3002               	movlw	2
  4471  0587  022E               	subwf	??_setTemp_Main+1,w
  4472  0588  3058               	movlw	88
  4473  0589  1903               	skipnz
  4474  058A  022D               	subwf	??_setTemp_Main,w
  4475  058B  1C03               	skipc
  4476  058C  2DD8               	goto	l9346
  4477                           
  4478                           ;OverTemperature_B1.c: 96: {
  4479                           ;OverTemperature_B1.c: 97: Temp->Count++;
  4480  058D  3001               	movlw	1
  4481  058E  00AD               	movwf	??_setTemp_Main
  4482  058F  0879               	movf	_Temp,w
  4483  0590  3E03               	addlw	3
  4484  0591  0086               	movwf	6
  4485  0592  3001               	movlw	1	; select bank2/3
  4486  0593  0087               	movwf	7
  4487  0594  082D               	movf	??_setTemp_Main,w
  4488  0595  0781               	addwf	1,f
  4489                           
  4490                           ;OverTemperature_B1.c: 98: if(Temp->Count >= 3)
  4491  0596  0879               	movf	_Temp,w
  4492  0597  3E03               	addlw	3
  4493  0598  0086               	movwf	6
  4494  0599  3001               	movlw	1	; select bank2/3
  4495  059A  0087               	movwf	7
  4496  059B  3003               	movlw	3
  4497  059C  0201               	subwf	1,w
  4498  059D  1C03               	skipc
  4499  059E  2DDE               	goto	l9348
  4500                           
  4501                           ;OverTemperature_B1.c: 99: {
  4502                           ;OverTemperature_B1.c: 100: Temp->Count=0;
  4503  059F  0879               	movf	_Temp,w
  4504  05A0  3E03               	addlw	3
  4505  05A1  0086               	movwf	6
  4506  05A2  3001               	movlw	1	; select bank2/3
  4507  05A3  0087               	movwf	7
  4508  05A4  0181               	clrf	1
  4509                           
  4510                           ;OverTemperature_B1.c: 101: setOverTemp_Exceptions(0);
  4511  05A5  3000               	movlw	0
  4512  05A6  3190  20C5  3184   	fcall	_setOverTemp_Exceptions
  4513                           
  4514                           ;OverTemperature_B1.c: 102: }
  4515                           ;OverTemperature_B1.c: 103: }
  4516  05A9  2DDE               	goto	l9348
  4517  05AA                     l9336:	
  4518                           ;OverTemperature_B1.c: 107: }
  4519                           ;OverTemperature_B1.c: 108: }
  4520                           
  4521                           ;OverTemperature_B1.c: 104: else
  4522                           ;OverTemperature_B1.c: 105: {
  4523                           ;OverTemperature_B1.c: 106: Temp->Count=0;
  4524                           
  4525                           
  4526                           ;OverTemperature_B1.c: 109: else
  4527                           ;OverTemperature_B1.c: 110: {
  4528                           ;OverTemperature_B1.c: 111: if(Temp->AD <= 550)
  4529  05AA  0879               	movf	_Temp,w
  4530  05AB  3E04               	addlw	4
  4531  05AC  0086               	movwf	6
  4532  05AD  3001               	movlw	1	; select bank2/3
  4533  05AE  0087               	movwf	7
  4534  05AF  3F40               	moviw [0]fsr1
  4535  05B0  0020               	movlb	0	; select bank0
  4536  05B1  00AD               	movwf	??_setTemp_Main
  4537  05B2  3F41               	moviw [1]fsr1
  4538  05B3  00AE               	movwf	??_setTemp_Main+1
  4539  05B4  3002               	movlw	2
  4540  05B5  022E               	subwf	??_setTemp_Main+1,w
  4541  05B6  3027               	movlw	39
  4542  05B7  1903               	skipnz
  4543  05B8  022D               	subwf	??_setTemp_Main,w
  4544  05B9  1803               	skipnc
  4545  05BA  2DD8               	goto	l9346
  4546                           
  4547                           ;OverTemperature_B1.c: 112: {
  4548                           ;OverTemperature_B1.c: 113: Temp->Count++;
  4549  05BB  3001               	movlw	1
  4550  05BC  00AD               	movwf	??_setTemp_Main
  4551  05BD  0879               	movf	_Temp,w
  4552  05BE  3E03               	addlw	3
  4553  05BF  0086               	movwf	6
  4554  05C0  3001               	movlw	1	; select bank2/3
  4555  05C1  0087               	movwf	7
  4556  05C2  082D               	movf	??_setTemp_Main,w
  4557  05C3  0781               	addwf	1,f
  4558                           
  4559                           ;OverTemperature_B1.c: 114: if(Temp->Count >= 3)
  4560  05C4  0879               	movf	_Temp,w
  4561  05C5  3E03               	addlw	3
  4562  05C6  0086               	movwf	6
  4563  05C7  3001               	movlw	1	; select bank2/3
  4564  05C8  0087               	movwf	7
  4565  05C9  3003               	movlw	3
  4566  05CA  0201               	subwf	1,w
  4567  05CB  1C03               	skipc
  4568  05CC  2DDE               	goto	l9348
  4569                           
  4570                           ;OverTemperature_B1.c: 115: {
  4571                           ;OverTemperature_B1.c: 116: Temp->Count=0;
  4572  05CD  0879               	movf	_Temp,w
  4573  05CE  3E03               	addlw	3
  4574  05CF  0086               	movwf	6
  4575  05D0  3001               	movlw	1	; select bank2/3
  4576  05D1  0087               	movwf	7
  4577  05D2  0181               	clrf	1
  4578                           
  4579                           ;OverTemperature_B1.c: 117: setOverTemp_Exceptions(1);
  4580  05D3  3001               	movlw	1
  4581  05D4  3190  20C5  3184   	fcall	_setOverTemp_Exceptions
  4582                           
  4583                           ;OverTemperature_B1.c: 118: }
  4584                           ;OverTemperature_B1.c: 119: }
  4585  05D7  2DDE               	goto	l9348
  4586  05D8                     l9346:	
  4587                           
  4588                           ;OverTemperature_B1.c: 120: else
  4589                           ;OverTemperature_B1.c: 121: {
  4590                           ;OverTemperature_B1.c: 122: Temp->Count=0;
  4591  05D8  0879               	movf	_Temp,w
  4592  05D9  3E03               	addlw	3
  4593  05DA  0086               	movwf	6
  4594  05DB  3001               	movlw	1	; select bank2/3
  4595  05DC  0087               	movwf	7
  4596  05DD  0181               	clrf	1
  4597  05DE                     l9348:	
  4598                           
  4599                           ;OverTemperature_B1.c: 123: }
  4600                           ;OverTemperature_B1.c: 124: }
  4601                           ;OverTemperature_B1.c: 125: if(Temp->ERROR == 0)
  4602  05DE  0879               	movf	_Temp,w
  4603  05DF  0086               	movwf	6
  4604  05E0  3001               	movlw	1	; select bank2/3
  4605  05E1  0087               	movwf	7
  4606  05E2  1881               	btfsc	1,1
  4607  05E3  2DE9               	goto	l9352
  4608                           
  4609                           ;OverTemperature_B1.c: 126: {
  4610                           ;OverTemperature_B1.c: 127: Temp->Safe=1;
  4611  05E4  0879               	movf	_Temp,w
  4612  05E5  0086               	movwf	6
  4613  05E6  3001               	movlw	1	; select bank2/3
  4614  05E7  0087               	movwf	7
  4615  05E8  1601               	bsf	1,4
  4616  05E9                     l9352:	
  4617                           
  4618                           ;OverTemperature_B1.c: 128: }
  4619                           ;OverTemperature_B1.c: 129: Product->Data[24]=Temp->AD >> 8;
  4620  05E9  0879               	movf	_Temp,w
  4621  05EA  3E04               	addlw	4
  4622  05EB  0086               	movwf	6
  4623  05EC  3001               	movlw	1	; select bank2/3
  4624  05ED  0087               	movwf	7
  4625  05EE  3F40               	moviw [0]fsr1
  4626  05EF  0020               	movlb	0	; select bank0
  4627  05F0  00AD               	movwf	??_setTemp_Main
  4628  05F1  3F41               	moviw [1]fsr1
  4629  05F2  00AE               	movwf	??_setTemp_Main+1
  4630  05F3  082E               	movf	??_setTemp_Main+1,w
  4631  05F4  00AF               	movwf	??_setTemp_Main+2
  4632  05F5  086E               	movf	_Product,w
  4633  05F6  3E18               	addlw	24
  4634  05F7  0086               	movwf	6
  4635  05F8  3001               	movlw	1	; select bank2/3
  4636  05F9  0087               	movwf	7
  4637  05FA  082F               	movf	??_setTemp_Main+2,w
  4638  05FB  0081               	movwf	1
  4639                           
  4640                           ;OverTemperature_B1.c: 130: Product->Data[25]=Temp->AD;
  4641  05FC  0879               	movf	_Temp,w
  4642  05FD  3E04               	addlw	4
  4643  05FE  0086               	movwf	6
  4644  05FF  3001               	movlw	1	; select bank2/3
  4645  0600  0087               	movwf	7
  4646  0601  0801               	movf	1,w
  4647  0602  00AD               	movwf	??_setTemp_Main
  4648  0603  086E               	movf	_Product,w
  4649  0604  3E19               	addlw	25
  4650  0605  0086               	movwf	6
  4651  0606  3001               	movlw	1	; select bank2/3
  4652  0607  0087               	movwf	7
  4653  0608  082D               	movf	??_setTemp_Main,w
  4654  0609  0081               	movwf	1
  4655                           
  4656                           ;OverTemperature_B1.c: 131: Temp->ADH[0]=0;
  4657  060A  0879               	movf	_Temp,w
  4658  060B  3E06               	addlw	6
  4659  060C  0086               	movwf	6
  4660  060D  3001               	movlw	1	; select bank2/3
  4661  060E  0087               	movwf	7
  4662  060F  3000               	movlw	0
  4663  0610  3FC0               	movwi [0]fsr1
  4664  0611  3FC1               	movwi [1]fsr1
  4665                           
  4666                           ;OverTemperature_B1.c: 132: Temp->ADH[1]=0;
  4667  0612  0879               	movf	_Temp,w
  4668  0613  3E08               	addlw	8
  4669  0614  0086               	movwf	6
  4670  0615  3001               	movlw	1	; select bank2/3
  4671  0616  0087               	movwf	7
  4672  0617  3000               	movlw	0
  4673  0618  3FC0               	movwi [0]fsr1
  4674  0619  3FC1               	movwi [1]fsr1
  4675  061A  0008               	return
  4676  061B                     __end_of_setTemp_Main:	
  4677                           
  4678                           	psect	text6
  4679  10C5                     __ptext6:	
  4680 ;; *************** function _setOverTemp_Exceptions *****************
  4681 ;; Defined at:
  4682 ;;		line 138 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\OverTemperature_B1.c"
  4683 ;; Parameters:    Size  Location     Type
  4684 ;;  command         1    wreg     unsigned char 
  4685 ;; Auto vars:     Size  Location     Type
  4686 ;;  command         1   12[BANK0 ] unsigned char 
  4687 ;; Return value:  Size  Location     Type
  4688 ;;		None               void
  4689 ;; Registers used:
  4690 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4691 ;; Tracked objects:
  4692 ;;		On entry : 0/0
  4693 ;;		On exit  : 0/0
  4694 ;;		Unchanged: 0/0
  4695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4697 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4698 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4699 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4700 ;;Total ram usage:        2 bytes
  4701 ;; Hardware stack levels used:    1
  4702 ;; Hardware stack levels required when called:    8
  4703 ;; This function calls:
  4704 ;;		_DimmerLights_Exceptions
  4705 ;;		_setBuz
  4706 ;;		_setLED
  4707 ;;		_setRF_Enable
  4708 ;;		_setSw_Enable
  4709 ;; This function is called by:
  4710 ;;		_setTemp_Main
  4711 ;; This function uses a non-reentrant model
  4712 ;;
  4713                           
  4714                           
  4715                           ;psect for function _setOverTemp_Exceptions
  4716  10C5                     _setOverTemp_Exceptions:	
  4717                           
  4718                           ;incstack = 0
  4719                           ; Regs used in _setOverTemp_Exceptions: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
  4720                           ;setOverTemp_Exceptions@command stored from wreg
  4721  10C5  0020               	movlb	0	; select bank0
  4722  10C6  00AC               	movwf	setOverTemp_Exceptions@command
  4723                           
  4724                           ;OverTemperature_B1.c: 140: Temp->ERROR=command;
  4725  10C7  0879               	movf	_Temp,w
  4726  10C8  0086               	movwf	6
  4727  10C9  3001               	movlw	1	; select bank2/3
  4728  10CA  0087               	movwf	7
  4729  10CB  082C               	movf	setOverTemp_Exceptions@command,w
  4730  10CC  1081               	bcf	1,1
  4731  10CD  1D03               	skipz
  4732  10CE  1481               	bsf	1,1
  4733                           
  4734                           ;OverTemperature_B1.c: 141: Temp->Safe=(~command) & 0x01;
  4735  10CF  092C               	comf	setOverTemp_Exceptions@command,w
  4736  10D0  3901               	andlw	1
  4737  10D1  00AB               	movwf	??_setOverTemp_Exceptions
  4738  10D2  0879               	movf	_Temp,w
  4739  10D3  0086               	movwf	6
  4740  10D4  3001               	movlw	1	; select bank2/3
  4741  10D5  0087               	movwf	7
  4742  10D6  0EAB               	swapf	??_setOverTemp_Exceptions,f
  4743  10D7  0801               	movf	1,w
  4744  10D8  062B               	xorwf	??_setOverTemp_Exceptions,w
  4745  10D9  39EF               	andlw	-17
  4746  10DA  062B               	xorwf	??_setOverTemp_Exceptions,w
  4747  10DB  0081               	movwf	1
  4748                           
  4749                           ;OverTemperature_B1.c: 142: if(command)
  4750  10DC  082C               	movf	setOverTemp_Exceptions@command,w
  4751  10DD  1903               	btfsc	3,2
  4752  10DE  28E4               	goto	l8894
  4753                           
  4754                           ;OverTemperature_B1.c: 143: {
  4755                           ;OverTemperature_B1.c: 144: DimmerLights_Exceptions(1);
  4756  10DF  3001               	movlw	1
  4757  10E0  3194  24FB  3190   	fcall	_DimmerLights_Exceptions
  4758                           
  4759                           ;OverTemperature_B1.c: 148: }
  4760  10E3  28ED               	goto	l2012
  4761  10E4                     l8894:	
  4762                           
  4763                           ;OverTemperature_B1.c: 149: else
  4764                           ;OverTemperature_B1.c: 150: {
  4765                           ;OverTemperature_B1.c: 151: setBuz(2,100);
  4766  10E4  3064               	movlw	100
  4767  10E5  0020               	movlb	0	; select bank0
  4768  10E6  00A6               	movwf	setBuz@time
  4769  10E7  3000               	movlw	0
  4770  10E8  00A7               	movwf	setBuz@time+1
  4771  10E9  3002               	movlw	2
  4772  10EA  3197  2789  3190   	fcall	_setBuz
  4773  10ED                     l2012:	
  4774                           
  4775                           ;OverTemperature_B1.c: 152: }
  4776                           ;OverTemperature_B1.c: 155: setLED(99,command+10);
  4777  10ED  0020               	movlb	0	; select bank0
  4778  10EE  082C               	movf	setOverTemp_Exceptions@command,w
  4779  10EF  3E0A               	addlw	10
  4780  10F0  00AB               	movwf	??_setOverTemp_Exceptions
  4781  10F1  082B               	movf	??_setOverTemp_Exceptions,w
  4782  10F2  00A2               	movwf	setLED@command
  4783  10F3  3063               	movlw	99
  4784  10F4  3193  2373  3190   	fcall	_setLED
  4785                           
  4786                           ;OverTemperature_B1.c: 157: setSw_Enable((~command) & 0x01);
  4787  10F7  0020               	movlb	0	; select bank0
  4788  10F8  092C               	comf	setOverTemp_Exceptions@command,w
  4789  10F9  3901               	andlw	1
  4790  10FA  319C  243A  3190   	fcall	_setSw_Enable
  4791                           
  4792                           ;OverTemperature_B1.c: 159: setRF_Enable(1,(~command) & 0x01);
  4793  10FD  0020               	movlb	0	; select bank0
  4794  10FE  092C               	comf	setOverTemp_Exceptions@command,w
  4795  10FF  3901               	andlw	1
  4796  1100  00AB               	movwf	??_setOverTemp_Exceptions
  4797  1101  082B               	movf	??_setOverTemp_Exceptions,w
  4798  1102  00A2               	movwf	setRF_Enable@command
  4799  1103  3001               	movlw	1
  4800  1104  319D  25D3         	fcall	_setRF_Enable
  4801  1106  0008               	return
  4802  1107                     __end_of_setOverTemp_Exceptions:	
  4803                           
  4804                           	psect	text7
  4805  194C                     __ptext7:	
  4806 ;; *************** function _getPF_Safe *****************
  4807 ;; Defined at:
  4808 ;;		line 40 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\PowerFault_B1.c"
  4809 ;; Parameters:    Size  Location     Type
  4810 ;;		None
  4811 ;; Auto vars:     Size  Location     Type
  4812 ;;		None
  4813 ;; Return value:  Size  Location     Type
  4814 ;;                  1    wreg      unsigned char 
  4815 ;; Registers used:
  4816 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4817 ;; Tracked objects:
  4818 ;;		On entry : 0/0
  4819 ;;		On exit  : 0/0
  4820 ;;		Unchanged: 0/0
  4821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4822 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4823 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4825 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4826 ;;Total ram usage:        0 bytes
  4827 ;; Hardware stack levels used:    1
  4828 ;; Hardware stack levels required when called:    4
  4829 ;; This function calls:
  4830 ;;		Nothing
  4831 ;; This function is called by:
  4832 ;;		_setTemp_Main
  4833 ;; This function uses a non-reentrant model
  4834 ;;
  4835                           
  4836                           
  4837                           ;psect for function _getPF_Safe
  4838  194C                     _getPF_Safe:	
  4839                           
  4840                           ;PowerFault_B1.c: 42: return PF->Safe;
  4841                           
  4842                           ;incstack = 0
  4843                           ; Regs used in _getPF_Safe: [wreg+fsr1l+fsr1h+status,2+status,0]
  4844  194C  0876               	movf	_PF,w
  4845  194D  0086               	movwf	6
  4846  194E  3001               	movlw	1	; select bank2/3
  4847  194F  0087               	movwf	7
  4848  1950  0C01               	rrf	1,w
  4849  1951  0C89               	rrf	9,f
  4850  1952  3901               	andlw	1
  4851  1953  0008               	return
  4852  1954                     __end_of_getPF_Safe:	
  4853                           
  4854                           	psect	text8
  4855  18DF                     __ptext8:	
  4856 ;; *************** function _Temp_Initialization *****************
  4857 ;; Defined at:
  4858 ;;		line 15 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\OverTemperature_B1.c"
  4859 ;; Parameters:    Size  Location     Type
  4860 ;;		None
  4861 ;; Auto vars:     Size  Location     Type
  4862 ;;		None
  4863 ;; Return value:  Size  Location     Type
  4864 ;;		None               void
  4865 ;; Registers used:
  4866 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4867 ;; Tracked objects:
  4868 ;;		On entry : 0/0
  4869 ;;		On exit  : 0/0
  4870 ;;		Unchanged: 0/0
  4871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4875 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4876 ;;Total ram usage:        0 bytes
  4877 ;; Hardware stack levels used:    1
  4878 ;; Hardware stack levels required when called:    5
  4879 ;; This function calls:
  4880 ;;		_setTemp_Initialization
  4881 ;; This function is called by:
  4882 ;;		_main
  4883 ;; This function uses a non-reentrant model
  4884 ;;
  4885                           
  4886                           
  4887                           ;psect for function _Temp_Initialization
  4888  18DF                     _Temp_Initialization:	
  4889                           
  4890                           ;OverTemperature_B1.c: 18: setTemp_Initialization();
  4891                           
  4892                           ;incstack = 0
  4893                           ; Regs used in _Temp_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4894  18DF  3199  21A7         	fcall	_setTemp_Initialization
  4895  18E1  0008               	return
  4896  18E2                     __end_of_Temp_Initialization:	
  4897                           
  4898                           	psect	text9
  4899  19A7                     __ptext9:	
  4900 ;; *************** function _setTemp_Initialization *****************
  4901 ;; Defined at:
  4902 ;;		line 51 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\OverTemperature_B1.c"
  4903 ;; Parameters:    Size  Location     Type
  4904 ;;		None
  4905 ;; Auto vars:     Size  Location     Type
  4906 ;;		None
  4907 ;; Return value:  Size  Location     Type
  4908 ;;		None               void
  4909 ;; Registers used:
  4910 ;;		wreg, fsr1l, fsr1h
  4911 ;; Tracked objects:
  4912 ;;		On entry : 0/0
  4913 ;;		On exit  : 0/0
  4914 ;;		Unchanged: 0/0
  4915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4916 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4917 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4918 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4919 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4920 ;;Total ram usage:        1 bytes
  4921 ;; Hardware stack levels used:    1
  4922 ;; Hardware stack levels required when called:    4
  4923 ;; This function calls:
  4924 ;;		Nothing
  4925 ;; This function is called by:
  4926 ;;		_Temp_Initialization
  4927 ;; This function uses a non-reentrant model
  4928 ;;
  4929                           
  4930                           
  4931                           ;psect for function _setTemp_Initialization
  4932  19A7                     _setTemp_Initialization:	
  4933                           
  4934                           ;OverTemperature_B1.c: 53: Temp=&Temp1;
  4935                           
  4936                           ;incstack = 0
  4937                           ; Regs used in _setTemp_Initialization: [wregfsr1]
  4938  19A7  303C               	movlw	_Temp1& (0+255)
  4939  19A8  0020               	movlb	0	; select bank0
  4940  19A9  00A0               	movwf	??_setTemp_Initialization
  4941  19AA  0820               	movf	??_setTemp_Initialization,w
  4942  19AB  00F9               	movwf	_Temp
  4943                           
  4944                           ;OverTemperature_B1.c: 54: Temp->Safe=1;
  4945  19AC  0879               	movf	_Temp,w
  4946  19AD  0086               	movwf	6
  4947  19AE  3001               	movlw	1	; select bank2/3
  4948  19AF  0087               	movwf	7
  4949  19B0  1601               	bsf	1,4
  4950  19B1  0008               	return
  4951  19B2                     __end_of_setTemp_Initialization:	
  4952                           
  4953                           	psect	text10
  4954  1944                     __ptext10:	
  4955 ;; *************** function _Switch_Main *****************
  4956 ;; Defined at:
  4957 ;;		line 62 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Switch_B1.c"
  4958 ;; Parameters:    Size  Location     Type
  4959 ;;		None
  4960 ;; Auto vars:     Size  Location     Type
  4961 ;;		None
  4962 ;; Return value:  Size  Location     Type
  4963 ;;		None               void
  4964 ;; Registers used:
  4965 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4966 ;; Tracked objects:
  4967 ;;		On entry : 0/0
  4968 ;;		On exit  : 0/0
  4969 ;;		Unchanged: 0/0
  4970 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4974 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4975 ;;Total ram usage:        0 bytes
  4976 ;; Hardware stack levels used:    1
  4977 ;; Hardware stack levels required when called:   10
  4978 ;; This function calls:
  4979 ;;		_setSw_Main
  4980 ;; This function is called by:
  4981 ;;		_main
  4982 ;; This function uses a non-reentrant model
  4983 ;;
  4984                           
  4985                           
  4986                           ;psect for function _Switch_Main
  4987  1944                     _Switch_Main:	
  4988                           
  4989                           ;Switch_B1.c: 65: setSw_Main(1);
  4990                           
  4991                           ;incstack = 0
  4992                           ; Regs used in _Switch_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4993  1944  3001               	movlw	1
  4994  1945  3183  2393  3199   	fcall	_setSw_Main
  4995                           
  4996                           ;Switch_B1.c: 69: setSw_Main(2);
  4997  1948  3002               	movlw	2
  4998  1949  3183  2393         	fcall	_setSw_Main
  4999  194B  0008               	return
  5000  194C                     __end_of_Switch_Main:	
  5001                           
  5002                           	psect	text11
  5003  0393                     __ptext11:	
  5004 ;; *************** function _setSw_Main *****************
  5005 ;; Defined at:
  5006 ;;		line 112 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Switch_B1.c"
  5007 ;; Parameters:    Size  Location     Type
  5008 ;;  sw              1    wreg     unsigned char 
  5009 ;; Auto vars:     Size  Location     Type
  5010 ;;  sw              1    2[BANK1 ] unsigned char 
  5011 ;; Return value:  Size  Location     Type
  5012 ;;		None               void
  5013 ;; Registers used:
  5014 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5015 ;; Tracked objects:
  5016 ;;		On entry : 0/0
  5017 ;;		On exit  : 0/0
  5018 ;;		Unchanged: 0/0
  5019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5020 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5021 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  5022 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5023 ;;      Totals:         0       2       3       0       0       0       0       0       0       0       0       0       
      +0       0
  5024 ;;Total ram usage:        5 bytes
  5025 ;; Hardware stack levels used:    1
  5026 ;; Hardware stack levels required when called:    9
  5027 ;; This function calls:
  5028 ;;		_SwPointSelect
  5029 ;;		_Sw_DimmerAdjFunc
  5030 ;;		_Sw_DimmerOffFunc
  5031 ;;		_Sw_DimmerOnFunc
  5032 ;;		_setBuz
  5033 ;;		_setRF_Learn
  5034 ;; This function is called by:
  5035 ;;		_Switch_Main
  5036 ;; This function uses a non-reentrant model
  5037 ;;
  5038                           
  5039                           
  5040                           ;psect for function _setSw_Main
  5041  0393                     _setSw_Main:	
  5042                           
  5043                           ;incstack = 0
  5044                           ; Regs used in _setSw_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5045                           ;setSw_Main@sw stored from wreg
  5046  0393  0021               	movlb	1	; select bank1
  5047  0394  00EC               	movwf	setSw_Main@sw^(0+128)
  5048                           
  5049                           ;Switch_B1.c: 114: if(Sw->Enable)
  5050  0395  0878               	movf	_Sw,w
  5051  0396  0086               	movwf	6
  5052  0397  3001               	movlw	1	; select bank2/3
  5053  0398  0087               	movwf	7
  5054  0399  1C01               	btfss	1,0
  5055  039A  0008               	return
  5056                           
  5057                           ;Switch_B1.c: 115: {
  5058                           ;Switch_B1.c: 116: SwPointSelect(sw);
  5059  039B  086C               	movf	setSw_Main@sw^(0+128),w
  5060  039C  3187  27EC  3183   	fcall	_SwPointSelect
  5061                           
  5062                           ;Switch_B1.c: 133: if(sw == 1)
  5063  039F  0021               	movlb	1	; select bank1
  5064  03A0  086C               	movf	setSw_Main@sw^(0+128),w
  5065  03A1  3A01               	xorlw	1
  5066  03A2  1D03               	skipz
  5067  03A3  2BB3               	goto	l9498
  5068                           
  5069                           ;Switch_B1.c: 134: {
  5070                           ;Switch_B1.c: 135: Sw->Touch=(RA6 || RA4)?1:0;
  5071  03A4  01EA               	clrf	_setSw_Main$4169^(0+128)
  5072  03A5  0AEA               	incf	_setSw_Main$4169^(0+128),f
  5073  03A6  0020               	movlb	0	; select bank0
  5074  03A7  1F0C               	btfss	12,6	;volatile
  5075  03A8  1A0C               	btfsc	12,4	;volatile
  5076  03A9  2BAC               	goto	l9496
  5077  03AA  0021               	movlb	1	; select bank1
  5078  03AB  01EA               	clrf	_setSw_Main$4169^(0+128)
  5079  03AC                     l9496:	
  5080  03AC  0878               	movf	_Sw,w
  5081  03AD  0086               	movwf	6
  5082  03AE  3001               	movlw	1	; select bank2/3
  5083  03AF  0087               	movwf	7
  5084  03B0  0021               	movlb	1	; select bank1
  5085  03B1  086A               	movf	_setSw_Main$4169^(0+128),w
  5086  03B2  2BC5               	goto	L1
  5087  03B3                     l9498:	
  5088                           ;Switch_B1.c: 136: }
  5089                           
  5090                           
  5091                           ;Switch_B1.c: 137: else if(sw == 2)
  5092  03B3  086C               	movf	setSw_Main@sw^(0+128),w
  5093  03B4  3A02               	xorlw	2
  5094  03B5  1D03               	skipz
  5095  03B6  2BC8               	goto	l9508
  5096                           
  5097                           ;Switch_B1.c: 138: {
  5098                           ;Switch_B1.c: 139: Sw->Touch=(RA0 || RB1)?1:0;
  5099  03B7  01EB               	clrf	_setSw_Main$4170^(0+128)
  5100  03B8  0AEB               	incf	_setSw_Main$4170^(0+128),f
  5101  03B9  0020               	movlb	0	; select bank0
  5102  03BA  1C0C               	btfss	12,0	;volatile
  5103  03BB  188D               	btfsc	13,1	;volatile
  5104  03BC  2BBF               	goto	l9506
  5105  03BD  0021               	movlb	1	; select bank1
  5106  03BE  01EB               	clrf	_setSw_Main$4170^(0+128)
  5107  03BF                     l9506:	
  5108  03BF  0878               	movf	_Sw,w
  5109  03C0  0086               	movwf	6
  5110  03C1  3001               	movlw	1	; select bank2/3
  5111  03C2  0087               	movwf	7
  5112  03C3  0021               	movlb	1	; select bank1
  5113  03C4  086B               	movf	_setSw_Main$4170^(0+128),w
  5114  03C5                     L1:	
  5115  03C5  1081               	bcf	1,1
  5116  03C6  1D03               	skipz
  5117  03C7  1481               	bsf	1,1
  5118  03C8                     l9508:	
  5119                           
  5120                           ;Switch_B1.c: 140: }
  5121                           ;Switch_B1.c: 148: if(Sw->Touch)
  5122  03C8  0878               	movf	_Sw,w
  5123  03C9  0086               	movwf	6
  5124  03CA  3001               	movlw	1	; select bank2/3
  5125  03CB  0087               	movwf	7
  5126  03CC  1C81               	btfss	1,1
  5127  03CD  2CA8               	goto	l9558
  5128                           
  5129                           ;Switch_B1.c: 149: {
  5130                           ;Switch_B1.c: 150: if(!Sw->Debounce)
  5131  03CE  0878               	movf	_Sw,w
  5132  03CF  0086               	movwf	6
  5133  03D0  3001               	movlw	1	; select bank2/3
  5134  03D1  0087               	movwf	7
  5135  03D2  1901               	btfsc	1,2
  5136  03D3  2BFE               	goto	l9524
  5137                           
  5138                           ;Switch_B1.c: 151: {
  5139                           ;Switch_B1.c: 152: Sw->DebounceTime++;
  5140  03D4  3001               	movlw	1
  5141  03D5  0020               	movlb	0	; select bank0
  5142  03D6  00E5               	movwf	??_setSw_Main
  5143  03D7  0878               	movf	_Sw,w
  5144  03D8  3E02               	addlw	2
  5145  03D9  0086               	movwf	6
  5146  03DA  3001               	movlw	1	; select bank2/3
  5147  03DB  0087               	movwf	7
  5148  03DC  0865               	movf	??_setSw_Main,w
  5149  03DD  0781               	addwf	1,f
  5150                           
  5151                           ;Switch_B1.c: 153: if(Sw->DebounceTime >= 5)
  5152  03DE  0878               	movf	_Sw,w
  5153  03DF  3E02               	addlw	2
  5154  03E0  0086               	movwf	6
  5155  03E1  3001               	movlw	1	; select bank2/3
  5156  03E2  0087               	movwf	7
  5157  03E3  3005               	movlw	5
  5158  03E4  0201               	subwf	1,w
  5159  03E5  1C03               	skipc
  5160  03E6  0008               	return
  5161                           
  5162                           ;Switch_B1.c: 154: {
  5163                           ;Switch_B1.c: 155: Sw->DebounceTime=0;
  5164  03E7  0878               	movf	_Sw,w
  5165  03E8  3E02               	addlw	2
  5166  03E9  0086               	movwf	6
  5167  03EA  3001               	movlw	1	; select bank2/3
  5168  03EB  0087               	movwf	7
  5169  03EC  0181               	clrf	1
  5170                           
  5171                           ;Switch_B1.c: 156: Sw->Debounce=1;
  5172  03ED  0878               	movf	_Sw,w
  5173  03EE  0086               	movwf	6
  5174  03EF  3001               	movlw	1	; select bank2/3
  5175  03F0  0087               	movwf	7
  5176  03F1  1501               	bsf	1,2
  5177                           
  5178                           ;Switch_B1.c: 159: Sw_DimmerOnFunc(sw);
  5179  03F2  0021               	movlb	1	; select bank1
  5180  03F3  086C               	movf	setSw_Main@sw^(0+128),w
  5181  03F4  3196  2637         	fcall	_Sw_DimmerOnFunc
  5182                           
  5183                           ;Switch_B1.c: 160: TMain->ClockStop=1;
  5184  03F6  0020               	movlb	0	; select bank0
  5185  03F7  086F               	movf	_TMain,w
  5186  03F8  3E10               	addlw	16
  5187  03F9  0086               	movwf	6
  5188  03FA  3001               	movlw	1	; select bank2/3
  5189  03FB  0087               	movwf	7
  5190  03FC  1501               	bsf	1,2
  5191                           
  5192                           ;Switch_B1.c: 163: }
  5193                           ;Switch_B1.c: 164: }
  5194  03FD  0008               	return
  5195  03FE                     l9524:	
  5196                           
  5197                           ;Switch_B1.c: 165: else
  5198                           ;Switch_B1.c: 166: {
  5199                           ;Switch_B1.c: 167: if(!Sw->Hold1)
  5200  03FE  0878               	movf	_Sw,w
  5201  03FF  0086               	movwf	6
  5202  0400  3001               	movlw	1	; select bank2/3
  5203  0401  0087               	movwf	7
  5204  0402  1981               	btfsc	1,3
  5205  0403  2C31               	goto	l9534
  5206                           
  5207                           ;Switch_B1.c: 168: {
  5208                           ;Switch_B1.c: 169: Sw->Hold1Time++;
  5209  0404  0878               	movf	_Sw,w
  5210  0405  3E03               	addlw	3
  5211  0406  0086               	movwf	6
  5212  0407  3001               	movlw	1	; select bank2/3
  5213  0408  0087               	movwf	7
  5214  0409  3001               	movlw	1
  5215  040A  0781               	addwf	1,f
  5216  040B  3141               	addfsr 1,1
  5217  040C  1803               	skipnc
  5218  040D  0A81               	incf	1,f
  5219                           
  5220                           ;Switch_B1.c: 170: if(Sw->Hold1Time >= 150)
  5221  040E  0878               	movf	_Sw,w
  5222  040F  3E03               	addlw	3
  5223  0410  0086               	movwf	6
  5224  0411  3001               	movlw	1	; select bank2/3
  5225  0412  0087               	movwf	7
  5226  0413  3F40               	moviw [0]fsr1
  5227  0414  0020               	movlb	0	; select bank0
  5228  0415  00E5               	movwf	??_setSw_Main
  5229  0416  3F41               	moviw [1]fsr1
  5230  0417  00E6               	movwf	??_setSw_Main+1
  5231  0418  3000               	movlw	0
  5232  0419  0266               	subwf	??_setSw_Main+1,w
  5233  041A  3096               	movlw	150
  5234  041B  1903               	skipnz
  5235  041C  0265               	subwf	??_setSw_Main,w
  5236  041D  1C03               	skipc
  5237  041E  0008               	return
  5238                           
  5239                           ;Switch_B1.c: 171: {
  5240                           ;Switch_B1.c: 172: Sw->Hold1Time=0;
  5241  041F  0878               	movf	_Sw,w
  5242  0420  3E03               	addlw	3
  5243  0421  0086               	movwf	6
  5244  0422  3001               	movlw	1	; select bank2/3
  5245  0423  0087               	movwf	7
  5246  0424  3000               	movlw	0
  5247  0425  3FC0               	movwi [0]fsr1
  5248  0426  3FC1               	movwi [1]fsr1
  5249                           
  5250                           ;Switch_B1.c: 173: Sw->Hold1=1;
  5251  0427  0878               	movf	_Sw,w
  5252  0428  0086               	movwf	6
  5253  0429  3001               	movlw	1	; select bank2/3
  5254  042A  0087               	movwf	7
  5255  042B  1581               	bsf	1,3
  5256                           
  5257                           ;Switch_B1.c: 176: Sw_DimmerAdjFunc(sw);
  5258  042C  0021               	movlb	1	; select bank1
  5259  042D  086C               	movf	setSw_Main@sw^(0+128),w
  5260  042E  3190  2083         	fcall	_Sw_DimmerAdjFunc
  5261                           
  5262                           ;Switch_B1.c: 179: }
  5263                           ;Switch_B1.c: 180: }
  5264  0430  0008               	return
  5265  0431                     l9534:	
  5266                           
  5267                           ;Switch_B1.c: 181: else
  5268                           ;Switch_B1.c: 182: {
  5269                           ;Switch_B1.c: 183: if(!Sw->Hold2)
  5270  0431  0878               	movf	_Sw,w
  5271  0432  0086               	movwf	6
  5272  0433  3001               	movlw	1	; select bank2/3
  5273  0434  0087               	movwf	7
  5274  0435  1A01               	btfsc	1,4
  5275  0436  2C75               	goto	l9548
  5276                           
  5277                           ;Switch_B1.c: 184: {
  5278                           ;Switch_B1.c: 185: Sw->Hold2Time++;
  5279  0437  0878               	movf	_Sw,w
  5280  0438  3E05               	addlw	5
  5281  0439  0086               	movwf	6
  5282  043A  3001               	movlw	1	; select bank2/3
  5283  043B  0087               	movwf	7
  5284  043C  3001               	movlw	1
  5285  043D  0781               	addwf	1,f
  5286  043E  3141               	addfsr 1,1
  5287  043F  1803               	skipnc
  5288  0440  0A81               	incf	1,f
  5289                           
  5290                           ;Switch_B1.c: 186: if(Sw->Hold2Time >= 150)
  5291  0441  0878               	movf	_Sw,w
  5292  0442  3E05               	addlw	5
  5293  0443  0086               	movwf	6
  5294  0444  3001               	movlw	1	; select bank2/3
  5295  0445  0087               	movwf	7
  5296  0446  3F40               	moviw [0]fsr1
  5297  0447  0020               	movlb	0	; select bank0
  5298  0448  00E5               	movwf	??_setSw_Main
  5299  0449  3F41               	moviw [1]fsr1
  5300  044A  00E6               	movwf	??_setSw_Main+1
  5301  044B  3000               	movlw	0
  5302  044C  0266               	subwf	??_setSw_Main+1,w
  5303  044D  3096               	movlw	150
  5304  044E  1903               	skipnz
  5305  044F  0265               	subwf	??_setSw_Main,w
  5306  0450  1C03               	skipc
  5307  0451  0008               	return
  5308                           
  5309                           ;Switch_B1.c: 187: {
  5310                           ;Switch_B1.c: 188: Sw->Hold2Time=0;
  5311  0452  0878               	movf	_Sw,w
  5312  0453  3E05               	addlw	5
  5313  0454  0086               	movwf	6
  5314  0455  3001               	movlw	1	; select bank2/3
  5315  0456  0087               	movwf	7
  5316  0457  3000               	movlw	0
  5317  0458  3FC0               	movwi [0]fsr1
  5318  0459  3FC1               	movwi [1]fsr1
  5319                           
  5320                           ;Switch_B1.c: 189: Sw->Hold2=1;
  5321  045A  0878               	movf	_Sw,w
  5322  045B  0086               	movwf	6
  5323  045C  3001               	movlw	1	; select bank2/3
  5324  045D  0087               	movwf	7
  5325  045E  1601               	bsf	1,4
  5326                           
  5327                           ;Switch_B1.c: 193: setRF_Learn(1,1);
  5328  045F  01A2               	clrf	setRF_Learn@command
  5329  0460  0AA2               	incf	setRF_Learn@command,f
  5330  0461  3001               	movlw	1
  5331  0462  319A  222F  3183   	fcall	_setRF_Learn
  5332                           
  5333                           ;Switch_B1.c: 195: if(TMain->First)
  5334  0465  0020               	movlb	0	; select bank0
  5335  0466  086F               	movf	_TMain,w
  5336  0467  3E03               	addlw	3
  5337  0468  0086               	movwf	6
  5338  0469  3001               	movlw	1	; select bank2/3
  5339  046A  0087               	movwf	7
  5340  046B  1C81               	btfss	1,1
  5341  046C  0008               	return
  5342                           
  5343                           ;Switch_B1.c: 196: {
  5344                           ;Switch_B1.c: 197: setBuz(2,100);
  5345  046D  3064               	movlw	100
  5346  046E  00A6               	movwf	setBuz@time
  5347  046F  3000               	movlw	0
  5348  0470  00A7               	movwf	setBuz@time+1
  5349  0471  3002               	movlw	2
  5350  0472  3197  2789         	fcall	_setBuz
  5351                           
  5352                           ;Switch_B1.c: 198: }
  5353                           ;Switch_B1.c: 200: }
  5354                           ;Switch_B1.c: 201: }
  5355  0474  0008               	return
  5356  0475                     l9548:	
  5357                           
  5358                           ;Switch_B1.c: 202: else
  5359                           ;Switch_B1.c: 203: {
  5360                           ;Switch_B1.c: 204: if(!Sw->Hold3)
  5361  0475  0878               	movf	_Sw,w
  5362  0476  0086               	movwf	6
  5363  0477  3001               	movlw	1	; select bank2/3
  5364  0478  0087               	movwf	7
  5365  0479  1A81               	btfsc	1,5
  5366  047A  0008               	return
  5367                           
  5368                           ;Switch_B1.c: 205: {
  5369                           ;Switch_B1.c: 206: Sw->Hold3Time++;
  5370  047B  0878               	movf	_Sw,w
  5371  047C  3E07               	addlw	7
  5372  047D  0086               	movwf	6
  5373  047E  3001               	movlw	1	; select bank2/3
  5374  047F  0087               	movwf	7
  5375  0480  3001               	movlw	1
  5376  0481  0781               	addwf	1,f
  5377  0482  3141               	addfsr 1,1
  5378  0483  1803               	skipnc
  5379  0484  0A81               	incf	1,f
  5380                           
  5381                           ;Switch_B1.c: 207: if(Sw->Hold3Time >= 300)
  5382  0485  0878               	movf	_Sw,w
  5383  0486  3E07               	addlw	7
  5384  0487  0086               	movwf	6
  5385  0488  3001               	movlw	1	; select bank2/3
  5386  0489  0087               	movwf	7
  5387  048A  3F40               	moviw [0]fsr1
  5388  048B  0020               	movlb	0	; select bank0
  5389  048C  00E5               	movwf	??_setSw_Main
  5390  048D  3F41               	moviw [1]fsr1
  5391  048E  00E6               	movwf	??_setSw_Main+1
  5392  048F  3001               	movlw	1
  5393  0490  0266               	subwf	??_setSw_Main+1,w
  5394  0491  302C               	movlw	44
  5395  0492  1903               	skipnz
  5396  0493  0265               	subwf	??_setSw_Main,w
  5397  0494  1C03               	skipc
  5398  0495  0008               	return
  5399                           
  5400                           ;Switch_B1.c: 208: {
  5401                           ;Switch_B1.c: 209: Sw->Hold3Time=0;
  5402  0496  0878               	movf	_Sw,w
  5403  0497  3E07               	addlw	7
  5404  0498  0086               	movwf	6
  5405  0499  3001               	movlw	1	; select bank2/3
  5406  049A  0087               	movwf	7
  5407  049B  3000               	movlw	0
  5408  049C  3FC0               	movwi [0]fsr1
  5409  049D  3FC1               	movwi [1]fsr1
  5410                           
  5411                           ;Switch_B1.c: 210: Sw->Hold3=1;
  5412  049E  0878               	movf	_Sw,w
  5413  049F  0086               	movwf	6
  5414  04A0  3001               	movlw	1	; select bank2/3
  5415  04A1  0087               	movwf	7
  5416  04A2  1681               	bsf	1,5
  5417                           
  5418                           ;Switch_B1.c: 213: setRF_Learn(1,0);
  5419  04A3  01A2               	clrf	setRF_Learn@command
  5420  04A4  3001               	movlw	1
  5421  04A5  319A  222F         	fcall	_setRF_Learn
  5422                           
  5423                           ;Switch_B1.c: 216: }
  5424                           ;Switch_B1.c: 217: }
  5425                           ;Switch_B1.c: 218: }
  5426                           ;Switch_B1.c: 219: }
  5427                           ;Switch_B1.c: 220: }
  5428                           ;Switch_B1.c: 221: }
  5429  04A7  0008               	return
  5430  04A8                     l9558:	
  5431                           
  5432                           ;Switch_B1.c: 222: else
  5433                           ;Switch_B1.c: 223: {
  5434                           ;Switch_B1.c: 224: if(Sw->Debounce)
  5435  04A8  0878               	movf	_Sw,w
  5436  04A9  0086               	movwf	6
  5437  04AA  3001               	movlw	1	; select bank2/3
  5438  04AB  0087               	movwf	7
  5439  04AC  1D01               	btfss	1,2
  5440  04AD  0008               	return
  5441                           
  5442                           ;Switch_B1.c: 225: {
  5443                           ;Switch_B1.c: 226: Sw->DebounceTime++;
  5444  04AE  3001               	movlw	1
  5445  04AF  0020               	movlb	0	; select bank0
  5446  04B0  00E5               	movwf	??_setSw_Main
  5447  04B1  0878               	movf	_Sw,w
  5448  04B2  3E02               	addlw	2
  5449  04B3  0086               	movwf	6
  5450  04B4  3001               	movlw	1	; select bank2/3
  5451  04B5  0087               	movwf	7
  5452  04B6  0865               	movf	??_setSw_Main,w
  5453  04B7  0781               	addwf	1,f
  5454                           
  5455                           ;Switch_B1.c: 227: if(Sw->DebounceTime >= 5)
  5456  04B8  0878               	movf	_Sw,w
  5457  04B9  3E02               	addlw	2
  5458  04BA  0086               	movwf	6
  5459  04BB  3001               	movlw	1	; select bank2/3
  5460  04BC  0087               	movwf	7
  5461  04BD  3005               	movlw	5
  5462  04BE  0201               	subwf	1,w
  5463  04BF  1C03               	skipc
  5464  04C0  0008               	return
  5465                           
  5466                           ;Switch_B1.c: 228: {
  5467                           ;Switch_B1.c: 229: Sw->DebounceTime=0;
  5468  04C1  0878               	movf	_Sw,w
  5469  04C2  3E02               	addlw	2
  5470  04C3  0086               	movwf	6
  5471  04C4  3001               	movlw	1	; select bank2/3
  5472  04C5  0087               	movwf	7
  5473  04C6  0181               	clrf	1
  5474                           
  5475                           ;Switch_B1.c: 230: Sw->Debounce=0;
  5476  04C7  0878               	movf	_Sw,w
  5477  04C8  0086               	movwf	6
  5478  04C9  3001               	movlw	1	; select bank2/3
  5479  04CA  0087               	movwf	7
  5480  04CB  1101               	bcf	1,2
  5481                           
  5482                           ;Switch_B1.c: 231: Sw->Hold1Time=0;
  5483  04CC  0878               	movf	_Sw,w
  5484  04CD  3E03               	addlw	3
  5485  04CE  0086               	movwf	6
  5486  04CF  3001               	movlw	1	; select bank2/3
  5487  04D0  0087               	movwf	7
  5488  04D1  3000               	movlw	0
  5489  04D2  3FC0               	movwi [0]fsr1
  5490  04D3  3FC1               	movwi [1]fsr1
  5491                           
  5492                           ;Switch_B1.c: 232: Sw->Hold1=0;
  5493  04D4  0878               	movf	_Sw,w
  5494  04D5  0086               	movwf	6
  5495  04D6  3001               	movlw	1	; select bank2/3
  5496  04D7  0087               	movwf	7
  5497  04D8  1181               	bcf	1,3
  5498                           
  5499                           ;Switch_B1.c: 233: Sw->Hold2Time=0;
  5500  04D9  0878               	movf	_Sw,w
  5501  04DA  3E05               	addlw	5
  5502  04DB  0086               	movwf	6
  5503  04DC  3001               	movlw	1	; select bank2/3
  5504  04DD  0087               	movwf	7
  5505  04DE  3000               	movlw	0
  5506  04DF  3FC0               	movwi [0]fsr1
  5507  04E0  3FC1               	movwi [1]fsr1
  5508                           
  5509                           ;Switch_B1.c: 234: Sw->Hold2=0;
  5510  04E1  0878               	movf	_Sw,w
  5511  04E2  0086               	movwf	6
  5512  04E3  3001               	movlw	1	; select bank2/3
  5513  04E4  0087               	movwf	7
  5514  04E5  1201               	bcf	1,4
  5515                           
  5516                           ;Switch_B1.c: 235: Sw->Hold3Time=0;
  5517  04E6  0878               	movf	_Sw,w
  5518  04E7  3E07               	addlw	7
  5519  04E8  0086               	movwf	6
  5520  04E9  3001               	movlw	1	; select bank2/3
  5521  04EA  0087               	movwf	7
  5522  04EB  3000               	movlw	0
  5523  04EC  3FC0               	movwi [0]fsr1
  5524  04ED  3FC1               	movwi [1]fsr1
  5525                           
  5526                           ;Switch_B1.c: 236: Sw->Hold3=0;
  5527  04EE  0878               	movf	_Sw,w
  5528  04EF  0086               	movwf	6
  5529  04F0  3001               	movlw	1	; select bank2/3
  5530  04F1  0087               	movwf	7
  5531  04F2  1281               	bcf	1,5
  5532                           
  5533                           ;Switch_B1.c: 239: Sw_DimmerOffFunc(sw);
  5534  04F3  0021               	movlb	1	; select bank1
  5535  04F4  086C               	movf	setSw_Main@sw^(0+128),w
  5536  04F5  3196  26A6  3183   	fcall	_Sw_DimmerOffFunc
  5537                           
  5538                           ;Switch_B1.c: 244: setRF_Learn(1,0);
  5539  04F8  0020               	movlb	0	; select bank0
  5540  04F9  01A2               	clrf	setRF_Learn@command
  5541  04FA  3001               	movlw	1
  5542  04FB  319A  222F         	fcall	_setRF_Learn
  5543  04FD  0008               	return
  5544  04FE                     __end_of_setSw_Main:	
  5545                           
  5546                           	psect	text12
  5547  1A2F                     __ptext12:	
  5548 ;; *************** function _setRF_Learn *****************
  5549 ;; Defined at:
  5550 ;;		line 31 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
  5551 ;; Parameters:    Size  Location     Type
  5552 ;;  rf              1    wreg     unsigned char 
  5553 ;;  command         1    2[BANK0 ] unsigned char 
  5554 ;; Auto vars:     Size  Location     Type
  5555 ;;  rf              1    3[BANK0 ] unsigned char 
  5556 ;; Return value:  Size  Location     Type
  5557 ;;		None               void
  5558 ;; Registers used:
  5559 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5560 ;; Tracked objects:
  5561 ;;		On entry : 0/0
  5562 ;;		On exit  : 0/0
  5563 ;;		Unchanged: 0/0
  5564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5565 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5566 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5568 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5569 ;;Total ram usage:        2 bytes
  5570 ;; Hardware stack levels used:    1
  5571 ;; Hardware stack levels required when called:    5
  5572 ;; This function calls:
  5573 ;;		_RfPointSelect
  5574 ;; This function is called by:
  5575 ;;		_setSw_Main
  5576 ;; This function uses a non-reentrant model
  5577 ;;
  5578                           
  5579                           
  5580                           ;psect for function _setRF_Learn
  5581  1A2F                     _setRF_Learn:	
  5582                           
  5583                           ;incstack = 0
  5584                           ; Regs used in _setRF_Learn: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5585                           ;setRF_Learn@rf stored from wreg
  5586  1A2F  0020               	movlb	0	; select bank0
  5587  1A30  00A3               	movwf	setRF_Learn@rf
  5588                           
  5589                           ;RF_Control_B1.c: 33: RfPointSelect(rf);
  5590  1A31  0823               	movf	setRF_Learn@rf,w
  5591  1A32  3199  2186         	fcall	_RfPointSelect
  5592                           
  5593                           ;RF_Control_B1.c: 34: RF->Learn=command;
  5594  1A34  0877               	movf	_RF,w
  5595  1A35  0086               	movwf	6
  5596  1A36  0187               	clrf	7
  5597  1A37  0020               	movlb	0	; select bank0
  5598  1A38  0822               	movf	setRF_Learn@command,w
  5599  1A39  1301               	bcf	1,6
  5600  1A3A  1D03               	skipz
  5601  1A3B  1701               	bsf	1,6
  5602  1A3C  0008               	return
  5603  1A3D                     __end_of_setRF_Learn:	
  5604                           
  5605                           	psect	text13
  5606  1637                     __ptext13:	
  5607 ;; *************** function _Sw_DimmerOnFunc *****************
  5608 ;; Defined at:
  5609 ;;		line 252 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Switch_B1.c"
  5610 ;; Parameters:    Size  Location     Type
  5611 ;;  sw              1    wreg     unsigned char 
  5612 ;; Auto vars:     Size  Location     Type
  5613 ;;  sw              1   67[BANK0 ] unsigned char 
  5614 ;;  Idle            1   66[BANK0 ] unsigned char 
  5615 ;; Return value:  Size  Location     Type
  5616 ;;		None               void
  5617 ;; Registers used:
  5618 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5619 ;; Tracked objects:
  5620 ;;		On entry : 0/0
  5621 ;;		On exit  : 0/0
  5622 ;;		Unchanged: 0/0
  5623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5625 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5627 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5628 ;;Total ram usage:        2 bytes
  5629 ;; Hardware stack levels used:    1
  5630 ;; Hardware stack levels required when called:    8
  5631 ;; This function calls:
  5632 ;;		_setBuz
  5633 ;;		_setDimmerLights_Switch
  5634 ;;		_setDimmerLights_Trigger
  5635 ;;		_setRFSW_Status
  5636 ;;		_setRF_DimmerLights
  5637 ;;		_setTxData
  5638 ;; This function is called by:
  5639 ;;		_setSw_Main
  5640 ;; This function uses a non-reentrant model
  5641 ;;
  5642                           
  5643                           
  5644                           ;psect for function _Sw_DimmerOnFunc
  5645  1637                     _Sw_DimmerOnFunc:	
  5646                           
  5647                           ;incstack = 0
  5648                           ; Regs used in _Sw_DimmerOnFunc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5649                           ;Sw_DimmerOnFunc@sw stored from wreg
  5650  1637  0020               	movlb	0	; select bank0
  5651  1638  00E3               	movwf	Sw_DimmerOnFunc@sw
  5652                           
  5653                           ;Switch_B1.c: 254: char Idle=1;
  5654  1639  01E2               	clrf	Sw_DimmerOnFunc@Idle
  5655  163A  0AE2               	incf	Sw_DimmerOnFunc@Idle,f
  5656                           
  5657                           ;Switch_B1.c: 271: if(sw == 1)
  5658  163B  0863               	movf	Sw_DimmerOnFunc@sw,w
  5659  163C  3A01               	xorlw	1
  5660  163D  1D03               	skipz
  5661  163E  2E41               	goto	l8970
  5662                           
  5663                           ;Switch_B1.c: 272: {
  5664                           ;Switch_B1.c: 273: Idle=(DimmerLights22->AdjGo)?0:1;
  5665  163F  086C               	movf	_DimmerLights22,w
  5666  1640  2E46               	goto	L2
  5667  1641                     l8970:	
  5668                           ;Switch_B1.c: 274: }
  5669                           
  5670                           
  5671                           ;Switch_B1.c: 275: else if(sw == 2)
  5672  1641  0863               	movf	Sw_DimmerOnFunc@sw,w
  5673  1642  3A02               	xorlw	2
  5674  1643  1D03               	skipz
  5675  1644  2E51               	goto	l8974
  5676                           
  5677                           ;Switch_B1.c: 276: {
  5678                           ;Switch_B1.c: 277: Idle=(DimmerLights11->AdjGo)?0:1;
  5679  1645  086B               	movf	_DimmerLights11,w
  5680  1646                     L2:	
  5681  1646  3E09               	addlw	9
  5682  1647  0086               	movwf	6
  5683  1648  3001               	movlw	1	; select bank2/3
  5684  1649  0087               	movwf	7
  5685  164A  1003               	clrc
  5686  164B  1D01               	btfss	1,2
  5687  164C  1403               	setc
  5688  164D  3000               	movlw	0
  5689  164E  1803               	btfsc	3,0
  5690  164F  3001               	movlw	1
  5691  1650  00E2               	movwf	Sw_DimmerOnFunc@Idle
  5692  1651                     l8974:	
  5693                           
  5694                           ;Switch_B1.c: 278: }
  5695                           ;Switch_B1.c: 281: if(Idle)
  5696  1651  0862               	movf	Sw_DimmerOnFunc@Idle,w
  5697  1652  1903               	btfsc	3,2
  5698  1653  0008               	return
  5699                           
  5700                           ;Switch_B1.c: 282: {
  5701                           ;Switch_B1.c: 283: Sw->Flag=1;
  5702  1654  0878               	movf	_Sw,w
  5703  1655  0086               	movwf	6
  5704  1656  3001               	movlw	1	; select bank2/3
  5705  1657  0087               	movwf	7
  5706  1658  1781               	bsf	1,7
  5707                           
  5708                           ;Switch_B1.c: 284: setBuz(1,100);
  5709  1659  3064               	movlw	100
  5710  165A  00A6               	movwf	setBuz@time
  5711  165B  3000               	movlw	0
  5712  165C  00A7               	movwf	setBuz@time+1
  5713  165D  3001               	movlw	1
  5714  165E  3197  2789  3196   	fcall	_setBuz
  5715                           
  5716                           ;Switch_B1.c: 285: if(!Sw->Status)
  5717  1661  0878               	movf	_Sw,w
  5718  1662  0086               	movwf	6
  5719  1663  3001               	movlw	1	; select bank2/3
  5720  1664  0087               	movwf	7
  5721  1665  1B01               	btfsc	1,6
  5722  1666  2E93               	goto	l8994
  5723                           
  5724                           ;Switch_B1.c: 286: {
  5725                           ;Switch_B1.c: 287: Sw->Status=1;
  5726  1667  0878               	movf	_Sw,w
  5727  1668  0086               	movwf	6
  5728  1669  3001               	movlw	1	; select bank2/3
  5729  166A  0087               	movwf	7
  5730  166B  1701               	bsf	1,6
  5731                           
  5732                           ;Switch_B1.c: 288: setRFSW_Status(sw,1);
  5733  166C  0020               	movlb	0	; select bank0
  5734  166D  01A2               	clrf	setRFSW_Status@command
  5735  166E  0AA2               	incf	setRFSW_Status@command,f
  5736  166F  0863               	movf	Sw_DimmerOnFunc@sw,w
  5737  1670  319A  223D  3196   	fcall	_setRFSW_Status
  5738                           
  5739                           ;Switch_B1.c: 290: setDimmerLights_Trigger(sw,1);
  5740  1673  0020               	movlb	0	; select bank0
  5741  1674  01A2               	clrf	setDimmerLights_Trigger@command
  5742  1675  0AA2               	incf	setDimmerLights_Trigger@command,f
  5743  1676  0863               	movf	Sw_DimmerOnFunc@sw,w
  5744  1677  319A  227B  3196   	fcall	_setDimmerLights_Trigger
  5745                           
  5746                           ;Switch_B1.c: 291: setDimmerLights_Switch(sw,1);
  5747  167A  0020               	movlb	0	; select bank0
  5748  167B  01A2               	clrf	setDimmerLights_Switch@command
  5749  167C  0AA2               	incf	setDimmerLights_Switch@command,f
  5750  167D  0863               	movf	Sw_DimmerOnFunc@sw,w
  5751  167E  319A  226B  3196   	fcall	_setDimmerLights_Switch
  5752                           
  5753                           ;Switch_B1.c: 293: setRF_DimmerLights(sw,Sw->Status);
  5754  1681  0878               	movf	_Sw,w
  5755  1682  0086               	movwf	6
  5756  1683  3001               	movlw	1	; select bank2/3
  5757  1684  0087               	movwf	7
  5758  1685  3000               	movlw	0
  5759  1686  1B01               	btfsc	1,6
  5760  1687  3001               	movlw	1
  5761  1688  0020               	movlb	0	; select bank0
  5762  1689  00DD               	movwf	setRF_DimmerLights@on
  5763  168A  0863               	movf	Sw_DimmerOnFunc@sw,w
  5764  168B  3195  2560  3196   	fcall	_setRF_DimmerLights
  5765                           
  5766                           ;Switch_B1.c: 294: setTxData(1);
  5767  168E  3001               	movlw	1
  5768  168F  3187  2723         	fcall	_setTxData
  5769                           
  5770                           ;Switch_B1.c: 295: }
  5771  1691  0020               	movlb	0	; select bank0
  5772  1692  0008               	return
  5773  1693                     l8994:	
  5774                           
  5775                           ;Switch_B1.c: 296: else
  5776                           ;Switch_B1.c: 297: {
  5777                           ;Switch_B1.c: 298: Sw->Status=0;
  5778  1693  0878               	movf	_Sw,w
  5779  1694  0086               	movwf	6
  5780  1695  3001               	movlw	1	; select bank2/3
  5781  1696  0087               	movwf	7
  5782  1697  1301               	bcf	1,6
  5783                           
  5784                           ;Switch_B1.c: 299: setRFSW_Status(sw,Sw->Status);
  5785  1698  0878               	movf	_Sw,w
  5786  1699  0086               	movwf	6
  5787  169A  3001               	movlw	1	; select bank2/3
  5788  169B  0087               	movwf	7
  5789  169C  3000               	movlw	0
  5790  169D  1B01               	btfsc	1,6
  5791  169E  3001               	movlw	1
  5792  169F  0020               	movlb	0	; select bank0
  5793  16A0  00A2               	movwf	setRFSW_Status@command
  5794  16A1  0863               	movf	Sw_DimmerOnFunc@sw,w
  5795  16A2  319A  223D         	fcall	_setRFSW_Status
  5796  16A4  0020               	movlb	0	; select bank0
  5797  16A5  0008               	return
  5798  16A6                     __end_of_Sw_DimmerOnFunc:	
  5799                           
  5800                           	psect	text14
  5801  16A6                     __ptext14:	
  5802 ;; *************** function _Sw_DimmerOffFunc *****************
  5803 ;; Defined at:
  5804 ;;		line 304 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Switch_B1.c"
  5805 ;; Parameters:    Size  Location     Type
  5806 ;;  sw              1    wreg     unsigned char 
  5807 ;; Auto vars:     Size  Location     Type
  5808 ;;  sw              1   68[BANK0 ] unsigned char 
  5809 ;; Return value:  Size  Location     Type
  5810 ;;		None               void
  5811 ;; Registers used:
  5812 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5813 ;; Tracked objects:
  5814 ;;		On entry : 0/0
  5815 ;;		On exit  : 0/0
  5816 ;;		Unchanged: 0/0
  5817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5819 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5820 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5821 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5822 ;;Total ram usage:        3 bytes
  5823 ;; Hardware stack levels used:    1
  5824 ;; Hardware stack levels required when called:    8
  5825 ;; This function calls:
  5826 ;;		_setDelayOff_GO
  5827 ;;		_setDimmerLights_AdjGo
  5828 ;;		_setDimmerLights_Switch
  5829 ;;		_setDimmerLights_Trigger
  5830 ;;		_setDimmerLights_TriggerAdj
  5831 ;;		_setRF_DimmerLights
  5832 ;;		_setTxData
  5833 ;; This function is called by:
  5834 ;;		_setSw_Main
  5835 ;; This function uses a non-reentrant model
  5836 ;;
  5837                           
  5838                           
  5839                           ;psect for function _Sw_DimmerOffFunc
  5840  16A6                     _Sw_DimmerOffFunc:	
  5841                           
  5842                           ;incstack = 0
  5843                           ; Regs used in _Sw_DimmerOffFunc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5844                           ;Sw_DimmerOffFunc@sw stored from wreg
  5845  16A6  0020               	movlb	0	; select bank0
  5846  16A7  00E4               	movwf	Sw_DimmerOffFunc@sw
  5847                           
  5848                           ;Switch_B1.c: 306: if(Sw->Flag)
  5849  16A8  0878               	movf	_Sw,w
  5850  16A9  0086               	movwf	6
  5851  16AA  3001               	movlw	1	; select bank2/3
  5852  16AB  0087               	movwf	7
  5853  16AC  1F81               	btfss	1,7
  5854  16AD  0008               	return
  5855                           
  5856                           ;Switch_B1.c: 307: {
  5857                           ;Switch_B1.c: 308: Sw->Flag=0;
  5858  16AE  0878               	movf	_Sw,w
  5859  16AF  0086               	movwf	6
  5860  16B0  3001               	movlw	1	; select bank2/3
  5861  16B1  0087               	movwf	7
  5862  16B2  1381               	bcf	1,7
  5863                           
  5864                           ;Switch_B1.c: 309: if(Sw->Status)
  5865  16B3  0878               	movf	_Sw,w
  5866  16B4  0086               	movwf	6
  5867  16B5  3001               	movlw	1	; select bank2/3
  5868  16B6  0087               	movwf	7
  5869  16B7  1F01               	btfss	1,6
  5870  16B8  2EF2               	goto	l9038
  5871                           
  5872                           ;Switch_B1.c: 310: {
  5873                           ;Switch_B1.c: 311: if(Sw->Adj)
  5874  16B9  0A78               	incf	_Sw,w
  5875  16BA  0086               	movwf	6
  5876  16BB  3001               	movlw	1	; select bank2/3
  5877  16BC  0087               	movwf	7
  5878  16BD  1C01               	btfss	1,0
  5879  16BE  0008               	return
  5880                           
  5881                           ;Switch_B1.c: 312: {
  5882                           ;Switch_B1.c: 313: Sw->Adj=0;
  5883  16BF  0A78               	incf	_Sw,w
  5884  16C0  0086               	movwf	6
  5885  16C1  3001               	movlw	1	; select bank2/3
  5886  16C2  0087               	movwf	7
  5887  16C3  1001               	bcf	1,0
  5888                           
  5889                           ;Switch_B1.c: 314: setDimmerLights_TriggerAdj(sw,1);
  5890  16C4  01A2               	clrf	setDimmerLights_TriggerAdj@command
  5891  16C5  0AA2               	incf	setDimmerLights_TriggerAdj@command,f
  5892  16C6  0864               	movf	Sw_DimmerOffFunc@sw,w
  5893  16C7  319A  22AB  3196   	fcall	_setDimmerLights_TriggerAdj
  5894                           
  5895                           ;Switch_B1.c: 315: setDimmerLights_AdjGo(sw,0);
  5896  16CA  0020               	movlb	0	; select bank0
  5897  16CB  01A2               	clrf	setDimmerLights_AdjGo@command
  5898  16CC  0864               	movf	Sw_DimmerOffFunc@sw,w
  5899  16CD  319A  229B  3196   	fcall	_setDimmerLights_AdjGo
  5900                           
  5901                           ;Switch_B1.c: 317: Product->Data[17]=Product->Data[26+sw];
  5902  16D0  0020               	movlb	0	; select bank0
  5903  16D1  0864               	movf	Sw_DimmerOffFunc@sw,w
  5904  16D2  3E1A               	addlw	26
  5905  16D3  076E               	addwf	_Product,w
  5906  16D4  00E2               	movwf	??_Sw_DimmerOffFunc
  5907  16D5  0862               	movf	??_Sw_DimmerOffFunc,w
  5908  16D6  0086               	movwf	6
  5909  16D7  3001               	movlw	1	; select bank2/3
  5910  16D8  0087               	movwf	7
  5911  16D9  0801               	movf	1,w
  5912  16DA  00E3               	movwf	??_Sw_DimmerOffFunc+1
  5913  16DB  086E               	movf	_Product,w
  5914  16DC  3E11               	addlw	17
  5915  16DD  0086               	movwf	6
  5916  16DE  3001               	movlw	1	; select bank2/3
  5917  16DF  0087               	movwf	7
  5918  16E0  0863               	movf	??_Sw_DimmerOffFunc+1,w
  5919  16E1  0081               	movwf	1
  5920                           
  5921                           ;Switch_B1.c: 318: setRF_DimmerLights(sw,Sw->Status);
  5922  16E2  0878               	movf	_Sw,w
  5923  16E3  0086               	movwf	6
  5924  16E4  3001               	movlw	1	; select bank2/3
  5925  16E5  0087               	movwf	7
  5926  16E6  3000               	movlw	0
  5927  16E7  1B01               	btfsc	1,6
  5928  16E8  3001               	movlw	1
  5929  16E9  00DD               	movwf	setRF_DimmerLights@on
  5930  16EA  0864               	movf	Sw_DimmerOffFunc@sw,w
  5931  16EB  3195  2560  3196   	fcall	_setRF_DimmerLights
  5932                           
  5933                           ;Switch_B1.c: 319: setTxData(1);
  5934  16EE  3001               	movlw	1
  5935  16EF  3187  2723         	fcall	_setTxData
  5936                           
  5937                           ;Switch_B1.c: 321: }
  5938                           ;Switch_B1.c: 322: }
  5939  16F1  0008               	return
  5940  16F2                     l9038:	
  5941                           
  5942                           ;Switch_B1.c: 323: else
  5943                           ;Switch_B1.c: 324: {
  5944                           ;Switch_B1.c: 325: setDimmerLights_Trigger(sw,1);
  5945  16F2  0020               	movlb	0	; select bank0
  5946  16F3  01A2               	clrf	setDimmerLights_Trigger@command
  5947  16F4  0AA2               	incf	setDimmerLights_Trigger@command,f
  5948  16F5  0864               	movf	Sw_DimmerOffFunc@sw,w
  5949  16F6  319A  227B  3196   	fcall	_setDimmerLights_Trigger
  5950                           
  5951                           ;Switch_B1.c: 326: setDimmerLights_Switch(sw,0);
  5952  16F9  0020               	movlb	0	; select bank0
  5953  16FA  01A2               	clrf	setDimmerLights_Switch@command
  5954  16FB  0864               	movf	Sw_DimmerOffFunc@sw,w
  5955  16FC  319A  226B  3196   	fcall	_setDimmerLights_Switch
  5956                           
  5957                           ;Switch_B1.c: 328: setDelayOff_GO(sw,0,0);
  5958  16FF  0020               	movlb	0	; select bank0
  5959  1700  01A3               	clrf	setDelayOff_GO@command
  5960  1701  01A4               	clrf	setDelayOff_GO@value
  5961  1702  0864               	movf	Sw_DimmerOffFunc@sw,w
  5962  1703  3192  22C0  3196   	fcall	_setDelayOff_GO
  5963                           
  5964                           ;Switch_B1.c: 329: setRF_DimmerLights(sw,Sw->Status);
  5965  1706  0878               	movf	_Sw,w
  5966  1707  0086               	movwf	6
  5967  1708  3001               	movlw	1	; select bank2/3
  5968  1709  0087               	movwf	7
  5969  170A  3000               	movlw	0
  5970  170B  1B01               	btfsc	1,6
  5971  170C  3001               	movlw	1
  5972  170D  0020               	movlb	0	; select bank0
  5973  170E  00DD               	movwf	setRF_DimmerLights@on
  5974  170F  0864               	movf	Sw_DimmerOffFunc@sw,w
  5975  1710  3195  2560  3196   	fcall	_setRF_DimmerLights
  5976                           
  5977                           ;Switch_B1.c: 330: setTxData(1);
  5978  1713  3001               	movlw	1
  5979  1714  3187  2723         	fcall	_setTxData
  5980  1716  0008               	return
  5981  1717                     __end_of_Sw_DimmerOffFunc:	
  5982                           
  5983                           	psect	text15
  5984  1083                     __ptext15:	
  5985 ;; *************** function _Sw_DimmerAdjFunc *****************
  5986 ;; Defined at:
  5987 ;;		line 335 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Switch_B1.c"
  5988 ;; Parameters:    Size  Location     Type
  5989 ;;  sw              1    wreg     unsigned char 
  5990 ;; Auto vars:     Size  Location     Type
  5991 ;;  sw              1    5[BANK0 ] unsigned char 
  5992 ;;  Idle            1    4[BANK0 ] unsigned char 
  5993 ;; Return value:  Size  Location     Type
  5994 ;;		None               void
  5995 ;; Registers used:
  5996 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5997 ;; Tracked objects:
  5998 ;;		On entry : 0/0
  5999 ;;		On exit  : 0/0
  6000 ;;		Unchanged: 0/0
  6001 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6002 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6003 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6004 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6005 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6006 ;;Total ram usage:        2 bytes
  6007 ;; Hardware stack levels used:    1
  6008 ;; Hardware stack levels required when called:    6
  6009 ;; This function calls:
  6010 ;;		_setDimmerLights_AdjGo
  6011 ;;		_setDimmerLights_TriggerAdj
  6012 ;;		_setRFSW_Status
  6013 ;; This function is called by:
  6014 ;;		_setSw_Main
  6015 ;; This function uses a non-reentrant model
  6016 ;;
  6017                           
  6018                           
  6019                           ;psect for function _Sw_DimmerAdjFunc
  6020  1083                     _Sw_DimmerAdjFunc:	
  6021                           
  6022                           ;incstack = 0
  6023                           ; Regs used in _Sw_DimmerAdjFunc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6024                           ;Sw_DimmerAdjFunc@sw stored from wreg
  6025  1083  0020               	movlb	0	; select bank0
  6026  1084  00A5               	movwf	Sw_DimmerAdjFunc@sw
  6027                           
  6028                           ;Switch_B1.c: 337: char Idle=1;
  6029  1085  01A4               	clrf	Sw_DimmerAdjFunc@Idle
  6030  1086  0AA4               	incf	Sw_DimmerAdjFunc@Idle,f
  6031                           
  6032                           ;Switch_B1.c: 354: if(sw == 1)
  6033  1087  0825               	movf	Sw_DimmerAdjFunc@sw,w
  6034  1088  3A01               	xorlw	1
  6035  1089  1D03               	skipz
  6036  108A  288D               	goto	l9004
  6037                           
  6038                           ;Switch_B1.c: 355: {
  6039                           ;Switch_B1.c: 356: Idle=(DimmerLights22->AdjGo)?0:1;
  6040  108B  086C               	movf	_DimmerLights22,w
  6041  108C  2892               	goto	L3
  6042  108D                     l9004:	
  6043                           ;Switch_B1.c: 357: }
  6044                           
  6045                           
  6046                           ;Switch_B1.c: 358: else if(sw == 2)
  6047  108D  0825               	movf	Sw_DimmerAdjFunc@sw,w
  6048  108E  3A02               	xorlw	2
  6049  108F  1D03               	skipz
  6050  1090  289D               	goto	l9008
  6051                           
  6052                           ;Switch_B1.c: 359: {
  6053                           ;Switch_B1.c: 360: Idle=(DimmerLights11->AdjGo)?0:1;
  6054  1091  086B               	movf	_DimmerLights11,w
  6055  1092                     L3:	
  6056  1092  3E09               	addlw	9
  6057  1093  0086               	movwf	6
  6058  1094  3001               	movlw	1	; select bank2/3
  6059  1095  0087               	movwf	7
  6060  1096  1003               	clrc
  6061  1097  1D01               	btfss	1,2
  6062  1098  1403               	setc
  6063  1099  3000               	movlw	0
  6064  109A  1803               	btfsc	3,0
  6065  109B  3001               	movlw	1
  6066  109C  00A4               	movwf	Sw_DimmerAdjFunc@Idle
  6067  109D                     l9008:	
  6068                           
  6069                           ;Switch_B1.c: 361: }
  6070                           ;Switch_B1.c: 364: if(Idle)
  6071  109D  0824               	movf	Sw_DimmerAdjFunc@Idle,w
  6072  109E  1903               	btfsc	3,2
  6073  109F  0008               	return
  6074                           
  6075                           ;Switch_B1.c: 365: {
  6076                           ;Switch_B1.c: 366: if(Sw->Flag)
  6077  10A0  0878               	movf	_Sw,w
  6078  10A1  0086               	movwf	6
  6079  10A2  3001               	movlw	1	; select bank2/3
  6080  10A3  0087               	movwf	7
  6081  10A4  1F81               	btfss	1,7
  6082  10A5  0008               	return
  6083                           
  6084                           ;Switch_B1.c: 367: {
  6085                           ;Switch_B1.c: 368: Sw->Adj=1;
  6086  10A6  0A78               	incf	_Sw,w
  6087  10A7  0086               	movwf	6
  6088  10A8  3001               	movlw	1	; select bank2/3
  6089  10A9  0087               	movwf	7
  6090  10AA  1401               	bsf	1,0
  6091                           
  6092                           ;Switch_B1.c: 369: Sw->Status=1;
  6093  10AB  0878               	movf	_Sw,w
  6094  10AC  0086               	movwf	6
  6095  10AD  3001               	movlw	1	; select bank2/3
  6096  10AE  0087               	movwf	7
  6097  10AF  1701               	bsf	1,6
  6098                           
  6099                           ;Switch_B1.c: 370: setRFSW_Status(sw,1);
  6100  10B0  01A2               	clrf	setRFSW_Status@command
  6101  10B1  0AA2               	incf	setRFSW_Status@command,f
  6102  10B2  0825               	movf	Sw_DimmerAdjFunc@sw,w
  6103  10B3  319A  223D  3190   	fcall	_setRFSW_Status
  6104                           
  6105                           ;Switch_B1.c: 372: setDimmerLights_TriggerAdj(sw,1);
  6106  10B6  0020               	movlb	0	; select bank0
  6107  10B7  01A2               	clrf	setDimmerLights_TriggerAdj@command
  6108  10B8  0AA2               	incf	setDimmerLights_TriggerAdj@command,f
  6109  10B9  0825               	movf	Sw_DimmerAdjFunc@sw,w
  6110  10BA  319A  22AB  3190   	fcall	_setDimmerLights_TriggerAdj
  6111                           
  6112                           ;Switch_B1.c: 373: setDimmerLights_AdjGo(sw,1);
  6113  10BD  0020               	movlb	0	; select bank0
  6114  10BE  01A2               	clrf	setDimmerLights_AdjGo@command
  6115  10BF  0AA2               	incf	setDimmerLights_AdjGo@command,f
  6116  10C0  0825               	movf	Sw_DimmerAdjFunc@sw,w
  6117  10C1  319A  229B         	fcall	_setDimmerLights_AdjGo
  6118  10C3  0020               	movlb	0	; select bank0
  6119  10C4  0008               	return
  6120  10C5                     __end_of_Sw_DimmerAdjFunc:	
  6121                           
  6122                           	psect	text16
  6123  1AAB                     __ptext16:	
  6124 ;; *************** function _setDimmerLights_TriggerAdj *****************
  6125 ;; Defined at:
  6126 ;;		line 450 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
  6127 ;; Parameters:    Size  Location     Type
  6128 ;;  lights          1    wreg     unsigned char 
  6129 ;;  command         1    2[BANK0 ] unsigned char 
  6130 ;; Auto vars:     Size  Location     Type
  6131 ;;  lights          1    3[BANK0 ] unsigned char 
  6132 ;; Return value:  Size  Location     Type
  6133 ;;		None               void
  6134 ;; Registers used:
  6135 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6136 ;; Tracked objects:
  6137 ;;		On entry : 0/0
  6138 ;;		On exit  : 0/0
  6139 ;;		Unchanged: 0/0
  6140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6141 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6142 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6144 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6145 ;;Total ram usage:        2 bytes
  6146 ;; Hardware stack levels used:    1
  6147 ;; Hardware stack levels required when called:    5
  6148 ;; This function calls:
  6149 ;;		_DimmerLightsPointSelect
  6150 ;; This function is called by:
  6151 ;;		_Sw_DimmerOffFunc
  6152 ;;		_Sw_DimmerAdjFunc
  6153 ;; This function uses a non-reentrant model
  6154 ;;
  6155                           
  6156                           
  6157                           ;psect for function _setDimmerLights_TriggerAdj
  6158  1AAB                     _setDimmerLights_TriggerAdj:	
  6159                           
  6160                           ;incstack = 0
  6161                           ; Regs used in _setDimmerLights_TriggerAdj: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  6162                           ;setDimmerLights_TriggerAdj@lights stored from wreg
  6163  1AAB  0020               	movlb	0	; select bank0
  6164  1AAC  00A3               	movwf	setDimmerLights_TriggerAdj@lights
  6165                           
  6166                           ;Dimmer_B1.c: 452: DimmerLightsPointSelect(lights);
  6167  1AAD  0823               	movf	setDimmerLights_TriggerAdj@lights,w
  6168  1AAE  319A  22CC         	fcall	_DimmerLightsPointSelect
  6169                           
  6170                           ;Dimmer_B1.c: 453: DimmerLights->TriggerAdj=command;
  6171  1AB0  0020               	movlb	0	; select bank0
  6172  1AB1  086A               	movf	_DimmerLights,w
  6173  1AB2  3E09               	addlw	9
  6174  1AB3  0086               	movwf	6
  6175  1AB4  3001               	movlw	1	; select bank2/3
  6176  1AB5  0087               	movwf	7
  6177  1AB6  0822               	movf	setDimmerLights_TriggerAdj@command,w
  6178  1AB7  1181               	bcf	1,3
  6179  1AB8  1D03               	skipz
  6180  1AB9  1581               	bsf	1,3
  6181  1ABA  0008               	return
  6182  1ABB                     __end_of_setDimmerLights_TriggerAdj:	
  6183                           
  6184                           	psect	text17
  6185  1A9B                     __ptext17:	
  6186 ;; *************** function _setDimmerLights_AdjGo *****************
  6187 ;; Defined at:
  6188 ;;		line 440 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
  6189 ;; Parameters:    Size  Location     Type
  6190 ;;  lights          1    wreg     unsigned char 
  6191 ;;  command         1    2[BANK0 ] unsigned char 
  6192 ;; Auto vars:     Size  Location     Type
  6193 ;;  lights          1    3[BANK0 ] unsigned char 
  6194 ;; Return value:  Size  Location     Type
  6195 ;;		None               void
  6196 ;; Registers used:
  6197 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6198 ;; Tracked objects:
  6199 ;;		On entry : 0/0
  6200 ;;		On exit  : 0/0
  6201 ;;		Unchanged: 0/0
  6202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6203 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6204 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6205 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6206 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6207 ;;Total ram usage:        2 bytes
  6208 ;; Hardware stack levels used:    1
  6209 ;; Hardware stack levels required when called:    5
  6210 ;; This function calls:
  6211 ;;		_DimmerLightsPointSelect
  6212 ;; This function is called by:
  6213 ;;		_Sw_DimmerOffFunc
  6214 ;;		_Sw_DimmerAdjFunc
  6215 ;; This function uses a non-reentrant model
  6216 ;;
  6217                           
  6218                           
  6219                           ;psect for function _setDimmerLights_AdjGo
  6220  1A9B                     _setDimmerLights_AdjGo:	
  6221                           
  6222                           ;incstack = 0
  6223                           ; Regs used in _setDimmerLights_AdjGo: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  6224                           ;setDimmerLights_AdjGo@lights stored from wreg
  6225  1A9B  0020               	movlb	0	; select bank0
  6226  1A9C  00A3               	movwf	setDimmerLights_AdjGo@lights
  6227                           
  6228                           ;Dimmer_B1.c: 442: DimmerLightsPointSelect(lights);
  6229  1A9D  0823               	movf	setDimmerLights_AdjGo@lights,w
  6230  1A9E  319A  22CC         	fcall	_DimmerLightsPointSelect
  6231                           
  6232                           ;Dimmer_B1.c: 443: DimmerLights->AdjGo=command;
  6233  1AA0  0020               	movlb	0	; select bank0
  6234  1AA1  086A               	movf	_DimmerLights,w
  6235  1AA2  3E09               	addlw	9
  6236  1AA3  0086               	movwf	6
  6237  1AA4  3001               	movlw	1	; select bank2/3
  6238  1AA5  0087               	movwf	7
  6239  1AA6  0822               	movf	setDimmerLights_AdjGo@command,w
  6240  1AA7  1101               	bcf	1,2
  6241  1AA8  1D03               	skipz
  6242  1AA9  1501               	bsf	1,2
  6243  1AAA  0008               	return
  6244  1AAB                     __end_of_setDimmerLights_AdjGo:	
  6245                           
  6246                           	psect	text18
  6247  1A14                     __ptext18:	
  6248 ;; *************** function _Switch_Initialization *****************
  6249 ;; Defined at:
  6250 ;;		line 38 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Switch_B1.c"
  6251 ;; Parameters:    Size  Location     Type
  6252 ;;		None
  6253 ;; Auto vars:     Size  Location     Type
  6254 ;;		None
  6255 ;; Return value:  Size  Location     Type
  6256 ;;		None               void
  6257 ;; Registers used:
  6258 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6259 ;; Tracked objects:
  6260 ;;		On entry : 0/0
  6261 ;;		On exit  : 0/0
  6262 ;;		Unchanged: 0/0
  6263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6264 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6265 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6267 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6268 ;;Total ram usage:        0 bytes
  6269 ;; Hardware stack levels used:    1
  6270 ;; Hardware stack levels required when called:    7
  6271 ;; This function calls:
  6272 ;;		_TouchPower
  6273 ;;		_setSw_Initialization
  6274 ;; This function is called by:
  6275 ;;		_main
  6276 ;; This function uses a non-reentrant model
  6277 ;;
  6278                           
  6279                           
  6280                           ;psect for function _Switch_Initialization
  6281  1A14                     _Switch_Initialization:	
  6282                           
  6283                           ;Switch_B1.c: 40: TouchPower();
  6284                           
  6285                           ;incstack = 0
  6286                           ; Regs used in _Switch_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  6287  1A14  3198  20F9  319A   	fcall	_TouchPower
  6288                           
  6289                           ;Switch_B1.c: 42: WPUB1=0;
  6290  1A17  0024               	movlb	4	; select bank4
  6291  1A18  108D               	bcf	13,1	;volatile
  6292                           
  6293                           ;Switch_B1.c: 51: setSw_Initialization(1);
  6294  1A19  3001               	movlw	1
  6295  1A1A  3199  213C  319A   	fcall	_setSw_Initialization
  6296                           
  6297                           ;Switch_B1.c: 54: setSw_Initialization(2);
  6298  1A1D  3002               	movlw	2
  6299  1A1E  3199  213C         	fcall	_setSw_Initialization
  6300  1A20  0008               	return
  6301  1A21                     __end_of_Switch_Initialization:	
  6302                           
  6303                           	psect	text19
  6304  193C                     __ptext19:	
  6305 ;; *************** function _setSw_Initialization *****************
  6306 ;; Defined at:
  6307 ;;		line 78 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Switch_B1.c"
  6308 ;; Parameters:    Size  Location     Type
  6309 ;;  sw              1    wreg     unsigned char 
  6310 ;; Auto vars:     Size  Location     Type
  6311 ;;  sw              1    4[BANK0 ] unsigned char 
  6312 ;; Return value:  Size  Location     Type
  6313 ;;		None               void
  6314 ;; Registers used:
  6315 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6316 ;; Tracked objects:
  6317 ;;		On entry : 0/0
  6318 ;;		On exit  : 0/0
  6319 ;;		Unchanged: 0/0
  6320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6321 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6322 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6324 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6325 ;;Total ram usage:        1 bytes
  6326 ;; Hardware stack levels used:    1
  6327 ;; Hardware stack levels required when called:    6
  6328 ;; This function calls:
  6329 ;;		_setLED
  6330 ;; This function is called by:
  6331 ;;		_Switch_Initialization
  6332 ;; This function uses a non-reentrant model
  6333 ;;
  6334                           
  6335                           
  6336                           ;psect for function _setSw_Initialization
  6337  193C                     _setSw_Initialization:	
  6338                           
  6339                           ;incstack = 0
  6340                           ; Regs used in _setSw_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6341                           ;setSw_Initialization@sw stored from wreg
  6342  193C  0020               	movlb	0	; select bank0
  6343  193D  00A4               	movwf	setSw_Initialization@sw
  6344                           
  6345                           ;Switch_B1.c: 80: setLED(sw,1);
  6346  193E  01A2               	clrf	setLED@command
  6347  193F  0AA2               	incf	setLED@command,f
  6348  1940  0824               	movf	setSw_Initialization@sw,w
  6349  1941  3193  2373         	fcall	_setLED
  6350  1943  0008               	return
  6351  1944                     __end_of_setSw_Initialization:	
  6352                           
  6353                           	psect	text20
  6354  18F9                     __ptext20:	
  6355 ;; *************** function _TouchPower *****************
  6356 ;; Defined at:
  6357 ;;		line 9 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Switch_B1.c"
  6358 ;; Parameters:    Size  Location     Type
  6359 ;;		None
  6360 ;; Auto vars:     Size  Location     Type
  6361 ;;		None
  6362 ;; Return value:  Size  Location     Type
  6363 ;;		None               void
  6364 ;; Registers used:
  6365 ;;		None
  6366 ;; Tracked objects:
  6367 ;;		On entry : 0/0
  6368 ;;		On exit  : 0/0
  6369 ;;		Unchanged: 0/0
  6370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6371 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6372 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6374 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6375 ;;Total ram usage:        0 bytes
  6376 ;; Hardware stack levels used:    1
  6377 ;; Hardware stack levels required when called:    4
  6378 ;; This function calls:
  6379 ;;		Nothing
  6380 ;; This function is called by:
  6381 ;;		_Switch_Initialization
  6382 ;; This function uses a non-reentrant model
  6383 ;;
  6384                           
  6385                           
  6386                           ;psect for function _TouchPower
  6387  18F9                     _TouchPower:	
  6388  18F9                     l2754:	
  6389                           ;Switch_B1.c: 11: while(!RC5)
  6390                           
  6391                           ;incstack = 0
  6392                           ; Regs used in _TouchPower: []
  6393                           
  6394  18F9  0020               	movlb	0	; select bank0
  6395  18FA  1A8E               	btfsc	14,5	;volatile
  6396  18FB  0008               	return
  6397                           
  6398                           ;Switch_B1.c: 12: RC5=1;
  6399  18FC  168E               	bsf	14,5	;volatile
  6400  18FD  28F9               	goto	l2754
  6401  18FE                     __end_of_TouchPower:	
  6402                           
  6403                           	psect	text21
  6404  18F5                     __ptext21:	
  6405 ;; *************** function _RF_Main *****************
  6406 ;; Defined at:
  6407 ;;		line 24 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
  6408 ;; Parameters:    Size  Location     Type
  6409 ;;		None
  6410 ;; Auto vars:     Size  Location     Type
  6411 ;;		None
  6412 ;; Return value:  Size  Location     Type
  6413 ;;		None               void
  6414 ;; Registers used:
  6415 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6416 ;; Tracked objects:
  6417 ;;		On entry : 0/0
  6418 ;;		On exit  : 0/0
  6419 ;;		Unchanged: 0/0
  6420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6421 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6422 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6424 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6425 ;;Total ram usage:        0 bytes
  6426 ;; Hardware stack levels used:    1
  6427 ;; Hardware stack levels required when called:   13
  6428 ;; This function calls:
  6429 ;;		_setRF_Main
  6430 ;; This function is called by:
  6431 ;;		_main
  6432 ;; This function uses a non-reentrant model
  6433 ;;
  6434                           
  6435                           
  6436                           ;psect for function _RF_Main
  6437  18F5                     _RF_Main:	
  6438                           
  6439                           ;RF_Control_B1.c: 27: setRF_Main(1);
  6440                           
  6441                           ;incstack = 0
  6442                           ; Regs used in _RF_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6443  18F5  3001               	movlw	1
  6444  18F6  318A  226E         	fcall	_setRF_Main
  6445  18F8  0008               	return
  6446  18F9                     __end_of_RF_Main:	
  6447                           
  6448                           	psect	text22
  6449  0A6E                     __ptext22:	
  6450 ;; *************** function _setRF_Main *****************
  6451 ;; Defined at:
  6452 ;;		line 58 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
  6453 ;; Parameters:    Size  Location     Type
  6454 ;;  rf              1    wreg     unsigned char 
  6455 ;; Auto vars:     Size  Location     Type
  6456 ;;  rf              1    2[BANK1 ] unsigned char 
  6457 ;; Return value:  Size  Location     Type
  6458 ;;		None               void
  6459 ;; Registers used:
  6460 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6461 ;; Tracked objects:
  6462 ;;		On entry : 0/0
  6463 ;;		On exit  : 0/0
  6464 ;;		Unchanged: 0/0
  6465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6466 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6467 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6468 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6469 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  6470 ;;Total ram usage:        3 bytes
  6471 ;; Hardware stack levels used:    1
  6472 ;; Hardware stack levels required when called:   12
  6473 ;; This function calls:
  6474 ;;		_CC2500_RxData
  6475 ;;		_CC2500_TxData
  6476 ;;		_CC2500_WriteCommand
  6477 ;;		_RF_RxDisable
  6478 ;;		_RfPointSelect
  6479 ;;		_getRxData
  6480 ;;		_setINT_GO
  6481 ;; This function is called by:
  6482 ;;		_RF_Main
  6483 ;; This function uses a non-reentrant model
  6484 ;;
  6485                           
  6486                           
  6487                           ;psect for function _setRF_Main
  6488  0A6E                     _setRF_Main:	
  6489                           
  6490                           ;incstack = 0
  6491                           ; Regs used in _setRF_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6492                           ;setRF_Main@rf stored from wreg
  6493  0A6E  0021               	movlb	1	; select bank1
  6494  0A6F  00EC               	movwf	setRF_Main@rf^(0+128)
  6495                           
  6496                           ;RF_Control_B1.c: 60: RfPointSelect(rf);
  6497  0A70  086C               	movf	setRF_Main@rf^(0+128),w
  6498  0A71  3199  2186  318A   	fcall	_RfPointSelect
  6499                           
  6500                           ;RF_Control_B1.c: 61: if(RF->Enable)
  6501  0A74  0877               	movf	_RF,w
  6502  0A75  0086               	movwf	6
  6503  0A76  0187               	clrf	7
  6504  0A77  1C01               	btfss	1,0
  6505  0A78  0008               	return
  6506                           
  6507                           ;RF_Control_B1.c: 62: {
  6508                           ;RF_Control_B1.c: 69: RF->Key=((RA6 || RA4 || RA0 || RB1 ) && !RF->Learn)?1:0;
  6509  0A79  0021               	movlb	1	; select bank1
  6510  0A7A  01ED               	clrf	_setRF_Main$3848^(0+128)
  6511  0A7B  0020               	movlb	0	; select bank0
  6512  0A7C  1F0C               	btfss	12,6	;volatile
  6513  0A7D  1A0C               	btfsc	12,4	;volatile
  6514  0A7E  2A83               	goto	l9434
  6515  0A7F  180C               	btfsc	12,0	;volatile
  6516  0A80  2A83               	goto	l9434
  6517  0A81  1C8D               	btfss	13,1	;volatile
  6518  0A82  2A8B               	goto	l9438
  6519  0A83                     l9434:	
  6520  0A83  0877               	movf	_RF,w
  6521  0A84  0086               	movwf	6
  6522  0A85  0187               	clrf	7
  6523  0A86  1B01               	btfsc	1,6
  6524  0A87  2A8B               	goto	l9438
  6525  0A88  0021               	movlb	1	; select bank1
  6526  0A89  01ED               	clrf	_setRF_Main$3848^(0+128)
  6527  0A8A  0AED               	incf	_setRF_Main$3848^(0+128),f
  6528  0A8B                     l9438:	
  6529  0A8B  0877               	movf	_RF,w
  6530  0A8C  0086               	movwf	6
  6531  0A8D  0187               	clrf	7
  6532  0A8E  0021               	movlb	1	; select bank1
  6533  0A8F  086D               	movf	_setRF_Main$3848^(0+128),w
  6534  0A90  1381               	bcf	1,7
  6535  0A91  1D03               	skipz
  6536  0A92  1781               	bsf	1,7
  6537                           
  6538                           ;RF_Control_B1.c: 77: if(!RF->Key)
  6539  0A93  0877               	movf	_RF,w
  6540  0A94  0086               	movwf	6
  6541  0A95  0187               	clrf	7
  6542  0A96  1B81               	btfsc	1,7
  6543  0A97  2AC4               	goto	l9460
  6544                           
  6545                           ;RF_Control_B1.c: 78: {
  6546                           ;RF_Control_B1.c: 79: if(RF->ReceiveGO)
  6547  0A98  0877               	movf	_RF,w
  6548  0A99  0086               	movwf	6
  6549  0A9A  0187               	clrf	7
  6550  0A9B  1C81               	btfss	1,1
  6551  0A9C  2AA9               	goto	l9448
  6552                           
  6553                           ;RF_Control_B1.c: 80: {
  6554                           ;RF_Control_B1.c: 81: RF->ReceiveGO=0;
  6555  0A9D  0877               	movf	_RF,w
  6556  0A9E  0086               	movwf	6
  6557  0A9F  0187               	clrf	7
  6558  0AA0  1081               	bcf	1,1
  6559                           
  6560                           ;RF_Control_B1.c: 82: CC2500_RxData();
  6561  0AA1  3194  2432  318A   	fcall	_CC2500_RxData
  6562                           
  6563                           ;RF_Control_B1.c: 89: getRxData(1);
  6564  0AA4  3001               	movlw	1
  6565  0AA5  3192  226E  318A   	fcall	_getRxData
  6566                           
  6567                           ;RF_Control_B1.c: 92: }
  6568  0AA8  2AC8               	goto	l9462
  6569  0AA9                     l9448:	
  6570                           
  6571                           ;RF_Control_B1.c: 93: else
  6572                           ;RF_Control_B1.c: 94: {
  6573                           ;RF_Control_B1.c: 95: if(!RF->TransceiveGO)
  6574  0AA9  0877               	movf	_RF,w
  6575  0AAA  0086               	movwf	6
  6576  0AAB  0187               	clrf	7
  6577  0AAC  1901               	btfsc	1,2
  6578  0AAD  2AC8               	goto	l9462
  6579                           
  6580                           ;RF_Control_B1.c: 96: {
  6581                           ;RF_Control_B1.c: 98: if(!RF->RxStatus)
  6582  0AAE  0877               	movf	_RF,w
  6583  0AAF  0086               	movwf	6
  6584  0AB0  0187               	clrf	7
  6585  0AB1  1981               	btfsc	1,3
  6586  0AB2  2AC8               	goto	l9462
  6587                           
  6588                           ;RF_Control_B1.c: 99: {
  6589                           ;RF_Control_B1.c: 100: RF->RxStatus=1;
  6590  0AB3  0877               	movf	_RF,w
  6591  0AB4  0086               	movwf	6
  6592  0AB5  0187               	clrf	7
  6593  0AB6  1581               	bsf	1,3
  6594                           
  6595                           ;RF_Control_B1.c: 101: CC2500_WriteCommand(0x36);
  6596  0AB7  3036               	movlw	54
  6597  0AB8  319A  225B  318A   	fcall	_CC2500_WriteCommand
  6598                           
  6599                           ;RF_Control_B1.c: 102: CC2500_WriteCommand(0x34);
  6600  0ABB  3034               	movlw	52
  6601  0ABC  319A  225B  318A   	fcall	_CC2500_WriteCommand
  6602                           
  6603                           ;RF_Control_B1.c: 103: setINT_GO(1);
  6604  0ABF  3001               	movlw	1
  6605  0AC0  3199  215D  318A   	fcall	_setINT_GO
  6606                           
  6607                           ;RF_Control_B1.c: 104: }
  6608                           ;RF_Control_B1.c: 106: }
  6609                           ;RF_Control_B1.c: 107: }
  6610                           ;RF_Control_B1.c: 108: }
  6611  0AC3  2AC8               	goto	l9462
  6612  0AC4                     l9460:	
  6613                           
  6614                           ;RF_Control_B1.c: 109: else
  6615                           ;RF_Control_B1.c: 110: {
  6616                           ;RF_Control_B1.c: 111: RF_RxDisable(1);
  6617  0AC4  3001               	movlw	1
  6618  0AC5  319D  2582  318A   	fcall	_RF_RxDisable
  6619  0AC8                     l9462:	
  6620                           
  6621                           ;RF_Control_B1.c: 112: }
  6622                           ;RF_Control_B1.c: 113: if(RF->TransceiveGO)
  6623  0AC8  0877               	movf	_RF,w
  6624  0AC9  0086               	movwf	6
  6625  0ACA  0187               	clrf	7
  6626  0ACB  1D01               	btfss	1,2
  6627  0ACC  0008               	return
  6628                           
  6629                           ;RF_Control_B1.c: 114: {
  6630                           ;RF_Control_B1.c: 115: RF_RxDisable(1);
  6631  0ACD  3001               	movlw	1
  6632  0ACE  319D  2582  318A   	fcall	_RF_RxDisable
  6633                           
  6634                           ;RF_Control_B1.c: 116: if(!RF->Debounce)
  6635  0AD1  0877               	movf	_RF,w
  6636  0AD2  0086               	movwf	6
  6637  0AD3  0187               	clrf	7
  6638  0AD4  1A81               	btfsc	1,5
  6639  0AD5  2AEE               	goto	l9476
  6640                           
  6641                           ;RF_Control_B1.c: 117: {
  6642                           ;RF_Control_B1.c: 118: RF->DebounceTime++;
  6643  0AD6  3001               	movlw	1
  6644  0AD7  0021               	movlb	1	; select bank1
  6645  0AD8  00EB               	movwf	??_setRF_Main^(0+128)
  6646  0AD9  0A77               	incf	_RF,w
  6647  0ADA  0086               	movwf	6
  6648  0ADB  0187               	clrf	7
  6649  0ADC  086B               	movf	??_setRF_Main^(0+128),w
  6650  0ADD  0781               	addwf	1,f
  6651                           
  6652                           ;RF_Control_B1.c: 119: if(RF->DebounceTime == 25)
  6653  0ADE  0A77               	incf	_RF,w
  6654  0ADF  0086               	movwf	6
  6655  0AE0  0187               	clrf	7
  6656  0AE1  0801               	movf	1,w
  6657  0AE2  3A19               	xorlw	25
  6658  0AE3  1D03               	skipz
  6659  0AE4  0008               	return
  6660                           
  6661                           ;RF_Control_B1.c: 120: {
  6662                           ;RF_Control_B1.c: 121: RF->DebounceTime=0;
  6663  0AE5  0A77               	incf	_RF,w
  6664  0AE6  0086               	movwf	6
  6665  0AE7  0187               	clrf	7
  6666  0AE8  0181               	clrf	1
  6667                           
  6668                           ;RF_Control_B1.c: 122: RF->Debounce=1;
  6669  0AE9  0877               	movf	_RF,w
  6670  0AEA  0086               	movwf	6
  6671  0AEB  0187               	clrf	7
  6672  0AEC  1681               	bsf	1,5
  6673                           
  6674                           ;RF_Control_B1.c: 123: }
  6675                           ;RF_Control_B1.c: 124: }
  6676  0AED  0008               	return
  6677  0AEE                     l9476:	
  6678                           
  6679                           ;RF_Control_B1.c: 125: else
  6680                           ;RF_Control_B1.c: 126: {
  6681                           ;RF_Control_B1.c: 127: RF->Debounce=0;
  6682  0AEE  0877               	movf	_RF,w
  6683  0AEF  0086               	movwf	6
  6684  0AF0  0187               	clrf	7
  6685  0AF1  1281               	bcf	1,5
  6686                           
  6687                           ;RF_Control_B1.c: 128: RF->TransceiveGO=0;
  6688  0AF2  0877               	movf	_RF,w
  6689  0AF3  0086               	movwf	6
  6690  0AF4  0187               	clrf	7
  6691  0AF5  1101               	bcf	1,2
  6692                           
  6693                           ;RF_Control_B1.c: 129: CC2500_TxData();
  6694  0AF6  3191  2107         	fcall	_CC2500_TxData
  6695  0AF8  0008               	return
  6696  0AF9                     __end_of_setRF_Main:	
  6697                           
  6698                           	psect	text23
  6699  126E                     __ptext23:	
  6700 ;; *************** function _getRxData *****************
  6701 ;; Defined at:
  6702 ;;		line 215 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
  6703 ;; Parameters:    Size  Location     Type
  6704 ;;  rf              1    wreg     unsigned char 
  6705 ;; Auto vars:     Size  Location     Type
  6706 ;;  rf              1    0[BANK1 ] unsigned char 
  6707 ;;  i               1    0        unsigned char 
  6708 ;; Return value:  Size  Location     Type
  6709 ;;		None               void
  6710 ;; Registers used:
  6711 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6712 ;; Tracked objects:
  6713 ;;		On entry : 0/0
  6714 ;;		On exit  : 0/0
  6715 ;;		Unchanged: 0/0
  6716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6717 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6718 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6719 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6720 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6721 ;;Total ram usage:        1 bytes
  6722 ;; Hardware stack levels used:    1
  6723 ;; Hardware stack levels required when called:   11
  6724 ;; This function calls:
  6725 ;;		_RfPointSelect
  6726 ;;		_setControl_Lights_Table
  6727 ;;		_setLog_Code
  6728 ;; This function is called by:
  6729 ;;		_setRF_Main
  6730 ;; This function uses a non-reentrant model
  6731 ;;
  6732                           
  6733                           
  6734                           ;psect for function _getRxData
  6735  126E                     _getRxData:	
  6736                           
  6737                           ;incstack = 0
  6738                           ; Regs used in _getRxData: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6739                           ;getRxData@rf stored from wreg
  6740  126E  0021               	movlb	1	; select bank1
  6741  126F  00EA               	movwf	getRxData@rf^(0+128)
  6742                           
  6743                           ;RF_Control_B1.c: 217: unsigned char i;
  6744                           ;RF_Control_B1.c: 218: RfPointSelect(rf);
  6745  1270  086A               	movf	getRxData@rf^(0+128),w
  6746  1271  3199  2186  3192   	fcall	_RfPointSelect
  6747                           
  6748                           ;RF_Control_B1.c: 219: if(RF->Learn)
  6749  1274  0877               	movf	_RF,w
  6750  1275  0086               	movwf	6
  6751  1276  0187               	clrf	7
  6752  1277  1F01               	btfss	1,6
  6753  1278  2A85               	goto	l8918
  6754                           
  6755                           ;RF_Control_B1.c: 220: {
  6756                           ;RF_Control_B1.c: 221: if(RF_Data[0] == 0x0 && RF_Data[1] == 0x64)
  6757  1279  0021               	movlb	1	; select bank1
  6758  127A  08A0               	movf	_RF_Data^(0+128),f
  6759  127B  1D03               	skipz
  6760  127C  0008               	return
  6761  127D  0821               	movf	(_RF_Data^(0+128)+1),w
  6762  127E  3A64               	xorlw	100
  6763  127F  1D03               	skipz
  6764  1280  0008               	return
  6765                           
  6766                           ;RF_Control_B1.c: 222: {
  6767                           ;RF_Control_B1.c: 223: setLog_Code(1);
  6768  1281  3001               	movlw	1
  6769  1282  3191  21D6         	fcall	_setLog_Code
  6770                           
  6771                           ;RF_Control_B1.c: 224: }
  6772                           ;RF_Control_B1.c: 225: }
  6773  1284  0008               	return
  6774  1285                     l8918:	
  6775                           
  6776                           ;RF_Control_B1.c: 226: else
  6777                           ;RF_Control_B1.c: 227: {
  6778                           ;RF_Control_B1.c: 228: if(RF_Data[0] == 0x00 && RF_Data[1] == 0x02)
  6779  1285  0021               	movlb	1	; select bank1
  6780  1286  08A0               	movf	_RF_Data^(0+128),f
  6781  1287  1D03               	skipz
  6782  1288  0008               	return
  6783  1289  0821               	movf	(_RF_Data^(0+128)+1),w
  6784  128A  3A02               	xorlw	2
  6785  128B  1D03               	skipz
  6786  128C  0008               	return
  6787                           
  6788                           ;RF_Control_B1.c: 229: {
  6789                           ;RF_Control_B1.c: 230: if(RF_Data[12] == 0xff && RF_Data[13] == 0xff && RF_Data[14] == 0
      +                          xff)
  6790  128D  082C               	movf	(_RF_Data^(0+128)+12),w
  6791  128E  3AFF               	xorlw	255
  6792  128F  1D03               	skipz
  6793  1290  2A9B               	goto	l8930
  6794  1291  082D               	movf	(_RF_Data^(0+128)+13),w
  6795  1292  3AFF               	xorlw	255
  6796  1293  1D03               	skipz
  6797  1294  2A9B               	goto	l8930
  6798  1295  082E               	movf	(_RF_Data^(0+128)+14),w
  6799  1296  3AFF               	xorlw	255
  6800  1297  1D03               	skipz
  6801  1298  2A9B               	goto	l8930
  6802                           
  6803                           ;RF_Control_B1.c: 231: {
  6804                           ;RF_Control_B1.c: 232: __nop();
  6805  1299  0000               	nop
  6806                           
  6807                           ;RF_Control_B1.c: 233: }
  6808  129A  0008               	return
  6809  129B                     l8930:	
  6810                           
  6811                           ;RF_Control_B1.c: 234: else
  6812                           ;RF_Control_B1.c: 235: {
  6813                           ;RF_Control_B1.c: 236: if(RF_Data[12] == Product->Data[12] && RF_Data[13] == Product->Da
      +                          ta[13] && RF_Data[14] == Product->Data[14])
  6814  129B  0020               	movlb	0	; select bank0
  6815  129C  086E               	movf	_Product,w
  6816  129D  3E0C               	addlw	12
  6817  129E  0086               	movwf	6
  6818  129F  3001               	movlw	1	; select bank2/3
  6819  12A0  0087               	movwf	7
  6820  12A1  0021               	movlb	1	; select bank1
  6821  12A2  082C               	movf	(_RF_Data^(0+128)+12),w
  6822  12A3  0601               	xorwf	1,w
  6823  12A4  1D03               	skipz
  6824  12A5  0008               	return
  6825  12A6  0020               	movlb	0	; select bank0
  6826  12A7  086E               	movf	_Product,w
  6827  12A8  3E0D               	addlw	13
  6828  12A9  0086               	movwf	6
  6829  12AA  3001               	movlw	1	; select bank2/3
  6830  12AB  0087               	movwf	7
  6831  12AC  0021               	movlb	1	; select bank1
  6832  12AD  082D               	movf	(_RF_Data^(0+128)+13),w
  6833  12AE  0601               	xorwf	1,w
  6834  12AF  1D03               	skipz
  6835  12B0  0008               	return
  6836  12B1  0020               	movlb	0	; select bank0
  6837  12B2  086E               	movf	_Product,w
  6838  12B3  3E0E               	addlw	14
  6839  12B4  0086               	movwf	6
  6840  12B5  3001               	movlw	1	; select bank2/3
  6841  12B6  0087               	movwf	7
  6842  12B7  0021               	movlb	1	; select bank1
  6843  12B8  082E               	movf	(_RF_Data^(0+128)+14),w
  6844  12B9  0601               	xorwf	1,w
  6845  12BA  1D03               	skipz
  6846  12BB  0008               	return
  6847                           
  6848                           ;RF_Control_B1.c: 237: {
  6849                           ;RF_Control_B1.c: 238: setControl_Lights_Table(1);
  6850  12BC  3001               	movlw	1
  6851  12BD  318B  2389         	fcall	_setControl_Lights_Table
  6852                           
  6853                           ;RF_Control_B1.c: 247: {
  6854                           ;RF_Control_B1.c: 248: ;
  6855                           
  6856                           ;RF_Control_B1.c: 243: {
  6857                           ;RF_Control_B1.c: 244: ;
  6858                           ;RF_Control_B1.c: 245: }
  6859                           
  6860                           ;RF_Control_B1.c: 239: }
  6861                           ;RF_Control_B1.c: 240: }
  6862                           ;RF_Control_B1.c: 241: }
  6863  12BF  0008               	return
  6864  12C0                     __end_of_getRxData:	
  6865                           
  6866                           	psect	text24
  6867  11D6                     __ptext24:	
  6868 ;; *************** function _setLog_Code *****************
  6869 ;; Defined at:
  6870 ;;		line 257 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
  6871 ;; Parameters:    Size  Location     Type
  6872 ;;  rf              1    wreg     unsigned char 
  6873 ;; Auto vars:     Size  Location     Type
  6874 ;;  rf              1   11[BANK0 ] unsigned char 
  6875 ;; Return value:  Size  Location     Type
  6876 ;;		None               void
  6877 ;; Registers used:
  6878 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6879 ;; Tracked objects:
  6880 ;;		On entry : 0/0
  6881 ;;		On exit  : 0/0
  6882 ;;		Unchanged: 0/0
  6883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6885 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6886 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6887 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6888 ;;Total ram usage:        2 bytes
  6889 ;; Hardware stack levels used:    1
  6890 ;; Hardware stack levels required when called:    6
  6891 ;; This function calls:
  6892 ;;		_RfPointSelect
  6893 ;;		_setBuz
  6894 ;; This function is called by:
  6895 ;;		_getRxData
  6896 ;; This function uses a non-reentrant model
  6897 ;;
  6898                           
  6899                           
  6900                           ;psect for function _setLog_Code
  6901  11D6                     _setLog_Code:	
  6902                           
  6903                           ;incstack = 0
  6904                           ; Regs used in _setLog_Code: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6905                           ;setLog_Code@rf stored from wreg
  6906  11D6  0020               	movlb	0	; select bank0
  6907  11D7  00AB               	movwf	setLog_Code@rf
  6908                           
  6909                           ;RF_Control_B1.c: 259: RfPointSelect(rf);
  6910  11D8  082B               	movf	setLog_Code@rf,w
  6911  11D9  3199  2186  3191   	fcall	_RfPointSelect
  6912                           
  6913                           ;RF_Control_B1.c: 260: Product->Data[12]=RF_Data[12];
  6914  11DC  0021               	movlb	1	; select bank1
  6915  11DD  082C               	movf	(_RF_Data^(0+128)+12),w
  6916  11DE  0020               	movlb	0	; select bank0
  6917  11DF  00AA               	movwf	??_setLog_Code
  6918  11E0  086E               	movf	_Product,w
  6919  11E1  3E0C               	addlw	12
  6920  11E2  0086               	movwf	6
  6921  11E3  3001               	movlw	1	; select bank2/3
  6922  11E4  0087               	movwf	7
  6923  11E5  082A               	movf	??_setLog_Code,w
  6924  11E6  0081               	movwf	1
  6925                           
  6926                           ;RF_Control_B1.c: 261: Product->Data[13]=RF_Data[13];
  6927  11E7  0021               	movlb	1	; select bank1
  6928  11E8  082D               	movf	(_RF_Data^(0+128)+13),w
  6929  11E9  0020               	movlb	0	; select bank0
  6930  11EA  00AA               	movwf	??_setLog_Code
  6931  11EB  086E               	movf	_Product,w
  6932  11EC  3E0D               	addlw	13
  6933  11ED  0086               	movwf	6
  6934  11EE  3001               	movlw	1	; select bank2/3
  6935  11EF  0087               	movwf	7
  6936  11F0  082A               	movf	??_setLog_Code,w
  6937  11F1  0081               	movwf	1
  6938                           
  6939                           ;RF_Control_B1.c: 262: Product->Data[14]=RF_Data[14];
  6940  11F2  0021               	movlb	1	; select bank1
  6941  11F3  082E               	movf	(_RF_Data^(0+128)+14),w
  6942  11F4  0020               	movlb	0	; select bank0
  6943  11F5  00AA               	movwf	??_setLog_Code
  6944  11F6  086E               	movf	_Product,w
  6945  11F7  3E0E               	addlw	14
  6946  11F8  0086               	movwf	6
  6947  11F9  3001               	movlw	1	; select bank2/3
  6948  11FA  0087               	movwf	7
  6949  11FB  082A               	movf	??_setLog_Code,w
  6950  11FC  0081               	movwf	1
  6951                           
  6952                           ;RF_Control_B1.c: 263: setBuz(1,100);
  6953  11FD  3064               	movlw	100
  6954  11FE  00A6               	movwf	setBuz@time
  6955  11FF  3000               	movlw	0
  6956  1200  00A7               	movwf	setBuz@time+1
  6957  1201  3001               	movlw	1
  6958  1202  3197  2789  3191   	fcall	_setBuz
  6959                           
  6960                           ;RF_Control_B1.c: 264: RF->Learn=0;
  6961  1205  0877               	movf	_RF,w
  6962  1206  0086               	movwf	6
  6963  1207  0187               	clrf	7
  6964  1208  1301               	bcf	1,6
  6965                           
  6966                           ;RF_Control_B1.c: 265: if(TMain->First)
  6967  1209  0020               	movlb	0	; select bank0
  6968  120A  086F               	movf	_TMain,w
  6969  120B  3E03               	addlw	3
  6970  120C  0086               	movwf	6
  6971  120D  3001               	movlw	1	; select bank2/3
  6972  120E  0087               	movwf	7
  6973  120F  1C81               	btfss	1,1
  6974  1210  2A17               	goto	l2544
  6975                           
  6976                           ;RF_Control_B1.c: 266: {
  6977                           ;RF_Control_B1.c: 267: Memory->LoopSave=1;
  6978  1211  086D               	movf	_Memory,w
  6979  1212  3E22               	addlw	34
  6980  1213  0086               	movwf	6
  6981  1214  3002               	movlw	2	; select bank4/5
  6982  1215  0087               	movwf	7
  6983  1216  1501               	bsf	1,2
  6984  1217                     l2544:	
  6985                           
  6986                           ;RF_Control_B1.c: 268: }
  6987                           ;RF_Control_B1.c: 269: Memory->Modify=1;
  6988  1217  086D               	movf	_Memory,w
  6989  1218  3E22               	addlw	34
  6990  1219  0086               	movwf	6
  6991  121A  3002               	movlw	2	; select bank4/5
  6992  121B  0087               	movwf	7
  6993  121C  1401               	bsf	1,0
  6994  121D  0008               	return
  6995  121E                     __end_of_setLog_Code:	
  6996                           
  6997                           	psect	text25
  6998  0B89                     __ptext25:	
  6999 ;; *************** function _setControl_Lights_Table *****************
  7000 ;; Defined at:
  7001 ;;		line 272 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
  7002 ;; Parameters:    Size  Location     Type
  7003 ;;  rf              1    wreg     unsigned char 
  7004 ;; Auto vars:     Size  Location     Type
  7005 ;;  rf              1   71[BANK0 ] unsigned char 
  7006 ;; Return value:  Size  Location     Type
  7007 ;;		None               void
  7008 ;; Registers used:
  7009 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7010 ;; Tracked objects:
  7011 ;;		On entry : 0/0
  7012 ;;		On exit  : 0/0
  7013 ;;		Unchanged: 0/0
  7014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7015 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7016 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7018 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7019 ;;Total ram usage:        1 bytes
  7020 ;; Hardware stack levels used:    1
  7021 ;; Hardware stack levels required when called:   10
  7022 ;; This function calls:
  7023 ;;		_RfPointSelect
  7024 ;;		_setBuz
  7025 ;;		_setDimmerLights
  7026 ;;		_setRFSW_AdjControl
  7027 ;;		_setRFSW_Control
  7028 ;;		_setRFSW_Status
  7029 ;;		_setSw_Status
  7030 ;;		_setTxData
  7031 ;; This function is called by:
  7032 ;;		_getRxData
  7033 ;; This function uses a non-reentrant model
  7034 ;;
  7035                           
  7036                           
  7037                           ;psect for function _setControl_Lights_Table
  7038  0B89                     _setControl_Lights_Table:	
  7039                           
  7040                           ;incstack = 0
  7041                           ; Regs used in _setControl_Lights_Table: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
  7042                           ;setControl_Lights_Table@rf stored from wreg
  7043  0B89  0020               	movlb	0	; select bank0
  7044  0B8A  00E7               	movwf	setControl_Lights_Table@rf
  7045                           
  7046                           ;RF_Control_B1.c: 274: RfPointSelect(rf);
  7047  0B8B  0867               	movf	setControl_Lights_Table@rf,w
  7048  0B8C  3199  2186  318B   	fcall	_RfPointSelect
  7049                           
  7050                           ;RF_Control_B1.c: 275: if(RF_Data[15] == 0x00)
  7051  0B8F  0021               	movlb	1	; select bank1
  7052  0B90  08AF               	movf	(_RF_Data^(0+128)+15),f
  7053  0B91  1D03               	skipz
  7054  0B92  2BDC               	goto	l8688
  7055                           
  7056                           ;RF_Control_B1.c: 276: {
  7057                           ;RF_Control_B1.c: 278: setDimmerLights(1,0);
  7058  0B93  0020               	movlb	0	; select bank0
  7059  0B94  01A4               	clrf	setDimmerLights@status
  7060  0B95  3001               	movlw	1
  7061  0B96  3189  21E5  318B   	fcall	_setDimmerLights
  7062                           
  7063                           ;RF_Control_B1.c: 279: setRFSW_Status(1,0);
  7064  0B99  0020               	movlb	0	; select bank0
  7065  0B9A  01A2               	clrf	setRFSW_Status@command
  7066  0B9B  3001               	movlw	1
  7067  0B9C  319A  223D  318B   	fcall	_setRFSW_Status
  7068                           
  7069                           ;RF_Control_B1.c: 280: setSw_Status(1,0);
  7070  0B9F  0020               	movlb	0	; select bank0
  7071  0BA0  01A2               	clrf	setSw_Status@command
  7072  0BA1  3001               	movlw	1
  7073  0BA2  319A  224C  318B   	fcall	_setSw_Status
  7074                           
  7075                           ;RF_Control_B1.c: 283: setDimmerLights(2,0);
  7076  0BA5  0020               	movlb	0	; select bank0
  7077  0BA6  01A4               	clrf	setDimmerLights@status
  7078  0BA7  3002               	movlw	2
  7079  0BA8  3189  21E5  318B   	fcall	_setDimmerLights
  7080                           
  7081                           ;RF_Control_B1.c: 284: setRFSW_Status(2,0);
  7082  0BAB  0020               	movlb	0	; select bank0
  7083  0BAC  01A2               	clrf	setRFSW_Status@command
  7084  0BAD  3002               	movlw	2
  7085  0BAE  319A  223D  318B   	fcall	_setRFSW_Status
  7086                           
  7087                           ;RF_Control_B1.c: 285: setSw_Status(2,0);
  7088  0BB1  0020               	movlb	0	; select bank0
  7089  0BB2  01A2               	clrf	setSw_Status@command
  7090  0BB3  3002               	movlw	2
  7091  0BB4  319A  224C  318B   	fcall	_setSw_Status
  7092                           
  7093                           ;RF_Control_B1.c: 293: Product->Data[9]=0;
  7094  0BB7  0020               	movlb	0	; select bank0
  7095  0BB8  086E               	movf	_Product,w
  7096  0BB9  3E09               	addlw	9
  7097  0BBA  0086               	movwf	6
  7098  0BBB  3001               	movlw	1	; select bank2/3
  7099  0BBC  0087               	movwf	7
  7100  0BBD  0181               	clrf	1
  7101                           
  7102                           ;RF_Control_B1.c: 294: Product->Data[11]=0;
  7103  0BBE  086E               	movf	_Product,w
  7104  0BBF  3E0B               	addlw	11
  7105  0BC0  0086               	movwf	6
  7106  0BC1  3001               	movlw	1	; select bank2/3
  7107  0BC2  0087               	movwf	7
  7108  0BC3  0181               	clrf	1
  7109                           
  7110                           ;RF_Control_B1.c: 295: Product->Data[15]=0;
  7111  0BC4  086E               	movf	_Product,w
  7112  0BC5  3E0F               	addlw	15
  7113  0BC6  0086               	movwf	6
  7114  0BC7  3001               	movlw	1	; select bank2/3
  7115  0BC8  0087               	movwf	7
  7116  0BC9  0181               	clrf	1
  7117                           
  7118                           ;RF_Control_B1.c: 296: Product->Data[17]=0;
  7119  0BCA  086E               	movf	_Product,w
  7120  0BCB  3E11               	addlw	17
  7121  0BCC  0086               	movwf	6
  7122  0BCD  3001               	movlw	1	; select bank2/3
  7123  0BCE  0087               	movwf	7
  7124  0BCF  0181               	clrf	1
  7125                           
  7126                           ;RF_Control_B1.c: 297: setBuz(1,100);
  7127  0BD0  3064               	movlw	100
  7128  0BD1  00A6               	movwf	setBuz@time
  7129  0BD2  3000               	movlw	0
  7130  0BD3  00A7               	movwf	setBuz@time+1
  7131  0BD4  3001               	movlw	1
  7132  0BD5  3197  2789  318B   	fcall	_setBuz
  7133                           
  7134                           ;RF_Control_B1.c: 298: setTxData(1);
  7135  0BD8  3001               	movlw	1
  7136  0BD9  3187  2723         	fcall	_setTxData
  7137                           
  7138                           ;RF_Control_B1.c: 299: }
  7139  0BDB  0008               	return
  7140  0BDC                     l8688:	
  7141                           
  7142                           ;RF_Control_B1.c: 300: else if(RF_Data[15] == 0x20)
  7143  0BDC  0021               	movlb	1	; select bank1
  7144  0BDD  082F               	movf	(_RF_Data^(0+128)+15),w
  7145  0BDE  3A20               	xorlw	32
  7146  0BDF  1D03               	skipz
  7147  0BE0  2BF8               	goto	l8694
  7148                           
  7149                           ;RF_Control_B1.c: 301: {
  7150                           ;RF_Control_B1.c: 302: Product->Data[9]=0;
  7151  0BE1  0020               	movlb	0	; select bank0
  7152  0BE2  086E               	movf	_Product,w
  7153  0BE3  3E09               	addlw	9
  7154  0BE4  0086               	movwf	6
  7155  0BE5  3001               	movlw	1	; select bank2/3
  7156  0BE6  0087               	movwf	7
  7157  0BE7  0181               	clrf	1
  7158                           
  7159                           ;RF_Control_B1.c: 303: Product->Data[11]=0;
  7160  0BE8  086E               	movf	_Product,w
  7161  0BE9  3E0B               	addlw	11
  7162  0BEA  0086               	movwf	6
  7163  0BEB  3001               	movlw	1	; select bank2/3
  7164  0BEC  0087               	movwf	7
  7165  0BED  0181               	clrf	1
  7166                           
  7167                           ;RF_Control_B1.c: 304: Product->Data[17]=0;
  7168  0BEE  086E               	movf	_Product,w
  7169  0BEF  3E11               	addlw	17
  7170  0BF0  0086               	movwf	6
  7171  0BF1  3001               	movlw	1	; select bank2/3
  7172  0BF2  0087               	movwf	7
  7173  0BF3  0181               	clrf	1
  7174                           
  7175                           ;RF_Control_B1.c: 305: setTxData(1);
  7176  0BF4  3001               	movlw	1
  7177  0BF5  3187  2723         	fcall	_setTxData
  7178                           
  7179                           ;RF_Control_B1.c: 306: }
  7180  0BF7  0008               	return
  7181  0BF8                     l8694:	
  7182                           
  7183                           ;RF_Control_B1.c: 308: else if(RF_Data[15] == 0x01)
  7184  0BF8  0021               	movlb	1	; select bank1
  7185  0BF9  082F               	movf	(_RF_Data^(0+128)+15),w
  7186  0BFA  3A01               	xorlw	1
  7187  0BFB  1D03               	skipz
  7188  0BFC  2C01               	goto	l8698
  7189                           
  7190                           ;RF_Control_B1.c: 309: {
  7191                           ;RF_Control_B1.c: 310: setRFSW_Control(1);
  7192  0BFD  3001               	movlw	1
  7193  0BFE  318A  22F9         	fcall	_setRFSW_Control
  7194                           
  7195                           ;RF_Control_B1.c: 311: }
  7196  0C00  0008               	return
  7197  0C01                     l8698:	
  7198                           
  7199                           ;RF_Control_B1.c: 313: else if(RF_Data[15] == 0x11)
  7200  0C01  0021               	movlb	1	; select bank1
  7201  0C02  082F               	movf	(_RF_Data^(0+128)+15),w
  7202  0C03  3A11               	xorlw	17
  7203  0C04  1D03               	skipz
  7204  0C05  2C0A               	goto	l8702
  7205                           
  7206                           ;RF_Control_B1.c: 314: {
  7207                           ;RF_Control_B1.c: 315: setRFSW_AdjControl(1);
  7208  0C06  3001               	movlw	1
  7209  0C07  3190  2002         	fcall	_setRFSW_AdjControl
  7210                           
  7211                           ;RF_Control_B1.c: 316: }
  7212  0C09  0008               	return
  7213  0C0A                     l8702:	
  7214                           
  7215                           ;RF_Control_B1.c: 321: else if(RF_Data[15] == 0x02)
  7216  0C0A  0021               	movlb	1	; select bank1
  7217  0C0B  082F               	movf	(_RF_Data^(0+128)+15),w
  7218  0C0C  3A02               	xorlw	2
  7219  0C0D  1D03               	skipz
  7220  0C0E  2C13               	goto	l8706
  7221                           
  7222                           ;RF_Control_B1.c: 322: {
  7223                           ;RF_Control_B1.c: 323: setRFSW_Control(2);
  7224  0C0F  3002               	movlw	2
  7225  0C10  318A  22F9         	fcall	_setRFSW_Control
  7226                           
  7227                           ;RF_Control_B1.c: 324: }
  7228  0C12  0008               	return
  7229  0C13                     l8706:	
  7230                           
  7231                           ;RF_Control_B1.c: 326: else if(RF_Data[15] == 0x21)
  7232  0C13  0021               	movlb	1	; select bank1
  7233  0C14  082F               	movf	(_RF_Data^(0+128)+15),w
  7234  0C15  3A21               	xorlw	33
  7235  0C16  1D03               	skipz
  7236  0C17  0008               	return
  7237                           
  7238                           ;RF_Control_B1.c: 327: {
  7239                           ;RF_Control_B1.c: 328: setRFSW_AdjControl(2);
  7240  0C18  3002               	movlw	2
  7241  0C19  3190  2002         	fcall	_setRFSW_AdjControl
  7242  0C1B  0008               	return
  7243  0C1C                     __end_of_setControl_Lights_Table:	
  7244                           
  7245                           	psect	text26
  7246  0AF9                     __ptext26:	
  7247 ;; *************** function _setRFSW_Control *****************
  7248 ;; Defined at:
  7249 ;;		line 369 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
  7250 ;; Parameters:    Size  Location     Type
  7251 ;;  sw              1    wreg     unsigned char 
  7252 ;; Auto vars:     Size  Location     Type
  7253 ;;  sw              1   67[BANK0 ] unsigned char 
  7254 ;; Return value:  Size  Location     Type
  7255 ;;		None               void
  7256 ;; Registers used:
  7257 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7258 ;; Tracked objects:
  7259 ;;		On entry : 0/0
  7260 ;;		On exit  : 0/0
  7261 ;;		Unchanged: 0/0
  7262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7263 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7264 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7265 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7266 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7267 ;;Total ram usage:        2 bytes
  7268 ;; Hardware stack levels used:    1
  7269 ;; Hardware stack levels required when called:    8
  7270 ;; This function calls:
  7271 ;;		_RfSWPointSelect
  7272 ;;		_setBuz
  7273 ;;		_setDelayOff_GO
  7274 ;;		_setDimmerLights_Switch
  7275 ;;		_setDimmerLights_Trigger
  7276 ;;		_setRF_DimmerLights
  7277 ;;		_setSw_Status
  7278 ;;		_setTxData
  7279 ;; This function is called by:
  7280 ;;		_setControl_Lights_Table
  7281 ;; This function uses a non-reentrant model
  7282 ;;
  7283                           
  7284                           
  7285                           ;psect for function _setRFSW_Control
  7286  0AF9                     _setRFSW_Control:	
  7287                           
  7288                           ;incstack = 0
  7289                           ; Regs used in _setRFSW_Control: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7290                           ;setRFSW_Control@sw stored from wreg
  7291  0AF9  0020               	movlb	0	; select bank0
  7292  0AFA  00E3               	movwf	setRFSW_Control@sw
  7293                           
  7294                           ;RF_Control_B1.c: 371: RfSWPointSelect(sw);
  7295  0AFB  0863               	movf	setRFSW_Control@sw,w
  7296  0AFC  319B  2330  318A   	fcall	_RfSWPointSelect
  7297                           
  7298                           ;RF_Control_B1.c: 372: if(!RFSW->Status)
  7299  0AFF  0021               	movlb	1	; select bank1
  7300  0B00  083B               	movf	_RFSW^(0+128),w
  7301  0B01  0086               	movwf	6
  7302  0B02  0187               	clrf	7
  7303  0B03  1801               	btfsc	1,0
  7304  0B04  2B3A               	goto	l8546
  7305                           
  7306                           ;RF_Control_B1.c: 373: {
  7307                           ;RF_Control_B1.c: 374: if(RF_Data[16] == 0x80)
  7308  0B05  0830               	movf	(_RF_Data^(0+128)+16),w
  7309  0B06  3A80               	xorlw	128
  7310  0B07  1D03               	skipz
  7311  0B08  2B16               	goto	l8536
  7312                           
  7313                           ;RF_Control_B1.c: 375: {
  7314                           ;RF_Control_B1.c: 376: setDelayOff_GO(sw,1,RF_Data[17]);
  7315  0B09  0020               	movlb	0	; select bank0
  7316  0B0A  01A3               	clrf	setDelayOff_GO@command
  7317  0B0B  0AA3               	incf	setDelayOff_GO@command,f
  7318  0B0C  0021               	movlb	1	; select bank1
  7319  0B0D  0831               	movf	(_RF_Data^(0+128)+17),w
  7320  0B0E  0020               	movlb	0	; select bank0
  7321  0B0F  00E2               	movwf	??_setRFSW_Control
  7322  0B10  0862               	movf	??_setRFSW_Control,w
  7323  0B11  00A4               	movwf	setDelayOff_GO@value
  7324  0B12  0863               	movf	setRFSW_Control@sw,w
  7325  0B13  3192  22C0  318A   	fcall	_setDelayOff_GO
  7326  0B16                     l8536:	
  7327                           
  7328                           ;RF_Control_B1.c: 377: }
  7329                           ;RF_Control_B1.c: 378: RFSW->Status=1;
  7330  0B16  0021               	movlb	1	; select bank1
  7331  0B17  083B               	movf	_RFSW^(0+128),w
  7332  0B18  0086               	movwf	6
  7333  0B19  0187               	clrf	7
  7334  0B1A  1401               	bsf	1,0
  7335                           
  7336                           ;RF_Control_B1.c: 379: setSw_Status(sw,1);
  7337  0B1B  0020               	movlb	0	; select bank0
  7338  0B1C  01A2               	clrf	setSw_Status@command
  7339  0B1D  0AA2               	incf	setSw_Status@command,f
  7340  0B1E  0863               	movf	setRFSW_Control@sw,w
  7341  0B1F  319A  224C  318A   	fcall	_setSw_Status
  7342                           
  7343                           ;RF_Control_B1.c: 381: setDimmerLights_Trigger(sw,1);
  7344  0B22  0020               	movlb	0	; select bank0
  7345  0B23  01A2               	clrf	setDimmerLights_Trigger@command
  7346  0B24  0AA2               	incf	setDimmerLights_Trigger@command,f
  7347  0B25  0863               	movf	setRFSW_Control@sw,w
  7348  0B26  319A  227B  318A   	fcall	_setDimmerLights_Trigger
  7349                           
  7350                           ;RF_Control_B1.c: 382: setDimmerLights_Switch(sw,1);
  7351  0B29  0020               	movlb	0	; select bank0
  7352  0B2A  01A2               	clrf	setDimmerLights_Switch@command
  7353  0B2B  0AA2               	incf	setDimmerLights_Switch@command,f
  7354  0B2C  0863               	movf	setRFSW_Control@sw,w
  7355  0B2D  319A  226B  318A   	fcall	_setDimmerLights_Switch
  7356                           
  7357                           ;RF_Control_B1.c: 384: setRF_DimmerLights(sw,RFSW->Status);
  7358  0B30  0021               	movlb	1	; select bank1
  7359  0B31  083B               	movf	_RFSW^(0+128),w
  7360  0B32  0086               	movwf	6
  7361  0B33  0187               	clrf	7
  7362  0B34  3000               	movlw	0
  7363  0B35  1801               	btfsc	1,0
  7364  0B36  3001               	movlw	1
  7365  0B37  0020               	movlb	0	; select bank0
  7366  0B38  00DD               	movwf	setRF_DimmerLights@on
  7367  0B39  2B78               	goto	L4
  7368  0B3A                     l8546:	
  7369                           ;RF_Control_B1.c: 385: }
  7370                           
  7371                           
  7372                           ;RF_Control_B1.c: 386: else
  7373                           ;RF_Control_B1.c: 387: {
  7374                           ;RF_Control_B1.c: 388: if(RF_Data[16] == 0x80)
  7375  0B3A  0021               	movlb	1	; select bank1
  7376  0B3B  0830               	movf	(_RF_Data^(0+128)+16),w
  7377  0B3C  3A80               	xorlw	128
  7378  0B3D  1D03               	skipz
  7379  0B3E  2B50               	goto	l8550
  7380                           
  7381                           ;RF_Control_B1.c: 389: {
  7382                           ;RF_Control_B1.c: 390: setDelayOff_GO(sw,1,RF_Data[17]);
  7383  0B3F  0020               	movlb	0	; select bank0
  7384  0B40  01A3               	clrf	setDelayOff_GO@command
  7385  0B41  0AA3               	incf	setDelayOff_GO@command,f
  7386  0B42  0021               	movlb	1	; select bank1
  7387  0B43  0831               	movf	(_RF_Data^(0+128)+17),w
  7388  0B44  0020               	movlb	0	; select bank0
  7389  0B45  00E2               	movwf	??_setRFSW_Control
  7390  0B46  0862               	movf	??_setRFSW_Control,w
  7391  0B47  00A4               	movwf	setDelayOff_GO@value
  7392  0B48  0863               	movf	setRFSW_Control@sw,w
  7393  0B49  3192  22C0  318A   	fcall	_setDelayOff_GO
  7394                           
  7395                           ;RF_Control_B1.c: 391: setRF_DimmerLights(sw,1);
  7396  0B4C  0020               	movlb	0	; select bank0
  7397  0B4D  01DD               	clrf	setRF_DimmerLights@on
  7398  0B4E  0ADD               	incf	setRF_DimmerLights@on,f
  7399  0B4F  2B78               	goto	L4
  7400  0B50                     l8550:	
  7401                           ;RF_Control_B1.c: 392: }
  7402                           
  7403                           
  7404                           ;RF_Control_B1.c: 393: else
  7405                           ;RF_Control_B1.c: 394: {
  7406                           ;RF_Control_B1.c: 395: RFSW->Status=0;
  7407  0B50  0021               	movlb	1	; select bank1
  7408  0B51  083B               	movf	_RFSW^(0+128),w
  7409  0B52  0086               	movwf	6
  7410  0B53  0187               	clrf	7
  7411  0B54  1001               	bcf	1,0
  7412                           
  7413                           ;RF_Control_B1.c: 396: setSw_Status(sw,0);
  7414  0B55  0020               	movlb	0	; select bank0
  7415  0B56  01A2               	clrf	setSw_Status@command
  7416  0B57  0863               	movf	setRFSW_Control@sw,w
  7417  0B58  319A  224C  318A   	fcall	_setSw_Status
  7418                           
  7419                           ;RF_Control_B1.c: 398: setDimmerLights_Trigger(sw,1);
  7420  0B5B  0020               	movlb	0	; select bank0
  7421  0B5C  01A2               	clrf	setDimmerLights_Trigger@command
  7422  0B5D  0AA2               	incf	setDimmerLights_Trigger@command,f
  7423  0B5E  0863               	movf	setRFSW_Control@sw,w
  7424  0B5F  319A  227B  318A   	fcall	_setDimmerLights_Trigger
  7425                           
  7426                           ;RF_Control_B1.c: 399: setDimmerLights_Switch(sw,RFSW->Status);
  7427  0B62  0021               	movlb	1	; select bank1
  7428  0B63  083B               	movf	_RFSW^(0+128),w
  7429  0B64  0086               	movwf	6
  7430  0B65  0187               	clrf	7
  7431  0B66  3000               	movlw	0
  7432  0B67  1801               	btfsc	1,0
  7433  0B68  3001               	movlw	1
  7434  0B69  0020               	movlb	0	; select bank0
  7435  0B6A  00A2               	movwf	setDimmerLights_Switch@command
  7436  0B6B  0863               	movf	setRFSW_Control@sw,w
  7437  0B6C  319A  226B  318A   	fcall	_setDimmerLights_Switch
  7438                           
  7439                           ;RF_Control_B1.c: 401: setDelayOff_GO(sw,0,0);
  7440  0B6F  0020               	movlb	0	; select bank0
  7441  0B70  01A3               	clrf	setDelayOff_GO@command
  7442  0B71  01A4               	clrf	setDelayOff_GO@value
  7443  0B72  0863               	movf	setRFSW_Control@sw,w
  7444  0B73  3192  22C0  318A   	fcall	_setDelayOff_GO
  7445                           
  7446                           ;RF_Control_B1.c: 402: setRF_DimmerLights(sw,0);
  7447  0B76  0020               	movlb	0	; select bank0
  7448  0B77  01DD               	clrf	setRF_DimmerLights@on
  7449  0B78                     L4:	
  7450  0B78  0863               	movf	setRFSW_Control@sw,w
  7451  0B79  3195  2560  318A   	fcall	_setRF_DimmerLights
  7452                           
  7453                           ;RF_Control_B1.c: 403: }
  7454                           ;RF_Control_B1.c: 404: }
  7455                           ;RF_Control_B1.c: 405: setBuz(1,100);
  7456  0B7C  3064               	movlw	100
  7457  0B7D  0020               	movlb	0	; select bank0
  7458  0B7E  00A6               	movwf	setBuz@time
  7459  0B7F  3000               	movlw	0
  7460  0B80  00A7               	movwf	setBuz@time+1
  7461  0B81  3001               	movlw	1
  7462  0B82  3197  2789  318A   	fcall	_setBuz
  7463                           
  7464                           ;RF_Control_B1.c: 406: setTxData(1);
  7465  0B85  3001               	movlw	1
  7466  0B86  3187  2723         	fcall	_setTxData
  7467  0B88  0008               	return
  7468  0B89                     __end_of_setRFSW_Control:	
  7469                           
  7470                           	psect	text27
  7471  12C0                     __ptext27:	
  7472 ;; *************** function _setDelayOff_GO *****************
  7473 ;; Defined at:
  7474 ;;		line 92 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\DelayOff_B1.c"
  7475 ;; Parameters:    Size  Location     Type
  7476 ;;  sw              1    wreg     unsigned char 
  7477 ;;  command         1    3[BANK0 ] unsigned char 
  7478 ;;  value           1    4[BANK0 ] unsigned char 
  7479 ;; Auto vars:     Size  Location     Type
  7480 ;;  sw              1    7[BANK0 ] unsigned char 
  7481 ;; Return value:  Size  Location     Type
  7482 ;;		None               void
  7483 ;; Registers used:
  7484 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7485 ;; Tracked objects:
  7486 ;;		On entry : 0/0
  7487 ;;		On exit  : 0/0
  7488 ;;		Unchanged: 0/0
  7489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7490 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7491 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7492 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7493 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7494 ;;Total ram usage:        5 bytes
  7495 ;; Hardware stack levels used:    1
  7496 ;; Hardware stack levels required when called:    5
  7497 ;; This function calls:
  7498 ;;		_DelayOffPointSelect
  7499 ;;		_DelayTimejudge
  7500 ;; This function is called by:
  7501 ;;		_setRFSW_Control
  7502 ;;		_Sw_DimmerOffFunc
  7503 ;; This function uses a non-reentrant model
  7504 ;;
  7505                           
  7506                           
  7507                           ;psect for function _setDelayOff_GO
  7508  12C0                     _setDelayOff_GO:	
  7509                           
  7510                           ;incstack = 0
  7511                           ; Regs used in _setDelayOff_GO: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7512                           ;setDelayOff_GO@sw stored from wreg
  7513  12C0  0020               	movlb	0	; select bank0
  7514  12C1  00A7               	movwf	setDelayOff_GO@sw
  7515                           
  7516                           ;DelayOff_B1.c: 94: DelayOffPointSelect(sw);
  7517  12C2  0827               	movf	setDelayOff_GO@sw,w
  7518  12C3  319A  22F2  3192   	fcall	_DelayOffPointSelect
  7519                           
  7520                           ;DelayOff_B1.c: 95: if(DelayOff->Enable)
  7521  12C6  0020               	movlb	0	; select bank0
  7522  12C7  0869               	movf	_DelayOff,w
  7523  12C8  0086               	movwf	6
  7524  12C9  0187               	clrf	7
  7525  12CA  1C01               	btfss	1,0
  7526  12CB  0008               	return
  7527                           
  7528                           ;DelayOff_B1.c: 96: {
  7529                           ;DelayOff_B1.c: 97: DelayOff->GO=command;
  7530  12CC  0869               	movf	_DelayOff,w
  7531  12CD  0086               	movwf	6
  7532  12CE  0187               	clrf	7
  7533  12CF  0823               	movf	setDelayOff_GO@command,w
  7534  12D0  1081               	bcf	1,1
  7535  12D1  1D03               	skipz
  7536  12D2  1481               	bsf	1,1
  7537                           
  7538                           ;DelayOff_B1.c: 98: if(command)
  7539  12D3  0823               	movf	setDelayOff_GO@command,w
  7540  12D4  1903               	btfsc	3,2
  7541  12D5  2AFF               	goto	l8362
  7542                           
  7543                           ;DelayOff_B1.c: 99: {
  7544                           ;DelayOff_B1.c: 100: DelayOff->Value=DelayTimejudge(value);
  7545  12D6  0824               	movf	setDelayOff_GO@value,w
  7546  12D7  319E  2655  3192   	fcall	_DelayTimejudge
  7547  12DA  0020               	movlb	0	; select bank0
  7548  12DB  00A5               	movwf	??_setDelayOff_GO
  7549  12DC  0A69               	incf	_DelayOff,w
  7550  12DD  0086               	movwf	6
  7551  12DE  0187               	clrf	7
  7552  12DF  0825               	movf	??_setDelayOff_GO,w
  7553  12E0  0081               	movwf	1
  7554                           
  7555                           ;DelayOff_B1.c: 101: if(((value%16)==5 || !(value%16)) && value <= 0x25)
  7556  12E1  300F               	movlw	15
  7557  12E2  0524               	andwf	setDelayOff_GO@value,w
  7558  12E3  00A5               	movwf	??_setDelayOff_GO
  7559  12E4  0825               	movf	??_setDelayOff_GO,w
  7560  12E5  3A05               	xorlw	5
  7561  12E6  1903               	skipnz
  7562  12E7  2AEC               	goto	l8356
  7563  12E8  0824               	movf	setDelayOff_GO@value,w
  7564  12E9  390F               	andlw	15
  7565  12EA  1D03               	btfss	3,2
  7566  12EB  2AF2               	goto	l8360
  7567  12EC                     l8356:	
  7568  12EC  3026               	movlw	38
  7569  12ED  0224               	subwf	setDelayOff_GO@value,w
  7570  12EE  1803               	skipnc
  7571  12EF  2AF2               	goto	l8360
  7572                           
  7573                           ;DelayOff_B1.c: 102: {
  7574                           ;DelayOff_B1.c: 103: Product->Data[26+sw]=value;
  7575  12F0  0824               	movf	setDelayOff_GO@value,w
  7576  12F1  2AF3               	goto	L5
  7577  12F2                     l8360:	
  7578                           ;DelayOff_B1.c: 104: }
  7579                           
  7580                           
  7581                           ;DelayOff_B1.c: 105: else
  7582                           ;DelayOff_B1.c: 106: {
  7583                           ;DelayOff_B1.c: 107: Product->Data[26+sw]=0x05;
  7584  12F2  3005               	movlw	5
  7585  12F3                     L5:	
  7586  12F3  00A5               	movwf	??_setDelayOff_GO
  7587  12F4  0827               	movf	setDelayOff_GO@sw,w
  7588  12F5  3E1A               	addlw	26
  7589  12F6  076E               	addwf	_Product,w
  7590  12F7  00A6               	movwf	??_setDelayOff_GO+1
  7591  12F8  0826               	movf	??_setDelayOff_GO+1,w
  7592  12F9  0086               	movwf	6
  7593  12FA  3001               	movlw	1	; select bank2/3
  7594  12FB  0087               	movwf	7
  7595  12FC  0825               	movf	??_setDelayOff_GO,w
  7596  12FD  0081               	movwf	1
  7597                           
  7598                           ;DelayOff_B1.c: 108: }
  7599                           ;DelayOff_B1.c: 109: }
  7600  12FE  2B0B               	goto	l8366
  7601  12FF                     l8362:	
  7602                           
  7603                           ;DelayOff_B1.c: 110: else if(!command)
  7604  12FF  08A3               	movf	setDelayOff_GO@command,f
  7605  1300  1D03               	skipz
  7606  1301  2B0B               	goto	l8366
  7607                           
  7608                           ;DelayOff_B1.c: 111: {
  7609                           ;DelayOff_B1.c: 112: Product->Data[sw+26]=0;
  7610  1302  0827               	movf	setDelayOff_GO@sw,w
  7611  1303  3E1A               	addlw	26
  7612  1304  076E               	addwf	_Product,w
  7613  1305  00A5               	movwf	??_setDelayOff_GO
  7614  1306  0825               	movf	??_setDelayOff_GO,w
  7615  1307  0086               	movwf	6
  7616  1308  3001               	movlw	1	; select bank2/3
  7617  1309  0087               	movwf	7
  7618  130A  0181               	clrf	1
  7619  130B                     l8366:	
  7620                           
  7621                           ;DelayOff_B1.c: 113: }
  7622                           ;DelayOff_B1.c: 114: DelayOff->SecondTime=0;
  7623  130B  0869               	movf	_DelayOff,w
  7624  130C  3E02               	addlw	2
  7625  130D  0086               	movwf	6
  7626  130E  0187               	clrf	7
  7627  130F  3000               	movlw	0
  7628  1310  3FC0               	movwi [0]fsr1
  7629  1311  3FC1               	movwi [1]fsr1
  7630                           
  7631                           ;DelayOff_B1.c: 115: DelayOff->MinuteTime=0;
  7632  1312  0869               	movf	_DelayOff,w
  7633  1313  3E04               	addlw	4
  7634  1314  0086               	movwf	6
  7635  1315  0187               	clrf	7
  7636  1316  0181               	clrf	1
  7637  1317  0008               	return
  7638  1318                     __end_of_setDelayOff_GO:	
  7639                           
  7640                           	psect	text28
  7641  1E55                     __ptext28:	
  7642 ;; *************** function _DelayTimejudge *****************
  7643 ;; Defined at:
  7644 ;;		line 119 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\DelayOff_B1.c"
  7645 ;; Parameters:    Size  Location     Type
  7646 ;;  value           1    wreg     unsigned char 
  7647 ;; Auto vars:     Size  Location     Type
  7648 ;;  value           1    2[BANK0 ] unsigned char 
  7649 ;;  i               1    1[BANK0 ] unsigned char 
  7650 ;; Return value:  Size  Location     Type
  7651 ;;                  1    wreg      unsigned char 
  7652 ;; Registers used:
  7653 ;;		wreg
  7654 ;; Tracked objects:
  7655 ;;		On entry : 0/0
  7656 ;;		On exit  : 0/0
  7657 ;;		Unchanged: 0/0
  7658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7660 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7661 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7662 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7663 ;;Total ram usage:        3 bytes
  7664 ;; Hardware stack levels used:    1
  7665 ;; Hardware stack levels required when called:    4
  7666 ;; This function calls:
  7667 ;;		Nothing
  7668 ;; This function is called by:
  7669 ;;		_setDelayOff_GO
  7670 ;; This function uses a non-reentrant model
  7671 ;;
  7672                           
  7673                           
  7674                           ;psect for function _DelayTimejudge
  7675  1E55                     _DelayTimejudge:	
  7676                           
  7677                           ;incstack = 0
  7678                           ; Regs used in _DelayTimejudge: [wreg]
  7679                           ;DelayTimejudge@value stored from wreg
  7680  1E55  0020               	movlb	0	; select bank0
  7681  1E56  00A2               	movwf	DelayTimejudge@value
  7682                           
  7683                           ;DelayOff_B1.c: 121: char i=5;
  7684  1E57  3005               	movlw	5
  7685  1E58  00A0               	movwf	??_DelayTimejudge
  7686  1E59  0820               	movf	??_DelayTimejudge,w
  7687  1E5A  00A1               	movwf	DelayTimejudge@i
  7688                           
  7689                           ;DelayOff_B1.c: 122: if(value == 0x05)
  7690  1E5B  0822               	movf	DelayTimejudge@value,w
  7691  1E5C  3A05               	xorlw	5
  7692  1E5D  1D03               	skipz
  7693  1E5E  2E61               	goto	l8196
  7694                           
  7695                           ;DelayOff_B1.c: 123: {
  7696                           ;DelayOff_B1.c: 124: i=5;
  7697  1E5F  3005               	movlw	5
  7698  1E60  2E7E               	goto	L10
  7699  1E61                     l8196:	
  7700                           ;DelayOff_B1.c: 125: }
  7701                           
  7702                           
  7703                           ;DelayOff_B1.c: 126: else if(value == 0x10)
  7704  1E61  0822               	movf	DelayTimejudge@value,w
  7705  1E62  3A10               	xorlw	16
  7706  1E63  1D03               	skipz
  7707  1E64  2E67               	goto	l8200
  7708                           
  7709                           ;DelayOff_B1.c: 127: {
  7710                           ;DelayOff_B1.c: 128: i=10;
  7711  1E65  300A               	movlw	10
  7712  1E66  2E7E               	goto	L10
  7713  1E67                     l8200:	
  7714                           ;DelayOff_B1.c: 129: }
  7715                           
  7716                           
  7717                           ;DelayOff_B1.c: 130: else if(value == 0x15)
  7718  1E67  0822               	movf	DelayTimejudge@value,w
  7719  1E68  3A15               	xorlw	21
  7720  1E69  1D03               	skipz
  7721  1E6A  2E6D               	goto	l8204
  7722                           
  7723                           ;DelayOff_B1.c: 131: {
  7724                           ;DelayOff_B1.c: 132: i=15;
  7725  1E6B  300F               	movlw	15
  7726  1E6C  2E7E               	goto	L10
  7727  1E6D                     l8204:	
  7728                           ;DelayOff_B1.c: 133: }
  7729                           
  7730                           
  7731                           ;DelayOff_B1.c: 134: else if(value == 0x20)
  7732  1E6D  0822               	movf	DelayTimejudge@value,w
  7733  1E6E  3A20               	xorlw	32
  7734  1E6F  1D03               	skipz
  7735  1E70  2E73               	goto	l8208
  7736                           
  7737                           ;DelayOff_B1.c: 135: {
  7738                           ;DelayOff_B1.c: 136: i=20;
  7739  1E71  3014               	movlw	20
  7740  1E72  2E7E               	goto	L10
  7741  1E73                     l8208:	
  7742                           ;DelayOff_B1.c: 137: }
  7743                           
  7744                           
  7745                           ;DelayOff_B1.c: 138: else if(value == 0x25)
  7746  1E73  0822               	movf	DelayTimejudge@value,w
  7747  1E74  3A25               	xorlw	37
  7748  1E75  1D03               	skipz
  7749  1E76  2E79               	goto	l8212
  7750                           
  7751                           ;DelayOff_B1.c: 139: {
  7752                           ;DelayOff_B1.c: 140: i=25;
  7753  1E77  3019               	movlw	25
  7754  1E78  2E7E               	goto	L10
  7755  1E79                     l8212:	
  7756                           ;DelayOff_B1.c: 141: }
  7757                           
  7758                           
  7759                           ;DelayOff_B1.c: 142: else if(value == 0x30)
  7760  1E79  0822               	movf	DelayTimejudge@value,w
  7761  1E7A  3A30               	xorlw	48
  7762  1E7B  1D03               	skipz
  7763  1E7C  2E81               	goto	l690
  7764                           
  7765                           ;DelayOff_B1.c: 143: {
  7766                           ;DelayOff_B1.c: 144: i=30;
  7767  1E7D  301E               	movlw	30
  7768  1E7E                     L10:	
  7769  1E7E  00A0               	movwf	??_DelayTimejudge
  7770  1E7F  0820               	movf	??_DelayTimejudge,w
  7771  1E80  00A1               	movwf	DelayTimejudge@i
  7772  1E81                     l690:	
  7773                           
  7774                           ;DelayOff_B1.c: 145: }
  7775                           ;DelayOff_B1.c: 146: return i;
  7776  1E81  0821               	movf	DelayTimejudge@i,w
  7777  1E82  0008               	return
  7778  1E83                     __end_of_DelayTimejudge:	
  7779                           
  7780                           	psect	text29
  7781  1002                     __ptext29:	
  7782 ;; *************** function _setRFSW_AdjControl *****************
  7783 ;; Defined at:
  7784 ;;		line 409 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
  7785 ;; Parameters:    Size  Location     Type
  7786 ;;  sw              1    wreg     unsigned char 
  7787 ;; Auto vars:     Size  Location     Type
  7788 ;;  sw              1   70[BANK0 ] unsigned char 
  7789 ;; Return value:  Size  Location     Type
  7790 ;;		None               void
  7791 ;; Registers used:
  7792 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7793 ;; Tracked objects:
  7794 ;;		On entry : 0/0
  7795 ;;		On exit  : 0/0
  7796 ;;		Unchanged: 0/0
  7797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7798 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7799 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7800 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7801 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7802 ;;Total ram usage:        3 bytes
  7803 ;; Hardware stack levels used:    1
  7804 ;; Hardware stack levels required when called:    9
  7805 ;; This function calls:
  7806 ;;		_RfSWPointSelect
  7807 ;;		_setRF_DimmerValue
  7808 ;;		_setTxData
  7809 ;; This function is called by:
  7810 ;;		_setControl_Lights_Table
  7811 ;; This function uses a non-reentrant model
  7812 ;;
  7813                           
  7814                           
  7815                           ;psect for function _setRFSW_AdjControl
  7816  1002                     _setRFSW_AdjControl:	
  7817                           
  7818                           ;incstack = 0
  7819                           ; Regs used in _setRFSW_AdjControl: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7820                           ;setRFSW_AdjControl@sw stored from wreg
  7821  1002  0020               	movlb	0	; select bank0
  7822  1003  00E6               	movwf	setRFSW_AdjControl@sw
  7823                           
  7824                           ;RF_Control_B1.c: 411: RfSWPointSelect(sw);
  7825  1004  0866               	movf	setRFSW_AdjControl@sw,w
  7826  1005  319B  2330  3190   	fcall	_RfSWPointSelect
  7827                           
  7828                           ;RF_Control_B1.c: 412: if(RFSW->Status)
  7829  1008  0021               	movlb	1	; select bank1
  7830  1009  083B               	movf	_RFSW^(0+128),w
  7831  100A  0086               	movwf	6
  7832  100B  0187               	clrf	7
  7833  100C  1C01               	btfss	1,0
  7834  100D  281A               	goto	l8574
  7835                           
  7836                           ;RF_Control_B1.c: 413: {
  7837                           ;RF_Control_B1.c: 414: Memory->Modify=1;
  7838  100E  0020               	movlb	0	; select bank0
  7839  100F  086D               	movf	_Memory,w
  7840  1010  3E22               	addlw	34
  7841  1011  0086               	movwf	6
  7842  1012  3002               	movlw	2	; select bank4/5
  7843  1013  0087               	movwf	7
  7844  1014  1401               	bsf	1,0
  7845                           
  7846                           ;RF_Control_B1.c: 415: setRF_DimmerValue(sw);
  7847  1015  0866               	movf	setRFSW_AdjControl@sw,w
  7848  1016  319F  2714  3190   	fcall	_setRF_DimmerValue
  7849                           
  7850                           ;RF_Control_B1.c: 416: }
  7851  1019  282C               	goto	l2576
  7852  101A                     l8574:	
  7853                           
  7854                           ;RF_Control_B1.c: 417: else
  7855                           ;RF_Control_B1.c: 418: {
  7856                           ;RF_Control_B1.c: 419: Product->Data[9]=Product->Data[20+sw];
  7857  101A  0020               	movlb	0	; select bank0
  7858  101B  0866               	movf	setRFSW_AdjControl@sw,w
  7859  101C  3E14               	addlw	20
  7860  101D  076E               	addwf	_Product,w
  7861  101E  00E4               	movwf	??_setRFSW_AdjControl
  7862  101F  0864               	movf	??_setRFSW_AdjControl,w
  7863  1020  0086               	movwf	6
  7864  1021  3001               	movlw	1	; select bank2/3
  7865  1022  0087               	movwf	7
  7866  1023  0801               	movf	1,w
  7867  1024  00E5               	movwf	??_setRFSW_AdjControl+1
  7868  1025  086E               	movf	_Product,w
  7869  1026  3E09               	addlw	9
  7870  1027  0086               	movwf	6
  7871  1028  3001               	movlw	1	; select bank2/3
  7872  1029  0087               	movwf	7
  7873  102A  0865               	movf	??_setRFSW_AdjControl+1,w
  7874  102B  0081               	movwf	1
  7875  102C                     l2576:	
  7876                           
  7877                           ;RF_Control_B1.c: 420: }
  7878                           ;RF_Control_B1.c: 421: Product->Data[17]=Product->Data[26+sw];
  7879  102C  0020               	movlb	0	; select bank0
  7880  102D  0866               	movf	setRFSW_AdjControl@sw,w
  7881  102E  3E1A               	addlw	26
  7882  102F  076E               	addwf	_Product,w
  7883  1030  00E4               	movwf	??_setRFSW_AdjControl
  7884  1031  0864               	movf	??_setRFSW_AdjControl,w
  7885  1032  0086               	movwf	6
  7886  1033  3001               	movlw	1	; select bank2/3
  7887  1034  0087               	movwf	7
  7888  1035  0801               	movf	1,w
  7889  1036  00E5               	movwf	??_setRFSW_AdjControl+1
  7890  1037  086E               	movf	_Product,w
  7891  1038  3E11               	addlw	17
  7892  1039  0086               	movwf	6
  7893  103A  3001               	movlw	1	; select bank2/3
  7894  103B  0087               	movwf	7
  7895  103C  0865               	movf	??_setRFSW_AdjControl+1,w
  7896  103D  0081               	movwf	1
  7897                           
  7898                           ;RF_Control_B1.c: 422: setTxData(1);
  7899  103E  3001               	movlw	1
  7900  103F  3187  2723         	fcall	_setTxData
  7901  1041  0008               	return
  7902  1042                     __end_of_setRFSW_AdjControl:	
  7903                           
  7904                           	psect	text30
  7905  1F14                     __ptext30:	
  7906 ;; *************** function _setRF_DimmerValue *****************
  7907 ;; Defined at:
  7908 ;;		line 433 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
  7909 ;; Parameters:    Size  Location     Type
  7910 ;;  lights          1    wreg     unsigned char 
  7911 ;; Auto vars:     Size  Location     Type
  7912 ;;  lights          1   67[BANK0 ] unsigned char 
  7913 ;; Return value:  Size  Location     Type
  7914 ;;		None               void
  7915 ;; Registers used:
  7916 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7917 ;; Tracked objects:
  7918 ;;		On entry : 0/0
  7919 ;;		On exit  : 0/0
  7920 ;;		Unchanged: 0/0
  7921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7923 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7924 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7925 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7926 ;;Total ram usage:        3 bytes
  7927 ;; Hardware stack levels used:    1
  7928 ;; Hardware stack levels required when called:    8
  7929 ;; This function calls:
  7930 ;;		_setDimmerLights_AdjRF
  7931 ;; This function is called by:
  7932 ;;		_setRFSW_AdjControl
  7933 ;; This function uses a non-reentrant model
  7934 ;;
  7935                           
  7936                           
  7937                           ;psect for function _setRF_DimmerValue
  7938  1F14                     _setRF_DimmerValue:	
  7939                           
  7940                           ;incstack = 0
  7941                           ; Regs used in _setRF_DimmerValue: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7942                           ;setRF_DimmerValue@lights stored from wreg
  7943  1F14  0020               	movlb	0	; select bank0
  7944  1F15  00E3               	movwf	setRF_DimmerValue@lights
  7945                           
  7946                           ;RF_Control_B1.c: 435: if(RF_Data[9] > 0x64)
  7947  1F16  3065               	movlw	101
  7948  1F17  0021               	movlb	1	; select bank1
  7949  1F18  0229               	subwf	(_RF_Data^(0+128)+9),w
  7950  1F19  1C03               	skipc
  7951  1F1A  2F21               	goto	l8424
  7952                           
  7953                           ;RF_Control_B1.c: 436: {
  7954                           ;RF_Control_B1.c: 437: RF_Data[9]=0x64;
  7955  1F1B  3064               	movlw	100
  7956  1F1C  0020               	movlb	0	; select bank0
  7957  1F1D  00E1               	movwf	??_setRF_DimmerValue
  7958  1F1E  0861               	movf	??_setRF_DimmerValue,w
  7959  1F1F  0021               	movlb	1	; select bank1
  7960  1F20  00A9               	movwf	(_RF_Data^(0+128)+9)
  7961  1F21                     l8424:	
  7962                           
  7963                           ;RF_Control_B1.c: 438: }
  7964                           ;RF_Control_B1.c: 439: Product->Data[9]=RF_Data[9];
  7965  1F21  0829               	movf	(_RF_Data^(0+128)+9),w
  7966  1F22  0020               	movlb	0	; select bank0
  7967  1F23  00E1               	movwf	??_setRF_DimmerValue
  7968  1F24  086E               	movf	_Product,w
  7969  1F25  3E09               	addlw	9
  7970  1F26  0086               	movwf	6
  7971  1F27  3001               	movlw	1	; select bank2/3
  7972  1F28  0087               	movwf	7
  7973  1F29  0861               	movf	??_setRF_DimmerValue,w
  7974  1F2A  0081               	movwf	1
  7975                           
  7976                           ;RF_Control_B1.c: 440: Product->Data[11]=lights;
  7977  1F2B  0863               	movf	setRF_DimmerValue@lights,w
  7978  1F2C  00E1               	movwf	??_setRF_DimmerValue
  7979  1F2D  086E               	movf	_Product,w
  7980  1F2E  3E0B               	addlw	11
  7981  1F2F  0086               	movwf	6
  7982  1F30  3001               	movlw	1	; select bank2/3
  7983  1F31  0087               	movwf	7
  7984  1F32  0861               	movf	??_setRF_DimmerValue,w
  7985  1F33  0081               	movwf	1
  7986                           
  7987                           ;RF_Control_B1.c: 441: Product->Data[(20+lights)]=Product->Data[9];
  7988  1F34  086E               	movf	_Product,w
  7989  1F35  3E09               	addlw	9
  7990  1F36  0086               	movwf	6
  7991  1F37  3001               	movlw	1	; select bank2/3
  7992  1F38  0087               	movwf	7
  7993  1F39  0801               	movf	1,w
  7994  1F3A  00E1               	movwf	??_setRF_DimmerValue
  7995  1F3B  0863               	movf	setRF_DimmerValue@lights,w
  7996  1F3C  3E14               	addlw	20
  7997  1F3D  076E               	addwf	_Product,w
  7998  1F3E  00E2               	movwf	??_setRF_DimmerValue+1
  7999  1F3F  0862               	movf	??_setRF_DimmerValue+1,w
  8000  1F40  0086               	movwf	6
  8001  1F41  3001               	movlw	1	; select bank2/3
  8002  1F42  0087               	movwf	7
  8003  1F43  0861               	movf	??_setRF_DimmerValue,w
  8004  1F44  0081               	movwf	1
  8005                           
  8006                           ;RF_Control_B1.c: 442: setDimmerLights_AdjRF(lights);
  8007  1F45  0863               	movf	setRF_DimmerValue@lights,w
  8008  1F46  319D  2514         	fcall	_setDimmerLights_AdjRF
  8009  1F48  0008               	return
  8010  1F49                     __end_of_setRF_DimmerValue:	
  8011                           
  8012                           	psect	text31
  8013  1D14                     __ptext31:	
  8014 ;; *************** function _setDimmerLights_AdjRF *****************
  8015 ;; Defined at:
  8016 ;;		line 423 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
  8017 ;; Parameters:    Size  Location     Type
  8018 ;;  lights          1    wreg     unsigned char 
  8019 ;; Auto vars:     Size  Location     Type
  8020 ;;  lights          1   64[BANK0 ] unsigned char 
  8021 ;; Return value:  Size  Location     Type
  8022 ;;		None               void
  8023 ;; Registers used:
  8024 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8025 ;; Tracked objects:
  8026 ;;		On entry : 0/0
  8027 ;;		On exit  : 0/0
  8028 ;;		Unchanged: 0/0
  8029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8031 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8032 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8033 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8034 ;;Total ram usage:        2 bytes
  8035 ;; Hardware stack levels used:    1
  8036 ;; Hardware stack levels required when called:    7
  8037 ;; This function calls:
  8038 ;;		_DimmerLightsPointSelect
  8039 ;;		_getPercentValue
  8040 ;; This function is called by:
  8041 ;;		_setRF_DimmerValue
  8042 ;; This function uses a non-reentrant model
  8043 ;;
  8044                           
  8045                           
  8046                           ;psect for function _setDimmerLights_AdjRF
  8047  1D14                     _setDimmerLights_AdjRF:	
  8048                           
  8049                           ;incstack = 0
  8050                           ; Regs used in _setDimmerLights_AdjRF: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  8051                           ;setDimmerLights_AdjRF@lights stored from wreg
  8052  1D14  0020               	movlb	0	; select bank0
  8053  1D15  00E0               	movwf	setDimmerLights_AdjRF@lights
  8054                           
  8055                           ;Dimmer_B1.c: 425: DimmerLightsPointSelect(lights);
  8056  1D16  0860               	movf	setDimmerLights_AdjRF@lights,w
  8057  1D17  319A  22CC  319D   	fcall	_DimmerLightsPointSelect
  8058                           
  8059                           ;Dimmer_B1.c: 426: DimmerLights->AdjRF=1;
  8060  1D1A  0020               	movlb	0	; select bank0
  8061  1D1B  086A               	movf	_DimmerLights,w
  8062  1D1C  0086               	movwf	6
  8063  1D1D  3001               	movlw	1	; select bank2/3
  8064  1D1E  0087               	movwf	7
  8065  1D1F  1501               	bsf	1,2
  8066                           
  8067                           ;Dimmer_B1.c: 427: DimmerLights->Signal=1;
  8068  1D20  086A               	movf	_DimmerLights,w
  8069  1D21  0086               	movwf	6
  8070  1D22  3001               	movlw	1	; select bank2/3
  8071  1D23  0087               	movwf	7
  8072  1D24  1481               	bsf	1,1
  8073                           
  8074                           ;Dimmer_B1.c: 428: DimmerLights->MaxmumValue=getPercentValue(Product->Data[9]);
  8075  1D25  086E               	movf	_Product,w
  8076  1D26  3E09               	addlw	9
  8077  1D27  0086               	movwf	6
  8078  1D28  3001               	movlw	1	; select bank2/3
  8079  1D29  0087               	movwf	7
  8080  1D2A  0801               	movf	1,w
  8081  1D2B  3193  2318         	fcall	_getPercentValue
  8082  1D2D  0020               	movlb	0	; select bank0
  8083  1D2E  00DF               	movwf	??_setDimmerLights_AdjRF
  8084  1D2F  086A               	movf	_DimmerLights,w
  8085  1D30  3E05               	addlw	5
  8086  1D31  0086               	movwf	6
  8087  1D32  3001               	movlw	1	; select bank2/3
  8088  1D33  0087               	movwf	7
  8089  1D34  085F               	movf	??_setDimmerLights_AdjRF,w
  8090  1D35  0081               	movwf	1
  8091  1D36  0008               	return
  8092  1D37                     __end_of_setDimmerLights_AdjRF:	
  8093                           
  8094                           	psect	text32
  8095  1318                     __ptext32:	
  8096 ;; *************** function _getPercentValue *****************
  8097 ;; Defined at:
  8098 ;;		line 490 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
  8099 ;; Parameters:    Size  Location     Type
  8100 ;;  value           1    wreg     unsigned char 
  8101 ;; Auto vars:     Size  Location     Type
  8102 ;;  value           1   59[BANK0 ] unsigned char 
  8103 ;;  i               3   60[BANK0 ] float 
  8104 ;; Return value:  Size  Location     Type
  8105 ;;                  1    wreg      unsigned char 
  8106 ;; Registers used:
  8107 ;;		wreg, status,2, status,0, pclath, cstack
  8108 ;; Tracked objects:
  8109 ;;		On entry : 0/0
  8110 ;;		On exit  : 0/0
  8111 ;;		Unchanged: 0/0
  8112 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8113 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8114 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8115 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8116 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8117 ;;Total ram usage:        6 bytes
  8118 ;; Hardware stack levels used:    1
  8119 ;; Hardware stack levels required when called:    6
  8120 ;; This function calls:
  8121 ;;		___awtoft
  8122 ;;		___ftadd
  8123 ;;		___ftdiv
  8124 ;;		___ftmul
  8125 ;;		___fttol
  8126 ;; This function is called by:
  8127 ;;		_setDimmerLights_AdjRF
  8128 ;; This function uses a non-reentrant model
  8129 ;;
  8130                           
  8131                           
  8132                           ;psect for function _getPercentValue
  8133  1318                     _getPercentValue:	
  8134                           
  8135                           ;incstack = 0
  8136                           ; Regs used in _getPercentValue: [wreg+status,2+status,0+pclath+cstack]
  8137                           ;getPercentValue@value stored from wreg
  8138  1318  0020               	movlb	0	; select bank0
  8139  1319  00DB               	movwf	getPercentValue@value
  8140                           
  8141                           ;Dimmer_B1.c: 493: float i=((char)((100-20)*1.5))-((char)((100-55)*1.5));
  8142  131A  3000               	movlw	0
  8143  131B  00DC               	movwf	getPercentValue@i
  8144  131C  3054               	movlw	84
  8145  131D  00DD               	movwf	getPercentValue@i+1
  8146  131E  3042               	movlw	66
  8147  131F  00DE               	movwf	getPercentValue@i+2
  8148                           
  8149                           ;Dimmer_B1.c: 494: i/=100;
  8150  1320  3000               	movlw	0
  8151  1321  00AE               	movwf	___ftdiv@f2
  8152  1322  30C8               	movlw	200
  8153  1323  00AF               	movwf	___ftdiv@f2+1
  8154  1324  3042               	movlw	66
  8155  1325  00B0               	movwf	___ftdiv@f2+2
  8156  1326  085C               	movf	getPercentValue@i,w
  8157  1327  00B1               	movwf	___ftdiv@f1
  8158  1328  085D               	movf	getPercentValue@i+1,w
  8159  1329  00B2               	movwf	___ftdiv@f1+1
  8160  132A  085E               	movf	getPercentValue@i+2,w
  8161  132B  00B3               	movwf	___ftdiv@f1+2
  8162  132C  318C  24C4  3193   	fcall	___ftdiv
  8163  132F  0020               	movlb	0	; select bank0
  8164  1330  082E               	movf	?___ftdiv,w
  8165  1331  00DC               	movwf	getPercentValue@i
  8166  1332  082F               	movf	?___ftdiv+1,w
  8167  1333  00DD               	movwf	getPercentValue@i+1
  8168  1334  0830               	movf	?___ftdiv+2,w
  8169  1335  00DE               	movwf	getPercentValue@i+2
  8170                           
  8171                           ;Dimmer_B1.c: 495: return (char)(((100-value)*i)+((char)((100-55)*1.5)));
  8172  1336  085B               	movf	getPercentValue@value,w
  8173  1337  00D9               	movwf	??_getPercentValue
  8174  1338  01DA               	clrf	??_getPercentValue+1
  8175  1339  09D9               	comf	??_getPercentValue,f
  8176  133A  09DA               	comf	??_getPercentValue+1,f
  8177  133B  0AD9               	incf	??_getPercentValue,f
  8178  133C  1903               	skipnz
  8179  133D  0ADA               	incf	??_getPercentValue+1,f
  8180  133E  0859               	movf	??_getPercentValue,w
  8181  133F  3E64               	addlw	100
  8182  1340  00A8               	movwf	___awtoft@c
  8183  1341  3000               	movlw	0
  8184  1342  3D5A               	addwfc	??_getPercentValue+1,w
  8185  1343  00A9               	movwf	___awtoft@c+1
  8186  1344  319C  24D0  3193   	fcall	___awtoft
  8187  1347  0020               	movlb	0	; select bank0
  8188  1348  0828               	movf	?___awtoft,w
  8189  1349  00B1               	movwf	___ftmul@f2
  8190  134A  0829               	movf	?___awtoft+1,w
  8191  134B  00B2               	movwf	___ftmul@f2+1
  8192  134C  082A               	movf	?___awtoft+2,w
  8193  134D  00B3               	movwf	___ftmul@f2+2
  8194  134E  085C               	movf	getPercentValue@i,w
  8195  134F  00AE               	movwf	___ftmul@f1
  8196  1350  085D               	movf	getPercentValue@i+1,w
  8197  1351  00AF               	movwf	___ftmul@f1+1
  8198  1352  085E               	movf	getPercentValue@i+2,w
  8199  1353  00B0               	movwf	___ftmul@f1+2
  8200  1354  318D  256D  3193   	fcall	___ftmul
  8201  1357  0020               	movlb	0	; select bank0
  8202  1358  082E               	movf	?___ftmul,w
  8203  1359  00C1               	movwf	___ftadd@f2
  8204  135A  082F               	movf	?___ftmul+1,w
  8205  135B  00C2               	movwf	___ftadd@f2+1
  8206  135C  0830               	movf	?___ftmul+2,w
  8207  135D  00C3               	movwf	___ftadd@f2+2
  8208  135E  3000               	movlw	0
  8209  135F  00BE               	movwf	___ftadd@f1
  8210  1360  3086               	movlw	134
  8211  1361  00BF               	movwf	___ftadd@f1+1
  8212  1362  3042               	movlw	66
  8213  1363  00C0               	movwf	___ftadd@f1+2
  8214  1364  318F  270A  3193   	fcall	___ftadd
  8215  1367  0020               	movlb	0	; select bank0
  8216  1368  083E               	movf	?___ftadd,w
  8217  1369  00CB               	movwf	___fttol@f1
  8218  136A  083F               	movf	?___ftadd+1,w
  8219  136B  00CC               	movwf	___fttol@f1+1
  8220  136C  0840               	movf	?___ftadd+2,w
  8221  136D  00CD               	movwf	___fttol@f1+2
  8222  136E  3189  215E         	fcall	___fttol
  8223  1370  0020               	movlb	0	; select bank0
  8224  1371  084B               	movf	?___fttol,w
  8225  1372  0008               	return
  8226  1373                     __end_of_getPercentValue:	
  8227                           
  8228                           	psect	text33
  8229  0D6D                     __ptext33:	
  8230 ;; *************** function ___ftmul *****************
  8231 ;; Defined at:
  8232 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\ftmul.c"
  8233 ;; Parameters:    Size  Location     Type
  8234 ;;  f1              3   14[BANK0 ] float 
  8235 ;;  f2              3   17[BANK0 ] float 
  8236 ;; Auto vars:     Size  Location     Type
  8237 ;;  f3_as_produc    3   25[BANK0 ] unsigned um
  8238 ;;  sign            1   29[BANK0 ] unsigned char 
  8239 ;;  cntr            1   28[BANK0 ] unsigned char 
  8240 ;;  exp             1   24[BANK0 ] unsigned char 
  8241 ;; Return value:  Size  Location     Type
  8242 ;;                  3   14[BANK0 ] float 
  8243 ;; Registers used:
  8244 ;;		wreg, status,2, status,0, pclath, cstack
  8245 ;; Tracked objects:
  8246 ;;		On entry : 0/0
  8247 ;;		On exit  : 0/0
  8248 ;;		Unchanged: 0/0
  8249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8250 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8251 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8252 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8253 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8254 ;;Total ram usage:       16 bytes
  8255 ;; Hardware stack levels used:    1
  8256 ;; Hardware stack levels required when called:    5
  8257 ;; This function calls:
  8258 ;;		___ftpack
  8259 ;; This function is called by:
  8260 ;;		_getPercentValue
  8261 ;; This function uses a non-reentrant model
  8262 ;;
  8263                           
  8264                           
  8265                           ;psect for function ___ftmul
  8266  0D6D                     ___ftmul:	
  8267                           
  8268                           ;incstack = 0
  8269                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  8270  0D6D  0020               	movlb	0	; select bank0
  8271  0D6E  082E               	movf	___ftmul@f1,w
  8272  0D6F  00B4               	movwf	??___ftmul
  8273  0D70  082F               	movf	___ftmul@f1+1,w
  8274  0D71  00B5               	movwf	??___ftmul+1
  8275  0D72  0830               	movf	___ftmul@f1+2,w
  8276  0D73  00B6               	movwf	??___ftmul+2
  8277  0D74  1003               	clrc
  8278  0D75  0D35               	rlf	??___ftmul+1,w
  8279  0D76  0D36               	rlf	??___ftmul+2,w
  8280  0D77  00B7               	movwf	??___ftmul+3
  8281  0D78  0837               	movf	??___ftmul+3,w
  8282  0D79  00B8               	movwf	___ftmul@exp
  8283  0D7A  08B8               	movf	___ftmul@exp,f
  8284  0D7B  1D03               	skipz
  8285  0D7C  2D84               	goto	l8082
  8286  0D7D  3000               	movlw	0
  8287  0D7E  00AE               	movwf	?___ftmul
  8288  0D7F  3000               	movlw	0
  8289  0D80  00AF               	movwf	?___ftmul+1
  8290  0D81  3000               	movlw	0
  8291  0D82  00B0               	movwf	?___ftmul+2
  8292  0D83  0008               	return
  8293  0D84                     l8082:	
  8294  0D84  0831               	movf	___ftmul@f2,w
  8295  0D85  00B4               	movwf	??___ftmul
  8296  0D86  0832               	movf	___ftmul@f2+1,w
  8297  0D87  00B5               	movwf	??___ftmul+1
  8298  0D88  0833               	movf	___ftmul@f2+2,w
  8299  0D89  00B6               	movwf	??___ftmul+2
  8300  0D8A  1003               	clrc
  8301  0D8B  0D35               	rlf	??___ftmul+1,w
  8302  0D8C  0D36               	rlf	??___ftmul+2,w
  8303  0D8D  00B7               	movwf	??___ftmul+3
  8304  0D8E  0837               	movf	??___ftmul+3,w
  8305  0D8F  00BD               	movwf	___ftmul@sign
  8306  0D90  08BD               	movf	___ftmul@sign,f
  8307  0D91  1D03               	skipz
  8308  0D92  2D9A               	goto	l8088
  8309  0D93  3000               	movlw	0
  8310  0D94  00AE               	movwf	?___ftmul
  8311  0D95  3000               	movlw	0
  8312  0D96  00AF               	movwf	?___ftmul+1
  8313  0D97  3000               	movlw	0
  8314  0D98  00B0               	movwf	?___ftmul+2
  8315  0D99  0008               	return
  8316  0D9A                     l8088:	
  8317  0D9A  083D               	movf	___ftmul@sign,w
  8318  0D9B  3E7B               	addlw	123
  8319  0D9C  00B4               	movwf	??___ftmul
  8320  0D9D  0834               	movf	??___ftmul,w
  8321  0D9E  07B8               	addwf	___ftmul@exp,f
  8322  0D9F  082E               	movf	___ftmul@f1,w
  8323  0DA0  00B4               	movwf	??___ftmul
  8324  0DA1  082F               	movf	___ftmul@f1+1,w
  8325  0DA2  00B5               	movwf	??___ftmul+1
  8326  0DA3  0830               	movf	___ftmul@f1+2,w
  8327  0DA4  00B6               	movwf	??___ftmul+2
  8328  0DA5  3010               	movlw	16
  8329  0DA6                     u7745:	
  8330  0DA6  36B6               	lsrf	??___ftmul+2,f
  8331  0DA7  0CB5               	rrf	??___ftmul+1,f
  8332  0DA8  0CB4               	rrf	??___ftmul,f
  8333  0DA9  0B89               	decfsz	9,f
  8334  0DAA  2DA6               	goto	u7745
  8335  0DAB  0834               	movf	??___ftmul,w
  8336  0DAC  00B7               	movwf	??___ftmul+3
  8337  0DAD  0837               	movf	??___ftmul+3,w
  8338  0DAE  00BD               	movwf	___ftmul@sign
  8339  0DAF  0831               	movf	___ftmul@f2,w
  8340  0DB0  00B4               	movwf	??___ftmul
  8341  0DB1  0832               	movf	___ftmul@f2+1,w
  8342  0DB2  00B5               	movwf	??___ftmul+1
  8343  0DB3  0833               	movf	___ftmul@f2+2,w
  8344  0DB4  00B6               	movwf	??___ftmul+2
  8345  0DB5  3010               	movlw	16
  8346  0DB6                     u7755:	
  8347  0DB6  36B6               	lsrf	??___ftmul+2,f
  8348  0DB7  0CB5               	rrf	??___ftmul+1,f
  8349  0DB8  0CB4               	rrf	??___ftmul,f
  8350  0DB9  0B89               	decfsz	9,f
  8351  0DBA  2DB6               	goto	u7755
  8352  0DBB  0834               	movf	??___ftmul,w
  8353  0DBC  00B7               	movwf	??___ftmul+3
  8354  0DBD  0837               	movf	??___ftmul+3,w
  8355  0DBE  06BD               	xorwf	___ftmul@sign,f
  8356  0DBF  3080               	movlw	128
  8357  0DC0  00B4               	movwf	??___ftmul
  8358  0DC1  0834               	movf	??___ftmul,w
  8359  0DC2  05BD               	andwf	___ftmul@sign,f
  8360  0DC3  17AF               	bsf	___ftmul@f1+1,7
  8361  0DC4  17B2               	bsf	___ftmul@f2+1,7
  8362  0DC5  30FF               	movlw	255
  8363  0DC6  05B1               	andwf	___ftmul@f2,f
  8364  0DC7  30FF               	movlw	255
  8365  0DC8  05B2               	andwf	___ftmul@f2+1,f
  8366  0DC9  3000               	movlw	0
  8367  0DCA  05B3               	andwf	___ftmul@f2+2,f
  8368  0DCB  3000               	movlw	0
  8369  0DCC  00B9               	movwf	___ftmul@f3_as_product
  8370  0DCD  3000               	movlw	0
  8371  0DCE  00BA               	movwf	___ftmul@f3_as_product+1
  8372  0DCF  3000               	movlw	0
  8373  0DD0  00BB               	movwf	___ftmul@f3_as_product+2
  8374  0DD1  3007               	movlw	7
  8375  0DD2  00B4               	movwf	??___ftmul
  8376  0DD3  0834               	movf	??___ftmul,w
  8377  0DD4  00BC               	movwf	___ftmul@cntr
  8378  0DD5                     l8100:	
  8379  0DD5  1C2E               	btfss	___ftmul@f1,0
  8380  0DD6  2DDD               	goto	l8104
  8381  0DD7  0831               	movf	___ftmul@f2,w
  8382  0DD8  07B9               	addwf	___ftmul@f3_as_product,f
  8383  0DD9  0832               	movf	___ftmul@f2+1,w
  8384  0DDA  3DBA               	addwfc	___ftmul@f3_as_product+1,f
  8385  0DDB  0833               	movf	___ftmul@f2+2,w
  8386  0DDC  3DBB               	addwfc	___ftmul@f3_as_product+2,f
  8387  0DDD                     l8104:	
  8388  0DDD  3001               	movlw	1
  8389  0DDE                     u7775:	
  8390  0DDE  36B0               	lsrf	___ftmul@f1+2,f
  8391  0DDF  0CAF               	rrf	___ftmul@f1+1,f
  8392  0DE0  0CAE               	rrf	___ftmul@f1,f
  8393  0DE1  0B89               	decfsz	9,f
  8394  0DE2  2DDE               	goto	u7775
  8395  0DE3  3001               	movlw	1
  8396  0DE4                     u7785:	
  8397  0DE4  35B1               	lslf	___ftmul@f2,f
  8398  0DE5  0DB2               	rlf	___ftmul@f2+1,f
  8399  0DE6  0DB3               	rlf	___ftmul@f2+2,f
  8400  0DE7  0B89               	decfsz	9,f
  8401  0DE8  2DE4               	goto	u7785
  8402  0DE9  3001               	movlw	1
  8403  0DEA  02BC               	subwf	___ftmul@cntr,f
  8404  0DEB  1D03               	btfss	3,2
  8405  0DEC  2DD5               	goto	l8100
  8406  0DED  3009               	movlw	9
  8407  0DEE  00B4               	movwf	??___ftmul
  8408  0DEF  0834               	movf	??___ftmul,w
  8409  0DF0  00BC               	movwf	___ftmul@cntr
  8410  0DF1                     l8112:	
  8411  0DF1  1C2E               	btfss	___ftmul@f1,0
  8412  0DF2  2DF9               	goto	l8116
  8413  0DF3  0831               	movf	___ftmul@f2,w
  8414  0DF4  07B9               	addwf	___ftmul@f3_as_product,f
  8415  0DF5  0832               	movf	___ftmul@f2+1,w
  8416  0DF6  3DBA               	addwfc	___ftmul@f3_as_product+1,f
  8417  0DF7  0833               	movf	___ftmul@f2+2,w
  8418  0DF8  3DBB               	addwfc	___ftmul@f3_as_product+2,f
  8419  0DF9                     l8116:	
  8420  0DF9  3001               	movlw	1
  8421  0DFA                     u7815:	
  8422  0DFA  36B0               	lsrf	___ftmul@f1+2,f
  8423  0DFB  0CAF               	rrf	___ftmul@f1+1,f
  8424  0DFC  0CAE               	rrf	___ftmul@f1,f
  8425  0DFD  0B89               	decfsz	9,f
  8426  0DFE  2DFA               	goto	u7815
  8427  0DFF  3001               	movlw	1
  8428  0E00                     u7825:	
  8429  0E00  36BB               	lsrf	___ftmul@f3_as_product+2,f
  8430  0E01  0CBA               	rrf	___ftmul@f3_as_product+1,f
  8431  0E02  0CB9               	rrf	___ftmul@f3_as_product,f
  8432  0E03  0B89               	decfsz	9,f
  8433  0E04  2E00               	goto	u7825
  8434  0E05  3001               	movlw	1
  8435  0E06  02BC               	subwf	___ftmul@cntr,f
  8436  0E07  1D03               	btfss	3,2
  8437  0E08  2DF1               	goto	l8112
  8438  0E09  0839               	movf	___ftmul@f3_as_product,w
  8439  0E0A  00A0               	movwf	___ftpack@arg
  8440  0E0B  083A               	movf	___ftmul@f3_as_product+1,w
  8441  0E0C  00A1               	movwf	___ftpack@arg+1
  8442  0E0D  083B               	movf	___ftmul@f3_as_product+2,w
  8443  0E0E  00A2               	movwf	___ftpack@arg+2
  8444  0E0F  0838               	movf	___ftmul@exp,w
  8445  0E10  00B4               	movwf	??___ftmul
  8446  0E11  0834               	movf	??___ftmul,w
  8447  0E12  00A3               	movwf	___ftpack@exp
  8448  0E13  083D               	movf	___ftmul@sign,w
  8449  0E14  00B5               	movwf	??___ftmul+1
  8450  0E15  0835               	movf	??___ftmul+1,w
  8451  0E16  00A4               	movwf	___ftpack@sign
  8452  0E17  3193  23D1         	fcall	___ftpack
  8453  0E19  0020               	movlb	0	; select bank0
  8454  0E1A  0820               	movf	?___ftpack,w
  8455  0E1B  00AE               	movwf	?___ftmul
  8456  0E1C  0821               	movf	?___ftpack+1,w
  8457  0E1D  00AF               	movwf	?___ftmul+1
  8458  0E1E  0822               	movf	?___ftpack+2,w
  8459  0E1F  00B0               	movwf	?___ftmul+2
  8460  0E20  0008               	return
  8461  0E21                     __end_of___ftmul:	
  8462                           
  8463                           	psect	text34
  8464  0F0A                     __ptext34:	
  8465 ;; *************** function ___ftadd *****************
  8466 ;; Defined at:
  8467 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\ftadd.c"
  8468 ;; Parameters:    Size  Location     Type
  8469 ;;  f1              3   30[BANK0 ] float 
  8470 ;;  f2              3   33[BANK0 ] float 
  8471 ;; Auto vars:     Size  Location     Type
  8472 ;;  exp1            1   42[BANK0 ] unsigned char 
  8473 ;;  exp2            1   41[BANK0 ] unsigned char 
  8474 ;;  sign            1   40[BANK0 ] unsigned char 
  8475 ;; Return value:  Size  Location     Type
  8476 ;;                  3   30[BANK0 ] float 
  8477 ;; Registers used:
  8478 ;;		wreg, status,2, status,0, pclath, cstack
  8479 ;; Tracked objects:
  8480 ;;		On entry : 0/0
  8481 ;;		On exit  : 0/0
  8482 ;;		Unchanged: 0/0
  8483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8484 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8485 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8486 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8487 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8488 ;;Total ram usage:       13 bytes
  8489 ;; Hardware stack levels used:    1
  8490 ;; Hardware stack levels required when called:    5
  8491 ;; This function calls:
  8492 ;;		___ftpack
  8493 ;; This function is called by:
  8494 ;;		_getPercentValue
  8495 ;; This function uses a non-reentrant model
  8496 ;;
  8497                           
  8498                           
  8499                           ;psect for function ___ftadd
  8500  0F0A                     ___ftadd:	
  8501                           
  8502                           ;incstack = 0
  8503                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  8504  0F0A  0020               	movlb	0	; select bank0
  8505  0F0B  083E               	movf	___ftadd@f1,w
  8506  0F0C  00C4               	movwf	??___ftadd
  8507  0F0D  083F               	movf	___ftadd@f1+1,w
  8508  0F0E  00C5               	movwf	??___ftadd+1
  8509  0F0F  0840               	movf	___ftadd@f1+2,w
  8510  0F10  00C6               	movwf	??___ftadd+2
  8511  0F11  1003               	clrc
  8512  0F12  0D45               	rlf	??___ftadd+1,w
  8513  0F13  0D46               	rlf	??___ftadd+2,w
  8514  0F14  00C7               	movwf	??___ftadd+3
  8515  0F15  0847               	movf	??___ftadd+3,w
  8516  0F16  00CA               	movwf	___ftadd@exp1
  8517  0F17  0841               	movf	___ftadd@f2,w
  8518  0F18  00C4               	movwf	??___ftadd
  8519  0F19  0842               	movf	___ftadd@f2+1,w
  8520  0F1A  00C5               	movwf	??___ftadd+1
  8521  0F1B  0843               	movf	___ftadd@f2+2,w
  8522  0F1C  00C6               	movwf	??___ftadd+2
  8523  0F1D  1003               	clrc
  8524  0F1E  0D45               	rlf	??___ftadd+1,w
  8525  0F1F  0D46               	rlf	??___ftadd+2,w
  8526  0F20  00C7               	movwf	??___ftadd+3
  8527  0F21  0847               	movf	??___ftadd+3,w
  8528  0F22  00C9               	movwf	___ftadd@exp2
  8529  0F23  084A               	movf	___ftadd@exp1,w
  8530  0F24  1903               	btfsc	3,2
  8531  0F25  2F32               	goto	l7970
  8532  0F26  0849               	movf	___ftadd@exp2,w
  8533  0F27  024A               	subwf	___ftadd@exp1,w
  8534  0F28  1803               	skipnc
  8535  0F29  2F39               	goto	l7974
  8536  0F2A  034A               	decf	___ftadd@exp1,w
  8537  0F2B  3AFF               	xorlw	255
  8538  0F2C  0749               	addwf	___ftadd@exp2,w
  8539  0F2D  00C4               	movwf	??___ftadd
  8540  0F2E  3019               	movlw	25
  8541  0F2F  0244               	subwf	??___ftadd,w
  8542  0F30  1C03               	skipc
  8543  0F31  2F39               	goto	l7974
  8544  0F32                     l7970:	
  8545  0F32  0841               	movf	___ftadd@f2,w
  8546  0F33  00BE               	movwf	?___ftadd
  8547  0F34  0842               	movf	___ftadd@f2+1,w
  8548  0F35  00BF               	movwf	?___ftadd+1
  8549  0F36  0843               	movf	___ftadd@f2+2,w
  8550  0F37  00C0               	movwf	?___ftadd+2
  8551  0F38  0008               	return
  8552  0F39                     l7974:	
  8553  0F39  0849               	movf	___ftadd@exp2,w
  8554  0F3A  1903               	btfsc	3,2
  8555  0F3B  0008               	return
  8556  0F3C  084A               	movf	___ftadd@exp1,w
  8557  0F3D  0249               	subwf	___ftadd@exp2,w
  8558  0F3E  1803               	skipnc
  8559  0F3F  2F48               	goto	l7980
  8560  0F40  0349               	decf	___ftadd@exp2,w
  8561  0F41  3AFF               	xorlw	255
  8562  0F42  074A               	addwf	___ftadd@exp1,w
  8563  0F43  00C4               	movwf	??___ftadd
  8564  0F44  3019               	movlw	25
  8565  0F45  0244               	subwf	??___ftadd,w
  8566  0F46  1803               	btfsc	3,0
  8567  0F47  0008               	return
  8568  0F48                     l7980:	
  8569  0F48  3006               	movlw	6
  8570  0F49  00C4               	movwf	??___ftadd
  8571  0F4A  0844               	movf	??___ftadd,w
  8572  0F4B  00C8               	movwf	___ftadd@sign
  8573  0F4C  1BC0               	btfsc	___ftadd@f1+2,7
  8574  0F4D  17C8               	bsf	___ftadd@sign,7
  8575  0F4E  1BC3               	btfsc	___ftadd@f2+2,7
  8576  0F4F  1748               	bsf	___ftadd@sign,6
  8577  0F50  17BF               	bsf	___ftadd@f1+1,7
  8578  0F51  30FF               	movlw	255
  8579  0F52  05BE               	andwf	___ftadd@f1,f
  8580  0F53  30FF               	movlw	255
  8581  0F54  05BF               	andwf	___ftadd@f1+1,f
  8582  0F55  3000               	movlw	0
  8583  0F56  05C0               	andwf	___ftadd@f1+2,f
  8584  0F57  17C2               	bsf	___ftadd@f2+1,7
  8585  0F58  30FF               	movlw	255
  8586  0F59  05C1               	andwf	___ftadd@f2,f
  8587  0F5A  30FF               	movlw	255
  8588  0F5B  05C2               	andwf	___ftadd@f2+1,f
  8589  0F5C  3000               	movlw	0
  8590  0F5D  05C3               	andwf	___ftadd@f2+2,f
  8591  0F5E  0849               	movf	___ftadd@exp2,w
  8592  0F5F  024A               	subwf	___ftadd@exp1,w
  8593  0F60  1803               	skipnc
  8594  0F61  2F84               	goto	l8002
  8595  0F62                     l7992:	
  8596  0F62  3001               	movlw	1
  8597  0F63                     u7505:	
  8598  0F63  35C1               	lslf	___ftadd@f2,f
  8599  0F64  0DC2               	rlf	___ftadd@f2+1,f
  8600  0F65  0DC3               	rlf	___ftadd@f2+2,f
  8601  0F66  0B89               	decfsz	9,f
  8602  0F67  2F63               	goto	u7505
  8603  0F68  3001               	movlw	1
  8604  0F69  02C9               	subwf	___ftadd@exp2,f
  8605  0F6A  0849               	movf	___ftadd@exp2,w
  8606  0F6B  064A               	xorwf	___ftadd@exp1,w
  8607  0F6C  1903               	skipnz
  8608  0F6D  2F7F               	goto	l8000
  8609  0F6E  3001               	movlw	1
  8610  0F6F  02C8               	subwf	___ftadd@sign,f
  8611  0F70  0848               	movf	___ftadd@sign,w
  8612  0F71  3907               	andlw	7
  8613  0F72  1903               	btfsc	3,2
  8614  0F73  2F7F               	goto	l8000
  8615  0F74  2F62               	goto	l7992
  8616  0F75                     l7998:	
  8617  0F75  3001               	movlw	1
  8618  0F76                     u7535:	
  8619  0F76  36C0               	lsrf	___ftadd@f1+2,f
  8620  0F77  0CBF               	rrf	___ftadd@f1+1,f
  8621  0F78  0CBE               	rrf	___ftadd@f1,f
  8622  0F79  0B89               	decfsz	9,f
  8623  0F7A  2F76               	goto	u7535
  8624  0F7B  3001               	movlw	1
  8625  0F7C  00C4               	movwf	??___ftadd
  8626  0F7D  0844               	movf	??___ftadd,w
  8627  0F7E  07CA               	addwf	___ftadd@exp1,f
  8628  0F7F                     l8000:	
  8629  0F7F  084A               	movf	___ftadd@exp1,w
  8630  0F80  0649               	xorwf	___ftadd@exp2,w
  8631  0F81  1903               	btfsc	3,2
  8632  0F82  2FA9               	goto	l3257
  8633  0F83  2F75               	goto	l7998
  8634  0F84                     l8002:	
  8635  0F84  084A               	movf	___ftadd@exp1,w
  8636  0F85  0249               	subwf	___ftadd@exp2,w
  8637  0F86  1803               	skipnc
  8638  0F87  2FA9               	goto	l3257
  8639  0F88                     l8004:	
  8640  0F88  3001               	movlw	1
  8641  0F89                     u7565:	
  8642  0F89  35BE               	lslf	___ftadd@f1,f
  8643  0F8A  0DBF               	rlf	___ftadd@f1+1,f
  8644  0F8B  0DC0               	rlf	___ftadd@f1+2,f
  8645  0F8C  0B89               	decfsz	9,f
  8646  0F8D  2F89               	goto	u7565
  8647  0F8E  3001               	movlw	1
  8648  0F8F  02CA               	subwf	___ftadd@exp1,f
  8649  0F90  0849               	movf	___ftadd@exp2,w
  8650  0F91  064A               	xorwf	___ftadd@exp1,w
  8651  0F92  1903               	skipnz
  8652  0F93  2FA5               	goto	l8012
  8653  0F94  3001               	movlw	1
  8654  0F95  02C8               	subwf	___ftadd@sign,f
  8655  0F96  0848               	movf	___ftadd@sign,w
  8656  0F97  3907               	andlw	7
  8657  0F98  1903               	btfsc	3,2
  8658  0F99  2FA5               	goto	l8012
  8659  0F9A  2F88               	goto	l8004
  8660  0F9B                     l8010:	
  8661  0F9B  3001               	movlw	1
  8662  0F9C                     u7595:	
  8663  0F9C  36C3               	lsrf	___ftadd@f2+2,f
  8664  0F9D  0CC2               	rrf	___ftadd@f2+1,f
  8665  0F9E  0CC1               	rrf	___ftadd@f2,f
  8666  0F9F  0B89               	decfsz	9,f
  8667  0FA0  2F9C               	goto	u7595
  8668  0FA1  3001               	movlw	1
  8669  0FA2  00C4               	movwf	??___ftadd
  8670  0FA3  0844               	movf	??___ftadd,w
  8671  0FA4  07C9               	addwf	___ftadd@exp2,f
  8672  0FA5                     l8012:	
  8673  0FA5  084A               	movf	___ftadd@exp1,w
  8674  0FA6  0649               	xorwf	___ftadd@exp2,w
  8675  0FA7  1D03               	skipz
  8676  0FA8  2F9B               	goto	l8010
  8677  0FA9                     l3257:	
  8678  0FA9  1FC8               	btfss	___ftadd@sign,7
  8679  0FAA  2FBB               	goto	l8016
  8680  0FAB  30FF               	movlw	255
  8681  0FAC  06BE               	xorwf	___ftadd@f1,f
  8682  0FAD  30FF               	movlw	255
  8683  0FAE  06BF               	xorwf	___ftadd@f1+1,f
  8684  0FAF  30FF               	movlw	255
  8685  0FB0  06C0               	xorwf	___ftadd@f1+2,f
  8686  0FB1  3001               	movlw	1
  8687  0FB2  07BE               	addwf	___ftadd@f1,f
  8688  0FB3  3000               	movlw	0
  8689  0FB4  1803               	skipnc
  8690  0FB5  3001               	movlw	1
  8691  0FB6  07BF               	addwf	___ftadd@f1+1,f
  8692  0FB7  3000               	movlw	0
  8693  0FB8  1803               	skipnc
  8694  0FB9  3001               	movlw	1
  8695  0FBA  07C0               	addwf	___ftadd@f1+2,f
  8696  0FBB                     l8016:	
  8697  0FBB  1F48               	btfss	___ftadd@sign,6
  8698  0FBC  2FCD               	goto	l8020
  8699  0FBD  30FF               	movlw	255
  8700  0FBE  06C1               	xorwf	___ftadd@f2,f
  8701  0FBF  30FF               	movlw	255
  8702  0FC0  06C2               	xorwf	___ftadd@f2+1,f
  8703  0FC1  30FF               	movlw	255
  8704  0FC2  06C3               	xorwf	___ftadd@f2+2,f
  8705  0FC3  3001               	movlw	1
  8706  0FC4  07C1               	addwf	___ftadd@f2,f
  8707  0FC5  3000               	movlw	0
  8708  0FC6  1803               	skipnc
  8709  0FC7  3001               	movlw	1
  8710  0FC8  07C2               	addwf	___ftadd@f2+1,f
  8711  0FC9  3000               	movlw	0
  8712  0FCA  1803               	skipnc
  8713  0FCB  3001               	movlw	1
  8714  0FCC  07C3               	addwf	___ftadd@f2+2,f
  8715  0FCD                     l8020:	
  8716  0FCD  01C8               	clrf	___ftadd@sign
  8717  0FCE  083E               	movf	___ftadd@f1,w
  8718  0FCF  07C1               	addwf	___ftadd@f2,f
  8719  0FD0  083F               	movf	___ftadd@f1+1,w
  8720  0FD1  3DC2               	addwfc	___ftadd@f2+1,f
  8721  0FD2  0840               	movf	___ftadd@f1+2,w
  8722  0FD3  3DC3               	addwfc	___ftadd@f2+2,f
  8723  0FD4  1FC3               	btfss	___ftadd@f2+2,7
  8724  0FD5  2FE8               	goto	l8030
  8725  0FD6  30FF               	movlw	255
  8726  0FD7  06C1               	xorwf	___ftadd@f2,f
  8727  0FD8  30FF               	movlw	255
  8728  0FD9  06C2               	xorwf	___ftadd@f2+1,f
  8729  0FDA  30FF               	movlw	255
  8730  0FDB  06C3               	xorwf	___ftadd@f2+2,f
  8731  0FDC  3001               	movlw	1
  8732  0FDD  07C1               	addwf	___ftadd@f2,f
  8733  0FDE  3000               	movlw	0
  8734  0FDF  1803               	skipnc
  8735  0FE0  3001               	movlw	1
  8736  0FE1  07C2               	addwf	___ftadd@f2+1,f
  8737  0FE2  3000               	movlw	0
  8738  0FE3  1803               	skipnc
  8739  0FE4  3001               	movlw	1
  8740  0FE5  07C3               	addwf	___ftadd@f2+2,f
  8741  0FE6  01C8               	clrf	___ftadd@sign
  8742  0FE7  0AC8               	incf	___ftadd@sign,f
  8743  0FE8                     l8030:	
  8744  0FE8  0841               	movf	___ftadd@f2,w
  8745  0FE9  00A0               	movwf	___ftpack@arg
  8746  0FEA  0842               	movf	___ftadd@f2+1,w
  8747  0FEB  00A1               	movwf	___ftpack@arg+1
  8748  0FEC  0843               	movf	___ftadd@f2+2,w
  8749  0FED  00A2               	movwf	___ftpack@arg+2
  8750  0FEE  084A               	movf	___ftadd@exp1,w
  8751  0FEF  00C4               	movwf	??___ftadd
  8752  0FF0  0844               	movf	??___ftadd,w
  8753  0FF1  00A3               	movwf	___ftpack@exp
  8754  0FF2  0848               	movf	___ftadd@sign,w
  8755  0FF3  00C5               	movwf	??___ftadd+1
  8756  0FF4  0845               	movf	??___ftadd+1,w
  8757  0FF5  00A4               	movwf	___ftpack@sign
  8758  0FF6  3193  23D1         	fcall	___ftpack
  8759  0FF8  0020               	movlb	0	; select bank0
  8760  0FF9  0820               	movf	?___ftpack,w
  8761  0FFA  00BE               	movwf	?___ftadd
  8762  0FFB  0821               	movf	?___ftpack+1,w
  8763  0FFC  00BF               	movwf	?___ftadd+1
  8764  0FFD  0822               	movf	?___ftpack+2,w
  8765  0FFE  00C0               	movwf	?___ftadd+2
  8766  0FFF  0008               	return
  8767  1000                     __end_of___ftadd:	
  8768                           
  8769                           	psect	text35
  8770  1D82                     __ptext35:	
  8771 ;; *************** function _RF_RxDisable *****************
  8772 ;; Defined at:
  8773 ;;		line 199 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
  8774 ;; Parameters:    Size  Location     Type
  8775 ;;  rf              1    wreg     unsigned char 
  8776 ;; Auto vars:     Size  Location     Type
  8777 ;;  rf              1    4[BANK0 ] unsigned char 
  8778 ;; Return value:  Size  Location     Type
  8779 ;;		None               void
  8780 ;; Registers used:
  8781 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8782 ;; Tracked objects:
  8783 ;;		On entry : 0/0
  8784 ;;		On exit  : 0/0
  8785 ;;		Unchanged: 0/0
  8786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8788 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8790 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8791 ;;Total ram usage:        1 bytes
  8792 ;; Hardware stack levels used:    1
  8793 ;; Hardware stack levels required when called:    6
  8794 ;; This function calls:
  8795 ;;		_CC2500_WriteCommand
  8796 ;;		_RfPointSelect
  8797 ;;		_setINT_GO
  8798 ;; This function is called by:
  8799 ;;		_setRF_Main
  8800 ;; This function uses a non-reentrant model
  8801 ;;
  8802                           
  8803                           
  8804                           ;psect for function _RF_RxDisable
  8805  1D82                     _RF_RxDisable:	
  8806                           
  8807                           ;incstack = 0
  8808                           ; Regs used in _RF_RxDisable: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8809                           ;RF_RxDisable@rf stored from wreg
  8810  1D82  0020               	movlb	0	; select bank0
  8811  1D83  00A4               	movwf	RF_RxDisable@rf
  8812                           
  8813                           ;RF_Control_B1.c: 201: RfPointSelect(rf);
  8814  1D84  0824               	movf	RF_RxDisable@rf,w
  8815  1D85  3199  2186  319D   	fcall	_RfPointSelect
  8816                           
  8817                           ;RF_Control_B1.c: 203: if(RF->RxStatus)
  8818  1D88  0877               	movf	_RF,w
  8819  1D89  0086               	movwf	6
  8820  1D8A  0187               	clrf	7
  8821  1D8B  1D81               	btfss	1,3
  8822  1D8C  0008               	return
  8823                           
  8824                           ;RF_Control_B1.c: 204: {
  8825                           ;RF_Control_B1.c: 205: RF->RxStatus=0;
  8826  1D8D  0877               	movf	_RF,w
  8827  1D8E  0086               	movwf	6
  8828  1D8F  0187               	clrf	7
  8829  1D90  1181               	bcf	1,3
  8830                           
  8831                           ;RF_Control_B1.c: 206: RF->ReceiveGO=0;
  8832  1D91  0877               	movf	_RF,w
  8833  1D92  0086               	movwf	6
  8834  1D93  0187               	clrf	7
  8835  1D94  1081               	bcf	1,1
  8836                           
  8837                           ;RF_Control_B1.c: 207: RF->DebounceTime=0;
  8838  1D95  0A77               	incf	_RF,w
  8839  1D96  0086               	movwf	6
  8840  1D97  0187               	clrf	7
  8841  1D98  0181               	clrf	1
  8842                           
  8843                           ;RF_Control_B1.c: 208: RF->Debounce=0;
  8844  1D99  0877               	movf	_RF,w
  8845  1D9A  0086               	movwf	6
  8846  1D9B  0187               	clrf	7
  8847  1D9C  1281               	bcf	1,5
  8848                           
  8849                           ;RF_Control_B1.c: 209: CC2500_WriteCommand(0x36);
  8850  1D9D  3036               	movlw	54
  8851  1D9E  319A  225B  319D   	fcall	_CC2500_WriteCommand
  8852                           
  8853                           ;RF_Control_B1.c: 210: CC2500_WriteCommand(0x3A);
  8854  1DA1  303A               	movlw	58
  8855  1DA2  319A  225B  319D   	fcall	_CC2500_WriteCommand
  8856                           
  8857                           ;RF_Control_B1.c: 211: setINT_GO(0);
  8858  1DA5  3000               	movlw	0
  8859  1DA6  3199  215D         	fcall	_setINT_GO
  8860  1DA8  0008               	return
  8861  1DA9                     __end_of_RF_RxDisable:	
  8862                           
  8863                           	psect	text36
  8864  1107                     __ptext36:	
  8865 ;; *************** function _CC2500_TxData *****************
  8866 ;; Defined at:
  8867 ;;		line 30 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
  8868 ;; Parameters:    Size  Location     Type
  8869 ;;		None
  8870 ;; Auto vars:     Size  Location     Type
  8871 ;;  loop_e          1    5[BANK0 ] unsigned char 
  8872 ;; Return value:  Size  Location     Type
  8873 ;;		None               void
  8874 ;; Registers used:
  8875 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8876 ;; Tracked objects:
  8877 ;;		On entry : 0/0
  8878 ;;		On exit  : 0/0
  8879 ;;		Unchanged: 0/0
  8880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8881 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8882 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8883 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8884 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8885 ;;Total ram usage:        2 bytes
  8886 ;; Hardware stack levels used:    1
  8887 ;; Hardware stack levels required when called:    6
  8888 ;; This function calls:
  8889 ;;		_CC2500_WriteByte
  8890 ;;		_CC2500_WriteCommand
  8891 ;; This function is called by:
  8892 ;;		_setRF_Main
  8893 ;; This function uses a non-reentrant model
  8894 ;;
  8895                           
  8896                           
  8897                           ;psect for function _CC2500_TxData
  8898  1107                     _CC2500_TxData:	
  8899                           
  8900                           ;CC2500_B1.c: 32: unsigned char loop_e;
  8901                           ;CC2500_B1.c: 34: RC4=0;
  8902                           
  8903                           ;incstack = 0
  8904                           ; Regs used in _CC2500_TxData: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8905  1107  0020               	movlb	0	; select bank0
  8906  1108  120E               	bcf	14,4	;volatile
  8907                           
  8908                           ;CC2500_B1.c: 35: SPI0Buffer=0x3F+0x40;
  8909  1109  307F               	movlw	127
  8910  110A  00A4               	movwf	??_CC2500_TxData
  8911  110B  0824               	movf	??_CC2500_TxData,w
  8912  110C  0021               	movlb	1	; select bank1
  8913  110D  00BE               	movwf	_SPI0Buffer^(0+128)
  8914  110E                     l299:	
  8915                           ;CC2500_B1.c: 36: while(RC2==1);
  8916                           
  8917  110E  0020               	movlb	0	; select bank0
  8918  110F  190E               	btfsc	14,2	;volatile
  8919  1110  290E               	goto	l299
  8920                           
  8921                           ;CC2500_B1.c: 37: CC2500_WriteByte();
  8922  1111  319B  23A1  3191   	fcall	_CC2500_WriteByte
  8923                           
  8924                           ;CC2500_B1.c: 38: SPI0Buffer=Tx_Length;
  8925  1114  0021               	movlb	1	; select bank1
  8926  1115  083F               	movf	_Tx_Length^(0+128),w
  8927  1116  0020               	movlb	0	; select bank0
  8928  1117  00A4               	movwf	??_CC2500_TxData
  8929  1118  0824               	movf	??_CC2500_TxData,w
  8930  1119  0021               	movlb	1	; select bank1
  8931  111A  00BE               	movwf	_SPI0Buffer^(0+128)
  8932                           
  8933                           ;CC2500_B1.c: 39: CC2500_WriteByte();
  8934  111B  319B  23A1  3191   	fcall	_CC2500_WriteByte
  8935                           
  8936                           ;CC2500_B1.c: 40: for(loop_e=0;loop_e<Tx_Length;loop_e++)
  8937  111E  0020               	movlb	0	; select bank0
  8938  111F  01A5               	clrf	CC2500_TxData@loop_e
  8939  1120                     l8728:	
  8940  1120  0021               	movlb	1	; select bank1
  8941  1121  083F               	movf	_Tx_Length^(0+128),w
  8942  1122  0020               	movlb	0	; select bank0
  8943  1123  0225               	subwf	CC2500_TxData@loop_e,w
  8944  1124  1803               	btfsc	3,0
  8945  1125  2938               	goto	l304
  8946                           
  8947                           ;CC2500_B1.c: 41: {
  8948                           ;CC2500_B1.c: 42: SPI0Buffer=RF_Data[loop_e];
  8949  1126  0825               	movf	CC2500_TxData@loop_e,w
  8950  1127  3EA0               	addlw	_RF_Data& (0+255)
  8951  1128  0086               	movwf	6
  8952  1129  0187               	clrf	7
  8953  112A  0801               	movf	1,w
  8954  112B  00A4               	movwf	??_CC2500_TxData
  8955  112C  0824               	movf	??_CC2500_TxData,w
  8956  112D  0021               	movlb	1	; select bank1
  8957  112E  00BE               	movwf	_SPI0Buffer^(0+128)
  8958                           
  8959                           ;CC2500_B1.c: 43: CC2500_WriteByte();
  8960  112F  319B  23A1  3191   	fcall	_CC2500_WriteByte
  8961  1132  3001               	movlw	1
  8962  1133  0020               	movlb	0	; select bank0
  8963  1134  00A4               	movwf	??_CC2500_TxData
  8964  1135  0824               	movf	??_CC2500_TxData,w
  8965  1136  07A5               	addwf	CC2500_TxData@loop_e,f
  8966  1137  2920               	goto	l8728
  8967  1138                     l304:	
  8968                           
  8969                           ;CC2500_B1.c: 44: }
  8970                           ;CC2500_B1.c: 45: RC4=1;
  8971  1138  160E               	bsf	14,4	;volatile
  8972                           
  8973                           ;CC2500_B1.c: 46: CC2500_WriteCommand(0x35);
  8974  1139  3035               	movlw	53
  8975  113A  319A  225B  3191   	fcall	_CC2500_WriteCommand
  8976  113D                     l305:	
  8977                           ;CC2500_B1.c: 47: while(RB0==0);
  8978                           
  8979  113D  0020               	movlb	0	; select bank0
  8980  113E  1C0D               	btfss	13,0	;volatile
  8981  113F  293D               	goto	l305
  8982  1140                     l308:	
  8983                           ;CC2500_B1.c: 48: while(RB0==1);
  8984                           
  8985  1140  180D               	btfsc	13,0	;volatile
  8986  1141  2940               	goto	l308
  8987                           
  8988                           ;CC2500_B1.c: 49: CC2500_WriteCommand(0x36);
  8989  1142  3036               	movlw	54
  8990  1143  319A  225B  3191   	fcall	_CC2500_WriteCommand
  8991                           
  8992                           ;CC2500_B1.c: 50: CC2500_WriteCommand(0x3B);
  8993  1146  303B               	movlw	59
  8994  1147  319A  225B         	fcall	_CC2500_WriteCommand
  8995                           
  8996                           ;CC2500_B1.c: 51: Transceive_OK=1;
  8997  1149  16F0               	bsf	_Transceive_OK/(0+8),_Transceive_OK& (0+7)
  8998  114A  0008               	return
  8999  114B                     __end_of_CC2500_TxData:	
  9000                           
  9001                           	psect	text37
  9002  1432                     __ptext37:	
  9003 ;; *************** function _CC2500_RxData *****************
  9004 ;; Defined at:
  9005 ;;		line 56 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
  9006 ;; Parameters:    Size  Location     Type
  9007 ;;		None
  9008 ;; Auto vars:     Size  Location     Type
  9009 ;;  loop_f          1    5[BANK0 ] unsigned char 
  9010 ;; Return value:  Size  Location     Type
  9011 ;;		None               void
  9012 ;; Registers used:
  9013 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9014 ;; Tracked objects:
  9015 ;;		On entry : 0/0
  9016 ;;		On exit  : 0/0
  9017 ;;		Unchanged: 0/0
  9018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9019 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9020 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9021 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9022 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9023 ;;Total ram usage:        2 bytes
  9024 ;; Hardware stack levels used:    1
  9025 ;; Hardware stack levels required when called:    6
  9026 ;; This function calls:
  9027 ;;		_CC2500_ReadByte
  9028 ;;		_CC2500_ReadStatus
  9029 ;;		_CC2500_WriteByte
  9030 ;;		_CC2500_WriteCommand
  9031 ;;		_setRF_RxStatus
  9032 ;; This function is called by:
  9033 ;;		_setRF_Main
  9034 ;; This function uses a non-reentrant model
  9035 ;;
  9036                           
  9037                           
  9038                           ;psect for function _CC2500_RxData
  9039  1432                     _CC2500_RxData:	
  9040                           
  9041                           ;CC2500_B1.c: 58: unsigned char loop_f;
  9042                           ;CC2500_B1.c: 62: if(RB0 == 1)
  9043                           
  9044                           ;incstack = 0
  9045                           ; Regs used in _CC2500_RxData: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9046  1432  0020               	movlb	0	; select bank0
  9047  1433  180D               	btfsc	13,0	;volatile
  9048  1434                     l315:	
  9049                           ;CC2500_B1.c: 63: {
  9050                           ;CC2500_B1.c: 64: while(RB0 == 1);
  9051                           
  9052  1434  180D               	btfsc	13,0	;volatile
  9053  1435  2C34               	goto	l315
  9054                           
  9055                           ;CC2500_B1.c: 65: }
  9056                           ;CC2500_B1.c: 66: CC2500_ReadStatus(0x3B);
  9057  1436  303B               	movlw	59
  9058  1437  319C  241F  3194   	fcall	_CC2500_ReadStatus
  9059                           
  9060                           ;CC2500_B1.c: 67: if(s_data != 0)
  9061  143A  0021               	movlb	1	; select bank1
  9062  143B  0842               	movf	_s_data^(0+128),w
  9063  143C  1903               	btfsc	3,2
  9064  143D  2C88               	goto	l8774
  9065                           
  9066                           ;CC2500_B1.c: 69: {
  9067                           ;CC2500_B1.c: 70: RC4=0;
  9068  143E  0020               	movlb	0	; select bank0
  9069  143F  120E               	bcf	14,4	;volatile
  9070                           
  9071                           ;CC2500_B1.c: 71: SPI0Buffer=0x3F+0xC0;
  9072  1440  30FF               	movlw	255
  9073  1441  00A4               	movwf	??_CC2500_RxData
  9074  1442  0824               	movf	??_CC2500_RxData,w
  9075  1443  0021               	movlb	1	; select bank1
  9076  1444  00BE               	movwf	_SPI0Buffer^(0+128)
  9077  1445                     l319:	
  9078                           ;CC2500_B1.c: 72: while(RC2==1);
  9079                           
  9080  1445  0020               	movlb	0	; select bank0
  9081  1446  190E               	btfsc	14,2	;volatile
  9082  1447  2C45               	goto	l319
  9083                           
  9084                           ;CC2500_B1.c: 73: CC2500_WriteByte();
  9085  1448  319B  23A1  3194   	fcall	_CC2500_WriteByte
  9086                           
  9087                           ;CC2500_B1.c: 75: CC2500_ReadByte();
  9088  144B  319C  2456  3194   	fcall	_CC2500_ReadByte
  9089                           
  9090                           ;CC2500_B1.c: 76: Rx_Length=SPI0Buffer;
  9091  144E  0021               	movlb	1	; select bank1
  9092  144F  083E               	movf	_SPI0Buffer^(0+128),w
  9093  1450  0020               	movlb	0	; select bank0
  9094  1451  00A4               	movwf	??_CC2500_RxData
  9095  1452  0824               	movf	??_CC2500_RxData,w
  9096  1453  0021               	movlb	1	; select bank1
  9097  1454  00BD               	movwf	_Rx_Length^(0+128)
  9098                           
  9099                           ;CC2500_B1.c: 77: for(loop_f=0;loop_f<Rx_Length;loop_f++)
  9100  1455  0020               	movlb	0	; select bank0
  9101  1456  01A5               	clrf	CC2500_RxData@loop_f
  9102  1457                     l8760:	
  9103  1457  0021               	movlb	1	; select bank1
  9104  1458  083D               	movf	_Rx_Length^(0+128),w
  9105  1459  0020               	movlb	0	; select bank0
  9106  145A  0225               	subwf	CC2500_RxData@loop_f,w
  9107  145B  1803               	btfsc	3,0
  9108  145C  2C6F               	goto	l8762
  9109                           
  9110                           ;CC2500_B1.c: 78: {
  9111                           ;CC2500_B1.c: 79: CC2500_ReadByte();
  9112  145D  319C  2456  3194   	fcall	_CC2500_ReadByte
  9113                           
  9114                           ;CC2500_B1.c: 80: RF_Data[loop_f]=SPI0Buffer;
  9115  1460  0021               	movlb	1	; select bank1
  9116  1461  083E               	movf	_SPI0Buffer^(0+128),w
  9117  1462  0020               	movlb	0	; select bank0
  9118  1463  00A4               	movwf	??_CC2500_RxData
  9119  1464  0825               	movf	CC2500_RxData@loop_f,w
  9120  1465  3EA0               	addlw	_RF_Data& (0+255)
  9121  1466  0086               	movwf	6
  9122  1467  0187               	clrf	7
  9123  1468  0824               	movf	??_CC2500_RxData,w
  9124  1469  0081               	movwf	1
  9125  146A  3001               	movlw	1
  9126  146B  00A4               	movwf	??_CC2500_RxData
  9127  146C  0824               	movf	??_CC2500_RxData,w
  9128  146D  07A5               	addwf	CC2500_RxData@loop_f,f
  9129  146E  2C57               	goto	l8760
  9130  146F                     l8762:	
  9131                           
  9132                           ;CC2500_B1.c: 81: }
  9133                           ;CC2500_B1.c: 82: CC2500_ReadByte();
  9134  146F  319C  2456  3194   	fcall	_CC2500_ReadByte
  9135                           
  9136                           ;CC2500_B1.c: 83: RSSI=SPI0Buffer;
  9137  1472  0021               	movlb	1	; select bank1
  9138  1473  083E               	movf	_SPI0Buffer^(0+128),w
  9139  1474  0020               	movlb	0	; select bank0
  9140  1475  00A4               	movwf	??_CC2500_RxData
  9141  1476  0824               	movf	??_CC2500_RxData,w
  9142  1477  0021               	movlb	1	; select bank1
  9143  1478  00BC               	movwf	_RSSI^(0+128)
  9144                           
  9145                           ;CC2500_B1.c: 84: CC2500_ReadByte();
  9146  1479  319C  2456  3194   	fcall	_CC2500_ReadByte
  9147                           
  9148                           ;CC2500_B1.c: 85: CRC=SPI0Buffer;
  9149  147C  0021               	movlb	1	; select bank1
  9150  147D  083E               	movf	_SPI0Buffer^(0+128),w
  9151  147E  0020               	movlb	0	; select bank0
  9152  147F  00A4               	movwf	??_CC2500_RxData
  9153  1480  0824               	movf	??_CC2500_RxData,w
  9154  1481  0021               	movlb	1	; select bank1
  9155  1482  00B7               	movwf	_CRC^(0+128)
  9156                           
  9157                           ;CC2500_B1.c: 86: RC4=1;
  9158  1483  0020               	movlb	0	; select bank0
  9159  1484  160E               	bsf	14,4	;volatile
  9160                           
  9161                           ;CC2500_B1.c: 87: if(CRC & 0x80)
  9162  1485  0021               	movlb	1	; select bank1
  9163  1486  1BB7               	btfsc	_CRC^(0+128),7
  9164                           
  9165                           ;CC2500_B1.c: 88: Receive_OK=1;
  9166  1487  1570               	bsf	_Receive_OK/(0+8),_Receive_OK& (0+7)
  9167  1488                     l8774:	
  9168                           
  9169                           ;CC2500_B1.c: 89: }
  9170                           ;CC2500_B1.c: 90: CC2500_WriteCommand(0x36);
  9171  1488  3036               	movlw	54
  9172  1489  319A  225B  3194   	fcall	_CC2500_WriteCommand
  9173                           
  9174                           ;CC2500_B1.c: 91: CC2500_WriteCommand(0x3A);
  9175  148C  303A               	movlw	58
  9176  148D  319A  225B  3194   	fcall	_CC2500_WriteCommand
  9177                           
  9178                           ;CC2500_B1.c: 92: setRF_RxStatus(1,0);
  9179  1490  0020               	movlb	0	; select bank0
  9180  1491  01A2               	clrf	setRF_RxStatus@command
  9181  1492  3001               	movlw	1
  9182  1493  319A  2221         	fcall	_setRF_RxStatus
  9183  1495  0008               	return
  9184  1496                     __end_of_CC2500_RxData:	
  9185                           
  9186                           	psect	text38
  9187  1A21                     __ptext38:	
  9188 ;; *************** function _setRF_RxStatus *****************
  9189 ;; Defined at:
  9190 ;;		line 43 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
  9191 ;; Parameters:    Size  Location     Type
  9192 ;;  rf              1    wreg     unsigned char 
  9193 ;;  command         1    2[BANK0 ] unsigned char 
  9194 ;; Auto vars:     Size  Location     Type
  9195 ;;  rf              1    3[BANK0 ] unsigned char 
  9196 ;; Return value:  Size  Location     Type
  9197 ;;		None               void
  9198 ;; Registers used:
  9199 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9200 ;; Tracked objects:
  9201 ;;		On entry : 0/0
  9202 ;;		On exit  : 0/0
  9203 ;;		Unchanged: 0/0
  9204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9205 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9206 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9208 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9209 ;;Total ram usage:        2 bytes
  9210 ;; Hardware stack levels used:    1
  9211 ;; Hardware stack levels required when called:    5
  9212 ;; This function calls:
  9213 ;;		_RfPointSelect
  9214 ;; This function is called by:
  9215 ;;		_CC2500_RxData
  9216 ;; This function uses a non-reentrant model
  9217 ;;
  9218                           
  9219                           
  9220                           ;psect for function _setRF_RxStatus
  9221  1A21                     _setRF_RxStatus:	
  9222                           
  9223                           ;incstack = 0
  9224                           ; Regs used in _setRF_RxStatus: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9225                           ;setRF_RxStatus@rf stored from wreg
  9226  1A21  0020               	movlb	0	; select bank0
  9227  1A22  00A3               	movwf	setRF_RxStatus@rf
  9228                           
  9229                           ;RF_Control_B1.c: 45: RfPointSelect(rf);
  9230  1A23  0823               	movf	setRF_RxStatus@rf,w
  9231  1A24  3199  2186         	fcall	_RfPointSelect
  9232                           
  9233                           ;RF_Control_B1.c: 46: RF->RxStatus=command;
  9234  1A26  0877               	movf	_RF,w
  9235  1A27  0086               	movwf	6
  9236  1A28  0187               	clrf	7
  9237  1A29  0020               	movlb	0	; select bank0
  9238  1A2A  0822               	movf	setRF_RxStatus@command,w
  9239  1A2B  1181               	bcf	1,3
  9240  1A2C  1D03               	skipz
  9241  1A2D  1581               	bsf	1,3
  9242  1A2E  0008               	return
  9243  1A2F                     __end_of_setRF_RxStatus:	
  9244                           
  9245                           	psect	text39
  9246  1C1F                     __ptext39:	
  9247 ;; *************** function _CC2500_ReadStatus *****************
  9248 ;; Defined at:
  9249 ;;		line 267 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
  9250 ;; Parameters:    Size  Location     Type
  9251 ;;  status_addr     1    wreg     unsigned char 
  9252 ;; Auto vars:     Size  Location     Type
  9253 ;;  status_addr     1    3[BANK0 ] unsigned char 
  9254 ;; Return value:  Size  Location     Type
  9255 ;;		None               void
  9256 ;; Registers used:
  9257 ;;		wreg, status,2, status,0, pclath, cstack
  9258 ;; Tracked objects:
  9259 ;;		On entry : 0/0
  9260 ;;		On exit  : 0/0
  9261 ;;		Unchanged: 0/0
  9262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9263 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9264 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9265 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9266 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9267 ;;Total ram usage:        2 bytes
  9268 ;; Hardware stack levels used:    1
  9269 ;; Hardware stack levels required when called:    5
  9270 ;; This function calls:
  9271 ;;		_CC2500_ReadByte
  9272 ;;		_CC2500_WriteByte
  9273 ;; This function is called by:
  9274 ;;		_CC2500_RxData
  9275 ;; This function uses a non-reentrant model
  9276 ;;
  9277                           
  9278                           
  9279                           ;psect for function _CC2500_ReadStatus
  9280  1C1F                     _CC2500_ReadStatus:	
  9281                           
  9282                           ;incstack = 0
  9283                           ; Regs used in _CC2500_ReadStatus: [wreg+status,2+status,0+pclath+cstack]
  9284                           ;CC2500_ReadStatus@status_addr stored from wreg
  9285  1C1F  0020               	movlb	0	; select bank0
  9286  1C20  00A3               	movwf	CC2500_ReadStatus@status_addr
  9287                           
  9288                           ;CC2500_B1.c: 269: RC4=0;
  9289  1C21  120E               	bcf	14,4	;volatile
  9290                           
  9291                           ;CC2500_B1.c: 270: SPI0Buffer=status_addr+0xC0;
  9292  1C22  0823               	movf	CC2500_ReadStatus@status_addr,w
  9293  1C23  3EC0               	addlw	192
  9294  1C24  00A2               	movwf	??_CC2500_ReadStatus
  9295  1C25  0822               	movf	??_CC2500_ReadStatus,w
  9296  1C26  0021               	movlb	1	; select bank1
  9297  1C27  00BE               	movwf	_SPI0Buffer^(0+128)
  9298  1C28                     l395:	
  9299                           ;CC2500_B1.c: 272: while(RC2==1);
  9300                           
  9301  1C28  0020               	movlb	0	; select bank0
  9302  1C29  190E               	btfsc	14,2	;volatile
  9303  1C2A  2C28               	goto	l395
  9304                           
  9305                           ;CC2500_B1.c: 274: CC2500_WriteByte();
  9306  1C2B  319B  23A1  319C   	fcall	_CC2500_WriteByte
  9307                           
  9308                           ;CC2500_B1.c: 275: CC2500_ReadByte();
  9309  1C2E  319C  2456         	fcall	_CC2500_ReadByte
  9310                           
  9311                           ;CC2500_B1.c: 276: RC4=1;
  9312  1C30  0020               	movlb	0	; select bank0
  9313  1C31  160E               	bsf	14,4	;volatile
  9314                           
  9315                           ;CC2500_B1.c: 278: s_data=SPI0Buffer;
  9316  1C32  0021               	movlb	1	; select bank1
  9317  1C33  083E               	movf	_SPI0Buffer^(0+128),w
  9318  1C34  0020               	movlb	0	; select bank0
  9319  1C35  00A2               	movwf	??_CC2500_ReadStatus
  9320  1C36  0822               	movf	??_CC2500_ReadStatus,w
  9321  1C37  0021               	movlb	1	; select bank1
  9322  1C38  00C2               	movwf	_s_data^(0+128)
  9323  1C39  0008               	return
  9324  1C3A                     __end_of_CC2500_ReadStatus:	
  9325                           
  9326                           	psect	text40
  9327  1C56                     __ptext40:	
  9328 ;; *************** function _CC2500_ReadByte *****************
  9329 ;; Defined at:
  9330 ;;		line 210 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
  9331 ;; Parameters:    Size  Location     Type
  9332 ;;		None
  9333 ;; Auto vars:     Size  Location     Type
  9334 ;;  loop_b          1    1[BANK0 ] unsigned char 
  9335 ;; Return value:  Size  Location     Type
  9336 ;;		None               void
  9337 ;; Registers used:
  9338 ;;		wreg, status,2, status,0
  9339 ;; Tracked objects:
  9340 ;;		On entry : 0/0
  9341 ;;		On exit  : 0/0
  9342 ;;		Unchanged: 0/0
  9343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9344 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9345 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9346 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9347 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9348 ;;Total ram usage:        2 bytes
  9349 ;; Hardware stack levels used:    1
  9350 ;; Hardware stack levels required when called:    4
  9351 ;; This function calls:
  9352 ;;		Nothing
  9353 ;; This function is called by:
  9354 ;;		_CC2500_RxData
  9355 ;;		_CC2500_ReadStatus
  9356 ;;		_CC2500_ReadREG
  9357 ;; This function uses a non-reentrant model
  9358 ;;
  9359                           
  9360                           
  9361                           ;psect for function _CC2500_ReadByte
  9362  1C56                     _CC2500_ReadByte:	
  9363                           
  9364                           ;CC2500_B1.c: 212: unsigned char loop_b;
  9365                           ;CC2500_B1.c: 213: for(loop_b=0;loop_b<8;loop_b++)
  9366                           
  9367                           ;incstack = 0
  9368                           ; Regs used in _CC2500_ReadByte: [wreg+status,2+status,0]
  9369  1C56  0020               	movlb	0	; select bank0
  9370  1C57  01A1               	clrf	CC2500_ReadByte@loop_b
  9371  1C58                     L11:	
  9372  1C58  3008               	movlw	8
  9373  1C59  0221               	subwf	CC2500_ReadByte@loop_b,w
  9374  1C5A  1803               	btfsc	3,0
  9375  1C5B  0008               	return
  9376                           
  9377                           ;CC2500_B1.c: 214: {
  9378                           ;CC2500_B1.c: 215: RC1=1;
  9379  1C5C  148E               	bsf	14,1	;volatile
  9380                           
  9381                           ;CC2500_B1.c: 216: SPI0Buffer<<=1;
  9382  1C5D  1003               	clrc
  9383  1C5E  0021               	movlb	1	; select bank1
  9384  1C5F  0DBE               	rlf	_SPI0Buffer^(0+128),f
  9385                           
  9386                           ;CC2500_B1.c: 217: if(RC2 == 1)
  9387  1C60  0020               	movlb	0	; select bank0
  9388  1C61  1D0E               	btfss	14,2	;volatile
  9389  1C62  2C66               	goto	l8460
  9390                           
  9391                           ;CC2500_B1.c: 218: SPI0Buffer |= 0x01;
  9392  1C63  0021               	movlb	1	; select bank1
  9393  1C64  143E               	bsf	_SPI0Buffer^(0+128),0
  9394  1C65  2C6C               	goto	l8462
  9395  1C66                     l8460:	
  9396                           
  9397                           ;CC2500_B1.c: 219: else
  9398                           ;CC2500_B1.c: 220: SPI0Buffer &= 0xFE;
  9399  1C66  30FE               	movlw	254
  9400  1C67  0020               	movlb	0	; select bank0
  9401  1C68  00A0               	movwf	??_CC2500_ReadByte
  9402  1C69  0820               	movf	??_CC2500_ReadByte,w
  9403  1C6A  0021               	movlb	1	; select bank1
  9404  1C6B  05BE               	andwf	_SPI0Buffer^(0+128),f
  9405  1C6C                     l8462:	
  9406                           
  9407                           ;CC2500_B1.c: 221: RC1=0;
  9408  1C6C  0020               	movlb	0	; select bank0
  9409  1C6D  108E               	bcf	14,1	;volatile
  9410  1C6E  3001               	movlw	1
  9411  1C6F  00A0               	movwf	??_CC2500_ReadByte
  9412  1C70  0820               	movf	??_CC2500_ReadByte,w
  9413  1C71  07A1               	addwf	CC2500_ReadByte@loop_b,f
  9414  1C72  2C58               	goto	L11
  9415  1C73                     __end_of_CC2500_ReadByte:	
  9416                           
  9417                           	psect	text41
  9418  18F1                     __ptext41:	
  9419 ;; *************** function _RF_Initialization *****************
  9420 ;; Defined at:
  9421 ;;		line 17 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
  9422 ;; Parameters:    Size  Location     Type
  9423 ;;		None
  9424 ;; Auto vars:     Size  Location     Type
  9425 ;;		None
  9426 ;; Return value:  Size  Location     Type
  9427 ;;		None               void
  9428 ;; Registers used:
  9429 ;;		wreg, status,2, status,0, pclath, cstack
  9430 ;; Tracked objects:
  9431 ;;		On entry : 0/0
  9432 ;;		On exit  : 0/0
  9433 ;;		Unchanged: 0/0
  9434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9438 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9439 ;;Total ram usage:        0 bytes
  9440 ;; Hardware stack levels used:    1
  9441 ;; Hardware stack levels required when called:    5
  9442 ;; This function calls:
  9443 ;;		_setRF_Initialization
  9444 ;; This function is called by:
  9445 ;;		_main
  9446 ;; This function uses a non-reentrant model
  9447 ;;
  9448                           
  9449                           
  9450                           ;psect for function _RF_Initialization
  9451  18F1                     _RF_Initialization:	
  9452                           
  9453                           ;RF_Control_B1.c: 20: setRF_Initialization(1);
  9454                           
  9455                           ;incstack = 0
  9456                           ; Regs used in _RF_Initialization: [wreg+status,2+status,0+pclath+cstack]
  9457  18F1  3001               	movlw	1
  9458  18F2  3199  2125         	fcall	_setRF_Initialization
  9459  18F4  0008               	return
  9460  18F5                     __end_of_RF_Initialization:	
  9461                           
  9462                           	psect	text42
  9463  1925                     __ptext42:	
  9464 ;; *************** function _setRF_Initialization *****************
  9465 ;; Defined at:
  9466 ;;		line 50 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
  9467 ;; Parameters:    Size  Location     Type
  9468 ;;  rf              1    wreg     unsigned char 
  9469 ;; Auto vars:     Size  Location     Type
  9470 ;;  rf              1    0[COMMON] unsigned char 
  9471 ;; Return value:  Size  Location     Type
  9472 ;;		None               void
  9473 ;; Registers used:
  9474 ;;		wreg
  9475 ;; Tracked objects:
  9476 ;;		On entry : 0/0
  9477 ;;		On exit  : 0/0
  9478 ;;		Unchanged: 0/0
  9479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9482 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9483 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9484 ;;Total ram usage:        1 bytes
  9485 ;; Hardware stack levels used:    1
  9486 ;; Hardware stack levels required when called:    4
  9487 ;; This function calls:
  9488 ;;		Nothing
  9489 ;; This function is called by:
  9490 ;;		_RF_Initialization
  9491 ;; This function uses a non-reentrant model
  9492 ;;
  9493                           
  9494                           
  9495                           ;psect for function _setRF_Initialization
  9496  1925                     _setRF_Initialization:	
  9497                           
  9498                           ;RF_Control_B1.c: 54: Tx_Length=21;
  9499                           
  9500                           ;incstack = 0
  9501                           ; Regs used in _setRF_Initialization: [wreg]
  9502  1925  3015               	movlw	21
  9503  1926  0020               	movlb	0	; select bank0
  9504  1927  00A0               	movwf	??_setRF_Initialization
  9505  1928  0820               	movf	??_setRF_Initialization,w
  9506  1929  0021               	movlb	1	; select bank1
  9507  192A  00BF               	movwf	_Tx_Length^(0+128)
  9508  192B  0008               	return
  9509  192C                     __end_of_setRF_Initialization:	
  9510                           
  9511                           	psect	text43
  9512  18DC                     __ptext43:	
  9513 ;; *************** function _PowerFault_Main *****************
  9514 ;; Defined at:
  9515 ;;		line 22 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\PowerFault_B1.c"
  9516 ;; Parameters:    Size  Location     Type
  9517 ;;		None
  9518 ;; Auto vars:     Size  Location     Type
  9519 ;;		None
  9520 ;; Return value:  Size  Location     Type
  9521 ;;		None               void
  9522 ;; Registers used:
  9523 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9524 ;; Tracked objects:
  9525 ;;		On entry : 0/0
  9526 ;;		On exit  : 0/0
  9527 ;;		Unchanged: 0/0
  9528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9529 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9530 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9532 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9533 ;;Total ram usage:        0 bytes
  9534 ;; Hardware stack levels used:    1
  9535 ;; Hardware stack levels required when called:   10
  9536 ;; This function calls:
  9537 ;;		_setPowerFault_Main
  9538 ;; This function is called by:
  9539 ;;		_main
  9540 ;; This function uses a non-reentrant model
  9541 ;;
  9542                           
  9543                           
  9544                           ;psect for function _PowerFault_Main
  9545  18DC                     _PowerFault_Main:	
  9546                           
  9547                           ;PowerFault_B1.c: 25: setPowerFault_Main();
  9548                           
  9549                           ;incstack = 0
  9550                           ; Regs used in _PowerFault_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9551  18DC  3186  261B         	fcall	_setPowerFault_Main
  9552  18DE  0008               	return
  9553  18DF                     __end_of_PowerFault_Main:	
  9554                           
  9555                           	psect	text44
  9556  061B                     __ptext44:	
  9557 ;; *************** function _setPowerFault_Main *****************
  9558 ;; Defined at:
  9559 ;;		line 61 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\PowerFault_B1.c"
  9560 ;; Parameters:    Size  Location     Type
  9561 ;;		None
  9562 ;; Auto vars:     Size  Location     Type
  9563 ;;		None
  9564 ;; Return value:  Size  Location     Type
  9565 ;;		None               void
  9566 ;; Registers used:
  9567 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9568 ;; Tracked objects:
  9569 ;;		On entry : 0/0
  9570 ;;		On exit  : 0/0
  9571 ;;		Unchanged: 0/0
  9572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9573 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9574 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9575 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9576 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9577 ;;Total ram usage:        2 bytes
  9578 ;; Hardware stack levels used:    1
  9579 ;; Hardware stack levels required when called:    9
  9580 ;; This function calls:
  9581 ;;		_getTemp_Safe
  9582 ;;		_setPowerFault_Exceptions
  9583 ;; This function is called by:
  9584 ;;		_PowerFault_Main
  9585 ;; This function uses a non-reentrant model
  9586 ;;
  9587                           
  9588                           
  9589                           ;psect for function _setPowerFault_Main
  9590  061B                     _setPowerFault_Main:	
  9591                           
  9592                           ;PowerFault_B1.c: 63: if(PF->Enable)
  9593                           
  9594                           ;incstack = 0
  9595                           ; Regs used in _setPowerFault_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9596  061B  0876               	movf	_PF,w
  9597  061C  0086               	movwf	6
  9598  061D  3001               	movlw	1	; select bank2/3
  9599  061E  0087               	movwf	7
  9600  061F  1C01               	btfss	1,0
  9601  0620  0008               	return
  9602                           
  9603                           ;PowerFault_B1.c: 64: {
  9604                           ;PowerFault_B1.c: 65: if(PF->ADtoGO == 0)
  9605  0621  0876               	movf	_PF,w
  9606  0622  0086               	movwf	6
  9607  0623  3001               	movlw	1	; select bank2/3
  9608  0624  0087               	movwf	7
  9609  0625  1981               	btfsc	1,3
  9610  0626  2E65               	goto	l9380
  9611                           
  9612                           ;PowerFault_B1.c: 66: {
  9613                           ;PowerFault_B1.c: 67: PF->Time++;
  9614  0627  0876               	movf	_PF,w
  9615  0628  3E06               	addlw	6
  9616  0629  0086               	movwf	6
  9617  062A  3001               	movlw	1	; select bank2/3
  9618  062B  0087               	movwf	7
  9619  062C  3001               	movlw	1
  9620  062D  0781               	addwf	1,f
  9621  062E  3141               	addfsr 1,1
  9622  062F  1803               	skipnc
  9623  0630  0A81               	incf	1,f
  9624                           
  9625                           ;PowerFault_B1.c: 69: {
  9626                           ;PowerFault_B1.c: 70: if(1 && getTemp_Safe())
  9627  0631  0876               	movf	_PF,w
  9628  0632  3E06               	addlw	6
  9629  0633  0086               	movwf	6
  9630  0634  3001               	movlw	1	; select bank2/3
  9631  0635  0087               	movwf	7
  9632  0636  3F40               	moviw [0]fsr1
  9633  0637  0020               	movlb	0	; select bank0
  9634  0638  00AD               	movwf	??_setPowerFault_Main
  9635  0639  3F41               	moviw [1]fsr1
  9636  063A  00AE               	movwf	??_setPowerFault_Main+1
  9637  063B  3002               	movlw	2
  9638  063C  022E               	subwf	??_setPowerFault_Main+1,w
  9639  063D  30BC               	movlw	188
  9640  063E  1903               	skipnz
  9641  063F  022D               	subwf	??_setPowerFault_Main,w
  9642  0640  1C03               	skipc
  9643  0641  0008               	return
  9644  0642  3199  211E  3186   	fcall	_getTemp_Safe
  9645  0645  3A00               	xorlw	0
  9646  0646  1903               	skipnz
  9647  0647  2E5B               	goto	l9378
  9648                           
  9649                           ;PowerFault_B1.c: 71: {
  9650                           ;PowerFault_B1.c: 72: PF->Time=0;
  9651  0648  0876               	movf	_PF,w
  9652  0649  3E06               	addlw	6
  9653  064A  0086               	movwf	6
  9654  064B  3001               	movlw	1	; select bank2/3
  9655  064C  0087               	movwf	7
  9656  064D  3000               	movlw	0
  9657  064E  3FC0               	movwi [0]fsr1
  9658  064F  3FC1               	movwi [1]fsr1
  9659                           
  9660                           ;PowerFault_B1.c: 73: PF->ADtoGO=1;
  9661  0650  0876               	movf	_PF,w
  9662  0651  0086               	movwf	6
  9663  0652  3001               	movlw	1	; select bank2/3
  9664  0653  0087               	movwf	7
  9665  0654  1581               	bsf	1,3
  9666                           
  9667                           ;PowerFault_B1.c: 74: PF->Safe=0;
  9668  0655  0876               	movf	_PF,w
  9669  0656  0086               	movwf	6
  9670  0657  3001               	movlw	1	; select bank2/3
  9671  0658  0087               	movwf	7
  9672  0659  1101               	bcf	1,2
  9673                           
  9674                           ;PowerFault_B1.c: 75: }
  9675  065A  0008               	return
  9676  065B                     l9378:	
  9677                           
  9678                           ;PowerFault_B1.c: 76: else
  9679                           ;PowerFault_B1.c: 77: {
  9680                           ;PowerFault_B1.c: 78: PF->Time=700;
  9681  065B  0876               	movf	_PF,w
  9682  065C  3E06               	addlw	6
  9683  065D  0086               	movwf	6
  9684  065E  3001               	movlw	1	; select bank2/3
  9685  065F  0087               	movwf	7
  9686  0660  30BC               	movlw	188
  9687  0661  3FC0               	movwi [0]fsr1
  9688  0662  3002               	movlw	2
  9689  0663  3FC1               	movwi [1]fsr1
  9690                           
  9691                           ;PowerFault_B1.c: 79: }
  9692                           ;PowerFault_B1.c: 80: }
  9693                           ;PowerFault_B1.c: 81: }
  9694  0664  0008               	return
  9695  0665                     l9380:	
  9696                           
  9697                           ;PowerFault_B1.c: 82: else
  9698                           ;PowerFault_B1.c: 83: {
  9699                           ;PowerFault_B1.c: 84: PF->Time++;
  9700  0665  0876               	movf	_PF,w
  9701  0666  3E06               	addlw	6
  9702  0667  0086               	movwf	6
  9703  0668  3001               	movlw	1	; select bank2/3
  9704  0669  0087               	movwf	7
  9705  066A  3001               	movlw	1
  9706  066B  0781               	addwf	1,f
  9707  066C  3141               	addfsr 1,1
  9708  066D  1803               	skipnc
  9709  066E  0A81               	incf	1,f
  9710                           
  9711                           ;PowerFault_B1.c: 85: if(PF->Time >= 2)
  9712  066F  0876               	movf	_PF,w
  9713  0670  3E06               	addlw	6
  9714  0671  0086               	movwf	6
  9715  0672  3001               	movlw	1	; select bank2/3
  9716  0673  0087               	movwf	7
  9717  0674  3F40               	moviw [0]fsr1
  9718  0675  0020               	movlb	0	; select bank0
  9719  0676  00AD               	movwf	??_setPowerFault_Main
  9720  0677  3F41               	moviw [1]fsr1
  9721  0678  00AE               	movwf	??_setPowerFault_Main+1
  9722  0679  3000               	movlw	0
  9723  067A  022E               	subwf	??_setPowerFault_Main+1,w
  9724  067B  3002               	movlw	2
  9725  067C  1903               	skipnz
  9726  067D  022D               	subwf	??_setPowerFault_Main,w
  9727  067E  1C03               	skipc
  9728  067F  0008               	return
  9729                           
  9730                           ;PowerFault_B1.c: 86: {
  9731                           ;PowerFault_B1.c: 87: PF->Time=0;
  9732  0680  0876               	movf	_PF,w
  9733  0681  3E06               	addlw	6
  9734  0682  0086               	movwf	6
  9735  0683  3001               	movlw	1	; select bank2/3
  9736  0684  0087               	movwf	7
  9737  0685  3000               	movlw	0
  9738  0686  3FC0               	movwi [0]fsr1
  9739  0687  3FC1               	movwi [1]fsr1
  9740                           
  9741                           ;PowerFault_B1.c: 88: PF->ADtoGO=0;
  9742  0688  0876               	movf	_PF,w
  9743  0689  0086               	movwf	6
  9744  068A  3001               	movlw	1	; select bank2/3
  9745  068B  0087               	movwf	7
  9746  068C  1181               	bcf	1,3
  9747                           
  9748                           ;PowerFault_B1.c: 90: if(PF->ERROR)
  9749  068D  0876               	movf	_PF,w
  9750  068E  0086               	movwf	6
  9751  068F  3001               	movlw	1	; select bank2/3
  9752  0690  0087               	movwf	7
  9753  0691  1C81               	btfss	1,1
  9754  0692  2ECE               	goto	l9400
  9755                           
  9756                           ;PowerFault_B1.c: 91: {
  9757                           ;PowerFault_B1.c: 92: if(PF->AD <= (300+100) && PF->AD >= (300-100))
  9758  0693  0A76               	incf	_PF,w
  9759  0694  0086               	movwf	6
  9760  0695  3001               	movlw	1	; select bank2/3
  9761  0696  0087               	movwf	7
  9762  0697  3F40               	moviw [0]fsr1
  9763  0698  00AD               	movwf	??_setPowerFault_Main
  9764  0699  3F41               	moviw [1]fsr1
  9765  069A  00AE               	movwf	??_setPowerFault_Main+1
  9766  069B  3001               	movlw	1
  9767  069C  022E               	subwf	??_setPowerFault_Main+1,w
  9768  069D  3091               	movlw	145
  9769  069E  1903               	skipnz
  9770  069F  022D               	subwf	??_setPowerFault_Main,w
  9771  06A0  1803               	skipnc
  9772  06A1  2F0A               	goto	l9412
  9773  06A2  0A76               	incf	_PF,w
  9774  06A3  0086               	movwf	6
  9775  06A4  3001               	movlw	1	; select bank2/3
  9776  06A5  0087               	movwf	7
  9777  06A6  3F40               	moviw [0]fsr1
  9778  06A7  00AD               	movwf	??_setPowerFault_Main
  9779  06A8  3F41               	moviw [1]fsr1
  9780  06A9  00AE               	movwf	??_setPowerFault_Main+1
  9781  06AA  3000               	movlw	0
  9782  06AB  022E               	subwf	??_setPowerFault_Main+1,w
  9783  06AC  30C8               	movlw	200
  9784  06AD  1903               	skipnz
  9785  06AE  022D               	subwf	??_setPowerFault_Main,w
  9786  06AF  1C03               	skipc
  9787  06B0  2F0A               	goto	l9412
  9788                           
  9789                           ;PowerFault_B1.c: 93: {
  9790                           ;PowerFault_B1.c: 94: PF->Count++;
  9791  06B1  3001               	movlw	1
  9792  06B2  00AD               	movwf	??_setPowerFault_Main
  9793  06B3  0876               	movf	_PF,w
  9794  06B4  3E05               	addlw	5
  9795  06B5  0086               	movwf	6
  9796  06B6  3001               	movlw	1	; select bank2/3
  9797  06B7  0087               	movwf	7
  9798  06B8  082D               	movf	??_setPowerFault_Main,w
  9799  06B9  0781               	addwf	1,f
  9800                           
  9801                           ;PowerFault_B1.c: 95: if(PF->Count > 1)
  9802  06BA  0876               	movf	_PF,w
  9803  06BB  3E05               	addlw	5
  9804  06BC  0086               	movwf	6
  9805  06BD  3001               	movlw	1	; select bank2/3
  9806  06BE  0087               	movwf	7
  9807  06BF  3002               	movlw	2
  9808  06C0  0201               	subwf	1,w
  9809  06C1  1C03               	skipc
  9810  06C2  2F10               	goto	l9414
  9811                           
  9812                           ;PowerFault_B1.c: 96: {
  9813                           ;PowerFault_B1.c: 97: PF->Count=0;
  9814  06C3  0876               	movf	_PF,w
  9815  06C4  3E05               	addlw	5
  9816  06C5  0086               	movwf	6
  9817  06C6  3001               	movlw	1	; select bank2/3
  9818  06C7  0087               	movwf	7
  9819  06C8  0181               	clrf	1
  9820                           
  9821                           ;PowerFault_B1.c: 98: setPowerFault_Exceptions(0);
  9822  06C9  3000               	movlw	0
  9823  06CA  319F  2749  3186   	fcall	_setPowerFault_Exceptions
  9824                           
  9825                           ;PowerFault_B1.c: 99: }
  9826                           ;PowerFault_B1.c: 100: }
  9827  06CD  2F10               	goto	l9414
  9828  06CE                     l9400:	
  9829                           ;PowerFault_B1.c: 104: }
  9830                           ;PowerFault_B1.c: 105: }
  9831                           
  9832                           ;PowerFault_B1.c: 101: else
  9833                           ;PowerFault_B1.c: 102: {
  9834                           ;PowerFault_B1.c: 103: PF->Count=0;
  9835                           
  9836                           
  9837                           ;PowerFault_B1.c: 106: else
  9838                           ;PowerFault_B1.c: 107: {
  9839                           ;PowerFault_B1.c: 108: if(PF->AD >= (300+100) || PF->AD <= (310-100))
  9840  06CE  0A76               	incf	_PF,w
  9841  06CF  0086               	movwf	6
  9842  06D0  3001               	movlw	1	; select bank2/3
  9843  06D1  0087               	movwf	7
  9844  06D2  3F40               	moviw [0]fsr1
  9845  06D3  0020               	movlb	0	; select bank0
  9846  06D4  00AD               	movwf	??_setPowerFault_Main
  9847  06D5  3F41               	moviw [1]fsr1
  9848  06D6  00AE               	movwf	??_setPowerFault_Main+1
  9849  06D7  3001               	movlw	1
  9850  06D8  022E               	subwf	??_setPowerFault_Main+1,w
  9851  06D9  3090               	movlw	144
  9852  06DA  1903               	skipnz
  9853  06DB  022D               	subwf	??_setPowerFault_Main,w
  9854  06DC  1803               	skipnc
  9855  06DD  2EED               	goto	l9404
  9856  06DE  0A76               	incf	_PF,w
  9857  06DF  0086               	movwf	6
  9858  06E0  3001               	movlw	1	; select bank2/3
  9859  06E1  0087               	movwf	7
  9860  06E2  3F40               	moviw [0]fsr1
  9861  06E3  00AD               	movwf	??_setPowerFault_Main
  9862  06E4  3F41               	moviw [1]fsr1
  9863  06E5  00AE               	movwf	??_setPowerFault_Main+1
  9864  06E6  3000               	movlw	0
  9865  06E7  022E               	subwf	??_setPowerFault_Main+1,w
  9866  06E8  30D3               	movlw	211
  9867  06E9  1903               	skipnz
  9868  06EA  022D               	subwf	??_setPowerFault_Main,w
  9869  06EB  1803               	skipnc
  9870  06EC  2F0A               	goto	l9412
  9871  06ED                     l9404:	
  9872                           
  9873                           ;PowerFault_B1.c: 109: {
  9874                           ;PowerFault_B1.c: 110: PF->Count++;
  9875  06ED  3001               	movlw	1
  9876  06EE  00AD               	movwf	??_setPowerFault_Main
  9877  06EF  0876               	movf	_PF,w
  9878  06F0  3E05               	addlw	5
  9879  06F1  0086               	movwf	6
  9880  06F2  3001               	movlw	1	; select bank2/3
  9881  06F3  0087               	movwf	7
  9882  06F4  082D               	movf	??_setPowerFault_Main,w
  9883  06F5  0781               	addwf	1,f
  9884                           
  9885                           ;PowerFault_B1.c: 111: if(PF->Count > 1)
  9886  06F6  0876               	movf	_PF,w
  9887  06F7  3E05               	addlw	5
  9888  06F8  0086               	movwf	6
  9889  06F9  3001               	movlw	1	; select bank2/3
  9890  06FA  0087               	movwf	7
  9891  06FB  3002               	movlw	2
  9892  06FC  0201               	subwf	1,w
  9893  06FD  1C03               	skipc
  9894  06FE  2F10               	goto	l9414
  9895                           
  9896                           ;PowerFault_B1.c: 112: {
  9897                           ;PowerFault_B1.c: 113: PF->Count=0;
  9898  06FF  0876               	movf	_PF,w
  9899  0700  3E05               	addlw	5
  9900  0701  0086               	movwf	6
  9901  0702  3001               	movlw	1	; select bank2/3
  9902  0703  0087               	movwf	7
  9903  0704  0181               	clrf	1
  9904                           
  9905                           ;PowerFault_B1.c: 114: setPowerFault_Exceptions(1);
  9906  0705  3001               	movlw	1
  9907  0706  319F  2749  3186   	fcall	_setPowerFault_Exceptions
  9908                           
  9909                           ;PowerFault_B1.c: 115: }
  9910                           ;PowerFault_B1.c: 116: }
  9911  0709  2F10               	goto	l9414
  9912  070A                     l9412:	
  9913                           
  9914                           ;PowerFault_B1.c: 117: else
  9915                           ;PowerFault_B1.c: 118: {
  9916                           ;PowerFault_B1.c: 119: PF->Count=0;
  9917  070A  0876               	movf	_PF,w
  9918  070B  3E05               	addlw	5
  9919  070C  0086               	movwf	6
  9920  070D  3001               	movlw	1	; select bank2/3
  9921  070E  0087               	movwf	7
  9922  070F  0181               	clrf	1
  9923  0710                     l9414:	
  9924                           
  9925                           ;PowerFault_B1.c: 120: }
  9926                           ;PowerFault_B1.c: 122: }
  9927                           ;PowerFault_B1.c: 123: if(PF->ERROR == 0)
  9928  0710  0876               	movf	_PF,w
  9929  0711  0086               	movwf	6
  9930  0712  3001               	movlw	1	; select bank2/3
  9931  0713  0087               	movwf	7
  9932  0714  1881               	btfsc	1,1
  9933  0715  2F1B               	goto	l2302
  9934                           
  9935                           ;PowerFault_B1.c: 124: {
  9936                           ;PowerFault_B1.c: 125: PF->Safe=1;
  9937  0716  0876               	movf	_PF,w
  9938  0717  0086               	movwf	6
  9939  0718  3001               	movlw	1	; select bank2/3
  9940  0719  0087               	movwf	7
  9941  071A  1501               	bsf	1,2
  9942  071B                     l2302:	
  9943                           
  9944                           ;PowerFault_B1.c: 126: }
  9945                           ;PowerFault_B1.c: 127: PF->AD=0;
  9946  071B  0A76               	incf	_PF,w
  9947  071C  0086               	movwf	6
  9948  071D  3001               	movlw	1	; select bank2/3
  9949  071E  0087               	movwf	7
  9950  071F  3000               	movlw	0
  9951  0720  3FC0               	movwi [0]fsr1
  9952  0721  3FC1               	movwi [1]fsr1
  9953  0722  0008               	return
  9954  0723                     __end_of_setPowerFault_Main:	
  9955                           
  9956                           	psect	text45
  9957  1F49                     __ptext45:	
  9958 ;; *************** function _setPowerFault_Exceptions *****************
  9959 ;; Defined at:
  9960 ;;		line 133 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\PowerFault_B1.c"
  9961 ;; Parameters:    Size  Location     Type
  9962 ;;  command         1    wreg     unsigned char 
  9963 ;; Auto vars:     Size  Location     Type
  9964 ;;  command         1   12[BANK0 ] unsigned char 
  9965 ;; Return value:  Size  Location     Type
  9966 ;;		None               void
  9967 ;; Registers used:
  9968 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9969 ;; Tracked objects:
  9970 ;;		On entry : 0/0
  9971 ;;		On exit  : 0/0
  9972 ;;		Unchanged: 0/0
  9973 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9974 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9975 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9976 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9977 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9978 ;;Total ram usage:        2 bytes
  9979 ;; Hardware stack levels used:    1
  9980 ;; Hardware stack levels required when called:    8
  9981 ;; This function calls:
  9982 ;;		_DimmerLights_Exceptions
  9983 ;;		_setLED
  9984 ;;		_setRF_Enable
  9985 ;;		_setSw_Enable
  9986 ;; This function is called by:
  9987 ;;		_setPowerFault_Main
  9988 ;; This function uses a non-reentrant model
  9989 ;;
  9990                           
  9991                           
  9992                           ;psect for function _setPowerFault_Exceptions
  9993  1F49                     _setPowerFault_Exceptions:	
  9994                           
  9995                           ;incstack = 0
  9996                           ; Regs used in _setPowerFault_Exceptions: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cst
      +                          ack]
  9997                           ;setPowerFault_Exceptions@command stored from wreg
  9998  1F49  0020               	movlb	0	; select bank0
  9999  1F4A  00AC               	movwf	setPowerFault_Exceptions@command
 10000                           
 10001                           ;PowerFault_B1.c: 135: PF->ERROR=command;
 10002  1F4B  0876               	movf	_PF,w
 10003  1F4C  0086               	movwf	6
 10004  1F4D  3001               	movlw	1	; select bank2/3
 10005  1F4E  0087               	movwf	7
 10006  1F4F  082C               	movf	setPowerFault_Exceptions@command,w
 10007  1F50  1081               	bcf	1,1
 10008  1F51  1D03               	skipz
 10009  1F52  1481               	bsf	1,1
 10010                           
 10011                           ;PowerFault_B1.c: 136: PF->Safe=(~command) & 0x01;
 10012  1F53  092C               	comf	setPowerFault_Exceptions@command,w
 10013  1F54  3901               	andlw	1
 10014  1F55  00AB               	movwf	??_setPowerFault_Exceptions
 10015  1F56  0876               	movf	_PF,w
 10016  1F57  0086               	movwf	6
 10017  1F58  3001               	movlw	1	; select bank2/3
 10018  1F59  0087               	movwf	7
 10019  1F5A  0DAB               	rlf	??_setPowerFault_Exceptions,f
 10020  1F5B  0DAB               	rlf	??_setPowerFault_Exceptions,f
 10021  1F5C  0801               	movf	1,w
 10022  1F5D  062B               	xorwf	??_setPowerFault_Exceptions,w
 10023  1F5E  39FB               	andlw	-5
 10024  1F5F  062B               	xorwf	??_setPowerFault_Exceptions,w
 10025  1F60  0081               	movwf	1
 10026                           
 10027                           ;PowerFault_B1.c: 137: if(command == 1)
 10028  1F61  082C               	movf	setPowerFault_Exceptions@command,w
 10029  1F62  3A01               	xorlw	1
 10030  1F63  1D03               	skipz
 10031  1F64  2F69               	goto	l2306
 10032                           
 10033                           ;PowerFault_B1.c: 138: {
 10034                           ;PowerFault_B1.c: 139: DimmerLights_Exceptions(3);
 10035  1F65  3003               	movlw	3
 10036  1F66  3194  24FB  319F   	fcall	_DimmerLights_Exceptions
 10037  1F69                     l2306:	
 10038                           
 10039                           ;PowerFault_B1.c: 143: }
 10040                           ;PowerFault_B1.c: 144: setLED(99,command+10);
 10041  1F69  0020               	movlb	0	; select bank0
 10042  1F6A  082C               	movf	setPowerFault_Exceptions@command,w
 10043  1F6B  3E0A               	addlw	10
 10044  1F6C  00AB               	movwf	??_setPowerFault_Exceptions
 10045  1F6D  082B               	movf	??_setPowerFault_Exceptions,w
 10046  1F6E  00A2               	movwf	setLED@command
 10047  1F6F  3063               	movlw	99
 10048  1F70  3193  2373  319F   	fcall	_setLED
 10049                           
 10050                           ;PowerFault_B1.c: 146: setSw_Enable((~command) & 0x01);
 10051  1F73  0020               	movlb	0	; select bank0
 10052  1F74  092C               	comf	setPowerFault_Exceptions@command,w
 10053  1F75  3901               	andlw	1
 10054  1F76  319C  243A  319F   	fcall	_setSw_Enable
 10055                           
 10056                           ;PowerFault_B1.c: 148: setRF_Enable(1,(~command) & 0x01);
 10057  1F79  0020               	movlb	0	; select bank0
 10058  1F7A  092C               	comf	setPowerFault_Exceptions@command,w
 10059  1F7B  3901               	andlw	1
 10060  1F7C  00AB               	movwf	??_setPowerFault_Exceptions
 10061  1F7D  082B               	movf	??_setPowerFault_Exceptions,w
 10062  1F7E  00A2               	movwf	setRF_Enable@command
 10063  1F7F  3001               	movlw	1
 10064  1F80  319D  25D3         	fcall	_setRF_Enable
 10065  1F82  0008               	return
 10066  1F83                     __end_of_setPowerFault_Exceptions:	
 10067                           
 10068                           	psect	text46
 10069  14FB                     __ptext46:	
 10070 ;; *************** function _DimmerLights_Exceptions *****************
 10071 ;; Defined at:
 10072 ;;		line 246 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 10073 ;; Parameters:    Size  Location     Type
 10074 ;;  status          1    wreg     unsigned char 
 10075 ;; Auto vars:     Size  Location     Type
 10076 ;;  status          1   10[BANK0 ] unsigned char 
 10077 ;; Return value:  Size  Location     Type
 10078 ;;		None               void
 10079 ;; Registers used:
 10080 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10081 ;; Tracked objects:
 10082 ;;		On entry : 0/0
 10083 ;;		On exit  : 0/0
 10084 ;;		Unchanged: 0/0
 10085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10087 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10089 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10090 ;;Total ram usage:        1 bytes
 10091 ;; Hardware stack levels used:    1
 10092 ;; Hardware stack levels required when called:    7
 10093 ;; This function calls:
 10094 ;;		_getDimmerLights_StatusFlag
 10095 ;;		_setBuz
 10096 ;;		_setDimmerLights_ERROR
 10097 ;;		_setDimmerLights_TriggerERROR
 10098 ;; This function is called by:
 10099 ;;		_setOverTemp_Exceptions
 10100 ;;		_setPowerFault_Exceptions
 10101 ;; This function uses a non-reentrant model
 10102 ;;
 10103                           
 10104                           
 10105                           ;psect for function _DimmerLights_Exceptions
 10106  14FB                     _DimmerLights_Exceptions:	
 10107                           
 10108                           ;incstack = 0
 10109                           ; Regs used in _DimmerLights_Exceptions: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 10110                           ;DimmerLights_Exceptions@status stored from wreg
 10111  14FB  0020               	movlb	0	; select bank0
 10112  14FC  00AA               	movwf	DimmerLights_Exceptions@status
 10113                           
 10114                           ;Dimmer_B1.c: 248: if(status == 1)
 10115  14FD  082A               	movf	DimmerLights_Exceptions@status,w
 10116  14FE  3A01               	xorlw	1
 10117  14FF  1D03               	skipz
 10118  1500  2D11               	goto	l8606
 10119                           
 10120                           ;Dimmer_B1.c: 249: {
 10121                           ;Dimmer_B1.c: 250: if(getDimmerLights_StatusFlag())
 10122  1501  319B  2346  3194   	fcall	_getDimmerLights_StatusFlag
 10123  1504  3A00               	xorlw	0
 10124  1505  1903               	skipnz
 10125  1506  2D29               	goto	l8612
 10126                           
 10127                           ;Dimmer_B1.c: 251: {
 10128                           ;Dimmer_B1.c: 252: setBuz(10,300);
 10129  1507  302C               	movlw	44
 10130  1508  0020               	movlb	0	; select bank0
 10131  1509  00A6               	movwf	setBuz@time
 10132  150A  3001               	movlw	1
 10133  150B  00A7               	movwf	setBuz@time+1
 10134  150C  300A               	movlw	10
 10135  150D  3197  2789  3194   	fcall	_setBuz
 10136  1510  2D29               	goto	l8612
 10137  1511                     l8606:	
 10138                           ;Dimmer_B1.c: 264: }
 10139                           
 10140                           ;Dimmer_B1.c: 259: setDimmerLights_ERROR(2);
 10141                           
 10142                           ;Dimmer_B1.c: 253: }
 10143                           ;Dimmer_B1.c: 256: setDimmerLights_ERROR(1);
 10144                           
 10145                           
 10146                           ;Dimmer_B1.c: 265: else if(status == 2)
 10147  1511  0020               	movlb	0	; select bank0
 10148  1512  082A               	movf	DimmerLights_Exceptions@status,w
 10149  1513  3A02               	xorlw	2
 10150  1514  1D03               	skipz
 10151  1515  2D24               	goto	l8610
 10152                           
 10153                           ;Dimmer_B1.c: 266: {
 10154                           ;Dimmer_B1.c: 267: setBuz(5,300);
 10155  1516  302C               	movlw	44
 10156  1517  00A6               	movwf	setBuz@time
 10157  1518  3001               	movlw	1
 10158  1519  00A7               	movwf	setBuz@time+1
 10159  151A  3005               	movlw	5
 10160  151B  3197  2789  3194   	fcall	_setBuz
 10161                           
 10162                           ;Dimmer_B1.c: 268: setDimmerLights_ERROR(Dimmer->Load);
 10163  151E  0021               	movlb	1	; select bank1
 10164  151F  0A38               	incf	_Dimmer^(0+128),w
 10165  1520  0086               	movwf	6
 10166  1521  0187               	clrf	7
 10167  1522  0801               	movf	1,w
 10168  1523  2D2E               	goto	L12
 10169  1524                     l8610:	
 10170                           ;Dimmer_B1.c: 269: }
 10171                           
 10172                           
 10173                           ;Dimmer_B1.c: 270: else if(status == 3)
 10174  1524  0020               	movlb	0	; select bank0
 10175  1525  082A               	movf	DimmerLights_Exceptions@status,w
 10176  1526  3A03               	xorlw	3
 10177  1527  1D03               	skipz
 10178  1528  2D31               	goto	l894
 10179  1529                     l8612:	
 10180                           
 10181                           ;Dimmer_B1.c: 271: {
 10182                           ;Dimmer_B1.c: 273: setDimmerLights_ERROR(1);
 10183  1529  3001               	movlw	1
 10184  152A  3192  221E  3194   	fcall	_setDimmerLights_ERROR
 10185                           
 10186                           ;Dimmer_B1.c: 276: setDimmerLights_ERROR(2);
 10187  152D  3002               	movlw	2
 10188  152E                     L12:	
 10189  152E  3192  221E  3194   	fcall	_setDimmerLights_ERROR
 10190  1531                     l894:	
 10191                           
 10192                           ;Dimmer_B1.c: 281: }
 10193                           ;Dimmer_B1.c: 284: setDimmerLights_TriggerERROR(1,0);
 10194  1531  0020               	movlb	0	; select bank0
 10195  1532  01A2               	clrf	setDimmerLights_TriggerERROR@command
 10196  1533  3001               	movlw	1
 10197  1534  319D  25FD  3194   	fcall	_setDimmerLights_TriggerERROR
 10198                           
 10199                           ;Dimmer_B1.c: 287: setDimmerLights_TriggerERROR(2,0);
 10200  1537  0020               	movlb	0	; select bank0
 10201  1538  01A2               	clrf	setDimmerLights_TriggerERROR@command
 10202  1539  3002               	movlw	2
 10203  153A  319D  25FD  3194   	fcall	_setDimmerLights_TriggerERROR
 10204                           
 10205                           ;Dimmer_B1.c: 293: if(TMain->SelfTest == 0)
 10206  153D  0020               	movlb	0	; select bank0
 10207  153E  086F               	movf	_TMain,w
 10208  153F  3E03               	addlw	3
 10209  1540  0086               	movwf	6
 10210  1541  3001               	movlw	1	; select bank2/3
 10211  1542  0087               	movwf	7
 10212  1543  1801               	btfsc	1,0
 10213  1544  0008               	return
 10214                           
 10215                           ;Dimmer_B1.c: 294: {
 10216                           ;Dimmer_B1.c: 295: TMain->i=0;
 10217  1545  086F               	movf	_TMain,w
 10218  1546  3E0F               	addlw	15
 10219  1547  0086               	movwf	6
 10220  1548  3001               	movlw	1	; select bank2/3
 10221  1549  0087               	movwf	7
 10222  154A  1001               	bcf	1,0
 10223                           
 10224                           ;Dimmer_B1.c: 296: TMain->j=0;
 10225  154B  086F               	movf	_TMain,w
 10226  154C  3E0F               	addlw	15
 10227  154D  0086               	movwf	6
 10228  154E  3001               	movlw	1	; select bank2/3
 10229  154F  0087               	movwf	7
 10230  1550  1081               	bcf	1,1
 10231                           
 10232                           ;Dimmer_B1.c: 297: TMain->k=1;
 10233  1551  086F               	movf	_TMain,w
 10234  1552  3E0F               	addlw	15
 10235  1553  0086               	movwf	6
 10236  1554  3001               	movlw	1	; select bank2/3
 10237  1555  0087               	movwf	7
 10238  1556  1501               	bsf	1,2
 10239                           
 10240                           ;Dimmer_B1.c: 298: TMain->Count2=0;
 10241  1557  086F               	movf	_TMain,w
 10242  1558  3E08               	addlw	8
 10243  1559  0086               	movwf	6
 10244  155A  3001               	movlw	1	; select bank2/3
 10245  155B  0087               	movwf	7
 10246  155C  3000               	movlw	0
 10247  155D  3FC0               	movwi [0]fsr1
 10248  155E  3FC1               	movwi [1]fsr1
 10249  155F  0008               	return
 10250  1560                     __end_of_DimmerLights_Exceptions:	
 10251                           
 10252                           	psect	text47
 10253  1DFD                     __ptext47:	
 10254 ;; *************** function _setDimmerLights_TriggerERROR *****************
 10255 ;; Defined at:
 10256 ;;		line 320 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 10257 ;; Parameters:    Size  Location     Type
 10258 ;;  lights          1    wreg     unsigned char 
 10259 ;;  command         1    2[BANK0 ] unsigned char 
 10260 ;; Auto vars:     Size  Location     Type
 10261 ;;  lights          1    3[BANK0 ] unsigned char 
 10262 ;; Return value:  Size  Location     Type
 10263 ;;		None               void
 10264 ;; Registers used:
 10265 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10266 ;; Tracked objects:
 10267 ;;		On entry : 0/0
 10268 ;;		On exit  : 0/0
 10269 ;;		Unchanged: 0/0
 10270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10271 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10272 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10274 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10275 ;;Total ram usage:        2 bytes
 10276 ;; Hardware stack levels used:    1
 10277 ;; Hardware stack levels required when called:    5
 10278 ;; This function calls:
 10279 ;;		_DimmerLightsPointSelect
 10280 ;; This function is called by:
 10281 ;;		_DimmerLights_Exceptions
 10282 ;; This function uses a non-reentrant model
 10283 ;;
 10284                           
 10285                           
 10286                           ;psect for function _setDimmerLights_TriggerERROR
 10287  1DFD                     _setDimmerLights_TriggerERROR:	
 10288                           
 10289                           ;incstack = 0
 10290                           ; Regs used in _setDimmerLights_TriggerERROR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath
      +                          +cstack]
 10291                           ;setDimmerLights_TriggerERROR@lights stored from wreg
 10292  1DFD  0020               	movlb	0	; select bank0
 10293  1DFE  00A3               	movwf	setDimmerLights_TriggerERROR@lights
 10294                           
 10295                           ;Dimmer_B1.c: 322: DimmerLightsPointSelect(lights);
 10296  1DFF  0823               	movf	setDimmerLights_TriggerERROR@lights,w
 10297  1E00  319A  22CC         	fcall	_DimmerLightsPointSelect
 10298                           
 10299                           ;Dimmer_B1.c: 323: DimmerLights->Trigger=command;
 10300  1E02  0020               	movlb	0	; select bank0
 10301  1E03  086A               	movf	_DimmerLights,w
 10302  1E04  3E09               	addlw	9
 10303  1E05  0086               	movwf	6
 10304  1E06  3001               	movlw	1	; select bank2/3
 10305  1E07  0087               	movwf	7
 10306  1E08  0822               	movf	setDimmerLights_TriggerERROR@command,w
 10307  1E09  1081               	bcf	1,1
 10308  1E0A  1D03               	skipz
 10309  1E0B  1481               	bsf	1,1
 10310                           
 10311                           ;Dimmer_B1.c: 324: DimmerLights->Switch=command;
 10312  1E0C  086A               	movf	_DimmerLights,w
 10313  1E0D  3E09               	addlw	9
 10314  1E0E  0086               	movwf	6
 10315  1E0F  3001               	movlw	1	; select bank2/3
 10316  1E10  0087               	movwf	7
 10317  1E11  0822               	movf	setDimmerLights_TriggerERROR@command,w
 10318  1E12  1001               	bcf	1,0
 10319  1E13  1D03               	skipz
 10320  1E14  1401               	bsf	1,0
 10321                           
 10322                           ;Dimmer_B1.c: 325: DimmerLights->TriggerAdj=command;
 10323  1E15  086A               	movf	_DimmerLights,w
 10324  1E16  3E09               	addlw	9
 10325  1E17  0086               	movwf	6
 10326  1E18  3001               	movlw	1	; select bank2/3
 10327  1E19  0087               	movwf	7
 10328  1E1A  0822               	movf	setDimmerLights_TriggerERROR@command,w
 10329  1E1B  1181               	bcf	1,3
 10330  1E1C  1D03               	skipz
 10331  1E1D  1581               	bsf	1,3
 10332                           
 10333                           ;Dimmer_B1.c: 326: DimmerLights->AdjGo=command;
 10334  1E1E  086A               	movf	_DimmerLights,w
 10335  1E1F  3E09               	addlw	9
 10336  1E20  0086               	movwf	6
 10337  1E21  3001               	movlw	1	; select bank2/3
 10338  1E22  0087               	movwf	7
 10339  1E23  0822               	movf	setDimmerLights_TriggerERROR@command,w
 10340  1E24  1101               	bcf	1,2
 10341  1E25  1D03               	skipz
 10342  1E26  1501               	bsf	1,2
 10343  1E27  0008               	return
 10344  1E28                     __end_of_setDimmerLights_TriggerERROR:	
 10345                           
 10346                           	psect	text48
 10347  121E                     __ptext48:	
 10348 ;; *************** function _setDimmerLights_ERROR *****************
 10349 ;; Defined at:
 10350 ;;		line 302 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 10351 ;; Parameters:    Size  Location     Type
 10352 ;;  lights          1    wreg     unsigned char 
 10353 ;; Auto vars:     Size  Location     Type
 10354 ;;  lights          1    5[BANK0 ] unsigned char 
 10355 ;; Return value:  Size  Location     Type
 10356 ;;		None               void
 10357 ;; Registers used:
 10358 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10359 ;; Tracked objects:
 10360 ;;		On entry : 0/0
 10361 ;;		On exit  : 0/0
 10362 ;;		Unchanged: 0/0
 10363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10365 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10366 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10367 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10368 ;;Total ram usage:        2 bytes
 10369 ;; Hardware stack levels used:    1
 10370 ;; Hardware stack levels required when called:    6
 10371 ;; This function calls:
 10372 ;;		_DimmerLightsPointSelect
 10373 ;;		_setLED
 10374 ;;		_setRFSW_Status
 10375 ;;		_setSw_Status
 10376 ;; This function is called by:
 10377 ;;		_DimmerLights_Exceptions
 10378 ;; This function uses a non-reentrant model
 10379 ;;
 10380                           
 10381                           
 10382                           ;psect for function _setDimmerLights_ERROR
 10383  121E                     _setDimmerLights_ERROR:	
 10384                           
 10385                           ;incstack = 0
 10386                           ; Regs used in _setDimmerLights_ERROR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 10387                           ;setDimmerLights_ERROR@lights stored from wreg
 10388  121E  0020               	movlb	0	; select bank0
 10389  121F  00A5               	movwf	setDimmerLights_ERROR@lights
 10390                           
 10391                           ;Dimmer_B1.c: 304: DimmerLightsPointSelect(lights);
 10392  1220  0825               	movf	setDimmerLights_ERROR@lights,w
 10393  1221  319A  22CC  3192   	fcall	_DimmerLightsPointSelect
 10394                           
 10395                           ;Dimmer_B1.c: 305: if(DimmerLights->Status)
 10396  1224  0020               	movlb	0	; select bank0
 10397  1225  086A               	movf	_DimmerLights,w
 10398  1226  0086               	movwf	6
 10399  1227  3001               	movlw	1	; select bank2/3
 10400  1228  0087               	movwf	7
 10401  1229  1E81               	btfss	1,5
 10402  122A  0008               	return
 10403                           
 10404                           ;Dimmer_B1.c: 306: {
 10405                           ;Dimmer_B1.c: 307: DimmerLights->Signal=0;
 10406  122B  086A               	movf	_DimmerLights,w
 10407  122C  0086               	movwf	6
 10408  122D  3001               	movlw	1	; select bank2/3
 10409  122E  0087               	movwf	7
 10410  122F  1081               	bcf	1,1
 10411                           
 10412                           ;Dimmer_B1.c: 308: DimmerLights->AdjFlag=0;
 10413  1230  086A               	movf	_DimmerLights,w
 10414  1231  0086               	movwf	6
 10415  1232  3001               	movlw	1	; select bank2/3
 10416  1233  0087               	movwf	7
 10417  1234  1181               	bcf	1,3
 10418                           
 10419                           ;Dimmer_B1.c: 309: DimmerLights->AdjStatus=0;
 10420  1235  086A               	movf	_DimmerLights,w
 10421  1236  0086               	movwf	6
 10422  1237  3001               	movlw	1	; select bank2/3
 10423  1238  0087               	movwf	7
 10424  1239  1201               	bcf	1,4
 10425                           
 10426                           ;Dimmer_B1.c: 310: DimmerLights->StatusFlag=0;
 10427  123A  086A               	movf	_DimmerLights,w
 10428  123B  0086               	movwf	6
 10429  123C  3001               	movlw	1	; select bank2/3
 10430  123D  0087               	movwf	7
 10431  123E  1301               	bcf	1,6
 10432                           
 10433                           ;Dimmer_B1.c: 311: DimmerLights->DimmingTimeValue=3;
 10434  123F  3003               	movlw	3
 10435  1240  00A4               	movwf	??_setDimmerLights_ERROR
 10436  1241  086A               	movf	_DimmerLights,w
 10437  1242  3E02               	addlw	2
 10438  1243  0086               	movwf	6
 10439  1244  3001               	movlw	1	; select bank2/3
 10440  1245  0087               	movwf	7
 10441  1246  0824               	movf	??_setDimmerLights_ERROR,w
 10442  1247  0081               	movwf	1
 10443                           
 10444                           ;Dimmer_B1.c: 312: DimmerLights->DimmingValue=DimmerLights->MinimumValue;
 10445  1248  086A               	movf	_DimmerLights,w
 10446  1249  3E06               	addlw	6
 10447  124A  0086               	movwf	6
 10448  124B  3001               	movlw	1	; select bank2/3
 10449  124C  0087               	movwf	7
 10450  124D  0801               	movf	1,w
 10451  124E  00A4               	movwf	??_setDimmerLights_ERROR
 10452  124F  086A               	movf	_DimmerLights,w
 10453  1250  3E04               	addlw	4
 10454  1251  0086               	movwf	6
 10455  1252  3001               	movlw	1	; select bank2/3
 10456  1253  0087               	movwf	7
 10457  1254  0824               	movf	??_setDimmerLights_ERROR,w
 10458  1255  0081               	movwf	1
 10459                           
 10460                           ;Dimmer_B1.c: 313: Dimmer->Detect=1;
 10461  1256  0021               	movlb	1	; select bank1
 10462  1257  0838               	movf	_Dimmer^(0+128),w
 10463  1258  0086               	movwf	6
 10464  1259  0187               	clrf	7
 10465  125A  1401               	bsf	1,0
 10466                           
 10467                           ;Dimmer_B1.c: 314: ;;
 10468                           ;Dimmer_B1.c: 315: setLED(lights,1);
 10469  125B  0020               	movlb	0	; select bank0
 10470  125C  01A2               	clrf	setLED@command
 10471  125D  0AA2               	incf	setLED@command,f
 10472  125E  0825               	movf	setDimmerLights_ERROR@lights,w
 10473  125F  3193  2373  3192   	fcall	_setLED
 10474                           
 10475                           ;Dimmer_B1.c: 316: setSw_Status(lights,0);
 10476  1262  0020               	movlb	0	; select bank0
 10477  1263  01A2               	clrf	setSw_Status@command
 10478  1264  0825               	movf	setDimmerLights_ERROR@lights,w
 10479  1265  319A  224C  3192   	fcall	_setSw_Status
 10480                           
 10481                           ;Dimmer_B1.c: 317: setRFSW_Status(lights,0);
 10482  1268  0020               	movlb	0	; select bank0
 10483  1269  01A2               	clrf	setRFSW_Status@command
 10484  126A  0825               	movf	setDimmerLights_ERROR@lights,w
 10485  126B  319A  223D         	fcall	_setRFSW_Status
 10486  126D  0008               	return
 10487  126E                     __end_of_setDimmerLights_ERROR:	
 10488                           
 10489                           	psect	text49
 10490  191E                     __ptext49:	
 10491 ;; *************** function _getTemp_Safe *****************
 10492 ;; Defined at:
 10493 ;;		line 26 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\OverTemperature_B1.c"
 10494 ;; Parameters:    Size  Location     Type
 10495 ;;		None
 10496 ;; Auto vars:     Size  Location     Type
 10497 ;;		None
 10498 ;; Return value:  Size  Location     Type
 10499 ;;                  1    wreg      unsigned char 
 10500 ;; Registers used:
 10501 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10502 ;; Tracked objects:
 10503 ;;		On entry : 0/0
 10504 ;;		On exit  : 0/0
 10505 ;;		Unchanged: 0/0
 10506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10507 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10510 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10511 ;;Total ram usage:        0 bytes
 10512 ;; Hardware stack levels used:    1
 10513 ;; Hardware stack levels required when called:    4
 10514 ;; This function calls:
 10515 ;;		Nothing
 10516 ;; This function is called by:
 10517 ;;		_setPowerFault_Main
 10518 ;; This function uses a non-reentrant model
 10519 ;;
 10520                           
 10521                           
 10522                           ;psect for function _getTemp_Safe
 10523  191E                     _getTemp_Safe:	
 10524                           
 10525                           ;OverTemperature_B1.c: 28: return Temp->Safe;
 10526                           
 10527                           ;incstack = 0
 10528                           ; Regs used in _getTemp_Safe: [wreg+fsr1l+fsr1h+status,2+status,0]
 10529  191E  0879               	movf	_Temp,w
 10530  191F  0086               	movwf	6
 10531  1920  3001               	movlw	1	; select bank2/3
 10532  1921  0087               	movwf	7
 10533  1922  0E01               	swapf	1,w
 10534  1923  3901               	andlw	1
 10535  1924  0008               	return
 10536  1925                     __end_of_getTemp_Safe:	
 10537                           
 10538                           	psect	text50
 10539  18D9                     __ptext50:	
 10540 ;; *************** function _PowerFault_Initialization *****************
 10541 ;; Defined at:
 10542 ;;		line 15 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\PowerFault_B1.c"
 10543 ;; Parameters:    Size  Location     Type
 10544 ;;		None
 10545 ;; Auto vars:     Size  Location     Type
 10546 ;;		None
 10547 ;; Return value:  Size  Location     Type
 10548 ;;		None               void
 10549 ;; Registers used:
 10550 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10551 ;; Tracked objects:
 10552 ;;		On entry : 0/0
 10553 ;;		On exit  : 0/0
 10554 ;;		Unchanged: 0/0
 10555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10557 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10559 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10560 ;;Total ram usage:        0 bytes
 10561 ;; Hardware stack levels used:    1
 10562 ;; Hardware stack levels required when called:    5
 10563 ;; This function calls:
 10564 ;;		_setPowerFault_Initialization
 10565 ;; This function is called by:
 10566 ;;		_main
 10567 ;; This function uses a non-reentrant model
 10568 ;;
 10569                           
 10570                           
 10571                           ;psect for function _PowerFault_Initialization
 10572  18D9                     _PowerFault_Initialization:	
 10573                           
 10574                           ;PowerFault_B1.c: 18: setPowerFault_Initialization();
 10575                           
 10576                           ;incstack = 0
 10577                           ; Regs used in _PowerFault_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cs
      +                          tack]
 10578  18D9  319A  228B         	fcall	_setPowerFault_Initialization
 10579  18DB  0008               	return
 10580  18DC                     __end_of_PowerFault_Initialization:	
 10581                           
 10582                           	psect	text51
 10583  1A8B                     __ptext51:	
 10584 ;; *************** function _setPowerFault_Initialization *****************
 10585 ;; Defined at:
 10586 ;;		line 29 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\PowerFault_B1.c"
 10587 ;; Parameters:    Size  Location     Type
 10588 ;;		None
 10589 ;; Auto vars:     Size  Location     Type
 10590 ;;		None
 10591 ;; Return value:  Size  Location     Type
 10592 ;;		None               void
 10593 ;; Registers used:
 10594 ;;		wreg, fsr1l, fsr1h
 10595 ;; Tracked objects:
 10596 ;;		On entry : 0/0
 10597 ;;		On exit  : 0/0
 10598 ;;		Unchanged: 0/0
 10599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10600 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10601 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10602 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10603 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10604 ;;Total ram usage:        1 bytes
 10605 ;; Hardware stack levels used:    1
 10606 ;; Hardware stack levels required when called:    4
 10607 ;; This function calls:
 10608 ;;		Nothing
 10609 ;; This function is called by:
 10610 ;;		_PowerFault_Initialization
 10611 ;; This function uses a non-reentrant model
 10612 ;;
 10613                           
 10614                           
 10615                           ;psect for function _setPowerFault_Initialization
 10616  1A8B                     _setPowerFault_Initialization:	
 10617                           
 10618                           ;PowerFault_B1.c: 31: PF=&PF1;
 10619                           
 10620                           ;incstack = 0
 10621                           ; Regs used in _setPowerFault_Initialization: [wregfsr1]
 10622  1A8B  3068               	movlw	_PF1& (0+255)
 10623  1A8C  0020               	movlb	0	; select bank0
 10624  1A8D  00A0               	movwf	??_setPowerFault_Initialization
 10625  1A8E  0820               	movf	??_setPowerFault_Initialization,w
 10626  1A8F  00F6               	movwf	_PF
 10627                           
 10628                           ;PowerFault_B1.c: 32: PF->Enable=1;
 10629  1A90  0876               	movf	_PF,w
 10630  1A91  0086               	movwf	6
 10631  1A92  3001               	movlw	1	; select bank2/3
 10632  1A93  0087               	movwf	7
 10633  1A94  1401               	bsf	1,0
 10634                           
 10635                           ;PowerFault_B1.c: 33: PF->Safe=1;
 10636  1A95  0876               	movf	_PF,w
 10637  1A96  0086               	movwf	6
 10638  1A97  3001               	movlw	1	; select bank2/3
 10639  1A98  0087               	movwf	7
 10640  1A99  1501               	bsf	1,2
 10641  1A9A  0008               	return
 10642  1A9B                     __end_of_setPowerFault_Initialization:	
 10643                           
 10644                           	psect	text52
 10645  1B72                     __ptext52:	
 10646 ;; *************** function _Mcu_Initialization *****************
 10647 ;; Defined at:
 10648 ;;		line 24 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
 10649 ;; Parameters:    Size  Location     Type
 10650 ;;		None
 10651 ;; Auto vars:     Size  Location     Type
 10652 ;;		None
 10653 ;; Return value:  Size  Location     Type
 10654 ;;		None               void
 10655 ;; Registers used:
 10656 ;;		wreg, status,2, status,0, pclath, cstack
 10657 ;; Tracked objects:
 10658 ;;		On entry : 0/0
 10659 ;;		On exit  : 0/0
 10660 ;;		Unchanged: 0/0
 10661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10663 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10664 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10665 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10666 ;;Total ram usage:        1 bytes
 10667 ;; Hardware stack levels used:    1
 10668 ;; Hardware stack levels required when called:    5
 10669 ;; This function calls:
 10670 ;;		_ADC_Set
 10671 ;;		_INT_Set
 10672 ;;		_IOC_Set
 10673 ;;		_IO_Set
 10674 ;;		_TMR0_Set
 10675 ;; This function is called by:
 10676 ;;		_main
 10677 ;; This function uses a non-reentrant model
 10678 ;;
 10679                           
 10680                           
 10681                           ;psect for function _Mcu_Initialization
 10682  1B72                     _Mcu_Initialization:	
 10683                           
 10684                           ;MCU_B1.c: 27: OSCCON=0x78; ;;
 10685                           
 10686                           ;incstack = 0
 10687                           ; Regs used in _Mcu_Initialization: [wreg+status,2+status,0+pclath+cstack]
 10688  1B72  3078               	movlw	120
 10689  1B73  0021               	movlb	1	; select bank1
 10690  1B74  0099               	movwf	25	;volatile
 10691                           
 10692                           ;MCU_B1.c: 29: IO_Set();
 10693  1B75  319B  23EC  319B   	fcall	_IO_Set
 10694                           
 10695                           ;MCU_B1.c: 31: TMR0_Set();
 10696  1B78  319A  2207  319B   	fcall	_TMR0_Set
 10697                           
 10698                           ;MCU_B1.c: 33: ;;
 10699                           ;MCU_B1.c: 35: ADC_Set();
 10700  1B7B  3199  2117  319B   	fcall	_ADC_Set
 10701                           
 10702                           ;MCU_B1.c: 39: INT_Set();
 10703  1B7E  3198  20FE  319B   	fcall	_INT_Set
 10704                           
 10705                           ;MCU_B1.c: 41: IOC_Set();
 10706  1B81  3199  21FA         	fcall	_IOC_Set
 10707                           
 10708                           ;MCU_B1.c: 43: ;;
 10709                           ;MCU_B1.c: 45: ;;
 10710                           ;MCU_B1.c: 47: Memory=&VarMemory;
 10711  1B83  3020               	movlw	_VarMemory& (0+255)
 10712  1B84  0020               	movlb	0	; select bank0
 10713  1B85  00A1               	movwf	??_Mcu_Initialization
 10714  1B86  0821               	movf	??_Mcu_Initialization,w
 10715  1B87  00ED               	movwf	_Memory
 10716  1B88  0008               	return
 10717  1B89                     __end_of_Mcu_Initialization:	
 10718                           
 10719                           	psect	text53
 10720  1A07                     __ptext53:	
 10721 ;; *************** function _TMR0_Set *****************
 10722 ;; Defined at:
 10723 ;;		line 116 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
 10724 ;; Parameters:    Size  Location     Type
 10725 ;;		None
 10726 ;; Auto vars:     Size  Location     Type
 10727 ;;		None
 10728 ;; Return value:  Size  Location     Type
 10729 ;;		None               void
 10730 ;; Registers used:
 10731 ;;		wreg, status,2
 10732 ;; Tracked objects:
 10733 ;;		On entry : 0/0
 10734 ;;		On exit  : 0/0
 10735 ;;		Unchanged: 0/0
 10736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10739 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10740 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10741 ;;Total ram usage:        1 bytes
 10742 ;; Hardware stack levels used:    1
 10743 ;; Hardware stack levels required when called:    4
 10744 ;; This function calls:
 10745 ;;		Nothing
 10746 ;; This function is called by:
 10747 ;;		_Mcu_Initialization
 10748 ;; This function uses a non-reentrant model
 10749 ;;
 10750                           
 10751                           
 10752                           ;psect for function _TMR0_Set
 10753  1A07                     _TMR0_Set:	
 10754                           
 10755                           ;MCU_B1.c: 118: Timer0=&VarTimer0;
 10756                           
 10757                           ;incstack = 0
 10758                           ; Regs used in _TMR0_Set: [wreg+status,2]
 10759  1A07  30C3               	movlw	_VarTimer0& (0+255)
 10760  1A08  0020               	movlb	0	; select bank0
 10761  1A09  00A0               	movwf	??_TMR0_Set
 10762  1A0A  0820               	movf	??_TMR0_Set,w
 10763  1A0B  0021               	movlb	1	; select bank1
 10764  1A0C  00EE               	movwf	_Timer0^(0+128)
 10765                           
 10766                           ;MCU_B1.c: 119: OPTION_REG=0x00;
 10767  1A0D  0195               	clrf	21	;volatile
 10768                           
 10769                           ;MCU_B1.c: 120: TMR0=(256-90);
 10770  1A0E  30A6               	movlw	166
 10771  1A0F  0020               	movlb	0	; select bank0
 10772  1A10  0095               	movwf	21	;volatile
 10773                           
 10774                           ;MCU_B1.c: 121: TMR0IE=1;
 10775  1A11  168B               	bsf	11,5	;volatile
 10776                           
 10777                           ;MCU_B1.c: 122: GIE=1;
 10778  1A12  178B               	bsf	11,7	;volatile
 10779  1A13  0008               	return
 10780  1A14                     __end_of_TMR0_Set:	
 10781                           
 10782                           	psect	text54
 10783  1BEC                     __ptext54:	
 10784 ;; *************** function _IO_Set *****************
 10785 ;; Defined at:
 10786 ;;		line 50 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
 10787 ;; Parameters:    Size  Location     Type
 10788 ;;		None
 10789 ;; Auto vars:     Size  Location     Type
 10790 ;;		None
 10791 ;; Return value:  Size  Location     Type
 10792 ;;		None               void
 10793 ;; Registers used:
 10794 ;;		wreg, status,2
 10795 ;; Tracked objects:
 10796 ;;		On entry : 0/0
 10797 ;;		On exit  : 0/0
 10798 ;;		Unchanged: 0/0
 10799 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10803 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10804 ;;Total ram usage:        0 bytes
 10805 ;; Hardware stack levels used:    1
 10806 ;; Hardware stack levels required when called:    4
 10807 ;; This function calls:
 10808 ;;		Nothing
 10809 ;; This function is called by:
 10810 ;;		_Mcu_Initialization
 10811 ;; This function uses a non-reentrant model
 10812 ;;
 10813                           
 10814                           
 10815                           ;psect for function _IO_Set
 10816  1BEC                     _IO_Set:	
 10817                           
 10818                           ;MCU_B1.c: 79: TRISA=0b01110111;;
 10819                           
 10820                           ;incstack = 0
 10821                           ; Regs used in _IO_Set: [wreg+status,2]
 10822  1BEC  3077               	movlw	119
 10823  1BED  0021               	movlb	1	; select bank1
 10824  1BEE  008C               	movwf	12	;volatile
 10825                           
 10826                           ;MCU_B1.c: 80: TRISB=0b00000111;;
 10827  1BEF  3007               	movlw	7
 10828  1BF0  008D               	movwf	13	;volatile
 10829                           
 10830                           ;MCU_B1.c: 81: TRISC=0b00001100;;
 10831  1BF1  300C               	movlw	12
 10832  1BF2  008E               	movwf	14	;volatile
 10833                           
 10834                           ;MCU_B1.c: 82: LATA=0b00000000;;
 10835  1BF3  0022               	movlb	2	; select bank2
 10836  1BF4  018C               	clrf	12	;volatile
 10837                           
 10838                           ;MCU_B1.c: 83: LATB=0b00000010;;
 10839  1BF5  3002               	movlw	2
 10840  1BF6  008D               	movwf	13	;volatile
 10841                           
 10842                           ;MCU_B1.c: 84: LATC=0b00000000;;
 10843  1BF7  018E               	clrf	14	;volatile
 10844                           
 10845                           ;MCU_B1.c: 85: ANSELA=0b00100010;;
 10846  1BF8  3022               	movlw	34
 10847  1BF9  0023               	movlb	3	; select bank3
 10848  1BFA  008C               	movwf	12	;volatile
 10849                           
 10850                           ;MCU_B1.c: 86: ANSELB=0b00000000;;
 10851  1BFB  018D               	clrf	13	;volatile
 10852                           
 10853                           ;MCU_B1.c: 87: ANSELC=0b00000000;;
 10854  1BFC  018E               	clrf	14	;volatile
 10855                           
 10856                           ;MCU_B1.c: 88: PORTA=0b01110111;;
 10857  1BFD  3077               	movlw	119
 10858  1BFE  0020               	movlb	0	; select bank0
 10859  1BFF  008C               	movwf	12	;volatile
 10860                           
 10861                           ;MCU_B1.c: 89: PORTB=0b00000111;;
 10862  1C00  3007               	movlw	7
 10863  1C01  008D               	movwf	13	;volatile
 10864                           
 10865                           ;MCU_B1.c: 90: PORTC=0b00001100;;
 10866  1C02  300C               	movlw	12
 10867  1C03  008E               	movwf	14	;volatile
 10868  1C04  0008               	return
 10869  1C05                     __end_of_IO_Set:	
 10870                           
 10871                           	psect	text55
 10872  19FA                     __ptext55:	
 10873 ;; *************** function _IOC_Set *****************
 10874 ;; Defined at:
 10875 ;;		line 312 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
 10876 ;; Parameters:    Size  Location     Type
 10877 ;;		None
 10878 ;; Auto vars:     Size  Location     Type
 10879 ;;		None
 10880 ;; Return value:  Size  Location     Type
 10881 ;;		None               void
 10882 ;; Registers used:
 10883 ;;		wreg, status,2
 10884 ;; Tracked objects:
 10885 ;;		On entry : 0/0
 10886 ;;		On exit  : 0/0
 10887 ;;		Unchanged: 0/0
 10888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10892 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10893 ;;Total ram usage:        0 bytes
 10894 ;; Hardware stack levels used:    1
 10895 ;; Hardware stack levels required when called:    4
 10896 ;; This function calls:
 10897 ;;		Nothing
 10898 ;; This function is called by:
 10899 ;;		_Mcu_Initialization
 10900 ;; This function uses a non-reentrant model
 10901 ;;
 10902                           
 10903                           
 10904                           ;psect for function _IOC_Set
 10905  19FA                     _IOC_Set:	
 10906                           
 10907                           ;MCU_B1.c: 314: WPUB2=0;
 10908                           
 10909                           ;incstack = 0
 10910                           ; Regs used in _IOC_Set: [wreg+status,2]
 10911  19FA  0024               	movlb	4	; select bank4
 10912  19FB  110D               	bcf	13,2	;volatile
 10913                           
 10914                           ;MCU_B1.c: 316: IOCBP=0b00000100;
 10915  19FC  3004               	movlw	4
 10916  19FD  0027               	movlb	7	; select bank7
 10917  19FE  0094               	movwf	20	;volatile
 10918                           
 10919                           ;MCU_B1.c: 317: IOCBN=0b00000100;
 10920  19FF  3004               	movlw	4
 10921  1A00  0095               	movwf	21	;volatile
 10922                           
 10923                           ;MCU_B1.c: 332: IOCBF=0b00000000;
 10924  1A01  0196               	clrf	22	;volatile
 10925                           
 10926                           ;MCU_B1.c: 334: IOCIE=1;
 10927  1A02  158B               	bsf	11,3	;volatile
 10928                           
 10929                           ;MCU_B1.c: 335: IOCIF=0;
 10930  1A03  100B               	bcf	11,0	;volatile
 10931                           
 10932                           ;MCU_B1.c: 336: PEIE=1;
 10933  1A04  170B               	bsf	11,6	;volatile
 10934                           
 10935                           ;MCU_B1.c: 337: GIE=1;
 10936  1A05  178B               	bsf	11,7	;volatile
 10937  1A06  0008               	return
 10938  1A07                     __end_of_IOC_Set:	
 10939                           
 10940                           	psect	text56
 10941  18FE                     __ptext56:	
 10942 ;; *************** function _INT_Set *****************
 10943 ;; Defined at:
 10944 ;;		line 283 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
 10945 ;; Parameters:    Size  Location     Type
 10946 ;;		None
 10947 ;; Auto vars:     Size  Location     Type
 10948 ;;		None
 10949 ;; Return value:  Size  Location     Type
 10950 ;;		None               void
 10951 ;; Registers used:
 10952 ;;		None
 10953 ;; Tracked objects:
 10954 ;;		On entry : 0/0
 10955 ;;		On exit  : 0/0
 10956 ;;		Unchanged: 0/0
 10957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10961 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10962 ;;Total ram usage:        0 bytes
 10963 ;; Hardware stack levels used:    1
 10964 ;; Hardware stack levels required when called:    4
 10965 ;; This function calls:
 10966 ;;		Nothing
 10967 ;; This function is called by:
 10968 ;;		_Mcu_Initialization
 10969 ;; This function uses a non-reentrant model
 10970 ;;
 10971                           
 10972                           
 10973                           ;psect for function _INT_Set
 10974  18FE                     _INT_Set:	
 10975                           
 10976                           ;MCU_B1.c: 285: WPUB0=0;
 10977                           
 10978                           ;incstack = 0
 10979                           ; Regs used in _INT_Set: []
 10980  18FE  0024               	movlb	4	; select bank4
 10981  18FF  100D               	bcf	13,0	;volatile
 10982                           
 10983                           ;MCU_B1.c: 286: INTE=1;
 10984  1900  160B               	bsf	11,4	;volatile
 10985                           
 10986                           ;MCU_B1.c: 287: PEIE=1;
 10987  1901  170B               	bsf	11,6	;volatile
 10988                           
 10989                           ;MCU_B1.c: 288: GIE=1;
 10990  1902  178B               	bsf	11,7	;volatile
 10991  1903  0008               	return
 10992  1904                     __end_of_INT_Set:	
 10993                           
 10994                           	psect	text57
 10995  1917                     __ptext57:	
 10996 ;; *************** function _ADC_Set *****************
 10997 ;; Defined at:
 10998 ;;		line 377 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
 10999 ;; Parameters:    Size  Location     Type
 11000 ;;		None
 11001 ;; Auto vars:     Size  Location     Type
 11002 ;;		None
 11003 ;; Return value:  Size  Location     Type
 11004 ;;		None               void
 11005 ;; Registers used:
 11006 ;;		wreg
 11007 ;; Tracked objects:
 11008 ;;		On entry : 0/0
 11009 ;;		On exit  : 0/0
 11010 ;;		Unchanged: 0/0
 11011 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11012 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11013 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11014 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11015 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11016 ;;Total ram usage:        0 bytes
 11017 ;; Hardware stack levels used:    1
 11018 ;; Hardware stack levels required when called:    4
 11019 ;; This function calls:
 11020 ;;		Nothing
 11021 ;; This function is called by:
 11022 ;;		_Mcu_Initialization
 11023 ;; This function uses a non-reentrant model
 11024 ;;
 11025                           
 11026                           
 11027                           ;psect for function _ADC_Set
 11028  1917                     _ADC_Set:	
 11029                           
 11030                           ;MCU_B1.c: 379: ADCON1=0xf2;
 11031                           
 11032                           ;incstack = 0
 11033                           ; Regs used in _ADC_Set: [wreg]
 11034  1917  30F2               	movlw	242
 11035  1918  0021               	movlb	1	; select bank1
 11036  1919  009E               	movwf	30	;volatile
 11037                           
 11038                           ;MCU_B1.c: 380: FVRCON=0xc0;
 11039  191A  30C0               	movlw	192
 11040  191B  0022               	movlb	2	; select bank2
 11041  191C  0097               	movwf	23	;volatile
 11042  191D  0008               	return
 11043  191E                     __end_of_ADC_Set:	
 11044                           
 11045                           	psect	text58
 11046  1EE2                     __ptext58:	
 11047 ;; *************** function _MainT_ResetClock *****************
 11048 ;; Defined at:
 11049 ;;		line 193 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\main.c"
 11050 ;; Parameters:    Size  Location     Type
 11051 ;;		None
 11052 ;; Auto vars:     Size  Location     Type
 11053 ;;  i               1    1[BANK0 ] unsigned char 
 11054 ;; Return value:  Size  Location     Type
 11055 ;;		None               void
 11056 ;; Registers used:
 11057 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11058 ;; Tracked objects:
 11059 ;;		On entry : 0/0
 11060 ;;		On exit  : 0/0
 11061 ;;		Unchanged: 0/0
 11062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11063 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11064 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11065 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11066 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11067 ;;Total ram usage:        2 bytes
 11068 ;; Hardware stack levels used:    1
 11069 ;; Hardware stack levels required when called:    4
 11070 ;; This function calls:
 11071 ;;		Nothing
 11072 ;; This function is called by:
 11073 ;;		_main
 11074 ;; This function uses a non-reentrant model
 11075 ;;
 11076                           
 11077                           
 11078                           ;psect for function _MainT_ResetClock
 11079  1EE2                     _MainT_ResetClock:	
 11080                           
 11081                           ;main.c: 194: char i;
 11082                           ;main.c: 195: if(!TMain->ClockStop){
 11083                           
 11084                           ;incstack = 0
 11085                           ; Regs used in _MainT_ResetClock: [wreg+fsr1l+fsr1h+status,2+status,0]
 11086  1EE2  0020               	movlb	0	; select bank0
 11087  1EE3  086F               	movf	_TMain,w
 11088  1EE4  3E10               	addlw	16
 11089  1EE5  0086               	movwf	6
 11090  1EE6  3001               	movlw	1	; select bank2/3
 11091  1EE7  0087               	movwf	7
 11092  1EE8  1901               	btfsc	1,2
 11093  1EE9  0008               	return
 11094                           
 11095                           ;main.c: 196: TMain->ClockCount++;
 11096  1EEA  3001               	movlw	1
 11097  1EEB  00A0               	movwf	??_MainT_ResetClock
 11098  1EEC  086F               	movf	_TMain,w
 11099  1EED  3E0E               	addlw	14
 11100  1EEE  0086               	movwf	6
 11101  1EEF  3001               	movlw	1	; select bank2/3
 11102  1EF0  0087               	movwf	7
 11103  1EF1  0820               	movf	??_MainT_ResetClock,w
 11104  1EF2  0781               	addwf	1,f
 11105                           
 11106                           ;main.c: 197: if(TMain->ClockCount == 10){
 11107  1EF3  086F               	movf	_TMain,w
 11108  1EF4  3E0E               	addlw	14
 11109  1EF5  0086               	movwf	6
 11110  1EF6  3001               	movlw	1	; select bank2/3
 11111  1EF7  0087               	movwf	7
 11112  1EF8  0801               	movf	1,w
 11113  1EF9  3A0A               	xorlw	10
 11114  1EFA  1D03               	skipz
 11115  1EFB  0008               	return
 11116                           
 11117                           ;main.c: 198: TMain->ClockCount=0;
 11118  1EFC  086F               	movf	_TMain,w
 11119  1EFD  3E0E               	addlw	14
 11120  1EFE  0086               	movwf	6
 11121  1EFF  3001               	movlw	1	; select bank2/3
 11122  1F00  0087               	movwf	7
 11123  1F01  0181               	clrf	1
 11124                           
 11125                           ;main.c: 200: if(RB5){
 11126  1F02  1E8D               	btfss	13,5	;volatile
 11127  1F03  0008               	return
 11128                           
 11129                           ;main.c: 201: RB5=0;
 11130  1F04  128D               	bcf	13,5	;volatile
 11131                           
 11132                           ;main.c: 202: for(i=0 ;i<20 ; i++);
 11133  1F05  01A1               	clrf	MainT_ResetClock@i
 11134  1F06  3014               	movlw	20
 11135  1F07  0221               	subwf	MainT_ResetClock@i,w
 11136  1F08  1803               	btfsc	3,0
 11137  1F09  2F12               	goto	l1332
 11138  1F0A                     l9790:	
 11139  1F0A  3001               	movlw	1
 11140  1F0B  00A0               	movwf	??_MainT_ResetClock
 11141  1F0C  0820               	movf	??_MainT_ResetClock,w
 11142  1F0D  07A1               	addwf	MainT_ResetClock@i,f
 11143  1F0E  3014               	movlw	20
 11144  1F0F  0221               	subwf	MainT_ResetClock@i,w
 11145  1F10  1C03               	skipc
 11146  1F11  2F0A               	goto	l9790
 11147  1F12                     l1332:	
 11148                           
 11149                           ;main.c: 203: RB5=1;
 11150  1F12  168D               	bsf	13,5	;volatile
 11151  1F13  0008               	return
 11152  1F14                     __end_of_MainT_ResetClock:	
 11153                           
 11154                           	psect	text59
 11155  1ADF                     __ptext59:	
 11156 ;; *************** function _MainT_Initialization *****************
 11157 ;; Defined at:
 11158 ;;		line 93 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\main.c"
 11159 ;; Parameters:    Size  Location     Type
 11160 ;;		None
 11161 ;; Auto vars:     Size  Location     Type
 11162 ;;		None
 11163 ;; Return value:  Size  Location     Type
 11164 ;;		None               void
 11165 ;; Registers used:
 11166 ;;		wreg, fsr1l, fsr1h
 11167 ;; Tracked objects:
 11168 ;;		On entry : 0/0
 11169 ;;		On exit  : 0/0
 11170 ;;		Unchanged: 0/0
 11171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11174 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11175 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11176 ;;Total ram usage:        1 bytes
 11177 ;; Hardware stack levels used:    1
 11178 ;; Hardware stack levels required when called:    4
 11179 ;; This function calls:
 11180 ;;		Nothing
 11181 ;; This function is called by:
 11182 ;;		_main
 11183 ;; This function uses a non-reentrant model
 11184 ;;
 11185                           
 11186                           
 11187                           ;psect for function _MainT_Initialization
 11188  1ADF                     _MainT_Initialization:	
 11189                           
 11190                           ;main.c: 96: Product=&VarProduct;
 11191                           
 11192                           ;incstack = 0
 11193                           ; Regs used in _MainT_Initialization: [wregfsr1]
 11194  1ADF  30A0               	movlw	_VarProduct& (0+255)
 11195  1AE0  0020               	movlb	0	; select bank0
 11196  1AE1  00A0               	movwf	??_MainT_Initialization
 11197  1AE2  0820               	movf	??_MainT_Initialization,w
 11198  1AE3  00EE               	movwf	_Product
 11199                           
 11200                           ;main.c: 97: Product->Data[20]=210;
 11201  1AE4  30D2               	movlw	210
 11202  1AE5  00A0               	movwf	??_MainT_Initialization
 11203  1AE6  086E               	movf	_Product,w
 11204  1AE7  3E14               	addlw	20
 11205  1AE8  0086               	movwf	6
 11206  1AE9  3001               	movlw	1	; select bank2/3
 11207  1AEA  0087               	movwf	7
 11208  1AEB  0820               	movf	??_MainT_Initialization,w
 11209  1AEC  0081               	movwf	1
 11210                           
 11211                           ;main.c: 100: TMain=&VarTMain;
 11212  1AED  30C0               	movlw	_VarTMain& (0+255)
 11213  1AEE  00A0               	movwf	??_MainT_Initialization
 11214  1AEF  0820               	movf	??_MainT_Initialization,w
 11215  1AF0  00EF               	movwf	_TMain
 11216  1AF1  0008               	return
 11217  1AF2                     __end_of_MainT_Initialization:	
 11218                           
 11219                           	psect	text60
 11220  086A                     __ptext60:	
 11221 ;; *************** function _MainT *****************
 11222 ;; Defined at:
 11223 ;;		line 105 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\main.c"
 11224 ;; Parameters:    Size  Location     Type
 11225 ;;		None
 11226 ;; Auto vars:     Size  Location     Type
 11227 ;;		None
 11228 ;; Return value:  Size  Location     Type
 11229 ;;		None               void
 11230 ;; Registers used:
 11231 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11232 ;; Tracked objects:
 11233 ;;		On entry : 0/0
 11234 ;;		On exit  : 0/0
 11235 ;;		Unchanged: 0/0
 11236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11237 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11240 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11241 ;;Total ram usage:        0 bytes
 11242 ;; Hardware stack levels used:    1
 11243 ;; Hardware stack levels required when called:    6
 11244 ;; This function calls:
 11245 ;;		_setBuz
 11246 ;;		_setRF_Enable
 11247 ;;		_setSw_Enable
 11248 ;;		_setTemp_Enable
 11249 ;; This function is called by:
 11250 ;;		_main
 11251 ;; This function uses a non-reentrant model
 11252 ;;
 11253                           
 11254                           
 11255                           ;psect for function _MainT
 11256  086A                     _MainT:	
 11257                           
 11258                           ;main.c: 108: if(!TMain->PowerON)
 11259                           
 11260                           ;incstack = 0
 11261                           ; Regs used in _MainT: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11262  086A  0020               	movlb	0	; select bank0
 11263  086B  086F               	movf	_TMain,w
 11264  086C  0086               	movwf	6
 11265  086D  3001               	movlw	1	; select bank2/3
 11266  086E  0087               	movwf	7
 11267  086F  1801               	btfsc	1,0
 11268  0870  28B1               	goto	l9762
 11269                           
 11270                           ;main.c: 109: {
 11271                           ;main.c: 110: TMain->PowerCount++;
 11272  0871  0A6F               	incf	_TMain,w
 11273  0872  0086               	movwf	6
 11274  0873  3001               	movlw	1	; select bank2/3
 11275  0874  0087               	movwf	7
 11276  0875  3001               	movlw	1
 11277  0876  0781               	addwf	1,f
 11278  0877  3141               	addfsr 1,1
 11279  0878  1803               	skipnc
 11280  0879  0A81               	incf	1,f
 11281                           
 11282                           ;main.c: 111: if(TMain->PowerCount == 150)
 11283  087A  0A6F               	incf	_TMain,w
 11284  087B  0086               	movwf	6
 11285  087C  3001               	movlw	1	; select bank2/3
 11286  087D  0087               	movwf	7
 11287  087E  3F40               	moviw [0]fsr1
 11288  087F  3A96               	xorlw	150
 11289  0880  1D03               	skipz
 11290  0881  2884               	goto	u10205
 11291  0882  3F41               	moviw [1]fsr1
 11292  0883  3A00               	xorlw	0
 11293  0884                     u10205:	
 11294  0884  1D03               	skipz
 11295  0885  0008               	return
 11296                           
 11297                           ;main.c: 112: {
 11298                           ;main.c: 113: TMain->PowerCount=0;
 11299  0886  0A6F               	incf	_TMain,w
 11300  0887  0086               	movwf	6
 11301  0888  3001               	movlw	1	; select bank2/3
 11302  0889  0087               	movwf	7
 11303  088A  3000               	movlw	0
 11304  088B  3FC0               	movwi [0]fsr1
 11305  088C  3FC1               	movwi [1]fsr1
 11306                           
 11307                           ;main.c: 114: TMain->PowerON=1;
 11308  088D  086F               	movf	_TMain,w
 11309  088E  0086               	movwf	6
 11310  088F  3001               	movlw	1	; select bank2/3
 11311  0890  0087               	movwf	7
 11312  0891  1401               	bsf	1,0
 11313                           
 11314                           ;main.c: 117: setTemp_Enable(1);
 11315  0892  3001               	movlw	1
 11316  0893  3199  219C  3188   	fcall	_setTemp_Enable
 11317                           
 11318                           ;main.c: 121: ;;
 11319                           ;main.c: 127: setBuz(3,50);
 11320  0896  3032               	movlw	50
 11321  0897  0020               	movlb	0	; select bank0
 11322  0898  00A6               	movwf	setBuz@time
 11323  0899  3000               	movlw	0
 11324  089A  00A7               	movwf	setBuz@time+1
 11325  089B  3003               	movlw	3
 11326  089C  3197  2789  3188   	fcall	_setBuz
 11327                           
 11328                           ;main.c: 128: TMain->SelfTest=1;
 11329  089F  0020               	movlb	0	; select bank0
 11330  08A0  086F               	movf	_TMain,w
 11331  08A1  3E03               	addlw	3
 11332  08A2  0086               	movwf	6
 11333  08A3  3001               	movlw	1	; select bank2/3
 11334  08A4  0087               	movwf	7
 11335  08A5  1401               	bsf	1,0
 11336                           
 11337                           ;main.c: 130: setSw_Enable(1);
 11338  08A6  3001               	movlw	1
 11339  08A7  319C  243A  3188   	fcall	_setSw_Enable
 11340                           
 11341                           ;main.c: 133: setRF_Enable(1,1);
 11342  08AA  0020               	movlb	0	; select bank0
 11343  08AB  01A2               	clrf	setRF_Enable@command
 11344  08AC  0AA2               	incf	setRF_Enable@command,f
 11345  08AD  3001               	movlw	1
 11346  08AE  319D  25D3         	fcall	_setRF_Enable
 11347                           
 11348                           ;main.c: 137: }
 11349                           ;main.c: 138: }
 11350  08B0  0008               	return
 11351  08B1                     l9762:	
 11352                           
 11353                           ;main.c: 139: else
 11354                           ;main.c: 140: {
 11355                           ;main.c: 148: TMain->Count1++;
 11356  08B1  0020               	movlb	0	; select bank0
 11357  08B2  086F               	movf	_TMain,w
 11358  08B3  3E06               	addlw	6
 11359  08B4  0086               	movwf	6
 11360  08B5  3001               	movlw	1	; select bank2/3
 11361  08B6  0087               	movwf	7
 11362  08B7  3001               	movlw	1
 11363  08B8  0781               	addwf	1,f
 11364  08B9  3141               	addfsr 1,1
 11365  08BA  1803               	skipnc
 11366  08BB  0A81               	incf	1,f
 11367                           
 11368                           ;main.c: 149: if(TMain->Count1 == 100)
 11369  08BC  086F               	movf	_TMain,w
 11370  08BD  3E06               	addlw	6
 11371  08BE  0086               	movwf	6
 11372  08BF  3001               	movlw	1	; select bank2/3
 11373  08C0  0087               	movwf	7
 11374  08C1  3F40               	moviw [0]fsr1
 11375  08C2  3A64               	xorlw	100
 11376  08C3  1D03               	skipz
 11377  08C4  28C7               	goto	u10215
 11378  08C5  3F41               	moviw [1]fsr1
 11379  08C6  3A00               	xorlw	0
 11380  08C7                     u10215:	
 11381  08C7  1D03               	skipz
 11382  08C8  0008               	return
 11383                           
 11384                           ;main.c: 150: {
 11385                           ;main.c: 151: TMain->Count1=0;
 11386  08C9  086F               	movf	_TMain,w
 11387  08CA  3E06               	addlw	6
 11388  08CB  0086               	movwf	6
 11389  08CC  3001               	movlw	1	; select bank2/3
 11390  08CD  0087               	movwf	7
 11391  08CE  3000               	movlw	0
 11392  08CF  3FC0               	movwi [0]fsr1
 11393  08D0  3FC1               	movwi [1]fsr1
 11394                           
 11395                           ;main.c: 164: if(TMain->Flag)
 11396  08D1  086F               	movf	_TMain,w
 11397  08D2  0086               	movwf	6
 11398  08D3  3001               	movlw	1	; select bank2/3
 11399  08D4  0087               	movwf	7
 11400  08D5  1D81               	btfss	1,3
 11401  08D6  28DD               	goto	l9770
 11402                           
 11403                           ;main.c: 165: {
 11404                           ;main.c: 166: TMain->Flag=0;
 11405  08D7  086F               	movf	_TMain,w
 11406  08D8  0086               	movwf	6
 11407  08D9  3001               	movlw	1	; select bank2/3
 11408  08DA  0087               	movwf	7
 11409  08DB  1181               	bcf	1,3
 11410                           
 11411                           ;main.c: 175: }
 11412  08DC  0008               	return
 11413  08DD                     l9770:	
 11414                           
 11415                           ;main.c: 176: else
 11416                           ;main.c: 177: {
 11417                           ;main.c: 178: TMain->Flag=1;
 11418  08DD  086F               	movf	_TMain,w
 11419  08DE  0086               	movwf	6
 11420  08DF  3001               	movlw	1	; select bank2/3
 11421  08E0  0087               	movwf	7
 11422  08E1  1581               	bsf	1,3
 11423  08E2  0008               	return
 11424  08E3                     __end_of_MainT:	
 11425                           
 11426                           	psect	text61
 11427  199C                     __ptext61:	
 11428 ;; *************** function _setTemp_Enable *****************
 11429 ;; Defined at:
 11430 ;;		line 22 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\OverTemperature_B1.c"
 11431 ;; Parameters:    Size  Location     Type
 11432 ;;  command         1    wreg     unsigned char 
 11433 ;; Auto vars:     Size  Location     Type
 11434 ;;  command         1    0[BANK0 ] unsigned char 
 11435 ;; Return value:  Size  Location     Type
 11436 ;;		None               void
 11437 ;; Registers used:
 11438 ;;		wreg, fsr1l, fsr1h
 11439 ;; Tracked objects:
 11440 ;;		On entry : 0/0
 11441 ;;		On exit  : 0/0
 11442 ;;		Unchanged: 0/0
 11443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11445 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11447 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11448 ;;Total ram usage:        1 bytes
 11449 ;; Hardware stack levels used:    1
 11450 ;; Hardware stack levels required when called:    4
 11451 ;; This function calls:
 11452 ;;		Nothing
 11453 ;; This function is called by:
 11454 ;;		_MainT
 11455 ;; This function uses a non-reentrant model
 11456 ;;
 11457                           
 11458                           
 11459                           ;psect for function _setTemp_Enable
 11460  199C                     _setTemp_Enable:	
 11461                           
 11462                           ;incstack = 0
 11463                           ; Regs used in _setTemp_Enable: [wregfsr1]
 11464                           ;setTemp_Enable@command stored from wreg
 11465  199C  0020               	movlb	0	; select bank0
 11466  199D  00A0               	movwf	setTemp_Enable@command
 11467                           
 11468                           ;OverTemperature_B1.c: 24: Temp->Enable=command;
 11469  199E  0879               	movf	_Temp,w
 11470  199F  0086               	movwf	6
 11471  19A0  3001               	movlw	1	; select bank2/3
 11472  19A1  0087               	movwf	7
 11473  19A2  0820               	movf	setTemp_Enable@command,w
 11474  19A3  1001               	bcf	1,0
 11475  19A4  1D03               	skipz
 11476  19A5  1401               	bsf	1,0
 11477  19A6  0008               	return
 11478  19A7                     __end_of_setTemp_Enable:	
 11479                           
 11480                           	psect	text62
 11481  1C3A                     __ptext62:	
 11482 ;; *************** function _setSw_Enable *****************
 11483 ;; Defined at:
 11484 ;;		line 86 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Switch_B1.c"
 11485 ;; Parameters:    Size  Location     Type
 11486 ;;  command         1    wreg     unsigned char 
 11487 ;; Auto vars:     Size  Location     Type
 11488 ;;  command         1    2[BANK0 ] unsigned char 
 11489 ;; Return value:  Size  Location     Type
 11490 ;;		None               void
 11491 ;; Registers used:
 11492 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11493 ;; Tracked objects:
 11494 ;;		On entry : 0/0
 11495 ;;		On exit  : 0/0
 11496 ;;		Unchanged: 0/0
 11497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11498 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11499 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11501 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11502 ;;Total ram usage:        1 bytes
 11503 ;; Hardware stack levels used:    1
 11504 ;; Hardware stack levels required when called:    5
 11505 ;; This function calls:
 11506 ;;		_SwPointSelect
 11507 ;; This function is called by:
 11508 ;;		_MainT
 11509 ;;		_setOverTemp_Exceptions
 11510 ;;		_setPowerFault_Exceptions
 11511 ;; This function uses a non-reentrant model
 11512 ;;
 11513                           
 11514                           
 11515                           ;psect for function _setSw_Enable
 11516  1C3A                     _setSw_Enable:	
 11517                           
 11518                           ;incstack = 0
 11519                           ; Regs used in _setSw_Enable: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11520                           ;setSw_Enable@command stored from wreg
 11521  1C3A  0020               	movlb	0	; select bank0
 11522  1C3B  00A2               	movwf	setSw_Enable@command
 11523                           
 11524                           ;Switch_B1.c: 90: SwPointSelect(1);
 11525  1C3C  3001               	movlw	1
 11526  1C3D  3187  27EC  319C   	fcall	_SwPointSelect
 11527                           
 11528                           ;Switch_B1.c: 91: Sw->Enable=command;
 11529  1C40  0878               	movf	_Sw,w
 11530  1C41  0086               	movwf	6
 11531  1C42  3001               	movlw	1	; select bank2/3
 11532  1C43  0087               	movwf	7
 11533  1C44  0020               	movlb	0	; select bank0
 11534  1C45  0822               	movf	setSw_Enable@command,w
 11535  1C46  1001               	bcf	1,0
 11536  1C47  1D03               	skipz
 11537  1C48  1401               	bsf	1,0
 11538                           
 11539                           ;Switch_B1.c: 95: SwPointSelect(2);
 11540  1C49  3002               	movlw	2
 11541  1C4A  3187  27EC         	fcall	_SwPointSelect
 11542                           
 11543                           ;Switch_B1.c: 96: Sw->Enable=command;
 11544  1C4C  0878               	movf	_Sw,w
 11545  1C4D  0086               	movwf	6
 11546  1C4E  3001               	movlw	1	; select bank2/3
 11547  1C4F  0087               	movwf	7
 11548  1C50  0020               	movlb	0	; select bank0
 11549  1C51  0822               	movf	setSw_Enable@command,w
 11550  1C52  1001               	bcf	1,0
 11551  1C53  1D03               	skipz
 11552  1C54  1401               	bsf	1,0
 11553  1C55  0008               	return
 11554  1C56                     __end_of_setSw_Enable:	
 11555                           
 11556                           	psect	text63
 11557  1DD3                     __ptext63:	
 11558 ;; *************** function _setRF_Enable *****************
 11559 ;; Defined at:
 11560 ;;		line 186 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
 11561 ;; Parameters:    Size  Location     Type
 11562 ;;  rf              1    wreg     unsigned char 
 11563 ;;  command         1    2[BANK0 ] unsigned char 
 11564 ;; Auto vars:     Size  Location     Type
 11565 ;;  rf              1    3[BANK0 ] unsigned char 
 11566 ;; Return value:  Size  Location     Type
 11567 ;;		None               void
 11568 ;; Registers used:
 11569 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11570 ;; Tracked objects:
 11571 ;;		On entry : 0/0
 11572 ;;		On exit  : 0/0
 11573 ;;		Unchanged: 0/0
 11574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11575 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11576 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11578 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11579 ;;Total ram usage:        2 bytes
 11580 ;; Hardware stack levels used:    1
 11581 ;; Hardware stack levels required when called:    5
 11582 ;; This function calls:
 11583 ;;		_RfPointSelect
 11584 ;;		_setINT_GO
 11585 ;; This function is called by:
 11586 ;;		_MainT
 11587 ;;		_setOverTemp_Exceptions
 11588 ;;		_setPowerFault_Exceptions
 11589 ;; This function uses a non-reentrant model
 11590 ;;
 11591                           
 11592                           
 11593                           ;psect for function _setRF_Enable
 11594  1DD3                     _setRF_Enable:	
 11595                           
 11596                           ;incstack = 0
 11597                           ; Regs used in _setRF_Enable: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11598                           ;setRF_Enable@rf stored from wreg
 11599  1DD3  0020               	movlb	0	; select bank0
 11600  1DD4  00A3               	movwf	setRF_Enable@rf
 11601                           
 11602                           ;RF_Control_B1.c: 188: RfPointSelect(rf);
 11603  1DD5  0823               	movf	setRF_Enable@rf,w
 11604  1DD6  3199  2186  319D   	fcall	_RfPointSelect
 11605                           
 11606                           ;RF_Control_B1.c: 189: RF->Enable=command;
 11607  1DD9  0877               	movf	_RF,w
 11608  1DDA  0086               	movwf	6
 11609  1DDB  0187               	clrf	7
 11610  1DDC  0020               	movlb	0	; select bank0
 11611  1DDD  0822               	movf	setRF_Enable@command,w
 11612  1DDE  1001               	bcf	1,0
 11613  1DDF  1D03               	skipz
 11614  1DE0  1401               	bsf	1,0
 11615                           
 11616                           ;RF_Control_B1.c: 190: RF->Learn=0;
 11617  1DE1  0877               	movf	_RF,w
 11618  1DE2  0086               	movwf	6
 11619  1DE3  0187               	clrf	7
 11620  1DE4  1301               	bcf	1,6
 11621                           
 11622                           ;RF_Control_B1.c: 191: RF->TransceiveGO=0;
 11623  1DE5  0877               	movf	_RF,w
 11624  1DE6  0086               	movwf	6
 11625  1DE7  0187               	clrf	7
 11626  1DE8  1101               	bcf	1,2
 11627                           
 11628                           ;RF_Control_B1.c: 192: RF->RxStatus=0;
 11629  1DE9  0877               	movf	_RF,w
 11630  1DEA  0086               	movwf	6
 11631  1DEB  0187               	clrf	7
 11632  1DEC  1181               	bcf	1,3
 11633                           
 11634                           ;RF_Control_B1.c: 193: RF->ReceiveGO=0;
 11635  1DED  0877               	movf	_RF,w
 11636  1DEE  0086               	movwf	6
 11637  1DEF  0187               	clrf	7
 11638  1DF0  1081               	bcf	1,1
 11639                           
 11640                           ;RF_Control_B1.c: 194: RF->DebounceTime=0;
 11641  1DF1  0A77               	incf	_RF,w
 11642  1DF2  0086               	movwf	6
 11643  1DF3  0187               	clrf	7
 11644  1DF4  0181               	clrf	1
 11645                           
 11646                           ;RF_Control_B1.c: 195: RF->Debounce=0;
 11647  1DF5  0877               	movf	_RF,w
 11648  1DF6  0086               	movwf	6
 11649  1DF7  0187               	clrf	7
 11650  1DF8  1281               	bcf	1,5
 11651                           
 11652                           ;RF_Control_B1.c: 196: setINT_GO(0);
 11653  1DF9  3000               	movlw	0
 11654  1DFA  3199  215D         	fcall	_setINT_GO
 11655  1DFC  0008               	return
 11656  1DFD                     __end_of_setRF_Enable:	
 11657                           
 11658                           	psect	text64
 11659  195D                     __ptext64:	
 11660 ;; *************** function _setINT_GO *****************
 11661 ;; Defined at:
 11662 ;;		line 301 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
 11663 ;; Parameters:    Size  Location     Type
 11664 ;;  command         1    wreg     unsigned char 
 11665 ;; Auto vars:     Size  Location     Type
 11666 ;;  command         1    0[BANK0 ] unsigned char 
 11667 ;; Return value:  Size  Location     Type
 11668 ;;		None               void
 11669 ;; Registers used:
 11670 ;;		wreg
 11671 ;; Tracked objects:
 11672 ;;		On entry : 0/0
 11673 ;;		On exit  : 0/0
 11674 ;;		Unchanged: 0/0
 11675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11676 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11677 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11679 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11680 ;;Total ram usage:        1 bytes
 11681 ;; Hardware stack levels used:    1
 11682 ;; Hardware stack levels required when called:    4
 11683 ;; This function calls:
 11684 ;;		Nothing
 11685 ;; This function is called by:
 11686 ;;		_setRF_Main
 11687 ;;		_setRF_Enable
 11688 ;;		_RF_RxDisable
 11689 ;; This function uses a non-reentrant model
 11690 ;;
 11691                           
 11692                           
 11693                           ;psect for function _setINT_GO
 11694  195D                     _setINT_GO:	
 11695                           
 11696                           ;incstack = 0
 11697                           ; Regs used in _setINT_GO: [wreg]
 11698                           ;setINT_GO@command stored from wreg
 11699  195D  0020               	movlb	0	; select bank0
 11700  195E  00A0               	movwf	setINT_GO@command
 11701                           
 11702                           ;MCU_B1.c: 303: INTF=0;
 11703  195F  108B               	bcf	11,1	;volatile
 11704                           
 11705                           ;MCU_B1.c: 304: INTE=command;
 11706  1960  1C20               	btfss	setINT_GO@command,0
 11707  1961  2964               	goto	u8550
 11708  1962  160B               	bsf	11,4	;volatile
 11709  1963  0008               	return
 11710  1964                     u8550:	
 11711  1964  120B               	bcf	11,4	;volatile
 11712  1965  0008               	return
 11713  1966                     __end_of_setINT_GO:	
 11714                           
 11715                           	psect	text65
 11716  19EE                     __ptext65:	
 11717 ;; *************** function _LED_Main *****************
 11718 ;; Defined at:
 11719 ;;		line 51 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\LED_B1.c"
 11720 ;; Parameters:    Size  Location     Type
 11721 ;;		None
 11722 ;; Auto vars:     Size  Location     Type
 11723 ;;		None
 11724 ;; Return value:  Size  Location     Type
 11725 ;;		None               void
 11726 ;; Registers used:
 11727 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11728 ;; Tracked objects:
 11729 ;;		On entry : 0/0
 11730 ;;		On exit  : 0/0
 11731 ;;		Unchanged: 0/0
 11732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11733 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11734 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11736 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11737 ;;Total ram usage:        0 bytes
 11738 ;; Hardware stack levels used:    1
 11739 ;; Hardware stack levels required when called:    6
 11740 ;; This function calls:
 11741 ;;		_setLED_Main
 11742 ;; This function is called by:
 11743 ;;		_main
 11744 ;; This function uses a non-reentrant model
 11745 ;;
 11746                           
 11747                           
 11748                           ;psect for function _LED_Main
 11749  19EE                     _LED_Main:	
 11750                           
 11751                           ;LED_B1.c: 54: setLED_Main(1);
 11752                           
 11753                           ;incstack = 0
 11754                           ; Regs used in _LED_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11755  19EE  3001               	movlw	1
 11756  19EF  319F  27C0  3199   	fcall	_setLED_Main
 11757                           
 11758                           ;LED_B1.c: 57: setLED_Main(2);
 11759  19F2  3002               	movlw	2
 11760  19F3  319F  27C0  3199   	fcall	_setLED_Main
 11761                           
 11762                           ;LED_B1.c: 63: setLED_Main(99);
 11763  19F6  3063               	movlw	99
 11764  19F7  319F  27C0         	fcall	_setLED_Main
 11765  19F9  0008               	return
 11766  19FA                     __end_of_LED_Main:	
 11767                           
 11768                           	psect	text66
 11769  1FC0                     __ptext66:	
 11770 ;; *************** function _setLED_Main *****************
 11771 ;; Defined at:
 11772 ;;		line 214 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\LED_B1.c"
 11773 ;; Parameters:    Size  Location     Type
 11774 ;;  led             1    wreg     unsigned char 
 11775 ;; Auto vars:     Size  Location     Type
 11776 ;;  led             1    4[BANK0 ] unsigned char 
 11777 ;; Return value:  Size  Location     Type
 11778 ;;		None               void
 11779 ;; Registers used:
 11780 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11781 ;; Tracked objects:
 11782 ;;		On entry : 0/0
 11783 ;;		On exit  : 0/0
 11784 ;;		Unchanged: 0/0
 11785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11787 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11788 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11789 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11790 ;;Total ram usage:        3 bytes
 11791 ;; Hardware stack levels used:    1
 11792 ;; Hardware stack levels required when called:    5
 11793 ;; This function calls:
 11794 ;;		_LedPointSelect
 11795 ;; This function is called by:
 11796 ;;		_LED_Main
 11797 ;; This function uses a non-reentrant model
 11798 ;;
 11799                           
 11800                           
 11801                           ;psect for function _setLED_Main
 11802  1FC0                     _setLED_Main:	
 11803                           
 11804                           ;incstack = 0
 11805                           ; Regs used in _setLED_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11806                           ;setLED_Main@led stored from wreg
 11807  1FC0  0020               	movlb	0	; select bank0
 11808  1FC1  00A4               	movwf	setLED_Main@led
 11809                           
 11810                           ;LED_B1.c: 216: LedPointSelect(led);
 11811  1FC2  0824               	movf	setLED_Main@led,w
 11812  1FC3  319C  24F2  319F   	fcall	_LedPointSelect
 11813                           
 11814                           ;LED_B1.c: 217: if(LED->GO)
 11815  1FC6  0021               	movlb	1	; select bank1
 11816  1FC7  083A               	movf	_LED^(0+128),w
 11817  1FC8  0086               	movwf	6
 11818  1FC9  0187               	clrf	7
 11819  1FCA  1C81               	btfss	1,1
 11820  1FCB  0008               	return
 11821                           
 11822                           ;LED_B1.c: 218: {
 11823                           ;LED_B1.c: 219: LED->Time++;
 11824  1FCC  0A3A               	incf	_LED^(0+128),w
 11825  1FCD  0086               	movwf	6
 11826  1FCE  0187               	clrf	7
 11827  1FCF  3001               	movlw	1
 11828  1FD0  0781               	addwf	1,f
 11829  1FD1  3141               	addfsr 1,1
 11830  1FD2  1803               	skipnc
 11831  1FD3  0A81               	incf	1,f
 11832                           
 11833                           ;LED_B1.c: 220: if(LED->Time >= 500/10)
 11834  1FD4  0A3A               	incf	_LED^(0+128),w
 11835  1FD5  0086               	movwf	6
 11836  1FD6  0187               	clrf	7
 11837  1FD7  3F40               	moviw [0]fsr1
 11838  1FD8  0020               	movlb	0	; select bank0
 11839  1FD9  00A2               	movwf	??_setLED_Main
 11840  1FDA  3F41               	moviw [1]fsr1
 11841  1FDB  00A3               	movwf	??_setLED_Main+1
 11842  1FDC  3000               	movlw	0
 11843  1FDD  0223               	subwf	??_setLED_Main+1,w
 11844  1FDE  3032               	movlw	50
 11845  1FDF  1903               	skipnz
 11846  1FE0  0222               	subwf	??_setLED_Main,w
 11847  1FE1  1C03               	skipc
 11848  1FE2  0008               	return
 11849                           
 11850                           ;LED_B1.c: 221: {
 11851                           ;LED_B1.c: 222: LED->Time=0;
 11852  1FE3  0021               	movlb	1	; select bank1
 11853  1FE4  0A3A               	incf	_LED^(0+128),w
 11854  1FE5  0086               	movwf	6
 11855  1FE6  0187               	clrf	7
 11856  1FE7  3000               	movlw	0
 11857  1FE8  3FC0               	movwi [0]fsr1
 11858  1FE9  3FC1               	movwi [1]fsr1
 11859                           
 11860                           ;LED_B1.c: 224: if(led == 1)
 11861  1FEA  0020               	movlb	0	; select bank0
 11862  1FEB  0824               	movf	setLED_Main@led,w
 11863  1FEC  3A01               	xorlw	1
 11864  1FED  1D03               	skipz
 11865  1FEE  2FF2               	goto	l9208
 11866                           
 11867                           ;LED_B1.c: 225: {
 11868                           ;LED_B1.c: 226: RA3=~RA3;
 11869  1FEF  3008               	movlw	8
 11870  1FF0  068C               	xorwf	12,f
 11871                           
 11872                           ;LED_B1.c: 227: }
 11873  1FF1  0008               	return
 11874  1FF2                     l9208:	
 11875                           
 11876                           ;LED_B1.c: 230: else if(led == 2)
 11877  1FF2  0824               	movf	setLED_Main@led,w
 11878  1FF3  3A02               	xorlw	2
 11879  1FF4  1D03               	skipz
 11880  1FF5  2FF9               	goto	l9212
 11881                           
 11882                           ;LED_B1.c: 231: {
 11883                           ;LED_B1.c: 232: RC7=~RC7;
 11884  1FF6  3080               	movlw	128
 11885  1FF7  068E               	xorwf	14,f
 11886                           
 11887                           ;LED_B1.c: 233: }
 11888  1FF8  0008               	return
 11889  1FF9                     l9212:	
 11890                           
 11891                           ;LED_B1.c: 242: else if(led == 99)
 11892  1FF9  0824               	movf	setLED_Main@led,w
 11893  1FFA  3A63               	xorlw	99
 11894  1FFB  1D03               	skipz
 11895  1FFC  0008               	return
 11896                           
 11897                           ;LED_B1.c: 243: {
 11898                           ;LED_B1.c: 244: RB5=~RB5;
 11899  1FFD  3020               	movlw	32
 11900  1FFE  068D               	xorwf	13,f
 11901  1FFF  0008               	return
 11902  2000                     __end_of_setLED_Main:	
 11903                           
 11904                           	psect	text67
 11905  19E2                     __ptext67:	
 11906 ;; *************** function _LED_Initialization *****************
 11907 ;; Defined at:
 11908 ;;		line 35 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\LED_B1.c"
 11909 ;; Parameters:    Size  Location     Type
 11910 ;;		None
 11911 ;; Auto vars:     Size  Location     Type
 11912 ;;		None
 11913 ;; Return value:  Size  Location     Type
 11914 ;;		None               void
 11915 ;; Registers used:
 11916 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11917 ;; Tracked objects:
 11918 ;;		On entry : 0/0
 11919 ;;		On exit  : 0/0
 11920 ;;		Unchanged: 0/0
 11921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11925 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11926 ;;Total ram usage:        0 bytes
 11927 ;; Hardware stack levels used:    1
 11928 ;; Hardware stack levels required when called:    7
 11929 ;; This function calls:
 11930 ;;		_setLED_Initialization
 11931 ;; This function is called by:
 11932 ;;		_main
 11933 ;; This function uses a non-reentrant model
 11934 ;;
 11935                           
 11936                           
 11937                           ;psect for function _LED_Initialization
 11938  19E2                     _LED_Initialization:	
 11939                           
 11940                           ;LED_B1.c: 38: setLED_Initialization(1);
 11941                           
 11942                           ;incstack = 0
 11943                           ; Regs used in _LED_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11944  19E2  3001               	movlw	1
 11945  19E3  319A  22BB  3199   	fcall	_setLED_Initialization
 11946                           
 11947                           ;LED_B1.c: 41: setLED_Initialization(2);
 11948  19E6  3002               	movlw	2
 11949  19E7  319A  22BB  3199   	fcall	_setLED_Initialization
 11950                           
 11951                           ;LED_B1.c: 47: setLED_Initialization(99);
 11952  19EA  3063               	movlw	99
 11953  19EB  319A  22BB         	fcall	_setLED_Initialization
 11954  19ED  0008               	return
 11955  19EE                     __end_of_LED_Initialization:	
 11956                           
 11957                           	psect	text68
 11958  1ABB                     __ptext68:	
 11959 ;; *************** function _setLED_Initialization *****************
 11960 ;; Defined at:
 11961 ;;		line 67 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\LED_B1.c"
 11962 ;; Parameters:    Size  Location     Type
 11963 ;;  led             1    wreg     unsigned char 
 11964 ;; Auto vars:     Size  Location     Type
 11965 ;;  led             1    4[BANK0 ] unsigned char 
 11966 ;; Return value:  Size  Location     Type
 11967 ;;		None               void
 11968 ;; Registers used:
 11969 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11970 ;; Tracked objects:
 11971 ;;		On entry : 0/0
 11972 ;;		On exit  : 0/0
 11973 ;;		Unchanged: 0/0
 11974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11976 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11978 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11979 ;;Total ram usage:        1 bytes
 11980 ;; Hardware stack levels used:    1
 11981 ;; Hardware stack levels required when called:    6
 11982 ;; This function calls:
 11983 ;;		_LedPointSelect
 11984 ;;		_setLED
 11985 ;; This function is called by:
 11986 ;;		_LED_Initialization
 11987 ;; This function uses a non-reentrant model
 11988 ;;
 11989                           
 11990                           
 11991                           ;psect for function _setLED_Initialization
 11992  1ABB                     _setLED_Initialization:	
 11993                           
 11994                           ;incstack = 0
 11995                           ; Regs used in _setLED_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 11996                           ;setLED_Initialization@led stored from wreg
 11997  1ABB  0020               	movlb	0	; select bank0
 11998  1ABC  00A4               	movwf	setLED_Initialization@led
 11999                           
 12000                           ;LED_B1.c: 69: LedPointSelect(led);
 12001  1ABD  0824               	movf	setLED_Initialization@led,w
 12002  1ABE  319C  24F2  319A   	fcall	_LedPointSelect
 12003                           
 12004                           ;LED_B1.c: 70: LED->Enable=1;
 12005  1AC1  0021               	movlb	1	; select bank1
 12006  1AC2  083A               	movf	_LED^(0+128),w
 12007  1AC3  0086               	movwf	6
 12008  1AC4  0187               	clrf	7
 12009  1AC5  1401               	bsf	1,0
 12010                           
 12011                           ;LED_B1.c: 71: setLED(led,0);
 12012  1AC6  0020               	movlb	0	; select bank0
 12013  1AC7  01A2               	clrf	setLED@command
 12014  1AC8  0824               	movf	setLED_Initialization@led,w
 12015  1AC9  3193  2373         	fcall	_setLED
 12016  1ACB  0008               	return
 12017  1ACC                     __end_of_setLED_Initialization:	
 12018                           
 12019                           	psect	text69
 12020  114B                     __ptext69:	
 12021 ;; *************** function _Flash_Memory_Main *****************
 12022 ;; Defined at:
 12023 ;;		line 871 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
 12024 ;; Parameters:    Size  Location     Type
 12025 ;;		None
 12026 ;; Auto vars:     Size  Location     Type
 12027 ;;		None
 12028 ;; Return value:  Size  Location     Type
 12029 ;;		None               void
 12030 ;; Registers used:
 12031 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12032 ;; Tracked objects:
 12033 ;;		On entry : 0/0
 12034 ;;		On exit  : 0/0
 12035 ;;		Unchanged: 0/0
 12036 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12037 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12040 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12041 ;;Total ram usage:        0 bytes
 12042 ;; Hardware stack levels used:    1
 12043 ;; Hardware stack levels required when called:    7
 12044 ;; This function calls:
 12045 ;;		_Flash_Memory_Modify
 12046 ;; This function is called by:
 12047 ;;		_main
 12048 ;; This function uses a non-reentrant model
 12049 ;;
 12050                           
 12051                           
 12052                           ;psect for function _Flash_Memory_Main
 12053  114B                     _Flash_Memory_Main:	
 12054                           
 12055                           ;MCU_B1.c: 873: if(Memory->GO)
 12056                           
 12057                           ;incstack = 0
 12058                           ; Regs used in _Flash_Memory_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12059  114B  0020               	movlb	0	; select bank0
 12060  114C  086D               	movf	_Memory,w
 12061  114D  3E22               	addlw	34
 12062  114E  0086               	movwf	6
 12063  114F  3002               	movlw	2	; select bank4/5
 12064  1150  0087               	movwf	7
 12065  1151  1C81               	btfss	1,1
 12066  1152  0008               	return
 12067                           
 12068                           ;MCU_B1.c: 874: {
 12069                           ;MCU_B1.c: 875: if(Memory->Modify)
 12070  1153  086D               	movf	_Memory,w
 12071  1154  3E22               	addlw	34
 12072  1155  0086               	movwf	6
 12073  1156  3002               	movlw	2	; select bank4/5
 12074  1157  0087               	movwf	7
 12075  1158  1C01               	btfss	1,0
 12076  1159  2988               	goto	l9806
 12077                           
 12078                           ;MCU_B1.c: 876: {
 12079                           ;MCU_B1.c: 877: Memory->Time++;
 12080  115A  086D               	movf	_Memory,w
 12081  115B  3E23               	addlw	35
 12082  115C  0086               	movwf	6
 12083  115D  3002               	movlw	2	; select bank4/5
 12084  115E  0087               	movwf	7
 12085  115F  3001               	movlw	1
 12086  1160  0781               	addwf	1,f
 12087  1161  3141               	addfsr 1,1
 12088  1162  1803               	skipnc
 12089  1163  0A81               	incf	1,f
 12090                           
 12091                           ;MCU_B1.c: 878: if(Memory->Time == 25)
 12092  1164  086D               	movf	_Memory,w
 12093  1165  3E23               	addlw	35
 12094  1166  0086               	movwf	6
 12095  1167  3002               	movlw	2	; select bank4/5
 12096  1168  0087               	movwf	7
 12097  1169  3F40               	moviw [0]fsr1
 12098  116A  3A19               	xorlw	25
 12099  116B  1D03               	skipz
 12100  116C  296F               	goto	u10305
 12101  116D  3F41               	moviw [1]fsr1
 12102  116E  3A00               	xorlw	0
 12103  116F                     u10305:	
 12104  116F  1D03               	skipz
 12105  1170  0008               	return
 12106                           
 12107                           ;MCU_B1.c: 879: {
 12108                           ;MCU_B1.c: 880: Memory->Time=0;
 12109  1171  086D               	movf	_Memory,w
 12110  1172  3E23               	addlw	35
 12111  1173  0086               	movwf	6
 12112  1174  3002               	movlw	2	; select bank4/5
 12113  1175  0087               	movwf	7
 12114  1176  3000               	movlw	0
 12115  1177  3FC0               	movwi [0]fsr1
 12116  1178  3FC1               	movwi [1]fsr1
 12117                           
 12118                           ;MCU_B1.c: 881: Memory->Modify=0;
 12119  1179  086D               	movf	_Memory,w
 12120  117A  3E22               	addlw	34
 12121  117B  0086               	movwf	6
 12122  117C  3002               	movlw	2	; select bank4/5
 12123  117D  0087               	movwf	7
 12124  117E  1001               	bcf	1,0
 12125                           
 12126                           ;MCU_B1.c: 882: Memory->GO=0;
 12127  117F  086D               	movf	_Memory,w
 12128  1180  3E22               	addlw	34
 12129  1181  0086               	movwf	6
 12130  1182  3002               	movlw	2	; select bank4/5
 12131  1183  0087               	movwf	7
 12132  1184  1081               	bcf	1,1
 12133                           
 12134                           ;MCU_B1.c: 883: Flash_Memory_Modify();
 12135  1185  3194  2496         	fcall	_Flash_Memory_Modify
 12136                           
 12137                           ;MCU_B1.c: 885: }
 12138                           ;MCU_B1.c: 886: }
 12139  1187  0008               	return
 12140  1188                     l9806:	
 12141                           
 12142                           ;MCU_B1.c: 887: else
 12143                           ;MCU_B1.c: 888: {
 12144                           ;MCU_B1.c: 889: Memory->GO=0;
 12145  1188  0020               	movlb	0	; select bank0
 12146  1189  086D               	movf	_Memory,w
 12147  118A  3E22               	addlw	34
 12148  118B  0086               	movwf	6
 12149  118C  3002               	movlw	2	; select bank4/5
 12150  118D  0087               	movwf	7
 12151  118E  1081               	bcf	1,1
 12152  118F  0008               	return
 12153  1190                     __end_of_Flash_Memory_Main:	
 12154                           
 12155                           	psect	text70
 12156  1496                     __ptext70:	
 12157 ;; *************** function _Flash_Memory_Modify *****************
 12158 ;; Defined at:
 12159 ;;		line 946 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
 12160 ;; Parameters:    Size  Location     Type
 12161 ;;		None
 12162 ;; Auto vars:     Size  Location     Type
 12163 ;;  i               1    6[BANK0 ] unsigned char 
 12164 ;; Return value:  Size  Location     Type
 12165 ;;		None               void
 12166 ;; Registers used:
 12167 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12168 ;; Tracked objects:
 12169 ;;		On entry : 0/0
 12170 ;;		On exit  : 0/0
 12171 ;;		Unchanged: 0/0
 12172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12174 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12175 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12176 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12177 ;;Total ram usage:        3 bytes
 12178 ;; Hardware stack levels used:    1
 12179 ;; Hardware stack levels required when called:    6
 12180 ;; This function calls:
 12181 ;;		_Flash_Memory_Erasing
 12182 ;;		_Flash_Memory_Read
 12183 ;;		_Flash_Memory_Write
 12184 ;; This function is called by:
 12185 ;;		_Flash_Memory_Main
 12186 ;; This function uses a non-reentrant model
 12187 ;;
 12188                           
 12189                           
 12190                           ;psect for function _Flash_Memory_Modify
 12191  1496                     _Flash_Memory_Modify:	
 12192                           
 12193                           ;MCU_B1.c: 948: char i;
 12194                           ;MCU_B1.c: 949: for(i=0;i<32;i++)
 12195                           
 12196                           ;incstack = 0
 12197                           ; Regs used in _Flash_Memory_Modify: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12198  1496  0020               	movlb	0	; select bank0
 12199  1497  01A6               	clrf	Flash_Memory_Modify@i
 12200  1498  3020               	movlw	32
 12201  1499  0226               	subwf	Flash_Memory_Modify@i,w
 12202  149A  1803               	btfsc	3,0
 12203  149B  2CB3               	goto	l9284
 12204  149C                     l9278:	
 12205                           
 12206                           ;MCU_B1.c: 950: {
 12207                           ;MCU_B1.c: 951: Memory->Data[i]=Flash_Memory_Read(i);
 12208  149C  0826               	movf	Flash_Memory_Modify@i,w
 12209  149D  319B  23D3  3194   	fcall	_Flash_Memory_Read
 12210  14A0  0020               	movlb	0	; select bank0
 12211  14A1  00A4               	movwf	??_Flash_Memory_Modify
 12212  14A2  0826               	movf	Flash_Memory_Modify@i,w
 12213  14A3  076D               	addwf	_Memory,w
 12214  14A4  00A5               	movwf	??_Flash_Memory_Modify+1
 12215  14A5  0825               	movf	??_Flash_Memory_Modify+1,w
 12216  14A6  0086               	movwf	6
 12217  14A7  3002               	movlw	2	; select bank4/5
 12218  14A8  0087               	movwf	7
 12219  14A9  0824               	movf	??_Flash_Memory_Modify,w
 12220  14AA  0081               	movwf	1
 12221  14AB  3001               	movlw	1
 12222  14AC  00A4               	movwf	??_Flash_Memory_Modify
 12223  14AD  0824               	movf	??_Flash_Memory_Modify,w
 12224  14AE  07A6               	addwf	Flash_Memory_Modify@i,f
 12225  14AF  3020               	movlw	32
 12226  14B0  0226               	subwf	Flash_Memory_Modify@i,w
 12227  14B1  1C03               	skipc
 12228  14B2  2C9C               	goto	l9278
 12229  14B3                     l9284:	
 12230                           
 12231                           ;MCU_B1.c: 952: }
 12232                           ;MCU_B1.c: 953: Memory->Data[0]=Product->Data[12];
 12233  14B3  086E               	movf	_Product,w
 12234  14B4  3E0C               	addlw	12
 12235  14B5  0086               	movwf	6
 12236  14B6  3001               	movlw	1	; select bank2/3
 12237  14B7  0087               	movwf	7
 12238  14B8  0801               	movf	1,w
 12239  14B9  00A4               	movwf	??_Flash_Memory_Modify
 12240  14BA  086D               	movf	_Memory,w
 12241  14BB  0086               	movwf	6
 12242  14BC  3002               	movlw	2	; select bank4/5
 12243  14BD  0087               	movwf	7
 12244  14BE  0824               	movf	??_Flash_Memory_Modify,w
 12245  14BF  0081               	movwf	1
 12246                           
 12247                           ;MCU_B1.c: 954: Memory->Data[1]=Product->Data[13];
 12248  14C0  086E               	movf	_Product,w
 12249  14C1  3E0D               	addlw	13
 12250  14C2  0086               	movwf	6
 12251  14C3  3001               	movlw	1	; select bank2/3
 12252  14C4  0087               	movwf	7
 12253  14C5  0801               	movf	1,w
 12254  14C6  00A4               	movwf	??_Flash_Memory_Modify
 12255  14C7  0A6D               	incf	_Memory,w
 12256  14C8  0086               	movwf	6
 12257  14C9  3002               	movlw	2	; select bank4/5
 12258  14CA  0087               	movwf	7
 12259  14CB  0824               	movf	??_Flash_Memory_Modify,w
 12260  14CC  0081               	movwf	1
 12261                           
 12262                           ;MCU_B1.c: 955: Memory->Data[2]=Product->Data[14];
 12263  14CD  086E               	movf	_Product,w
 12264  14CE  3E0E               	addlw	14
 12265  14CF  0086               	movwf	6
 12266  14D0  3001               	movlw	1	; select bank2/3
 12267  14D1  0087               	movwf	7
 12268  14D2  0801               	movf	1,w
 12269  14D3  00A4               	movwf	??_Flash_Memory_Modify
 12270  14D4  086D               	movf	_Memory,w
 12271  14D5  3E02               	addlw	2
 12272  14D6  0086               	movwf	6
 12273  14D7  3002               	movlw	2	; select bank4/5
 12274  14D8  0087               	movwf	7
 12275  14D9  0824               	movf	??_Flash_Memory_Modify,w
 12276  14DA  0081               	movwf	1
 12277                           
 12278                           ;MCU_B1.c: 961: if(Memory->LoopSave)
 12279  14DB  086D               	movf	_Memory,w
 12280  14DC  3E22               	addlw	34
 12281  14DD  0086               	movwf	6
 12282  14DE  3002               	movlw	2	; select bank4/5
 12283  14DF  0087               	movwf	7
 12284  14E0  1D01               	btfss	1,2
 12285  14E1  2CF3               	goto	l9288
 12286                           
 12287                           ;MCU_B1.c: 962: {
 12288                           ;MCU_B1.c: 963: Memory->LoopSave=0;
 12289  14E2  086D               	movf	_Memory,w
 12290  14E3  3E22               	addlw	34
 12291  14E4  0086               	movwf	6
 12292  14E5  3002               	movlw	2	; select bank4/5
 12293  14E6  0087               	movwf	7
 12294  14E7  1101               	bcf	1,2
 12295                           
 12296                           ;MCU_B1.c: 964: TMain->FirstOpen=0;
 12297  14E8  086F               	movf	_TMain,w
 12298  14E9  0086               	movwf	6
 12299  14EA  3001               	movlw	1	; select bank2/3
 12300  14EB  0087               	movwf	7
 12301  14EC  1281               	bcf	1,5
 12302                           
 12303                           ;MCU_B1.c: 965: TMain->First=0;
 12304  14ED  086F               	movf	_TMain,w
 12305  14EE  3E03               	addlw	3
 12306  14EF  0086               	movwf	6
 12307  14F0  3001               	movlw	1	; select bank2/3
 12308  14F1  0087               	movwf	7
 12309  14F2  1081               	bcf	1,1
 12310  14F3                     l9288:	
 12311                           
 12312                           ;MCU_B1.c: 967: }
 12313                           ;MCU_B1.c: 968: GIE=0;
 12314  14F3  138B               	bcf	11,7	;volatile
 12315                           
 12316                           ;MCU_B1.c: 969: Flash_Memory_Erasing();
 12317  14F4  3199  21D6  3194   	fcall	_Flash_Memory_Erasing
 12318                           
 12319                           ;MCU_B1.c: 970: Flash_Memory_Write();
 12320  14F7  319E  2683         	fcall	_Flash_Memory_Write
 12321                           
 12322                           ;MCU_B1.c: 971: GIE=1;
 12323  14F9  178B               	bsf	11,7	;volatile
 12324  14FA  0008               	return
 12325  14FB                     __end_of_Flash_Memory_Modify:	
 12326                           
 12327                           	psect	text71
 12328  19D6                     __ptext71:	
 12329 ;; *************** function _Flash_Memory_Erasing *****************
 12330 ;; Defined at:
 12331 ;;		line 935 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
 12332 ;; Parameters:    Size  Location     Type
 12333 ;;		None
 12334 ;; Auto vars:     Size  Location     Type
 12335 ;;		None
 12336 ;; Return value:  Size  Location     Type
 12337 ;;		None               void
 12338 ;; Registers used:
 12339 ;;		wreg, status,2, status,0, pclath, cstack
 12340 ;; Tracked objects:
 12341 ;;		On entry : 0/0
 12342 ;;		On exit  : 0/0
 12343 ;;		Unchanged: 0/0
 12344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12346 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12348 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12349 ;;Total ram usage:        0 bytes
 12350 ;; Hardware stack levels used:    1
 12351 ;; Hardware stack levels required when called:    5
 12352 ;; This function calls:
 12353 ;;		_Flash_Memory_Unlock
 12354 ;; This function is called by:
 12355 ;;		_Flash_Memory_Modify
 12356 ;; This function uses a non-reentrant model
 12357 ;;
 12358                           
 12359                           
 12360                           ;psect for function _Flash_Memory_Erasing
 12361  19D6                     _Flash_Memory_Erasing:	
 12362                           
 12363                           ;MCU_B1.c: 937: CFGS=0;
 12364                           
 12365                           ;incstack = 0
 12366                           ; Regs used in _Flash_Memory_Erasing: [wreg+status,2+status,0+pclath+cstack]
 12367  19D6  0023               	movlb	3	; select bank3
 12368  19D7  1315               	bcf	21,6	;volatile
 12369                           
 12370                           ;MCU_B1.c: 938: PMADRH=0x30;
 12371  19D8  3030               	movlw	48
 12372  19D9  0092               	movwf	18	;volatile
 12373                           
 12374                           ;MCU_B1.c: 939: PMADRL=0x00;
 12375  19DA  0191               	clrf	17	;volatile
 12376                           
 12377                           ;MCU_B1.c: 940: FREE=1;
 12378  19DB  1615               	bsf	21,4	;volatile
 12379                           
 12380                           ;MCU_B1.c: 941: WREN=1;
 12381  19DC  1515               	bsf	21,2	;volatile
 12382                           
 12383                           ;MCU_B1.c: 942: Flash_Memory_Unlock();
 12384  19DD  3199  2154         	fcall	_Flash_Memory_Unlock
 12385                           
 12386                           ;MCU_B1.c: 943: WREN=0;
 12387  19DF  0023               	movlb	3	; select bank3
 12388  19E0  1115               	bcf	21,2	;volatile
 12389  19E1  0008               	return
 12390  19E2                     __end_of_Flash_Memory_Erasing:	
 12391                           
 12392                           	psect	text72
 12393  0E21                     __ptext72:	
 12394 ;; *************** function _Flash_Memory_Initialization *****************
 12395 ;; Defined at:
 12396 ;;		line 826 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
 12397 ;; Parameters:    Size  Location     Type
 12398 ;;		None
 12399 ;; Auto vars:     Size  Location     Type
 12400 ;;  i               1   62[BANK0 ] unsigned char 
 12401 ;; Return value:  Size  Location     Type
 12402 ;;		None               void
 12403 ;; Registers used:
 12404 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12405 ;; Tracked objects:
 12406 ;;		On entry : 0/0
 12407 ;;		On exit  : 0/0
 12408 ;;		Unchanged: 0/0
 12409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12410 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12411 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12412 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12413 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12414 ;;Total ram usage:        2 bytes
 12415 ;; Hardware stack levels used:    1
 12416 ;; Hardware stack levels required when called:    7
 12417 ;; This function calls:
 12418 ;;		_Flash_Memory_Read
 12419 ;;		_Flash_Memory_Write
 12420 ;;		_setPercentValue
 12421 ;; This function is called by:
 12422 ;;		_main
 12423 ;; This function uses a non-reentrant model
 12424 ;;
 12425                           
 12426                           
 12427                           ;psect for function _Flash_Memory_Initialization
 12428  0E21                     _Flash_Memory_Initialization:	
 12429                           
 12430                           ;MCU_B1.c: 828: char i;
 12431                           ;MCU_B1.c: 829: if(Flash_Memory_Read(31) == 0xaa)
 12432                           
 12433                           ;incstack = 0
 12434                           ; Regs used in _Flash_Memory_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 12435  0E21  301F               	movlw	31
 12436  0E22  319B  23D3  318E   	fcall	_Flash_Memory_Read
 12437  0E25  3AAA               	xorlw	170
 12438  0E26  1D03               	skipz
 12439  0E27  2E99               	goto	l9680
 12440                           
 12441                           ;MCU_B1.c: 830: {
 12442                           ;MCU_B1.c: 831: Product->Data[12]=Flash_Memory_Read(0);
 12443  0E28  3000               	movlw	0
 12444  0E29  319B  23D3  318E   	fcall	_Flash_Memory_Read
 12445  0E2C  0020               	movlb	0	; select bank0
 12446  0E2D  00DD               	movwf	??_Flash_Memory_Initialization
 12447  0E2E  086E               	movf	_Product,w
 12448  0E2F  3E0C               	addlw	12
 12449  0E30  0086               	movwf	6
 12450  0E31  3001               	movlw	1	; select bank2/3
 12451  0E32  0087               	movwf	7
 12452  0E33  085D               	movf	??_Flash_Memory_Initialization,w
 12453  0E34  0081               	movwf	1
 12454                           
 12455                           ;MCU_B1.c: 832: Product->Data[13]=Flash_Memory_Read(1);
 12456  0E35  3001               	movlw	1
 12457  0E36  319B  23D3  318E   	fcall	_Flash_Memory_Read
 12458  0E39  0020               	movlb	0	; select bank0
 12459  0E3A  00DD               	movwf	??_Flash_Memory_Initialization
 12460  0E3B  086E               	movf	_Product,w
 12461  0E3C  3E0D               	addlw	13
 12462  0E3D  0086               	movwf	6
 12463  0E3E  3001               	movlw	1	; select bank2/3
 12464  0E3F  0087               	movwf	7
 12465  0E40  085D               	movf	??_Flash_Memory_Initialization,w
 12466  0E41  0081               	movwf	1
 12467                           
 12468                           ;MCU_B1.c: 833: Product->Data[14]=Flash_Memory_Read(2);
 12469  0E42  3002               	movlw	2
 12470  0E43  319B  23D3  318E   	fcall	_Flash_Memory_Read
 12471  0E46  0020               	movlb	0	; select bank0
 12472  0E47  00DD               	movwf	??_Flash_Memory_Initialization
 12473  0E48  086E               	movf	_Product,w
 12474  0E49  3E0E               	addlw	14
 12475  0E4A  0086               	movwf	6
 12476  0E4B  3001               	movlw	1	; select bank2/3
 12477  0E4C  0087               	movwf	7
 12478  0E4D  085D               	movf	??_Flash_Memory_Initialization,w
 12479  0E4E  0081               	movwf	1
 12480                           
 12481                           ;MCU_B1.c: 839: i=setPercentValue(((char)((100-55)*1.5)));
 12482  0E4F  3043               	movlw	67
 12483  0E50  3191  2190  318E   	fcall	_setPercentValue
 12484  0E53  0020               	movlb	0	; select bank0
 12485  0E54  00DD               	movwf	??_Flash_Memory_Initialization
 12486  0E55  085D               	movf	??_Flash_Memory_Initialization,w
 12487  0E56  00DE               	movwf	Flash_Memory_Initialization@i
 12488                           
 12489                           ;MCU_B1.c: 840: Product->Data[21]=i;
 12490  0E57  085E               	movf	Flash_Memory_Initialization@i,w
 12491  0E58  00DD               	movwf	??_Flash_Memory_Initialization
 12492  0E59  086E               	movf	_Product,w
 12493  0E5A  3E15               	addlw	21
 12494  0E5B  0086               	movwf	6
 12495  0E5C  3001               	movlw	1	; select bank2/3
 12496  0E5D  0087               	movwf	7
 12497  0E5E  085D               	movf	??_Flash_Memory_Initialization,w
 12498  0E5F  0081               	movwf	1
 12499                           
 12500                           ;MCU_B1.c: 841: Product->Data[22]=i;
 12501  0E60  085E               	movf	Flash_Memory_Initialization@i,w
 12502  0E61  00DD               	movwf	??_Flash_Memory_Initialization
 12503  0E62  086E               	movf	_Product,w
 12504  0E63  3E16               	addlw	22
 12505  0E64  0086               	movwf	6
 12506  0E65  3001               	movlw	1	; select bank2/3
 12507  0E66  0087               	movwf	7
 12508  0E67  085D               	movf	??_Flash_Memory_Initialization,w
 12509  0E68  0081               	movwf	1
 12510                           
 12511                           ;MCU_B1.c: 842: Product->Data[23]=i;
 12512  0E69  085E               	movf	Flash_Memory_Initialization@i,w
 12513  0E6A  00DD               	movwf	??_Flash_Memory_Initialization
 12514  0E6B  086E               	movf	_Product,w
 12515  0E6C  3E17               	addlw	23
 12516  0E6D  0086               	movwf	6
 12517  0E6E  3001               	movlw	1	; select bank2/3
 12518  0E6F  0087               	movwf	7
 12519  0E70  085D               	movf	??_Flash_Memory_Initialization,w
 12520  0E71  0081               	movwf	1
 12521                           
 12522                           ;MCU_B1.c: 844: if(Product->Data[12]==0xff && Product->Data[13]==0xff && Product->Data[1
      +                          4]==0xff)
 12523  0E72  086E               	movf	_Product,w
 12524  0E73  3E0C               	addlw	12
 12525  0E74  0086               	movwf	6
 12526  0E75  3001               	movlw	1	; select bank2/3
 12527  0E76  0087               	movwf	7
 12528  0E77  0801               	movf	1,w
 12529  0E78  3AFF               	xorlw	255
 12530  0E79  1D03               	skipz
 12531  0E7A  0008               	return
 12532  0E7B  086E               	movf	_Product,w
 12533  0E7C  3E0D               	addlw	13
 12534  0E7D  0086               	movwf	6
 12535  0E7E  3001               	movlw	1	; select bank2/3
 12536  0E7F  0087               	movwf	7
 12537  0E80  0801               	movf	1,w
 12538  0E81  3AFF               	xorlw	255
 12539  0E82  1D03               	skipz
 12540  0E83  0008               	return
 12541  0E84  086E               	movf	_Product,w
 12542  0E85  3E0E               	addlw	14
 12543  0E86  0086               	movwf	6
 12544  0E87  3001               	movlw	1	; select bank2/3
 12545  0E88  0087               	movwf	7
 12546  0E89  0801               	movf	1,w
 12547  0E8A  3AFF               	xorlw	255
 12548  0E8B  1D03               	skipz
 12549  0E8C  0008               	return
 12550                           
 12551                           ;MCU_B1.c: 845: {
 12552                           ;MCU_B1.c: 846: TMain->FirstOpen=1;
 12553  0E8D  086F               	movf	_TMain,w
 12554  0E8E  0086               	movwf	6
 12555  0E8F  3001               	movlw	1	; select bank2/3
 12556  0E90  0087               	movwf	7
 12557  0E91  1681               	bsf	1,5
 12558                           
 12559                           ;MCU_B1.c: 847: TMain->First=1;
 12560  0E92  086F               	movf	_TMain,w
 12561  0E93  3E03               	addlw	3
 12562  0E94  0086               	movwf	6
 12563  0E95  3001               	movlw	1	; select bank2/3
 12564  0E96  0087               	movwf	7
 12565  0E97  1481               	bsf	1,1
 12566                           
 12567                           ;MCU_B1.c: 848: }
 12568                           ;MCU_B1.c: 849: }
 12569  0E98  0008               	return
 12570  0E99                     l9680:	
 12571                           
 12572                           ;MCU_B1.c: 850: else
 12573                           ;MCU_B1.c: 851: {
 12574                           ;MCU_B1.c: 852: i=setPercentValue(((char)((100-55)*1.5)));
 12575  0E99  3043               	movlw	67
 12576  0E9A  3191  2190  318E   	fcall	_setPercentValue
 12577  0E9D  0020               	movlb	0	; select bank0
 12578  0E9E  00DD               	movwf	??_Flash_Memory_Initialization
 12579  0E9F  085D               	movf	??_Flash_Memory_Initialization,w
 12580  0EA0  00DE               	movwf	Flash_Memory_Initialization@i
 12581                           
 12582                           ;MCU_B1.c: 853: Memory->Data[0]=0xff;
 12583  0EA1  30FF               	movlw	255
 12584  0EA2  00DD               	movwf	??_Flash_Memory_Initialization
 12585  0EA3  086D               	movf	_Memory,w
 12586  0EA4  0086               	movwf	6
 12587  0EA5  3002               	movlw	2	; select bank4/5
 12588  0EA6  0087               	movwf	7
 12589  0EA7  085D               	movf	??_Flash_Memory_Initialization,w
 12590  0EA8  0081               	movwf	1
 12591                           
 12592                           ;MCU_B1.c: 854: Memory->Data[1]=0xff;
 12593  0EA9  30FF               	movlw	255
 12594  0EAA  00DD               	movwf	??_Flash_Memory_Initialization
 12595  0EAB  0A6D               	incf	_Memory,w
 12596  0EAC  0086               	movwf	6
 12597  0EAD  3002               	movlw	2	; select bank4/5
 12598  0EAE  0087               	movwf	7
 12599  0EAF  085D               	movf	??_Flash_Memory_Initialization,w
 12600  0EB0  0081               	movwf	1
 12601                           
 12602                           ;MCU_B1.c: 855: Memory->Data[2]=0xff;
 12603  0EB1  30FF               	movlw	255
 12604  0EB2  00DD               	movwf	??_Flash_Memory_Initialization
 12605  0EB3  086D               	movf	_Memory,w
 12606  0EB4  3E02               	addlw	2
 12607  0EB5  0086               	movwf	6
 12608  0EB6  3002               	movlw	2	; select bank4/5
 12609  0EB7  0087               	movwf	7
 12610  0EB8  085D               	movf	??_Flash_Memory_Initialization,w
 12611  0EB9  0081               	movwf	1
 12612                           
 12613                           ;MCU_B1.c: 856: Memory->Data[3]=0xff;
 12614  0EBA  30FF               	movlw	255
 12615  0EBB  00DD               	movwf	??_Flash_Memory_Initialization
 12616  0EBC  086D               	movf	_Memory,w
 12617  0EBD  3E03               	addlw	3
 12618  0EBE  0086               	movwf	6
 12619  0EBF  3002               	movlw	2	; select bank4/5
 12620  0EC0  0087               	movwf	7
 12621  0EC1  085D               	movf	??_Flash_Memory_Initialization,w
 12622  0EC2  0081               	movwf	1
 12623                           
 12624                           ;MCU_B1.c: 857: Memory->Data[4]=0xff;
 12625  0EC3  30FF               	movlw	255
 12626  0EC4  00DD               	movwf	??_Flash_Memory_Initialization
 12627  0EC5  086D               	movf	_Memory,w
 12628  0EC6  3E04               	addlw	4
 12629  0EC7  0086               	movwf	6
 12630  0EC8  3002               	movlw	2	; select bank4/5
 12631  0EC9  0087               	movwf	7
 12632  0ECA  085D               	movf	??_Flash_Memory_Initialization,w
 12633  0ECB  0081               	movwf	1
 12634                           
 12635                           ;MCU_B1.c: 858: Memory->Data[5]=0xff;
 12636  0ECC  30FF               	movlw	255
 12637  0ECD  00DD               	movwf	??_Flash_Memory_Initialization
 12638  0ECE  086D               	movf	_Memory,w
 12639  0ECF  3E05               	addlw	5
 12640  0ED0  0086               	movwf	6
 12641  0ED1  3002               	movlw	2	; select bank4/5
 12642  0ED2  0087               	movwf	7
 12643  0ED3  085D               	movf	??_Flash_Memory_Initialization,w
 12644  0ED4  0081               	movwf	1
 12645                           
 12646                           ;MCU_B1.c: 859: Memory->Data[31]=0xaa;
 12647  0ED5  30AA               	movlw	170
 12648  0ED6  00DD               	movwf	??_Flash_Memory_Initialization
 12649  0ED7  086D               	movf	_Memory,w
 12650  0ED8  3E1F               	addlw	31
 12651  0ED9  0086               	movwf	6
 12652  0EDA  3002               	movlw	2	; select bank4/5
 12653  0EDB  0087               	movwf	7
 12654  0EDC  085D               	movf	??_Flash_Memory_Initialization,w
 12655  0EDD  0081               	movwf	1
 12656                           
 12657                           ;MCU_B1.c: 860: Product->Data[21]=i;
 12658  0EDE  085E               	movf	Flash_Memory_Initialization@i,w
 12659  0EDF  00DD               	movwf	??_Flash_Memory_Initialization
 12660  0EE0  086E               	movf	_Product,w
 12661  0EE1  3E15               	addlw	21
 12662  0EE2  0086               	movwf	6
 12663  0EE3  3001               	movlw	1	; select bank2/3
 12664  0EE4  0087               	movwf	7
 12665  0EE5  085D               	movf	??_Flash_Memory_Initialization,w
 12666  0EE6  0081               	movwf	1
 12667                           
 12668                           ;MCU_B1.c: 861: Product->Data[22]=i;
 12669  0EE7  085E               	movf	Flash_Memory_Initialization@i,w
 12670  0EE8  00DD               	movwf	??_Flash_Memory_Initialization
 12671  0EE9  086E               	movf	_Product,w
 12672  0EEA  3E16               	addlw	22
 12673  0EEB  0086               	movwf	6
 12674  0EEC  3001               	movlw	1	; select bank2/3
 12675  0EED  0087               	movwf	7
 12676  0EEE  085D               	movf	??_Flash_Memory_Initialization,w
 12677  0EEF  0081               	movwf	1
 12678                           
 12679                           ;MCU_B1.c: 862: Product->Data[23]=i;
 12680  0EF0  085E               	movf	Flash_Memory_Initialization@i,w
 12681  0EF1  00DD               	movwf	??_Flash_Memory_Initialization
 12682  0EF2  086E               	movf	_Product,w
 12683  0EF3  3E17               	addlw	23
 12684  0EF4  0086               	movwf	6
 12685  0EF5  3001               	movlw	1	; select bank2/3
 12686  0EF6  0087               	movwf	7
 12687  0EF7  085D               	movf	??_Flash_Memory_Initialization,w
 12688  0EF8  0081               	movwf	1
 12689                           
 12690                           ;MCU_B1.c: 863: GIE=0;
 12691  0EF9  138B               	bcf	11,7	;volatile
 12692                           
 12693                           ;MCU_B1.c: 864: Flash_Memory_Write();
 12694  0EFA  319E  2683         	fcall	_Flash_Memory_Write
 12695                           
 12696                           ;MCU_B1.c: 865: GIE=1;
 12697  0EFC  178B               	bsf	11,7	;volatile
 12698                           
 12699                           ;MCU_B1.c: 866: TMain->FirstOpen=1;
 12700  0EFD  0020               	movlb	0	; select bank0
 12701  0EFE  086F               	movf	_TMain,w
 12702  0EFF  0086               	movwf	6
 12703  0F00  3001               	movlw	1	; select bank2/3
 12704  0F01  0087               	movwf	7
 12705  0F02  1681               	bsf	1,5
 12706                           
 12707                           ;MCU_B1.c: 867: TMain->First=1;
 12708  0F03  086F               	movf	_TMain,w
 12709  0F04  3E03               	addlw	3
 12710  0F05  0086               	movwf	6
 12711  0F06  3001               	movlw	1	; select bank2/3
 12712  0F07  0087               	movwf	7
 12713  0F08  1481               	bsf	1,1
 12714  0F09  0008               	return
 12715  0F0A                     __end_of_Flash_Memory_Initialization:	
 12716                           
 12717                           	psect	text73
 12718  1E83                     __ptext73:	
 12719 ;; *************** function _Flash_Memory_Write *****************
 12720 ;; Defined at:
 12721 ;;		line 915 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
 12722 ;; Parameters:    Size  Location     Type
 12723 ;;		None
 12724 ;; Auto vars:     Size  Location     Type
 12725 ;;  i               1    1[BANK0 ] unsigned char 
 12726 ;; Return value:  Size  Location     Type
 12727 ;;		None               void
 12728 ;; Registers used:
 12729 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12730 ;; Tracked objects:
 12731 ;;		On entry : 0/0
 12732 ;;		On exit  : 0/0
 12733 ;;		Unchanged: 0/0
 12734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12736 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12737 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12738 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12739 ;;Total ram usage:        2 bytes
 12740 ;; Hardware stack levels used:    1
 12741 ;; Hardware stack levels required when called:    5
 12742 ;; This function calls:
 12743 ;;		_Flash_Memory_Unlock
 12744 ;; This function is called by:
 12745 ;;		_Flash_Memory_Initialization
 12746 ;;		_Flash_Memory_Modify
 12747 ;; This function uses a non-reentrant model
 12748 ;;
 12749                           
 12750                           
 12751                           ;psect for function _Flash_Memory_Write
 12752  1E83                     _Flash_Memory_Write:	
 12753                           
 12754                           ;MCU_B1.c: 917: char i;
 12755                           ;MCU_B1.c: 918: CFGS=0;
 12756                           
 12757                           ;incstack = 0
 12758                           ; Regs used in _Flash_Memory_Write: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12759  1E83  0023               	movlb	3	; select bank3
 12760  1E84  1315               	bcf	21,6	;volatile
 12761                           
 12762                           ;MCU_B1.c: 919: PMADRH=0x30;
 12763  1E85  3030               	movlw	48
 12764  1E86  0092               	movwf	18	;volatile
 12765                           
 12766                           ;MCU_B1.c: 920: PMDATH=0;
 12767  1E87  0194               	clrf	20	;volatile
 12768                           
 12769                           ;MCU_B1.c: 921: FREE=0;
 12770  1E88  1215               	bcf	21,4	;volatile
 12771                           
 12772                           ;MCU_B1.c: 922: LWLO=1;
 12773  1E89  1695               	bsf	21,5	;volatile
 12774                           
 12775                           ;MCU_B1.c: 923: WREN=1;
 12776  1E8A  1515               	bsf	21,2	;volatile
 12777                           
 12778                           ;MCU_B1.c: 924: for(i=0 ; i<32 ; i++)
 12779  1E8B  0020               	movlb	0	; select bank0
 12780  1E8C  01A1               	clrf	Flash_Memory_Write@i
 12781  1E8D  3020               	movlw	32
 12782  1E8E  0221               	subwf	Flash_Memory_Write@i,w
 12783  1E8F  1803               	btfsc	3,0
 12784  1E90  2EAB               	goto	l1706
 12785  1E91                     l8850:	
 12786                           
 12787                           ;MCU_B1.c: 925: {
 12788                           ;MCU_B1.c: 926: PMADRL=i;
 12789  1E91  0821               	movf	Flash_Memory_Write@i,w
 12790  1E92  0023               	movlb	3	; select bank3
 12791  1E93  0091               	movwf	17	;volatile
 12792                           
 12793                           ;MCU_B1.c: 927: PMDATL=Memory->Data[i];
 12794  1E94  0020               	movlb	0	; select bank0
 12795  1E95  0821               	movf	Flash_Memory_Write@i,w
 12796  1E96  076D               	addwf	_Memory,w
 12797  1E97  00A0               	movwf	??_Flash_Memory_Write
 12798  1E98  0820               	movf	??_Flash_Memory_Write,w
 12799  1E99  0086               	movwf	6
 12800  1E9A  3002               	movlw	2	; select bank4/5
 12801  1E9B  0087               	movwf	7
 12802  1E9C  0801               	movf	1,w
 12803  1E9D  0023               	movlb	3	; select bank3
 12804  1E9E  0093               	movwf	19	;volatile
 12805                           
 12806                           ;MCU_B1.c: 928: Flash_Memory_Unlock();
 12807  1E9F  3199  2154  319E   	fcall	_Flash_Memory_Unlock
 12808  1EA2  3001               	movlw	1
 12809  1EA3  0020               	movlb	0	; select bank0
 12810  1EA4  00A0               	movwf	??_Flash_Memory_Write
 12811  1EA5  0820               	movf	??_Flash_Memory_Write,w
 12812  1EA6  07A1               	addwf	Flash_Memory_Write@i,f
 12813  1EA7  3020               	movlw	32
 12814  1EA8  0221               	subwf	Flash_Memory_Write@i,w
 12815  1EA9  1C03               	skipc
 12816  1EAA  2E91               	goto	l8850
 12817  1EAB                     l1706:	
 12818                           
 12819                           ;MCU_B1.c: 929: }
 12820                           ;MCU_B1.c: 930: LWLO=0;
 12821  1EAB  0023               	movlb	3	; select bank3
 12822  1EAC  1295               	bcf	21,5	;volatile
 12823                           
 12824                           ;MCU_B1.c: 931: Flash_Memory_Unlock();
 12825  1EAD  3199  2154         	fcall	_Flash_Memory_Unlock
 12826                           
 12827                           ;MCU_B1.c: 932: WREN=0;
 12828  1EAF  0023               	movlb	3	; select bank3
 12829  1EB0  1115               	bcf	21,2	;volatile
 12830  1EB1  0008               	return
 12831  1EB2                     __end_of_Flash_Memory_Write:	
 12832                           
 12833                           	psect	text74
 12834  1954                     __ptext74:	
 12835 ;; *************** function _Flash_Memory_Unlock *****************
 12836 ;; Defined at:
 12837 ;;		line 894 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
 12838 ;; Parameters:    Size  Location     Type
 12839 ;;		None
 12840 ;; Auto vars:     Size  Location     Type
 12841 ;;		None
 12842 ;; Return value:  Size  Location     Type
 12843 ;;		None               void
 12844 ;; Registers used:
 12845 ;;		wreg
 12846 ;; Tracked objects:
 12847 ;;		On entry : 0/0
 12848 ;;		On exit  : 0/0
 12849 ;;		Unchanged: 0/0
 12850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12854 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12855 ;;Total ram usage:        0 bytes
 12856 ;; Hardware stack levels used:    1
 12857 ;; Hardware stack levels required when called:    4
 12858 ;; This function calls:
 12859 ;;		Nothing
 12860 ;; This function is called by:
 12861 ;;		_Flash_Memory_Write
 12862 ;;		_Flash_Memory_Erasing
 12863 ;; This function uses a non-reentrant model
 12864 ;;
 12865                           
 12866                           
 12867                           ;psect for function _Flash_Memory_Unlock
 12868  1954                     _Flash_Memory_Unlock:	
 12869                           
 12870                           ;MCU_B1.c: 896: PMCON2=0x55;
 12871                           
 12872                           ;incstack = 0
 12873                           ; Regs used in _Flash_Memory_Unlock: [wreg]
 12874  1954  3055               	movlw	85
 12875  1955  0023               	movlb	3	; select bank3
 12876  1956  0096               	movwf	22	;volatile
 12877                           
 12878                           ;MCU_B1.c: 897: PMCON2=0xaa;
 12879  1957  30AA               	movlw	170
 12880  1958  0096               	movwf	22	;volatile
 12881                           
 12882                           ;MCU_B1.c: 898: WR=1;
 12883  1959  1495               	bsf	21,1	;volatile
 12884                           
 12885                           ;MCU_B1.c: 899: __nop();
 12886  195A  0000               	nop
 12887                           
 12888                           ;MCU_B1.c: 900: __nop();
 12889  195B  0000               	nop
 12890  195C  0008               	return
 12891  195D                     __end_of_Flash_Memory_Unlock:	
 12892                           
 12893                           	psect	text75
 12894  1BD3                     __ptext75:	
 12895 ;; *************** function _Flash_Memory_Read *****************
 12896 ;; Defined at:
 12897 ;;		line 903 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
 12898 ;; Parameters:    Size  Location     Type
 12899 ;;  address         1    wreg     unsigned char 
 12900 ;; Auto vars:     Size  Location     Type
 12901 ;;  address         1    2[BANK0 ] unsigned char 
 12902 ;;  ret             1    3[BANK0 ] unsigned char 
 12903 ;;  i               1    1[BANK0 ] unsigned char 
 12904 ;; Return value:  Size  Location     Type
 12905 ;;                  1    wreg      unsigned char 
 12906 ;; Registers used:
 12907 ;;		wreg, status,2
 12908 ;; Tracked objects:
 12909 ;;		On entry : 0/0
 12910 ;;		On exit  : 0/0
 12911 ;;		Unchanged: 0/0
 12912 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12913 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12914 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12915 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12916 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12917 ;;Total ram usage:        4 bytes
 12918 ;; Hardware stack levels used:    1
 12919 ;; Hardware stack levels required when called:    4
 12920 ;; This function calls:
 12921 ;;		Nothing
 12922 ;; This function is called by:
 12923 ;;		_Flash_Memory_Initialization
 12924 ;;		_Flash_Memory_Modify
 12925 ;; This function uses a non-reentrant model
 12926 ;;
 12927                           
 12928                           
 12929                           ;psect for function _Flash_Memory_Read
 12930  1BD3                     _Flash_Memory_Read:	
 12931                           
 12932                           ;incstack = 0
 12933                           ; Regs used in _Flash_Memory_Read: [wreg+status,2]
 12934                           ;Flash_Memory_Read@address stored from wreg
 12935  1BD3  0020               	movlb	0	; select bank0
 12936  1BD4  00A2               	movwf	Flash_Memory_Read@address
 12937                           
 12938                           ;MCU_B1.c: 905: char i,ret=0;
 12939  1BD5  01A3               	clrf	Flash_Memory_Read@ret
 12940                           
 12941                           ;MCU_B1.c: 906: PMADRH=0x30;
 12942  1BD6  3030               	movlw	48
 12943  1BD7  0023               	movlb	3	; select bank3
 12944  1BD8  0092               	movwf	18	;volatile
 12945                           
 12946                           ;MCU_B1.c: 907: PMADRL=address;
 12947  1BD9  0020               	movlb	0	; select bank0
 12948  1BDA  0822               	movf	Flash_Memory_Read@address,w
 12949  1BDB  0023               	movlb	3	; select bank3
 12950  1BDC  0091               	movwf	17	;volatile
 12951                           
 12952                           ;MCU_B1.c: 908: CFGS=0;
 12953  1BDD  1315               	bcf	21,6	;volatile
 12954                           
 12955                           ;MCU_B1.c: 909: RD=1;
 12956  1BDE  1415               	bsf	21,0	;volatile
 12957                           
 12958                           ;MCU_B1.c: 910: i=PMDATH;
 12959  1BDF  0814               	movf	20,w	;volatile
 12960  1BE0  0020               	movlb	0	; select bank0
 12961  1BE1  00A0               	movwf	??_Flash_Memory_Read
 12962  1BE2  0820               	movf	??_Flash_Memory_Read,w
 12963  1BE3  00A1               	movwf	Flash_Memory_Read@i
 12964                           
 12965                           ;MCU_B1.c: 911: ret=PMDATL;
 12966  1BE4  0023               	movlb	3	; select bank3
 12967  1BE5  0813               	movf	19,w	;volatile
 12968  1BE6  0020               	movlb	0	; select bank0
 12969  1BE7  00A0               	movwf	??_Flash_Memory_Read
 12970  1BE8  0820               	movf	??_Flash_Memory_Read,w
 12971  1BE9  00A3               	movwf	Flash_Memory_Read@ret
 12972                           
 12973                           ;MCU_B1.c: 912: return ret;
 12974  1BEA  0823               	movf	Flash_Memory_Read@ret,w
 12975  1BEB  0008               	return
 12976  1BEC                     __end_of_Flash_Memory_Read:	
 12977                           
 12978                           	psect	text76
 12979  1991                     __ptext76:	
 12980 ;; *************** function _DimmerLights_Main *****************
 12981 ;; Defined at:
 12982 ;;		line 114 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 12983 ;; Parameters:    Size  Location     Type
 12984 ;;		None
 12985 ;; Auto vars:     Size  Location     Type
 12986 ;;		None
 12987 ;; Return value:  Size  Location     Type
 12988 ;;		None               void
 12989 ;; Registers used:
 12990 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12991 ;; Tracked objects:
 12992 ;;		On entry : 0/0
 12993 ;;		On exit  : 0/0
 12994 ;;		Unchanged: 0/0
 12995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12996 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12997 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12999 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13000 ;;Total ram usage:        0 bytes
 13001 ;; Hardware stack levels used:    1
 13002 ;; Hardware stack levels required when called:   10
 13003 ;; This function calls:
 13004 ;;		_DimmerLights_Close
 13005 ;;		_setDimmerLights_Main
 13006 ;; This function is called by:
 13007 ;;		_main
 13008 ;; This function uses a non-reentrant model
 13009 ;;
 13010                           
 13011                           
 13012                           ;psect for function _DimmerLights_Main
 13013  1991                     _DimmerLights_Main:	
 13014                           
 13015                           ;Dimmer_B1.c: 117: setDimmerLights_Main(1);
 13016                           
 13017                           ;incstack = 0
 13018                           ; Regs used in _DimmerLights_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13019  1991  3001               	movlw	1
 13020  1992  3188  20E3  3199   	fcall	_setDimmerLights_Main
 13021                           
 13022                           ;Dimmer_B1.c: 121: setDimmerLights_Main(2);
 13023  1995  3002               	movlw	2
 13024  1996  3188  20E3  3199   	fcall	_setDimmerLights_Main
 13025                           
 13026                           ;Dimmer_B1.c: 128: DimmerLights_Close();
 13027  1999  319B  2389         	fcall	_DimmerLights_Close
 13028  199B  0008               	return
 13029  199C                     __end_of_DimmerLights_Main:	
 13030                           
 13031                           	psect	text77
 13032  08E3                     __ptext77:	
 13033 ;; *************** function _setDimmerLights_Main *****************
 13034 ;; Defined at:
 13035 ;;		line 131 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 13036 ;; Parameters:    Size  Location     Type
 13037 ;;  lights          1    wreg     unsigned char 
 13038 ;; Auto vars:     Size  Location     Type
 13039 ;;  lights          1   70[BANK0 ] unsigned char 
 13040 ;;  clear           1   69[BANK0 ] unsigned char 
 13041 ;; Return value:  Size  Location     Type
 13042 ;;		None               void
 13043 ;; Registers used:
 13044 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13045 ;; Tracked objects:
 13046 ;;		On entry : 0/0
 13047 ;;		On exit  : 0/0
 13048 ;;		Unchanged: 0/0
 13049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13051 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13053 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13054 ;;Total ram usage:        2 bytes
 13055 ;; Hardware stack levels used:    1
 13056 ;; Hardware stack levels required when called:    9
 13057 ;; This function calls:
 13058 ;;		_DimmerLightsPointSelect
 13059 ;;		_setBuz
 13060 ;;		_setDimmerLights
 13061 ;;		_setDimmerLights_Adj
 13062 ;; This function is called by:
 13063 ;;		_DimmerLights_Main
 13064 ;; This function uses a non-reentrant model
 13065 ;;
 13066                           
 13067                           
 13068                           ;psect for function _setDimmerLights_Main
 13069  08E3                     _setDimmerLights_Main:	
 13070                           
 13071                           ;incstack = 0
 13072                           ; Regs used in _setDimmerLights_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13073                           ;setDimmerLights_Main@lights stored from wreg
 13074  08E3  0020               	movlb	0	; select bank0
 13075  08E4  00E6               	movwf	setDimmerLights_Main@lights
 13076                           
 13077                           ;Dimmer_B1.c: 133: char clear=1;
 13078  08E5  01E5               	clrf	setDimmerLights_Main@clear
 13079  08E6  0AE5               	incf	setDimmerLights_Main@clear,f
 13080                           
 13081                           ;Dimmer_B1.c: 134: DimmerLightsPointSelect(lights);
 13082  08E7  0866               	movf	setDimmerLights_Main@lights,w
 13083  08E8  319A  22CC  3188   	fcall	_DimmerLightsPointSelect
 13084                           
 13085                           ;Dimmer_B1.c: 152: if(lights == 1)
 13086  08EB  0020               	movlb	0	; select bank0
 13087  08EC  0866               	movf	setDimmerLights_Main@lights,w
 13088  08ED  3A01               	xorlw	1
 13089  08EE  1D03               	skipz
 13090  08EF  28F2               	goto	l9156
 13091                           
 13092                           ;Dimmer_B1.c: 153: {
 13093                           ;Dimmer_B1.c: 154: clear=(!DimmerLights22->Clear)?0:1;
 13094  08F0  086C               	movf	_DimmerLights22,w
 13095  08F1  28F7               	goto	L13
 13096  08F2                     l9156:	
 13097                           ;Dimmer_B1.c: 155: }
 13098                           
 13099                           
 13100                           ;Dimmer_B1.c: 156: else if(lights == 2)
 13101  08F2  0866               	movf	setDimmerLights_Main@lights,w
 13102  08F3  3A02               	xorlw	2
 13103  08F4  1D03               	skipz
 13104  08F5  28FF               	goto	l9160
 13105                           
 13106                           ;Dimmer_B1.c: 157: {
 13107                           ;Dimmer_B1.c: 158: clear=(!DimmerLights11->Clear)?0:1;
 13108  08F6  086B               	movf	_DimmerLights11,w
 13109  08F7                     L13:	
 13110  08F7  3E0C               	addlw	12
 13111  08F8  0086               	movwf	6
 13112  08F9  3001               	movlw	1	; select bank2/3
 13113  08FA  0087               	movwf	7
 13114  08FB  3000               	movlw	0
 13115  08FC  1801               	btfsc	1,0
 13116  08FD  3001               	movlw	1
 13117  08FE  00E5               	movwf	setDimmerLights_Main@clear
 13118  08FF                     l9160:	
 13119                           
 13120                           ;Dimmer_B1.c: 159: }
 13121                           ;Dimmer_B1.c: 162: if(DimmerLights->Trigger)
 13122  08FF  086A               	movf	_DimmerLights,w
 13123  0900  3E09               	addlw	9
 13124  0901  0086               	movwf	6
 13125  0902  3001               	movlw	1	; select bank2/3
 13126  0903  0087               	movwf	7
 13127  0904  1C81               	btfss	1,1
 13128  0905  292A               	goto	l9174
 13129                           
 13130                           ;Dimmer_B1.c: 163: {
 13131                           ;Dimmer_B1.c: 164: if(clear)
 13132  0906  0865               	movf	setDimmerLights_Main@clear,w
 13133  0907  1903               	btfsc	3,2
 13134  0908  0008               	return
 13135                           
 13136                           ;Dimmer_B1.c: 165: {
 13137                           ;Dimmer_B1.c: 166: if(DimmerLights->Switch)
 13138  0909  086A               	movf	_DimmerLights,w
 13139  090A  3E09               	addlw	9
 13140  090B  0086               	movwf	6
 13141  090C  3001               	movlw	1	; select bank2/3
 13142  090D  0087               	movwf	7
 13143  090E  1C01               	btfss	1,0
 13144  090F  291D               	goto	l9170
 13145                           
 13146                           ;Dimmer_B1.c: 167: {
 13147                           ;Dimmer_B1.c: 168: DimmerLights->Trigger=0;
 13148  0910  086A               	movf	_DimmerLights,w
 13149  0911  3E09               	addlw	9
 13150  0912  0086               	movwf	6
 13151  0913  3001               	movlw	1	; select bank2/3
 13152  0914  0087               	movwf	7
 13153  0915  1081               	bcf	1,1
 13154                           
 13155                           ;Dimmer_B1.c: 169: setDimmerLights(lights,1);
 13156  0916  01A4               	clrf	setDimmerLights@status
 13157  0917  0AA4               	incf	setDimmerLights@status,f
 13158  0918  0866               	movf	setDimmerLights_Main@lights,w
 13159  0919  3189  21E5         	fcall	_setDimmerLights
 13160                           
 13161                           ;Dimmer_B1.c: 174: }
 13162  091B  0020               	movlb	0	; select bank0
 13163  091C  0008               	return
 13164  091D                     l9170:	
 13165                           
 13166                           ;Dimmer_B1.c: 175: else
 13167                           ;Dimmer_B1.c: 176: {
 13168                           ;Dimmer_B1.c: 177: DimmerLights->Trigger=0;
 13169  091D  0020               	movlb	0	; select bank0
 13170  091E  086A               	movf	_DimmerLights,w
 13171  091F  3E09               	addlw	9
 13172  0920  0086               	movwf	6
 13173  0921  3001               	movlw	1	; select bank2/3
 13174  0922  0087               	movwf	7
 13175  0923  1081               	bcf	1,1
 13176                           
 13177                           ;Dimmer_B1.c: 178: setDimmerLights(lights,0);
 13178  0924  01A4               	clrf	setDimmerLights@status
 13179  0925  0866               	movf	setDimmerLights_Main@lights,w
 13180  0926  3189  21E5         	fcall	_setDimmerLights
 13181  0928  0020               	movlb	0	; select bank0
 13182  0929  0008               	return
 13183  092A                     l9174:	
 13184                           ;Dimmer_B1.c: 183: }
 13185                           ;Dimmer_B1.c: 184: }
 13186                           ;Dimmer_B1.c: 185: }
 13187                           
 13188                           
 13189                           ;Dimmer_B1.c: 186: else
 13190                           ;Dimmer_B1.c: 187: {
 13191                           ;Dimmer_B1.c: 188: if(DimmerLights->TriggerAdj)
 13192  092A  0020               	movlb	0	; select bank0
 13193  092B  086A               	movf	_DimmerLights,w
 13194  092C  3E09               	addlw	9
 13195  092D  0086               	movwf	6
 13196  092E  3001               	movlw	1	; select bank2/3
 13197  092F  0087               	movwf	7
 13198  0930  1D81               	btfss	1,3
 13199  0931  0008               	return
 13200                           
 13201                           ;Dimmer_B1.c: 189: {
 13202                           ;Dimmer_B1.c: 190: if(clear)
 13203  0932  0865               	movf	setDimmerLights_Main@clear,w
 13204  0933  1903               	btfsc	3,2
 13205  0934  0008               	return
 13206                           
 13207                           ;Dimmer_B1.c: 191: {
 13208                           ;Dimmer_B1.c: 192: DimmerLightsPointSelect(lights);
 13209  0935  0866               	movf	setDimmerLights_Main@lights,w
 13210  0936  319A  22CC  3188   	fcall	_DimmerLightsPointSelect
 13211                           
 13212                           ;Dimmer_B1.c: 193: DimmerLights->TriggerAdj=0;
 13213  0939  0020               	movlb	0	; select bank0
 13214  093A  086A               	movf	_DimmerLights,w
 13215  093B  3E09               	addlw	9
 13216  093C  0086               	movwf	6
 13217  093D  3001               	movlw	1	; select bank2/3
 13218  093E  0087               	movwf	7
 13219  093F  1181               	bcf	1,3
 13220                           
 13221                           ;Dimmer_B1.c: 194: if(DimmerLights->AdjGo)
 13222  0940  086A               	movf	_DimmerLights,w
 13223  0941  3E09               	addlw	9
 13224  0942  0086               	movwf	6
 13225  0943  3001               	movlw	1	; select bank2/3
 13226  0944  0087               	movwf	7
 13227  0945  1D01               	btfss	1,2
 13228  0946  2957               	goto	l9186
 13229                           
 13230                           ;Dimmer_B1.c: 195: {
 13231                           ;Dimmer_B1.c: 196: setDimmerLights_Adj(lights,1);
 13232  0947  01E2               	clrf	setDimmerLights_Adj@status
 13233  0948  0AE2               	incf	setDimmerLights_Adj@status,f
 13234  0949  0866               	movf	setDimmerLights_Main@lights,w
 13235  094A  319F  2783  3188   	fcall	_setDimmerLights_Adj
 13236                           
 13237                           ;Dimmer_B1.c: 197: setBuz(1,100);
 13238  094D  3064               	movlw	100
 13239  094E  0020               	movlb	0	; select bank0
 13240  094F  00A6               	movwf	setBuz@time
 13241  0950  3000               	movlw	0
 13242  0951  00A7               	movwf	setBuz@time+1
 13243  0952  3001               	movlw	1
 13244  0953  3197  2789         	fcall	_setBuz
 13245                           
 13246                           ;Dimmer_B1.c: 198: }
 13247  0955  0020               	movlb	0	; select bank0
 13248  0956  0008               	return
 13249  0957                     l9186:	
 13250                           
 13251                           ;Dimmer_B1.c: 199: else
 13252                           ;Dimmer_B1.c: 200: {
 13253                           ;Dimmer_B1.c: 201: setDimmerLights_Adj(lights,0);
 13254  0957  0020               	movlb	0	; select bank0
 13255  0958  01E2               	clrf	setDimmerLights_Adj@status
 13256  0959  0866               	movf	setDimmerLights_Main@lights,w
 13257  095A  319F  2783         	fcall	_setDimmerLights_Adj
 13258  095C  0020               	movlb	0	; select bank0
 13259  095D  0008               	return
 13260  095E                     __end_of_setDimmerLights_Main:	
 13261                           
 13262                           	psect	text78
 13263  1F83                     __ptext78:	
 13264 ;; *************** function _setDimmerLights_Adj *****************
 13265 ;; Defined at:
 13266 ;;		line 388 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 13267 ;; Parameters:    Size  Location     Type
 13268 ;;  lights          1    wreg     unsigned char 
 13269 ;;  status          1   66[BANK0 ] unsigned char 
 13270 ;; Auto vars:     Size  Location     Type
 13271 ;;  lights          1   68[BANK0 ] unsigned char 
 13272 ;; Return value:  Size  Location     Type
 13273 ;;		None               void
 13274 ;; Registers used:
 13275 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13276 ;; Tracked objects:
 13277 ;;		On entry : 0/0
 13278 ;;		On exit  : 0/0
 13279 ;;		Unchanged: 0/0
 13280 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13281 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13282 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13283 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13284 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13285 ;;Total ram usage:        3 bytes
 13286 ;; Hardware stack levels used:    1
 13287 ;; Hardware stack levels required when called:    8
 13288 ;; This function calls:
 13289 ;;		_DimmerLightsPointSelect
 13290 ;;		_setRF_DimmerLights
 13291 ;;		_setTxData
 13292 ;; This function is called by:
 13293 ;;		_setDimmerLights_Main
 13294 ;; This function uses a non-reentrant model
 13295 ;;
 13296                           
 13297                           
 13298                           ;psect for function _setDimmerLights_Adj
 13299  1F83                     _setDimmerLights_Adj:	
 13300                           
 13301                           ;incstack = 0
 13302                           ; Regs used in _setDimmerLights_Adj: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13303                           ;setDimmerLights_Adj@lights stored from wreg
 13304  1F83  0020               	movlb	0	; select bank0
 13305  1F84  00E4               	movwf	setDimmerLights_Adj@lights
 13306                           
 13307                           ;Dimmer_B1.c: 390: DimmerLightsPointSelect(lights);
 13308  1F85  0864               	movf	setDimmerLights_Adj@lights,w
 13309  1F86  319A  22CC  319F   	fcall	_DimmerLightsPointSelect
 13310                           
 13311                           ;Dimmer_B1.c: 391: if(status)
 13312  1F89  0020               	movlb	0	; select bank0
 13313  1F8A  0862               	movf	setDimmerLights_Adj@status,w
 13314  1F8B  1903               	btfsc	3,2
 13315  1F8C  2F98               	goto	l8808
 13316                           
 13317                           ;Dimmer_B1.c: 392: {
 13318                           ;Dimmer_B1.c: 393: DimmerLights->AdjFlag=1;
 13319  1F8D  086A               	movf	_DimmerLights,w
 13320  1F8E  0086               	movwf	6
 13321  1F8F  3001               	movlw	1	; select bank2/3
 13322  1F90  0087               	movwf	7
 13323  1F91  1581               	bsf	1,3
 13324                           
 13325                           ;Dimmer_B1.c: 394: DimmerLights->Signal=1;
 13326  1F92  086A               	movf	_DimmerLights,w
 13327  1F93  0086               	movwf	6
 13328  1F94  3001               	movlw	1	; select bank2/3
 13329  1F95  0087               	movwf	7
 13330  1F96  1481               	bsf	1,1
 13331                           
 13332                           ;Dimmer_B1.c: 395: }
 13333  1F97  0008               	return
 13334  1F98                     l8808:	
 13335                           
 13336                           ;Dimmer_B1.c: 396: else
 13337                           ;Dimmer_B1.c: 397: {
 13338                           ;Dimmer_B1.c: 398: if(DimmerLights->AdjFlag)
 13339  1F98  086A               	movf	_DimmerLights,w
 13340  1F99  0086               	movwf	6
 13341  1F9A  3001               	movlw	1	; select bank2/3
 13342  1F9B  0087               	movwf	7
 13343  1F9C  1D81               	btfss	1,3
 13344  1F9D  0008               	return
 13345                           
 13346                           ;Dimmer_B1.c: 399: {
 13347                           ;Dimmer_B1.c: 400: DimmerLights->Signal=0;
 13348  1F9E  086A               	movf	_DimmerLights,w
 13349  1F9F  0086               	movwf	6
 13350  1FA0  3001               	movlw	1	; select bank2/3
 13351  1FA1  0087               	movwf	7
 13352  1FA2  1081               	bcf	1,1
 13353                           
 13354                           ;Dimmer_B1.c: 401: DimmerLights->AdjFlag=0;
 13355  1FA3  086A               	movf	_DimmerLights,w
 13356  1FA4  0086               	movwf	6
 13357  1FA5  3001               	movlw	1	; select bank2/3
 13358  1FA6  0087               	movwf	7
 13359  1FA7  1181               	bcf	1,3
 13360                           
 13361                           ;Dimmer_B1.c: 402: ;;
 13362                           ;Dimmer_B1.c: 403: DimmerLights->MaxmumValue=DimmerLights->DimmingValue;
 13363  1FA8  086A               	movf	_DimmerLights,w
 13364  1FA9  3E04               	addlw	4
 13365  1FAA  0086               	movwf	6
 13366  1FAB  3001               	movlw	1	; select bank2/3
 13367  1FAC  0087               	movwf	7
 13368  1FAD  0801               	movf	1,w
 13369  1FAE  00E3               	movwf	??_setDimmerLights_Adj
 13370  1FAF  086A               	movf	_DimmerLights,w
 13371  1FB0  3E05               	addlw	5
 13372  1FB1  0086               	movwf	6
 13373  1FB2  3001               	movlw	1	; select bank2/3
 13374  1FB3  0087               	movwf	7
 13375  1FB4  0863               	movf	??_setDimmerLights_Adj,w
 13376  1FB5  0081               	movwf	1
 13377                           
 13378                           ;Dimmer_B1.c: 411: setRF_DimmerLights(lights,1);
 13379  1FB6  01DD               	clrf	setRF_DimmerLights@on
 13380  1FB7  0ADD               	incf	setRF_DimmerLights@on,f
 13381  1FB8  0864               	movf	setDimmerLights_Adj@lights,w
 13382  1FB9  3195  2560  319F   	fcall	_setRF_DimmerLights
 13383                           
 13384                           ;Dimmer_B1.c: 412: setTxData(1);
 13385  1FBC  3001               	movlw	1
 13386  1FBD  3187  2723         	fcall	_setTxData
 13387  1FBF  0008               	return
 13388  1FC0                     __end_of_setDimmerLights_Adj:	
 13389                           
 13390                           	psect	text79
 13391  09E5                     __ptext79:	
 13392 ;; *************** function _setDimmerLights *****************
 13393 ;; Defined at:
 13394 ;;		line 330 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 13395 ;; Parameters:    Size  Location     Type
 13396 ;;  lights          1    wreg     unsigned char 
 13397 ;;  status          1    4[BANK0 ] unsigned char 
 13398 ;; Auto vars:     Size  Location     Type
 13399 ;;  lights          1    6[BANK0 ] unsigned char 
 13400 ;; Return value:  Size  Location     Type
 13401 ;;		None               void
 13402 ;; Registers used:
 13403 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13404 ;; Tracked objects:
 13405 ;;		On entry : 0/0
 13406 ;;		On exit  : 0/0
 13407 ;;		Unchanged: 0/0
 13408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13409 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13410 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13411 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13412 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13413 ;;Total ram usage:        3 bytes
 13414 ;; Hardware stack levels used:    1
 13415 ;; Hardware stack levels required when called:    6
 13416 ;; This function calls:
 13417 ;;		_DimmerLightsPointSelect
 13418 ;;		_setLED
 13419 ;; This function is called by:
 13420 ;;		_setDimmerLights_Main
 13421 ;;		_setControl_Lights_Table
 13422 ;; This function uses a non-reentrant model
 13423 ;;
 13424                           
 13425                           
 13426                           ;psect for function _setDimmerLights
 13427  09E5                     _setDimmerLights:	
 13428                           
 13429                           ;incstack = 0
 13430                           ; Regs used in _setDimmerLights: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13431                           ;setDimmerLights@lights stored from wreg
 13432  09E5  0020               	movlb	0	; select bank0
 13433  09E6  00A6               	movwf	setDimmerLights@lights
 13434                           
 13435                           ;Dimmer_B1.c: 332: DimmerLightsPointSelect(lights);
 13436  09E7  0826               	movf	setDimmerLights@lights,w
 13437  09E8  319A  22CC  3189   	fcall	_DimmerLightsPointSelect
 13438                           
 13439                           ;Dimmer_B1.c: 333: Dimmer->Load=lights;
 13440  09EB  0020               	movlb	0	; select bank0
 13441  09EC  0826               	movf	setDimmerLights@lights,w
 13442  09ED  00A5               	movwf	??_setDimmerLights
 13443  09EE  0021               	movlb	1	; select bank1
 13444  09EF  0A38               	incf	_Dimmer^(0+128),w
 13445  09F0  0086               	movwf	6
 13446  09F1  0187               	clrf	7
 13447  09F2  0020               	movlb	0	; select bank0
 13448  09F3  0825               	movf	??_setDimmerLights,w
 13449  09F4  0081               	movwf	1
 13450                           
 13451                           ;Dimmer_B1.c: 334: if(status)
 13452  09F5  0824               	movf	setDimmerLights@status,w
 13453  09F6  1903               	btfsc	3,2
 13454  09F7  2A42               	goto	l8500
 13455                           
 13456                           ;Dimmer_B1.c: 335: {
 13457                           ;Dimmer_B1.c: 336: DimmerLights->Status=1;
 13458  09F8  086A               	movf	_DimmerLights,w
 13459  09F9  0086               	movwf	6
 13460  09FA  3001               	movlw	1	; select bank2/3
 13461  09FB  0087               	movwf	7
 13462  09FC  1681               	bsf	1,5
 13463                           
 13464                           ;Dimmer_B1.c: 337: setLED(lights,0);
 13465  09FD  01A2               	clrf	setLED@command
 13466  09FE  0826               	movf	setDimmerLights@lights,w
 13467  09FF  3193  2373  3189   	fcall	_setLED
 13468                           
 13469                           ;Dimmer_B1.c: 339: ;;
 13470                           ;Dimmer_B1.c: 341: DimmerLights->Signal=1;
 13471  0A02  0020               	movlb	0	; select bank0
 13472  0A03  086A               	movf	_DimmerLights,w
 13473  0A04  0086               	movwf	6
 13474  0A05  3001               	movlw	1	; select bank2/3
 13475  0A06  0087               	movwf	7
 13476  0A07  1481               	bsf	1,1
 13477                           
 13478                           ;Dimmer_B1.c: 342: DimmerLights->DimmingTimeValue=3;
 13479  0A08  3003               	movlw	3
 13480  0A09  00A5               	movwf	??_setDimmerLights
 13481  0A0A  086A               	movf	_DimmerLights,w
 13482  0A0B  3E02               	addlw	2
 13483  0A0C  0086               	movwf	6
 13484  0A0D  3001               	movlw	1	; select bank2/3
 13485  0A0E  0087               	movwf	7
 13486  0A0F  0825               	movf	??_setDimmerLights,w
 13487  0A10  0081               	movwf	1
 13488                           
 13489                           ;Dimmer_B1.c: 344: if(!DimmerLights->StatusFlag)
 13490  0A11  086A               	movf	_DimmerLights,w
 13491  0A12  0086               	movwf	6
 13492  0A13  3001               	movlw	1	; select bank2/3
 13493  0A14  0087               	movwf	7
 13494  0A15  1B01               	btfsc	1,6
 13495  0A16  0008               	return
 13496                           
 13497                           ;Dimmer_B1.c: 345: {
 13498                           ;Dimmer_B1.c: 346: DimmerLights->StatusFlag=1;
 13499  0A17  086A               	movf	_DimmerLights,w
 13500  0A18  0086               	movwf	6
 13501  0A19  3001               	movlw	1	; select bank2/3
 13502  0A1A  0087               	movwf	7
 13503  0A1B  1701               	bsf	1,6
 13504                           
 13505                           ;Dimmer_B1.c: 347: ;;
 13506                           ;Dimmer_B1.c: 348: Memory->GO=0; if(!0) { Memory->Time=0; } ;;
 13507  0A1C  086D               	movf	_Memory,w
 13508  0A1D  3E22               	addlw	34
 13509  0A1E  0086               	movwf	6
 13510  0A1F  3002               	movlw	2	; select bank4/5
 13511  0A20  0087               	movwf	7
 13512  0A21  1081               	bcf	1,1
 13513  0A22  086D               	movf	_Memory,w
 13514  0A23  3E23               	addlw	35
 13515  0A24  0086               	movwf	6
 13516  0A25  3002               	movlw	2	; select bank4/5
 13517  0A26  0087               	movwf	7
 13518  0A27  3000               	movlw	0
 13519  0A28  3FC0               	movwi [0]fsr1
 13520  0A29  3FC1               	movwi [1]fsr1
 13521                           
 13522                           ;Dimmer_B1.c: 351: DimmerLights->DimmingValue=DimmerLights->MaxmumValue;
 13523  0A2A  086A               	movf	_DimmerLights,w
 13524  0A2B  3E05               	addlw	5
 13525  0A2C  0086               	movwf	6
 13526  0A2D  3001               	movlw	1	; select bank2/3
 13527  0A2E  0087               	movwf	7
 13528  0A2F  0801               	movf	1,w
 13529  0A30  00A5               	movwf	??_setDimmerLights
 13530  0A31  086A               	movf	_DimmerLights,w
 13531  0A32  3E04               	addlw	4
 13532  0A33  0086               	movwf	6
 13533  0A34  3001               	movlw	1	; select bank2/3
 13534  0A35  0087               	movwf	7
 13535  0A36  0825               	movf	??_setDimmerLights,w
 13536  0A37  0081               	movwf	1
 13537                           
 13538                           ;Dimmer_B1.c: 355: DimmerLights->DimmingValue=((char)((100-55)*1.5));
 13539  0A38  3043               	movlw	67
 13540  0A39  00A5               	movwf	??_setDimmerLights
 13541  0A3A  086A               	movf	_DimmerLights,w
 13542  0A3B  3E04               	addlw	4
 13543  0A3C  0086               	movwf	6
 13544  0A3D  3001               	movlw	1	; select bank2/3
 13545  0A3E  0087               	movwf	7
 13546  0A3F  0825               	movf	??_setDimmerLights,w
 13547  0A40  0081               	movwf	1
 13548                           
 13549                           ;Dimmer_B1.c: 357: }
 13550                           ;Dimmer_B1.c: 358: }
 13551  0A41  0008               	return
 13552  0A42                     l8500:	
 13553                           
 13554                           ;Dimmer_B1.c: 359: else
 13555                           ;Dimmer_B1.c: 360: {
 13556                           ;Dimmer_B1.c: 361: DimmerLights->Status=0;
 13557  0A42  086A               	movf	_DimmerLights,w
 13558  0A43  0086               	movwf	6
 13559  0A44  3001               	movlw	1	; select bank2/3
 13560  0A45  0087               	movwf	7
 13561  0A46  1281               	bcf	1,5
 13562                           
 13563                           ;Dimmer_B1.c: 363: DimmerLights->DimmingValue=DimmerLights->MinimumValue;
 13564  0A47  086A               	movf	_DimmerLights,w
 13565  0A48  3E06               	addlw	6
 13566  0A49  0086               	movwf	6
 13567  0A4A  3001               	movlw	1	; select bank2/3
 13568  0A4B  0087               	movwf	7
 13569  0A4C  0801               	movf	1,w
 13570  0A4D  00A5               	movwf	??_setDimmerLights
 13571  0A4E  086A               	movf	_DimmerLights,w
 13572  0A4F  3E04               	addlw	4
 13573  0A50  0086               	movwf	6
 13574  0A51  3001               	movlw	1	; select bank2/3
 13575  0A52  0087               	movwf	7
 13576  0A53  0825               	movf	??_setDimmerLights,w
 13577  0A54  0081               	movwf	1
 13578                           
 13579                           ;Dimmer_B1.c: 370: DimmerLights->Signal=1;
 13580  0A55  086A               	movf	_DimmerLights,w
 13581  0A56  0086               	movwf	6
 13582  0A57  3001               	movlw	1	; select bank2/3
 13583  0A58  0087               	movwf	7
 13584  0A59  1481               	bsf	1,1
 13585                           
 13586                           ;Dimmer_B1.c: 371: DimmerLights->AdjFlag=0;
 13587  0A5A  086A               	movf	_DimmerLights,w
 13588  0A5B  0086               	movwf	6
 13589  0A5C  3001               	movlw	1	; select bank2/3
 13590  0A5D  0087               	movwf	7
 13591  0A5E  1181               	bcf	1,3
 13592                           
 13593                           ;Dimmer_B1.c: 372: DimmerLights->AdjStatus=0;
 13594  0A5F  086A               	movf	_DimmerLights,w
 13595  0A60  0086               	movwf	6
 13596  0A61  3001               	movlw	1	; select bank2/3
 13597  0A62  0087               	movwf	7
 13598  0A63  1201               	bcf	1,4
 13599                           
 13600                           ;Dimmer_B1.c: 373: DimmerLights->DimmingTimeValue=3;
 13601  0A64  3003               	movlw	3
 13602  0A65  00A5               	movwf	??_setDimmerLights
 13603  0A66  086A               	movf	_DimmerLights,w
 13604  0A67  3E02               	addlw	2
 13605  0A68  0086               	movwf	6
 13606  0A69  3001               	movlw	1	; select bank2/3
 13607  0A6A  0087               	movwf	7
 13608  0A6B  0825               	movf	??_setDimmerLights,w
 13609  0A6C  0081               	movwf	1
 13610  0A6D  0008               	return
 13611  0A6E                     __end_of_setDimmerLights:	
 13612                           
 13613                           	psect	text80
 13614  1373                     __ptext80:	
 13615 ;; *************** function _setLED *****************
 13616 ;; Defined at:
 13617 ;;		line 74 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\LED_B1.c"
 13618 ;; Parameters:    Size  Location     Type
 13619 ;;  led             1    wreg     unsigned char 
 13620 ;;  command         1    2[BANK0 ] unsigned char 
 13621 ;; Auto vars:     Size  Location     Type
 13622 ;;  led             1    3[BANK0 ] unsigned char 
 13623 ;; Return value:  Size  Location     Type
 13624 ;;		None               void
 13625 ;; Registers used:
 13626 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13627 ;; Tracked objects:
 13628 ;;		On entry : 0/0
 13629 ;;		On exit  : 0/0
 13630 ;;		Unchanged: 0/0
 13631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13632 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13633 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13635 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13636 ;;Total ram usage:        2 bytes
 13637 ;; Hardware stack levels used:    1
 13638 ;; Hardware stack levels required when called:    5
 13639 ;; This function calls:
 13640 ;;		_LedPointSelect
 13641 ;; This function is called by:
 13642 ;;		_setDimmerLights_ERROR
 13643 ;;		_setDimmerLights
 13644 ;;		_setLED_Initialization
 13645 ;;		_setOverTemp_Exceptions
 13646 ;;		_setPowerFault_Exceptions
 13647 ;;		_setSw_Initialization
 13648 ;; This function uses a non-reentrant model
 13649 ;;
 13650                           
 13651                           
 13652                           ;psect for function _setLED
 13653  1373                     _setLED:	
 13654                           
 13655                           ;incstack = 0
 13656                           ; Regs used in _setLED: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13657                           ;setLED@led stored from wreg
 13658  1373  0020               	movlb	0	; select bank0
 13659  1374  00A3               	movwf	setLED@led
 13660                           
 13661                           ;LED_B1.c: 76: LedPointSelect(led);
 13662  1375  0823               	movf	setLED@led,w
 13663  1376  319C  24F2  3193   	fcall	_LedPointSelect
 13664                           
 13665                           ;LED_B1.c: 77: if(command == 0)
 13666  1379  0020               	movlb	0	; select bank0
 13667  137A  08A2               	movf	setLED@command,f
 13668  137B  1D03               	skipz
 13669  137C  2B8F               	goto	l8386
 13670                           
 13671                           ;LED_B1.c: 78: {
 13672                           ;LED_B1.c: 80: if(led == 1)
 13673  137D  0823               	movf	setLED@led,w
 13674  137E  3A01               	xorlw	1
 13675  137F  1D03               	skipz
 13676  1380  2B83               	goto	l8378
 13677                           
 13678                           ;LED_B1.c: 81: {
 13679                           ;LED_B1.c: 85: RA3=1;
 13680  1381  158C               	bsf	12,3	;volatile
 13681                           
 13682                           ;LED_B1.c: 87: }
 13683  1382  0008               	return
 13684  1383                     l8378:	
 13685                           
 13686                           ;LED_B1.c: 90: else if(led == 2)
 13687  1383  0823               	movf	setLED@led,w
 13688  1384  3A02               	xorlw	2
 13689  1385  1D03               	skipz
 13690  1386  2B89               	goto	l8382
 13691                           
 13692                           ;LED_B1.c: 91: {
 13693                           ;LED_B1.c: 95: RC7=1;
 13694  1387  178E               	bsf	14,7	;volatile
 13695                           
 13696                           ;LED_B1.c: 97: }
 13697  1388  0008               	return
 13698  1389                     l8382:	
 13699                           
 13700                           ;LED_B1.c: 110: else if(led == 99)
 13701  1389  0823               	movf	setLED@led,w
 13702  138A  3A63               	xorlw	99
 13703  138B  1D03               	skipz
 13704  138C  0008               	return
 13705                           
 13706                           ;LED_B1.c: 111: {
 13707                           ;LED_B1.c: 115: RB5=1;
 13708  138D  168D               	bsf	13,5	;volatile
 13709                           
 13710                           ;LED_B1.c: 117: }
 13711                           ;LED_B1.c: 119: }
 13712  138E  0008               	return
 13713  138F                     l8386:	
 13714                           
 13715                           ;LED_B1.c: 120: else if(command == 1)
 13716  138F  0822               	movf	setLED@command,w
 13717  1390  3A01               	xorlw	1
 13718  1391  1D03               	skipz
 13719  1392  2BA5               	goto	l8400
 13720                           
 13721                           ;LED_B1.c: 121: {
 13722                           ;LED_B1.c: 123: if(led == 1)
 13723  1393  0823               	movf	setLED@led,w
 13724  1394  3A01               	xorlw	1
 13725  1395  1D03               	skipz
 13726  1396  2B99               	goto	l8392
 13727                           
 13728                           ;LED_B1.c: 124: {
 13729                           ;LED_B1.c: 128: RA3=0;
 13730  1397  118C               	bcf	12,3	;volatile
 13731                           
 13732                           ;LED_B1.c: 130: }
 13733  1398  0008               	return
 13734  1399                     l8392:	
 13735                           
 13736                           ;LED_B1.c: 133: else if(led == 2)
 13737  1399  0823               	movf	setLED@led,w
 13738  139A  3A02               	xorlw	2
 13739  139B  1D03               	skipz
 13740  139C  2B9F               	goto	l8396
 13741                           
 13742                           ;LED_B1.c: 134: {
 13743                           ;LED_B1.c: 138: RC7=0;
 13744  139D  138E               	bcf	14,7	;volatile
 13745                           
 13746                           ;LED_B1.c: 140: }
 13747  139E  0008               	return
 13748  139F                     l8396:	
 13749                           
 13750                           ;LED_B1.c: 153: else if(led == 99)
 13751  139F  0823               	movf	setLED@led,w
 13752  13A0  3A63               	xorlw	99
 13753  13A1  1D03               	skipz
 13754  13A2  0008               	return
 13755                           
 13756                           ;LED_B1.c: 154: {
 13757                           ;LED_B1.c: 158: RB5=0;
 13758  13A3  128D               	bcf	13,5	;volatile
 13759                           
 13760                           ;LED_B1.c: 160: }
 13761                           ;LED_B1.c: 162: }
 13762  13A4  0008               	return
 13763  13A5                     l8400:	
 13764                           
 13765                           ;LED_B1.c: 163: else if(command == 10)
 13766  13A5  0822               	movf	setLED@command,w
 13767  13A6  3A0A               	xorlw	10
 13768  13A7  1D03               	skipz
 13769  13A8  2BC7               	goto	l8416
 13770                           
 13771                           ;LED_B1.c: 164: {
 13772                           ;LED_B1.c: 165: LED->GO=0;
 13773  13A9  0021               	movlb	1	; select bank1
 13774  13AA  083A               	movf	_LED^(0+128),w
 13775  13AB  0086               	movwf	6
 13776  13AC  0187               	clrf	7
 13777  13AD  1081               	bcf	1,1
 13778                           
 13779                           ;LED_B1.c: 166: LED->Time=0;
 13780  13AE  0A3A               	incf	_LED^(0+128),w
 13781  13AF  0086               	movwf	6
 13782  13B0  0187               	clrf	7
 13783  13B1  3000               	movlw	0
 13784  13B2  3FC0               	movwi [0]fsr1
 13785  13B3  3FC1               	movwi [1]fsr1
 13786                           
 13787                           ;LED_B1.c: 168: if(led == 1)
 13788  13B4  0020               	movlb	0	; select bank0
 13789  13B5  0823               	movf	setLED@led,w
 13790  13B6  3A01               	xorlw	1
 13791  13B7  1D03               	skipz
 13792  13B8  2BBB               	goto	l8408
 13793                           
 13794                           ;LED_B1.c: 169: {
 13795                           ;LED_B1.c: 173: RA3=1;
 13796  13B9  158C               	bsf	12,3	;volatile
 13797                           
 13798                           ;LED_B1.c: 175: }
 13799  13BA  0008               	return
 13800  13BB                     l8408:	
 13801                           
 13802                           ;LED_B1.c: 178: else if(led == 2)
 13803  13BB  0823               	movf	setLED@led,w
 13804  13BC  3A02               	xorlw	2
 13805  13BD  1D03               	skipz
 13806  13BE  2BC1               	goto	l8412
 13807                           
 13808                           ;LED_B1.c: 179: {
 13809                           ;LED_B1.c: 183: RC7=1;
 13810  13BF  178E               	bsf	14,7	;volatile
 13811                           
 13812                           ;LED_B1.c: 185: }
 13813  13C0  0008               	return
 13814  13C1                     l8412:	
 13815                           
 13816                           ;LED_B1.c: 198: else if(led == 99)
 13817  13C1  0823               	movf	setLED@led,w
 13818  13C2  3A63               	xorlw	99
 13819  13C3  1D03               	skipz
 13820  13C4  0008               	return
 13821                           
 13822                           ;LED_B1.c: 199: {
 13823                           ;LED_B1.c: 203: RB5=1;
 13824  13C5  168D               	bsf	13,5	;volatile
 13825                           
 13826                           ;LED_B1.c: 205: }
 13827                           ;LED_B1.c: 207: }
 13828  13C6  0008               	return
 13829  13C7                     l8416:	
 13830                           
 13831                           ;LED_B1.c: 208: else if(command == 11)
 13832  13C7  0822               	movf	setLED@command,w
 13833  13C8  3A0B               	xorlw	11
 13834  13C9  1D03               	skipz
 13835  13CA  0008               	return
 13836                           
 13837                           ;LED_B1.c: 209: {
 13838                           ;LED_B1.c: 210: LED->GO=1;
 13839  13CB  0021               	movlb	1	; select bank1
 13840  13CC  083A               	movf	_LED^(0+128),w
 13841  13CD  0086               	movwf	6
 13842  13CE  0187               	clrf	7
 13843  13CF  1481               	bsf	1,1
 13844  13D0  0008               	return
 13845  13D1                     __end_of_setLED:	
 13846                           
 13847                           	psect	text81
 13848  1CF2                     __ptext81:	
 13849 ;; *************** function _LedPointSelect *****************
 13850 ;; Defined at:
 13851 ;;		line 7 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\LED_B1.c"
 13852 ;; Parameters:    Size  Location     Type
 13853 ;;  led             1    wreg     unsigned char 
 13854 ;; Auto vars:     Size  Location     Type
 13855 ;;  led             1    1[BANK0 ] unsigned char 
 13856 ;; Return value:  Size  Location     Type
 13857 ;;		None               void
 13858 ;; Registers used:
 13859 ;;		wreg
 13860 ;; Tracked objects:
 13861 ;;		On entry : 0/0
 13862 ;;		On exit  : 0/0
 13863 ;;		Unchanged: 0/0
 13864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13865 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13866 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13867 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13868 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13869 ;;Total ram usage:        2 bytes
 13870 ;; Hardware stack levels used:    1
 13871 ;; Hardware stack levels required when called:    4
 13872 ;; This function calls:
 13873 ;;		Nothing
 13874 ;; This function is called by:
 13875 ;;		_setLED_Initialization
 13876 ;;		_setLED
 13877 ;;		_setLED_Main
 13878 ;; This function uses a non-reentrant model
 13879 ;;
 13880                           
 13881                           
 13882                           ;psect for function _LedPointSelect
 13883  1CF2                     _LedPointSelect:	
 13884                           
 13885                           ;incstack = 0
 13886                           ; Regs used in _LedPointSelect: [wreg]
 13887                           ;LedPointSelect@led stored from wreg
 13888  1CF2  0020               	movlb	0	; select bank0
 13889  1CF3  00A1               	movwf	LedPointSelect@led
 13890                           
 13891                           ;LED_B1.c: 10: if(led == 1)
 13892  1CF4  0821               	movf	LedPointSelect@led,w
 13893  1CF5  3A01               	xorlw	1
 13894  1CF6  1D03               	skipz
 13895  1CF7  2CFE               	goto	l8238
 13896                           
 13897                           ;LED_B1.c: 11: {
 13898                           ;LED_B1.c: 12: LED=&VarLED1;
 13899  1CF8  30DA               	movlw	_VarLED1& (0+255)
 13900  1CF9  00A0               	movwf	??_LedPointSelect
 13901  1CFA  0820               	movf	??_LedPointSelect,w
 13902  1CFB  0021               	movlb	1	; select bank1
 13903  1CFC  00BA               	movwf	_LED^(0+128)
 13904                           
 13905                           ;LED_B1.c: 13: }
 13906  1CFD  0008               	return
 13907  1CFE                     l8238:	
 13908                           
 13909                           ;LED_B1.c: 16: else if(led == 2)
 13910  1CFE  0020               	movlb	0	; select bank0
 13911  1CFF  0821               	movf	LedPointSelect@led,w
 13912  1D00  3A02               	xorlw	2
 13913  1D01  1D03               	skipz
 13914  1D02  2D09               	goto	l8242
 13915                           
 13916                           ;LED_B1.c: 17: {
 13917                           ;LED_B1.c: 18: LED=&VarLED2;
 13918  1D03  30DE               	movlw	_VarLED2& (0+255)
 13919  1D04  00A0               	movwf	??_LedPointSelect
 13920  1D05  0820               	movf	??_LedPointSelect,w
 13921  1D06  0021               	movlb	1	; select bank1
 13922  1D07  00BA               	movwf	_LED^(0+128)
 13923                           
 13924                           ;LED_B1.c: 19: }
 13925  1D08  0008               	return
 13926  1D09                     l8242:	
 13927                           
 13928                           ;LED_B1.c: 28: else if(led == 99)
 13929  1D09  0020               	movlb	0	; select bank0
 13930  1D0A  0821               	movf	LedPointSelect@led,w
 13931  1D0B  3A63               	xorlw	99
 13932  1D0C  1D03               	skipz
 13933  1D0D  0008               	return
 13934                           
 13935                           ;LED_B1.c: 29: {
 13936                           ;LED_B1.c: 30: LED=&VarErrLED;
 13937  1D0E  30D6               	movlw	_VarErrLED& (0+255)
 13938  1D0F  00A0               	movwf	??_LedPointSelect
 13939  1D10  0820               	movf	??_LedPointSelect,w
 13940  1D11  0021               	movlb	1	; select bank1
 13941  1D12  00BA               	movwf	_LED^(0+128)
 13942  1D13  0008               	return
 13943  1D14                     __end_of_LedPointSelect:	
 13944                           
 13945                           	psect	text82
 13946  1B89                     __ptext82:	
 13947 ;; *************** function _DimmerLights_Close *****************
 13948 ;; Defined at:
 13949 ;;		line 101 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 13950 ;; Parameters:    Size  Location     Type
 13951 ;;		None
 13952 ;; Auto vars:     Size  Location     Type
 13953 ;;		None
 13954 ;; Return value:  Size  Location     Type
 13955 ;;		None               void
 13956 ;; Registers used:
 13957 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13958 ;; Tracked objects:
 13959 ;;		On entry : 0/0
 13960 ;;		On exit  : 0/0
 13961 ;;		Unchanged: 0/0
 13962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13964 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13966 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13967 ;;Total ram usage:        0 bytes
 13968 ;; Hardware stack levels used:    1
 13969 ;; Hardware stack levels required when called:    5
 13970 ;; This function calls:
 13971 ;;		_getDimmerLights_StatusFlag
 13972 ;; This function is called by:
 13973 ;;		_DimmerLights_Main
 13974 ;; This function uses a non-reentrant model
 13975 ;;
 13976                           
 13977                           
 13978                           ;psect for function _DimmerLights_Close
 13979  1B89                     _DimmerLights_Close:	
 13980                           
 13981                           ;Dimmer_B1.c: 103: if(Dimmer->Detect)
 13982                           
 13983                           ;incstack = 0
 13984                           ; Regs used in _DimmerLights_Close: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13985  1B89  0021               	movlb	1	; select bank1
 13986  1B8A  0838               	movf	_Dimmer^(0+128),w
 13987  1B8B  0086               	movwf	6
 13988  1B8C  0187               	clrf	7
 13989  1B8D  1C01               	btfss	1,0
 13990  1B8E  0008               	return
 13991                           
 13992                           ;Dimmer_B1.c: 104: {
 13993                           ;Dimmer_B1.c: 105: Dimmer->Detect=0;
 13994  1B8F  0838               	movf	_Dimmer^(0+128),w
 13995  1B90  0086               	movwf	6
 13996  1B91  0187               	clrf	7
 13997  1B92  1001               	bcf	1,0
 13998                           
 13999                           ;Dimmer_B1.c: 106: if(!getDimmerLights_StatusFlag())
 14000  1B93  319B  2346  319B   	fcall	_getDimmerLights_StatusFlag
 14001  1B96  3800               	iorlw	0
 14002  1B97  1D03               	skipz
 14003  1B98  0008               	return
 14004                           
 14005                           ;Dimmer_B1.c: 107: {
 14006                           ;Dimmer_B1.c: 108: ;;
 14007                           ;Dimmer_B1.c: 109: Memory->GO=1; if(!1) { Memory->Time=1; } ;;
 14008  1B99  0020               	movlb	0	; select bank0
 14009  1B9A  086D               	movf	_Memory,w
 14010  1B9B  3E22               	addlw	34
 14011  1B9C  0086               	movwf	6
 14012  1B9D  3002               	movlw	2	; select bank4/5
 14013  1B9E  0087               	movwf	7
 14014  1B9F  1481               	bsf	1,1
 14015  1BA0  0008               	return
 14016  1BA1                     __end_of_DimmerLights_Close:	
 14017                           
 14018                           	psect	text83
 14019  1B46                     __ptext83:	
 14020 ;; *************** function _getDimmerLights_StatusFlag *****************
 14021 ;; Defined at:
 14022 ;;		line 208 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 14023 ;; Parameters:    Size  Location     Type
 14024 ;;		None
 14025 ;; Auto vars:     Size  Location     Type
 14026 ;;  Status          1    1[BANK0 ] unsigned char 
 14027 ;; Return value:  Size  Location     Type
 14028 ;;                  1    wreg      unsigned char 
 14029 ;; Registers used:
 14030 ;;		wreg, fsr1l, fsr1h, status,2
 14031 ;; Tracked objects:
 14032 ;;		On entry : 0/0
 14033 ;;		On exit  : 0/0
 14034 ;;		Unchanged: 0/0
 14035 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14037 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14038 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14039 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14040 ;;Total ram usage:        3 bytes
 14041 ;; Hardware stack levels used:    1
 14042 ;; Hardware stack levels required when called:    4
 14043 ;; This function calls:
 14044 ;;		Nothing
 14045 ;; This function is called by:
 14046 ;;		_DimmerLights_Close
 14047 ;;		_DimmerLights_Exceptions
 14048 ;; This function uses a non-reentrant model
 14049 ;;
 14050                           
 14051                           
 14052                           ;psect for function _getDimmerLights_StatusFlag
 14053  1B46                     _getDimmerLights_StatusFlag:	
 14054                           
 14055                           ;Dimmer_B1.c: 210: char Status=0;
 14056                           
 14057                           ;incstack = 0
 14058                           ; Regs used in _getDimmerLights_StatusFlag: [wreg+fsr1l+fsr1h+status,2]
 14059  1B46  0020               	movlb	0	; select bank0
 14060  1B47  01A1               	clrf	getDimmerLights_StatusFlag@Status
 14061                           
 14062                           ;Dimmer_B1.c: 217: Status=(DimmerLights11->StatusFlag || DimmerLights22->StatusFlag)?1:0
      +                          ;
 14063  1B48  01A2               	clrf	_getDimmerLights_StatusFlag$1629
 14064  1B49  0AA2               	incf	_getDimmerLights_StatusFlag$1629,f
 14065  1B4A  086B               	movf	_DimmerLights11,w
 14066  1B4B  0086               	movwf	6
 14067  1B4C  3001               	movlw	1	; select bank2/3
 14068  1B4D  0087               	movwf	7
 14069  1B4E  1B01               	btfsc	1,6
 14070  1B4F  2B56               	goto	l8476
 14071  1B50  086C               	movf	_DimmerLights22,w
 14072  1B51  0086               	movwf	6
 14073  1B52  3001               	movlw	1	; select bank2/3
 14074  1B53  0087               	movwf	7
 14075  1B54  1F01               	btfss	1,6
 14076  1B55  01A2               	clrf	_getDimmerLights_StatusFlag$1629
 14077  1B56                     l8476:	
 14078  1B56  0822               	movf	_getDimmerLights_StatusFlag$1629,w
 14079  1B57  00A0               	movwf	??_getDimmerLights_StatusFlag
 14080  1B58  0820               	movf	??_getDimmerLights_StatusFlag,w
 14081  1B59  00A1               	movwf	getDimmerLights_StatusFlag@Status
 14082                           
 14083                           ;Dimmer_B1.c: 224: return Status;
 14084  1B5A  0821               	movf	getDimmerLights_StatusFlag@Status,w
 14085  1B5B  0008               	return
 14086  1B5C                     __end_of_getDimmerLights_StatusFlag:	
 14087                           
 14088                           	psect	text84
 14089  1B1B                     __ptext84:	
 14090 ;; *************** function _DimmerLights_Initialization *****************
 14091 ;; Defined at:
 14092 ;;		line 41 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 14093 ;; Parameters:    Size  Location     Type
 14094 ;;		None
 14095 ;; Auto vars:     Size  Location     Type
 14096 ;;		None
 14097 ;; Return value:  Size  Location     Type
 14098 ;;		None               void
 14099 ;; Registers used:
 14100 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14101 ;; Tracked objects:
 14102 ;;		On entry : 0/0
 14103 ;;		On exit  : 0/0
 14104 ;;		Unchanged: 0/0
 14105 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14106 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14107 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14108 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14109 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14110 ;;Total ram usage:        1 bytes
 14111 ;; Hardware stack levels used:    1
 14112 ;; Hardware stack levels required when called:    6
 14113 ;; This function calls:
 14114 ;;		_Dimmer_Initialization
 14115 ;;		_setDimmerLights_Initialization
 14116 ;; This function is called by:
 14117 ;;		_main
 14118 ;; This function uses a non-reentrant model
 14119 ;;
 14120                           
 14121                           
 14122                           ;psect for function _DimmerLights_Initialization
 14123  1B1B                     _DimmerLights_Initialization:	
 14124                           
 14125                           ;Dimmer_B1.c: 44: DimmerLights11=&DimmerLights1;
 14126                           
 14127                           ;incstack = 0
 14128                           ; Regs used in _DimmerLights_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 14129  1B1B  3020               	movlw	_DimmerLights1& (0+255)
 14130  1B1C  0020               	movlb	0	; select bank0
 14131  1B1D  00A4               	movwf	??_DimmerLights_Initialization
 14132  1B1E  0824               	movf	??_DimmerLights_Initialization,w
 14133  1B1F  00EB               	movwf	_DimmerLights11
 14134                           
 14135                           ;Dimmer_B1.c: 45: setDimmerLights_Initialization(1);
 14136  1B20  3001               	movlw	1
 14137  1B21  319E  2628  319B   	fcall	_setDimmerLights_Initialization
 14138                           
 14139                           ;Dimmer_B1.c: 49: DimmerLights22=&DimmerLights2;
 14140  1B24  302E               	movlw	_DimmerLights2& (0+255)
 14141  1B25  0020               	movlb	0	; select bank0
 14142  1B26  00A4               	movwf	??_DimmerLights_Initialization
 14143  1B27  0824               	movf	??_DimmerLights_Initialization,w
 14144  1B28  00EC               	movwf	_DimmerLights22
 14145                           
 14146                           ;Dimmer_B1.c: 50: setDimmerLights_Initialization(2);
 14147  1B29  3002               	movlw	2
 14148  1B2A  319E  2628  319B   	fcall	_setDimmerLights_Initialization
 14149                           
 14150                           ;Dimmer_B1.c: 59: Dimmer_Initialization();
 14151  1B2D  3199  2110         	fcall	_Dimmer_Initialization
 14152  1B2F  0008               	return
 14153  1B30                     __end_of_DimmerLights_Initialization:	
 14154                           
 14155                           	psect	text85
 14156  1E28                     __ptext85:	
 14157 ;; *************** function _setDimmerLights_Initialization *****************
 14158 ;; Defined at:
 14159 ;;		line 63 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 14160 ;; Parameters:    Size  Location     Type
 14161 ;;  lights          1    wreg     unsigned char 
 14162 ;; Auto vars:     Size  Location     Type
 14163 ;;  lights          1    3[BANK0 ] unsigned char 
 14164 ;; Return value:  Size  Location     Type
 14165 ;;		None               void
 14166 ;; Registers used:
 14167 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14168 ;; Tracked objects:
 14169 ;;		On entry : 0/0
 14170 ;;		On exit  : 0/0
 14171 ;;		Unchanged: 0/0
 14172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14174 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14175 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14176 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14177 ;;Total ram usage:        2 bytes
 14178 ;; Hardware stack levels used:    1
 14179 ;; Hardware stack levels required when called:    5
 14180 ;; This function calls:
 14181 ;;		_DimmerLightsPointSelect
 14182 ;; This function is called by:
 14183 ;;		_DimmerLights_Initialization
 14184 ;; This function uses a non-reentrant model
 14185 ;;
 14186                           
 14187                           
 14188                           ;psect for function _setDimmerLights_Initialization
 14189  1E28                     _setDimmerLights_Initialization:	
 14190                           
 14191                           ;incstack = 0
 14192                           ; Regs used in _setDimmerLights_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pcla
      +                          th+cstack]
 14193                           ;setDimmerLights_Initialization@lights stored from wreg
 14194  1E28  0020               	movlb	0	; select bank0
 14195  1E29  00A3               	movwf	setDimmerLights_Initialization@lights
 14196                           
 14197                           ;Dimmer_B1.c: 65: DimmerLightsPointSelect(lights);
 14198  1E2A  0823               	movf	setDimmerLights_Initialization@lights,w
 14199  1E2B  319A  22CC         	fcall	_DimmerLightsPointSelect
 14200                           
 14201                           ;Dimmer_B1.c: 66: DimmerLights->Clear=1;
 14202  1E2D  0020               	movlb	0	; select bank0
 14203  1E2E  086A               	movf	_DimmerLights,w
 14204  1E2F  3E0C               	addlw	12
 14205  1E30  0086               	movwf	6
 14206  1E31  3001               	movlw	1	; select bank2/3
 14207  1E32  0087               	movwf	7
 14208  1E33  1401               	bsf	1,0
 14209                           
 14210                           ;Dimmer_B1.c: 72: DimmerLights->MaxmumValue=((char)((100-55)*1.5));
 14211  1E34  3043               	movlw	67
 14212  1E35  00A2               	movwf	??_setDimmerLights_Initialization
 14213  1E36  086A               	movf	_DimmerLights,w
 14214  1E37  3E05               	addlw	5
 14215  1E38  0086               	movwf	6
 14216  1E39  3001               	movlw	1	; select bank2/3
 14217  1E3A  0087               	movwf	7
 14218  1E3B  0822               	movf	??_setDimmerLights_Initialization,w
 14219  1E3C  0081               	movwf	1
 14220                           
 14221                           ;Dimmer_B1.c: 73: DimmerLights->MinimumValue=((char)((100-20)*1.5));
 14222  1E3D  3078               	movlw	120
 14223  1E3E  00A2               	movwf	??_setDimmerLights_Initialization
 14224  1E3F  086A               	movf	_DimmerLights,w
 14225  1E40  3E06               	addlw	6
 14226  1E41  0086               	movwf	6
 14227  1E42  3001               	movlw	1	; select bank2/3
 14228  1E43  0087               	movwf	7
 14229  1E44  0822               	movf	??_setDimmerLights_Initialization,w
 14230  1E45  0081               	movwf	1
 14231                           
 14232                           ;Dimmer_B1.c: 83: DimmerLights->DimmingValue=DimmerLights->MinimumValue;
 14233  1E46  086A               	movf	_DimmerLights,w
 14234  1E47  3E06               	addlw	6
 14235  1E48  0086               	movwf	6
 14236  1E49  3001               	movlw	1	; select bank2/3
 14237  1E4A  0087               	movwf	7
 14238  1E4B  0801               	movf	1,w
 14239  1E4C  00A2               	movwf	??_setDimmerLights_Initialization
 14240  1E4D  086A               	movf	_DimmerLights,w
 14241  1E4E  3E04               	addlw	4
 14242  1E4F  0086               	movwf	6
 14243  1E50  3001               	movlw	1	; select bank2/3
 14244  1E51  0087               	movwf	7
 14245  1E52  0822               	movf	??_setDimmerLights_Initialization,w
 14246  1E53  0081               	movwf	1
 14247  1E54  0008               	return
 14248  1E55                     __end_of_setDimmerLights_Initialization:	
 14249                           
 14250                           	psect	text86
 14251  1910                     __ptext86:	
 14252 ;; *************** function _Dimmer_Initialization *****************
 14253 ;; Defined at:
 14254 ;;		line 520 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 14255 ;; Parameters:    Size  Location     Type
 14256 ;;		None
 14257 ;; Auto vars:     Size  Location     Type
 14258 ;;		None
 14259 ;; Return value:  Size  Location     Type
 14260 ;;		None               void
 14261 ;; Registers used:
 14262 ;;		wreg
 14263 ;; Tracked objects:
 14264 ;;		On entry : 0/0
 14265 ;;		On exit  : 0/0
 14266 ;;		Unchanged: 0/0
 14267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14270 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14271 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14272 ;;Total ram usage:        1 bytes
 14273 ;; Hardware stack levels used:    1
 14274 ;; Hardware stack levels required when called:    4
 14275 ;; This function calls:
 14276 ;;		Nothing
 14277 ;; This function is called by:
 14278 ;;		_DimmerLights_Initialization
 14279 ;; This function uses a non-reentrant model
 14280 ;;
 14281                           
 14282                           
 14283                           ;psect for function _Dimmer_Initialization
 14284  1910                     _Dimmer_Initialization:	
 14285                           
 14286                           ;Dimmer_B1.c: 522: Dimmer=&Dimmer1;
 14287                           
 14288                           ;incstack = 0
 14289                           ; Regs used in _Dimmer_Initialization: [wreg]
 14290  1910  30E2               	movlw	_Dimmer1& (0+255)
 14291  1911  0020               	movlb	0	; select bank0
 14292  1912  00A0               	movwf	??_Dimmer_Initialization
 14293  1913  0820               	movf	??_Dimmer_Initialization,w
 14294  1914  0021               	movlb	1	; select bank1
 14295  1915  00B8               	movwf	_Dimmer^(0+128)
 14296  1916  0008               	return
 14297  1917                     __end_of_Dimmer_Initialization:	
 14298                           
 14299                           	psect	text87
 14300  1934                     __ptext87:	
 14301 ;; *************** function _DelayOff_Main *****************
 14302 ;; Defined at:
 14303 ;;		line 45 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\DelayOff_B1.c"
 14304 ;; Parameters:    Size  Location     Type
 14305 ;;		None
 14306 ;; Auto vars:     Size  Location     Type
 14307 ;;		None
 14308 ;; Return value:  Size  Location     Type
 14309 ;;		None               void
 14310 ;; Registers used:
 14311 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14312 ;; Tracked objects:
 14313 ;;		On entry : 0/0
 14314 ;;		On exit  : 0/0
 14315 ;;		Unchanged: 0/0
 14316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14320 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14321 ;;Total ram usage:        0 bytes
 14322 ;; Hardware stack levels used:    1
 14323 ;; Hardware stack levels required when called:    9
 14324 ;; This function calls:
 14325 ;;		_DlyOff_Main
 14326 ;; This function is called by:
 14327 ;;		_main
 14328 ;; This function uses a non-reentrant model
 14329 ;;
 14330                           
 14331                           
 14332                           ;psect for function _DelayOff_Main
 14333  1934                     _DelayOff_Main:	
 14334                           
 14335                           ;DelayOff_B1.c: 48: DlyOff_Main(1);
 14336                           
 14337                           ;incstack = 0
 14338                           ; Regs used in _DelayOff_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14339  1934  3001               	movlw	1
 14340  1935  3197  2717  3199   	fcall	_DlyOff_Main
 14341                           
 14342                           ;DelayOff_B1.c: 52: DlyOff_Main(2);
 14343  1938  3002               	movlw	2
 14344  1939  3197  2717         	fcall	_DlyOff_Main
 14345  193B  0008               	return
 14346  193C                     __end_of_DelayOff_Main:	
 14347                           
 14348                           	psect	text88
 14349  1717                     __ptext88:	
 14350 ;; *************** function _DlyOff_Main *****************
 14351 ;; Defined at:
 14352 ;;		line 66 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\DelayOff_B1.c"
 14353 ;; Parameters:    Size  Location     Type
 14354 ;;  sw              1    wreg     unsigned char 
 14355 ;; Auto vars:     Size  Location     Type
 14356 ;;  sw              1   68[BANK0 ] unsigned char 
 14357 ;; Return value:  Size  Location     Type
 14358 ;;		None               void
 14359 ;; Registers used:
 14360 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14361 ;; Tracked objects:
 14362 ;;		On entry : 0/0
 14363 ;;		On exit  : 0/0
 14364 ;;		Unchanged: 0/0
 14365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14366 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14367 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14368 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14369 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14370 ;;Total ram usage:        3 bytes
 14371 ;; Hardware stack levels used:    1
 14372 ;; Hardware stack levels required when called:    8
 14373 ;; This function calls:
 14374 ;;		_DelayOffPointSelect
 14375 ;;		_setBuz
 14376 ;;		_setDimmerLights_Switch
 14377 ;;		_setDimmerLights_Trigger
 14378 ;;		_setRFSW_Status
 14379 ;;		_setRF_DimmerLights
 14380 ;;		_setSw_Status
 14381 ;;		_setTxData
 14382 ;; This function is called by:
 14383 ;;		_DelayOff_Main
 14384 ;; This function uses a non-reentrant model
 14385 ;;
 14386                           
 14387                           
 14388                           ;psect for function _DlyOff_Main
 14389  1717                     _DlyOff_Main:	
 14390                           
 14391                           ;incstack = 0
 14392                           ; Regs used in _DlyOff_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14393                           ;DlyOff_Main@sw stored from wreg
 14394  1717  0020               	movlb	0	; select bank0
 14395  1718  00E4               	movwf	DlyOff_Main@sw
 14396                           
 14397                           ;DelayOff_B1.c: 68: DelayOffPointSelect(sw);
 14398  1719  0864               	movf	DlyOff_Main@sw,w
 14399  171A  319A  22F2  3197   	fcall	_DelayOffPointSelect
 14400                           
 14401                           ;DelayOff_B1.c: 69: if(DelayOff->GO)
 14402  171D  0020               	movlb	0	; select bank0
 14403  171E  0869               	movf	_DelayOff,w
 14404  171F  0086               	movwf	6
 14405  1720  0187               	clrf	7
 14406  1721  1C81               	btfss	1,1
 14407  1722  0008               	return
 14408                           
 14409                           ;DelayOff_B1.c: 70: {
 14410                           ;DelayOff_B1.c: 71: DelayOff->SecondTime++;
 14411  1723  0869               	movf	_DelayOff,w
 14412  1724  3E02               	addlw	2
 14413  1725  0086               	movwf	6
 14414  1726  0187               	clrf	7
 14415  1727  3001               	movlw	1
 14416  1728  0781               	addwf	1,f
 14417  1729  3141               	addfsr 1,1
 14418  172A  1803               	skipnc
 14419  172B  0A81               	incf	1,f
 14420                           
 14421                           ;DelayOff_B1.c: 72: if(DelayOff->SecondTime >= 5650)
 14422  172C  0869               	movf	_DelayOff,w
 14423  172D  3E02               	addlw	2
 14424  172E  0086               	movwf	6
 14425  172F  0187               	clrf	7
 14426  1730  3F40               	moviw [0]fsr1
 14427  1731  00E2               	movwf	??_DlyOff_Main
 14428  1732  3F41               	moviw [1]fsr1
 14429  1733  00E3               	movwf	??_DlyOff_Main+1
 14430  1734  3016               	movlw	22
 14431  1735  0263               	subwf	??_DlyOff_Main+1,w
 14432  1736  3012               	movlw	18
 14433  1737  1903               	skipnz
 14434  1738  0262               	subwf	??_DlyOff_Main,w
 14435  1739  1C03               	skipc
 14436  173A  0008               	return
 14437                           
 14438                           ;DelayOff_B1.c: 73: {
 14439                           ;DelayOff_B1.c: 74: DelayOff->SecondTime=0;
 14440  173B  0869               	movf	_DelayOff,w
 14441  173C  3E02               	addlw	2
 14442  173D  0086               	movwf	6
 14443  173E  0187               	clrf	7
 14444  173F  3000               	movlw	0
 14445  1740  3FC0               	movwi [0]fsr1
 14446  1741  3FC1               	movwi [1]fsr1
 14447                           
 14448                           ;DelayOff_B1.c: 75: DelayOff->MinuteTime++;
 14449  1742  3001               	movlw	1
 14450  1743  00E2               	movwf	??_DlyOff_Main
 14451  1744  0869               	movf	_DelayOff,w
 14452  1745  3E04               	addlw	4
 14453  1746  0086               	movwf	6
 14454  1747  0187               	clrf	7
 14455  1748  0862               	movf	??_DlyOff_Main,w
 14456  1749  0781               	addwf	1,f
 14457                           
 14458                           ;DelayOff_B1.c: 76: if(DelayOff->MinuteTime >= DelayOff->Value)
 14459  174A  0869               	movf	_DelayOff,w
 14460  174B  3E04               	addlw	4
 14461  174C  0086               	movwf	6
 14462  174D  0187               	clrf	7
 14463  174E  0A69               	incf	_DelayOff,w
 14464  174F  0084               	movwf	4
 14465  1750  0185               	clrf	5
 14466  1751  0800               	movf	0,w
 14467  1752  0201               	subwf	1,w
 14468  1753  1C03               	skipc
 14469  1754  0008               	return
 14470                           
 14471                           ;DelayOff_B1.c: 77: {
 14472                           ;DelayOff_B1.c: 78: DelayOff->MinuteTime=0;
 14473  1755  0869               	movf	_DelayOff,w
 14474  1756  3E04               	addlw	4
 14475  1757  0086               	movwf	6
 14476  1758  0187               	clrf	7
 14477  1759  0181               	clrf	1
 14478                           
 14479                           ;DelayOff_B1.c: 79: DelayOff->GO=0;
 14480  175A  0869               	movf	_DelayOff,w
 14481  175B  0086               	movwf	6
 14482  175C  0187               	clrf	7
 14483  175D  1081               	bcf	1,1
 14484                           
 14485                           ;DelayOff_B1.c: 80: setSw_Status(sw,0);
 14486  175E  01A2               	clrf	setSw_Status@command
 14487  175F  0864               	movf	DlyOff_Main@sw,w
 14488  1760  319A  224C  3197   	fcall	_setSw_Status
 14489                           
 14490                           ;DelayOff_B1.c: 81: setRFSW_Status(sw,0);
 14491  1763  0020               	movlb	0	; select bank0
 14492  1764  01A2               	clrf	setRFSW_Status@command
 14493  1765  0864               	movf	DlyOff_Main@sw,w
 14494  1766  319A  223D  3197   	fcall	_setRFSW_Status
 14495                           
 14496                           ;DelayOff_B1.c: 82: setRF_DimmerLights(sw,0);
 14497  1769  0020               	movlb	0	; select bank0
 14498  176A  01DD               	clrf	setRF_DimmerLights@on
 14499  176B  0864               	movf	DlyOff_Main@sw,w
 14500  176C  3195  2560  3197   	fcall	_setRF_DimmerLights
 14501                           
 14502                           ;DelayOff_B1.c: 83: setDimmerLights_Trigger(sw,1);
 14503  176F  0020               	movlb	0	; select bank0
 14504  1770  01A2               	clrf	setDimmerLights_Trigger@command
 14505  1771  0AA2               	incf	setDimmerLights_Trigger@command,f
 14506  1772  0864               	movf	DlyOff_Main@sw,w
 14507  1773  319A  227B  3197   	fcall	_setDimmerLights_Trigger
 14508                           
 14509                           ;DelayOff_B1.c: 84: setDimmerLights_Switch(sw,0);
 14510  1776  0020               	movlb	0	; select bank0
 14511  1777  01A2               	clrf	setDimmerLights_Switch@command
 14512  1778  0864               	movf	DlyOff_Main@sw,w
 14513  1779  319A  226B  3197   	fcall	_setDimmerLights_Switch
 14514                           
 14515                           ;DelayOff_B1.c: 85: setTxData(1);
 14516  177C  3001               	movlw	1
 14517  177D  3187  2723  3197   	fcall	_setTxData
 14518                           
 14519                           ;DelayOff_B1.c: 86: setBuz(1,100);
 14520  1780  3064               	movlw	100
 14521  1781  0020               	movlb	0	; select bank0
 14522  1782  00A6               	movwf	setBuz@time
 14523  1783  3000               	movlw	0
 14524  1784  00A7               	movwf	setBuz@time+1
 14525  1785  3001               	movlw	1
 14526  1786  3197  2789         	fcall	_setBuz
 14527  1788  0008               	return
 14528  1789                     __end_of_DlyOff_Main:	
 14529                           
 14530                           	psect	text89
 14531  0723                     __ptext89:	
 14532 ;; *************** function _setTxData *****************
 14533 ;; Defined at:
 14534 ;;		line 141 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
 14535 ;; Parameters:    Size  Location     Type
 14536 ;;  rf              1    wreg     unsigned char 
 14537 ;; Auto vars:     Size  Location     Type
 14538 ;;  rf              1    3[BANK0 ] unsigned char 
 14539 ;;  i               1    0        unsigned char 
 14540 ;; Return value:  Size  Location     Type
 14541 ;;		None               void
 14542 ;; Registers used:
 14543 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14544 ;; Tracked objects:
 14545 ;;		On entry : 0/0
 14546 ;;		On exit  : 0/0
 14547 ;;		Unchanged: 0/0
 14548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14550 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14551 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14552 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14553 ;;Total ram usage:        2 bytes
 14554 ;; Hardware stack levels used:    1
 14555 ;; Hardware stack levels required when called:    5
 14556 ;; This function calls:
 14557 ;;		_RfPointSelect
 14558 ;; This function is called by:
 14559 ;;		_DlyOff_Main
 14560 ;;		_setDimmerLights_Adj
 14561 ;;		_setControl_Lights_Table
 14562 ;;		_setRFSW_Control
 14563 ;;		_setRFSW_AdjControl
 14564 ;;		_Sw_DimmerOnFunc
 14565 ;;		_Sw_DimmerOffFunc
 14566 ;; This function uses a non-reentrant model
 14567 ;;
 14568                           
 14569                           
 14570                           ;psect for function _setTxData
 14571  0723                     _setTxData:	
 14572                           
 14573                           ;incstack = 0
 14574                           ; Regs used in _setTxData: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14575                           ;setTxData@rf stored from wreg
 14576  0723  0020               	movlb	0	; select bank0
 14577  0724  00A3               	movwf	setTxData@rf
 14578                           
 14579                           ;RF_Control_B1.c: 143: char i;
 14580                           ;RF_Control_B1.c: 144: RfPointSelect(rf);
 14581  0725  0823               	movf	setTxData@rf,w
 14582  0726  3199  2186  3187   	fcall	_RfPointSelect
 14583                           
 14584                           ;RF_Control_B1.c: 145: if(RF->Enable)
 14585  0729  0877               	movf	_RF,w
 14586  072A  0086               	movwf	6
 14587  072B  0187               	clrf	7
 14588  072C  1C01               	btfss	1,0
 14589  072D  0008               	return
 14590                           
 14591                           ;RF_Control_B1.c: 146: {
 14592                           ;RF_Control_B1.c: 148: if(!RF->TransceiveGO)
 14593  072E  0877               	movf	_RF,w
 14594  072F  0086               	movwf	6
 14595  0730  0187               	clrf	7
 14596  0731  1901               	btfsc	1,2
 14597  0732  0008               	return
 14598                           
 14599                           ;RF_Control_B1.c: 149: {
 14600                           ;RF_Control_B1.c: 150: RF->TransceiveGO=1;
 14601  0733  0877               	movf	_RF,w
 14602  0734  0086               	movwf	6
 14603  0735  0187               	clrf	7
 14604  0736  1501               	bsf	1,2
 14605                           
 14606                           ;RF_Control_B1.c: 159: RF_Data[0]=0x63;
 14607  0737  3063               	movlw	99
 14608  0738  0020               	movlb	0	; select bank0
 14609  0739  00A2               	movwf	??_setTxData
 14610  073A  0822               	movf	??_setTxData,w
 14611  073B  0021               	movlb	1	; select bank1
 14612  073C  00A0               	movwf	_RF_Data^(0+128)
 14613                           
 14614                           ;RF_Control_B1.c: 160: RF_Data[1]=0x02;
 14615  073D  3002               	movlw	2
 14616  073E  0020               	movlb	0	; select bank0
 14617  073F  00A2               	movwf	??_setTxData
 14618  0740  0822               	movf	??_setTxData,w
 14619  0741  0021               	movlb	1	; select bank1
 14620  0742  00A1               	movwf	(_RF_Data^(0+128)+1)
 14621                           
 14622                           ;RF_Control_B1.c: 161: RF_Data[2]=Product->Data[2];
 14623  0743  0020               	movlb	0	; select bank0
 14624  0744  086E               	movf	_Product,w
 14625  0745  0086               	movwf	6
 14626  0746  3001               	movlw	1	; select bank2/3
 14627  0747  0087               	movwf	7
 14628  0748  3001               	movlw	1	; select bank2/3
 14629  0749  3F42               	moviw [2]fsr1
 14630  074A  0021               	movlb	1	; select bank1
 14631  074B  00A2               	movwf	(_RF_Data^(0+128)+2)
 14632                           
 14633                           ;RF_Control_B1.c: 162: RF_Data[3]=Product->Data[3];
 14634  074C  0020               	movlb	0	; select bank0
 14635  074D  086E               	movf	_Product,w
 14636  074E  0086               	movwf	6
 14637  074F  3001               	movlw	1	; select bank2/3
 14638  0750  0087               	movwf	7
 14639  0751  3001               	movlw	1	; select bank2/3
 14640  0752  3F43               	moviw [3]fsr1
 14641  0753  0021               	movlb	1	; select bank1
 14642  0754  00A3               	movwf	(_RF_Data^(0+128)+3)
 14643                           
 14644                           ;RF_Control_B1.c: 163: RF_Data[4]=Product->Data[4];
 14645  0755  0020               	movlb	0	; select bank0
 14646  0756  086E               	movf	_Product,w
 14647  0757  0086               	movwf	6
 14648  0758  3001               	movlw	1	; select bank2/3
 14649  0759  0087               	movwf	7
 14650  075A  3001               	movlw	1	; select bank2/3
 14651  075B  3F44               	moviw [4]fsr1
 14652  075C  0021               	movlb	1	; select bank1
 14653  075D  00A4               	movwf	(_RF_Data^(0+128)+4)
 14654                           
 14655                           ;RF_Control_B1.c: 164: RF_Data[5]=Product->Data[5];
 14656  075E  0020               	movlb	0	; select bank0
 14657  075F  086E               	movf	_Product,w
 14658  0760  0086               	movwf	6
 14659  0761  3001               	movlw	1	; select bank2/3
 14660  0762  0087               	movwf	7
 14661  0763  3001               	movlw	1	; select bank2/3
 14662  0764  3F45               	moviw [5]fsr1
 14663  0765  0021               	movlb	1	; select bank1
 14664  0766  00A5               	movwf	(_RF_Data^(0+128)+5)
 14665                           
 14666                           ;RF_Control_B1.c: 165: RF_Data[6]=Product->Data[6];
 14667  0767  0020               	movlb	0	; select bank0
 14668  0768  086E               	movf	_Product,w
 14669  0769  0086               	movwf	6
 14670  076A  3001               	movlw	1	; select bank2/3
 14671  076B  0087               	movwf	7
 14672  076C  3001               	movlw	1	; select bank2/3
 14673  076D  3F46               	moviw [6]fsr1
 14674  076E  0021               	movlb	1	; select bank1
 14675  076F  00A6               	movwf	(_RF_Data^(0+128)+6)
 14676                           
 14677                           ;RF_Control_B1.c: 166: RF_Data[7]=Product->Data[7];
 14678  0770  0020               	movlb	0	; select bank0
 14679  0771  086E               	movf	_Product,w
 14680  0772  0086               	movwf	6
 14681  0773  3001               	movlw	1	; select bank2/3
 14682  0774  0087               	movwf	7
 14683  0775  3001               	movlw	1	; select bank2/3
 14684  0776  3F47               	moviw [7]fsr1
 14685  0777  0021               	movlb	1	; select bank1
 14686  0778  00A7               	movwf	(_RF_Data^(0+128)+7)
 14687                           
 14688                           ;RF_Control_B1.c: 167: RF_Data[8]=Product->Data[8];
 14689  0779  0020               	movlb	0	; select bank0
 14690  077A  086E               	movf	_Product,w
 14691  077B  0086               	movwf	6
 14692  077C  3001               	movlw	1	; select bank2/3
 14693  077D  0087               	movwf	7
 14694  077E  3001               	movlw	1	; select bank2/3
 14695  077F  3F48               	moviw [8]fsr1
 14696  0780  0021               	movlb	1	; select bank1
 14697  0781  00A8               	movwf	(_RF_Data^(0+128)+8)
 14698                           
 14699                           ;RF_Control_B1.c: 168: RF_Data[9]=Product->Data[9];
 14700  0782  0020               	movlb	0	; select bank0
 14701  0783  086E               	movf	_Product,w
 14702  0784  0086               	movwf	6
 14703  0785  3001               	movlw	1	; select bank2/3
 14704  0786  0087               	movwf	7
 14705  0787  3001               	movlw	1	; select bank2/3
 14706  0788  3F49               	moviw [9]fsr1
 14707  0789  0021               	movlb	1	; select bank1
 14708  078A  00A9               	movwf	(_RF_Data^(0+128)+9)
 14709                           
 14710                           ;RF_Control_B1.c: 169: RF_Data[10]=Product->Data[10];
 14711  078B  0020               	movlb	0	; select bank0
 14712  078C  086E               	movf	_Product,w
 14713  078D  0086               	movwf	6
 14714  078E  3001               	movlw	1	; select bank2/3
 14715  078F  0087               	movwf	7
 14716  0790  3001               	movlw	1	; select bank2/3
 14717  0791  3F4A               	moviw [10]fsr1
 14718  0792  0021               	movlb	1	; select bank1
 14719  0793  00AA               	movwf	(_RF_Data^(0+128)+10)
 14720                           
 14721                           ;RF_Control_B1.c: 170: RF_Data[11]=Product->Data[11];
 14722  0794  0020               	movlb	0	; select bank0
 14723  0795  086E               	movf	_Product,w
 14724  0796  0086               	movwf	6
 14725  0797  3001               	movlw	1	; select bank2/3
 14726  0798  0087               	movwf	7
 14727  0799  3001               	movlw	1	; select bank2/3
 14728  079A  3F4B               	moviw [11]fsr1
 14729  079B  0021               	movlb	1	; select bank1
 14730  079C  00AB               	movwf	(_RF_Data^(0+128)+11)
 14731                           
 14732                           ;RF_Control_B1.c: 171: RF_Data[12]=Product->Data[12];
 14733  079D  0020               	movlb	0	; select bank0
 14734  079E  086E               	movf	_Product,w
 14735  079F  0086               	movwf	6
 14736  07A0  3001               	movlw	1	; select bank2/3
 14737  07A1  0087               	movwf	7
 14738  07A2  3001               	movlw	1	; select bank2/3
 14739  07A3  3F4C               	moviw [12]fsr1
 14740  07A4  0021               	movlb	1	; select bank1
 14741  07A5  00AC               	movwf	(_RF_Data^(0+128)+12)
 14742                           
 14743                           ;RF_Control_B1.c: 172: RF_Data[13]=Product->Data[13];
 14744  07A6  0020               	movlb	0	; select bank0
 14745  07A7  086E               	movf	_Product,w
 14746  07A8  0086               	movwf	6
 14747  07A9  3001               	movlw	1	; select bank2/3
 14748  07AA  0087               	movwf	7
 14749  07AB  3001               	movlw	1	; select bank2/3
 14750  07AC  3F4D               	moviw [13]fsr1
 14751  07AD  0021               	movlb	1	; select bank1
 14752  07AE  00AD               	movwf	(_RF_Data^(0+128)+13)
 14753                           
 14754                           ;RF_Control_B1.c: 173: RF_Data[14]=Product->Data[14];
 14755  07AF  0020               	movlb	0	; select bank0
 14756  07B0  086E               	movf	_Product,w
 14757  07B1  0086               	movwf	6
 14758  07B2  3001               	movlw	1	; select bank2/3
 14759  07B3  0087               	movwf	7
 14760  07B4  3001               	movlw	1	; select bank2/3
 14761  07B5  3F4E               	moviw [14]fsr1
 14762  07B6  0021               	movlb	1	; select bank1
 14763  07B7  00AE               	movwf	(_RF_Data^(0+128)+14)
 14764                           
 14765                           ;RF_Control_B1.c: 174: RF_Data[15]=Product->Data[15];
 14766  07B8  0020               	movlb	0	; select bank0
 14767  07B9  086E               	movf	_Product,w
 14768  07BA  0086               	movwf	6
 14769  07BB  3001               	movlw	1	; select bank2/3
 14770  07BC  0087               	movwf	7
 14771  07BD  3001               	movlw	1	; select bank2/3
 14772  07BE  3F4F               	moviw [15]fsr1
 14773  07BF  0021               	movlb	1	; select bank1
 14774  07C0  00AF               	movwf	(_RF_Data^(0+128)+15)
 14775                           
 14776                           ;RF_Control_B1.c: 175: RF_Data[16]=Product->Data[16];
 14777  07C1  0020               	movlb	0	; select bank0
 14778  07C2  086E               	movf	_Product,w
 14779  07C3  0086               	movwf	6
 14780  07C4  3001               	movlw	1	; select bank2/3
 14781  07C5  0087               	movwf	7
 14782  07C6  3001               	movlw	1	; select bank2/3
 14783  07C7  3F50               	moviw [16]fsr1
 14784  07C8  0021               	movlb	1	; select bank1
 14785  07C9  00B0               	movwf	(_RF_Data^(0+128)+16)
 14786                           
 14787                           ;RF_Control_B1.c: 176: RF_Data[17]=Product->Data[17];
 14788  07CA  0020               	movlb	0	; select bank0
 14789  07CB  086E               	movf	_Product,w
 14790  07CC  0086               	movwf	6
 14791  07CD  3001               	movlw	1	; select bank2/3
 14792  07CE  0087               	movwf	7
 14793  07CF  3001               	movlw	1	; select bank2/3
 14794  07D0  3F51               	moviw [17]fsr1
 14795  07D1  0021               	movlb	1	; select bank1
 14796  07D2  00B1               	movwf	(_RF_Data^(0+128)+17)
 14797                           
 14798                           ;RF_Control_B1.c: 177: RF_Data[18]=Product->Data[18];
 14799  07D3  0020               	movlb	0	; select bank0
 14800  07D4  086E               	movf	_Product,w
 14801  07D5  0086               	movwf	6
 14802  07D6  3001               	movlw	1	; select bank2/3
 14803  07D7  0087               	movwf	7
 14804  07D8  3001               	movlw	1	; select bank2/3
 14805  07D9  3F52               	moviw [18]fsr1
 14806  07DA  0021               	movlb	1	; select bank1
 14807  07DB  00B2               	movwf	(_RF_Data^(0+128)+18)
 14808                           
 14809                           ;RF_Control_B1.c: 178: RF_Data[19]=Product->Data[19];
 14810  07DC  0020               	movlb	0	; select bank0
 14811  07DD  086E               	movf	_Product,w
 14812  07DE  0086               	movwf	6
 14813  07DF  3001               	movlw	1	; select bank2/3
 14814  07E0  0087               	movwf	7
 14815  07E1  3001               	movlw	1	; select bank2/3
 14816  07E2  3F53               	moviw [19]fsr1
 14817  07E3  0021               	movlb	1	; select bank1
 14818  07E4  00B3               	movwf	(_RF_Data^(0+128)+19)
 14819                           
 14820                           ;RF_Control_B1.c: 179: RF_Data[20]=210;
 14821  07E5  30D2               	movlw	210
 14822  07E6  0020               	movlb	0	; select bank0
 14823  07E7  00A2               	movwf	??_setTxData
 14824  07E8  0822               	movf	??_setTxData,w
 14825  07E9  0021               	movlb	1	; select bank1
 14826  07EA  00B4               	movwf	(_RF_Data^(0+128)+20)
 14827  07EB  0008               	return
 14828  07EC                     __end_of_setTxData:	
 14829                           
 14830                           	psect	text90
 14831  1986                     __ptext90:	
 14832 ;; *************** function _RfPointSelect *****************
 14833 ;; Defined at:
 14834 ;;		line 7 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
 14835 ;; Parameters:    Size  Location     Type
 14836 ;;  rf              1    wreg     unsigned char 
 14837 ;; Auto vars:     Size  Location     Type
 14838 ;;  rf              1    1[BANK0 ] unsigned char 
 14839 ;; Return value:  Size  Location     Type
 14840 ;;		None               void
 14841 ;; Registers used:
 14842 ;;		wreg
 14843 ;; Tracked objects:
 14844 ;;		On entry : 0/0
 14845 ;;		On exit  : 0/0
 14846 ;;		Unchanged: 0/0
 14847 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14848 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14849 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14850 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14851 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14852 ;;Total ram usage:        2 bytes
 14853 ;; Hardware stack levels used:    1
 14854 ;; Hardware stack levels required when called:    4
 14855 ;; This function calls:
 14856 ;;		Nothing
 14857 ;; This function is called by:
 14858 ;;		_setRF_Learn
 14859 ;;		_setRF_RxStatus
 14860 ;;		_setRF_Main
 14861 ;;		_setTxData
 14862 ;;		_setRF_Enable
 14863 ;;		_RF_RxDisable
 14864 ;;		_getRxData
 14865 ;;		_setLog_Code
 14866 ;;		_setControl_Lights_Table
 14867 ;; This function uses a non-reentrant model
 14868 ;;
 14869                           
 14870                           
 14871                           ;psect for function _RfPointSelect
 14872  1986                     _RfPointSelect:	
 14873                           
 14874                           ;incstack = 0
 14875                           ; Regs used in _RfPointSelect: [wreg]
 14876                           ;RfPointSelect@rf stored from wreg
 14877  1986  0020               	movlb	0	; select bank0
 14878  1987  00A1               	movwf	RfPointSelect@rf
 14879                           
 14880                           ;RF_Control_B1.c: 10: if(rf == 1)
 14881  1988  0821               	movf	RfPointSelect@rf,w
 14882  1989  3A01               	xorlw	1
 14883  198A  1D03               	skipz
 14884  198B  0008               	return
 14885                           
 14886                           ;RF_Control_B1.c: 11: {
 14887                           ;RF_Control_B1.c: 12: RF=&RF1;
 14888  198C  30E5               	movlw	_RF1& (0+255)
 14889  198D  00A0               	movwf	??_RfPointSelect
 14890  198E  0820               	movf	??_RfPointSelect,w
 14891  198F  00F7               	movwf	_RF
 14892  1990  0008               	return
 14893  1991                     __end_of_RfPointSelect:	
 14894                           
 14895                           	psect	text91
 14896  1A4C                     __ptext91:	
 14897 ;; *************** function _setSw_Status *****************
 14898 ;; Defined at:
 14899 ;;		line 106 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Switch_B1.c"
 14900 ;; Parameters:    Size  Location     Type
 14901 ;;  sw              1    wreg     unsigned char 
 14902 ;;  command         1    2[BANK0 ] unsigned char 
 14903 ;; Auto vars:     Size  Location     Type
 14904 ;;  sw              1    3[BANK0 ] unsigned char 
 14905 ;; Return value:  Size  Location     Type
 14906 ;;		None               void
 14907 ;; Registers used:
 14908 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14909 ;; Tracked objects:
 14910 ;;		On entry : 0/0
 14911 ;;		On exit  : 0/0
 14912 ;;		Unchanged: 0/0
 14913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14914 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14915 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14917 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14918 ;;Total ram usage:        2 bytes
 14919 ;; Hardware stack levels used:    1
 14920 ;; Hardware stack levels required when called:    5
 14921 ;; This function calls:
 14922 ;;		_SwPointSelect
 14923 ;; This function is called by:
 14924 ;;		_DlyOff_Main
 14925 ;;		_setDimmerLights_ERROR
 14926 ;;		_setControl_Lights_Table
 14927 ;;		_setRFSW_Control
 14928 ;; This function uses a non-reentrant model
 14929 ;;
 14930                           
 14931                           
 14932                           ;psect for function _setSw_Status
 14933  1A4C                     _setSw_Status:	
 14934                           
 14935                           ;incstack = 0
 14936                           ; Regs used in _setSw_Status: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14937                           ;setSw_Status@sw stored from wreg
 14938  1A4C  0020               	movlb	0	; select bank0
 14939  1A4D  00A3               	movwf	setSw_Status@sw
 14940                           
 14941                           ;Switch_B1.c: 108: SwPointSelect(sw);
 14942  1A4E  0823               	movf	setSw_Status@sw,w
 14943  1A4F  3187  27EC         	fcall	_SwPointSelect
 14944                           
 14945                           ;Switch_B1.c: 109: Sw->Status=command;
 14946  1A51  0878               	movf	_Sw,w
 14947  1A52  0086               	movwf	6
 14948  1A53  3001               	movlw	1	; select bank2/3
 14949  1A54  0087               	movwf	7
 14950  1A55  0020               	movlb	0	; select bank0
 14951  1A56  0822               	movf	setSw_Status@command,w
 14952  1A57  1301               	bcf	1,6
 14953  1A58  1D03               	skipz
 14954  1A59  1701               	bsf	1,6
 14955  1A5A  0008               	return
 14956  1A5B                     __end_of_setSw_Status:	
 14957                           
 14958                           	psect	text92
 14959  07EC                     __ptext92:	
 14960 ;; *************** function _SwPointSelect *****************
 14961 ;; Defined at:
 14962 ;;		line 16 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Switch_B1.c"
 14963 ;; Parameters:    Size  Location     Type
 14964 ;;  sw              1    wreg     unsigned char 
 14965 ;; Auto vars:     Size  Location     Type
 14966 ;;  sw              1    1[BANK0 ] unsigned char 
 14967 ;; Return value:  Size  Location     Type
 14968 ;;		None               void
 14969 ;; Registers used:
 14970 ;;		wreg
 14971 ;; Tracked objects:
 14972 ;;		On entry : 0/0
 14973 ;;		On exit  : 0/0
 14974 ;;		Unchanged: 0/0
 14975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14977 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14978 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14979 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14980 ;;Total ram usage:        2 bytes
 14981 ;; Hardware stack levels used:    1
 14982 ;; Hardware stack levels required when called:    4
 14983 ;; This function calls:
 14984 ;;		Nothing
 14985 ;; This function is called by:
 14986 ;;		_setSw_Enable
 14987 ;;		_setSw_Status
 14988 ;;		_setSw_Main
 14989 ;;		_Sw_Detect
 14990 ;; This function uses a non-reentrant model
 14991 ;;
 14992                           
 14993                           
 14994                           ;psect for function _SwPointSelect
 14995  07EC                     _SwPointSelect:	
 14996                           
 14997                           ;incstack = 0
 14998                           ; Regs used in _SwPointSelect: [wreg]
 14999                           ;SwPointSelect@sw stored from wreg
 15000  07EC  0020               	movlb	0	; select bank0
 15001  07ED  00A1               	movwf	SwPointSelect@sw
 15002                           
 15003                           ;Switch_B1.c: 19: if(sw == 1)
 15004  07EE  0821               	movf	SwPointSelect@sw,w
 15005  07EF  3A01               	xorlw	1
 15006  07F0  1D03               	skipz
 15007  07F1  2FF7               	goto	l8260
 15008                           
 15009                           ;Switch_B1.c: 20: {
 15010                           ;Switch_B1.c: 21: Sw=&Sw1;
 15011  07F2  3056               	movlw	_Sw1& (0+255)
 15012  07F3  00A0               	movwf	??_SwPointSelect
 15013  07F4  0820               	movf	??_SwPointSelect,w
 15014  07F5  00F8               	movwf	_Sw
 15015                           
 15016                           ;Switch_B1.c: 22: }
 15017  07F6  0008               	return
 15018  07F7                     l8260:	
 15019                           
 15020                           ;Switch_B1.c: 25: else if(sw == 2)
 15021  07F7  0821               	movf	SwPointSelect@sw,w
 15022  07F8  3A02               	xorlw	2
 15023  07F9  1D03               	skipz
 15024  07FA  0008               	return
 15025                           
 15026                           ;Switch_B1.c: 26: {
 15027                           ;Switch_B1.c: 27: Sw=&Sw2;
 15028  07FB  305F               	movlw	_Sw2& (0+255)
 15029  07FC  00A0               	movwf	??_SwPointSelect
 15030  07FD  0820               	movf	??_SwPointSelect,w
 15031  07FE  00F8               	movwf	_Sw
 15032  07FF  0008               	return
 15033  0800                     __end_of_SwPointSelect:	
 15034                           
 15035                           	psect	text93
 15036  1560                     __ptext93:	
 15037 ;; *************** function _setRF_DimmerLights *****************
 15038 ;; Defined at:
 15039 ;;		line 445 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
 15040 ;; Parameters:    Size  Location     Type
 15041 ;;  lights          1    wreg     unsigned char 
 15042 ;;  on              1   61[BANK0 ] unsigned char 
 15043 ;; Auto vars:     Size  Location     Type
 15044 ;;  lights          1   65[BANK0 ] unsigned char 
 15045 ;;  status          1   64[BANK0 ] unsigned char 
 15046 ;; Return value:  Size  Location     Type
 15047 ;;		None               void
 15048 ;; Registers used:
 15049 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15050 ;; Tracked objects:
 15051 ;;		On entry : 0/0
 15052 ;;		On exit  : 0/0
 15053 ;;		Unchanged: 0/0
 15054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15055 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15056 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15057 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15058 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15059 ;;Total ram usage:        5 bytes
 15060 ;; Hardware stack levels used:    1
 15061 ;; Hardware stack levels required when called:    7
 15062 ;; This function calls:
 15063 ;;		_setPercentValue
 15064 ;; This function is called by:
 15065 ;;		_DlyOff_Main
 15066 ;;		_setDimmerLights_Adj
 15067 ;;		_setRFSW_Control
 15068 ;;		_Sw_DimmerOnFunc
 15069 ;;		_Sw_DimmerOffFunc
 15070 ;; This function uses a non-reentrant model
 15071 ;;
 15072                           
 15073                           
 15074                           ;psect for function _setRF_DimmerLights
 15075  1560                     _setRF_DimmerLights:	
 15076                           
 15077                           ;incstack = 0
 15078                           ; Regs used in _setRF_DimmerLights: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15079                           ;setRF_DimmerLights@lights stored from wreg
 15080  1560  0020               	movlb	0	; select bank0
 15081  1561  00E1               	movwf	setRF_DimmerLights@lights
 15082                           
 15083                           ;RF_Control_B1.c: 447: char status;
 15084                           ;RF_Control_B1.c: 448: status=1;
 15085  1562  01E0               	clrf	setRF_DimmerLights@status
 15086  1563  0AE0               	incf	setRF_DimmerLights@status,f
 15087                           
 15088                           ;RF_Control_B1.c: 449: status<<=(lights-1);
 15089  1564  0861               	movf	setRF_DimmerLights@lights,w
 15090  1565  3EFF               	addlw	-1
 15091  1566  0A89               	incf	9,f
 15092  1567  2D6A               	goto	u8200
 15093  1568                     u8205:	
 15094  1568  1003               	clrc
 15095  1569  0DE0               	rlf	setRF_DimmerLights@status,f
 15096  156A                     u8200:	
 15097  156A  3EFF               	addlw	-1
 15098  156B  1D03               	skipz
 15099  156C  2D68               	goto	u8205
 15100                           
 15101                           ;RF_Control_B1.c: 450: Product->Data[11]=lights;
 15102  156D  0861               	movf	setRF_DimmerLights@lights,w
 15103  156E  00DE               	movwf	??_setRF_DimmerLights
 15104  156F  086E               	movf	_Product,w
 15105  1570  3E0B               	addlw	11
 15106  1571  0086               	movwf	6
 15107  1572  3001               	movlw	1	; select bank2/3
 15108  1573  0087               	movwf	7
 15109  1574  085E               	movf	??_setRF_DimmerLights,w
 15110  1575  0081               	movwf	1
 15111                           
 15112                           ;RF_Control_B1.c: 453: Product->Data[(20+lights)]=setPercentValue(((char)((100-55)*1.5))
      +                          );
 15113  1576  3043               	movlw	67
 15114  1577  3191  2190  3195   	fcall	_setPercentValue
 15115  157A  0020               	movlb	0	; select bank0
 15116  157B  00DE               	movwf	??_setRF_DimmerLights
 15117  157C  0861               	movf	setRF_DimmerLights@lights,w
 15118  157D  3E14               	addlw	20
 15119  157E  076E               	addwf	_Product,w
 15120  157F  00DF               	movwf	??_setRF_DimmerLights+1
 15121  1580  085F               	movf	??_setRF_DimmerLights+1,w
 15122  1581  0086               	movwf	6
 15123  1582  3001               	movlw	1	; select bank2/3
 15124  1583  0087               	movwf	7
 15125  1584  085E               	movf	??_setRF_DimmerLights,w
 15126  1585  0081               	movwf	1
 15127                           
 15128                           ;RF_Control_B1.c: 456: Product->Data[9]=Product->Data[20+lights];
 15129  1586  0861               	movf	setRF_DimmerLights@lights,w
 15130  1587  3E14               	addlw	20
 15131  1588  076E               	addwf	_Product,w
 15132  1589  00DE               	movwf	??_setRF_DimmerLights
 15133  158A  085E               	movf	??_setRF_DimmerLights,w
 15134  158B  0086               	movwf	6
 15135  158C  3001               	movlw	1	; select bank2/3
 15136  158D  0087               	movwf	7
 15137  158E  0801               	movf	1,w
 15138  158F  00DF               	movwf	??_setRF_DimmerLights+1
 15139  1590  086E               	movf	_Product,w
 15140  1591  3E09               	addlw	9
 15141  1592  0086               	movwf	6
 15142  1593  3001               	movlw	1	; select bank2/3
 15143  1594  0087               	movwf	7
 15144  1595  085F               	movf	??_setRF_DimmerLights+1,w
 15145  1596  0081               	movwf	1
 15146                           
 15147                           ;RF_Control_B1.c: 457: Product->Data[17]=Product->Data[26+lights];
 15148  1597  0861               	movf	setRF_DimmerLights@lights,w
 15149  1598  3E1A               	addlw	26
 15150  1599  076E               	addwf	_Product,w
 15151  159A  00DE               	movwf	??_setRF_DimmerLights
 15152  159B  085E               	movf	??_setRF_DimmerLights,w
 15153  159C  0086               	movwf	6
 15154  159D  3001               	movlw	1	; select bank2/3
 15155  159E  0087               	movwf	7
 15156  159F  0801               	movf	1,w
 15157  15A0  00DF               	movwf	??_setRF_DimmerLights+1
 15158  15A1  086E               	movf	_Product,w
 15159  15A2  3E11               	addlw	17
 15160  15A3  0086               	movwf	6
 15161  15A4  3001               	movlw	1	; select bank2/3
 15162  15A5  0087               	movwf	7
 15163  15A6  085F               	movf	??_setRF_DimmerLights+1,w
 15164  15A7  0081               	movwf	1
 15165                           
 15166                           ;RF_Control_B1.c: 458: if(on)
 15167  15A8  085D               	movf	setRF_DimmerLights@on,w
 15168  15A9  1903               	btfsc	3,2
 15169  15AA  2DBB               	goto	l8318
 15170                           
 15171                           ;RF_Control_B1.c: 459: {
 15172                           ;RF_Control_B1.c: 460: Product->Data[15]=(Product->Data[15]|status);
 15173  15AB  086E               	movf	_Product,w
 15174  15AC  3E0F               	addlw	15
 15175  15AD  0086               	movwf	6
 15176  15AE  3001               	movlw	1	; select bank2/3
 15177  15AF  0087               	movwf	7
 15178  15B0  0801               	movf	1,w
 15179  15B1  0460               	iorwf	setRF_DimmerLights@status,w
 15180  15B2  00DE               	movwf	??_setRF_DimmerLights
 15181  15B3  086E               	movf	_Product,w
 15182  15B4  3E0F               	addlw	15
 15183  15B5  0086               	movwf	6
 15184  15B6  3001               	movlw	1	; select bank2/3
 15185  15B7  0087               	movwf	7
 15186  15B8  085E               	movf	??_setRF_DimmerLights,w
 15187  15B9  0081               	movwf	1
 15188                           
 15189                           ;RF_Control_B1.c: 461: }
 15190  15BA  0008               	return
 15191  15BB                     l8318:	
 15192                           
 15193                           ;RF_Control_B1.c: 462: else
 15194                           ;RF_Control_B1.c: 463: {
 15195                           ;RF_Control_B1.c: 464: Product->Data[15]=(Product->Data[15]&(~status));
 15196  15BB  086E               	movf	_Product,w
 15197  15BC  3E0F               	addlw	15
 15198  15BD  0086               	movwf	6
 15199  15BE  3001               	movlw	1	; select bank2/3
 15200  15BF  0087               	movwf	7
 15201  15C0  0960               	comf	setRF_DimmerLights@status,w
 15202  15C1  0501               	andwf	1,w
 15203  15C2  00DE               	movwf	??_setRF_DimmerLights
 15204  15C3  086E               	movf	_Product,w
 15205  15C4  3E0F               	addlw	15
 15206  15C5  0086               	movwf	6
 15207  15C6  3001               	movlw	1	; select bank2/3
 15208  15C7  0087               	movwf	7
 15209  15C8  085E               	movf	??_setRF_DimmerLights,w
 15210  15C9  0081               	movwf	1
 15211  15CA  0008               	return
 15212  15CB                     __end_of_setRF_DimmerLights:	
 15213                           
 15214                           	psect	text94
 15215  1190                     __ptext94:	
 15216 ;; *************** function _setPercentValue *****************
 15217 ;; Defined at:
 15218 ;;		line 505 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 15219 ;; Parameters:    Size  Location     Type
 15220 ;;  value           1    wreg     unsigned char 
 15221 ;; Auto vars:     Size  Location     Type
 15222 ;;  value           1   57[BANK0 ] unsigned char 
 15223 ;;  i               3   58[BANK0 ] float 
 15224 ;; Return value:  Size  Location     Type
 15225 ;;                  1    wreg      unsigned char 
 15226 ;; Registers used:
 15227 ;;		wreg, status,2, status,0, pclath, cstack
 15228 ;; Tracked objects:
 15229 ;;		On entry : 0/0
 15230 ;;		On exit  : 0/0
 15231 ;;		Unchanged: 0/0
 15232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15234 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15236 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15237 ;;Total ram usage:        4 bytes
 15238 ;; Hardware stack levels used:    1
 15239 ;; Hardware stack levels required when called:    6
 15240 ;; This function calls:
 15241 ;;		___awtoft
 15242 ;;		___ftdiv
 15243 ;;		___fttol
 15244 ;; This function is called by:
 15245 ;;		_Flash_Memory_Initialization
 15246 ;;		_setRF_DimmerLights
 15247 ;; This function uses a non-reentrant model
 15248 ;;
 15249                           
 15250                           
 15251                           ;psect for function _setPercentValue
 15252  1190                     _setPercentValue:	
 15253                           
 15254                           ;incstack = 0
 15255                           ; Regs used in _setPercentValue: [wreg+status,2+status,0+pclath+cstack]
 15256                           ;setPercentValue@value stored from wreg
 15257  1190  0020               	movlb	0	; select bank0
 15258  1191  00D9               	movwf	setPercentValue@value
 15259                           
 15260                           ;Dimmer_B1.c: 508: float i=((char)((100-20)*1.5))-((char)((100-55)*1.5));
 15261  1192  3000               	movlw	0
 15262  1193  00DA               	movwf	setPercentValue@i
 15263  1194  3054               	movlw	84
 15264  1195  00DB               	movwf	setPercentValue@i+1
 15265  1196  3042               	movlw	66
 15266  1197  00DC               	movwf	setPercentValue@i+2
 15267                           
 15268                           ;Dimmer_B1.c: 509: i/=100;
 15269  1198  3000               	movlw	0
 15270  1199  00AE               	movwf	___ftdiv@f2
 15271  119A  30C8               	movlw	200
 15272  119B  00AF               	movwf	___ftdiv@f2+1
 15273  119C  3042               	movlw	66
 15274  119D  00B0               	movwf	___ftdiv@f2+2
 15275  119E  085A               	movf	setPercentValue@i,w
 15276  119F  00B1               	movwf	___ftdiv@f1
 15277  11A0  085B               	movf	setPercentValue@i+1,w
 15278  11A1  00B2               	movwf	___ftdiv@f1+1
 15279  11A2  085C               	movf	setPercentValue@i+2,w
 15280  11A3  00B3               	movwf	___ftdiv@f1+2
 15281  11A4  318C  24C4  3191   	fcall	___ftdiv
 15282  11A7  0020               	movlb	0	; select bank0
 15283  11A8  082E               	movf	?___ftdiv,w
 15284  11A9  00DA               	movwf	setPercentValue@i
 15285  11AA  082F               	movf	?___ftdiv+1,w
 15286  11AB  00DB               	movwf	setPercentValue@i+1
 15287  11AC  0830               	movf	?___ftdiv+2,w
 15288  11AD  00DC               	movwf	setPercentValue@i+2
 15289                           
 15290                           ;Dimmer_B1.c: 510: return (100-(char)((value-((char)((100-55)*1.5)))/i));
 15291  11AE  0859               	movf	setPercentValue@value,w
 15292  11AF  3EBD               	addlw	189
 15293  11B0  00A8               	movwf	___awtoft@c
 15294  11B1  30FF               	movlw	255
 15295  11B2  1803               	skipnc
 15296  11B3  3000               	movlw	0
 15297  11B4  00A9               	movwf	___awtoft@c+1
 15298  11B5  319C  24D0  3191   	fcall	___awtoft
 15299  11B8  0020               	movlb	0	; select bank0
 15300  11B9  0828               	movf	?___awtoft,w
 15301  11BA  00B1               	movwf	___ftdiv@f1
 15302  11BB  0829               	movf	?___awtoft+1,w
 15303  11BC  00B2               	movwf	___ftdiv@f1+1
 15304  11BD  082A               	movf	?___awtoft+2,w
 15305  11BE  00B3               	movwf	___ftdiv@f1+2
 15306  11BF  085A               	movf	setPercentValue@i,w
 15307  11C0  00AE               	movwf	___ftdiv@f2
 15308  11C1  085B               	movf	setPercentValue@i+1,w
 15309  11C2  00AF               	movwf	___ftdiv@f2+1
 15310  11C3  085C               	movf	setPercentValue@i+2,w
 15311  11C4  00B0               	movwf	___ftdiv@f2+2
 15312  11C5  318C  24C4  3191   	fcall	___ftdiv
 15313  11C8  0020               	movlb	0	; select bank0
 15314  11C9  082E               	movf	?___ftdiv,w
 15315  11CA  00CB               	movwf	___fttol@f1
 15316  11CB  082F               	movf	?___ftdiv+1,w
 15317  11CC  00CC               	movwf	___fttol@f1+1
 15318  11CD  0830               	movf	?___ftdiv+2,w
 15319  11CE  00CD               	movwf	___fttol@f1+2
 15320  11CF  3189  215E         	fcall	___fttol
 15321  11D1  0020               	movlb	0	; select bank0
 15322  11D2  034B               	decf	?___fttol,w
 15323  11D3  3AFF               	xorlw	255
 15324  11D4  3E64               	addlw	100
 15325  11D5  0008               	return
 15326  11D6                     __end_of_setPercentValue:	
 15327                           
 15328                           	psect	text95
 15329  095E                     __ptext95:	
 15330 ;; *************** function ___fttol *****************
 15331 ;; Defined at:
 15332 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\fttol.c"
 15333 ;; Parameters:    Size  Location     Type
 15334 ;;  f1              3   43[BANK0 ] float 
 15335 ;; Auto vars:     Size  Location     Type
 15336 ;;  lval            4   52[BANK0 ] unsigned long 
 15337 ;;  exp1            1   56[BANK0 ] unsigned char 
 15338 ;;  sign1           1   51[BANK0 ] unsigned char 
 15339 ;; Return value:  Size  Location     Type
 15340 ;;                  4   43[BANK0 ] long 
 15341 ;; Registers used:
 15342 ;;		wreg, status,2, status,0
 15343 ;; Tracked objects:
 15344 ;;		On entry : 0/0
 15345 ;;		On exit  : 0/0
 15346 ;;		Unchanged: 0/0
 15347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15348 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15349 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15350 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15351 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15352 ;;Total ram usage:       14 bytes
 15353 ;; Hardware stack levels used:    1
 15354 ;; Hardware stack levels required when called:    4
 15355 ;; This function calls:
 15356 ;;		Nothing
 15357 ;; This function is called by:
 15358 ;;		_getPercentValue
 15359 ;;		_setPercentValue
 15360 ;; This function uses a non-reentrant model
 15361 ;;
 15362                           
 15363                           
 15364                           ;psect for function ___fttol
 15365  095E                     ___fttol:	
 15366                           
 15367                           ;incstack = 0
 15368                           ; Regs used in ___fttol: [wreg+status,2+status,0]
 15369  095E  0020               	movlb	0	; select bank0
 15370  095F  084B               	movf	___fttol@f1,w
 15371  0960  00CF               	movwf	??___fttol
 15372  0961  084C               	movf	___fttol@f1+1,w
 15373  0962  00D0               	movwf	??___fttol+1
 15374  0963  084D               	movf	___fttol@f1+2,w
 15375  0964  00D1               	movwf	??___fttol+2
 15376  0965  1003               	clrc
 15377  0966  0D50               	rlf	??___fttol+1,w
 15378  0967  0D51               	rlf	??___fttol+2,w
 15379  0968  00D2               	movwf	??___fttol+3
 15380  0969  0852               	movf	??___fttol+3,w
 15381  096A  00D8               	movwf	___fttol@exp1
 15382  096B  08D8               	movf	___fttol@exp1,f
 15383  096C  1D03               	skipz
 15384  096D  2977               	goto	l8132
 15385  096E  3000               	movlw	0
 15386  096F  00CE               	movwf	?___fttol+3
 15387  0970  3000               	movlw	0
 15388  0971  00CD               	movwf	?___fttol+2
 15389  0972  3000               	movlw	0
 15390  0973  00CC               	movwf	?___fttol+1
 15391  0974  3000               	movlw	0
 15392  0975  00CB               	movwf	?___fttol
 15393  0976  0008               	return
 15394  0977                     l8132:	
 15395  0977  084B               	movf	___fttol@f1,w
 15396  0978  00CF               	movwf	??___fttol
 15397  0979  084C               	movf	___fttol@f1+1,w
 15398  097A  00D0               	movwf	??___fttol+1
 15399  097B  084D               	movf	___fttol@f1+2,w
 15400  097C  00D1               	movwf	??___fttol+2
 15401  097D  3017               	movlw	23
 15402  097E                     u7855:	
 15403  097E  36D1               	lsrf	??___fttol+2,f
 15404  097F  0CD0               	rrf	??___fttol+1,f
 15405  0980  0CCF               	rrf	??___fttol,f
 15406  0981  0B89               	decfsz	9,f
 15407  0982  297E               	goto	u7855
 15408  0983  084F               	movf	??___fttol,w
 15409  0984  00D2               	movwf	??___fttol+3
 15410  0985  0852               	movf	??___fttol+3,w
 15411  0986  00D3               	movwf	___fttol@sign1
 15412  0987  17CC               	bsf	___fttol@f1+1,7
 15413  0988  30FF               	movlw	255
 15414  0989  05CB               	andwf	___fttol@f1,f
 15415  098A  30FF               	movlw	255
 15416  098B  05CC               	andwf	___fttol@f1+1,f
 15417  098C  3000               	movlw	0
 15418  098D  05CD               	andwf	___fttol@f1+2,f
 15419  098E  084B               	movf	___fttol@f1,w
 15420  098F  00D4               	movwf	___fttol@lval
 15421  0990  084C               	movf	___fttol@f1+1,w
 15422  0991  00D5               	movwf	___fttol@lval+1
 15423  0992  084D               	movf	___fttol@f1+2,w
 15424  0993  00D6               	movwf	___fttol@lval+2
 15425  0994  01D7               	clrf	___fttol@lval+3
 15426  0995  308E               	movlw	142
 15427  0996  02D8               	subwf	___fttol@exp1,f
 15428  0997  1FD8               	btfss	___fttol@exp1,7
 15429  0998  29B5               	goto	l8152
 15430  0999  0858               	movf	___fttol@exp1,w
 15431  099A  3A80               	xorlw	128
 15432  099B  3E8F               	addlw	143
 15433  099C  1803               	skipnc
 15434  099D  29A7               	goto	l8150
 15435  099E  3000               	movlw	0
 15436  099F  00CE               	movwf	?___fttol+3
 15437  09A0  3000               	movlw	0
 15438  09A1  00CD               	movwf	?___fttol+2
 15439  09A2  3000               	movlw	0
 15440  09A3  00CC               	movwf	?___fttol+1
 15441  09A4  3000               	movlw	0
 15442  09A5  00CB               	movwf	?___fttol
 15443  09A6  0008               	return
 15444  09A7                     l8150:	
 15445  09A7  3001               	movlw	1
 15446  09A8                     u7885:	
 15447  09A8  36D7               	lsrf	___fttol@lval+3,f
 15448  09A9  0CD6               	rrf	___fttol@lval+2,f
 15449  09AA  0CD5               	rrf	___fttol@lval+1,f
 15450  09AB  0CD4               	rrf	___fttol@lval,f
 15451  09AC  0B89               	decfsz	9,f
 15452  09AD  29A8               	goto	u7885
 15453  09AE  3001               	movlw	1
 15454  09AF  00CF               	movwf	??___fttol
 15455  09B0  084F               	movf	??___fttol,w
 15456  09B1  07D8               	addwf	___fttol@exp1,f
 15457  09B2  1903               	btfsc	3,2
 15458  09B3  29CE               	goto	l8162
 15459  09B4  29A7               	goto	l8150
 15460  09B5                     l8152:	
 15461  09B5  3018               	movlw	24
 15462  09B6  0258               	subwf	___fttol@exp1,w
 15463  09B7  1C03               	skipc
 15464  09B8  29CB               	goto	l8160
 15465  09B9  3000               	movlw	0
 15466  09BA  00CE               	movwf	?___fttol+3
 15467  09BB  3000               	movlw	0
 15468  09BC  00CD               	movwf	?___fttol+2
 15469  09BD  3000               	movlw	0
 15470  09BE  00CC               	movwf	?___fttol+1
 15471  09BF  3000               	movlw	0
 15472  09C0  00CB               	movwf	?___fttol
 15473  09C1  0008               	return
 15474  09C2                     l8158:	
 15475  09C2  3001               	movlw	1
 15476  09C3                     u7915:	
 15477  09C3  35D4               	lslf	___fttol@lval,f
 15478  09C4  0DD5               	rlf	___fttol@lval+1,f
 15479  09C5  0DD6               	rlf	___fttol@lval+2,f
 15480  09C6  0DD7               	rlf	___fttol@lval+3,f
 15481  09C7  0B89               	decfsz	9,f
 15482  09C8  29C3               	goto	u7915
 15483  09C9  3001               	movlw	1
 15484  09CA  02D8               	subwf	___fttol@exp1,f
 15485  09CB                     l8160:	
 15486  09CB  08D8               	movf	___fttol@exp1,f
 15487  09CC  1D03               	skipz
 15488  09CD  29C2               	goto	l8158
 15489  09CE                     l8162:	
 15490  09CE  0853               	movf	___fttol@sign1,w
 15491  09CF  1903               	btfsc	3,2
 15492  09D0  29DC               	goto	l8166
 15493  09D1  09D4               	comf	___fttol@lval,f
 15494  09D2  09D5               	comf	___fttol@lval+1,f
 15495  09D3  09D6               	comf	___fttol@lval+2,f
 15496  09D4  09D7               	comf	___fttol@lval+3,f
 15497  09D5  0AD4               	incf	___fttol@lval,f
 15498  09D6  1903               	skipnz
 15499  09D7  0AD5               	incf	___fttol@lval+1,f
 15500  09D8  1903               	skipnz
 15501  09D9  0AD6               	incf	___fttol@lval+2,f
 15502  09DA  1903               	skipnz
 15503  09DB  0AD7               	incf	___fttol@lval+3,f
 15504  09DC                     l8166:	
 15505  09DC  0857               	movf	___fttol@lval+3,w
 15506  09DD  00CE               	movwf	?___fttol+3
 15507  09DE  0856               	movf	___fttol@lval+2,w
 15508  09DF  00CD               	movwf	?___fttol+2
 15509  09E0  0855               	movf	___fttol@lval+1,w
 15510  09E1  00CC               	movwf	?___fttol+1
 15511  09E2  0854               	movf	___fttol@lval,w
 15512  09E3  00CB               	movwf	?___fttol
 15513  09E4  0008               	return
 15514  09E5                     __end_of___fttol:	
 15515                           
 15516                           	psect	text96
 15517  0CC4                     __ptext96:	
 15518 ;; *************** function ___ftdiv *****************
 15519 ;; Defined at:
 15520 ;;		line 49 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic\ftdiv.c"
 15521 ;; Parameters:    Size  Location     Type
 15522 ;;  f2              3   14[BANK0 ] float 
 15523 ;;  f1              3   17[BANK0 ] float 
 15524 ;; Auto vars:     Size  Location     Type
 15525 ;;  f3              3   25[BANK0 ] float 
 15526 ;;  sign            1   29[BANK0 ] unsigned char 
 15527 ;;  exp             1   28[BANK0 ] unsigned char 
 15528 ;;  cntr            1   24[BANK0 ] unsigned char 
 15529 ;; Return value:  Size  Location     Type
 15530 ;;                  3   14[BANK0 ] float 
 15531 ;; Registers used:
 15532 ;;		wreg, status,2, status,0, pclath, cstack
 15533 ;; Tracked objects:
 15534 ;;		On entry : 0/0
 15535 ;;		On exit  : 0/0
 15536 ;;		Unchanged: 0/0
 15537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15538 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15539 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15540 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15541 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15542 ;;Total ram usage:       16 bytes
 15543 ;; Hardware stack levels used:    1
 15544 ;; Hardware stack levels required when called:    5
 15545 ;; This function calls:
 15546 ;;		___ftpack
 15547 ;; This function is called by:
 15548 ;;		_getPercentValue
 15549 ;;		_setPercentValue
 15550 ;; This function uses a non-reentrant model
 15551 ;;
 15552                           
 15553                           
 15554                           ;psect for function ___ftdiv
 15555  0CC4                     ___ftdiv:	
 15556                           
 15557                           ;incstack = 0
 15558                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
 15559  0CC4  0020               	movlb	0	; select bank0
 15560  0CC5  0831               	movf	___ftdiv@f1,w
 15561  0CC6  00B4               	movwf	??___ftdiv
 15562  0CC7  0832               	movf	___ftdiv@f1+1,w
 15563  0CC8  00B5               	movwf	??___ftdiv+1
 15564  0CC9  0833               	movf	___ftdiv@f1+2,w
 15565  0CCA  00B6               	movwf	??___ftdiv+2
 15566  0CCB  1003               	clrc
 15567  0CCC  0D35               	rlf	??___ftdiv+1,w
 15568  0CCD  0D36               	rlf	??___ftdiv+2,w
 15569  0CCE  00B7               	movwf	??___ftdiv+3
 15570  0CCF  0837               	movf	??___ftdiv+3,w
 15571  0CD0  00BC               	movwf	___ftdiv@exp
 15572  0CD1  08BC               	movf	___ftdiv@exp,f
 15573  0CD2  1D03               	skipz
 15574  0CD3  2CDB               	goto	l8040
 15575  0CD4  3000               	movlw	0
 15576  0CD5  00AE               	movwf	?___ftdiv
 15577  0CD6  3000               	movlw	0
 15578  0CD7  00AF               	movwf	?___ftdiv+1
 15579  0CD8  3000               	movlw	0
 15580  0CD9  00B0               	movwf	?___ftdiv+2
 15581  0CDA  0008               	return
 15582  0CDB                     l8040:	
 15583  0CDB  082E               	movf	___ftdiv@f2,w
 15584  0CDC  00B4               	movwf	??___ftdiv
 15585  0CDD  082F               	movf	___ftdiv@f2+1,w
 15586  0CDE  00B5               	movwf	??___ftdiv+1
 15587  0CDF  0830               	movf	___ftdiv@f2+2,w
 15588  0CE0  00B6               	movwf	??___ftdiv+2
 15589  0CE1  1003               	clrc
 15590  0CE2  0D35               	rlf	??___ftdiv+1,w
 15591  0CE3  0D36               	rlf	??___ftdiv+2,w
 15592  0CE4  00B7               	movwf	??___ftdiv+3
 15593  0CE5  0837               	movf	??___ftdiv+3,w
 15594  0CE6  00BD               	movwf	___ftdiv@sign
 15595  0CE7  08BD               	movf	___ftdiv@sign,f
 15596  0CE8  1D03               	skipz
 15597  0CE9  2CF1               	goto	l8046
 15598  0CEA  3000               	movlw	0
 15599  0CEB  00AE               	movwf	?___ftdiv
 15600  0CEC  3000               	movlw	0
 15601  0CED  00AF               	movwf	?___ftdiv+1
 15602  0CEE  3000               	movlw	0
 15603  0CEF  00B0               	movwf	?___ftdiv+2
 15604  0CF0  0008               	return
 15605  0CF1                     l8046:	
 15606  0CF1  3000               	movlw	0
 15607  0CF2  00B9               	movwf	___ftdiv@f3
 15608  0CF3  3000               	movlw	0
 15609  0CF4  00BA               	movwf	___ftdiv@f3+1
 15610  0CF5  3000               	movlw	0
 15611  0CF6  00BB               	movwf	___ftdiv@f3+2
 15612  0CF7  3089               	movlw	137
 15613  0CF8  073D               	addwf	___ftdiv@sign,w
 15614  0CF9  00B4               	movwf	??___ftdiv
 15615  0CFA  0834               	movf	??___ftdiv,w
 15616  0CFB  02BC               	subwf	___ftdiv@exp,f
 15617  0CFC  0831               	movf	___ftdiv@f1,w
 15618  0CFD  00B4               	movwf	??___ftdiv
 15619  0CFE  0832               	movf	___ftdiv@f1+1,w
 15620  0CFF  00B5               	movwf	??___ftdiv+1
 15621  0D00  0833               	movf	___ftdiv@f1+2,w
 15622  0D01  00B6               	movwf	??___ftdiv+2
 15623  0D02  3010               	movlw	16
 15624  0D03                     u7665:	
 15625  0D03  36B6               	lsrf	??___ftdiv+2,f
 15626  0D04  0CB5               	rrf	??___ftdiv+1,f
 15627  0D05  0CB4               	rrf	??___ftdiv,f
 15628  0D06  0B89               	decfsz	9,f
 15629  0D07  2D03               	goto	u7665
 15630  0D08  0834               	movf	??___ftdiv,w
 15631  0D09  00B7               	movwf	??___ftdiv+3
 15632  0D0A  0837               	movf	??___ftdiv+3,w
 15633  0D0B  00BD               	movwf	___ftdiv@sign
 15634  0D0C  082E               	movf	___ftdiv@f2,w
 15635  0D0D  00B4               	movwf	??___ftdiv
 15636  0D0E  082F               	movf	___ftdiv@f2+1,w
 15637  0D0F  00B5               	movwf	??___ftdiv+1
 15638  0D10  0830               	movf	___ftdiv@f2+2,w
 15639  0D11  00B6               	movwf	??___ftdiv+2
 15640  0D12  3010               	movlw	16
 15641  0D13                     u7675:	
 15642  0D13  36B6               	lsrf	??___ftdiv+2,f
 15643  0D14  0CB5               	rrf	??___ftdiv+1,f
 15644  0D15  0CB4               	rrf	??___ftdiv,f
 15645  0D16  0B89               	decfsz	9,f
 15646  0D17  2D13               	goto	u7675
 15647  0D18  0834               	movf	??___ftdiv,w
 15648  0D19  00B7               	movwf	??___ftdiv+3
 15649  0D1A  0837               	movf	??___ftdiv+3,w
 15650  0D1B  06BD               	xorwf	___ftdiv@sign,f
 15651  0D1C  3080               	movlw	128
 15652  0D1D  00B4               	movwf	??___ftdiv
 15653  0D1E  0834               	movf	??___ftdiv,w
 15654  0D1F  05BD               	andwf	___ftdiv@sign,f
 15655  0D20  17B2               	bsf	___ftdiv@f1+1,7
 15656  0D21  30FF               	movlw	255
 15657  0D22  05B1               	andwf	___ftdiv@f1,f
 15658  0D23  30FF               	movlw	255
 15659  0D24  05B2               	andwf	___ftdiv@f1+1,f
 15660  0D25  3000               	movlw	0
 15661  0D26  05B3               	andwf	___ftdiv@f1+2,f
 15662  0D27  17AF               	bsf	___ftdiv@f2+1,7
 15663  0D28  30FF               	movlw	255
 15664  0D29  05AE               	andwf	___ftdiv@f2,f
 15665  0D2A  30FF               	movlw	255
 15666  0D2B  05AF               	andwf	___ftdiv@f2+1,f
 15667  0D2C  3000               	movlw	0
 15668  0D2D  05B0               	andwf	___ftdiv@f2+2,f
 15669  0D2E  3018               	movlw	24
 15670  0D2F  00B4               	movwf	??___ftdiv
 15671  0D30  0834               	movf	??___ftdiv,w
 15672  0D31  00B8               	movwf	___ftdiv@cntr
 15673  0D32                     l8060:	
 15674  0D32  3001               	movlw	1
 15675  0D33                     u7685:	
 15676  0D33  35B9               	lslf	___ftdiv@f3,f
 15677  0D34  0DBA               	rlf	___ftdiv@f3+1,f
 15678  0D35  0DBB               	rlf	___ftdiv@f3+2,f
 15679  0D36  0B89               	decfsz	9,f
 15680  0D37  2D33               	goto	u7685
 15681  0D38  0830               	movf	___ftdiv@f2+2,w
 15682  0D39  0233               	subwf	___ftdiv@f1+2,w
 15683  0D3A  1D03               	skipz
 15684  0D3B  2D42               	goto	u7695
 15685  0D3C  082F               	movf	___ftdiv@f2+1,w
 15686  0D3D  0232               	subwf	___ftdiv@f1+1,w
 15687  0D3E  1D03               	skipz
 15688  0D3F  2D42               	goto	u7695
 15689  0D40  082E               	movf	___ftdiv@f2,w
 15690  0D41  0231               	subwf	___ftdiv@f1,w
 15691  0D42                     u7695:	
 15692  0D42  1C03               	skipc
 15693  0D43  2D4B               	goto	l8068
 15694  0D44  082E               	movf	___ftdiv@f2,w
 15695  0D45  02B1               	subwf	___ftdiv@f1,f
 15696  0D46  082F               	movf	___ftdiv@f2+1,w
 15697  0D47  3BB2               	subwfb	___ftdiv@f1+1,f
 15698  0D48  0830               	movf	___ftdiv@f2+2,w
 15699  0D49  3BB3               	subwfb	___ftdiv@f1+2,f
 15700  0D4A  1439               	bsf	___ftdiv@f3,0
 15701  0D4B                     l8068:	
 15702  0D4B  3001               	movlw	1
 15703  0D4C                     u7705:	
 15704  0D4C  35B1               	lslf	___ftdiv@f1,f
 15705  0D4D  0DB2               	rlf	___ftdiv@f1+1,f
 15706  0D4E  0DB3               	rlf	___ftdiv@f1+2,f
 15707  0D4F  0B89               	decfsz	9,f
 15708  0D50  2D4C               	goto	u7705
 15709  0D51  3001               	movlw	1
 15710  0D52  02B8               	subwf	___ftdiv@cntr,f
 15711  0D53  1D03               	btfss	3,2
 15712  0D54  2D32               	goto	l8060
 15713  0D55  0839               	movf	___ftdiv@f3,w
 15714  0D56  00A0               	movwf	___ftpack@arg
 15715  0D57  083A               	movf	___ftdiv@f3+1,w
 15716  0D58  00A1               	movwf	___ftpack@arg+1
 15717  0D59  083B               	movf	___ftdiv@f3+2,w
 15718  0D5A  00A2               	movwf	___ftpack@arg+2
 15719  0D5B  083C               	movf	___ftdiv@exp,w
 15720  0D5C  00B4               	movwf	??___ftdiv
 15721  0D5D  0834               	movf	??___ftdiv,w
 15722  0D5E  00A3               	movwf	___ftpack@exp
 15723  0D5F  083D               	movf	___ftdiv@sign,w
 15724  0D60  00B5               	movwf	??___ftdiv+1
 15725  0D61  0835               	movf	??___ftdiv+1,w
 15726  0D62  00A4               	movwf	___ftpack@sign
 15727  0D63  3193  23D1         	fcall	___ftpack
 15728  0D65  0020               	movlb	0	; select bank0
 15729  0D66  0820               	movf	?___ftpack,w
 15730  0D67  00AE               	movwf	?___ftdiv
 15731  0D68  0821               	movf	?___ftpack+1,w
 15732  0D69  00AF               	movwf	?___ftdiv+1
 15733  0D6A  0822               	movf	?___ftpack+2,w
 15734  0D6B  00B0               	movwf	?___ftdiv+2
 15735  0D6C  0008               	return
 15736  0D6D                     __end_of___ftdiv:	
 15737                           
 15738                           	psect	text97
 15739  1CD0                     __ptext97:	
 15740 ;; *************** function ___awtoft *****************
 15741 ;; Defined at:
 15742 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\awtoft.c"
 15743 ;; Parameters:    Size  Location     Type
 15744 ;;  c               2    8[BANK0 ] int 
 15745 ;; Auto vars:     Size  Location     Type
 15746 ;;  sign            1   13[BANK0 ] unsigned char 
 15747 ;; Return value:  Size  Location     Type
 15748 ;;                  3    8[BANK0 ] float 
 15749 ;; Registers used:
 15750 ;;		wreg, status,2, status,0, pclath, cstack
 15751 ;; Tracked objects:
 15752 ;;		On entry : 0/0
 15753 ;;		On exit  : 0/0
 15754 ;;		Unchanged: 0/0
 15755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15756 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15757 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15758 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15759 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15760 ;;Total ram usage:        6 bytes
 15761 ;; Hardware stack levels used:    1
 15762 ;; Hardware stack levels required when called:    5
 15763 ;; This function calls:
 15764 ;;		___ftpack
 15765 ;; This function is called by:
 15766 ;;		_getPercentValue
 15767 ;;		_setPercentValue
 15768 ;; This function uses a non-reentrant model
 15769 ;;
 15770                           
 15771                           
 15772                           ;psect for function ___awtoft
 15773  1CD0                     ___awtoft:	
 15774                           
 15775                           ;incstack = 0
 15776                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
 15777  1CD0  0020               	movlb	0	; select bank0
 15778  1CD1  01AD               	clrf	___awtoft@sign
 15779  1CD2  1FA9               	btfss	___awtoft@c+1,7
 15780  1CD3  2CDB               	goto	l7958
 15781  1CD4  09A8               	comf	___awtoft@c,f
 15782  1CD5  09A9               	comf	___awtoft@c+1,f
 15783  1CD6  0AA8               	incf	___awtoft@c,f
 15784  1CD7  1903               	skipnz
 15785  1CD8  0AA9               	incf	___awtoft@c+1,f
 15786  1CD9  01AD               	clrf	___awtoft@sign
 15787  1CDA  0AAD               	incf	___awtoft@sign,f
 15788  1CDB                     l7958:	
 15789  1CDB  0828               	movf	___awtoft@c,w
 15790  1CDC  00A0               	movwf	___ftpack@arg
 15791  1CDD  0829               	movf	___awtoft@c+1,w
 15792  1CDE  00A1               	movwf	___ftpack@arg+1
 15793  1CDF  01A2               	clrf	___ftpack@arg+2
 15794  1CE0  308E               	movlw	142
 15795  1CE1  00AB               	movwf	??___awtoft
 15796  1CE2  082B               	movf	??___awtoft,w
 15797  1CE3  00A3               	movwf	___ftpack@exp
 15798  1CE4  082D               	movf	___awtoft@sign,w
 15799  1CE5  00AC               	movwf	??___awtoft+1
 15800  1CE6  082C               	movf	??___awtoft+1,w
 15801  1CE7  00A4               	movwf	___ftpack@sign
 15802  1CE8  3193  23D1         	fcall	___ftpack
 15803  1CEA  0020               	movlb	0	; select bank0
 15804  1CEB  0820               	movf	?___ftpack,w
 15805  1CEC  00A8               	movwf	?___awtoft
 15806  1CED  0821               	movf	?___ftpack+1,w
 15807  1CEE  00A9               	movwf	?___awtoft+1
 15808  1CEF  0822               	movf	?___ftpack+2,w
 15809  1CF0  00AA               	movwf	?___awtoft+2
 15810  1CF1  0008               	return
 15811  1CF2                     __end_of___awtoft:	
 15812                           
 15813                           	psect	text98
 15814  13D1                     __ptext98:	
 15815 ;; *************** function ___ftpack *****************
 15816 ;; Defined at:
 15817 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\float.c"
 15818 ;; Parameters:    Size  Location     Type
 15819 ;;  arg             3    0[BANK0 ] unsigned um
 15820 ;;  exp             1    3[BANK0 ] unsigned char 
 15821 ;;  sign            1    4[BANK0 ] unsigned char 
 15822 ;; Auto vars:     Size  Location     Type
 15823 ;;		None
 15824 ;; Return value:  Size  Location     Type
 15825 ;;                  3    0[BANK0 ] float 
 15826 ;; Registers used:
 15827 ;;		wreg, status,2, status,0
 15828 ;; Tracked objects:
 15829 ;;		On entry : 0/0
 15830 ;;		On exit  : 0/0
 15831 ;;		Unchanged: 0/0
 15832 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15833 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15834 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15835 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15836 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15837 ;;Total ram usage:        8 bytes
 15838 ;; Hardware stack levels used:    1
 15839 ;; Hardware stack levels required when called:    4
 15840 ;; This function calls:
 15841 ;;		Nothing
 15842 ;; This function is called by:
 15843 ;;		___awtoft
 15844 ;;		___ftadd
 15845 ;;		___ftdiv
 15846 ;;		___ftmul
 15847 ;; This function uses a non-reentrant model
 15848 ;;
 15849                           
 15850                           
 15851                           ;psect for function ___ftpack
 15852  13D1                     ___ftpack:	
 15853                           
 15854                           ;incstack = 0
 15855                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
 15856  13D1  0020               	movlb	0	; select bank0
 15857  13D2  0823               	movf	___ftpack@exp,w
 15858  13D3  1903               	btfsc	3,2
 15859  13D4  2BDA               	goto	l7924
 15860  13D5  0822               	movf	___ftpack@arg+2,w
 15861  13D6  0421               	iorwf	___ftpack@arg+1,w
 15862  13D7  0420               	iorwf	___ftpack@arg,w
 15863  13D8  1D03               	skipz
 15864  13D9  2BEB               	goto	l7930
 15865  13DA                     l7924:	
 15866  13DA  3000               	movlw	0
 15867  13DB  00A0               	movwf	?___ftpack
 15868  13DC  3000               	movlw	0
 15869  13DD  00A1               	movwf	?___ftpack+1
 15870  13DE  3000               	movlw	0
 15871  13DF  00A2               	movwf	?___ftpack+2
 15872  13E0  0008               	return
 15873  13E1                     l7928:	
 15874  13E1  3001               	movlw	1
 15875  13E2  00A5               	movwf	??___ftpack
 15876  13E3  0825               	movf	??___ftpack,w
 15877  13E4  07A3               	addwf	___ftpack@exp,f
 15878  13E5  3001               	movlw	1
 15879  13E6                     u7315:	
 15880  13E6  36A2               	lsrf	___ftpack@arg+2,f
 15881  13E7  0CA1               	rrf	___ftpack@arg+1,f
 15882  13E8  0CA0               	rrf	___ftpack@arg,f
 15883  13E9  0B89               	decfsz	9,f
 15884  13EA  2BE6               	goto	u7315
 15885  13EB                     l7930:	
 15886  13EB  30FE               	movlw	254
 15887  13EC  0522               	andwf	___ftpack@arg+2,w
 15888  13ED  1903               	btfsc	3,2
 15889  13EE  2C04               	goto	l3228
 15890  13EF  2BE1               	goto	l7928
 15891  13F0                     l7932:	
 15892  13F0  3001               	movlw	1
 15893  13F1  00A5               	movwf	??___ftpack
 15894  13F2  0825               	movf	??___ftpack,w
 15895  13F3  07A3               	addwf	___ftpack@exp,f
 15896  13F4  3001               	movlw	1
 15897  13F5  07A0               	addwf	___ftpack@arg,f
 15898  13F6  3000               	movlw	0
 15899  13F7  1803               	skipnc
 15900  13F8  3001               	movlw	1
 15901  13F9  07A1               	addwf	___ftpack@arg+1,f
 15902  13FA  3000               	movlw	0
 15903  13FB  1803               	skipnc
 15904  13FC  3001               	movlw	1
 15905  13FD  07A2               	addwf	___ftpack@arg+2,f
 15906  13FE  3001               	movlw	1
 15907  13FF                     u7335:	
 15908  13FF  36A2               	lsrf	___ftpack@arg+2,f
 15909  1400  0CA1               	rrf	___ftpack@arg+1,f
 15910  1401  0CA0               	rrf	___ftpack@arg,f
 15911  1402  0B89               	decfsz	9,f
 15912  1403  2BFF               	goto	u7335
 15913  1404                     l3228:	
 15914  1404  30FF               	movlw	255
 15915  1405  0522               	andwf	___ftpack@arg+2,w
 15916  1406  1903               	btfsc	3,2
 15917  1407  2C11               	goto	l7940
 15918  1408  2BF0               	goto	l7932
 15919  1409                     l7938:	
 15920  1409  3001               	movlw	1
 15921  140A  02A3               	subwf	___ftpack@exp,f
 15922  140B  3001               	movlw	1
 15923  140C                     u7355:	
 15924  140C  35A0               	lslf	___ftpack@arg,f
 15925  140D  0DA1               	rlf	___ftpack@arg+1,f
 15926  140E  0DA2               	rlf	___ftpack@arg+2,f
 15927  140F  0B89               	decfsz	9,f
 15928  1410  2C0C               	goto	u7355
 15929  1411                     l7940:	
 15930  1411  1FA1               	btfss	___ftpack@arg+1,7
 15931  1412  2C09               	goto	l7938
 15932  1413  1823               	btfsc	___ftpack@exp,0
 15933  1414  2C1B               	goto	l3234
 15934  1415  30FF               	movlw	255
 15935  1416  05A0               	andwf	___ftpack@arg,f
 15936  1417  307F               	movlw	127
 15937  1418  05A1               	andwf	___ftpack@arg+1,f
 15938  1419  30FF               	movlw	255
 15939  141A  05A2               	andwf	___ftpack@arg+2,f
 15940  141B                     l3234:	
 15941  141B  1003               	clrc
 15942  141C  0CA3               	rrf	___ftpack@exp,f
 15943  141D  0823               	movf	___ftpack@exp,w
 15944  141E  00A5               	movwf	??___ftpack
 15945  141F  01A6               	clrf	??___ftpack+1
 15946  1420  01A7               	clrf	??___ftpack+2
 15947  1421  3010               	movlw	16
 15948  1422                     u7385:	
 15949  1422  35A5               	lslf	??___ftpack,f
 15950  1423  0DA6               	rlf	??___ftpack+1,f
 15951  1424  0DA7               	rlf	??___ftpack+2,f
 15952  1425  0B89               	decfsz	9,f
 15953  1426  2C22               	goto	u7385
 15954  1427  0825               	movf	??___ftpack,w
 15955  1428  04A0               	iorwf	___ftpack@arg,f
 15956  1429  0826               	movf	??___ftpack+1,w
 15957  142A  04A1               	iorwf	___ftpack@arg+1,f
 15958  142B  0827               	movf	??___ftpack+2,w
 15959  142C  04A2               	iorwf	___ftpack@arg+2,f
 15960  142D  0824               	movf	___ftpack@sign,w
 15961  142E  1903               	btfsc	3,2
 15962  142F  0008               	return
 15963  1430  17A2               	bsf	___ftpack@arg+2,7
 15964  1431  0008               	return
 15965  1432                     __end_of___ftpack:	
 15966                           
 15967                           	psect	text99
 15968  1A3D                     __ptext99:	
 15969 ;; *************** function _setRFSW_Status *****************
 15970 ;; Defined at:
 15971 ;;		line 425 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
 15972 ;; Parameters:    Size  Location     Type
 15973 ;;  sw              1    wreg     unsigned char 
 15974 ;;  command         1    2[BANK0 ] unsigned char 
 15975 ;; Auto vars:     Size  Location     Type
 15976 ;;  sw              1    3[BANK0 ] unsigned char 
 15977 ;; Return value:  Size  Location     Type
 15978 ;;		None               void
 15979 ;; Registers used:
 15980 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15981 ;; Tracked objects:
 15982 ;;		On entry : 0/0
 15983 ;;		On exit  : 0/0
 15984 ;;		Unchanged: 0/0
 15985 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15986 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15987 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15989 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15990 ;;Total ram usage:        2 bytes
 15991 ;; Hardware stack levels used:    1
 15992 ;; Hardware stack levels required when called:    5
 15993 ;; This function calls:
 15994 ;;		_RfSWPointSelect
 15995 ;; This function is called by:
 15996 ;;		_DlyOff_Main
 15997 ;;		_setDimmerLights_ERROR
 15998 ;;		_setControl_Lights_Table
 15999 ;;		_Sw_DimmerOnFunc
 16000 ;;		_Sw_DimmerAdjFunc
 16001 ;; This function uses a non-reentrant model
 16002 ;;
 16003                           
 16004                           
 16005                           ;psect for function _setRFSW_Status
 16006  1A3D                     _setRFSW_Status:	
 16007                           
 16008                           ;incstack = 0
 16009                           ; Regs used in _setRFSW_Status: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 16010                           ;setRFSW_Status@sw stored from wreg
 16011  1A3D  0020               	movlb	0	; select bank0
 16012  1A3E  00A3               	movwf	setRFSW_Status@sw
 16013                           
 16014                           ;RF_Control_B1.c: 427: RfSWPointSelect(sw);
 16015  1A3F  0823               	movf	setRFSW_Status@sw,w
 16016  1A40  319B  2330         	fcall	_RfSWPointSelect
 16017                           
 16018                           ;RF_Control_B1.c: 428: RFSW->Status=command;
 16019  1A42  0021               	movlb	1	; select bank1
 16020  1A43  083B               	movf	_RFSW^(0+128),w
 16021  1A44  0086               	movwf	6
 16022  1A45  0187               	clrf	7
 16023  1A46  0020               	movlb	0	; select bank0
 16024  1A47  0822               	movf	setRFSW_Status@command,w
 16025  1A48  1001               	bcf	1,0
 16026  1A49  1D03               	skipz
 16027  1A4A  1401               	bsf	1,0
 16028  1A4B  0008               	return
 16029  1A4C                     __end_of_setRFSW_Status:	
 16030                           
 16031                           	psect	text100
 16032  1B30                     __ptext100:	
 16033 ;; *************** function _RfSWPointSelect *****************
 16034 ;; Defined at:
 16035 ;;		line 347 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
 16036 ;; Parameters:    Size  Location     Type
 16037 ;;  sw              1    wreg     unsigned char 
 16038 ;; Auto vars:     Size  Location     Type
 16039 ;;  sw              1    1[BANK0 ] unsigned char 
 16040 ;; Return value:  Size  Location     Type
 16041 ;;		None               void
 16042 ;; Registers used:
 16043 ;;		wreg
 16044 ;; Tracked objects:
 16045 ;;		On entry : 0/0
 16046 ;;		On exit  : 0/0
 16047 ;;		Unchanged: 0/0
 16048 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16050 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16051 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16052 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16053 ;;Total ram usage:        2 bytes
 16054 ;; Hardware stack levels used:    1
 16055 ;; Hardware stack levels required when called:    4
 16056 ;; This function calls:
 16057 ;;		Nothing
 16058 ;; This function is called by:
 16059 ;;		_setRFSW_Control
 16060 ;;		_setRFSW_AdjControl
 16061 ;;		_setRFSW_Status
 16062 ;; This function uses a non-reentrant model
 16063 ;;
 16064                           
 16065                           
 16066                           ;psect for function _RfSWPointSelect
 16067  1B30                     _RfSWPointSelect:	
 16068                           
 16069                           ;incstack = 0
 16070                           ; Regs used in _RfSWPointSelect: [wreg]
 16071                           ;RfSWPointSelect@sw stored from wreg
 16072  1B30  0020               	movlb	0	; select bank0
 16073  1B31  00A1               	movwf	RfSWPointSelect@sw
 16074                           
 16075                           ;RF_Control_B1.c: 350: if(sw == 1)
 16076  1B32  0821               	movf	RfSWPointSelect@sw,w
 16077  1B33  3A01               	xorlw	1
 16078  1B34  1D03               	skipz
 16079  1B35  2B3B               	goto	l2562
 16080                           
 16081                           ;RF_Control_B1.c: 351: {
 16082                           ;RF_Control_B1.c: 352: RFSW=&RFSW1;
 16083  1B36  30E8               	movlw	_RFSW1& (0+255)
 16084  1B37  00A0               	movwf	??_RfSWPointSelect
 16085  1B38  0820               	movf	??_RfSWPointSelect,w
 16086  1B39  0021               	movlb	1	; select bank1
 16087  1B3A  00BB               	movwf	_RFSW^(0+128)
 16088  1B3B                     l2562:	
 16089                           
 16090                           ;RF_Control_B1.c: 353: }
 16091                           ;RF_Control_B1.c: 356: if(sw == 2)
 16092  1B3B  0020               	movlb	0	; select bank0
 16093  1B3C  0821               	movf	RfSWPointSelect@sw,w
 16094  1B3D  3A02               	xorlw	2
 16095  1B3E  1D03               	skipz
 16096  1B3F  0008               	return
 16097                           
 16098                           ;RF_Control_B1.c: 357: {
 16099                           ;RF_Control_B1.c: 358: RFSW=&RFSW2;
 16100  1B40  30E9               	movlw	_RFSW2& (0+255)
 16101  1B41  00A0               	movwf	??_RfSWPointSelect
 16102  1B42  0820               	movf	??_RfSWPointSelect,w
 16103  1B43  0021               	movlb	1	; select bank1
 16104  1B44  00BB               	movwf	_RFSW^(0+128)
 16105  1B45  0008               	return
 16106  1B46                     __end_of_RfSWPointSelect:	
 16107                           
 16108                           	psect	text101
 16109  1A7B                     __ptext101:	
 16110 ;; *************** function _setDimmerLights_Trigger *****************
 16111 ;; Defined at:
 16112 ;;		line 445 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 16113 ;; Parameters:    Size  Location     Type
 16114 ;;  lights          1    wreg     unsigned char 
 16115 ;;  command         1    2[BANK0 ] unsigned char 
 16116 ;; Auto vars:     Size  Location     Type
 16117 ;;  lights          1    3[BANK0 ] unsigned char 
 16118 ;; Return value:  Size  Location     Type
 16119 ;;		None               void
 16120 ;; Registers used:
 16121 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16122 ;; Tracked objects:
 16123 ;;		On entry : 0/0
 16124 ;;		On exit  : 0/0
 16125 ;;		Unchanged: 0/0
 16126 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16127 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16128 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16130 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16131 ;;Total ram usage:        2 bytes
 16132 ;; Hardware stack levels used:    1
 16133 ;; Hardware stack levels required when called:    5
 16134 ;; This function calls:
 16135 ;;		_DimmerLightsPointSelect
 16136 ;; This function is called by:
 16137 ;;		_DlyOff_Main
 16138 ;;		_setRFSW_Control
 16139 ;;		_Sw_DimmerOnFunc
 16140 ;;		_Sw_DimmerOffFunc
 16141 ;; This function uses a non-reentrant model
 16142 ;;
 16143                           
 16144                           
 16145                           ;psect for function _setDimmerLights_Trigger
 16146  1A7B                     _setDimmerLights_Trigger:	
 16147                           
 16148                           ;incstack = 0
 16149                           ; Regs used in _setDimmerLights_Trigger: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 16150                           ;setDimmerLights_Trigger@lights stored from wreg
 16151  1A7B  0020               	movlb	0	; select bank0
 16152  1A7C  00A3               	movwf	setDimmerLights_Trigger@lights
 16153                           
 16154                           ;Dimmer_B1.c: 447: DimmerLightsPointSelect(lights);
 16155  1A7D  0823               	movf	setDimmerLights_Trigger@lights,w
 16156  1A7E  319A  22CC         	fcall	_DimmerLightsPointSelect
 16157                           
 16158                           ;Dimmer_B1.c: 448: DimmerLights->Trigger=command;
 16159  1A80  0020               	movlb	0	; select bank0
 16160  1A81  086A               	movf	_DimmerLights,w
 16161  1A82  3E09               	addlw	9
 16162  1A83  0086               	movwf	6
 16163  1A84  3001               	movlw	1	; select bank2/3
 16164  1A85  0087               	movwf	7
 16165  1A86  0822               	movf	setDimmerLights_Trigger@command,w
 16166  1A87  1081               	bcf	1,1
 16167  1A88  1D03               	skipz
 16168  1A89  1481               	bsf	1,1
 16169  1A8A  0008               	return
 16170  1A8B                     __end_of_setDimmerLights_Trigger:	
 16171                           
 16172                           	psect	text102
 16173  1A6B                     __ptext102:	
 16174 ;; *************** function _setDimmerLights_Switch *****************
 16175 ;; Defined at:
 16176 ;;		line 435 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 16177 ;; Parameters:    Size  Location     Type
 16178 ;;  lights          1    wreg     unsigned char 
 16179 ;;  command         1    2[BANK0 ] unsigned char 
 16180 ;; Auto vars:     Size  Location     Type
 16181 ;;  lights          1    3[BANK0 ] unsigned char 
 16182 ;; Return value:  Size  Location     Type
 16183 ;;		None               void
 16184 ;; Registers used:
 16185 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16186 ;; Tracked objects:
 16187 ;;		On entry : 0/0
 16188 ;;		On exit  : 0/0
 16189 ;;		Unchanged: 0/0
 16190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16191 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16192 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16194 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16195 ;;Total ram usage:        2 bytes
 16196 ;; Hardware stack levels used:    1
 16197 ;; Hardware stack levels required when called:    5
 16198 ;; This function calls:
 16199 ;;		_DimmerLightsPointSelect
 16200 ;; This function is called by:
 16201 ;;		_DlyOff_Main
 16202 ;;		_setRFSW_Control
 16203 ;;		_Sw_DimmerOnFunc
 16204 ;;		_Sw_DimmerOffFunc
 16205 ;; This function uses a non-reentrant model
 16206 ;;
 16207                           
 16208                           
 16209                           ;psect for function _setDimmerLights_Switch
 16210  1A6B                     _setDimmerLights_Switch:	
 16211                           
 16212                           ;incstack = 0
 16213                           ; Regs used in _setDimmerLights_Switch: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
 16214                           ;setDimmerLights_Switch@lights stored from wreg
 16215  1A6B  0020               	movlb	0	; select bank0
 16216  1A6C  00A3               	movwf	setDimmerLights_Switch@lights
 16217                           
 16218                           ;Dimmer_B1.c: 437: DimmerLightsPointSelect(lights);
 16219  1A6D  0823               	movf	setDimmerLights_Switch@lights,w
 16220  1A6E  319A  22CC         	fcall	_DimmerLightsPointSelect
 16221                           
 16222                           ;Dimmer_B1.c: 438: DimmerLights->Switch=command;
 16223  1A70  0020               	movlb	0	; select bank0
 16224  1A71  086A               	movf	_DimmerLights,w
 16225  1A72  3E09               	addlw	9
 16226  1A73  0086               	movwf	6
 16227  1A74  3001               	movlw	1	; select bank2/3
 16228  1A75  0087               	movwf	7
 16229  1A76  0822               	movf	setDimmerLights_Switch@command,w
 16230  1A77  1001               	bcf	1,0
 16231  1A78  1D03               	skipz
 16232  1A79  1401               	bsf	1,0
 16233  1A7A  0008               	return
 16234  1A7B                     __end_of_setDimmerLights_Switch:	
 16235                           
 16236                           	psect	text103
 16237  1ACC                     __ptext103:	
 16238 ;; *************** function _DimmerLightsPointSelect *****************
 16239 ;; Defined at:
 16240 ;;		line 7 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 16241 ;; Parameters:    Size  Location     Type
 16242 ;;  lights          1    wreg     unsigned char 
 16243 ;; Auto vars:     Size  Location     Type
 16244 ;;  lights          1    1[BANK0 ] unsigned char 
 16245 ;; Return value:  Size  Location     Type
 16246 ;;		None               void
 16247 ;; Registers used:
 16248 ;;		wreg
 16249 ;; Tracked objects:
 16250 ;;		On entry : 0/0
 16251 ;;		On exit  : 0/0
 16252 ;;		Unchanged: 0/0
 16253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16255 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16256 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16257 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16258 ;;Total ram usage:        2 bytes
 16259 ;; Hardware stack levels used:    1
 16260 ;; Hardware stack levels required when called:    4
 16261 ;; This function calls:
 16262 ;;		Nothing
 16263 ;; This function is called by:
 16264 ;;		_setDimmerLights_Initialization
 16265 ;;		_setDimmerLights_Main
 16266 ;;		_setDimmerLights_ERROR
 16267 ;;		_setDimmerLights_TriggerERROR
 16268 ;;		_setDimmerLights
 16269 ;;		_setDimmerLights_Adj
 16270 ;;		_setDimmerLights_AdjRF
 16271 ;;		_setDimmerLights_Switch
 16272 ;;		_setDimmerLights_AdjGo
 16273 ;;		_setDimmerLights_Trigger
 16274 ;;		_setDimmerLights_TriggerAdj
 16275 ;;		_setDimmerLights_GO
 16276 ;;		_setDimmerLights_MaxmumValue
 16277 ;;		_setDimmerLights_Clear
 16278 ;; This function uses a non-reentrant model
 16279 ;;
 16280                           
 16281                           
 16282                           ;psect for function _DimmerLightsPointSelect
 16283  1ACC                     _DimmerLightsPointSelect:	
 16284                           
 16285                           ;incstack = 0
 16286                           ; Regs used in _DimmerLightsPointSelect: [wreg]
 16287                           ;DimmerLightsPointSelect@lights stored from wreg
 16288  1ACC  0020               	movlb	0	; select bank0
 16289  1ACD  00A1               	movwf	DimmerLightsPointSelect@lights
 16290                           
 16291                           ;Dimmer_B1.c: 10: if(lights == 1)
 16292  1ACE  0821               	movf	DimmerLightsPointSelect@lights,w
 16293  1ACF  3A01               	xorlw	1
 16294  1AD0  1D03               	skipz
 16295  1AD1  2AD6               	goto	l847
 16296                           
 16297                           ;Dimmer_B1.c: 11: {
 16298                           ;Dimmer_B1.c: 12: DimmerLights=&DimmerLights1;
 16299  1AD2  3020               	movlw	_DimmerLights1& (0+255)
 16300  1AD3  00A0               	movwf	??_DimmerLightsPointSelect
 16301  1AD4  0820               	movf	??_DimmerLightsPointSelect,w
 16302  1AD5  00EA               	movwf	_DimmerLights
 16303  1AD6                     l847:	
 16304                           
 16305                           ;Dimmer_B1.c: 13: }
 16306                           ;Dimmer_B1.c: 20: if(lights == 2)
 16307  1AD6  0821               	movf	DimmerLightsPointSelect@lights,w
 16308  1AD7  3A02               	xorlw	2
 16309  1AD8  1D03               	skipz
 16310  1AD9  0008               	return
 16311                           
 16312                           ;Dimmer_B1.c: 21: {
 16313                           ;Dimmer_B1.c: 22: DimmerLights=&DimmerLights2;
 16314  1ADA  302E               	movlw	_DimmerLights2& (0+255)
 16315  1ADB  00A0               	movwf	??_DimmerLightsPointSelect
 16316  1ADC  0820               	movf	??_DimmerLightsPointSelect,w
 16317  1ADD  00EA               	movwf	_DimmerLights
 16318  1ADE  0008               	return
 16319  1ADF                     __end_of_DimmerLightsPointSelect:	
 16320                           
 16321                           	psect	text104
 16322  1789                     __ptext104:	
 16323 ;; *************** function _setBuz *****************
 16324 ;; Defined at:
 16325 ;;		line 22 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Buzzer_B1.c"
 16326 ;; Parameters:    Size  Location     Type
 16327 ;;  count           1    wreg     unsigned char 
 16328 ;;  time            2    6[BANK0 ] int 
 16329 ;; Auto vars:     Size  Location     Type
 16330 ;;  count           1    9[BANK0 ] unsigned char 
 16331 ;; Return value:  Size  Location     Type
 16332 ;;		None               void
 16333 ;; Registers used:
 16334 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16335 ;; Tracked objects:
 16336 ;;		On entry : 0/0
 16337 ;;		On exit  : 0/0
 16338 ;;		Unchanged: 0/0
 16339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16340 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16341 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16342 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16343 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16344 ;;Total ram usage:        4 bytes
 16345 ;; Hardware stack levels used:    1
 16346 ;; Hardware stack levels required when called:    5
 16347 ;; This function calls:
 16348 ;;		___wmul
 16349 ;; This function is called by:
 16350 ;;		_DlyOff_Main
 16351 ;;		_setDimmerLights_Main
 16352 ;;		_DimmerLights_Exceptions
 16353 ;;		_MainT
 16354 ;;		_setOverTemp_Exceptions
 16355 ;;		_setLog_Code
 16356 ;;		_setControl_Lights_Table
 16357 ;;		_setRFSW_Control
 16358 ;;		_setSw_Main
 16359 ;;		_Sw_DimmerOnFunc
 16360 ;; This function uses a non-reentrant model
 16361 ;;
 16362                           
 16363                           
 16364                           ;psect for function _setBuz
 16365  1789                     _setBuz:	
 16366                           
 16367                           ;incstack = 0
 16368                           ; Regs used in _setBuz: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 16369                           ;setBuz@count stored from wreg
 16370  1789  0020               	movlb	0	; select bank0
 16371  178A  00A9               	movwf	setBuz@count
 16372                           
 16373                           ;Buzzer_B1.c: 24: time*=20;
 16374  178B  3014               	movlw	20
 16375  178C  00A0               	movwf	___wmul@multiplier
 16376  178D  3000               	movlw	0
 16377  178E  00A1               	movwf	___wmul@multiplier+1
 16378  178F  0827               	movf	setBuz@time+1,w
 16379  1790  01A3               	clrf	___wmul@multiplicand+1
 16380  1791  07A3               	addwf	___wmul@multiplicand+1,f
 16381  1792  0826               	movf	setBuz@time,w
 16382  1793  01A2               	clrf	___wmul@multiplicand
 16383  1794  07A2               	addwf	___wmul@multiplicand,f
 16384  1795  319C  2473  3197   	fcall	___wmul
 16385  1798  0020               	movlb	0	; select bank0
 16386  1799  0821               	movf	?___wmul+1,w
 16387  179A  01A7               	clrf	setBuz@time+1
 16388  179B  07A7               	addwf	setBuz@time+1,f
 16389  179C  0820               	movf	?___wmul,w
 16390  179D  01A6               	clrf	setBuz@time
 16391  179E  07A6               	addwf	setBuz@time,f
 16392                           
 16393                           ;Buzzer_B1.c: 25: if(Buz->Enable)
 16394  179F  0868               	movf	_Buz,w
 16395  17A0  0086               	movwf	6
 16396  17A1  3001               	movlw	1	; select bank2/3
 16397  17A2  0087               	movwf	7
 16398  17A3  1C01               	btfss	1,0
 16399  17A4  0008               	return
 16400                           
 16401                           ;Buzzer_B1.c: 26: {
 16402                           ;Buzzer_B1.c: 27: if(!Buz->GO)
 16403  17A5  0868               	movf	_Buz,w
 16404  17A6  0086               	movwf	6
 16405  17A7  3001               	movlw	1	; select bank2/3
 16406  17A8  0087               	movwf	7
 16407  17A9  1881               	btfsc	1,1
 16408  17AA  2FC4               	goto	l8286
 16409                           
 16410                           ;Buzzer_B1.c: 28: {
 16411                           ;Buzzer_B1.c: 29: Buz->GO=1;
 16412  17AB  0868               	movf	_Buz,w
 16413  17AC  0086               	movwf	6
 16414  17AD  3001               	movlw	1	; select bank2/3
 16415  17AE  0087               	movwf	7
 16416  17AF  1481               	bsf	1,1
 16417                           
 16418                           ;Buzzer_B1.c: 30: Buz->Count=count;
 16419  17B0  0829               	movf	setBuz@count,w
 16420  17B1  00A8               	movwf	??_setBuz
 16421  17B2  0868               	movf	_Buz,w
 16422  17B3  3E03               	addlw	3
 16423  17B4  0086               	movwf	6
 16424  17B5  3001               	movlw	1	; select bank2/3
 16425  17B6  0087               	movwf	7
 16426  17B7  0828               	movf	??_setBuz,w
 16427  17B8  0081               	movwf	1
 16428                           
 16429                           ;Buzzer_B1.c: 31: Buz->TimeValue=time;
 16430  17B9  0868               	movf	_Buz,w
 16431  17BA  3E06               	addlw	6
 16432  17BB  0086               	movwf	6
 16433  17BC  3001               	movlw	1	; select bank2/3
 16434  17BD  0087               	movwf	7
 16435  17BE  0826               	movf	setBuz@time,w
 16436  17BF  3FC0               	movwi [0]fsr1
 16437  17C0  0827               	movf	setBuz@time+1,w
 16438  17C1  3FC1               	movwi [1]fsr1
 16439                           
 16440                           ;Buzzer_B1.c: 33: RB3=1;
 16441  17C2  158D               	bsf	13,3	;volatile
 16442                           
 16443                           ;Buzzer_B1.c: 34: }
 16444  17C3  0008               	return
 16445  17C4                     l8286:	
 16446                           
 16447                           ;Buzzer_B1.c: 35: else
 16448                           ;Buzzer_B1.c: 36: {
 16449                           ;Buzzer_B1.c: 37: if(!Buz->BufferStatus1)
 16450  17C4  0868               	movf	_Buz,w
 16451  17C5  0086               	movwf	6
 16452  17C6  3001               	movlw	1	; select bank2/3
 16453  17C7  0087               	movwf	7
 16454  17C8  1981               	btfsc	1,3
 16455  17C9  2FE2               	goto	l8290
 16456                           
 16457                           ;Buzzer_B1.c: 38: {
 16458                           ;Buzzer_B1.c: 39: Buz->BufferStatus1=1;
 16459  17CA  0868               	movf	_Buz,w
 16460  17CB  0086               	movwf	6
 16461  17CC  3001               	movlw	1	; select bank2/3
 16462  17CD  0087               	movwf	7
 16463  17CE  1581               	bsf	1,3
 16464                           
 16465                           ;Buzzer_B1.c: 40: Buz->CountBuffer1=count;
 16466  17CF  0829               	movf	setBuz@count,w
 16467  17D0  00A8               	movwf	??_setBuz
 16468  17D1  0868               	movf	_Buz,w
 16469  17D2  3E04               	addlw	4
 16470  17D3  0086               	movwf	6
 16471  17D4  3001               	movlw	1	; select bank2/3
 16472  17D5  0087               	movwf	7
 16473  17D6  0828               	movf	??_setBuz,w
 16474  17D7  0081               	movwf	1
 16475                           
 16476                           ;Buzzer_B1.c: 41: Buz->TimeValueBuffer1=time;
 16477  17D8  0868               	movf	_Buz,w
 16478  17D9  3E08               	addlw	8
 16479  17DA  0086               	movwf	6
 16480  17DB  3001               	movlw	1	; select bank2/3
 16481  17DC  0087               	movwf	7
 16482  17DD  0826               	movf	setBuz@time,w
 16483  17DE  3FC0               	movwi [0]fsr1
 16484  17DF  0827               	movf	setBuz@time+1,w
 16485  17E0  3FC1               	movwi [1]fsr1
 16486                           
 16487                           ;Buzzer_B1.c: 42: }
 16488  17E1  0008               	return
 16489  17E2                     l8290:	
 16490                           
 16491                           ;Buzzer_B1.c: 43: else if(!Buz->BufferStatus2)
 16492  17E2  0868               	movf	_Buz,w
 16493  17E3  0086               	movwf	6
 16494  17E4  3001               	movlw	1	; select bank2/3
 16495  17E5  0087               	movwf	7
 16496  17E6  1A01               	btfsc	1,4
 16497  17E7  0008               	return
 16498                           
 16499                           ;Buzzer_B1.c: 44: {
 16500                           ;Buzzer_B1.c: 45: Buz->BufferStatus2=1;
 16501  17E8  0868               	movf	_Buz,w
 16502  17E9  0086               	movwf	6
 16503  17EA  3001               	movlw	1	; select bank2/3
 16504  17EB  0087               	movwf	7
 16505  17EC  1601               	bsf	1,4
 16506                           
 16507                           ;Buzzer_B1.c: 46: Buz->CountBuffer2=count;
 16508  17ED  0829               	movf	setBuz@count,w
 16509  17EE  00A8               	movwf	??_setBuz
 16510  17EF  0868               	movf	_Buz,w
 16511  17F0  3E05               	addlw	5
 16512  17F1  0086               	movwf	6
 16513  17F2  3001               	movlw	1	; select bank2/3
 16514  17F3  0087               	movwf	7
 16515  17F4  0828               	movf	??_setBuz,w
 16516  17F5  0081               	movwf	1
 16517                           
 16518                           ;Buzzer_B1.c: 47: Buz->TimeValueBuffer2=time;
 16519  17F6  0868               	movf	_Buz,w
 16520  17F7  3E0A               	addlw	10
 16521  17F8  0086               	movwf	6
 16522  17F9  3001               	movlw	1	; select bank2/3
 16523  17FA  0087               	movwf	7
 16524  17FB  0826               	movf	setBuz@time,w
 16525  17FC  3FC0               	movwi [0]fsr1
 16526  17FD  0827               	movf	setBuz@time+1,w
 16527  17FE  3FC1               	movwi [1]fsr1
 16528  17FF  0008               	return
 16529  1800                     __end_of_setBuz:	
 16530                           
 16531                           	psect	text105
 16532  1C73                     __ptext105:	
 16533 ;; *************** function ___wmul *****************
 16534 ;; Defined at:
 16535 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\Umul16.c"
 16536 ;; Parameters:    Size  Location     Type
 16537 ;;  multiplier      2    0[BANK0 ] unsigned int 
 16538 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 16539 ;; Auto vars:     Size  Location     Type
 16540 ;;  product         2    4[BANK0 ] unsigned int 
 16541 ;; Return value:  Size  Location     Type
 16542 ;;                  2    0[BANK0 ] unsigned int 
 16543 ;; Registers used:
 16544 ;;		wreg, status,2, status,0
 16545 ;; Tracked objects:
 16546 ;;		On entry : 0/0
 16547 ;;		On exit  : 0/0
 16548 ;;		Unchanged: 0/0
 16549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16550 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16551 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16553 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16554 ;;Total ram usage:        6 bytes
 16555 ;; Hardware stack levels used:    1
 16556 ;; Hardware stack levels required when called:    4
 16557 ;; This function calls:
 16558 ;;		Nothing
 16559 ;; This function is called by:
 16560 ;;		_setBuz
 16561 ;; This function uses a non-reentrant model
 16562 ;;
 16563                           
 16564                           
 16565                           ;psect for function ___wmul
 16566  1C73                     ___wmul:	
 16567                           
 16568                           ;incstack = 0
 16569                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 16570  1C73  0020               	movlb	0	; select bank0
 16571  1C74  01A4               	clrf	___wmul@product
 16572  1C75  01A5               	clrf	___wmul@product+1
 16573  1C76                     l8266:	
 16574  1C76  1C20               	btfss	___wmul@multiplier,0
 16575  1C77  2C7C               	goto	l3067
 16576  1C78  0822               	movf	___wmul@multiplicand,w
 16577  1C79  07A4               	addwf	___wmul@product,f
 16578  1C7A  0823               	movf	___wmul@multiplicand+1,w
 16579  1C7B  3DA5               	addwfc	___wmul@product+1,f
 16580  1C7C                     l3067:	
 16581  1C7C  3001               	movlw	1
 16582  1C7D                     u8135:	
 16583  1C7D  35A2               	lslf	___wmul@multiplicand,f
 16584  1C7E  0DA3               	rlf	___wmul@multiplicand+1,f
 16585  1C7F  0B89               	decfsz	9,f
 16586  1C80  2C7D               	goto	u8135
 16587  1C81  3001               	movlw	1
 16588  1C82                     u8145:	
 16589  1C82  36A1               	lsrf	___wmul@multiplier+1,f
 16590  1C83  0CA0               	rrf	___wmul@multiplier,f
 16591  1C84  0B89               	decfsz	9,f
 16592  1C85  2C82               	goto	u8145
 16593  1C86  0821               	movf	___wmul@multiplier+1,w
 16594  1C87  0420               	iorwf	___wmul@multiplier,w
 16595  1C88  1D03               	skipz
 16596  1C89  2C76               	goto	l8266
 16597  1C8A  0825               	movf	___wmul@product+1,w
 16598  1C8B  01A1               	clrf	?___wmul+1
 16599  1C8C  07A1               	addwf	?___wmul+1,f
 16600  1C8D  0824               	movf	___wmul@product,w
 16601  1C8E  01A0               	clrf	?___wmul
 16602  1C8F  07A0               	addwf	?___wmul,f
 16603  1C90  0008               	return
 16604  1C91                     __end_of___wmul:	
 16605                           
 16606                           	psect	text106
 16607  192C                     __ptext106:	
 16608 ;; *************** function _DelayOff_Initialization *****************
 16609 ;; Defined at:
 16610 ;;		line 30 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\DelayOff_B1.c"
 16611 ;; Parameters:    Size  Location     Type
 16612 ;;		None
 16613 ;; Auto vars:     Size  Location     Type
 16614 ;;		None
 16615 ;; Return value:  Size  Location     Type
 16616 ;;		None               void
 16617 ;; Registers used:
 16618 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16619 ;; Tracked objects:
 16620 ;;		On entry : 0/0
 16621 ;;		On exit  : 0/0
 16622 ;;		Unchanged: 0/0
 16623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16625 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16627 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16628 ;;Total ram usage:        0 bytes
 16629 ;; Hardware stack levels used:    1
 16630 ;; Hardware stack levels required when called:    6
 16631 ;; This function calls:
 16632 ;;		_DlyOff_Initialization
 16633 ;; This function is called by:
 16634 ;;		_main
 16635 ;; This function uses a non-reentrant model
 16636 ;;
 16637                           
 16638                           
 16639                           ;psect for function _DelayOff_Initialization
 16640  192C                     _DelayOff_Initialization:	
 16641                           
 16642                           ;DelayOff_B1.c: 33: DlyOff_Initialization(1);
 16643                           
 16644                           ;incstack = 0
 16645                           ; Regs used in _DelayOff_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 16646  192C  3001               	movlw	1
 16647  192D  3199  217B  3199   	fcall	_DlyOff_Initialization
 16648                           
 16649                           ;DelayOff_B1.c: 37: DlyOff_Initialization(2);
 16650  1930  3002               	movlw	2
 16651  1931  3199  217B         	fcall	_DlyOff_Initialization
 16652  1933  0008               	return
 16653  1934                     __end_of_DelayOff_Initialization:	
 16654                           
 16655                           	psect	text107
 16656  197B                     __ptext107:	
 16657 ;; *************** function _DlyOff_Initialization *****************
 16658 ;; Defined at:
 16659 ;;		line 60 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\DelayOff_B1.c"
 16660 ;; Parameters:    Size  Location     Type
 16661 ;;  sw              1    wreg     unsigned char 
 16662 ;; Auto vars:     Size  Location     Type
 16663 ;;  sw              1    2[BANK0 ] unsigned char 
 16664 ;; Return value:  Size  Location     Type
 16665 ;;		None               void
 16666 ;; Registers used:
 16667 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16668 ;; Tracked objects:
 16669 ;;		On entry : 0/0
 16670 ;;		On exit  : 0/0
 16671 ;;		Unchanged: 0/0
 16672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16674 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16676 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16677 ;;Total ram usage:        1 bytes
 16678 ;; Hardware stack levels used:    1
 16679 ;; Hardware stack levels required when called:    5
 16680 ;; This function calls:
 16681 ;;		_DelayOffPointSelect
 16682 ;; This function is called by:
 16683 ;;		_DelayOff_Initialization
 16684 ;; This function uses a non-reentrant model
 16685 ;;
 16686                           
 16687                           
 16688                           ;psect for function _DlyOff_Initialization
 16689  197B                     _DlyOff_Initialization:	
 16690                           
 16691                           ;incstack = 0
 16692                           ; Regs used in _DlyOff_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 16693                           ;DlyOff_Initialization@sw stored from wreg
 16694  197B  0020               	movlb	0	; select bank0
 16695  197C  00A2               	movwf	DlyOff_Initialization@sw
 16696                           
 16697                           ;DelayOff_B1.c: 62: DelayOffPointSelect(sw);
 16698  197D  0822               	movf	DlyOff_Initialization@sw,w
 16699  197E  319A  22F2         	fcall	_DelayOffPointSelect
 16700                           
 16701                           ;DelayOff_B1.c: 63: DelayOff->Enable=1;
 16702  1980  0020               	movlb	0	; select bank0
 16703  1981  0869               	movf	_DelayOff,w
 16704  1982  0086               	movwf	6
 16705  1983  0187               	clrf	7
 16706  1984  1401               	bsf	1,0
 16707  1985  0008               	return
 16708  1986                     __end_of_DlyOff_Initialization:	
 16709                           
 16710                           	psect	text108
 16711  1AF2                     __ptext108:	
 16712 ;; *************** function _DelayOffPointSelect *****************
 16713 ;; Defined at:
 16714 ;;		line 8 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\DelayOff_B1.c"
 16715 ;; Parameters:    Size  Location     Type
 16716 ;;  sw              1    wreg     unsigned char 
 16717 ;; Auto vars:     Size  Location     Type
 16718 ;;  sw              1    1[BANK0 ] unsigned char 
 16719 ;; Return value:  Size  Location     Type
 16720 ;;		None               void
 16721 ;; Registers used:
 16722 ;;		wreg
 16723 ;; Tracked objects:
 16724 ;;		On entry : 0/0
 16725 ;;		On exit  : 0/0
 16726 ;;		Unchanged: 0/0
 16727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16729 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16730 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16731 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16732 ;;Total ram usage:        2 bytes
 16733 ;; Hardware stack levels used:    1
 16734 ;; Hardware stack levels required when called:    4
 16735 ;; This function calls:
 16736 ;;		Nothing
 16737 ;; This function is called by:
 16738 ;;		_DlyOff_Initialization
 16739 ;;		_DlyOff_Main
 16740 ;;		_setDelayOff_GO
 16741 ;; This function uses a non-reentrant model
 16742 ;;
 16743                           
 16744                           
 16745                           ;psect for function _DelayOffPointSelect
 16746  1AF2                     _DelayOffPointSelect:	
 16747                           
 16748                           ;incstack = 0
 16749                           ; Regs used in _DelayOffPointSelect: [wreg]
 16750                           ;DelayOffPointSelect@sw stored from wreg
 16751  1AF2  0020               	movlb	0	; select bank0
 16752  1AF3  00A1               	movwf	DelayOffPointSelect@sw
 16753                           
 16754                           ;DelayOff_B1.c: 11: if(sw == 1)
 16755  1AF4  0821               	movf	DelayOffPointSelect@sw,w
 16756  1AF5  3A01               	xorlw	1
 16757  1AF6  1D03               	skipz
 16758  1AF7  2AFD               	goto	l8188
 16759                           
 16760                           ;DelayOff_B1.c: 12: {
 16761                           ;DelayOff_B1.c: 13: DelayOff=&DlySw1;
 16762  1AF8  30CC               	movlw	_DlySw1& (0+255)
 16763  1AF9  00A0               	movwf	??_DelayOffPointSelect
 16764  1AFA  0820               	movf	??_DelayOffPointSelect,w
 16765  1AFB  00E9               	movwf	_DelayOff
 16766                           
 16767                           ;DelayOff_B1.c: 14: }
 16768  1AFC  0008               	return
 16769  1AFD                     l8188:	
 16770                           
 16771                           ;DelayOff_B1.c: 17: else if(sw == 2)
 16772  1AFD  0821               	movf	DelayOffPointSelect@sw,w
 16773  1AFE  3A02               	xorlw	2
 16774  1AFF  1D03               	skipz
 16775  1B00  0008               	return
 16776                           
 16777                           ;DelayOff_B1.c: 18: {
 16778                           ;DelayOff_B1.c: 19: DelayOff=&DlySw2;
 16779  1B01  30D1               	movlw	_DlySw2& (0+255)
 16780  1B02  00A0               	movwf	??_DelayOffPointSelect
 16781  1B03  0820               	movf	??_DelayOffPointSelect,w
 16782  1B04  00E9               	movwf	_DelayOff
 16783  1B05  0008               	return
 16784  1B06                     __end_of_DelayOffPointSelect:	
 16785                           
 16786                           	psect	text109
 16787  1B06                     __ptext109:	
 16788 ;; *************** function _CC2500_PowerOnInitial *****************
 16789 ;; Defined at:
 16790 ;;		line 97 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
 16791 ;; Parameters:    Size  Location     Type
 16792 ;;		None
 16793 ;; Auto vars:     Size  Location     Type
 16794 ;;		None
 16795 ;; Return value:  Size  Location     Type
 16796 ;;		None               void
 16797 ;; Registers used:
 16798 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 16799 ;; Tracked objects:
 16800 ;;		On entry : 0/0
 16801 ;;		On exit  : 0/0
 16802 ;;		Unchanged: 0/0
 16803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16807 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16808 ;;Total ram usage:        0 bytes
 16809 ;; Hardware stack levels used:    1
 16810 ;; Hardware stack levels required when called:    7
 16811 ;; This function calls:
 16812 ;;		_CC2500_ClearRXFIFO
 16813 ;;		_CC2500_ClearTXFIFO
 16814 ;;		_CC2500_FrequencyCabr
 16815 ;;		_CC2500_InitPATable
 16816 ;;		_CC2500_InitSetREG
 16817 ;;		_CC2500_PowerRST
 16818 ;;		_CC2500_SIDLEMode
 16819 ;; This function is called by:
 16820 ;;		_main
 16821 ;; This function uses a non-reentrant model
 16822 ;;
 16823                           
 16824                           
 16825                           ;psect for function _CC2500_PowerOnInitial
 16826  1B06                     _CC2500_PowerOnInitial:	
 16827                           
 16828                           ;CC2500_B1.c: 99: CC2500_PowerRST();
 16829                           
 16830                           ;incstack = 0
 16831                           ; Regs used in _CC2500_PowerOnInitial: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 16832  1B06  319E  26B2  319B   	fcall	_CC2500_PowerRST
 16833                           
 16834                           ;CC2500_B1.c: 100: CC2500_InitSetREG();
 16835  1B09  319D  25A9  319B   	fcall	_CC2500_InitSetREG
 16836                           
 16837                           ;CC2500_B1.c: 101: CC2500_InitPATable();
 16838  1B0C  319C  2491  319B   	fcall	_CC2500_InitPATable
 16839                           
 16840                           ;CC2500_B1.c: 102: CC2500_ClearTXFIFO();
 16841  1B0F  3198  20E9  319B   	fcall	_CC2500_ClearTXFIFO
 16842                           
 16843                           ;CC2500_B1.c: 103: CC2500_ClearRXFIFO();
 16844  1B12  3198  20E5  319B   	fcall	_CC2500_ClearRXFIFO
 16845                           
 16846                           ;CC2500_B1.c: 104: CC2500_FrequencyCabr();
 16847  1B15  3199  21CA  319B   	fcall	_CC2500_FrequencyCabr
 16848                           
 16849                           ;CC2500_B1.c: 105: CC2500_SIDLEMode();
 16850  1B18  3198  20ED         	fcall	_CC2500_SIDLEMode
 16851  1B1A  0008               	return
 16852  1B1B                     __end_of_CC2500_PowerOnInitial:	
 16853                           
 16854                           	psect	text110
 16855  18ED                     __ptext110:	
 16856 ;; *************** function _CC2500_SIDLEMode *****************
 16857 ;; Defined at:
 16858 ;;		line 183 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
 16859 ;; Parameters:    Size  Location     Type
 16860 ;;		None
 16861 ;; Auto vars:     Size  Location     Type
 16862 ;;		None
 16863 ;; Return value:  Size  Location     Type
 16864 ;;		None               void
 16865 ;; Registers used:
 16866 ;;		wreg, status,2, status,0, pclath, cstack
 16867 ;; Tracked objects:
 16868 ;;		On entry : 0/0
 16869 ;;		On exit  : 0/0
 16870 ;;		Unchanged: 0/0
 16871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16875 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16876 ;;Total ram usage:        0 bytes
 16877 ;; Hardware stack levels used:    1
 16878 ;; Hardware stack levels required when called:    6
 16879 ;; This function calls:
 16880 ;;		_CC2500_WriteCommand
 16881 ;; This function is called by:
 16882 ;;		_CC2500_PowerOnInitial
 16883 ;; This function uses a non-reentrant model
 16884 ;;
 16885                           
 16886                           
 16887                           ;psect for function _CC2500_SIDLEMode
 16888  18ED                     _CC2500_SIDLEMode:	
 16889                           
 16890                           ;CC2500_B1.c: 185: CC2500_WriteCommand(0x36);
 16891                           
 16892                           ;incstack = 0
 16893                           ; Regs used in _CC2500_SIDLEMode: [wreg+status,2+status,0+pclath+cstack]
 16894  18ED  3036               	movlw	54
 16895  18EE  319A  225B         	fcall	_CC2500_WriteCommand
 16896  18F0  0008               	return
 16897  18F1                     __end_of_CC2500_SIDLEMode:	
 16898                           
 16899                           	psect	text111
 16900  1EB2                     __ptext111:	
 16901 ;; *************** function _CC2500_PowerRST *****************
 16902 ;; Defined at:
 16903 ;;		line 110 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
 16904 ;; Parameters:    Size  Location     Type
 16905 ;;		None
 16906 ;; Auto vars:     Size  Location     Type
 16907 ;;		None
 16908 ;; Return value:  Size  Location     Type
 16909 ;;		None               void
 16910 ;; Registers used:
 16911 ;;		wreg, status,2, status,0, pclath, cstack
 16912 ;; Tracked objects:
 16913 ;;		On entry : 0/0
 16914 ;;		On exit  : 0/0
 16915 ;;		Unchanged: 0/0
 16916 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16918 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16919 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16920 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16921 ;;Total ram usage:        1 bytes
 16922 ;; Hardware stack levels used:    1
 16923 ;; Hardware stack levels required when called:    5
 16924 ;; This function calls:
 16925 ;;		_CC2500_WriteByte
 16926 ;;		_DelayTime_1us
 16927 ;; This function is called by:
 16928 ;;		_CC2500_PowerOnInitial
 16929 ;; This function uses a non-reentrant model
 16930 ;;
 16931                           
 16932                           
 16933                           ;psect for function _CC2500_PowerRST
 16934  1EB2                     _CC2500_PowerRST:	
 16935                           
 16936                           ;CC2500_B1.c: 112: RC1=0;
 16937                           
 16938                           ;incstack = 0
 16939                           ; Regs used in _CC2500_PowerRST: [wreg+status,2+status,0+pclath+cstack]
 16940  1EB2  0020               	movlb	0	; select bank0
 16941  1EB3  108E               	bcf	14,1	;volatile
 16942                           
 16943                           ;CC2500_B1.c: 113: RC0=0;
 16944  1EB4  100E               	bcf	14,0	;volatile
 16945                           
 16946                           ;CC2500_B1.c: 114: RC4=1;
 16947  1EB5  160E               	bsf	14,4	;volatile
 16948                           
 16949                           ;CC2500_B1.c: 115: DelayTime_1us(10);
 16950  1EB6  300A               	movlw	10
 16951  1EB7  00A0               	movwf	DelayTime_1us@count
 16952  1EB8  3000               	movlw	0
 16953  1EB9  00A1               	movwf	DelayTime_1us@count+1
 16954  1EBA  319D  255C  319E   	fcall	_DelayTime_1us
 16955                           
 16956                           ;CC2500_B1.c: 116: RC4=0;
 16957  1EBD  0020               	movlb	0	; select bank0
 16958  1EBE  120E               	bcf	14,4	;volatile
 16959                           
 16960                           ;CC2500_B1.c: 117: DelayTime_1us(10);
 16961  1EBF  300A               	movlw	10
 16962  1EC0  00A0               	movwf	DelayTime_1us@count
 16963  1EC1  3000               	movlw	0
 16964  1EC2  00A1               	movwf	DelayTime_1us@count+1
 16965  1EC3  319D  255C  319E   	fcall	_DelayTime_1us
 16966                           
 16967                           ;CC2500_B1.c: 118: RC4=1;
 16968  1EC6  0020               	movlb	0	; select bank0
 16969  1EC7  160E               	bsf	14,4	;volatile
 16970                           
 16971                           ;CC2500_B1.c: 119: DelayTime_1us(40);
 16972  1EC8  3028               	movlw	40
 16973  1EC9  00A0               	movwf	DelayTime_1us@count
 16974  1ECA  3000               	movlw	0
 16975  1ECB  00A1               	movwf	DelayTime_1us@count+1
 16976  1ECC  319D  255C  319E   	fcall	_DelayTime_1us
 16977                           
 16978                           ;CC2500_B1.c: 120: RC4=0;
 16979  1ECF  0020               	movlb	0	; select bank0
 16980  1ED0  120E               	bcf	14,4	;volatile
 16981                           
 16982                           ;CC2500_B1.c: 121: SPI0Buffer=0x30;
 16983  1ED1  3030               	movlw	48
 16984  1ED2  00A6               	movwf	??_CC2500_PowerRST
 16985  1ED3  0826               	movf	??_CC2500_PowerRST,w
 16986  1ED4  0021               	movlb	1	; select bank1
 16987  1ED5  00BE               	movwf	_SPI0Buffer^(0+128)
 16988  1ED6                     l332:	
 16989                           ;CC2500_B1.c: 122: while(RC2==1);
 16990                           
 16991  1ED6  0020               	movlb	0	; select bank0
 16992  1ED7  190E               	btfsc	14,2	;volatile
 16993  1ED8  2ED6               	goto	l332
 16994                           
 16995                           ;CC2500_B1.c: 123: CC2500_WriteByte();
 16996  1ED9  319B  23A1  319E   	fcall	_CC2500_WriteByte
 16997  1EDC                     l335:	
 16998                           ;CC2500_B1.c: 124: while(RC2==1);
 16999                           
 17000  1EDC  0020               	movlb	0	; select bank0
 17001  1EDD  190E               	btfsc	14,2	;volatile
 17002  1EDE  2EDC               	goto	l335
 17003                           
 17004                           ;CC2500_B1.c: 125: RC0=0;
 17005  1EDF  100E               	bcf	14,0	;volatile
 17006                           
 17007                           ;CC2500_B1.c: 126: RC4=1;
 17008  1EE0  160E               	bsf	14,4	;volatile
 17009  1EE1  0008               	return
 17010  1EE2                     __end_of_CC2500_PowerRST:	
 17011                           
 17012                           	psect	text112
 17013  1DA9                     __ptext112:	
 17014 ;; *************** function _CC2500_InitSetREG *****************
 17015 ;; Defined at:
 17016 ;;		line 131 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
 17017 ;; Parameters:    Size  Location     Type
 17018 ;;		None
 17019 ;; Auto vars:     Size  Location     Type
 17020 ;;  loop_c          1    8[BANK0 ] unsigned char 
 17021 ;;  temp2           1    7[BANK0 ] unsigned char 
 17022 ;;  temp1           1    6[BANK0 ] unsigned char 
 17023 ;; Return value:  Size  Location     Type
 17024 ;;		None               void
 17025 ;; Registers used:
 17026 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 17027 ;; Tracked objects:
 17028 ;;		On entry : 0/0
 17029 ;;		On exit  : 0/0
 17030 ;;		Unchanged: 0/0
 17031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17033 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17034 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17035 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17036 ;;Total ram usage:        4 bytes
 17037 ;; Hardware stack levels used:    1
 17038 ;; Hardware stack levels required when called:    6
 17039 ;; This function calls:
 17040 ;;		_CC2500_WriteREG
 17041 ;; This function is called by:
 17042 ;;		_CC2500_PowerOnInitial
 17043 ;; This function uses a non-reentrant model
 17044 ;;
 17045                           
 17046                           
 17047                           ;psect for function _CC2500_InitSetREG
 17048  1DA9                     _CC2500_InitSetREG:	
 17049                           
 17050                           ;CC2500_B1.c: 133: unsigned char loop_c;
 17051                           ;CC2500_B1.c: 134: unsigned char temp1,temp2;
 17052                           ;CC2500_B1.c: 136: for(loop_c=0;loop_c<47;loop_c++)
 17053                           
 17054                           ;incstack = 0
 17055                           ; Regs used in _CC2500_InitSetREG: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 17056  1DA9  0020               	movlb	0	; select bank0
 17057  1DAA  01A8               	clrf	CC2500_InitSetREG@loop_c
 17058  1DAB                     L14:	
 17059  1DAB  302F               	movlw	47
 17060  1DAC  0228               	subwf	CC2500_InitSetREG@loop_c,w
 17061  1DAD  1803               	btfsc	3,0
 17062  1DAE  0008               	return
 17063                           
 17064                           ;CC2500_B1.c: 137: {
 17065                           ;CC2500_B1.c: 138: temp1 = CC2500_registers_address[loop_c];
 17066  1DAF  0828               	movf	CC2500_InitSetREG@loop_c,w
 17067  1DB0  3E00               	addlw	low (_CC2500_registers_address| (0+32768))
 17068  1DB1  0084               	movwf	4
 17069  1DB2  3098               	movlw	high (_CC2500_registers_address| (0+32768))
 17070  1DB3  1803               	skipnc
 17071  1DB4  3E01               	addlw	1
 17072  1DB5  0085               	movwf	5
 17073  1DB6  0800               	movf	0,w	;code access
 17074  1DB7  00A5               	movwf	??_CC2500_InitSetREG
 17075  1DB8  0825               	movf	??_CC2500_InitSetREG,w
 17076  1DB9  00A6               	movwf	CC2500_InitSetREG@temp1
 17077                           
 17078                           ;CC2500_B1.c: 139: temp2 = CC2500_rfSettings[loop_c];
 17079  1DBA  0828               	movf	CC2500_InitSetREG@loop_c,w
 17080  1DBB  3E2F               	addlw	low (_CC2500_rfSettings| (0+32768))
 17081  1DBC  0084               	movwf	4
 17082  1DBD  3098               	movlw	high (_CC2500_rfSettings| (0+32768))
 17083  1DBE  1803               	skipnc
 17084  1DBF  3E01               	addlw	1
 17085  1DC0  0085               	movwf	5
 17086  1DC1  0800               	movf	0,w	;code access
 17087  1DC2  00A5               	movwf	??_CC2500_InitSetREG
 17088  1DC3  0825               	movf	??_CC2500_InitSetREG,w
 17089  1DC4  00A7               	movwf	CC2500_InitSetREG@temp2
 17090                           
 17091                           ;CC2500_B1.c: 141: CC2500_WriteREG(temp1,temp2);
 17092  1DC5  0827               	movf	CC2500_InitSetREG@temp2,w
 17093  1DC6  00A5               	movwf	??_CC2500_InitSetREG
 17094  1DC7  0825               	movf	??_CC2500_InitSetREG,w
 17095  1DC8  00A2               	movwf	CC2500_WriteREG@value
 17096  1DC9  0826               	movf	CC2500_InitSetREG@temp1,w
 17097  1DCA  319B  23BA  319D   	fcall	_CC2500_WriteREG
 17098  1DCD  3001               	movlw	1
 17099  1DCE  0020               	movlb	0	; select bank0
 17100  1DCF  00A5               	movwf	??_CC2500_InitSetREG
 17101  1DD0  0825               	movf	??_CC2500_InitSetREG,w
 17102  1DD1  07A8               	addwf	CC2500_InitSetREG@loop_c,f
 17103  1DD2  2DAB               	goto	L14
 17104  1DD3                     __end_of_CC2500_InitSetREG:	
 17105                           
 17106                           	psect	text113
 17107  1C91                     __ptext113:	
 17108 ;; *************** function _CC2500_InitPATable *****************
 17109 ;; Defined at:
 17110 ;;		line 147 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
 17111 ;; Parameters:    Size  Location     Type
 17112 ;;		None
 17113 ;; Auto vars:     Size  Location     Type
 17114 ;;  loop_d          1    7[BANK0 ] unsigned char 
 17115 ;;  temp            1    6[BANK0 ] unsigned char 
 17116 ;; Return value:  Size  Location     Type
 17117 ;;		None               void
 17118 ;; Registers used:
 17119 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 17120 ;; Tracked objects:
 17121 ;;		On entry : 0/0
 17122 ;;		On exit  : 0/0
 17123 ;;		Unchanged: 0/0
 17124 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17125 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17126 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17127 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17128 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17129 ;;Total ram usage:        3 bytes
 17130 ;; Hardware stack levels used:    1
 17131 ;; Hardware stack levels required when called:    6
 17132 ;; This function calls:
 17133 ;;		_CC2500_WriteREG
 17134 ;; This function is called by:
 17135 ;;		_CC2500_PowerOnInitial
 17136 ;; This function uses a non-reentrant model
 17137 ;;
 17138                           
 17139                           
 17140                           ;psect for function _CC2500_InitPATable
 17141  1C91                     _CC2500_InitPATable:	
 17142                           
 17143                           ;CC2500_B1.c: 149: unsigned char loop_d;
 17144                           ;CC2500_B1.c: 150: unsigned char temp;
 17145                           ;CC2500_B1.c: 152: for(loop_d=0;loop_d<8;loop_d++)
 17146                           
 17147                           ;incstack = 0
 17148                           ; Regs used in _CC2500_InitPATable: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 17149  1C91  0020               	movlb	0	; select bank0
 17150  1C92  01A7               	clrf	CC2500_InitPATable@loop_d
 17151  1C93                     L15:	
 17152  1C93  3008               	movlw	8
 17153  1C94  0227               	subwf	CC2500_InitPATable@loop_d,w
 17154  1C95  1803               	btfsc	3,0
 17155  1C96  0008               	return
 17156                           
 17157                           ;CC2500_B1.c: 153: {
 17158                           ;CC2500_B1.c: 154: temp=CC2500_patable_vaule[loop_d];
 17159  1C97  0827               	movf	CC2500_InitPATable@loop_d,w
 17160  1C98  3E5E               	addlw	low (_CC2500_patable_vaule| (0+32768))
 17161  1C99  0084               	movwf	4
 17162  1C9A  3098               	movlw	high (_CC2500_patable_vaule| (0+32768))
 17163  1C9B  1803               	skipnc
 17164  1C9C  3E01               	addlw	1
 17165  1C9D  0085               	movwf	5
 17166  1C9E  0800               	movf	0,w	;code access
 17167  1C9F  00A5               	movwf	??_CC2500_InitPATable
 17168  1CA0  0825               	movf	??_CC2500_InitPATable,w
 17169  1CA1  00A6               	movwf	CC2500_InitPATable@temp
 17170                           
 17171                           ;CC2500_B1.c: 155: CC2500_WriteREG(0x3E,temp);
 17172  1CA2  0826               	movf	CC2500_InitPATable@temp,w
 17173  1CA3  00A5               	movwf	??_CC2500_InitPATable
 17174  1CA4  0825               	movf	??_CC2500_InitPATable,w
 17175  1CA5  00A2               	movwf	CC2500_WriteREG@value
 17176  1CA6  303E               	movlw	62
 17177  1CA7  319B  23BA  319C   	fcall	_CC2500_WriteREG
 17178  1CAA  3001               	movlw	1
 17179  1CAB  0020               	movlb	0	; select bank0
 17180  1CAC  00A5               	movwf	??_CC2500_InitPATable
 17181  1CAD  0825               	movf	??_CC2500_InitPATable,w
 17182  1CAE  07A7               	addwf	CC2500_InitPATable@loop_d,f
 17183  1CAF  2C93               	goto	L15
 17184  1CB0                     __end_of_CC2500_InitPATable:	
 17185                           
 17186                           	psect	text114
 17187  1BBA                     __ptext114:	
 17188 ;; *************** function _CC2500_WriteREG *****************
 17189 ;; Defined at:
 17190 ;;		line 227 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
 17191 ;; Parameters:    Size  Location     Type
 17192 ;;  w_addr          1    wreg     unsigned char 
 17193 ;;  value           1    2[BANK0 ] unsigned char 
 17194 ;; Auto vars:     Size  Location     Type
 17195 ;;  w_addr          1    4[BANK0 ] unsigned char 
 17196 ;; Return value:  Size  Location     Type
 17197 ;;		None               void
 17198 ;; Registers used:
 17199 ;;		wreg, status,2, status,0, pclath, cstack
 17200 ;; Tracked objects:
 17201 ;;		On entry : 0/0
 17202 ;;		On exit  : 0/0
 17203 ;;		Unchanged: 0/0
 17204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17205 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17206 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17207 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17208 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17209 ;;Total ram usage:        3 bytes
 17210 ;; Hardware stack levels used:    1
 17211 ;; Hardware stack levels required when called:    5
 17212 ;; This function calls:
 17213 ;;		_CC2500_WriteByte
 17214 ;; This function is called by:
 17215 ;;		_CC2500_InitSetREG
 17216 ;;		_CC2500_InitPATable
 17217 ;; This function uses a non-reentrant model
 17218 ;;
 17219                           
 17220                           
 17221                           ;psect for function _CC2500_WriteREG
 17222  1BBA                     _CC2500_WriteREG:	
 17223                           
 17224                           ;incstack = 0
 17225                           ; Regs used in _CC2500_WriteREG: [wreg+status,2+status,0+pclath+cstack]
 17226                           ;CC2500_WriteREG@w_addr stored from wreg
 17227  1BBA  0020               	movlb	0	; select bank0
 17228  1BBB  00A4               	movwf	CC2500_WriteREG@w_addr
 17229                           
 17230                           ;CC2500_B1.c: 229: RC4=0;
 17231  1BBC  120E               	bcf	14,4	;volatile
 17232                           
 17233                           ;CC2500_B1.c: 230: SPI0Buffer=w_addr;
 17234  1BBD  0824               	movf	CC2500_WriteREG@w_addr,w
 17235  1BBE  00A3               	movwf	??_CC2500_WriteREG
 17236  1BBF  0823               	movf	??_CC2500_WriteREG,w
 17237  1BC0  0021               	movlb	1	; select bank1
 17238  1BC1  00BE               	movwf	_SPI0Buffer^(0+128)
 17239  1BC2                     l377:	
 17240                           ;CC2500_B1.c: 231: while(RC2==1);
 17241                           
 17242  1BC2  0020               	movlb	0	; select bank0
 17243  1BC3  190E               	btfsc	14,2	;volatile
 17244  1BC4  2BC2               	goto	l377
 17245                           
 17246                           ;CC2500_B1.c: 232: CC2500_WriteByte();
 17247  1BC5  319B  23A1  319B   	fcall	_CC2500_WriteByte
 17248                           
 17249                           ;CC2500_B1.c: 233: SPI0Buffer=value;
 17250  1BC8  0020               	movlb	0	; select bank0
 17251  1BC9  0822               	movf	CC2500_WriteREG@value,w
 17252  1BCA  00A3               	movwf	??_CC2500_WriteREG
 17253  1BCB  0823               	movf	??_CC2500_WriteREG,w
 17254  1BCC  0021               	movlb	1	; select bank1
 17255  1BCD  00BE               	movwf	_SPI0Buffer^(0+128)
 17256                           
 17257                           ;CC2500_B1.c: 234: CC2500_WriteByte();
 17258  1BCE  319B  23A1         	fcall	_CC2500_WriteByte
 17259                           
 17260                           ;CC2500_B1.c: 235: RC4=1;
 17261  1BD0  0020               	movlb	0	; select bank0
 17262  1BD1  160E               	bsf	14,4	;volatile
 17263  1BD2  0008               	return
 17264  1BD3                     __end_of_CC2500_WriteREG:	
 17265                           
 17266                           	psect	text115
 17267  19CA                     __ptext115:	
 17268 ;; *************** function _CC2500_FrequencyCabr *****************
 17269 ;; Defined at:
 17270 ;;		line 175 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
 17271 ;; Parameters:    Size  Location     Type
 17272 ;;		None
 17273 ;; Auto vars:     Size  Location     Type
 17274 ;;		None
 17275 ;; Return value:  Size  Location     Type
 17276 ;;		None               void
 17277 ;; Registers used:
 17278 ;;		wreg, status,2, status,0, pclath, cstack
 17279 ;; Tracked objects:
 17280 ;;		On entry : 0/0
 17281 ;;		On exit  : 0/0
 17282 ;;		Unchanged: 0/0
 17283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17284 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17285 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17287 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17288 ;;Total ram usage:        0 bytes
 17289 ;; Hardware stack levels used:    1
 17290 ;; Hardware stack levels required when called:    6
 17291 ;; This function calls:
 17292 ;;		_CC2500_WriteCommand
 17293 ;;		_DelayTime_1us
 17294 ;; This function is called by:
 17295 ;;		_CC2500_PowerOnInitial
 17296 ;; This function uses a non-reentrant model
 17297 ;;
 17298                           
 17299                           
 17300                           ;psect for function _CC2500_FrequencyCabr
 17301  19CA                     _CC2500_FrequencyCabr:	
 17302                           
 17303                           ;CC2500_B1.c: 177: CC2500_WriteCommand(0x33);
 17304                           
 17305                           ;incstack = 0
 17306                           ; Regs used in _CC2500_FrequencyCabr: [wreg+status,2+status,0+pclath+cstack]
 17307  19CA  3033               	movlw	51
 17308  19CB  319A  225B  3199   	fcall	_CC2500_WriteCommand
 17309                           
 17310                           ;CC2500_B1.c: 178: DelayTime_1us(1000);
 17311  19CE  30E8               	movlw	232
 17312  19CF  0020               	movlb	0	; select bank0
 17313  19D0  00A0               	movwf	DelayTime_1us@count
 17314  19D1  3003               	movlw	3
 17315  19D2  00A1               	movwf	DelayTime_1us@count+1
 17316  19D3  319D  255C         	fcall	_DelayTime_1us
 17317  19D5  0008               	return
 17318  19D6                     __end_of_CC2500_FrequencyCabr:	
 17319                           
 17320                           	psect	text116
 17321  1D5C                     __ptext116:	
 17322 ;; *************** function _DelayTime_1us *****************
 17323 ;; Defined at:
 17324 ;;		line 283 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
 17325 ;; Parameters:    Size  Location     Type
 17326 ;;  count           2    0[BANK0 ] int 
 17327 ;; Auto vars:     Size  Location     Type
 17328 ;;  j               2    4[BANK0 ] unsigned int 
 17329 ;;  i               2    2[BANK0 ] unsigned int 
 17330 ;; Return value:  Size  Location     Type
 17331 ;;		None               void
 17332 ;; Registers used:
 17333 ;;		wreg, status,2
 17334 ;; Tracked objects:
 17335 ;;		On entry : 0/0
 17336 ;;		On exit  : 0/0
 17337 ;;		Unchanged: 0/0
 17338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17339 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17340 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17342 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17343 ;;Total ram usage:        6 bytes
 17344 ;; Hardware stack levels used:    1
 17345 ;; Hardware stack levels required when called:    4
 17346 ;; This function calls:
 17347 ;;		Nothing
 17348 ;; This function is called by:
 17349 ;;		_CC2500_PowerRST
 17350 ;;		_CC2500_FrequencyCabr
 17351 ;; This function uses a non-reentrant model
 17352 ;;
 17353                           
 17354                           
 17355                           ;psect for function _DelayTime_1us
 17356  1D5C                     _DelayTime_1us:	
 17357                           
 17358                           ;CC2500_B1.c: 285: unsigned int i,j;
 17359                           ;CC2500_B1.c: 286: for(i=1;i<count;i++)
 17360                           
 17361                           ;incstack = 0
 17362                           ; Regs used in _DelayTime_1us: [wreg+status,2]
 17363  1D5C  3001               	movlw	1
 17364  1D5D  0020               	movlb	0	; select bank0
 17365  1D5E  00A2               	movwf	DelayTime_1us@i
 17366  1D5F  3000               	movlw	0
 17367  1D60  00A3               	movwf	DelayTime_1us@i+1
 17368  1D61                     l401:	
 17369  1D61  0821               	movf	DelayTime_1us@count+1,w
 17370  1D62  0223               	subwf	DelayTime_1us@i+1,w
 17371  1D63  1D03               	skipz
 17372  1D64  2D67               	goto	u8875
 17373  1D65  0820               	movf	DelayTime_1us@count,w
 17374  1D66  0222               	subwf	DelayTime_1us@i,w
 17375  1D67                     u8875:	
 17376  1D67  1803               	btfsc	3,0
 17377  1D68  0008               	return
 17378                           
 17379                           ;CC2500_B1.c: 287: for(j=0;j<=1;j++);
 17380  1D69  01A4               	clrf	DelayTime_1us@j
 17381  1D6A  01A5               	clrf	DelayTime_1us@j+1
 17382  1D6B  3000               	movlw	0
 17383  1D6C  0225               	subwf	DelayTime_1us@j+1,w
 17384  1D6D  3002               	movlw	2
 17385  1D6E  1903               	skipnz
 17386  1D6F  0224               	subwf	DelayTime_1us@j,w
 17387  1D70  1803               	btfsc	3,0
 17388  1D71  2D7D               	goto	l8788
 17389  1D72                     l8786:	
 17390  1D72  3001               	movlw	1
 17391  1D73  07A4               	addwf	DelayTime_1us@j,f
 17392  1D74  3000               	movlw	0
 17393  1D75  3DA5               	addwfc	DelayTime_1us@j+1,f
 17394  1D76  3000               	movlw	0
 17395  1D77  0225               	subwf	DelayTime_1us@j+1,w
 17396  1D78  3002               	movlw	2
 17397  1D79  1903               	skipnz
 17398  1D7A  0224               	subwf	DelayTime_1us@j,w
 17399  1D7B  1C03               	skipc
 17400  1D7C  2D72               	goto	l8786
 17401  1D7D                     l8788:	
 17402  1D7D  3001               	movlw	1
 17403  1D7E  07A2               	addwf	DelayTime_1us@i,f
 17404  1D7F  3000               	movlw	0
 17405  1D80  3DA3               	addwfc	DelayTime_1us@i+1,f
 17406  1D81  2D61               	goto	l401
 17407  1D82                     __end_of_DelayTime_1us:	
 17408                           
 17409                           	psect	text117
 17410  18E9                     __ptext117:	
 17411 ;; *************** function _CC2500_ClearTXFIFO *****************
 17412 ;; Defined at:
 17413 ;;		line 161 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
 17414 ;; Parameters:    Size  Location     Type
 17415 ;;		None
 17416 ;; Auto vars:     Size  Location     Type
 17417 ;;		None
 17418 ;; Return value:  Size  Location     Type
 17419 ;;		None               void
 17420 ;; Registers used:
 17421 ;;		wreg, status,2, status,0, pclath, cstack
 17422 ;; Tracked objects:
 17423 ;;		On entry : 0/0
 17424 ;;		On exit  : 0/0
 17425 ;;		Unchanged: 0/0
 17426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17427 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17428 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17429 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17430 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17431 ;;Total ram usage:        0 bytes
 17432 ;; Hardware stack levels used:    1
 17433 ;; Hardware stack levels required when called:    6
 17434 ;; This function calls:
 17435 ;;		_CC2500_WriteCommand
 17436 ;; This function is called by:
 17437 ;;		_CC2500_PowerOnInitial
 17438 ;; This function uses a non-reentrant model
 17439 ;;
 17440                           
 17441                           
 17442                           ;psect for function _CC2500_ClearTXFIFO
 17443  18E9                     _CC2500_ClearTXFIFO:	
 17444                           
 17445                           ;CC2500_B1.c: 163: CC2500_WriteCommand(0x3B);
 17446                           
 17447                           ;incstack = 0
 17448                           ; Regs used in _CC2500_ClearTXFIFO: [wreg+status,2+status,0+pclath+cstack]
 17449  18E9  303B               	movlw	59
 17450  18EA  319A  225B         	fcall	_CC2500_WriteCommand
 17451  18EC  0008               	return
 17452  18ED                     __end_of_CC2500_ClearTXFIFO:	
 17453                           
 17454                           	psect	text118
 17455  18E5                     __ptext118:	
 17456 ;; *************** function _CC2500_ClearRXFIFO *****************
 17457 ;; Defined at:
 17458 ;;		line 168 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
 17459 ;; Parameters:    Size  Location     Type
 17460 ;;		None
 17461 ;; Auto vars:     Size  Location     Type
 17462 ;;		None
 17463 ;; Return value:  Size  Location     Type
 17464 ;;		None               void
 17465 ;; Registers used:
 17466 ;;		wreg, status,2, status,0, pclath, cstack
 17467 ;; Tracked objects:
 17468 ;;		On entry : 0/0
 17469 ;;		On exit  : 0/0
 17470 ;;		Unchanged: 0/0
 17471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17472 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17473 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17475 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17476 ;;Total ram usage:        0 bytes
 17477 ;; Hardware stack levels used:    1
 17478 ;; Hardware stack levels required when called:    6
 17479 ;; This function calls:
 17480 ;;		_CC2500_WriteCommand
 17481 ;; This function is called by:
 17482 ;;		_CC2500_PowerOnInitial
 17483 ;; This function uses a non-reentrant model
 17484 ;;
 17485                           
 17486                           
 17487                           ;psect for function _CC2500_ClearRXFIFO
 17488  18E5                     _CC2500_ClearRXFIFO:	
 17489                           
 17490                           ;CC2500_B1.c: 170: CC2500_WriteCommand(0x3A);
 17491                           
 17492                           ;incstack = 0
 17493                           ; Regs used in _CC2500_ClearRXFIFO: [wreg+status,2+status,0+pclath+cstack]
 17494  18E5  303A               	movlw	58
 17495  18E6  319A  225B         	fcall	_CC2500_WriteCommand
 17496  18E8  0008               	return
 17497  18E9                     __end_of_CC2500_ClearRXFIFO:	
 17498                           
 17499                           	psect	text119
 17500  1A5B                     __ptext119:	
 17501 ;; *************** function _CC2500_WriteCommand *****************
 17502 ;; Defined at:
 17503 ;;		line 253 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
 17504 ;; Parameters:    Size  Location     Type
 17505 ;;  command         1    wreg     unsigned char 
 17506 ;; Auto vars:     Size  Location     Type
 17507 ;;  command         1    3[BANK0 ] unsigned char 
 17508 ;; Return value:  Size  Location     Type
 17509 ;;		None               void
 17510 ;; Registers used:
 17511 ;;		wreg, status,2, status,0, pclath, cstack
 17512 ;; Tracked objects:
 17513 ;;		On entry : 0/0
 17514 ;;		On exit  : 0/0
 17515 ;;		Unchanged: 0/0
 17516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17518 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17519 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17520 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17521 ;;Total ram usage:        2 bytes
 17522 ;; Hardware stack levels used:    1
 17523 ;; Hardware stack levels required when called:    5
 17524 ;; This function calls:
 17525 ;;		_CC2500_WriteByte
 17526 ;; This function is called by:
 17527 ;;		_CC2500_TxData
 17528 ;;		_CC2500_RxData
 17529 ;;		_CC2500_ClearTXFIFO
 17530 ;;		_CC2500_ClearRXFIFO
 17531 ;;		_CC2500_FrequencyCabr
 17532 ;;		_CC2500_SIDLEMode
 17533 ;;		_setRF_Main
 17534 ;;		_RF_RxDisable
 17535 ;; This function uses a non-reentrant model
 17536 ;;
 17537                           
 17538                           
 17539                           ;psect for function _CC2500_WriteCommand
 17540  1A5B                     _CC2500_WriteCommand:	
 17541                           
 17542                           ;incstack = 0
 17543                           ; Regs used in _CC2500_WriteCommand: [wreg+status,2+status,0+pclath+cstack]
 17544                           ;CC2500_WriteCommand@command stored from wreg
 17545  1A5B  0020               	movlb	0	; select bank0
 17546  1A5C  00A3               	movwf	CC2500_WriteCommand@command
 17547                           
 17548                           ;CC2500_B1.c: 255: RC4=0;
 17549  1A5D  120E               	bcf	14,4	;volatile
 17550                           
 17551                           ;CC2500_B1.c: 256: SPI0Buffer=command;
 17552  1A5E  0823               	movf	CC2500_WriteCommand@command,w
 17553  1A5F  00A2               	movwf	??_CC2500_WriteCommand
 17554  1A60  0822               	movf	??_CC2500_WriteCommand,w
 17555  1A61  0021               	movlb	1	; select bank1
 17556  1A62  00BE               	movwf	_SPI0Buffer^(0+128)
 17557  1A63                     l389:	
 17558                           ;CC2500_B1.c: 258: while(RC2==1);
 17559                           
 17560  1A63  0020               	movlb	0	; select bank0
 17561  1A64  190E               	btfsc	14,2	;volatile
 17562  1A65  2A63               	goto	l389
 17563                           
 17564                           ;CC2500_B1.c: 260: CC2500_WriteByte();
 17565  1A66  319B  23A1         	fcall	_CC2500_WriteByte
 17566                           
 17567                           ;CC2500_B1.c: 261: RC4=1;
 17568  1A68  0020               	movlb	0	; select bank0
 17569  1A69  160E               	bsf	14,4	;volatile
 17570  1A6A  0008               	return
 17571  1A6B                     __end_of_CC2500_WriteCommand:	
 17572                           
 17573                           	psect	text120
 17574  1BA1                     __ptext120:	
 17575 ;; *************** function _CC2500_WriteByte *****************
 17576 ;; Defined at:
 17577 ;;		line 193 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
 17578 ;; Parameters:    Size  Location     Type
 17579 ;;		None
 17580 ;; Auto vars:     Size  Location     Type
 17581 ;;  loop_a          1    1[BANK0 ] unsigned char 
 17582 ;; Return value:  Size  Location     Type
 17583 ;;		None               void
 17584 ;; Registers used:
 17585 ;;		wreg, status,2, status,0
 17586 ;; Tracked objects:
 17587 ;;		On entry : 0/0
 17588 ;;		On exit  : 0/0
 17589 ;;		Unchanged: 0/0
 17590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17592 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17593 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17594 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17595 ;;Total ram usage:        2 bytes
 17596 ;; Hardware stack levels used:    1
 17597 ;; Hardware stack levels required when called:    4
 17598 ;; This function calls:
 17599 ;;		Nothing
 17600 ;; This function is called by:
 17601 ;;		_CC2500_TxData
 17602 ;;		_CC2500_RxData
 17603 ;;		_CC2500_PowerRST
 17604 ;;		_CC2500_WriteREG
 17605 ;;		_CC2500_WriteCommand
 17606 ;;		_CC2500_ReadStatus
 17607 ;;		_CC2500_ReadREG
 17608 ;; This function uses a non-reentrant model
 17609 ;;
 17610                           
 17611                           
 17612                           ;psect for function _CC2500_WriteByte
 17613  1BA1                     _CC2500_WriteByte:	
 17614                           
 17615                           ;CC2500_B1.c: 195: unsigned char loop_a;
 17616                           ;CC2500_B1.c: 196: for(loop_a=0;loop_a<8;loop_a++)
 17617                           
 17618                           ;incstack = 0
 17619                           ; Regs used in _CC2500_WriteByte: [wreg+status,2+status,0]
 17620  1BA1  0020               	movlb	0	; select bank0
 17621  1BA2  01A1               	clrf	CC2500_WriteByte@loop_a
 17622  1BA3                     L16:	
 17623  1BA3  3008               	movlw	8
 17624  1BA4  0221               	subwf	CC2500_WriteByte@loop_a,w
 17625  1BA5  1803               	btfsc	3,0
 17626  1BA6  0008               	return
 17627                           
 17628                           ;CC2500_B1.c: 197: {
 17629                           ;CC2500_B1.c: 198: if(SPI0Buffer&0x80)
 17630  1BA7  0021               	movlb	1	; select bank1
 17631  1BA8  1FBE               	btfss	_SPI0Buffer^(0+128),7
 17632  1BA9  2BAD               	goto	l365
 17633                           
 17634                           ;CC2500_B1.c: 199: RC0=1;
 17635  1BAA  0020               	movlb	0	; select bank0
 17636  1BAB  140E               	bsf	14,0	;volatile
 17637  1BAC  2BAF               	goto	l366
 17638  1BAD                     l365:	
 17639                           
 17640                           ;CC2500_B1.c: 200: else
 17641                           ;CC2500_B1.c: 201: RC0=0;
 17642  1BAD  0020               	movlb	0	; select bank0
 17643  1BAE  100E               	bcf	14,0	;volatile
 17644  1BAF                     l366:	
 17645                           
 17646                           ;CC2500_B1.c: 202: RC1=1;
 17647  1BAF  148E               	bsf	14,1	;volatile
 17648                           
 17649                           ;CC2500_B1.c: 203: SPI0Buffer<<=1;
 17650  1BB0  1003               	clrc
 17651  1BB1  0021               	movlb	1	; select bank1
 17652  1BB2  0DBE               	rlf	_SPI0Buffer^(0+128),f
 17653                           
 17654                           ;CC2500_B1.c: 204: RC1=0;
 17655  1BB3  0020               	movlb	0	; select bank0
 17656  1BB4  108E               	bcf	14,1	;volatile
 17657  1BB5  3001               	movlw	1
 17658  1BB6  00A0               	movwf	??_CC2500_WriteByte
 17659  1BB7  0820               	movf	??_CC2500_WriteByte,w
 17660  1BB8  07A1               	addwf	CC2500_WriteByte@loop_a,f
 17661  1BB9  2BA3               	goto	L16
 17662  1BBA                     __end_of_CC2500_WriteByte:	
 17663                           
 17664                           	psect	text121
 17665  0C1C                     __ptext121:	
 17666 ;; *************** function _Buzzer_Main *****************
 17667 ;; Defined at:
 17668 ;;		line 53 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Buzzer_B1.c"
 17669 ;; Parameters:    Size  Location     Type
 17670 ;;		None
 17671 ;; Auto vars:     Size  Location     Type
 17672 ;;		None
 17673 ;; Return value:  Size  Location     Type
 17674 ;;		None               void
 17675 ;; Registers used:
 17676 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 17677 ;; Tracked objects:
 17678 ;;		On entry : 0/0
 17679 ;;		On exit  : 0/0
 17680 ;;		Unchanged: 0/0
 17681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17682 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17684 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17685 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17686 ;;Total ram usage:        4 bytes
 17687 ;; Hardware stack levels used:    1
 17688 ;; Hardware stack levels required when called:    4
 17689 ;; This function calls:
 17690 ;;		Nothing
 17691 ;; This function is called by:
 17692 ;;		_main
 17693 ;; This function uses a non-reentrant model
 17694 ;;
 17695                           
 17696                           
 17697                           ;psect for function _Buzzer_Main
 17698  0C1C                     _Buzzer_Main:	
 17699                           
 17700                           ;Buzzer_B1.c: 55: Buz->Switch=(RB3)?1:0;
 17701                           
 17702                           ;incstack = 0
 17703                           ; Regs used in _Buzzer_Main: [wreg-fsr1h+status,2+status,0]
 17704  0C1C  0020               	movlb	0	; select bank0
 17705  0C1D  0868               	movf	_Buz,w
 17706  0C1E  0086               	movwf	6
 17707  0C1F  3001               	movlw	1	; select bank2/3
 17708  0C20  0087               	movwf	7
 17709  0C21  1281               	bcf	1,5
 17710  0C22  198D               	btfsc	13,3	;volatile
 17711  0C23  1681               	bsf	1,5
 17712                           
 17713                           ;Buzzer_B1.c: 57: if(Buz->GO)
 17714  0C24  0020               	movlb	0	; select bank0
 17715  0C25  0868               	movf	_Buz,w
 17716  0C26  0086               	movwf	6
 17717  0C27  3001               	movlw	1	; select bank2/3
 17718  0C28  0087               	movwf	7
 17719  0C29  1C81               	btfss	1,1
 17720  0C2A  0008               	return
 17721                           
 17722                           ;Buzzer_B1.c: 58: {
 17723                           ;Buzzer_B1.c: 60: if(Buz->Time >= Buz->TimeValue)
 17724  0C2B  0868               	movf	_Buz,w
 17725  0C2C  3E06               	addlw	6
 17726  0C2D  0086               	movwf	6
 17727  0C2E  3001               	movlw	1	; select bank2/3
 17728  0C2F  0087               	movwf	7
 17729  0C30  3F40               	moviw [0]fsr1
 17730  0C31  00A0               	movwf	??_Buzzer_Main
 17731  0C32  3F41               	moviw [1]fsr1
 17732  0C33  00A1               	movwf	??_Buzzer_Main+1
 17733  0C34  0A68               	incf	_Buz,w
 17734  0C35  0086               	movwf	6
 17735  0C36  3001               	movlw	1	; select bank2/3
 17736  0C37  0087               	movwf	7
 17737  0C38  3F40               	moviw [0]fsr1
 17738  0C39  00A2               	movwf	??_Buzzer_Main+2
 17739  0C3A  3F41               	moviw [1]fsr1
 17740  0C3B  00A3               	movwf	??_Buzzer_Main+3
 17741  0C3C  0821               	movf	??_Buzzer_Main+1,w
 17742  0C3D  0223               	subwf	??_Buzzer_Main+3,w
 17743  0C3E  1D03               	skipz
 17744  0C3F  2C42               	goto	u10055
 17745  0C40  0820               	movf	??_Buzzer_Main,w
 17746  0C41  0222               	subwf	??_Buzzer_Main+2,w
 17747  0C42                     u10055:	
 17748  0C42  1C03               	skipc
 17749  0C43  0008               	return
 17750                           
 17751                           ;Buzzer_B1.c: 61: {
 17752                           ;Buzzer_B1.c: 62: Buz->Time=0;
 17753  0C44  0A68               	incf	_Buz,w
 17754  0C45  0086               	movwf	6
 17755  0C46  3001               	movlw	1	; select bank2/3
 17756  0C47  0087               	movwf	7
 17757  0C48  3000               	movlw	0
 17758  0C49  3FC0               	movwi [0]fsr1
 17759  0C4A  3FC1               	movwi [1]fsr1
 17760                           
 17761                           ;Buzzer_B1.c: 63: if(!Buz->Switch)
 17762  0C4B  0868               	movf	_Buz,w
 17763  0C4C  0086               	movwf	6
 17764  0C4D  3001               	movlw	1	; select bank2/3
 17765  0C4E  0087               	movwf	7
 17766  0C4F  1A81               	btfsc	1,5
 17767  0C50  2CB6               	goto	l9614
 17768                           
 17769                           ;Buzzer_B1.c: 64: {
 17770                           ;Buzzer_B1.c: 65: if(Buz->Count == 0)
 17771  0C51  0868               	movf	_Buz,w
 17772  0C52  3E03               	addlw	3
 17773  0C53  0086               	movwf	6
 17774  0C54  3001               	movlw	1	; select bank2/3
 17775  0C55  0087               	movwf	7
 17776  0C56  0881               	movf	1,f
 17777  0C57  1D03               	skipz
 17778  0C58  2CAF               	goto	l9610
 17779                           
 17780                           ;Buzzer_B1.c: 66: {
 17781                           ;Buzzer_B1.c: 67: if(Buz->BufferStatus1)
 17782  0C59  0868               	movf	_Buz,w
 17783  0C5A  0086               	movwf	6
 17784  0C5B  3001               	movlw	1	; select bank2/3
 17785  0C5C  0087               	movwf	7
 17786  0C5D  1D81               	btfss	1,3
 17787  0C5E  2C81               	goto	l9602
 17788                           
 17789                           ;Buzzer_B1.c: 68: {
 17790                           ;Buzzer_B1.c: 69: Buz->BufferStatus1=0;
 17791  0C5F  0868               	movf	_Buz,w
 17792  0C60  0086               	movwf	6
 17793  0C61  3001               	movlw	1	; select bank2/3
 17794  0C62  0087               	movwf	7
 17795  0C63  1181               	bcf	1,3
 17796                           
 17797                           ;Buzzer_B1.c: 70: Buz->Count=Buz->CountBuffer1;
 17798  0C64  0868               	movf	_Buz,w
 17799  0C65  3E04               	addlw	4
 17800  0C66  0086               	movwf	6
 17801  0C67  3001               	movlw	1	; select bank2/3
 17802  0C68  0087               	movwf	7
 17803  0C69  0801               	movf	1,w
 17804  0C6A  00A0               	movwf	??_Buzzer_Main
 17805  0C6B  0868               	movf	_Buz,w
 17806  0C6C  3E03               	addlw	3
 17807  0C6D  0086               	movwf	6
 17808  0C6E  3001               	movlw	1	; select bank2/3
 17809  0C6F  0087               	movwf	7
 17810  0C70  0820               	movf	??_Buzzer_Main,w
 17811  0C71  0081               	movwf	1
 17812                           
 17813                           ;Buzzer_B1.c: 71: Buz->TimeValue=Buz->TimeValueBuffer1;
 17814  0C72  0868               	movf	_Buz,w
 17815  0C73  3E08               	addlw	8
 17816  0C74  0086               	movwf	6
 17817  0C75  3001               	movlw	1	; select bank2/3
 17818  0C76  0087               	movwf	7
 17819  0C77  0868               	movf	_Buz,w
 17820  0C78  3E06               	addlw	6
 17821  0C79  0084               	movwf	4
 17822  0C7A  3001               	movlw	1	; select bank2/3
 17823  0C7B  0085               	movwf	5
 17824  0C7C  3F40               	moviw [0]fsr1
 17825  0C7D  3F80               	movwi [0]fsr0
 17826  0C7E  3F41               	moviw [1]fsr1
 17827  0C7F  3F81               	movwi [1]fsr0
 17828                           
 17829                           ;Buzzer_B1.c: 72: }
 17830  0C80  0008               	return
 17831  0C81                     l9602:	
 17832                           
 17833                           ;Buzzer_B1.c: 73: else if(Buz->BufferStatus2)
 17834  0C81  0868               	movf	_Buz,w
 17835  0C82  0086               	movwf	6
 17836  0C83  3001               	movlw	1	; select bank2/3
 17837  0C84  0087               	movwf	7
 17838  0C85  1E01               	btfss	1,4
 17839  0C86  2CA9               	goto	l9608
 17840                           
 17841                           ;Buzzer_B1.c: 74: {
 17842                           ;Buzzer_B1.c: 75: Buz->BufferStatus2=0;
 17843  0C87  0868               	movf	_Buz,w
 17844  0C88  0086               	movwf	6
 17845  0C89  3001               	movlw	1	; select bank2/3
 17846  0C8A  0087               	movwf	7
 17847  0C8B  1201               	bcf	1,4
 17848                           
 17849                           ;Buzzer_B1.c: 76: Buz->Count=Buz->CountBuffer2;
 17850  0C8C  0868               	movf	_Buz,w
 17851  0C8D  3E05               	addlw	5
 17852  0C8E  0086               	movwf	6
 17853  0C8F  3001               	movlw	1	; select bank2/3
 17854  0C90  0087               	movwf	7
 17855  0C91  0801               	movf	1,w
 17856  0C92  00A0               	movwf	??_Buzzer_Main
 17857  0C93  0868               	movf	_Buz,w
 17858  0C94  3E03               	addlw	3
 17859  0C95  0086               	movwf	6
 17860  0C96  3001               	movlw	1	; select bank2/3
 17861  0C97  0087               	movwf	7
 17862  0C98  0820               	movf	??_Buzzer_Main,w
 17863  0C99  0081               	movwf	1
 17864                           
 17865                           ;Buzzer_B1.c: 77: Buz->TimeValue=Buz->TimeValueBuffer2;
 17866  0C9A  0868               	movf	_Buz,w
 17867  0C9B  3E0A               	addlw	10
 17868  0C9C  0086               	movwf	6
 17869  0C9D  3001               	movlw	1	; select bank2/3
 17870  0C9E  0087               	movwf	7
 17871  0C9F  0868               	movf	_Buz,w
 17872  0CA0  3E06               	addlw	6
 17873  0CA1  0084               	movwf	4
 17874  0CA2  3001               	movlw	1	; select bank2/3
 17875  0CA3  0085               	movwf	5
 17876  0CA4  3F40               	moviw [0]fsr1
 17877  0CA5  3F80               	movwi [0]fsr0
 17878  0CA6  3F41               	moviw [1]fsr1
 17879  0CA7  3F81               	movwi [1]fsr0
 17880                           
 17881                           ;Buzzer_B1.c: 78: }
 17882  0CA8  0008               	return
 17883  0CA9                     l9608:	
 17884                           
 17885                           ;Buzzer_B1.c: 79: else
 17886                           ;Buzzer_B1.c: 80: {
 17887                           ;Buzzer_B1.c: 81: Buz->GO=0;
 17888  0CA9  0868               	movf	_Buz,w
 17889  0CAA  0086               	movwf	6
 17890  0CAB  3001               	movlw	1	; select bank2/3
 17891  0CAC  0087               	movwf	7
 17892  0CAD  1081               	bcf	1,1
 17893                           
 17894                           ;Buzzer_B1.c: 82: }
 17895                           ;Buzzer_B1.c: 83: }
 17896  0CAE  0008               	return
 17897  0CAF                     l9610:	
 17898                           
 17899                           ;Buzzer_B1.c: 84: else
 17900                           ;Buzzer_B1.c: 85: {
 17901                           ;Buzzer_B1.c: 86: Buz->Switch=1;
 17902  0CAF  0868               	movf	_Buz,w
 17903  0CB0  0086               	movwf	6
 17904  0CB1  3001               	movlw	1	; select bank2/3
 17905  0CB2  0087               	movwf	7
 17906  0CB3  1681               	bsf	1,5
 17907                           
 17908                           ;Buzzer_B1.c: 88: RB3=1;
 17909  0CB4  158D               	bsf	13,3	;volatile
 17910                           
 17911                           ;Buzzer_B1.c: 89: }
 17912                           ;Buzzer_B1.c: 90: }
 17913  0CB5  0008               	return
 17914  0CB6                     l9614:	
 17915                           
 17916                           ;Buzzer_B1.c: 91: else
 17917                           ;Buzzer_B1.c: 92: {
 17918                           ;Buzzer_B1.c: 93: Buz->Switch=0;
 17919  0CB6  0868               	movf	_Buz,w
 17920  0CB7  0086               	movwf	6
 17921  0CB8  3001               	movlw	1	; select bank2/3
 17922  0CB9  0087               	movwf	7
 17923  0CBA  1281               	bcf	1,5
 17924                           
 17925                           ;Buzzer_B1.c: 95: RB3=0;
 17926  0CBB  118D               	bcf	13,3	;volatile
 17927                           
 17928                           ;Buzzer_B1.c: 97: Buz->Count--;
 17929  0CBC  0868               	movf	_Buz,w
 17930  0CBD  3E03               	addlw	3
 17931  0CBE  0086               	movwf	6
 17932  0CBF  3001               	movlw	1	; select bank2/3
 17933  0CC0  0087               	movwf	7
 17934  0CC1  3001               	movlw	1
 17935  0CC2  0281               	subwf	1,f
 17936  0CC3  0008               	return
 17937  0CC4                     __end_of_Buzzer_Main:	
 17938                           
 17939                           	psect	text122
 17940  1970                     __ptext122:	
 17941 ;; *************** function _Buzzer_Initialization *****************
 17942 ;; Defined at:
 17943 ;;		line 10 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Buzzer_B1.c"
 17944 ;; Parameters:    Size  Location     Type
 17945 ;;		None
 17946 ;; Auto vars:     Size  Location     Type
 17947 ;;		None
 17948 ;; Return value:  Size  Location     Type
 17949 ;;		None               void
 17950 ;; Registers used:
 17951 ;;		wreg, fsr1l, fsr1h
 17952 ;; Tracked objects:
 17953 ;;		On entry : 0/0
 17954 ;;		On exit  : 0/0
 17955 ;;		Unchanged: 0/0
 17956 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17957 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17959 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17960 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17961 ;;Total ram usage:        1 bytes
 17962 ;; Hardware stack levels used:    1
 17963 ;; Hardware stack levels required when called:    4
 17964 ;; This function calls:
 17965 ;;		Nothing
 17966 ;; This function is called by:
 17967 ;;		_main
 17968 ;; This function uses a non-reentrant model
 17969 ;;
 17970                           
 17971                           
 17972                           ;psect for function _Buzzer_Initialization
 17973  1970                     _Buzzer_Initialization:	
 17974                           
 17975                           ;Buzzer_B1.c: 12: Buz=&Buz1;
 17976                           
 17977                           ;incstack = 0
 17978                           ; Regs used in _Buzzer_Initialization: [wregfsr1]
 17979  1970  304A               	movlw	_Buz1& (0+255)
 17980  1971  0020               	movlb	0	; select bank0
 17981  1972  00A0               	movwf	??_Buzzer_Initialization
 17982  1973  0820               	movf	??_Buzzer_Initialization,w
 17983  1974  00E8               	movwf	_Buz
 17984                           
 17985                           ;Buzzer_B1.c: 13: Buz->Enable=1;
 17986  1975  0868               	movf	_Buz,w
 17987  1976  0086               	movwf	6
 17988  1977  3001               	movlw	1	; select bank2/3
 17989  1978  0087               	movwf	7
 17990  1979  1401               	bsf	1,0
 17991  197A  0008               	return
 17992  197B                     __end_of_Buzzer_Initialization:	
 17993                           
 17994                           	psect	intentry
 17995  0004                     __pintentry:	
 17996 ;; *************** function _ISR *****************
 17997 ;; Defined at:
 17998 ;;		line 97 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
 17999 ;; Parameters:    Size  Location     Type
 18000 ;;		None
 18001 ;; Auto vars:     Size  Location     Type
 18002 ;;		None
 18003 ;; Return value:  Size  Location     Type
 18004 ;;		None               void
 18005 ;; Registers used:
 18006 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18007 ;; Tracked objects:
 18008 ;;		On entry : 0/0
 18009 ;;		On exit  : 0/0
 18010 ;;		Unchanged: 0/0
 18011 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18012 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18013 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18014 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18015 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18016 ;;Total ram usage:        1 bytes
 18017 ;; Hardware stack levels used:    1
 18018 ;; Hardware stack levels required when called:    3
 18019 ;; This function calls:
 18020 ;;		_INT_ISR
 18021 ;;		_IOC_ISR
 18022 ;;		_TMR0_ISR
 18023 ;; This function is called by:
 18024 ;;		Interrupt level 1
 18025 ;; This function uses a non-reentrant model
 18026 ;;
 18027                           
 18028  0004                     _ISR:	
 18029                           
 18030                           ;incstack = 0
 18031                           ; Regs used in _ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18032  0004  147E               	bsf	126,0	;set compiler interrupt flag
 18033  0005  3180               	pagesel	$
 18034  0006  0020               	movlb	0	; select bank0
 18035  0007  087F               	movf	127,w
 18036  0008  00F5               	movwf	??_ISR
 18037                           
 18038                           ;MCU_B1.c: 99: IOC_ISR();
 18039  0009  319D  2537  3180   	fcall	_IOC_ISR
 18040                           
 18041                           ;MCU_B1.c: 101: TMR0_ISR();
 18042  000C  3180  2051  3180   	fcall	_TMR0_ISR
 18043                           
 18044                           ;MCU_B1.c: 103: ;;
 18045                           ;MCU_B1.c: 107: INT_ISR();
 18046  000F  3199  21BE         	fcall	_INT_ISR
 18047  0011  0875               	movf	??_ISR,w
 18048  0012  0020               	movlb	0	; select bank0
 18049  0013  00FF               	movwf	127
 18050  0014  107E               	bcf	126,0	;clear compiler interrupt flag
 18051  0015  0009               	retfie
 18052  0016                     __end_of_ISR:	
 18053                           
 18054                           	psect	text124
 18055  0051                     __ptext124:	
 18056 ;; *************** function _TMR0_ISR *****************
 18057 ;; Defined at:
 18058 ;;		line 125 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
 18059 ;; Parameters:    Size  Location     Type
 18060 ;;		None
 18061 ;; Auto vars:     Size  Location     Type
 18062 ;;		None
 18063 ;; Return value:  Size  Location     Type
 18064 ;;		None               void
 18065 ;; Registers used:
 18066 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 18067 ;; Tracked objects:
 18068 ;;		On entry : 0/0
 18069 ;;		On exit  : 0/0
 18070 ;;		Unchanged: 0/0
 18071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18074 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18075 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18076 ;;Total ram usage:        4 bytes
 18077 ;; Hardware stack levels used:    1
 18078 ;; This function calls:
 18079 ;;		Nothing
 18080 ;; This function is called by:
 18081 ;;		_ISR
 18082 ;; This function uses a non-reentrant model
 18083 ;;
 18084                           
 18085                           
 18086                           ;psect for function _TMR0_ISR
 18087  0051                     _TMR0_ISR:	
 18088                           
 18089                           ;MCU_B1.c: 127: if(TMR0IE && TMR0IF)
 18090                           
 18091                           ;incstack = 0
 18092                           ; Regs used in _TMR0_ISR: [wreg-fsr1h+status,2+status,0]
 18093  0051  1E8B               	btfss	11,5	;volatile
 18094  0052  0008               	return
 18095  0053  1D0B               	btfss	11,2	;volatile
 18096  0054  0008               	return
 18097                           
 18098                           ;MCU_B1.c: 128: {
 18099                           ;MCU_B1.c: 129: TMR0=(256-90);
 18100  0055  30A6               	movlw	166
 18101  0056  0020               	movlb	0	; select bank0
 18102  0057  0095               	movwf	21	;volatile
 18103                           
 18104                           ;MCU_B1.c: 130: TMR0IF=0;
 18105  0058  110B               	bcf	11,2	;volatile
 18106                           
 18107                           ;MCU_B1.c: 135: if(DimmerLights11->GO) { DimmerLights11->Count++; if(DimmerLights11->Cou
      +                          nt >= (DimmerLights11->DimmingValue-Dimmer->Correction)) { DimmerLights11->Count=0; Dimm
      +                          erLights11->GO=0; DimmerLights11->Flag=1; if(DimmerLights11->StatusFlag) { RA7=1; ;; } }
      +                           }
 18108  0059  086B               	movf	_DimmerLights11,w
 18109  005A  0086               	movwf	6
 18110  005B  3001               	movlw	1	; select bank2/3
 18111  005C  0087               	movwf	7
 18112  005D  1C01               	btfss	1,0
 18113  005E  28AA               	goto	i1l7638
 18114  005F  3001               	movlw	1
 18115  0060  00F1               	movwf	??_TMR0_ISR
 18116  0061  086B               	movf	_DimmerLights11,w
 18117  0062  3E03               	addlw	3
 18118  0063  0086               	movwf	6
 18119  0064  3001               	movlw	1	; select bank2/3
 18120  0065  0087               	movwf	7
 18121  0066  0871               	movf	??_TMR0_ISR,w
 18122  0067  0781               	addwf	1,f
 18123  0068  0021               	movlb	1	; select bank1
 18124  0069  0838               	movf	_Dimmer^(0+128),w
 18125  006A  3E02               	addlw	2
 18126  006B  0086               	movwf	6
 18127  006C  0187               	clrf	7
 18128  006D  0801               	movf	1,w
 18129  006E  00F1               	movwf	??_TMR0_ISR
 18130  006F  01F2               	clrf	??_TMR0_ISR+1
 18131  0070  09F1               	comf	??_TMR0_ISR,f
 18132  0071  09F2               	comf	??_TMR0_ISR+1,f
 18133  0072  0AF1               	incf	??_TMR0_ISR,f
 18134  0073  1903               	skipnz
 18135  0074  0AF2               	incf	??_TMR0_ISR+1,f
 18136  0075  0020               	movlb	0	; select bank0
 18137  0076  086B               	movf	_DimmerLights11,w
 18138  0077  3E04               	addlw	4
 18139  0078  0086               	movwf	6
 18140  0079  3001               	movlw	1	; select bank2/3
 18141  007A  0087               	movwf	7
 18142  007B  0801               	movf	1,w
 18143  007C  0771               	addwf	??_TMR0_ISR,w
 18144  007D  00F3               	movwf	??_TMR0_ISR+2
 18145  007E  0872               	movf	??_TMR0_ISR+1,w
 18146  007F  1803               	skipnc
 18147  0080  0A72               	incf	??_TMR0_ISR+1,w
 18148  0081  00F4               	movwf	??_TMR0_ISR+3
 18149  0082  086B               	movf	_DimmerLights11,w
 18150  0083  3E03               	addlw	3
 18151  0084  0086               	movwf	6
 18152  0085  3001               	movlw	1	; select bank2/3
 18153  0086  0087               	movwf	7
 18154  0087  0874               	movf	??_TMR0_ISR+3,w
 18155  0088  3A80               	xorlw	128
 18156  0089  3C80               	sublw	128
 18157  008A  1D03               	skipz
 18158  008B  288E               	goto	u677_25
 18159  008C  0873               	movf	??_TMR0_ISR+2,w
 18160  008D  0201               	subwf	1,w
 18161  008E                     u677_25:	
 18162  008E  1C03               	skipc
 18163  008F  29DD               	goto	i1l7702
 18164  0090  0020               	movlb	0	; select bank0
 18165  0091  086B               	movf	_DimmerLights11,w
 18166  0092  3E03               	addlw	3
 18167  0093  0086               	movwf	6
 18168  0094  3001               	movlw	1	; select bank2/3
 18169  0095  0087               	movwf	7
 18170  0096  0181               	clrf	1
 18171  0097  086B               	movf	_DimmerLights11,w
 18172  0098  0086               	movwf	6
 18173  0099  3001               	movlw	1	; select bank2/3
 18174  009A  0087               	movwf	7
 18175  009B  1001               	bcf	1,0
 18176  009C  086B               	movf	_DimmerLights11,w
 18177  009D  3E07               	addlw	7
 18178  009E  0086               	movwf	6
 18179  009F  3001               	movlw	1	; select bank2/3
 18180  00A0  0087               	movwf	7
 18181  00A1  1401               	bsf	1,0
 18182  00A2  086B               	movf	_DimmerLights11,w
 18183  00A3  0086               	movwf	6
 18184  00A4  3001               	movlw	1	; select bank2/3
 18185  00A5  0087               	movwf	7
 18186  00A6  1F01               	btfss	1,6
 18187  00A7  29DD               	goto	i1l7702
 18188  00A8  178C               	bsf	12,7	;volatile
 18189  00A9  29DD               	goto	i1l7702
 18190  00AA                     i1l7638:	
 18191  00AA  086B               	movf	_DimmerLights11,w
 18192  00AB  3E07               	addlw	7
 18193  00AC  0086               	movwf	6
 18194  00AD  3001               	movlw	1	; select bank2/3
 18195  00AE  0087               	movwf	7
 18196  00AF  1C01               	btfss	1,0
 18197  00B0  29A9               	goto	i1l7694
 18198  00B1  086B               	movf	_DimmerLights11,w
 18199  00B2  3E07               	addlw	7
 18200  00B3  0086               	movwf	6
 18201  00B4  3001               	movlw	1	; select bank2/3
 18202  00B5  0087               	movwf	7
 18203  00B6  1001               	bcf	1,0
 18204  00B7  086B               	movf	_DimmerLights11,w
 18205  00B8  0086               	movwf	6
 18206  00B9  3001               	movlw	1	; select bank2/3
 18207  00BA  0087               	movwf	7
 18208  00BB  1C81               	btfss	1,1
 18209  00BC  29A9               	goto	i1l7694
 18210  00BD  3001               	movlw	1
 18211  00BE  00F1               	movwf	??_TMR0_ISR
 18212  00BF  0A6B               	incf	_DimmerLights11,w
 18213  00C0  0086               	movwf	6
 18214  00C1  3001               	movlw	1	; select bank2/3
 18215  00C2  0087               	movwf	7
 18216  00C3  0871               	movf	??_TMR0_ISR,w
 18217  00C4  0781               	addwf	1,f
 18218  00C5  0A6B               	incf	_DimmerLights11,w
 18219  00C6  0086               	movwf	6
 18220  00C7  3001               	movlw	1	; select bank2/3
 18221  00C8  0087               	movwf	7
 18222  00C9  086B               	movf	_DimmerLights11,w
 18223  00CA  3E02               	addlw	2
 18224  00CB  0084               	movwf	4
 18225  00CC  3001               	movlw	1	; select bank2/3
 18226  00CD  0085               	movwf	5
 18227  00CE  0800               	movf	0,w
 18228  00CF  0201               	subwf	1,w
 18229  00D0  1C03               	skipc
 18230  00D1  29A9               	goto	i1l7694
 18231  00D2  0A6B               	incf	_DimmerLights11,w
 18232  00D3  0086               	movwf	6
 18233  00D4  3001               	movlw	1	; select bank2/3
 18234  00D5  0087               	movwf	7
 18235  00D6  0181               	clrf	1
 18236  00D7  086B               	movf	_DimmerLights11,w
 18237  00D8  0086               	movwf	6
 18238  00D9  3001               	movlw	1	; select bank2/3
 18239  00DA  0087               	movwf	7
 18240  00DB  1D81               	btfss	1,3
 18241  00DC  2913               	goto	i1l7664
 18242  00DD  086B               	movf	_DimmerLights11,w
 18243  00DE  0086               	movwf	6
 18244  00DF  3001               	movlw	1	; select bank2/3
 18245  00E0  0087               	movwf	7
 18246  00E1  1A01               	btfsc	1,4
 18247  00E2  28FA               	goto	i1l7658
 18248  00E3  086B               	movf	_DimmerLights11,w
 18249  00E4  3E04               	addlw	4
 18250  00E5  0086               	movwf	6
 18251  00E6  3001               	movlw	1	; select bank2/3
 18252  00E7  0087               	movwf	7
 18253  00E8  3044               	movlw	68
 18254  00E9  0201               	subwf	1,w
 18255  00EA  1C03               	skipc
 18256  00EB  28F4               	goto	i1l7656
 18257  00EC  086B               	movf	_DimmerLights11,w
 18258  00ED  3E04               	addlw	4
 18259  00EE  0086               	movwf	6
 18260  00EF  3001               	movlw	1	; select bank2/3
 18261  00F0  0087               	movwf	7
 18262  00F1  3001               	movlw	1
 18263  00F2  0281               	subwf	1,f
 18264  00F3  29A9               	goto	i1l7694
 18265  00F4                     i1l7656:	
 18266  00F4  086B               	movf	_DimmerLights11,w
 18267  00F5  0086               	movwf	6
 18268  00F6  3001               	movlw	1	; select bank2/3
 18269  00F7  0087               	movwf	7
 18270  00F8  1601               	bsf	1,4
 18271  00F9  29A9               	goto	i1l7694
 18272  00FA                     i1l7658:	
 18273  00FA  086B               	movf	_DimmerLights11,w
 18274  00FB  3E04               	addlw	4
 18275  00FC  0086               	movwf	6
 18276  00FD  3001               	movlw	1	; select bank2/3
 18277  00FE  0087               	movwf	7
 18278  00FF  3078               	movlw	120
 18279  0100  0201               	subwf	1,w
 18280  0101  1803               	skipnc
 18281  0102  290D               	goto	i1l7662
 18282  0103  3001               	movlw	1
 18283  0104  00F1               	movwf	??_TMR0_ISR
 18284  0105  086B               	movf	_DimmerLights11,w
 18285  0106  3E04               	addlw	4
 18286  0107  0086               	movwf	6
 18287  0108  3001               	movlw	1	; select bank2/3
 18288  0109  0087               	movwf	7
 18289  010A  0871               	movf	??_TMR0_ISR,w
 18290  010B  0781               	addwf	1,f
 18291  010C  29A9               	goto	i1l7694
 18292  010D                     i1l7662:	
 18293  010D  086B               	movf	_DimmerLights11,w
 18294  010E  0086               	movwf	6
 18295  010F  3001               	movlw	1	; select bank2/3
 18296  0110  0087               	movwf	7
 18297  0111  1201               	bcf	1,4
 18298  0112  29A9               	goto	i1l7694
 18299  0113                     i1l7664:	
 18300  0113  086B               	movf	_DimmerLights11,w
 18301  0114  0086               	movwf	6
 18302  0115  3001               	movlw	1	; select bank2/3
 18303  0116  0087               	movwf	7
 18304  0117  1D01               	btfss	1,2
 18305  0118  295A               	goto	i1l7678
 18306  0119  086B               	movf	_DimmerLights11,w
 18307  011A  3E05               	addlw	5
 18308  011B  0086               	movwf	6
 18309  011C  3001               	movlw	1	; select bank2/3
 18310  011D  0087               	movwf	7
 18311  011E  086B               	movf	_DimmerLights11,w
 18312  011F  3E04               	addlw	4
 18313  0120  0084               	movwf	4
 18314  0121  3001               	movlw	1	; select bank2/3
 18315  0122  0085               	movwf	5
 18316  0123  0800               	movf	0,w
 18317  0124  0201               	subwf	1,w
 18318  0125  1803               	skipnc
 18319  0126  292F               	goto	i1l7670
 18320  0127  086B               	movf	_DimmerLights11,w
 18321  0128  3E04               	addlw	4
 18322  0129  0086               	movwf	6
 18323  012A  3001               	movlw	1	; select bank2/3
 18324  012B  0087               	movwf	7
 18325  012C  3001               	movlw	1
 18326  012D  0281               	subwf	1,f
 18327  012E  2946               	goto	i1l7674
 18328  012F                     i1l7670:	
 18329  012F  086B               	movf	_DimmerLights11,w
 18330  0130  3E04               	addlw	4
 18331  0131  0086               	movwf	6
 18332  0132  3001               	movlw	1	; select bank2/3
 18333  0133  0087               	movwf	7
 18334  0134  086B               	movf	_DimmerLights11,w
 18335  0135  3E05               	addlw	5
 18336  0136  0084               	movwf	4
 18337  0137  3001               	movlw	1	; select bank2/3
 18338  0138  0085               	movwf	5
 18339  0139  0800               	movf	0,w
 18340  013A  0201               	subwf	1,w
 18341  013B  1803               	skipnc
 18342  013C  2946               	goto	i1l7674
 18343  013D  3001               	movlw	1
 18344  013E  00F1               	movwf	??_TMR0_ISR
 18345  013F  086B               	movf	_DimmerLights11,w
 18346  0140  3E04               	addlw	4
 18347  0141  0086               	movwf	6
 18348  0142  3001               	movlw	1	; select bank2/3
 18349  0143  0087               	movwf	7
 18350  0144  0871               	movf	??_TMR0_ISR,w
 18351  0145  0781               	addwf	1,f
 18352  0146                     i1l7674:	
 18353  0146  086B               	movf	_DimmerLights11,w
 18354  0147  3E05               	addlw	5
 18355  0148  0086               	movwf	6
 18356  0149  3001               	movlw	1	; select bank2/3
 18357  014A  0087               	movwf	7
 18358  014B  086B               	movf	_DimmerLights11,w
 18359  014C  3E04               	addlw	4
 18360  014D  0084               	movwf	4
 18361  014E  3001               	movlw	1	; select bank2/3
 18362  014F  0085               	movwf	5
 18363  0150  0800               	movf	0,w
 18364  0151  0601               	xorwf	1,w
 18365  0152  1D03               	skipz
 18366  0153  29A9               	goto	i1l7694
 18367  0154  086B               	movf	_DimmerLights11,w
 18368  0155  0086               	movwf	6
 18369  0156  3001               	movlw	1	; select bank2/3
 18370  0157  0087               	movwf	7
 18371  0158  1101               	bcf	1,2
 18372  0159  2975               	goto	i1l7684
 18373  015A                     i1l7678:	
 18374  015A  086B               	movf	_DimmerLights11,w
 18375  015B  0086               	movwf	6
 18376  015C  3001               	movlw	1	; select bank2/3
 18377  015D  0087               	movwf	7
 18378  015E  1E81               	btfss	1,5
 18379  015F  297B               	goto	i1l7686
 18380  0160  086B               	movf	_DimmerLights11,w
 18381  0161  3E04               	addlw	4
 18382  0162  0086               	movwf	6
 18383  0163  3001               	movlw	1	; select bank2/3
 18384  0164  0087               	movwf	7
 18385  0165  3001               	movlw	1
 18386  0166  0281               	subwf	1,f
 18387  0167  086B               	movf	_DimmerLights11,w
 18388  0168  3E05               	addlw	5
 18389  0169  0086               	movwf	6
 18390  016A  3001               	movlw	1	; select bank2/3
 18391  016B  0087               	movwf	7
 18392  016C  086B               	movf	_DimmerLights11,w
 18393  016D  3E04               	addlw	4
 18394  016E  0084               	movwf	4
 18395  016F  3001               	movlw	1	; select bank2/3
 18396  0170  0085               	movwf	5
 18397  0171  0800               	movf	0,w
 18398  0172  0201               	subwf	1,w
 18399  0173  1C03               	skipc
 18400  0174  29A9               	goto	i1l7694
 18401  0175                     i1l7684:	
 18402  0175  086B               	movf	_DimmerLights11,w
 18403  0176  0086               	movwf	6
 18404  0177  3001               	movlw	1	; select bank2/3
 18405  0178  0087               	movwf	7
 18406  0179  1081               	bcf	1,1
 18407  017A  29A9               	goto	i1l7694
 18408  017B                     i1l7686:	
 18409  017B  3001               	movlw	1
 18410  017C  00F1               	movwf	??_TMR0_ISR
 18411  017D  086B               	movf	_DimmerLights11,w
 18412  017E  3E04               	addlw	4
 18413  017F  0086               	movwf	6
 18414  0180  3001               	movlw	1	; select bank2/3
 18415  0181  0087               	movwf	7
 18416  0182  0871               	movf	??_TMR0_ISR,w
 18417  0183  0781               	addwf	1,f
 18418  0184  086B               	movf	_DimmerLights11,w
 18419  0185  3E04               	addlw	4
 18420  0186  0086               	movwf	6
 18421  0187  3001               	movlw	1	; select bank2/3
 18422  0188  0087               	movwf	7
 18423  0189  086B               	movf	_DimmerLights11,w
 18424  018A  3E06               	addlw	6
 18425  018B  0084               	movwf	4
 18426  018C  3001               	movlw	1	; select bank2/3
 18427  018D  0085               	movwf	5
 18428  018E  0800               	movf	0,w
 18429  018F  0201               	subwf	1,w
 18430  0190  1C03               	skipc
 18431  0191  29A9               	goto	i1l7694
 18432  0192  086B               	movf	_DimmerLights11,w
 18433  0193  0086               	movwf	6
 18434  0194  3001               	movlw	1	; select bank2/3
 18435  0195  0087               	movwf	7
 18436  0196  1081               	bcf	1,1
 18437  0197  086B               	movf	_DimmerLights11,w
 18438  0198  0086               	movwf	6
 18439  0199  3001               	movlw	1	; select bank2/3
 18440  019A  0087               	movwf	7
 18441  019B  1301               	bcf	1,6
 18442  019C  086B               	movf	_DimmerLights11,w
 18443  019D  3E0C               	addlw	12
 18444  019E  0086               	movwf	6
 18445  019F  3001               	movlw	1	; select bank2/3
 18446  01A0  0087               	movwf	7
 18447  01A1  1401               	bsf	1,0
 18448  01A2  0021               	movlb	1	; select bank1
 18449  01A3  0838               	movf	_Dimmer^(0+128),w
 18450  01A4  0086               	movwf	6
 18451  01A5  0187               	clrf	7
 18452  01A6  1401               	bsf	1,0
 18453  01A7  0020               	movlb	0	; select bank0
 18454  01A8  118C               	bcf	12,3	;volatile
 18455  01A9                     i1l7694:	
 18456  01A9  1F8C               	btfss	12,7	;volatile
 18457  01AA  29DD               	goto	i1l7702
 18458  01AB  3001               	movlw	1
 18459  01AC  00F1               	movwf	??_TMR0_ISR
 18460  01AD  086B               	movf	_DimmerLights11,w
 18461  01AE  3E08               	addlw	8
 18462  01AF  0086               	movwf	6
 18463  01B0  3001               	movlw	1	; select bank2/3
 18464  01B1  0087               	movwf	7
 18465  01B2  0871               	movf	??_TMR0_ISR,w
 18466  01B3  0781               	addwf	1,f
 18467  01B4  086B               	movf	_DimmerLights11,w
 18468  01B5  3E04               	addlw	4
 18469  01B6  0086               	movwf	6
 18470  01B7  3001               	movlw	1	; select bank2/3
 18471  01B8  0087               	movwf	7
 18472  01B9  0801               	movf	1,w
 18473  01BA  00F1               	movwf	??_TMR0_ISR
 18474  01BB  01F2               	clrf	??_TMR0_ISR+1
 18475  01BC  09F1               	comf	??_TMR0_ISR,f
 18476  01BD  09F2               	comf	??_TMR0_ISR+1,f
 18477  01BE  0AF1               	incf	??_TMR0_ISR,f
 18478  01BF  1903               	skipnz
 18479  01C0  0AF2               	incf	??_TMR0_ISR+1,f
 18480  01C1  0871               	movf	??_TMR0_ISR,w
 18481  01C2  3E78               	addlw	120
 18482  01C3  00F3               	movwf	??_TMR0_ISR+2
 18483  01C4  3000               	movlw	0
 18484  01C5  3D72               	addwfc	??_TMR0_ISR+1,w
 18485  01C6  00F4               	movwf	??_TMR0_ISR+3
 18486  01C7  086B               	movf	_DimmerLights11,w
 18487  01C8  3E08               	addlw	8
 18488  01C9  0086               	movwf	6
 18489  01CA  3001               	movlw	1	; select bank2/3
 18490  01CB  0087               	movwf	7
 18491  01CC  0874               	movf	??_TMR0_ISR+3,w
 18492  01CD  3A80               	xorlw	128
 18493  01CE  3C80               	sublw	128
 18494  01CF  1D03               	skipz
 18495  01D0  29D3               	goto	u694_25
 18496  01D1  0873               	movf	??_TMR0_ISR+2,w
 18497  01D2  0201               	subwf	1,w
 18498  01D3                     u694_25:	
 18499  01D3  1C03               	skipc
 18500  01D4  29DD               	goto	i1l7702
 18501  01D5  0020               	movlb	0	; select bank0
 18502  01D6  086B               	movf	_DimmerLights11,w
 18503  01D7  3E08               	addlw	8
 18504  01D8  0086               	movwf	6
 18505  01D9  3001               	movlw	1	; select bank2/3
 18506  01DA  0087               	movwf	7
 18507  01DB  0181               	clrf	1
 18508  01DC  138C               	bcf	12,7	;volatile
 18509  01DD                     i1l7702:	
 18510                           
 18511                           ;MCU_B1.c: 139: if(DimmerLights22->GO) { DimmerLights22->Count++; if(DimmerLights22->Cou
      +                          nt >= (DimmerLights22->DimmingValue-Dimmer->Correction)) { DimmerLights22->Count=0; Dimm
      +                          erLights22->GO=0; DimmerLights22->Flag=1; if(DimmerLights22->StatusFlag) { RB4=1; } } } 
      +                          el
 18512  01DD  0020               	movlb	0	; select bank0
 18513  01DE  086C               	movf	_DimmerLights22,w
 18514  01DF  0086               	movwf	6
 18515  01E0  3001               	movlw	1	; select bank2/3
 18516  01E1  0087               	movwf	7
 18517  01E2  1C01               	btfss	1,0
 18518  01E3  2A2F               	goto	i1l7716
 18519  01E4  3001               	movlw	1
 18520  01E5  00F1               	movwf	??_TMR0_ISR
 18521  01E6  086C               	movf	_DimmerLights22,w
 18522  01E7  3E03               	addlw	3
 18523  01E8  0086               	movwf	6
 18524  01E9  3001               	movlw	1	; select bank2/3
 18525  01EA  0087               	movwf	7
 18526  01EB  0871               	movf	??_TMR0_ISR,w
 18527  01EC  0781               	addwf	1,f
 18528  01ED  0021               	movlb	1	; select bank1
 18529  01EE  0838               	movf	_Dimmer^(0+128),w
 18530  01EF  3E02               	addlw	2
 18531  01F0  0086               	movwf	6
 18532  01F1  0187               	clrf	7
 18533  01F2  0801               	movf	1,w
 18534  01F3  00F1               	movwf	??_TMR0_ISR
 18535  01F4  01F2               	clrf	??_TMR0_ISR+1
 18536  01F5  09F1               	comf	??_TMR0_ISR,f
 18537  01F6  09F2               	comf	??_TMR0_ISR+1,f
 18538  01F7  0AF1               	incf	??_TMR0_ISR,f
 18539  01F8  1903               	skipnz
 18540  01F9  0AF2               	incf	??_TMR0_ISR+1,f
 18541  01FA  0020               	movlb	0	; select bank0
 18542  01FB  086C               	movf	_DimmerLights22,w
 18543  01FC  3E04               	addlw	4
 18544  01FD  0086               	movwf	6
 18545  01FE  3001               	movlw	1	; select bank2/3
 18546  01FF  0087               	movwf	7
 18547  0200  0801               	movf	1,w
 18548  0201  0771               	addwf	??_TMR0_ISR,w
 18549  0202  00F3               	movwf	??_TMR0_ISR+2
 18550  0203  0872               	movf	??_TMR0_ISR+1,w
 18551  0204  1803               	skipnc
 18552  0205  0A72               	incf	??_TMR0_ISR+1,w
 18553  0206  00F4               	movwf	??_TMR0_ISR+3
 18554  0207  086C               	movf	_DimmerLights22,w
 18555  0208  3E03               	addlw	3
 18556  0209  0086               	movwf	6
 18557  020A  3001               	movlw	1	; select bank2/3
 18558  020B  0087               	movwf	7
 18559  020C  0874               	movf	??_TMR0_ISR+3,w
 18560  020D  3A80               	xorlw	128
 18561  020E  3C80               	sublw	128
 18562  020F  1D03               	skipz
 18563  0210  2A13               	goto	u696_25
 18564  0211  0873               	movf	??_TMR0_ISR+2,w
 18565  0212  0201               	subwf	1,w
 18566  0213                     u696_25:	
 18567  0213  1C03               	skipc
 18568  0214  2B62               	goto	i1l7780
 18569  0215  0020               	movlb	0	; select bank0
 18570  0216  086C               	movf	_DimmerLights22,w
 18571  0217  3E03               	addlw	3
 18572  0218  0086               	movwf	6
 18573  0219  3001               	movlw	1	; select bank2/3
 18574  021A  0087               	movwf	7
 18575  021B  0181               	clrf	1
 18576  021C  086C               	movf	_DimmerLights22,w
 18577  021D  0086               	movwf	6
 18578  021E  3001               	movlw	1	; select bank2/3
 18579  021F  0087               	movwf	7
 18580  0220  1001               	bcf	1,0
 18581  0221  086C               	movf	_DimmerLights22,w
 18582  0222  3E07               	addlw	7
 18583  0223  0086               	movwf	6
 18584  0224  3001               	movlw	1	; select bank2/3
 18585  0225  0087               	movwf	7
 18586  0226  1401               	bsf	1,0
 18587  0227  086C               	movf	_DimmerLights22,w
 18588  0228  0086               	movwf	6
 18589  0229  3001               	movlw	1	; select bank2/3
 18590  022A  0087               	movwf	7
 18591  022B  1F01               	btfss	1,6
 18592  022C  2B62               	goto	i1l7780
 18593  022D  160D               	bsf	13,4	;volatile
 18594  022E  2B62               	goto	i1l7780
 18595  022F                     i1l7716:	
 18596  022F  086C               	movf	_DimmerLights22,w
 18597  0230  3E07               	addlw	7
 18598  0231  0086               	movwf	6
 18599  0232  3001               	movlw	1	; select bank2/3
 18600  0233  0087               	movwf	7
 18601  0234  1C01               	btfss	1,0
 18602  0235  2B2E               	goto	i1l7772
 18603  0236  086C               	movf	_DimmerLights22,w
 18604  0237  3E07               	addlw	7
 18605  0238  0086               	movwf	6
 18606  0239  3001               	movlw	1	; select bank2/3
 18607  023A  0087               	movwf	7
 18608  023B  1001               	bcf	1,0
 18609  023C  086C               	movf	_DimmerLights22,w
 18610  023D  0086               	movwf	6
 18611  023E  3001               	movlw	1	; select bank2/3
 18612  023F  0087               	movwf	7
 18613  0240  1C81               	btfss	1,1
 18614  0241  2B2E               	goto	i1l7772
 18615  0242  3001               	movlw	1
 18616  0243  00F1               	movwf	??_TMR0_ISR
 18617  0244  0A6C               	incf	_DimmerLights22,w
 18618  0245  0086               	movwf	6
 18619  0246  3001               	movlw	1	; select bank2/3
 18620  0247  0087               	movwf	7
 18621  0248  0871               	movf	??_TMR0_ISR,w
 18622  0249  0781               	addwf	1,f
 18623  024A  0A6C               	incf	_DimmerLights22,w
 18624  024B  0086               	movwf	6
 18625  024C  3001               	movlw	1	; select bank2/3
 18626  024D  0087               	movwf	7
 18627  024E  086C               	movf	_DimmerLights22,w
 18628  024F  3E02               	addlw	2
 18629  0250  0084               	movwf	4
 18630  0251  3001               	movlw	1	; select bank2/3
 18631  0252  0085               	movwf	5
 18632  0253  0800               	movf	0,w
 18633  0254  0201               	subwf	1,w
 18634  0255  1C03               	skipc
 18635  0256  2B2E               	goto	i1l7772
 18636  0257  0A6C               	incf	_DimmerLights22,w
 18637  0258  0086               	movwf	6
 18638  0259  3001               	movlw	1	; select bank2/3
 18639  025A  0087               	movwf	7
 18640  025B  0181               	clrf	1
 18641  025C  086C               	movf	_DimmerLights22,w
 18642  025D  0086               	movwf	6
 18643  025E  3001               	movlw	1	; select bank2/3
 18644  025F  0087               	movwf	7
 18645  0260  1D81               	btfss	1,3
 18646  0261  2A98               	goto	i1l7742
 18647  0262  086C               	movf	_DimmerLights22,w
 18648  0263  0086               	movwf	6
 18649  0264  3001               	movlw	1	; select bank2/3
 18650  0265  0087               	movwf	7
 18651  0266  1A01               	btfsc	1,4
 18652  0267  2A7F               	goto	i1l7736
 18653  0268  086C               	movf	_DimmerLights22,w
 18654  0269  3E04               	addlw	4
 18655  026A  0086               	movwf	6
 18656  026B  3001               	movlw	1	; select bank2/3
 18657  026C  0087               	movwf	7
 18658  026D  3044               	movlw	68
 18659  026E  0201               	subwf	1,w
 18660  026F  1C03               	skipc
 18661  0270  2A79               	goto	i1l7734
 18662  0271  086C               	movf	_DimmerLights22,w
 18663  0272  3E04               	addlw	4
 18664  0273  0086               	movwf	6
 18665  0274  3001               	movlw	1	; select bank2/3
 18666  0275  0087               	movwf	7
 18667  0276  3001               	movlw	1
 18668  0277  0281               	subwf	1,f
 18669  0278  2B2E               	goto	i1l7772
 18670  0279                     i1l7734:	
 18671  0279  086C               	movf	_DimmerLights22,w
 18672  027A  0086               	movwf	6
 18673  027B  3001               	movlw	1	; select bank2/3
 18674  027C  0087               	movwf	7
 18675  027D  1601               	bsf	1,4
 18676  027E  2B2E               	goto	i1l7772
 18677  027F                     i1l7736:	
 18678  027F  086C               	movf	_DimmerLights22,w
 18679  0280  3E04               	addlw	4
 18680  0281  0086               	movwf	6
 18681  0282  3001               	movlw	1	; select bank2/3
 18682  0283  0087               	movwf	7
 18683  0284  3078               	movlw	120
 18684  0285  0201               	subwf	1,w
 18685  0286  1803               	skipnc
 18686  0287  2A92               	goto	i1l7740
 18687  0288  3001               	movlw	1
 18688  0289  00F1               	movwf	??_TMR0_ISR
 18689  028A  086C               	movf	_DimmerLights22,w
 18690  028B  3E04               	addlw	4
 18691  028C  0086               	movwf	6
 18692  028D  3001               	movlw	1	; select bank2/3
 18693  028E  0087               	movwf	7
 18694  028F  0871               	movf	??_TMR0_ISR,w
 18695  0290  0781               	addwf	1,f
 18696  0291  2B2E               	goto	i1l7772
 18697  0292                     i1l7740:	
 18698  0292  086C               	movf	_DimmerLights22,w
 18699  0293  0086               	movwf	6
 18700  0294  3001               	movlw	1	; select bank2/3
 18701  0295  0087               	movwf	7
 18702  0296  1201               	bcf	1,4
 18703  0297  2B2E               	goto	i1l7772
 18704  0298                     i1l7742:	
 18705  0298  086C               	movf	_DimmerLights22,w
 18706  0299  0086               	movwf	6
 18707  029A  3001               	movlw	1	; select bank2/3
 18708  029B  0087               	movwf	7
 18709  029C  1D01               	btfss	1,2
 18710  029D  2ADF               	goto	i1l7756
 18711  029E  086C               	movf	_DimmerLights22,w
 18712  029F  3E05               	addlw	5
 18713  02A0  0086               	movwf	6
 18714  02A1  3001               	movlw	1	; select bank2/3
 18715  02A2  0087               	movwf	7
 18716  02A3  086C               	movf	_DimmerLights22,w
 18717  02A4  3E04               	addlw	4
 18718  02A5  0084               	movwf	4
 18719  02A6  3001               	movlw	1	; select bank2/3
 18720  02A7  0085               	movwf	5
 18721  02A8  0800               	movf	0,w
 18722  02A9  0201               	subwf	1,w
 18723  02AA  1803               	skipnc
 18724  02AB  2AB4               	goto	i1l7748
 18725  02AC  086C               	movf	_DimmerLights22,w
 18726  02AD  3E04               	addlw	4
 18727  02AE  0086               	movwf	6
 18728  02AF  3001               	movlw	1	; select bank2/3
 18729  02B0  0087               	movwf	7
 18730  02B1  3001               	movlw	1
 18731  02B2  0281               	subwf	1,f
 18732  02B3  2ACB               	goto	i1l7752
 18733  02B4                     i1l7748:	
 18734  02B4  086C               	movf	_DimmerLights22,w
 18735  02B5  3E04               	addlw	4
 18736  02B6  0086               	movwf	6
 18737  02B7  3001               	movlw	1	; select bank2/3
 18738  02B8  0087               	movwf	7
 18739  02B9  086C               	movf	_DimmerLights22,w
 18740  02BA  3E05               	addlw	5
 18741  02BB  0084               	movwf	4
 18742  02BC  3001               	movlw	1	; select bank2/3
 18743  02BD  0085               	movwf	5
 18744  02BE  0800               	movf	0,w
 18745  02BF  0201               	subwf	1,w
 18746  02C0  1803               	skipnc
 18747  02C1  2ACB               	goto	i1l7752
 18748  02C2  3001               	movlw	1
 18749  02C3  00F1               	movwf	??_TMR0_ISR
 18750  02C4  086C               	movf	_DimmerLights22,w
 18751  02C5  3E04               	addlw	4
 18752  02C6  0086               	movwf	6
 18753  02C7  3001               	movlw	1	; select bank2/3
 18754  02C8  0087               	movwf	7
 18755  02C9  0871               	movf	??_TMR0_ISR,w
 18756  02CA  0781               	addwf	1,f
 18757  02CB                     i1l7752:	
 18758  02CB  086C               	movf	_DimmerLights22,w
 18759  02CC  3E05               	addlw	5
 18760  02CD  0086               	movwf	6
 18761  02CE  3001               	movlw	1	; select bank2/3
 18762  02CF  0087               	movwf	7
 18763  02D0  086C               	movf	_DimmerLights22,w
 18764  02D1  3E04               	addlw	4
 18765  02D2  0084               	movwf	4
 18766  02D3  3001               	movlw	1	; select bank2/3
 18767  02D4  0085               	movwf	5
 18768  02D5  0800               	movf	0,w
 18769  02D6  0601               	xorwf	1,w
 18770  02D7  1D03               	skipz
 18771  02D8  2B2E               	goto	i1l7772
 18772  02D9  086C               	movf	_DimmerLights22,w
 18773  02DA  0086               	movwf	6
 18774  02DB  3001               	movlw	1	; select bank2/3
 18775  02DC  0087               	movwf	7
 18776  02DD  1101               	bcf	1,2
 18777  02DE  2AFA               	goto	i1l7762
 18778  02DF                     i1l7756:	
 18779  02DF  086C               	movf	_DimmerLights22,w
 18780  02E0  0086               	movwf	6
 18781  02E1  3001               	movlw	1	; select bank2/3
 18782  02E2  0087               	movwf	7
 18783  02E3  1E81               	btfss	1,5
 18784  02E4  2B00               	goto	i1l7764
 18785  02E5  086C               	movf	_DimmerLights22,w
 18786  02E6  3E04               	addlw	4
 18787  02E7  0086               	movwf	6
 18788  02E8  3001               	movlw	1	; select bank2/3
 18789  02E9  0087               	movwf	7
 18790  02EA  3001               	movlw	1
 18791  02EB  0281               	subwf	1,f
 18792  02EC  086C               	movf	_DimmerLights22,w
 18793  02ED  3E05               	addlw	5
 18794  02EE  0086               	movwf	6
 18795  02EF  3001               	movlw	1	; select bank2/3
 18796  02F0  0087               	movwf	7
 18797  02F1  086C               	movf	_DimmerLights22,w
 18798  02F2  3E04               	addlw	4
 18799  02F3  0084               	movwf	4
 18800  02F4  3001               	movlw	1	; select bank2/3
 18801  02F5  0085               	movwf	5
 18802  02F6  0800               	movf	0,w
 18803  02F7  0201               	subwf	1,w
 18804  02F8  1C03               	skipc
 18805  02F9  2B2E               	goto	i1l7772
 18806  02FA                     i1l7762:	
 18807  02FA  086C               	movf	_DimmerLights22,w
 18808  02FB  0086               	movwf	6
 18809  02FC  3001               	movlw	1	; select bank2/3
 18810  02FD  0087               	movwf	7
 18811  02FE  1081               	bcf	1,1
 18812  02FF  2B2E               	goto	i1l7772
 18813  0300                     i1l7764:	
 18814  0300  3001               	movlw	1
 18815  0301  00F1               	movwf	??_TMR0_ISR
 18816  0302  086C               	movf	_DimmerLights22,w
 18817  0303  3E04               	addlw	4
 18818  0304  0086               	movwf	6
 18819  0305  3001               	movlw	1	; select bank2/3
 18820  0306  0087               	movwf	7
 18821  0307  0871               	movf	??_TMR0_ISR,w
 18822  0308  0781               	addwf	1,f
 18823  0309  086C               	movf	_DimmerLights22,w
 18824  030A  3E04               	addlw	4
 18825  030B  0086               	movwf	6
 18826  030C  3001               	movlw	1	; select bank2/3
 18827  030D  0087               	movwf	7
 18828  030E  086C               	movf	_DimmerLights22,w
 18829  030F  3E06               	addlw	6
 18830  0310  0084               	movwf	4
 18831  0311  3001               	movlw	1	; select bank2/3
 18832  0312  0085               	movwf	5
 18833  0313  0800               	movf	0,w
 18834  0314  0201               	subwf	1,w
 18835  0315  1C03               	skipc
 18836  0316  2B2E               	goto	i1l7772
 18837  0317  086C               	movf	_DimmerLights22,w
 18838  0318  0086               	movwf	6
 18839  0319  3001               	movlw	1	; select bank2/3
 18840  031A  0087               	movwf	7
 18841  031B  1081               	bcf	1,1
 18842  031C  086C               	movf	_DimmerLights22,w
 18843  031D  0086               	movwf	6
 18844  031E  3001               	movlw	1	; select bank2/3
 18845  031F  0087               	movwf	7
 18846  0320  1301               	bcf	1,6
 18847  0321  086C               	movf	_DimmerLights22,w
 18848  0322  3E0C               	addlw	12
 18849  0323  0086               	movwf	6
 18850  0324  3001               	movlw	1	; select bank2/3
 18851  0325  0087               	movwf	7
 18852  0326  1401               	bsf	1,0
 18853  0327  0021               	movlb	1	; select bank1
 18854  0328  0838               	movf	_Dimmer^(0+128),w
 18855  0329  0086               	movwf	6
 18856  032A  0187               	clrf	7
 18857  032B  1401               	bsf	1,0
 18858  032C  0020               	movlb	0	; select bank0
 18859  032D  138E               	bcf	14,7	;volatile
 18860  032E                     i1l7772:	
 18861  032E  1E0D               	btfss	13,4	;volatile
 18862  032F  2B62               	goto	i1l7780
 18863  0330  3001               	movlw	1
 18864  0331  00F1               	movwf	??_TMR0_ISR
 18865  0332  086C               	movf	_DimmerLights22,w
 18866  0333  3E08               	addlw	8
 18867  0334  0086               	movwf	6
 18868  0335  3001               	movlw	1	; select bank2/3
 18869  0336  0087               	movwf	7
 18870  0337  0871               	movf	??_TMR0_ISR,w
 18871  0338  0781               	addwf	1,f
 18872  0339  086C               	movf	_DimmerLights22,w
 18873  033A  3E04               	addlw	4
 18874  033B  0086               	movwf	6
 18875  033C  3001               	movlw	1	; select bank2/3
 18876  033D  0087               	movwf	7
 18877  033E  0801               	movf	1,w
 18878  033F  00F1               	movwf	??_TMR0_ISR
 18879  0340  01F2               	clrf	??_TMR0_ISR+1
 18880  0341  09F1               	comf	??_TMR0_ISR,f
 18881  0342  09F2               	comf	??_TMR0_ISR+1,f
 18882  0343  0AF1               	incf	??_TMR0_ISR,f
 18883  0344  1903               	skipnz
 18884  0345  0AF2               	incf	??_TMR0_ISR+1,f
 18885  0346  0871               	movf	??_TMR0_ISR,w
 18886  0347  3E78               	addlw	120
 18887  0348  00F3               	movwf	??_TMR0_ISR+2
 18888  0349  3000               	movlw	0
 18889  034A  3D72               	addwfc	??_TMR0_ISR+1,w
 18890  034B  00F4               	movwf	??_TMR0_ISR+3
 18891  034C  086C               	movf	_DimmerLights22,w
 18892  034D  3E08               	addlw	8
 18893  034E  0086               	movwf	6
 18894  034F  3001               	movlw	1	; select bank2/3
 18895  0350  0087               	movwf	7
 18896  0351  0874               	movf	??_TMR0_ISR+3,w
 18897  0352  3A80               	xorlw	128
 18898  0353  3C80               	sublw	128
 18899  0354  1D03               	skipz
 18900  0355  2B58               	goto	u713_25
 18901  0356  0873               	movf	??_TMR0_ISR+2,w
 18902  0357  0201               	subwf	1,w
 18903  0358                     u713_25:	
 18904  0358  1C03               	skipc
 18905  0359  2B62               	goto	i1l7780
 18906  035A  0020               	movlb	0	; select bank0
 18907  035B  086C               	movf	_DimmerLights22,w
 18908  035C  3E08               	addlw	8
 18909  035D  0086               	movwf	6
 18910  035E  3001               	movlw	1	; select bank2/3
 18911  035F  0087               	movwf	7
 18912  0360  0181               	clrf	1
 18913  0361  120D               	bcf	13,4	;volatile
 18914  0362                     i1l7780:	
 18915                           
 18916                           ;MCU_B1.c: 148: Timer0->Count++;
 18917  0362  0021               	movlb	1	; select bank1
 18918  0363  0A6E               	incf	_Timer0^(0+128),w
 18919  0364  0086               	movwf	6
 18920  0365  0187               	clrf	7
 18921  0366  3001               	movlw	1
 18922  0367  0781               	addwf	1,f
 18923  0368  3141               	addfsr 1,1
 18924  0369  1803               	skipnc
 18925  036A  0A81               	incf	1,f
 18926                           
 18927                           ;MCU_B1.c: 149: if(Timer0->Count == 200)
 18928  036B  0A6E               	incf	_Timer0^(0+128),w
 18929  036C  0086               	movwf	6
 18930  036D  0187               	clrf	7
 18931  036E  3F40               	moviw [0]fsr1
 18932  036F  3AC8               	xorlw	200
 18933  0370  1D03               	skipz
 18934  0371  2B74               	goto	u714_25
 18935  0372  3F41               	moviw [1]fsr1
 18936  0373  3A00               	xorlw	0
 18937  0374                     u714_25:	
 18938  0374  1D03               	skipz
 18939  0375  2B82               	goto	i1l1647
 18940                           
 18941                           ;MCU_B1.c: 150: {
 18942                           ;MCU_B1.c: 151: Timer0->Count=0;
 18943  0376  0A6E               	incf	_Timer0^(0+128),w
 18944  0377  0086               	movwf	6
 18945  0378  0187               	clrf	7
 18946  0379  3000               	movlw	0
 18947  037A  3FC0               	movwi [0]fsr1
 18948  037B  3FC1               	movwi [1]fsr1
 18949                           
 18950                           ;MCU_B1.c: 152: TMain->T0_Timerout=1;
 18951  037C  0020               	movlb	0	; select bank0
 18952  037D  086F               	movf	_TMain,w
 18953  037E  0086               	movwf	6
 18954  037F  3001               	movlw	1	; select bank2/3
 18955  0380  0087               	movwf	7
 18956  0381  1481               	bsf	1,1
 18957  0382                     i1l1647:	
 18958                           
 18959                           ;MCU_B1.c: 153: }
 18960                           ;MCU_B1.c: 156: if(Buz->GO)
 18961  0382  0020               	movlb	0	; select bank0
 18962  0383  0868               	movf	_Buz,w
 18963  0384  0086               	movwf	6
 18964  0385  3001               	movlw	1	; select bank2/3
 18965  0386  0087               	movwf	7
 18966  0387  1C81               	btfss	1,1
 18967  0388  0008               	return
 18968                           
 18969                           ;MCU_B1.c: 157: {
 18970                           ;MCU_B1.c: 158: Buz->Time++;
 18971  0389  0A68               	incf	_Buz,w
 18972  038A  0086               	movwf	6
 18973  038B  3001               	movlw	1	; select bank2/3
 18974  038C  0087               	movwf	7
 18975  038D  3001               	movlw	1
 18976  038E  0781               	addwf	1,f
 18977  038F  3141               	addfsr 1,1
 18978  0390  1803               	skipnc
 18979  0391  0A81               	incf	1,f
 18980  0392  0008               	return
 18981  0393                     __end_of_TMR0_ISR:	
 18982                           
 18983                           	psect	text125
 18984  1D37                     __ptext125:	
 18985 ;; *************** function _IOC_ISR *****************
 18986 ;; Defined at:
 18987 ;;		line 340 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
 18988 ;; Parameters:    Size  Location     Type
 18989 ;;		None
 18990 ;; Auto vars:     Size  Location     Type
 18991 ;;		None
 18992 ;; Return value:  Size  Location     Type
 18993 ;;		None               void
 18994 ;; Registers used:
 18995 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18996 ;; Tracked objects:
 18997 ;;		On entry : 0/0
 18998 ;;		On exit  : 0/0
 18999 ;;		Unchanged: 0/0
 19000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19001 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19002 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19003 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19004 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19005 ;;Total ram usage:        1 bytes
 19006 ;; Hardware stack levels used:    1
 19007 ;; Hardware stack levels required when called:    1
 19008 ;; This function calls:
 19009 ;;		_setDimmerReClock
 19010 ;; This function is called by:
 19011 ;;		_ISR
 19012 ;; This function uses a non-reentrant model
 19013 ;;
 19014                           
 19015                           
 19016                           ;psect for function _IOC_ISR
 19017  1D37                     _IOC_ISR:	
 19018                           
 19019                           ;MCU_B1.c: 342: if(IOCIE && IOCBF2)
 19020                           
 19021                           ;incstack = 0
 19022                           ; Regs used in _IOC_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 19023  1D37  1D8B               	btfss	11,3	;volatile
 19024  1D38  0008               	return
 19025  1D39  0027               	movlb	7	; select bank7
 19026  1D3A  1D16               	btfss	22,2	;volatile
 19027  1D3B  0008               	return
 19028                           
 19029                           ;MCU_B1.c: 343: {
 19030                           ;MCU_B1.c: 344: IOCBF2=0;
 19031  1D3C  1116               	bcf	22,2	;volatile
 19032                           
 19033                           ;MCU_B1.c: 345: IOCIF=0;
 19034  1D3D  100B               	bcf	11,0	;volatile
 19035                           
 19036                           ;MCU_B1.c: 346: if(TMain->PowerON)
 19037  1D3E  0020               	movlb	0	; select bank0
 19038  1D3F  086F               	movf	_TMain,w
 19039  1D40  0086               	movwf	6
 19040  1D41  3001               	movlw	1	; select bank2/3
 19041  1D42  0087               	movwf	7
 19042  1D43  1C01               	btfss	1,0
 19043  1D44  0008               	return
 19044                           
 19045                           ;MCU_B1.c: 347: {
 19046                           ;MCU_B1.c: 351: setDimmerReClock();
 19047  1D45  319C  2405  319D   	fcall	_setDimmerReClock
 19048                           
 19049                           ;MCU_B1.c: 352: if(RB2)
 19050  1D48  0020               	movlb	0	; select bank0
 19051  1D49  1D0D               	btfss	13,2	;volatile
 19052  1D4A  2D52               	goto	i1l7614
 19053                           
 19054                           ;MCU_B1.c: 353: {
 19055                           ;MCU_B1.c: 354: Dimmer->Correction=0;
 19056  1D4B  0021               	movlb	1	; select bank1
 19057  1D4C  0838               	movf	_Dimmer^(0+128),w
 19058  1D4D  3E02               	addlw	2
 19059  1D4E  0086               	movwf	6
 19060  1D4F  0187               	clrf	7
 19061  1D50  0181               	clrf	1
 19062                           
 19063                           ;MCU_B1.c: 355: }
 19064  1D51  0008               	return
 19065  1D52                     i1l7614:	
 19066                           
 19067                           ;MCU_B1.c: 356: else
 19068                           ;MCU_B1.c: 357: {
 19069                           ;MCU_B1.c: 358: Dimmer->Correction=8;
 19070  1D52  3008               	movlw	8
 19071  1D53  00F1               	movwf	??_IOC_ISR
 19072  1D54  0021               	movlb	1	; select bank1
 19073  1D55  0838               	movf	_Dimmer^(0+128),w
 19074  1D56  3E02               	addlw	2
 19075  1D57  0086               	movwf	6
 19076  1D58  0187               	clrf	7
 19077  1D59  0871               	movf	??_IOC_ISR,w
 19078  1D5A  0081               	movwf	1
 19079  1D5B  0008               	return
 19080  1D5C                     __end_of_IOC_ISR:	
 19081                           
 19082                           	psect	text126
 19083  1C05                     __ptext126:	
 19084 ;; *************** function _setDimmerReClock *****************
 19085 ;; Defined at:
 19086 ;;		line 166 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
 19087 ;; Parameters:    Size  Location     Type
 19088 ;;		None
 19089 ;; Auto vars:     Size  Location     Type
 19090 ;;		None
 19091 ;; Return value:  Size  Location     Type
 19092 ;;		None               void
 19093 ;; Registers used:
 19094 ;;		wreg, fsr1l, fsr1h
 19095 ;; Tracked objects:
 19096 ;;		On entry : 0/0
 19097 ;;		On exit  : 0/0
 19098 ;;		Unchanged: 0/0
 19099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19100 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19103 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19104 ;;Total ram usage:        0 bytes
 19105 ;; Hardware stack levels used:    1
 19106 ;; This function calls:
 19107 ;;		Nothing
 19108 ;; This function is called by:
 19109 ;;		_IOC_ISR
 19110 ;; This function uses a non-reentrant model
 19111 ;;
 19112                           
 19113                           
 19114                           ;psect for function _setDimmerReClock
 19115  1C05                     _setDimmerReClock:	
 19116                           
 19117                           ;MCU_B1.c: 168: TMR0=255;
 19118                           
 19119                           ;incstack = 0
 19120                           ; Regs used in _setDimmerReClock: [wregfsr1]
 19121  1C05  30FF               	movlw	255
 19122  1C06  0020               	movlb	0	; select bank0
 19123  1C07  0095               	movwf	21	;volatile
 19124                           
 19125                           ;MCU_B1.c: 173: if(!DimmerLights11->GO)
 19126  1C08  086B               	movf	_DimmerLights11,w
 19127  1C09  0086               	movwf	6
 19128  1C0A  3001               	movlw	1	; select bank2/3
 19129  1C0B  0087               	movwf	7
 19130  1C0C  1801               	btfsc	1,0
 19131  1C0D  2C13               	goto	i1l1652
 19132                           
 19133                           ;MCU_B1.c: 174: {
 19134                           ;MCU_B1.c: 175: DimmerLights11->GO=1;
 19135  1C0E  086B               	movf	_DimmerLights11,w
 19136  1C0F  0086               	movwf	6
 19137  1C10  3001               	movlw	1	; select bank2/3
 19138  1C11  0087               	movwf	7
 19139  1C12  1401               	bsf	1,0
 19140  1C13                     i1l1652:	
 19141                           
 19142                           ;MCU_B1.c: 176: }
 19143                           ;MCU_B1.c: 200: if(!DimmerLights22->GO)
 19144  1C13  086C               	movf	_DimmerLights22,w
 19145  1C14  0086               	movwf	6
 19146  1C15  3001               	movlw	1	; select bank2/3
 19147  1C16  0087               	movwf	7
 19148  1C17  1801               	btfsc	1,0
 19149  1C18  0008               	return
 19150                           
 19151                           ;MCU_B1.c: 201: {
 19152                           ;MCU_B1.c: 202: DimmerLights22->GO=1;
 19153  1C19  086C               	movf	_DimmerLights22,w
 19154  1C1A  0086               	movwf	6
 19155  1C1B  3001               	movlw	1	; select bank2/3
 19156  1C1C  0087               	movwf	7
 19157  1C1D  1401               	bsf	1,0
 19158  1C1E  0008               	return
 19159  1C1F                     __end_of_setDimmerReClock:	
 19160                           
 19161                           	psect	text127
 19162  19BE                     __ptext127:	
 19163 ;; *************** function _INT_ISR *****************
 19164 ;; Defined at:
 19165 ;;		line 291 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_B1.c"
 19166 ;; Parameters:    Size  Location     Type
 19167 ;;		None
 19168 ;; Auto vars:     Size  Location     Type
 19169 ;;		None
 19170 ;; Return value:  Size  Location     Type
 19171 ;;		None               void
 19172 ;; Registers used:
 19173 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19174 ;; Tracked objects:
 19175 ;;		On entry : 0/0
 19176 ;;		On exit  : 0/0
 19177 ;;		Unchanged: 0/0
 19178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19180 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19182 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19183 ;;Total ram usage:        0 bytes
 19184 ;; Hardware stack levels used:    1
 19185 ;; Hardware stack levels required when called:    2
 19186 ;; This function calls:
 19187 ;;		_setRF_ReceiveGO
 19188 ;; This function is called by:
 19189 ;;		_ISR
 19190 ;; This function uses a non-reentrant model
 19191 ;;
 19192                           
 19193                           
 19194                           ;psect for function _INT_ISR
 19195  19BE                     _INT_ISR:	
 19196                           
 19197                           ;MCU_B1.c: 293: if(INTE && INTF)
 19198                           
 19199                           ;incstack = 0
 19200                           ; Regs used in _INT_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 19201  19BE  1E0B               	btfss	11,4	;volatile
 19202  19BF  0008               	return
 19203  19C0  1C8B               	btfss	11,1	;volatile
 19204  19C1  0008               	return
 19205                           
 19206                           ;MCU_B1.c: 294: {
 19207                           ;MCU_B1.c: 295: INTF=0;
 19208  19C2  108B               	bcf	11,1	;volatile
 19209                           
 19210                           ;MCU_B1.c: 296: INTE=0;
 19211  19C3  120B               	bcf	11,4	;volatile
 19212                           
 19213                           ;MCU_B1.c: 297: setRF_ReceiveGO(1,1);
 19214  19C4  01F3               	clrf	setRF_ReceiveGO@command
 19215  19C5  0AF3               	incf	setRF_ReceiveGO@command,f
 19216  19C6  3001               	movlw	1
 19217  19C7  3199  21B2         	fcall	_setRF_ReceiveGO
 19218  19C9  0008               	return
 19219  19CA                     __end_of_INT_ISR:	
 19220                           
 19221                           	psect	text128
 19222  19B2                     __ptext128:	
 19223 ;; *************** function _setRF_ReceiveGO *****************
 19224 ;; Defined at:
 19225 ;;		line 37 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
 19226 ;; Parameters:    Size  Location     Type
 19227 ;;  rf              1    wreg     unsigned char 
 19228 ;;  command         1    2[COMMON] unsigned char 
 19229 ;; Auto vars:     Size  Location     Type
 19230 ;;  rf              1    3[COMMON] unsigned char 
 19231 ;; Return value:  Size  Location     Type
 19232 ;;		None               void
 19233 ;; Registers used:
 19234 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19235 ;; Tracked objects:
 19236 ;;		On entry : 0/0
 19237 ;;		On exit  : 0/0
 19238 ;;		Unchanged: 0/0
 19239 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19240 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19241 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19243 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19244 ;;Total ram usage:        2 bytes
 19245 ;; Hardware stack levels used:    1
 19246 ;; Hardware stack levels required when called:    1
 19247 ;; This function calls:
 19248 ;;		i1_RfPointSelect
 19249 ;; This function is called by:
 19250 ;;		_INT_ISR
 19251 ;; This function uses a non-reentrant model
 19252 ;;
 19253                           
 19254                           
 19255                           ;psect for function _setRF_ReceiveGO
 19256  19B2                     _setRF_ReceiveGO:	
 19257                           
 19258                           ;incstack = 0
 19259                           ; Regs used in _setRF_ReceiveGO: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 19260                           ;setRF_ReceiveGO@rf stored from wreg
 19261  19B2  00F4               	movwf	setRF_ReceiveGO@rf
 19262                           
 19263                           ;RF_Control_B1.c: 39: RfPointSelect(rf);
 19264  19B3  0874               	movf	setRF_ReceiveGO@rf,w
 19265  19B4  3199  2166         	fcall	i1_RfPointSelect
 19266                           
 19267                           ;RF_Control_B1.c: 40: RF->ReceiveGO=command;
 19268  19B6  0877               	movf	_RF,w
 19269  19B7  0086               	movwf	6
 19270  19B8  0187               	clrf	7
 19271  19B9  0873               	movf	setRF_ReceiveGO@command,w
 19272  19BA  1081               	bcf	1,1
 19273  19BB  1D03               	skipz
 19274  19BC  1481               	bsf	1,1
 19275  19BD  0008               	return
 19276  19BE                     __end_of_setRF_ReceiveGO:	
 19277                           
 19278                           	psect	text129
 19279  1966                     __ptext129:	
 19280 ;; *************** function i1_RfPointSelect *****************
 19281 ;; Defined at:
 19282 ;;		line 7 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
 19283 ;; Parameters:    Size  Location     Type
 19284 ;;  rf              1    wreg     unsigned char 
 19285 ;; Auto vars:     Size  Location     Type
 19286 ;;  rf              1    1[COMMON] unsigned char 
 19287 ;; Return value:  Size  Location     Type
 19288 ;;		None               void
 19289 ;; Registers used:
 19290 ;;		wreg
 19291 ;; Tracked objects:
 19292 ;;		On entry : 0/0
 19293 ;;		On exit  : 0/0
 19294 ;;		Unchanged: 0/0
 19295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19296 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19297 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19298 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19299 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19300 ;;Total ram usage:        2 bytes
 19301 ;; Hardware stack levels used:    1
 19302 ;; This function calls:
 19303 ;;		Nothing
 19304 ;; This function is called by:
 19305 ;;		_setRF_ReceiveGO
 19306 ;; This function uses a non-reentrant model
 19307 ;;
 19308                           
 19309                           
 19310                           ;psect for function i1_RfPointSelect
 19311  1966                     i1_RfPointSelect:	
 19312                           
 19313                           ;incstack = 0
 19314                           ; Regs used in i1_RfPointSelect: [wreg]
 19315                           ;i1RfPointSelect@rf stored from wreg
 19316  1966  00F2               	movwf	i1RfPointSelect@rf
 19317                           
 19318                           ;RF_Control_B1.c: 10: if(rf == 1)
 19319  1967  0872               	movf	i1RfPointSelect@rf,w
 19320  1968  3A01               	xorlw	1
 19321  1969  1D03               	skipz
 19322  196A  0008               	return
 19323                           
 19324                           ;RF_Control_B1.c: 11: {
 19325                           ;RF_Control_B1.c: 12: RF=&RF1;
 19326  196B  30E5               	movlw	_RF1& (0+255)
 19327  196C  00F1               	movwf	??i1_RfPointSelect
 19328  196D  0871               	movf	??i1_RfPointSelect,w
 19329  196E  00F7               	movwf	_RF
 19330  196F  0008               	return
 19331  1970                     __end_ofi1_RfPointSelect:	
 19332  007E                     btemp	set	126	;btemp
 19333  007E                     pic14e$flags	set	126
 19334  007E                     wtemp	set	126
 19335  007E                     wtemp0	set	126
 19336  0080                     wtemp1	set	128
 19337  0082                     wtemp2	set	130
 19338  0084                     wtemp3	set	132
 19339  0086                     wtemp4	set	134
 19340  0088                     wtemp5	set	136
 19341  007F                     wtemp6	set	127
 19342  007E                     ttemp	set	126
 19343  007E                     ttemp0	set	126
 19344  0081                     ttemp1	set	129
 19345  0084                     ttemp2	set	132
 19346  0087                     ttemp3	set	135
 19347  007F                     ttemp4	set	127
 19348  007E                     ltemp	set	126
 19349  007E                     ltemp0	set	126
 19350  0082                     ltemp1	set	130
 19351  0086                     ltemp2	set	134
 19352  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    102
    Data        32
    BSS         217
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      10
    BANK0            80     72      80
    BANK1            80      4      79
    BANK2            80      0      80
    BANK3            80      0      49
    BANK4            80      0      37
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    DimmerLightsIntr	PTR struct DimmerLights size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    Sw	PTR struct Switch size(1) Largest target is 9
		 -> NULL(NULL[0]), Sw2(BANK2[9]), Sw1(BANK2[9]), 

    RFSW	PTR struct RFSW size(1) Largest target is 1
		 -> NULL(NULL[0]), RFSW2(BANK1[1]), RFSW1(BANK1[1]), 

    RF	PTR struct RF size(1) Largest target is 3
		 -> NULL(NULL[0]), RF1(BANK1[3]), 

    PF	PTR struct PF size(1) Largest target is 8
		 -> NULL(NULL[0]), PF1(BANK2[8]), 

    Temp	PTR struct OverTemp size(1) Largest target is 14
		 -> NULL(NULL[0]), Temp1(BANK2[14]), 

    Timer0	PTR struct Timer0 size(1) Largest target is 9
		 -> NULL(NULL[0]), VarTimer0(BANK1[9]), 

    LED	PTR struct LED size(1) Largest target is 4
		 -> NULL(NULL[0]), VarErrLED(BANK1[4]), VarLED2(BANK1[4]), VarLED1(BANK1[4]), 

    TMain	PTR struct TMain size(1) Largest target is 17
		 -> NULL(NULL[0]), VarTMain(BANK3[17]), 

    Memory	PTR struct FlashMemory size(1) Largest target is 37
		 -> NULL(NULL[0]), VarMemory(BANK4[37]), 

    Dimmer	PTR struct Dimmer size(1) Largest target is 3
		 -> NULL(NULL[0]), Dimmer1(BANK1[3]), 

    DimmerLights22	PTR struct DimmerLights size(1) Largest target is 14
		 -> NULL(NULL[0]), DimmerLights2(BANK2[14]), 

    DimmerLights11	PTR struct DimmerLights size(1) Largest target is 14
		 -> NULL(NULL[0]), DimmerLights1(BANK2[14]), 

    DimmerLights	PTR struct DimmerLights size(1) Largest target is 14
		 -> NULL(NULL[0]), DimmerLights2(BANK2[14]), DimmerLights1(BANK2[14]), 

    Product	PTR struct Product size(1) Largest target is 32
		 -> NULL(NULL[0]), VarProduct(BANK3[32]), 

    DelayOff	PTR struct DelayOff size(1) Largest target is 5
		 -> NULL(NULL[0]), DlySw2(BANK1[5]), DlySw1(BANK1[5]), 

    Buz	PTR struct Buzzer size(1) Largest target is 12
		 -> NULL(NULL[0]), Buz1(BANK2[12]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_TMR0_ISR
    _INT_ISR->_setRF_ReceiveGO
    _setRF_ReceiveGO->i1_RfPointSelect

Critical Paths under _main in BANK0

    _getTemp_AD->_getAD
    _getPowerFault_AD->_getAD
    _Temp_Main->_setTemp_Main
    _setTemp_Main->_setOverTemp_Exceptions
    _setOverTemp_Exceptions->_DimmerLights_Exceptions
    _Temp_Initialization->_setTemp_Initialization
    _Switch_Main->_setSw_Main
    _setSw_Main->_Sw_DimmerOffFunc
    _setRF_Learn->_RfPointSelect
    _Sw_DimmerOnFunc->_setRF_DimmerLights
    _Sw_DimmerOffFunc->_setRF_DimmerLights
    _Sw_DimmerAdjFunc->_setDimmerLights_AdjGo
    _Sw_DimmerAdjFunc->_setDimmerLights_TriggerAdj
    _Sw_DimmerAdjFunc->_setRFSW_Status
    _setDimmerLights_TriggerAdj->_DimmerLightsPointSelect
    _setDimmerLights_AdjGo->_DimmerLightsPointSelect
    _Switch_Initialization->_setSw_Initialization
    _setSw_Initialization->_setLED
    _getRxData->_setControl_Lights_Table
    _setLog_Code->_setBuz
    _setControl_Lights_Table->_setRFSW_AdjControl
    _setRFSW_Control->_setRF_DimmerLights
    _setDelayOff_GO->_DelayTimejudge
    _setRFSW_AdjControl->_setRF_DimmerValue
    _setRF_DimmerValue->_setDimmerLights_AdjRF
    _setDimmerLights_AdjRF->_getPercentValue
    _getPercentValue->___fttol
    ___ftmul->___awtoft
    ___ftadd->___ftmul
    _RF_RxDisable->_CC2500_WriteCommand
    _CC2500_TxData->_CC2500_WriteCommand
    _CC2500_RxData->_CC2500_ReadStatus
    _CC2500_RxData->_CC2500_WriteCommand
    _CC2500_RxData->_setRF_RxStatus
    _setRF_RxStatus->_RfPointSelect
    _CC2500_ReadStatus->_CC2500_ReadByte
    _CC2500_ReadStatus->_CC2500_WriteByte
    _RF_Initialization->_setRF_Initialization
    _PowerFault_Main->_setPowerFault_Main
    _setPowerFault_Main->_setPowerFault_Exceptions
    _setPowerFault_Exceptions->_DimmerLights_Exceptions
    _DimmerLights_Exceptions->_setBuz
    _setDimmerLights_TriggerERROR->_DimmerLightsPointSelect
    _setDimmerLights_ERROR->_setLED
    _setDimmerLights_ERROR->_setRFSW_Status
    _setDimmerLights_ERROR->_setSw_Status
    _PowerFault_Initialization->_setPowerFault_Initialization
    _Mcu_Initialization->_TMR0_Set
    _MainT->_setBuz
    _setSw_Enable->_SwPointSelect
    _setRF_Enable->_RfPointSelect
    _LED_Main->_setLED_Main
    _setLED_Main->_LedPointSelect
    _LED_Initialization->_setLED_Initialization
    _setLED_Initialization->_setLED
    _Flash_Memory_Main->_Flash_Memory_Modify
    _Flash_Memory_Modify->_Flash_Memory_Read
    _Flash_Memory_Initialization->_setPercentValue
    _DimmerLights_Main->_setDimmerLights_Main
    _setDimmerLights_Main->_setDimmerLights_Adj
    _setDimmerLights_Adj->_setRF_DimmerLights
    _setDimmerLights->_setLED
    _setLED->_LedPointSelect
    _DimmerLights_Close->_getDimmerLights_StatusFlag
    _DimmerLights_Initialization->_setDimmerLights_Initialization
    _setDimmerLights_Initialization->_DimmerLightsPointSelect
    _DelayOff_Main->_DlyOff_Main
    _DlyOff_Main->_setRF_DimmerLights
    _setTxData->_RfPointSelect
    _setSw_Status->_SwPointSelect
    _setRF_DimmerLights->_setPercentValue
    _setPercentValue->___fttol
    ___fttol->___ftadd
    ___ftdiv->___awtoft
    ___awtoft->___ftpack
    _setRFSW_Status->_RfSWPointSelect
    _setDimmerLights_Trigger->_DimmerLightsPointSelect
    _setDimmerLights_Switch->_DimmerLightsPointSelect
    _setBuz->___wmul
    _DelayOff_Initialization->_DlyOff_Initialization
    _DlyOff_Initialization->_DelayOffPointSelect
    _CC2500_PowerOnInitial->_CC2500_InitSetREG
    _CC2500_SIDLEMode->_CC2500_WriteCommand
    _CC2500_PowerRST->_DelayTime_1us
    _CC2500_InitSetREG->_CC2500_WriteREG
    _CC2500_InitPATable->_CC2500_WriteREG
    _CC2500_WriteREG->_CC2500_WriteByte
    _CC2500_FrequencyCabr->_DelayTime_1us
    _CC2500_ClearTXFIFO->_CC2500_WriteCommand
    _CC2500_ClearRXFIFO->_CC2500_WriteCommand
    _CC2500_WriteCommand->_CC2500_WriteByte

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _Switch_Main->_setSw_Main
    _RF_Main->_setRF_Main
    _setRF_Main->_getRxData

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   96816
              _Buzzer_Initialization
                        _Buzzer_Main
              _CC2500_PowerOnInitial
            _DelayOff_Initialization
                      _DelayOff_Main
        _DimmerLights_Initialization
                  _DimmerLights_Main
        _Flash_Memory_Initialization
                  _Flash_Memory_Main
                 _LED_Initialization
                           _LED_Main
                              _MainT
               _MainT_Initialization
                   _MainT_ResetClock
                 _Mcu_Initialization
          _PowerFault_Initialization
                    _PowerFault_Main
                  _RF_Initialization
                            _RF_Main
              _Switch_Initialization
                        _Switch_Main
                _Temp_Initialization
                          _Temp_Main
                   _getPowerFault_AD
                         _getTemp_AD
 ---------------------------------------------------------------------------------
 (1) _getTemp_AD                                           5     5      0     223
                                              4 BANK0      5     5      0
                              _getAD
 ---------------------------------------------------------------------------------
 (1) _getPowerFault_AD                                     5     5      0     223
                                              4 BANK0      5     5      0
                              _getAD
 ---------------------------------------------------------------------------------
 (2) _getAD                                                4     1      3     192
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (1) _Temp_Main                                            0     0      0    6658
                       _setTemp_Main
 ---------------------------------------------------------------------------------
 (2) _setTemp_Main                                         3     3      0    6658
                                             13 BANK0      3     3      0
                         _getPF_Safe
             _setOverTemp_Exceptions
 ---------------------------------------------------------------------------------
 (3) _setOverTemp_Exceptions                               2     2      0    6658
                                             11 BANK0      2     2      0
            _DimmerLights_Exceptions
                             _setBuz
                             _setLED
                       _setRF_Enable
                       _setSw_Enable
 ---------------------------------------------------------------------------------
 (3) _getPF_Safe                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Temp_Initialization                                  0     0      0       0
             _setTemp_Initialization
 ---------------------------------------------------------------------------------
 (2) _setTemp_Initialization                               1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Switch_Main                                          0     0      0   22040
                         _setSw_Main
 ---------------------------------------------------------------------------------
 (2) _setSw_Main                                           5     5      0   22040
                                             69 BANK0      2     2      0
                                              0 BANK1      3     3      0
                      _SwPointSelect
                   _Sw_DimmerAdjFunc
                   _Sw_DimmerOffFunc
                    _Sw_DimmerOnFunc
                             _setBuz
                        _setRF_Learn
 ---------------------------------------------------------------------------------
 (3) _setRF_Learn                                          2     1      1     288
                                              2 BANK0      2     1      1
                      _RfPointSelect
 ---------------------------------------------------------------------------------
 (3) _Sw_DimmerOnFunc                                      2     2      0    9518
                                             66 BANK0      2     2      0
                             _setBuz
             _setDimmerLights_Switch
            _setDimmerLights_Trigger
                     _setRFSW_Status
                 _setRF_DimmerLights
                          _setTxData
 ---------------------------------------------------------------------------------
 (3) _Sw_DimmerOffFunc                                     3     3      0    9429
                                             66 BANK0      3     3      0
                     _setDelayOff_GO
              _setDimmerLights_AdjGo
             _setDimmerLights_Switch
            _setDimmerLights_Trigger
         _setDimmerLights_TriggerAdj
                 _setRF_DimmerLights
                          _setTxData
 ---------------------------------------------------------------------------------
 (3) _Sw_DimmerAdjFunc                                     2     2      0    1282
                                              4 BANK0      2     2      0
              _setDimmerLights_AdjGo
         _setDimmerLights_TriggerAdj
                     _setRFSW_Status
 ---------------------------------------------------------------------------------
 (4) _setDimmerLights_TriggerAdj                           2     1      1     254
                                              2 BANK0      2     1      1
            _DimmerLightsPointSelect
 ---------------------------------------------------------------------------------
 (4) _setDimmerLights_AdjGo                                2     1      1     254
                                              2 BANK0      2     1      1
            _DimmerLightsPointSelect
 ---------------------------------------------------------------------------------
 (1) _Switch_Initialization                                0     0      0     948
                         _TouchPower
               _setSw_Initialization
 ---------------------------------------------------------------------------------
 (2) _setSw_Initialization                                 1     1      0     948
                                              4 BANK0      1     1      0
                             _setLED
 ---------------------------------------------------------------------------------
 (2) _TouchPower                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RF_Main                                              0     0      0   29561
                         _setRF_Main
 ---------------------------------------------------------------------------------
 (2) _setRF_Main                                           3     3      0   29561
                                              1 BANK1      3     3      0
                      _CC2500_RxData
                      _CC2500_TxData
                _CC2500_WriteCommand
                       _RF_RxDisable
                      _RfPointSelect
                          _getRxData
                          _setINT_GO
 ---------------------------------------------------------------------------------
 (3) _getRxData                                            2     2      0   28277
                                              0 BANK1      1     1      0
                      _RfPointSelect
            _setControl_Lights_Table
                        _setLog_Code
 ---------------------------------------------------------------------------------
 (4) _setLog_Code                                          2     2      0    1263
                                             10 BANK0      2     2      0
                      _RfPointSelect
                             _setBuz
 ---------------------------------------------------------------------------------
 (4) _setControl_Lights_Table                              1     1      0   26952
                                             71 BANK0      1     1      0
                      _RfPointSelect
                             _setBuz
                    _setDimmerLights
                 _setRFSW_AdjControl
                    _setRFSW_Control
                     _setRFSW_Status
                       _setSw_Status
                          _setTxData
 ---------------------------------------------------------------------------------
 (5) _setRFSW_Control                                      2     2      0   10853
                                             66 BANK0      2     2      0
                    _RfSWPointSelect
                             _setBuz
                     _setDelayOff_GO
             _setDimmerLights_Switch
            _setDimmerLights_Trigger
                 _setRF_DimmerLights
                       _setSw_Status
                          _setTxData
 ---------------------------------------------------------------------------------
 (4) _setDelayOff_GO                                       5     3      2    1192
                                              3 BANK0      5     3      2
                _DelayOffPointSelect
                     _DelayTimejudge
 ---------------------------------------------------------------------------------
 (5) _DelayTimejudge                                       3     3      0     238
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (5) _setRFSW_AdjControl                                   3     3      0   12318
                                             68 BANK0      3     3      0
                    _RfSWPointSelect
                  _setRF_DimmerValue
                          _setTxData
 ---------------------------------------------------------------------------------
 (6) _setRF_DimmerValue                                    3     3      0   12070
                                             65 BANK0      3     3      0
              _setDimmerLights_AdjRF
 ---------------------------------------------------------------------------------
 (7) _setDimmerLights_AdjRF                                2     2      0   11977
                                             63 BANK0      2     2      0
            _DimmerLightsPointSelect
                    _getPercentValue
 ---------------------------------------------------------------------------------
 (8) _getPercentValue                                      6     6      0   11884
                                             57 BANK0      6     6      0
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___fttol
 ---------------------------------------------------------------------------------
 (9) ___ftmul                                             16    10      6    2655
                                             14 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (9) ___ftadd                                             13     7      6    3482
                                             30 BANK0     13     7      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) _RF_RxDisable                                         1     1      0     192
                                              4 BANK0      1     1      0
                _CC2500_WriteCommand
                      _RfPointSelect
                          _setINT_GO
 ---------------------------------------------------------------------------------
 (3) _CC2500_TxData                                        2     2      0     235
                                              4 BANK0      2     2      0
                   _CC2500_WriteByte
                _CC2500_WriteCommand
 ---------------------------------------------------------------------------------
 (3) _CC2500_RxData                                        2     2      0     628
                                              4 BANK0      2     2      0
                    _CC2500_ReadByte
                  _CC2500_ReadStatus
                   _CC2500_WriteByte
                _CC2500_WriteCommand
                     _setRF_RxStatus
 ---------------------------------------------------------------------------------
 (4) _setRF_RxStatus                                       2     1      1     158
                                              2 BANK0      2     1      1
                      _RfPointSelect
 ---------------------------------------------------------------------------------
 (4) _CC2500_ReadStatus                                    2     2      0     167
                                              2 BANK0      2     2      0
                    _CC2500_ReadByte
                   _CC2500_WriteByte
 ---------------------------------------------------------------------------------
 (5) _CC2500_ReadByte                                      2     2      0      68
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _RF_Initialization                                    0     0      0       0
               _setRF_Initialization
 ---------------------------------------------------------------------------------
 (2) _setRF_Initialization                                 2     2      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _PowerFault_Main                                      0     0      0    5457
                 _setPowerFault_Main
 ---------------------------------------------------------------------------------
 (2) _setPowerFault_Main                                   2     2      0    5457
                                             13 BANK0      2     2      0
                       _getTemp_Safe
           _setPowerFault_Exceptions
 ---------------------------------------------------------------------------------
 (3) _setPowerFault_Exceptions                             2     2      0    5457
                                             11 BANK0      2     2      0
            _DimmerLights_Exceptions
                             _setLED
                       _setRF_Enable
                       _setSw_Enable
 ---------------------------------------------------------------------------------
 (4) _DimmerLights_Exceptions                              1     1      0    3911
                                             10 BANK0      1     1      0
         _getDimmerLights_StatusFlag
                             _setBuz
              _setDimmerLights_ERROR
       _setDimmerLights_TriggerERROR
 ---------------------------------------------------------------------------------
 (5) _setDimmerLights_TriggerERROR                         2     1      1     347
                                              2 BANK0      2     1      1
            _DimmerLightsPointSelect
 ---------------------------------------------------------------------------------
 (5) _setDimmerLights_ERROR                                2     2      0    2196
                                              4 BANK0      2     2      0
            _DimmerLightsPointSelect
                             _setLED
                     _setRFSW_Status
                       _setSw_Status
 ---------------------------------------------------------------------------------
 (3) _getTemp_Safe                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PowerFault_Initialization                            0     0      0       0
       _setPowerFault_Initialization
 ---------------------------------------------------------------------------------
 (2) _setPowerFault_Initialization                         1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Mcu_Initialization                                   1     1      0       0
                                              1 BANK0      1     1      0
                            _ADC_Set
                            _INT_Set
                            _IOC_Set
                             _IO_Set
                           _TMR0_Set
 ---------------------------------------------------------------------------------
 (2) _TMR0_Set                                             1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _IO_Set                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _IOC_Set                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INT_Set                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Set                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MainT_ResetClock                                     2     2      0      68
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _MainT_Initialization                                 1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _MainT                                                0     0      0    1675
                             _setBuz
                       _setRF_Enable
                       _setSw_Enable
                     _setTemp_Enable
 ---------------------------------------------------------------------------------
 (2) _setTemp_Enable                                       1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _setSw_Enable                                         1     1      0     124
                                              2 BANK0      1     1      0
                      _SwPointSelect
 ---------------------------------------------------------------------------------
 (4) _setRF_Enable                                         2     1      1     319
                                              2 BANK0      2     1      1
                      _RfPointSelect
                          _setINT_GO
 ---------------------------------------------------------------------------------
 (5) _setINT_GO                                            1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _LED_Main                                             0     0      0     217
                        _setLED_Main
 ---------------------------------------------------------------------------------
 (2) _setLED_Main                                          3     3      0     217
                                              2 BANK0      3     3      0
                     _LedPointSelect
 ---------------------------------------------------------------------------------
 (1) _LED_Initialization                                   0     0      0    1072
              _setLED_Initialization
 ---------------------------------------------------------------------------------
 (2) _setLED_Initialization                                1     1      0    1072
                                              4 BANK0      1     1      0
                     _LedPointSelect
                             _setLED
 ---------------------------------------------------------------------------------
 (1) _Flash_Memory_Main                                    0     0      0     331
                _Flash_Memory_Modify
 ---------------------------------------------------------------------------------
 (2) _Flash_Memory_Modify                                  3     3      0     331
                                              4 BANK0      3     3      0
               _Flash_Memory_Erasing
                  _Flash_Memory_Read
                 _Flash_Memory_Write
 ---------------------------------------------------------------------------------
 (3) _Flash_Memory_Erasing                                 0     0      0       0
                _Flash_Memory_Unlock
 ---------------------------------------------------------------------------------
 (1) _Flash_Memory_Initialization                          2     2      0    6140
                                             61 BANK0      2     2      0
                  _Flash_Memory_Read
                 _Flash_Memory_Write
                    _setPercentValue
 ---------------------------------------------------------------------------------
 (3) _Flash_Memory_Write                                   2     2      0     130
                                              0 BANK0      2     2      0
                _Flash_Memory_Unlock
 ---------------------------------------------------------------------------------
 (4) _Flash_Memory_Unlock                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Flash_Memory_Read                                    4     4      0      71
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _DimmerLights_Main                                    0     0      0    9887
                 _DimmerLights_Close
               _setDimmerLights_Main
 ---------------------------------------------------------------------------------
 (2) _setDimmerLights_Main                                 2     2      0    9813
                                             69 BANK0      2     2      0
            _DimmerLightsPointSelect
                             _setBuz
                    _setDimmerLights
                _setDimmerLights_Adj
 ---------------------------------------------------------------------------------
 (3) _setDimmerLights_Adj                                  3     2      1    6868
                                             66 BANK0      3     2      1
            _DimmerLightsPointSelect
                 _setRF_DimmerLights
                          _setTxData
 ---------------------------------------------------------------------------------
 (5) _setDimmerLights                                      3     2      1    1363
                                              4 BANK0      3     2      1
            _DimmerLightsPointSelect
                             _setLED
 ---------------------------------------------------------------------------------
 (4) _setLED                                               2     1      1     917
                                              2 BANK0      2     1      1
                     _LedPointSelect
 ---------------------------------------------------------------------------------
 (5) _LedPointSelect                                       2     2      0      93
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _DimmerLights_Close                                   0     0      0      74
         _getDimmerLights_StatusFlag
 ---------------------------------------------------------------------------------
 (5) _getDimmerLights_StatusFlag                           3     3      0      74
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _DimmerLights_Initialization                          1     1      0      93
                                              4 BANK0      1     1      0
              _Dimmer_Initialization
     _setDimmerLights_Initialization
 ---------------------------------------------------------------------------------
 (2) _setDimmerLights_Initialization                       2     2      0      93
                                              2 BANK0      2     2      0
            _DimmerLightsPointSelect
 ---------------------------------------------------------------------------------
 (2) _Dimmer_Initialization                                1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _DelayOff_Main                                        0     0      0   10023
                        _DlyOff_Main
 ---------------------------------------------------------------------------------
 (2) _DlyOff_Main                                          3     3      0   10023
                                             66 BANK0      3     3      0
                _DelayOffPointSelect
                             _setBuz
             _setDimmerLights_Switch
            _setDimmerLights_Trigger
                     _setRFSW_Status
                 _setRF_DimmerLights
                       _setSw_Status
                          _setTxData
 ---------------------------------------------------------------------------------
 (4) _setTxData                                            3     3      0      62
                                              2 BANK0      2     2      0
                      _RfPointSelect
 ---------------------------------------------------------------------------------
 (5) _RfPointSelect                                        2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (6) _setSw_Status                                         2     1      1     514
                                              2 BANK0      2     1      1
                      _SwPointSelect
 ---------------------------------------------------------------------------------
 (5) _SwPointSelect                                        2     2      0      62
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _setRF_DimmerLights                                   5     4      1    6521
                                             61 BANK0      5     4      1
                    _setPercentValue
 ---------------------------------------------------------------------------------
 (5) _setPercentValue                                      4     4      0    5747
                                             57 BANK0      4     4      0
                           ___awtoft
                            ___ftdiv
                            ___fttol
 ---------------------------------------------------------------------------------
 (6) ___fttol                                             14    10      4     501
                                             43 BANK0     14    10      4
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___ftdiv                                             16    10      6    2847
                                             14 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (6) ___awtoft                                             6     3      3    2300
                                              8 BANK0      6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (7) ___ftpack                                             8     3      5    2037
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (6) _setRFSW_Status                                       2     1      1     579
                                              2 BANK0      2     1      1
                    _RfSWPointSelect
 ---------------------------------------------------------------------------------
 (7) _RfSWPointSelect                                      2     2      0      62
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _setDimmerLights_Trigger                              2     1      1     449
                                              2 BANK0      2     1      1
            _DimmerLightsPointSelect
 ---------------------------------------------------------------------------------
 (4) _setDimmerLights_Switch                               2     1      1     449
                                              2 BANK0      2     1      1
            _DimmerLightsPointSelect
 ---------------------------------------------------------------------------------
 (6) _DimmerLightsPointSelect                              2     2      0      62
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _setBuz                                               4     2      2    1201
                                              6 BANK0      4     2      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     266
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _DelayOff_Initialization                              0     0      0      93
              _DlyOff_Initialization
 ---------------------------------------------------------------------------------
 (2) _DlyOff_Initialization                                1     1      0      93
                                              2 BANK0      1     1      0
                _DelayOffPointSelect
 ---------------------------------------------------------------------------------
 (5) _DelayOffPointSelect                                  2     2      0      62
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _CC2500_PowerOnInitial                                0     0      0    2107
                 _CC2500_ClearRXFIFO
                 _CC2500_ClearTXFIFO
               _CC2500_FrequencyCabr
                 _CC2500_InitPATable
                  _CC2500_InitSetREG
                    _CC2500_PowerRST
                   _CC2500_SIDLEMode
 ---------------------------------------------------------------------------------
 (2) _CC2500_SIDLEMode                                     0     0      0      99
                _CC2500_WriteCommand
 ---------------------------------------------------------------------------------
 (2) _CC2500_PowerRST                                      1     1      0     464
                                              6 BANK0      1     1      0
                   _CC2500_WriteByte
                      _DelayTime_1us
 ---------------------------------------------------------------------------------
 (2) _CC2500_InitSetREG                                    4     4      0     458
                                              5 BANK0      4     4      0
                    _CC2500_WriteREG
 ---------------------------------------------------------------------------------
 (2) _CC2500_InitPATable                                   3     3      0     393
                                              5 BANK0      3     3      0
                    _CC2500_WriteREG
 ---------------------------------------------------------------------------------
 (3) _CC2500_WriteREG                                      3     2      1     260
                                              2 BANK0      3     2      1
                   _CC2500_WriteByte
 ---------------------------------------------------------------------------------
 (2) _CC2500_FrequencyCabr                                 0     0      0     495
                _CC2500_WriteCommand
                      _DelayTime_1us
 ---------------------------------------------------------------------------------
 (3) _DelayTime_1us                                        6     4      2     396
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (2) _CC2500_ClearTXFIFO                                   0     0      0      99
                _CC2500_WriteCommand
 ---------------------------------------------------------------------------------
 (2) _CC2500_ClearRXFIFO                                   0     0      0      99
                _CC2500_WriteCommand
 ---------------------------------------------------------------------------------
 (4) _CC2500_WriteCommand                                  2     2      0      99
                                              2 BANK0      2     2      0
                   _CC2500_WriteByte
 ---------------------------------------------------------------------------------
 (5) _CC2500_WriteByte                                     2     2      0      68
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _Buzzer_Main                                          4     4      0       0
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _Buzzer_Initialization                                1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _ISR                                                 1     1      0     119
                                              4 COMMON     1     1      0
                            _INT_ISR
                            _IOC_ISR
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (12) _TMR0_ISR                                            4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (12) _IOC_ISR                                             1     1      0       0
                                              0 COMMON     1     1      0
                   _setDimmerReClock
 ---------------------------------------------------------------------------------
 (13) _setDimmerReClock                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _INT_ISR                                             0     0      0     119
                    _setRF_ReceiveGO
 ---------------------------------------------------------------------------------
 (13) _setRF_ReceiveGO                                     2     1      1     119
                                              2 COMMON     2     1      1
                    i1_RfPointSelect
 ---------------------------------------------------------------------------------
 (14) i1_RfPointSelect                                     2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Buzzer_Initialization
   _Buzzer_Main
   _CC2500_PowerOnInitial
     _CC2500_ClearRXFIFO
       _CC2500_WriteCommand
         _CC2500_WriteByte
     _CC2500_ClearTXFIFO
       _CC2500_WriteCommand
         _CC2500_WriteByte
     _CC2500_FrequencyCabr
       _CC2500_WriteCommand
         _CC2500_WriteByte
       _DelayTime_1us
     _CC2500_InitPATable
       _CC2500_WriteREG
         _CC2500_WriteByte
     _CC2500_InitSetREG
       _CC2500_WriteREG
         _CC2500_WriteByte
     _CC2500_PowerRST
       _CC2500_WriteByte
       _DelayTime_1us
     _CC2500_SIDLEMode
       _CC2500_WriteCommand
         _CC2500_WriteByte
   _DelayOff_Initialization
     _DlyOff_Initialization
       _DelayOffPointSelect
   _DelayOff_Main
     _DlyOff_Main
       _DelayOffPointSelect
       _setBuz
         ___wmul
       _setDimmerLights_Switch
         _DimmerLightsPointSelect
       _setDimmerLights_Trigger
         _DimmerLightsPointSelect
       _setRFSW_Status
         _RfSWPointSelect
       _setRF_DimmerLights
         _setPercentValue
           ___awtoft
             ___ftpack
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
       _setSw_Status
         _SwPointSelect
       _setTxData
         _RfPointSelect
   _DimmerLights_Initialization
     _Dimmer_Initialization
     _setDimmerLights_Initialization
       _DimmerLightsPointSelect
   _DimmerLights_Main
     _DimmerLights_Close
       _getDimmerLights_StatusFlag
     _setDimmerLights_Main
       _DimmerLightsPointSelect
       _setBuz
         ___wmul
       _setDimmerLights
         _DimmerLightsPointSelect
         _setLED
           _LedPointSelect
       _setDimmerLights_Adj
         _DimmerLightsPointSelect
         _setRF_DimmerLights
           _setPercentValue
             ___awtoft
               ___ftpack
             ___ftdiv
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___fttol
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
         _setTxData
           _RfPointSelect
   _Flash_Memory_Initialization
     _Flash_Memory_Read
     _Flash_Memory_Write
       _Flash_Memory_Unlock
     _setPercentValue
       ___awtoft
         ___ftpack
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
   _Flash_Memory_Main
     _Flash_Memory_Modify
       _Flash_Memory_Erasing
         _Flash_Memory_Unlock
       _Flash_Memory_Read
       _Flash_Memory_Write
         _Flash_Memory_Unlock
   _LED_Initialization
     _setLED_Initialization
       _LedPointSelect
       _setLED
         _LedPointSelect
   _LED_Main
     _setLED_Main
       _LedPointSelect
   _MainT
     _setBuz
       ___wmul
     _setRF_Enable
       _RfPointSelect
       _setINT_GO
     _setSw_Enable
       _SwPointSelect
     _setTemp_Enable
   _MainT_Initialization
   _MainT_ResetClock
   _Mcu_Initialization
     _ADC_Set
     _INT_Set
     _IOC_Set
     _IO_Set
     _TMR0_Set
   _PowerFault_Initialization
     _setPowerFault_Initialization
   _PowerFault_Main
     _setPowerFault_Main
       _getTemp_Safe
       _setPowerFault_Exceptions
         _DimmerLights_Exceptions
           _getDimmerLights_StatusFlag
           _setBuz
             ___wmul
           _setDimmerLights_ERROR
             _DimmerLightsPointSelect
             _setLED
               _LedPointSelect
             _setRFSW_Status
               _RfSWPointSelect
             _setSw_Status
               _SwPointSelect
           _setDimmerLights_TriggerERROR
             _DimmerLightsPointSelect
         _setLED
           _LedPointSelect
         _setRF_Enable
           _RfPointSelect
           _setINT_GO
         _setSw_Enable
           _SwPointSelect
   _RF_Initialization
     _setRF_Initialization
   _RF_Main
     _setRF_Main
       _CC2500_RxData
         _CC2500_ReadByte
         _CC2500_ReadStatus
           _CC2500_ReadByte
           _CC2500_WriteByte
         _CC2500_WriteByte
         _CC2500_WriteCommand
           _CC2500_WriteByte
         _setRF_RxStatus
           _RfPointSelect
       _CC2500_TxData
         _CC2500_WriteByte
         _CC2500_WriteCommand
           _CC2500_WriteByte
       _CC2500_WriteCommand
         _CC2500_WriteByte
       _RF_RxDisable
         _CC2500_WriteCommand
           _CC2500_WriteByte
         _RfPointSelect
         _setINT_GO
       _RfPointSelect
       _getRxData
         _RfPointSelect
         _setControl_Lights_Table
           _RfPointSelect
           _setBuz
             ___wmul
           _setDimmerLights
             _DimmerLightsPointSelect
             _setLED
               _LedPointSelect
           _setRFSW_AdjControl
             _RfSWPointSelect
             _setRF_DimmerValue
               _setDimmerLights_AdjRF
                 _DimmerLightsPointSelect
                 _getPercentValue
                   ___awtoft
                     ___ftpack
                   ___ftadd
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftmul (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                     ___ftpack (ARG)
                   ___ftdiv
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                   ___ftmul
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                   ___fttol
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftadd (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftmul (ARG)
                         ___awtoft (ARG)
                           ___ftpack
                         ___ftpack (ARG)
                       ___ftpack (ARG)
                     ___ftdiv (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                     ___ftmul (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
             _setTxData
               _RfPointSelect
           _setRFSW_Control
             _RfSWPointSelect
             _setBuz
               ___wmul
             _setDelayOff_GO
               _DelayOffPointSelect
               _DelayTimejudge
             _setDimmerLights_Switch
               _DimmerLightsPointSelect
             _setDimmerLights_Trigger
               _DimmerLightsPointSelect
             _setRF_DimmerLights
               _setPercentValue
                 ___awtoft
                   ___ftpack
                 ___ftdiv
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___fttol
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftadd (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftmul (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                     ___ftpack (ARG)
                   ___ftdiv (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
             _setSw_Status
               _SwPointSelect
             _setTxData
               _RfPointSelect
           _setRFSW_Status
             _RfSWPointSelect
           _setSw_Status
             _SwPointSelect
           _setTxData
             _RfPointSelect
         _setLog_Code
           _RfPointSelect
           _setBuz
             ___wmul
       _setINT_GO
   _Switch_Initialization
     _TouchPower
     _setSw_Initialization
       _setLED
         _LedPointSelect
   _Switch_Main
     _setSw_Main
       _SwPointSelect
       _Sw_DimmerAdjFunc
         _setDimmerLights_AdjGo
           _DimmerLightsPointSelect
         _setDimmerLights_TriggerAdj
           _DimmerLightsPointSelect
         _setRFSW_Status
           _RfSWPointSelect
       _Sw_DimmerOffFunc
         _setDelayOff_GO
           _DelayOffPointSelect
           _DelayTimejudge
         _setDimmerLights_AdjGo
           _DimmerLightsPointSelect
         _setDimmerLights_Switch
           _DimmerLightsPointSelect
         _setDimmerLights_Trigger
           _DimmerLightsPointSelect
         _setDimmerLights_TriggerAdj
           _DimmerLightsPointSelect
         _setRF_DimmerLights
           _setPercentValue
             ___awtoft
               ___ftpack
             ___ftdiv
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___fttol
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
         _setTxData
           _RfPointSelect
       _Sw_DimmerOnFunc
         _setBuz
           ___wmul
         _setDimmerLights_Switch
           _DimmerLightsPointSelect
         _setDimmerLights_Trigger
           _DimmerLightsPointSelect
         _setRFSW_Status
           _RfSWPointSelect
         _setRF_DimmerLights
           _setPercentValue
             ___awtoft
               ___ftpack
             ___ftdiv
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___fttol
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
         _setTxData
           _RfPointSelect
       _setBuz
         ___wmul
       _setRF_Learn
         _RfPointSelect
   _Temp_Initialization
     _setTemp_Initialization
   _Temp_Main
     _setTemp_Main
       _getPF_Safe
       _setOverTemp_Exceptions
         _DimmerLights_Exceptions
           _getDimmerLights_StatusFlag
           _setBuz
             ___wmul
           _setDimmerLights_ERROR
             _DimmerLightsPointSelect
             _setLED
               _LedPointSelect
             _setRFSW_Status
               _RfSWPointSelect
             _setSw_Status
               _SwPointSelect
           _setDimmerLights_TriggerERROR
             _DimmerLightsPointSelect
         _setBuz
           ___wmul
         _setLED
           _LedPointSelect
         _setRF_Enable
           _RfPointSelect
           _setINT_GO
         _setSw_Enable
           _SwPointSelect
   _getPowerFault_AD
     _getAD
   _getTemp_AD
     _getAD

 _ISR (ROOT)
   _INT_ISR
     _setRF_ReceiveGO
       i1_RfPointSelect
   _IOC_ISR
     _setDimmerReClock
   _TMR0_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       1       1        7.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      5       A       2       71.4%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     48      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      4      4F       7       98.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      50       9      100.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      31      11       61.3%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      25      13       46.3%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     14F      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     14F      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Mon Sep 29 08:23:39 2014

                   __size_of_Switch_Main 0008                    ?_Flash_Memory_Erasing 0071  
           ??_setDimmerLights_TriggerAdj 0023                                       _PF 0076  
                                     _RD 0CA8                                       _RF 0077  
                __end_of_CC2500_WriteREG 1BD3                                       _WR 0CA9  
                                     _Sw 0078       __end_of_getDimmerLights_StatusFlag 1B5C  
             _getDimmerLights_StatusFlag 1B46                      ___wmul@multiplicand 0022  
                 __end_of_setDelayOff_GO 1318                             ___ftadd@exp1 004A  
                           ___ftadd@exp2 0049                setDimmerLights_Adj@lights 0064  
                   _setDimmerLights_Main 08E3                             ___ftadd@sign 0048  
                                    l304 1138                                      l401 1D61  
                                    l305 113D                                      l315 1434  
                                    l332 1ED6                                      l308 1140  
                                    l335 1EDC                                      l319 1445  
                                    l365 1BAD                                      l366 1BAF  
                                    l377 1BC2                                      l395 1C28  
                                    l299 110E                                      l389 1A63  
                                    l690 1E81                                      l847 1AD6  
                                    l894 1531                                      _GIE 005F  
                                    _CRC 00B7                                      _RA0 0060  
                                    _RB0 0068     __size_of_DimmerLights_Initialization 0015  
                                    _RB1 0069                                      _RA3 0063  
                                    _PF1 0168                                      _RC0 0070  
                                    _RB2 006A                                      _RA4 0064  
                                    _LED 00BA                                      _RC1 0071  
                                    _RB3 006B                                      _RC2 0072  
                                    _RB4 006C                                      _RA6 0066  
                                    _RB5 006D                                      _RA7 0067  
                                    _RC4 0074                                      _RC5 0075  
                                    _RC7 0077                                      _RF1 00E5  
                                    _ISR 0004          setPowerFault_Exceptions@command 002C  
                                    _Sw1 0156                                      _Sw2 015F  
                                    _Buz 0068                setDimmerLights_Adj@status 0062  
               __end_of_CC2500_WriteByte 1BBA           ??_setDimmerLights_TriggerERROR 0023  
                  _Buzzer_Initialization 1970                          __end_of_ADC_Set 191E  
                        ?_DelayTimejudge 0071                                      wreg 0009  
   setDimmerLights_Initialization@lights 0023                          _setDimmerLights 09E5  
                  _setDimmerLights_ERROR 121E                    _setDimmerLights_AdjRF 1D14  
                  _setDimmerLights_AdjGo 1A9B                  __size_of_setTemp_Enable 000B  
                                   ?_ISR 0071                          _PowerFault_Main 18DC  
                           ___ftdiv@cntr 0038                          __end_of_IOC_ISR 1D5C  
                           ___ftdiv@sign 003D                                     l2012 10ED  
                                   l1332 1F12                                     l2302 071B  
                                   l2306 1F69                 ?_DimmerLightsPointSelect 0071  
                                   l3234 141B                                     l1706 1EAB  
                                   l3067 1C7C                                     l3228 1404  
                        __end_of_IOC_Set 1A07                                     l2544 1217  
                                   l1680 1B66                                     l3257 0FA9  
                                   l2562 1B3B                                     l2576 102C  
                                   l2754 18F9                                     l8000 0F7F  
                                   l8010 0F9B                                     l8002 0F84  
                                   l8020 0FCD                                     l8012 0FA5  
                                   l8004 0F88                                     l8100 0DD5  
                                   l8030 0FE8                                     l8040 0CDB  
                                   l8016 0FBB                                     l8112 0DF1  
                                   l8104 0DDD                                     l8200 1E67  
                                   l8060 0D32                                     l8132 0977  
                                   l8116 0DF9                                     l8212 1E79  
                                   l8204 1E6D                                     l9004 108D  
                                   l8046 0CF1                                     l8150 09A7  
                                   l8160 09CB                                     l8152 09B5  
                                   l8400 13A5                                     l8208 1E73  
                                   l9008 109D                                     l8162 09CE  
                                   l8242 1D09                                     l8082 0D84  
                                   l8068 0D4B                                     l8260 07F7  
                                   l8412 13C1                                     l8500 0A42  
                                   l9212 1FF9                                     l8166 09DC  
                                   l8158 09C2                                     l8318 15BB  
                                   l8238 1CFE                                     l9038 16F2  
                                   l8408 13BB                                     l8416 13C7  
                                   l9160 08FF                                     l9208 1FF2  
                                   l9400 06CE                                     l8088 0D9A  
                                   l8424 1F21                                     l8360 12F2  
                                   l9312 053B                                     l8266 1C76  
                                   l8290 17E2                                     l9170 091D  
                                   l8610 1524                                     l8362 12FF  
                                   l9314 0544                                     l8188 1AFD  
                                   l9156 08F2                                     l8612 1529  
                                   l9412 070A                                     l9404 06ED  
                                   l8460 1C66                                     l8196 1E61  
                                   l8356 12EC                                     l8286 17C4  
                                   l8382 1389                                     l9174 092A  
                                   l8606 1511                                     l9414 0710  
                                   l8462 1C6C                                     l8366 130B  
                                   l8550 0B50                                     l8702 0C0A  
                                   l8392 1399                                     l8536 0B16  
                                   l9352 05E9                                     l9336 05AA  
                                   l9602 0C81                                     l9610 0CAF  
                                   l7930 13EB                                     l8378 1383  
                                   l8386 138F                                     l9186 0957  
                                   l8546 0B3A                                     l8706 0C13  
                                   l9434 0A83                                     l9506 03BF  
                                   l9346 05D8                                     l7940 1411  
                                   l7932 13F0                                     l7924 13DA  
                                   l8476 1B56                                     l8396 139F  
                                   l9284 14B3                                     l9380 0665  
                                   l9460 0AC4                                     l9524 03FE  
                                   l9508 03C8                                     l9348 05DE  
                                   l9614 0CB6                                     l9278 149C  
                                   l8574 101A                                     l9462 0AC8  
                                   l9438 0A8B                                     l9534 0431  
                                   l9608 0CA9                                     l7928 13E1  
                                   l8808 1F98                                     l9288 14F3  
                                   l8760 1457                                     l8728 1120  
                                   l9448 0AA9                                     l7938 1409  
                                   l8850 1E91                                     l9378 065B  
                                   l8762 146F                                     l7970 0F32  
                                   l8930 129B                                     l7980 0F48  
                                   l9476 0AEE                                     l9548 0475  
                                   l7958 1CDB                                     l9806 1188  
                                   l8774 1488                                     l7974 0F39  
                                   l8694 0BF8                                     l8918 1285  
                                   l9558 04A8                                     l9734 160E  
                                   l9680 0E99                                     l7992 0F62  
                                   l8688 0BDC                                     l9496 03AC  
                                   _CFGS 0CAE                                     l8786 1D72  
                                   l9770 08DD                                     l9762 08B1  
                                   l8698 0C01                                     l8970 1641  
                                   l9498 03B3                                     l8788 1D7D  
                                   l9790 1F0A                                     l7998 0F75  
                                   l8974 1651                                     l8894 10E4  
                                   l9862 0826                                     l8994 1693  
                                   l9866 0838                                     _FREE 0CAC  
                                   _LATA 010C                                     _LATB 010D  
                        __end_of_INT_ISR 19CA                                     _LATC 010E  
                                   _PEIE 005E                                     _INTE 005C  
                                   _INTF 0059                                     u8200 156A  
                                   u7315 13E6                                     u8205 1568  
                                   u8135 1C7D                                     u7335 13FF  
                                   u8145 1C82                                     u7505 0F63  
                                   u7355 140C                                     u7535 0F76  
                                   u7385 1422                                     u7705 0D4C  
                                   u7565 0F89                                     u8550 1964  
                                   u7815 0DFA                                     u7665 0D03  
                                   u7825 0E00                                     u7745 0DA6  
                                   u7675 0D13                                     u7915 09C3  
                                   u7595 0F9C                                     u7755 0DB6  
                                   u7685 0D33                                     u7695 0D42  
                                   u7855 097E                                     u7775 0DDE  
                                   u7785 0DE4                                     u7885 09A8  
                                   u8875 1D67                                     _LWLO 0CAD  
                                   _RFSW 00BB                                     _TMR0 0015  
                        __end_of_INT_Set 1904                                     _RSSI 00BC  
                                   _WREN 0CAA                                     _Buz1 014A  
                                   _Temp 0079                                     _main 0802  
                           ___ftpack@arg 0020        __end_of_PowerFault_Initialization 18DC  
                    __end_of_DlyOff_Main 1789                          __end_of_RF_Main 18F9  
                           ___ftpack@exp 0023                                     fsr0h 0005  
                                   fsr1h 0007                                     fsr0l 0004  
                                   indf0 0000                                     indf1 0001  
                                   fsr1l 0006      __size_of_setDimmerLights_TriggerAdj 0010  
                                   btemp 007E                                     ltemp 007E  
          __size_of_setRF_Initialization 0007                         _setDimmerReClock 1C05  
                                   start 0016                                     ttemp 007E  
                                   wtemp 007E                 _setPowerFault_Exceptions 1F49  
                    DelayTimejudge@value 0022                            _RfPointSelect 1986  
             __end_of_setRFSW_AdjControl 1042                             ___ftmul@cntr 003C  
                           ___ftmul@sign 003D             __size_of_Temp_Initialization 0003  
            __size_of_setPowerFault_Main 0108                                    ??_ISR 0075  
                           ___fttol@exp1 0058                             ___fttol@lval 0054  
                       __end_of_LED_Main 19FA                    ?_setDimmerLights_Main 0071  
                        ?_setDelayOff_GO 0023                                    ?_main 0071  
              setControl_Lights_Table@rf 0067                          __end_of___ftadd 1000  
                          __CFG_WDTE$OFF 0000                          __end_of___ftdiv 0D6D  
                                  u10205 0884                                    u10055 0C42  
                                  u10215 08C7                                    u10305 116F  
                                  u10155 15FD                          __end_of___ftmul 0E21  
                                  u10165 1626                                    u10185 1073  
                        __end_of___fttol 09E5             setDimmerLights_AdjGo@command 0022  
                                  _IOCBF 0396                                    _IOCBN 0395  
                                  _IOCBP 0394                                    _IOCIE 005B  
                                  _IOCIF 0058                   _setDimmerLights_Switch 1A6B  
          __size_of_CC2500_FrequencyCabr 000C                                    _RFSW1 00E8  
                                  _RFSW2 00E9                                    _PORTA 000C  
                                  _PORTB 000D                                    _PORTC 000E  
                           ?_setLED_Main 0071                       setRF_Learn@command 0022  
                                  _TRISA 008C                                    _TRISB 008D  
                                  _TRISC 008E                                    _WPUB0 1068  
                                  _WPUB1 1069                                    _WPUB2 106A  
                                  _TMain 006F                            setRF_Learn@rf 0023  
                                  _MainT 086A                            __CFG_WRT$HALF 0000  
                                  _Temp1 013C                         __end_of_TMR0_ISR 0393  
           __size_of_CC2500_WriteCommand 0010                         __end_of_TMR0_Set 1A14  
                      ?_MainT_ResetClock 0071                                    _getAD 1B5C  
                          ___awtoft@sign 002D          __end_of_DimmerLights_Exceptions 1560  
          DimmerLights_Exceptions@status 002A                            ___ftpack@sign 0024  
            __size_of_CC2500_ClearRXFIFO 0004                       ??_MainT_ResetClock 0020  
                          ??_Buzzer_Main 0020              __size_of_CC2500_ClearTXFIFO 0004  
                    CC2500_RxData@loop_f 0025                           __pbitbssCOMMON 0380  
                         __CFG_BOREN$OFF 0000                       Flash_Memory_Read@i 0021  
                       ?_CC2500_ReadByte 0071                                    ltemp0 007E  
                                  ltemp1 0082                                    ltemp2 0086  
                                  ltemp3 0080           __size_of_setLED_Initialization 0011  
          __end_of_setLED_Initialization 1ACC                                    ttemp0 007E  
                                  ttemp1 0081                                    ttemp2 0084  
                                  ttemp3 0087                                    ttemp4 007F  
                           ?_setRF_Learn 0022                                    status 0003  
                                  wtemp0 007E                                    wtemp1 0080  
                                  wtemp2 0082                                    wtemp3 0084  
                                  wtemp4 0086                                    wtemp5 0088  
                                  wtemp6 007F                       _setRF_DimmerLights 1560  
            __size_of_Flash_Memory_Write 002F                   ??_MainT_Initialization 0020  
                      ?_CC2500_SIDLEMode 0071               __size_of_RF_Initialization 0004  
                         ?_RfPointSelect 0071                           setSw_Status@sw 0023  
       __size_of_DelayOff_Initialization 0008                setDimmerLights_Main@clear 0065  
                 ??_Flash_Memory_Erasing 0020                          _getPercentValue 1318  
                     ??_CC2500_SIDLEMode 0024                          __initialization 0018  
                       ?_CC2500_PowerRST 0071                        ??_Sw_DimmerOnFunc 0062  
                      ??_setPercentValue 0059                             __end_of_main 086A  
                    ?_setRF_DimmerLights 005D                         ?_CC2500_WriteREG 0022  
                              ??_ADC_Set 0020                  __end_of_setDimmerLights 0A6E  
                   _setSw_Initialization 193C                                   ??_main 0068  
                          ___fttol@sign1 0053                             ?_setLog_Code 0071  
                _setControl_Lights_Table 0B89                   ?_Buzzer_Initialization 0071  
                ??_DlyOff_Initialization 0022                  __end_of_PowerFault_Main 18DF  
                             _Receive_GO 0381                               _Receive_OK 0382  
                              ??_IOC_ISR 0071                   ?_setDimmerLights_ERROR 0071  
                              ??_IOC_Set 0020          __end_of_DimmerLightsPointSelect 1ADF  
                                 ?_MainT 0071                   ?_setDimmerLights_AdjRF 0071  
                              ??_INT_ISR 0075                   ?_setDimmerLights_AdjGo 0022  
               __size_of_setRFSW_Control 0090                         ??_setRFSW_Status 0023  
                              ??_INT_Set 0020                  ??_Switch_Initialization 0025  
                   __end_of_getTemp_Safe 1925                        i1RfPointSelect@rf 0072  
                   ??_setRF_DimmerLights 005E                                   ?_getAD 0020  
                            _DlyOff_Main 1717                                   _ADCON0 009D  
                                 _ADCON1 009E                                ??_RF_Main 0068  
                                 _ADRESH 009C                                   _ADRESL 009B  
                      ?_getPowerFault_AD 0071                           setRF_Enable@rf 0023  
                       __end_of___awtoft 1CF2                                   _ANSELA 018C  
                                 _ANSELB 018D                                   _ANSELC 018E  
                       __end_of___ftpack 1432                                   _IOCBF2 1CB2  
                _setDimmerLights_Trigger 1A7B                                   i1l1652 1C13  
                                 i1l1647 0382                                   i1l7614 1D52  
                                 i1l7702 01DD                                   i1l7740 0292  
                                 i1l7716 022F                                   i1l7734 0279  
                                 i1l7742 0298                                   i1l7670 012F  
                                 i1l7662 010D                                   i1l7638 00AA  
                                 i1l7752 02CB                                   i1l7736 027F  
                                 i1l7656 00F4                                   i1l7664 0113  
                                 i1l7762 02FA                                   i1l7674 0146  
                                 i1l7658 00FA                                   i1l7764 0300  
                                 i1l7748 02B4                                   i1l7756 02DF  
                                 i1l7772 032E                                   i1l7780 0362  
                                 i1l7684 0175                                   i1l7686 017B  
                                 i1l7678 015A                                   i1l7694 01A9  
                                 _FVRCON 0117                                   _PMADRH 0192  
                                 _PMADRL 0191                                   _PMDATH 0194  
                                 _PMDATL 0193                                   _PMCON2 0196  
                     ??_getPowerFault_AD 0024                                   u713_25 0358  
                                 _OSCCON 0099                                   u714_25 0374  
                                 _TMR0IE 005D                                   _TMR0IF 005A  
                                 u677_25 008E                                   u694_25 01D3  
                                 _IO_Set 1BEC                                   u696_25 0213  
                     DelayTime_1us@count 0020                               _VarProduct 01A0  
                  _Dimmer_Initialization 1910           __size_of_CC2500_PowerOnInitial 0015  
          __end_of_CC2500_PowerOnInitial 1B1B                                   _Dimmer 00B8  
                                 _DlySw1 00CC                                   _DlySw2 00D1  
             __end_of_Mcu_Initialization 1B89                      __end_of_Buzzer_Main 0CC4  
                                 _Memory 006D                                   _Timer0 00EE  
     __end_of_setDimmerLights_TriggerAdj 1ABB               _setDimmerLights_TriggerAdj 1AAB  
          setDimmerLights_Switch@command 0022                                   ___wmul 1C73  
                              ??___ftadd 0044             __size_of_DelayOffPointSelect 0014  
                              ??___ftdiv 0034                    setDimmerLights@lights 0026  
                              ??___ftmul 0034                                ??___fttol 004F  
           ?_Flash_Memory_Initialization 0071                          i1_RfPointSelect 1966  
            setDimmerLights_AdjRF@lights 0060                   ??_setDimmerLights_Main 0065  
                                 _r_data 00C1                                   _s_data 00C2  
                                 _setLED 1373                         _DimmerLightsIntr 00B9  
                  ?_setSw_Initialization 0071                    setDimmerLights@status 0024  
                                 _setBuz 1789                       __size_of_Temp_Main 0003  
       ??_setDimmerLights_Initialization 0022          ?_setDimmerLights_Initialization 0071  
                  ___ftmul@f3_as_product 0039             ??_getDimmerLights_StatusFlag 0020  
               Flash_Memory_Read@address 0022                        RfSWPointSelect@sw 0021  
                       ??_setRF_RxStatus 0023                    __end_of_SwPointSelect 0800  
                getPowerFault_AD@channel 0028                            ?_setRF_Enable 0022  
                         _setTemp_Enable 199C                          _RfSWPointSelect 1B30  
           __size_of_Flash_Memory_Modify 0065              __size_of_DimmerLights_Close 0018  
                __size_of_LedPointSelect 0022                      Flash_Memory_Write@i 0021  
           __size_of_Flash_Memory_Unlock 0009                               _TouchPower 18F9  
                      ?_Sw_DimmerAdjFunc 0071              __size_of_CC2500_InitPATable 001F  
                    CC2500_TxData@loop_e 0025                  __end_of_getPercentValue 1373  
       __end_of_CC2500_registers_address 182F     __end_of_setPowerFault_Initialization 1A9B  
  __size_of_setPowerFault_Initialization 0010             _setPowerFault_Initialization 1A8B  
                __end_of__initialization 004D              ??_PowerFault_Initialization 0021  
                        ??_RfPointSelect 0020              setDimmerLights_AdjGo@lights 0023  
                              ?_LED_Main 0071                               ___ftadd@f1 003E  
                             ___ftadd@f2 0041                       ??_Sw_DimmerAdjFunc 0024  
                    setSw_Enable@command 0022                               ___ftdiv@f1 0031  
                             ___ftdiv@f2 002E                               ___ftdiv@f3 0039  
                      ?_Sw_DimmerOffFunc 0071                               ___awtoft@c 0028  
           ?_DimmerLights_Initialization 0071                               ___ftmul@f1 002E  
                             ___ftmul@f2 0031                            __end_of_MainT 08E3  
                             ___fttol@f1 004B                           __pcstackCOMMON 0071  
                     ??_Sw_DimmerOffFunc 0062                             __pidataBANK3 1CB0  
                          __end_of_getAD 1B72                                ?_TMR0_ISR 0071  
                              ?_TMR0_Set 0071             __size_of_setDimmerLights_Adj 003D  
                     _LED_Initialization 19E2                ??_setControl_Lights_Table 0067  
       __size_of_DimmerLights_Exceptions 0065                         ??_DelayTimejudge 0020  
            ?_getDimmerLights_StatusFlag 0071            ??_Flash_Memory_Initialization 005D  
               __size_of_setRF_ReceiveGO 000C                         ?_setDimmerLights 0024  
                       ?_PowerFault_Main 0071                 __end_of_setDimmerReClock 1C1F  
                     __size_of_getRxData 0052                      ?_LED_Initialization 0071  
                 __end_of_setTemp_Enable 19A7                        ?_CC2500_WriteByte 0071  
                                ??_MainT 002A                           ??_setRF_Enable 0023  
                         _DimmerLights11 006B                           _DimmerLights22 006C  
                   __size_of_setLED_Main 0040                ??_setDimmerLights_Trigger 0023  
                                ??_getAD 0023                      _Temp_Initialization 18DF  
                     ??_CC2500_WriteByte 0020               ??_setPowerFault_Exceptions 002B  
           setDimmerLights_Switch@lights 0023                               __pbssBANK0 0068  
                             __pbssBANK1 00A0                               __pbssBANK2 0120  
                             __pbssBANK3 01C0                               __pbssBANK4 0220  
                            _Buzzer_Main 0C1C                        ??_setRFSW_Control 0062  
                      __end_of_Temp_Main 18E5                   ?_Dimmer_Initialization 0071  
                                ?_IO_Set 0071                               ??_LED_Main 0025  
                _DelayOff_Initialization 192C            ?_setPowerFault_Initialization 0071  
                             _getPF_Safe 194C                            ??_Switch_Main 0067  
                         DelayTime_1us@i 0022                           DelayTime_1us@j 0024  
                   ??_LED_Initialization 0025                             _DimmerLights 006A  
                      LedPointSelect@led 0021                  __end_ofi1_RfPointSelect 1970  
                     __size_of_setINT_GO 0009                   __size_of_DelayOff_Main 0008  
                   __size_of_setRF_Learn 000E                              setBuz@count 0029  
                             __pmaintext 0802                      _CC2500_WriteCommand 1A5B  
                   ?_Temp_Initialization 0071         __size_of_DimmerLightsPointSelect 0013  
                       ??_setDelayOff_GO 0025            ??_DimmerLights_Initialization 0024  
                                ?___wmul 0020                               ??_TMR0_ISR 0071  
                          ?_setTemp_Main 0071                               ??_TMR0_Set 0020  
                             __pintentry 0004                   ??_setSw_Initialization 0024  
                          ?_setSw_Enable 0071                       __size_of_setTxData 00C9  
                ?_setDimmerLights_Switch 0022                     Sw_DimmerAdjFunc@Idle 0024  
                                ?_setLED 0022                   __size_of_DelayTime_1us 0026  
                                _ADC_Set 1917                _PowerFault_Initialization 18D9  
                                ?_setBuz 0026                                ?___awtoft 0028  
                              ?___ftpack 0020                               _getTemp_AD 15CB  
           __end_of_setRF_Initialization 192C                    __size_of_getTemp_Safe 0007  
                          ?_setSw_Status 0022                       _setRFSW_AdjControl 1002  
                __end_of_RfSWPointSelect 1B46                        Sw_DimmerOnFunc@sw 0063  
                                _IOC_ISR 1D37                          ?_setTemp_Enable 0071  
                                _IOC_Set 19FA                     __size_of_setLog_Code 0048  
                                _INT_ISR 19BE                                  _INT_Set 18FE  
                   ?_CC2500_WriteCommand 0071                        _Flash_Memory_Main 114B  
                      _Flash_Memory_Read 1BD3                   __size_of_CC2500_RxData 0064  
                 __size_of_CC2500_TxData 0044                      ?_setRFSW_AdjControl 0071  
    setDimmerLights_TriggerERROR@command 0022                              setTxData@rf 0023  
                                _RF_Data 00A0                                  _RF_Main 18F5  
                     ?_Flash_Memory_Main 0071                       ?_Flash_Memory_Read 0071  
        __end_of_setControl_Lights_Table 0C1C                              ?_TouchPower 0071  
                        _Sw_DimmerOnFunc 1637                          _setPercentValue 1190  
                          setLog_Code@rf 002B                         ?_getPercentValue 0071  
                                _Dimmer1 00E2             __end_of_CC2500_FrequencyCabr 19D6  
                        __size_of_IO_Set 0019                      ??_Flash_Memory_Main 0027  
                    ??_Flash_Memory_Read 0020                                  _VarLED1 00DA  
                                _VarLED2 00DE                        __end_of_getRxData 12C0  
             __end_of_setPowerFault_Main 0723                 _CC2500_registers_address 1800  
                         RF_RxDisable@rf 0024                    ??_Temp_Initialization 0021  
              __size_of_MainT_ResetClock 0032          __end_of_setDimmerLights_Trigger 1A8B  
                                _Product 006E                     ??_setRFSW_AdjControl 0064  
                           _getTemp_Safe 191E                           ??_setTemp_Main 002D  
         __end_of_setDimmerLights_Switch 1A7B                                  ___ftadd 0F0A  
                         ??_setSw_Enable 0022                                  ___ftdiv 0CC4  
                        __size_of___wmul 001E                                  ___ftmul 0D6D  
                                ___fttol 095E                      __end_of_Switch_Main 194C  
                ??_Buzzer_Initialization 0020                 ??_setOverTemp_Exceptions 002B  
                             ??___awtoft 002B                               ??___ftpack 0025  
                        __size_of_setLED 005E                     setRFSW_AdjControl@sw 0066  
                ??_setDimmerLights_ERROR 0024                          __size_of_setBuz 0077  
                         ??_setSw_Status 0023                                  __ptext1 15CB  
                                __ptext2 1042                                  __ptext3 1B5C  
                                __ptext4 18E2                                  __ptext5 04FE  
                                __ptext6 10C5                                  __ptext7 194C  
                                __ptext8 18DF                                  __ptext9 19A7  
                ??_setDimmerLights_AdjRF 005F                  ??_setDimmerLights_AdjGo 0023  
              __size_of_CC2500_SIDLEMode 0004                      Sw_DimmerOnFunc@Idle 0062  
                           __size_of_ISR 0012                __end_of_Flash_Memory_Main 1190  
              __end_of_Flash_Memory_Read 1BEC                               _setRF_Main 0A6E  
                          _DelayOff_Main 1934                        _DimmerLights_Main 1991  
                      __end_of_setINT_GO 1966           __size_of_DlyOff_Initialization 000B  
                  ??_CC2500_WriteCommand 0022            __end_of_DlyOff_Initialization 1986  
                      ??_setRF_ReceiveGO 0074               __end_of_CC2500_ClearRXFIFO 18E9  
               ??_setTemp_Initialization 0020               __end_of_CC2500_ClearTXFIFO 18ED  
          DimmerLightsPointSelect@lights 0021                             ?_DlyOff_Main 0071  
                     ?_DimmerLights_Main 0071                           _LedPointSelect 1CF2  
                    _DelayOffPointSelect 1AF2                                  clrloop0 190B  
         __size_of_Switch_Initialization 000D            __end_of_Switch_Initialization 1A21  
                   end_of_initialization 004D                ??_DelayOff_Initialization 0023  
                      _CC2500_InitSetREG 1DA9                            _DelayTime_1us 1D5C  
                      __end_of_setTxData 07EC               __end_of_Flash_Memory_Write 1EB2  
                                init_ram 1904                       ?_CC2500_InitSetREG 0071  
                    ??_DimmerLights_Main 0067                     Flash_Memory_Read@ret 0023  
                                initloop 1905                               _setSw_Main 0393  
                  CC2500_ReadByte@loop_b 0021                        _CC2500_ReadStatus 1C1F  
                            ?_getPF_Safe 0071                     Flash_Memory_Modify@i 0026  
                  _setLED_Initialization 1ABB                            _CC2500_Enable 0380  
                       ?i1_RfPointSelect 0071                       ?_CC2500_ReadStatus 0071  
                       setRFSW_Status@sw 0023            __size_of_MainT_Initialization 0013  
               __size_of_CC2500_ReadByte 001D                            _CC2500_RxData 1432  
                          _CC2500_TxData 1107                      ??_CC2500_InitSetREG 0025  
                   __end_of_setRF_Enable 1DFD           ??_setPowerFault_Initialization 0020  
            ?_setDimmerLights_TriggerAdj 0022                __size_of_getPowerFault_AD 0041  
          __size_of_Flash_Memory_Erasing 000C                     ?_DelayOffPointSelect 0071  
                    _Flash_Memory_Modify 1496                  _DimmerLights_Exceptions 14FB  
                           __pstringtext 1800                      _Flash_Memory_Unlock 1954  
                    ??_CC2500_ReadStatus 0022                   setRF_Initialization@rf 0071  
       getDimmerLights_StatusFlag@Status 0021                  CC2500_InitSetREG@loop_c 0028  
                            ?_getTemp_AD 0071                      __size_of_TouchPower 0005  
               setLED_Initialization@led 0024                   setSw_Initialization@sw 0024  
              __end_of_DimmerLights_Main 199C                       _Mcu_Initialization 1B72  
               __size_of_CC2500_PowerRST 0030                           ?_DelayOff_Main 0071  
                       ?_RfSWPointSelect 0071                          _setSw_Main$4170 00EB  
                        _setSw_Main$4169 00EA                         __CFG_FOSC$INTOSC 0000  
                 __end_of_LedPointSelect 1D14                  __end_of_Sw_DimmerOnFunc 16A6  
                __end_of_setPercentValue 11D6                 __size_of_CC2500_WriteREG 0019  
              __end_of_CC2500_InitSetREG 1DD3                      ?_Mcu_Initialization 0071  
       __end_of_setPowerFault_Exceptions 1F83                     ?_Flash_Memory_Modify 0071  
            __size_of_setRF_DimmerLights 006B                           ?_DelayTime_1us 0020  
                    _setDimmerLights_Adj 1F83                     ?_Flash_Memory_Unlock 0071  
              __end_of_CC2500_ReadStatus 1C3A                            ?_RF_RxDisable 0071  
                            ___ftdiv@exp 003C                           __end_of_IO_Set 1C05  
                   _setRF_Initialization 1925                              _Switch_Main 1944  
                      __size_of_LED_Main 000C                           ?_CC2500_RxData 0071  
                         ?_CC2500_TxData 0071                  _DimmerLightsPointSelect 1ACC  
                            ___ftmul@exp 0038                    _CC2500_PowerOnInitial 1B06  
                   ??_Mcu_Initialization 0021                    ??_DelayOffPointSelect 0020  
                   ?_setDimmerLights_Adj 0062                __size_of_Sw_DimmerAdjFunc 0042  
                   setRF_DimmerLights@on 005D                           __end_of___wmul 1C91  
                           setRF_Main@rf 00EC                        __size_of_TMR0_ISR 0342  
        __size_of_setOverTemp_Exceptions 0042                        __size_of_TMR0_Set 000D  
          __size_of_setDimmerLights_Main 007B                           __end_of_setLED 13D1  
                         __end_of_setBuz 1800          _getDimmerLights_StatusFlag$1629 0022  
                   _CC2500_FrequencyCabr 19CA                __size_of_Sw_DimmerOffFunc 0071  
             __size_of_Flash_Memory_Main 0045               __size_of_Flash_Memory_Read 0019  
                            ?_setRF_Main 0071                          _setRFSW_Control 0AF9  
                    __size_of_getPF_Safe 0008                        ?_setDimmerReClock 0071  
                    start_initialization 0018                        _setRF_DimmerValue 1F14  
                        ?_LedPointSelect 0071               __end_of_DimmerLights_Close 1BA1  
                            __end_of_ISR 0016                    ??_Flash_Memory_Modify 0024  
     __size_of_PowerFault_Initialization 0003                       ??_setDimmerReClock 0071  
                     ?_setRF_DimmerValue 0071               __end_of_CC2500_InitPATable 1CB0  
        __size_of_setTemp_Initialization 000B                    ??_Flash_Memory_Unlock 0020  
                ??_Dimmer_Initialization 0020                     __end_of_setTemp_Main 061B  
                         ??_RF_RxDisable 0024                     __end_of_setSw_Enable 1C56  
                        RfPointSelect@rf 0021                             ?_Buzzer_Main 0071  
                               ??_IO_Set 0020                                _VarErrLED 00D6  
                            ?_setSw_Main 0071                      ??_setRF_DimmerValue 0061  
                    __size_of_getTemp_AD 006C                   ?_setLED_Initialization 0071  
                   __end_of_setSw_Status 1A5B                       Sw_DimmerAdjFunc@sw 0025  
                  ?_setRF_Initialization 0071                                _VarMemory 0220  
                __size_of_setRFSW_Status 000F                    __end_of_RfPointSelect 1991  
              __size_of_CC2500_WriteByte 0019                                _VarTimer0 00C3  
                              _Temp_Main 18E2                ??_DimmerLights_Exceptions 002A  
          setOverTemp_Exceptions@command 002C                         _MainT_ResetClock 1EE2  
                              _Rx_Length 00BD                  setRF_DimmerValue@lights 0063  
                  ??_setDimmerLights_Adj 0063                                 ??___wmul 0024  
                 __size_of_SwPointSelect 0014                                _Tx_Length 00BF  
                            __pdataBANK3 01A0                                 ??_setLED 0023  
                       ??_setTemp_Enable 0020                                 ?_ADC_Set 0071  
                               ??_setBuz 0028                          ??_DelayOff_Main 0065  
                      ??_CC2500_ReadByte 0020                         _CC2500_SIDLEMode 18ED  
             __size_of_DimmerLights_Main 000B                __end_of_setRF_DimmerValue 1F49  
                  ?_CC2500_FrequencyCabr 0071                         setINT_GO@command 0020  
                          ??_setLED_Main 0022                        __size_of___awtoft 0022  
                      __size_of___ftpack 0061                                 ?_IOC_ISR 0071  
                        _setRF_Main$3848 00ED                              __pbssCOMMON 0076  
                               ?_IOC_Set 0071                                ___latbits 0003  
                  setTemp_Enable@command 0020                                 ?_INT_ISR 0071  
                    setRF_Enable@command 0022                         ?_Sw_DimmerOnFunc 0071  
                          __pcstackBANK0 0020                            __pcstackBANK1 00EA  
                               ?_INT_Set 0071                         ?_setPercentValue 0071  
                        ??_DelayTime_1us 0022               __size_of_CC2500_InitSetREG 002A  
               __size_of_setDimmerLights 0089                            DlyOff_Main@sw 0064  
                      ??_CC2500_PowerRST 0026                                 ?_RF_Main 0071  
                           ??_TouchPower 0020                 __size_of_PowerFault_Main 0003  
                   __size_of_DlyOff_Main 0072               __size_of_CC2500_ReadStatus 001B  
                 _setOverTemp_Exceptions 10C5                            ??_setRF_Learn 0023  
                      ??_CC2500_WriteREG 0023                            _DimmerLights1 0120  
                          _DimmerLights2 012E                    CC2500_WriteREG@w_addr 0024  
                  setDelayOff_GO@command 0023                ??_DimmerLightsPointSelect 0020  
                  __size_of_setRF_Enable 002A                          ??_CC2500_RxData 0024  
                __size_of_setRF_RxStatus 000E                          ??_CC2500_TxData 0024  
                              __pnvBANK0 006D                                __pnvBANK1 00EE  
            __size_of_LED_Initialization 000C                   ?_CC2500_PowerOnInitial 0071  
                             ?_Temp_Main 0071                      __size_of_setRF_Main 008B  
                  DelayOffPointSelect@sw 0021                               setBuz@time 0026  
                    setDelayOff_GO@value 0024                 ?_setControl_Lights_Table 0071  
                 _setTemp_Initialization 19A7                         _getPowerFault_AD 1042  
      __size_of_setPowerFault_Exceptions 003A      __end_of_Flash_Memory_Initialization 0F0A  
            _Flash_Memory_Initialization 0E21                ?_setPowerFault_Exceptions 0071  
                              __ptext100 1B30                                __ptext101 1A7B  
                              __ptext110 18ED                                __ptext102 1A6B  
                              __ptext111 1EB2                                __ptext103 1ACC  
                              __ptext120 1BA1                                __ptext112 1DA9  
                              __ptext104 1789                                __ptext121 0C1C  
                              __ptext113 1C91                                __ptext105 1C73  
                              __ptext122 1970                                __ptext114 1BBA  
                              __ptext106 192C                                __ptext115 19CA  
                              __ptext107 197B                                __ptext124 0051  
                              __ptext116 1D5C                                __ptext108 1AF2  
                              __ptext125 1D37                                __ptext117 18E9  
                              __ptext109 1B06                                 ?___ftadd 003E  
                              __ptext126 1C05                                __ptext118 18E5  
                              __ptext127 19BE                                __ptext119 1A5B  
                              __ptext128 19B2                                __ptext129 1966  
                              _getRxData 126E                                 ?___ftdiv 002E  
                               ?___ftmul 002E                                 ?___fttol 004B  
                __end_of_setRFSW_Control 0B89                          _setRF_ReceiveGO 19B2  
          __size_of_setSw_Initialization 0008           __size_of_Buzzer_Initialization 000B  
          __end_of_Buzzer_Initialization 197B                         getPercentValue@i 005C  
                       setPercentValue@i 005A                            ??_setLog_Code 002A  
                     __end_of_TouchPower 18FE                       _setPowerFault_Main 061B  
     setDimmerLights_TriggerERROR@lights 0023           __size_of_setDimmerLights_ERROR 0050  
               ?_setDimmerLights_Trigger 0022                          DelayTimejudge@i 0021  
                    __size_of_setSw_Main 016B            __end_of_setDimmerLights_ERROR 126E  
           CC2500_ReadStatus@status_addr 0023           __size_of_setDimmerLights_AdjRF 0023  
         __size_of_setDimmerLights_AdjGo 0010            __end_of_setDimmerLights_AdjRF 1D37  
          __end_of_setDimmerLights_AdjGo 1AAB                   CC2500_WriteByte@loop_a 0021  
                         __size_of_MainT 0079                                _r_address 00C0  
           __end_of_CC2500_patable_vaule 1866                      ?_setPowerFault_Main 0071  
                         __size_of_getAD 0016                             _setRF_Enable 1DD3  
                __size_of_DelayTimejudge 002E                            _SwPointSelect 07EC  
                     Sw_DimmerOffFunc@sw 0064                                _setINT_GO 195D  
                    __end_of_setLED_Main 2000                        MainT_ResetClock@i 0021  
                 ??_setRF_Initialization 0020              __end_of_Temp_Initialization 18E2  
                      _CC2500_rfSettings 182F                           ___wmul@product 0024  
                               _LED_Main 19EE                             ??_getPF_Safe 0020  
                        SwPointSelect@sw 0021                                clear_ram0 190A  
               CC2500_InitPATable@loop_d 0027                                _setTxData 0723  
    __end_of_DimmerLights_Initialization 1B30              _DimmerLights_Initialization 1B1B  
                     _CC2500_ClearRXFIFO 18E5                       _CC2500_ClearTXFIFO 18E9  
         setDimmerLights_Trigger@command 0022                 setRF_DimmerLights@lights 0061  
                               _GO_nDONE 04E9                      __end_of_setRF_Learn 1A3D  
                   ??_setPowerFault_Main 002D                 __size_of_getPercentValue 005B  
               setRF_DimmerLights@status 0060                   setRF_ReceiveGO@command 0073  
            __size_of_setRFSW_AdjControl 0040                       _Flash_Memory_Write 1E83  
                             ?_getRxData 0071                                 _TMR0_ISR 0051  
                 CC2500_InitSetREG@temp1 0026                   CC2500_InitSetREG@temp2 0027  
                      setRF_ReceiveGO@rf 0074                                 _TMR0_Set 1A07  
                       _Sw_DimmerAdjFunc 1083                      ?_CC2500_ClearRXFIFO 0071  
                    ?_CC2500_ClearTXFIFO 0071        setDimmerLights_TriggerAdj@command 0022  
                               _RF_Count 00B5                     __end_of_RF_RxDisable 1DA9  
                           ??_getTemp_AD 0024              __end_of_CC2500_WriteCommand 1A6B  
                 ??_CC2500_FrequencyCabr 0026                  DlyOff_Initialization@sw 0022  
                       __size_of_ADC_Set 0007                        ___wmul@multiplier 0020  
             __size_of_setRF_DimmerValue 0035                      ?_Flash_Memory_Write 0071  
                       _Sw_DimmerOffFunc 16A6                    __size_of_setTemp_Main 011D  
           __end_of_MainT_Initialization 1AF2                  __size_of_setDelayOff_GO 0058  
                  __size_of_setSw_Enable 001C                                 _DelayOff 0069  
                           setSw_Main@sw 00EC                       __end_of_getPF_Safe 1954  
                       __size_of_IOC_ISR 0025                         __size_of_IOC_Set 000D  
           __end_of_Flash_Memory_Erasing 19E2                           ?_SwPointSelect 0071  
                            getAD@adcon0 0023                              getAD@adcon1 0020  
                       __size_of_INT_ISR 000C                           setLED_Main@led 0024  
                       __size_of_INT_Set 0006                      __end_of_setLog_Code 121E  
                  _DlyOff_Initialization 197B                    __size_of_setSw_Status 000F  
                             ?_setINT_GO 0071                     ??_CC2500_ClearRXFIFO 0024  
                   ??_CC2500_ClearTXFIFO 0024                __end_of_CC2500_rfSettings 185E  
                       __size_of_RF_Main 0004                    _Switch_Initialization 1A14  
                   ??_Flash_Memory_Write 0020                        ??_setDimmerLights 0025  
                         _setRFSW_Status 1A3D                     __size_of_Buzzer_Main 00A8  
                     __end_of_getTemp_AD 1637                               ?_setTxData 0071  
                           ?_Switch_Main 0071                         _CC2500_WriteByte 1BA1  
                               _VarTMain 01C0             Flash_Memory_Initialization@i 005E  
                __end_of_setRF_ReceiveGO 19BE                              ??_Temp_Main 0030  
                      ??_PowerFault_Main 002F                        setRFSW_Control@sw 0063  
                              setLED@led 0023                                 _RxStatus 0383  
   __end_of_setDimmerLights_TriggerERROR 1E28    __size_of_setDimmerLights_TriggerERROR 002B  
           _setDimmerLights_TriggerERROR 1DFD                                 _TxStatus 0386  
                           _setTemp_Main 04FE                         __size_of___ftadd 00F6  
                       ?_setRFSW_Control 0071                         __size_of___ftdiv 00A9  
                           _setSw_Enable 1C3A                         __size_of___ftmul 00B4  
                       __size_of___fttol 0087                 __size_ofi1_RfPointSelect 000A  
                               ___awtoft 1CD0                         ??_LedPointSelect 0020  
                               ___ftpack 13D1                             _setSw_Status 1A4C  
                      getTemp_AD@channel 0028                             ??_setRF_Main 00EB  
                   CC2500_WriteREG@value 0022                              _setLED_Main 1FC0  
                  setRFSW_Status@command 0022               __end_of_setRF_DimmerLights 15CB  
               ?_DelayOff_Initialization 0071                 __end_of_MainT_ResetClock 1F14  
                       setDelayOff_GO@sw 0027                                 __ptext10 1944  
                               __ptext11 0393                                 __ptext20 18F9  
                               __ptext12 1A2F                                 __ptext21 18F5  
                               __ptext13 1637                                 __ptext30 1F14  
                               __ptext22 0A6E                                 __ptext14 16A6  
                               __ptext31 1D14                                 __ptext23 126E  
                               __ptext15 1083                                 __ptext40 1C56  
                               __ptext32 1318                                 __ptext24 11D6  
                               __ptext16 1AAB                                 __ptext41 18F1  
                               __ptext33 0D6D                                 __ptext25 0B89  
                               __ptext17 1A9B                                 __ptext50 18D9  
                               __ptext42 1925                                 __ptext34 0F0A  
                               __ptext26 0AF9                                 __ptext18 1A14  
                               __ptext51 1A8B                                 __ptext43 18DC  
                               __ptext35 1D82                                 __ptext27 12C0  
                               __ptext19 193C                                 __ptext60 086A  
                               __ptext52 1B72                                 __ptext44 061B  
                               __ptext36 1107                                 __ptext28 1E55  
                               __ptext61 199C                                 __ptext53 1A07  
                               __ptext45 1F49                                 __ptext37 1432  
                               __ptext29 1002                                 __ptext70 1496  
                               __ptext62 1C3A                                 __ptext54 1BEC  
                               __ptext46 14FB                                 __ptext38 1A21  
                               __ptext71 19D6                                 __ptext63 1DD3  
                               __ptext55 19FA                                 __ptext47 1DFD  
                               __ptext39 1C1F                                 __ptext80 1373  
                               __ptext72 0E21                                 __ptext64 195D  
                               __ptext56 18FE                                 __ptext48 121E  
                               __ptext81 1CF2                                 __ptext73 1E83  
                               __ptext65 19EE                                 __ptext57 1917  
                               __ptext49 191E                                 __ptext90 1986  
                               __ptext82 1B89                                 __ptext74 1954  
                               __ptext66 1FC0                                 __ptext58 1EE2  
                               __ptext91 1A4C                                 __ptext83 1B46  
                               __ptext75 1BD3                                 __ptext67 19E2  
                               __ptext59 1ADF                                 __ptext92 07EC  
                               __ptext84 1B1B                                 __ptext76 1991  
                               __ptext68 1ABB                                 __ptext93 1560  
                               __ptext85 1E28                                 __ptext77 08E3  
                               __ptext69 114B                                 __ptext94 1190  
                               __ptext86 1910                                 __ptext78 1F83  
                               __ptext95 095E                                 __ptext87 1934  
                               __ptext79 09E5                                 __ptext96 0CC4  
                               __ptext88 1717                                 __ptext97 1CD0  
                               __ptext89 0723                                 __ptext98 13D1  
                               __ptext99 1A3D                  ??_setLED_Initialization 0024  
               __size_of_RfSWPointSelect 0016           __size_of_Dimmer_Initialization 0007  
                 __end_of_setRFSW_Status 1A4C            __end_of_Dimmer_Initialization 1917  
           __end_of_setDimmerLights_Main 095E              setDimmerLights_ERROR@lights 0025  
                           ??_setSw_Main 0065                            setLED@command 0022  
                          __size_of_main 0068                              _setRF_Learn 1A2F  
               __end_of_CC2500_SIDLEMode 18F1                           _setRF_RxStatus 1A21  
             setDimmerLights_Main@lights 0066              __end_of_DelayOffPointSelect 1B06  
             CC2500_WriteCommand@command 0023                       _DimmerLights_Close 1B89  
               ??_setDimmerLights_Switch 0023                __size_of_setDimmerReClock 001A  
                        _CC2500_ReadByte 1C56                       _CC2500_InitPATable 1C91  
    __size_of_getDimmerLights_StatusFlag 0016            setDimmerLights_Trigger@lights 0023  
                     __end_of_setRF_Main 0AF9              __size_of_Mcu_Initialization 0017  
                   _CC2500_patable_vaule 185E                              ??_getRxData 0068  
                    ?_DimmerLights_Close 0071         setDimmerLights_TriggerAdj@lights 0023  
          ?_setDimmerLights_TriggerERROR 0022                      ?_CC2500_InitPATable 0071  
                        _CC2500_PowerRST 1EB2              __end_of_Flash_Memory_Modify 14FB  
                      ??_getPercentValue 0059                              _setLog_Code 11D6  
                  setRF_RxStatus@command 0022              __end_of_Flash_Memory_Unlock 195D  
                        ??_SwPointSelect 0020                          _CC2500_WriteREG 1BBA  
                     __end_of_setSw_Main 04FE                            _Transceive_GO 0384  
                          _Transceive_OK 0385                   ?_DlyOff_Initialization 0071  
                ?_setOverTemp_Exceptions 0071                           _DelayTimejudge 1E55  
                            pic14e$flags 007E                 __end_of_getPowerFault_AD 1083  
                   ??_DimmerLights_Close 0023                              ??_setINT_GO 0020  
                               intlevel1 0000                     ??_CC2500_InitPATable 0025  
                 ?_Switch_Initialization 0071                   __end_of_setRF_RxStatus 1A2F  
                        ?_setRFSW_Status 0022                  ??_CC2500_PowerOnInitial 0029  
 __end_of_setDimmerLights_Initialization 1E55  __size_of_setDimmerLights_Initialization 002D  
         _setDimmerLights_Initialization 1E28              __end_of_setDimmerLights_Adj 1FC0  
                ?_setTemp_Initialization 0071                              ??_setTxData 0022  
                       ?_setRF_ReceiveGO 0073                   CC2500_InitPATable@temp 0026  
                   _MainT_Initialization 1ADF                    __size_of_RF_RxDisable 0027  
                      _RF_Initialization 18F1                            ?_getTemp_Safe 0071  
                   _Flash_Memory_Erasing 19D6                       ?_RF_Initialization 0071  
                             _SPI0Buffer 00BE          __end_of_DelayOff_Initialization 1934  
                             _OPTION_REG 0095                    __end_of_DelayOff_Main 193C  
                    ??_RF_Initialization 0021                              getRxData@rf 00EA  
                         _setDelayOff_GO 12C0         __size_of_setControl_Lights_Table 0093  
                 __end_of_DelayTimejudge 1E83           __end_of_setOverTemp_Exceptions 1107  
                 __size_of_RfPointSelect 000B                        ??i1_RfPointSelect 0071  
   __size_of_Flash_Memory_Initialization 00E9                            ??_DlyOff_Main 0062  
                  __end_of_DelayTime_1us 1D82                 __end_of_Sw_DimmerAdjFunc 10C5  
                __end_of_CC2500_ReadByte 1C73             __end_of_setSw_Initialization 1944  
                        ?_setRF_RxStatus 0022                     getPercentValue@value 005B  
                           _RF_RxDisable 1D82               ?_PowerFault_Initialization 0071  
             __end_of_LED_Initialization 19EE         __size_of_setDimmerLights_Trigger 0010  
         __end_of_setTemp_Initialization 19B2                 __size_of_Sw_DimmerOnFunc 006F  
               ?_DimmerLights_Exceptions 0071                 __size_of_setPercentValue 0046  
                   setPercentValue@value 0059                __end_of_RF_Initialization 18F5  
               __end_of_Sw_DimmerOffFunc 1717          __size_of_setDimmerLights_Switch 0010  
                      ??_RfSWPointSelect 0020                    ?_MainT_Initialization 0071  
                       setRF_RxStatus@rf 0023                    __end_of_CC2500_RxData 1496  
                  __end_of_CC2500_TxData 114B                           ??_getTemp_Safe 0020  
                    setSw_Status@command 0022                  __end_of_CC2500_PowerRST 1EE2  
