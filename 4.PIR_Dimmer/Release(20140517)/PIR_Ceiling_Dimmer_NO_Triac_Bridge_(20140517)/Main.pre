
# 1 "D:\PIR_Ceiling_Dimmer_NO_Triac_Bridge_(20140517)\Release\Main.c"

# 128 "D:\PIR_Ceiling_Dimmer_NO_Triac_Bridge_(20140517)\Release\../Release/Main.h"
struct TMain
{
unsigned PowerON:1;
unsigned T0_Timerout:1;
unsigned T1_Timerout:1;
unsigned int Count;
unsigned int Count1;
unsigned int Count2;
unsigned int Count3;
}
struct TMain VarTMain;
struct TMain *TMain;

# 12 "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\include\stdio.h"
typedef int ptrdiff_t;
typedef unsigned size_t;
typedef unsigned short wchar_t;

# 31 "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\include\stdarg.h"
typedef void * va_list[1];

#pragma inline(__va_start)
extern void * __va_start(void);

#pragma inline(__va_arg)
extern void * __va_arg(void *, ...);

# 27 "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\include\stdio.h"
extern int errno;

# 58
struct __prbuf
{
char * ptr;
void (* func)(char);
};

# 17 "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\include\conio.h"
extern int errno;


extern void init_uart(void);

extern char getch(void);
extern char getche(void);
extern void putch(char);
extern void ungetch(char);

extern bit kbhit(void);

# 31
extern char * cgets(char *);
extern void cputs(const char *);

# 103 "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\include\stdio.h"
extern int cprintf(char *, ...);
#pragma printf_check(cprintf)



extern int _doprnt(struct __prbuf *, const register char *, register va_list);

# 195
extern char * gets(char *);
extern int puts(const char *);
extern int scanf(const char *, ...);
extern int sscanf(const char *, const char *, ...);
extern int vprintf(const char *, va_list);
extern int vsprintf(char *, const char *, va_list);
extern int vscanf(const char *, va_list ap);
extern int vsscanf(const char *, const char *, va_list);

#pragma printf_check(printf) const
#pragma printf_check(sprintf) const
extern int sprintf(char *, const char *, ...);
extern int printf(const char *, ...);

# 101 "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\include\pic16f723a.h"
volatile unsigned char INDF @ 0x000;



volatile unsigned char TMR0 @ 0x001;



volatile unsigned char PCL @ 0x002;



volatile unsigned char STATUS @ 0x003;

volatile bit CARRY @ ((unsigned)&STATUS*8)+0;
volatile bit DC @ ((unsigned)&STATUS*8)+1;
volatile bit ZERO @ ((unsigned)&STATUS*8)+2;
volatile bit nPD @ ((unsigned)&STATUS*8)+3;
volatile bit nTO @ ((unsigned)&STATUS*8)+4;
volatile bit IRP @ ((unsigned)&STATUS*8)+7;
volatile bit RP0 @ ((unsigned)&STATUS*8)+5;
volatile bit RP1 @ ((unsigned)&STATUS*8)+6;

volatile union {
struct {
unsigned C : 1;
unsigned DC : 1;
unsigned Z : 1;
unsigned nPD : 1;
unsigned nTO : 1;
unsigned RP : 2;
unsigned IRP : 1;
};
struct {
unsigned : 5;
unsigned RP0 : 1;
unsigned RP1 : 1;
};
} STATUSbits @ 0x003;



volatile unsigned char FSR @ 0x004;



volatile unsigned char PORTA @ 0x005;

volatile bit RA0 @ ((unsigned)&PORTA*8)+0;
volatile bit RA1 @ ((unsigned)&PORTA*8)+1;
volatile bit RA2 @ ((unsigned)&PORTA*8)+2;
volatile bit RA3 @ ((unsigned)&PORTA*8)+3;
volatile bit RA4 @ ((unsigned)&PORTA*8)+4;
volatile bit RA5 @ ((unsigned)&PORTA*8)+5;
volatile bit RA6 @ ((unsigned)&PORTA*8)+6;
volatile bit RA7 @ ((unsigned)&PORTA*8)+7;

volatile union {
struct {
unsigned RA0 : 1;
unsigned RA1 : 1;
unsigned RA2 : 1;
unsigned RA3 : 1;
unsigned RA4 : 1;
unsigned RA5 : 1;
unsigned RA6 : 1;
unsigned RA7 : 1;
};
} PORTAbits @ 0x005;



volatile unsigned char PORTB @ 0x006;

volatile bit RB0 @ ((unsigned)&PORTB*8)+0;
volatile bit RB1 @ ((unsigned)&PORTB*8)+1;
volatile bit RB2 @ ((unsigned)&PORTB*8)+2;
volatile bit RB3 @ ((unsigned)&PORTB*8)+3;
volatile bit RB4 @ ((unsigned)&PORTB*8)+4;
volatile bit RB5 @ ((unsigned)&PORTB*8)+5;
volatile bit RB6 @ ((unsigned)&PORTB*8)+6;
volatile bit RB7 @ ((unsigned)&PORTB*8)+7;

volatile union {
struct {
unsigned RB0 : 1;
unsigned RB1 : 1;
unsigned RB2 : 1;
unsigned RB3 : 1;
unsigned RB4 : 1;
unsigned RB5 : 1;
unsigned RB6 : 1;
unsigned RB7 : 1;
};
} PORTBbits @ 0x006;



volatile unsigned char PORTC @ 0x007;

volatile bit RC0 @ ((unsigned)&PORTC*8)+0;
volatile bit RC1 @ ((unsigned)&PORTC*8)+1;
volatile bit RC2 @ ((unsigned)&PORTC*8)+2;
volatile bit RC3 @ ((unsigned)&PORTC*8)+3;
volatile bit RC4 @ ((unsigned)&PORTC*8)+4;
volatile bit RC5 @ ((unsigned)&PORTC*8)+5;
volatile bit RC6 @ ((unsigned)&PORTC*8)+6;
volatile bit RC7 @ ((unsigned)&PORTC*8)+7;

volatile union {
struct {
unsigned RC0 : 1;
unsigned RC1 : 1;
unsigned RC2 : 1;
unsigned RC3 : 1;
unsigned RC4 : 1;
unsigned RC5 : 1;
unsigned RC6 : 1;
unsigned RC7 : 1;
};
} PORTCbits @ 0x007;



volatile unsigned char PORTE @ 0x009;

volatile bit RE3 @ ((unsigned)&PORTE*8)+3;

volatile union {
struct {
unsigned : 3;
unsigned RE3 : 1;
};
} PORTEbits @ 0x009;



volatile unsigned char PCLATH @ 0x00A;


volatile union {
struct {
unsigned : 5;
};
} PCLATHbits @ 0x00A;



volatile unsigned char INTCON @ 0x00B;

volatile bit RBIF @ ((unsigned)&INTCON*8)+0;
volatile bit INTF @ ((unsigned)&INTCON*8)+1;
volatile bit T0IF @ ((unsigned)&INTCON*8)+2;
volatile bit RBIE @ ((unsigned)&INTCON*8)+3;
volatile bit INTE @ ((unsigned)&INTCON*8)+4;
volatile bit T0IE @ ((unsigned)&INTCON*8)+5;
volatile bit PEIE @ ((unsigned)&INTCON*8)+6;
volatile bit GIE @ ((unsigned)&INTCON*8)+7;
volatile bit IOCIF @ ((unsigned)&INTCON*8)+0;
volatile bit TMR0IF @ ((unsigned)&INTCON*8)+2;
volatile bit IOCIE @ ((unsigned)&INTCON*8)+3;
volatile bit TMR0IE @ ((unsigned)&INTCON*8)+5;

volatile union {
struct {
unsigned RBIF : 1;
unsigned INTF : 1;
unsigned T0IF : 1;
unsigned RBIE : 1;
unsigned INTE : 1;
unsigned T0IE : 1;
unsigned PEIE : 1;
unsigned GIE : 1;
};
struct {
unsigned IOCIF : 1;
unsigned : 1;
unsigned TMR0IF : 1;
unsigned IOCIE : 1;
unsigned : 1;
unsigned TMR0IE : 1;
};
} INTCONbits @ 0x00B;



volatile unsigned char PIR1 @ 0x00C;

volatile bit TMR1IF @ ((unsigned)&PIR1*8)+0;
volatile bit TMR2IF @ ((unsigned)&PIR1*8)+1;
volatile bit CCP1IF @ ((unsigned)&PIR1*8)+2;
volatile bit SSPIF @ ((unsigned)&PIR1*8)+3;
volatile bit TXIF @ ((unsigned)&PIR1*8)+4;
volatile bit RCIF @ ((unsigned)&PIR1*8)+5;
volatile bit ADIF @ ((unsigned)&PIR1*8)+6;
volatile bit TMR1GIF @ ((unsigned)&PIR1*8)+7;

volatile union {
struct {
unsigned TMR1IF : 1;
unsigned TMR2IF : 1;
unsigned CCP1IF : 1;
unsigned SSPIF : 1;
unsigned TXIF : 1;
unsigned RCIF : 1;
unsigned ADIF : 1;
unsigned TMR1GIF : 1;
};
} PIR1bits @ 0x00C;



volatile unsigned char PIR2 @ 0x00D;

volatile bit CCP2IF @ ((unsigned)&PIR2*8)+0;

volatile union {
struct {
unsigned CCP2IF : 1;
};
} PIR2bits @ 0x00D;




volatile unsigned char TMR1L @ 0x00E;



volatile unsigned char TMR1H @ 0x00F;



volatile unsigned int TMR1 @ 0x00E;


volatile unsigned char T1CON @ 0x010;

volatile bit TMR1ON @ ((unsigned)&T1CON*8)+0;
volatile bit T1SYNC @ ((unsigned)&T1CON*8)+2;
volatile bit T1OSCEN @ ((unsigned)&T1CON*8)+3;
volatile bit nT1SYNC @ ((unsigned)&T1CON*8)+2;
volatile bit T1CKPS0 @ ((unsigned)&T1CON*8)+4;
volatile bit T1CKPS1 @ ((unsigned)&T1CON*8)+5;
volatile bit TMR1CS0 @ ((unsigned)&T1CON*8)+6;
volatile bit TMR1CS1 @ ((unsigned)&T1CON*8)+7;
volatile bit T1INSYNC @ ((unsigned)&T1CON*8)+2;

volatile union {
struct {
unsigned TMR1ON : 1;
unsigned : 1;
unsigned T1SYNC : 1;
unsigned T1OSCEN : 1;
unsigned T1CKPS : 2;
unsigned TMR1CS : 2;
};
struct {
unsigned : 2;
unsigned nT1SYNC : 1;
unsigned : 1;
unsigned T1CKPS0 : 1;
unsigned T1CKPS1 : 1;
unsigned TMR1CS0 : 1;
unsigned TMR1CS1 : 1;
};
struct {
unsigned : 2;
unsigned T1INSYNC : 1;
};
} T1CONbits @ 0x010;



volatile unsigned char TMR2 @ 0x011;



volatile unsigned char T2CON @ 0x012;

volatile bit TMR2ON @ ((unsigned)&T2CON*8)+2;
volatile bit T2CKPS0 @ ((unsigned)&T2CON*8)+0;
volatile bit T2CKPS1 @ ((unsigned)&T2CON*8)+1;
volatile bit TOUTPS0 @ ((unsigned)&T2CON*8)+3;
volatile bit TOUTPS1 @ ((unsigned)&T2CON*8)+4;
volatile bit TOUTPS2 @ ((unsigned)&T2CON*8)+5;
volatile bit TOUTPS3 @ ((unsigned)&T2CON*8)+6;

volatile union {
struct {
unsigned T2CKPS : 2;
unsigned TMR2ON : 1;
unsigned TOUTPS : 4;
};
struct {
unsigned T2CKPS0 : 1;
unsigned T2CKPS1 : 1;
unsigned : 1;
unsigned TOUTPS0 : 1;
unsigned TOUTPS1 : 1;
unsigned TOUTPS2 : 1;
unsigned TOUTPS3 : 1;
};
} T2CONbits @ 0x012;



volatile unsigned char SSPBUF @ 0x013;



volatile unsigned char SSPCON @ 0x014;

volatile bit CKP @ ((unsigned)&SSPCON*8)+4;
volatile bit SSPEN @ ((unsigned)&SSPCON*8)+5;
volatile bit SSPOV @ ((unsigned)&SSPCON*8)+6;
volatile bit WCOL @ ((unsigned)&SSPCON*8)+7;
volatile bit SSPM0 @ ((unsigned)&SSPCON*8)+0;
volatile bit SSPM1 @ ((unsigned)&SSPCON*8)+1;
volatile bit SSPM2 @ ((unsigned)&SSPCON*8)+2;
volatile bit SSPM3 @ ((unsigned)&SSPCON*8)+3;

volatile union {
struct {
unsigned SSPM : 4;
unsigned CKP : 1;
unsigned SSPEN : 1;
unsigned SSPOV : 1;
unsigned WCOL : 1;
};
struct {
unsigned SSPM0 : 1;
unsigned SSPM1 : 1;
unsigned SSPM2 : 1;
unsigned SSPM3 : 1;
};
} SSPCONbits @ 0x014;




volatile unsigned char CCPR1L @ 0x015;



volatile unsigned char CCPR1H @ 0x016;



volatile unsigned int CCPR1 @ 0x015;


volatile unsigned char CCP1CON @ 0x017;

volatile bit CCP1M0 @ ((unsigned)&CCP1CON*8)+0;
volatile bit CCP1M1 @ ((unsigned)&CCP1CON*8)+1;
volatile bit CCP1M2 @ ((unsigned)&CCP1CON*8)+2;
volatile bit CCP1M3 @ ((unsigned)&CCP1CON*8)+3;
volatile bit DC1B0 @ ((unsigned)&CCP1CON*8)+4;
volatile bit DC1B1 @ ((unsigned)&CCP1CON*8)+5;
volatile bit CCP1Y @ ((unsigned)&CCP1CON*8)+4;
volatile bit CCP1X @ ((unsigned)&CCP1CON*8)+5;

volatile union {
struct {
unsigned CCP1M : 4;
unsigned DC1B : 2;
unsigned : 2;
};
struct {
unsigned CCP1M0 : 1;
unsigned CCP1M1 : 1;
unsigned CCP1M2 : 1;
unsigned CCP1M3 : 1;
unsigned DC1B0 : 1;
unsigned DC1B1 : 1;
};
struct {
unsigned : 4;
unsigned CCP1Y : 1;
unsigned CCP1X : 1;
};
} CCP1CONbits @ 0x017;



volatile unsigned char RCSTA @ 0x018;

volatile bit RX9D @ ((unsigned)&RCSTA*8)+0;
volatile bit OERR @ ((unsigned)&RCSTA*8)+1;
volatile bit FERR @ ((unsigned)&RCSTA*8)+2;
volatile bit ADDEN @ ((unsigned)&RCSTA*8)+3;
volatile bit CREN @ ((unsigned)&RCSTA*8)+4;
volatile bit SREN @ ((unsigned)&RCSTA*8)+5;
volatile bit RX9 @ ((unsigned)&RCSTA*8)+6;
volatile bit SPEN @ ((unsigned)&RCSTA*8)+7;
volatile bit RCD8 @ ((unsigned)&RCSTA*8)+0;
volatile bit RC9 @ ((unsigned)&RCSTA*8)+6;
volatile bit nRC8 @ ((unsigned)&RCSTA*8)+6;
volatile bit RC8_9 @ ((unsigned)&RCSTA*8)+6;

volatile union {
struct {
unsigned RX9D : 1;
unsigned OERR : 1;
unsigned FERR : 1;
unsigned ADDEN : 1;
unsigned CREN : 1;
unsigned SREN : 1;
unsigned RX9 : 1;
unsigned SPEN : 1;
};
struct {
unsigned RCD8 : 1;
unsigned : 5;
unsigned RC9 : 1;
};
struct {
unsigned : 6;
unsigned nRC8 : 1;
};
struct {
unsigned : 6;
unsigned RC8_9 : 1;
};
} RCSTAbits @ 0x018;



volatile unsigned char TXREG @ 0x019;



volatile unsigned char RCREG @ 0x01A;




volatile unsigned char CCPR2L @ 0x01B;



volatile unsigned char CCPR2H @ 0x01C;



volatile unsigned int CCPR2 @ 0x01B;


volatile unsigned char CCP2CON @ 0x01D;

volatile bit CCP2M0 @ ((unsigned)&CCP2CON*8)+0;
volatile bit CCP2M1 @ ((unsigned)&CCP2CON*8)+1;
volatile bit CCP2M2 @ ((unsigned)&CCP2CON*8)+2;
volatile bit CCP2M3 @ ((unsigned)&CCP2CON*8)+3;
volatile bit DC2B0 @ ((unsigned)&CCP2CON*8)+4;
volatile bit DC2B1 @ ((unsigned)&CCP2CON*8)+5;
volatile bit CCP2Y @ ((unsigned)&CCP2CON*8)+4;
volatile bit CCP2X @ ((unsigned)&CCP2CON*8)+5;

volatile union {
struct {
unsigned CCP2M : 4;
unsigned DC2B : 2;
};
struct {
unsigned CCP2M0 : 1;
unsigned CCP2M1 : 1;
unsigned CCP2M2 : 1;
unsigned CCP2M3 : 1;
unsigned DC2B0 : 1;
unsigned DC2B1 : 1;
};
struct {
unsigned : 4;
unsigned CCP2Y : 1;
unsigned CCP2X : 1;
};
} CCP2CONbits @ 0x01D;



volatile unsigned char ADRES @ 0x01E;



volatile unsigned char ADCON0 @ 0x01F;

volatile bit ADON @ ((unsigned)&ADCON0*8)+0;
volatile bit GO_nDONE @ ((unsigned)&ADCON0*8)+1;
volatile bit GO @ ((unsigned)&ADCON0*8)+1;
volatile bit CHS0 @ ((unsigned)&ADCON0*8)+2;
volatile bit CHS1 @ ((unsigned)&ADCON0*8)+3;
volatile bit CHS2 @ ((unsigned)&ADCON0*8)+4;
volatile bit CHS3 @ ((unsigned)&ADCON0*8)+5;
volatile bit nDONE @ ((unsigned)&ADCON0*8)+1;
volatile bit GO_DONE @ ((unsigned)&ADCON0*8)+1;

volatile union {
struct {
unsigned ADON : 1;
unsigned GO_nDONE : 1;
unsigned CHS : 4;
};
struct {
unsigned : 1;
unsigned : 1;
unsigned : 4;
};
struct {
unsigned : 1;
unsigned GO : 1;
unsigned CHS0 : 1;
unsigned CHS1 : 1;
unsigned CHS2 : 1;
unsigned CHS3 : 1;
};
struct {
unsigned : 1;
unsigned nDONE : 1;
};
struct {
unsigned : 1;
unsigned GO_DONE : 1;
};
} ADCON0bits @ 0x01F;

# 635
volatile unsigned char OPTION_REG @ 0x081;

volatile bit PSA @ ((unsigned)&OPTION_REG*8)+3;
volatile bit T0SE @ ((unsigned)&OPTION_REG*8)+4;
volatile bit T0CS @ ((unsigned)&OPTION_REG*8)+5;
volatile bit INTEDG @ ((unsigned)&OPTION_REG*8)+6;
volatile bit nRBPU @ ((unsigned)&OPTION_REG*8)+7;
volatile bit PS0 @ ((unsigned)&OPTION_REG*8)+0;
volatile bit PS1 @ ((unsigned)&OPTION_REG*8)+1;
volatile bit PS2 @ ((unsigned)&OPTION_REG*8)+2;

volatile union {
struct {
unsigned PS : 3;
unsigned PSA : 1;
unsigned T0SE : 1;
unsigned T0CS : 1;
unsigned INTEDG : 1;
unsigned nRBPU : 1;
};
struct {
unsigned PS0 : 1;
unsigned PS1 : 1;
unsigned PS2 : 1;
};
} OPTION_REGbits @ 0x081;



volatile unsigned char TRISA @ 0x085;

volatile bit TRISA0 @ ((unsigned)&TRISA*8)+0;
volatile bit TRISA1 @ ((unsigned)&TRISA*8)+1;
volatile bit TRISA2 @ ((unsigned)&TRISA*8)+2;
volatile bit TRISA3 @ ((unsigned)&TRISA*8)+3;
volatile bit TRISA4 @ ((unsigned)&TRISA*8)+4;
volatile bit TRISA5 @ ((unsigned)&TRISA*8)+5;
volatile bit TRISA6 @ ((unsigned)&TRISA*8)+6;
volatile bit TRISA7 @ ((unsigned)&TRISA*8)+7;

volatile union {
struct {
unsigned TRISA0 : 1;
unsigned TRISA1 : 1;
unsigned TRISA2 : 1;
unsigned TRISA3 : 1;
unsigned TRISA4 : 1;
unsigned TRISA5 : 1;
unsigned TRISA6 : 1;
unsigned TRISA7 : 1;
};
} TRISAbits @ 0x085;



volatile unsigned char TRISB @ 0x086;

volatile bit TRISB0 @ ((unsigned)&TRISB*8)+0;
volatile bit TRISB1 @ ((unsigned)&TRISB*8)+1;
volatile bit TRISB2 @ ((unsigned)&TRISB*8)+2;
volatile bit TRISB3 @ ((unsigned)&TRISB*8)+3;
volatile bit TRISB4 @ ((unsigned)&TRISB*8)+4;
volatile bit TRISB5 @ ((unsigned)&TRISB*8)+5;
volatile bit TRISB6 @ ((unsigned)&TRISB*8)+6;
volatile bit TRISB7 @ ((unsigned)&TRISB*8)+7;

volatile union {
struct {
unsigned TRISB0 : 1;
unsigned TRISB1 : 1;
unsigned TRISB2 : 1;
unsigned TRISB3 : 1;
unsigned TRISB4 : 1;
unsigned TRISB5 : 1;
unsigned TRISB6 : 1;
unsigned TRISB7 : 1;
};
} TRISBbits @ 0x086;



volatile unsigned char TRISC @ 0x087;

volatile bit TRISC0 @ ((unsigned)&TRISC*8)+0;
volatile bit TRISC1 @ ((unsigned)&TRISC*8)+1;
volatile bit TRISC2 @ ((unsigned)&TRISC*8)+2;
volatile bit TRISC3 @ ((unsigned)&TRISC*8)+3;
volatile bit TRISC4 @ ((unsigned)&TRISC*8)+4;
volatile bit TRISC5 @ ((unsigned)&TRISC*8)+5;
volatile bit TRISC6 @ ((unsigned)&TRISC*8)+6;
volatile bit TRISC7 @ ((unsigned)&TRISC*8)+7;

volatile union {
struct {
unsigned TRISC0 : 1;
unsigned TRISC1 : 1;
unsigned TRISC2 : 1;
unsigned TRISC3 : 1;
unsigned TRISC4 : 1;
unsigned TRISC5 : 1;
unsigned TRISC6 : 1;
unsigned TRISC7 : 1;
};
} TRISCbits @ 0x087;



volatile unsigned char TRISE @ 0x089;

volatile bit TRISE3 @ ((unsigned)&TRISE*8)+3;

volatile union {
struct {
unsigned : 1;
unsigned : 1;
unsigned : 1;
unsigned TRISE3 : 1;
};
} TRISEbits @ 0x089;



volatile unsigned char PIE1 @ 0x08C;

volatile bit TMR1IE @ ((unsigned)&PIE1*8)+0;
volatile bit TMR2IE @ ((unsigned)&PIE1*8)+1;
volatile bit CCP1IE @ ((unsigned)&PIE1*8)+2;
volatile bit SSPIE @ ((unsigned)&PIE1*8)+3;
volatile bit TXIE @ ((unsigned)&PIE1*8)+4;
volatile bit RCIE @ ((unsigned)&PIE1*8)+5;
volatile bit ADIE @ ((unsigned)&PIE1*8)+6;
volatile bit TMR1GIE @ ((unsigned)&PIE1*8)+7;

volatile union {
struct {
unsigned TMR1IE : 1;
unsigned TMR2IE : 1;
unsigned CCP1IE : 1;
unsigned SSPIE : 1;
unsigned TXIE : 1;
unsigned RCIE : 1;
unsigned ADIE : 1;
unsigned TMR1GIE : 1;
};
} PIE1bits @ 0x08C;



volatile unsigned char PIE2 @ 0x08D;

volatile bit CCP2IE @ ((unsigned)&PIE2*8)+0;

volatile union {
struct {
unsigned CCP2IE : 1;
};
} PIE2bits @ 0x08D;



volatile unsigned char PCON @ 0x08E;

volatile bit nBOR @ ((unsigned)&PCON*8)+0;
volatile bit nPOR @ ((unsigned)&PCON*8)+1;
volatile bit nBO @ ((unsigned)&PCON*8)+0;

volatile union {
struct {
unsigned nBOR : 1;
unsigned nPOR : 1;
};
struct {
unsigned nBO : 1;
};
} PCONbits @ 0x08E;



volatile unsigned char T1GCON @ 0x08F;

volatile bit T1GVAL @ ((unsigned)&T1GCON*8)+2;
volatile bit T1GGO_nDONE @ ((unsigned)&T1GCON*8)+3;
volatile bit T1GSPM @ ((unsigned)&T1GCON*8)+4;
volatile bit T1GTM @ ((unsigned)&T1GCON*8)+5;
volatile bit T1GPOL @ ((unsigned)&T1GCON*8)+6;
volatile bit TMR1GE @ ((unsigned)&T1GCON*8)+7;
volatile bit T1G1SE @ ((unsigned)&T1GCON*8)+4;
volatile bit T1GSS0 @ ((unsigned)&T1GCON*8)+0;
volatile bit T1GSS1 @ ((unsigned)&T1GCON*8)+1;
volatile bit T1G_nDONE @ ((unsigned)&T1GCON*8)+3;
volatile bit T1GGO_DONE @ ((unsigned)&T1GCON*8)+3;
volatile bit T1GGO @ ((unsigned)&T1GCON*8)+3;

volatile union {
struct {
unsigned T1GSS : 2;
unsigned T1GVAL : 1;
unsigned T1GGO_nDONE : 1;
unsigned T1GSPM : 1;
unsigned T1GTM : 1;
unsigned T1GPOL : 1;
unsigned TMR1GE : 1;
};
struct {
unsigned : 2;
unsigned : 1;
unsigned : 1;
unsigned T1G1SE : 1;
unsigned : 1;
unsigned : 1;
unsigned : 1;
};
struct {
unsigned T1GSS0 : 1;
unsigned T1GSS1 : 1;
unsigned : 1;
unsigned T1G_nDONE : 1;
};
struct {
unsigned : 3;
unsigned T1GGO_DONE : 1;
};
struct {
unsigned : 3;
unsigned T1GGO : 1;
};
} T1GCONbits @ 0x08F;



volatile unsigned char OSCCON @ 0x090;

volatile bit ICSS @ ((unsigned)&OSCCON*8)+2;
volatile bit ICSL @ ((unsigned)&OSCCON*8)+3;
volatile bit IRCF0 @ ((unsigned)&OSCCON*8)+4;
volatile bit IRCF1 @ ((unsigned)&OSCCON*8)+5;

volatile union {
struct {
unsigned : 2;
unsigned ICSS : 1;
unsigned ICSL : 1;
unsigned IRCF : 2;
};
struct {
unsigned : 4;
unsigned IRCF0 : 1;
unsigned IRCF1 : 1;
};
} OSCCONbits @ 0x090;



volatile unsigned char OSCTUNE @ 0x091;

volatile bit TUN0 @ ((unsigned)&OSCTUNE*8)+0;
volatile bit TUN1 @ ((unsigned)&OSCTUNE*8)+1;
volatile bit TUN2 @ ((unsigned)&OSCTUNE*8)+2;
volatile bit TUN3 @ ((unsigned)&OSCTUNE*8)+3;
volatile bit TUN4 @ ((unsigned)&OSCTUNE*8)+4;
volatile bit TUN5 @ ((unsigned)&OSCTUNE*8)+5;

volatile union {
struct {
unsigned TUN : 6;
};
struct {
unsigned TUN0 : 1;
unsigned TUN1 : 1;
unsigned TUN2 : 1;
unsigned TUN3 : 1;
unsigned TUN4 : 1;
unsigned TUN5 : 1;
};
} OSCTUNEbits @ 0x091;



volatile unsigned char PR2 @ 0x092;



volatile unsigned char SSPADD @ 0x093;



volatile unsigned char SSPMSK @ 0x093;



volatile unsigned char SSPSTAT @ 0x094;

volatile bit BF @ ((unsigned)&SSPSTAT*8)+0;
volatile bit UA @ ((unsigned)&SSPSTAT*8)+1;
volatile bit R_nW @ ((unsigned)&SSPSTAT*8)+2;
volatile bit S @ ((unsigned)&SSPSTAT*8)+3;
volatile bit P @ ((unsigned)&SSPSTAT*8)+4;
volatile bit D_nA @ ((unsigned)&SSPSTAT*8)+5;
volatile bit CKE @ ((unsigned)&SSPSTAT*8)+6;
volatile bit SMP @ ((unsigned)&SSPSTAT*8)+7;
volatile bit R @ ((unsigned)&SSPSTAT*8)+2;
volatile bit D @ ((unsigned)&SSPSTAT*8)+5;
volatile bit I2C_READ @ ((unsigned)&SSPSTAT*8)+2;
volatile bit I2C_START @ ((unsigned)&SSPSTAT*8)+3;
volatile bit I2C_STOP @ ((unsigned)&SSPSTAT*8)+4;
volatile bit I2C_DATA @ ((unsigned)&SSPSTAT*8)+5;
volatile bit nW @ ((unsigned)&SSPSTAT*8)+2;
volatile bit nA @ ((unsigned)&SSPSTAT*8)+5;
volatile bit nWRITE @ ((unsigned)&SSPSTAT*8)+2;
volatile bit nADDRESS @ ((unsigned)&SSPSTAT*8)+5;
volatile bit R_W @ ((unsigned)&SSPSTAT*8)+2;
volatile bit D_A @ ((unsigned)&SSPSTAT*8)+5;
volatile bit READ_WRITE @ ((unsigned)&SSPSTAT*8)+2;
volatile bit DATA_ADDRESS @ ((unsigned)&SSPSTAT*8)+5;

volatile union {
struct {
unsigned BF : 1;
unsigned UA : 1;
unsigned R_nW : 1;
unsigned S : 1;
unsigned P : 1;
unsigned D_nA : 1;
unsigned CKE : 1;
unsigned SMP : 1;
};
struct {
unsigned : 1;
unsigned : 1;
unsigned : 1;
unsigned : 1;
unsigned : 1;
unsigned : 1;
unsigned : 1;
unsigned : 1;
};
struct {
unsigned : 2;
unsigned R : 1;
unsigned : 2;
unsigned D : 1;
};
struct {
unsigned : 2;
unsigned I2C_READ : 1;
unsigned I2C_START : 1;
unsigned I2C_STOP : 1;
unsigned I2C_DATA : 1;
};
struct {
unsigned : 2;
unsigned nW : 1;
unsigned : 2;
unsigned nA : 1;
};
struct {
unsigned : 2;
unsigned nWRITE : 1;
unsigned : 2;
unsigned nADDRESS : 1;
};
struct {
unsigned : 2;
unsigned R_W : 1;
unsigned : 2;
unsigned D_A : 1;
};
struct {
unsigned : 2;
unsigned READ_WRITE : 1;
unsigned : 2;
unsigned DATA_ADDRESS : 1;
};
} SSPSTATbits @ 0x094;



volatile unsigned char WPUB @ 0x095;
volatile unsigned char WPU @ 0x095;

volatile bit WPUB0 @ ((unsigned)&WPUB*8)+0;
volatile bit WPUB1 @ ((unsigned)&WPUB*8)+1;
volatile bit WPUB2 @ ((unsigned)&WPUB*8)+2;
volatile bit WPUB3 @ ((unsigned)&WPUB*8)+3;
volatile bit WPUB4 @ ((unsigned)&WPUB*8)+4;
volatile bit WPUB5 @ ((unsigned)&WPUB*8)+5;
volatile bit WPUB6 @ ((unsigned)&WPUB*8)+6;
volatile bit WPUB7 @ ((unsigned)&WPUB*8)+7;
volatile bit WPU0 @ ((unsigned)&WPUB*8)+0;
volatile bit WPU1 @ ((unsigned)&WPUB*8)+1;
volatile bit WPU2 @ ((unsigned)&WPUB*8)+2;
volatile bit WPU3 @ ((unsigned)&WPUB*8)+3;
volatile bit WPU4 @ ((unsigned)&WPUB*8)+4;
volatile bit WPU5 @ ((unsigned)&WPUB*8)+5;
volatile bit WPU6 @ ((unsigned)&WPUB*8)+6;
volatile bit WPU7 @ ((unsigned)&WPUB*8)+7;

volatile union {
struct {
unsigned WPUB0 : 1;
unsigned WPUB1 : 1;
unsigned WPUB2 : 1;
unsigned WPUB3 : 1;
unsigned WPUB4 : 1;
unsigned WPUB5 : 1;
unsigned WPUB6 : 1;
unsigned WPUB7 : 1;
};
struct {
unsigned WPU0 : 1;
unsigned WPU1 : 1;
unsigned WPU2 : 1;
unsigned WPU3 : 1;
unsigned WPU4 : 1;
unsigned WPU5 : 1;
unsigned WPU6 : 1;
unsigned WPU7 : 1;
};
} WPUBbits @ 0x095;



volatile unsigned char IOCB @ 0x096;
volatile unsigned char IOC @ 0x096;

volatile bit IOCB0 @ ((unsigned)&IOCB*8)+0;
volatile bit IOCB1 @ ((unsigned)&IOCB*8)+1;
volatile bit IOCB2 @ ((unsigned)&IOCB*8)+2;
volatile bit IOCB3 @ ((unsigned)&IOCB*8)+3;
volatile bit IOCB4 @ ((unsigned)&IOCB*8)+4;
volatile bit IOCB5 @ ((unsigned)&IOCB*8)+5;
volatile bit IOCB6 @ ((unsigned)&IOCB*8)+6;
volatile bit IOCB7 @ ((unsigned)&IOCB*8)+7;
volatile bit IOC0 @ ((unsigned)&IOCB*8)+0;
volatile bit IOC1 @ ((unsigned)&IOCB*8)+1;
volatile bit IOC2 @ ((unsigned)&IOCB*8)+2;
volatile bit IOC3 @ ((unsigned)&IOCB*8)+3;
volatile bit IOC4 @ ((unsigned)&IOCB*8)+4;
volatile bit IOC5 @ ((unsigned)&IOCB*8)+5;
volatile bit IOC6 @ ((unsigned)&IOCB*8)+6;
volatile bit IOC7 @ ((unsigned)&IOCB*8)+7;

volatile union {
struct {
unsigned IOCB0 : 1;
unsigned IOCB1 : 1;
unsigned IOCB2 : 1;
unsigned IOCB3 : 1;
unsigned IOCB4 : 1;
unsigned IOCB5 : 1;
unsigned IOCB6 : 1;
unsigned IOCB7 : 1;
};
struct {
unsigned IOC0 : 1;
unsigned IOC1 : 1;
unsigned IOC2 : 1;
unsigned IOC3 : 1;
unsigned IOC4 : 1;
unsigned IOC5 : 1;
unsigned IOC6 : 1;
unsigned IOC7 : 1;
};
} IOCBbits @ 0x096;



volatile unsigned char TXSTA @ 0x098;

volatile bit TX9D @ ((unsigned)&TXSTA*8)+0;
volatile bit TRMT @ ((unsigned)&TXSTA*8)+1;
volatile bit BRGH @ ((unsigned)&TXSTA*8)+2;
volatile bit SYNC @ ((unsigned)&TXSTA*8)+4;
volatile bit TXEN @ ((unsigned)&TXSTA*8)+5;
volatile bit TX9 @ ((unsigned)&TXSTA*8)+6;
volatile bit CSRC @ ((unsigned)&TXSTA*8)+7;
volatile bit TXD8 @ ((unsigned)&TXSTA*8)+0;
volatile bit nTX8 @ ((unsigned)&TXSTA*8)+6;
volatile bit TX8_9 @ ((unsigned)&TXSTA*8)+6;

volatile union {
struct {
unsigned TX9D : 1;
unsigned TRMT : 1;
unsigned BRGH : 1;
unsigned : 1;
unsigned SYNC : 1;
unsigned TXEN : 1;
unsigned TX9 : 1;
unsigned CSRC : 1;
};
struct {
unsigned TXD8 : 1;
unsigned : 5;
unsigned nTX8 : 1;
};
struct {
unsigned : 6;
unsigned TX8_9 : 1;
};
} TXSTAbits @ 0x098;



volatile unsigned char SPBRG @ 0x099;

volatile bit BRG0 @ ((unsigned)&SPBRG*8)+0;
volatile bit BRG1 @ ((unsigned)&SPBRG*8)+1;
volatile bit BRG2 @ ((unsigned)&SPBRG*8)+2;
volatile bit BRG3 @ ((unsigned)&SPBRG*8)+3;
volatile bit BRG4 @ ((unsigned)&SPBRG*8)+4;
volatile bit BRG5 @ ((unsigned)&SPBRG*8)+5;
volatile bit BRG6 @ ((unsigned)&SPBRG*8)+6;
volatile bit BRG7 @ ((unsigned)&SPBRG*8)+7;

volatile union {
struct {
unsigned BRG0 : 1;
unsigned BRG1 : 1;
unsigned BRG2 : 1;
unsigned BRG3 : 1;
unsigned BRG4 : 1;
unsigned BRG5 : 1;
unsigned BRG6 : 1;
unsigned BRG7 : 1;
};
} SPBRGbits @ 0x099;



volatile unsigned char APFCON @ 0x09C;

volatile bit CCP2SEL @ ((unsigned)&APFCON*8)+0;
volatile bit SSSEL @ ((unsigned)&APFCON*8)+1;

volatile union {
struct {
unsigned CCP2SEL : 1;
unsigned SSSEL : 1;
};
} APFCONbits @ 0x09C;



volatile unsigned char FVRCON @ 0x09D;

volatile bit ADFVR0 @ ((unsigned)&FVRCON*8)+0;
volatile bit ADFVR1 @ ((unsigned)&FVRCON*8)+1;
volatile bit FVREN @ ((unsigned)&FVRCON*8)+6;
volatile bit FVRRDY @ ((unsigned)&FVRCON*8)+7;
volatile bit FVRST @ ((unsigned)&FVRCON*8)+7;

volatile union {
struct {
unsigned ADFVR0 : 1;
unsigned ADFVR1 : 1;
unsigned : 2;
unsigned : 1;
unsigned : 1;
unsigned FVREN : 1;
unsigned FVRRDY : 1;
};
struct {
unsigned : 7;
unsigned FVRST : 1;
};
} FVRCONbits @ 0x09D;



volatile unsigned char ADCON1 @ 0x09F;

volatile bit ADREF0 @ ((unsigned)&ADCON1*8)+0;
volatile bit ADREF1 @ ((unsigned)&ADCON1*8)+1;
volatile bit ADCS0 @ ((unsigned)&ADCON1*8)+4;
volatile bit ADCS1 @ ((unsigned)&ADCON1*8)+5;
volatile bit ADCS2 @ ((unsigned)&ADCON1*8)+6;

volatile union {
struct {
unsigned ADREF : 2;
unsigned : 2;
unsigned ADCS : 3;
};
struct {
unsigned ADREF0 : 1;
unsigned ADREF1 : 1;
unsigned : 2;
unsigned ADCS0 : 1;
unsigned ADCS1 : 1;
unsigned ADCS2 : 1;
};
} ADCON1bits @ 0x09F;

# 1236
volatile unsigned char CPSCON0 @ 0x108;

volatile bit T0XCS @ ((unsigned)&CPSCON0*8)+0;
volatile bit CPSOUT @ ((unsigned)&CPSCON0*8)+1;
volatile bit CPSON @ ((unsigned)&CPSCON0*8)+7;
volatile bit CPSRNG0 @ ((unsigned)&CPSCON0*8)+2;
volatile bit CPSRNG1 @ ((unsigned)&CPSCON0*8)+3;

volatile union {
struct {
unsigned T0XCS : 1;
unsigned CPSOUT : 1;
unsigned CPSRNG : 2;
unsigned : 3;
unsigned CPSON : 1;
};
struct {
unsigned : 2;
unsigned CPSRNG0 : 1;
unsigned CPSRNG1 : 1;
};
} CPSCON0bits @ 0x108;



volatile unsigned char CPSCON1 @ 0x109;

volatile bit CPSCH0 @ ((unsigned)&CPSCON1*8)+0;
volatile bit CPSCH1 @ ((unsigned)&CPSCON1*8)+1;
volatile bit CPSCH2 @ ((unsigned)&CPSCON1*8)+2;
volatile bit CPSCH3 @ ((unsigned)&CPSCON1*8)+3;

volatile union {
struct {
unsigned CPSCH : 4;
};
struct {
unsigned CPSCH0 : 1;
unsigned CPSCH1 : 1;
unsigned CPSCH2 : 1;
unsigned CPSCH3 : 1;
};
} CPSCON1bits @ 0x109;



volatile unsigned char PMDATL @ 0x10C;
volatile unsigned char PMDATA @ 0x10C;



volatile unsigned char PMADRL @ 0x10D;
volatile unsigned char PMADR @ 0x10D;



volatile unsigned char PMDATH @ 0x10E;


volatile union {
struct {
unsigned : 6;
};
} PMDATHbits @ 0x10E;



volatile unsigned char PMADRH @ 0x10F;


volatile union {
struct {
unsigned : 5;
};
} PMADRHbits @ 0x10F;

# 1319
volatile unsigned char ANSELA @ 0x185;

volatile bit ANSA0 @ ((unsigned)&ANSELA*8)+0;
volatile bit ANSA1 @ ((unsigned)&ANSELA*8)+1;
volatile bit ANSA2 @ ((unsigned)&ANSELA*8)+2;
volatile bit ANSA3 @ ((unsigned)&ANSELA*8)+3;
volatile bit ANSA4 @ ((unsigned)&ANSELA*8)+4;
volatile bit ANSA5 @ ((unsigned)&ANSELA*8)+5;

volatile union {
struct {
unsigned ANSA : 6;
};
struct {
unsigned ANSA0 : 1;
unsigned ANSA1 : 1;
unsigned ANSA2 : 1;
unsigned ANSA3 : 1;
unsigned ANSA4 : 1;
unsigned ANSA5 : 1;
};
} ANSELAbits @ 0x185;



volatile unsigned char ANSELB @ 0x186;

volatile bit ANSB0 @ ((unsigned)&ANSELB*8)+0;
volatile bit ANSB1 @ ((unsigned)&ANSELB*8)+1;
volatile bit ANSB2 @ ((unsigned)&ANSELB*8)+2;
volatile bit ANSB3 @ ((unsigned)&ANSELB*8)+3;
volatile bit ANSB4 @ ((unsigned)&ANSELB*8)+4;
volatile bit ANSB5 @ ((unsigned)&ANSELB*8)+5;

volatile union {
struct {
unsigned ANSB : 6;
};
struct {
unsigned ANSB0 : 1;
unsigned ANSB1 : 1;
unsigned ANSB2 : 1;
unsigned ANSB3 : 1;
unsigned ANSB4 : 1;
unsigned ANSB5 : 1;
};
} ANSELBbits @ 0x186;



volatile unsigned char PMCON1 @ 0x18C;

volatile bit RD @ ((unsigned)&PMCON1*8)+0;
volatile bit PMRD @ ((unsigned)&PMCON1*8)+0;

volatile union {
struct {
unsigned RD : 1;
};
struct {
unsigned PMRD : 1;
};
} PMCON1bits @ 0x18C;


# 27 "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\include\pic.h"
#pragma inline(_nop)
extern void _nop(void);

# 80
extern unsigned int flash_read(unsigned short addr);


# 153
#pragma inline(_delay)
extern void _delay(unsigned long);

# 265 "D:\PIR_Ceiling_Dimmer_NO_Triac_Bridge_(20140517)\Release\../Release/MCU_16F723A.h"
struct Timer1
{
unsigned Trigger:1;
unsigned Timeout:1;
unsigned int Count;
};
struct Timer1 VarTimer1;
struct Timer1 *Timer1;

# 7 "D:\PIR_Ceiling_Dimmer_NO_Triac_Bridge_(20140517)\Release\../Release/LED.h"
struct LED
{
unsigned Enable:1;
unsigned GO1:1;
unsigned GO2:1;
unsigned GO3:1;
unsigned char Time1;
unsigned char Time2;
unsigned char Time3;
};
struct LED VarLED;
struct LED *LED;

# 34
void LED_Setting(char);

# 35 "D:\PIR_Ceiling_Dimmer_NO_Triac_Bridge_(20140517)\Release\../Release/Dimmer.h"
struct Dimmer
{

unsigned Enable:1;


unsigned GO_nDONE:1;
unsigned ADOK:1;
unsigned char ADValue;
unsigned char VRAD_Vref;
unsigned char Compare;
unsigned char VRAD;


unsigned Input:1;
unsigned Ready:1;
unsigned GO:1;
unsigned char DimmingTime;
unsigned char DimmingTimeValue;
unsigned char DimmingValue;
unsigned char Count;


unsigned Signal:1;
unsigned Lights:1;
unsigned Triac:1;
unsigned Phase2:1;
unsigned char Maxmum;
unsigned char Medium;
unsigned char Minimum;
unsigned char StartValue;
unsigned char StopValue;
unsigned char Offset;


};
struct Dimmer VarDimmer;
struct Dimmer *Dimmer;

# 7 "D:\PIR_Ceiling_Dimmer_NO_Triac_Bridge_(20140517)\Release\../Release/Sensor.h"
struct CDS
{
unsigned Enable:1;

unsigned GO:1;

unsigned char Time;
unsigned OK:1;

unsigned char VRAD;
unsigned char SignalAD;
unsigned char GO_nDONE;
};
struct CDS VarCDS;
struct CDS *CDS;

# 97
struct PIR
{

unsigned Enable:1;


unsigned GO_nDONE:1;
unsigned char VRAD;
unsigned char VRAD1;
unsigned char SignalAD;
unsigned char Time;
unsigned char ADCount;
unsigned char ADCount1;
unsigned char CenterVoltage;
unsigned char TenAverage[10];
unsigned int TenAverageValue;
unsigned char HundredAverage[10];
unsigned int HundredAverageValue;


unsigned GO:1;
unsigned OK:1;
unsigned Switch:1;
unsigned int Count;
unsigned int CloseTime;
unsigned int CloseTimeValue;


unsigned RangeRun:1;
unsigned char RangeTime;
unsigned char RangeTime1;
unsigned char RangeCount;
unsigned char RangeValue;
unsigned char RangeCount1;


};
struct PIR VarPIR;
struct PIR *PIR;

# 5 "D:\PIR_Ceiling_Dimmer_NO_Triac_Bridge_(20140517)\Release\../Release/Protection.h"
struct Temp
{
unsigned Enable:1;
unsigned ERROR:1;
unsigned GO:1;
unsigned int Time;
unsigned char AD;
unsigned char Count;
}
struct Temp VarTemp;
struct Temp *Temp;

# 14 "D:\PIR_Ceiling_Dimmer_NO_Triac_Bridge_(20140517)\Release\Main.c"
asm("\tpsect config,class=CONFIG,delta=2"); asm("\tdw ""0xFFFC & 0xFFF7 & 0xFFFF");
asm("\tpsect config,class=CONFIG,delta=2"); asm("\tdw ""0xFFFF");


void main()
{
char i;
TMain=&VarTMain;
; OSCCON=0x3c; ; ; TRISA=0xaf; TRISB=0x01; TRISC=0x00; ANSELA=0x07; ANSELB=0x01; PORTA=0xaf; PORTB=0x01; PORTC=0x00; ; ; _nop(); ; ; Timer1=&VarTimer1; T1CON=(0x40 | 0x00 | 0x01); TMR1H=((65536-550)/256); TMR1L=((65536-550)%256); TMR1IE=1; PEIE=1; GIE=1; ; ; _nop(); ; ; ADCON1=0x70; _nop(); ;;
Dimmer=&VarDimmer; Dimmer->Enable=1; Dimmer->StartValue = ((int)(10*1.85)); Dimmer->StopValue = ((int)(95*1.85)); Dimmer->DimmingValue = Dimmer->StopValue; Dimmer->GO_nDONE=0;
LED=&VarLED; LED->Enable=1; while(RB5==0) RB5 = 1; while(RB4==0) RB4 = 1; while(RB3==0) RB3 = 1;
Temp=&VarTemp; Temp->Enable=1;;
CDS=&VarCDS; CDS->Enable=1;
PIR=&VarPIR; PIR->Enable=1; PIR->RangeValue=10; PIR->CloseTimeValue=600; while(RB4==0) RB4 = 1; RB5 = 0;
while(1)
{

# 36
if(TMain->T1_Timerout==1)
{
TMain->T1_Timerout=0;

TMain->Count++; TMain->Count1++; if(TMain->PowerON==0) { if(TMain->Count == 1000) { TMain->Count=0; TMain->PowerON=1; } } else { if(TMain->Count == 1000) { TMain->Count=0; } } if(TMain->Count1 == 1000) { TMain->Count1=0; };
if(LED->GO1==1) { LED->Time1++; if(LED->Time1 == 150) { LED->Time1=0; RB5=~RB5; } } if(LED->GO2==1) { LED->Time2++; if(LED->Time2 == 150) { LED->Time2=0; RB4=~RB4; } } if(LED->GO3==1) { LED->Time3++; if(LED->Time3 == 150) { LED->Time3=0; RB3=~RB3; } };
if(Temp->Enable == 1) { Temp->Time++; if(Temp->Time == 5000) { Temp->Time=0; ADCON1=0x70; ADCON0=0x11; GO_nDONE=1; while(GO_nDONE); Temp->AD=ADRES; ; if(Temp->ERROR == 0) { if(Temp->AD <=107) { Temp->Count++; if(Temp->Count == 3) { Temp->Count=0; Temp->ERROR=1; CDS->Time=0;; PIR->Time=0;; Dimmer->Lights = 0; Dimmer->Triac = 0; Dimmer->Phase2 = 0; Dimmer->DimmingValue = ((int)(95*1.85)); RB2=0; while(RB5==0) RB5 = 1; while(RB4==0) RB4 = 1; LED->GO2=1;; } } else { Temp->Count=0; } } else { if(Temp->AD >=125) { Temp->Count++; if(Temp->Count == 3) { Temp->Count=0; Temp->ERROR=0; while(RB4==0) RB4 = 1;; LED->GO2=0;; } } else { Temp->Count=0; } } } };
if(CDS->Enable==1) { CDS->Time++; if(CDS->Time == 100) { CDS->Time=0; CDS->GO_nDONE=1; ADCON1=0x70; ; ; ADCON0=0x31; ; GO_nDONE=1; while(GO_nDONE); CDS->SignalAD=ADRES; ; ; ADCON0=0x09; ; GO_nDONE=1; while(GO_nDONE); CDS->VRAD=ADRES; ; CDS->GO_nDONE=0; CDS->GO=1; ; if(CDS->GO==1) { CDS->GO=0; if(CDS->OK==0) { if(CDS->SignalAD >= (CDS->VRAD-40)) { CDS->OK=1; } } else { if(CDS->SignalAD <= (CDS->VRAD-120)) { CDS->OK=0; } } } } };
if(PIR->Enable == 1) { PIR->Time++; if(PIR->Time == 100) { PIR->Time=0; PIR->GO_nDONE=1; ADCON1=0x70; ; ; ADCON0=0x05; ; GO_nDONE=1; while(GO_nDONE); PIR->VRAD=ADRES/51; ; ; ADCON0=0x0d; ; GO_nDONE=1; while(GO_nDONE); PIR->SignalAD=ADRES; ; PIR->GO_nDONE=0; PIR->GO=1; ; ; if(PIR->VRAD == 0) PIR->CloseTimeValue=600; else if(PIR->VRAD == 1) PIR->CloseTimeValue=3000; else if(PIR->VRAD == 2) PIR->CloseTimeValue=6000; else if(PIR->VRAD == 3) PIR->CloseTimeValue=9000; else if(PIR->VRAD >= 4) PIR->CloseTimeValue=12000; ; ; PIR->TenAverage[PIR->ADCount]=PIR->SignalAD; for(i=0;i<=9;i++) PIR->TenAverageValue+=PIR->TenAverage[i]; PIR->HundredAverage[PIR->ADCount1]=(PIR->TenAverageValue/10); PIR->TenAverageValue=0; ; for(i=0;i<=9;i++) PIR->HundredAverageValue+=PIR->HundredAverage[i]; PIR->CenterVoltage=(PIR->HundredAverageValue/10); PIR->HundredAverageValue=0; ; if(PIR->ADCount<10) PIR->ADCount++; else { PIR->ADCount=0; if(PIR->ADCount1<10) PIR->ADCount1++; else PIR->ADCount1=0; }; ; if(PIR->Switch==0) { if(CDS->OK==1) { if(PIR->OK==0) while(RB4==0) RB4 = 1; RB5 = 0; PIR->Switch=1; PIR->RangeValue=10; } } else { if(CDS->OK==0) { PIR->Switch=0; while(RB5==0) RB5 = 1; while(RB4==0) RB4 = 1; if(Dimmer->Lights==1 || Dimmer->Phase2 == 1) { Dimmer->Lights=0; Dimmer->Signal=1; if(2 == 2) { if(Dimmer->Phase2 == 1) { Dimmer->StopValue=((int)(95*1.85)); Dimmer->DimmingTimeValue=4; } else { Dimmer->DimmingTimeValue=2; if(PIR->Switch == 0) { Dimmer->Phase2 = 1; Dimmer->StopValue=((int)(95*1.85)); } else { Dimmer->StopValue=((int)(70*1.85)); } }; } else Dimmer->DimmingTimeValue=4; }; } }; ; if(PIR->OK==1) { if(PIR->GO==1) { PIR->GO=0; ; if(PIR->Switch == 1 && Temp->ERROR == 0) { ; if(PIR->RangeTime<100) PIR->RangeTime++; else { PIR->RangeTime=0; if(PIR->RangeCount>=90) { PIR->RangeCount=0; PIR->RangeTime1=0; PIR->RangeCount1=0; ; if(PIR->RangeValue==10) PIR->RangeValue=25; else if(PIR->RangeValue==25) PIR->RangeValue=45; } else { PIR->RangeCount1+=PIR->RangeCount; PIR->RangeCount=0; ; if(PIR->RangeTime1<6) PIR->RangeTime1++; else { PIR->RangeTime1=0; if(PIR->RangeCount1<=10) { if(PIR->RangeValue==45) PIR->RangeValue=25; else if(PIR->RangeValue==25) PIR->RangeValue=10; ; PIR->RangeCount1=0; } } } }; ; ; if((PIR->SignalAD>=(PIR->CenterVoltage-PIR->RangeValue)) && (PIR->SignalAD<=(PIR->CenterVoltage+PIR->RangeValue))) { PIR->Count=0; while(RB5==0) RB5 = 1; while(RB4==0) RB4 = 1; ; PIR->CloseTime++; if(PIR->CloseTime == PIR->CloseTimeValue) { PIR->CloseTime=0; if(Dimmer->Lights==1 || Dimmer->Phase2 == 1) { Dimmer->Lights=0; Dimmer->Signal=1; if(2 == 2) { if(Dimmer->Phase2 == 1) { Dimmer->StopValue=((int)(95*1.85)); Dimmer->DimmingTimeValue=4; } else { Dimmer->DimmingTimeValue=2; if(PIR->Switch == 0) { Dimmer->Phase2 = 1; Dimmer->StopValue=((int)(95*1.85)); } else { Dimmer->StopValue=((int)(70*1.85)); } }; } else Dimmer->DimmingTimeValue=4; }; } } else { PIR->RangeCount++; PIR->Count++; if(PIR->Count == 2) { PIR->Count=0; PIR->CloseTime=0; if(Dimmer->Lights==0) { Dimmer->Lights=1; Dimmer->Signal=1; Dimmer->DimmingTimeValue=1; if(2 == 0 || 2 == 2) Dimmer->Triac=1; }; } if(PIR->SignalAD<(PIR->CenterVoltage-PIR->RangeValue)) { while(RB4==0) RB4 = 1; RB5 = 0; } else if(PIR->SignalAD>(PIR->CenterVoltage+PIR->RangeValue)) { while(RB5==0) RB5 = 1; RB4 = 0; }; }; } } } else { ; PIR->Count++; if(PIR->Count == 250) { PIR->Count=0; PIR->OK=1; while(RB5==0) RB5 = 1;; ; } } } };
}
}
}

void ISR(void) interrupt 0
{
_nop();

if(TMR1IE && TMR1IF) { TMR1H=((65536-550)/256); TMR1L=((65536-550)%256); TMR1IF=0; if(TMain->PowerON==1) { Dimmer->Count++; if(RA7==1) { if(Dimmer->Input==0) { Dimmer->Input=1; Dimmer->Count=0; if(Temp->ERROR == 0) Dimmer->GO=1; } } else { if(Dimmer->Input==1) { Dimmer->Input=0; Dimmer->Count=0; if(Temp->ERROR == 0) Dimmer->GO=1; } } if(Dimmer->GO==1) { if(Dimmer->Count >= Dimmer->DimmingValue) { Dimmer->Count=0; Dimmer->GO=0; if(Dimmer->Triac==1) { RB2=1; } } } else { if(RB2==1) { RB2=0; if(Dimmer->Signal==1) { Dimmer->DimmingTime++; if(Dimmer->DimmingTime == Dimmer->DimmingTimeValue) { Dimmer->DimmingTime=0; if(Dimmer->Lights==1) { Dimmer->DimmingValue--; if(Dimmer->DimmingValue == Dimmer->StartValue) Dimmer->Signal=0; if(Dimmer->Phase2 == 1) Dimmer->Phase2 = 0; } else { Dimmer->DimmingValue++; if(Dimmer->DimmingValue == Dimmer->StopValue) { Dimmer->Signal=0; if(2 == 0) Dimmer->Triac=0; else if(2 == 2) { if(Dimmer->Phase2 == 0) Dimmer->Phase2 = 1; else { Dimmer->Triac=0; Dimmer->Phase2 = 0; } } } } } } } } }; Timer1->Count++; if(Timer1->Count == 20) { Timer1->Count=0; TMain->T1_Timerout=1; } };

_nop();
}

