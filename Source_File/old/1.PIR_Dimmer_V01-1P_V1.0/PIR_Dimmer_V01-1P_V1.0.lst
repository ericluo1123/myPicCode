

HI-TECH Software PIC LITE Macro Assembler V9.83 build 10920 
                                                                                               Tue Apr 29 10:53:01 2014

HI-TECH Software Omniscient Code Generator (Lite mode) build 10920
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 10920"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F723A
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 9 "G:\Program\PIC\Source_File\MCU_16F723A.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 9 "G:\Program\PIC\Source_File\MCU_16F723A.c"
    45  2007  FFF4               	dw 0xFFFC & 0xFFF7 & 0xFFFF ;#
    46                           # 10 "G:\Program\PIC\Source_File\MCU_16F723A.c"
    47                           	psect config,class=CONFIG,delta=2 ;#
    48                           # 10 "G:\Program\PIC\Source_File\MCU_16F723A.c"
    49  2008  FFFF               	dw 0xFFFF ;#
    50                           	FNCALL	_main,_Mcu_Initial
    51                           	FNCALL	_main,_LED_Setting
    52                           	FNCALL	_main,_TMR1_Main
    53                           	FNCALL	_main,_LED_Main
    54                           	FNCALL	_main,_Buzzer_Main
    55                           	FNCALL	_main,_CDS_Main
    56                           	FNCALL	_main,_PIR_Main
    57                           	FNCALL	_PIR_Main,___awdiv
    58                           	FNCALL	_PIR_Main,___wmul
    59                           	FNCALL	_PIR_Main,___lwdiv
    60                           	FNCALL	_PIR_Main,_PIR_Switch
    61                           	FNCALL	_PIR_Main,_LED_Setting
    62                           	FNCALL	_PIR_Main,_Dimmer_Control
    63                           	FNCALL	_PIR_Switch,_LED_Setting
    64                           	FNCALL	_PIR_Switch,_Dimmer_Control
    65                           	FNROOT	_main
    66                           	FNCALL	_ISR,_Dimmer_Main
    67                           	FNCALL	intlevel1,_ISR
    68                           	global	intlevel1
    69                           	FNROOT	intlevel1
    70                           	global	_PIRSwitch
    71                           psect	idataCOMMON,class=CODE,space=0,delta=2
    72                           global __pidataCOMMON
    73  07F9                     __pidataCOMMON:
    74                           	file	"G:\Program\PIC\Source_File\../Header_File/PIR_Dimmer_V01-1P_V1.0.h"
    75                           	line	6
    76                           
    77                           ;initializer for _PIRSwitch
    78  07F9  3401               	retlw	01h
    79                           	global	_Buzzer
    80                           	global	_CDS
    81                           	global	_PIR
    82                           	global	_VarDimmer
    83                           	global	_VarTimer1
    84                           	global	_VarCDS
    85                           	global	_VarBuzzer
    86                           	global	_VarLED
    87                           	global	_VarPIR
    88                           	global	_Dimmer
    89                           psect	nvBANK0,class=BANK0,space=1
    90                           global __pnvBANK0
    91  0055                     __pnvBANK0:
    92  0055                     _Dimmer:
    93  0055                            ds      1
    94                           
    95                           	global	_LED
    96  0056                     _LED:
    97  0056                            ds      1
    98                           
    99                           	global	_Timer1
   100  0057                     _Timer1:
   101  0057                            ds      1
   102                           
   103                           	global	_ADCON0
   104  001F                     _ADCON0	set	31
   105                           	global	_ADRES
   106  001E                     _ADRES	set	30
   107                           	global	_PORTA
   108  0005                     _PORTA	set	5
   109                           	global	_PORTB
   110  0006                     _PORTB	set	6
   111                           	global	_PORTC
   112  0007                     _PORTC	set	7
   113                           	global	_T1CON
   114  0010                     _T1CON	set	16
   115                           	global	_TMR0
   116  0001                     _TMR0	set	1
   117                           	global	_TMR1H
   118  000F                     _TMR1H	set	15
   119                           	global	_TMR1L
   120  000E                     _TMR1L	set	14
   121                           	global	_GIE
   122  005F                     _GIE	set	95
   123                           	global	_GO_nDONE
   124  00F9                     _GO_nDONE	set	249
   125                           	global	_PEIE
   126  005E                     _PEIE	set	94
   127                           	global	_RA7
   128  002F                     _RA7	set	47
   129                           	global	_RB1
   130  0031                     _RB1	set	49
   131                           	global	_RB2
   132  0032                     _RB2	set	50
   133                           	global	_RB3
   134  0033                     _RB3	set	51
   135                           	global	_RB4
   136  0034                     _RB4	set	52
   137                           	global	_RB5
   138  0035                     _RB5	set	53
   139                           	global	_TMR0IE
   140  005D                     _TMR0IE	set	93
   141                           	global	_TMR1IF
   142  0060                     _TMR1IF	set	96
   143                           	global	_ADCON1
   144  009F                     _ADCON1	set	159
   145                           	global	_FVRCON
   146  009D                     _FVRCON	set	157
   147                           	global	_OPTION_REG
   148  0081                     _OPTION_REG	set	129
   149                           	global	_OSCCON
   150  0090                     _OSCCON	set	144
   151                           	global	_TRISA
   152  0085                     _TRISA	set	133
   153                           	global	_TRISB
   154  0086                     _TRISB	set	134
   155                           	global	_TRISC
   156  0087                     _TRISC	set	135
   157                           	global	_TMR1IE
   158  0460                     _TMR1IE	set	1120
   159                           	global	_ANSELA
   160  0185                     _ANSELA	set	389
   161                           	global	_ANSELB
   162  0186                     _ANSELB	set	390
   163                           	file	"C:\Users\taianluo\AppData\Local\Temp\s1i0."
   164                           	line	#
   165                           psect cinit,class=CODE,delta=2
   166                           global start_initialization
   167  07E5                     start_initialization:
   168                           
   169                           psect	dataCOMMON,class=COMMON,space=1
   170                           global __pdataCOMMON
   171  0078                     __pdataCOMMON:
   172                           	file	"G:\Program\PIC\Source_File\../Header_File/PIR_Dimmer_V01-1P_V1.0.h"
   173  0078                     _PIRSwitch:
   174  0078                            ds      1
   175                           
   176                           psect	bssBANK0,class=BANK0,space=1
   177                           global __pbssBANK0
   178  0020                     __pbssBANK0:
   179  0020                     _Buzzer:
   180  0020                            ds      1
   181                           
   182  0021                     _CDS:
   183  0021                            ds      1
   184                           
   185  0022                     _PIR:
   186  0022                            ds      1
   187                           
   188  0023                     _VarDimmer:
   189  0023                            ds      14
   190                           
   191  0031                     _VarTimer1:
   192  0031                            ds      9
   193                           
   194  003A                     _VarCDS:
   195  003A                            ds      6
   196                           
   197  0040                     _VarBuzzer:
   198  0040                            ds      4
   199                           
   200  0044                     _VarLED:
   201  0044                            ds      2
   202                           
   203                           psect	bssBANK1,class=BANK1,space=1
   204                           global __pbssBANK1
   205  00A0                     __pbssBANK1:
   206  00A0                     _VarPIR:
   207  00A0                            ds      32
   208                           
   209                           psect clrtext,class=CODE,delta=2
   210                           global clear_ram
   211                           ;	Called with FSR containing the base address, and
   212                           ;	W with the last address+1
   213  0EE4                     clear_ram:
   214  0EE4  0064               	clrwdt			;clear the watchdog before getting into this loop
   215  0EE5                     clrloop:
   216  0EE5  0180               	clrf	indf		;clear RAM location pointed to by FSR
   217  0EE6  0A84               	incf	fsr,f		;increment pointer
   218  0EE7  0604               	xorwf	fsr,w		;XOR with final address
   219  0EE8  1903               	btfsc	status,2	;have we reached the end yet?
   220  0EE9  3400               	retlw	0		;all done for this memory range, return
   221  0EEA  0604               	xorwf	fsr,w		;XOR again to restore value
   222  0EEB  2EE5               	goto	clrloop		;do the next byte
   223                           
   224                           ; Clear objects allocated to BANK0
   225                           psect cinit,class=CODE,delta=2
   226  07E5  1383               	bcf	status, 7	;select IRP bank0
   227  07E6  3020               	movlw	low(__pbssBANK0)
   228  07E7  0084               	movwf	fsr
   229  07E8  3046               	movlw	low((__pbssBANK0)+026h)
   230  07E9  158A  26E4  118A   	fcall	clear_ram
   231                           ; Clear objects allocated to BANK1
   232                           psect cinit,class=CODE,delta=2
   233  07EC  30A0               	movlw	low(__pbssBANK1)
   234  07ED  0084               	movwf	fsr
   235  07EE  30C0               	movlw	low((__pbssBANK1)+020h)
   236  07EF  158A  26E4  118A   	fcall	clear_ram
   237                           ; Initialize objects allocated to COMMON
   238                           	global __pidataCOMMON
   239                           psect cinit,class=CODE,delta=2
   240  07F2  118A  27F9  118A   	fcall	__pidataCOMMON+0		;fetch initializer
   241  07F5  00F8               	movwf	__pdataCOMMON+0&07fh		
   242                           psect cinit,class=CODE,delta=2
   243                           global end_of_initialization
   244                           
   245                           ;End of C runtime variable initialization code
   246                           
   247  07F6                     end_of_initialization:
   248  07F6  0183               clrf status
   249  07F7  118A  2D83         ljmp _main	;jump to C main() function
   250                           psect	cstackCOMMON,class=COMMON,space=1
   251                           global __pcstackCOMMON
   252  0070                     __pcstackCOMMON:
   253                           	global	?_LED_Setting
   254  0070                     ?_LED_Setting:	; 0 bytes @ 0x0
   255                           	global	?_TMR1_Main
   256  0070                     ?_TMR1_Main:	; 0 bytes @ 0x0
   257                           	global	?_LED_Main
   258  0070                     ?_LED_Main:	; 0 bytes @ 0x0
   259                           	global	?_Buzzer_Main
   260  0070                     ?_Buzzer_Main:	; 0 bytes @ 0x0
   261                           	global	?_CDS_Main
   262  0070                     ?_CDS_Main:	; 0 bytes @ 0x0
   263                           	global	?_PIR_Main
   264  0070                     ?_PIR_Main:	; 0 bytes @ 0x0
   265                           	global	?_PIR_Switch
   266  0070                     ?_PIR_Switch:	; 0 bytes @ 0x0
   267                           	global	?_Dimmer_Main
   268  0070                     ?_Dimmer_Main:	; 0 bytes @ 0x0
   269                           	global	??_Dimmer_Main
   270  0070                     ??_Dimmer_Main:	; 0 bytes @ 0x0
   271                           	global	?_Dimmer_Control
   272  0070                     ?_Dimmer_Control:	; 0 bytes @ 0x0
   273                           	global	?_ISR
   274  0070                     ?_ISR:	; 0 bytes @ 0x0
   275                           	global	?_Mcu_Initial
   276  0070                     ?_Mcu_Initial:	; 0 bytes @ 0x0
   277                           	global	?_main
   278  0070                     ?_main:	; 0 bytes @ 0x0
   279  0070                     	ds	2
   280                           	global	??_ISR
   281  0072                     ??_ISR:	; 0 bytes @ 0x2
   282  0072                     	ds	6
   283                           psect	cstackBANK0,class=BANK0,space=1
   284                           global __pcstackBANK0
   285  0046                     __pcstackBANK0:
   286                           	global	??_LED_Setting
   287  0046                     ??_LED_Setting:	; 0 bytes @ 0x0
   288                           	global	??_TMR1_Main
   289  0046                     ??_TMR1_Main:	; 0 bytes @ 0x0
   290                           	global	??_LED_Main
   291  0046                     ??_LED_Main:	; 0 bytes @ 0x0
   292                           	global	??_Buzzer_Main
   293  0046                     ??_Buzzer_Main:	; 0 bytes @ 0x0
   294                           	global	??_CDS_Main
   295  0046                     ??_CDS_Main:	; 0 bytes @ 0x0
   296                           	global	??_Dimmer_Control
   297  0046                     ??_Dimmer_Control:	; 0 bytes @ 0x0
   298                           	global	??_Mcu_Initial
   299  0046                     ??_Mcu_Initial:	; 0 bytes @ 0x0
   300                           	global	?___wmul
   301  0046                     ?___wmul:	; 2 bytes @ 0x0
   302                           	global	?___lwdiv
   303  0046                     ?___lwdiv:	; 2 bytes @ 0x0
   304                           	global	?___awdiv
   305  0046                     ?___awdiv:	; 2 bytes @ 0x0
   306                           	global	LED_Setting@number
   307  0046                     LED_Setting@number:	; 1 bytes @ 0x0
   308                           	global	___wmul@multiplier
   309  0046                     ___wmul@multiplier:	; 2 bytes @ 0x0
   310                           	global	___lwdiv@divisor
   311  0046                     ___lwdiv@divisor:	; 2 bytes @ 0x0
   312                           	global	___awdiv@divisor
   313  0046                     ___awdiv@divisor:	; 2 bytes @ 0x0
   314  0046                     	ds	1
   315                           	global	Dimmer_Control@number
   316  0047                     Dimmer_Control@number:	; 1 bytes @ 0x1
   317  0047                     	ds	1
   318                           	global	??_PIR_Switch
   319  0048                     ??_PIR_Switch:	; 0 bytes @ 0x2
   320                           	global	___wmul@multiplicand
   321  0048                     ___wmul@multiplicand:	; 2 bytes @ 0x2
   322                           	global	___lwdiv@dividend
   323  0048                     ___lwdiv@dividend:	; 2 bytes @ 0x2
   324                           	global	___awdiv@dividend
   325  0048                     ___awdiv@dividend:	; 2 bytes @ 0x2
   326  0048                     	ds	2
   327                           	global	??___wmul
   328  004A                     ??___wmul:	; 0 bytes @ 0x4
   329                           	global	??___lwdiv
   330  004A                     ??___lwdiv:	; 0 bytes @ 0x4
   331                           	global	??___awdiv
   332  004A                     ??___awdiv:	; 0 bytes @ 0x4
   333                           	global	___wmul@product
   334  004A                     ___wmul@product:	; 2 bytes @ 0x4
   335  004A                     	ds	1
   336                           	global	___awdiv@counter
   337  004B                     ___awdiv@counter:	; 1 bytes @ 0x5
   338                           	global	___lwdiv@quotient
   339  004B                     ___lwdiv@quotient:	; 2 bytes @ 0x5
   340  004B                     	ds	1
   341                           	global	___awdiv@sign
   342  004C                     ___awdiv@sign:	; 1 bytes @ 0x6
   343  004C                     	ds	1
   344                           	global	___lwdiv@counter
   345  004D                     ___lwdiv@counter:	; 1 bytes @ 0x7
   346                           	global	___awdiv@quotient
   347  004D                     ___awdiv@quotient:	; 2 bytes @ 0x7
   348  004D                     	ds	2
   349                           	global	??_PIR_Main
   350  004F                     ??_PIR_Main:	; 0 bytes @ 0x9
   351  004F                     	ds	4
   352                           	global	PIR_Main@i
   353  0053                     PIR_Main@i:	; 1 bytes @ 0xD
   354  0053                     	ds	1
   355                           	global	??_main
   356  0054                     ??_main:	; 0 bytes @ 0xE
   357  0054                     	ds	1
   358 ;;Data sizes: Strings 0, constant 0, data 1, bss 70, persistent 3 stack 0
   359 ;;Auto spaces:   Size  Autos    Used
   360 ;; COMMON          14      8       9
   361 ;; BANK0           80     15      56
   362 ;; BANK1           80      0      32
   363 ;; BANK2           16      0       0
   364                           
   365 ;;
   366 ;; Pointer list with targets:
   367                           
   368 ;; ?___lwdiv	unsigned int  size(1) Largest target is 0
   369 ;;
   370 ;; ?___wmul	unsigned int  size(1) Largest target is 0
   371 ;;
   372 ;; ?___awdiv	int  size(1) Largest target is 0
   373 ;;
   374 ;; CDS	PTR struct CDS size(1) Largest target is 6
   375 ;;		 -> NULL(NULL[0]), VarCDS(BANK0[6]), 
   376 ;;
   377 ;; Buzzer	PTR struct Buzzer size(1) Largest target is 4
   378 ;;		 -> NULL(NULL[0]), VarBuzzer(BANK0[4]), 
   379 ;;
   380 ;; LED	PTR struct LED size(1) Largest target is 2
   381 ;;		 -> NULL(NULL[0]), VarLED(BANK0[2]), 
   382 ;;
   383 ;; Timer1	PTR struct Timer1 size(1) Largest target is 9
   384 ;;		 -> NULL(NULL[0]), VarTimer1(BANK0[9]), 
   385 ;;
   386 ;; PIR	PTR struct PIR size(1) Largest target is 32
   387 ;;		 -> NULL(NULL[0]), VarPIR(BANK1[32]), 
   388 ;;
   389 ;; Dimmer	PTR struct Dimmer size(1) Largest target is 14
   390 ;;		 -> NULL(NULL[0]), VarDimmer(BANK0[14]), 
   391 ;;
   392                           
   393                           
   394 ;;
   395 ;; Critical Paths under _main in COMMON
   396 ;;
   397 ;;   None.
   398 ;;
   399 ;; Critical Paths under _ISR in COMMON
   400 ;;
   401 ;;   _ISR->_Dimmer_Main
   402 ;;
   403 ;; Critical Paths under _main in BANK0
   404 ;;
   405 ;;   _main->_PIR_Main
   406 ;;   _PIR_Main->___awdiv
   407 ;;   _PIR_Switch->_Dimmer_Control
   408 ;;
   409 ;; Critical Paths under _ISR in BANK0
   410 ;;
   411 ;;   None.
   412 ;;
   413 ;; Critical Paths under _main in BANK1
   414 ;;
   415 ;;   None.
   416 ;;
   417 ;; Critical Paths under _ISR in BANK1
   418 ;;
   419 ;;   None.
   420 ;;
   421 ;; Critical Paths under _main in BANK2
   422 ;;
   423 ;;   None.
   424 ;;
   425 ;; Critical Paths under _ISR in BANK2
   426 ;;
   427 ;;   None.
   428                           
   429 ;;
   430 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   431 ;;
   432                           
   433 ;;
   434 ;;Call Graph Tables:
   435 ;;
   436 ;; ---------------------------------------------------------------------------------
   437 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   438 ;; ---------------------------------------------------------------------------------
   439 ;; (0) _main                                                 1     1      0     974
   440 ;;                                             14 BANK0      1     1      0
   441 ;;                        _Mcu_Initial
   442 ;;                        _LED_Setting
   443 ;;                          _TMR1_Main
   444 ;;                           _LED_Main
   445 ;;                        _Buzzer_Main
   446 ;;                           _CDS_Main
   447 ;;                           _PIR_Main
   448 ;; ---------------------------------------------------------------------------------
   449 ;; (1) _PIR_Main                                             5     5      0     886
   450 ;;                                              9 BANK0      5     5      0
   451 ;;                            ___awdiv
   452 ;;                             ___wmul
   453 ;;                            ___lwdiv
   454 ;;                         _PIR_Switch
   455 ;;                        _LED_Setting
   456 ;;                     _Dimmer_Control
   457 ;; ---------------------------------------------------------------------------------
   458 ;; (2) _PIR_Switch                                           1     1      0     132
   459 ;;                                              2 BANK0      1     1      0
   460 ;;                        _LED_Setting
   461 ;;                     _Dimmer_Control
   462 ;; ---------------------------------------------------------------------------------
   463 ;; (2) ___awdiv                                              9     5      4     300
   464 ;;                                              0 BANK0      9     5      4
   465 ;; ---------------------------------------------------------------------------------
   466 ;; (2) ___lwdiv                                              8     4      4     162
   467 ;;                                              0 BANK0      8     4      4
   468 ;; ---------------------------------------------------------------------------------
   469 ;; (2) ___wmul                                               6     2      4      92
   470 ;;                                              0 BANK0      6     2      4
   471 ;; ---------------------------------------------------------------------------------
   472 ;; (1) _CDS_Main                                             3     3      0       0
   473 ;;                                              0 BANK0      3     3      0
   474 ;; ---------------------------------------------------------------------------------
   475 ;; (1) _Buzzer_Main                                          1     1      0       0
   476 ;;                                              0 BANK0      1     1      0
   477 ;; ---------------------------------------------------------------------------------
   478 ;; (1) _LED_Main                                             1     1      0       0
   479 ;;                                              0 BANK0      1     1      0
   480 ;; ---------------------------------------------------------------------------------
   481 ;; (1) _TMR1_Main                                            2     2      0       0
   482 ;;                                              0 BANK0      2     2      0
   483 ;; ---------------------------------------------------------------------------------
   484 ;; (2) _LED_Setting                                          1     1      0      88
   485 ;;                                              0 BANK0      1     1      0
   486 ;; ---------------------------------------------------------------------------------
   487 ;; (1) _Mcu_Initial                                          1     1      0       0
   488 ;;                                              0 BANK0      1     1      0
   489 ;; ---------------------------------------------------------------------------------
   490 ;; (2) _Dimmer_Control                                       2     2      0      44
   491 ;;                                              0 BANK0      2     2      0
   492 ;; ---------------------------------------------------------------------------------
   493 ;; Estimated maximum stack depth 2
   494 ;; ---------------------------------------------------------------------------------
   495 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   496 ;; ---------------------------------------------------------------------------------
   497 ;; (4) _ISR                                                  6     6      0       0
   498 ;;                                              2 COMMON     6     6      0
   499 ;;                        _Dimmer_Main
   500 ;; ---------------------------------------------------------------------------------
   501 ;; (5) _Dimmer_Main                                          2     2      0       0
   502 ;;                                              0 COMMON     2     2      0
   503 ;; ---------------------------------------------------------------------------------
   504 ;; Estimated maximum stack depth 5
   505 ;; ---------------------------------------------------------------------------------
   506                           
   507 ;; Call Graph Graphs:
   508                           
   509 ;; _main (ROOT)
   510 ;;   _Mcu_Initial
   511 ;;   _LED_Setting
   512 ;;   _TMR1_Main
   513 ;;   _LED_Main
   514 ;;   _Buzzer_Main
   515 ;;   _CDS_Main
   516 ;;   _PIR_Main
   517 ;;     ___awdiv
   518 ;;     ___wmul
   519 ;;     ___lwdiv
   520 ;;     _PIR_Switch
   521 ;;       _LED_Setting
   522 ;;       _Dimmer_Control
   523 ;;     _LED_Setting
   524 ;;     _Dimmer_Control
   525 ;;
   526 ;; _ISR (ROOT)
   527 ;;   _Dimmer_Main
   528 ;;
   529                           
   530 ;; Address spaces:
   531                           
   532 ;;Name               Size   Autos  Total    Cost      Usage
   533 ;;SFR3                 0      0       0       4        0.0%
   534 ;;BITSFR3              0      0       0       4        0.0%
   535 ;;BANK2               10      0       0       9        0.0%
   536 ;;BITBANK2            10      0       0       8        0.0%
   537 ;;SFR2                 0      0       0       5        0.0%
   538 ;;BITSFR2              0      0       0       5        0.0%
   539 ;;SFR1                 0      0       0       2        0.0%
   540 ;;BITSFR1              0      0       0       2        0.0%
   541 ;;BANK1               50      0      20       7       40.0%
   542 ;;BITBANK1            50      0       0       6        0.0%
   543 ;;CODE                 0      0       0       0        0.0%
   544 ;;DATA                 0      0      68      10        0.0%
   545 ;;ABS                  0      0      61       3        0.0%
   546 ;;NULL                 0      0       0       0        0.0%
   547 ;;STACK                0      0       7       2        0.0%
   548 ;;BANK0               50      F      38       5       70.0%
   549 ;;BITBANK0            50      0       0       4        0.0%
   550 ;;SFR0                 0      0       0       1        0.0%
   551 ;;BITSFR0              0      0       0       1        0.0%
   552 ;;COMMON               E      8       9       1       64.3%
   553 ;;BITCOMMON            E      0       0       0        0.0%
   554                           
   555                           	global	_main
   556                           psect	maintext,global,class=CODE,delta=2
   557                           global __pmaintext
   558  0583                     __pmaintext:
   559                           
   560 ;; *************** function _main *****************
   561 ;; Defined at:
   562 ;;		line 7 in file "G:\Program\PIC\Source_File\1.PIR_Dimmer_V01-1P_V1.0\PIR_Dimmer_V01-1P_V1.0.c"
   563 ;; Parameters:    Size  Location     Type
   564 ;;		None
   565 ;; Auto vars:     Size  Location     Type
   566 ;;		None
   567 ;; Return value:  Size  Location     Type
   568 ;;		None               void
   569 ;; Registers used:
   570 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   571 ;; Tracked objects:
   572 ;;		On entry : 17F/0
   573 ;;		On exit  : 0/0
   574 ;;		Unchanged: 0/0
   575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   576 ;;      Params:         0       0       0       0
   577 ;;      Locals:         0       0       0       0
   578 ;;      Temps:          0       1       0       0
   579 ;;      Totals:         0       1       0       0
   580 ;;Total ram usage:        1 bytes
   581 ;; Hardware stack levels required when called:    5
   582 ;; This function calls:
   583 ;;		_Mcu_Initial
   584 ;;		_LED_Setting
   585 ;;		_TMR1_Main
   586 ;;		_LED_Main
   587 ;;		_Buzzer_Main
   588 ;;		_CDS_Main
   589 ;;		_PIR_Main
   590 ;; This function is called by:
   591 ;;		Startup code after reset
   592 ;; This function uses a non-reentrant model
   593 ;;
   594                           psect	maintext
   595                           	file	"G:\Program\PIC\Source_File\1.PIR_Dimmer_V01-1P_V1.0\PIR_Dimmer_V01-1P_V1.0.c"
   596                           	line	7
   597                           	global	__size_of_main
   598  0088                     	__size_of_main	equ	__end_of_main-_main
   599                           	
   600  0583                     _main:	
   601                           	opt	stack 3
   602                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   603                           	line	9
   604                           	
   605  0583                     l8185:	
   606                           ;PIR_Dimmer_V01-1P_V1.0.c: 9: Mcu_Initial();
   607  0583  158A  273A  118A   	fcall	_Mcu_Initial
   608                           	line	10
   609                           	
   610  0586                     l8187:	
   611                           ;PIR_Dimmer_V01-1P_V1.0.c: 10: Dimmer=&VarDimmer; Dimmer->Enable=1; Dimmer->Maxmum=41; D
                                 immer->Minimum=132; Dimmer->DimmingValue=Dimmer->Minimum; Dimmer->GO_nDONE=0;
   612  0586  3023               	movlw	(_VarDimmer)&0ffh
   613  0587  1283               	bcf	status, 5	;RP0=0, select bank0
   614  0588  1303               	bcf	status, 6	;RP1=0, select bank0
   615  0589  00D4               	movwf	(??_main+0)+0
   616  058A  0854               	movf	(??_main+0)+0,w
   617  058B  00D5               	movwf	(_Dimmer)
   618                           	
   619  058C                     l8189:	
   620  058C  0855               	movf	(_Dimmer),w
   621  058D  0084               	movwf	fsr0
   622  058E  1383               	bcf	status, 7	;select IRP bank0
   623  058F  1400               	bsf	indf,0
   624                           	
   625  0590                     l8191:	
   626  0590  3029               	movlw	(029h)
   627  0591  00D4               	movwf	(??_main+0)+0
   628  0592  0855               	movf	(_Dimmer),w
   629  0593  3E0B               	addlw	0Bh
   630  0594  0084               	movwf	fsr0
   631  0595  0854               	movf	(??_main+0)+0,w
   632  0596  0080               	movwf	indf
   633                           	
   634  0597                     l8193:	
   635  0597  3084               	movlw	(084h)
   636  0598  00D4               	movwf	(??_main+0)+0
   637  0599  0855               	movf	(_Dimmer),w
   638  059A  3E0C               	addlw	0Ch
   639  059B  0084               	movwf	fsr0
   640  059C  0854               	movf	(??_main+0)+0,w
   641  059D  0080               	movwf	indf
   642                           	
   643  059E                     l8195:	
   644  059E  0855               	movf	(_Dimmer),w
   645  059F  3E0C               	addlw	0Ch
   646  05A0  0084               	movwf	fsr0
   647  05A1  0800               	movf	indf,w
   648  05A2  00D4               	movwf	(??_main+0)+0
   649  05A3  0855               	movf	(_Dimmer),w
   650  05A4  3E09               	addlw	09h
   651  05A5  0084               	movwf	fsr0
   652  05A6  0854               	movf	(??_main+0)+0,w
   653  05A7  0080               	movwf	indf
   654                           	
   655  05A8                     l8197:	
   656  05A8  0855               	movf	(_Dimmer),w
   657  05A9  0084               	movwf	fsr0
   658  05AA  1080               	bcf	indf,1
   659                           	line	11
   660                           	
   661  05AB                     l8199:	
   662                           ;PIR_Dimmer_V01-1P_V1.0.c: 11: LED=&VarLED; LED->Enable=1; if(RB5 == 0) RB5 = 1; if(RB4 
                                 == 0) RB4 = 1; if(RB3 == 0) RB3 = 1;
   663  05AB  3044               	movlw	(_VarLED)&0ffh
   664  05AC  00D4               	movwf	(??_main+0)+0
   665  05AD  0854               	movf	(??_main+0)+0,w
   666  05AE  00D6               	movwf	(_LED)
   667                           	
   668  05AF                     l8201:	
   669  05AF  0856               	movf	(_LED),w
   670  05B0  0084               	movwf	fsr0
   671  05B1  1400               	bsf	indf,0
   672                           	
   673  05B2                     l8203:	
   674  05B2  1A86               	btfsc	(53/8),(53)&7
   675  05B3  2DB5               	goto	u4171
   676  05B4  2DB6               	goto	u4170
   677  05B5                     u4171:
   678  05B5  2DB7               	goto	l2554
   679  05B6                     u4170:
   680                           	
   681  05B6                     l8205:	
   682  05B6  1686               	bsf	(53/8),(53)&7
   683                           	
   684  05B7                     l2554:	
   685  05B7  1A06               	btfsc	(52/8),(52)&7
   686  05B8  2DBA               	goto	u4181
   687  05B9  2DBB               	goto	u4180
   688  05BA                     u4181:
   689  05BA  2DBC               	goto	l2555
   690  05BB                     u4180:
   691                           	
   692  05BB                     l8207:	
   693  05BB  1606               	bsf	(52/8),(52)&7
   694                           	
   695  05BC                     l2555:	
   696  05BC  1986               	btfsc	(51/8),(51)&7
   697  05BD  2DBF               	goto	u4191
   698  05BE  2DC0               	goto	u4190
   699  05BF                     u4191:
   700  05BF  2DC2               	goto	l8211
   701  05C0                     u4190:
   702                           	
   703  05C0                     l8209:	
   704  05C0  1586               	bsf	(51/8),(51)&7
   705  05C1  2DC2               	goto	l8211
   706                           	
   707  05C2                     l2556:	
   708                           	line	12
   709                           	
   710  05C2                     l8211:	
   711                           ;PIR_Dimmer_V01-1P_V1.0.c: 12: Buzzer=&VarBuzzer; Buzzer->Enable=1;
   712  05C2  3040               	movlw	(_VarBuzzer)&0ffh
   713  05C3  00D4               	movwf	(??_main+0)+0
   714  05C4  0854               	movf	(??_main+0)+0,w
   715  05C5  00A0               	movwf	(_Buzzer)
   716                           	
   717  05C6                     l8213:	
   718  05C6  0820               	movf	(_Buzzer),w
   719  05C7  0084               	movwf	fsr0
   720  05C8  1400               	bsf	indf,0
   721                           	line	13
   722                           	
   723  05C9                     l8215:	
   724                           ;PIR_Dimmer_V01-1P_V1.0.c: 13: CDS=&VarCDS; CDS->Enable=1;
   725  05C9  303A               	movlw	(_VarCDS)&0ffh
   726  05CA  00D4               	movwf	(??_main+0)+0
   727  05CB  0854               	movf	(??_main+0)+0,w
   728  05CC  00A1               	movwf	(_CDS)
   729  05CD  0821               	movf	(_CDS),w
   730  05CE  0084               	movwf	fsr0
   731  05CF  1400               	bsf	indf,0
   732                           	line	14
   733                           	
   734  05D0                     l8217:	
   735                           ;PIR_Dimmer_V01-1P_V1.0.c: 14: PIR=&VarPIR; PIR->Enable=1; PIR->RangeValue=8; PIR->Close
                                 TimeValue=150; LED_Setting(1);
   736  05D0  30A0               	movlw	(_VarPIR)&0ffh
   737  05D1  00D4               	movwf	(??_main+0)+0
   738  05D2  0854               	movf	(??_main+0)+0,w
   739  05D3  00A2               	movwf	(_PIR)
   740                           	
   741  05D4                     l8219:	
   742  05D4  0822               	movf	(_PIR),w
   743  05D5  0084               	movwf	fsr0
   744  05D6  1400               	bsf	indf,0
   745                           	
   746  05D7                     l8221:	
   747  05D7  3008               	movlw	(08h)
   748  05D8  00D4               	movwf	(??_main+0)+0
   749  05D9  0822               	movf	(_PIR),w
   750  05DA  3E1E               	addlw	01Eh
   751  05DB  0084               	movwf	fsr0
   752  05DC  0854               	movf	(??_main+0)+0,w
   753  05DD  0080               	movwf	indf
   754                           	
   755  05DE                     l8223:	
   756  05DE  0822               	movf	(_PIR),w
   757  05DF  3E18               	addlw	018h
   758  05E0  0084               	movwf	fsr0
   759  05E1  3096               	movlw	low(096h)
   760  05E2  0080               	movwf	indf
   761  05E3  0A84               	incf	fsr0,f
   762  05E4  3000               	movlw	high(096h)
   763  05E5  0080               	movwf	indf
   764                           	
   765  05E6                     l8225:	
   766  05E6  3001               	movlw	(01h)
   767  05E7  158A  276F  118A   	fcall	_LED_Setting
   768  05EA  2DEB               	goto	l8227
   769                           	line	15
   770                           ;PIR_Dimmer_V01-1P_V1.0.c: 15: while(1)
   771                           	
   772  05EB                     l2557:	
   773                           	line	17
   774                           	
   775  05EB                     l8227:	
   776                           ;PIR_Dimmer_V01-1P_V1.0.c: 16: {
   777                           ;PIR_Dimmer_V01-1P_V1.0.c: 17: if(Timer1->Timeout==1)
   778  05EB  1283               	bcf	status, 5	;RP0=0, select bank0
   779  05EC  1303               	bcf	status, 6	;RP1=0, select bank0
   780  05ED  0857               	movf	(_Timer1),w
   781  05EE  0084               	movwf	fsr0
   782  05EF  1383               	bcf	status, 7	;select IRP bank0
   783  05F0  1D00               	btfss	indf,2
   784  05F1  2DF3               	goto	u4201
   785  05F2  2DF4               	goto	u4200
   786  05F3                     u4201:
   787  05F3  2DEB               	goto	l8227
   788  05F4                     u4200:
   789                           	line	19
   790                           	
   791  05F4                     l8229:	
   792                           ;PIR_Dimmer_V01-1P_V1.0.c: 18: {
   793                           ;PIR_Dimmer_V01-1P_V1.0.c: 19: Timer1->Timeout=0;
   794  05F4  0857               	movf	(_Timer1),w
   795  05F5  0084               	movwf	fsr0
   796  05F6  1100               	bcf	indf,2
   797                           	line	20
   798                           	
   799  05F7                     l8231:	
   800                           ;PIR_Dimmer_V01-1P_V1.0.c: 20: TMR1_Main();
   801  05F7  118A  24E7  118A   	fcall	_TMR1_Main
   802                           	line	21
   803                           	
   804  05FA                     l8233:	
   805                           ;PIR_Dimmer_V01-1P_V1.0.c: 21: LED_Main();
   806  05FA  158A  26EC  118A   	fcall	_LED_Main
   807                           	line	22
   808                           	
   809  05FD                     l8235:	
   810                           ;PIR_Dimmer_V01-1P_V1.0.c: 22: Buzzer_Main();
   811  05FD  118A  26F0  118A   	fcall	_Buzzer_Main
   812                           	line	23
   813                           	
   814  0600                     l8237:	
   815                           ;PIR_Dimmer_V01-1P_V1.0.c: 23: CDS_Main();
   816  0600  118A  243D  118A   	fcall	_CDS_Main
   817                           	line	24
   818                           	
   819  0603                     l8239:	
   820                           ;PIR_Dimmer_V01-1P_V1.0.c: 24: PIR_Main();
   821  0603  118A  2013  118A   	fcall	_PIR_Main
   822  0606  2DEB               	goto	l8227
   823                           	line	25
   824                           	
   825  0607                     l2558:	
   826  0607  2DEB               	goto	l8227
   827                           	line	26
   828                           	
   829  0608                     l2559:	
   830                           	line	15
   831  0608  2DEB               	goto	l8227
   832                           	
   833  0609                     l2560:	
   834                           	line	27
   835                           	
   836  0609                     l2561:	
   837                           	global	start
   838  0609  118A  2811         	ljmp	start
   839                           	opt stack 0
   840                           GLOBAL	__end_of_main
   841  060B                     	__end_of_main:
   842 ;; =============== function _main ends ============
   843                           
   844                           	signat	_main,88
   845                           	global	_PIR_Main
   846                           psect	text381,local,class=CODE,delta=2
   847                           global __ptext381
   848  0013                     __ptext381:
   849                           
   850 ;; *************** function _PIR_Main *****************
   851 ;; Defined at:
   852 ;;		line 62 in file "G:\Program\PIC\Source_File\Sensor_PIR+CDS.c"
   853 ;; Parameters:    Size  Location     Type
   854 ;;		None
   855 ;; Auto vars:     Size  Location     Type
   856 ;;  i               1   13[BANK0 ] unsigned char 
   857 ;; Return value:  Size  Location     Type
   858 ;;		None               void
   859 ;; Registers used:
   860 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   861 ;; Tracked objects:
   862 ;;		On entry : 0/0
   863 ;;		On exit  : 0/0
   864 ;;		Unchanged: 0/0
   865 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   866 ;;      Params:         0       0       0       0
   867 ;;      Locals:         0       1       0       0
   868 ;;      Temps:          0       4       0       0
   869 ;;      Totals:         0       5       0       0
   870 ;;Total ram usage:        5 bytes
   871 ;; Hardware stack levels used:    1
   872 ;; Hardware stack levels required when called:    4
   873 ;; This function calls:
   874 ;;		___awdiv
   875 ;;		___wmul
   876 ;;		___lwdiv
   877 ;;		_PIR_Switch
   878 ;;		_LED_Setting
   879 ;;		_Dimmer_Control
   880 ;; This function is called by:
   881 ;;		_main
   882 ;; This function uses a non-reentrant model
   883 ;;
   884                           psect	text381
   885                           	file	"G:\Program\PIC\Source_File\Sensor_PIR+CDS.c"
   886                           	line	62
   887                           	global	__size_of_PIR_Main
   888  0318                     	__size_of_PIR_Main	equ	__end_of_PIR_Main-_PIR_Main
   889                           	
   890  0013                     _PIR_Main:	
   891                           	opt	stack 3
   892                           ; Regs used in _PIR_Main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   893                           	line	64
   894                           	
   895  0013                     l8049:	
   896                           ;Sensor_PIR+CDS.c: 63: char i;
   897                           ;Sensor_PIR+CDS.c: 64: if(PIR->Enable == 1)
   898  0013  1283               	bcf	status, 5	;RP0=0, select bank0
   899  0014  1303               	bcf	status, 6	;RP1=0, select bank0
   900  0015  0822               	movf	(_PIR),w
   901  0016  0084               	movwf	fsr0
   902  0017  1383               	bcf	status, 7	;select IRP bank0
   903  0018  1C00               	btfss	indf,0
   904  0019  281B               	goto	u3881
   905  001A  281C               	goto	u3880
   906  001B                     u3881:
   907  001B  2B2A               	goto	l5145
   908  001C                     u3880:
   909                           	line	66
   910                           	
   911  001C                     l8051:	
   912                           ;Sensor_PIR+CDS.c: 65: {
   913                           ;Sensor_PIR+CDS.c: 66: PIR->Time++;
   914  001C  3001               	movlw	(01h)
   915  001D  00CF               	movwf	(??_PIR_Main+0)+0
   916  001E  0822               	movf	(_PIR),w
   917  001F  3E04               	addlw	04h
   918  0020  0084               	movwf	fsr0
   919  0021  084F               	movf	(??_PIR_Main+0)+0,w
   920  0022  0780               	addwf	indf,f
   921                           	line	67
   922                           	
   923  0023                     l8053:	
   924                           ;Sensor_PIR+CDS.c: 67: if(PIR->Time == 10)
   925  0023  0822               	movf	(_PIR),w
   926  0024  3E04               	addlw	04h
   927  0025  0084               	movwf	fsr0
   928  0026  0800               	movf	indf,w
   929  0027  3A0A               	xorlw	0Ah
   930  0028  1D03               	skipz
   931  0029  282B               	goto	u3891
   932  002A  282C               	goto	u3890
   933  002B                     u3891:
   934  002B  2B2A               	goto	l5145
   935  002C                     u3890:
   936                           	line	69
   937                           	
   938  002C                     l8055:	
   939                           ;Sensor_PIR+CDS.c: 68: {
   940                           ;Sensor_PIR+CDS.c: 69: PIR->Time=0;
   941  002C  0822               	movf	(_PIR),w
   942  002D  3E04               	addlw	04h
   943  002E  0084               	movwf	fsr0
   944  002F  0180               	clrf	indf
   945                           	line	70
   946                           ;Sensor_PIR+CDS.c: 70: PIR->GO_nDONE=1;
   947  0030  0822               	movf	(_PIR),w
   948  0031  0084               	movwf	fsr0
   949  0032  1480               	bsf	indf,1
   950                           	line	71
   951                           	
   952  0033                     l8057:	
   953                           ;Sensor_PIR+CDS.c: 71: ADCON1=0x70;
   954  0033  3070               	movlw	(070h)
   955  0034  1683               	bsf	status, 5	;RP0=1, select bank1
   956  0035  1303               	bcf	status, 6	;RP1=0, select bank1
   957  0036  009F               	movwf	(159)^080h	;volatile
   958                           	line	74
   959                           	
   960  0037                     l8059:	
   961                           ;Sensor_PIR+CDS.c: 74: ADCON0=0x05;
   962  0037  3005               	movlw	(05h)
   963  0038  1283               	bcf	status, 5	;RP0=0, select bank0
   964  0039  1303               	bcf	status, 6	;RP1=0, select bank0
   965  003A  009F               	movwf	(31)	;volatile
   966                           	line	76
   967                           	
   968  003B                     l8061:	
   969                           ;Sensor_PIR+CDS.c: 76: GO_nDONE=1;
   970  003B  149F               	bsf	(249/8),(249)&7
   971                           	line	77
   972                           ;Sensor_PIR+CDS.c: 77: while(GO_nDONE);
   973  003C  283D               	goto	l5102
   974                           	
   975  003D                     l5103:	
   976                           	
   977  003D                     l5102:	
   978  003D  189F               	btfsc	(249/8),(249)&7
   979  003E  2840               	goto	u3901
   980  003F  2841               	goto	u3900
   981  0040                     u3901:
   982  0040  283D               	goto	l5102
   983  0041                     u3900:
   984  0041  2842               	goto	l8063
   985                           	
   986  0042                     l5104:	
   987                           	line	78
   988                           	
   989  0042                     l8063:	
   990                           ;Sensor_PIR+CDS.c: 78: PIR->VRAD=ADRES/13;
   991  0042  300D               	movlw	low(0Dh)
   992  0043  00C6               	movwf	(?___awdiv)
   993  0044  3000               	movlw	high(0Dh)
   994  0045  00C7               	movwf	((?___awdiv))+1
   995  0046  081E               	movf	(30),w	;volatile
   996  0047  00CF               	movwf	(??_PIR_Main+0)+0
   997  0048  01D0               	clrf	(??_PIR_Main+0)+0+1
   998  0049  084F               	movf	0+(??_PIR_Main+0)+0,w
   999  004A  00C8               	movwf	0+(?___awdiv)+02h
  1000  004B  0850               	movf	1+(??_PIR_Main+0)+0,w
  1001  004C  00C9               	movwf	1+(?___awdiv)+02h
  1002  004D  118A  260B  118A   	fcall	___awdiv
  1003  0050  1283               	bcf	status, 5	;RP0=0, select bank0
  1004  0051  1303               	bcf	status, 6	;RP1=0, select bank0
  1005  0052  0846               	movf	(0+(?___awdiv)),w
  1006  0053  00D1               	movwf	(??_PIR_Main+2)+0
  1007  0054  0822               	movf	(_PIR),w
  1008  0055  3E01               	addlw	01h
  1009  0056  0084               	movwf	fsr0
  1010  0057  0851               	movf	(??_PIR_Main+2)+0,w
  1011  0058  1383               	bcf	status, 7	;select IRP bank0
  1012  0059  0080               	movwf	indf
  1013                           	line	81
  1014                           	
  1015  005A                     l8065:	
  1016                           ;Sensor_PIR+CDS.c: 81: ADCON0=0x0d;
  1017  005A  300D               	movlw	(0Dh)
  1018  005B  009F               	movwf	(31)	;volatile
  1019                           	line	83
  1020                           	
  1021  005C                     l8067:	
  1022                           ;Sensor_PIR+CDS.c: 83: GO_nDONE=1;
  1023  005C  149F               	bsf	(249/8),(249)&7
  1024                           	line	84
  1025                           ;Sensor_PIR+CDS.c: 84: while(GO_nDONE);
  1026  005D  285E               	goto	l5105
  1027                           	
  1028  005E                     l5106:	
  1029                           	
  1030  005E                     l5105:	
  1031  005E  189F               	btfsc	(249/8),(249)&7
  1032  005F  2861               	goto	u3911
  1033  0060  2862               	goto	u3910
  1034  0061                     u3911:
  1035  0061  285E               	goto	l5105
  1036  0062                     u3910:
  1037  0062  2863               	goto	l8069
  1038                           	
  1039  0063                     l5107:	
  1040                           	line	85
  1041                           	
  1042  0063                     l8069:	
  1043                           ;Sensor_PIR+CDS.c: 85: PIR->SignalAD=ADRES;
  1044  0063  081E               	movf	(30),w	;volatile
  1045  0064  00CF               	movwf	(??_PIR_Main+0)+0
  1046  0065  0822               	movf	(_PIR),w
  1047  0066  3E03               	addlw	03h
  1048  0067  0084               	movwf	fsr0
  1049  0068  084F               	movf	(??_PIR_Main+0)+0,w
  1050  0069  1383               	bcf	status, 7	;select IRP bank0
  1051  006A  0080               	movwf	indf
  1052                           	line	87
  1053                           ;Sensor_PIR+CDS.c: 87: PIR->GO_nDONE=0;
  1054  006B  0822               	movf	(_PIR),w
  1055  006C  0084               	movwf	fsr0
  1056  006D  1080               	bcf	indf,1
  1057                           	line	88
  1058                           ;Sensor_PIR+CDS.c: 88: PIR->GO=1;
  1059  006E  0822               	movf	(_PIR),w
  1060  006F  3E13               	addlw	013h
  1061  0070  0084               	movwf	fsr0
  1062  0071  1400               	bsf	indf,0
  1063                           	line	91
  1064                           	
  1065  0072                     l8071:	
  1066                           ;Sensor_PIR+CDS.c: 91: if(PIR->VRAD==0)
  1067  0072  0822               	movf	(_PIR),w
  1068  0073  3E01               	addlw	01h
  1069  0074  0084               	movwf	fsr0
  1070  0075  0880               	movf	indf,f
  1071  0076  1D03               	skipz
  1072  0077  2879               	goto	u3921
  1073  0078  287A               	goto	u3920
  1074  0079                     u3921:
  1075  0079  2883               	goto	l8075
  1076  007A                     u3920:
  1077                           	line	92
  1078                           	
  1079  007A                     l8073:	
  1080                           ;Sensor_PIR+CDS.c: 92: PIR->CloseTimeValue=150;
  1081  007A  0822               	movf	(_PIR),w
  1082  007B  3E18               	addlw	018h
  1083  007C  0084               	movwf	fsr0
  1084  007D  3096               	movlw	low(096h)
  1085  007E  0080               	movwf	indf
  1086  007F  0A84               	incf	fsr0,f
  1087  0080  3000               	movlw	high(096h)
  1088  0081  0080               	movwf	indf
  1089  0082  28A0               	goto	l8077
  1090                           	line	93
  1091                           	
  1092  0083                     l5108:	
  1093                           	line	94
  1094                           	
  1095  0083                     l8075:	
  1096                           ;Sensor_PIR+CDS.c: 93: else
  1097                           ;Sensor_PIR+CDS.c: 94: PIR->CloseTimeValue=350*PIR->VRAD;
  1098  0083  0822               	movf	(_PIR),w
  1099  0084  3E01               	addlw	01h
  1100  0085  0084               	movwf	fsr0
  1101  0086  0800               	movf	indf,w
  1102  0087  00CF               	movwf	(??_PIR_Main+0)+0
  1103  0088  01D0               	clrf	(??_PIR_Main+0)+0+1
  1104  0089  084F               	movf	0+(??_PIR_Main+0)+0,w
  1105  008A  00C6               	movwf	(?___wmul)
  1106  008B  0850               	movf	1+(??_PIR_Main+0)+0,w
  1107  008C  00C7               	movwf	(?___wmul+1)
  1108  008D  305E               	movlw	low(015Eh)
  1109  008E  00C8               	movwf	0+(?___wmul)+02h
  1110  008F  3001               	movlw	high(015Eh)
  1111  0090  00C9               	movwf	(0+(?___wmul)+02h)+1
  1112  0091  158A  270E  118A   	fcall	___wmul
  1113  0094  1283               	bcf	status, 5	;RP0=0, select bank0
  1114  0095  1303               	bcf	status, 6	;RP1=0, select bank0
  1115  0096  0822               	movf	(_PIR),w
  1116  0097  3E18               	addlw	018h
  1117  0098  0084               	movwf	fsr0
  1118  0099  0846               	movf	(0+(?___wmul)),w
  1119  009A  1383               	bcf	status, 7	;select IRP bank0
  1120  009B  0080               	movwf	indf
  1121  009C  0A84               	incf	fsr0,f
  1122  009D  0847               	movf	(1+(?___wmul)),w
  1123  009E  0080               	movwf	indf
  1124  009F  28A0               	goto	l8077
  1125                           	
  1126  00A0                     l5109:	
  1127                           	line	97
  1128                           	
  1129  00A0                     l8077:	
  1130                           ;Sensor_PIR+CDS.c: 97: PIR->TenAverage[PIR->ADCount]=PIR->SignalAD;
  1131  00A0  0822               	movf	(_PIR),w
  1132  00A1  3E03               	addlw	03h
  1133  00A2  0084               	movwf	fsr0
  1134  00A3  0800               	movf	indf,w
  1135  00A4  00CF               	movwf	(??_PIR_Main+0)+0
  1136  00A5  0822               	movf	(_PIR),w
  1137  00A6  3E05               	addlw	05h
  1138  00A7  0084               	movwf	fsr0
  1139  00A8  0800               	movf	indf,w
  1140  00A9  3E07               	addlw	07h
  1141  00AA  0722               	addwf	(_PIR),w
  1142  00AB  00D0               	movwf	(??_PIR_Main+1)+0
  1143  00AC  0850               	movf	0+(??_PIR_Main+1)+0,w
  1144  00AD  0084               	movwf	fsr0
  1145  00AE  084F               	movf	(??_PIR_Main+0)+0,w
  1146  00AF  0080               	movwf	indf
  1147                           	line	98
  1148                           	
  1149  00B0                     l8079:	
  1150                           ;Sensor_PIR+CDS.c: 98: for(i=0;i<=9;i++)
  1151  00B0  01D3               	clrf	(PIR_Main@i)
  1152                           	
  1153  00B1                     l8081:	
  1154  00B1  300A               	movlw	(0Ah)
  1155  00B2  0253               	subwf	(PIR_Main@i),w
  1156  00B3  1C03               	skipc
  1157  00B4  28B6               	goto	u3931
  1158  00B5  28B7               	goto	u3930
  1159  00B6                     u3931:
  1160  00B6  28B9               	goto	l8085
  1161  00B7                     u3930:
  1162  00B7  28DB               	goto	l8091
  1163                           	
  1164  00B8                     l8083:	
  1165  00B8  28DB               	goto	l8091
  1166                           	line	99
  1167                           	
  1168  00B9                     l5110:	
  1169                           	
  1170  00B9                     l8085:	
  1171                           ;Sensor_PIR+CDS.c: 99: PIR->TenAverageValue+=PIR->TenAverage[i];
  1172  00B9  0853               	movf	(PIR_Main@i),w
  1173  00BA  3E07               	addlw	07h
  1174  00BB  0722               	addwf	(_PIR),w
  1175  00BC  00CF               	movwf	(??_PIR_Main+0)+0
  1176  00BD  084F               	movf	0+(??_PIR_Main+0)+0,w
  1177  00BE  0084               	movwf	fsr0
  1178  00BF  0800               	movf	indf,w
  1179  00C0  00D0               	movwf	(??_PIR_Main+1)+0
  1180  00C1  01D1               	clrf	(??_PIR_Main+1)+0+1
  1181  00C2  0822               	movf	(_PIR),w
  1182  00C3  3E11               	addlw	011h
  1183  00C4  0084               	movwf	fsr0
  1184  00C5  0850               	movf	0+(??_PIR_Main+1)+0,w
  1185  00C6  0780               	addwf	indf,f
  1186  00C7  0F84               	incfsz	fsr0,f
  1187  00C8  0800               	movf	indf,w
  1188  00C9  1803               	skipnc
  1189  00CA  0A00               	incf	indf,w
  1190  00CB  00FF               	movwf	btemp+1
  1191  00CC  0851               	movf	1+(??_PIR_Main+1)+0,w
  1192  00CD  077F               	addwf	btemp+1,w
  1193  00CE  0080               	movwf	indf
  1194  00CF  0384               	decf	fsr0,f
  1195                           	line	98
  1196                           	
  1197  00D0                     l8087:	
  1198  00D0  3001               	movlw	(01h)
  1199  00D1  00CF               	movwf	(??_PIR_Main+0)+0
  1200  00D2  084F               	movf	(??_PIR_Main+0)+0,w
  1201  00D3  07D3               	addwf	(PIR_Main@i),f
  1202                           	
  1203  00D4                     l8089:	
  1204  00D4  300A               	movlw	(0Ah)
  1205  00D5  0253               	subwf	(PIR_Main@i),w
  1206  00D6  1C03               	skipc
  1207  00D7  28D9               	goto	u3941
  1208  00D8  28DA               	goto	u3940
  1209  00D9                     u3941:
  1210  00D9  28B9               	goto	l8085
  1211  00DA                     u3940:
  1212  00DA  28DB               	goto	l8091
  1213                           	
  1214  00DB                     l5111:	
  1215                           	line	100
  1216                           	
  1217  00DB                     l8091:	
  1218                           ;Sensor_PIR+CDS.c: 100: PIR->CenterVoltage=PIR->TenAverageValue/10;
  1219  00DB  300A               	movlw	low(0Ah)
  1220  00DC  00C6               	movwf	(?___lwdiv)
  1221  00DD  3000               	movlw	high(0Ah)
  1222  00DE  00C7               	movwf	((?___lwdiv))+1
  1223  00DF  0822               	movf	(_PIR),w
  1224  00E0  3E11               	addlw	011h
  1225  00E1  0084               	movwf	fsr0
  1226  00E2  0800               	movf	indf,w
  1227  00E3  00C8               	movwf	0+(?___lwdiv)+02h
  1228  00E4  0A84               	incf	fsr0,f
  1229  00E5  0800               	movf	indf,w
  1230  00E6  00C9               	movwf	1+(?___lwdiv)+02h
  1231  00E7  118A  2795  118A   	fcall	___lwdiv
  1232  00EA  1283               	bcf	status, 5	;RP0=0, select bank0
  1233  00EB  1303               	bcf	status, 6	;RP1=0, select bank0
  1234  00EC  0846               	movf	(0+(?___lwdiv)),w
  1235  00ED  00CF               	movwf	(??_PIR_Main+0)+0
  1236  00EE  0822               	movf	(_PIR),w
  1237  00EF  3E06               	addlw	06h
  1238  00F0  0084               	movwf	fsr0
  1239  00F1  084F               	movf	(??_PIR_Main+0)+0,w
  1240  00F2  1383               	bcf	status, 7	;select IRP bank0
  1241  00F3  0080               	movwf	indf
  1242                           	line	101
  1243                           	
  1244  00F4                     l8093:	
  1245                           ;Sensor_PIR+CDS.c: 101: PIR->TenAverageValue=0;
  1246  00F4  0822               	movf	(_PIR),w
  1247  00F5  3E11               	addlw	011h
  1248  00F6  0084               	movwf	fsr0
  1249  00F7  3000               	movlw	low(0)
  1250  00F8  0080               	movwf	indf
  1251  00F9  0A84               	incf	fsr0,f
  1252  00FA  3000               	movlw	high(0)
  1253  00FB  0080               	movwf	indf
  1254                           	line	103
  1255                           	
  1256  00FC                     l8095:	
  1257                           ;Sensor_PIR+CDS.c: 103: if(PIR->ADCount<10)
  1258  00FC  0822               	movf	(_PIR),w
  1259  00FD  3E05               	addlw	05h
  1260  00FE  0084               	movwf	fsr0
  1261  00FF  300A               	movlw	(0Ah)
  1262  0100  0200               	subwf	indf,w
  1263  0101  1803               	skipnc
  1264  0102  2904               	goto	u3951
  1265  0103  2905               	goto	u3950
  1266  0104                     u3951:
  1267  0104  290D               	goto	l8099
  1268  0105                     u3950:
  1269                           	line	104
  1270                           	
  1271  0105                     l8097:	
  1272                           ;Sensor_PIR+CDS.c: 104: PIR->ADCount++;
  1273  0105  3001               	movlw	(01h)
  1274  0106  00CF               	movwf	(??_PIR_Main+0)+0
  1275  0107  0822               	movf	(_PIR),w
  1276  0108  3E05               	addlw	05h
  1277  0109  0084               	movwf	fsr0
  1278  010A  084F               	movf	(??_PIR_Main+0)+0,w
  1279  010B  0780               	addwf	indf,f
  1280  010C  2912               	goto	l8101
  1281                           	line	105
  1282                           	
  1283  010D                     l5112:	
  1284                           	line	106
  1285                           	
  1286  010D                     l8099:	
  1287                           ;Sensor_PIR+CDS.c: 105: else
  1288                           ;Sensor_PIR+CDS.c: 106: PIR->ADCount=0;
  1289  010D  0822               	movf	(_PIR),w
  1290  010E  3E05               	addlw	05h
  1291  010F  0084               	movwf	fsr0
  1292  0110  0180               	clrf	indf
  1293  0111  2912               	goto	l8101
  1294                           	
  1295  0112                     l5113:	
  1296                           	line	108
  1297                           	
  1298  0112                     l8101:	
  1299                           ;Sensor_PIR+CDS.c: 108: PIR_Switch();
  1300  0112  118A  2743  118A   	fcall	_PIR_Switch
  1301                           	line	110
  1302                           	
  1303  0115                     l8103:	
  1304                           ;Sensor_PIR+CDS.c: 110: if(PIR->OK==1)
  1305  0115  1283               	bcf	status, 5	;RP0=0, select bank0
  1306  0116  1303               	bcf	status, 6	;RP1=0, select bank0
  1307  0117  0822               	movf	(_PIR),w
  1308  0118  3E13               	addlw	013h
  1309  0119  0084               	movwf	fsr0
  1310  011A  1383               	bcf	status, 7	;select IRP bank0
  1311  011B  1C80               	btfss	indf,1
  1312  011C  291E               	goto	u3961
  1313  011D  291F               	goto	u3960
  1314  011E                     u3961:
  1315  011E  2AF9               	goto	l8177
  1316  011F                     u3960:
  1317                           	line	112
  1318                           	
  1319  011F                     l8105:	
  1320                           ;Sensor_PIR+CDS.c: 111: {
  1321                           ;Sensor_PIR+CDS.c: 112: if(PIR->GO==1)
  1322  011F  0822               	movf	(_PIR),w
  1323  0120  3E13               	addlw	013h
  1324  0121  0084               	movwf	fsr0
  1325  0122  1C00               	btfss	indf,0
  1326  0123  2925               	goto	u3971
  1327  0124  2926               	goto	u3970
  1328  0125                     u3971:
  1329  0125  2B2A               	goto	l5145
  1330  0126                     u3970:
  1331                           	line	114
  1332                           	
  1333  0126                     l8107:	
  1334                           ;Sensor_PIR+CDS.c: 113: {
  1335                           ;Sensor_PIR+CDS.c: 114: PIR->GO=0;
  1336  0126  0822               	movf	(_PIR),w
  1337  0127  3E13               	addlw	013h
  1338  0128  0084               	movwf	fsr0
  1339  0129  1000               	bcf	indf,0
  1340                           	line	116
  1341                           ;Sensor_PIR+CDS.c: 116: if(PIR->Switch==1)
  1342  012A  0822               	movf	(_PIR),w
  1343  012B  3E13               	addlw	013h
  1344  012C  0084               	movwf	fsr0
  1345  012D  1D00               	btfss	indf,2
  1346  012E  2930               	goto	u3981
  1347  012F  2931               	goto	u3980
  1348  0130                     u3981:
  1349  0130  2B2A               	goto	l5145
  1350  0131                     u3980:
  1351                           	line	119
  1352                           	
  1353  0131                     l8109:	
  1354                           ;Sensor_PIR+CDS.c: 117: {
  1355                           ;Sensor_PIR+CDS.c: 119: if(PIR->RangeTime<100)
  1356  0131  0822               	movf	(_PIR),w
  1357  0132  3E1B               	addlw	01Bh
  1358  0133  0084               	movwf	fsr0
  1359  0134  3064               	movlw	(064h)
  1360  0135  0200               	subwf	indf,w
  1361  0136  1803               	skipnc
  1362  0137  2939               	goto	u3991
  1363  0138  293A               	goto	u3990
  1364  0139                     u3991:
  1365  0139  2942               	goto	l8113
  1366  013A                     u3990:
  1367                           	line	120
  1368                           	
  1369  013A                     l8111:	
  1370                           ;Sensor_PIR+CDS.c: 120: PIR->RangeTime++;
  1371  013A  3001               	movlw	(01h)
  1372  013B  00CF               	movwf	(??_PIR_Main+0)+0
  1373  013C  0822               	movf	(_PIR),w
  1374  013D  3E1B               	addlw	01Bh
  1375  013E  0084               	movwf	fsr0
  1376  013F  084F               	movf	(??_PIR_Main+0)+0,w
  1377  0140  0780               	addwf	indf,f
  1378  0141  29D5               	goto	l8141
  1379                           	line	121
  1380                           	
  1381  0142                     l5117:	
  1382                           	line	123
  1383                           	
  1384  0142                     l8113:	
  1385                           ;Sensor_PIR+CDS.c: 121: else
  1386                           ;Sensor_PIR+CDS.c: 122: {
  1387                           ;Sensor_PIR+CDS.c: 123: PIR->RangeTime=0;
  1388  0142  0822               	movf	(_PIR),w
  1389  0143  3E1B               	addlw	01Bh
  1390  0144  0084               	movwf	fsr0
  1391  0145  0180               	clrf	indf
  1392                           	line	124
  1393                           ;Sensor_PIR+CDS.c: 124: if(PIR->RangeCount>=90)
  1394  0146  0822               	movf	(_PIR),w
  1395  0147  3E1D               	addlw	01Dh
  1396  0148  0084               	movwf	fsr0
  1397  0149  305A               	movlw	(05Ah)
  1398  014A  0200               	subwf	indf,w
  1399  014B  1C03               	skipc
  1400  014C  294E               	goto	u4001
  1401  014D  294F               	goto	u4000
  1402  014E                     u4001:
  1403  014E  297F               	goto	l8123
  1404  014F                     u4000:
  1405                           	line	126
  1406                           	
  1407  014F                     l8115:	
  1408                           ;Sensor_PIR+CDS.c: 125: {
  1409                           ;Sensor_PIR+CDS.c: 126: PIR->RangeCount=0;
  1410  014F  0822               	movf	(_PIR),w
  1411  0150  3E1D               	addlw	01Dh
  1412  0151  0084               	movwf	fsr0
  1413  0152  0180               	clrf	indf
  1414                           	line	127
  1415                           ;Sensor_PIR+CDS.c: 127: PIR->RangeTime1=0;
  1416  0153  0822               	movf	(_PIR),w
  1417  0154  3E1C               	addlw	01Ch
  1418  0155  0084               	movwf	fsr0
  1419  0156  0180               	clrf	indf
  1420                           	line	128
  1421                           ;Sensor_PIR+CDS.c: 128: PIR->RangeCount1=0;
  1422  0157  0822               	movf	(_PIR),w
  1423  0158  3E1F               	addlw	01Fh
  1424  0159  0084               	movwf	fsr0
  1425  015A  0180               	clrf	indf
  1426                           	line	130
  1427                           ;Sensor_PIR+CDS.c: 130: if(PIR->RangeValue==8)
  1428  015B  0822               	movf	(_PIR),w
  1429  015C  3E1E               	addlw	01Eh
  1430  015D  0084               	movwf	fsr0
  1431  015E  0800               	movf	indf,w
  1432  015F  3A08               	xorlw	08h
  1433  0160  1D03               	skipz
  1434  0161  2963               	goto	u4011
  1435  0162  2964               	goto	u4010
  1436  0163                     u4011:
  1437  0163  296C               	goto	l8119
  1438  0164                     u4010:
  1439                           	line	131
  1440                           	
  1441  0164                     l8117:	
  1442                           ;Sensor_PIR+CDS.c: 131: PIR->RangeValue=25;
  1443  0164  3019               	movlw	(019h)
  1444  0165  00CF               	movwf	(??_PIR_Main+0)+0
  1445  0166  0822               	movf	(_PIR),w
  1446  0167  3E1E               	addlw	01Eh
  1447  0168  0084               	movwf	fsr0
  1448  0169  084F               	movf	(??_PIR_Main+0)+0,w
  1449  016A  0080               	movwf	indf
  1450  016B  29D5               	goto	l8141
  1451                           	line	132
  1452                           	
  1453  016C                     l5120:	
  1454                           	
  1455  016C                     l8119:	
  1456                           ;Sensor_PIR+CDS.c: 132: else if(PIR->RangeValue==25)
  1457  016C  0822               	movf	(_PIR),w
  1458  016D  3E1E               	addlw	01Eh
  1459  016E  0084               	movwf	fsr0
  1460  016F  0800               	movf	indf,w
  1461  0170  3A19               	xorlw	019h
  1462  0171  1D03               	skipz
  1463  0172  2974               	goto	u4021
  1464  0173  2975               	goto	u4020
  1465  0174                     u4021:
  1466  0174  29D5               	goto	l8141
  1467  0175                     u4020:
  1468                           	line	133
  1469                           	
  1470  0175                     l8121:	
  1471                           ;Sensor_PIR+CDS.c: 133: PIR->RangeValue=45;
  1472  0175  302D               	movlw	(02Dh)
  1473  0176  00CF               	movwf	(??_PIR_Main+0)+0
  1474  0177  0822               	movf	(_PIR),w
  1475  0178  3E1E               	addlw	01Eh
  1476  0179  0084               	movwf	fsr0
  1477  017A  084F               	movf	(??_PIR_Main+0)+0,w
  1478  017B  0080               	movwf	indf
  1479  017C  29D5               	goto	l8141
  1480                           	
  1481  017D                     l5122:	
  1482  017D  29D5               	goto	l8141
  1483                           	line	134
  1484                           	
  1485  017E                     l5121:	
  1486                           ;Sensor_PIR+CDS.c: 134: }
  1487  017E  29D5               	goto	l8141
  1488                           	line	135
  1489                           	
  1490  017F                     l5119:	
  1491                           	line	137
  1492                           	
  1493  017F                     l8123:	
  1494                           ;Sensor_PIR+CDS.c: 135: else
  1495                           ;Sensor_PIR+CDS.c: 136: {
  1496                           ;Sensor_PIR+CDS.c: 137: PIR->RangeCount1+=PIR->RangeCount;
  1497  017F  0822               	movf	(_PIR),w
  1498  0180  3E1D               	addlw	01Dh
  1499  0181  0084               	movwf	fsr0
  1500  0182  0800               	movf	indf,w
  1501  0183  00CF               	movwf	(??_PIR_Main+0)+0
  1502  0184  0822               	movf	(_PIR),w
  1503  0185  3E1F               	addlw	01Fh
  1504  0186  0084               	movwf	fsr0
  1505  0187  084F               	movf	(??_PIR_Main+0)+0,w
  1506  0188  0780               	addwf	indf,f
  1507                           	line	138
  1508                           	
  1509  0189                     l8125:	
  1510                           ;Sensor_PIR+CDS.c: 138: PIR->RangeCount=0;
  1511  0189  0822               	movf	(_PIR),w
  1512  018A  3E1D               	addlw	01Dh
  1513  018B  0084               	movwf	fsr0
  1514  018C  0180               	clrf	indf
  1515                           	line	140
  1516                           	
  1517  018D                     l8127:	
  1518                           ;Sensor_PIR+CDS.c: 140: if(PIR->RangeTime1<6)
  1519  018D  0822               	movf	(_PIR),w
  1520  018E  3E1C               	addlw	01Ch
  1521  018F  0084               	movwf	fsr0
  1522  0190  3006               	movlw	(06h)
  1523  0191  0200               	subwf	indf,w
  1524  0192  1803               	skipnc
  1525  0193  2995               	goto	u4031
  1526  0194  2996               	goto	u4030
  1527  0195                     u4031:
  1528  0195  299E               	goto	l8131
  1529  0196                     u4030:
  1530                           	line	141
  1531                           	
  1532  0196                     l8129:	
  1533                           ;Sensor_PIR+CDS.c: 141: PIR->RangeTime1++;
  1534  0196  3001               	movlw	(01h)
  1535  0197  00CF               	movwf	(??_PIR_Main+0)+0
  1536  0198  0822               	movf	(_PIR),w
  1537  0199  3E1C               	addlw	01Ch
  1538  019A  0084               	movwf	fsr0
  1539  019B  084F               	movf	(??_PIR_Main+0)+0,w
  1540  019C  0780               	addwf	indf,f
  1541  019D  29D5               	goto	l8141
  1542                           	line	142
  1543                           	
  1544  019E                     l5124:	
  1545                           	line	144
  1546                           	
  1547  019E                     l8131:	
  1548                           ;Sensor_PIR+CDS.c: 142: else
  1549                           ;Sensor_PIR+CDS.c: 143: {
  1550                           ;Sensor_PIR+CDS.c: 144: PIR->RangeTime1=0;
  1551  019E  0822               	movf	(_PIR),w
  1552  019F  3E1C               	addlw	01Ch
  1553  01A0  0084               	movwf	fsr0
  1554  01A1  0180               	clrf	indf
  1555                           	line	145
  1556                           ;Sensor_PIR+CDS.c: 145: if(PIR->RangeCount1<=10)
  1557  01A2  0822               	movf	(_PIR),w
  1558  01A3  3E1F               	addlw	01Fh
  1559  01A4  0084               	movwf	fsr0
  1560  01A5  300B               	movlw	(0Bh)
  1561  01A6  0200               	subwf	indf,w
  1562  01A7  1803               	skipnc
  1563  01A8  29AA               	goto	u4041
  1564  01A9  29AB               	goto	u4040
  1565  01AA                     u4041:
  1566  01AA  29CE               	goto	l5126
  1567  01AB                     u4040:
  1568                           	line	147
  1569                           	
  1570  01AB                     l8133:	
  1571                           ;Sensor_PIR+CDS.c: 146: {
  1572                           ;Sensor_PIR+CDS.c: 147: if(PIR->RangeValue==45)
  1573  01AB  0822               	movf	(_PIR),w
  1574  01AC  3E1E               	addlw	01Eh
  1575  01AD  0084               	movwf	fsr0
  1576  01AE  0800               	movf	indf,w
  1577  01AF  3A2D               	xorlw	02Dh
  1578  01B0  1D03               	skipz
  1579  01B1  29B3               	goto	u4051
  1580  01B2  29B4               	goto	u4050
  1581  01B3                     u4051:
  1582  01B3  29BC               	goto	l8137
  1583  01B4                     u4050:
  1584                           	line	148
  1585                           	
  1586  01B4                     l8135:	
  1587                           ;Sensor_PIR+CDS.c: 148: PIR->RangeValue=25;
  1588  01B4  3019               	movlw	(019h)
  1589  01B5  00CF               	movwf	(??_PIR_Main+0)+0
  1590  01B6  0822               	movf	(_PIR),w
  1591  01B7  3E1E               	addlw	01Eh
  1592  01B8  0084               	movwf	fsr0
  1593  01B9  084F               	movf	(??_PIR_Main+0)+0,w
  1594  01BA  0080               	movwf	indf
  1595  01BB  29CE               	goto	l5126
  1596                           	line	149
  1597                           	
  1598  01BC                     l5127:	
  1599                           	
  1600  01BC                     l8137:	
  1601                           ;Sensor_PIR+CDS.c: 149: else if(PIR->RangeValue==25)
  1602  01BC  0822               	movf	(_PIR),w
  1603  01BD  3E1E               	addlw	01Eh
  1604  01BE  0084               	movwf	fsr0
  1605  01BF  0800               	movf	indf,w
  1606  01C0  3A19               	xorlw	019h
  1607  01C1  1D03               	skipz
  1608  01C2  29C4               	goto	u4061
  1609  01C3  29C5               	goto	u4060
  1610  01C4                     u4061:
  1611  01C4  29CE               	goto	l5126
  1612  01C5                     u4060:
  1613                           	line	150
  1614                           	
  1615  01C5                     l8139:	
  1616                           ;Sensor_PIR+CDS.c: 150: PIR->RangeValue=8;
  1617  01C5  3008               	movlw	(08h)
  1618  01C6  00CF               	movwf	(??_PIR_Main+0)+0
  1619  01C7  0822               	movf	(_PIR),w
  1620  01C8  3E1E               	addlw	01Eh
  1621  01C9  0084               	movwf	fsr0
  1622  01CA  084F               	movf	(??_PIR_Main+0)+0,w
  1623  01CB  0080               	movwf	indf
  1624  01CC  29CE               	goto	l5126
  1625                           	
  1626  01CD                     l5129:	
  1627  01CD  29CE               	goto	l5126
  1628                           	line	151
  1629                           	
  1630  01CE                     l5128:	
  1631                           	
  1632  01CE                     l5126:	
  1633                           	line	152
  1634                           ;Sensor_PIR+CDS.c: 151: }
  1635                           ;Sensor_PIR+CDS.c: 152: PIR->RangeCount1=0;
  1636  01CE  0822               	movf	(_PIR),w
  1637  01CF  3E1F               	addlw	01Fh
  1638  01D0  0084               	movwf	fsr0
  1639  01D1  0180               	clrf	indf
  1640  01D2  29D5               	goto	l8141
  1641                           	line	153
  1642                           	
  1643  01D3                     l5125:	
  1644  01D3  29D5               	goto	l8141
  1645                           	line	154
  1646                           	
  1647  01D4                     l5123:	
  1648  01D4  29D5               	goto	l8141
  1649                           	line	155
  1650                           	
  1651  01D5                     l5118:	
  1652                           	line	159
  1653                           	
  1654  01D5                     l8141:	
  1655                           ;Sensor_PIR+CDS.c: 153: }
  1656                           ;Sensor_PIR+CDS.c: 154: }
  1657                           ;Sensor_PIR+CDS.c: 155: }
  1658                           ;Sensor_PIR+CDS.c: 159: if((PIR->SignalAD>=(PIR->CenterVoltage-PIR->RangeValue)) && (PIR
                                 ->SignalAD<=(PIR->CenterVoltage+PIR->RangeValue)))
  1659  01D5  0822               	movf	(_PIR),w
  1660  01D6  3E1E               	addlw	01Eh
  1661  01D7  0084               	movwf	fsr0
  1662  01D8  0800               	movf	indf,w
  1663  01D9  00CF               	movwf	(??_PIR_Main+0)+0
  1664  01DA  01D0               	clrf	(??_PIR_Main+0)+0+1
  1665  01DB  09CF               	comf	(??_PIR_Main+0)+0,f
  1666  01DC  09D0               	comf	(??_PIR_Main+0)+1,f
  1667  01DD  0ACF               	incf	(??_PIR_Main+0)+0,f
  1668  01DE  1903               	skipnz
  1669  01DF  0AD0               	incf	(??_PIR_Main+0)+1,f
  1670  01E0  0822               	movf	(_PIR),w
  1671  01E1  3E06               	addlw	06h
  1672  01E2  0084               	movwf	fsr0
  1673  01E3  0800               	movf	indf,w
  1674  01E4  074F               	addwf	0+(??_PIR_Main+0)+0,w
  1675  01E5  00D1               	movwf	(??_PIR_Main+2)+0
  1676  01E6  0850               	movf	1+(??_PIR_Main+0)+0,w
  1677  01E7  1803               	skipnc
  1678  01E8  0A50               	incf	1+(??_PIR_Main+0)+0,w
  1679  01E9  00D2               	movwf	((??_PIR_Main+2)+0)+1
  1680  01EA  0822               	movf	(_PIR),w
  1681  01EB  3E03               	addlw	03h
  1682  01EC  0084               	movwf	fsr0
  1683  01ED  0852               	movf	1+(??_PIR_Main+2)+0,w
  1684  01EE  3A80               	xorlw	80h
  1685  01EF  3C80               	sublw	080h
  1686  01F0  1D03               	skipz
  1687  01F1  29F4               	goto	u4075
  1688  01F2  0851               	movf	0+(??_PIR_Main+2)+0,w
  1689  01F3  0200               	subwf	indf,w
  1690  01F4                     u4075:
  1691                           
  1692  01F4  1C03               	skipc
  1693  01F5  29F7               	goto	u4071
  1694  01F6  29F8               	goto	u4070
  1695  01F7                     u4071:
  1696  01F7  2A6A               	goto	l8159
  1697  01F8                     u4070:
  1698                           	
  1699  01F8                     l8143:	
  1700  01F8  1283               	bcf	status, 5	;RP0=0, select bank0
  1701  01F9  1303               	bcf	status, 6	;RP1=0, select bank0
  1702  01FA  0822               	movf	(_PIR),w
  1703  01FB  3E1E               	addlw	01Eh
  1704  01FC  0084               	movwf	fsr
  1705  01FD  1383               	bcf	status, 7	;select IRP bank0
  1706  01FE  0800               	movf	indf,w
  1707  01FF  00CF               	movwf	(??_PIR_Main+0)+0
  1708  0200  0822               	movf	(_PIR),w
  1709  0201  3E06               	addlw	06h
  1710  0202  0084               	movwf	fsr0
  1711  0203  0800               	movf	indf,w
  1712  0204  074F               	addwf	(??_PIR_Main+0)+0,w
  1713  0205  00D0               	movwf	(??_PIR_Main+1)+0
  1714  0206  01D1               	clrf	(??_PIR_Main+1)+0+1
  1715  0207  0DD1               	rlf	1+(??_PIR_Main+1)+0,f
  1716                           	
  1717  0208  0822               	movf	(_PIR),w
  1718  0209  3E03               	addlw	03h
  1719  020A  0084               	movwf	fsr0
  1720  020B  0851               	movf	1+(??_PIR_Main+1)+0,w
  1721  020C  3A80               	xorlw	80h
  1722  020D  00D2               	movwf	(??_PIR_Main+3)+0
  1723  020E  3080               	movlw	80h
  1724  020F  0252               	subwf	(??_PIR_Main+3)+0,w
  1725  0210  1D03               	skipz
  1726  0211  2A14               	goto	u4085
  1727  0212  0800               	movf	indf,w
  1728  0213  0250               	subwf	0+(??_PIR_Main+1)+0,w
  1729  0214                     u4085:
  1730                           
  1731  0214  1C03               	skipc
  1732  0215  2A17               	goto	u4081
  1733  0216  2A18               	goto	u4080
  1734  0217                     u4081:
  1735  0217  2A6A               	goto	l8159
  1736  0218                     u4080:
  1737                           	line	161
  1738                           	
  1739  0218                     l8145:	
  1740                           ;Sensor_PIR+CDS.c: 160: {
  1741                           ;Sensor_PIR+CDS.c: 161: PIR->Count=0;
  1742  0218  1283               	bcf	status, 5	;RP0=0, select bank0
  1743  0219  1303               	bcf	status, 6	;RP1=0, select bank0
  1744  021A  0822               	movf	(_PIR),w
  1745  021B  3E14               	addlw	014h
  1746  021C  0084               	movwf	fsr0
  1747  021D  3000               	movlw	low(0)
  1748  021E  1383               	bcf	status, 7	;select IRP bank0
  1749  021F  0080               	movwf	indf
  1750  0220  0A84               	incf	fsr0,f
  1751  0221  3000               	movlw	high(0)
  1752  0222  0080               	movwf	indf
  1753                           	line	162
  1754                           	
  1755  0223                     l8147:	
  1756                           ;Sensor_PIR+CDS.c: 162: LED_Setting(0);
  1757  0223  3000               	movlw	(0)
  1758  0224  158A  276F  118A   	fcall	_LED_Setting
  1759                           	line	164
  1760                           	
  1761  0227                     l8149:	
  1762                           ;Sensor_PIR+CDS.c: 164: PIR->CloseTime++;
  1763  0227  1283               	bcf	status, 5	;RP0=0, select bank0
  1764  0228  1303               	bcf	status, 6	;RP1=0, select bank0
  1765  0229  0822               	movf	(_PIR),w
  1766  022A  3E16               	addlw	016h
  1767  022B  0084               	movwf	fsr0
  1768  022C  3001               	movlw	01h
  1769  022D  1383               	bcf	status, 7	;select IRP bank0
  1770  022E  0780               	addwf	indf,f
  1771  022F  0A84               	incf	fsr0,f
  1772  0230  1803               	skipnc
  1773  0231  0A80               	incf	indf,f
  1774                           	line	165
  1775                           	
  1776  0232                     l8151:	
  1777                           ;Sensor_PIR+CDS.c: 165: if(PIR->CloseTime == PIR->CloseTimeValue)
  1778  0232  0822               	movf	(_PIR),w
  1779  0233  3E18               	addlw	018h
  1780  0234  0084               	movwf	fsr0
  1781  0235  0800               	movf	indf,w
  1782  0236  00CF               	movwf	(??_PIR_Main+0)+0+0
  1783  0237  0A84               	incf	fsr0,f
  1784  0238  0800               	movf	indf,w
  1785  0239  00D0               	movwf	(??_PIR_Main+0)+0+1
  1786  023A  0822               	movf	(_PIR),w
  1787  023B  3E16               	addlw	016h
  1788  023C  0084               	movwf	fsr0
  1789  023D  0800               	movf	indf,w
  1790  023E  00D1               	movwf	(??_PIR_Main+2)+0+0
  1791  023F  0A84               	incf	fsr0,f
  1792  0240  0800               	movf	indf,w
  1793  0241  00D2               	movwf	(??_PIR_Main+2)+0+1
  1794  0242  0850               	movf	1+(??_PIR_Main+0)+0,w
  1795  0243  0652               	xorwf	1+(??_PIR_Main+2)+0,w
  1796  0244  1D03               	skipz
  1797  0245  2A48               	goto	u4095
  1798  0246  084F               	movf	0+(??_PIR_Main+0)+0,w
  1799  0247  0651               	xorwf	0+(??_PIR_Main+2)+0,w
  1800  0248                     u4095:
  1801                           
  1802  0248  1D03               	skipz
  1803  0249  2A4B               	goto	u4091
  1804  024A  2A4C               	goto	u4090
  1805  024B                     u4091:
  1806  024B  2B2A               	goto	l5145
  1807  024C                     u4090:
  1808                           	line	167
  1809                           	
  1810  024C                     l8153:	
  1811                           ;Sensor_PIR+CDS.c: 166: {
  1812                           ;Sensor_PIR+CDS.c: 167: PIR->CloseTime=0;
  1813  024C  0822               	movf	(_PIR),w
  1814  024D  3E16               	addlw	016h
  1815  024E  0084               	movwf	fsr0
  1816  024F  3000               	movlw	low(0)
  1817  0250  0080               	movwf	indf
  1818  0251  0A84               	incf	fsr0,f
  1819  0252  3000               	movlw	high(0)
  1820  0253  0080               	movwf	indf
  1821                           	line	168
  1822                           ;Sensor_PIR+CDS.c: 168: if(Dimmer->Lights==1 || Dimmer->Phase2 == 1) Dimmer_Control(0);
  1823  0254  0855               	movf	(_Dimmer),w
  1824  0255  3E0A               	addlw	0Ah
  1825  0256  0084               	movwf	fsr0
  1826  0257  1880               	btfsc	indf,1
  1827  0258  2A5A               	goto	u4101
  1828  0259  2A5B               	goto	u4100
  1829  025A                     u4101:
  1830  025A  2A63               	goto	l8157
  1831  025B                     u4100:
  1832                           	
  1833  025B                     l8155:	
  1834  025B  0855               	movf	(_Dimmer),w
  1835  025C  3E0A               	addlw	0Ah
  1836  025D  0084               	movwf	fsr0
  1837  025E  1D80               	btfss	indf,3
  1838  025F  2A61               	goto	u4111
  1839  0260  2A62               	goto	u4110
  1840  0261                     u4111:
  1841  0261  2B2A               	goto	l5145
  1842  0262                     u4110:
  1843  0262  2A63               	goto	l8157
  1844                           	
  1845  0263                     l5134:	
  1846                           	
  1847  0263                     l8157:	
  1848  0263  3000               	movlw	(0)
  1849  0264  118A  2681  118A   	fcall	_Dimmer_Control
  1850  0267  2B2A               	goto	l5145
  1851                           	
  1852  0268                     l5132:	
  1853  0268  2B2A               	goto	l5145
  1854                           	line	169
  1855                           	
  1856  0269                     l5131:	
  1857                           	line	171
  1858                           ;Sensor_PIR+CDS.c: 169: }
  1859                           ;Sensor_PIR+CDS.c: 171: }
  1860  0269  2B2A               	goto	l5145
  1861                           	line	172
  1862                           	
  1863  026A                     l5130:	
  1864                           	line	174
  1865                           	
  1866  026A                     l8159:	
  1867                           ;Sensor_PIR+CDS.c: 172: else
  1868                           ;Sensor_PIR+CDS.c: 173: {
  1869                           ;Sensor_PIR+CDS.c: 174: PIR->RangeCount++;
  1870  026A  3001               	movlw	(01h)
  1871  026B  1283               	bcf	status, 5	;RP0=0, select bank0
  1872  026C  1303               	bcf	status, 6	;RP1=0, select bank0
  1873  026D  00CF               	movwf	(??_PIR_Main+0)+0
  1874  026E  0822               	movf	(_PIR),w
  1875  026F  3E1D               	addlw	01Dh
  1876  0270  0084               	movwf	fsr0
  1877  0271  084F               	movf	(??_PIR_Main+0)+0,w
  1878  0272  1383               	bcf	status, 7	;select IRP bank0
  1879  0273  0780               	addwf	indf,f
  1880                           	line	175
  1881                           	
  1882  0274                     l8161:	
  1883                           ;Sensor_PIR+CDS.c: 175: if(PIR->Count<1)
  1884  0274  0822               	movf	(_PIR),w
  1885  0275  3E14               	addlw	014h
  1886  0276  0084               	movwf	fsr0
  1887  0277  0800               	movf	indf,w
  1888  0278  0A84               	incf	fsr0,f
  1889  0279  0400               	iorwf	indf,w
  1890  027A  1D03               	skipz
  1891  027B  2A7D               	goto	u4121
  1892  027C  2A7E               	goto	u4120
  1893  027D                     u4121:
  1894  027D  2A87               	goto	l8165
  1895  027E                     u4120:
  1896                           	line	176
  1897                           	
  1898  027E                     l8163:	
  1899                           ;Sensor_PIR+CDS.c: 176: PIR->Count++;
  1900  027E  0822               	movf	(_PIR),w
  1901  027F  3E14               	addlw	014h
  1902  0280  0084               	movwf	fsr0
  1903  0281  3001               	movlw	01h
  1904  0282  0780               	addwf	indf,f
  1905  0283  0A84               	incf	fsr0,f
  1906  0284  1803               	skipnc
  1907  0285  0A80               	incf	indf,f
  1908  0286  2AA4               	goto	l8169
  1909                           	line	177
  1910                           	
  1911  0287                     l5136:	
  1912                           	line	179
  1913                           	
  1914  0287                     l8165:	
  1915                           ;Sensor_PIR+CDS.c: 177: else
  1916                           ;Sensor_PIR+CDS.c: 178: {
  1917                           ;Sensor_PIR+CDS.c: 179: PIR->Count=0;
  1918  0287  0822               	movf	(_PIR),w
  1919  0288  3E14               	addlw	014h
  1920  0289  0084               	movwf	fsr0
  1921  028A  3000               	movlw	low(0)
  1922  028B  0080               	movwf	indf
  1923  028C  0A84               	incf	fsr0,f
  1924  028D  3000               	movlw	high(0)
  1925  028E  0080               	movwf	indf
  1926                           	line	180
  1927                           ;Sensor_PIR+CDS.c: 180: PIR->CloseTime=0;
  1928  028F  0822               	movf	(_PIR),w
  1929  0290  3E16               	addlw	016h
  1930  0291  0084               	movwf	fsr0
  1931  0292  3000               	movlw	low(0)
  1932  0293  0080               	movwf	indf
  1933  0294  0A84               	incf	fsr0,f
  1934  0295  3000               	movlw	high(0)
  1935  0296  0080               	movwf	indf
  1936                           	line	182
  1937                           ;Sensor_PIR+CDS.c: 182: if(Dimmer->Lights==0) Dimmer_Control(1);
  1938  0297  0855               	movf	(_Dimmer),w
  1939  0298  3E0A               	addlw	0Ah
  1940  0299  0084               	movwf	fsr0
  1941  029A  1880               	btfsc	indf,1
  1942  029B  2A9D               	goto	u4131
  1943  029C  2A9E               	goto	u4130
  1944  029D                     u4131:
  1945  029D  2AA4               	goto	l8169
  1946  029E                     u4130:
  1947                           	
  1948  029E                     l8167:	
  1949  029E  3001               	movlw	(01h)
  1950  029F  118A  2681  118A   	fcall	_Dimmer_Control
  1951  02A2  2AA4               	goto	l8169
  1952                           	
  1953  02A3                     l5138:	
  1954  02A3  2AA4               	goto	l8169
  1955                           	line	184
  1956                           	
  1957  02A4                     l5137:	
  1958                           	line	186
  1959                           	
  1960  02A4                     l8169:	
  1961                           ;Sensor_PIR+CDS.c: 184: }
  1962                           ;Sensor_PIR+CDS.c: 186: if(PIR->SignalAD<(PIR->CenterVoltage-PIR->RangeValue)) LED_Setti
                                 ng(1); else if(PIR->SignalAD>(PIR->CenterVoltage+PIR->RangeValue)) LED_Setting(2);
  1963  02A4  1283               	bcf	status, 5	;RP0=0, select bank0
  1964  02A5  1303               	bcf	status, 6	;RP1=0, select bank0
  1965  02A6  0822               	movf	(_PIR),w
  1966  02A7  3E1E               	addlw	01Eh
  1967  02A8  0084               	movwf	fsr0
  1968  02A9  1383               	bcf	status, 7	;select IRP bank0
  1969  02AA  0800               	movf	indf,w
  1970  02AB  00CF               	movwf	(??_PIR_Main+0)+0
  1971  02AC  01D0               	clrf	(??_PIR_Main+0)+0+1
  1972  02AD  09CF               	comf	(??_PIR_Main+0)+0,f
  1973  02AE  09D0               	comf	(??_PIR_Main+0)+1,f
  1974  02AF  0ACF               	incf	(??_PIR_Main+0)+0,f
  1975  02B0  1903               	skipnz
  1976  02B1  0AD0               	incf	(??_PIR_Main+0)+1,f
  1977  02B2  0822               	movf	(_PIR),w
  1978  02B3  3E06               	addlw	06h
  1979  02B4  0084               	movwf	fsr0
  1980  02B5  0800               	movf	indf,w
  1981  02B6  074F               	addwf	0+(??_PIR_Main+0)+0,w
  1982  02B7  00D1               	movwf	(??_PIR_Main+2)+0
  1983  02B8  0850               	movf	1+(??_PIR_Main+0)+0,w
  1984  02B9  1803               	skipnc
  1985  02BA  0A50               	incf	1+(??_PIR_Main+0)+0,w
  1986  02BB  00D2               	movwf	((??_PIR_Main+2)+0)+1
  1987  02BC  0822               	movf	(_PIR),w
  1988  02BD  3E03               	addlw	03h
  1989  02BE  0084               	movwf	fsr0
  1990  02BF  0852               	movf	1+(??_PIR_Main+2)+0,w
  1991  02C0  3A80               	xorlw	80h
  1992  02C1  3C80               	sublw	080h
  1993  02C2  1D03               	skipz
  1994  02C3  2AC6               	goto	u4145
  1995  02C4  0851               	movf	0+(??_PIR_Main+2)+0,w
  1996  02C5  0200               	subwf	indf,w
  1997  02C6                     u4145:
  1998                           
  1999  02C6  1803               	skipnc
  2000  02C7  2AC9               	goto	u4141
  2001  02C8  2ACA               	goto	u4140
  2002  02C9                     u4141:
  2003  02C9  2ACF               	goto	l8173
  2004  02CA                     u4140:
  2005                           	
  2006  02CA                     l8171:	
  2007  02CA  3001               	movlw	(01h)
  2008  02CB  158A  276F  118A   	fcall	_LED_Setting
  2009  02CE  2B2A               	goto	l5145
  2010                           	
  2011  02CF                     l5139:	
  2012                           	
  2013  02CF                     l8173:	
  2014  02CF  1283               	bcf	status, 5	;RP0=0, select bank0
  2015  02D0  1303               	bcf	status, 6	;RP1=0, select bank0
  2016  02D1  0822               	movf	(_PIR),w
  2017  02D2  3E1E               	addlw	01Eh
  2018  02D3  0084               	movwf	fsr
  2019  02D4  1383               	bcf	status, 7	;select IRP bank0
  2020  02D5  0800               	movf	indf,w
  2021  02D6  00CF               	movwf	(??_PIR_Main+0)+0
  2022  02D7  0822               	movf	(_PIR),w
  2023  02D8  3E06               	addlw	06h
  2024  02D9  0084               	movwf	fsr0
  2025  02DA  0800               	movf	indf,w
  2026  02DB  074F               	addwf	(??_PIR_Main+0)+0,w
  2027  02DC  00D0               	movwf	(??_PIR_Main+1)+0
  2028  02DD  01D1               	clrf	(??_PIR_Main+1)+0+1
  2029  02DE  0DD1               	rlf	1+(??_PIR_Main+1)+0,f
  2030                           	
  2031  02DF  0822               	movf	(_PIR),w
  2032  02E0  3E03               	addlw	03h
  2033  02E1  0084               	movwf	fsr0
  2034  02E2  0851               	movf	1+(??_PIR_Main+1)+0,w
  2035  02E3  3A80               	xorlw	80h
  2036  02E4  00D2               	movwf	(??_PIR_Main+3)+0
  2037  02E5  3080               	movlw	80h
  2038  02E6  0252               	subwf	(??_PIR_Main+3)+0,w
  2039  02E7  1D03               	skipz
  2040  02E8  2AEB               	goto	u4155
  2041  02E9  0800               	movf	indf,w
  2042  02EA  0250               	subwf	0+(??_PIR_Main+1)+0,w
  2043  02EB                     u4155:
  2044                           
  2045  02EB  1803               	skipnc
  2046  02EC  2AEE               	goto	u4151
  2047  02ED  2AEF               	goto	u4150
  2048  02EE                     u4151:
  2049  02EE  2B2A               	goto	l5145
  2050  02EF                     u4150:
  2051                           	
  2052  02EF                     l8175:	
  2053  02EF  3002               	movlw	(02h)
  2054  02F0  158A  276F  118A   	fcall	_LED_Setting
  2055  02F3  2B2A               	goto	l5145
  2056                           	
  2057  02F4                     l5141:	
  2058  02F4  2B2A               	goto	l5145
  2059                           	line	187
  2060                           	
  2061  02F5                     l5140:	
  2062  02F5  2B2A               	goto	l5145
  2063                           	
  2064  02F6                     l5135:	
  2065  02F6  2B2A               	goto	l5145
  2066                           	line	188
  2067                           	
  2068  02F7                     l5116:	
  2069  02F7  2B2A               	goto	l5145
  2070                           	line	189
  2071                           	
  2072  02F8                     l5115:	
  2073                           	line	190
  2074                           ;Sensor_PIR+CDS.c: 187: }
  2075                           ;Sensor_PIR+CDS.c: 188: }
  2076                           ;Sensor_PIR+CDS.c: 189: }
  2077                           ;Sensor_PIR+CDS.c: 190: }
  2078  02F8  2B2A               	goto	l5145
  2079                           	line	191
  2080                           	
  2081  02F9                     l5114:	
  2082                           	line	194
  2083                           	
  2084  02F9                     l8177:	
  2085                           ;Sensor_PIR+CDS.c: 191: else
  2086                           ;Sensor_PIR+CDS.c: 192: {
  2087                           ;Sensor_PIR+CDS.c: 194: if(PIR->Count<250)
  2088  02F9  1283               	bcf	status, 5	;RP0=0, select bank0
  2089  02FA  1303               	bcf	status, 6	;RP1=0, select bank0
  2090  02FB  0822               	movf	(_PIR),w
  2091  02FC  3E14               	addlw	014h
  2092  02FD  0084               	movwf	fsr0
  2093  02FE  1383               	bcf	status, 7	;select IRP bank0
  2094  02FF  0800               	movf	indf,w
  2095  0300  00CF               	movwf	(??_PIR_Main+0)+0+0
  2096  0301  0A84               	incf	fsr0,f
  2097  0302  0800               	movf	indf,w
  2098  0303  00D0               	movwf	(??_PIR_Main+0)+0+1
  2099  0304  3000               	movlw	high(0FAh)
  2100  0305  0250               	subwf	1+(??_PIR_Main+0)+0,w
  2101  0306  30FA               	movlw	low(0FAh)
  2102  0307  1903               	skipnz
  2103  0308  024F               	subwf	0+(??_PIR_Main+0)+0,w
  2104  0309  1803               	skipnc
  2105  030A  2B0C               	goto	u4161
  2106  030B  2B0D               	goto	u4160
  2107  030C                     u4161:
  2108  030C  2B16               	goto	l8181
  2109  030D                     u4160:
  2110                           	line	195
  2111                           	
  2112  030D                     l8179:	
  2113                           ;Sensor_PIR+CDS.c: 195: PIR->Count++;
  2114  030D  0822               	movf	(_PIR),w
  2115  030E  3E14               	addlw	014h
  2116  030F  0084               	movwf	fsr0
  2117  0310  3001               	movlw	01h
  2118  0311  0780               	addwf	indf,f
  2119  0312  0A84               	incf	fsr0,f
  2120  0313  1803               	skipnc
  2121  0314  0A80               	incf	indf,f
  2122  0315  2B2A               	goto	l5145
  2123                           	line	196
  2124                           	
  2125  0316                     l5143:	
  2126                           	line	198
  2127                           	
  2128  0316                     l8181:	
  2129                           ;Sensor_PIR+CDS.c: 196: else
  2130                           ;Sensor_PIR+CDS.c: 197: {
  2131                           ;Sensor_PIR+CDS.c: 198: PIR->Count=0;
  2132  0316  0822               	movf	(_PIR),w
  2133  0317  3E14               	addlw	014h
  2134  0318  0084               	movwf	fsr0
  2135  0319  3000               	movlw	low(0)
  2136  031A  0080               	movwf	indf
  2137  031B  0A84               	incf	fsr0,f
  2138  031C  3000               	movlw	high(0)
  2139  031D  0080               	movwf	indf
  2140                           	line	199
  2141                           ;Sensor_PIR+CDS.c: 199: PIR->OK=1;
  2142  031E  0822               	movf	(_PIR),w
  2143  031F  3E13               	addlw	013h
  2144  0320  0084               	movwf	fsr0
  2145  0321  1480               	bsf	indf,1
  2146                           	line	200
  2147                           	
  2148  0322                     l8183:	
  2149                           ;Sensor_PIR+CDS.c: 200: LED_Setting(0);
  2150  0322  3000               	movlw	(0)
  2151  0323  158A  276F  118A   	fcall	_LED_Setting
  2152  0326  2B2A               	goto	l5145
  2153                           	line	202
  2154                           ;Sensor_PIR+CDS.c: 201: ;
  2155                           	
  2156  0327                     l5144:	
  2157  0327  2B2A               	goto	l5145
  2158                           	line	203
  2159                           	
  2160  0328                     l5142:	
  2161  0328  2B2A               	goto	l5145
  2162                           	line	205
  2163                           	
  2164  0329                     l5101:	
  2165  0329  2B2A               	goto	l5145
  2166                           	line	206
  2167                           	
  2168  032A                     l5100:	
  2169                           	line	207
  2170                           	
  2171  032A                     l5145:	
  2172  032A  0008               	return
  2173                           	opt stack 0
  2174                           GLOBAL	__end_of_PIR_Main
  2175  032B                     	__end_of_PIR_Main:
  2176 ;; =============== function _PIR_Main ends ============
  2177                           
  2178                           	signat	_PIR_Main,88
  2179                           	global	_PIR_Switch
  2180                           psect	text382,local,class=CODE,delta=2
  2181                           global __ptext382
  2182  0743                     __ptext382:
  2183                           
  2184 ;; *************** function _PIR_Switch *****************
  2185 ;; Defined at:
  2186 ;;		line 211 in file "G:\Program\PIC\Source_File\Sensor_PIR+CDS.c"
  2187 ;; Parameters:    Size  Location     Type
  2188 ;;		None
  2189 ;; Auto vars:     Size  Location     Type
  2190 ;;		None
  2191 ;; Return value:  Size  Location     Type
  2192 ;;		None               void
  2193 ;; Registers used:
  2194 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2195 ;; Tracked objects:
  2196 ;;		On entry : 0/0
  2197 ;;		On exit  : 0/0
  2198 ;;		Unchanged: 0/0
  2199 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2200 ;;      Params:         0       0       0       0
  2201 ;;      Locals:         0       0       0       0
  2202 ;;      Temps:          0       1       0       0
  2203 ;;      Totals:         0       1       0       0
  2204 ;;Total ram usage:        1 bytes
  2205 ;; Hardware stack levels used:    1
  2206 ;; Hardware stack levels required when called:    3
  2207 ;; This function calls:
  2208 ;;		_LED_Setting
  2209 ;;		_Dimmer_Control
  2210 ;; This function is called by:
  2211 ;;		_PIR_Main
  2212 ;; This function uses a non-reentrant model
  2213 ;;
  2214                           psect	text382
  2215                           	file	"G:\Program\PIC\Source_File\Sensor_PIR+CDS.c"
  2216                           	line	211
  2217                           	global	__size_of_PIR_Switch
  2218  0052                     	__size_of_PIR_Switch	equ	__end_of_PIR_Switch-_PIR_Switch
  2219                           	
  2220  0743                     _PIR_Switch:	
  2221                           	opt	stack 3
  2222                           ; Regs used in _PIR_Switch: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2223                           	line	212
  2224                           	
  2225  0743                     l8027:	
  2226                           ;Sensor_PIR+CDS.c: 212: if(PIR->Switch==0)
  2227  0743  1283               	bcf	status, 5	;RP0=0, select bank0
  2228  0744  1303               	bcf	status, 6	;RP1=0, select bank0
  2229  0745  0822               	movf	(_PIR),w
  2230  0746  3E13               	addlw	013h
  2231  0747  0084               	movwf	fsr0
  2232  0748  1383               	bcf	status, 7	;select IRP bank0
  2233  0749  1900               	btfsc	indf,2
  2234  074A  2F4C               	goto	u3811
  2235  074B  2F4D               	goto	u3810
  2236  074C                     u3811:
  2237  074C  2F67               	goto	l8035
  2238  074D                     u3810:
  2239                           	line	214
  2240                           	
  2241  074D                     l8029:	
  2242                           ;Sensor_PIR+CDS.c: 213: {
  2243                           ;Sensor_PIR+CDS.c: 214: if(PIRSwitch==1 && CDS->OK==1)
  2244  074D  0878               	movf	(_PIRSwitch),w
  2245  074E  3A01               	xorlw	01h
  2246  074F  1D03               	skipz
  2247  0750  2F52               	goto	u3821
  2248  0751  2F53               	goto	u3820
  2249  0752                     u3821:
  2250  0752  2F94               	goto	l5157
  2251  0753                     u3820:
  2252                           	
  2253  0753                     l8031:	
  2254  0753  0821               	movf	(_CDS),w
  2255  0754  3E02               	addlw	02h
  2256  0755  0084               	movwf	fsr0
  2257  0756  1C00               	btfss	indf,0
  2258  0757  2F59               	goto	u3831
  2259  0758  2F5A               	goto	u3830
  2260  0759                     u3831:
  2261  0759  2F94               	goto	l5157
  2262  075A                     u3830:
  2263                           	line	216
  2264                           	
  2265  075A                     l8033:	
  2266                           ;Sensor_PIR+CDS.c: 215: {
  2267                           ;Sensor_PIR+CDS.c: 216: PIR->Switch=1;
  2268  075A  0822               	movf	(_PIR),w
  2269  075B  3E13               	addlw	013h
  2270  075C  0084               	movwf	fsr0
  2271  075D  1500               	bsf	indf,2
  2272                           	line	217
  2273                           ;Sensor_PIR+CDS.c: 217: PIR->RangeValue=8;
  2274  075E  3008               	movlw	(08h)
  2275  075F  00C8               	movwf	(??_PIR_Switch+0)+0
  2276  0760  0822               	movf	(_PIR),w
  2277  0761  3E1E               	addlw	01Eh
  2278  0762  0084               	movwf	fsr0
  2279  0763  0848               	movf	(??_PIR_Switch+0)+0,w
  2280  0764  0080               	movwf	indf
  2281  0765  2F94               	goto	l5157
  2282                           	line	218
  2283                           	
  2284  0766                     l5149:	
  2285                           	line	219
  2286                           ;Sensor_PIR+CDS.c: 218: }
  2287                           ;Sensor_PIR+CDS.c: 219: }
  2288  0766  2F94               	goto	l5157
  2289                           	line	220
  2290                           	
  2291  0767                     l5148:	
  2292                           	line	222
  2293                           	
  2294  0767                     l8035:	
  2295                           ;Sensor_PIR+CDS.c: 220: else
  2296                           ;Sensor_PIR+CDS.c: 221: {
  2297                           ;Sensor_PIR+CDS.c: 222: if(PIRSwitch==0 || CDS->OK==0)
  2298  0767  0878               	movf	(_PIRSwitch),w
  2299  0768  1D03               	skipz
  2300  0769  2F6B               	goto	u3840
  2301  076A  2F73               	goto	l8039
  2302  076B                     u3840:
  2303                           	
  2304  076B                     l8037:	
  2305  076B  0821               	movf	(_CDS),w
  2306  076C  3E02               	addlw	02h
  2307  076D  0084               	movwf	fsr0
  2308  076E  1800               	btfsc	indf,0
  2309  076F  2F71               	goto	u3851
  2310  0770  2F72               	goto	u3850
  2311  0771                     u3851:
  2312  0771  2F94               	goto	l5157
  2313  0772                     u3850:
  2314  0772  2F73               	goto	l8039
  2315                           	
  2316  0773                     l5153:	
  2317                           	line	224
  2318                           	
  2319  0773                     l8039:	
  2320                           ;Sensor_PIR+CDS.c: 223: {
  2321                           ;Sensor_PIR+CDS.c: 224: PIR->Switch=0;
  2322  0773  0822               	movf	(_PIR),w
  2323  0774  3E13               	addlw	013h
  2324  0775  0084               	movwf	fsr0
  2325  0776  1100               	bcf	indf,2
  2326                           	line	225
  2327                           	
  2328  0777                     l8041:	
  2329                           ;Sensor_PIR+CDS.c: 225: LED_Setting(0);
  2330  0777  3000               	movlw	(0)
  2331  0778  158A  276F  118A   	fcall	_LED_Setting
  2332                           	line	226
  2333                           	
  2334  077B                     l8043:	
  2335                           ;Sensor_PIR+CDS.c: 226: if(Dimmer->Lights==1 || Dimmer->Phase2 == 1) Dimmer_Control(0);
  2336  077B  1283               	bcf	status, 5	;RP0=0, select bank0
  2337  077C  1303               	bcf	status, 6	;RP1=0, select bank0
  2338  077D  0855               	movf	(_Dimmer),w
  2339  077E  3E0A               	addlw	0Ah
  2340  077F  0084               	movwf	fsr0
  2341  0780  1383               	bcf	status, 7	;select IRP bank0
  2342  0781  1880               	btfsc	indf,1
  2343  0782  2F84               	goto	u3861
  2344  0783  2F85               	goto	u3860
  2345  0784                     u3861:
  2346  0784  2F8D               	goto	l8047
  2347  0785                     u3860:
  2348                           	
  2349  0785                     l8045:	
  2350  0785  0855               	movf	(_Dimmer),w
  2351  0786  3E0A               	addlw	0Ah
  2352  0787  0084               	movwf	fsr0
  2353  0788  1D80               	btfss	indf,3
  2354  0789  2F8B               	goto	u3871
  2355  078A  2F8C               	goto	u3870
  2356  078B                     u3871:
  2357  078B  2F94               	goto	l5157
  2358  078C                     u3870:
  2359  078C  2F8D               	goto	l8047
  2360                           	
  2361  078D                     l5156:	
  2362                           	
  2363  078D                     l8047:	
  2364  078D  3000               	movlw	(0)
  2365  078E  118A  2681  118A   	fcall	_Dimmer_Control
  2366  0791  2F94               	goto	l5157
  2367                           	
  2368  0792                     l5154:	
  2369  0792  2F94               	goto	l5157
  2370                           	line	227
  2371                           	
  2372  0793                     l5151:	
  2373  0793  2F94               	goto	l5157
  2374                           	line	228
  2375                           	
  2376  0794                     l5150:	
  2377                           	line	229
  2378                           	
  2379  0794                     l5157:	
  2380  0794  0008               	return
  2381                           	opt stack 0
  2382                           GLOBAL	__end_of_PIR_Switch
  2383  0795                     	__end_of_PIR_Switch:
  2384 ;; =============== function _PIR_Switch ends ============
  2385                           
  2386                           	signat	_PIR_Switch,88
  2387                           	global	___awdiv
  2388                           psect	text383,local,class=CODE,delta=2
  2389                           global __ptext383
  2390  060B                     __ptext383:
  2391                           
  2392 ;; *************** function ___awdiv *****************
  2393 ;; Defined at:
  2394 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awdiv.c"
  2395 ;; Parameters:    Size  Location     Type
  2396 ;;  divisor         2    0[BANK0 ] int 
  2397 ;;  dividend        2    2[BANK0 ] int 
  2398 ;; Auto vars:     Size  Location     Type
  2399 ;;  quotient        2    7[BANK0 ] int 
  2400 ;;  sign            1    6[BANK0 ] unsigned char 
  2401 ;;  counter         1    5[BANK0 ] unsigned char 
  2402 ;; Return value:  Size  Location     Type
  2403 ;;                  2    0[BANK0 ] int 
  2404 ;; Registers used:
  2405 ;;		wreg, status,2, status,0
  2406 ;; Tracked objects:
  2407 ;;		On entry : 0/0
  2408 ;;		On exit  : 0/0
  2409 ;;		Unchanged: 0/0
  2410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2411 ;;      Params:         0       4       0       0
  2412 ;;      Locals:         0       4       0       0
  2413 ;;      Temps:          0       1       0       0
  2414 ;;      Totals:         0       9       0       0
  2415 ;;Total ram usage:        9 bytes
  2416 ;; Hardware stack levels used:    1
  2417 ;; Hardware stack levels required when called:    2
  2418 ;; This function calls:
  2419 ;;		Nothing
  2420 ;; This function is called by:
  2421 ;;		_PIR_Main
  2422 ;; This function uses a non-reentrant model
  2423 ;;
  2424                           psect	text383
  2425                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awdiv.c"
  2426                           	line	5
  2427                           	global	__size_of___awdiv
  2428  0076                     	__size_of___awdiv	equ	__end_of___awdiv-___awdiv
  2429                           	
  2430  060B                     ___awdiv:	
  2431                           	opt	stack 4
  2432                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2433                           	line	9
  2434                           	
  2435  060B                     l7987:	
  2436  060B  1283               	bcf	status, 5	;RP0=0, select bank0
  2437  060C  1303               	bcf	status, 6	;RP1=0, select bank0
  2438  060D  01CC               	clrf	(___awdiv@sign)
  2439                           	line	10
  2440  060E  1FC7               	btfss	(___awdiv@divisor+1),7
  2441  060F  2E11               	goto	u3711
  2442  0610  2E12               	goto	u3710
  2443  0611                     u3711:
  2444  0611  2E1B               	goto	l7991
  2445  0612                     u3710:
  2446                           	line	11
  2447                           	
  2448  0612                     l7989:	
  2449  0612  09C6               	comf	(___awdiv@divisor),f
  2450  0613  09C7               	comf	(___awdiv@divisor+1),f
  2451  0614  0AC6               	incf	(___awdiv@divisor),f
  2452  0615  1903               	skipnz
  2453  0616  0AC7               	incf	(___awdiv@divisor+1),f
  2454                           	line	12
  2455  0617  01CC               	clrf	(___awdiv@sign)
  2456  0618  1403               	bsf	status,0
  2457  0619  0DCC               	rlf	(___awdiv@sign),f
  2458  061A  2E1B               	goto	l7991
  2459                           	line	13
  2460                           	
  2461  061B                     l6145:	
  2462                           	line	14
  2463                           	
  2464  061B                     l7991:	
  2465  061B  1FC9               	btfss	(___awdiv@dividend+1),7
  2466  061C  2E1E               	goto	u3721
  2467  061D  2E1F               	goto	u3720
  2468  061E                     u3721:
  2469  061E  2E29               	goto	l7997
  2470  061F                     u3720:
  2471                           	line	15
  2472                           	
  2473  061F                     l7993:	
  2474  061F  09C8               	comf	(___awdiv@dividend),f
  2475  0620  09C9               	comf	(___awdiv@dividend+1),f
  2476  0621  0AC8               	incf	(___awdiv@dividend),f
  2477  0622  1903               	skipnz
  2478  0623  0AC9               	incf	(___awdiv@dividend+1),f
  2479                           	line	16
  2480                           	
  2481  0624                     l7995:	
  2482  0624  3001               	movlw	(01h)
  2483  0625  00CA               	movwf	(??___awdiv+0)+0
  2484  0626  084A               	movf	(??___awdiv+0)+0,w
  2485  0627  06CC               	xorwf	(___awdiv@sign),f
  2486  0628  2E29               	goto	l7997
  2487                           	line	17
  2488                           	
  2489  0629                     l6146:	
  2490                           	line	18
  2491                           	
  2492  0629                     l7997:	
  2493  0629  01CD               	clrf	(___awdiv@quotient)
  2494  062A  01CE               	clrf	(___awdiv@quotient+1)
  2495                           	line	19
  2496                           	
  2497  062B                     l7999:	
  2498  062B  0847               	movf	(___awdiv@divisor+1),w
  2499  062C  0446               	iorwf	(___awdiv@divisor),w
  2500  062D  1903               	skipnz
  2501  062E  2E30               	goto	u3731
  2502  062F  2E31               	goto	u3730
  2503  0630                     u3731:
  2504  0630  2E6F               	goto	l8019
  2505  0631                     u3730:
  2506                           	line	20
  2507                           	
  2508  0631                     l8001:	
  2509  0631  01CB               	clrf	(___awdiv@counter)
  2510  0632  1403               	bsf	status,0
  2511  0633  0DCB               	rlf	(___awdiv@counter),f
  2512                           	line	21
  2513  0634  2E41               	goto	l8007
  2514                           	
  2515  0635                     l6149:	
  2516                           	line	22
  2517                           	
  2518  0635                     l8003:	
  2519  0635  3001               	movlw	01h
  2520                           	
  2521  0636                     u3745:
  2522  0636  1003               	clrc
  2523  0637  0DC6               	rlf	(___awdiv@divisor),f
  2524  0638  0DC7               	rlf	(___awdiv@divisor+1),f
  2525  0639  3EFF               	addlw	-1
  2526  063A  1D03               	skipz
  2527  063B  2E36               	goto	u3745
  2528                           	line	23
  2529                           	
  2530  063C                     l8005:	
  2531  063C  3001               	movlw	(01h)
  2532  063D  00CA               	movwf	(??___awdiv+0)+0
  2533  063E  084A               	movf	(??___awdiv+0)+0,w
  2534  063F  07CB               	addwf	(___awdiv@counter),f
  2535  0640  2E41               	goto	l8007
  2536                           	line	24
  2537                           	
  2538  0641                     l6148:	
  2539                           	line	21
  2540                           	
  2541  0641                     l8007:	
  2542  0641  1FC7               	btfss	(___awdiv@divisor+1),(15)&7
  2543  0642  2E44               	goto	u3751
  2544  0643  2E45               	goto	u3750
  2545  0644                     u3751:
  2546  0644  2E35               	goto	l8003
  2547  0645                     u3750:
  2548  0645  2E47               	goto	l8009
  2549                           	
  2550  0646                     l6150:	
  2551  0646  2E47               	goto	l8009
  2552                           	line	25
  2553                           	
  2554  0647                     l6151:	
  2555                           	line	26
  2556                           	
  2557  0647                     l8009:	
  2558  0647  3001               	movlw	01h
  2559                           	
  2560  0648                     u3765:
  2561  0648  1003               	clrc
  2562  0649  0DCD               	rlf	(___awdiv@quotient),f
  2563  064A  0DCE               	rlf	(___awdiv@quotient+1),f
  2564  064B  3EFF               	addlw	-1
  2565  064C  1D03               	skipz
  2566  064D  2E48               	goto	u3765
  2567                           	line	27
  2568  064E  0847               	movf	(___awdiv@divisor+1),w
  2569  064F  0249               	subwf	(___awdiv@dividend+1),w
  2570  0650  1D03               	skipz
  2571  0651  2E54               	goto	u3775
  2572  0652  0846               	movf	(___awdiv@divisor),w
  2573  0653  0248               	subwf	(___awdiv@dividend),w
  2574  0654                     u3775:
  2575  0654  1C03               	skipc
  2576  0655  2E57               	goto	u3771
  2577  0656  2E58               	goto	u3770
  2578  0657                     u3771:
  2579  0657  2E60               	goto	l8015
  2580  0658                     u3770:
  2581                           	line	28
  2582                           	
  2583  0658                     l8011:	
  2584  0658  0846               	movf	(___awdiv@divisor),w
  2585  0659  02C8               	subwf	(___awdiv@dividend),f
  2586  065A  0847               	movf	(___awdiv@divisor+1),w
  2587  065B  1C03               	skipc
  2588  065C  03C9               	decf	(___awdiv@dividend+1),f
  2589  065D  02C9               	subwf	(___awdiv@dividend+1),f
  2590                           	line	29
  2591                           	
  2592  065E                     l8013:	
  2593  065E  144D               	bsf	(___awdiv@quotient)+(0/8),(0)&7
  2594  065F  2E60               	goto	l8015
  2595                           	line	30
  2596                           	
  2597  0660                     l6152:	
  2598                           	line	31
  2599                           	
  2600  0660                     l8015:	
  2601  0660  3001               	movlw	01h
  2602                           	
  2603  0661                     u3785:
  2604  0661  1003               	clrc
  2605  0662  0CC7               	rrf	(___awdiv@divisor+1),f
  2606  0663  0CC6               	rrf	(___awdiv@divisor),f
  2607  0664  3EFF               	addlw	-1
  2608  0665  1D03               	skipz
  2609  0666  2E61               	goto	u3785
  2610                           	line	32
  2611                           	
  2612  0667                     l8017:	
  2613  0667  3001               	movlw	low(01h)
  2614  0668  02CB               	subwf	(___awdiv@counter),f
  2615  0669  1D03               	btfss	status,2
  2616  066A  2E6C               	goto	u3791
  2617  066B  2E6D               	goto	u3790
  2618  066C                     u3791:
  2619  066C  2E47               	goto	l8009
  2620  066D                     u3790:
  2621  066D  2E6F               	goto	l8019
  2622                           	
  2623  066E                     l6153:	
  2624  066E  2E6F               	goto	l8019
  2625                           	line	33
  2626                           	
  2627  066F                     l6147:	
  2628                           	line	34
  2629                           	
  2630  066F                     l8019:	
  2631  066F  084C               	movf	(___awdiv@sign),w
  2632  0670  1D03               	skipz
  2633  0671  2E73               	goto	u3800
  2634  0672  2E79               	goto	l8023
  2635  0673                     u3800:
  2636                           	line	35
  2637                           	
  2638  0673                     l8021:	
  2639  0673  09CD               	comf	(___awdiv@quotient),f
  2640  0674  09CE               	comf	(___awdiv@quotient+1),f
  2641  0675  0ACD               	incf	(___awdiv@quotient),f
  2642  0676  1903               	skipnz
  2643  0677  0ACE               	incf	(___awdiv@quotient+1),f
  2644  0678  2E79               	goto	l8023
  2645                           	
  2646  0679                     l6154:	
  2647                           	line	36
  2648                           	
  2649  0679                     l8023:	
  2650  0679  084E               	movf	(___awdiv@quotient+1),w
  2651  067A  01C7               	clrf	(?___awdiv+1)
  2652  067B  07C7               	addwf	(?___awdiv+1)
  2653  067C  084D               	movf	(___awdiv@quotient),w
  2654  067D  01C6               	clrf	(?___awdiv)
  2655  067E  07C6               	addwf	(?___awdiv)
  2656                           
  2657  067F  2E80               	goto	l6155
  2658                           	
  2659  0680                     l8025:	
  2660                           	line	37
  2661                           	
  2662  0680                     l6155:	
  2663  0680  0008               	return
  2664                           	opt stack 0
  2665                           GLOBAL	__end_of___awdiv
  2666  0681                     	__end_of___awdiv:
  2667 ;; =============== function ___awdiv ends ============
  2668                           
  2669                           	signat	___awdiv,8314
  2670                           	global	___lwdiv
  2671                           psect	text384,local,class=CODE,delta=2
  2672                           global __ptext384
  2673  0795                     __ptext384:
  2674                           
  2675 ;; *************** function ___lwdiv *****************
  2676 ;; Defined at:
  2677 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lwdiv.c"
  2678 ;; Parameters:    Size  Location     Type
  2679 ;;  divisor         2    0[BANK0 ] unsigned int 
  2680 ;;  dividend        2    2[BANK0 ] unsigned int 
  2681 ;; Auto vars:     Size  Location     Type
  2682 ;;  quotient        2    5[BANK0 ] unsigned int 
  2683 ;;  counter         1    7[BANK0 ] unsigned char 
  2684 ;; Return value:  Size  Location     Type
  2685 ;;                  2    0[BANK0 ] unsigned int 
  2686 ;; Registers used:
  2687 ;;		wreg, status,2, status,0
  2688 ;; Tracked objects:
  2689 ;;		On entry : 0/0
  2690 ;;		On exit  : 0/0
  2691 ;;		Unchanged: 0/0
  2692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2693 ;;      Params:         0       4       0       0
  2694 ;;      Locals:         0       3       0       0
  2695 ;;      Temps:          0       1       0       0
  2696 ;;      Totals:         0       8       0       0
  2697 ;;Total ram usage:        8 bytes
  2698 ;; Hardware stack levels used:    1
  2699 ;; Hardware stack levels required when called:    2
  2700 ;; This function calls:
  2701 ;;		Nothing
  2702 ;; This function is called by:
  2703 ;;		_PIR_Main
  2704 ;; This function uses a non-reentrant model
  2705 ;;
  2706                           psect	text384
  2707                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lwdiv.c"
  2708                           	line	5
  2709                           	global	__size_of___lwdiv
  2710  0050                     	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
  2711                           	
  2712  0795                     ___lwdiv:	
  2713                           	opt	stack 4
  2714                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2715                           	line	9
  2716                           	
  2717  0795                     l7961:	
  2718  0795  1283               	bcf	status, 5	;RP0=0, select bank0
  2719  0796  1303               	bcf	status, 6	;RP1=0, select bank0
  2720  0797  01CB               	clrf	(___lwdiv@quotient)
  2721  0798  01CC               	clrf	(___lwdiv@quotient+1)
  2722                           	line	10
  2723                           	
  2724  0799                     l7963:	
  2725  0799  0847               	movf	(___lwdiv@divisor+1),w
  2726  079A  0446               	iorwf	(___lwdiv@divisor),w
  2727  079B  1903               	skipnz
  2728  079C  2F9E               	goto	u3641
  2729  079D  2F9F               	goto	u3640
  2730  079E                     u3641:
  2731  079E  2FDD               	goto	l7983
  2732  079F                     u3640:
  2733                           	line	11
  2734                           	
  2735  079F                     l7965:	
  2736  079F  01CD               	clrf	(___lwdiv@counter)
  2737  07A0  1403               	bsf	status,0
  2738  07A1  0DCD               	rlf	(___lwdiv@counter),f
  2739                           	line	12
  2740  07A2  2FAF               	goto	l7971
  2741                           	
  2742  07A3                     l6013:	
  2743                           	line	13
  2744                           	
  2745  07A3                     l7967:	
  2746  07A3  3001               	movlw	01h
  2747                           	
  2748  07A4                     u3655:
  2749  07A4  1003               	clrc
  2750  07A5  0DC6               	rlf	(___lwdiv@divisor),f
  2751  07A6  0DC7               	rlf	(___lwdiv@divisor+1),f
  2752  07A7  3EFF               	addlw	-1
  2753  07A8  1D03               	skipz
  2754  07A9  2FA4               	goto	u3655
  2755                           	line	14
  2756                           	
  2757  07AA                     l7969:	
  2758  07AA  3001               	movlw	(01h)
  2759  07AB  00CA               	movwf	(??___lwdiv+0)+0
  2760  07AC  084A               	movf	(??___lwdiv+0)+0,w
  2761  07AD  07CD               	addwf	(___lwdiv@counter),f
  2762  07AE  2FAF               	goto	l7971
  2763                           	line	15
  2764                           	
  2765  07AF                     l6012:	
  2766                           	line	12
  2767                           	
  2768  07AF                     l7971:	
  2769  07AF  1FC7               	btfss	(___lwdiv@divisor+1),(15)&7
  2770  07B0  2FB2               	goto	u3661
  2771  07B1  2FB3               	goto	u3660
  2772  07B2                     u3661:
  2773  07B2  2FA3               	goto	l7967
  2774  07B3                     u3660:
  2775  07B3  2FB5               	goto	l7973
  2776                           	
  2777  07B4                     l6014:	
  2778  07B4  2FB5               	goto	l7973
  2779                           	line	16
  2780                           	
  2781  07B5                     l6015:	
  2782                           	line	17
  2783                           	
  2784  07B5                     l7973:	
  2785  07B5  3001               	movlw	01h
  2786                           	
  2787  07B6                     u3675:
  2788  07B6  1003               	clrc
  2789  07B7  0DCB               	rlf	(___lwdiv@quotient),f
  2790  07B8  0DCC               	rlf	(___lwdiv@quotient+1),f
  2791  07B9  3EFF               	addlw	-1
  2792  07BA  1D03               	skipz
  2793  07BB  2FB6               	goto	u3675
  2794                           	line	18
  2795  07BC  0847               	movf	(___lwdiv@divisor+1),w
  2796  07BD  0249               	subwf	(___lwdiv@dividend+1),w
  2797  07BE  1D03               	skipz
  2798  07BF  2FC2               	goto	u3685
  2799  07C0  0846               	movf	(___lwdiv@divisor),w
  2800  07C1  0248               	subwf	(___lwdiv@dividend),w
  2801  07C2                     u3685:
  2802  07C2  1C03               	skipc
  2803  07C3  2FC5               	goto	u3681
  2804  07C4  2FC6               	goto	u3680
  2805  07C5                     u3681:
  2806  07C5  2FCE               	goto	l7979
  2807  07C6                     u3680:
  2808                           	line	19
  2809                           	
  2810  07C6                     l7975:	
  2811  07C6  0846               	movf	(___lwdiv@divisor),w
  2812  07C7  02C8               	subwf	(___lwdiv@dividend),f
  2813  07C8  0847               	movf	(___lwdiv@divisor+1),w
  2814  07C9  1C03               	skipc
  2815  07CA  03C9               	decf	(___lwdiv@dividend+1),f
  2816  07CB  02C9               	subwf	(___lwdiv@dividend+1),f
  2817                           	line	20
  2818                           	
  2819  07CC                     l7977:	
  2820  07CC  144B               	bsf	(___lwdiv@quotient)+(0/8),(0)&7
  2821  07CD  2FCE               	goto	l7979
  2822                           	line	21
  2823                           	
  2824  07CE                     l6016:	
  2825                           	line	22
  2826                           	
  2827  07CE                     l7979:	
  2828  07CE  3001               	movlw	01h
  2829                           	
  2830  07CF                     u3695:
  2831  07CF  1003               	clrc
  2832  07D0  0CC7               	rrf	(___lwdiv@divisor+1),f
  2833  07D1  0CC6               	rrf	(___lwdiv@divisor),f
  2834  07D2  3EFF               	addlw	-1
  2835  07D3  1D03               	skipz
  2836  07D4  2FCF               	goto	u3695
  2837                           	line	23
  2838                           	
  2839  07D5                     l7981:	
  2840  07D5  3001               	movlw	low(01h)
  2841  07D6  02CD               	subwf	(___lwdiv@counter),f
  2842  07D7  1D03               	btfss	status,2
  2843  07D8  2FDA               	goto	u3701
  2844  07D9  2FDB               	goto	u3700
  2845  07DA                     u3701:
  2846  07DA  2FB5               	goto	l7973
  2847  07DB                     u3700:
  2848  07DB  2FDD               	goto	l7983
  2849                           	
  2850  07DC                     l6017:	
  2851  07DC  2FDD               	goto	l7983
  2852                           	line	24
  2853                           	
  2854  07DD                     l6011:	
  2855                           	line	25
  2856                           	
  2857  07DD                     l7983:	
  2858  07DD  084C               	movf	(___lwdiv@quotient+1),w
  2859  07DE  01C7               	clrf	(?___lwdiv+1)
  2860  07DF  07C7               	addwf	(?___lwdiv+1)
  2861  07E0  084B               	movf	(___lwdiv@quotient),w
  2862  07E1  01C6               	clrf	(?___lwdiv)
  2863  07E2  07C6               	addwf	(?___lwdiv)
  2864                           
  2865  07E3  2FE4               	goto	l6018
  2866                           	
  2867  07E4                     l7985:	
  2868                           	line	26
  2869                           	
  2870  07E4                     l6018:	
  2871  07E4  0008               	return
  2872                           	opt stack 0
  2873                           GLOBAL	__end_of___lwdiv
  2874  07E5                     	__end_of___lwdiv:
  2875 ;; =============== function ___lwdiv ends ============
  2876                           
  2877                           	signat	___lwdiv,8314
  2878                           	global	___wmul
  2879                           psect	text385,local,class=CODE,delta=2
  2880                           global __ptext385
  2881  0F0E                     __ptext385:
  2882                           
  2883 ;; *************** function ___wmul *****************
  2884 ;; Defined at:
  2885 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\wmul.c"
  2886 ;; Parameters:    Size  Location     Type
  2887 ;;  multiplier      2    0[BANK0 ] unsigned int 
  2888 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  2889 ;; Auto vars:     Size  Location     Type
  2890 ;;  product         2    4[BANK0 ] unsigned int 
  2891 ;; Return value:  Size  Location     Type
  2892 ;;                  2    0[BANK0 ] unsigned int 
  2893 ;; Registers used:
  2894 ;;		wreg, status,2, status,0
  2895 ;; Tracked objects:
  2896 ;;		On entry : 0/0
  2897 ;;		On exit  : 0/0
  2898 ;;		Unchanged: 0/0
  2899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2900 ;;      Params:         0       4       0       0
  2901 ;;      Locals:         0       2       0       0
  2902 ;;      Temps:          0       0       0       0
  2903 ;;      Totals:         0       6       0       0
  2904 ;;Total ram usage:        6 bytes
  2905 ;; Hardware stack levels used:    1
  2906 ;; Hardware stack levels required when called:    2
  2907 ;; This function calls:
  2908 ;;		Nothing
  2909 ;; This function is called by:
  2910 ;;		_PIR_Main
  2911 ;; This function uses a non-reentrant model
  2912 ;;
  2913                           psect	text385
  2914                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\wmul.c"
  2915                           	line	3
  2916                           	global	__size_of___wmul
  2917  002C                     	__size_of___wmul	equ	__end_of___wmul-___wmul
  2918                           	
  2919  0F0E                     ___wmul:	
  2920                           	opt	stack 4
  2921                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2922                           	line	4
  2923                           	
  2924  0F0E                     l7949:	
  2925  0F0E  1283               	bcf	status, 5	;RP0=0, select bank0
  2926  0F0F  1303               	bcf	status, 6	;RP1=0, select bank0
  2927  0F10  01CA               	clrf	(___wmul@product)
  2928  0F11  01CB               	clrf	(___wmul@product+1)
  2929  0F12  2F13               	goto	l7951
  2930                           	line	6
  2931                           	
  2932  0F13                     l6005:	
  2933                           	line	7
  2934                           	
  2935  0F13                     l7951:	
  2936  0F13  1C46               	btfss	(___wmul@multiplier),(0)&7
  2937  0F14  2F16               	goto	u3601
  2938  0F15  2F17               	goto	u3600
  2939  0F16                     u3601:
  2940  0F16  2F1D               	goto	l6006
  2941  0F17                     u3600:
  2942                           	line	8
  2943                           	
  2944  0F17                     l7953:	
  2945  0F17  0848               	movf	(___wmul@multiplicand),w
  2946  0F18  07CA               	addwf	(___wmul@product),f
  2947  0F19  1803               	skipnc
  2948  0F1A  0ACB               	incf	(___wmul@product+1),f
  2949  0F1B  0849               	movf	(___wmul@multiplicand+1),w
  2950  0F1C  07CB               	addwf	(___wmul@product+1),f
  2951                           	
  2952  0F1D                     l6006:	
  2953                           	line	9
  2954  0F1D  3001               	movlw	01h
  2955                           	
  2956  0F1E                     u3615:
  2957  0F1E  1003               	clrc
  2958  0F1F  0DC8               	rlf	(___wmul@multiplicand),f
  2959  0F20  0DC9               	rlf	(___wmul@multiplicand+1),f
  2960  0F21  3EFF               	addlw	-1
  2961  0F22  1D03               	skipz
  2962  0F23  2F1E               	goto	u3615
  2963                           	line	10
  2964                           	
  2965  0F24                     l7955:	
  2966  0F24  3001               	movlw	01h
  2967                           	
  2968  0F25                     u3625:
  2969  0F25  1003               	clrc
  2970  0F26  0CC7               	rrf	(___wmul@multiplier+1),f
  2971  0F27  0CC6               	rrf	(___wmul@multiplier),f
  2972  0F28  3EFF               	addlw	-1
  2973  0F29  1D03               	skipz
  2974  0F2A  2F25               	goto	u3625
  2975                           	line	11
  2976  0F2B  0847               	movf	((___wmul@multiplier+1)),w
  2977  0F2C  0446               	iorwf	((___wmul@multiplier)),w
  2978  0F2D  1D03               	skipz
  2979  0F2E  2F30               	goto	u3631
  2980  0F2F  2F31               	goto	u3630
  2981  0F30                     u3631:
  2982  0F30  2F13               	goto	l7951
  2983  0F31                     u3630:
  2984  0F31  2F32               	goto	l7957
  2985                           	
  2986  0F32                     l6007:	
  2987                           	line	12
  2988                           	
  2989  0F32                     l7957:	
  2990  0F32  084B               	movf	(___wmul@product+1),w
  2991  0F33  01C7               	clrf	(?___wmul+1)
  2992  0F34  07C7               	addwf	(?___wmul+1)
  2993  0F35  084A               	movf	(___wmul@product),w
  2994  0F36  01C6               	clrf	(?___wmul)
  2995  0F37  07C6               	addwf	(?___wmul)
  2996                           
  2997  0F38  2F39               	goto	l6008
  2998                           	
  2999  0F39                     l7959:	
  3000                           	line	13
  3001                           	
  3002  0F39                     l6008:	
  3003  0F39  0008               	return
  3004                           	opt stack 0
  3005                           GLOBAL	__end_of___wmul
  3006  0F3A                     	__end_of___wmul:
  3007 ;; =============== function ___wmul ends ============
  3008                           
  3009                           	signat	___wmul,8314
  3010                           	global	_CDS_Main
  3011                           psect	text386,local,class=CODE,delta=2
  3012                           global __ptext386
  3013  043D                     __ptext386:
  3014                           
  3015 ;; *************** function _CDS_Main *****************
  3016 ;; Defined at:
  3017 ;;		line 9 in file "G:\Program\PIC\Source_File\Sensor_PIR+CDS.c"
  3018 ;; Parameters:    Size  Location     Type
  3019 ;;		None
  3020 ;; Auto vars:     Size  Location     Type
  3021 ;;		None
  3022 ;; Return value:  Size  Location     Type
  3023 ;;		None               void
  3024 ;; Registers used:
  3025 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3026 ;; Tracked objects:
  3027 ;;		On entry : 0/0
  3028 ;;		On exit  : 0/0
  3029 ;;		Unchanged: 0/0
  3030 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3031 ;;      Params:         0       0       0       0
  3032 ;;      Locals:         0       0       0       0
  3033 ;;      Temps:          0       3       0       0
  3034 ;;      Totals:         0       3       0       0
  3035 ;;Total ram usage:        3 bytes
  3036 ;; Hardware stack levels used:    1
  3037 ;; Hardware stack levels required when called:    2
  3038 ;; This function calls:
  3039 ;;		Nothing
  3040 ;; This function is called by:
  3041 ;;		_main
  3042 ;; This function uses a non-reentrant model
  3043 ;;
  3044                           psect	text386
  3045                           	file	"G:\Program\PIC\Source_File\Sensor_PIR+CDS.c"
  3046                           	line	9
  3047                           	global	__size_of_CDS_Main
  3048  00AA                     	__size_of_CDS_Main	equ	__end_of_CDS_Main-_CDS_Main
  3049                           	
  3050  043D                     _CDS_Main:	
  3051                           	opt	stack 5
  3052                           ; Regs used in _CDS_Main: [wreg-fsr0h+status,2+status,0]
  3053                           	line	10
  3054                           	
  3055  043D                     l7905:	
  3056                           ;Sensor_PIR+CDS.c: 10: if(CDS->Enable==1)
  3057  043D  1283               	bcf	status, 5	;RP0=0, select bank0
  3058  043E  1303               	bcf	status, 6	;RP1=0, select bank0
  3059  043F  0821               	movf	(_CDS),w
  3060  0440  0084               	movwf	fsr0
  3061  0441  1383               	bcf	status, 7	;select IRP bank0
  3062  0442  1C00               	btfss	indf,0
  3063  0443  2C45               	goto	u3501
  3064  0444  2C46               	goto	u3500
  3065  0445                     u3501:
  3066  0445  2CE6               	goto	l5097
  3067  0446                     u3500:
  3068                           	line	12
  3069                           	
  3070  0446                     l7907:	
  3071                           ;Sensor_PIR+CDS.c: 11: {
  3072                           ;Sensor_PIR+CDS.c: 12: CDS->Time++;
  3073  0446  3001               	movlw	(01h)
  3074  0447  00C6               	movwf	(??_CDS_Main+0)+0
  3075  0448  0821               	movf	(_CDS),w
  3076  0449  3E01               	addlw	01h
  3077  044A  0084               	movwf	fsr0
  3078  044B  0846               	movf	(??_CDS_Main+0)+0,w
  3079  044C  0780               	addwf	indf,f
  3080                           	line	13
  3081                           	
  3082  044D                     l7909:	
  3083                           ;Sensor_PIR+CDS.c: 13: if(CDS->Time == 10)
  3084  044D  0821               	movf	(_CDS),w
  3085  044E  3E01               	addlw	01h
  3086  044F  0084               	movwf	fsr0
  3087  0450  0800               	movf	indf,w
  3088  0451  3A0A               	xorlw	0Ah
  3089  0452  1D03               	skipz
  3090  0453  2C55               	goto	u3511
  3091  0454  2C56               	goto	u3510
  3092  0455                     u3511:
  3093  0455  2CE6               	goto	l5097
  3094  0456                     u3510:
  3095                           	line	15
  3096                           	
  3097  0456                     l7911:	
  3098                           ;Sensor_PIR+CDS.c: 14: {
  3099                           ;Sensor_PIR+CDS.c: 15: CDS->Time=0;
  3100  0456  0821               	movf	(_CDS),w
  3101  0457  3E01               	addlw	01h
  3102  0458  0084               	movwf	fsr0
  3103  0459  0180               	clrf	indf
  3104                           	line	16
  3105                           	
  3106  045A                     l7913:	
  3107                           ;Sensor_PIR+CDS.c: 16: CDS->GO_nDONE=1;
  3108  045A  0821               	movf	(_CDS),w
  3109  045B  3E05               	addlw	05h
  3110  045C  0084               	movwf	fsr0
  3111  045D  0180               	clrf	indf
  3112  045E  1403               	bsf	status,0
  3113  045F  0D80               	rlf	indf,f
  3114                           	line	17
  3115                           	
  3116  0460                     l7915:	
  3117                           ;Sensor_PIR+CDS.c: 17: ADCON1=0x70;
  3118  0460  3070               	movlw	(070h)
  3119  0461  1683               	bsf	status, 5	;RP0=1, select bank1
  3120  0462  1303               	bcf	status, 6	;RP1=0, select bank1
  3121  0463  009F               	movwf	(159)^080h	;volatile
  3122                           	line	21
  3123                           	
  3124  0464                     l7917:	
  3125                           ;Sensor_PIR+CDS.c: 21: ADCON0=0x31;
  3126  0464  3031               	movlw	(031h)
  3127  0465  1283               	bcf	status, 5	;RP0=0, select bank0
  3128  0466  1303               	bcf	status, 6	;RP1=0, select bank0
  3129  0467  009F               	movwf	(31)	;volatile
  3130                           	line	23
  3131                           	
  3132  0468                     l7919:	
  3133                           ;Sensor_PIR+CDS.c: 23: GO_nDONE=1;
  3134  0468  149F               	bsf	(249/8),(249)&7
  3135                           	line	24
  3136                           ;Sensor_PIR+CDS.c: 24: while(GO_nDONE);
  3137  0469  2C6A               	goto	l5086
  3138                           	
  3139  046A                     l5087:	
  3140                           	
  3141  046A                     l5086:	
  3142  046A  189F               	btfsc	(249/8),(249)&7
  3143  046B  2C6D               	goto	u3521
  3144  046C  2C6E               	goto	u3520
  3145  046D                     u3521:
  3146  046D  2C6A               	goto	l5086
  3147  046E                     u3520:
  3148  046E  2C6F               	goto	l7921
  3149                           	
  3150  046F                     l5088:	
  3151                           	line	25
  3152                           	
  3153  046F                     l7921:	
  3154                           ;Sensor_PIR+CDS.c: 25: CDS->SignalAD=ADRES;
  3155  046F  081E               	movf	(30),w	;volatile
  3156  0470  00C6               	movwf	(??_CDS_Main+0)+0
  3157  0471  0821               	movf	(_CDS),w
  3158  0472  3E04               	addlw	04h
  3159  0473  0084               	movwf	fsr0
  3160  0474  0846               	movf	(??_CDS_Main+0)+0,w
  3161  0475  1383               	bcf	status, 7	;select IRP bank0
  3162  0476  0080               	movwf	indf
  3163                           	line	28
  3164                           	
  3165  0477                     l7923:	
  3166                           ;Sensor_PIR+CDS.c: 28: ADCON0=0x09;
  3167  0477  3009               	movlw	(09h)
  3168  0478  009F               	movwf	(31)	;volatile
  3169                           	line	30
  3170                           	
  3171  0479                     l7925:	
  3172                           ;Sensor_PIR+CDS.c: 30: GO_nDONE=1;
  3173  0479  149F               	bsf	(249/8),(249)&7
  3174                           	line	31
  3175                           ;Sensor_PIR+CDS.c: 31: while(GO_nDONE);
  3176  047A  2C7B               	goto	l5089
  3177                           	
  3178  047B                     l5090:	
  3179                           	
  3180  047B                     l5089:	
  3181  047B  189F               	btfsc	(249/8),(249)&7
  3182  047C  2C7E               	goto	u3531
  3183  047D  2C7F               	goto	u3530
  3184  047E                     u3531:
  3185  047E  2C7B               	goto	l5089
  3186  047F                     u3530:
  3187  047F  2C80               	goto	l7927
  3188                           	
  3189  0480                     l5091:	
  3190                           	line	32
  3191                           	
  3192  0480                     l7927:	
  3193                           ;Sensor_PIR+CDS.c: 32: CDS->VRAD=ADRES;
  3194  0480  081E               	movf	(30),w	;volatile
  3195  0481  00C6               	movwf	(??_CDS_Main+0)+0
  3196  0482  0821               	movf	(_CDS),w
  3197  0483  3E03               	addlw	03h
  3198  0484  0084               	movwf	fsr0
  3199  0485  0846               	movf	(??_CDS_Main+0)+0,w
  3200  0486  1383               	bcf	status, 7	;select IRP bank0
  3201  0487  0080               	movwf	indf
  3202                           	line	34
  3203                           ;Sensor_PIR+CDS.c: 34: CDS->GO_nDONE=0;
  3204  0488  0821               	movf	(_CDS),w
  3205  0489  3E05               	addlw	05h
  3206  048A  0084               	movwf	fsr0
  3207  048B  0180               	clrf	indf
  3208                           	line	35
  3209                           ;Sensor_PIR+CDS.c: 35: CDS->GO=1;
  3210  048C  0821               	movf	(_CDS),w
  3211  048D  0084               	movwf	fsr0
  3212  048E  1480               	bsf	indf,1
  3213                           	line	38
  3214                           ;Sensor_PIR+CDS.c: 38: if(CDS->GO==1)
  3215  048F  0821               	movf	(_CDS),w
  3216  0490  0084               	movwf	fsr0
  3217  0491  1C80               	btfss	indf,1
  3218  0492  2C94               	goto	u3541
  3219  0493  2C95               	goto	u3540
  3220  0494                     u3541:
  3221  0494  2CE6               	goto	l5097
  3222  0495                     u3540:
  3223                           	line	40
  3224                           	
  3225  0495                     l7929:	
  3226                           ;Sensor_PIR+CDS.c: 39: {
  3227                           ;Sensor_PIR+CDS.c: 40: CDS->GO=0;
  3228  0495  0821               	movf	(_CDS),w
  3229  0496  0084               	movwf	fsr0
  3230  0497  1080               	bcf	indf,1
  3231                           	line	41
  3232                           ;Sensor_PIR+CDS.c: 41: if(CDS->OK==0)
  3233  0498  0821               	movf	(_CDS),w
  3234  0499  3E02               	addlw	02h
  3235  049A  0084               	movwf	fsr0
  3236  049B  1800               	btfsc	indf,0
  3237  049C  2C9E               	goto	u3551
  3238  049D  2C9F               	goto	u3550
  3239  049E                     u3551:
  3240  049E  2CC0               	goto	l7935
  3241  049F                     u3550:
  3242                           	line	43
  3243                           	
  3244  049F                     l7931:	
  3245                           ;Sensor_PIR+CDS.c: 42: {
  3246                           ;Sensor_PIR+CDS.c: 43: if(CDS->SignalAD >= (CDS->VRAD-40))
  3247  049F  0821               	movf	(_CDS),w
  3248  04A0  3E03               	addlw	03h
  3249  04A1  0084               	movwf	fsr0
  3250  04A2  0800               	movf	indf,w
  3251  04A3  3ED8               	addlw	low(-40)
  3252  04A4  00C6               	movwf	(??_CDS_Main+0)+0
  3253  04A5  30FF               	movlw	high(-40)
  3254  04A6  1803               	skipnc
  3255  04A7  3000               	movlw	(high(-40)+1)&0ffh
  3256  04A8  00C7               	movwf	((??_CDS_Main+0)+0)+1
  3257  04A9  0821               	movf	(_CDS),w
  3258  04AA  3E04               	addlw	04h
  3259  04AB  0084               	movwf	fsr0
  3260  04AC  0847               	movf	1+(??_CDS_Main+0)+0,w
  3261  04AD  3A80               	xorlw	80h
  3262  04AE  3C80               	sublw	080h
  3263  04AF  1D03               	skipz
  3264  04B0  2CB3               	goto	u3565
  3265  04B1  0846               	movf	0+(??_CDS_Main+0)+0,w
  3266  04B2  0200               	subwf	indf,w
  3267  04B3                     u3565:
  3268                           
  3269  04B3  1C03               	skipc
  3270  04B4  2CB6               	goto	u3561
  3271  04B5  2CB7               	goto	u3560
  3272  04B6                     u3561:
  3273  04B6  2CE6               	goto	l5097
  3274  04B7                     u3560:
  3275                           	line	45
  3276                           	
  3277  04B7                     l7933:	
  3278                           ;Sensor_PIR+CDS.c: 44: {
  3279                           ;Sensor_PIR+CDS.c: 45: CDS->OK=1;
  3280  04B7  1283               	bcf	status, 5	;RP0=0, select bank0
  3281  04B8  1303               	bcf	status, 6	;RP1=0, select bank0
  3282  04B9  0821               	movf	(_CDS),w
  3283  04BA  3E02               	addlw	02h
  3284  04BB  0084               	movwf	fsr0
  3285  04BC  1383               	bcf	status, 7	;select IRP bank0
  3286  04BD  1400               	bsf	indf,0
  3287  04BE  2CE6               	goto	l5097
  3288                           	line	46
  3289                           	
  3290  04BF                     l5094:	
  3291                           	line	47
  3292                           ;Sensor_PIR+CDS.c: 46: }
  3293                           ;Sensor_PIR+CDS.c: 47: }
  3294  04BF  2CE6               	goto	l5097
  3295                           	line	48
  3296                           	
  3297  04C0                     l5093:	
  3298                           	line	50
  3299                           	
  3300  04C0                     l7935:	
  3301                           ;Sensor_PIR+CDS.c: 48: else
  3302                           ;Sensor_PIR+CDS.c: 49: {
  3303                           ;Sensor_PIR+CDS.c: 50: if(CDS->SignalAD <= (CDS->VRAD-120))
  3304  04C0  0821               	movf	(_CDS),w
  3305  04C1  3E03               	addlw	03h
  3306  04C2  0084               	movwf	fsr0
  3307  04C3  0800               	movf	indf,w
  3308  04C4  3E88               	addlw	low(-120)
  3309  04C5  00C6               	movwf	(??_CDS_Main+0)+0
  3310  04C6  30FF               	movlw	high(-120)
  3311  04C7  1803               	skipnc
  3312  04C8  3000               	movlw	(high(-120)+1)&0ffh
  3313  04C9  00C7               	movwf	((??_CDS_Main+0)+0)+1
  3314  04CA  0821               	movf	(_CDS),w
  3315  04CB  3E04               	addlw	04h
  3316  04CC  0084               	movwf	fsr0
  3317  04CD  0847               	movf	1+(??_CDS_Main+0)+0,w
  3318  04CE  3A80               	xorlw	80h
  3319  04CF  00C8               	movwf	(??_CDS_Main+2)+0
  3320  04D0  3080               	movlw	80h
  3321  04D1  0248               	subwf	(??_CDS_Main+2)+0,w
  3322  04D2  1D03               	skipz
  3323  04D3  2CD6               	goto	u3575
  3324  04D4  0800               	movf	indf,w
  3325  04D5  0246               	subwf	0+(??_CDS_Main+0)+0,w
  3326  04D6                     u3575:
  3327                           
  3328  04D6  1C03               	skipc
  3329  04D7  2CD9               	goto	u3571
  3330  04D8  2CDA               	goto	u3570
  3331  04D9                     u3571:
  3332  04D9  2CE6               	goto	l5097
  3333  04DA                     u3570:
  3334                           	line	52
  3335                           	
  3336  04DA                     l7937:	
  3337                           ;Sensor_PIR+CDS.c: 51: {
  3338                           ;Sensor_PIR+CDS.c: 52: CDS->OK=0;
  3339  04DA  1283               	bcf	status, 5	;RP0=0, select bank0
  3340  04DB  1303               	bcf	status, 6	;RP1=0, select bank0
  3341  04DC  0821               	movf	(_CDS),w
  3342  04DD  3E02               	addlw	02h
  3343  04DE  0084               	movwf	fsr0
  3344  04DF  1383               	bcf	status, 7	;select IRP bank0
  3345  04E0  1000               	bcf	indf,0
  3346  04E1  2CE6               	goto	l5097
  3347                           	line	53
  3348                           	
  3349  04E2                     l5096:	
  3350  04E2  2CE6               	goto	l5097
  3351                           	line	54
  3352                           	
  3353  04E3                     l5095:	
  3354  04E3  2CE6               	goto	l5097
  3355                           	line	55
  3356                           	
  3357  04E4                     l5092:	
  3358  04E4  2CE6               	goto	l5097
  3359                           	line	56
  3360                           	
  3361  04E5                     l5085:	
  3362  04E5  2CE6               	goto	l5097
  3363                           	line	57
  3364                           	
  3365  04E6                     l5084:	
  3366                           	line	58
  3367                           	
  3368  04E6                     l5097:	
  3369  04E6  0008               	return
  3370                           	opt stack 0
  3371                           GLOBAL	__end_of_CDS_Main
  3372  04E7                     	__end_of_CDS_Main:
  3373 ;; =============== function _CDS_Main ends ============
  3374                           
  3375                           	signat	_CDS_Main,88
  3376                           	global	_Buzzer_Main
  3377                           psect	text387,local,class=CODE,delta=2
  3378                           global __ptext387
  3379  06F0                     __ptext387:
  3380                           
  3381 ;; *************** function _Buzzer_Main *****************
  3382 ;; Defined at:
  3383 ;;		line 25 in file "G:\Program\PIC\Source_File\Buzzer.c"
  3384 ;; Parameters:    Size  Location     Type
  3385 ;;		None
  3386 ;; Auto vars:     Size  Location     Type
  3387 ;;		None
  3388 ;; Return value:  Size  Location     Type
  3389 ;;		None               void
  3390 ;; Registers used:
  3391 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3392 ;; Tracked objects:
  3393 ;;		On entry : 0/0
  3394 ;;		On exit  : 0/0
  3395 ;;		Unchanged: 0/0
  3396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3397 ;;      Params:         0       0       0       0
  3398 ;;      Locals:         0       0       0       0
  3399 ;;      Temps:          0       1       0       0
  3400 ;;      Totals:         0       1       0       0
  3401 ;;Total ram usage:        1 bytes
  3402 ;; Hardware stack levels used:    1
  3403 ;; Hardware stack levels required when called:    2
  3404 ;; This function calls:
  3405 ;;		Nothing
  3406 ;; This function is called by:
  3407 ;;		_main
  3408 ;; This function uses a non-reentrant model
  3409 ;;
  3410                           psect	text387
  3411                           	file	"G:\Program\PIC\Source_File\Buzzer.c"
  3412                           	line	25
  3413                           	global	__size_of_Buzzer_Main
  3414  0053                     	__size_of_Buzzer_Main	equ	__end_of_Buzzer_Main-_Buzzer_Main
  3415                           	
  3416  06F0                     _Buzzer_Main:	
  3417                           	opt	stack 5
  3418                           ; Regs used in _Buzzer_Main: [wreg-fsr0h+status,2+status,0]
  3419                           	line	26
  3420                           	
  3421  06F0                     l7881:	
  3422                           ;Buzzer.c: 26: if(Buzzer->GO==1)
  3423  06F0  1283               	bcf	status, 5	;RP0=0, select bank0
  3424  06F1  1303               	bcf	status, 6	;RP1=0, select bank0
  3425  06F2  0820               	movf	(_Buzzer),w
  3426  06F3  0084               	movwf	fsr0
  3427  06F4  1383               	bcf	status, 7	;select IRP bank0
  3428  06F5  1C80               	btfss	indf,1
  3429  06F6  2EF8               	goto	u3451
  3430  06F7  2EF9               	goto	u3450
  3431  06F8                     u3451:
  3432  06F8  2F42               	goto	l4249
  3433  06F9                     u3450:
  3434                           	line	28
  3435                           	
  3436  06F9                     l7883:	
  3437                           ;Buzzer.c: 27: {
  3438                           ;Buzzer.c: 28: Buzzer->Time++;
  3439  06F9  3001               	movlw	(01h)
  3440  06FA  00C6               	movwf	(??_Buzzer_Main+0)+0
  3441  06FB  0820               	movf	(_Buzzer),w
  3442  06FC  3E03               	addlw	03h
  3443  06FD  0084               	movwf	fsr0
  3444  06FE  0846               	movf	(??_Buzzer_Main+0)+0,w
  3445  06FF  0780               	addwf	indf,f
  3446                           	line	30
  3447                           	
  3448  0700                     l7885:	
  3449                           ;Buzzer.c: 30: if(Buzzer->Time==8)
  3450  0700  0820               	movf	(_Buzzer),w
  3451  0701  3E03               	addlw	03h
  3452  0702  0084               	movwf	fsr0
  3453  0703  0800               	movf	indf,w
  3454  0704  3A08               	xorlw	08h
  3455  0705  1D03               	skipz
  3456  0706  2F08               	goto	u3461
  3457  0707  2F09               	goto	u3460
  3458  0708                     u3461:
  3459  0708  2F42               	goto	l4249
  3460  0709                     u3460:
  3461                           	line	32
  3462                           	
  3463  0709                     l7887:	
  3464                           ;Buzzer.c: 31: {
  3465                           ;Buzzer.c: 32: Buzzer->Time=0;
  3466  0709  0820               	movf	(_Buzzer),w
  3467  070A  3E03               	addlw	03h
  3468  070B  0084               	movwf	fsr0
  3469  070C  0180               	clrf	indf
  3470                           	line	33
  3471                           	
  3472  070D                     l7889:	
  3473                           ;Buzzer.c: 33: if(RB1==0)
  3474  070D  1886               	btfsc	(49/8),(49)&7
  3475  070E  2F10               	goto	u3471
  3476  070F  2F11               	goto	u3470
  3477  0710                     u3471:
  3478  0710  2F13               	goto	l4243
  3479  0711                     u3470:
  3480                           	line	34
  3481                           	
  3482  0711                     l7891:	
  3483                           ;Buzzer.c: 34: RB1=1;
  3484  0711  1486               	bsf	(49/8),(49)&7
  3485  0712  2F42               	goto	l4249
  3486                           	line	35
  3487                           	
  3488  0713                     l4243:	
  3489                           	line	37
  3490                           ;Buzzer.c: 35: else
  3491                           ;Buzzer.c: 36: {
  3492                           ;Buzzer.c: 37: RB1=0;
  3493  0713  1086               	bcf	(49/8),(49)&7
  3494                           	line	39
  3495                           	
  3496  0714                     l7893:	
  3497                           ;Buzzer.c: 39: if(Buzzer->Count>1)
  3498  0714  0820               	movf	(_Buzzer),w
  3499  0715  3E01               	addlw	01h
  3500  0716  0084               	movwf	fsr0
  3501  0717  3002               	movlw	(02h)
  3502  0718  0200               	subwf	indf,w
  3503  0719  1C03               	skipc
  3504  071A  2F1C               	goto	u3481
  3505  071B  2F1D               	goto	u3480
  3506  071C                     u3481:
  3507  071C  2F23               	goto	l7897
  3508  071D                     u3480:
  3509                           	line	40
  3510                           	
  3511  071D                     l7895:	
  3512                           ;Buzzer.c: 40: Buzzer->Count--;
  3513  071D  0820               	movf	(_Buzzer),w
  3514  071E  3E01               	addlw	01h
  3515  071F  0084               	movwf	fsr0
  3516  0720  3001               	movlw	low(01h)
  3517  0721  0280               	subwf	indf,f
  3518  0722  2F42               	goto	l4249
  3519                           	line	41
  3520                           	
  3521  0723                     l4245:	
  3522                           	line	43
  3523                           	
  3524  0723                     l7897:	
  3525                           ;Buzzer.c: 41: else
  3526                           ;Buzzer.c: 42: {
  3527                           ;Buzzer.c: 43: if(Buzzer->Register==0)
  3528  0723  0820               	movf	(_Buzzer),w
  3529  0724  3E02               	addlw	02h
  3530  0725  0084               	movwf	fsr0
  3531  0726  0880               	movf	indf,f
  3532  0727  1D03               	skipz
  3533  0728  2F2A               	goto	u3491
  3534  0729  2F2B               	goto	u3490
  3535  072A                     u3491:
  3536  072A  2F2F               	goto	l7901
  3537  072B                     u3490:
  3538                           	line	44
  3539                           	
  3540  072B                     l7899:	
  3541                           ;Buzzer.c: 44: Buzzer->GO=0;
  3542  072B  0820               	movf	(_Buzzer),w
  3543  072C  0084               	movwf	fsr0
  3544  072D  1080               	bcf	indf,1
  3545  072E  2F42               	goto	l4249
  3546                           	line	45
  3547                           	
  3548  072F                     l4247:	
  3549                           	line	47
  3550                           	
  3551  072F                     l7901:	
  3552                           ;Buzzer.c: 45: else
  3553                           ;Buzzer.c: 46: {
  3554                           ;Buzzer.c: 47: Buzzer->Count += Buzzer->Register;
  3555  072F  0820               	movf	(_Buzzer),w
  3556  0730  3E02               	addlw	02h
  3557  0731  0084               	movwf	fsr0
  3558  0732  0800               	movf	indf,w
  3559  0733  00C6               	movwf	(??_Buzzer_Main+0)+0
  3560  0734  0820               	movf	(_Buzzer),w
  3561  0735  3E01               	addlw	01h
  3562  0736  0084               	movwf	fsr0
  3563  0737  0846               	movf	(??_Buzzer_Main+0)+0,w
  3564  0738  0780               	addwf	indf,f
  3565                           	line	48
  3566                           	
  3567  0739                     l7903:	
  3568                           ;Buzzer.c: 48: Buzzer->Register=0;
  3569  0739  0820               	movf	(_Buzzer),w
  3570  073A  3E02               	addlw	02h
  3571  073B  0084               	movwf	fsr0
  3572  073C  0180               	clrf	indf
  3573  073D  2F42               	goto	l4249
  3574                           	line	49
  3575                           	
  3576  073E                     l4248:	
  3577  073E  2F42               	goto	l4249
  3578                           	line	50
  3579                           	
  3580  073F                     l4246:	
  3581  073F  2F42               	goto	l4249
  3582                           	line	51
  3583                           	
  3584  0740                     l4244:	
  3585  0740  2F42               	goto	l4249
  3586                           	line	52
  3587                           	
  3588  0741                     l4242:	
  3589  0741  2F42               	goto	l4249
  3590                           	line	53
  3591                           	
  3592  0742                     l4241:	
  3593                           	line	54
  3594                           	
  3595  0742                     l4249:	
  3596  0742  0008               	return
  3597                           	opt stack 0
  3598                           GLOBAL	__end_of_Buzzer_Main
  3599  0743                     	__end_of_Buzzer_Main:
  3600 ;; =============== function _Buzzer_Main ends ============
  3601                           
  3602                           	signat	_Buzzer_Main,88
  3603                           	global	_LED_Main
  3604                           psect	text388,local,class=CODE,delta=2
  3605                           global __ptext388
  3606  0EEC                     __ptext388:
  3607                           
  3608 ;; *************** function _LED_Main *****************
  3609 ;; Defined at:
  3610 ;;		line 35 in file "G:\Program\PIC\Source_File\LED.c"
  3611 ;; Parameters:    Size  Location     Type
  3612 ;;		None
  3613 ;; Auto vars:     Size  Location     Type
  3614 ;;		None
  3615 ;; Return value:  Size  Location     Type
  3616 ;;		None               void
  3617 ;; Registers used:
  3618 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3619 ;; Tracked objects:
  3620 ;;		On entry : 0/0
  3621 ;;		On exit  : 0/0
  3622 ;;		Unchanged: 0/0
  3623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3624 ;;      Params:         0       0       0       0
  3625 ;;      Locals:         0       0       0       0
  3626 ;;      Temps:          0       1       0       0
  3627 ;;      Totals:         0       1       0       0
  3628 ;;Total ram usage:        1 bytes
  3629 ;; Hardware stack levels used:    1
  3630 ;; Hardware stack levels required when called:    2
  3631 ;; This function calls:
  3632 ;;		Nothing
  3633 ;; This function is called by:
  3634 ;;		_main
  3635 ;; This function uses a non-reentrant model
  3636 ;;
  3637                           psect	text388
  3638                           	file	"G:\Program\PIC\Source_File\LED.c"
  3639                           	line	35
  3640                           	global	__size_of_LED_Main
  3641  0022                     	__size_of_LED_Main	equ	__end_of_LED_Main-_LED_Main
  3642                           	
  3643  0EEC                     _LED_Main:	
  3644                           	opt	stack 5
  3645                           ; Regs used in _LED_Main: [wreg-fsr0h+status,2+status,0]
  3646                           	line	36
  3647                           	
  3648  0EEC                     l7871:	
  3649                           ;LED.c: 36: if(LED->GO==1)
  3650  0EEC  1283               	bcf	status, 5	;RP0=0, select bank0
  3651  0EED  1303               	bcf	status, 6	;RP1=0, select bank0
  3652  0EEE  0856               	movf	(_LED),w
  3653  0EEF  0084               	movwf	fsr0
  3654  0EF0  1383               	bcf	status, 7	;select IRP bank0
  3655  0EF1  1C80               	btfss	indf,1
  3656  0EF2  2EF4               	goto	u3431
  3657  0EF3  2EF5               	goto	u3430
  3658  0EF4                     u3431:
  3659  0EF4  2F0D               	goto	l3406
  3660  0EF5                     u3430:
  3661                           	line	38
  3662                           	
  3663  0EF5                     l7873:	
  3664                           ;LED.c: 37: {
  3665                           ;LED.c: 38: LED->Time++;
  3666  0EF5  3001               	movlw	(01h)
  3667  0EF6  00C6               	movwf	(??_LED_Main+0)+0
  3668  0EF7  0856               	movf	(_LED),w
  3669  0EF8  3E01               	addlw	01h
  3670  0EF9  0084               	movwf	fsr0
  3671  0EFA  0846               	movf	(??_LED_Main+0)+0,w
  3672  0EFB  0780               	addwf	indf,f
  3673                           	line	39
  3674                           	
  3675  0EFC                     l7875:	
  3676                           ;LED.c: 39: if(LED->Time == 10)
  3677  0EFC  0856               	movf	(_LED),w
  3678  0EFD  3E01               	addlw	01h
  3679  0EFE  0084               	movwf	fsr0
  3680  0EFF  0800               	movf	indf,w
  3681  0F00  3A0A               	xorlw	0Ah
  3682  0F01  1D03               	skipz
  3683  0F02  2F04               	goto	u3441
  3684  0F03  2F05               	goto	u3440
  3685  0F04                     u3441:
  3686  0F04  2F0D               	goto	l3406
  3687  0F05                     u3440:
  3688                           	line	41
  3689                           	
  3690  0F05                     l7877:	
  3691                           ;LED.c: 40: {
  3692                           ;LED.c: 41: LED->Time=0;
  3693  0F05  0856               	movf	(_LED),w
  3694  0F06  3E01               	addlw	01h
  3695  0F07  0084               	movwf	fsr0
  3696  0F08  0180               	clrf	indf
  3697                           	line	42
  3698                           	
  3699  0F09                     l7879:	
  3700                           ;LED.c: 42: RB3=~RB3;
  3701  0F09  3008               	movlw	1<<((51)&7)
  3702  0F0A  0686               	xorwf	((51)/8),f
  3703  0F0B  2F0D               	goto	l3406
  3704                           	line	43
  3705                           	
  3706  0F0C                     l3405:	
  3707  0F0C  2F0D               	goto	l3406
  3708                           	line	44
  3709                           	
  3710  0F0D                     l3404:	
  3711                           	line	45
  3712                           	
  3713  0F0D                     l3406:	
  3714  0F0D  0008               	return
  3715                           	opt stack 0
  3716                           GLOBAL	__end_of_LED_Main
  3717  0F0E                     	__end_of_LED_Main:
  3718 ;; =============== function _LED_Main ends ============
  3719                           
  3720                           	signat	_LED_Main,88
  3721                           	global	_TMR1_Main
  3722                           psect	text389,local,class=CODE,delta=2
  3723                           global __ptext389
  3724  04E7                     __ptext389:
  3725                           
  3726 ;; *************** function _TMR1_Main *****************
  3727 ;; Defined at:
  3728 ;;		line 8 in file "G:\Program\PIC\Source_File\Timer1.c"
  3729 ;; Parameters:    Size  Location     Type
  3730 ;;		None
  3731 ;; Auto vars:     Size  Location     Type
  3732 ;;		None
  3733 ;; Return value:  Size  Location     Type
  3734 ;;		None               void
  3735 ;; Registers used:
  3736 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3737 ;; Tracked objects:
  3738 ;;		On entry : 0/0
  3739 ;;		On exit  : 0/0
  3740 ;;		Unchanged: 0/0
  3741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3742 ;;      Params:         0       0       0       0
  3743 ;;      Locals:         0       0       0       0
  3744 ;;      Temps:          0       2       0       0
  3745 ;;      Totals:         0       2       0       0
  3746 ;;Total ram usage:        2 bytes
  3747 ;; Hardware stack levels used:    1
  3748 ;; Hardware stack levels required when called:    2
  3749 ;; This function calls:
  3750 ;;		Nothing
  3751 ;; This function is called by:
  3752 ;;		_main
  3753 ;; This function uses a non-reentrant model
  3754 ;;
  3755                           psect	text389
  3756                           	file	"G:\Program\PIC\Source_File\Timer1.c"
  3757                           	line	8
  3758                           	global	__size_of_TMR1_Main
  3759  009C                     	__size_of_TMR1_Main	equ	__end_of_TMR1_Main-_TMR1_Main
  3760                           	
  3761  04E7                     _TMR1_Main:	
  3762                           	opt	stack 5
  3763                           ; Regs used in _TMR1_Main: [wreg-fsr0h+status,2+status,0]
  3764                           	line	10
  3765                           	
  3766  04E7                     l7845:	
  3767                           ;Timer1.c: 10: if(Timer1->Count1<200)
  3768  04E7  1283               	bcf	status, 5	;RP0=0, select bank0
  3769  04E8  1303               	bcf	status, 6	;RP1=0, select bank0
  3770  04E9  0857               	movf	(_Timer1),w
  3771  04EA  3E03               	addlw	03h
  3772  04EB  0084               	movwf	fsr0
  3773  04EC  1383               	bcf	status, 7	;select IRP bank0
  3774  04ED  0800               	movf	indf,w
  3775  04EE  00C6               	movwf	(??_TMR1_Main+0)+0+0
  3776  04EF  0A84               	incf	fsr0,f
  3777  04F0  0800               	movf	indf,w
  3778  04F1  00C7               	movwf	(??_TMR1_Main+0)+0+1
  3779  04F2  3000               	movlw	high(0C8h)
  3780  04F3  0247               	subwf	1+(??_TMR1_Main+0)+0,w
  3781  04F4  30C8               	movlw	low(0C8h)
  3782  04F5  1903               	skipnz
  3783  04F6  0246               	subwf	0+(??_TMR1_Main+0)+0,w
  3784  04F7  1803               	skipnc
  3785  04F8  2CFA               	goto	u3381
  3786  04F9  2CFB               	goto	u3380
  3787  04FA                     u3381:
  3788  04FA  2D04               	goto	l7849
  3789  04FB                     u3380:
  3790                           	line	11
  3791                           	
  3792  04FB                     l7847:	
  3793                           ;Timer1.c: 11: Timer1->Count1++;
  3794  04FB  0857               	movf	(_Timer1),w
  3795  04FC  3E03               	addlw	03h
  3796  04FD  0084               	movwf	fsr0
  3797  04FE  3001               	movlw	01h
  3798  04FF  0780               	addwf	indf,f
  3799  0500  0A84               	incf	fsr0,f
  3800  0501  1803               	skipnc
  3801  0502  0A80               	incf	indf,f
  3802  0503  2D0C               	goto	l5987
  3803                           	line	12
  3804                           	
  3805  0504                     l5986:	
  3806                           	line	14
  3807                           	
  3808  0504                     l7849:	
  3809                           ;Timer1.c: 12: else
  3810                           ;Timer1.c: 13: {
  3811                           ;Timer1.c: 14: Timer1->Count1=0;
  3812  0504  0857               	movf	(_Timer1),w
  3813  0505  3E03               	addlw	03h
  3814  0506  0084               	movwf	fsr0
  3815  0507  3000               	movlw	low(0)
  3816  0508  0080               	movwf	indf
  3817  0509  0A84               	incf	fsr0,f
  3818  050A  3000               	movlw	high(0)
  3819  050B  0080               	movwf	indf
  3820                           	line	16
  3821                           	
  3822  050C                     l5987:	
  3823                           	line	17
  3824                           ;Timer1.c: 16: }
  3825                           ;Timer1.c: 17: if(Timer1->PowerON==0)
  3826  050C  0857               	movf	(_Timer1),w
  3827  050D  0084               	movwf	fsr0
  3828  050E  1800               	btfsc	indf,0
  3829  050F  2D11               	goto	u3391
  3830  0510  2D12               	goto	u3390
  3831  0511                     u3391:
  3832  0511  2D39               	goto	l7857
  3833  0512                     u3390:
  3834                           	line	19
  3835                           	
  3836  0512                     l7851:	
  3837                           ;Timer1.c: 18: {
  3838                           ;Timer1.c: 19: if(Timer1->Count2<200)
  3839  0512  0857               	movf	(_Timer1),w
  3840  0513  3E05               	addlw	05h
  3841  0514  0084               	movwf	fsr0
  3842  0515  0800               	movf	indf,w
  3843  0516  00C6               	movwf	(??_TMR1_Main+0)+0+0
  3844  0517  0A84               	incf	fsr0,f
  3845  0518  0800               	movf	indf,w
  3846  0519  00C7               	movwf	(??_TMR1_Main+0)+0+1
  3847  051A  3000               	movlw	high(0C8h)
  3848  051B  0247               	subwf	1+(??_TMR1_Main+0)+0,w
  3849  051C  30C8               	movlw	low(0C8h)
  3850  051D  1903               	skipnz
  3851  051E  0246               	subwf	0+(??_TMR1_Main+0)+0,w
  3852  051F  1803               	skipnc
  3853  0520  2D22               	goto	u3401
  3854  0521  2D23               	goto	u3400
  3855  0522                     u3401:
  3856  0522  2D2C               	goto	l7855
  3857  0523                     u3400:
  3858                           	line	20
  3859                           	
  3860  0523                     l7853:	
  3861                           ;Timer1.c: 20: Timer1->Count2++;
  3862  0523  0857               	movf	(_Timer1),w
  3863  0524  3E05               	addlw	05h
  3864  0525  0084               	movwf	fsr0
  3865  0526  3001               	movlw	01h
  3866  0527  0780               	addwf	indf,f
  3867  0528  0A84               	incf	fsr0,f
  3868  0529  1803               	skipnc
  3869  052A  0A80               	incf	indf,f
  3870  052B  2D82               	goto	l5996
  3871                           	line	21
  3872                           	
  3873  052C                     l5989:	
  3874                           	line	23
  3875                           	
  3876  052C                     l7855:	
  3877                           ;Timer1.c: 21: else
  3878                           ;Timer1.c: 22: {
  3879                           ;Timer1.c: 23: Timer1->Count2=0;
  3880  052C  0857               	movf	(_Timer1),w
  3881  052D  3E05               	addlw	05h
  3882  052E  0084               	movwf	fsr0
  3883  052F  3000               	movlw	low(0)
  3884  0530  0080               	movwf	indf
  3885  0531  0A84               	incf	fsr0,f
  3886  0532  3000               	movlw	high(0)
  3887  0533  0080               	movwf	indf
  3888                           	line	24
  3889                           ;Timer1.c: 24: Timer1->PowerON=1;
  3890  0534  0857               	movf	(_Timer1),w
  3891  0535  0084               	movwf	fsr0
  3892  0536  1400               	bsf	indf,0
  3893  0537  2D82               	goto	l5996
  3894                           	line	25
  3895                           	
  3896  0538                     l5990:	
  3897                           	line	26
  3898                           ;Timer1.c: 25: }
  3899                           ;Timer1.c: 26: }
  3900  0538  2D82               	goto	l5996
  3901                           	line	27
  3902                           	
  3903  0539                     l5988:	
  3904                           	line	29
  3905                           	
  3906  0539                     l7857:	
  3907                           ;Timer1.c: 27: else
  3908                           ;Timer1.c: 28: {
  3909                           ;Timer1.c: 29: if(Timer1->Count2<100)
  3910  0539  0857               	movf	(_Timer1),w
  3911  053A  3E05               	addlw	05h
  3912  053B  0084               	movwf	fsr0
  3913  053C  0800               	movf	indf,w
  3914  053D  00C6               	movwf	(??_TMR1_Main+0)+0+0
  3915  053E  0A84               	incf	fsr0,f
  3916  053F  0800               	movf	indf,w
  3917  0540  00C7               	movwf	(??_TMR1_Main+0)+0+1
  3918  0541  3000               	movlw	high(064h)
  3919  0542  0247               	subwf	1+(??_TMR1_Main+0)+0,w
  3920  0543  3064               	movlw	low(064h)
  3921  0544  1903               	skipnz
  3922  0545  0246               	subwf	0+(??_TMR1_Main+0)+0,w
  3923  0546  1803               	skipnc
  3924  0547  2D49               	goto	u3411
  3925  0548  2D4A               	goto	u3410
  3926  0549                     u3411:
  3927  0549  2D53               	goto	l7861
  3928  054A                     u3410:
  3929                           	line	30
  3930                           	
  3931  054A                     l7859:	
  3932                           ;Timer1.c: 30: Timer1->Count2++;
  3933  054A  0857               	movf	(_Timer1),w
  3934  054B  3E05               	addlw	05h
  3935  054C  0084               	movwf	fsr0
  3936  054D  3001               	movlw	01h
  3937  054E  0780               	addwf	indf,f
  3938  054F  0A84               	incf	fsr0,f
  3939  0550  1803               	skipnc
  3940  0551  0A80               	incf	indf,f
  3941  0552  2D5E               	goto	l7865
  3942                           	line	31
  3943                           	
  3944  0553                     l5992:	
  3945                           	line	33
  3946                           	
  3947  0553                     l7861:	
  3948                           ;Timer1.c: 31: else
  3949                           ;Timer1.c: 32: {
  3950                           ;Timer1.c: 33: Timer1->Count2=0;
  3951  0553  0857               	movf	(_Timer1),w
  3952  0554  3E05               	addlw	05h
  3953  0555  0084               	movwf	fsr0
  3954  0556  3000               	movlw	low(0)
  3955  0557  0080               	movwf	indf
  3956  0558  0A84               	incf	fsr0,f
  3957  0559  3000               	movlw	high(0)
  3958  055A  0080               	movwf	indf
  3959                           	line	34
  3960                           	
  3961  055B                     l7863:	
  3962                           ;Timer1.c: 34: RB5=~RB5;
  3963  055B  3020               	movlw	1<<((53)&7)
  3964  055C  0686               	xorwf	((53)/8),f
  3965  055D  2D5E               	goto	l7865
  3966                           	line	47
  3967                           	
  3968  055E                     l5993:	
  3969                           	line	49
  3970                           	
  3971  055E                     l7865:	
  3972                           ;Timer1.c: 47: }
  3973                           ;Timer1.c: 49: if(Timer1->Count3<500)
  3974  055E  0857               	movf	(_Timer1),w
  3975  055F  3E07               	addlw	07h
  3976  0560  0084               	movwf	fsr0
  3977  0561  0800               	movf	indf,w
  3978  0562  00C6               	movwf	(??_TMR1_Main+0)+0+0
  3979  0563  0A84               	incf	fsr0,f
  3980  0564  0800               	movf	indf,w
  3981  0565  00C7               	movwf	(??_TMR1_Main+0)+0+1
  3982  0566  3001               	movlw	high(01F4h)
  3983  0567  0247               	subwf	1+(??_TMR1_Main+0)+0,w
  3984  0568  30F4               	movlw	low(01F4h)
  3985  0569  1903               	skipnz
  3986  056A  0246               	subwf	0+(??_TMR1_Main+0)+0,w
  3987  056B  1803               	skipnc
  3988  056C  2D6E               	goto	u3421
  3989  056D  2D6F               	goto	u3420
  3990  056E                     u3421:
  3991  056E  2D78               	goto	l7869
  3992  056F                     u3420:
  3993                           	line	50
  3994                           	
  3995  056F                     l7867:	
  3996                           ;Timer1.c: 50: Timer1->Count3++;
  3997  056F  0857               	movf	(_Timer1),w
  3998  0570  3E07               	addlw	07h
  3999  0571  0084               	movwf	fsr0
  4000  0572  3001               	movlw	01h
  4001  0573  0780               	addwf	indf,f
  4002  0574  0A84               	incf	fsr0,f
  4003  0575  1803               	skipnc
  4004  0576  0A80               	incf	indf,f
  4005  0577  2D82               	goto	l5996
  4006                           	line	51
  4007                           	
  4008  0578                     l5994:	
  4009                           	line	53
  4010                           	
  4011  0578                     l7869:	
  4012                           ;Timer1.c: 51: else
  4013                           ;Timer1.c: 52: {
  4014                           ;Timer1.c: 53: Timer1->Count3=0;
  4015  0578  0857               	movf	(_Timer1),w
  4016  0579  3E07               	addlw	07h
  4017  057A  0084               	movwf	fsr0
  4018  057B  3000               	movlw	low(0)
  4019  057C  0080               	movwf	indf
  4020  057D  0A84               	incf	fsr0,f
  4021  057E  3000               	movlw	high(0)
  4022  057F  0080               	movwf	indf
  4023  0580  2D82               	goto	l5996
  4024                           	line	61
  4025                           	
  4026  0581                     l5995:	
  4027  0581  2D82               	goto	l5996
  4028                           	line	62
  4029                           	
  4030  0582                     l5991:	
  4031                           	line	63
  4032                           	
  4033  0582                     l5996:	
  4034  0582  0008               	return
  4035                           	opt stack 0
  4036                           GLOBAL	__end_of_TMR1_Main
  4037  0583                     	__end_of_TMR1_Main:
  4038 ;; =============== function _TMR1_Main ends ============
  4039                           
  4040                           	signat	_TMR1_Main,88
  4041                           	global	_LED_Setting
  4042                           psect	text390,local,class=CODE,delta=2
  4043                           global __ptext390
  4044  0F6F                     __ptext390:
  4045                           
  4046 ;; *************** function _LED_Setting *****************
  4047 ;; Defined at:
  4048 ;;		line 9 in file "G:\Program\PIC\Source_File\LED.c"
  4049 ;; Parameters:    Size  Location     Type
  4050 ;;  number          1    wreg     unsigned char 
  4051 ;; Auto vars:     Size  Location     Type
  4052 ;;  number          1    0[BANK0 ] unsigned char 
  4053 ;; Return value:  Size  Location     Type
  4054 ;;		None               void
  4055 ;; Registers used:
  4056 ;;		wreg, fsr0l, fsr0h
  4057 ;; Tracked objects:
  4058 ;;		On entry : 0/0
  4059 ;;		On exit  : 0/0
  4060 ;;		Unchanged: 0/0
  4061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4062 ;;      Params:         0       0       0       0
  4063 ;;      Locals:         0       1       0       0
  4064 ;;      Temps:          0       0       0       0
  4065 ;;      Totals:         0       1       0       0
  4066 ;;Total ram usage:        1 bytes
  4067 ;; Hardware stack levels used:    1
  4068 ;; Hardware stack levels required when called:    2
  4069 ;; This function calls:
  4070 ;;		Nothing
  4071 ;; This function is called by:
  4072 ;;		_main
  4073 ;;		_PIR_Main
  4074 ;;		_PIR_Switch
  4075 ;; This function uses a non-reentrant model
  4076 ;;
  4077                           psect	text390
  4078                           	file	"G:\Program\PIC\Source_File\LED.c"
  4079                           	line	9
  4080                           	global	__size_of_LED_Setting
  4081  0042                     	__size_of_LED_Setting	equ	__end_of_LED_Setting-_LED_Setting
  4082                           	
  4083  0F6F                     _LED_Setting:	
  4084                           	opt	stack 4
  4085                           ; Regs used in _LED_Setting: [wregfsr0]
  4086                           ;LED_Setting@number stored from wreg
  4087  0F6F  1283               	bcf	status, 5	;RP0=0, select bank0
  4088  0F70  1303               	bcf	status, 6	;RP1=0, select bank0
  4089  0F71  00C6               	movwf	(LED_Setting@number)
  4090                           	line	10
  4091                           	
  4092  0F72                     l7817:	
  4093                           ;LED.c: 10: if(LED->Enable == 1)
  4094  0F72  0856               	movf	(_LED),w
  4095  0F73  0084               	movwf	fsr0
  4096  0F74  1383               	bcf	status, 7	;select IRP bank0
  4097  0F75  1C00               	btfss	indf,0
  4098  0F76  2F78               	goto	u3311
  4099  0F77  2F79               	goto	u3310
  4100  0F78                     u3311:
  4101  0F78  2FB0               	goto	l3401
  4102  0F79                     u3310:
  4103                           	line	12
  4104                           	
  4105  0F79                     l7819:	
  4106                           ;LED.c: 11: {
  4107                           ;LED.c: 12: if(RB5 == 0)
  4108  0F79  1A86               	btfsc	(53/8),(53)&7
  4109  0F7A  2F7C               	goto	u3321
  4110  0F7B  2F7D               	goto	u3320
  4111  0F7C                     u3321:
  4112  0F7C  2F7F               	goto	l3391
  4113  0F7D                     u3320:
  4114                           	line	13
  4115                           	
  4116  0F7D                     l7821:	
  4117                           ;LED.c: 13: RB5 = 1;
  4118  0F7D  1686               	bsf	(53/8),(53)&7
  4119  0F7E  2F86               	goto	l7825
  4120                           	line	14
  4121                           	
  4122  0F7F                     l3391:	
  4123                           ;LED.c: 14: else if(RB4 == 0)
  4124  0F7F  1A06               	btfsc	(52/8),(52)&7
  4125  0F80  2F82               	goto	u3331
  4126  0F81  2F83               	goto	u3330
  4127  0F82                     u3331:
  4128  0F82  2F86               	goto	l7825
  4129  0F83                     u3330:
  4130                           	line	15
  4131                           	
  4132  0F83                     l7823:	
  4133                           ;LED.c: 15: RB4 = 1;
  4134  0F83  1606               	bsf	(52/8),(52)&7
  4135  0F84  2F86               	goto	l7825
  4136                           	
  4137  0F85                     l3393:	
  4138  0F85  2F86               	goto	l7825
  4139                           	line	17
  4140                           	
  4141  0F86                     l3392:	
  4142                           	
  4143  0F86                     l7825:	
  4144                           ;LED.c: 17: if(number == 1)
  4145  0F86  0846               	movf	(LED_Setting@number),w
  4146  0F87  3A01               	xorlw	01h
  4147  0F88  1D03               	skipz
  4148  0F89  2F8B               	goto	u3341
  4149  0F8A  2F8C               	goto	u3340
  4150  0F8B                     u3341:
  4151  0F8B  2F8E               	goto	l7829
  4152  0F8C                     u3340:
  4153                           	line	18
  4154                           	
  4155  0F8C                     l7827:	
  4156                           ;LED.c: 18: RB5 = 0;
  4157  0F8C  1286               	bcf	(53/8),(53)&7
  4158  0F8D  2FB0               	goto	l3401
  4159                           	line	19
  4160                           	
  4161  0F8E                     l3394:	
  4162                           	
  4163  0F8E                     l7829:	
  4164                           ;LED.c: 19: else if(number == 2)
  4165  0F8E  0846               	movf	(LED_Setting@number),w
  4166  0F8F  3A02               	xorlw	02h
  4167  0F90  1D03               	skipz
  4168  0F91  2F93               	goto	u3351
  4169  0F92  2F94               	goto	u3350
  4170  0F93                     u3351:
  4171  0F93  2F96               	goto	l7833
  4172  0F94                     u3350:
  4173                           	line	20
  4174                           	
  4175  0F94                     l7831:	
  4176                           ;LED.c: 20: RB4 = 0;
  4177  0F94  1206               	bcf	(52/8),(52)&7
  4178  0F95  2FB0               	goto	l3401
  4179                           	line	21
  4180                           	
  4181  0F96                     l3396:	
  4182                           	
  4183  0F96                     l7833:	
  4184                           ;LED.c: 21: else if(number == 31)
  4185  0F96  0846               	movf	(LED_Setting@number),w
  4186  0F97  3A1F               	xorlw	01Fh
  4187  0F98  1D03               	skipz
  4188  0F99  2F9B               	goto	u3361
  4189  0F9A  2F9C               	goto	u3360
  4190  0F9B                     u3361:
  4191  0F9B  2FA1               	goto	l7839
  4192  0F9C                     u3360:
  4193                           	line	23
  4194                           	
  4195  0F9C                     l7835:	
  4196                           ;LED.c: 22: {
  4197                           ;LED.c: 23: RB3 = 0;
  4198  0F9C  1186               	bcf	(51/8),(51)&7
  4199                           	line	24
  4200                           	
  4201  0F9D                     l7837:	
  4202                           ;LED.c: 24: LED->GO=1;
  4203  0F9D  0856               	movf	(_LED),w
  4204  0F9E  0084               	movwf	fsr0
  4205  0F9F  1480               	bsf	indf,1
  4206                           	line	25
  4207                           ;LED.c: 25: }
  4208  0FA0  2FB0               	goto	l3401
  4209                           	line	26
  4210                           	
  4211  0FA1                     l3398:	
  4212                           	
  4213  0FA1                     l7839:	
  4214                           ;LED.c: 26: else if(number == 30)
  4215  0FA1  0846               	movf	(LED_Setting@number),w
  4216  0FA2  3A1E               	xorlw	01Eh
  4217  0FA3  1D03               	skipz
  4218  0FA4  2FA6               	goto	u3371
  4219  0FA5  2FA7               	goto	u3370
  4220  0FA6                     u3371:
  4221  0FA6  2FB0               	goto	l3401
  4222  0FA7                     u3370:
  4223                           	line	28
  4224                           	
  4225  0FA7                     l7841:	
  4226                           ;LED.c: 27: {
  4227                           ;LED.c: 28: RB3 = 1;
  4228  0FA7  1586               	bsf	(51/8),(51)&7
  4229                           	line	29
  4230                           	
  4231  0FA8                     l7843:	
  4232                           ;LED.c: 29: LED->GO=0;
  4233  0FA8  0856               	movf	(_LED),w
  4234  0FA9  0084               	movwf	fsr0
  4235  0FAA  1080               	bcf	indf,1
  4236  0FAB  2FB0               	goto	l3401
  4237                           	line	30
  4238                           	
  4239  0FAC                     l3400:	
  4240  0FAC  2FB0               	goto	l3401
  4241                           	line	31
  4242                           	
  4243  0FAD                     l3399:	
  4244  0FAD  2FB0               	goto	l3401
  4245                           	
  4246  0FAE                     l3397:	
  4247  0FAE  2FB0               	goto	l3401
  4248                           	
  4249  0FAF                     l3395:	
  4250  0FAF  2FB0               	goto	l3401
  4251                           	
  4252  0FB0                     l3390:	
  4253                           	line	32
  4254                           	
  4255  0FB0                     l3401:	
  4256  0FB0  0008               	return
  4257                           	opt stack 0
  4258                           GLOBAL	__end_of_LED_Setting
  4259  0FB1                     	__end_of_LED_Setting:
  4260 ;; =============== function _LED_Setting ends ============
  4261                           
  4262                           	signat	_LED_Setting,4216
  4263                           	global	_Mcu_Initial
  4264                           psect	text391,local,class=CODE,delta=2
  4265                           global __ptext391
  4266  0F3A                     __ptext391:
  4267                           
  4268 ;; *************** function _Mcu_Initial *****************
  4269 ;; Defined at:
  4270 ;;		line 73 in file "G:\Program\PIC\Source_File\MCU_16F723A.c"
  4271 ;; Parameters:    Size  Location     Type
  4272 ;;		None
  4273 ;; Auto vars:     Size  Location     Type
  4274 ;;		None
  4275 ;; Return value:  Size  Location     Type
  4276 ;;		None               void
  4277 ;; Registers used:
  4278 ;;		wreg, status,2
  4279 ;; Tracked objects:
  4280 ;;		On entry : 0/0
  4281 ;;		On exit  : 0/0
  4282 ;;		Unchanged: 0/0
  4283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4284 ;;      Params:         0       0       0       0
  4285 ;;      Locals:         0       0       0       0
  4286 ;;      Temps:          0       1       0       0
  4287 ;;      Totals:         0       1       0       0
  4288 ;;Total ram usage:        1 bytes
  4289 ;; Hardware stack levels used:    1
  4290 ;; Hardware stack levels required when called:    2
  4291 ;; This function calls:
  4292 ;;		Nothing
  4293 ;; This function is called by:
  4294 ;;		_main
  4295 ;; This function uses a non-reentrant model
  4296 ;;
  4297                           psect	text391
  4298                           	file	"G:\Program\PIC\Source_File\MCU_16F723A.c"
  4299                           	line	73
  4300                           	global	__size_of_Mcu_Initial
  4301  0035                     	__size_of_Mcu_Initial	equ	__end_of_Mcu_Initial-_Mcu_Initial
  4302                           	
  4303  0F3A                     _Mcu_Initial:	
  4304                           	opt	stack 5
  4305                           ; Regs used in _Mcu_Initial: [wreg+status,2]
  4306                           	line	75
  4307                           	
  4308  0F3A                     l7777:	
  4309                           ;MCU_16F723A.c: 75: TRISA=0xaf; TRISB=0x01; TRISC=0x00; ANSELA=0x07; ANSELB=0x01; PORTA=
                                 0xaf; PORTB=0x01; PORTC=0x00;
  4310  0F3A  30AF               	movlw	(0AFh)
  4311  0F3B  1683               	bsf	status, 5	;RP0=1, select bank1
  4312  0F3C  1303               	bcf	status, 6	;RP1=0, select bank1
  4313  0F3D  0085               	movwf	(133)^080h	;volatile
  4314  0F3E  3001               	movlw	(01h)
  4315  0F3F  0086               	movwf	(134)^080h	;volatile
  4316                           	
  4317  0F40                     l7779:	
  4318  0F40  0187               	clrf	(135)^080h	;volatile
  4319                           	
  4320  0F41                     l7781:	
  4321  0F41  3007               	movlw	(07h)
  4322  0F42  1683               	bsf	status, 5	;RP0=1, select bank3
  4323  0F43  1703               	bsf	status, 6	;RP1=1, select bank3
  4324  0F44  0085               	movwf	(389)^0180h	;volatile
  4325                           	
  4326  0F45                     l7783:	
  4327  0F45  3001               	movlw	(01h)
  4328  0F46  0086               	movwf	(390)^0180h	;volatile
  4329                           	
  4330  0F47                     l7785:	
  4331  0F47  30AF               	movlw	(0AFh)
  4332  0F48  1283               	bcf	status, 5	;RP0=0, select bank0
  4333  0F49  1303               	bcf	status, 6	;RP1=0, select bank0
  4334  0F4A  0085               	movwf	(5)	;volatile
  4335                           	
  4336  0F4B                     l7787:	
  4337  0F4B  3001               	movlw	(01h)
  4338  0F4C  0086               	movwf	(6)	;volatile
  4339                           	
  4340  0F4D                     l7789:	
  4341  0F4D  0187               	clrf	(7)	;volatile
  4342                           	line	79
  4343                           ;MCU_16F723A.c: 79: OSCCON=0x3c;
  4344  0F4E  303C               	movlw	(03Ch)
  4345  0F4F  1683               	bsf	status, 5	;RP0=1, select bank1
  4346  0F50  1303               	bcf	status, 6	;RP1=0, select bank1
  4347  0F51  0090               	movwf	(144)^080h	;volatile
  4348                           	line	81
  4349                           	
  4350  0F52                     l7791:	
  4351                           ;MCU_16F723A.c: 81: OPTION_REG=0x00;
  4352  0F52  0181               	clrf	(129)^080h	;volatile
  4353                           	line	85
  4354                           	
  4355  0F53                     l7793:	
  4356                           ;MCU_16F723A.c: 85: ADCON1=0x73;
  4357  0F53  3073               	movlw	(073h)
  4358  0F54  009F               	movwf	(159)^080h	;volatile
  4359                           	line	86
  4360                           	
  4361  0F55                     l7795:	
  4362                           ;MCU_16F723A.c: 86: FVRCON=0xc1;
  4363  0F55  30C1               	movlw	(0C1h)
  4364  0F56  009D               	movwf	(157)^080h	;volatile
  4365                           	line	89
  4366                           	
  4367  0F57                     l7797:	
  4368                           ;MCU_16F723A.c: 89: Timer1=&VarTimer1; GIE=1; PEIE=1; T1CON=(0x00 | 0x41); TMR1IE=1; TMR
                                 1H=((65536-(1*200))/256); TMR1L=((65536-(1*200))%256); TMR1IF=0;;
  4369  0F57  3031               	movlw	(_VarTimer1)&0ffh
  4370  0F58  1283               	bcf	status, 5	;RP0=0, select bank0
  4371  0F59  1303               	bcf	status, 6	;RP1=0, select bank0
  4372  0F5A  00C6               	movwf	(??_Mcu_Initial+0)+0
  4373  0F5B  0846               	movf	(??_Mcu_Initial+0)+0,w
  4374  0F5C  00D7               	movwf	(_Timer1)
  4375                           	
  4376  0F5D                     l7799:	
  4377  0F5D  178B               	bsf	(95/8),(95)&7
  4378                           	
  4379  0F5E                     l7801:	
  4380  0F5E  170B               	bsf	(94/8),(94)&7
  4381                           	
  4382  0F5F                     l7803:	
  4383  0F5F  3041               	movlw	(041h)
  4384  0F60  0090               	movwf	(16)	;volatile
  4385                           	
  4386  0F61                     l7805:	
  4387  0F61  1683               	bsf	status, 5	;RP0=1, select bank1
  4388  0F62  1303               	bcf	status, 6	;RP1=0, select bank1
  4389  0F63  140C               	bsf	(1120/8)^080h,(1120)&7
  4390                           	
  4391  0F64                     l7807:	
  4392  0F64  30FF               	movlw	(0FFh)
  4393  0F65  1283               	bcf	status, 5	;RP0=0, select bank0
  4394  0F66  1303               	bcf	status, 6	;RP1=0, select bank0
  4395  0F67  008F               	movwf	(15)	;volatile
  4396                           	
  4397  0F68                     l7809:	
  4398  0F68  3038               	movlw	(038h)
  4399  0F69  008E               	movwf	(14)	;volatile
  4400                           	
  4401  0F6A                     l7811:	
  4402  0F6A  100C               	bcf	(96/8),(96)&7
  4403                           	line	91
  4404                           	
  4405  0F6B                     l7813:	
  4406                           ;MCU_16F723A.c: 91: TMR0IE=0;
  4407  0F6B  128B               	bcf	(93/8),(93)&7
  4408                           	line	92
  4409                           	
  4410  0F6C                     l7815:	
  4411                           ;MCU_16F723A.c: 92: TMR0=256-10;
  4412  0F6C  30F6               	movlw	(0F6h)
  4413  0F6D  0081               	movwf	(1)	;volatile
  4414                           	line	106
  4415                           	
  4416  0F6E                     l1711:	
  4417  0F6E  0008               	return
  4418                           	opt stack 0
  4419                           GLOBAL	__end_of_Mcu_Initial
  4420  0F6F                     	__end_of_Mcu_Initial:
  4421 ;; =============== function _Mcu_Initial ends ============
  4422                           
  4423                           	signat	_Mcu_Initial,88
  4424                           	global	_Dimmer_Control
  4425                           psect	text392,local,class=CODE,delta=2
  4426                           global __ptext392
  4427  0681                     __ptext392:
  4428                           
  4429 ;; *************** function _Dimmer_Control *****************
  4430 ;; Defined at:
  4431 ;;		line 103 in file "G:\Program\PIC\Source_File\Dimmer.c"
  4432 ;; Parameters:    Size  Location     Type
  4433 ;;  number          1    wreg     unsigned char 
  4434 ;; Auto vars:     Size  Location     Type
  4435 ;;  number          1    1[BANK0 ] unsigned char 
  4436 ;; Return value:  Size  Location     Type
  4437 ;;		None               void
  4438 ;; Registers used:
  4439 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4440 ;; Tracked objects:
  4441 ;;		On entry : 0/0
  4442 ;;		On exit  : 0/0
  4443 ;;		Unchanged: 0/0
  4444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4445 ;;      Params:         0       0       0       0
  4446 ;;      Locals:         0       1       0       0
  4447 ;;      Temps:          0       1       0       0
  4448 ;;      Totals:         0       2       0       0
  4449 ;;Total ram usage:        2 bytes
  4450 ;; Hardware stack levels used:    1
  4451 ;; Hardware stack levels required when called:    2
  4452 ;; This function calls:
  4453 ;;		Nothing
  4454 ;; This function is called by:
  4455 ;;		_PIR_Main
  4456 ;;		_PIR_Switch
  4457 ;; This function uses a non-reentrant model
  4458 ;;
  4459                           psect	text392
  4460                           	file	"G:\Program\PIC\Source_File\Dimmer.c"
  4461                           	line	103
  4462                           	global	__size_of_Dimmer_Control
  4463  006F                     	__size_of_Dimmer_Control	equ	__end_of_Dimmer_Control-_Dimmer_Control
  4464                           	
  4465  0681                     _Dimmer_Control:	
  4466                           	opt	stack 4
  4467                           ; Regs used in _Dimmer_Control: [wreg-fsr0h+status,2+status,0]
  4468                           ;Dimmer_Control@number stored from wreg
  4469  0681  1283               	bcf	status, 5	;RP0=0, select bank0
  4470  0682  1303               	bcf	status, 6	;RP1=0, select bank0
  4471  0683  00C7               	movwf	(Dimmer_Control@number)
  4472                           	line	104
  4473                           	
  4474  0684                     l7739:	
  4475                           ;Dimmer.c: 104: if(number==0)
  4476  0684  08C7               	movf	(Dimmer_Control@number),f
  4477  0685  1D03               	skipz
  4478  0686  2E88               	goto	u3231
  4479  0687  2E89               	goto	u3230
  4480  0688                     u3231:
  4481  0688  2ED5               	goto	l7753
  4482  0689                     u3230:
  4483                           	line	106
  4484                           	
  4485  0689                     l7741:	
  4486                           ;Dimmer.c: 105: {
  4487                           ;Dimmer.c: 106: Dimmer->Lights=0;
  4488  0689  0855               	movf	(_Dimmer),w
  4489  068A  3E0A               	addlw	0Ah
  4490  068B  0084               	movwf	fsr0
  4491  068C  1383               	bcf	status, 7	;select IRP bank0
  4492  068D  1080               	bcf	indf,1
  4493                           	line	107
  4494                           ;Dimmer.c: 108: if(2 == 2)
  4495  068E  0855               	movf	(_Dimmer),w
  4496  068F  3E0A               	addlw	0Ah
  4497  0690  0084               	movwf	fsr0
  4498  0691  1400               	bsf	indf,0
  4499                           	line	110
  4500                           ;Dimmer.c: 109: {
  4501                           ;Dimmer.c: 110: if(Dimmer->Phase2 == 1) { Dimmer->Minimum=157; Dimmer->DimmingTimeValue=
                                 4; } else { Dimmer->DimmingTimeValue=2; if(PIR->Switch == 0) { Dimmer->Phase2 = 1; Dimme
                                 r->Minimum=157; } else { Dimmer->Minimum=132; } };
  4502  0692  0855               	movf	(_Dimmer),w
  4503  0693  3E0A               	addlw	0Ah
  4504  0694  0084               	movwf	fsr0
  4505  0695  1D80               	btfss	indf,3
  4506  0696  2E98               	goto	u3241
  4507  0697  2E99               	goto	u3240
  4508  0698                     u3241:
  4509  0698  2EA8               	goto	l7745
  4510  0699                     u3240:
  4511                           	
  4512  0699                     l7743:	
  4513  0699  309D               	movlw	(09Dh)
  4514  069A  00C6               	movwf	(??_Dimmer_Control+0)+0
  4515  069B  0855               	movf	(_Dimmer),w
  4516  069C  3E0C               	addlw	0Ch
  4517  069D  0084               	movwf	fsr0
  4518  069E  0846               	movf	(??_Dimmer_Control+0)+0,w
  4519  069F  0080               	movwf	indf
  4520  06A0  3004               	movlw	(04h)
  4521  06A1  00C6               	movwf	(??_Dimmer_Control+0)+0
  4522  06A2  0855               	movf	(_Dimmer),w
  4523  06A3  3E08               	addlw	08h
  4524  06A4  0084               	movwf	fsr0
  4525  06A5  0846               	movf	(??_Dimmer_Control+0)+0,w
  4526  06A6  0080               	movwf	indf
  4527  06A7  2EEF               	goto	l871
  4528                           	
  4529  06A8                     l861:	
  4530                           	
  4531  06A8                     l7745:	
  4532  06A8  3002               	movlw	(02h)
  4533  06A9  00C6               	movwf	(??_Dimmer_Control+0)+0
  4534  06AA  0855               	movf	(_Dimmer),w
  4535  06AB  3E08               	addlw	08h
  4536  06AC  0084               	movwf	fsr0
  4537  06AD  0846               	movf	(??_Dimmer_Control+0)+0,w
  4538  06AE  0080               	movwf	indf
  4539  06AF  0822               	movf	(_PIR),w
  4540  06B0  3E13               	addlw	013h
  4541  06B1  0084               	movwf	fsr0
  4542  06B2  1900               	btfsc	indf,2
  4543  06B3  2EB5               	goto	u3251
  4544  06B4  2EB6               	goto	u3250
  4545  06B5                     u3251:
  4546  06B5  2EC2               	goto	l7749
  4547  06B6                     u3250:
  4548                           	
  4549  06B6                     l7747:	
  4550  06B6  0855               	movf	(_Dimmer),w
  4551  06B7  3E0A               	addlw	0Ah
  4552  06B8  0084               	movwf	fsr0
  4553  06B9  1580               	bsf	indf,3
  4554  06BA  309D               	movlw	(09Dh)
  4555  06BB  00C6               	movwf	(??_Dimmer_Control+0)+0
  4556  06BC  0855               	movf	(_Dimmer),w
  4557  06BD  3E0C               	addlw	0Ch
  4558  06BE  0084               	movwf	fsr0
  4559  06BF  0846               	movf	(??_Dimmer_Control+0)+0,w
  4560  06C0  0080               	movwf	indf
  4561  06C1  2EEF               	goto	l871
  4562                           	
  4563  06C2                     l863:	
  4564                           	
  4565  06C2                     l7749:	
  4566  06C2  3084               	movlw	(084h)
  4567  06C3  00C6               	movwf	(??_Dimmer_Control+0)+0
  4568  06C4  0855               	movf	(_Dimmer),w
  4569  06C5  3E0C               	addlw	0Ch
  4570  06C6  0084               	movwf	fsr0
  4571  06C7  0846               	movf	(??_Dimmer_Control+0)+0,w
  4572  06C8  0080               	movwf	indf
  4573  06C9  2EEF               	goto	l871
  4574                           	
  4575  06CA                     l864:	
  4576  06CA  2EEF               	goto	l871
  4577                           	
  4578  06CB                     l862:	
  4579                           	line	111
  4580                           ;Dimmer.c: 111: }
  4581  06CB  2EEF               	goto	l871
  4582                           	line	112
  4583                           	
  4584  06CC                     l860:	
  4585                           	line	113
  4586                           	
  4587  06CC                     l7751:	
  4588                           ;Dimmer.c: 112: else
  4589                           ;Dimmer.c: 113: Dimmer->DimmingTimeValue=2;
  4590  06CC  3002               	movlw	(02h)
  4591  06CD  00C6               	movwf	(??_Dimmer_Control+0)+0
  4592  06CE  0855               	movf	(_Dimmer),w
  4593  06CF  3E08               	addlw	08h
  4594  06D0  0084               	movwf	fsr0
  4595  06D1  0846               	movf	(??_Dimmer_Control+0)+0,w
  4596  06D2  0080               	movwf	indf
  4597  06D3  2EEF               	goto	l871
  4598                           	
  4599  06D4                     l865:	
  4600                           	line	114
  4601                           ;Dimmer.c: 114: }
  4602  06D4  2EEF               	goto	l871
  4603                           	line	115
  4604                           	
  4605  06D5                     l859:	
  4606                           	
  4607  06D5                     l7753:	
  4608                           ;Dimmer.c: 115: else if(number==1)
  4609  06D5  0847               	movf	(Dimmer_Control@number),w
  4610  06D6  3A01               	xorlw	01h
  4611  06D7  1D03               	skipz
  4612  06D8  2EDA               	goto	u3261
  4613  06D9  2EDB               	goto	u3260
  4614  06DA                     u3261:
  4615  06DA  2EEF               	goto	l871
  4616  06DB                     u3260:
  4617                           	line	117
  4618                           	
  4619  06DB                     l7755:	
  4620                           ;Dimmer.c: 116: {
  4621                           ;Dimmer.c: 117: Dimmer->Lights=1;
  4622  06DB  0855               	movf	(_Dimmer),w
  4623  06DC  3E0A               	addlw	0Ah
  4624  06DD  0084               	movwf	fsr0
  4625  06DE  1383               	bcf	status, 7	;select IRP bank0
  4626  06DF  1480               	bsf	indf,1
  4627                           	line	118
  4628                           ;Dimmer.c: 118: Dimmer->Signal=1;
  4629  06E0  0855               	movf	(_Dimmer),w
  4630  06E1  3E0A               	addlw	0Ah
  4631  06E2  0084               	movwf	fsr0
  4632  06E3  1400               	bsf	indf,0
  4633                           	line	119
  4634                           ;Dimmer.c: 120: if(2 == 0 || 2 == 2)
  4635  06E4  0855               	movf	(_Dimmer),w
  4636  06E5  3E08               	addlw	08h
  4637  06E6  0084               	movwf	fsr0
  4638  06E7  0180               	clrf	indf
  4639                           	line	120
  4640                           	
  4641  06E8                     l870:	
  4642                           	line	121
  4643                           ;Dimmer.c: 121: Dimmer->Triac=1;
  4644  06E8  0855               	movf	(_Dimmer),w
  4645  06E9  3E0A               	addlw	0Ah
  4646  06EA  0084               	movwf	fsr0
  4647  06EB  1500               	bsf	indf,2
  4648  06EC  2EEF               	goto	l871
  4649                           	
  4650  06ED                     l868:	
  4651  06ED  2EEF               	goto	l871
  4652                           	line	122
  4653                           	
  4654  06EE                     l867:	
  4655  06EE  2EEF               	goto	l871
  4656                           	line	123
  4657                           	
  4658  06EF                     l866:	
  4659                           	
  4660  06EF                     l871:	
  4661  06EF  0008               	return
  4662                           	opt stack 0
  4663                           GLOBAL	__end_of_Dimmer_Control
  4664  06F0                     	__end_of_Dimmer_Control:
  4665 ;; =============== function _Dimmer_Control ends ============
  4666                           
  4667                           	signat	_Dimmer_Control,4216
  4668                           	global	_ISR
  4669                           psect	text393,local,class=CODE,delta=2
  4670                           global __ptext393
  4671  0FB1                     __ptext393:
  4672                           
  4673 ;; *************** function _ISR *****************
  4674 ;; Defined at:
  4675 ;;		line 16 in file "G:\Program\PIC\Source_File\MCU_16F723A.c"
  4676 ;; Parameters:    Size  Location     Type
  4677 ;;		None
  4678 ;; Auto vars:     Size  Location     Type
  4679 ;;		None
  4680 ;; Return value:  Size  Location     Type
  4681 ;;		None               void
  4682 ;; Registers used:
  4683 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4684 ;; Tracked objects:
  4685 ;;		On entry : 0/0
  4686 ;;		On exit  : 0/0
  4687 ;;		Unchanged: 0/0
  4688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4689 ;;      Params:         0       0       0       0
  4690 ;;      Locals:         0       0       0       0
  4691 ;;      Temps:          6       0       0       0
  4692 ;;      Totals:         6       0       0       0
  4693 ;;Total ram usage:        6 bytes
  4694 ;; Hardware stack levels used:    1
  4695 ;; Hardware stack levels required when called:    1
  4696 ;; This function calls:
  4697 ;;		_Dimmer_Main
  4698 ;; This function is called by:
  4699 ;;		Interrupt level 1
  4700 ;; This function uses a non-reentrant model
  4701 ;;
  4702                           psect	text393
  4703                           	file	"G:\Program\PIC\Source_File\MCU_16F723A.c"
  4704                           	line	16
  4705                           	global	__size_of_ISR
  4706  004F                     	__size_of_ISR	equ	__end_of_ISR-_ISR
  4707                           	
  4708  0FB1                     _ISR:	
  4709                           	opt	stack 3
  4710                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4711                           psect	intentry,class=CODE,delta=2
  4712                           global __pintentry
  4713  0004                     __pintentry:
  4714                           global interrupt_function
  4715  0004                     interrupt_function:
  4716                           	global saved_w
  4717  007E                     	saved_w	set	btemp+0
  4718  0004  00FE               	movwf	saved_w
  4719  0005  0E03               	swapf	status,w
  4720  0006  00F4               	movwf	(??_ISR+2)
  4721  0007  0804               	movf	fsr0,w
  4722  0008  00F5               	movwf	(??_ISR+3)
  4723  0009  080A               	movf	pclath,w
  4724  000A  00F6               	movwf	(??_ISR+4)
  4725  000B  1283               	bcf	status, 5	;RP0=0, select bank0
  4726  000C  1303               	bcf	status, 6	;RP1=0, select bank0
  4727  000D  087F               	movf	btemp+1,w
  4728  000E  00F7               	movwf	(??_ISR+5)
  4729  000F  158A  2FB1         	ljmp	_ISR
  4730                           psect	text393
  4731                           	line	42
  4732                           	
  4733  0FB1                     i1l7757:	
  4734                           ;MCU_16F723A.c: 42: if(TMR1IE && TMR1IF)
  4735  0FB1  1683               	bsf	status, 5	;RP0=1, select bank1
  4736  0FB2  1303               	bcf	status, 6	;RP1=0, select bank1
  4737  0FB3  1C0C               	btfss	(1120/8)^080h,(1120)&7
  4738  0FB4  2FB6               	goto	u327_21
  4739  0FB5  2FB7               	goto	u327_20
  4740  0FB6                     u327_21:
  4741  0FB6  2FF4               	goto	i1l1708
  4742  0FB7                     u327_20:
  4743                           	
  4744  0FB7                     i1l7759:	
  4745  0FB7  1283               	bcf	status, 5	;RP0=0, select bank0
  4746  0FB8  1303               	bcf	status, 6	;RP1=0, select bank0
  4747  0FB9  1C0C               	btfss	(96/8),(96)&7
  4748  0FBA  2FBC               	goto	u328_21
  4749  0FBB  2FBD               	goto	u328_20
  4750  0FBC                     u328_21:
  4751  0FBC  2FF4               	goto	i1l1708
  4752  0FBD                     u328_20:
  4753                           	line	44
  4754                           	
  4755  0FBD                     i1l7761:	
  4756                           ;MCU_16F723A.c: 43: {
  4757                           ;MCU_16F723A.c: 44: if(Timer1->PowerON==1)
  4758  0FBD  0857               	movf	(_Timer1),w
  4759  0FBE  0084               	movwf	fsr0
  4760  0FBF  1383               	bcf	status, 7	;select IRP bank0
  4761  0FC0  1C00               	btfss	indf,0
  4762  0FC1  2FC3               	goto	u329_21
  4763  0FC2  2FC4               	goto	u329_20
  4764  0FC3                     u329_21:
  4765  0FC3  2FC8               	goto	i1l7765
  4766  0FC4                     u329_20:
  4767                           	line	46
  4768                           	
  4769  0FC4                     i1l7763:	
  4770                           ;MCU_16F723A.c: 45: {
  4771                           ;MCU_16F723A.c: 46: Dimmer_Main();
  4772  0FC4  118A  232B  158A   	fcall	_Dimmer_Main
  4773  0FC7  2FC8               	goto	i1l7765
  4774                           	line	47
  4775                           	
  4776  0FC8                     i1l1706:	
  4777                           	line	49
  4778                           	
  4779  0FC8                     i1l7765:	
  4780                           ;MCU_16F723A.c: 47: }
  4781                           ;MCU_16F723A.c: 49: Timer1->Count++;
  4782  0FC8  1283               	bcf	status, 5	;RP0=0, select bank0
  4783  0FC9  1303               	bcf	status, 6	;RP1=0, select bank0
  4784  0FCA  0857               	movf	(_Timer1),w
  4785  0FCB  3E01               	addlw	01h
  4786  0FCC  0084               	movwf	fsr0
  4787  0FCD  3001               	movlw	01h
  4788  0FCE  1383               	bcf	status, 7	;select IRP bank0
  4789  0FCF  0780               	addwf	indf,f
  4790  0FD0  0A84               	incf	fsr0,f
  4791  0FD1  1803               	skipnc
  4792  0FD2  0A80               	incf	indf,f
  4793                           	line	50
  4794                           	
  4795  0FD3                     i1l7767:	
  4796                           ;MCU_16F723A.c: 50: if(Timer1->Count == 200)
  4797  0FD3  0857               	movf	(_Timer1),w
  4798  0FD4  3E01               	addlw	01h
  4799  0FD5  0084               	movwf	fsr0
  4800  0FD6  0800               	movf	indf,w
  4801  0FD7  00F2               	movwf	(??_ISR+0)+0+0
  4802  0FD8  0A84               	incf	fsr0,f
  4803  0FD9  0800               	movf	indf,w
  4804  0FDA  00F3               	movwf	(??_ISR+0)+0+1
  4805  0FDB  30C8               	movlw	0C8h
  4806  0FDC  0672               	xorwf	0+(??_ISR+0)+0,w
  4807  0FDD  0473               	iorwf	1+(??_ISR+0)+0,w
  4808  0FDE  1D03               	skipz
  4809  0FDF  2FE1               	goto	u330_21
  4810  0FE0  2FE2               	goto	u330_20
  4811  0FE1                     u330_21:
  4812  0FE1  2FEE               	goto	i1l7771
  4813  0FE2                     u330_20:
  4814                           	line	52
  4815                           	
  4816  0FE2                     i1l7769:	
  4817                           ;MCU_16F723A.c: 51: {
  4818                           ;MCU_16F723A.c: 52: Timer1->Count=0;
  4819  0FE2  0857               	movf	(_Timer1),w
  4820  0FE3  3E01               	addlw	01h
  4821  0FE4  0084               	movwf	fsr0
  4822  0FE5  3000               	movlw	low(0)
  4823  0FE6  0080               	movwf	indf
  4824  0FE7  0A84               	incf	fsr0,f
  4825  0FE8  3000               	movlw	high(0)
  4826  0FE9  0080               	movwf	indf
  4827                           	line	53
  4828                           ;MCU_16F723A.c: 53: Timer1->Timeout=1;
  4829  0FEA  0857               	movf	(_Timer1),w
  4830  0FEB  0084               	movwf	fsr0
  4831  0FEC  1500               	bsf	indf,2
  4832  0FED  2FEE               	goto	i1l7771
  4833                           	line	54
  4834                           	
  4835  0FEE                     i1l1707:	
  4836                           	line	56
  4837                           	
  4838  0FEE                     i1l7771:	
  4839                           ;MCU_16F723A.c: 54: }
  4840                           ;MCU_16F723A.c: 56: TMR1H=((65536-(1*200))/256);
  4841  0FEE  30FF               	movlw	(0FFh)
  4842  0FEF  008F               	movwf	(15)	;volatile
  4843                           	line	57
  4844                           	
  4845  0FF0                     i1l7773:	
  4846                           ;MCU_16F723A.c: 57: TMR1L=((65536-(1*200))%256);
  4847  0FF0  3038               	movlw	(038h)
  4848  0FF1  008E               	movwf	(14)	;volatile
  4849                           	line	58
  4850                           	
  4851  0FF2                     i1l7775:	
  4852                           ;MCU_16F723A.c: 58: TMR1IF=0;
  4853  0FF2  100C               	bcf	(96/8),(96)&7
  4854  0FF3  2FF4               	goto	i1l1708
  4855                           	line	59
  4856                           	
  4857  0FF4                     i1l1705:	
  4858                           	line	68
  4859                           	
  4860  0FF4                     i1l1708:	
  4861  0FF4  0877               	movf	(??_ISR+5),w
  4862  0FF5  1283               	bcf	status, 5	;RP0=0, select bank0
  4863  0FF6  00FF               	movwf	btemp+1
  4864  0FF7  0876               	movf	(??_ISR+4),w
  4865  0FF8  008A               	movwf	pclath
  4866  0FF9  0875               	movf	(??_ISR+3),w
  4867  0FFA  0084               	movwf	fsr0
  4868  0FFB  0E74               	swapf	(??_ISR+2)^0FFFFFF80h,w
  4869  0FFC  0083               	movwf	status
  4870  0FFD  0EFE               	swapf	saved_w,f
  4871  0FFE  0E7E               	swapf	saved_w,w
  4872  0FFF  0009               	retfie
  4873                           	opt stack 0
  4874                           GLOBAL	__end_of_ISR
  4875  1000                     	__end_of_ISR:
  4876 ;; =============== function _ISR ends ============
  4877                           
  4878                           	signat	_ISR,88
  4879                           	global	_Dimmer_Main
  4880                           psect	text394,local,class=CODE,delta=2
  4881                           global __ptext394
  4882  032B                     __ptext394:
  4883                           
  4884 ;; *************** function _Dimmer_Main *****************
  4885 ;; Defined at:
  4886 ;;		line 9 in file "G:\Program\PIC\Source_File\Dimmer.c"
  4887 ;; Parameters:    Size  Location     Type
  4888 ;;		None
  4889 ;; Auto vars:     Size  Location     Type
  4890 ;;		None
  4891 ;; Return value:  Size  Location     Type
  4892 ;;		None               void
  4893 ;; Registers used:
  4894 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4895 ;; Tracked objects:
  4896 ;;		On entry : 0/0
  4897 ;;		On exit  : 0/0
  4898 ;;		Unchanged: 0/0
  4899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4900 ;;      Params:         0       0       0       0
  4901 ;;      Locals:         0       0       0       0
  4902 ;;      Temps:          2       0       0       0
  4903 ;;      Totals:         2       0       0       0
  4904 ;;Total ram usage:        2 bytes
  4905 ;; Hardware stack levels used:    1
  4906 ;; This function calls:
  4907 ;;		Nothing
  4908 ;; This function is called by:
  4909 ;;		_ISR
  4910 ;; This function uses a non-reentrant model
  4911 ;;
  4912                           psect	text394
  4913                           	file	"G:\Program\PIC\Source_File\Dimmer.c"
  4914                           	line	9
  4915                           	global	__size_of_Dimmer_Main
  4916  0112                     	__size_of_Dimmer_Main	equ	__end_of_Dimmer_Main-_Dimmer_Main
  4917                           	
  4918  032B                     _Dimmer_Main:	
  4919                           	opt	stack 3
  4920                           ; Regs used in _Dimmer_Main: [wreg-fsr0h+status,2+status,0]
  4921                           	line	10
  4922                           	
  4923  032B                     i1l7683:	
  4924                           ;Dimmer.c: 10: Dimmer->Count++;
  4925  032B  3001               	movlw	(01h)
  4926  032C  00F0               	movwf	(??_Dimmer_Main+0)+0
  4927  032D  1283               	bcf	status, 5	;RP0=0, select bank0
  4928  032E  1303               	bcf	status, 6	;RP1=0, select bank0
  4929  032F  0855               	movf	(_Dimmer),w
  4930  0330  3E06               	addlw	06h
  4931  0331  0084               	movwf	fsr0
  4932  0332  0870               	movf	(??_Dimmer_Main+0)+0,w
  4933  0333  1383               	bcf	status, 7	;select IRP bank0
  4934  0334  0780               	addwf	indf,f
  4935                           	line	11
  4936                           	
  4937  0335                     i1l7685:	
  4938                           ;Dimmer.c: 11: if(RA7==1)
  4939  0335  1F85               	btfss	(47/8),(47)&7
  4940  0336  2B38               	goto	u307_21
  4941  0337  2B39               	goto	u307_20
  4942  0338                     u307_21:
  4943  0338  2B5A               	goto	i1l7693
  4944  0339                     u307_20:
  4945                           	line	13
  4946                           	
  4947  0339                     i1l7687:	
  4948                           ;Dimmer.c: 12: {
  4949                           ;Dimmer.c: 13: if(Dimmer->Input==0)
  4950  0339  0855               	movf	(_Dimmer),w
  4951  033A  3E05               	addlw	05h
  4952  033B  0084               	movwf	fsr0
  4953  033C  1800               	btfsc	indf,0
  4954  033D  2B3F               	goto	u308_21
  4955  033E  2B40               	goto	u308_20
  4956  033F                     u308_21:
  4957  033F  2B7F               	goto	i1l832
  4958  0340                     u308_20:
  4959                           	line	15
  4960                           	
  4961  0340                     i1l7689:	
  4962                           ;Dimmer.c: 14: {
  4963                           ;Dimmer.c: 15: Dimmer->Input=1;
  4964  0340  0855               	movf	(_Dimmer),w
  4965  0341  3E05               	addlw	05h
  4966  0342  0084               	movwf	fsr0
  4967  0343  1400               	bsf	indf,0
  4968                           	line	16
  4969                           ;Dimmer.c: 16: Dimmer->Offset = 0;
  4970  0344  0855               	movf	(_Dimmer),w
  4971  0345  3E0D               	addlw	0Dh
  4972  0346  0084               	movwf	fsr0
  4973  0347  0180               	clrf	indf
  4974                           	line	17
  4975                           ;Dimmer.c: 17: if(Dimmer->Ready==1)
  4976  0348  0855               	movf	(_Dimmer),w
  4977  0349  3E05               	addlw	05h
  4978  034A  0084               	movwf	fsr0
  4979  034B  1C80               	btfss	indf,1
  4980  034C  2B4E               	goto	u309_21
  4981  034D  2B4F               	goto	u309_20
  4982  034E                     u309_21:
  4983  034E  2B7F               	goto	i1l832
  4984  034F                     u309_20:
  4985                           	line	19
  4986                           	
  4987  034F                     i1l7691:	
  4988                           ;Dimmer.c: 18: {
  4989                           ;Dimmer.c: 19: Dimmer->GO=1;
  4990  034F  0855               	movf	(_Dimmer),w
  4991  0350  3E05               	addlw	05h
  4992  0351  0084               	movwf	fsr0
  4993  0352  1500               	bsf	indf,2
  4994                           	line	20
  4995                           ;Dimmer.c: 20: Dimmer->Count=0;
  4996  0353  0855               	movf	(_Dimmer),w
  4997  0354  3E06               	addlw	06h
  4998  0355  0084               	movwf	fsr0
  4999  0356  0180               	clrf	indf
  5000  0357  2B7F               	goto	i1l832
  5001                           	line	21
  5002                           	
  5003  0358                     i1l831:	
  5004  0358  2B7F               	goto	i1l832
  5005                           	line	22
  5006                           	
  5007  0359                     i1l830:	
  5008                           	line	23
  5009                           ;Dimmer.c: 21: }
  5010                           ;Dimmer.c: 22: }
  5011                           ;Dimmer.c: 23: }
  5012  0359  2B7F               	goto	i1l832
  5013                           	line	24
  5014                           	
  5015  035A                     i1l829:	
  5016                           	line	26
  5017                           	
  5018  035A                     i1l7693:	
  5019                           ;Dimmer.c: 24: else
  5020                           ;Dimmer.c: 25: {
  5021                           ;Dimmer.c: 26: if(Dimmer->Input==1)
  5022  035A  0855               	movf	(_Dimmer),w
  5023  035B  3E05               	addlw	05h
  5024  035C  0084               	movwf	fsr0
  5025  035D  1C00               	btfss	indf,0
  5026  035E  2B60               	goto	u310_21
  5027  035F  2B61               	goto	u310_20
  5028  0360                     u310_21:
  5029  0360  2B7F               	goto	i1l832
  5030  0361                     u310_20:
  5031                           	line	28
  5032                           	
  5033  0361                     i1l7695:	
  5034                           ;Dimmer.c: 27: {
  5035                           ;Dimmer.c: 28: Dimmer->Input=0;
  5036  0361  0855               	movf	(_Dimmer),w
  5037  0362  3E05               	addlw	05h
  5038  0363  0084               	movwf	fsr0
  5039  0364  1000               	bcf	indf,0
  5040                           	line	29
  5041                           ;Dimmer.c: 29: Dimmer->Offset = 0;
  5042  0365  0855               	movf	(_Dimmer),w
  5043  0366  3E0D               	addlw	0Dh
  5044  0367  0084               	movwf	fsr0
  5045  0368  0180               	clrf	indf
  5046                           	line	30
  5047                           ;Dimmer.c: 30: if(Dimmer->Ready==0)
  5048  0369  0855               	movf	(_Dimmer),w
  5049  036A  3E05               	addlw	05h
  5050  036B  0084               	movwf	fsr0
  5051  036C  1880               	btfsc	indf,1
  5052  036D  2B6F               	goto	u311_21
  5053  036E  2B70               	goto	u311_20
  5054  036F                     u311_21:
  5055  036F  2B75               	goto	i1l7699
  5056  0370                     u311_20:
  5057                           	line	31
  5058                           	
  5059  0370                     i1l7697:	
  5060                           ;Dimmer.c: 31: Dimmer->Ready=1;
  5061  0370  0855               	movf	(_Dimmer),w
  5062  0371  3E05               	addlw	05h
  5063  0372  0084               	movwf	fsr0
  5064  0373  1480               	bsf	indf,1
  5065  0374  2B7F               	goto	i1l832
  5066                           	line	32
  5067                           	
  5068  0375                     i1l834:	
  5069                           	line	34
  5070                           	
  5071  0375                     i1l7699:	
  5072                           ;Dimmer.c: 32: else
  5073                           ;Dimmer.c: 33: {
  5074                           ;Dimmer.c: 34: Dimmer->GO=1;
  5075  0375  0855               	movf	(_Dimmer),w
  5076  0376  3E05               	addlw	05h
  5077  0377  0084               	movwf	fsr0
  5078  0378  1500               	bsf	indf,2
  5079                           	line	35
  5080                           ;Dimmer.c: 35: Dimmer->Count=0;
  5081  0379  0855               	movf	(_Dimmer),w
  5082  037A  3E06               	addlw	06h
  5083  037B  0084               	movwf	fsr0
  5084  037C  0180               	clrf	indf
  5085  037D  2B7F               	goto	i1l832
  5086                           	line	36
  5087                           	
  5088  037E                     i1l835:	
  5089  037E  2B7F               	goto	i1l832
  5090                           	line	37
  5091                           	
  5092  037F                     i1l833:	
  5093                           	line	38
  5094                           	
  5095  037F                     i1l832:	
  5096                           	line	40
  5097                           ;Dimmer.c: 36: }
  5098                           ;Dimmer.c: 37: }
  5099                           ;Dimmer.c: 38: }
  5100                           ;Dimmer.c: 40: if(Dimmer->GO==1)
  5101  037F  0855               	movf	(_Dimmer),w
  5102  0380  3E05               	addlw	05h
  5103  0381  0084               	movwf	fsr0
  5104  0382  1D00               	btfss	indf,2
  5105  0383  2B85               	goto	u312_21
  5106  0384  2B86               	goto	u312_20
  5107  0385                     u312_21:
  5108  0385  2BA7               	goto	i1l836
  5109  0386                     u312_20:
  5110                           	line	42
  5111                           	
  5112  0386                     i1l7701:	
  5113                           ;Dimmer.c: 41: {
  5114                           ;Dimmer.c: 42: if(Dimmer->Count == Dimmer->DimmingValue)
  5115  0386  0855               	movf	(_Dimmer),w
  5116  0387  3E09               	addlw	09h
  5117  0388  0084               	movwf	fsr
  5118  0389  0800               	movf	indf,w
  5119  038A  00F0               	movwf	(??_Dimmer_Main+0)+0
  5120  038B  0855               	movf	(_Dimmer),w
  5121  038C  3E06               	addlw	06h
  5122  038D  0084               	movwf	fsr0
  5123  038E  0800               	movf	indf,w
  5124  038F  0670               	xorwf	(??_Dimmer_Main+0)+0,w
  5125  0390  1D03               	skipz
  5126  0391  2B93               	goto	u313_21
  5127  0392  2B94               	goto	u313_20
  5128  0393                     u313_21:
  5129  0393  2C3C               	goto	i1l856
  5130  0394                     u313_20:
  5131                           	line	44
  5132                           	
  5133  0394                     i1l7703:	
  5134                           ;Dimmer.c: 43: {
  5135                           ;Dimmer.c: 44: Dimmer->Count=0;
  5136  0394  0855               	movf	(_Dimmer),w
  5137  0395  3E06               	addlw	06h
  5138  0396  0084               	movwf	fsr0
  5139  0397  0180               	clrf	indf
  5140                           	line	45
  5141                           ;Dimmer.c: 45: Dimmer->GO=0;
  5142  0398  0855               	movf	(_Dimmer),w
  5143  0399  3E05               	addlw	05h
  5144  039A  0084               	movwf	fsr0
  5145  039B  1100               	bcf	indf,2
  5146                           	line	46
  5147                           ;Dimmer.c: 46: if(Dimmer->Triac==1)
  5148  039C  0855               	movf	(_Dimmer),w
  5149  039D  3E0A               	addlw	0Ah
  5150  039E  0084               	movwf	fsr0
  5151  039F  1D00               	btfss	indf,2
  5152  03A0  2BA2               	goto	u314_21
  5153  03A1  2BA3               	goto	u314_20
  5154  03A2                     u314_21:
  5155  03A2  2C3C               	goto	i1l856
  5156  03A3                     u314_20:
  5157                           	line	47
  5158                           	
  5159  03A3                     i1l7705:	
  5160                           ;Dimmer.c: 47: RB2=1;
  5161  03A3  1506               	bsf	(50/8),(50)&7
  5162  03A4  2C3C               	goto	i1l856
  5163                           	
  5164  03A5                     i1l838:	
  5165  03A5  2C3C               	goto	i1l856
  5166                           	line	48
  5167                           	
  5168  03A6                     i1l837:	
  5169                           	line	49
  5170                           ;Dimmer.c: 48: }
  5171                           ;Dimmer.c: 49: }
  5172  03A6  2C3C               	goto	i1l856
  5173                           	line	50
  5174                           	
  5175  03A7                     i1l836:	
  5176                           	line	52
  5177                           ;Dimmer.c: 50: else
  5178                           ;Dimmer.c: 51: {
  5179                           ;Dimmer.c: 52: if(RB2==1)
  5180  03A7  1D06               	btfss	(50/8),(50)&7
  5181  03A8  2BAA               	goto	u315_21
  5182  03A9  2BAB               	goto	u315_20
  5183  03AA                     u315_21:
  5184  03AA  2C3C               	goto	i1l856
  5185  03AB                     u315_20:
  5186                           	line	54
  5187                           	
  5188  03AB                     i1l7707:	
  5189                           ;Dimmer.c: 53: {
  5190                           ;Dimmer.c: 54: RB2=0;
  5191  03AB  1106               	bcf	(50/8),(50)&7
  5192                           	line	56
  5193                           	
  5194  03AC                     i1l7709:	
  5195                           ;Dimmer.c: 56: if(Dimmer->Signal==1)
  5196  03AC  0855               	movf	(_Dimmer),w
  5197  03AD  3E0A               	addlw	0Ah
  5198  03AE  0084               	movwf	fsr0
  5199  03AF  1C00               	btfss	indf,0
  5200  03B0  2BB2               	goto	u316_21
  5201  03B1  2BB3               	goto	u316_20
  5202  03B2                     u316_21:
  5203  03B2  2C3C               	goto	i1l856
  5204  03B3                     u316_20:
  5205                           	line	59
  5206                           	
  5207  03B3                     i1l7711:	
  5208                           ;Dimmer.c: 57: {
  5209                           ;Dimmer.c: 59: if(Dimmer->DimmingTime < Dimmer->DimmingTimeValue)
  5210  03B3  0855               	movf	(_Dimmer),w
  5211  03B4  3E08               	addlw	08h
  5212  03B5  0084               	movwf	fsr
  5213  03B6  0800               	movf	indf,w
  5214  03B7  00F0               	movwf	(??_Dimmer_Main+0)+0
  5215  03B8  0855               	movf	(_Dimmer),w
  5216  03B9  3E07               	addlw	07h
  5217  03BA  0084               	movwf	fsr0
  5218  03BB  0800               	movf	indf,w
  5219  03BC  00F1               	movwf	(??_Dimmer_Main+1)+0
  5220  03BD  0870               	movf	(??_Dimmer_Main+0)+0,w
  5221  03BE  0271               	subwf	(??_Dimmer_Main+1)+0,w
  5222  03BF  1803               	skipnc
  5223  03C0  2BC2               	goto	u317_21
  5224  03C1  2BC3               	goto	u317_20
  5225  03C2                     u317_21:
  5226  03C2  2BCB               	goto	i1l7715
  5227  03C3                     u317_20:
  5228                           	line	60
  5229                           	
  5230  03C3                     i1l7713:	
  5231                           ;Dimmer.c: 60: Dimmer->DimmingTime++;
  5232  03C3  3001               	movlw	(01h)
  5233  03C4  00F0               	movwf	(??_Dimmer_Main+0)+0
  5234  03C5  0855               	movf	(_Dimmer),w
  5235  03C6  3E07               	addlw	07h
  5236  03C7  0084               	movwf	fsr0
  5237  03C8  0870               	movf	(??_Dimmer_Main+0)+0,w
  5238  03C9  0780               	addwf	indf,f
  5239  03CA  2C3C               	goto	i1l856
  5240                           	line	61
  5241                           	
  5242  03CB                     i1l842:	
  5243                           	line	63
  5244                           	
  5245  03CB                     i1l7715:	
  5246                           ;Dimmer.c: 61: else
  5247                           ;Dimmer.c: 62: {
  5248                           ;Dimmer.c: 63: Dimmer->DimmingTime=0;
  5249  03CB  0855               	movf	(_Dimmer),w
  5250  03CC  3E07               	addlw	07h
  5251  03CD  0084               	movwf	fsr0
  5252  03CE  0180               	clrf	indf
  5253                           	line	64
  5254                           ;Dimmer.c: 64: if(Dimmer->Lights==1)
  5255  03CF  0855               	movf	(_Dimmer),w
  5256  03D0  3E0A               	addlw	0Ah
  5257  03D1  0084               	movwf	fsr0
  5258  03D2  1C80               	btfss	indf,1
  5259  03D3  2BD5               	goto	u318_21
  5260  03D4  2BD6               	goto	u318_20
  5261  03D5                     u318_21:
  5262  03D5  2BFD               	goto	i1l7725
  5263  03D6                     u318_20:
  5264                           	line	66
  5265                           	
  5266  03D6                     i1l7717:	
  5267                           ;Dimmer.c: 65: {
  5268                           ;Dimmer.c: 66: if(Dimmer->DimmingValue >= Dimmer->Maxmum)
  5269  03D6  0855               	movf	(_Dimmer),w
  5270  03D7  3E0B               	addlw	0Bh
  5271  03D8  0084               	movwf	fsr
  5272  03D9  0800               	movf	indf,w
  5273  03DA  00F0               	movwf	(??_Dimmer_Main+0)+0
  5274  03DB  0855               	movf	(_Dimmer),w
  5275  03DC  3E09               	addlw	09h
  5276  03DD  0084               	movwf	fsr0
  5277  03DE  0800               	movf	indf,w
  5278  03DF  00F1               	movwf	(??_Dimmer_Main+1)+0
  5279  03E0  0870               	movf	(??_Dimmer_Main+0)+0,w
  5280  03E1  0271               	subwf	(??_Dimmer_Main+1)+0,w
  5281  03E2  1C03               	skipc
  5282  03E3  2BE5               	goto	u319_21
  5283  03E4  2BE6               	goto	u319_20
  5284  03E5                     u319_21:
  5285  03E5  2BEC               	goto	i1l7721
  5286  03E6                     u319_20:
  5287                           	line	67
  5288                           	
  5289  03E6                     i1l7719:	
  5290                           ;Dimmer.c: 67: Dimmer->DimmingValue--;
  5291  03E6  0855               	movf	(_Dimmer),w
  5292  03E7  3E09               	addlw	09h
  5293  03E8  0084               	movwf	fsr0
  5294  03E9  3001               	movlw	low(01h)
  5295  03EA  0280               	subwf	indf,f
  5296  03EB  2BF0               	goto	i1l846
  5297                           	line	68
  5298                           	
  5299  03EC                     i1l845:	
  5300                           	line	69
  5301                           	
  5302  03EC                     i1l7721:	
  5303                           ;Dimmer.c: 68: else
  5304                           ;Dimmer.c: 69: Dimmer->Signal=0;
  5305  03EC  0855               	movf	(_Dimmer),w
  5306  03ED  3E0A               	addlw	0Ah
  5307  03EE  0084               	movwf	fsr0
  5308  03EF  1000               	bcf	indf,0
  5309                           	
  5310  03F0                     i1l846:	
  5311                           	line	71
  5312                           ;Dimmer.c: 71: if(Dimmer->Phase2 == 1)
  5313  03F0  0855               	movf	(_Dimmer),w
  5314  03F1  3E0A               	addlw	0Ah
  5315  03F2  0084               	movwf	fsr0
  5316  03F3  1D80               	btfss	indf,3
  5317  03F4  2BF6               	goto	u320_21
  5318  03F5  2BF7               	goto	u320_20
  5319  03F6                     u320_21:
  5320  03F6  2C3C               	goto	i1l856
  5321  03F7                     u320_20:
  5322                           	line	72
  5323                           	
  5324  03F7                     i1l7723:	
  5325                           ;Dimmer.c: 72: Dimmer->Phase2 = 0;
  5326  03F7  0855               	movf	(_Dimmer),w
  5327  03F8  3E0A               	addlw	0Ah
  5328  03F9  0084               	movwf	fsr0
  5329  03FA  1180               	bcf	indf,3
  5330  03FB  2C3C               	goto	i1l856
  5331                           	
  5332  03FC                     i1l847:	
  5333                           	line	73
  5334                           ;Dimmer.c: 73: }
  5335  03FC  2C3C               	goto	i1l856
  5336                           	line	74
  5337                           	
  5338  03FD                     i1l844:	
  5339                           	line	76
  5340                           	
  5341  03FD                     i1l7725:	
  5342                           ;Dimmer.c: 74: else
  5343                           ;Dimmer.c: 75: {
  5344                           ;Dimmer.c: 76: if(Dimmer->DimmingValue <= Dimmer->Minimum)
  5345  03FD  0855               	movf	(_Dimmer),w
  5346  03FE  3E09               	addlw	09h
  5347  03FF  0084               	movwf	fsr
  5348  0400  0800               	movf	indf,w
  5349  0401  00F0               	movwf	(??_Dimmer_Main+0)+0
  5350  0402  0855               	movf	(_Dimmer),w
  5351  0403  3E0C               	addlw	0Ch
  5352  0404  0084               	movwf	fsr0
  5353  0405  0800               	movf	indf,w
  5354  0406  00F1               	movwf	(??_Dimmer_Main+1)+0
  5355  0407  0870               	movf	(??_Dimmer_Main+0)+0,w
  5356  0408  0271               	subwf	(??_Dimmer_Main+1)+0,w
  5357  0409  1C03               	skipc
  5358  040A  2C0C               	goto	u321_21
  5359  040B  2C0D               	goto	u321_20
  5360  040C                     u321_21:
  5361  040C  2C15               	goto	i1l7729
  5362  040D                     u321_20:
  5363                           	line	77
  5364                           	
  5365  040D                     i1l7727:	
  5366                           ;Dimmer.c: 77: Dimmer->DimmingValue++;
  5367  040D  3001               	movlw	(01h)
  5368  040E  00F0               	movwf	(??_Dimmer_Main+0)+0
  5369  040F  0855               	movf	(_Dimmer),w
  5370  0410  3E09               	addlw	09h
  5371  0411  0084               	movwf	fsr0
  5372  0412  0870               	movf	(??_Dimmer_Main+0)+0,w
  5373  0413  0780               	addwf	indf,f
  5374  0414  2C3C               	goto	i1l856
  5375                           	line	78
  5376                           	
  5377  0415                     i1l849:	
  5378                           	line	80
  5379                           	
  5380  0415                     i1l7729:	
  5381                           ;Dimmer.c: 78: else
  5382                           ;Dimmer.c: 79: {
  5383                           ;Dimmer.c: 80: Dimmer->Signal=0;
  5384  0415  0855               	movf	(_Dimmer),w
  5385  0416  3E0A               	addlw	0Ah
  5386  0417  0084               	movwf	fsr0
  5387  0418  1000               	bcf	indf,0
  5388                           	line	82
  5389                           ;Dimmer.c: 82: if(2 == 0)
  5390  0419  2C1F               	goto	i1l7733
  5391                           	line	83
  5392                           	
  5393  041A                     i1l7731:	
  5394                           ;Dimmer.c: 83: Dimmer->Triac=0;
  5395  041A  0855               	movf	(_Dimmer),w
  5396  041B  3E0A               	addlw	0Ah
  5397  041C  0084               	movwf	fsr0
  5398  041D  1100               	bcf	indf,2
  5399  041E  2C3C               	goto	i1l856
  5400                           	line	84
  5401                           ;Dimmer.c: 84: else if(2 == 2)
  5402                           	
  5403  041F                     i1l851:	
  5404                           	line	86
  5405                           	
  5406  041F                     i1l7733:	
  5407                           ;Dimmer.c: 85: {
  5408                           ;Dimmer.c: 86: if(Dimmer->Phase2 == 0)
  5409  041F  0855               	movf	(_Dimmer),w
  5410  0420  3E0A               	addlw	0Ah
  5411  0421  0084               	movwf	fsr0
  5412  0422  1980               	btfsc	indf,3
  5413  0423  2C25               	goto	u322_21
  5414  0424  2C26               	goto	u322_20
  5415  0425                     u322_21:
  5416  0425  2C2B               	goto	i1l7737
  5417  0426                     u322_20:
  5418                           	line	87
  5419                           	
  5420  0426                     i1l7735:	
  5421                           ;Dimmer.c: 87: Dimmer->Phase2 = 1;
  5422  0426  0855               	movf	(_Dimmer),w
  5423  0427  3E0A               	addlw	0Ah
  5424  0428  0084               	movwf	fsr0
  5425  0429  1580               	bsf	indf,3
  5426  042A  2C3C               	goto	i1l856
  5427                           	line	88
  5428                           	
  5429  042B                     i1l854:	
  5430                           	line	90
  5431                           	
  5432  042B                     i1l7737:	
  5433                           ;Dimmer.c: 88: else
  5434                           ;Dimmer.c: 89: {
  5435                           ;Dimmer.c: 90: Dimmer->Triac=0;
  5436  042B  0855               	movf	(_Dimmer),w
  5437  042C  3E0A               	addlw	0Ah
  5438  042D  0084               	movwf	fsr0
  5439  042E  1100               	bcf	indf,2
  5440                           	line	91
  5441                           ;Dimmer.c: 91: Dimmer->Phase2 = 0;
  5442  042F  0855               	movf	(_Dimmer),w
  5443  0430  3E0A               	addlw	0Ah
  5444  0431  0084               	movwf	fsr0
  5445  0432  1180               	bcf	indf,3
  5446  0433  2C3C               	goto	i1l856
  5447                           	line	92
  5448                           	
  5449  0434                     i1l855:	
  5450  0434  2C3C               	goto	i1l856
  5451                           	line	93
  5452                           	
  5453  0435                     i1l853:	
  5454  0435  2C3C               	goto	i1l856
  5455                           	line	94
  5456                           	
  5457  0436                     i1l852:	
  5458  0436  2C3C               	goto	i1l856
  5459                           	
  5460  0437                     i1l850:	
  5461  0437  2C3C               	goto	i1l856
  5462                           	line	95
  5463                           	
  5464  0438                     i1l848:	
  5465  0438  2C3C               	goto	i1l856
  5466                           	line	96
  5467                           	
  5468  0439                     i1l843:	
  5469  0439  2C3C               	goto	i1l856
  5470                           	line	97
  5471                           	
  5472  043A                     i1l841:	
  5473  043A  2C3C               	goto	i1l856
  5474                           	line	98
  5475                           	
  5476  043B                     i1l840:	
  5477  043B  2C3C               	goto	i1l856
  5478                           	line	99
  5479                           	
  5480  043C                     i1l839:	
  5481                           	line	100
  5482                           	
  5483  043C                     i1l856:	
  5484  043C  0008               	return
  5485                           	opt stack 0
  5486                           GLOBAL	__end_of_Dimmer_Main
  5487  043D                     	__end_of_Dimmer_Main:
  5488 ;; =============== function _Dimmer_Main ends ============
  5489                           
  5490                           	signat	_Dimmer_Main,88
  5491                           psect	text395,local,class=CODE,delta=2
  5492                           global __ptext395
  5493  0000                     __ptext395:
  5494                           	global	btemp
  5495  007E                     	btemp set 07Eh
  5496                           
  5497                           	DABS	1,126,2	;btemp
  5498                           	global	wtemp0
  5499  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Tue Apr 29 10:53:01 2014

           ___awdiv@sign 004C                       fsr 0004      ___wmul@multiplicand 0048  
                    l860 06CC                      l861 06A8                      l870 06E8  
                    l862 06CB                      l863 06C2                      l871 06EF  
                    _CDS 0021                      l864 06CA                      l865 06D4  
                    l866 06EF                      l867 06EE                      l859 06D5  
                    l868 06ED                      _GIE 005F                      _RB1 0031  
                    _RB2 0032                      _LED 0056                      _RB3 0033  
                    _RB4 0034                      _RB5 0035                      _RA7 002F  
                    _ISR 0FB1                      _PIR 0022                      fsr0 0004  
                    indf 0000                     ?_ISR 0070             ?_LED_Setting 0070  
                   l1711 0F6E                     l3400 0FAC                     l3401 0FB0  
                   l3404 0F0D                     l5100 032A                     l3405 0F0C  
                   l5101 0329                     l3406 0F0D                     l5110 00B9  
                   l5102 003D                     l5111 00DB                     l5103 003D  
                   l5120 016C                     l5112 010D                     l5104 0042  
                   l2560 0609                     l4241 0742                     l5121 017E  
                   l5113 0112                     l5105 005E                     l2561 0609  
                   l4242 0741                     l5114 02F9                     l5130 026A  
                   l5122 017D                     l5106 005E                     l2554 05B7  
                   l4243 0713                     l6011 07DD                     l5115 02F8  
                   l5131 0269                     l5123 01D4                     l5107 0063  
                   l2555 05BC                     l4244 0740                     l6012 07AF  
                   l5116 02F7                     l5140 02F5                     l5132 0268  
                   l5124 019E                     l5108 0083                     l2556 05C2  
                   l4245 0723                     l6005 0F13                     l6013 07A3  
                   l5141 02F4                     l5125 01D3                     l5117 0142  
                   l5109 00A0                     l2557 05EB                     l3390 0FB0  
                   l4246 073F                     l6006 0F1D                     l6014 07B4  
                   l5150 0794                     l5142 0328                     l5134 0263  
                   l5118 01D5                     l5126 01CE                     l2558 0607  
                   l3391 0F7F                     l4247 072F                     l6007 0F32  
                   l6015 07B5                     l5151 0793                     l5143 0316  
                   l5135 02F6                     l5127 01BC                     l5119 017F  
                   l2559 0608                     l3392 0F86                     l4248 073E  
                   l6008 0F39                     l6016 07CE                     l5144 0327  
                   l5136 0287                     l5128 01CE                     l3393 0F85  
                   l4249 0742                     l6017 07DC                     l5153 0773  
                   l5137 02A4                     l5129 01CD                     l5145 032A  
                   l3394 0F8E                     l5090 047B                     l6018 07E4  
                   l5154 0792                     l5138 02A3                     l3395 0FAF  
                   l5091 0480                     l5139 02CF            ??_Mcu_Initial 0046  
                   l3396 0F96                     l5084 04E6                     l5092 04E4  
                   l5156 078D                     l5148 0767                     l3397 0FAE  
                   l5085 04E5                     l5093 04C0                     l5149 0766  
                   l5157 0794                     l3398 0FA1                     l5094 04BF  
                   l5086 046A                     l6150 0646                     l3399 0FAD  
                   l5095 04E3                     l5087 046A                     l6151 0647  
                   l5096 04E2                     l5088 046F                     l6152 0660  
                   l5089 047B                     l5097 04E6                     l6153 066E  
                   l8001 0631                     l6145 061B                     l6154 0679  
                   l6146 0629                     l6155 0680                     l6147 066F  
                   l8011 0658                     l8003 0635                     l6148 0641  
                   l8021 0673                     l8013 065E                     l8005 063C  
                   l6149 0635                     l8101 0112                     l8023 0679  
                   l8015 0660                     l8007 0641                     l8031 0753  
                   l8111 013A                     l8103 0115                     l8025 0680  
                   l8017 0667                     l8009 0647                     l8041 0777  
                   l8033 075A                     l8121 0175                     l8113 0142  
                   l8105 011F                     l8201 05AF                     l8019 066F  
                   l8043 077B                     l8035 0767                     l8027 0743  
                   l8131 019E                     l8115 014F                     l8123 017F  
                   l8107 0126                     l8051 001C                     l8211 05C2  
                   l8203 05B2                     l8045 0785                     l8037 076B  
                   l8029 074D                     l8133 01AB                     l8125 0189  
                   l8117 0164                     l8141 01D5                     l8109 0131  
                   l8061 003B                     l8053 0023                     l8221 05D7  
                   l8213 05C6                     l8205 05B6                     l8047 078D  
                   l8039 0773                     l8151 0232                     l8143 01F8  
                   l8135 01B4                     l8127 018D                     l8119 016C  
                   l8071 0072                     l8063 0042                     l8055 002C  
                   l8231 05F7                     l8223 05DE                     l8215 05C9  
                   l8207 05BB                     l8161 0274                     l8153 024C  
                   l8145 0218                     l8137 01BC                     l8129 0196  
                   l8081 00B1                     l8073 007A                     l8065 005A  
                   l8057 0033                     l8049 0013                     l8233 05FA  
                   l8225 05E6                     l8217 05D0                     l8209 05C0  
                   l8171 02CA                     l8163 027E                     l8155 025B  
                   l8147 0223                     l8139 01C5                     l8083 00B8  
                   l8091 00DB                     l8075 0083                     l8067 005C  
                   l8059 0037                     l8235 05FD                     l8227 05EB  
                   l8219 05D4                     l8181 0316                     l8173 02CF  
                   l8165 0287                     l8157 0263                     l8149 0227  
                   l8093 00F4                     l8085 00B9                     l8077 00A0  
                   l8069 0063                     l8237 0600                     l8229 05F4  
                   l8183 0322                     l8175 02EF                     l8167 029E  
                   l8159 026A                     l8095 00FC                     l8087 00D0  
                   l8079 00B0                     l8239 0603                     l8191 0590  
                   l7801 0F5E                     l8169 02A4                     l8177 02F9  
                   l8097 0105                     l8089 00D4                     l8193 0597  
                   l8185 0583                     l7811 0F6A                     l7803 0F5F  
                   l8179 030D                     l8099 010D                     l8195 059E  
                   l8187 0586                     l7741 0689                     l7813 0F6B  
                   l7805 0F61                     l7821 0F7D                     l7901 072F  
                   l8197 05A8                     l8189 058C                     l5990 0538  
                   l7751 06CC                     l7743 0699                     l7815 0F6C  
                   l7807 0F64                     l7831 0F94                     l7823 0F83  
                   l5991 0582                     l7903 0739                     l7911 0456  
                   l8199 05AB                     l5992 0553                     l7745 06A8  
                   l7753 06D5                     l7809 0F68                     l7841 0FA7  
                   l7833 0F96                     l7825 0F86                     l7817 0F72  
                   l5993 055E                     l7921 046F                     l7913 045A  
                   l7905 043D                     l5994 0578                     l5986 0504  
                   l7755 06DB                     l7747 06B6                     l7739 0684  
                   l7843 0FA8                     l7835 0F9C                     l7827 0F8C  
                   l7819 0F79                     l5995 0581                     l7851 0512  
                   l5987 050C                     l7931 049F                     l7923 0477  
                   l7915 0460                     l7907 0446                     l5988 0539  
                   l5996 0582                     l7749 06C2                     l7781 0F41  
                   l7837 0F9D                     l7829 0F8E                     l7861 0553  
                   l5989 052C                     l7853 0523                     l7845 04E7  
                   l7933 04B7                     l7925 0479                     l7917 0464  
                   l7909 044D                     l7791 0F52                     l7783 0F45  
                   l7839 0FA1                     l7863 055B                     l7855 052C  
                   l7847 04FB                     l7871 0EEC                     l7935 04C0  
                   l7927 0480                     l7919 0468                     l7951 0F13  
                   l7793 0F53                     l7785 0F47                     l7777 0F3A  
                   l7865 055E                     l7857 0539                     l7849 0504  
                   l7873 0EF5                     l7881 06F0                     l7937 04DA  
                   l7929 0495                     l7953 0F17                     l7961 0795  
                   l7795 0F55                     l7787 0F4B                     l7779 0F40  
                   l7867 056F                     l7859 054A                     l7875 0EFC  
                   l7891 0711                     l7883 06F9                     l7955 0F24  
                   l7971 07AF                     l7963 0799                     l7797 0F57  
                   l7789 0F4D                     l7869 0578                     l7877 0F05  
                   l7893 0714                     l7885 0700                     l7957 0F32  
                   l7949 0F0E                     l7981 07D5                     l7973 07B5  
                   l7965 079F                     l7799 0F5D                     l7879 0F09  
                   l7895 071D                     l7887 0709                     l7959 0F39  
                   l7975 07C6                     l7967 07A3                     l7983 07DD  
                   l7991 061B                     l7897 0723                     l7889 070D  
                   l7985 07E4                     l7977 07CC                     l7969 07AA  
                   l7993 061F                     l7899 072B                     l7979 07CE  
                   l7995 0624                     l7987 060B                     l7997 0629  
                   l7989 0612                     l7999 062B                     u4000 014F  
                   u4001 014E                     u4010 0164                     u4011 0163  
                   u4100 025B                     u4020 0175                     u4101 025A  
                   u4021 0174                     u3230 0689                     u3310 0F79  
                   u4110 0262                     u4030 0196                     u3231 0688  
                   u3311 0F78                     u4111 0261                     u4031 0195  
                   u3240 0699                     u3320 0F7D                     u3400 0523  
                   u4120 027E                     u4040 01AB                     u4200 05F4  
                   u3241 0698                     u3321 0F7C                     u3401 0522  
                   u4121 027D                     u4041 01AA                     u4201 05F3  
                   u3250 06B6                     u3330 0F83                     u3410 054A  
                   u4130 029E                     u4050 01B4                     u3251 06B5  
                   u3331 0F82                     u3411 0549                     u4131 029D  
                   u4051 01B3                     u3260 06DB                     u3340 0F8C  
                   u3420 056F                     u3500 0446                     u4140 02CA  
                   u4060 01C5                     u3261 06DA                     u3341 0F8B  
                   u3421 056E                     u3501 0445                     u4141 02C9  
                   u4061 01C4                     u3350 0F94                     u3430 0EF5  
                   u3510 0456                     u4150 02EF                     u4070 01F8  
                   u3351 0F93                     u3431 0EF4                     u3511 0455  
                   u4151 02EE                     u4071 01F7                     u3360 0F9C  
                   u3440 0F05                     u3520 046E                     u3600 0F17  
                   u4160 030D                     u4080 0218                     u3361 0F9B  
                   u3441 0F04                     u3521 046D                     u3601 0F16  
                   u4161 030C                     u4145 02C6                     u4081 0217  
                   u3370 0FA7                     u3450 06F9                     u3530 047F  
                   u4090 024C                     u4170 05B6                     u3371 0FA6  
                   u3451 06F8                     u3531 047E                     u4155 02EB  
                   u4091 024B                     u4075 01F4                     u4171 05B5  
                   u3380 04FB                     u3460 0709                     u3540 0495  
                   u3700 07DB                     u4180 05BB                     u3381 04FA  
                   u3461 0708                     u3541 0494                     u3701 07DA  
                   u4085 0214                     u4181 05BA                     u3390 0512  
                   u3470 0711                     u3550 049F                     u3630 0F31  
                   u3710 0612                     u4190 05C0                     u3391 0511  
                   u3471 0710                     u3551 049E                     u3631 0F30  
                   u3615 0F1E                     u3711 0611                     u4095 0248  
                   u4191 05BF                     u3480 071D                     u3560 04B7  
                   u3640 079F                     u3800 0673                     u3720 061F  
                   u3481 071C                     u3561 04B6                     u3625 0F25  
                   u3641 079E                     u3721 061E                     u3490 072B  
                   u3570 04DA                     u3730 0631                     u3810 074D  
                   u3491 072A                     u3571 04D9                     u3731 0630  
                   u3811 074C                     _PEIE 005E                     u3660 07B3  
                   u3820 0753                     u3900 0041                     u3565 04B3  
                   u3661 07B2                     u3821 0752                     u3901 0040  
                   u3750 0645                     u3830 075A                     u3910 0062  
                   u3575 04D6                     u3655 07A4                     u3751 0644  
                   u3831 0759                     u3911 0061                     u3680 07C6  
                   u3840 076B                     u3920 007A                     u3681 07C5  
                   u3745 0636                     u3921 0079                     u3770 0658  
                   u3850 0772                     u3930 00B7                     u3675 07B6  
                   u3771 0657                     u3851 0771                     u3931 00B6  
                   u3860 0785                     u3940 00DA                     u3685 07C2  
                   u3765 0648                     u3861 0784                     u3941 00D9  
                   u3790 066D                     u3870 078C                     u3950 0105  
                   u3695 07CF                     u3791 066C                     u3775 0654  
                   u3871 078B                     u3951 0104                     u3960 011F  
                   u3880 001C                     u3785 0661                     u3961 011E  
                   u3881 001B                     u3970 0126                     u3890 002C  
                   u3971 0125                     u3891 002B                     u3980 0131  
                   u3981 0130                     u3990 013A                     u3991 0139  
    __end_of_Dimmer_Main 043D                     _TMR0 0001                     _main 0583  
                   btemp 007E                     start 0011         __end_of_CDS_Main 04E7  
                  ??_ISR 0072         __end_of_LED_Main 0F0E                    ?_main 0070  
        __end_of___awdiv 0681                    _ADRES 001E          ___awdiv@divisor 0046  
                  _T1CON 0010          __end_of___lwdiv 07E5                    i1l830 0359  
                  i1l831 0358                    i1l840 043B                    i1l832 037F  
                  i1l841 043A                    i1l833 037F                    i1l850 0437  
                  i1l842 03CB                    i1l834 0375                    i1l843 0439  
                  i1l851 041F                    i1l835 037E                    i1l852 0436  
                  i1l844 03FD                    i1l836 03A7                    i1l853 0435  
                  i1l845 03EC                    i1l837 03A6                    i1l829 035A  
                  i1l854 042B                    i1l846 03F0                    i1l838 03A5  
                  i1l839 043C                    i1l855 0434                    i1l847 03FC  
                  i1l848 0438                    i1l856 043C                    i1l849 0415  
        ___awdiv@counter 004B                    _TMR1H 000F                    _TMR1L 000E  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _TRISA 0085                    _TRISB 0086                    _TRISC 0087  
       __end_of_PIR_Main 032B       __size_of_TMR1_Main 009C              ?_PIR_Switch 0070  
          ??_Buzzer_Main 0046  __size_of_Dimmer_Control 006F                    pclath 000A  
                  status 0003                    wtemp0 007E      __end_of_Mcu_Initial 0F6F  
           __end_of_main 060B                   ??_main 0054              _Dimmer_Main 032B  
                 _ADCON0 001F                   _ADCON1 009F         ___awdiv@dividend 0048  
                 _ANSELA 0185                   _ANSELB 0186                   i1l1705 0FF4  
                 i1l1706 0FC8                   i1l1707 0FEE                   i1l1708 0FF4  
                 u310_20 0361                   u310_21 0360                   i1l7701 0386  
                 i1l7711 03B3                   i1l7703 0394                   u311_20 0370  
                 i1l7721 03EC                   i1l7713 03C3                   i1l7705 03A3  
                 u311_21 036F                   i1l7731 041A                   i1l7723 03F7  
                 i1l7715 03CB                   i1l7707 03AB                   i1l7733 041F  
                 i1l7717 03D6                   i1l7725 03FD                   i1l7709 03AC  
                 i1l7735 0426                   i1l7727 040D                   i1l7719 03E6  
                 u320_20 03F7                   u312_20 0386                   i1l7737 042B  
                 i1l7729 0415                   u320_21 03F6                   u312_21 0385  
                 i1l7761 0FBD                   i1l7691 034F                   i1l7683 032B  
                 i1l7771 0FEE                   i1l7763 0FC4                   i1l7693 035A  
                 i1l7685 0335                   i1l7773 0FF0                   i1l7765 0FC8  
                 i1l7757 0FB1                   i1l7695 0361                   i1l7687 0339  
                 i1l7775 0FF2                   i1l7767 0FD3                   i1l7759 0FB7  
                 u321_20 040D                   u313_20 0394                   u321_21 040C  
                 u313_21 0393                   i1l7697 0370                   i1l7689 0340  
                 i1l7769 0FE2                   i1l7699 0375                   u322_20 0426  
                 u314_20 03A3                   u330_20 0FE2                   u322_21 0425  
                 u314_21 03A2                   u330_21 0FE1                   u315_20 03AB  
                 u307_20 0339                   _FVRCON 009D                   u315_21 03AA  
                 u307_21 0338                   u316_20 03B3                   u308_20 0340  
                 u316_21 03B2                   u308_21 033F                   u317_20 03C3  
                 u309_20 034F                   u317_21 03C2                   u309_21 034E  
                 u318_20 03D6                   u318_21 03D5                   u319_20 03E6  
                 u327_20 0FB7                   u319_21 03E5                   u327_21 0FB6  
                 u328_20 0FBD                   u328_21 0FBC                   u329_20 0FC4  
                 u329_21 0FC3                   _OSCCON 0090                   _TMR0IE 005D  
                 _TMR1IE 0460                   _TMR1IF 0060                   _Dimmer 0055  
    __end_of_Buzzer_Main 0743                   _VarCDS 003A                   _VarLED 0044  
                 _VarPIR 00A0                   _Buzzer 0020                   _Timer1 0057  
      __end_of_TMR1_Main 0583                   ___wmul 0F0E                ??___awdiv 004A  
    __size_of_PIR_Switch 0052                ??___lwdiv 004A         ___awdiv@quotient 004D  
                 clrloop 0EE5             __pdataCOMMON 0078                   saved_w 007E  
              ?_CDS_Main 0070              _Mcu_Initial 0F3A     __size_of_LED_Setting 0042  
              ?_LED_Main 0070           __pcstackCOMMON 0070                ?_PIR_Main 0070  
   Dimmer_Control@number 0047               ??_CDS_Main 0046           _Dimmer_Control 0681  
             __pbssBANK0 0020               __pbssBANK1 00A0              _Buzzer_Main 06F0  
             ??_LED_Main 0046               __pmaintext 0583                  ?___wmul 0046  
             ??_PIR_Main 004F               __pintentry 0004                PIR_Main@i 0053  
 __end_of_Dimmer_Control 06F0             ??_PIR_Switch 0048                  ___awdiv 060B  
        __size_of___wmul 002C                  ___lwdiv 0795       __end_of_PIR_Switch 0795  
           __size_of_ISR 004F             ?_Dimmer_Main 0070          ?_Dimmer_Control 0070  
   end_of_initialization 07F6                _TMR1_Main 04E7                _PIRSwitch 0078  
           ?_Mcu_Initial 0070        __size_of_CDS_Main 00AA        __size_of_LED_Main 0022  
         __end_of___wmul 0F3A            __pidataCOMMON 07F9        __size_of_PIR_Main 0318  
             ?_TMR1_Main 0070      start_initialization 07E5              __end_of_ISR 1000  
          ??_LED_Setting 0046             ?_Buzzer_Main 0070                _VarDimmer 0023  
              _VarBuzzer 0040                _VarTimer1 0031                 ??___wmul 004A  
          __pcstackBANK0 0046     __size_of_Dimmer_Main 0112                __pnvBANK0 0055  
    __end_of_LED_Setting 0FB1         ___lwdiv@dividend 0048                 ?___awdiv 0046  
              __ptext381 0013                __ptext390 0F6F                __ptext382 0743  
              __ptext391 0F3A                __ptext383 060B                __ptext392 0681  
              __ptext384 0795                __ptext393 0FB1                __ptext385 0F0E  
              __ptext394 032B                __ptext386 043D                __ptext395 0000  
              __ptext387 06F0                __ptext388 0EEC                __ptext389 04E7  
               ?___lwdiv 0046              ??_TMR1_Main 0046         ??_Dimmer_Control 0046  
       ___lwdiv@quotient 004B                 _CDS_Main 043D        LED_Setting@number 0046  
      interrupt_function 0004           ___wmul@product 004A                 _LED_Main 0EEC  
   __size_of_Mcu_Initial 0035                 _GO_nDONE 00F9                 _PIR_Main 0013  
      ___wmul@multiplier 0046              _LED_Setting 0F6F     __size_of_Buzzer_Main 0053  
       __size_of___awdiv 0076         __size_of___lwdiv 0050          ___lwdiv@divisor 0046  
        ___lwdiv@counter 004D            __size_of_main 0088                 clear_ram 0EE4  
               intlevel1 0000               _OPTION_REG 0081            ??_Dimmer_Main 0070  
             _PIR_Switch 0743  
