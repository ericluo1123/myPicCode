

HI-TECH Software PIC LITE Macro Assembler V9.83 build 10920 
                                                                                               Mon Sep 15 11:55:00 2014

HI-TECH Software Omniscient Code Generator (Lite mode) build 10920
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 10920"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F1518
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0001                     indf1	equ	1
    35  0002                     pc	equ	2
    36  0002                     pcl	equ	2
    37  0003                     status	equ	3
    38  0004                     fsr0l	equ	4
    39  0005                     fsr0h	equ	5
    40  0006                     fsr1l	equ	6
    41  0007                     fsr1h	equ	7
    42  0008                     bsr	equ	8
    43  0009                     wreg	equ	9
    44  000B                     intcon	equ	11
    45  0001                     c	equ	1
    46  0000                     z	equ	0
    47  000A                     pclath	equ	10
    48                           # 7 "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_16f1518_B1.c"
    49                           	psect config,class=CONFIG,delta=2 ;#
    50                           # 7 "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_16f1518_B1.c"
    51  8007  F9E4               	dw 0xFFFC & 0xFFE7 & 0xF9FF ;#
    52                           # 8 "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_16f1518_B1.c"
    53                           	psect config,class=CONFIG,delta=2 ;#
    54                           # 8 "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_16f1518_B1.c"
    55  8008  FFFD               	dw 0xFFFF & 0xFFFD ;#
    56                           	FNCALL	_main,_MainT_Initialization
    57                           	FNCALL	_main,_Mcu_Initialization
    58                           	FNCALL	_main,_Flash_Memory_Initialization
    59                           	FNCALL	_main,_LED_Initialization
    60                           	FNCALL	_main,_Buzzer_Initialization
    61                           	FNCALL	_main,_Temp_Initialization
    62                           	FNCALL	_main,_Load_Initialization
    63                           	FNCALL	_main,_PowerFault_Initialization
    64                           	FNCALL	_main,_DelayOff_Initialization
    65                           	FNCALL	_main,_DimmerLights_Initialization
    66                           	FNCALL	_main,_Switch_Initialization
    67                           	FNCALL	_main,_RF_Initialization
    68                           	FNCALL	_main,_CC2500_PowerOnInitial
    69                           	FNCALL	_main,_getLoad_AD
    70                           	FNCALL	_main,_getTemp_AD
    71                           	FNCALL	_main,_getPowerFault_AD
    72                           	FNCALL	_main,_Buzzer_Main
    73                           	FNCALL	_main,_MainT
    74                           	FNCALL	_main,_Flash_Memory_Main
    75                           	FNCALL	_main,_LED_Main
    76                           	FNCALL	_main,_Temp_Main
    77                           	FNCALL	_main,_Load_Main
    78                           	FNCALL	_main,_PowerFault_Main
    79                           	FNCALL	_main,_DimmerLights_Main
    80                           	FNCALL	_main,_Switch_Main
    81                           	FNCALL	_main,_RF_Main
    82                           	FNCALL	_main,_DelayOff_Main
    83                           	FNCALL	_RF_Main,_setRF_Main
    84                           	FNCALL	_setRF_Main,_RfPointSelect
    85                           	FNCALL	_setRF_Main,_CC2500_RxData
    86                           	FNCALL	_setRF_Main,_getRxData
    87                           	FNCALL	_setRF_Main,_CC2500_WriteCommand
    88                           	FNCALL	_setRF_Main,_setINT_GO
    89                           	FNCALL	_setRF_Main,_RF_RxDisable
    90                           	FNCALL	_setRF_Main,_CC2500_TxData
    91                           	FNCALL	_getRxData,_RfPointSelect
    92                           	FNCALL	_getRxData,_setLog_Code
    93                           	FNCALL	_getRxData,_setControl_Lights_Table
    94                           	FNCALL	_setControl_Lights_Table,_RfPointSelect
    95                           	FNCALL	_setControl_Lights_Table,_setDimmerLights
    96                           	FNCALL	_setControl_Lights_Table,_setRFSW_Status
    97                           	FNCALL	_setControl_Lights_Table,_setSw_Status
    98                           	FNCALL	_setControl_Lights_Table,_setBuz
    99                           	FNCALL	_setControl_Lights_Table,_setTxData
   100                           	FNCALL	_setControl_Lights_Table,_setRFSW_Control
   101                           	FNCALL	_setControl_Lights_Table,_setRFSW_AdjControl
   102                           	FNCALL	_PowerFault_Main,_setPowerFault_Main
   103                           	FNCALL	_Temp_Main,_setTemp_Main
   104                           	FNCALL	_setRFSW_AdjControl,_RfSWPointSelect
   105                           	FNCALL	_setRFSW_AdjControl,_setRF_DimmerValue
   106                           	FNCALL	_setRFSW_AdjControl,_setTxData
   107                           	FNCALL	_setPowerFault_Main,_getLoad_Safe
   108                           	FNCALL	_setPowerFault_Main,_getTemp_Safe
   109                           	FNCALL	_setPowerFault_Main,_setPowerFault_Exceptions
   110                           	FNCALL	_setTemp_Main,_getLoad_Safe
   111                           	FNCALL	_setTemp_Main,_getPF_Safe
   112                           	FNCALL	_setTemp_Main,_setOverTemp_Exceptions
   113                           	FNCALL	_Load_Main,_setLoad_Exceptions
   114                           	FNCALL	_Load_Main,___lwdiv
   115                           	FNCALL	_Load_Main,_setDimmerLights_Clear
   116                           	FNCALL	_Load_Main,___wmul
   117                           	FNCALL	_Load_Main,_setLoad_AH_AL_Restore
   118                           	FNCALL	_Load_Main,_getTemp_Safe
   119                           	FNCALL	_Load_Main,_getPF_Safe
   120                           	FNCALL	_setRF_DimmerValue,_setDimmerLights_AdjRF
   121                           	FNCALL	_setPowerFault_Exceptions,_DimmerLights_Exceptions
   122                           	FNCALL	_setPowerFault_Exceptions,_setLED
   123                           	FNCALL	_setPowerFault_Exceptions,_setSw_Enable
   124                           	FNCALL	_setPowerFault_Exceptions,_setRF_Enable
   125                           	FNCALL	_setOverTemp_Exceptions,_DimmerLights_Exceptions
   126                           	FNCALL	_setOverTemp_Exceptions,_setBuz
   127                           	FNCALL	_setOverTemp_Exceptions,_setLED
   128                           	FNCALL	_setOverTemp_Exceptions,_setSw_Enable
   129                           	FNCALL	_setOverTemp_Exceptions,_setRF_Enable
   130                           	FNCALL	_setLoad_Exceptions,_DimmerLights_Exceptions
   131                           	FNCALL	_setLoad_Exceptions,_setLED
   132                           	FNCALL	_setLoad_Exceptions,_setSw_Enable
   133                           	FNCALL	_setLoad_Exceptions,_setRF_Enable
   134                           	FNCALL	_Switch_Main,_setSw_Main
   135                           	FNCALL	_Flash_Memory_Main,_Flash_Memory_Modify
   136                           	FNCALL	_DimmerLights_Main,_setDimmerLights_Main
   137                           	FNCALL	_DimmerLights_Main,_DimmerLights_Close
   138                           	FNCALL	_setSw_Main,_SwPointSelect
   139                           	FNCALL	_setSw_Main,_Sw_DimmerOnFunc
   140                           	FNCALL	_setSw_Main,_Sw_DimmerAdjFunc
   141                           	FNCALL	_setSw_Main,_setRF_Learn
   142                           	FNCALL	_setSw_Main,_setBuz
   143                           	FNCALL	_setSw_Main,_Sw_DimmerOffFunc
   144                           	FNCALL	_Flash_Memory_Modify,_Flash_Memory_Read
   145                           	FNCALL	_Flash_Memory_Modify,_Flash_Memory_Erasing
   146                           	FNCALL	_Flash_Memory_Modify,_Flash_Memory_Write
   147                           	FNCALL	_Switch_Initialization,_TouchPower
   148                           	FNCALL	_Switch_Initialization,_setSw_Initialization
   149                           	FNCALL	_Flash_Memory_Initialization,_Flash_Memory_Read
   150                           	FNCALL	_Flash_Memory_Initialization,_setPercentValue
   151                           	FNCALL	_Flash_Memory_Initialization,_Flash_Memory_Write
   152                           	FNCALL	_LED_Initialization,_setLED_Initialization
   153                           	FNCALL	_setDimmerLights_AdjRF,_DimmerLightsPointSelect
   154                           	FNCALL	_setDimmerLights_AdjRF,_getPercentValue
   155                           	FNCALL	_DimmerLights_Exceptions,_getDimmerLights_StatusFlag
   156                           	FNCALL	_DimmerLights_Exceptions,_setBuz
   157                           	FNCALL	_DimmerLights_Exceptions,_setDimmerLights_ERROR
   158                           	FNCALL	_DimmerLights_Exceptions,_setDimmerLights_TriggerERROR
   159                           	FNCALL	_setDimmerLights_Main,_DimmerLightsPointSelect
   160                           	FNCALL	_setDimmerLights_Main,_setDimmerLights
   161                           	FNCALL	_setDimmerLights_Main,_setDimmerLights_Adj
   162                           	FNCALL	_setDimmerLights_Main,_setBuz
   163                           	FNCALL	_DelayOff_Main,_DlyOff_Main
   164                           	FNCALL	_CC2500_PowerOnInitial,_CC2500_PowerRST
   165                           	FNCALL	_CC2500_PowerOnInitial,_CC2500_InitSetREG
   166                           	FNCALL	_CC2500_PowerOnInitial,_CC2500_InitPATable
   167                           	FNCALL	_CC2500_PowerOnInitial,_CC2500_ClearTXFIFO
   168                           	FNCALL	_CC2500_PowerOnInitial,_CC2500_ClearRXFIFO
   169                           	FNCALL	_CC2500_PowerOnInitial,_CC2500_FrequencyCabr
   170                           	FNCALL	_CC2500_PowerOnInitial,_CC2500_SIDLEMode
   171                           	FNCALL	_Sw_DimmerOffFunc,_setDimmerLights_TriggerAdj
   172                           	FNCALL	_Sw_DimmerOffFunc,_setDimmerLights_AdjGo
   173                           	FNCALL	_Sw_DimmerOffFunc,_setRF_DimmerLights
   174                           	FNCALL	_Sw_DimmerOffFunc,_setTxData
   175                           	FNCALL	_Sw_DimmerOffFunc,_setDimmerLights_Trigger
   176                           	FNCALL	_Sw_DimmerOffFunc,_setDimmerLights_Switch
   177                           	FNCALL	_Sw_DimmerOffFunc,_setDelayOff_GO
   178                           	FNCALL	_Sw_DimmerAdjFunc,_setRFSW_Status
   179                           	FNCALL	_Sw_DimmerAdjFunc,_setDimmerLights_TriggerAdj
   180                           	FNCALL	_Sw_DimmerAdjFunc,_setDimmerLights_AdjGo
   181                           	FNCALL	_Sw_DimmerOnFunc,_setBuz
   182                           	FNCALL	_Sw_DimmerOnFunc,_setRFSW_Status
   183                           	FNCALL	_Sw_DimmerOnFunc,_setDimmerLights_Trigger
   184                           	FNCALL	_Sw_DimmerOnFunc,_setDimmerLights_Switch
   185                           	FNCALL	_Sw_DimmerOnFunc,_setRF_DimmerLights
   186                           	FNCALL	_Sw_DimmerOnFunc,_setTxData
   187                           	FNCALL	_setSw_Initialization,_setLED
   188                           	FNCALL	_setRFSW_Control,_RfSWPointSelect
   189                           	FNCALL	_setRFSW_Control,_setDelayOff_GO
   190                           	FNCALL	_setRFSW_Control,_setSw_Status
   191                           	FNCALL	_setRFSW_Control,_setDimmerLights_Trigger
   192                           	FNCALL	_setRFSW_Control,_setDimmerLights_Switch
   193                           	FNCALL	_setRFSW_Control,_setRF_DimmerLights
   194                           	FNCALL	_setRFSW_Control,_setBuz
   195                           	FNCALL	_setRFSW_Control,_setTxData
   196                           	FNCALL	_setLog_Code,_RfPointSelect
   197                           	FNCALL	_setLog_Code,_setBuz
   198                           	FNCALL	_RF_RxDisable,_RfPointSelect
   199                           	FNCALL	_RF_RxDisable,_CC2500_WriteCommand
   200                           	FNCALL	_RF_RxDisable,_setINT_GO
   201                           	FNCALL	_Flash_Memory_Erasing,_Flash_Memory_Unlock
   202                           	FNCALL	_Flash_Memory_Write,_Flash_Memory_Unlock
   203                           	FNCALL	_MainT,_setTemp_Enable
   204                           	FNCALL	_MainT,_setLoad_Enable
   205                           	FNCALL	_MainT,_setBuz
   206                           	FNCALL	_MainT,_setSw_Enable
   207                           	FNCALL	_MainT,_setRF_Enable
   208                           	FNCALL	_LED_Main,_setLED_Main
   209                           	FNCALL	_setLED_Initialization,_LedPointSelect
   210                           	FNCALL	_setLED_Initialization,_setLED
   211                           	FNCALL	_setPercentValue,___ftdiv
   212                           	FNCALL	_setPercentValue,___awtoft
   213                           	FNCALL	_setPercentValue,___fttol
   214                           	FNCALL	_getPercentValue,___ftdiv
   215                           	FNCALL	_getPercentValue,___awtoft
   216                           	FNCALL	_getPercentValue,___ftmul
   217                           	FNCALL	_getPercentValue,___ftadd
   218                           	FNCALL	_getPercentValue,___fttol
   219                           	FNCALL	_setDimmerLights_ERROR,_DimmerLightsPointSelect
   220                           	FNCALL	_setDimmerLights_ERROR,_setLoad_StatusOff
   221                           	FNCALL	_setDimmerLights_ERROR,_setLED
   222                           	FNCALL	_setDimmerLights_ERROR,_setSw_Status
   223                           	FNCALL	_setDimmerLights_ERROR,_setRFSW_Status
   224                           	FNCALL	_setDimmerLights_Adj,_DimmerLightsPointSelect
   225                           	FNCALL	_setDimmerLights_Adj,_setLoad_StatusOff
   226                           	FNCALL	_setDimmerLights_Adj,_setRF_DimmerLights
   227                           	FNCALL	_setDimmerLights_Adj,_setTxData
   228                           	FNCALL	_setDimmerLights,_DimmerLightsPointSelect
   229                           	FNCALL	_setDimmerLights,_setLED
   230                           	FNCALL	_setDimmerLights,_setLoad_Count
   231                           	FNCALL	_setDimmerLights,_setLoad_StatusOn
   232                           	FNCALL	_DimmerLights_Initialization,_setDimmerLights_Initialization
   233                           	FNCALL	_DimmerLights_Initialization,_Dimmer_Initialization
   234                           	FNCALL	_DlyOff_Main,_DelayOffPointSelect
   235                           	FNCALL	_DlyOff_Main,_setSw_Status
   236                           	FNCALL	_DlyOff_Main,_setRFSW_Status
   237                           	FNCALL	_DlyOff_Main,_setRF_DimmerLights
   238                           	FNCALL	_DlyOff_Main,_setDimmerLights_Trigger
   239                           	FNCALL	_DlyOff_Main,_setDimmerLights_Switch
   240                           	FNCALL	_DlyOff_Main,_setTxData
   241                           	FNCALL	_DlyOff_Main,_setBuz
   242                           	FNCALL	_DelayOff_Initialization,_DlyOff_Initialization
   243                           	FNCALL	_CC2500_SIDLEMode,_CC2500_WriteCommand
   244                           	FNCALL	_CC2500_FrequencyCabr,_CC2500_WriteCommand
   245                           	FNCALL	_CC2500_FrequencyCabr,_DelayTime_1us
   246                           	FNCALL	_CC2500_ClearRXFIFO,_CC2500_WriteCommand
   247                           	FNCALL	_CC2500_ClearTXFIFO,_CC2500_WriteCommand
   248                           	FNCALL	_CC2500_InitPATable,_CC2500_WriteREG
   249                           	FNCALL	_CC2500_InitSetREG,_CC2500_WriteREG
   250                           	FNCALL	_CC2500_RxData,_CC2500_ReadStatus
   251                           	FNCALL	_CC2500_RxData,_CC2500_WriteByte
   252                           	FNCALL	_CC2500_RxData,_CC2500_ReadByte
   253                           	FNCALL	_CC2500_RxData,_CC2500_WriteCommand
   254                           	FNCALL	_CC2500_RxData,_setRF_RxStatus
   255                           	FNCALL	_CC2500_TxData,_CC2500_WriteByte
   256                           	FNCALL	_CC2500_TxData,_CC2500_WriteCommand
   257                           	FNCALL	___awtoft,___ftpack
   258                           	FNCALL	___ftmul,___ftpack
   259                           	FNCALL	___ftdiv,___ftpack
   260                           	FNCALL	___ftadd,___ftpack
   261                           	FNCALL	_setRF_Learn,_RfPointSelect
   262                           	FNCALL	_setRF_Enable,_RfPointSelect
   263                           	FNCALL	_setRF_Enable,_setINT_GO
   264                           	FNCALL	_setSw_Enable,_SwPointSelect
   265                           	FNCALL	_getPowerFault_AD,_getAD
   266                           	FNCALL	_getTemp_AD,_getAD
   267                           	FNCALL	_getLoad_AD,_getAD
   268                           	FNCALL	_RF_Initialization,_setRF_Initialization
   269                           	FNCALL	_PowerFault_Initialization,_setPowerFault_Initialization
   270                           	FNCALL	_Load_Initialization,_setLoad_AH_AL_Restore
   271                           	FNCALL	_Temp_Initialization,_setTemp_Initialization
   272                           	FNCALL	_Mcu_Initialization,_IO_Set
   273                           	FNCALL	_Mcu_Initialization,_TMR0_Set
   274                           	FNCALL	_Mcu_Initialization,_ADC_Set
   275                           	FNCALL	_Mcu_Initialization,_INT_Set
   276                           	FNCALL	_Mcu_Initialization,_IOC_Set
   277                           	FNCALL	_setLED_Main,_LedPointSelect
   278                           	FNCALL	_setDimmerLights_Clear,_DimmerLightsPointSelect
   279                           	FNCALL	_setDimmerLights_TriggerAdj,_DimmerLightsPointSelect
   280                           	FNCALL	_setDimmerLights_AdjGo,_DimmerLightsPointSelect
   281                           	FNCALL	_setLED,_LedPointSelect
   282                           	FNCALL	_setDimmerLights_TriggerERROR,_DimmerLightsPointSelect
   283                           	FNCALL	_DimmerLights_Close,_getDimmerLights_StatusFlag
   284                           	FNCALL	_DimmerLights_Close,_setLoad_GO
   285                           	FNCALL	_setDimmerLights_Initialization,_DimmerLightsPointSelect
   286                           	FNCALL	_setDelayOff_GO,_DelayOffPointSelect
   287                           	FNCALL	_setDelayOff_GO,_DelayTimejudge
   288                           	FNCALL	_setTxData,_RfPointSelect
   289                           	FNCALL	_setDimmerLights_Switch,_DimmerLightsPointSelect
   290                           	FNCALL	_setDimmerLights_Trigger,_DimmerLightsPointSelect
   291                           	FNCALL	_setRFSW_Status,_RfSWPointSelect
   292                           	FNCALL	_setSw_Status,_SwPointSelect
   293                           	FNCALL	_DlyOff_Initialization,_DelayOffPointSelect
   294                           	FNCALL	_CC2500_WriteREG,_CC2500_WriteByte
   295                           	FNCALL	_CC2500_PowerRST,_DelayTime_1us
   296                           	FNCALL	_CC2500_PowerRST,_CC2500_WriteByte
   297                           	FNCALL	_setRF_RxStatus,_RfPointSelect
   298                           	FNCALL	_CC2500_ReadStatus,_CC2500_WriteByte
   299                           	FNCALL	_CC2500_ReadStatus,_CC2500_ReadByte
   300                           	FNCALL	_CC2500_WriteCommand,_CC2500_WriteByte
   301                           	FNCALL	_setBuz,___wmul
   302                           	FNROOT	_main
   303                           	FNCALL	_ISR,_IOC_ISR
   304                           	FNCALL	_ISR,_TMR0_ISR
   305                           	FNCALL	_ISR,_INT_ISR
   306                           	FNCALL	_INT_ISR,_setRF_ReceiveGO
   307                           	FNCALL	_setRF_ReceiveGO,i1_RfPointSelect
   308                           	FNCALL	_TMR0_ISR,i1_setLoad_StatusOff
   309                           	FNCALL	_IOC_ISR,_setDimmerReClock
   310                           	FNCALL	intlevel1,_ISR
   311                           	global	intlevel1
   312                           	FNROOT	intlevel1
   313                           	global	_VarProduct
   314                           psect	idataBANK3,class=CODE,space=0,delta=2
   315                           global __pidataBANK3
   316  2420                     __pidataBANK3:
   317                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\10.Switch_1Key_Dimmer\Switch_1Key_Di
                                 mmer_V1.1.2\Release\Switch_1key_Dimmer_V1.2.1.1.1.h"
   318                           	line	297
   319                           
   320                           ;initializer for _VarProduct
   321  2420  3463               	retlw	063h
   322  2421  3402               	retlw	02h
   323  2422  3400               	retlw	0
   324  2423  3400               	retlw	0
   325  2424  3400               	retlw	0
   326  2425  3400               	retlw	0
   327  2426  3400               	retlw	0
   328  2427  3400               	retlw	0
   329  2428  3400               	retlw	0
   330  2429  3400               	retlw	0
   331  242A  3400               	retlw	0
   332  242B  3400               	retlw	0
   333  242C  34FF               	retlw	0FFh
   334  242D  34FF               	retlw	0FFh
   335  242E  34FF               	retlw	0FFh
   336  242F  3400               	retlw	0
   337  2430  3400               	retlw	0
   338  2431  3400               	retlw	0
   339  2432  3400               	retlw	0
   340  2433  3400               	retlw	0
   341  2434  3401               	retlw	01h
   342  2435  3400               	retlw	0
   343  2436  3400               	retlw	0
   344  2437  3400               	retlw	0
   345  2438  3400               	retlw	0
   346  2439  3400               	retlw	0
   347  243A  3400               	retlw	0
   348  243B  3400               	retlw	0
   349  243C  3400               	retlw	0
   350  243D  3400               	retlw	0
   351  243E  3400               	retlw	0
   352  243F  3400               	retlw	0
   353                           	global	_CC2500_registers_address
   354                           psect	strings,class=STRING,delta=2
   355                           global __pstrings
   356  1800                     __pstrings:
   357                           	global    __stringtab
   358  1800                     __stringtab:
   359  1800  3400               	retlw	0
   360                           psect	strings
   361                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Header_File\CC2500_B1.h"
   362                           	line	218
   363  1801                     _CC2500_registers_address:
   364  1801  3403               	retlw	03h
   365  1802  3416               	retlw	016h
   366  1803  3417               	retlw	017h
   367  1804  341E               	retlw	01Eh
   368  1805  341F               	retlw	01Fh
   369  1806  3420               	retlw	020h
   370  1807  342A               	retlw	02Ah
   371  1808  342B               	retlw	02Bh
   372  1809  340B               	retlw	0Bh
   373  180A  340C               	retlw	0Ch
   374  180B  340D               	retlw	0Dh
   375  180C  340E               	retlw	0Eh
   376  180D  340F               	retlw	0Fh
   377  180E  3410               	retlw	010h
   378  180F  3411               	retlw	011h
   379  1810  3412               	retlw	012h
   380  1811  3413               	retlw	013h
   381  1812  3414               	retlw	014h
   382  1813  340A               	retlw	0Ah
   383  1814  3415               	retlw	015h
   384  1815  3421               	retlw	021h
   385  1816  3422               	retlw	022h
   386  1817  3418               	retlw	018h
   387  1818  3419               	retlw	019h
   388  1819  341A               	retlw	01Ah
   389  181A  341B               	retlw	01Bh
   390  181B  341C               	retlw	01Ch
   391  181C  341D               	retlw	01Dh
   392  181D  3423               	retlw	023h
   393  181E  3424               	retlw	024h
   394  181F  3425               	retlw	025h
   395  1820  3426               	retlw	026h
   396  1821  3429               	retlw	029h
   397  1822  342C               	retlw	02Ch
   398  1823  342D               	retlw	02Dh
   399  1824  342E               	retlw	02Eh
   400  1825  3400               	retlw	0
   401  1826  3401               	retlw	01h
   402  1827  3402               	retlw	02h
   403  1828  3407               	retlw	07h
   404  1829  3408               	retlw	08h
   405  182A  3409               	retlw	09h
   406  182B  3406               	retlw	06h
   407  182C  3404               	retlw	04h
   408  182D  3405               	retlw	05h
   409  182E  3427               	retlw	027h
   410  182F  3428               	retlw	028h
   411                           	global	_CC2500_rfSettings
   412                           psect	strings
   413                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Header_File\CC2500_B1.h"
   414                           	line	161
   415  1830                     _CC2500_rfSettings:
   416  1830  3407               	retlw	07h
   417  1831  3407               	retlw	07h
   418  1832  3430               	retlw	030h
   419  1833  3487               	retlw	087h
   420  1834  346B               	retlw	06Bh
   421  1835  34F8               	retlw	0F8h
   422  1836  347F               	retlw	07Fh
   423  1837  343F               	retlw	03Fh
   424  1838  3409               	retlw	09h
   425  1839  3400               	retlw	0
   426  183A  345C               	retlw	05Ch
   427  183B  34A7               	retlw	0A7h
   428  183C  3462               	retlw	062h
   429  183D  3486               	retlw	086h
   430  183E  3483               	retlw	083h
   431  183F  3403               	retlw	03h
   432  1840  3422               	retlw	022h
   433  1841  34F8               	retlw	0F8h
   434  1842  3400               	retlw	0
   435  1843  3444               	retlw	044h
   436  1844  34B6               	retlw	0B6h
   437  1845  3410               	retlw	010h
   438  1846  3418               	retlw	018h
   439  1847  341D               	retlw	01Dh
   440  1848  341C               	retlw	01Ch
   441  1849  34C7               	retlw	0C7h
   442  184A  3400               	retlw	0
   443  184B  34B2               	retlw	0B2h
   444  184C  34EA               	retlw	0EAh
   445  184D  340A               	retlw	0Ah
   446  184E  3400               	retlw	0
   447  184F  3411               	retlw	011h
   448  1850  3459               	retlw	059h
   449  1851  3488               	retlw	088h
   450  1852  3431               	retlw	031h
   451  1853  340B               	retlw	0Bh
   452  1854  342F               	retlw	02Fh
   453  1855  342E               	retlw	02Eh
   454  1856  3406               	retlw	06h
   455  1857  3404               	retlw	04h
   456  1858  3405               	retlw	05h
   457  1859  3400               	retlw	0
   458  185A  3430               	retlw	030h
   459  185B  34D3               	retlw	0D3h
   460  185C  3491               	retlw	091h
   461  185D  3441               	retlw	041h
   462  185E  3400               	retlw	0
   463                           	global	_CC2500_patable_vaule
   464                           psect	strings
   465                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Header_File\CC2500_B1.h"
   466                           	line	292
   467  185F                     _CC2500_patable_vaule:
   468  185F  34FE               	retlw	0FEh
   469  1860  34FE               	retlw	0FEh
   470  1861  34FE               	retlw	0FEh
   471  1862  34FE               	retlw	0FEh
   472  1863  34FE               	retlw	0FEh
   473  1864  34FE               	retlw	0FEh
   474  1865  34FE               	retlw	0FEh
   475  1866  34FE               	retlw	0FEh
   476                           	global	_CC2500_registers_address
   477                           	global	_CC2500_rfSettings
   478                           	global	_CC2500_patable_vaule
   479                           	global	_DimmerLights
   480                           	global	_Load
   481                           	global	_Sw
   482                           	global	_Buz
   483                           	global	_DimmerLights11
   484                           	global	_PF
   485                           	global	_RF
   486                           	global	_Temp
   487                           	global	_CC2500_Enable
   488                           	global	_Receive_GO
   489                           	global	_Receive_OK
   490                           	global	_RxStatus
   491                           	global	_Transceive_GO
   492                           	global	_Transceive_OK
   493                           	global	_TxStatus
   494                           	global	_RF_Data
   495                           	global	_RF_Count
   496                           	global	_CRC
   497                           	global	_DelayOff
   498                           	global	_Dimmer
   499                           	global	_DimmerLightsIntr
   500                           	global	_LED
   501                           	global	_RFSW
   502                           	global	_RSSI
   503                           	global	_Rx_Length
   504                           	global	_SPI0Buffer
   505                           	global	_Tx_Length
   506                           	global	_r_address
   507                           	global	_r_data
   508                           	global	_s_data
   509                           	global	_VarTMain
   510                           	global	_Temp1
   511                           	global	_DimmerLights1
   512                           	global	_Buz1
   513                           	global	_Sw1
   514                           	global	_VarMemory
   515                           	global	_Load1
   516                           	global	_PF1
   517                           	global	_VarTimer0
   518                           	global	_DlySw1
   519                           	global	_VarErrLED
   520                           	global	_VarLED1
   521                           	global	_VarLED2
   522                           	global	_Dimmer1
   523                           	global	_RF1
   524                           	global	_RFSW1
   525                           	global	_Product
   526                           psect	nvBANK0,class=BANK0,space=1
   527                           global __pnvBANK0
   528  006F                     __pnvBANK0:
   529  006F                     _Product:
   530  006F                            ds      1
   531                           
   532                           	global	_TMain
   533                           psect	nvCOMMON,class=COMMON,space=1
   534                           global __pnvCOMMON
   535  007D                     __pnvCOMMON:
   536  007D                     _TMain:
   537  007D                            ds      1
   538                           
   539                           	global	_PORTA
   540  000C                     _PORTA	set	12
   541                           	global	_PORTB
   542  000D                     _PORTB	set	13
   543                           	global	_PORTC
   544  000E                     _PORTC	set	14
   545                           	global	_TMR0
   546  0015                     _TMR0	set	21
   547                           	global	_GIE
   548  005F                     _GIE	set	95
   549                           	global	_INTE
   550  005C                     _INTE	set	92
   551                           	global	_INTF
   552  0059                     _INTF	set	89
   553                           	global	_IOCIE
   554  005B                     _IOCIE	set	91
   555                           	global	_IOCIF
   556  0058                     _IOCIF	set	88
   557                           	global	_PEIE
   558  005E                     _PEIE	set	94
   559                           	global	_RA0
   560  0060                     _RA0	set	96
   561                           	global	_RA3
   562  0063                     _RA3	set	99
   563                           	global	_RA4
   564  0064                     _RA4	set	100
   565                           	global	_RA6
   566  0066                     _RA6	set	102
   567                           	global	_RA7
   568  0067                     _RA7	set	103
   569                           	global	_RB0
   570  0068                     _RB0	set	104
   571                           	global	_RB1
   572  0069                     _RB1	set	105
   573                           	global	_RB2
   574  006A                     _RB2	set	106
   575                           	global	_RB3
   576  006B                     _RB3	set	107
   577                           	global	_RB4
   578  006C                     _RB4	set	108
   579                           	global	_RB5
   580  006D                     _RB5	set	109
   581                           	global	_RC0
   582  0070                     _RC0	set	112
   583                           	global	_RC1
   584  0071                     _RC1	set	113
   585                           	global	_RC2
   586  0072                     _RC2	set	114
   587                           	global	_RC4
   588  0074                     _RC4	set	116
   589                           	global	_RC5
   590  0075                     _RC5	set	117
   591                           	global	_RC7
   592  0077                     _RC7	set	119
   593                           	global	_TMR0IE
   594  005D                     _TMR0IE	set	93
   595                           	global	_TMR0IF
   596  005A                     _TMR0IF	set	90
   597                           	global	_ADCON0
   598  009D                     _ADCON0	set	157
   599                           	global	_ADCON1
   600  009E                     _ADCON1	set	158
   601                           	global	_ADRESH
   602  009C                     _ADRESH	set	156
   603                           	global	_ADRESL
   604  009B                     _ADRESL	set	155
   605                           	global	_OPTION_REG
   606  0095                     _OPTION_REG	set	149
   607                           	global	_OSCCON
   608  0099                     _OSCCON	set	153
   609                           	global	_TRISA
   610  008C                     _TRISA	set	140
   611                           	global	_TRISB
   612  008D                     _TRISB	set	141
   613                           	global	_TRISC
   614  008E                     _TRISC	set	142
   615                           	global	_GO_nDONE
   616  04E9                     _GO_nDONE	set	1257
   617                           	global	_FVRCON
   618  0117                     _FVRCON	set	279
   619                           	global	_LATA
   620  010C                     _LATA	set	268
   621                           	global	_LATB
   622  010D                     _LATB	set	269
   623                           	global	_LATC
   624  010E                     _LATC	set	270
   625                           	global	_ANSELA
   626  018C                     _ANSELA	set	396
   627                           	global	_ANSELB
   628  018D                     _ANSELB	set	397
   629                           	global	_ANSELC
   630  018E                     _ANSELC	set	398
   631                           	global	_PMADRH
   632  0192                     _PMADRH	set	402
   633                           	global	_PMADRL
   634  0191                     _PMADRL	set	401
   635                           	global	_PMCON2
   636  0196                     _PMCON2	set	406
   637                           	global	_PMDATH
   638  0194                     _PMDATH	set	404
   639                           	global	_PMDATL
   640  0193                     _PMDATL	set	403
   641                           	global	_CFGS
   642  0CAE                     _CFGS	set	3246
   643                           	global	_FREE
   644  0CAC                     _FREE	set	3244
   645                           	global	_LWLO
   646  0CAD                     _LWLO	set	3245
   647                           	global	_RD
   648  0CA8                     _RD	set	3240
   649                           	global	_WR
   650  0CA9                     _WR	set	3241
   651                           	global	_WREN
   652  0CAA                     _WREN	set	3242
   653                           	global	_WPUB0
   654  1068                     _WPUB0	set	4200
   655                           	global	_WPUB1
   656  1069                     _WPUB1	set	4201
   657                           	global	_WPUB2
   658  106A                     _WPUB2	set	4202
   659                           	global	_IOCBF
   660  0396                     _IOCBF	set	918
   661                           	global	_IOCBN
   662  0395                     _IOCBN	set	917
   663                           	global	_IOCBP
   664  0394                     _IOCBP	set	916
   665                           	global	_IOCBF2
   666  1CB2                     _IOCBF2	set	7346
   667                           	global	_Memory
   668                           psect	nvBANK1,class=BANK1,space=1
   669                           global __pnvBANK1
   670  00EA                     __pnvBANK1:
   671  00EA                     _Memory:
   672  00EA                            ds      1
   673                           
   674                           	global	_Timer0
   675  00EB                     _Timer0:
   676  00EB                            ds      1
   677                           
   678                           	file	"Switch_1Key_Dimmer_V1.1.2.as"
   679                           	line	#
   680                           psect cinit,class=CODE,delta=2
   681                           global start_initialization
   682  278E                     start_initialization:
   683                           
   684                           psect	bitbssCOMMON,class=COMMON,bit,space=1
   685                           global __pbitbssCOMMON
   686  0380                     __pbitbssCOMMON:
   687  0380                     _CC2500_Enable:
   688  0380                            ds      1
   689                           
   690  0381                     _Receive_GO:
   691  0381                            ds      1
   692                           
   693  0382                     _Receive_OK:
   694  0382                            ds      1
   695                           
   696  0383                     _RxStatus:
   697  0383                            ds      1
   698                           
   699  0384                     _Transceive_GO:
   700  0384                            ds      1
   701                           
   702  0385                     _Transceive_OK:
   703  0385                            ds      1
   704                           
   705  0386                     _TxStatus:
   706  0386                            ds      1
   707                           
   708                           psect	bssCOMMON,class=COMMON,space=1
   709                           global __pbssCOMMON
   710  0078                     __pbssCOMMON:
   711  0078                     _Buz:
   712  0078                            ds      1
   713                           
   714  0079                     _DimmerLights11:
   715  0079                            ds      1
   716                           
   717  007A                     _PF:
   718  007A                            ds      1
   719                           
   720  007B                     _RF:
   721  007B                            ds      1
   722                           
   723  007C                     _Temp:
   724  007C                            ds      1
   725                           
   726                           psect	bssBANK0,class=BANK0,space=1
   727                           global __pbssBANK0
   728  006C                     __pbssBANK0:
   729  006C                     _DimmerLights:
   730  006C                            ds      1
   731                           
   732  006D                     _Load:
   733  006D                            ds      1
   734                           
   735  006E                     _Sw:
   736  006E                            ds      1
   737                           
   738                           psect	bssBANK1,class=BANK1,space=1
   739                           global __pbssBANK1
   740  00A0                     __pbssBANK1:
   741  00A0                     _RF_Data:
   742  00A0                            ds      21
   743                           
   744  00B5                     _RF_Count:
   745  00B5                            ds      2
   746                           
   747  00B7                     _CRC:
   748  00B7                            ds      1
   749                           
   750  00B8                     _DelayOff:
   751  00B8                            ds      1
   752                           
   753  00B9                     _Dimmer:
   754  00B9                            ds      1
   755                           
   756  00BA                     _DimmerLightsIntr:
   757  00BA                            ds      1
   758                           
   759  00BB                     _LED:
   760  00BB                            ds      1
   761                           
   762  00BC                     _RFSW:
   763  00BC                            ds      1
   764                           
   765  00BD                     _RSSI:
   766  00BD                            ds      1
   767                           
   768  00BE                     _Rx_Length:
   769  00BE                            ds      1
   770                           
   771  00BF                     _SPI0Buffer:
   772  00BF                            ds      1
   773                           
   774  00C0                     _Tx_Length:
   775  00C0                            ds      1
   776                           
   777  00C1                     _r_address:
   778  00C1                            ds      1
   779                           
   780  00C2                     _r_data:
   781  00C2                            ds      1
   782                           
   783  00C3                     _s_data:
   784  00C3                            ds      1
   785                           
   786  00C4                     _PF1:
   787  00C4                            ds      8
   788                           
   789  00CC                     _VarTimer0:
   790  00CC                            ds      7
   791                           
   792  00D3                     _DlySw1:
   793  00D3                            ds      5
   794                           
   795  00D8                     _VarErrLED:
   796  00D8                            ds      4
   797                           
   798  00DC                     _VarLED1:
   799  00DC                            ds      4
   800                           
   801  00E0                     _VarLED2:
   802  00E0                            ds      4
   803                           
   804  00E4                     _Dimmer1:
   805  00E4                            ds      3
   806                           
   807  00E7                     _RF1:
   808  00E7                            ds      2
   809                           
   810  00E9                     _RFSW1:
   811  00E9                            ds      1
   812                           
   813                           psect	bssBANK2,class=BANK2,space=1
   814                           global __pbssBANK2
   815  0120                     __pbssBANK2:
   816  0120                     _VarTMain:
   817  0120                            ds      16
   818                           
   819  0130                     _Temp1:
   820  0130                            ds      14
   821                           
   822  013E                     _DimmerLights1:
   823  013E                            ds      13
   824                           
   825  014B                     _Buz1:
   826  014B                            ds      12
   827                           
   828  0157                     _Sw1:
   829  0157                            ds      9
   830                           
   831                           psect	bssBANK3,class=BANK3,space=1
   832                           global __pbssBANK3
   833  01A0                     __pbssBANK3:
   834  01A0                     _VarMemory:
   835  01A0                            ds      37
   836                           
   837                           psect	dataBANK3,class=BANK3,space=1
   838                           global __pdataBANK3
   839  01C5                     __pdataBANK3:
   840                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\10.Switch_1Key_Dimmer\Switch_1Key_Di
                                 mmer_V1.1.2\Release\Switch_1key_Dimmer_V1.2.1.1.1.h"
   841                           	line	297
   842  01C5                     _VarProduct:
   843  01C5                            ds      32
   844                           
   845                           psect	bssBANK4,class=BANK4,space=1
   846                           global __pbssBANK4
   847  0220                     __pbssBANK4:
   848  0220                     _Load1:
   849  0220                            ds      71
   850                           
   851                           psect clrtext,class=CODE,delta=2
   852                           global clear_ram
   853                           ;	Called with FSR0 containing the base address, and
   854                           ;	WREG with the size to clear
   855  20CA                     clear_ram:
   856  20CA  0064               	clrwdt			;clear the watchdog before getting into this loop
   857  20CB                     clrloop:
   858  20CB  0180               	clrf	indf0		;clear RAM location pointed to by FSR
   859  20CC  3101               	addfsr	0,1
   860  20CD  0B89               	decfsz wreg		;Have we reached the end of clearing yet?
   861  20CE  28CB               	goto clrloop	;have we reached the end yet?
   862  20CF  3400               	retlw	0		;all done for this memory range, return
   863                           ; Clear objects allocated to BITCOMMON
   864                           psect cinit,class=CODE,delta=2
   865                           	global __pbitbssCOMMON
   866  278E  01F0               	clrf	((__pbitbssCOMMON/8)+0)&07Fh
   867                           ; Clear objects allocated to COMMON
   868                           psect cinit,class=CODE,delta=2
   869                           	global __pbssCOMMON
   870  278F  01F8               	clrf	((__pbssCOMMON)+0)&07Fh
   871  2790  01F9               	clrf	((__pbssCOMMON)+1)&07Fh
   872  2791  01FA               	clrf	((__pbssCOMMON)+2)&07Fh
   873  2792  01FB               	clrf	((__pbssCOMMON)+3)&07Fh
   874  2793  01FC               	clrf	((__pbssCOMMON)+4)&07Fh
   875                           ; Clear objects allocated to BANK0
   876                           psect cinit,class=CODE,delta=2
   877                           	global __pbssBANK0
   878  2794  01EC               	clrf	((__pbssBANK0)+0)&07Fh
   879  2795  01ED               	clrf	((__pbssBANK0)+1)&07Fh
   880  2796  01EE               	clrf	((__pbssBANK0)+2)&07Fh
   881                           ; Clear objects allocated to BANK1
   882                           psect cinit,class=CODE,delta=2
   883                           	global __pbssBANK1
   884  2797  30A0               	movlw	low(__pbssBANK1)
   885  2798  0084               	movwf	fsr0l
   886  2799  3000               	movlw	high(__pbssBANK1)
   887  279A  0085               	movwf	fsr0h
   888  279B  304A               	movlw	04Ah
   889  279C  31A0  20CA  31A7   	fcall	clear_ram
   890                           ; Clear objects allocated to BANK2
   891                           psect cinit,class=CODE,delta=2
   892                           	global __pbssBANK2
   893  279F  3020               	movlw	low(__pbssBANK2)
   894  27A0  0084               	movwf	fsr0l
   895  27A1  3001               	movlw	high(__pbssBANK2)
   896  27A2  0085               	movwf	fsr0h
   897  27A3  3040               	movlw	040h
   898  27A4  31A0  20CA  31A7   	fcall	clear_ram
   899                           ; Clear objects allocated to BANK3
   900                           psect cinit,class=CODE,delta=2
   901                           	global __pbssBANK3
   902  27A7  30A0               	movlw	low(__pbssBANK3)
   903  27A8  0084               	movwf	fsr0l
   904  27A9  3001               	movlw	high(__pbssBANK3)
   905  27AA  0085               	movwf	fsr0h
   906  27AB  3025               	movlw	025h
   907  27AC  31A0  20CA  31A7   	fcall	clear_ram
   908                           ; Clear objects allocated to BANK4
   909                           psect cinit,class=CODE,delta=2
   910                           	global __pbssBANK4
   911  27AF  3020               	movlw	low(__pbssBANK4)
   912  27B0  0084               	movwf	fsr0l
   913  27B1  3002               	movlw	high(__pbssBANK4)
   914  27B2  0085               	movwf	fsr0h
   915  27B3  3047               	movlw	047h
   916  27B4  31A0  20CA  31A7   	fcall	clear_ram
   917                           psect inittext,class=CODE,delta=2
   918                           global init_ram,btemp
   919  20C4                     init_ram:
   920  20C4  00FE               	movwf btemp,f
   921  20C5                     initloop:
   922  20C5  0012               	moviw fsr0++
   923  20C6  001E               	movwi fsr1++
   924  20C7  0BFE               	decfsz btemp
   925  20C8  28C5               	goto initloop
   926  20C9  3400               	retlw 0
   927                           ; Initialize objects allocated to BANK3
   928                           	global __pidataBANK3,__pdataBANK3
   929                           psect cinit,class=CODE,delta=2
   930  27B7  3020               	movlw low(__pidataBANK3)
   931  27B8  0084               	movwf fsr0l
   932  27B9  30A4               	movlw high(__pidataBANK3)|80h
   933  27BA  0085               	movwf fsr0h
   934  27BB  30C5               	movlw low(__pdataBANK3)
   935  27BC  0086               	movwf fsr1l
   936  27BD  3001               	movlw high(__pdataBANK3)
   937  27BE  0087               	movwf fsr1h
   938  27BF  3020               	movlw 020h
   939  27C0  31A0  20C4  31A7   	fcall init_ram
   940                           psect cinit,class=CODE,delta=2
   941                           global end_of_initialization
   942                           
   943                           ;End of C runtime variable initialization code
   944                           
   945  27C3                     end_of_initialization:
   946  27C3  0020               movlb 0
   947  27C4  319F  2F87         ljmp _main	;jump to C main() function
   948                           psect	cstackCOMMON,class=COMMON,space=1
   949                           global __pcstackCOMMON
   950  0071                     __pcstackCOMMON:
   951                           	global	?_CC2500_WriteByte
   952  0071                     ?_CC2500_WriteByte:	; 0 bytes @ 0x0
   953                           	global	?_CC2500_WriteCommand
   954  0071                     ?_CC2500_WriteCommand:	; 0 bytes @ 0x0
   955                           	global	?_CC2500_ReadStatus
   956  0071                     ?_CC2500_ReadStatus:	; 0 bytes @ 0x0
   957                           	global	?_CC2500_ReadByte
   958  0071                     ?_CC2500_ReadByte:	; 0 bytes @ 0x0
   959                           	global	?_CC2500_PowerRST
   960  0071                     ?_CC2500_PowerRST:	; 0 bytes @ 0x0
   961                           	global	?_CC2500_InitSetREG
   962  0071                     ?_CC2500_InitSetREG:	; 0 bytes @ 0x0
   963                           	global	?_CC2500_InitPATable
   964  0071                     ?_CC2500_InitPATable:	; 0 bytes @ 0x0
   965                           	global	?_CC2500_ClearTXFIFO
   966  0071                     ?_CC2500_ClearTXFIFO:	; 0 bytes @ 0x0
   967                           	global	?_CC2500_ClearRXFIFO
   968  0071                     ?_CC2500_ClearRXFIFO:	; 0 bytes @ 0x0
   969                           	global	?_CC2500_FrequencyCabr
   970  0071                     ?_CC2500_FrequencyCabr:	; 0 bytes @ 0x0
   971                           	global	?_CC2500_SIDLEMode
   972  0071                     ?_CC2500_SIDLEMode:	; 0 bytes @ 0x0
   973                           	global	?_DlyOff_Initialization
   974  0071                     ?_DlyOff_Initialization:	; 0 bytes @ 0x0
   975                           	global	?_DlyOff_Main
   976  0071                     ?_DlyOff_Main:	; 0 bytes @ 0x0
   977                           	global	?_setTxData
   978  0071                     ?_setTxData:	; 0 bytes @ 0x0
   979                           	global	?_setDimmerLights_Initialization
   980  0071                     ?_setDimmerLights_Initialization:	; 0 bytes @ 0x0
   981                           	global	?_Dimmer_Initialization
   982  0071                     ?_Dimmer_Initialization:	; 0 bytes @ 0x0
   983                           	global	?_setLoad_GO
   984  0071                     ?_setLoad_GO:	; 0 bytes @ 0x0
   985                           	global	?_setDimmerLights_Main
   986  0071                     ?_setDimmerLights_Main:	; 0 bytes @ 0x0
   987                           	global	?_setDimmerLights_ERROR
   988  0071                     ?_setDimmerLights_ERROR:	; 0 bytes @ 0x0
   989                           	global	?_setLoad_Count
   990  0071                     ?_setLoad_Count:	; 0 bytes @ 0x0
   991                           	global	?_setLED_Initialization
   992  0071                     ?_setLED_Initialization:	; 0 bytes @ 0x0
   993                           	global	?_setLED_Main
   994  0071                     ?_setLED_Main:	; 0 bytes @ 0x0
   995                           	global	?_MainT_Initialization
   996  0071                     ?_MainT_Initialization:	; 0 bytes @ 0x0
   997                           	global	?_Mcu_Initialization
   998  0071                     ?_Mcu_Initialization:	; 0 bytes @ 0x0
   999                           	global	?_Flash_Memory_Initialization
  1000  0071                     ?_Flash_Memory_Initialization:	; 0 bytes @ 0x0
  1001                           	global	?_Temp_Initialization
  1002  0071                     ?_Temp_Initialization:	; 0 bytes @ 0x0
  1003                           	global	?_Load_Initialization
  1004  0071                     ?_Load_Initialization:	; 0 bytes @ 0x0
  1005                           	global	?_PowerFault_Initialization
  1006  0071                     ?_PowerFault_Initialization:	; 0 bytes @ 0x0
  1007                           	global	?_Switch_Initialization
  1008  0071                     ?_Switch_Initialization:	; 0 bytes @ 0x0
  1009                           	global	?_RF_Initialization
  1010  0071                     ?_RF_Initialization:	; 0 bytes @ 0x0
  1011                           	global	?_getLoad_AD
  1012  0071                     ?_getLoad_AD:	; 0 bytes @ 0x0
  1013                           	global	?_getTemp_AD
  1014  0071                     ?_getTemp_AD:	; 0 bytes @ 0x0
  1015                           	global	?_getPowerFault_AD
  1016  0071                     ?_getPowerFault_AD:	; 0 bytes @ 0x0
  1017                           	global	?_MainT
  1018  0071                     ?_MainT:	; 0 bytes @ 0x0
  1019                           	global	?_Flash_Memory_Main
  1020  0071                     ?_Flash_Memory_Main:	; 0 bytes @ 0x0
  1021                           	global	?_Temp_Main
  1022  0071                     ?_Temp_Main:	; 0 bytes @ 0x0
  1023                           	global	?_Load_Main
  1024  0071                     ?_Load_Main:	; 0 bytes @ 0x0
  1025                           	global	?_PowerFault_Main
  1026  0071                     ?_PowerFault_Main:	; 0 bytes @ 0x0
  1027                           	global	?_Switch_Main
  1028  0071                     ?_Switch_Main:	; 0 bytes @ 0x0
  1029                           	global	?_RF_Main
  1030  0071                     ?_RF_Main:	; 0 bytes @ 0x0
  1031                           	global	?_setTemp_Enable
  1032  0071                     ?_setTemp_Enable:	; 0 bytes @ 0x0
  1033                           	global	?_setLoad_Enable
  1034  0071                     ?_setLoad_Enable:	; 0 bytes @ 0x0
  1035                           	global	?_setSw_Enable
  1036  0071                     ?_setSw_Enable:	; 0 bytes @ 0x0
  1037                           	global	?_IO_Set
  1038  0071                     ?_IO_Set:	; 0 bytes @ 0x0
  1039                           	global	?_TMR0_Set
  1040  0071                     ?_TMR0_Set:	; 0 bytes @ 0x0
  1041                           	global	?_ADC_Set
  1042  0071                     ?_ADC_Set:	; 0 bytes @ 0x0
  1043                           	global	?_INT_Set
  1044  0071                     ?_INT_Set:	; 0 bytes @ 0x0
  1045                           	global	?_IOC_Set
  1046  0071                     ?_IOC_Set:	; 0 bytes @ 0x0
  1047                           	global	?_IOC_ISR
  1048  0071                     ?_IOC_ISR:	; 0 bytes @ 0x0
  1049                           	global	??_IOC_ISR
  1050  0071                     ??_IOC_ISR:	; 0 bytes @ 0x0
  1051                           	global	?_TMR0_ISR
  1052  0071                     ?_TMR0_ISR:	; 0 bytes @ 0x0
  1053                           	global	?_INT_ISR
  1054  0071                     ?_INT_ISR:	; 0 bytes @ 0x0
  1055                           	global	?_Flash_Memory_Write
  1056  0071                     ?_Flash_Memory_Write:	; 0 bytes @ 0x0
  1057                           	global	?_Flash_Memory_Modify
  1058  0071                     ?_Flash_Memory_Modify:	; 0 bytes @ 0x0
  1059                           	global	?_setLoad_AH_AL_Restore
  1060  0071                     ?_setLoad_AH_AL_Restore:	; 0 bytes @ 0x0
  1061                           	global	?_setLoad_Exceptions
  1062  0071                     ?_setLoad_Exceptions:	; 0 bytes @ 0x0
  1063                           	global	?_setTemp_Initialization
  1064  0071                     ?_setTemp_Initialization:	; 0 bytes @ 0x0
  1065                           	global	?_setTemp_Main
  1066  0071                     ?_setTemp_Main:	; 0 bytes @ 0x0
  1067                           	global	?_setOverTemp_Exceptions
  1068  0071                     ?_setOverTemp_Exceptions:	; 0 bytes @ 0x0
  1069                           	global	?_setPowerFault_Initialization
  1070  0071                     ?_setPowerFault_Initialization:	; 0 bytes @ 0x0
  1071                           	global	?_setPowerFault_Main
  1072  0071                     ?_setPowerFault_Main:	; 0 bytes @ 0x0
  1073                           	global	?_setPowerFault_Exceptions
  1074  0071                     ?_setPowerFault_Exceptions:	; 0 bytes @ 0x0
  1075                           	global	?_setRF_Initialization
  1076  0071                     ?_setRF_Initialization:	; 0 bytes @ 0x0
  1077                           	global	?_setRF_Main
  1078  0071                     ?_setRF_Main:	; 0 bytes @ 0x0
  1079                           	global	?_getRxData
  1080  0071                     ?_getRxData:	; 0 bytes @ 0x0
  1081                           	global	?_RF_RxDisable
  1082  0071                     ?_RF_RxDisable:	; 0 bytes @ 0x0
  1083                           	global	?_setLog_Code
  1084  0071                     ?_setLog_Code:	; 0 bytes @ 0x0
  1085                           	global	?_setControl_Lights_Table
  1086  0071                     ?_setControl_Lights_Table:	; 0 bytes @ 0x0
  1087                           	global	?_setRFSW_Control
  1088  0071                     ?_setRFSW_Control:	; 0 bytes @ 0x0
  1089                           	global	?_setRFSW_AdjControl
  1090  0071                     ?_setRFSW_AdjControl:	; 0 bytes @ 0x0
  1091                           	global	?_setRF_DimmerValue
  1092  0071                     ?_setRF_DimmerValue:	; 0 bytes @ 0x0
  1093                           	global	?_setSw_Initialization
  1094  0071                     ?_setSw_Initialization:	; 0 bytes @ 0x0
  1095                           	global	?_setSw_Main
  1096  0071                     ?_setSw_Main:	; 0 bytes @ 0x0
  1097                           	global	?_Sw_DimmerOnFunc
  1098  0071                     ?_Sw_DimmerOnFunc:	; 0 bytes @ 0x0
  1099                           	global	?_Sw_DimmerAdjFunc
  1100  0071                     ?_Sw_DimmerAdjFunc:	; 0 bytes @ 0x0
  1101                           	global	?_Sw_DimmerOffFunc
  1102  0071                     ?_Sw_DimmerOffFunc:	; 0 bytes @ 0x0
  1103                           	global	?_Buzzer_Initialization
  1104  0071                     ?_Buzzer_Initialization:	; 0 bytes @ 0x0
  1105                           	global	?_Buzzer_Main
  1106  0071                     ?_Buzzer_Main:	; 0 bytes @ 0x0
  1107                           	global	?_CC2500_TxData
  1108  0071                     ?_CC2500_TxData:	; 0 bytes @ 0x0
  1109                           	global	?_CC2500_RxData
  1110  0071                     ?_CC2500_RxData:	; 0 bytes @ 0x0
  1111                           	global	?_CC2500_PowerOnInitial
  1112  0071                     ?_CC2500_PowerOnInitial:	; 0 bytes @ 0x0
  1113                           	global	?_DelayOffPointSelect
  1114  0071                     ?_DelayOffPointSelect:	; 0 bytes @ 0x0
  1115                           	global	?_DelayOff_Initialization
  1116  0071                     ?_DelayOff_Initialization:	; 0 bytes @ 0x0
  1117                           	global	?_DelayOff_Main
  1118  0071                     ?_DelayOff_Main:	; 0 bytes @ 0x0
  1119                           	global	?_DimmerLightsPointSelect
  1120  0071                     ?_DimmerLightsPointSelect:	; 0 bytes @ 0x0
  1121                           	global	?_DimmerLights_Initialization
  1122  0071                     ?_DimmerLights_Initialization:	; 0 bytes @ 0x0
  1123                           	global	?_DimmerLights_Close
  1124  0071                     ?_DimmerLights_Close:	; 0 bytes @ 0x0
  1125                           	global	?_DimmerLights_Main
  1126  0071                     ?_DimmerLights_Main:	; 0 bytes @ 0x0
  1127                           	global	?_DimmerLights_Exceptions
  1128  0071                     ?_DimmerLights_Exceptions:	; 0 bytes @ 0x0
  1129                           	global	?_setDimmerLights_AdjRF
  1130  0071                     ?_setDimmerLights_AdjRF:	; 0 bytes @ 0x0
  1131                           	global	?_LedPointSelect
  1132  0071                     ?_LedPointSelect:	; 0 bytes @ 0x0
  1133                           	global	?_LED_Initialization
  1134  0071                     ?_LED_Initialization:	; 0 bytes @ 0x0
  1135                           	global	?_LED_Main
  1136  0071                     ?_LED_Main:	; 0 bytes @ 0x0
  1137                           	global	?_main
  1138  0071                     ?_main:	; 0 bytes @ 0x0
  1139                           	global	?_ISR
  1140  0071                     ?_ISR:	; 0 bytes @ 0x0
  1141                           	global	?_setDimmerReClock
  1142  0071                     ?_setDimmerReClock:	; 0 bytes @ 0x0
  1143                           	global	??_setDimmerReClock
  1144  0071                     ??_setDimmerReClock:	; 0 bytes @ 0x0
  1145                           	global	?_setINT_GO
  1146  0071                     ?_setINT_GO:	; 0 bytes @ 0x0
  1147                           	global	?_Flash_Memory_Unlock
  1148  0071                     ?_Flash_Memory_Unlock:	; 0 bytes @ 0x0
  1149                           	global	?_Flash_Memory_Erasing
  1150  0071                     ?_Flash_Memory_Erasing:	; 0 bytes @ 0x0
  1151                           	global	?_RfPointSelect
  1152  0071                     ?_RfPointSelect:	; 0 bytes @ 0x0
  1153                           	global	?_RfSWPointSelect
  1154  0071                     ?_RfSWPointSelect:	; 0 bytes @ 0x0
  1155                           	global	?_TouchPower
  1156  0071                     ?_TouchPower:	; 0 bytes @ 0x0
  1157                           	global	?_SwPointSelect
  1158  0071                     ?_SwPointSelect:	; 0 bytes @ 0x0
  1159                           	global	?i1_setLoad_StatusOff
  1160  0071                     ?i1_setLoad_StatusOff:	; 0 bytes @ 0x0
  1161                           	global	?i1_RfPointSelect
  1162  0071                     ?i1_RfPointSelect:	; 0 bytes @ 0x0
  1163                           	global	??i1_RfPointSelect
  1164  0071                     ??i1_RfPointSelect:	; 0 bytes @ 0x0
  1165                           	global	?_DelayTimejudge
  1166  0071                     ?_DelayTimejudge:	; 1 bytes @ 0x0
  1167                           	global	?_getDimmerLights_StatusFlag
  1168  0071                     ?_getDimmerLights_StatusFlag:	; 1 bytes @ 0x0
  1169                           	global	?_getPercentValue
  1170  0071                     ?_getPercentValue:	; 1 bytes @ 0x0
  1171                           	global	?_Flash_Memory_Read
  1172  0071                     ?_Flash_Memory_Read:	; 1 bytes @ 0x0
  1173                           	global	?_getTemp_Safe
  1174  0071                     ?_getTemp_Safe:	; 1 bytes @ 0x0
  1175                           	global	?_getPF_Safe
  1176  0071                     ?_getPF_Safe:	; 1 bytes @ 0x0
  1177                           	global	?_setPercentValue
  1178  0071                     ?_setPercentValue:	; 1 bytes @ 0x0
  1179                           	global	?_getLoad_Safe
  1180  0071                     ?_getLoad_Safe:	; 1 bytes @ 0x0
  1181                           	global	setRF_Initialization@rf
  1182  0071                     setRF_Initialization@rf:	; 1 bytes @ 0x0
  1183                           	global	i1setLoad_StatusOff@command
  1184  0071                     i1setLoad_StatusOff@command:	; 1 bytes @ 0x0
  1185  0071                     	ds	1
  1186                           	global	??i1_setLoad_StatusOff
  1187  0072                     ??i1_setLoad_StatusOff:	; 0 bytes @ 0x1
  1188                           	global	i1setLoad_StatusOff@lights
  1189  0072                     i1setLoad_StatusOff@lights:	; 1 bytes @ 0x1
  1190                           	global	i1RfPointSelect@rf
  1191  0072                     i1RfPointSelect@rf:	; 1 bytes @ 0x1
  1192  0072                     	ds	1
  1193                           	global	??_TMR0_ISR
  1194  0073                     ??_TMR0_ISR:	; 0 bytes @ 0x2
  1195                           	global	?_setRF_ReceiveGO
  1196  0073                     ?_setRF_ReceiveGO:	; 0 bytes @ 0x2
  1197                           	global	setRF_ReceiveGO@command
  1198  0073                     setRF_ReceiveGO@command:	; 1 bytes @ 0x2
  1199  0073                     	ds	1
  1200                           	global	??_setRF_ReceiveGO
  1201  0074                     ??_setRF_ReceiveGO:	; 0 bytes @ 0x3
  1202                           	global	setRF_ReceiveGO@rf
  1203  0074                     setRF_ReceiveGO@rf:	; 1 bytes @ 0x3
  1204  0074                     	ds	1
  1205                           	global	??_INT_ISR
  1206  0075                     ??_INT_ISR:	; 0 bytes @ 0x4
  1207  0075                     	ds	2
  1208                           	global	??_ISR
  1209  0077                     ??_ISR:	; 0 bytes @ 0x6
  1210  0077                     	ds	1
  1211                           psect	cstackBANK0,class=BANK0,space=1
  1212                           global __pcstackBANK0
  1213  0020                     __pcstackBANK0:
  1214                           	global	??_CC2500_WriteByte
  1215  0020                     ??_CC2500_WriteByte:	; 0 bytes @ 0x0
  1216                           	global	??_CC2500_ReadByte
  1217  0020                     ??_CC2500_ReadByte:	; 0 bytes @ 0x0
  1218                           	global	?_DelayTime_1us
  1219  0020                     ?_DelayTime_1us:	; 0 bytes @ 0x0
  1220                           	global	?_setRF_DimmerLights
  1221  0020                     ?_setRF_DimmerLights:	; 0 bytes @ 0x0
  1222                           	global	??_DelayTimejudge
  1223  0020                     ??_DelayTimejudge:	; 0 bytes @ 0x0
  1224                           	global	??_Dimmer_Initialization
  1225  0020                     ??_Dimmer_Initialization:	; 0 bytes @ 0x0
  1226                           	global	??_getDimmerLights_StatusFlag
  1227  0020                     ??_getDimmerLights_StatusFlag:	; 0 bytes @ 0x0
  1228                           	global	??_setLoad_GO
  1229  0020                     ??_setLoad_GO:	; 0 bytes @ 0x0
  1230                           	global	?_setLoad_StatusOff
  1231  0020                     ?_setLoad_StatusOff:	; 0 bytes @ 0x0
  1232                           	global	??_setLoad_Count
  1233  0020                     ??_setLoad_Count:	; 0 bytes @ 0x0
  1234                           	global	?_setLoad_StatusOn
  1235  0020                     ?_setLoad_StatusOn:	; 0 bytes @ 0x0
  1236                           	global	??_MainT_Initialization
  1237  0020                     ??_MainT_Initialization:	; 0 bytes @ 0x0
  1238                           	global	??_setTemp_Enable
  1239  0020                     ??_setTemp_Enable:	; 0 bytes @ 0x0
  1240                           	global	??_setLoad_Enable
  1241  0020                     ??_setLoad_Enable:	; 0 bytes @ 0x0
  1242                           	global	??_IO_Set
  1243  0020                     ??_IO_Set:	; 0 bytes @ 0x0
  1244                           	global	??_TMR0_Set
  1245  0020                     ??_TMR0_Set:	; 0 bytes @ 0x0
  1246                           	global	??_ADC_Set
  1247  0020                     ??_ADC_Set:	; 0 bytes @ 0x0
  1248                           	global	??_INT_Set
  1249  0020                     ??_INT_Set:	; 0 bytes @ 0x0
  1250                           	global	??_IOC_Set
  1251  0020                     ??_IOC_Set:	; 0 bytes @ 0x0
  1252                           	global	??_Flash_Memory_Read
  1253  0020                     ??_Flash_Memory_Read:	; 0 bytes @ 0x0
  1254                           	global	??_Flash_Memory_Write
  1255  0020                     ??_Flash_Memory_Write:	; 0 bytes @ 0x0
  1256                           	global	??_setLoad_AH_AL_Restore
  1257  0020                     ??_setLoad_AH_AL_Restore:	; 0 bytes @ 0x0
  1258                           	global	??_getTemp_Safe
  1259  0020                     ??_getTemp_Safe:	; 0 bytes @ 0x0
  1260                           	global	??_getPF_Safe
  1261  0020                     ??_getPF_Safe:	; 0 bytes @ 0x0
  1262                           	global	??_setTemp_Initialization
  1263  0020                     ??_setTemp_Initialization:	; 0 bytes @ 0x0
  1264                           	global	??_setPowerFault_Initialization
  1265  0020                     ??_setPowerFault_Initialization:	; 0 bytes @ 0x0
  1266                           	global	??_setRF_Initialization
  1267  0020                     ??_setRF_Initialization:	; 0 bytes @ 0x0
  1268                           	global	??_Buzzer_Initialization
  1269  0020                     ??_Buzzer_Initialization:	; 0 bytes @ 0x0
  1270                           	global	??_Buzzer_Main
  1271  0020                     ??_Buzzer_Main:	; 0 bytes @ 0x0
  1272                           	global	??_DelayOffPointSelect
  1273  0020                     ??_DelayOffPointSelect:	; 0 bytes @ 0x0
  1274                           	global	??_DimmerLightsPointSelect
  1275  0020                     ??_DimmerLightsPointSelect:	; 0 bytes @ 0x0
  1276                           	global	??_LedPointSelect
  1277  0020                     ??_LedPointSelect:	; 0 bytes @ 0x0
  1278                           	global	??_setINT_GO
  1279  0020                     ??_setINT_GO:	; 0 bytes @ 0x0
  1280                           	global	??_Flash_Memory_Unlock
  1281  0020                     ??_Flash_Memory_Unlock:	; 0 bytes @ 0x0
  1282                           	global	??_Flash_Memory_Erasing
  1283  0020                     ??_Flash_Memory_Erasing:	; 0 bytes @ 0x0
  1284                           	global	??_getLoad_Safe
  1285  0020                     ??_getLoad_Safe:	; 0 bytes @ 0x0
  1286                           	global	??_RfPointSelect
  1287  0020                     ??_RfPointSelect:	; 0 bytes @ 0x0
  1288                           	global	??_RfSWPointSelect
  1289  0020                     ??_RfSWPointSelect:	; 0 bytes @ 0x0
  1290                           	global	??_TouchPower
  1291  0020                     ??_TouchPower:	; 0 bytes @ 0x0
  1292                           	global	??_SwPointSelect
  1293  0020                     ??_SwPointSelect:	; 0 bytes @ 0x0
  1294                           	global	?_getAD
  1295  0020                     ?_getAD:	; 2 bytes @ 0x0
  1296                           	global	?___wmul
  1297  0020                     ?___wmul:	; 2 bytes @ 0x0
  1298                           	global	?___lwdiv
  1299  0020                     ?___lwdiv:	; 2 bytes @ 0x0
  1300                           	global	?___ftpack
  1301  0020                     ?___ftpack:	; 3 bytes @ 0x0
  1302                           	global	setINT_GO@command
  1303  0020                     setINT_GO@command:	; 1 bytes @ 0x0
  1304                           	global	getAD@adcon1
  1305  0020                     getAD@adcon1:	; 1 bytes @ 0x0
  1306                           	global	setLoad_Enable@command
  1307  0020                     setLoad_Enable@command:	; 1 bytes @ 0x0
  1308                           	global	setLoad_GO@command
  1309  0020                     setLoad_GO@command:	; 1 bytes @ 0x0
  1310                           	global	setLoad_StatusOn@command
  1311  0020                     setLoad_StatusOn@command:	; 1 bytes @ 0x0
  1312                           	global	setLoad_StatusOff@command
  1313  0020                     setLoad_StatusOff@command:	; 1 bytes @ 0x0
  1314                           	global	setTemp_Enable@command
  1315  0020                     setTemp_Enable@command:	; 1 bytes @ 0x0
  1316                           	global	setRF_DimmerLights@on
  1317  0020                     setRF_DimmerLights@on:	; 1 bytes @ 0x0
  1318                           	global	DelayTime_1us@count
  1319  0020                     DelayTime_1us@count:	; 2 bytes @ 0x0
  1320                           	global	___wmul@multiplier
  1321  0020                     ___wmul@multiplier:	; 2 bytes @ 0x0
  1322                           	global	___lwdiv@divisor
  1323  0020                     ___lwdiv@divisor:	; 2 bytes @ 0x0
  1324                           	global	___ftpack@arg
  1325  0020                     ___ftpack@arg:	; 3 bytes @ 0x0
  1326  0020                     	ds	1
  1327                           	global	??_setRF_DimmerLights
  1328  0021                     ??_setRF_DimmerLights:	; 0 bytes @ 0x1
  1329                           	global	??_setLoad_StatusOff
  1330  0021                     ??_setLoad_StatusOff:	; 0 bytes @ 0x1
  1331                           	global	??_setLoad_StatusOn
  1332  0021                     ??_setLoad_StatusOn:	; 0 bytes @ 0x1
  1333                           	global	??_Mcu_Initialization
  1334  0021                     ??_Mcu_Initialization:	; 0 bytes @ 0x1
  1335                           	global	??_Temp_Initialization
  1336  0021                     ??_Temp_Initialization:	; 0 bytes @ 0x1
  1337                           	global	??_PowerFault_Initialization
  1338  0021                     ??_PowerFault_Initialization:	; 0 bytes @ 0x1
  1339                           	global	??_RF_Initialization
  1340  0021                     ??_RF_Initialization:	; 0 bytes @ 0x1
  1341                           	global	CC2500_WriteByte@loop_a
  1342  0021                     CC2500_WriteByte@loop_a:	; 1 bytes @ 0x1
  1343                           	global	CC2500_ReadByte@loop_b
  1344  0021                     CC2500_ReadByte@loop_b:	; 1 bytes @ 0x1
  1345                           	global	DelayOffPointSelect@sw
  1346  0021                     DelayOffPointSelect@sw:	; 1 bytes @ 0x1
  1347                           	global	DelayTimejudge@i
  1348  0021                     DelayTimejudge@i:	; 1 bytes @ 0x1
  1349                           	global	DimmerLightsPointSelect@lights
  1350  0021                     DimmerLightsPointSelect@lights:	; 1 bytes @ 0x1
  1351                           	global	getDimmerLights_StatusFlag@Status
  1352  0021                     getDimmerLights_StatusFlag@Status:	; 1 bytes @ 0x1
  1353                           	global	LedPointSelect@led
  1354  0021                     LedPointSelect@led:	; 1 bytes @ 0x1
  1355                           	global	Flash_Memory_Read@i
  1356  0021                     Flash_Memory_Read@i:	; 1 bytes @ 0x1
  1357                           	global	Flash_Memory_Write@i
  1358  0021                     Flash_Memory_Write@i:	; 1 bytes @ 0x1
  1359                           	global	setLoad_Count@command
  1360  0021                     setLoad_Count@command:	; 1 bytes @ 0x1
  1361                           	global	setLoad_StatusOn@lights
  1362  0021                     setLoad_StatusOn@lights:	; 1 bytes @ 0x1
  1363                           	global	setLoad_StatusOff@lights
  1364  0021                     setLoad_StatusOff@lights:	; 1 bytes @ 0x1
  1365                           	global	setLoad_AH_AL_Restore@i
  1366  0021                     setLoad_AH_AL_Restore@i:	; 1 bytes @ 0x1
  1367                           	global	RfPointSelect@rf
  1368  0021                     RfPointSelect@rf:	; 1 bytes @ 0x1
  1369                           	global	RfSWPointSelect@sw
  1370  0021                     RfSWPointSelect@sw:	; 1 bytes @ 0x1
  1371                           	global	SwPointSelect@sw
  1372  0021                     SwPointSelect@sw:	; 1 bytes @ 0x1
  1373  0021                     	ds	1
  1374                           	global	??_CC2500_WriteCommand
  1375  0022                     ??_CC2500_WriteCommand:	; 0 bytes @ 0x2
  1376                           	global	??_CC2500_ReadStatus
  1377  0022                     ??_CC2500_ReadStatus:	; 0 bytes @ 0x2
  1378                           	global	?_setRF_RxStatus
  1379  0022                     ?_setRF_RxStatus:	; 0 bytes @ 0x2
  1380                           	global	??_DelayTime_1us
  1381  0022                     ??_DelayTime_1us:	; 0 bytes @ 0x2
  1382                           	global	?_CC2500_WriteREG
  1383  0022                     ?_CC2500_WriteREG:	; 0 bytes @ 0x2
  1384                           	global	??_DlyOff_Initialization
  1385  0022                     ??_DlyOff_Initialization:	; 0 bytes @ 0x2
  1386                           	global	?_setSw_Status
  1387  0022                     ?_setSw_Status:	; 0 bytes @ 0x2
  1388                           	global	?_setRFSW_Status
  1389  0022                     ?_setRFSW_Status:	; 0 bytes @ 0x2
  1390                           	global	?_setDimmerLights_Trigger
  1391  0022                     ?_setDimmerLights_Trigger:	; 0 bytes @ 0x2
  1392                           	global	?_setDimmerLights_Switch
  1393  0022                     ?_setDimmerLights_Switch:	; 0 bytes @ 0x2
  1394                           	global	??_setTxData
  1395  0022                     ??_setTxData:	; 0 bytes @ 0x2
  1396                           	global	??_setDimmerLights_Initialization
  1397  0022                     ??_setDimmerLights_Initialization:	; 0 bytes @ 0x2
  1398                           	global	?_setDimmerLights_TriggerERROR
  1399  0022                     ?_setDimmerLights_TriggerERROR:	; 0 bytes @ 0x2
  1400                           	global	?_setLED
  1401  0022                     ?_setLED:	; 0 bytes @ 0x2
  1402                           	global	??_setLED_Main
  1403  0022                     ??_setLED_Main:	; 0 bytes @ 0x2
  1404                           	global	??_Load_Initialization
  1405  0022                     ??_Load_Initialization:	; 0 bytes @ 0x2
  1406                           	global	??_setSw_Enable
  1407  0022                     ??_setSw_Enable:	; 0 bytes @ 0x2
  1408                           	global	?_setRF_Enable
  1409  0022                     ?_setRF_Enable:	; 0 bytes @ 0x2
  1410                           	global	??_DimmerLights_Close
  1411  0022                     ??_DimmerLights_Close:	; 0 bytes @ 0x2
  1412                           	global	?_setDimmerLights_AdjGo
  1413  0022                     ?_setDimmerLights_AdjGo:	; 0 bytes @ 0x2
  1414                           	global	?_setDimmerLights_TriggerAdj
  1415  0022                     ?_setDimmerLights_TriggerAdj:	; 0 bytes @ 0x2
  1416                           	global	?_setDimmerLights_Clear
  1417  0022                     ?_setDimmerLights_Clear:	; 0 bytes @ 0x2
  1418                           	global	??_getAD
  1419  0022                     ??_getAD:	; 0 bytes @ 0x2
  1420                           	global	?_setRF_Learn
  1421  0022                     ?_setRF_Learn:	; 0 bytes @ 0x2
  1422                           	global	CC2500_WriteREG@value
  1423  0022                     CC2500_WriteREG@value:	; 1 bytes @ 0x2
  1424                           	global	DlyOff_Initialization@sw
  1425  0022                     DlyOff_Initialization@sw:	; 1 bytes @ 0x2
  1426                           	global	DelayTimejudge@value
  1427  0022                     DelayTimejudge@value:	; 1 bytes @ 0x2
  1428                           	global	setDimmerLights_TriggerERROR@command
  1429  0022                     setDimmerLights_TriggerERROR@command:	; 1 bytes @ 0x2
  1430                           	global	setDimmerLights_Switch@command
  1431  0022                     setDimmerLights_Switch@command:	; 1 bytes @ 0x2
  1432                           	global	setDimmerLights_AdjGo@command
  1433  0022                     setDimmerLights_AdjGo@command:	; 1 bytes @ 0x2
  1434                           	global	setDimmerLights_Trigger@command
  1435  0022                     setDimmerLights_Trigger@command:	; 1 bytes @ 0x2
  1436                           	global	setDimmerLights_TriggerAdj@command
  1437  0022                     setDimmerLights_TriggerAdj@command:	; 1 bytes @ 0x2
  1438                           	global	setDimmerLights_Clear@command
  1439  0022                     setDimmerLights_Clear@command:	; 1 bytes @ 0x2
  1440                           	global	setLED@command
  1441  0022                     setLED@command:	; 1 bytes @ 0x2
  1442                           	global	Flash_Memory_Read@address
  1443  0022                     Flash_Memory_Read@address:	; 1 bytes @ 0x2
  1444                           	global	setRF_Learn@command
  1445  0022                     setRF_Learn@command:	; 1 bytes @ 0x2
  1446                           	global	setRF_RxStatus@command
  1447  0022                     setRF_RxStatus@command:	; 1 bytes @ 0x2
  1448                           	global	setRF_Enable@command
  1449  0022                     setRF_Enable@command:	; 1 bytes @ 0x2
  1450                           	global	setRFSW_Status@command
  1451  0022                     setRFSW_Status@command:	; 1 bytes @ 0x2
  1452                           	global	setSw_Enable@command
  1453  0022                     setSw_Enable@command:	; 1 bytes @ 0x2
  1454                           	global	setSw_Status@command
  1455  0022                     setSw_Status@command:	; 1 bytes @ 0x2
  1456                           	global	DelayTime_1us@i
  1457  0022                     DelayTime_1us@i:	; 2 bytes @ 0x2
  1458                           	global	___wmul@multiplicand
  1459  0022                     ___wmul@multiplicand:	; 2 bytes @ 0x2
  1460                           	global	___lwdiv@dividend
  1461  0022                     ___lwdiv@dividend:	; 2 bytes @ 0x2
  1462  0022                     	ds	1
  1463                           	global	??_setRF_RxStatus
  1464  0023                     ??_setRF_RxStatus:	; 0 bytes @ 0x3
  1465                           	global	??_CC2500_WriteREG
  1466  0023                     ??_CC2500_WriteREG:	; 0 bytes @ 0x3
  1467                           	global	??_setSw_Status
  1468  0023                     ??_setSw_Status:	; 0 bytes @ 0x3
  1469                           	global	??_setRFSW_Status
  1470  0023                     ??_setRFSW_Status:	; 0 bytes @ 0x3
  1471                           	global	??_setDimmerLights_Trigger
  1472  0023                     ??_setDimmerLights_Trigger:	; 0 bytes @ 0x3
  1473                           	global	??_setDimmerLights_Switch
  1474  0023                     ??_setDimmerLights_Switch:	; 0 bytes @ 0x3
  1475                           	global	??_setDimmerLights_TriggerERROR
  1476  0023                     ??_setDimmerLights_TriggerERROR:	; 0 bytes @ 0x3
  1477                           	global	??_setLED
  1478  0023                     ??_setLED:	; 0 bytes @ 0x3
  1479                           	global	??_setRF_Enable
  1480  0023                     ??_setRF_Enable:	; 0 bytes @ 0x3
  1481                           	global	??_DelayOff_Initialization
  1482  0023                     ??_DelayOff_Initialization:	; 0 bytes @ 0x3
  1483                           	global	?_setDelayOff_GO
  1484  0023                     ?_setDelayOff_GO:	; 0 bytes @ 0x3
  1485                           	global	??_setDimmerLights_AdjGo
  1486  0023                     ??_setDimmerLights_AdjGo:	; 0 bytes @ 0x3
  1487                           	global	??_setDimmerLights_TriggerAdj
  1488  0023                     ??_setDimmerLights_TriggerAdj:	; 0 bytes @ 0x3
  1489                           	global	??_setDimmerLights_Clear
  1490  0023                     ??_setDimmerLights_Clear:	; 0 bytes @ 0x3
  1491                           	global	??_setRF_Learn
  1492  0023                     ??_setRF_Learn:	; 0 bytes @ 0x3
  1493                           	global	CC2500_WriteCommand@command
  1494  0023                     CC2500_WriteCommand@command:	; 1 bytes @ 0x3
  1495                           	global	CC2500_ReadStatus@status_addr
  1496  0023                     CC2500_ReadStatus@status_addr:	; 1 bytes @ 0x3
  1497                           	global	setDelayOff_GO@command
  1498  0023                     setDelayOff_GO@command:	; 1 bytes @ 0x3
  1499                           	global	setDimmerLights_Initialization@lights
  1500  0023                     setDimmerLights_Initialization@lights:	; 1 bytes @ 0x3
  1501                           	global	setDimmerLights_TriggerERROR@lights
  1502  0023                     setDimmerLights_TriggerERROR@lights:	; 1 bytes @ 0x3
  1503                           	global	setDimmerLights_Switch@lights
  1504  0023                     setDimmerLights_Switch@lights:	; 1 bytes @ 0x3
  1505                           	global	setDimmerLights_AdjGo@lights
  1506  0023                     setDimmerLights_AdjGo@lights:	; 1 bytes @ 0x3
  1507                           	global	setDimmerLights_Trigger@lights
  1508  0023                     setDimmerLights_Trigger@lights:	; 1 bytes @ 0x3
  1509                           	global	setDimmerLights_TriggerAdj@lights
  1510  0023                     setDimmerLights_TriggerAdj@lights:	; 1 bytes @ 0x3
  1511                           	global	setDimmerLights_Clear@lights
  1512  0023                     setDimmerLights_Clear@lights:	; 1 bytes @ 0x3
  1513                           	global	setLED@led
  1514  0023                     setLED@led:	; 1 bytes @ 0x3
  1515                           	global	Flash_Memory_Read@ret
  1516  0023                     Flash_Memory_Read@ret:	; 1 bytes @ 0x3
  1517                           	global	setRF_Learn@rf
  1518  0023                     setRF_Learn@rf:	; 1 bytes @ 0x3
  1519                           	global	setRF_RxStatus@rf
  1520  0023                     setRF_RxStatus@rf:	; 1 bytes @ 0x3
  1521                           	global	setTxData@rf
  1522  0023                     setTxData@rf:	; 1 bytes @ 0x3
  1523                           	global	setRF_Enable@rf
  1524  0023                     setRF_Enable@rf:	; 1 bytes @ 0x3
  1525                           	global	setRFSW_Status@sw
  1526  0023                     setRFSW_Status@sw:	; 1 bytes @ 0x3
  1527                           	global	setRF_DimmerLights@status
  1528  0023                     setRF_DimmerLights@status:	; 1 bytes @ 0x3
  1529                           	global	setSw_Status@sw
  1530  0023                     setSw_Status@sw:	; 1 bytes @ 0x3
  1531                           	global	___ftpack@exp
  1532  0023                     ___ftpack@exp:	; 1 bytes @ 0x3
  1533  0023                     	ds	1
  1534                           	global	??_CC2500_ClearTXFIFO
  1535  0024                     ??_CC2500_ClearTXFIFO:	; 0 bytes @ 0x4
  1536                           	global	??_CC2500_ClearRXFIFO
  1537  0024                     ??_CC2500_ClearRXFIFO:	; 0 bytes @ 0x4
  1538                           	global	??_CC2500_SIDLEMode
  1539  0024                     ??_CC2500_SIDLEMode:	; 0 bytes @ 0x4
  1540                           	global	?_setDimmerLights
  1541  0024                     ?_setDimmerLights:	; 0 bytes @ 0x4
  1542                           	global	??_setDimmerLights_ERROR
  1543  0024                     ??_setDimmerLights_ERROR:	; 0 bytes @ 0x4
  1544                           	global	??_setLED_Initialization
  1545  0024                     ??_setLED_Initialization:	; 0 bytes @ 0x4
  1546                           	global	??_Flash_Memory_Modify
  1547  0024                     ??_Flash_Memory_Modify:	; 0 bytes @ 0x4
  1548                           	global	??_RF_RxDisable
  1549  0024                     ??_RF_RxDisable:	; 0 bytes @ 0x4
  1550                           	global	??_setSw_Initialization
  1551  0024                     ??_setSw_Initialization:	; 0 bytes @ 0x4
  1552                           	global	??_Sw_DimmerAdjFunc
  1553  0024                     ??_Sw_DimmerAdjFunc:	; 0 bytes @ 0x4
  1554                           	global	??_CC2500_TxData
  1555  0024                     ??_CC2500_TxData:	; 0 bytes @ 0x4
  1556                           	global	??_CC2500_RxData
  1557  0024                     ??_CC2500_RxData:	; 0 bytes @ 0x4
  1558                           	global	??_DimmerLights_Initialization
  1559  0024                     ??_DimmerLights_Initialization:	; 0 bytes @ 0x4
  1560                           	global	??___wmul
  1561  0024                     ??___wmul:	; 0 bytes @ 0x4
  1562                           	global	??___lwdiv
  1563  0024                     ??___lwdiv:	; 0 bytes @ 0x4
  1564                           	global	CC2500_WriteREG@w_addr
  1565  0024                     CC2500_WriteREG@w_addr:	; 1 bytes @ 0x4
  1566                           	global	setDelayOff_GO@value
  1567  0024                     setDelayOff_GO@value:	; 1 bytes @ 0x4
  1568                           	global	setDimmerLights@status
  1569  0024                     setDimmerLights@status:	; 1 bytes @ 0x4
  1570                           	global	setLED_Initialization@led
  1571  0024                     setLED_Initialization@led:	; 1 bytes @ 0x4
  1572                           	global	setLED_Main@led
  1573  0024                     setLED_Main@led:	; 1 bytes @ 0x4
  1574                           	global	RF_RxDisable@rf
  1575  0024                     RF_RxDisable@rf:	; 1 bytes @ 0x4
  1576                           	global	setRF_DimmerLights@lights
  1577  0024                     setRF_DimmerLights@lights:	; 1 bytes @ 0x4
  1578                           	global	setSw_Initialization@sw
  1579  0024                     setSw_Initialization@sw:	; 1 bytes @ 0x4
  1580                           	global	Sw_DimmerAdjFunc@sw
  1581  0024                     Sw_DimmerAdjFunc@sw:	; 1 bytes @ 0x4
  1582                           	global	___ftpack@sign
  1583  0024                     ___ftpack@sign:	; 1 bytes @ 0x4
  1584                           	global	DelayTime_1us@j
  1585  0024                     DelayTime_1us@j:	; 2 bytes @ 0x4
  1586                           	global	___wmul@product
  1587  0024                     ___wmul@product:	; 2 bytes @ 0x4
  1588  0024                     	ds	1
  1589                           	global	??_CC2500_InitSetREG
  1590  0025                     ??_CC2500_InitSetREG:	; 0 bytes @ 0x5
  1591                           	global	??_CC2500_InitPATable
  1592  0025                     ??_CC2500_InitPATable:	; 0 bytes @ 0x5
  1593                           	global	??_setDimmerLights
  1594  0025                     ??_setDimmerLights:	; 0 bytes @ 0x5
  1595                           	global	?_setDimmerLights_Adj
  1596  0025                     ?_setDimmerLights_Adj:	; 0 bytes @ 0x5
  1597                           	global	??_Switch_Initialization
  1598  0025                     ??_Switch_Initialization:	; 0 bytes @ 0x5
  1599                           	global	??___ftpack
  1600  0025                     ??___ftpack:	; 0 bytes @ 0x5
  1601                           	global	??_setDelayOff_GO
  1602  0025                     ??_setDelayOff_GO:	; 0 bytes @ 0x5
  1603                           	global	??_LED_Initialization
  1604  0025                     ??_LED_Initialization:	; 0 bytes @ 0x5
  1605                           	global	??_LED_Main
  1606  0025                     ??_LED_Main:	; 0 bytes @ 0x5
  1607                           	global	CC2500_TxData@loop_e
  1608  0025                     CC2500_TxData@loop_e:	; 1 bytes @ 0x5
  1609                           	global	CC2500_RxData@loop_f
  1610  0025                     CC2500_RxData@loop_f:	; 1 bytes @ 0x5
  1611                           	global	setDimmerLights_ERROR@lights
  1612  0025                     setDimmerLights_ERROR@lights:	; 1 bytes @ 0x5
  1613                           	global	setDimmerLights_Adj@status
  1614  0025                     setDimmerLights_Adj@status:	; 1 bytes @ 0x5
  1615                           	global	___lwdiv@quotient
  1616  0025                     ___lwdiv@quotient:	; 2 bytes @ 0x5
  1617  0025                     	ds	1
  1618                           	global	??_CC2500_PowerRST
  1619  0026                     ??_CC2500_PowerRST:	; 0 bytes @ 0x6
  1620                           	global	??_CC2500_FrequencyCabr
  1621  0026                     ??_CC2500_FrequencyCabr:	; 0 bytes @ 0x6
  1622                           	global	??_setDimmerLights_Adj
  1623  0026                     ??_setDimmerLights_Adj:	; 0 bytes @ 0x6
  1624                           	global	?_setBuz
  1625  0026                     ?_setBuz:	; 0 bytes @ 0x6
  1626                           	global	CC2500_InitSetREG@temp1
  1627  0026                     CC2500_InitSetREG@temp1:	; 1 bytes @ 0x6
  1628                           	global	CC2500_InitPATable@temp
  1629  0026                     CC2500_InitPATable@temp:	; 1 bytes @ 0x6
  1630                           	global	setDimmerLights@lights
  1631  0026                     setDimmerLights@lights:	; 1 bytes @ 0x6
  1632                           	global	getAD@adcon0
  1633  0026                     getAD@adcon0:	; 1 bytes @ 0x6
  1634                           	global	Flash_Memory_Modify@i
  1635  0026                     Flash_Memory_Modify@i:	; 1 bytes @ 0x6
  1636                           	global	setBuz@time
  1637  0026                     setBuz@time:	; 2 bytes @ 0x6
  1638  0026                     	ds	1
  1639                           	global	??_getLoad_AD
  1640  0027                     ??_getLoad_AD:	; 0 bytes @ 0x7
  1641                           	global	??_getTemp_AD
  1642  0027                     ??_getTemp_AD:	; 0 bytes @ 0x7
  1643                           	global	??_getPowerFault_AD
  1644  0027                     ??_getPowerFault_AD:	; 0 bytes @ 0x7
  1645                           	global	??_Flash_Memory_Main
  1646  0027                     ??_Flash_Memory_Main:	; 0 bytes @ 0x7
  1647                           	global	CC2500_InitSetREG@temp2
  1648  0027                     CC2500_InitSetREG@temp2:	; 1 bytes @ 0x7
  1649                           	global	CC2500_InitPATable@loop_d
  1650  0027                     CC2500_InitPATable@loop_d:	; 1 bytes @ 0x7
  1651                           	global	setDelayOff_GO@sw
  1652  0027                     setDelayOff_GO@sw:	; 1 bytes @ 0x7
  1653                           	global	setDimmerLights_Adj@lights
  1654  0027                     setDimmerLights_Adj@lights:	; 1 bytes @ 0x7
  1655                           	global	___lwdiv@counter
  1656  0027                     ___lwdiv@counter:	; 1 bytes @ 0x7
  1657  0027                     	ds	1
  1658                           	global	??_Sw_DimmerOffFunc
  1659  0028                     ??_Sw_DimmerOffFunc:	; 0 bytes @ 0x8
  1660                           	global	??_setBuz
  1661  0028                     ??_setBuz:	; 0 bytes @ 0x8
  1662                           	global	?___fttol
  1663  0028                     ?___fttol:	; 4 bytes @ 0x8
  1664                           	global	CC2500_InitSetREG@loop_c
  1665  0028                     CC2500_InitSetREG@loop_c:	; 1 bytes @ 0x8
  1666                           	global	___fttol@f1
  1667  0028                     ___fttol@f1:	; 3 bytes @ 0x8
  1668  0028                     	ds	1
  1669                           	global	??_CC2500_PowerOnInitial
  1670  0029                     ??_CC2500_PowerOnInitial:	; 0 bytes @ 0x9
  1671                           	global	setBuz@count
  1672  0029                     setBuz@count:	; 1 bytes @ 0x9
  1673  0029                     	ds	1
  1674                           	global	??_DlyOff_Main
  1675  002A                     ??_DlyOff_Main:	; 0 bytes @ 0xA
  1676                           	global	??_setDimmerLights_Main
  1677  002A                     ??_setDimmerLights_Main:	; 0 bytes @ 0xA
  1678                           	global	??_MainT
  1679  002A                     ??_MainT:	; 0 bytes @ 0xA
  1680                           	global	??_setLog_Code
  1681  002A                     ??_setLog_Code:	; 0 bytes @ 0xA
  1682                           	global	??_setRFSW_Control
  1683  002A                     ??_setRFSW_Control:	; 0 bytes @ 0xA
  1684                           	global	??_Sw_DimmerOnFunc
  1685  002A                     ??_Sw_DimmerOnFunc:	; 0 bytes @ 0xA
  1686                           	global	??_DimmerLights_Exceptions
  1687  002A                     ??_DimmerLights_Exceptions:	; 0 bytes @ 0xA
  1688                           	global	setDimmerLights_Main@clear
  1689  002A                     setDimmerLights_Main@clear:	; 1 bytes @ 0xA
  1690                           	global	DimmerLights_Exceptions@status
  1691  002A                     DimmerLights_Exceptions@status:	; 1 bytes @ 0xA
  1692                           	global	Sw_DimmerOnFunc@Idle
  1693  002A                     Sw_DimmerOnFunc@Idle:	; 1 bytes @ 0xA
  1694                           	global	Sw_DimmerOffFunc@sw
  1695  002A                     Sw_DimmerOffFunc@sw:	; 1 bytes @ 0xA
  1696  002A                     	ds	1
  1697                           	global	??_setLoad_Exceptions
  1698  002B                     ??_setLoad_Exceptions:	; 0 bytes @ 0xB
  1699                           	global	??_setOverTemp_Exceptions
  1700  002B                     ??_setOverTemp_Exceptions:	; 0 bytes @ 0xB
  1701                           	global	??_setPowerFault_Exceptions
  1702  002B                     ??_setPowerFault_Exceptions:	; 0 bytes @ 0xB
  1703                           	global	setDimmerLights_Main@lights
  1704  002B                     setDimmerLights_Main@lights:	; 1 bytes @ 0xB
  1705                           	global	getTemp_AD@channel
  1706  002B                     getTemp_AD@channel:	; 1 bytes @ 0xB
  1707                           	global	getPowerFault_AD@channel
  1708  002B                     getPowerFault_AD@channel:	; 1 bytes @ 0xB
  1709                           	global	setLog_Code@rf
  1710  002B                     setLog_Code@rf:	; 1 bytes @ 0xB
  1711                           	global	setRFSW_Control@sw
  1712  002B                     setRFSW_Control@sw:	; 1 bytes @ 0xB
  1713                           	global	Sw_DimmerOnFunc@sw
  1714  002B                     Sw_DimmerOnFunc@sw:	; 1 bytes @ 0xB
  1715  002B                     	ds	1
  1716                           	global	??_setSw_Main
  1717  002C                     ??_setSw_Main:	; 0 bytes @ 0xC
  1718                           	global	??_DimmerLights_Main
  1719  002C                     ??_DimmerLights_Main:	; 0 bytes @ 0xC
  1720                           	global	??___fttol
  1721  002C                     ??___fttol:	; 0 bytes @ 0xC
  1722                           	global	DlyOff_Main@sw
  1723  002C                     DlyOff_Main@sw:	; 1 bytes @ 0xC
  1724                           	global	getLoad_AD@channel
  1725  002C                     getLoad_AD@channel:	; 1 bytes @ 0xC
  1726                           	global	setLoad_Exceptions@command
  1727  002C                     setLoad_Exceptions@command:	; 1 bytes @ 0xC
  1728                           	global	setOverTemp_Exceptions@command
  1729  002C                     setOverTemp_Exceptions@command:	; 1 bytes @ 0xC
  1730                           	global	setPowerFault_Exceptions@command
  1731  002C                     setPowerFault_Exceptions@command:	; 1 bytes @ 0xC
  1732  002C                     	ds	1
  1733                           	global	??_Load_Main
  1734  002D                     ??_Load_Main:	; 0 bytes @ 0xD
  1735                           	global	??_setTemp_Main
  1736  002D                     ??_setTemp_Main:	; 0 bytes @ 0xD
  1737                           	global	??_setPowerFault_Main
  1738  002D                     ??_setPowerFault_Main:	; 0 bytes @ 0xD
  1739                           	global	??_DelayOff_Main
  1740  002D                     ??_DelayOff_Main:	; 0 bytes @ 0xD
  1741                           	global	getLoad_AD@j
  1742  002D                     getLoad_AD@j:	; 1 bytes @ 0xD
  1743  002D                     	ds	1
  1744                           	global	getLoad_AD@i
  1745  002E                     getLoad_AD@i:	; 1 bytes @ 0xE
  1746                           	global	_setSw_Main$20644
  1747  002E                     _setSw_Main$20644:	; 1 bytes @ 0xE
  1748  002E                     	ds	1
  1749                           	global	??_PowerFault_Main
  1750  002F                     ??_PowerFault_Main:	; 0 bytes @ 0xF
  1751                           	global	setSw_Main@sw
  1752  002F                     setSw_Main@sw:	; 1 bytes @ 0xF
  1753  002F                     	ds	1
  1754                           	global	??_Temp_Main
  1755  0030                     ??_Temp_Main:	; 0 bytes @ 0x10
  1756                           	global	??_Switch_Main
  1757  0030                     ??_Switch_Main:	; 0 bytes @ 0x10
  1758                           	global	___fttol@sign1
  1759  0030                     ___fttol@sign1:	; 1 bytes @ 0x10
  1760  0030                     	ds	1
  1761                           	global	Load_Main@i
  1762  0031                     Load_Main@i:	; 1 bytes @ 0x11
  1763                           	global	___fttol@lval
  1764  0031                     ___fttol@lval:	; 4 bytes @ 0x11
  1765  0031                     	ds	4
  1766                           	global	___fttol@exp1
  1767  0035                     ___fttol@exp1:	; 1 bytes @ 0x15
  1768  0035                     	ds	1
  1769                           	global	?___awtoft
  1770  0036                     ?___awtoft:	; 3 bytes @ 0x16
  1771                           	global	___awtoft@c
  1772  0036                     ___awtoft@c:	; 2 bytes @ 0x16
  1773  0036                     	ds	3
  1774                           	global	??___awtoft
  1775  0039                     ??___awtoft:	; 0 bytes @ 0x19
  1776  0039                     	ds	2
  1777                           	global	___awtoft@sign
  1778  003B                     ___awtoft@sign:	; 1 bytes @ 0x1B
  1779  003B                     	ds	1
  1780                           	global	?___ftdiv
  1781  003C                     ?___ftdiv:	; 3 bytes @ 0x1C
  1782                           	global	?___ftmul
  1783  003C                     ?___ftmul:	; 3 bytes @ 0x1C
  1784                           	global	___ftdiv@f2
  1785  003C                     ___ftdiv@f2:	; 3 bytes @ 0x1C
  1786                           	global	___ftmul@f1
  1787  003C                     ___ftmul@f1:	; 3 bytes @ 0x1C
  1788  003C                     	ds	3
  1789                           	global	___ftdiv@f1
  1790  003F                     ___ftdiv@f1:	; 3 bytes @ 0x1F
  1791                           	global	___ftmul@f2
  1792  003F                     ___ftmul@f2:	; 3 bytes @ 0x1F
  1793  003F                     	ds	3
  1794                           	global	??___ftdiv
  1795  0042                     ??___ftdiv:	; 0 bytes @ 0x22
  1796                           	global	??___ftmul
  1797  0042                     ??___ftmul:	; 0 bytes @ 0x22
  1798  0042                     	ds	4
  1799                           	global	___ftdiv@cntr
  1800  0046                     ___ftdiv@cntr:	; 1 bytes @ 0x26
  1801                           	global	___ftmul@exp
  1802  0046                     ___ftmul@exp:	; 1 bytes @ 0x26
  1803  0046                     	ds	1
  1804                           	global	___ftdiv@f3
  1805  0047                     ___ftdiv@f3:	; 3 bytes @ 0x27
  1806                           	global	___ftmul@f3_as_product
  1807  0047                     ___ftmul@f3_as_product:	; 3 bytes @ 0x27
  1808  0047                     	ds	3
  1809                           	global	___ftdiv@exp
  1810  004A                     ___ftdiv@exp:	; 1 bytes @ 0x2A
  1811                           	global	___ftmul@cntr
  1812  004A                     ___ftmul@cntr:	; 1 bytes @ 0x2A
  1813  004A                     	ds	1
  1814                           	global	___ftdiv@sign
  1815  004B                     ___ftdiv@sign:	; 1 bytes @ 0x2B
  1816                           	global	___ftmul@sign
  1817  004B                     ___ftmul@sign:	; 1 bytes @ 0x2B
  1818  004B                     	ds	1
  1819                           	global	??_setPercentValue
  1820  004C                     ??_setPercentValue:	; 0 bytes @ 0x2C
  1821                           	global	?___ftadd
  1822  004C                     ?___ftadd:	; 3 bytes @ 0x2C
  1823                           	global	setPercentValue@value
  1824  004C                     setPercentValue@value:	; 1 bytes @ 0x2C
  1825                           	global	___ftadd@f1
  1826  004C                     ___ftadd@f1:	; 3 bytes @ 0x2C
  1827  004C                     	ds	1
  1828                           	global	setPercentValue@i
  1829  004D                     setPercentValue@i:	; 3 bytes @ 0x2D
  1830  004D                     	ds	2
  1831                           	global	___ftadd@f2
  1832  004F                     ___ftadd@f2:	; 3 bytes @ 0x2F
  1833  004F                     	ds	1
  1834                           	global	??_Flash_Memory_Initialization
  1835  0050                     ??_Flash_Memory_Initialization:	; 0 bytes @ 0x30
  1836  0050                     	ds	1
  1837                           	global	Flash_Memory_Initialization@i
  1838  0051                     Flash_Memory_Initialization@i:	; 1 bytes @ 0x31
  1839  0051                     	ds	1
  1840                           	global	??___ftadd
  1841  0052                     ??___ftadd:	; 0 bytes @ 0x32
  1842  0052                     	ds	4
  1843                           	global	___ftadd@sign
  1844  0056                     ___ftadd@sign:	; 1 bytes @ 0x36
  1845  0056                     	ds	1
  1846                           	global	___ftadd@exp2
  1847  0057                     ___ftadd@exp2:	; 1 bytes @ 0x37
  1848  0057                     	ds	1
  1849                           	global	___ftadd@exp1
  1850  0058                     ___ftadd@exp1:	; 1 bytes @ 0x38
  1851  0058                     	ds	1
  1852                           	global	??_getPercentValue
  1853  0059                     ??_getPercentValue:	; 0 bytes @ 0x39
  1854  0059                     	ds	2
  1855                           	global	getPercentValue@value
  1856  005B                     getPercentValue@value:	; 1 bytes @ 0x3B
  1857  005B                     	ds	1
  1858                           	global	getPercentValue@i
  1859  005C                     getPercentValue@i:	; 3 bytes @ 0x3C
  1860  005C                     	ds	3
  1861                           	global	??_setDimmerLights_AdjRF
  1862  005F                     ??_setDimmerLights_AdjRF:	; 0 bytes @ 0x3F
  1863  005F                     	ds	1
  1864                           	global	setDimmerLights_AdjRF@lights
  1865  0060                     setDimmerLights_AdjRF@lights:	; 1 bytes @ 0x40
  1866  0060                     	ds	1
  1867                           	global	??_setRF_DimmerValue
  1868  0061                     ??_setRF_DimmerValue:	; 0 bytes @ 0x41
  1869  0061                     	ds	2
  1870                           	global	setRF_DimmerValue@lights
  1871  0063                     setRF_DimmerValue@lights:	; 1 bytes @ 0x43
  1872  0063                     	ds	1
  1873                           	global	??_setRFSW_AdjControl
  1874  0064                     ??_setRFSW_AdjControl:	; 0 bytes @ 0x44
  1875  0064                     	ds	2
  1876                           	global	setRFSW_AdjControl@sw
  1877  0066                     setRFSW_AdjControl@sw:	; 1 bytes @ 0x46
  1878  0066                     	ds	1
  1879                           	global	??_setControl_Lights_Table
  1880  0067                     ??_setControl_Lights_Table:	; 0 bytes @ 0x47
  1881                           	global	setControl_Lights_Table@rf
  1882  0067                     setControl_Lights_Table@rf:	; 1 bytes @ 0x47
  1883  0067                     	ds	1
  1884                           	global	??_getRxData
  1885  0068                     ??_getRxData:	; 0 bytes @ 0x48
  1886                           	global	getRxData@rf
  1887  0068                     getRxData@rf:	; 1 bytes @ 0x48
  1888  0068                     	ds	1
  1889                           	global	??_setRF_Main
  1890  0069                     ??_setRF_Main:	; 0 bytes @ 0x49
  1891  0069                     	ds	1
  1892                           	global	setRF_Main@rf
  1893  006A                     setRF_Main@rf:	; 1 bytes @ 0x4A
  1894  006A                     	ds	1
  1895                           	global	_setRF_Main$19191
  1896  006B                     _setRF_Main$19191:	; 1 bytes @ 0x4B
  1897  006B                     	ds	1
  1898                           	global	??_RF_Main
  1899  006C                     ??_RF_Main:	; 0 bytes @ 0x4C
  1900                           	global	??_main
  1901  006C                     ??_main:	; 0 bytes @ 0x4C
  1902 ;;Data sizes: Strings 0, constant 102, data 32, bss 254, persistent 4 stack 0
  1903 ;;Auto spaces:   Size  Autos    Used
  1904 ;; COMMON          14      7      14
  1905 ;; BANK0           80     76      80
  1906 ;; BANK1           80      0      76
  1907 ;; BANK2           80      0      64
  1908 ;; BANK3           80      0      69
  1909 ;; BANK4           80      0      71
  1910 ;; BANK5           80      0       0
  1911 ;; BANK6           80      0       0
  1912 ;; BANK7           80      0       0
  1913 ;; BANK8           80      0       0
  1914 ;; BANK9           80      0       0
  1915 ;; BANK10          80      0       0
  1916 ;; BANK11          80      0       0
  1917 ;; BANK12          48      0       0
  1918                           
  1919 ;;
  1920 ;; Pointer list with targets:
  1921                           
  1922 ;; ?___ftpack	float  size(1) Largest target is 0
  1923 ;;
  1924 ;; ?___lwdiv	unsigned int  size(1) Largest target is 0
  1925 ;;
  1926 ;; ?_getAD	int  size(1) Largest target is 0
  1927 ;;
  1928 ;; ?___fttol	long  size(1) Largest target is 0
  1929 ;;
  1930 ;; ?___ftmul	float  size(1) Largest target is 0
  1931 ;;
  1932 ;; ?___awtoft	float  size(1) Largest target is 0
  1933 ;;
  1934 ;; ?___ftadd	float  size(1) Largest target is 0
  1935 ;;
  1936 ;; ?___ftdiv	float  size(1) Largest target is 0
  1937 ;;
  1938 ;; ?___wmul	unsigned int  size(1) Largest target is 0
  1939 ;;
  1940 ;; DimmerLightsIntr	PTR struct DimmerLights size(1) Largest target is 0
  1941 ;;		 -> NULL(NULL[0]), 
  1942 ;;
  1943 ;; Sw	PTR struct Switch size(1) Largest target is 9
  1944 ;;		 -> NULL(NULL[0]), Sw1(BANK2[9]), 
  1945 ;;
  1946 ;; RFSW	PTR struct RFSW size(1) Largest target is 1
  1947 ;;		 -> NULL(NULL[0]), RFSW1(BANK1[1]), 
  1948 ;;
  1949 ;; RF	PTR struct RF size(1) Largest target is 2
  1950 ;;		 -> NULL(NULL[0]), RF1(BANK1[2]), 
  1951 ;;
  1952 ;; PF	PTR struct PF size(1) Largest target is 8
  1953 ;;		 -> NULL(NULL[0]), PF1(BANK1[8]), 
  1954 ;;
  1955 ;; Temp	PTR struct OverTemp size(1) Largest target is 14
  1956 ;;		 -> NULL(NULL[0]), Temp1(BANK2[14]), 
  1957 ;;
  1958 ;; Load	PTR struct OverLoad size(1) Largest target is 71
  1959 ;;		 -> NULL(NULL[0]), Load1(BANK4[71]), 
  1960 ;;
  1961 ;; Timer0	PTR struct Timer0 size(1) Largest target is 7
  1962 ;;		 -> NULL(NULL[0]), VarTimer0(BANK1[7]), 
  1963 ;;
  1964 ;; LED	PTR struct LED size(1) Largest target is 4
  1965 ;;		 -> NULL(NULL[0]), VarErrLED(BANK1[4]), VarLED2(BANK1[4]), VarLED1(BANK1[4]), 
  1966 ;;
  1967 ;; TMain	PTR struct TMain size(1) Largest target is 16
  1968 ;;		 -> NULL(NULL[0]), VarTMain(BANK2[16]), 
  1969 ;;
  1970 ;; Memory	PTR struct FlashMemory size(1) Largest target is 37
  1971 ;;		 -> NULL(NULL[0]), VarMemory(BANK3[37]), 
  1972 ;;
  1973 ;; Dimmer	PTR struct Dimmer size(1) Largest target is 3
  1974 ;;		 -> NULL(NULL[0]), Dimmer1(BANK1[3]), 
  1975 ;;
  1976 ;; DimmerLights11	PTR struct DimmerLights size(1) Largest target is 13
  1977 ;;		 -> NULL(NULL[0]), DimmerLights1(BANK2[13]), 
  1978 ;;
  1979 ;; DimmerLights	PTR struct DimmerLights size(1) Largest target is 13
  1980 ;;		 -> NULL(NULL[0]), DimmerLights1(BANK2[13]), 
  1981 ;;
  1982 ;; Product	PTR struct Product size(1) Largest target is 32
  1983 ;;		 -> NULL(NULL[0]), VarProduct(BANK3[32]), 
  1984 ;;
  1985 ;; DelayOff	PTR struct DelayOff size(1) Largest target is 5
  1986 ;;		 -> NULL(NULL[0]), DlySw1(BANK1[5]), 
  1987 ;;
  1988 ;; Buz	PTR struct Buzzer size(1) Largest target is 12
  1989 ;;		 -> NULL(NULL[0]), Buz1(BANK2[12]), 
  1990 ;;
  1991                           
  1992                           
  1993 ;;
  1994 ;; Critical Paths under _main in COMMON
  1995 ;;
  1996 ;;   None.
  1997 ;;
  1998 ;; Critical Paths under _ISR in COMMON
  1999 ;;
  2000 ;;   _ISR->_TMR0_ISR
  2001 ;;   _INT_ISR->_setRF_ReceiveGO
  2002 ;;   _setRF_ReceiveGO->i1_RfPointSelect
  2003 ;;   _TMR0_ISR->i1_setLoad_StatusOff
  2004 ;;
  2005 ;; Critical Paths under _main in BANK0
  2006 ;;
  2007 ;;   _RF_Main->_setRF_Main
  2008 ;;   _setRF_Main->_getRxData
  2009 ;;   _getRxData->_setControl_Lights_Table
  2010 ;;   _setControl_Lights_Table->_setRFSW_AdjControl
  2011 ;;   _PowerFault_Main->_setPowerFault_Main
  2012 ;;   _Temp_Main->_setTemp_Main
  2013 ;;   _setRFSW_AdjControl->_setRF_DimmerValue
  2014 ;;   _setPowerFault_Main->_setPowerFault_Exceptions
  2015 ;;   _setTemp_Main->_setOverTemp_Exceptions
  2016 ;;   _Load_Main->_setLoad_Exceptions
  2017 ;;   _setRF_DimmerValue->_setDimmerLights_AdjRF
  2018 ;;   _setPowerFault_Exceptions->_DimmerLights_Exceptions
  2019 ;;   _setOverTemp_Exceptions->_DimmerLights_Exceptions
  2020 ;;   _setLoad_Exceptions->_DimmerLights_Exceptions
  2021 ;;   _Switch_Main->_setSw_Main
  2022 ;;   _Flash_Memory_Main->_Flash_Memory_Modify
  2023 ;;   _DimmerLights_Main->_setDimmerLights_Main
  2024 ;;   _setSw_Main->_Sw_DimmerOnFunc
  2025 ;;   _Flash_Memory_Modify->_Flash_Memory_Read
  2026 ;;   _Switch_Initialization->_setSw_Initialization
  2027 ;;   _Flash_Memory_Initialization->_setPercentValue
  2028 ;;   _LED_Initialization->_setLED_Initialization
  2029 ;;   _setDimmerLights_AdjRF->_getPercentValue
  2030 ;;   _DimmerLights_Exceptions->_setBuz
  2031 ;;   _setDimmerLights_Main->_setBuz
  2032 ;;   _DelayOff_Main->_DlyOff_Main
  2033 ;;   _CC2500_PowerOnInitial->_CC2500_InitSetREG
  2034 ;;   _Sw_DimmerOffFunc->_setDelayOff_GO
  2035 ;;   _Sw_DimmerAdjFunc->_setRFSW_Status
  2036 ;;   _Sw_DimmerAdjFunc->_setDimmerLights_TriggerAdj
  2037 ;;   _Sw_DimmerAdjFunc->_setDimmerLights_AdjGo
  2038 ;;   _Sw_DimmerOnFunc->_setBuz
  2039 ;;   _setSw_Initialization->_setLED
  2040 ;;   _setRFSW_Control->_setBuz
  2041 ;;   _setLog_Code->_setBuz
  2042 ;;   _RF_RxDisable->_CC2500_WriteCommand
  2043 ;;   _MainT->_setBuz
  2044 ;;   _LED_Main->_setLED_Main
  2045 ;;   _setLED_Initialization->_setLED
  2046 ;;   _setPercentValue->___ftdiv
  2047 ;;   _getPercentValue->___ftadd
  2048 ;;   _setDimmerLights_ERROR->_setLED
  2049 ;;   _setDimmerLights_ERROR->_setSw_Status
  2050 ;;   _setDimmerLights_ERROR->_setRFSW_Status
  2051 ;;   _setDimmerLights_Adj->_setRF_DimmerLights
  2052 ;;   _setDimmerLights->_setLED
  2053 ;;   _DimmerLights_Initialization->_setDimmerLights_Initialization
  2054 ;;   _DlyOff_Main->_setBuz
  2055 ;;   _DelayOff_Initialization->_DlyOff_Initialization
  2056 ;;   _CC2500_SIDLEMode->_CC2500_WriteCommand
  2057 ;;   _CC2500_FrequencyCabr->_DelayTime_1us
  2058 ;;   _CC2500_ClearRXFIFO->_CC2500_WriteCommand
  2059 ;;   _CC2500_ClearTXFIFO->_CC2500_WriteCommand
  2060 ;;   _CC2500_InitPATable->_CC2500_WriteREG
  2061 ;;   _CC2500_InitSetREG->_CC2500_WriteREG
  2062 ;;   _CC2500_RxData->_CC2500_ReadStatus
  2063 ;;   _CC2500_RxData->_CC2500_WriteCommand
  2064 ;;   _CC2500_RxData->_setRF_RxStatus
  2065 ;;   _CC2500_TxData->_CC2500_WriteCommand
  2066 ;;   ___awtoft->___fttol
  2067 ;;   ___ftmul->___awtoft
  2068 ;;   ___ftdiv->___awtoft
  2069 ;;   ___ftadd->___ftmul
  2070 ;;   _setRF_Learn->_RfPointSelect
  2071 ;;   _setRF_Enable->_RfPointSelect
  2072 ;;   _setSw_Enable->_SwPointSelect
  2073 ;;   _getPowerFault_AD->_getAD
  2074 ;;   _getTemp_AD->_getAD
  2075 ;;   _getLoad_AD->_getAD
  2076 ;;   _RF_Initialization->_setRF_Initialization
  2077 ;;   _PowerFault_Initialization->_setPowerFault_Initialization
  2078 ;;   _Load_Initialization->_setLoad_AH_AL_Restore
  2079 ;;   _Temp_Initialization->_setTemp_Initialization
  2080 ;;   _Mcu_Initialization->_TMR0_Set
  2081 ;;   _setLED_Main->_LedPointSelect
  2082 ;;   _setDimmerLights_Clear->_DimmerLightsPointSelect
  2083 ;;   _setDimmerLights_TriggerAdj->_DimmerLightsPointSelect
  2084 ;;   _setDimmerLights_AdjGo->_DimmerLightsPointSelect
  2085 ;;   _setLED->_LedPointSelect
  2086 ;;   _setDimmerLights_TriggerERROR->_DimmerLightsPointSelect
  2087 ;;   _DimmerLights_Close->_getDimmerLights_StatusFlag
  2088 ;;   _setDimmerLights_Initialization->_DimmerLightsPointSelect
  2089 ;;   _setDelayOff_GO->_DelayTimejudge
  2090 ;;   _setTxData->_RfPointSelect
  2091 ;;   _setDimmerLights_Switch->_DimmerLightsPointSelect
  2092 ;;   _setDimmerLights_Trigger->_DimmerLightsPointSelect
  2093 ;;   _setRFSW_Status->_RfSWPointSelect
  2094 ;;   _setSw_Status->_SwPointSelect
  2095 ;;   _DlyOff_Initialization->_DelayOffPointSelect
  2096 ;;   _CC2500_WriteREG->_CC2500_WriteByte
  2097 ;;   _CC2500_PowerRST->_DelayTime_1us
  2098 ;;   _setRF_RxStatus->_RfPointSelect
  2099 ;;   _CC2500_ReadStatus->_CC2500_WriteByte
  2100 ;;   _CC2500_ReadStatus->_CC2500_ReadByte
  2101 ;;   _CC2500_WriteCommand->_CC2500_WriteByte
  2102 ;;   _setBuz->___wmul
  2103 ;;   ___fttol->___ftpack
  2104 ;;
  2105 ;; Critical Paths under _ISR in BANK0
  2106 ;;
  2107 ;;   None.
  2108 ;;
  2109 ;; Critical Paths under _main in BANK1
  2110 ;;
  2111 ;;   None.
  2112 ;;
  2113 ;; Critical Paths under _ISR in BANK1
  2114 ;;
  2115 ;;   None.
  2116 ;;
  2117 ;; Critical Paths under _main in BANK2
  2118 ;;
  2119 ;;   None.
  2120 ;;
  2121 ;; Critical Paths under _ISR in BANK2
  2122 ;;
  2123 ;;   None.
  2124 ;;
  2125 ;; Critical Paths under _main in BANK3
  2126 ;;
  2127 ;;   None.
  2128 ;;
  2129 ;; Critical Paths under _ISR in BANK3
  2130 ;;
  2131 ;;   None.
  2132 ;;
  2133 ;; Critical Paths under _main in BANK4
  2134 ;;
  2135 ;;   None.
  2136 ;;
  2137 ;; Critical Paths under _ISR in BANK4
  2138 ;;
  2139 ;;   None.
  2140 ;;
  2141 ;; Critical Paths under _main in BANK5
  2142 ;;
  2143 ;;   None.
  2144 ;;
  2145 ;; Critical Paths under _ISR in BANK5
  2146 ;;
  2147 ;;   None.
  2148 ;;
  2149 ;; Critical Paths under _main in BANK6
  2150 ;;
  2151 ;;   None.
  2152 ;;
  2153 ;; Critical Paths under _ISR in BANK6
  2154 ;;
  2155 ;;   None.
  2156 ;;
  2157 ;; Critical Paths under _main in BANK7
  2158 ;;
  2159 ;;   None.
  2160 ;;
  2161 ;; Critical Paths under _ISR in BANK7
  2162 ;;
  2163 ;;   None.
  2164 ;;
  2165 ;; Critical Paths under _main in BANK8
  2166 ;;
  2167 ;;   None.
  2168 ;;
  2169 ;; Critical Paths under _ISR in BANK8
  2170 ;;
  2171 ;;   None.
  2172 ;;
  2173 ;; Critical Paths under _main in BANK9
  2174 ;;
  2175 ;;   None.
  2176 ;;
  2177 ;; Critical Paths under _ISR in BANK9
  2178 ;;
  2179 ;;   None.
  2180 ;;
  2181 ;; Critical Paths under _main in BANK10
  2182 ;;
  2183 ;;   None.
  2184 ;;
  2185 ;; Critical Paths under _ISR in BANK10
  2186 ;;
  2187 ;;   None.
  2188 ;;
  2189 ;; Critical Paths under _main in BANK11
  2190 ;;
  2191 ;;   None.
  2192 ;;
  2193 ;; Critical Paths under _ISR in BANK11
  2194 ;;
  2195 ;;   None.
  2196 ;;
  2197 ;; Critical Paths under _main in BANK12
  2198 ;;
  2199 ;;   None.
  2200 ;;
  2201 ;; Critical Paths under _ISR in BANK12
  2202 ;;
  2203 ;;   None.
  2204                           
  2205 ;;
  2206 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2207 ;;
  2208                           
  2209 ;;
  2210 ;;Call Graph Tables:
  2211 ;;
  2212 ;; ---------------------------------------------------------------------------------
  2213 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  2214 ;; ---------------------------------------------------------------------------------
  2215 ;; (0) _main                                                 0     0      0   27497
  2216 ;;               _MainT_Initialization
  2217 ;;                 _Mcu_Initialization
  2218 ;;        _Flash_Memory_Initialization
  2219 ;;                 _LED_Initialization
  2220 ;;              _Buzzer_Initialization
  2221 ;;                _Temp_Initialization
  2222 ;;                _Load_Initialization
  2223 ;;          _PowerFault_Initialization
  2224 ;;            _DelayOff_Initialization
  2225 ;;        _DimmerLights_Initialization
  2226 ;;              _Switch_Initialization
  2227 ;;                  _RF_Initialization
  2228 ;;              _CC2500_PowerOnInitial
  2229 ;;                         _getLoad_AD
  2230 ;;                         _getTemp_AD
  2231 ;;                   _getPowerFault_AD
  2232 ;;                        _Buzzer_Main
  2233 ;;                              _MainT
  2234 ;;                  _Flash_Memory_Main
  2235 ;;                           _LED_Main
  2236 ;;                          _Temp_Main
  2237 ;;                          _Load_Main
  2238 ;;                    _PowerFault_Main
  2239 ;;                  _DimmerLights_Main
  2240 ;;                        _Switch_Main
  2241 ;;                            _RF_Main
  2242 ;;                      _DelayOff_Main
  2243 ;; ---------------------------------------------------------------------------------
  2244 ;; (1) _RF_Main                                              0     0      0    7492
  2245 ;;                         _setRF_Main
  2246 ;; ---------------------------------------------------------------------------------
  2247 ;; (2) _setRF_Main                                           3     3      0    7492
  2248 ;;                                             73 BANK0      3     3      0
  2249 ;;                      _RfPointSelect
  2250 ;;                      _CC2500_RxData
  2251 ;;                          _getRxData
  2252 ;;                _CC2500_WriteCommand
  2253 ;;                          _setINT_GO
  2254 ;;                       _RF_RxDisable
  2255 ;;                      _CC2500_TxData
  2256 ;; ---------------------------------------------------------------------------------
  2257 ;; (3) _getRxData                                            2     2      0    6565
  2258 ;;                                             72 BANK0      1     1      0
  2259 ;;                      _RfPointSelect
  2260 ;;                        _setLog_Code
  2261 ;;            _setControl_Lights_Table
  2262 ;; ---------------------------------------------------------------------------------
  2263 ;; (4) _setControl_Lights_Table                              1     1      0    6103
  2264 ;;                                             71 BANK0      1     1      0
  2265 ;;                      _RfPointSelect
  2266 ;;                    _setDimmerLights
  2267 ;;                     _setRFSW_Status
  2268 ;;                       _setSw_Status
  2269 ;;                             _setBuz
  2270 ;;                          _setTxData
  2271 ;;                    _setRFSW_Control
  2272 ;;                 _setRFSW_AdjControl
  2273 ;; ---------------------------------------------------------------------------------
  2274 ;; (1) _PowerFault_Main                                      0     0      0    2473
  2275 ;;                 _setPowerFault_Main
  2276 ;; ---------------------------------------------------------------------------------
  2277 ;; (1) _Temp_Main                                            0     0      0    2829
  2278 ;;                       _setTemp_Main
  2279 ;; ---------------------------------------------------------------------------------
  2280 ;; (5) _setRFSW_AdjControl                                   3     3      0    2957
  2281 ;;                                             68 BANK0      3     3      0
  2282 ;;                    _RfSWPointSelect
  2283 ;;                  _setRF_DimmerValue
  2284 ;;                          _setTxData
  2285 ;; ---------------------------------------------------------------------------------
  2286 ;; (2) _setPowerFault_Main                                   2     2      0    2473
  2287 ;;                                             13 BANK0      2     2      0
  2288 ;;                       _getLoad_Safe
  2289 ;;                       _getTemp_Safe
  2290 ;;           _setPowerFault_Exceptions
  2291 ;; ---------------------------------------------------------------------------------
  2292 ;; (2) _setTemp_Main                                         3     3      0    2829
  2293 ;;                                             13 BANK0      3     3      0
  2294 ;;                       _getLoad_Safe
  2295 ;;                         _getPF_Safe
  2296 ;;             _setOverTemp_Exceptions
  2297 ;; ---------------------------------------------------------------------------------
  2298 ;; (1) _Load_Main                                            5     5      0    3106
  2299 ;;                                             13 BANK0      5     5      0
  2300 ;;                 _setLoad_Exceptions
  2301 ;;                            ___lwdiv
  2302 ;;              _setDimmerLights_Clear
  2303 ;;                             ___wmul
  2304 ;;              _setLoad_AH_AL_Restore
  2305 ;;                       _getTemp_Safe
  2306 ;;                         _getPF_Safe
  2307 ;; ---------------------------------------------------------------------------------
  2308 ;; (6) _setRF_DimmerValue                                    3     3      0    2803
  2309 ;;                                             65 BANK0      3     3      0
  2310 ;;              _setDimmerLights_AdjRF
  2311 ;; ---------------------------------------------------------------------------------
  2312 ;; (3) _setPowerFault_Exceptions                             2     2      0    2473
  2313 ;;                                             11 BANK0      2     2      0
  2314 ;;            _DimmerLights_Exceptions
  2315 ;;                             _setLED
  2316 ;;                       _setSw_Enable
  2317 ;;                       _setRF_Enable
  2318 ;; ---------------------------------------------------------------------------------
  2319 ;; (3) _setOverTemp_Exceptions                               2     2      0    2829
  2320 ;;                                             11 BANK0      2     2      0
  2321 ;;            _DimmerLights_Exceptions
  2322 ;;                             _setBuz
  2323 ;;                             _setLED
  2324 ;;                       _setSw_Enable
  2325 ;;                       _setRF_Enable
  2326 ;; ---------------------------------------------------------------------------------
  2327 ;; (2) _setLoad_Exceptions                                   2     2      0    2504
  2328 ;;                                             11 BANK0      2     2      0
  2329 ;;            _DimmerLights_Exceptions
  2330 ;;                             _setLED
  2331 ;;                       _setSw_Enable
  2332 ;;                       _setRF_Enable
  2333 ;; ---------------------------------------------------------------------------------
  2334 ;; (1) _Switch_Main                                          0     0      0    3196
  2335 ;;                         _setSw_Main
  2336 ;; ---------------------------------------------------------------------------------
  2337 ;; (1) _Flash_Memory_Main                                    0     0      0     307
  2338 ;;                _Flash_Memory_Modify
  2339 ;; ---------------------------------------------------------------------------------
  2340 ;; (1) _DimmerLights_Main                                    0     0      0    1968
  2341 ;;               _setDimmerLights_Main
  2342 ;;                 _DimmerLights_Close
  2343 ;; ---------------------------------------------------------------------------------
  2344 ;; (2) _setSw_Main                                           4     4      0    3196
  2345 ;;                                             12 BANK0      4     4      0
  2346 ;;                      _SwPointSelect
  2347 ;;                    _Sw_DimmerOnFunc
  2348 ;;                   _Sw_DimmerAdjFunc
  2349 ;;                        _setRF_Learn
  2350 ;;                             _setBuz
  2351 ;;                   _Sw_DimmerOffFunc
  2352 ;; ---------------------------------------------------------------------------------
  2353 ;; (2) _Flash_Memory_Modify                                  3     3      0     307
  2354 ;;                                              4 BANK0      3     3      0
  2355 ;;                  _Flash_Memory_Read
  2356 ;;               _Flash_Memory_Erasing
  2357 ;;                 _Flash_Memory_Write
  2358 ;; ---------------------------------------------------------------------------------
  2359 ;; (1) _Switch_Initialization                                0     0      0     562
  2360 ;;                         _TouchPower
  2361 ;;               _setSw_Initialization
  2362 ;; ---------------------------------------------------------------------------------
  2363 ;; (1) _Flash_Memory_Initialization                          2     2      0    1509
  2364 ;;                                             48 BANK0      2     2      0
  2365 ;;                  _Flash_Memory_Read
  2366 ;;                    _setPercentValue
  2367 ;;                 _Flash_Memory_Write
  2368 ;; ---------------------------------------------------------------------------------
  2369 ;; (1) _LED_Initialization                                   0     0      0     628
  2370 ;;              _setLED_Initialization
  2371 ;; ---------------------------------------------------------------------------------
  2372 ;; (7) _setDimmerLights_AdjRF                                2     2      0    2737
  2373 ;;                                             63 BANK0      2     2      0
  2374 ;;            _DimmerLightsPointSelect
  2375 ;;                    _getPercentValue
  2376 ;; ---------------------------------------------------------------------------------
  2377 ;; (4) _DimmerLights_Exceptions                              1     1      0    1619
  2378 ;;                                             10 BANK0      1     1      0
  2379 ;;         _getDimmerLights_StatusFlag
  2380 ;;                             _setBuz
  2381 ;;              _setDimmerLights_ERROR
  2382 ;;       _setDimmerLights_TriggerERROR
  2383 ;; ---------------------------------------------------------------------------------
  2384 ;; (2) _setDimmerLights_Main                                 2     2      0    1913
  2385 ;;                                             10 BANK0      2     2      0
  2386 ;;            _DimmerLightsPointSelect
  2387 ;;                    _setDimmerLights
  2388 ;;                _setDimmerLights_Adj
  2389 ;;                             _setBuz
  2390 ;; ---------------------------------------------------------------------------------
  2391 ;; (1) _DelayOff_Main                                        0     0      0    1100
  2392 ;;                        _DlyOff_Main
  2393 ;; ---------------------------------------------------------------------------------
  2394 ;; (1) _CC2500_PowerOnInitial                                0     0      0     997
  2395 ;;                    _CC2500_PowerRST
  2396 ;;                  _CC2500_InitSetREG
  2397 ;;                 _CC2500_InitPATable
  2398 ;;                 _CC2500_ClearTXFIFO
  2399 ;;                 _CC2500_ClearRXFIFO
  2400 ;;               _CC2500_FrequencyCabr
  2401 ;;                   _CC2500_SIDLEMode
  2402 ;; ---------------------------------------------------------------------------------
  2403 ;; (3) _Sw_DimmerOffFunc                                     3     3      0    1231
  2404 ;;                                              8 BANK0      3     3      0
  2405 ;;         _setDimmerLights_TriggerAdj
  2406 ;;              _setDimmerLights_AdjGo
  2407 ;;                 _setRF_DimmerLights
  2408 ;;                          _setTxData
  2409 ;;            _setDimmerLights_Trigger
  2410 ;;             _setDimmerLights_Switch
  2411 ;;                     _setDelayOff_GO
  2412 ;; ---------------------------------------------------------------------------------
  2413 ;; (3) _Sw_DimmerAdjFunc                                     1     1      0     345
  2414 ;;                                              4 BANK0      1     1      0
  2415 ;;                     _setRFSW_Status
  2416 ;;         _setDimmerLights_TriggerAdj
  2417 ;;              _setDimmerLights_AdjGo
  2418 ;; ---------------------------------------------------------------------------------
  2419 ;; (3) _Sw_DimmerOnFunc                                      2     2      0     997
  2420 ;;                                             10 BANK0      2     2      0
  2421 ;;                             _setBuz
  2422 ;;                     _setRFSW_Status
  2423 ;;            _setDimmerLights_Trigger
  2424 ;;             _setDimmerLights_Switch
  2425 ;;                 _setRF_DimmerLights
  2426 ;;                          _setTxData
  2427 ;; ---------------------------------------------------------------------------------
  2428 ;; (2) _setSw_Initialization                                 1     1      0     562
  2429 ;;                                              4 BANK0      1     1      0
  2430 ;;                             _setLED
  2431 ;; ---------------------------------------------------------------------------------
  2432 ;; (5) _setRFSW_Control                                      2     2      0    1680
  2433 ;;                                             10 BANK0      2     2      0
  2434 ;;                    _RfSWPointSelect
  2435 ;;                     _setDelayOff_GO
  2436 ;;                       _setSw_Status
  2437 ;;            _setDimmerLights_Trigger
  2438 ;;             _setDimmerLights_Switch
  2439 ;;                 _setRF_DimmerLights
  2440 ;;                             _setBuz
  2441 ;;                          _setTxData
  2442 ;; ---------------------------------------------------------------------------------
  2443 ;; (4) _setLog_Code                                          2     2      0     409
  2444 ;;                                             10 BANK0      2     2      0
  2445 ;;                      _RfPointSelect
  2446 ;;                             _setBuz
  2447 ;; ---------------------------------------------------------------------------------
  2448 ;; (3) _RF_RxDisable                                         1     1      0     152
  2449 ;;                                              4 BANK0      1     1      0
  2450 ;;                      _RfPointSelect
  2451 ;;                _CC2500_WriteCommand
  2452 ;;                          _setINT_GO
  2453 ;; ---------------------------------------------------------------------------------
  2454 ;; (3) _Flash_Memory_Erasing                                 0     0      0       0
  2455 ;;                _Flash_Memory_Unlock
  2456 ;; ---------------------------------------------------------------------------------
  2457 ;; (3) _Flash_Memory_Write                                   2     2      0     130
  2458 ;;                                              0 BANK0      2     2      0
  2459 ;;                _Flash_Memory_Unlock
  2460 ;; ---------------------------------------------------------------------------------
  2461 ;; (1) _MainT                                                0     0      0     586
  2462 ;;                     _setTemp_Enable
  2463 ;;                     _setLoad_Enable
  2464 ;;                             _setBuz
  2465 ;;                       _setSw_Enable
  2466 ;;                       _setRF_Enable
  2467 ;; ---------------------------------------------------------------------------------
  2468 ;; (1) _LED_Main                                             0     0      0     154
  2469 ;;                        _setLED_Main
  2470 ;; ---------------------------------------------------------------------------------
  2471 ;; (2) _setLED_Initialization                                1     1      0     628
  2472 ;;                                              4 BANK0      1     1      0
  2473 ;;                     _LedPointSelect
  2474 ;;                             _setLED
  2475 ;; ---------------------------------------------------------------------------------
  2476 ;; (2) _setPercentValue                                      4     4      0    1140
  2477 ;;                                             44 BANK0      4     4      0
  2478 ;;                            ___ftdiv
  2479 ;;                           ___awtoft
  2480 ;;                            ___fttol
  2481 ;; ---------------------------------------------------------------------------------
  2482 ;; (8) _getPercentValue                                      6     6      0    2693
  2483 ;;                                             57 BANK0      6     6      0
  2484 ;;                            ___ftdiv
  2485 ;;                           ___awtoft
  2486 ;;                            ___ftmul
  2487 ;;                            ___ftadd
  2488 ;;                            ___fttol
  2489 ;; ---------------------------------------------------------------------------------
  2490 ;; (5) _setDimmerLights_ERROR                                2     2      0     969
  2491 ;;                                              4 BANK0      2     2      0
  2492 ;;            _DimmerLightsPointSelect
  2493 ;;                  _setLoad_StatusOff
  2494 ;;                             _setLED
  2495 ;;                       _setSw_Status
  2496 ;;                     _setRFSW_Status
  2497 ;; ---------------------------------------------------------------------------------
  2498 ;; (3) _setDimmerLights_Adj                                  3     2      1     439
  2499 ;;                                              5 BANK0      3     2      1
  2500 ;;            _DimmerLightsPointSelect
  2501 ;;                  _setLoad_StatusOff
  2502 ;;                 _setRF_DimmerLights
  2503 ;;                          _setTxData
  2504 ;; ---------------------------------------------------------------------------------
  2505 ;; (5) _setDimmerLights                                      3     2      1     845
  2506 ;;                                              4 BANK0      3     2      1
  2507 ;;            _DimmerLightsPointSelect
  2508 ;;                             _setLED
  2509 ;;                      _setLoad_Count
  2510 ;;                   _setLoad_StatusOn
  2511 ;; ---------------------------------------------------------------------------------
  2512 ;; (1) _DimmerLights_Initialization                          1     1      0      44
  2513 ;;                                              4 BANK0      1     1      0
  2514 ;;     _setDimmerLights_Initialization
  2515 ;;              _Dimmer_Initialization
  2516 ;; ---------------------------------------------------------------------------------
  2517 ;; (2) _DlyOff_Main                                          3     3      0    1100
  2518 ;;                                             10 BANK0      3     3      0
  2519 ;;                _DelayOffPointSelect
  2520 ;;                       _setSw_Status
  2521 ;;                     _setRFSW_Status
  2522 ;;                 _setRF_DimmerLights
  2523 ;;            _setDimmerLights_Trigger
  2524 ;;             _setDimmerLights_Switch
  2525 ;;                          _setTxData
  2526 ;;                             _setBuz
  2527 ;; ---------------------------------------------------------------------------------
  2528 ;; (1) _DelayOff_Initialization                              0     0      0      53
  2529 ;;              _DlyOff_Initialization
  2530 ;; ---------------------------------------------------------------------------------
  2531 ;; (2) _CC2500_SIDLEMode                                     0     0      0      68
  2532 ;;                _CC2500_WriteCommand
  2533 ;; ---------------------------------------------------------------------------------
  2534 ;; (2) _CC2500_FrequencyCabr                                 0     0      0     204
  2535 ;;                _CC2500_WriteCommand
  2536 ;;                      _DelayTime_1us
  2537 ;; ---------------------------------------------------------------------------------
  2538 ;; (2) _CC2500_ClearRXFIFO                                   0     0      0      68
  2539 ;;                _CC2500_WriteCommand
  2540 ;; ---------------------------------------------------------------------------------
  2541 ;; (2) _CC2500_ClearTXFIFO                                   0     0      0      68
  2542 ;;                _CC2500_WriteCommand
  2543 ;; ---------------------------------------------------------------------------------
  2544 ;; (2) _CC2500_InitPATable                                   3     3      0     181
  2545 ;;                                              5 BANK0      3     3      0
  2546 ;;                    _CC2500_WriteREG
  2547 ;; ---------------------------------------------------------------------------------
  2548 ;; (2) _CC2500_InitSetREG                                    4     4      0     226
  2549 ;;                                              5 BANK0      4     4      0
  2550 ;;                    _CC2500_WriteREG
  2551 ;; ---------------------------------------------------------------------------------
  2552 ;; (3) _CC2500_RxData                                        2     2      0     426
  2553 ;;                                              4 BANK0      2     2      0
  2554 ;;                  _CC2500_ReadStatus
  2555 ;;                   _CC2500_WriteByte
  2556 ;;                    _CC2500_ReadByte
  2557 ;;                _CC2500_WriteCommand
  2558 ;;                     _setRF_RxStatus
  2559 ;; ---------------------------------------------------------------------------------
  2560 ;; (3) _CC2500_TxData                                        2     2      0     160
  2561 ;;                                              4 BANK0      2     2      0
  2562 ;;                   _CC2500_WriteByte
  2563 ;;                _CC2500_WriteCommand
  2564 ;; ---------------------------------------------------------------------------------
  2565 ;; (9) ___awtoft                                             6     3      3     300
  2566 ;;                                             22 BANK0      6     3      3
  2567 ;;                           ___ftpack
  2568 ;;                            ___fttol (ARG)
  2569 ;; ---------------------------------------------------------------------------------
  2570 ;; (9) ___ftmul                                             16    10      6     535
  2571 ;;                                             28 BANK0     16    10      6
  2572 ;;                           ___ftpack
  2573 ;;                           ___awtoft (ARG)
  2574 ;;                            ___fttol (ARG)
  2575 ;; ---------------------------------------------------------------------------------
  2576 ;; (9) ___ftdiv                                             16    10      6     489
  2577 ;;                                             28 BANK0     16    10      6
  2578 ;;                           ___ftpack
  2579 ;;                           ___awtoft (ARG)
  2580 ;;                            ___fttol (ARG)
  2581 ;; ---------------------------------------------------------------------------------
  2582 ;; (9) ___ftadd                                             13     7      6    1049
  2583 ;;                                             44 BANK0     13     7      6
  2584 ;;                           ___ftpack
  2585 ;;                            ___ftmul (ARG)
  2586 ;;                           ___awtoft (ARG)
  2587 ;;                            ___fttol (ARG)
  2588 ;; ---------------------------------------------------------------------------------
  2589 ;; (3) _setRF_Learn                                          2     1      1      84
  2590 ;;                                              2 BANK0      2     1      1
  2591 ;;                      _RfPointSelect
  2592 ;; ---------------------------------------------------------------------------------
  2593 ;; (4) _Flash_Memory_Unlock                                  0     0      0       0
  2594 ;; ---------------------------------------------------------------------------------
  2595 ;; (4) _setRF_Enable                                         2     1      1     115
  2596 ;;                                              2 BANK0      2     1      1
  2597 ;;                      _RfPointSelect
  2598 ;;                          _setINT_GO
  2599 ;; ---------------------------------------------------------------------------------
  2600 ;; (4) _setSw_Enable                                         1     1      0      53
  2601 ;;                                              2 BANK0      1     1      0
  2602 ;;                      _SwPointSelect
  2603 ;; ---------------------------------------------------------------------------------
  2604 ;; (1) _getPowerFault_AD                                     5     5      0      66
  2605 ;;                                              7 BANK0      5     5      0
  2606 ;;                              _getAD
  2607 ;; ---------------------------------------------------------------------------------
  2608 ;; (1) _getTemp_AD                                           5     5      0      66
  2609 ;;                                              7 BANK0      5     5      0
  2610 ;;                              _getAD
  2611 ;; ---------------------------------------------------------------------------------
  2612 ;; (1) _getLoad_AD                                           8     8      0     271
  2613 ;;                                              7 BANK0      8     8      0
  2614 ;;                              _getAD
  2615 ;; ---------------------------------------------------------------------------------
  2616 ;; (1) _RF_Initialization                                    0     0      0       0
  2617 ;;               _setRF_Initialization
  2618 ;; ---------------------------------------------------------------------------------
  2619 ;; (1) _PowerFault_Initialization                            0     0      0       0
  2620 ;;       _setPowerFault_Initialization
  2621 ;; ---------------------------------------------------------------------------------
  2622 ;; (1) _Load_Initialization                                  1     1      0      90
  2623 ;;                                              2 BANK0      1     1      0
  2624 ;;              _setLoad_AH_AL_Restore
  2625 ;; ---------------------------------------------------------------------------------
  2626 ;; (1) _Temp_Initialization                                  0     0      0       0
  2627 ;;             _setTemp_Initialization
  2628 ;; ---------------------------------------------------------------------------------
  2629 ;; (1) _Mcu_Initialization                                   1     1      0       0
  2630 ;;                                              1 BANK0      1     1      0
  2631 ;;                             _IO_Set
  2632 ;;                           _TMR0_Set
  2633 ;;                            _ADC_Set
  2634 ;;                            _INT_Set
  2635 ;;                            _IOC_Set
  2636 ;; ---------------------------------------------------------------------------------
  2637 ;; (2) _setLED_Main                                          3     3      0     154
  2638 ;;                                              2 BANK0      3     3      0
  2639 ;;                     _LedPointSelect
  2640 ;; ---------------------------------------------------------------------------------
  2641 ;; (2) _setDimmerLights_Clear                                2     1      1      84
  2642 ;;                                              2 BANK0      2     1      1
  2643 ;;            _DimmerLightsPointSelect
  2644 ;; ---------------------------------------------------------------------------------
  2645 ;; (4) _setDimmerLights_TriggerAdj                           2     1      1      84
  2646 ;;                                              2 BANK0      2     1      1
  2647 ;;            _DimmerLightsPointSelect
  2648 ;; ---------------------------------------------------------------------------------
  2649 ;; (4) _setDimmerLights_AdjGo                                2     1      1      84
  2650 ;;                                              2 BANK0      2     1      1
  2651 ;;            _DimmerLightsPointSelect
  2652 ;; ---------------------------------------------------------------------------------
  2653 ;; (6) _setLED                                               2     1      1     500
  2654 ;;                                              2 BANK0      2     1      1
  2655 ;;                     _LedPointSelect
  2656 ;; ---------------------------------------------------------------------------------
  2657 ;; (5) _setDimmerLights_TriggerERROR                         2     1      1     177
  2658 ;;                                              2 BANK0      2     1      1
  2659 ;;            _DimmerLightsPointSelect
  2660 ;; ---------------------------------------------------------------------------------
  2661 ;; (2) _DimmerLights_Close                                   0     0      0      55
  2662 ;;         _getDimmerLights_StatusFlag
  2663 ;;                         _setLoad_GO
  2664 ;; ---------------------------------------------------------------------------------
  2665 ;; (2) _setDimmerLights_Initialization                       2     2      0      44
  2666 ;;                                              2 BANK0      2     2      0
  2667 ;;            _DimmerLightsPointSelect
  2668 ;; ---------------------------------------------------------------------------------
  2669 ;; (6) _setDelayOff_GO                                       5     3      2     447
  2670 ;;                                              3 BANK0      5     3      2
  2671 ;;                _DelayOffPointSelect
  2672 ;;                     _DelayTimejudge
  2673 ;; ---------------------------------------------------------------------------------
  2674 ;; (3) _setTxData                                            3     3      0      44
  2675 ;;                                              2 BANK0      2     2      0
  2676 ;;                      _RfPointSelect
  2677 ;; ---------------------------------------------------------------------------------
  2678 ;; (3) _setDimmerLights_Switch                               2     1      1      84
  2679 ;;                                              2 BANK0      2     1      1
  2680 ;;            _DimmerLightsPointSelect
  2681 ;; ---------------------------------------------------------------------------------
  2682 ;; (3) _setDimmerLights_Trigger                              2     1      1      84
  2683 ;;                                              2 BANK0      2     1      1
  2684 ;;            _DimmerLightsPointSelect
  2685 ;; ---------------------------------------------------------------------------------
  2686 ;; (3) _setRFSW_Status                                       2     1      1      84
  2687 ;;                                              2 BANK0      2     1      1
  2688 ;;                    _RfSWPointSelect
  2689 ;; ---------------------------------------------------------------------------------
  2690 ;; (3) _setSw_Status                                         2     1      1      84
  2691 ;;                                              2 BANK0      2     1      1
  2692 ;;                      _SwPointSelect
  2693 ;; ---------------------------------------------------------------------------------
  2694 ;; (2) _DlyOff_Initialization                                1     1      0      53
  2695 ;;                                              2 BANK0      1     1      0
  2696 ;;                _DelayOffPointSelect
  2697 ;; ---------------------------------------------------------------------------------
  2698 ;; (3) _CC2500_WriteREG                                      3     2      1      90
  2699 ;;                                              2 BANK0      3     2      1
  2700 ;;                   _CC2500_WriteByte
  2701 ;; ---------------------------------------------------------------------------------
  2702 ;; (2) _CC2500_PowerRST                                      1     1      0     182
  2703 ;;                                              6 BANK0      1     1      0
  2704 ;;                      _DelayTime_1us
  2705 ;;                   _CC2500_WriteByte
  2706 ;; ---------------------------------------------------------------------------------
  2707 ;; (4) _setRF_RxStatus                                       2     1      1      84
  2708 ;;                                              2 BANK0      2     1      1
  2709 ;;                      _RfPointSelect
  2710 ;; ---------------------------------------------------------------------------------
  2711 ;; (4) _CC2500_ReadStatus                                    2     2      0     114
  2712 ;;                                              2 BANK0      2     2      0
  2713 ;;                   _CC2500_WriteByte
  2714 ;;                    _CC2500_ReadByte
  2715 ;; ---------------------------------------------------------------------------------
  2716 ;; (4) _CC2500_WriteCommand                                  2     2      0      68
  2717 ;;                                              2 BANK0      2     2      0
  2718 ;;                   _CC2500_WriteByte
  2719 ;; ---------------------------------------------------------------------------------
  2720 ;; (3) _setBuz                                               4     2      2     356
  2721 ;;                                              6 BANK0      4     2      2
  2722 ;;                             ___wmul
  2723 ;; ---------------------------------------------------------------------------------
  2724 ;; (9) ___fttol                                             14    10      4     252
  2725 ;;                                              8 BANK0     14    10      4
  2726 ;;                           ___ftpack (ARG)
  2727 ;; ---------------------------------------------------------------------------------
  2728 ;; (10) ___ftpack                                            8     3      5     209
  2729 ;;                                              0 BANK0      8     3      5
  2730 ;; ---------------------------------------------------------------------------------
  2731 ;; (2) ___lwdiv                                              8     4      4     162
  2732 ;;                                              0 BANK0      8     4      4
  2733 ;; ---------------------------------------------------------------------------------
  2734 ;; (4) ___wmul                                               6     2      4     136
  2735 ;;                                              0 BANK0      6     2      4
  2736 ;; ---------------------------------------------------------------------------------
  2737 ;; (4) _SwPointSelect                                        2     2      0      22
  2738 ;;                                              0 BANK0      2     2      0
  2739 ;; ---------------------------------------------------------------------------------
  2740 ;; (2) _TouchPower                                           0     0      0       0
  2741 ;; ---------------------------------------------------------------------------------
  2742 ;; (4) _RfSWPointSelect                                      2     2      0      22
  2743 ;;                                              0 BANK0      2     2      0
  2744 ;; ---------------------------------------------------------------------------------
  2745 ;; (2) _setRF_Initialization                                 2     2      0       0
  2746 ;;                                              0 BANK0      1     1      0
  2747 ;; ---------------------------------------------------------------------------------
  2748 ;; (4) _RfPointSelect                                        2     2      0      22
  2749 ;;                                              0 BANK0      2     2      0
  2750 ;; ---------------------------------------------------------------------------------
  2751 ;; (2) _setPowerFault_Initialization                         1     1      0       0
  2752 ;;                                              0 BANK0      1     1      0
  2753 ;; ---------------------------------------------------------------------------------
  2754 ;; (2) _setTemp_Initialization                               1     1      0       0
  2755 ;;                                              0 BANK0      1     1      0
  2756 ;; ---------------------------------------------------------------------------------
  2757 ;; (3) _getLoad_Safe                                         1     1      0       0
  2758 ;;                                              0 BANK0      1     1      0
  2759 ;; ---------------------------------------------------------------------------------
  2760 ;; (2) _getPF_Safe                                           0     0      0       0
  2761 ;; ---------------------------------------------------------------------------------
  2762 ;; (3) _getTemp_Safe                                         0     0      0       0
  2763 ;; ---------------------------------------------------------------------------------
  2764 ;; (2) _setLoad_AH_AL_Restore                                2     2      0      90
  2765 ;;                                              0 BANK0      2     2      0
  2766 ;; ---------------------------------------------------------------------------------
  2767 ;; (3) _Flash_Memory_Read                                    4     4      0      47
  2768 ;;                                              0 BANK0      4     4      0
  2769 ;; ---------------------------------------------------------------------------------
  2770 ;; (2) _getAD                                                7     5      2      44
  2771 ;;                                              0 BANK0      7     5      2
  2772 ;; ---------------------------------------------------------------------------------
  2773 ;; (4) _setINT_GO                                            1     1      0      31
  2774 ;;                                              0 BANK0      1     1      0
  2775 ;; ---------------------------------------------------------------------------------
  2776 ;; (2) _IOC_Set                                              0     0      0       0
  2777 ;; ---------------------------------------------------------------------------------
  2778 ;; (2) _INT_Set                                              0     0      0       0
  2779 ;; ---------------------------------------------------------------------------------
  2780 ;; (2) _ADC_Set                                              0     0      0       0
  2781 ;; ---------------------------------------------------------------------------------
  2782 ;; (2) _TMR0_Set                                             1     1      0       0
  2783 ;;                                              0 BANK0      1     1      0
  2784 ;; ---------------------------------------------------------------------------------
  2785 ;; (2) _IO_Set                                               0     0      0       0
  2786 ;; ---------------------------------------------------------------------------------
  2787 ;; (2) _setLoad_Enable                                       1     1      0      31
  2788 ;;                                              0 BANK0      1     1      0
  2789 ;; ---------------------------------------------------------------------------------
  2790 ;; (2) _setTemp_Enable                                       1     1      0      31
  2791 ;;                                              0 BANK0      1     1      0
  2792 ;; ---------------------------------------------------------------------------------
  2793 ;; (1) _MainT_Initialization                                 1     1      0       0
  2794 ;;                                              0 BANK0      1     1      0
  2795 ;; ---------------------------------------------------------------------------------
  2796 ;; (7) _LedPointSelect                                       2     2      0      66
  2797 ;;                                              0 BANK0      2     2      0
  2798 ;; ---------------------------------------------------------------------------------
  2799 ;; (6) _setLoad_StatusOn                                     2     1      1     124
  2800 ;;                                              0 BANK0      2     1      1
  2801 ;; ---------------------------------------------------------------------------------
  2802 ;; (6) _setLoad_Count                                        2     2      0      44
  2803 ;;                                              0 BANK0      2     2      0
  2804 ;; ---------------------------------------------------------------------------------
  2805 ;; (4) _setLoad_StatusOff                                    2     1      1     124
  2806 ;;                                              0 BANK0      2     1      1
  2807 ;; ---------------------------------------------------------------------------------
  2808 ;; (3) _setLoad_GO                                           1     1      0      31
  2809 ;;                                              0 BANK0      1     1      0
  2810 ;; ---------------------------------------------------------------------------------
  2811 ;; (3) _getDimmerLights_StatusFlag                           2     2      0      24
  2812 ;;                                              0 BANK0      2     2      0
  2813 ;; ---------------------------------------------------------------------------------
  2814 ;; (2) _Dimmer_Initialization                                1     1      0       0
  2815 ;;                                              0 BANK0      1     1      0
  2816 ;; ---------------------------------------------------------------------------------
  2817 ;; (4) _DimmerLightsPointSelect                              2     2      0      22
  2818 ;;                                              0 BANK0      2     2      0
  2819 ;; ---------------------------------------------------------------------------------
  2820 ;; (7) _DelayTimejudge                                       3     3      0     161
  2821 ;;                                              0 BANK0      3     3      0
  2822 ;; ---------------------------------------------------------------------------------
  2823 ;; (3) _setRF_DimmerLights                                   5     4      1     156
  2824 ;;                                              0 BANK0      5     4      1
  2825 ;; ---------------------------------------------------------------------------------
  2826 ;; (3) _DelayOffPointSelect                                  2     2      0      22
  2827 ;;                                              0 BANK0      2     2      0
  2828 ;; ---------------------------------------------------------------------------------
  2829 ;; (3) _DelayTime_1us                                        6     4      2     136
  2830 ;;                                              0 BANK0      6     4      2
  2831 ;; ---------------------------------------------------------------------------------
  2832 ;; (4) _CC2500_ReadByte                                      2     2      0      46
  2833 ;;                                              0 BANK0      2     2      0
  2834 ;; ---------------------------------------------------------------------------------
  2835 ;; (5) _CC2500_WriteByte                                     2     2      0      46
  2836 ;;                                              0 BANK0      2     2      0
  2837 ;; ---------------------------------------------------------------------------------
  2838 ;; (1) _Buzzer_Main                                          4     4      0       0
  2839 ;;                                              0 BANK0      4     4      0
  2840 ;; ---------------------------------------------------------------------------------
  2841 ;; (1) _Buzzer_Initialization                                1     1      0       0
  2842 ;;                                              0 BANK0      1     1      0
  2843 ;; ---------------------------------------------------------------------------------
  2844 ;; Estimated maximum stack depth 10
  2845 ;; ---------------------------------------------------------------------------------
  2846 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  2847 ;; ---------------------------------------------------------------------------------
  2848 ;; (11) _ISR                                                 1     1      0     409
  2849 ;;                                              6 COMMON     1     1      0
  2850 ;;                            _IOC_ISR
  2851 ;;                           _TMR0_ISR
  2852 ;;                            _INT_ISR
  2853 ;; ---------------------------------------------------------------------------------
  2854 ;; (12) _INT_ISR                                             0     0      0     117
  2855 ;;                    _setRF_ReceiveGO
  2856 ;; ---------------------------------------------------------------------------------
  2857 ;; (13) _setRF_ReceiveGO                                     2     1      1     117
  2858 ;;                                              2 COMMON     2     1      1
  2859 ;;                    i1_RfPointSelect
  2860 ;; ---------------------------------------------------------------------------------
  2861 ;; (12) _TMR0_ISR                                            4     4      0     292
  2862 ;;                                              2 COMMON     4     4      0
  2863 ;;                i1_setLoad_StatusOff
  2864 ;; ---------------------------------------------------------------------------------
  2865 ;; (12) _IOC_ISR                                             1     1      0       0
  2866 ;;                                              0 COMMON     1     1      0
  2867 ;;                   _setDimmerReClock
  2868 ;; ---------------------------------------------------------------------------------
  2869 ;; (14) i1_RfPointSelect                                     2     2      0      73
  2870 ;;                                              0 COMMON     2     2      0
  2871 ;; ---------------------------------------------------------------------------------
  2872 ;; (13) i1_setLoad_StatusOff                                 2     1      1     292
  2873 ;;                                              0 COMMON     2     1      1
  2874 ;; ---------------------------------------------------------------------------------
  2875 ;; (13) _setDimmerReClock                                    0     0      0       0
  2876 ;; ---------------------------------------------------------------------------------
  2877 ;; Estimated maximum stack depth 14
  2878 ;; ---------------------------------------------------------------------------------
  2879                           
  2880 ;; Call Graph Graphs:
  2881                           
  2882 ;; _main (ROOT)
  2883 ;;   _MainT_Initialization
  2884 ;;   _Mcu_Initialization
  2885 ;;     _IO_Set
  2886 ;;     _TMR0_Set
  2887 ;;     _ADC_Set
  2888 ;;     _INT_Set
  2889 ;;     _IOC_Set
  2890 ;;   _Flash_Memory_Initialization
  2891 ;;     _Flash_Memory_Read
  2892 ;;     _setPercentValue
  2893 ;;       ___ftdiv
  2894 ;;         ___ftpack
  2895 ;;         ___awtoft (ARG)
  2896 ;;           ___ftpack
  2897 ;;           ___fttol (ARG)
  2898 ;;             ___ftpack (ARG)
  2899 ;;         ___fttol (ARG)
  2900 ;;           ___ftpack (ARG)
  2901 ;;       ___awtoft
  2902 ;;         ___ftpack
  2903 ;;         ___fttol (ARG)
  2904 ;;           ___ftpack (ARG)
  2905 ;;       ___fttol
  2906 ;;         ___ftpack (ARG)
  2907 ;;     _Flash_Memory_Write
  2908 ;;       _Flash_Memory_Unlock
  2909 ;;   _LED_Initialization
  2910 ;;     _setLED_Initialization
  2911 ;;       _LedPointSelect
  2912 ;;       _setLED
  2913 ;;         _LedPointSelect
  2914 ;;   _Buzzer_Initialization
  2915 ;;   _Temp_Initialization
  2916 ;;     _setTemp_Initialization
  2917 ;;   _Load_Initialization
  2918 ;;     _setLoad_AH_AL_Restore
  2919 ;;   _PowerFault_Initialization
  2920 ;;     _setPowerFault_Initialization
  2921 ;;   _DelayOff_Initialization
  2922 ;;     _DlyOff_Initialization
  2923 ;;       _DelayOffPointSelect
  2924 ;;   _DimmerLights_Initialization
  2925 ;;     _setDimmerLights_Initialization
  2926 ;;       _DimmerLightsPointSelect
  2927 ;;     _Dimmer_Initialization
  2928 ;;   _Switch_Initialization
  2929 ;;     _TouchPower
  2930 ;;     _setSw_Initialization
  2931 ;;       _setLED
  2932 ;;         _LedPointSelect
  2933 ;;   _RF_Initialization
  2934 ;;     _setRF_Initialization
  2935 ;;   _CC2500_PowerOnInitial
  2936 ;;     _CC2500_PowerRST
  2937 ;;       _DelayTime_1us
  2938 ;;       _CC2500_WriteByte
  2939 ;;     _CC2500_InitSetREG
  2940 ;;       _CC2500_WriteREG
  2941 ;;         _CC2500_WriteByte
  2942 ;;     _CC2500_InitPATable
  2943 ;;       _CC2500_WriteREG
  2944 ;;         _CC2500_WriteByte
  2945 ;;     _CC2500_ClearTXFIFO
  2946 ;;       _CC2500_WriteCommand
  2947 ;;         _CC2500_WriteByte
  2948 ;;     _CC2500_ClearRXFIFO
  2949 ;;       _CC2500_WriteCommand
  2950 ;;         _CC2500_WriteByte
  2951 ;;     _CC2500_FrequencyCabr
  2952 ;;       _CC2500_WriteCommand
  2953 ;;         _CC2500_WriteByte
  2954 ;;       _DelayTime_1us
  2955 ;;     _CC2500_SIDLEMode
  2956 ;;       _CC2500_WriteCommand
  2957 ;;         _CC2500_WriteByte
  2958 ;;   _getLoad_AD
  2959 ;;     _getAD
  2960 ;;   _getTemp_AD
  2961 ;;     _getAD
  2962 ;;   _getPowerFault_AD
  2963 ;;     _getAD
  2964 ;;   _Buzzer_Main
  2965 ;;   _MainT
  2966 ;;     _setTemp_Enable
  2967 ;;     _setLoad_Enable
  2968 ;;     _setBuz
  2969 ;;       ___wmul
  2970 ;;     _setSw_Enable
  2971 ;;       _SwPointSelect
  2972 ;;     _setRF_Enable
  2973 ;;       _RfPointSelect
  2974 ;;       _setINT_GO
  2975 ;;   _Flash_Memory_Main
  2976 ;;     _Flash_Memory_Modify
  2977 ;;       _Flash_Memory_Read
  2978 ;;       _Flash_Memory_Erasing
  2979 ;;         _Flash_Memory_Unlock
  2980 ;;       _Flash_Memory_Write
  2981 ;;         _Flash_Memory_Unlock
  2982 ;;   _LED_Main
  2983 ;;     _setLED_Main
  2984 ;;       _LedPointSelect
  2985 ;;   _Temp_Main
  2986 ;;     _setTemp_Main
  2987 ;;       _getLoad_Safe
  2988 ;;       _getPF_Safe
  2989 ;;       _setOverTemp_Exceptions
  2990 ;;         _DimmerLights_Exceptions
  2991 ;;           _getDimmerLights_StatusFlag
  2992 ;;           _setBuz
  2993 ;;             ___wmul
  2994 ;;           _setDimmerLights_ERROR
  2995 ;;             _DimmerLightsPointSelect
  2996 ;;             _setLoad_StatusOff
  2997 ;;             _setLED
  2998 ;;               _LedPointSelect
  2999 ;;             _setSw_Status
  3000 ;;               _SwPointSelect
  3001 ;;             _setRFSW_Status
  3002 ;;               _RfSWPointSelect
  3003 ;;           _setDimmerLights_TriggerERROR
  3004 ;;             _DimmerLightsPointSelect
  3005 ;;         _setBuz
  3006 ;;           ___wmul
  3007 ;;         _setLED
  3008 ;;           _LedPointSelect
  3009 ;;         _setSw_Enable
  3010 ;;           _SwPointSelect
  3011 ;;         _setRF_Enable
  3012 ;;           _RfPointSelect
  3013 ;;           _setINT_GO
  3014 ;;   _Load_Main
  3015 ;;     _setLoad_Exceptions
  3016 ;;       _DimmerLights_Exceptions
  3017 ;;         _getDimmerLights_StatusFlag
  3018 ;;         _setBuz
  3019 ;;           ___wmul
  3020 ;;         _setDimmerLights_ERROR
  3021 ;;           _DimmerLightsPointSelect
  3022 ;;           _setLoad_StatusOff
  3023 ;;           _setLED
  3024 ;;             _LedPointSelect
  3025 ;;           _setSw_Status
  3026 ;;             _SwPointSelect
  3027 ;;           _setRFSW_Status
  3028 ;;             _RfSWPointSelect
  3029 ;;         _setDimmerLights_TriggerERROR
  3030 ;;           _DimmerLightsPointSelect
  3031 ;;       _setLED
  3032 ;;         _LedPointSelect
  3033 ;;       _setSw_Enable
  3034 ;;         _SwPointSelect
  3035 ;;       _setRF_Enable
  3036 ;;         _RfPointSelect
  3037 ;;         _setINT_GO
  3038 ;;     ___lwdiv
  3039 ;;     _setDimmerLights_Clear
  3040 ;;       _DimmerLightsPointSelect
  3041 ;;     ___wmul
  3042 ;;     _setLoad_AH_AL_Restore
  3043 ;;     _getTemp_Safe
  3044 ;;     _getPF_Safe
  3045 ;;   _PowerFault_Main
  3046 ;;     _setPowerFault_Main
  3047 ;;       _getLoad_Safe
  3048 ;;       _getTemp_Safe
  3049 ;;       _setPowerFault_Exceptions
  3050 ;;         _DimmerLights_Exceptions
  3051 ;;           _getDimmerLights_StatusFlag
  3052 ;;           _setBuz
  3053 ;;             ___wmul
  3054 ;;           _setDimmerLights_ERROR
  3055 ;;             _DimmerLightsPointSelect
  3056 ;;             _setLoad_StatusOff
  3057 ;;             _setLED
  3058 ;;               _LedPointSelect
  3059 ;;             _setSw_Status
  3060 ;;               _SwPointSelect
  3061 ;;             _setRFSW_Status
  3062 ;;               _RfSWPointSelect
  3063 ;;           _setDimmerLights_TriggerERROR
  3064 ;;             _DimmerLightsPointSelect
  3065 ;;         _setLED
  3066 ;;           _LedPointSelect
  3067 ;;         _setSw_Enable
  3068 ;;           _SwPointSelect
  3069 ;;         _setRF_Enable
  3070 ;;           _RfPointSelect
  3071 ;;           _setINT_GO
  3072 ;;   _DimmerLights_Main
  3073 ;;     _setDimmerLights_Main
  3074 ;;       _DimmerLightsPointSelect
  3075 ;;       _setDimmerLights
  3076 ;;         _DimmerLightsPointSelect
  3077 ;;         _setLED
  3078 ;;           _LedPointSelect
  3079 ;;         _setLoad_Count
  3080 ;;         _setLoad_StatusOn
  3081 ;;       _setDimmerLights_Adj
  3082 ;;         _DimmerLightsPointSelect
  3083 ;;         _setLoad_StatusOff
  3084 ;;         _setRF_DimmerLights
  3085 ;;         _setTxData
  3086 ;;           _RfPointSelect
  3087 ;;       _setBuz
  3088 ;;         ___wmul
  3089 ;;     _DimmerLights_Close
  3090 ;;       _getDimmerLights_StatusFlag
  3091 ;;       _setLoad_GO
  3092 ;;   _Switch_Main
  3093 ;;     _setSw_Main
  3094 ;;       _SwPointSelect
  3095 ;;       _Sw_DimmerOnFunc
  3096 ;;         _setBuz
  3097 ;;           ___wmul
  3098 ;;         _setRFSW_Status
  3099 ;;           _RfSWPointSelect
  3100 ;;         _setDimmerLights_Trigger
  3101 ;;           _DimmerLightsPointSelect
  3102 ;;         _setDimmerLights_Switch
  3103 ;;           _DimmerLightsPointSelect
  3104 ;;         _setRF_DimmerLights
  3105 ;;         _setTxData
  3106 ;;           _RfPointSelect
  3107 ;;       _Sw_DimmerAdjFunc
  3108 ;;         _setRFSW_Status
  3109 ;;           _RfSWPointSelect
  3110 ;;         _setDimmerLights_TriggerAdj
  3111 ;;           _DimmerLightsPointSelect
  3112 ;;         _setDimmerLights_AdjGo
  3113 ;;           _DimmerLightsPointSelect
  3114 ;;       _setRF_Learn
  3115 ;;         _RfPointSelect
  3116 ;;       _setBuz
  3117 ;;         ___wmul
  3118 ;;       _Sw_DimmerOffFunc
  3119 ;;         _setDimmerLights_TriggerAdj
  3120 ;;           _DimmerLightsPointSelect
  3121 ;;         _setDimmerLights_AdjGo
  3122 ;;           _DimmerLightsPointSelect
  3123 ;;         _setRF_DimmerLights
  3124 ;;         _setTxData
  3125 ;;           _RfPointSelect
  3126 ;;         _setDimmerLights_Trigger
  3127 ;;           _DimmerLightsPointSelect
  3128 ;;         _setDimmerLights_Switch
  3129 ;;           _DimmerLightsPointSelect
  3130 ;;         _setDelayOff_GO
  3131 ;;           _DelayOffPointSelect
  3132 ;;           _DelayTimejudge
  3133 ;;   _RF_Main
  3134 ;;     _setRF_Main
  3135 ;;       _RfPointSelect
  3136 ;;       _CC2500_RxData
  3137 ;;         _CC2500_ReadStatus
  3138 ;;           _CC2500_WriteByte
  3139 ;;           _CC2500_ReadByte
  3140 ;;         _CC2500_WriteByte
  3141 ;;         _CC2500_ReadByte
  3142 ;;         _CC2500_WriteCommand
  3143 ;;           _CC2500_WriteByte
  3144 ;;         _setRF_RxStatus
  3145 ;;           _RfPointSelect
  3146 ;;       _getRxData
  3147 ;;         _RfPointSelect
  3148 ;;         _setLog_Code
  3149 ;;           _RfPointSelect
  3150 ;;           _setBuz
  3151 ;;             ___wmul
  3152 ;;         _setControl_Lights_Table
  3153 ;;           _RfPointSelect
  3154 ;;           _setDimmerLights
  3155 ;;             _DimmerLightsPointSelect
  3156 ;;             _setLED
  3157 ;;               _LedPointSelect
  3158 ;;             _setLoad_Count
  3159 ;;             _setLoad_StatusOn
  3160 ;;           _setRFSW_Status
  3161 ;;             _RfSWPointSelect
  3162 ;;           _setSw_Status
  3163 ;;             _SwPointSelect
  3164 ;;           _setBuz
  3165 ;;             ___wmul
  3166 ;;           _setTxData
  3167 ;;             _RfPointSelect
  3168 ;;           _setRFSW_Control
  3169 ;;             _RfSWPointSelect
  3170 ;;             _setDelayOff_GO
  3171 ;;               _DelayOffPointSelect
  3172 ;;               _DelayTimejudge
  3173 ;;             _setSw_Status
  3174 ;;               _SwPointSelect
  3175 ;;             _setDimmerLights_Trigger
  3176 ;;               _DimmerLightsPointSelect
  3177 ;;             _setDimmerLights_Switch
  3178 ;;               _DimmerLightsPointSelect
  3179 ;;             _setRF_DimmerLights
  3180 ;;             _setBuz
  3181 ;;               ___wmul
  3182 ;;             _setTxData
  3183 ;;               _RfPointSelect
  3184 ;;           _setRFSW_AdjControl
  3185 ;;             _RfSWPointSelect
  3186 ;;             _setRF_DimmerValue
  3187 ;;               _setDimmerLights_AdjRF
  3188 ;;                 _DimmerLightsPointSelect
  3189 ;;                 _getPercentValue
  3190 ;;                   ___ftdiv
  3191 ;;                     ___ftpack
  3192 ;;                     ___awtoft (ARG)
  3193 ;;                       ___ftpack
  3194 ;;                       ___fttol (ARG)
  3195 ;;                         ___ftpack (ARG)
  3196 ;;                     ___fttol (ARG)
  3197 ;;                       ___ftpack (ARG)
  3198 ;;                   ___awtoft
  3199 ;;                     ___ftpack
  3200 ;;                     ___fttol (ARG)
  3201 ;;                       ___ftpack (ARG)
  3202 ;;                   ___ftmul
  3203 ;;                     ___ftpack
  3204 ;;                     ___awtoft (ARG)
  3205 ;;                       ___ftpack
  3206 ;;                       ___fttol (ARG)
  3207 ;;                         ___ftpack (ARG)
  3208 ;;                     ___fttol (ARG)
  3209 ;;                       ___ftpack (ARG)
  3210 ;;                   ___ftadd
  3211 ;;                     ___ftpack
  3212 ;;                     ___ftmul (ARG)
  3213 ;;                       ___ftpack
  3214 ;;                       ___awtoft (ARG)
  3215 ;;                         ___ftpack
  3216 ;;                         ___fttol (ARG)
  3217 ;;                           ___ftpack (ARG)
  3218 ;;                       ___fttol (ARG)
  3219 ;;                         ___ftpack (ARG)
  3220 ;;                     ___awtoft (ARG)
  3221 ;;                       ___ftpack
  3222 ;;                       ___fttol (ARG)
  3223 ;;                         ___ftpack (ARG)
  3224 ;;                     ___fttol (ARG)
  3225 ;;                       ___ftpack (ARG)
  3226 ;;                   ___fttol
  3227 ;;                     ___ftpack (ARG)
  3228 ;;             _setTxData
  3229 ;;               _RfPointSelect
  3230 ;;       _CC2500_WriteCommand
  3231 ;;         _CC2500_WriteByte
  3232 ;;       _setINT_GO
  3233 ;;       _RF_RxDisable
  3234 ;;         _RfPointSelect
  3235 ;;         _CC2500_WriteCommand
  3236 ;;           _CC2500_WriteByte
  3237 ;;         _setINT_GO
  3238 ;;       _CC2500_TxData
  3239 ;;         _CC2500_WriteByte
  3240 ;;         _CC2500_WriteCommand
  3241 ;;           _CC2500_WriteByte
  3242 ;;   _DelayOff_Main
  3243 ;;     _DlyOff_Main
  3244 ;;       _DelayOffPointSelect
  3245 ;;       _setSw_Status
  3246 ;;         _SwPointSelect
  3247 ;;       _setRFSW_Status
  3248 ;;         _RfSWPointSelect
  3249 ;;       _setRF_DimmerLights
  3250 ;;       _setDimmerLights_Trigger
  3251 ;;         _DimmerLightsPointSelect
  3252 ;;       _setDimmerLights_Switch
  3253 ;;         _DimmerLightsPointSelect
  3254 ;;       _setTxData
  3255 ;;         _RfPointSelect
  3256 ;;       _setBuz
  3257 ;;         ___wmul
  3258 ;;
  3259 ;; _ISR (ROOT)
  3260 ;;   _IOC_ISR
  3261 ;;     _setDimmerReClock
  3262 ;;   _TMR0_ISR
  3263 ;;     i1_setLoad_StatusOff
  3264 ;;   _INT_ISR
  3265 ;;     _setRF_ReceiveGO
  3266 ;;       i1_RfPointSelect
  3267 ;;
  3268                           
  3269 ;; Address spaces:
  3270                           
  3271 ;;Name               Size   Autos  Total    Cost      Usage
  3272 ;;BIGRAM             3F0      0       0       0        0.0%
  3273 ;;NULL                 0      0       0       0        0.0%
  3274 ;;CODE                 0      0       0       0        0.0%
  3275 ;;BITCOMMON            E      0       1       1        7.1%
  3276 ;;BITSFR0              0      0       0       1        0.0%
  3277 ;;SFR0                 0      0       0       1        0.0%
  3278 ;;COMMON               E      7       E       2      100.0%
  3279 ;;BITSFR1              0      0       0       2        0.0%
  3280 ;;SFR1                 0      0       0       2        0.0%
  3281 ;;BITSFR2              0      0       0       3        0.0%
  3282 ;;SFR2                 0      0       0       3        0.0%
  3283 ;;STACK                0      0      12       3        0.0%
  3284 ;;BITBANK0            50      0       0       4        0.0%
  3285 ;;BITSFR3              0      0       0       4        0.0%
  3286 ;;SFR3                 0      0       0       4        0.0%
  3287 ;;BANK0               50     4C      50       5      100.0%
  3288 ;;BITSFR4              0      0       0       5        0.0%
  3289 ;;SFR4                 0      0       0       5        0.0%
  3290 ;;BITBANK1            50      0       0       6        0.0%
  3291 ;;BITSFR5              0      0       0       6        0.0%
  3292 ;;SFR5                 0      0       0       6        0.0%
  3293 ;;BANK1               50      0      4C       7       95.0%
  3294 ;;BITSFR6              0      0       0       7        0.0%
  3295 ;;SFR6                 0      0       0       7        0.0%
  3296 ;;BITBANK2            50      0       0       8        0.0%
  3297 ;;BITSFR7              0      0       0       8        0.0%
  3298 ;;SFR7                 0      0       0       8        0.0%
  3299 ;;BANK2               50      0      40       9       80.0%
  3300 ;;BITSFR8              0      0       0       9        0.0%
  3301 ;;SFR8                 0      0       0       9        0.0%
  3302 ;;BITBANK3            50      0       0      10        0.0%
  3303 ;;BITSFR9              0      0       0      10        0.0%
  3304 ;;SFR9                 0      0       0      10        0.0%
  3305 ;;BANK3               50      0      45      11       86.3%
  3306 ;;BITSFR10             0      0       0      11        0.0%
  3307 ;;SFR10                0      0       0      11        0.0%
  3308 ;;BITBANK4            50      0       0      12        0.0%
  3309 ;;BITSFR11             0      0       0      12        0.0%
  3310 ;;SFR11                0      0       0      12        0.0%
  3311 ;;BANK4               50      0      47      13       88.8%
  3312 ;;BITSFR12             0      0       0      13        0.0%
  3313 ;;SFR12                0      0       0      13        0.0%
  3314 ;;BITBANK5            50      0       0      14        0.0%
  3315 ;;BITSFR13             0      0       0      14        0.0%
  3316 ;;SFR13                0      0       0      14        0.0%
  3317 ;;BANK5               50      0       0      15        0.0%
  3318 ;;BITSFR14             0      0       0      15        0.0%
  3319 ;;SFR14                0      0       0      15        0.0%
  3320 ;;BITBANK6            50      0       0      16        0.0%
  3321 ;;BITSFR15             0      0       0      16        0.0%
  3322 ;;SFR15                0      0       0      16        0.0%
  3323 ;;BANK6               50      0       0      17        0.0%
  3324 ;;BITSFR16             0      0       0      17        0.0%
  3325 ;;SFR16                0      0       0      17        0.0%
  3326 ;;BITBANK7            50      0       0      18        0.0%
  3327 ;;BITSFR17             0      0       0      18        0.0%
  3328 ;;SFR17                0      0       0      18        0.0%
  3329 ;;BANK7               50      0       0      19        0.0%
  3330 ;;BITSFR18             0      0       0      19        0.0%
  3331 ;;SFR18                0      0       0      19        0.0%
  3332 ;;BITSFR19             0      0       0      20        0.0%
  3333 ;;SFR19                0      0       0      20        0.0%
  3334 ;;ABS                  0      0     176      20        0.0%
  3335 ;;BITBANK8            50      0       0      21        0.0%
  3336 ;;BITSFR20             0      0       0      21        0.0%
  3337 ;;SFR20                0      0       0      21        0.0%
  3338 ;;BANK8               50      0       0      22        0.0%
  3339 ;;BITSFR21             0      0       0      22        0.0%
  3340 ;;SFR21                0      0       0      22        0.0%
  3341 ;;BITBANK9            50      0       0      23        0.0%
  3342 ;;BITSFR22             0      0       0      23        0.0%
  3343 ;;SFR22                0      0       0      23        0.0%
  3344 ;;BANK9               50      0       0      24        0.0%
  3345 ;;BITSFR23             0      0       0      24        0.0%
  3346 ;;SFR23                0      0       0      24        0.0%
  3347 ;;BITBANK10           50      0       0      25        0.0%
  3348 ;;BITSFR24             0      0       0      25        0.0%
  3349 ;;SFR24                0      0       0      25        0.0%
  3350 ;;BANK10              50      0       0      26        0.0%
  3351 ;;BITSFR25             0      0       0      26        0.0%
  3352 ;;SFR25                0      0       0      26        0.0%
  3353 ;;BITBANK11           50      0       0      27        0.0%
  3354 ;;BITSFR26             0      0       0      27        0.0%
  3355 ;;SFR26                0      0       0      27        0.0%
  3356 ;;BANK11              50      0       0      28        0.0%
  3357 ;;BITSFR27             0      0       0      28        0.0%
  3358 ;;SFR27                0      0       0      28        0.0%
  3359 ;;BITBANK12           30      0       0      29        0.0%
  3360 ;;BITSFR28             0      0       0      29        0.0%
  3361 ;;SFR28                0      0       0      29        0.0%
  3362 ;;BANK12              30      0       0      30        0.0%
  3363 ;;BITSFR29             0      0       0      30        0.0%
  3364 ;;SFR29                0      0       0      30        0.0%
  3365 ;;BITSFR30             0      0       0      31        0.0%
  3366 ;;SFR30                0      0       0      31        0.0%
  3367 ;;DATA                 0      0     188      31        0.0%
  3368 ;;BITSFR31             0      0       0      32        0.0%
  3369 ;;SFR31                0      0       0      32        0.0%
  3370                           
  3371                           	global	_main
  3372                           psect	maintext,global,class=CODE,delta=2
  3373                           global __pmaintext
  3374  1F87                     __pmaintext:
  3375                           
  3376 ;; *************** function _main *****************
  3377 ;; Defined at:
  3378 ;;		line 8 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\main.c"
  3379 ;; Parameters:    Size  Location     Type
  3380 ;;		None
  3381 ;; Auto vars:     Size  Location     Type
  3382 ;;		None
  3383 ;; Return value:  Size  Location     Type
  3384 ;;		None               void
  3385 ;; Registers used:
  3386 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  3387 ;; Tracked objects:
  3388 ;;		On entry : 17F/0
  3389 ;;		On exit  : 0/0
  3390 ;;		Unchanged: 0/0
  3391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  3392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3395 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3396 ;;Total ram usage:        0 bytes
  3397 ;; Hardware stack levels required when called:   14
  3398 ;; This function calls:
  3399 ;;		_MainT_Initialization
  3400 ;;		_Mcu_Initialization
  3401 ;;		_Flash_Memory_Initialization
  3402 ;;		_LED_Initialization
  3403 ;;		_Buzzer_Initialization
  3404 ;;		_Temp_Initialization
  3405 ;;		_Load_Initialization
  3406 ;;		_PowerFault_Initialization
  3407 ;;		_DelayOff_Initialization
  3408 ;;		_DimmerLights_Initialization
  3409 ;;		_Switch_Initialization
  3410 ;;		_RF_Initialization
  3411 ;;		_CC2500_PowerOnInitial
  3412 ;;		_getLoad_AD
  3413 ;;		_getTemp_AD
  3414 ;;		_getPowerFault_AD
  3415 ;;		_Buzzer_Main
  3416 ;;		_MainT
  3417 ;;		_Flash_Memory_Main
  3418 ;;		_LED_Main
  3419 ;;		_Temp_Main
  3420 ;;		_Load_Main
  3421 ;;		_PowerFault_Main
  3422 ;;		_DimmerLights_Main
  3423 ;;		_Switch_Main
  3424 ;;		_RF_Main
  3425 ;;		_DelayOff_Main
  3426 ;; This function is called by:
  3427 ;;		Startup code after reset
  3428 ;; This function uses a non-reentrant model
  3429 ;;
  3430                           psect	maintext
  3431                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\main.c"
  3432                           	line	8
  3433                           	global	__size_of_main
  3434  0079                     	__size_of_main	equ	__end_of_main-_main
  3435                           	
  3436  1F87                     _main:	
  3437                           	opt	stack 2
  3438                           ; Regs used in _main: [allreg]
  3439                           	line	9
  3440                           	
  3441  1F87                     l25728:	
  3442                           ;main.c: 9: MainT_Initialization();
  3443  1F87  31A1  210F  319F   	fcall	_MainT_Initialization
  3444                           	line	10
  3445                           ;main.c: 10: Mcu_Initialization();
  3446  1F8A  31A3  23AF  319F   	fcall	_Mcu_Initialization
  3447                           	line	11
  3448                           	
  3449  1F8D                     l25730:	
  3450                           ;main.c: 11: Flash_Memory_Initialization();
  3451  1F8D  318C  245C  319F   	fcall	_Flash_Memory_Initialization
  3452                           	line	12
  3453                           	
  3454  1F90                     l25732:	
  3455                           ;main.c: 12: LED_Initialization();
  3456  1F90  31A1  21D9  319F   	fcall	_LED_Initialization
  3457                           	line	13
  3458                           	
  3459  1F93                     l25734:	
  3460                           ;main.c: 13: Buzzer_Initialization();
  3461  1F93  31A1  212D  319F   	fcall	_Buzzer_Initialization
  3462                           	line	16
  3463                           	
  3464  1F96                     l25736:	
  3465                           ;main.c: 15: ;;
  3466                           ;main.c: 16: Temp_Initialization();
  3467  1F96  31A0  2086  319F   	fcall	_Temp_Initialization
  3468                           	line	17
  3469                           	
  3470  1F99                     l25738:	
  3471                           ;main.c: 17: Load_Initialization();
  3472  1F99  31A2  221E  319F   	fcall	_Load_Initialization
  3473                           	line	18
  3474                           	
  3475  1F9C                     l25740:	
  3476                           ;main.c: 18: PowerFault_Initialization();
  3477  1F9C  31A0  208A  319F   	fcall	_PowerFault_Initialization
  3478                           	line	19
  3479                           	
  3480  1F9F                     l25742:	
  3481                           ;main.c: 19: DelayOff_Initialization();
  3482  1F9F  31A0  20AA  319F   	fcall	_DelayOff_Initialization
  3483                           	line	21
  3484                           	
  3485  1FA2                     l25744:	
  3486                           ;main.c: 21: DimmerLights_Initialization();
  3487  1FA2  31A1  21B2  319F   	fcall	_DimmerLights_Initialization
  3488                           	line	26
  3489                           	
  3490  1FA5                     l25746:	
  3491                           ;main.c: 22: ;;
  3492                           ;main.c: 23: ;;
  3493                           ;main.c: 24: ;;
  3494                           ;main.c: 26: Switch_Initialization();
  3495  1FA5  31A1  2123  319F   	fcall	_Switch_Initialization
  3496                           	line	27
  3497                           	
  3498  1FA8                     l25748:	
  3499                           ;main.c: 27: RF_Initialization();
  3500  1FA8  31A0  2096  319F   	fcall	_RF_Initialization
  3501                           	line	28
  3502                           	
  3503  1FAB                     l25750:	
  3504                           ;main.c: 28: CC2500_PowerOnInitial();
  3505  1FAB  31A3  2380  319F   	fcall	_CC2500_PowerOnInitial
  3506  1FAE  2FAF               	goto	l25752
  3507                           	line	30
  3508                           ;main.c: 30: while(1)
  3509                           	
  3510  1FAF                     l8165:	
  3511                           	line	32
  3512                           	
  3513  1FAF                     l25752:	
  3514                           ;main.c: 31: {
  3515                           ;main.c: 32: if(TMain->PowerON)
  3516  1FAF  087D               	movf	(_TMain),w
  3517  1FB0  0086               	movwf	fsr1l
  3518  1FB1  3001               	movlw 1	; select bank2/3
  3519  1FB2  0087               	movwf fsr1h	
  3520                           	
  3521  1FB3  1C01               	btfss	indf1,0
  3522  1FB4  2FB6               	goto	u10671
  3523  1FB5  2FB7               	goto	u10670
  3524  1FB6                     u10671:
  3525  1FB6  2FC7               	goto	l25758
  3526  1FB7                     u10670:
  3527                           	line	39
  3528                           	
  3529  1FB7                     l25754:	
  3530                           ;main.c: 33: {
  3531                           ;main.c: 35: ;;
  3532                           ;main.c: 39: getLoad_AD(0x05);
  3533  1FB7  3005               	movlw	(05h)
  3534  1FB8  3189  2117  319F   	fcall	_getLoad_AD
  3535                           	line	43
  3536                           ;main.c: 43: getTemp_AD(0x09);
  3537  1FBB  3009               	movlw	(09h)
  3538  1FBC  3191  214A  319F   	fcall	_getTemp_AD
  3539                           	line	47
  3540                           ;main.c: 47: getPowerFault_AD(0x11);
  3541  1FBF  3011               	movlw	(011h)
  3542  1FC0  3199  21E5  319F   	fcall	_getPowerFault_AD
  3543                           	line	59
  3544                           	
  3545  1FC3                     l25756:	
  3546                           ;main.c: 59: Buzzer_Main();
  3547  1FC3  318A  22A0  319F   	fcall	_Buzzer_Main
  3548  1FC6  2FC7               	goto	l25758
  3549                           	line	61
  3550                           	
  3551  1FC7                     l8166:	
  3552                           	line	63
  3553                           	
  3554  1FC7                     l25758:	
  3555                           ;main.c: 61: }
  3556                           ;main.c: 63: if(TMain->T0_Timerout)
  3557  1FC7  087D               	movf	(_TMain),w
  3558  1FC8  0086               	movwf	fsr1l
  3559  1FC9  3001               	movlw 1	; select bank2/3
  3560  1FCA  0087               	movwf fsr1h	
  3561                           	
  3562  1FCB  1C81               	btfss	indf1,1
  3563  1FCC  2FCE               	goto	u10681
  3564  1FCD  2FCF               	goto	u10680
  3565  1FCE                     u10681:
  3566  1FCE  2FAF               	goto	l25752
  3567  1FCF                     u10680:
  3568                           	line	65
  3569                           	
  3570  1FCF                     l25760:	
  3571                           ;main.c: 64: {
  3572                           ;main.c: 65: TMain->T0_Timerout = 0;
  3573  1FCF  087D               	movf	(_TMain),w
  3574  1FD0  0086               	movwf	fsr1l
  3575  1FD1  3001               	movlw 1	; select bank2/3
  3576  1FD2  0087               	movwf fsr1h	
  3577                           	
  3578  1FD3  1081               	bcf	indf1,1
  3579                           	line	66
  3580                           	
  3581  1FD4                     l25762:	
  3582                           ;main.c: 66: MainT();
  3583  1FD4  3194  24DD  319F   	fcall	_MainT
  3584                           	line	67
  3585                           	
  3586  1FD7                     l25764:	
  3587                           ;main.c: 67: if(TMain->PowerON)
  3588  1FD7  087D               	movf	(_TMain),w
  3589  1FD8  0086               	movwf	fsr1l
  3590  1FD9  3001               	movlw 1	; select bank2/3
  3591  1FDA  0087               	movwf fsr1h	
  3592                           	
  3593  1FDB  1C01               	btfss	indf1,0
  3594  1FDC  2FDE               	goto	u10691
  3595  1FDD  2FDF               	goto	u10690
  3596  1FDE                     u10691:
  3597  1FDE  2FAF               	goto	l25752
  3598  1FDF                     u10690:
  3599                           	line	69
  3600                           	
  3601  1FDF                     l25766:	
  3602                           ;main.c: 68: {
  3603                           ;main.c: 69: Flash_Memory_Main();
  3604  1FDF  319B  23F3  319F   	fcall	_Flash_Memory_Main
  3605                           	line	71
  3606                           ;main.c: 71: LED_Main();
  3607  1FE2  31A1  21BF  319F   	fcall	_LED_Main
  3608                           	line	74
  3609                           ;main.c: 73: ;;
  3610                           ;main.c: 74: Temp_Main();
  3611  1FE5  31A0  208E  319F   	fcall	_Temp_Main
  3612                           	line	75
  3613                           	
  3614  1FE8                     l25768:	
  3615                           ;main.c: 75: Load_Main();
  3616  1FE8  3180  2018  319F   	fcall	_Load_Main
  3617                           	line	76
  3618                           	
  3619  1FEB                     l25770:	
  3620                           ;main.c: 76: PowerFault_Main();
  3621  1FEB  31A0  2092  319F   	fcall	_PowerFault_Main
  3622                           	line	79
  3623                           	
  3624  1FEE                     l25772:	
  3625                           ;main.c: 78: ;;
  3626                           ;main.c: 79: DimmerLights_Main();
  3627  1FEE  31A0  20F5  319F   	fcall	_DimmerLights_Main
  3628                           	line	80
  3629                           	
  3630  1FF1                     l25774:	
  3631                           ;main.c: 80: Switch_Main();
  3632  1FF1  31A0  20B4  319F   	fcall	_Switch_Main
  3633                           	line	84
  3634                           	
  3635  1FF4                     l25776:	
  3636                           ;main.c: 81: ;;
  3637                           ;main.c: 82: ;;
  3638                           ;main.c: 84: RF_Main();
  3639  1FF4  31A0  20B9  319F   	fcall	_RF_Main
  3640                           	line	85
  3641                           	
  3642  1FF7                     l25778:	
  3643                           ;main.c: 85: DelayOff_Main();
  3644  1FF7  31A0  20AF  319F   	fcall	_DelayOff_Main
  3645  1FFA  2FAF               	goto	l25752
  3646                           	line	86
  3647                           	
  3648  1FFB                     l8168:	
  3649  1FFB  2FAF               	goto	l25752
  3650                           	line	87
  3651                           	
  3652  1FFC                     l8167:	
  3653  1FFC  2FAF               	goto	l25752
  3654                           	line	88
  3655                           	
  3656  1FFD                     l8169:	
  3657                           	line	30
  3658  1FFD  2FAF               	goto	l25752
  3659                           	
  3660  1FFE                     l8170:	
  3661                           	line	89
  3662                           	
  3663  1FFE                     l8171:	
  3664                           	global	start
  3665  1FFE  3180  2815         	ljmp	start
  3666                           	opt stack 0
  3667                           GLOBAL	__end_of_main
  3668  2000                     	__end_of_main:
  3669 ;; =============== function _main ends ============
  3670                           
  3671                           	signat	_main,88
  3672                           	global	_RF_Main
  3673                           psect	text4084,local,class=CODE,delta=2
  3674                           global __ptext4084
  3675  20B9                     __ptext4084:
  3676                           
  3677 ;; *************** function _RF_Main *****************
  3678 ;; Defined at:
  3679 ;;		line 25 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
  3680 ;; Parameters:    Size  Location     Type
  3681 ;;		None
  3682 ;; Auto vars:     Size  Location     Type
  3683 ;;		None
  3684 ;; Return value:  Size  Location     Type
  3685 ;;		None               void
  3686 ;; Registers used:
  3687 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3688 ;; Tracked objects:
  3689 ;;		On entry : 0/0
  3690 ;;		On exit  : 0/0
  3691 ;;		Unchanged: 0/0
  3692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  3693 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3694 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3696 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3697 ;;Total ram usage:        0 bytes
  3698 ;; Hardware stack levels used:    1
  3699 ;; Hardware stack levels required when called:   13
  3700 ;; This function calls:
  3701 ;;		_setRF_Main
  3702 ;; This function is called by:
  3703 ;;		_main
  3704 ;; This function uses a non-reentrant model
  3705 ;;
  3706                           psect	text4084
  3707                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
  3708                           	line	25
  3709                           	global	__size_of_RF_Main
  3710  0005                     	__size_of_RF_Main	equ	__end_of_RF_Main-_RF_Main
  3711                           	
  3712  20B9                     _RF_Main:	
  3713                           	opt	stack 2
  3714                           ; Regs used in _RF_Main: [wreg+fsr1l-status,0+pclath+cstack]
  3715                           	line	27
  3716                           	
  3717  20B9                     l25726:	
  3718                           ;RF_Control_B1.c: 27: setRF_Main(1);
  3719  20B9  3001               	movlw	(01h)
  3720  20BA  3197  274E  31A0   	fcall	_setRF_Main
  3721                           	line	29
  3722                           	
  3723  20BD                     l15195:	
  3724  20BD  0008               	return
  3725                           	opt stack 0
  3726                           GLOBAL	__end_of_RF_Main
  3727  20BE                     	__end_of_RF_Main:
  3728 ;; =============== function _RF_Main ends ============
  3729                           
  3730                           	signat	_RF_Main,88
  3731                           	global	_setRF_Main
  3732                           psect	text4085,local,class=CODE,delta=2
  3733                           global __ptext4085
  3734  174E                     __ptext4085:
  3735                           
  3736 ;; *************** function _setRF_Main *****************
  3737 ;; Defined at:
  3738 ;;		line 59 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
  3739 ;; Parameters:    Size  Location     Type
  3740 ;;  rf              1    wreg     unsigned char 
  3741 ;; Auto vars:     Size  Location     Type
  3742 ;;  rf              1   74[BANK0 ] unsigned char 
  3743 ;; Return value:  Size  Location     Type
  3744 ;;		None               void
  3745 ;; Registers used:
  3746 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3747 ;; Tracked objects:
  3748 ;;		On entry : 0/0
  3749 ;;		On exit  : 0/0
  3750 ;;		Unchanged: 0/0
  3751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  3752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  3753 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  3754 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  3755 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
  3756 ;;Total ram usage:        3 bytes
  3757 ;; Hardware stack levels used:    1
  3758 ;; Hardware stack levels required when called:   12
  3759 ;; This function calls:
  3760 ;;		_RfPointSelect
  3761 ;;		_CC2500_RxData
  3762 ;;		_getRxData
  3763 ;;		_CC2500_WriteCommand
  3764 ;;		_setINT_GO
  3765 ;;		_RF_RxDisable
  3766 ;;		_CC2500_TxData
  3767 ;; This function is called by:
  3768 ;;		_RF_Main
  3769 ;; This function uses a non-reentrant model
  3770 ;;
  3771                           psect	text4085
  3772                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
  3773                           	line	59
  3774                           	global	__size_of_setRF_Main
  3775  00B2                     	__size_of_setRF_Main	equ	__end_of_setRF_Main-_setRF_Main
  3776                           	
  3777  174E                     _setRF_Main:	
  3778                           	opt	stack 2
  3779                           ; Regs used in _setRF_Main: [wreg+fsr1l-status,0+pclath+cstack]
  3780                           ;setRF_Main@rf stored from wreg
  3781  174E  0020               	movlb 0	; select bank0
  3782  174F  00EA               	movwf	(setRF_Main@rf)
  3783                           	line	60
  3784                           	
  3785  1750                     l25668:	
  3786                           ;RF_Control_B1.c: 60: RfPointSelect(rf);
  3787  1750  086A               	movf	(setRF_Main@rf),w
  3788  1751  31A2  2202  3197   	fcall	_RfPointSelect
  3789                           	line	61
  3790                           	
  3791  1754                     l25670:	
  3792                           ;RF_Control_B1.c: 61: if(RF->Enable)
  3793  1754  087B               	movf	(_RF),w
  3794  1755  0086               	movwf	fsr1l
  3795  1756  0187               	clrf fsr1h	
  3796                           	
  3797  1757  1C01               	btfss	indf1,0
  3798  1758  2F5A               	goto	u10541
  3799  1759  2F5B               	goto	u10540
  3800  175A                     u10541:
  3801  175A  2FFF               	goto	l15223
  3802  175B                     u10540:
  3803                           	line	72
  3804                           	
  3805  175B                     l25672:	
  3806                           ;RF_Control_B1.c: 62: {
  3807                           ;RF_Control_B1.c: 72: RF->Key=((RA6 || RA4 || RA0 || RB1) && !RF->Learn)?1:0;
  3808  175B  0020               	movlb 0	; select bank0
  3809  175C  01EB               	clrf	(_setRF_Main$19191)
  3810  175D  1B0C               	btfsc	(102/8),(102)&7
  3811  175E  2F60               	goto	u10551
  3812  175F  2F61               	goto	u10550
  3813  1760                     u10551:
  3814  1760  2F6E               	goto	l25680
  3815  1761                     u10550:
  3816                           	
  3817  1761                     l25674:	
  3818  1761  1A0C               	btfsc	(100/8),(100)&7
  3819  1762  2F64               	goto	u10561
  3820  1763  2F65               	goto	u10560
  3821  1764                     u10561:
  3822  1764  2F6E               	goto	l25680
  3823  1765                     u10560:
  3824                           	
  3825  1765                     l25676:	
  3826  1765  180C               	btfsc	(96/8),(96)&7
  3827  1766  2F68               	goto	u10571
  3828  1767  2F69               	goto	u10570
  3829  1768                     u10571:
  3830  1768  2F6E               	goto	l25680
  3831  1769                     u10570:
  3832                           	
  3833  1769                     l25678:	
  3834  1769  1C8D               	btfss	(105/8),(105)&7
  3835  176A  2F6C               	goto	u10581
  3836  176B  2F6D               	goto	u10580
  3837  176C                     u10581:
  3838  176C  2F79               	goto	l25684
  3839  176D                     u10580:
  3840  176D  2F6E               	goto	l25680
  3841                           	
  3842  176E                     l24458:	
  3843                           	
  3844  176E                     l25680:	
  3845  176E  087B               	movf	(_RF),w
  3846  176F  0086               	movwf	fsr1l
  3847  1770  0187               	clrf fsr1h	
  3848                           	
  3849  1771  1B01               	btfsc	indf1,6
  3850  1772  2F74               	goto	u10591
  3851  1773  2F75               	goto	u10590
  3852  1774                     u10591:
  3853  1774  2F79               	goto	l25684
  3854  1775                     u10590:
  3855                           	
  3856  1775                     l25682:	
  3857  1775  01EB               	clrf	(_setRF_Main$19191)
  3858  1776  1403               	bsf	status,0
  3859  1777  0DEB               	rlf	(_setRF_Main$19191),f
  3860  1778  2F79               	goto	l25684
  3861                           	
  3862  1779                     l15212:	
  3863                           	
  3864  1779                     l25684:	
  3865  1779  087B               	movf	(_RF),w
  3866  177A  0086               	movwf	fsr1l
  3867  177B  0187               	clrf fsr1h	
  3868                           	
  3869  177C  086B               	movf	(_setRF_Main$19191),w
  3870  177D  1381               	bcf	indf1,7
  3871  177E  1D03               	skipz
  3872  177F  1781               	bsf	indf1,7
  3873                           	line	76
  3874                           	
  3875  1780                     l25686:	
  3876                           ;RF_Control_B1.c: 76: if(!RF->Key)
  3877  1780  087B               	movf	(_RF),w
  3878  1781  0086               	movwf	fsr1l
  3879  1782  0187               	clrf fsr1h	
  3880                           	
  3881  1783  1B81               	btfsc	indf1,7
  3882  1784  2F86               	goto	u10601
  3883  1785  2F87               	goto	u10600
  3884  1786                     u10601:
  3885  1786  2FBC               	goto	l25708
  3886  1787                     u10600:
  3887                           	line	78
  3888                           	
  3889  1787                     l25688:	
  3890                           ;RF_Control_B1.c: 77: {
  3891                           ;RF_Control_B1.c: 78: if(RF->ReceiveGO)
  3892  1787  087B               	movf	(_RF),w
  3893  1788  0086               	movwf	fsr1l
  3894  1789  0187               	clrf fsr1h	
  3895                           	
  3896  178A  1C81               	btfss	indf1,1
  3897  178B  2F8D               	goto	u10611
  3898  178C  2F8E               	goto	u10610
  3899  178D                     u10611:
  3900  178D  2F9A               	goto	l25696
  3901  178E                     u10610:
  3902                           	line	80
  3903                           	
  3904  178E                     l25690:	
  3905                           ;RF_Control_B1.c: 79: {
  3906                           ;RF_Control_B1.c: 80: RF->ReceiveGO=0;
  3907  178E  087B               	movf	(_RF),w
  3908  178F  0086               	movwf	fsr1l
  3909  1790  0187               	clrf fsr1h	
  3910                           	
  3911  1791  1081               	bcf	indf1,1
  3912                           	line	81
  3913                           	
  3914  1792                     l25692:	
  3915                           ;RF_Control_B1.c: 81: CC2500_RxData();
  3916  1792  3190  20CE  3197   	fcall	_CC2500_RxData
  3917                           	line	87
  3918                           	
  3919  1795                     l25694:	
  3920                           ;RF_Control_B1.c: 87: getRxData(1);
  3921  1795  3001               	movlw	(01h)
  3922  1796  319E  2696  3197   	fcall	_getRxData
  3923                           	line	90
  3924                           ;RF_Control_B1.c: 90: }
  3925  1799  2FC1               	goto	l25710
  3926                           	line	91
  3927                           	
  3928  179A                     l15214:	
  3929                           	line	93
  3930                           	
  3931  179A                     l25696:	
  3932                           ;RF_Control_B1.c: 91: else
  3933                           ;RF_Control_B1.c: 92: {
  3934                           ;RF_Control_B1.c: 93: if(!RF->TransceiveGO)
  3935  179A  087B               	movf	(_RF),w
  3936  179B  0086               	movwf	fsr1l
  3937  179C  0187               	clrf fsr1h	
  3938                           	
  3939  179D  1901               	btfsc	indf1,2
  3940  179E  2FA0               	goto	u10621
  3941  179F  2FA1               	goto	u10620
  3942  17A0                     u10621:
  3943  17A0  2FC1               	goto	l25710
  3944  17A1                     u10620:
  3945                           	line	96
  3946                           	
  3947  17A1                     l25698:	
  3948                           ;RF_Control_B1.c: 94: {
  3949                           ;RF_Control_B1.c: 96: if(!RF->RxStatus)
  3950  17A1  087B               	movf	(_RF),w
  3951  17A2  0086               	movwf	fsr1l
  3952  17A3  0187               	clrf fsr1h	
  3953                           	
  3954  17A4  1981               	btfsc	indf1,3
  3955  17A5  2FA7               	goto	u10631
  3956  17A6  2FA8               	goto	u10630
  3957  17A7                     u10631:
  3958  17A7  2FC1               	goto	l25710
  3959  17A8                     u10630:
  3960                           	line	98
  3961                           	
  3962  17A8                     l25700:	
  3963                           ;RF_Control_B1.c: 97: {
  3964                           ;RF_Control_B1.c: 98: RF->RxStatus=1;
  3965  17A8  087B               	movf	(_RF),w
  3966  17A9  0086               	movwf	fsr1l
  3967  17AA  0187               	clrf fsr1h	
  3968                           	
  3969  17AB  1581               	bsf	indf1,3
  3970                           	line	99
  3971                           	
  3972  17AC                     l25702:	
  3973                           ;RF_Control_B1.c: 99: CC2500_WriteCommand(0x36);
  3974  17AC  3036               	movlw	(036h)
  3975  17AD  31A3  236B  3197   	fcall	_CC2500_WriteCommand
  3976                           	line	100
  3977                           	
  3978  17B0                     l25704:	
  3979                           ;RF_Control_B1.c: 100: CC2500_WriteCommand(0x34);
  3980  17B0  3034               	movlw	(034h)
  3981  17B1  31A3  236B  3197   	fcall	_CC2500_WriteCommand
  3982                           	line	101
  3983                           	
  3984  17B4                     l25706:	
  3985                           ;RF_Control_B1.c: 101: setINT_GO(1);
  3986  17B4  3001               	movlw	(01h)
  3987  17B5  31A1  2119  3197   	fcall	_setINT_GO
  3988  17B8  2FC1               	goto	l25710
  3989                           	line	102
  3990                           	
  3991  17B9                     l15217:	
  3992  17B9  2FC1               	goto	l25710
  3993                           	line	104
  3994                           	
  3995  17BA                     l15216:	
  3996  17BA  2FC1               	goto	l25710
  3997                           	line	105
  3998                           	
  3999  17BB                     l15215:	
  4000                           	line	106
  4001                           ;RF_Control_B1.c: 102: }
  4002                           ;RF_Control_B1.c: 104: }
  4003                           ;RF_Control_B1.c: 105: }
  4004                           ;RF_Control_B1.c: 106: }
  4005  17BB  2FC1               	goto	l25710
  4006                           	line	107
  4007                           	
  4008  17BC                     l15213:	
  4009                           	line	109
  4010                           	
  4011  17BC                     l25708:	
  4012                           ;RF_Control_B1.c: 107: else
  4013                           ;RF_Control_B1.c: 108: {
  4014                           ;RF_Control_B1.c: 109: RF_RxDisable(1);
  4015  17BC  3001               	movlw	(01h)
  4016  17BD  31A5  25AB  3197   	fcall	_RF_RxDisable
  4017  17C0  2FC1               	goto	l25710
  4018                           	line	110
  4019                           	
  4020  17C1                     l15218:	
  4021                           	line	111
  4022                           	
  4023  17C1                     l25710:	
  4024                           ;RF_Control_B1.c: 110: }
  4025                           ;RF_Control_B1.c: 111: if(RF->TransceiveGO)
  4026  17C1  087B               	movf	(_RF),w
  4027  17C2  0086               	movwf	fsr1l
  4028  17C3  0187               	clrf fsr1h	
  4029                           	
  4030  17C4  1D01               	btfss	indf1,2
  4031  17C5  2FC7               	goto	u10641
  4032  17C6  2FC8               	goto	u10640
  4033  17C7                     u10641:
  4034  17C7  2FFF               	goto	l15223
  4035  17C8                     u10640:
  4036                           	line	113
  4037                           	
  4038  17C8                     l25712:	
  4039                           ;RF_Control_B1.c: 112: {
  4040                           ;RF_Control_B1.c: 113: RF_RxDisable(1);
  4041  17C8  3001               	movlw	(01h)
  4042  17C9  31A5  25AB  3197   	fcall	_RF_RxDisable
  4043                           	line	114
  4044                           	
  4045  17CC                     l25714:	
  4046                           ;RF_Control_B1.c: 114: if(!RF->Debounce)
  4047  17CC  087B               	movf	(_RF),w
  4048  17CD  0086               	movwf	fsr1l
  4049  17CE  0187               	clrf fsr1h	
  4050                           	
  4051  17CF  1A81               	btfsc	indf1,5
  4052  17D0  2FD2               	goto	u10651
  4053  17D1  2FD3               	goto	u10650
  4054  17D2                     u10651:
  4055  17D2  2FF1               	goto	l25722
  4056  17D3                     u10650:
  4057                           	line	116
  4058                           	
  4059  17D3                     l25716:	
  4060                           ;RF_Control_B1.c: 115: {
  4061                           ;RF_Control_B1.c: 116: RF->DebounceTime++;
  4062  17D3  3001               	movlw	(01h)
  4063  17D4  0020               	movlb 0	; select bank0
  4064  17D5  00E9               	movwf	(??_setRF_Main+0)+0
  4065  17D6  087B               	movf	(_RF),w
  4066  17D7  3E01               	addlw	01h
  4067  17D8  0086               	movwf	fsr1l
  4068  17D9  0187               	clrf fsr1h	
  4069                           	
  4070  17DA  0869               	movf	(??_setRF_Main+0)+0,w
  4071  17DB  0781               	addwf	indf1,f
  4072                           	line	117
  4073                           	
  4074  17DC                     l25718:	
  4075                           ;RF_Control_B1.c: 117: if(RF->DebounceTime == 25)
  4076  17DC  087B               	movf	(_RF),w
  4077  17DD  3E01               	addlw	01h
  4078  17DE  0086               	movwf	fsr1l
  4079  17DF  0187               	clrf fsr1h	
  4080                           	
  4081  17E0  0801               	movf	indf1,w
  4082  17E1  3A19               	xorlw	019h&0ffh
  4083  17E2  1D03               	skipz
  4084  17E3  2FE5               	goto	u10661
  4085  17E4  2FE6               	goto	u10660
  4086  17E5                     u10661:
  4087  17E5  2FFF               	goto	l15223
  4088  17E6                     u10660:
  4089                           	line	119
  4090                           	
  4091  17E6                     l25720:	
  4092                           ;RF_Control_B1.c: 118: {
  4093                           ;RF_Control_B1.c: 119: RF->DebounceTime=0;
  4094  17E6  087B               	movf	(_RF),w
  4095  17E7  3E01               	addlw	01h
  4096  17E8  0086               	movwf	fsr1l
  4097  17E9  0187               	clrf fsr1h	
  4098                           	
  4099  17EA  0181               	clrf	indf1
  4100                           	line	120
  4101                           ;RF_Control_B1.c: 120: RF->Debounce=1;
  4102  17EB  087B               	movf	(_RF),w
  4103  17EC  0086               	movwf	fsr1l
  4104  17ED  0187               	clrf fsr1h	
  4105                           	
  4106  17EE  1681               	bsf	indf1,5
  4107  17EF  2FFF               	goto	l15223
  4108                           	line	121
  4109                           	
  4110  17F0                     l15221:	
  4111                           	line	122
  4112                           ;RF_Control_B1.c: 121: }
  4113                           ;RF_Control_B1.c: 122: }
  4114  17F0  2FFF               	goto	l15223
  4115                           	line	123
  4116                           	
  4117  17F1                     l15220:	
  4118                           	line	125
  4119                           	
  4120  17F1                     l25722:	
  4121                           ;RF_Control_B1.c: 123: else
  4122                           ;RF_Control_B1.c: 124: {
  4123                           ;RF_Control_B1.c: 125: RF->Debounce=0;
  4124  17F1  087B               	movf	(_RF),w
  4125  17F2  0086               	movwf	fsr1l
  4126  17F3  0187               	clrf fsr1h	
  4127                           	
  4128  17F4  1281               	bcf	indf1,5
  4129                           	line	126
  4130                           ;RF_Control_B1.c: 126: RF->TransceiveGO=0;
  4131  17F5  087B               	movf	(_RF),w
  4132  17F6  0086               	movwf	fsr1l
  4133  17F7  0187               	clrf fsr1h	
  4134                           	
  4135  17F8  1101               	bcf	indf1,2
  4136                           	line	127
  4137                           	
  4138  17F9                     l25724:	
  4139                           ;RF_Control_B1.c: 127: CC2500_TxData();
  4140  17F9  3190  2000  3197   	fcall	_CC2500_TxData
  4141  17FC  2FFF               	goto	l15223
  4142                           	line	128
  4143                           	
  4144  17FD                     l15222:	
  4145  17FD  2FFF               	goto	l15223
  4146                           	line	129
  4147                           	
  4148  17FE                     l15219:	
  4149  17FE  2FFF               	goto	l15223
  4150                           	line	130
  4151                           	
  4152  17FF                     l15210:	
  4153                           	line	131
  4154                           	
  4155  17FF                     l15223:	
  4156  17FF  0008               	return
  4157                           	opt stack 0
  4158                           GLOBAL	__end_of_setRF_Main
  4159  1800                     	__end_of_setRF_Main:
  4160 ;; =============== function _setRF_Main ends ============
  4161                           
  4162                           	signat	_setRF_Main,4216
  4163                           	global	_getRxData
  4164                           psect	text4086,local,class=CODE,delta=2
  4165                           global __ptext4086
  4166  1E96                     __ptext4086:
  4167                           
  4168 ;; *************** function _getRxData *****************
  4169 ;; Defined at:
  4170 ;;		line 208 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
  4171 ;; Parameters:    Size  Location     Type
  4172 ;;  rf              1    wreg     unsigned char 
  4173 ;; Auto vars:     Size  Location     Type
  4174 ;;  rf              1   72[BANK0 ] unsigned char 
  4175 ;;  i               1    0        unsigned char 
  4176 ;; Return value:  Size  Location     Type
  4177 ;;		None               void
  4178 ;; Registers used:
  4179 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4180 ;; Tracked objects:
  4181 ;;		On entry : 0/0
  4182 ;;		On exit  : 0/0
  4183 ;;		Unchanged: 0/0
  4184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  4185 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4186 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  4187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4188 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  4189 ;;Total ram usage:        1 bytes
  4190 ;; Hardware stack levels used:    1
  4191 ;; Hardware stack levels required when called:   11
  4192 ;; This function calls:
  4193 ;;		_RfPointSelect
  4194 ;;		_setLog_Code
  4195 ;;		_setControl_Lights_Table
  4196 ;; This function is called by:
  4197 ;;		_setRF_Main
  4198 ;; This function uses a non-reentrant model
  4199 ;;
  4200                           psect	text4086
  4201                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
  4202                           	line	208
  4203                           	global	__size_of_getRxData
  4204  0078                     	__size_of_getRxData	equ	__end_of_getRxData-_getRxData
  4205                           	
  4206  1E96                     _getRxData:	
  4207                           	opt	stack 2
  4208                           ; Regs used in _getRxData: [wreg+fsr1l-status,0+pclath+cstack]
  4209                           ;getRxData@rf stored from wreg
  4210                           	line	210
  4211  1E96  0020               	movlb 0	; select bank0
  4212  1E97  00E8               	movwf	(getRxData@rf)
  4213                           	
  4214  1E98                     l25628:	
  4215                           ;RF_Control_B1.c: 209: unsigned char i;
  4216                           ;RF_Control_B1.c: 210: RfPointSelect(rf);
  4217  1E98  0868               	movf	(getRxData@rf),w
  4218  1E99  31A2  2202  319E   	fcall	_RfPointSelect
  4219                           	line	211
  4220                           	
  4221  1E9C                     l25630:	
  4222                           ;RF_Control_B1.c: 211: if(RF->Learn)
  4223  1E9C  087B               	movf	(_RF),w
  4224  1E9D  0086               	movwf	fsr1l
  4225  1E9E  0187               	clrf fsr1h	
  4226                           	
  4227  1E9F  1F01               	btfss	indf1,6
  4228  1EA0  2EA2               	goto	u10431
  4229  1EA1  2EA3               	goto	u10430
  4230  1EA2                     u10431:
  4231  1EA2  2EB5               	goto	l25638
  4232  1EA3                     u10430:
  4233                           	line	213
  4234                           	
  4235  1EA3                     l25632:	
  4236                           ;RF_Control_B1.c: 212: {
  4237                           ;RF_Control_B1.c: 213: if(RF_Data[0] == 0x0 && RF_Data[1] == 0x64)
  4238  1EA3  0021               	movlb 1	; select bank1
  4239  1EA4  08A0               	movf	(_RF_Data)^080h,f
  4240  1EA5  1D03               	skipz
  4241  1EA6  2EA8               	goto	u10441
  4242  1EA7  2EA9               	goto	u10440
  4243  1EA8                     u10441:
  4244  1EA8  2F0D               	goto	l15249
  4245  1EA9                     u10440:
  4246                           	
  4247  1EA9                     l25634:	
  4248  1EA9  0821               	movf	0+(_RF_Data)^080h+01h,w
  4249  1EAA  3A64               	xorlw	064h&0ffh
  4250  1EAB  1D03               	skipz
  4251  1EAC  2EAE               	goto	u10451
  4252  1EAD  2EAF               	goto	u10450
  4253  1EAE                     u10451:
  4254  1EAE  2F0D               	goto	l15249
  4255  1EAF                     u10450:
  4256                           	line	215
  4257                           	
  4258  1EAF                     l25636:	
  4259                           ;RF_Control_B1.c: 214: {
  4260                           ;RF_Control_B1.c: 215: setLog_Code(1);
  4261  1EAF  3001               	movlw	(01h)
  4262  1EB0  319A  2274  319E   	fcall	_setLog_Code
  4263  1EB3  2F0D               	goto	l15249
  4264                           	line	216
  4265                           	
  4266  1EB4                     l15239:	
  4267                           	line	217
  4268                           ;RF_Control_B1.c: 216: }
  4269                           ;RF_Control_B1.c: 217: }
  4270  1EB4  2F0D               	goto	l15249
  4271                           	line	218
  4272                           	
  4273  1EB5                     l15238:	
  4274                           	line	220
  4275                           	
  4276  1EB5                     l25638:	
  4277                           ;RF_Control_B1.c: 218: else
  4278                           ;RF_Control_B1.c: 219: {
  4279                           ;RF_Control_B1.c: 220: if(RF_Data[0] == 0x00 && RF_Data[1] == 0x02)
  4280  1EB5  0021               	movlb 1	; select bank1
  4281  1EB6  08A0               	movf	(_RF_Data)^080h,f
  4282  1EB7  1D03               	skipz
  4283  1EB8  2EBA               	goto	u10461
  4284  1EB9  2EBB               	goto	u10460
  4285  1EBA                     u10461:
  4286  1EBA  2F0D               	goto	l15249
  4287  1EBB                     u10460:
  4288                           	
  4289  1EBB                     l25640:	
  4290  1EBB  0821               	movf	0+(_RF_Data)^080h+01h,w
  4291  1EBC  3A02               	xorlw	02h&0ffh
  4292  1EBD  1D03               	skipz
  4293  1EBE  2EC0               	goto	u10471
  4294  1EBF  2EC1               	goto	u10470
  4295  1EC0                     u10471:
  4296  1EC0  2F0D               	goto	l15249
  4297  1EC1                     u10470:
  4298                           	line	222
  4299                           	
  4300  1EC1                     l25642:	
  4301                           ;RF_Control_B1.c: 221: {
  4302                           ;RF_Control_B1.c: 222: if(RF_Data[12] == 0xff && RF_Data[13] == 0xff && RF_Data[14] == 0
                                 xff)
  4303  1EC1  082C               	movf	0+(_RF_Data)^080h+0Ch,w
  4304  1EC2  3AFF               	xorlw	0FFh&0ffh
  4305  1EC3  1D03               	skipz
  4306  1EC4  2EC6               	goto	u10481
  4307  1EC5  2EC7               	goto	u10480
  4308  1EC6                     u10481:
  4309  1EC6  2ED5               	goto	l25650
  4310  1EC7                     u10480:
  4311                           	
  4312  1EC7                     l25644:	
  4313  1EC7  082D               	movf	0+(_RF_Data)^080h+0Dh,w
  4314  1EC8  3AFF               	xorlw	0FFh&0ffh
  4315  1EC9  1D03               	skipz
  4316  1ECA  2ECC               	goto	u10491
  4317  1ECB  2ECD               	goto	u10490
  4318  1ECC                     u10491:
  4319  1ECC  2ED5               	goto	l25650
  4320  1ECD                     u10490:
  4321                           	
  4322  1ECD                     l25646:	
  4323  1ECD  082E               	movf	0+(_RF_Data)^080h+0Eh,w
  4324  1ECE  3AFF               	xorlw	0FFh&0ffh
  4325  1ECF  1D03               	skipz
  4326  1ED0  2ED2               	goto	u10501
  4327  1ED1  2ED3               	goto	u10500
  4328  1ED2                     u10501:
  4329  1ED2  2ED5               	goto	l25650
  4330  1ED3                     u10500:
  4331                           	line	224
  4332                           	
  4333  1ED3                     l25648:	
  4334                           ;RF_Control_B1.c: 223: {
  4335                           ;RF_Control_B1.c: 224: _nop();
  4336  1ED3  0000               	nop
  4337                           	line	225
  4338                           ;RF_Control_B1.c: 225: }
  4339  1ED4  2F0D               	goto	l15249
  4340                           	line	226
  4341                           	
  4342  1ED5                     l15242:	
  4343                           	line	228
  4344                           	
  4345  1ED5                     l25650:	
  4346                           ;RF_Control_B1.c: 226: else
  4347                           ;RF_Control_B1.c: 227: {
  4348                           ;RF_Control_B1.c: 228: if(RF_Data[12] == Product->Data[12] && RF_Data[13] == Product->Da
                                 ta[13] && RF_Data[14] == Product->Data[14])
  4349  1ED5  0020               	movlb 0	; select bank0
  4350  1ED6  086F               	movf	(_Product),w
  4351  1ED7  3E0C               	addlw	0Ch
  4352  1ED8  0086               	movwf	fsr1l
  4353  1ED9  3001               	movlw 1	; select bank2/3
  4354  1EDA  0087               	movwf fsr1h	
  4355                           	
  4356  1EDB  0021               	movlb 1	; select bank1
  4357  1EDC  082C               	movf	0+(_RF_Data)^080h+0Ch,w
  4358  1EDD  0601               	xorwf	indf1,w
  4359  1EDE  1D03               	skipz
  4360  1EDF  2EE1               	goto	u10511
  4361  1EE0  2EE2               	goto	u10510
  4362  1EE1                     u10511:
  4363  1EE1  2F0D               	goto	l15249
  4364  1EE2                     u10510:
  4365                           	
  4366  1EE2                     l25652:	
  4367  1EE2  0020               	movlb 0	; select bank0
  4368  1EE3  086F               	movf	(_Product),w
  4369  1EE4  3E0D               	addlw	0Dh
  4370  1EE5  0086               	movwf	fsr1l
  4371  1EE6  3001               	movlw 1	; select bank2/3
  4372  1EE7  0087               	movwf fsr1h	
  4373                           	
  4374  1EE8  0021               	movlb 1	; select bank1
  4375  1EE9  082D               	movf	0+(_RF_Data)^080h+0Dh,w
  4376  1EEA  0601               	xorwf	indf1,w
  4377  1EEB  1D03               	skipz
  4378  1EEC  2EEE               	goto	u10521
  4379  1EED  2EEF               	goto	u10520
  4380  1EEE                     u10521:
  4381  1EEE  2F0D               	goto	l15249
  4382  1EEF                     u10520:
  4383                           	
  4384  1EEF                     l25654:	
  4385  1EEF  0020               	movlb 0	; select bank0
  4386  1EF0  086F               	movf	(_Product),w
  4387  1EF1  3E0E               	addlw	0Eh
  4388  1EF2  0086               	movwf	fsr1l
  4389  1EF3  3001               	movlw 1	; select bank2/3
  4390  1EF4  0087               	movwf fsr1h	
  4391                           	
  4392  1EF5  0021               	movlb 1	; select bank1
  4393  1EF6  082E               	movf	0+(_RF_Data)^080h+0Eh,w
  4394  1EF7  0601               	xorwf	indf1,w
  4395  1EF8  1D03               	skipz
  4396  1EF9  2EFB               	goto	u10531
  4397  1EFA  2EFC               	goto	u10530
  4398  1EFB                     u10531:
  4399  1EFB  2F0D               	goto	l15249
  4400  1EFC                     u10530:
  4401                           	line	230
  4402                           	
  4403  1EFC                     l25656:	
  4404                           ;RF_Control_B1.c: 229: {
  4405                           ;RF_Control_B1.c: 230: setControl_Lights_Table(1);
  4406  1EFC  3001               	movlw	(01h)
  4407  1EFD  3191  21C7  319E   	fcall	_setControl_Lights_Table
  4408  1F00  2F0D               	goto	l15249
  4409                           	line	231
  4410                           	
  4411  1F01                     l15244:	
  4412  1F01  2F0D               	goto	l15249
  4413                           	line	232
  4414                           	
  4415  1F02                     l15243:	
  4416                           	line	233
  4417                           ;RF_Control_B1.c: 231: }
  4418                           ;RF_Control_B1.c: 232: }
  4419                           ;RF_Control_B1.c: 233: }
  4420  1F02  2F0D               	goto	l15249
  4421                           	line	234
  4422                           	
  4423  1F03                     l15241:	
  4424  1F03  2F0D               	goto	l15249
  4425                           	
  4426  1F04                     l25658:	
  4427  1F04  2F0D               	goto	l15249
  4428                           	
  4429  1F05                     l25660:	
  4430  1F05  2F0D               	goto	l15249
  4431                           	line	237
  4432                           	
  4433  1F06                     l25662:	
  4434                           ;RF_Control_B1.c: 235: {
  4435                           ;RF_Control_B1.c: 236: ;
  4436                           ;RF_Control_B1.c: 237: }
  4437  1F06  2F0D               	goto	l15249
  4438                           	line	238
  4439                           	
  4440  1F07                     l15246:	
  4441  1F07  2F0D               	goto	l15249
  4442                           	
  4443  1F08                     l25664:	
  4444  1F08  2F0D               	goto	l15249
  4445                           	
  4446  1F09                     l25666:	
  4447  1F09  2F0D               	goto	l15249
  4448                           	line	241
  4449                           ;RF_Control_B1.c: 239: {
  4450                           ;RF_Control_B1.c: 240: ;
  4451                           	
  4452  1F0A                     l15248:	
  4453  1F0A  2F0D               	goto	l15249
  4454                           	line	246
  4455                           	
  4456  1F0B                     l15247:	
  4457  1F0B  2F0D               	goto	l15249
  4458                           	
  4459  1F0C                     l15245:	
  4460  1F0C  2F0D               	goto	l15249
  4461                           	
  4462  1F0D                     l15240:	
  4463                           	line	247
  4464                           	
  4465  1F0D                     l15249:	
  4466  1F0D  0008               	return
  4467                           	opt stack 0
  4468                           GLOBAL	__end_of_getRxData
  4469  1F0E                     	__end_of_getRxData:
  4470 ;; =============== function _getRxData ends ============
  4471                           
  4472                           	signat	_getRxData,4216
  4473                           	global	_setControl_Lights_Table
  4474                           psect	text4087,local,class=CODE,delta=2
  4475                           global __ptext4087
  4476  11C7                     __ptext4087:
  4477                           
  4478 ;; *************** function _setControl_Lights_Table *****************
  4479 ;; Defined at:
  4480 ;;		line 265 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
  4481 ;; Parameters:    Size  Location     Type
  4482 ;;  rf              1    wreg     unsigned char 
  4483 ;; Auto vars:     Size  Location     Type
  4484 ;;  rf              1   71[BANK0 ] unsigned char 
  4485 ;; Return value:  Size  Location     Type
  4486 ;;		None               void
  4487 ;; Registers used:
  4488 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4489 ;; Tracked objects:
  4490 ;;		On entry : 0/0
  4491 ;;		On exit  : 0/0
  4492 ;;		Unchanged: 0/0
  4493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  4494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4495 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  4496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4497 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  4498 ;;Total ram usage:        1 bytes
  4499 ;; Hardware stack levels used:    1
  4500 ;; Hardware stack levels required when called:   10
  4501 ;; This function calls:
  4502 ;;		_RfPointSelect
  4503 ;;		_setDimmerLights
  4504 ;;		_setRFSW_Status
  4505 ;;		_setSw_Status
  4506 ;;		_setBuz
  4507 ;;		_setTxData
  4508 ;;		_setRFSW_Control
  4509 ;;		_setRFSW_AdjControl
  4510 ;; This function is called by:
  4511 ;;		_getRxData
  4512 ;; This function uses a non-reentrant model
  4513 ;;
  4514                           psect	text4087
  4515                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
  4516                           	line	265
  4517                           	global	__size_of_setControl_Lights_Table
  4518  007F                     	__size_of_setControl_Lights_Table	equ	__end_of_setControl_Lights_Table-_setControl_Ligh
                                 ts_Table
  4519                           	
  4520  11C7                     _setControl_Lights_Table:	
  4521                           	opt	stack 2
  4522                           ; Regs used in _setControl_Lights_Table: [wreg+fsr1l-status,0+pclath+cstack]
  4523                           ;setControl_Lights_Table@rf stored from wreg
  4524  11C7  0020               	movlb 0	; select bank0
  4525  11C8  00E7               	movwf	(setControl_Lights_Table@rf)
  4526                           	line	266
  4527                           	
  4528  11C9                     l25600:	
  4529                           ;RF_Control_B1.c: 266: RfPointSelect(rf);
  4530  11C9  0867               	movf	(setControl_Lights_Table@rf),w
  4531  11CA  31A2  2202  3191   	fcall	_RfPointSelect
  4532                           	line	267
  4533                           	
  4534  11CD                     l25602:	
  4535                           ;RF_Control_B1.c: 267: if(RF_Data[15] == 0x00)
  4536  11CD  0021               	movlb 1	; select bank1
  4537  11CE  08AF               	movf	0+(_RF_Data)^080h+0Fh,f
  4538  11CF  1D03               	skipz
  4539  11D0  29D2               	goto	u10391
  4540  11D1  29D3               	goto	u10390
  4541  11D2                     u10391:
  4542  11D2  2A0B               	goto	l25614
  4543  11D3                     u10390:
  4544                           	line	270
  4545                           	
  4546  11D3                     l25604:	
  4547                           ;RF_Control_B1.c: 268: {
  4548                           ;RF_Control_B1.c: 270: setDimmerLights(1,0);
  4549  11D3  0020               	movlb 0	; select bank0
  4550  11D4  01A4               	clrf	(?_setDimmerLights)
  4551  11D5  3001               	movlw	(01h)
  4552  11D6  3196  2605  3191   	fcall	_setDimmerLights
  4553                           	line	271
  4554                           ;RF_Control_B1.c: 271: setRFSW_Status(1,0);
  4555  11D9  0020               	movlb 0	; select bank0
  4556  11DA  01A2               	clrf	(?_setRFSW_Status)
  4557  11DB  3001               	movlw	(01h)
  4558  11DC  31A2  2297  3191   	fcall	_setRFSW_Status
  4559                           	line	272
  4560                           ;RF_Control_B1.c: 272: setSw_Status(1,0);
  4561  11DF  0020               	movlb 0	; select bank0
  4562  11E0  01A2               	clrf	(?_setSw_Status)
  4563  11E1  3001               	movlw	(01h)
  4564  11E2  31A2  2287  3191   	fcall	_setSw_Status
  4565                           	line	285
  4566                           	
  4567  11E5                     l25606:	
  4568                           ;RF_Control_B1.c: 285: Product->Data[9]=0;
  4569  11E5  0020               	movlb 0	; select bank0
  4570  11E6  086F               	movf	(_Product),w
  4571  11E7  3E09               	addlw	09h
  4572  11E8  0086               	movwf	fsr1l
  4573  11E9  3001               	movlw 1	; select bank2/3
  4574  11EA  0087               	movwf fsr1h	
  4575                           	
  4576  11EB  0181               	clrf	indf1
  4577                           	line	286
  4578                           	
  4579  11EC                     l25608:	
  4580                           ;RF_Control_B1.c: 286: Product->Data[11]=0;
  4581  11EC  086F               	movf	(_Product),w
  4582  11ED  3E0B               	addlw	0Bh
  4583  11EE  0086               	movwf	fsr1l
  4584  11EF  3001               	movlw 1	; select bank2/3
  4585  11F0  0087               	movwf fsr1h	
  4586                           	
  4587  11F1  0181               	clrf	indf1
  4588                           	line	287
  4589                           	
  4590  11F2                     l25610:	
  4591                           ;RF_Control_B1.c: 287: Product->Data[15]=0;
  4592  11F2  086F               	movf	(_Product),w
  4593  11F3  3E0F               	addlw	0Fh
  4594  11F4  0086               	movwf	fsr1l
  4595  11F5  3001               	movlw 1	; select bank2/3
  4596  11F6  0087               	movwf fsr1h	
  4597                           	
  4598  11F7  0181               	clrf	indf1
  4599                           	line	288
  4600                           	
  4601  11F8                     l25612:	
  4602                           ;RF_Control_B1.c: 288: Product->Data[17]=0;
  4603  11F8  086F               	movf	(_Product),w
  4604  11F9  3E11               	addlw	011h
  4605  11FA  0086               	movwf	fsr1l
  4606  11FB  3001               	movlw 1	; select bank2/3
  4607  11FC  0087               	movwf fsr1h	
  4608                           	
  4609  11FD  0181               	clrf	indf1
  4610                           	line	289
  4611                           ;RF_Control_B1.c: 289: setBuz(1,100);
  4612  11FE  3064               	movlw	low(064h)
  4613  11FF  00A6               	movwf	(?_setBuz)
  4614  1200  3000               	movlw	high(064h)
  4615  1201  00A7               	movwf	((?_setBuz))+1
  4616  1202  3001               	movlw	(01h)
  4617  1203  3192  22C6  3191   	fcall	_setBuz
  4618                           	line	290
  4619                           ;RF_Control_B1.c: 290: setTxData(1);
  4620  1206  3001               	movlw	(01h)
  4621  1207  318B  236C  3191   	fcall	_setTxData
  4622                           	line	291
  4623                           ;RF_Control_B1.c: 291: }
  4624  120A  2A45               	goto	l15263
  4625                           	line	292
  4626                           	
  4627  120B                     l15256:	
  4628                           	
  4629  120B                     l25614:	
  4630                           ;RF_Control_B1.c: 292: else if(RF_Data[15] == 0x20)
  4631  120B  0021               	movlb 1	; select bank1
  4632  120C  082F               	movf	0+(_RF_Data)^080h+0Fh,w
  4633  120D  3A20               	xorlw	020h&0ffh
  4634  120E  1D03               	skipz
  4635  120F  2A11               	goto	u10401
  4636  1210  2A12               	goto	u10400
  4637  1211                     u10401:
  4638  1211  2A2A               	goto	l25620
  4639  1212                     u10400:
  4640                           	line	294
  4641                           	
  4642  1212                     l25616:	
  4643                           ;RF_Control_B1.c: 293: {
  4644                           ;RF_Control_B1.c: 294: Product->Data[9]=0;
  4645  1212  0020               	movlb 0	; select bank0
  4646  1213  086F               	movf	(_Product),w
  4647  1214  3E09               	addlw	09h
  4648  1215  0086               	movwf	fsr1l
  4649  1216  3001               	movlw 1	; select bank2/3
  4650  1217  0087               	movwf fsr1h	
  4651                           	
  4652  1218  0181               	clrf	indf1
  4653                           	line	295
  4654                           ;RF_Control_B1.c: 295: Product->Data[11]=0;
  4655  1219  086F               	movf	(_Product),w
  4656  121A  3E0B               	addlw	0Bh
  4657  121B  0086               	movwf	fsr1l
  4658  121C  3001               	movlw 1	; select bank2/3
  4659  121D  0087               	movwf fsr1h	
  4660                           	
  4661  121E  0181               	clrf	indf1
  4662                           	line	296
  4663                           ;RF_Control_B1.c: 296: Product->Data[17]=0;
  4664  121F  086F               	movf	(_Product),w
  4665  1220  3E11               	addlw	011h
  4666  1221  0086               	movwf	fsr1l
  4667  1222  3001               	movlw 1	; select bank2/3
  4668  1223  0087               	movwf fsr1h	
  4669                           	
  4670  1224  0181               	clrf	indf1
  4671                           	line	297
  4672                           	
  4673  1225                     l25618:	
  4674                           ;RF_Control_B1.c: 297: setTxData(1);
  4675  1225  3001               	movlw	(01h)
  4676  1226  318B  236C  3191   	fcall	_setTxData
  4677                           	line	298
  4678                           ;RF_Control_B1.c: 298: }
  4679  1229  2A45               	goto	l15263
  4680                           	line	300
  4681                           	
  4682  122A                     l15258:	
  4683                           	
  4684  122A                     l25620:	
  4685                           ;RF_Control_B1.c: 300: else if(RF_Data[15] == 0x01)
  4686  122A  0021               	movlb 1	; select bank1
  4687  122B  082F               	movf	0+(_RF_Data)^080h+0Fh,w
  4688  122C  3A01               	xorlw	01h&0ffh
  4689  122D  1D03               	skipz
  4690  122E  2A30               	goto	u10411
  4691  122F  2A31               	goto	u10410
  4692  1230                     u10411:
  4693  1230  2A36               	goto	l25624
  4694  1231                     u10410:
  4695                           	line	302
  4696                           	
  4697  1231                     l25622:	
  4698                           ;RF_Control_B1.c: 301: {
  4699                           ;RF_Control_B1.c: 302: setRFSW_Control(1);
  4700  1231  3001               	movlw	(01h)
  4701  1232  3196  26A5  3191   	fcall	_setRFSW_Control
  4702                           	line	303
  4703                           ;RF_Control_B1.c: 303: }
  4704  1235  2A45               	goto	l15263
  4705                           	line	305
  4706                           	
  4707  1236                     l15260:	
  4708                           	
  4709  1236                     l25624:	
  4710                           ;RF_Control_B1.c: 305: else if(RF_Data[15] == 0x11)
  4711  1236  0021               	movlb 1	; select bank1
  4712  1237  082F               	movf	0+(_RF_Data)^080h+0Fh,w
  4713  1238  3A11               	xorlw	011h&0ffh
  4714  1239  1D03               	skipz
  4715  123A  2A3C               	goto	u10421
  4716  123B  2A3D               	goto	u10420
  4717  123C                     u10421:
  4718  123C  2A45               	goto	l15263
  4719  123D                     u10420:
  4720                           	line	307
  4721                           	
  4722  123D                     l25626:	
  4723                           ;RF_Control_B1.c: 306: {
  4724                           ;RF_Control_B1.c: 307: setRFSW_AdjControl(1);
  4725  123D  3001               	movlw	(01h)
  4726  123E  3199  215B  3191   	fcall	_setRFSW_AdjControl
  4727  1241  2A45               	goto	l15263
  4728                           	line	308
  4729                           	
  4730  1242                     l15262:	
  4731  1242  2A45               	goto	l15263
  4732                           	line	337
  4733                           	
  4734  1243                     l15261:	
  4735  1243  2A45               	goto	l15263
  4736                           	
  4737  1244                     l15259:	
  4738  1244  2A45               	goto	l15263
  4739                           	
  4740  1245                     l15257:	
  4741                           	
  4742  1245                     l15263:	
  4743  1245  0008               	return
  4744                           	opt stack 0
  4745                           GLOBAL	__end_of_setControl_Lights_Table
  4746  1246                     	__end_of_setControl_Lights_Table:
  4747 ;; =============== function _setControl_Lights_Table ends ============
  4748                           
  4749                           	signat	_setControl_Lights_Table,4216
  4750                           	global	_PowerFault_Main
  4751                           psect	text4088,local,class=CODE,delta=2
  4752                           global __ptext4088
  4753  2092                     __ptext4088:
  4754                           
  4755 ;; *************** function _PowerFault_Main *****************
  4756 ;; Defined at:
  4757 ;;		line 23 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\PowerFault_B1.c"
  4758 ;; Parameters:    Size  Location     Type
  4759 ;;		None
  4760 ;; Auto vars:     Size  Location     Type
  4761 ;;		None
  4762 ;; Return value:  Size  Location     Type
  4763 ;;		None               void
  4764 ;; Registers used:
  4765 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4766 ;; Tracked objects:
  4767 ;;		On entry : 0/0
  4768 ;;		On exit  : 0/0
  4769 ;;		Unchanged: 0/0
  4770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  4771 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4772 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4774 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4775 ;;Total ram usage:        0 bytes
  4776 ;; Hardware stack levels used:    1
  4777 ;; Hardware stack levels required when called:   10
  4778 ;; This function calls:
  4779 ;;		_setPowerFault_Main
  4780 ;; This function is called by:
  4781 ;;		_main
  4782 ;; This function uses a non-reentrant model
  4783 ;;
  4784                           psect	text4088
  4785                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\PowerFault_B1.c"
  4786                           	line	23
  4787                           	global	__size_of_PowerFault_Main
  4788  0004                     	__size_of_PowerFault_Main	equ	__end_of_PowerFault_Main-_PowerFault_Main
  4789                           	
  4790  2092                     _PowerFault_Main:	
  4791                           	opt	stack 5
  4792                           ; Regs used in _PowerFault_Main: [wreg+fsr1l-status,0+pclath+cstack]
  4793                           	line	25
  4794                           	
  4795  2092                     l25598:	
  4796                           ;PowerFault_B1.c: 25: setPowerFault_Main();
  4797  2092  318D  255E  31A0   	fcall	_setPowerFault_Main
  4798                           	line	27
  4799                           	
  4800  2095                     l14001:	
  4801  2095  0008               	return
  4802                           	opt stack 0
  4803                           GLOBAL	__end_of_PowerFault_Main
  4804  2096                     	__end_of_PowerFault_Main:
  4805 ;; =============== function _PowerFault_Main ends ============
  4806                           
  4807                           	signat	_PowerFault_Main,88
  4808                           	global	_Temp_Main
  4809                           psect	text4089,local,class=CODE,delta=2
  4810                           global __ptext4089
  4811  208E                     __ptext4089:
  4812                           
  4813 ;; *************** function _Temp_Main *****************
  4814 ;; Defined at:
  4815 ;;		line 58 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\OverTemperature_B1.c"
  4816 ;; Parameters:    Size  Location     Type
  4817 ;;		None
  4818 ;; Auto vars:     Size  Location     Type
  4819 ;;		None
  4820 ;; Return value:  Size  Location     Type
  4821 ;;		None               void
  4822 ;; Registers used:
  4823 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4824 ;; Tracked objects:
  4825 ;;		On entry : 0/0
  4826 ;;		On exit  : 0/0
  4827 ;;		Unchanged: 0/0
  4828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  4829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4830 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4832 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4833 ;;Total ram usage:        0 bytes
  4834 ;; Hardware stack levels used:    1
  4835 ;; Hardware stack levels required when called:   10
  4836 ;; This function calls:
  4837 ;;		_setTemp_Main
  4838 ;; This function is called by:
  4839 ;;		_main
  4840 ;; This function uses a non-reentrant model
  4841 ;;
  4842                           psect	text4089
  4843                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\OverTemperature_B1.c"
  4844                           	line	58
  4845                           	global	__size_of_Temp_Main
  4846  0004                     	__size_of_Temp_Main	equ	__end_of_Temp_Main-_Temp_Main
  4847                           	
  4848  208E                     _Temp_Main:	
  4849                           	opt	stack 5
  4850                           ; Regs used in _Temp_Main: [wreg+fsr1l-status,0+pclath+cstack]
  4851                           	line	60
  4852                           	
  4853  208E                     l25596:	
  4854                           ;OverTemperature_B1.c: 60: setTemp_Main();
  4855  208E  318E  2685  31A0   	fcall	_setTemp_Main
  4856                           	line	62
  4857                           	
  4858  2091                     l11759:	
  4859  2091  0008               	return
  4860                           	opt stack 0
  4861                           GLOBAL	__end_of_Temp_Main
  4862  2092                     	__end_of_Temp_Main:
  4863 ;; =============== function _Temp_Main ends ============
  4864                           
  4865                           	signat	_Temp_Main,88
  4866                           	global	_setRFSW_AdjControl
  4867                           psect	text4090,local,class=CODE,delta=2
  4868                           global __ptext4090
  4869  195B                     __ptext4090:
  4870                           
  4871 ;; *************** function _setRFSW_AdjControl *****************
  4872 ;; Defined at:
  4873 ;;		line 402 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
  4874 ;; Parameters:    Size  Location     Type
  4875 ;;  sw              1    wreg     unsigned char 
  4876 ;; Auto vars:     Size  Location     Type
  4877 ;;  sw              1   70[BANK0 ] unsigned char 
  4878 ;; Return value:  Size  Location     Type
  4879 ;;		None               void
  4880 ;; Registers used:
  4881 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4882 ;; Tracked objects:
  4883 ;;		On entry : 0/0
  4884 ;;		On exit  : 0/0
  4885 ;;		Unchanged: 0/0
  4886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  4887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4888 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  4889 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  4890 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
  4891 ;;Total ram usage:        3 bytes
  4892 ;; Hardware stack levels used:    1
  4893 ;; Hardware stack levels required when called:    9
  4894 ;; This function calls:
  4895 ;;		_RfSWPointSelect
  4896 ;;		_setRF_DimmerValue
  4897 ;;		_setTxData
  4898 ;; This function is called by:
  4899 ;;		_setControl_Lights_Table
  4900 ;; This function uses a non-reentrant model
  4901 ;;
  4902                           psect	text4090
  4903                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
  4904                           	line	402
  4905                           	global	__size_of_setRFSW_AdjControl
  4906  0043                     	__size_of_setRFSW_AdjControl	equ	__end_of_setRFSW_AdjControl-_setRFSW_AdjControl
  4907                           	
  4908  195B                     _setRFSW_AdjControl:	
  4909                           	opt	stack 2
  4910                           ; Regs used in _setRFSW_AdjControl: [wreg+fsr1l-status,0+pclath+cstack]
  4911                           ;setRFSW_AdjControl@sw stored from wreg
  4912  195B  0020               	movlb 0	; select bank0
  4913  195C  00E6               	movwf	(setRFSW_AdjControl@sw)
  4914                           	line	403
  4915                           	
  4916  195D                     l24256:	
  4917                           ;RF_Control_B1.c: 403: RfSWPointSelect(sw);
  4918  195D  0866               	movf	(setRFSW_AdjControl@sw),w
  4919  195E  31A2  224A  3199   	fcall	_RfSWPointSelect
  4920                           	line	404
  4921                           	
  4922  1961                     l24258:	
  4923                           ;RF_Control_B1.c: 404: if(RFSW->Status)
  4924  1961  0021               	movlb 1	; select bank1
  4925  1962  083C               	movf	(_RFSW)^080h,w
  4926  1963  0086               	movwf	fsr1l
  4927  1964  0187               	clrf fsr1h	
  4928                           	
  4929  1965  1C01               	btfss	indf1,0
  4930  1966  2968               	goto	u8501
  4931  1967  2969               	goto	u8500
  4932  1968                     u8501:
  4933  1968  2975               	goto	l24264
  4934  1969                     u8500:
  4935                           	line	406
  4936                           	
  4937  1969                     l24260:	
  4938                           ;RF_Control_B1.c: 405: {
  4939                           ;RF_Control_B1.c: 406: Memory->Modify=1;
  4940  1969  086A               	movf	(_Memory)^080h,w
  4941  196A  3E22               	addlw	022h
  4942  196B  0086               	movwf	fsr1l
  4943  196C  3001               	movlw 1	; select bank2/3
  4944  196D  0087               	movwf fsr1h	
  4945                           	
  4946  196E  1401               	bsf	indf1,0
  4947                           	line	407
  4948                           	
  4949  196F                     l24262:	
  4950                           ;RF_Control_B1.c: 407: setRF_DimmerValue(sw);
  4951  196F  0020               	movlb 0	; select bank0
  4952  1970  0866               	movf	(setRFSW_AdjControl@sw),w
  4953  1971  3198  2067  3199   	fcall	_setRF_DimmerValue
  4954                           	line	408
  4955                           ;RF_Control_B1.c: 408: }
  4956  1974  2987               	goto	l15279
  4957                           	line	409
  4958                           	
  4959  1975                     l15278:	
  4960                           	line	411
  4961                           	
  4962  1975                     l24264:	
  4963                           ;RF_Control_B1.c: 409: else
  4964                           ;RF_Control_B1.c: 410: {
  4965                           ;RF_Control_B1.c: 411: Product->Data[9]=Product->Data[20+sw];
  4966  1975  0020               	movlb 0	; select bank0
  4967  1976  0866               	movf	(setRFSW_AdjControl@sw),w
  4968  1977  3E14               	addlw	014h
  4969  1978  076F               	addwf	(_Product),w
  4970  1979  00E4               	movwf	(??_setRFSW_AdjControl+0)+0
  4971  197A  0864               	movf	0+(??_setRFSW_AdjControl+0)+0,w
  4972  197B  0086               	movwf	fsr1l
  4973  197C  3001               	movlw 1	; select bank2/3
  4974  197D  0087               	movwf fsr1h	
  4975                           	
  4976  197E  0801               	movf	indf1,w
  4977  197F  00E5               	movwf	(??_setRFSW_AdjControl+1)+0
  4978  1980  086F               	movf	(_Product),w
  4979  1981  3E09               	addlw	09h
  4980  1982  0086               	movwf	fsr1l
  4981  1983  3001               	movlw 1	; select bank2/3
  4982  1984  0087               	movwf fsr1h	
  4983                           	
  4984  1985  0865               	movf	(??_setRFSW_AdjControl+1)+0,w
  4985  1986  0081               	movwf	indf1
  4986                           	line	412
  4987                           	
  4988  1987                     l15279:	
  4989                           	line	413
  4990                           ;RF_Control_B1.c: 412: }
  4991                           ;RF_Control_B1.c: 413: Product->Data[17]=Product->Data[26+sw];
  4992  1987  0020               	movlb 0	; select bank0
  4993  1988  0866               	movf	(setRFSW_AdjControl@sw),w
  4994  1989  3E1A               	addlw	01Ah
  4995  198A  076F               	addwf	(_Product),w
  4996  198B  00E4               	movwf	(??_setRFSW_AdjControl+0)+0
  4997  198C  0864               	movf	0+(??_setRFSW_AdjControl+0)+0,w
  4998  198D  0086               	movwf	fsr1l
  4999  198E  3001               	movlw 1	; select bank2/3
  5000  198F  0087               	movwf fsr1h	
  5001                           	
  5002  1990  0801               	movf	indf1,w
  5003  1991  00E5               	movwf	(??_setRFSW_AdjControl+1)+0
  5004  1992  086F               	movf	(_Product),w
  5005  1993  3E11               	addlw	011h
  5006  1994  0086               	movwf	fsr1l
  5007  1995  3001               	movlw 1	; select bank2/3
  5008  1996  0087               	movwf fsr1h	
  5009                           	
  5010  1997  0865               	movf	(??_setRFSW_AdjControl+1)+0,w
  5011  1998  0081               	movwf	indf1
  5012                           	line	414
  5013                           	
  5014  1999                     l24266:	
  5015                           ;RF_Control_B1.c: 414: setTxData(1);
  5016  1999  3001               	movlw	(01h)
  5017  199A  318B  236C  3199   	fcall	_setTxData
  5018                           	line	415
  5019                           	
  5020  199D                     l15280:	
  5021  199D  0008               	return
  5022                           	opt stack 0
  5023                           GLOBAL	__end_of_setRFSW_AdjControl
  5024  199E                     	__end_of_setRFSW_AdjControl:
  5025 ;; =============== function _setRFSW_AdjControl ends ============
  5026                           
  5027                           	signat	_setRFSW_AdjControl,4216
  5028                           	global	_setPowerFault_Main
  5029                           psect	text4091,local,class=CODE,delta=2
  5030                           global __ptext4091
  5031  0D5E                     __ptext4091:
  5032                           
  5033 ;; *************** function _setPowerFault_Main *****************
  5034 ;; Defined at:
  5035 ;;		line 62 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\PowerFault_B1.c"
  5036 ;; Parameters:    Size  Location     Type
  5037 ;;		None
  5038 ;; Auto vars:     Size  Location     Type
  5039 ;;		None
  5040 ;; Return value:  Size  Location     Type
  5041 ;;		None               void
  5042 ;; Registers used:
  5043 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5044 ;; Tracked objects:
  5045 ;;		On entry : 0/0
  5046 ;;		On exit  : 0/0
  5047 ;;		Unchanged: 0/0
  5048 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  5049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5051 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  5052 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  5053 ;;Total ram usage:        2 bytes
  5054 ;; Hardware stack levels used:    1
  5055 ;; Hardware stack levels required when called:    9
  5056 ;; This function calls:
  5057 ;;		_getLoad_Safe
  5058 ;;		_getTemp_Safe
  5059 ;;		_setPowerFault_Exceptions
  5060 ;; This function is called by:
  5061 ;;		_PowerFault_Main
  5062 ;; This function uses a non-reentrant model
  5063 ;;
  5064                           psect	text4091
  5065                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\PowerFault_B1.c"
  5066                           	line	62
  5067                           	global	__size_of_setPowerFault_Main
  5068  0127                     	__size_of_setPowerFault_Main	equ	__end_of_setPowerFault_Main-_setPowerFault_Main
  5069                           	
  5070  0D5E                     _setPowerFault_Main:	
  5071                           	opt	stack 5
  5072                           ; Regs used in _setPowerFault_Main: [wreg+fsr1l-status,0+pclath+cstack]
  5073                           	line	63
  5074                           	
  5075  0D5E                     l25544:	
  5076                           ;PowerFault_B1.c: 63: if(PF->Enable)
  5077  0D5E  087A               	movf	(_PF),w
  5078  0D5F  0086               	movwf	fsr1l
  5079  0D60  0187               	clrf fsr1h	
  5080                           	
  5081  0D61  1C01               	btfss	indf1,0
  5082  0D62  2D64               	goto	u10251
  5083  0D63  2D65               	goto	u10250
  5084  0D64                     u10251:
  5085  0D64  2E84               	goto	l14039
  5086  0D65                     u10250:
  5087                           	line	65
  5088                           	
  5089  0D65                     l25546:	
  5090                           ;PowerFault_B1.c: 64: {
  5091                           ;PowerFault_B1.c: 65: if(PF->ADtoGO == 0)
  5092  0D65  087A               	movf	(_PF),w
  5093  0D66  0086               	movwf	fsr1l
  5094  0D67  0187               	clrf fsr1h	
  5095                           	
  5096  0D68  1981               	btfsc	indf1,3
  5097  0D69  2D6B               	goto	u10261
  5098  0D6A  2D6C               	goto	u10260
  5099  0D6B                     u10261:
  5100  0D6B  2DB3               	goto	l25560
  5101  0D6C                     u10260:
  5102                           	line	67
  5103                           	
  5104  0D6C                     l25548:	
  5105                           ;PowerFault_B1.c: 66: {
  5106                           ;PowerFault_B1.c: 67: PF->Time++;
  5107  0D6C  087A               	movf	(_PF),w
  5108  0D6D  3E06               	addlw	06h
  5109  0D6E  0086               	movwf	fsr1l
  5110  0D6F  0187               	clrf fsr1h	
  5111                           	
  5112  0D70  3001               	movlw	01h
  5113  0D71  0781               	addwf	indf1,f
  5114  0D72  3141               	addfsr	fsr1,1
  5115  0D73  1803               	skipnc
  5116  0D74  0A81               	incf	indf1,f
  5117                           	line	68
  5118                           	
  5119  0D75                     l25550:	
  5120                           ;PowerFault_B1.c: 68: if(PF->Time >= 700)
  5121  0D75  087A               	movf	(_PF),w
  5122  0D76  3E06               	addlw	06h
  5123  0D77  0086               	movwf	fsr1l
  5124  0D78  0187               	clrf fsr1h	
  5125                           	
  5126  0D79  3F40               	moviw	[0]fsr1
  5127  0D7A  0020               	movlb 0	; select bank0
  5128  0D7B  00AD               	movwf	(??_setPowerFault_Main+0)+0
  5129  0D7C  3F41               	moviw	[1]fsr1
  5130  0D7D  00AE               	movwf	(??_setPowerFault_Main+0)+0+1
  5131  0D7E  3002               	movlw	high(02BCh)
  5132  0D7F  022E               	subwf	1+(??_setPowerFault_Main+0)+0,w
  5133  0D80  30BC               	movlw	low(02BCh)
  5134  0D81  1903               	skipnz
  5135  0D82  022D               	subwf	0+(??_setPowerFault_Main+0)+0,w
  5136  0D83  1C03               	skipc
  5137  0D84  2D86               	goto	u10271
  5138  0D85  2D87               	goto	u10270
  5139  0D86                     u10271:
  5140  0D86  2E84               	goto	l14039
  5141  0D87                     u10270:
  5142                           	line	70
  5143                           	
  5144  0D87                     l25552:	
  5145                           ;PowerFault_B1.c: 69: {
  5146                           ;PowerFault_B1.c: 70: if(getLoad_Safe() && getTemp_Safe())
  5147  0D87  31A1  2159  318D   	fcall	_getLoad_Safe
  5148  0D8A  3A00               	xorlw	0&0ffh
  5149  0D8B  1903               	skipnz
  5150  0D8C  2D8E               	goto	u10281
  5151  0D8D  2D8F               	goto	u10280
  5152  0D8E                     u10281:
  5153  0D8E  2DA8               	goto	l25558
  5154  0D8F                     u10280:
  5155                           	
  5156  0D8F                     l25554:	
  5157  0D8F  31A0  20E5  318D   	fcall	_getTemp_Safe
  5158  0D92  3A00               	xorlw	0&0ffh
  5159  0D93  1903               	skipnz
  5160  0D94  2D96               	goto	u10291
  5161  0D95  2D97               	goto	u10290
  5162  0D96                     u10291:
  5163  0D96  2DA8               	goto	l25558
  5164  0D97                     u10290:
  5165                           	line	72
  5166                           	
  5167  0D97                     l25556:	
  5168                           ;PowerFault_B1.c: 71: {
  5169                           ;PowerFault_B1.c: 72: PF->Time=0;
  5170  0D97  087A               	movf	(_PF),w
  5171  0D98  3E06               	addlw	06h
  5172  0D99  0086               	movwf	fsr1l
  5173  0D9A  0187               	clrf fsr1h	
  5174                           	
  5175  0D9B  3000               	movlw	low(0)
  5176  0D9C  3FC0               	movwi	[0]fsr1
  5177  0D9D  3000               	movlw	high(0)
  5178  0D9E  3FC1               	movwi	[1]fsr1
  5179                           	line	73
  5180                           ;PowerFault_B1.c: 73: PF->ADtoGO=1;
  5181  0D9F  087A               	movf	(_PF),w
  5182  0DA0  0086               	movwf	fsr1l
  5183  0DA1  0187               	clrf fsr1h	
  5184                           	
  5185  0DA2  1581               	bsf	indf1,3
  5186                           	line	74
  5187                           ;PowerFault_B1.c: 74: PF->Safe=0;
  5188  0DA3  087A               	movf	(_PF),w
  5189  0DA4  0086               	movwf	fsr1l
  5190  0DA5  0187               	clrf fsr1h	
  5191                           	
  5192  0DA6  1101               	bcf	indf1,2
  5193                           	line	75
  5194                           ;PowerFault_B1.c: 75: }
  5195  0DA7  2E84               	goto	l14039
  5196                           	line	76
  5197                           	
  5198  0DA8                     l14024:	
  5199                           	line	78
  5200                           	
  5201  0DA8                     l25558:	
  5202                           ;PowerFault_B1.c: 76: else
  5203                           ;PowerFault_B1.c: 77: {
  5204                           ;PowerFault_B1.c: 78: PF->Time=700;
  5205  0DA8  087A               	movf	(_PF),w
  5206  0DA9  3E06               	addlw	06h
  5207  0DAA  0086               	movwf	fsr1l
  5208  0DAB  0187               	clrf fsr1h	
  5209                           	
  5210  0DAC  30BC               	movlw	low(02BCh)
  5211  0DAD  3FC0               	movwi	[0]fsr1
  5212  0DAE  3002               	movlw	high(02BCh)
  5213  0DAF  3FC1               	movwi	[1]fsr1
  5214  0DB0  2E84               	goto	l14039
  5215                           	line	79
  5216                           	
  5217  0DB1                     l14025:	
  5218  0DB1  2E84               	goto	l14039
  5219                           	line	80
  5220                           	
  5221  0DB2                     l14023:	
  5222                           	line	81
  5223                           ;PowerFault_B1.c: 79: }
  5224                           ;PowerFault_B1.c: 80: }
  5225                           ;PowerFault_B1.c: 81: }
  5226  0DB2  2E84               	goto	l14039
  5227                           	line	82
  5228                           	
  5229  0DB3                     l14022:	
  5230                           	line	84
  5231                           	
  5232  0DB3                     l25560:	
  5233                           ;PowerFault_B1.c: 82: else
  5234                           ;PowerFault_B1.c: 83: {
  5235                           ;PowerFault_B1.c: 84: PF->Time++;
  5236  0DB3  087A               	movf	(_PF),w
  5237  0DB4  3E06               	addlw	06h
  5238  0DB5  0086               	movwf	fsr1l
  5239  0DB6  0187               	clrf fsr1h	
  5240                           	
  5241  0DB7  3001               	movlw	01h
  5242  0DB8  0781               	addwf	indf1,f
  5243  0DB9  3141               	addfsr	fsr1,1
  5244  0DBA  1803               	skipnc
  5245  0DBB  0A81               	incf	indf1,f
  5246                           	line	85
  5247                           	
  5248  0DBC                     l25562:	
  5249                           ;PowerFault_B1.c: 85: if(PF->Time >= 2)
  5250  0DBC  087A               	movf	(_PF),w
  5251  0DBD  3E06               	addlw	06h
  5252  0DBE  0086               	movwf	fsr1l
  5253  0DBF  0187               	clrf fsr1h	
  5254                           	
  5255  0DC0  3F40               	moviw	[0]fsr1
  5256  0DC1  0020               	movlb 0	; select bank0
  5257  0DC2  00AD               	movwf	(??_setPowerFault_Main+0)+0
  5258  0DC3  3F41               	moviw	[1]fsr1
  5259  0DC4  00AE               	movwf	(??_setPowerFault_Main+0)+0+1
  5260  0DC5  3000               	movlw	high(02h)
  5261  0DC6  022E               	subwf	1+(??_setPowerFault_Main+0)+0,w
  5262  0DC7  3002               	movlw	low(02h)
  5263  0DC8  1903               	skipnz
  5264  0DC9  022D               	subwf	0+(??_setPowerFault_Main+0)+0,w
  5265  0DCA  1C03               	skipc
  5266  0DCB  2DCD               	goto	u10301
  5267  0DCC  2DCE               	goto	u10300
  5268  0DCD                     u10301:
  5269  0DCD  2E84               	goto	l14039
  5270  0DCE                     u10300:
  5271                           	line	87
  5272                           	
  5273  0DCE                     l25564:	
  5274                           ;PowerFault_B1.c: 86: {
  5275                           ;PowerFault_B1.c: 87: PF->Time=0;
  5276  0DCE  087A               	movf	(_PF),w
  5277  0DCF  3E06               	addlw	06h
  5278  0DD0  0086               	movwf	fsr1l
  5279  0DD1  0187               	clrf fsr1h	
  5280                           	
  5281  0DD2  3000               	movlw	low(0)
  5282  0DD3  3FC0               	movwi	[0]fsr1
  5283  0DD4  3000               	movlw	high(0)
  5284  0DD5  3FC1               	movwi	[1]fsr1
  5285                           	line	88
  5286                           ;PowerFault_B1.c: 88: PF->ADtoGO=0;
  5287  0DD6  087A               	movf	(_PF),w
  5288  0DD7  0086               	movwf	fsr1l
  5289  0DD8  0187               	clrf fsr1h	
  5290                           	
  5291  0DD9  1181               	bcf	indf1,3
  5292                           	line	90
  5293                           ;PowerFault_B1.c: 90: if(PF->ERROR)
  5294  0DDA  087A               	movf	(_PF),w
  5295  0DDB  0086               	movwf	fsr1l
  5296  0DDC  0187               	clrf fsr1h	
  5297                           	
  5298  0DDD  1C81               	btfss	indf1,1
  5299  0DDE  2DE0               	goto	u10311
  5300  0DDF  2DE1               	goto	u10310
  5301  0DE0                     u10311:
  5302  0DE0  2E27               	goto	l25580
  5303  0DE1                     u10310:
  5304                           	line	92
  5305                           	
  5306  0DE1                     l25566:	
  5307                           ;PowerFault_B1.c: 91: {
  5308                           ;PowerFault_B1.c: 92: if(PF->AD <= (300+100) && PF->AD >= (300-100))
  5309  0DE1  087A               	movf	(_PF),w
  5310  0DE2  3E01               	addlw	01h
  5311  0DE3  0086               	movwf	fsr1l
  5312  0DE4  0187               	clrf fsr1h	
  5313                           	
  5314  0DE5  3F40               	moviw	[0]fsr1
  5315  0DE6  00AD               	movwf	(??_setPowerFault_Main+0)+0
  5316  0DE7  3F41               	moviw	[1]fsr1
  5317  0DE8  00AE               	movwf	(??_setPowerFault_Main+0)+0+1
  5318  0DE9  3001               	movlw	high(0191h)
  5319  0DEA  022E               	subwf	1+(??_setPowerFault_Main+0)+0,w
  5320  0DEB  3091               	movlw	low(0191h)
  5321  0DEC  1903               	skipnz
  5322  0DED  022D               	subwf	0+(??_setPowerFault_Main+0)+0,w
  5323  0DEE  1803               	skipnc
  5324  0DEF  2DF1               	goto	u10321
  5325  0DF0  2DF2               	goto	u10320
  5326  0DF1                     u10321:
  5327  0DF1  2E20               	goto	l25578
  5328  0DF2                     u10320:
  5329                           	
  5330  0DF2                     l25568:	
  5331  0DF2  087A               	movf	(_PF),w
  5332  0DF3  3E01               	addlw	01h
  5333  0DF4  0086               	movwf	fsr1l
  5334  0DF5  0187               	clrf fsr1h	
  5335                           	
  5336  0DF6  3F40               	moviw	[0]fsr1
  5337  0DF7  00AD               	movwf	(??_setPowerFault_Main+0)+0
  5338  0DF8  3F41               	moviw	[1]fsr1
  5339  0DF9  00AE               	movwf	(??_setPowerFault_Main+0)+0+1
  5340  0DFA  3000               	movlw	high(0C8h)
  5341  0DFB  022E               	subwf	1+(??_setPowerFault_Main+0)+0,w
  5342  0DFC  30C8               	movlw	low(0C8h)
  5343  0DFD  1903               	skipnz
  5344  0DFE  022D               	subwf	0+(??_setPowerFault_Main+0)+0,w
  5345  0DFF  1C03               	skipc
  5346  0E00  2E02               	goto	u10331
  5347  0E01  2E03               	goto	u10330
  5348  0E02                     u10331:
  5349  0E02  2E20               	goto	l25578
  5350  0E03                     u10330:
  5351                           	line	94
  5352                           	
  5353  0E03                     l25570:	
  5354                           ;PowerFault_B1.c: 93: {
  5355                           ;PowerFault_B1.c: 94: PF->Count++;
  5356  0E03  3001               	movlw	(01h)
  5357  0E04  00AD               	movwf	(??_setPowerFault_Main+0)+0
  5358  0E05  087A               	movf	(_PF),w
  5359  0E06  3E05               	addlw	05h
  5360  0E07  0086               	movwf	fsr1l
  5361  0E08  0187               	clrf fsr1h	
  5362                           	
  5363  0E09  082D               	movf	(??_setPowerFault_Main+0)+0,w
  5364  0E0A  0781               	addwf	indf1,f
  5365                           	line	95
  5366                           	
  5367  0E0B                     l25572:	
  5368                           ;PowerFault_B1.c: 95: if(PF->Count > 1)
  5369  0E0B  087A               	movf	(_PF),w
  5370  0E0C  3E05               	addlw	05h
  5371  0E0D  0086               	movwf	fsr1l
  5372  0E0E  0187               	clrf fsr1h	
  5373                           	
  5374  0E0F  3002               	movlw	(02h)
  5375  0E10  0201               	subwf	indf1,w
  5376  0E11  1C03               	skipc
  5377  0E12  2E14               	goto	u10341
  5378  0E13  2E15               	goto	u10340
  5379  0E14                     u10341:
  5380  0E14  2E6E               	goto	l14032
  5381  0E15                     u10340:
  5382                           	line	97
  5383                           	
  5384  0E15                     l25574:	
  5385                           ;PowerFault_B1.c: 96: {
  5386                           ;PowerFault_B1.c: 97: PF->Count=0;
  5387  0E15  087A               	movf	(_PF),w
  5388  0E16  3E05               	addlw	05h
  5389  0E17  0086               	movwf	fsr1l
  5390  0E18  0187               	clrf fsr1h	
  5391                           	
  5392  0E19  0181               	clrf	indf1
  5393                           	line	98
  5394                           	
  5395  0E1A                     l25576:	
  5396                           ;PowerFault_B1.c: 98: setPowerFault_Exceptions(0);
  5397  0E1A  3000               	movlw	(0)
  5398  0E1B  3199  2118  318D   	fcall	_setPowerFault_Exceptions
  5399  0E1E  2E6E               	goto	l14032
  5400                           	line	99
  5401                           	
  5402  0E1F                     l14030:	
  5403                           	line	100
  5404                           ;PowerFault_B1.c: 99: }
  5405                           ;PowerFault_B1.c: 100: }
  5406  0E1F  2E6E               	goto	l14032
  5407                           	line	101
  5408                           	
  5409  0E20                     l14029:	
  5410                           	line	103
  5411                           	
  5412  0E20                     l25578:	
  5413                           ;PowerFault_B1.c: 101: else
  5414                           ;PowerFault_B1.c: 102: {
  5415                           ;PowerFault_B1.c: 103: PF->Count=0;
  5416  0E20  087A               	movf	(_PF),w
  5417  0E21  3E05               	addlw	05h
  5418  0E22  0086               	movwf	fsr1l
  5419  0E23  0187               	clrf fsr1h	
  5420                           	
  5421  0E24  0181               	clrf	indf1
  5422  0E25  2E6E               	goto	l14032
  5423                           	line	104
  5424                           	
  5425  0E26                     l14031:	
  5426                           	line	105
  5427                           ;PowerFault_B1.c: 104: }
  5428                           ;PowerFault_B1.c: 105: }
  5429  0E26  2E6E               	goto	l14032
  5430                           	line	106
  5431                           	
  5432  0E27                     l14028:	
  5433                           	line	108
  5434                           	
  5435  0E27                     l25580:	
  5436                           ;PowerFault_B1.c: 106: else
  5437                           ;PowerFault_B1.c: 107: {
  5438                           ;PowerFault_B1.c: 108: if(PF->AD >= (300+100) || PF->AD <= (310-100))
  5439  0E27  087A               	movf	(_PF),w
  5440  0E28  3E01               	addlw	01h
  5441  0E29  0086               	movwf	fsr1l
  5442  0E2A  0187               	clrf fsr1h	
  5443                           	
  5444  0E2B  3F40               	moviw	[0]fsr1
  5445  0E2C  0020               	movlb 0	; select bank0
  5446  0E2D  00AD               	movwf	(??_setPowerFault_Main+0)+0
  5447  0E2E  3F41               	moviw	[1]fsr1
  5448  0E2F  00AE               	movwf	(??_setPowerFault_Main+0)+0+1
  5449  0E30  3001               	movlw	high(0190h)
  5450  0E31  022E               	subwf	1+(??_setPowerFault_Main+0)+0,w
  5451  0E32  3090               	movlw	low(0190h)
  5452  0E33  1903               	skipnz
  5453  0E34  022D               	subwf	0+(??_setPowerFault_Main+0)+0,w
  5454  0E35  1803               	skipnc
  5455  0E36  2E38               	goto	u10351
  5456  0E37  2E39               	goto	u10350
  5457  0E38                     u10351:
  5458  0E38  2E4B               	goto	l25584
  5459  0E39                     u10350:
  5460                           	
  5461  0E39                     l25582:	
  5462  0E39  087A               	movf	(_PF),w
  5463  0E3A  3E01               	addlw	01h
  5464  0E3B  0086               	movwf	fsr1l
  5465  0E3C  0187               	clrf fsr1h	
  5466                           	
  5467  0E3D  3F40               	moviw	[0]fsr1
  5468  0E3E  00AD               	movwf	(??_setPowerFault_Main+0)+0
  5469  0E3F  3F41               	moviw	[1]fsr1
  5470  0E40  00AE               	movwf	(??_setPowerFault_Main+0)+0+1
  5471  0E41  3000               	movlw	high(0D3h)
  5472  0E42  022E               	subwf	1+(??_setPowerFault_Main+0)+0,w
  5473  0E43  30D3               	movlw	low(0D3h)
  5474  0E44  1903               	skipnz
  5475  0E45  022D               	subwf	0+(??_setPowerFault_Main+0)+0,w
  5476  0E46  1803               	skipnc
  5477  0E47  2E49               	goto	u10361
  5478  0E48  2E4A               	goto	u10360
  5479  0E49                     u10361:
  5480  0E49  2E68               	goto	l25592
  5481  0E4A                     u10360:
  5482  0E4A  2E4B               	goto	l25584
  5483                           	
  5484  0E4B                     l14035:	
  5485                           	line	110
  5486                           	
  5487  0E4B                     l25584:	
  5488                           ;PowerFault_B1.c: 109: {
  5489                           ;PowerFault_B1.c: 110: PF->Count++;
  5490  0E4B  3001               	movlw	(01h)
  5491  0E4C  00AD               	movwf	(??_setPowerFault_Main+0)+0
  5492  0E4D  087A               	movf	(_PF),w
  5493  0E4E  3E05               	addlw	05h
  5494  0E4F  0086               	movwf	fsr1l
  5495  0E50  0187               	clrf fsr1h	
  5496                           	
  5497  0E51  082D               	movf	(??_setPowerFault_Main+0)+0,w
  5498  0E52  0781               	addwf	indf1,f
  5499                           	line	111
  5500                           	
  5501  0E53                     l25586:	
  5502                           ;PowerFault_B1.c: 111: if(PF->Count > 1)
  5503  0E53  087A               	movf	(_PF),w
  5504  0E54  3E05               	addlw	05h
  5505  0E55  0086               	movwf	fsr1l
  5506  0E56  0187               	clrf fsr1h	
  5507                           	
  5508  0E57  3002               	movlw	(02h)
  5509  0E58  0201               	subwf	indf1,w
  5510  0E59  1C03               	skipc
  5511  0E5A  2E5C               	goto	u10371
  5512  0E5B  2E5D               	goto	u10370
  5513  0E5C                     u10371:
  5514  0E5C  2E6E               	goto	l14032
  5515  0E5D                     u10370:
  5516                           	line	113
  5517                           	
  5518  0E5D                     l25588:	
  5519                           ;PowerFault_B1.c: 112: {
  5520                           ;PowerFault_B1.c: 113: PF->Count=0;
  5521  0E5D  087A               	movf	(_PF),w
  5522  0E5E  3E05               	addlw	05h
  5523  0E5F  0086               	movwf	fsr1l
  5524  0E60  0187               	clrf fsr1h	
  5525                           	
  5526  0E61  0181               	clrf	indf1
  5527                           	line	114
  5528                           	
  5529  0E62                     l25590:	
  5530                           ;PowerFault_B1.c: 114: setPowerFault_Exceptions(1);
  5531  0E62  3001               	movlw	(01h)
  5532  0E63  3199  2118  318D   	fcall	_setPowerFault_Exceptions
  5533  0E66  2E6E               	goto	l14032
  5534                           	line	115
  5535                           	
  5536  0E67                     l14036:	
  5537                           	line	116
  5538                           ;PowerFault_B1.c: 115: }
  5539                           ;PowerFault_B1.c: 116: }
  5540  0E67  2E6E               	goto	l14032
  5541                           	line	117
  5542                           	
  5543  0E68                     l14033:	
  5544                           	line	119
  5545                           	
  5546  0E68                     l25592:	
  5547                           ;PowerFault_B1.c: 117: else
  5548                           ;PowerFault_B1.c: 118: {
  5549                           ;PowerFault_B1.c: 119: PF->Count=0;
  5550  0E68  087A               	movf	(_PF),w
  5551  0E69  3E05               	addlw	05h
  5552  0E6A  0086               	movwf	fsr1l
  5553  0E6B  0187               	clrf fsr1h	
  5554                           	
  5555  0E6C  0181               	clrf	indf1
  5556  0E6D  2E6E               	goto	l14032
  5557                           	line	120
  5558                           	
  5559  0E6E                     l14037:	
  5560                           	line	122
  5561                           	
  5562  0E6E                     l14032:	
  5563                           	line	123
  5564                           ;PowerFault_B1.c: 120: }
  5565                           ;PowerFault_B1.c: 122: }
  5566                           ;PowerFault_B1.c: 123: if(PF->ERROR == 0)
  5567  0E6E  087A               	movf	(_PF),w
  5568  0E6F  0086               	movwf	fsr1l
  5569  0E70  0187               	clrf fsr1h	
  5570                           	
  5571  0E71  1881               	btfsc	indf1,1
  5572  0E72  2E74               	goto	u10381
  5573  0E73  2E75               	goto	u10380
  5574  0E74                     u10381:
  5575  0E74  2E79               	goto	l14038
  5576  0E75                     u10380:
  5577                           	line	125
  5578                           	
  5579  0E75                     l25594:	
  5580                           ;PowerFault_B1.c: 124: {
  5581                           ;PowerFault_B1.c: 125: PF->Safe=1;
  5582  0E75  087A               	movf	(_PF),w
  5583  0E76  0086               	movwf	fsr1l
  5584  0E77  0187               	clrf fsr1h	
  5585                           	
  5586  0E78  1501               	bsf	indf1,2
  5587                           	line	126
  5588                           	
  5589  0E79                     l14038:	
  5590                           	line	127
  5591                           ;PowerFault_B1.c: 126: }
  5592                           ;PowerFault_B1.c: 127: PF->AD=0;
  5593  0E79  087A               	movf	(_PF),w
  5594  0E7A  3E01               	addlw	01h
  5595  0E7B  0086               	movwf	fsr1l
  5596  0E7C  0187               	clrf fsr1h	
  5597                           	
  5598  0E7D  3000               	movlw	low(0)
  5599  0E7E  3FC0               	movwi	[0]fsr1
  5600  0E7F  3000               	movlw	high(0)
  5601  0E80  3FC1               	movwi	[1]fsr1
  5602  0E81  2E84               	goto	l14039
  5603                           	line	128
  5604                           	
  5605  0E82                     l14027:	
  5606  0E82  2E84               	goto	l14039
  5607                           	line	129
  5608                           	
  5609  0E83                     l14026:	
  5610  0E83  2E84               	goto	l14039
  5611                           	line	130
  5612                           	
  5613  0E84                     l14021:	
  5614                           	line	131
  5615                           	
  5616  0E84                     l14039:	
  5617  0E84  0008               	return
  5618                           	opt stack 0
  5619                           GLOBAL	__end_of_setPowerFault_Main
  5620  0E85                     	__end_of_setPowerFault_Main:
  5621 ;; =============== function _setPowerFault_Main ends ============
  5622                           
  5623                           	signat	_setPowerFault_Main,88
  5624                           	global	_setTemp_Main
  5625                           psect	text4092,local,class=CODE,delta=2
  5626                           global __ptext4092
  5627  0E85                     __ptext4092:
  5628                           
  5629 ;; *************** function _setTemp_Main *****************
  5630 ;; Defined at:
  5631 ;;		line 65 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\OverTemperature_B1.c"
  5632 ;; Parameters:    Size  Location     Type
  5633 ;;		None
  5634 ;; Auto vars:     Size  Location     Type
  5635 ;;		None
  5636 ;; Return value:  Size  Location     Type
  5637 ;;		None               void
  5638 ;; Registers used:
  5639 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5640 ;; Tracked objects:
  5641 ;;		On entry : 0/0
  5642 ;;		On exit  : 0/0
  5643 ;;		Unchanged: 0/0
  5644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  5645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5647 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
  5648 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
  5649 ;;Total ram usage:        3 bytes
  5650 ;; Hardware stack levels used:    1
  5651 ;; Hardware stack levels required when called:    9
  5652 ;; This function calls:
  5653 ;;		_getLoad_Safe
  5654 ;;		_getPF_Safe
  5655 ;;		_setOverTemp_Exceptions
  5656 ;; This function is called by:
  5657 ;;		_Temp_Main
  5658 ;; This function uses a non-reentrant model
  5659 ;;
  5660                           psect	text4092
  5661                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\OverTemperature_B1.c"
  5662                           	line	65
  5663                           	global	__size_of_setTemp_Main
  5664  017B                     	__size_of_setTemp_Main	equ	__end_of_setTemp_Main-_setTemp_Main
  5665                           	
  5666  0E85                     _setTemp_Main:	
  5667                           	opt	stack 5
  5668                           ; Regs used in _setTemp_Main: [wreg+fsr1l-status,0+pclath+cstack]
  5669                           	line	66
  5670                           	
  5671  0E85                     l25486:	
  5672                           ;OverTemperature_B1.c: 66: if(Temp->Enable)
  5673  0E85  087C               	movf	(_Temp),w
  5674  0E86  0086               	movwf	fsr1l
  5675  0E87  3001               	movlw 1	; select bank2/3
  5676  0E88  0087               	movwf fsr1h	
  5677                           	
  5678  0E89  1C01               	btfss	indf1,0
  5679  0E8A  2E8C               	goto	u10131
  5680  0E8B  2E8D               	goto	u10130
  5681  0E8C                     u10131:
  5682  0E8C  2FFF               	goto	l11778
  5683  0E8D                     u10130:
  5684                           	line	68
  5685                           	
  5686  0E8D                     l25488:	
  5687                           ;OverTemperature_B1.c: 67: {
  5688                           ;OverTemperature_B1.c: 68: if(Temp->ADtoGO == 0)
  5689  0E8D  087C               	movf	(_Temp),w
  5690  0E8E  0086               	movwf	fsr1l
  5691  0E8F  3001               	movlw 1	; select bank2/3
  5692  0E90  0087               	movwf fsr1h	
  5693                           	
  5694  0E91  1901               	btfsc	indf1,2
  5695  0E92  2E94               	goto	u10141
  5696  0E93  2E95               	goto	u10140
  5697  0E94                     u10141:
  5698  0E94  2EE2               	goto	l25502
  5699  0E95                     u10140:
  5700                           	line	70
  5701                           	
  5702  0E95                     l25490:	
  5703                           ;OverTemperature_B1.c: 69: {
  5704                           ;OverTemperature_B1.c: 70: Temp->Time++;
  5705  0E95  087C               	movf	(_Temp),w
  5706  0E96  3E01               	addlw	01h
  5707  0E97  0086               	movwf	fsr1l
  5708  0E98  3001               	movlw 1	; select bank2/3
  5709  0E99  0087               	movwf fsr1h	
  5710                           	
  5711  0E9A  3001               	movlw	01h
  5712  0E9B  0781               	addwf	indf1,f
  5713  0E9C  3141               	addfsr	fsr1,1
  5714  0E9D  1803               	skipnc
  5715  0E9E  0A81               	incf	indf1,f
  5716                           	line	71
  5717                           	
  5718  0E9F                     l25492:	
  5719                           ;OverTemperature_B1.c: 71: if(Temp->Time >= 500)
  5720  0E9F  087C               	movf	(_Temp),w
  5721  0EA0  3E01               	addlw	01h
  5722  0EA1  0086               	movwf	fsr1l
  5723  0EA2  3001               	movlw 1	; select bank2/3
  5724  0EA3  0087               	movwf fsr1h	
  5725                           	
  5726  0EA4  3F40               	moviw	[0]fsr1
  5727  0EA5  0020               	movlb 0	; select bank0
  5728  0EA6  00AD               	movwf	(??_setTemp_Main+0)+0
  5729  0EA7  3F41               	moviw	[1]fsr1
  5730  0EA8  00AE               	movwf	(??_setTemp_Main+0)+0+1
  5731  0EA9  3001               	movlw	high(01F4h)
  5732  0EAA  022E               	subwf	1+(??_setTemp_Main+0)+0,w
  5733  0EAB  30F4               	movlw	low(01F4h)
  5734  0EAC  1903               	skipnz
  5735  0EAD  022D               	subwf	0+(??_setTemp_Main+0)+0,w
  5736  0EAE  1C03               	skipc
  5737  0EAF  2EB1               	goto	u10151
  5738  0EB0  2EB2               	goto	u10150
  5739  0EB1                     u10151:
  5740  0EB1  2FFF               	goto	l11778
  5741  0EB2                     u10150:
  5742                           	line	73
  5743                           	
  5744  0EB2                     l25494:	
  5745                           ;OverTemperature_B1.c: 72: {
  5746                           ;OverTemperature_B1.c: 73: if(getLoad_Safe() && getPF_Safe())
  5747  0EB2  31A1  2159  318E   	fcall	_getLoad_Safe
  5748  0EB5  3A00               	xorlw	0&0ffh
  5749  0EB6  1903               	skipnz
  5750  0EB7  2EB9               	goto	u10161
  5751  0EB8  2EBA               	goto	u10160
  5752  0EB9                     u10161:
  5753  0EB9  2ED6               	goto	l25500
  5754  0EBA                     u10160:
  5755                           	
  5756  0EBA                     l25496:	
  5757  0EBA  31A0  20ED  318E   	fcall	_getPF_Safe
  5758  0EBD  3A00               	xorlw	0&0ffh
  5759  0EBE  1903               	skipnz
  5760  0EBF  2EC1               	goto	u10171
  5761  0EC0  2EC2               	goto	u10170
  5762  0EC1                     u10171:
  5763  0EC1  2ED6               	goto	l25500
  5764  0EC2                     u10170:
  5765                           	line	75
  5766                           	
  5767  0EC2                     l25498:	
  5768                           ;OverTemperature_B1.c: 74: {
  5769                           ;OverTemperature_B1.c: 75: Temp->Time=0;
  5770  0EC2  087C               	movf	(_Temp),w
  5771  0EC3  3E01               	addlw	01h
  5772  0EC4  0086               	movwf	fsr1l
  5773  0EC5  3001               	movlw 1	; select bank2/3
  5774  0EC6  0087               	movwf fsr1h	
  5775                           	
  5776  0EC7  3000               	movlw	low(0)
  5777  0EC8  3FC0               	movwi	[0]fsr1
  5778  0EC9  3000               	movlw	high(0)
  5779  0ECA  3FC1               	movwi	[1]fsr1
  5780                           	line	76
  5781                           ;OverTemperature_B1.c: 76: Temp->ADtoGO=1;
  5782  0ECB  087C               	movf	(_Temp),w
  5783  0ECC  0086               	movwf	fsr1l
  5784  0ECD  3001               	movlw 1	; select bank2/3
  5785  0ECE  0087               	movwf fsr1h	
  5786                           	
  5787  0ECF  1501               	bsf	indf1,2
  5788                           	line	77
  5789                           ;OverTemperature_B1.c: 77: Temp->Safe=0;
  5790  0ED0  087C               	movf	(_Temp),w
  5791  0ED1  0086               	movwf	fsr1l
  5792  0ED2  3001               	movlw 1	; select bank2/3
  5793  0ED3  0087               	movwf fsr1h	
  5794                           	
  5795  0ED4  1201               	bcf	indf1,4
  5796                           	line	78
  5797                           ;OverTemperature_B1.c: 78: }
  5798  0ED5  2FFF               	goto	l11778
  5799                           	line	79
  5800                           	
  5801  0ED6                     l11765:	
  5802                           	line	81
  5803                           	
  5804  0ED6                     l25500:	
  5805                           ;OverTemperature_B1.c: 79: else
  5806                           ;OverTemperature_B1.c: 80: {
  5807                           ;OverTemperature_B1.c: 81: Temp->Time=1000;
  5808  0ED6  087C               	movf	(_Temp),w
  5809  0ED7  3E01               	addlw	01h
  5810  0ED8  0086               	movwf	fsr1l
  5811  0ED9  3001               	movlw 1	; select bank2/3
  5812  0EDA  0087               	movwf fsr1h	
  5813                           	
  5814  0EDB  30E8               	movlw	low(03E8h)
  5815  0EDC  3FC0               	movwi	[0]fsr1
  5816  0EDD  3003               	movlw	high(03E8h)
  5817  0EDE  3FC1               	movwi	[1]fsr1
  5818  0EDF  2FFF               	goto	l11778
  5819                           	line	82
  5820                           	
  5821  0EE0                     l11766:	
  5822  0EE0  2FFF               	goto	l11778
  5823                           	line	83
  5824                           	
  5825  0EE1                     l11764:	
  5826                           	line	84
  5827                           ;OverTemperature_B1.c: 82: }
  5828                           ;OverTemperature_B1.c: 83: }
  5829                           ;OverTemperature_B1.c: 84: }
  5830  0EE1  2FFF               	goto	l11778
  5831                           	line	85
  5832                           	
  5833  0EE2                     l11763:	
  5834                           	line	87
  5835                           	
  5836  0EE2                     l25502:	
  5837                           ;OverTemperature_B1.c: 85: else
  5838                           ;OverTemperature_B1.c: 86: {
  5839                           ;OverTemperature_B1.c: 87: Temp->Time++;
  5840  0EE2  087C               	movf	(_Temp),w
  5841  0EE3  3E01               	addlw	01h
  5842  0EE4  0086               	movwf	fsr1l
  5843  0EE5  3001               	movlw 1	; select bank2/3
  5844  0EE6  0087               	movwf fsr1h	
  5845                           	
  5846  0EE7  3001               	movlw	01h
  5847  0EE8  0781               	addwf	indf1,f
  5848  0EE9  3141               	addfsr	fsr1,1
  5849  0EEA  1803               	skipnc
  5850  0EEB  0A81               	incf	indf1,f
  5851                           	line	88
  5852                           	
  5853  0EEC                     l25504:	
  5854                           ;OverTemperature_B1.c: 88: if(Temp->Time >= 4)
  5855  0EEC  087C               	movf	(_Temp),w
  5856  0EED  3E01               	addlw	01h
  5857  0EEE  0086               	movwf	fsr1l
  5858  0EEF  3001               	movlw 1	; select bank2/3
  5859  0EF0  0087               	movwf fsr1h	
  5860                           	
  5861  0EF1  3F40               	moviw	[0]fsr1
  5862  0EF2  0020               	movlb 0	; select bank0
  5863  0EF3  00AD               	movwf	(??_setTemp_Main+0)+0
  5864  0EF4  3F41               	moviw	[1]fsr1
  5865  0EF5  00AE               	movwf	(??_setTemp_Main+0)+0+1
  5866  0EF6  3000               	movlw	high(04h)
  5867  0EF7  022E               	subwf	1+(??_setTemp_Main+0)+0,w
  5868  0EF8  3004               	movlw	low(04h)
  5869  0EF9  1903               	skipnz
  5870  0EFA  022D               	subwf	0+(??_setTemp_Main+0)+0,w
  5871  0EFB  1C03               	skipc
  5872  0EFC  2EFE               	goto	u10181
  5873  0EFD  2EFF               	goto	u10180
  5874  0EFE                     u10181:
  5875  0EFE  2FFF               	goto	l11778
  5876  0EFF                     u10180:
  5877                           	line	90
  5878                           	
  5879  0EFF                     l25506:	
  5880                           ;OverTemperature_B1.c: 89: {
  5881                           ;OverTemperature_B1.c: 90: Temp->Time=0;
  5882  0EFF  087C               	movf	(_Temp),w
  5883  0F00  3E01               	addlw	01h
  5884  0F01  0086               	movwf	fsr1l
  5885  0F02  3001               	movlw 1	; select bank2/3
  5886  0F03  0087               	movwf fsr1h	
  5887                           	
  5888  0F04  3000               	movlw	low(0)
  5889  0F05  3FC0               	movwi	[0]fsr1
  5890  0F06  3000               	movlw	high(0)
  5891  0F07  3FC1               	movwi	[1]fsr1
  5892                           	line	91
  5893                           ;OverTemperature_B1.c: 91: Temp->ADtoGO=0;
  5894  0F08  087C               	movf	(_Temp),w
  5895  0F09  0086               	movwf	fsr1l
  5896  0F0A  3001               	movlw 1	; select bank2/3
  5897  0F0B  0087               	movwf fsr1h	
  5898                           	
  5899  0F0C  1101               	bcf	indf1,2
  5900                           	line	92
  5901                           ;OverTemperature_B1.c: 92: Temp->AD=Temp->ADH[1];
  5902  0F0D  087C               	movf	(_Temp),w
  5903  0F0E  3E08               	addlw	08h
  5904  0F0F  0086               	movwf	fsr1l
  5905  0F10  3001               	movlw 1	; select bank2/3
  5906  0F11  0087               	movwf fsr1h	
  5907                           	
  5908  0F12  3F40               	moviw	[0]fsr1
  5909  0F13  00AD               	movwf	(??_setTemp_Main+0)+0
  5910  0F14  3F41               	moviw	[1]fsr1
  5911  0F15  00AE               	movwf	(??_setTemp_Main+0)+0+1
  5912  0F16  087C               	movf	(_Temp),w
  5913  0F17  3E04               	addlw	04h
  5914  0F18  0086               	movwf	fsr1l
  5915  0F19  3001               	movlw 1	; select bank2/3
  5916  0F1A  0087               	movwf fsr1h	
  5917                           	
  5918  0F1B  082D               	movf	0+(??_setTemp_Main+0)+0,w
  5919  0F1C  3FC0               	movwi	[0]fsr1
  5920  0F1D  082E               	movf	1+(??_setTemp_Main+0)+0,w
  5921  0F1E  3FC1               	movwi	[1]fsr1
  5922                           	line	93
  5923                           ;OverTemperature_B1.c: 93: if(Temp->ERROR)
  5924  0F1F  087C               	movf	(_Temp),w
  5925  0F20  0086               	movwf	fsr1l
  5926  0F21  3001               	movlw 1	; select bank2/3
  5927  0F22  0087               	movwf fsr1h	
  5928                           	
  5929  0F23  1C81               	btfss	indf1,1
  5930  0F24  2F26               	goto	u10191
  5931  0F25  2F27               	goto	u10190
  5932  0F26                     u10191:
  5933  0F26  2F61               	goto	l25520
  5934  0F27                     u10190:
  5935                           	line	95
  5936                           	
  5937  0F27                     l25508:	
  5938                           ;OverTemperature_B1.c: 94: {
  5939                           ;OverTemperature_B1.c: 95: if(Temp->AD >= 600)
  5940  0F27  087C               	movf	(_Temp),w
  5941  0F28  3E04               	addlw	04h
  5942  0F29  0086               	movwf	fsr1l
  5943  0F2A  3001               	movlw 1	; select bank2/3
  5944  0F2B  0087               	movwf fsr1h	
  5945                           	
  5946  0F2C  3F40               	moviw	[0]fsr1
  5947  0F2D  00AD               	movwf	(??_setTemp_Main+0)+0
  5948  0F2E  3F41               	moviw	[1]fsr1
  5949  0F2F  00AE               	movwf	(??_setTemp_Main+0)+0+1
  5950  0F30  3002               	movlw	high(0258h)
  5951  0F31  022E               	subwf	1+(??_setTemp_Main+0)+0,w
  5952  0F32  3058               	movlw	low(0258h)
  5953  0F33  1903               	skipnz
  5954  0F34  022D               	subwf	0+(??_setTemp_Main+0)+0,w
  5955  0F35  1C03               	skipc
  5956  0F36  2F38               	goto	u10201
  5957  0F37  2F39               	goto	u10200
  5958  0F38                     u10201:
  5959  0F38  2F59               	goto	l25518
  5960  0F39                     u10200:
  5961                           	line	97
  5962                           	
  5963  0F39                     l25510:	
  5964                           ;OverTemperature_B1.c: 96: {
  5965                           ;OverTemperature_B1.c: 97: Temp->Count++;
  5966  0F39  3001               	movlw	(01h)
  5967  0F3A  00AD               	movwf	(??_setTemp_Main+0)+0
  5968  0F3B  087C               	movf	(_Temp),w
  5969  0F3C  3E03               	addlw	03h
  5970  0F3D  0086               	movwf	fsr1l
  5971  0F3E  3001               	movlw 1	; select bank2/3
  5972  0F3F  0087               	movwf fsr1h	
  5973                           	
  5974  0F40  082D               	movf	(??_setTemp_Main+0)+0,w
  5975  0F41  0781               	addwf	indf1,f
  5976                           	line	98
  5977                           	
  5978  0F42                     l25512:	
  5979                           ;OverTemperature_B1.c: 98: if(Temp->Count >= 3)
  5980  0F42  087C               	movf	(_Temp),w
  5981  0F43  3E03               	addlw	03h
  5982  0F44  0086               	movwf	fsr1l
  5983  0F45  3001               	movlw 1	; select bank2/3
  5984  0F46  0087               	movwf fsr1h	
  5985                           	
  5986  0F47  3003               	movlw	(03h)
  5987  0F48  0201               	subwf	indf1,w
  5988  0F49  1C03               	skipc
  5989  0F4A  2F4C               	goto	u10211
  5990  0F4B  2F4D               	goto	u10210
  5991  0F4C                     u10211:
  5992  0F4C  2F9B               	goto	l11773
  5993  0F4D                     u10210:
  5994                           	line	100
  5995                           	
  5996  0F4D                     l25514:	
  5997                           ;OverTemperature_B1.c: 99: {
  5998                           ;OverTemperature_B1.c: 100: Temp->Count=0;
  5999  0F4D  087C               	movf	(_Temp),w
  6000  0F4E  3E03               	addlw	03h
  6001  0F4F  0086               	movwf	fsr1l
  6002  0F50  3001               	movlw 1	; select bank2/3
  6003  0F51  0087               	movwf fsr1h	
  6004                           	
  6005  0F52  0181               	clrf	indf1
  6006                           	line	101
  6007                           	
  6008  0F53                     l25516:	
  6009                           ;OverTemperature_B1.c: 101: setOverTemp_Exceptions(0);
  6010  0F53  3000               	movlw	(0)
  6011  0F54  319B  230B  318E   	fcall	_setOverTemp_Exceptions
  6012  0F57  2F9B               	goto	l11773
  6013                           	line	102
  6014                           	
  6015  0F58                     l11771:	
  6016                           	line	103
  6017                           ;OverTemperature_B1.c: 102: }
  6018                           ;OverTemperature_B1.c: 103: }
  6019  0F58  2F9B               	goto	l11773
  6020                           	line	104
  6021                           	
  6022  0F59                     l11770:	
  6023                           	line	106
  6024                           	
  6025  0F59                     l25518:	
  6026                           ;OverTemperature_B1.c: 104: else
  6027                           ;OverTemperature_B1.c: 105: {
  6028                           ;OverTemperature_B1.c: 106: Temp->Count=0;
  6029  0F59  087C               	movf	(_Temp),w
  6030  0F5A  3E03               	addlw	03h
  6031  0F5B  0086               	movwf	fsr1l
  6032  0F5C  3001               	movlw 1	; select bank2/3
  6033  0F5D  0087               	movwf fsr1h	
  6034                           	
  6035  0F5E  0181               	clrf	indf1
  6036  0F5F  2F9B               	goto	l11773
  6037                           	line	107
  6038                           	
  6039  0F60                     l11772:	
  6040                           	line	108
  6041                           ;OverTemperature_B1.c: 107: }
  6042                           ;OverTemperature_B1.c: 108: }
  6043  0F60  2F9B               	goto	l11773
  6044                           	line	109
  6045                           	
  6046  0F61                     l11769:	
  6047                           	line	111
  6048                           	
  6049  0F61                     l25520:	
  6050                           ;OverTemperature_B1.c: 109: else
  6051                           ;OverTemperature_B1.c: 110: {
  6052                           ;OverTemperature_B1.c: 111: if(Temp->AD <= 550)
  6053  0F61  087C               	movf	(_Temp),w
  6054  0F62  3E04               	addlw	04h
  6055  0F63  0086               	movwf	fsr1l
  6056  0F64  3001               	movlw 1	; select bank2/3
  6057  0F65  0087               	movwf fsr1h	
  6058                           	
  6059  0F66  3F40               	moviw	[0]fsr1
  6060  0F67  0020               	movlb 0	; select bank0
  6061  0F68  00AD               	movwf	(??_setTemp_Main+0)+0
  6062  0F69  3F41               	moviw	[1]fsr1
  6063  0F6A  00AE               	movwf	(??_setTemp_Main+0)+0+1
  6064  0F6B  3002               	movlw	high(0227h)
  6065  0F6C  022E               	subwf	1+(??_setTemp_Main+0)+0,w
  6066  0F6D  3027               	movlw	low(0227h)
  6067  0F6E  1903               	skipnz
  6068  0F6F  022D               	subwf	0+(??_setTemp_Main+0)+0,w
  6069  0F70  1803               	skipnc
  6070  0F71  2F73               	goto	u10221
  6071  0F72  2F74               	goto	u10220
  6072  0F73                     u10221:
  6073  0F73  2F94               	goto	l25530
  6074  0F74                     u10220:
  6075                           	line	113
  6076                           	
  6077  0F74                     l25522:	
  6078                           ;OverTemperature_B1.c: 112: {
  6079                           ;OverTemperature_B1.c: 113: Temp->Count++;
  6080  0F74  3001               	movlw	(01h)
  6081  0F75  00AD               	movwf	(??_setTemp_Main+0)+0
  6082  0F76  087C               	movf	(_Temp),w
  6083  0F77  3E03               	addlw	03h
  6084  0F78  0086               	movwf	fsr1l
  6085  0F79  3001               	movlw 1	; select bank2/3
  6086  0F7A  0087               	movwf fsr1h	
  6087                           	
  6088  0F7B  082D               	movf	(??_setTemp_Main+0)+0,w
  6089  0F7C  0781               	addwf	indf1,f
  6090                           	line	114
  6091                           	
  6092  0F7D                     l25524:	
  6093                           ;OverTemperature_B1.c: 114: if(Temp->Count >= 3)
  6094  0F7D  087C               	movf	(_Temp),w
  6095  0F7E  3E03               	addlw	03h
  6096  0F7F  0086               	movwf	fsr1l
  6097  0F80  3001               	movlw 1	; select bank2/3
  6098  0F81  0087               	movwf fsr1h	
  6099                           	
  6100  0F82  3003               	movlw	(03h)
  6101  0F83  0201               	subwf	indf1,w
  6102  0F84  1C03               	skipc
  6103  0F85  2F87               	goto	u10231
  6104  0F86  2F88               	goto	u10230
  6105  0F87                     u10231:
  6106  0F87  2F9B               	goto	l11773
  6107  0F88                     u10230:
  6108                           	line	116
  6109                           	
  6110  0F88                     l25526:	
  6111                           ;OverTemperature_B1.c: 115: {
  6112                           ;OverTemperature_B1.c: 116: Temp->Count=0;
  6113  0F88  087C               	movf	(_Temp),w
  6114  0F89  3E03               	addlw	03h
  6115  0F8A  0086               	movwf	fsr1l
  6116  0F8B  3001               	movlw 1	; select bank2/3
  6117  0F8C  0087               	movwf fsr1h	
  6118                           	
  6119  0F8D  0181               	clrf	indf1
  6120                           	line	117
  6121                           	
  6122  0F8E                     l25528:	
  6123                           ;OverTemperature_B1.c: 117: setOverTemp_Exceptions(1);
  6124  0F8E  3001               	movlw	(01h)
  6125  0F8F  319B  230B  318E   	fcall	_setOverTemp_Exceptions
  6126  0F92  2F9B               	goto	l11773
  6127                           	line	118
  6128                           	
  6129  0F93                     l11775:	
  6130                           	line	119
  6131                           ;OverTemperature_B1.c: 118: }
  6132                           ;OverTemperature_B1.c: 119: }
  6133  0F93  2F9B               	goto	l11773
  6134                           	line	120
  6135                           	
  6136  0F94                     l11774:	
  6137                           	line	122
  6138                           	
  6139  0F94                     l25530:	
  6140                           ;OverTemperature_B1.c: 120: else
  6141                           ;OverTemperature_B1.c: 121: {
  6142                           ;OverTemperature_B1.c: 122: Temp->Count=0;
  6143  0F94  087C               	movf	(_Temp),w
  6144  0F95  3E03               	addlw	03h
  6145  0F96  0086               	movwf	fsr1l
  6146  0F97  3001               	movlw 1	; select bank2/3
  6147  0F98  0087               	movwf fsr1h	
  6148                           	
  6149  0F99  0181               	clrf	indf1
  6150  0F9A  2F9B               	goto	l11773
  6151                           	line	123
  6152                           	
  6153  0F9B                     l11776:	
  6154                           	line	124
  6155                           	
  6156  0F9B                     l11773:	
  6157                           	line	125
  6158                           ;OverTemperature_B1.c: 123: }
  6159                           ;OverTemperature_B1.c: 124: }
  6160                           ;OverTemperature_B1.c: 125: if(Temp->ERROR == 0)
  6161  0F9B  087C               	movf	(_Temp),w
  6162  0F9C  0086               	movwf	fsr1l
  6163  0F9D  3001               	movlw 1	; select bank2/3
  6164  0F9E  0087               	movwf fsr1h	
  6165                           	
  6166  0F9F  1881               	btfsc	indf1,1
  6167  0FA0  2FA2               	goto	u10241
  6168  0FA1  2FA3               	goto	u10240
  6169  0FA2                     u10241:
  6170  0FA2  2FA9               	goto	l25534
  6171  0FA3                     u10240:
  6172                           	line	127
  6173                           	
  6174  0FA3                     l25532:	
  6175                           ;OverTemperature_B1.c: 126: {
  6176                           ;OverTemperature_B1.c: 127: Temp->Safe=1;
  6177  0FA3  087C               	movf	(_Temp),w
  6178  0FA4  0086               	movwf	fsr1l
  6179  0FA5  3001               	movlw 1	; select bank2/3
  6180  0FA6  0087               	movwf fsr1h	
  6181                           	
  6182  0FA7  1601               	bsf	indf1,4
  6183  0FA8  2FA9               	goto	l25534
  6184                           	line	128
  6185                           	
  6186  0FA9                     l11777:	
  6187                           	line	129
  6188                           	
  6189  0FA9                     l25534:	
  6190                           ;OverTemperature_B1.c: 128: }
  6191                           ;OverTemperature_B1.c: 129: Product->Data[24]=Temp->AD >> 8;
  6192  0FA9  087C               	movf	(_Temp),w
  6193  0FAA  3E04               	addlw	04h
  6194  0FAB  0086               	movwf	fsr1l
  6195  0FAC  3001               	movlw 1	; select bank2/3
  6196  0FAD  0087               	movwf fsr1h	
  6197                           	
  6198  0FAE  3F40               	moviw	[0]fsr1
  6199  0FAF  0020               	movlb 0	; select bank0
  6200  0FB0  00AD               	movwf	(??_setTemp_Main+0)+0
  6201  0FB1  3F41               	moviw	[1]fsr1
  6202  0FB2  00AE               	movwf	(??_setTemp_Main+0)+0+1
  6203  0FB3  082E               	movf	1+(??_setTemp_Main+0)+0,w
  6204  0FB4  00AF               	movwf	(??_setTemp_Main+2)+0
  6205  0FB5  086F               	movf	(_Product),w
  6206  0FB6  3E18               	addlw	018h
  6207  0FB7  0086               	movwf	fsr1l
  6208  0FB8  3001               	movlw 1	; select bank2/3
  6209  0FB9  0087               	movwf fsr1h	
  6210                           	
  6211  0FBA  082F               	movf	(??_setTemp_Main+2)+0,w
  6212  0FBB  0081               	movwf	indf1
  6213                           	line	130
  6214                           	
  6215  0FBC                     l25536:	
  6216                           ;OverTemperature_B1.c: 130: Product->Data[25]=Temp->AD;
  6217  0FBC  087C               	movf	(_Temp),w
  6218  0FBD  3E04               	addlw	04h
  6219  0FBE  0086               	movwf	fsr1l
  6220  0FBF  3001               	movlw 1	; select bank2/3
  6221  0FC0  0087               	movwf fsr1h	
  6222                           	
  6223  0FC1  0801               	movf	indf1,w
  6224  0FC2  00AD               	movwf	(??_setTemp_Main+0)+0
  6225  0FC3  086F               	movf	(_Product),w
  6226  0FC4  3E19               	addlw	019h
  6227  0FC5  0086               	movwf	fsr1l
  6228  0FC6  3001               	movlw 1	; select bank2/3
  6229  0FC7  0087               	movwf fsr1h	
  6230                           	
  6231  0FC8  082D               	movf	(??_setTemp_Main+0)+0,w
  6232  0FC9  0081               	movwf	indf1
  6233                           	line	131
  6234                           ;OverTemperature_B1.c: 131: Product->Data[3]=Temp->AD >> 8;
  6235  0FCA  087C               	movf	(_Temp),w
  6236  0FCB  3E04               	addlw	04h
  6237  0FCC  0086               	movwf	fsr1l
  6238  0FCD  3001               	movlw 1	; select bank2/3
  6239  0FCE  0087               	movwf fsr1h	
  6240                           	
  6241  0FCF  3F40               	moviw	[0]fsr1
  6242  0FD0  00AD               	movwf	(??_setTemp_Main+0)+0
  6243  0FD1  3F41               	moviw	[1]fsr1
  6244  0FD2  00AE               	movwf	(??_setTemp_Main+0)+0+1
  6245  0FD3  082E               	movf	1+(??_setTemp_Main+0)+0,w
  6246  0FD4  00AF               	movwf	(??_setTemp_Main+2)+0
  6247  0FD5  086F               	movf	(_Product),w
  6248  0FD6  3E03               	addlw	03h
  6249  0FD7  0086               	movwf	fsr1l
  6250  0FD8  3001               	movlw 1	; select bank2/3
  6251  0FD9  0087               	movwf fsr1h	
  6252                           	
  6253  0FDA  082F               	movf	(??_setTemp_Main+2)+0,w
  6254  0FDB  0081               	movwf	indf1
  6255                           	line	132
  6256                           	
  6257  0FDC                     l25538:	
  6258                           ;OverTemperature_B1.c: 132: Product->Data[4]=Temp->AD;
  6259  0FDC  087C               	movf	(_Temp),w
  6260  0FDD  3E04               	addlw	04h
  6261  0FDE  0086               	movwf	fsr1l
  6262  0FDF  3001               	movlw 1	; select bank2/3
  6263  0FE0  0087               	movwf fsr1h	
  6264                           	
  6265  0FE1  0801               	movf	indf1,w
  6266  0FE2  00AD               	movwf	(??_setTemp_Main+0)+0
  6267  0FE3  086F               	movf	(_Product),w
  6268  0FE4  3E04               	addlw	04h
  6269  0FE5  0086               	movwf	fsr1l
  6270  0FE6  3001               	movlw 1	; select bank2/3
  6271  0FE7  0087               	movwf fsr1h	
  6272                           	
  6273  0FE8  082D               	movf	(??_setTemp_Main+0)+0,w
  6274  0FE9  0081               	movwf	indf1
  6275                           	line	133
  6276                           	
  6277  0FEA                     l25540:	
  6278                           ;OverTemperature_B1.c: 133: Temp->ADH[0]=0;
  6279  0FEA  087C               	movf	(_Temp),w
  6280  0FEB  3E06               	addlw	06h
  6281  0FEC  0086               	movwf	fsr1l
  6282  0FED  3001               	movlw 1	; select bank2/3
  6283  0FEE  0087               	movwf fsr1h	
  6284                           	
  6285  0FEF  3000               	movlw	low(0)
  6286  0FF0  3FC0               	movwi	[0]fsr1
  6287  0FF1  3000               	movlw	high(0)
  6288  0FF2  3FC1               	movwi	[1]fsr1
  6289                           	line	134
  6290                           	
  6291  0FF3                     l25542:	
  6292                           ;OverTemperature_B1.c: 134: Temp->ADH[1]=0;
  6293  0FF3  087C               	movf	(_Temp),w
  6294  0FF4  3E08               	addlw	08h
  6295  0FF5  0086               	movwf	fsr1l
  6296  0FF6  3001               	movlw 1	; select bank2/3
  6297  0FF7  0087               	movwf fsr1h	
  6298                           	
  6299  0FF8  3000               	movlw	low(0)
  6300  0FF9  3FC0               	movwi	[0]fsr1
  6301  0FFA  3000               	movlw	high(0)
  6302  0FFB  3FC1               	movwi	[1]fsr1
  6303  0FFC  2FFF               	goto	l11778
  6304                           	line	135
  6305                           	
  6306  0FFD                     l11768:	
  6307  0FFD  2FFF               	goto	l11778
  6308                           	line	136
  6309                           	
  6310  0FFE                     l11767:	
  6311  0FFE  2FFF               	goto	l11778
  6312                           	line	137
  6313                           	
  6314  0FFF                     l11762:	
  6315                           	line	138
  6316                           	
  6317  0FFF                     l11778:	
  6318  0FFF  0008               	return
  6319                           	opt stack 0
  6320                           GLOBAL	__end_of_setTemp_Main
  6321  1000                     	__end_of_setTemp_Main:
  6322 ;; =============== function _setTemp_Main ends ============
  6323                           
  6324                           	signat	_setTemp_Main,88
  6325                           	global	_Load_Main
  6326                           psect	text4093,local,class=CODE,delta=2
  6327                           global __ptext4093
  6328  0018                     __ptext4093:
  6329                           
  6330 ;; *************** function _Load_Main *****************
  6331 ;; Defined at:
  6332 ;;		line 46 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\OverLoad_B1.c"
  6333 ;; Parameters:    Size  Location     Type
  6334 ;;		None
  6335 ;; Auto vars:     Size  Location     Type
  6336 ;;  i               1   17[BANK0 ] unsigned char 
  6337 ;; Return value:  Size  Location     Type
  6338 ;;		None               void
  6339 ;; Registers used:
  6340 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6341 ;; Tracked objects:
  6342 ;;		On entry : 0/0
  6343 ;;		On exit  : 0/0
  6344 ;;		Unchanged: 0/0
  6345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  6346 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  6347 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  6348 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
  6349 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
       0       0
  6350 ;;Total ram usage:        5 bytes
  6351 ;; Hardware stack levels used:    1
  6352 ;; Hardware stack levels required when called:    9
  6353 ;; This function calls:
  6354 ;;		_setLoad_Exceptions
  6355 ;;		___lwdiv
  6356 ;;		_setDimmerLights_Clear
  6357 ;;		___wmul
  6358 ;;		_setLoad_AH_AL_Restore
  6359 ;;		_getTemp_Safe
  6360 ;;		_getPF_Safe
  6361 ;; This function is called by:
  6362 ;;		_main
  6363 ;; This function uses a non-reentrant model
  6364 ;;
  6365                           psect	text4093
  6366                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\OverLoad_B1.c"
  6367                           	line	46
  6368                           	global	__size_of_Load_Main
  6369  02F6                     	__size_of_Load_Main	equ	__end_of_Load_Main-_Load_Main
  6370                           	
  6371  0018                     _Load_Main:	
  6372                           	opt	stack 6
  6373                           ; Regs used in _Load_Main: [wreg-status,0+pclath+cstack]
  6374                           	line	48
  6375                           	
  6376  0018                     l25382:	
  6377                           ;OverLoad_B1.c: 47: char i;
  6378                           ;OverLoad_B1.c: 48: if(Load->ERROR)
  6379  0018  0020               	movlb 0	; select bank0
  6380  0019  086D               	movf	(_Load),w
  6381  001A  0086               	movwf	fsr1l
  6382  001B  3002               	movlw 2	; select bank4/5
  6383  001C  0087               	movwf fsr1h	
  6384                           	
  6385  001D  1E81               	btfss	indf1,5
  6386  001E  2820               	goto	u9911
  6387  001F  2821               	goto	u9910
  6388  0020                     u9911:
  6389  0020  284C               	goto	l25392
  6390  0021                     u9910:
  6391                           	line	50
  6392                           	
  6393  0021                     l25384:	
  6394                           ;OverLoad_B1.c: 49: {
  6395                           ;OverLoad_B1.c: 50: Load->ErrorTime++;
  6396  0021  086D               	movf	(_Load),w
  6397  0022  3E03               	addlw	03h
  6398  0023  0086               	movwf	fsr1l
  6399  0024  3002               	movlw 2	; select bank4/5
  6400  0025  0087               	movwf fsr1h	
  6401                           	
  6402  0026  3001               	movlw	01h
  6403  0027  0781               	addwf	indf1,f
  6404  0028  3141               	addfsr	fsr1,1
  6405  0029  1803               	skipnc
  6406  002A  0A81               	incf	indf1,f
  6407                           	line	51
  6408                           	
  6409  002B                     l25386:	
  6410                           ;OverLoad_B1.c: 51: if(Load->ErrorTime >= 1000)
  6411  002B  086D               	movf	(_Load),w
  6412  002C  3E03               	addlw	03h
  6413  002D  0086               	movwf	fsr1l
  6414  002E  3002               	movlw 2	; select bank4/5
  6415  002F  0087               	movwf fsr1h	
  6416                           	
  6417  0030  3F40               	moviw	[0]fsr1
  6418  0031  00AD               	movwf	(??_Load_Main+0)+0
  6419  0032  3F41               	moviw	[1]fsr1
  6420  0033  00AE               	movwf	(??_Load_Main+0)+0+1
  6421  0034  3003               	movlw	high(03E8h)
  6422  0035  022E               	subwf	1+(??_Load_Main+0)+0,w
  6423  0036  30E8               	movlw	low(03E8h)
  6424  0037  1903               	skipnz
  6425  0038  022D               	subwf	0+(??_Load_Main+0)+0,w
  6426  0039  1C03               	skipc
  6427  003A  283C               	goto	u9921
  6428  003B  283D               	goto	u9920
  6429  003C                     u9921:
  6430  003C  2B0D               	goto	l10580
  6431  003D                     u9920:
  6432                           	line	53
  6433                           	
  6434  003D                     l25388:	
  6435                           ;OverLoad_B1.c: 52: {
  6436                           ;OverLoad_B1.c: 53: Load->ErrorTime=0;
  6437  003D  086D               	movf	(_Load),w
  6438  003E  3E03               	addlw	03h
  6439  003F  0086               	movwf	fsr1l
  6440  0040  3002               	movlw 2	; select bank4/5
  6441  0041  0087               	movwf fsr1h	
  6442                           	
  6443  0042  3000               	movlw	low(0)
  6444  0043  3FC0               	movwi	[0]fsr1
  6445  0044  3000               	movlw	high(0)
  6446  0045  3FC1               	movwi	[1]fsr1
  6447                           	line	54
  6448                           	
  6449  0046                     l25390:	
  6450                           ;OverLoad_B1.c: 54: setLoad_Exceptions(0);
  6451  0046  3000               	movlw	(0)
  6452  0047  319B  2357  3180   	fcall	_setLoad_Exceptions
  6453  004A  2B0D               	goto	l10580
  6454                           	line	55
  6455                           	
  6456  004B                     l10554:	
  6457                           	line	56
  6458                           ;OverLoad_B1.c: 55: }
  6459                           ;OverLoad_B1.c: 56: }
  6460  004B  2B0D               	goto	l10580
  6461                           	line	57
  6462                           	
  6463  004C                     l10553:	
  6464                           	line	59
  6465                           	
  6466  004C                     l25392:	
  6467                           ;OverLoad_B1.c: 57: else
  6468                           ;OverLoad_B1.c: 58: {
  6469                           ;OverLoad_B1.c: 59: if(Load->ADtoGO)
  6470  004C  0020               	movlb 0	; select bank0
  6471  004D  086D               	movf	(_Load),w
  6472  004E  0086               	movwf	fsr1l
  6473  004F  3002               	movlw 2	; select bank4/5
  6474  0050  0087               	movwf fsr1h	
  6475                           	
  6476  0051  1E01               	btfss	indf1,4
  6477  0052  2854               	goto	u9931
  6478  0053  2855               	goto	u9930
  6479  0054                     u9931:
  6480  0054  2A88               	goto	l25466
  6481  0055                     u9930:
  6482                           	line	61
  6483                           	
  6484  0055                     l25394:	
  6485                           ;OverLoad_B1.c: 60: {
  6486                           ;OverLoad_B1.c: 61: Load->Time++;
  6487  0055  086D               	movf	(_Load),w
  6488  0056  3E01               	addlw	01h
  6489  0057  0086               	movwf	fsr1l
  6490  0058  3002               	movlw 2	; select bank4/5
  6491  0059  0087               	movwf fsr1h	
  6492                           	
  6493  005A  3001               	movlw	01h
  6494  005B  0781               	addwf	indf1,f
  6495  005C  3141               	addfsr	fsr1,1
  6496  005D  1803               	skipnc
  6497  005E  0A81               	incf	indf1,f
  6498                           	line	62
  6499                           	
  6500  005F                     l25396:	
  6501                           ;OverLoad_B1.c: 62: if(Load->Time >= 5)
  6502  005F  086D               	movf	(_Load),w
  6503  0060  3E01               	addlw	01h
  6504  0061  0086               	movwf	fsr1l
  6505  0062  3002               	movlw 2	; select bank4/5
  6506  0063  0087               	movwf fsr1h	
  6507                           	
  6508  0064  3F40               	moviw	[0]fsr1
  6509  0065  00AD               	movwf	(??_Load_Main+0)+0
  6510  0066  3F41               	moviw	[1]fsr1
  6511  0067  00AE               	movwf	(??_Load_Main+0)+0+1
  6512  0068  3000               	movlw	high(05h)
  6513  0069  022E               	subwf	1+(??_Load_Main+0)+0,w
  6514  006A  3005               	movlw	low(05h)
  6515  006B  1903               	skipnz
  6516  006C  022D               	subwf	0+(??_Load_Main+0)+0,w
  6517  006D  1C03               	skipc
  6518  006E  2870               	goto	u9941
  6519  006F  2871               	goto	u9940
  6520  0070                     u9941:
  6521  0070  2B0D               	goto	l10580
  6522  0071                     u9940:
  6523                           	line	64
  6524                           	
  6525  0071                     l25398:	
  6526                           ;OverLoad_B1.c: 63: {
  6527                           ;OverLoad_B1.c: 64: Load->Time=0;
  6528  0071  086D               	movf	(_Load),w
  6529  0072  3E01               	addlw	01h
  6530  0073  0086               	movwf	fsr1l
  6531  0074  3002               	movlw 2	; select bank4/5
  6532  0075  0087               	movwf fsr1h	
  6533                           	
  6534  0076  3000               	movlw	low(0)
  6535  0077  3FC0               	movwi	[0]fsr1
  6536  0078  3000               	movlw	high(0)
  6537  0079  3FC1               	movwi	[1]fsr1
  6538                           	line	65
  6539                           ;OverLoad_B1.c: 65: Load->ADtoGO=0;
  6540  007A  086D               	movf	(_Load),w
  6541  007B  0086               	movwf	fsr1l
  6542  007C  3002               	movlw 2	; select bank4/5
  6543  007D  0087               	movwf fsr1h	
  6544                           	
  6545  007E  1201               	bcf	indf1,4
  6546                           	line	66
  6547                           	
  6548  007F                     l25400:	
  6549                           ;OverLoad_B1.c: 66: Load->LightsCount=Load->Lights1Status+Load->Lights2Status+Load->Ligh
                                 ts3Status;
  6550  007F  086D               	movf	(_Load),w
  6551  0080  3E45               	addlw	045h
  6552  0081  0086               	movwf	fsr1l
  6553  0082  3002               	movlw 2	; select bank4/5
  6554  0083  0087               	movwf fsr1h	
  6555                           	
  6556  0084  086D               	movf	(_Load),w
  6557  0085  3E44               	addlw	044h
  6558  0086  0084               	movwf	fsr0l
  6559  0087  3002               	movlw 2	; select bank4/5
  6560  0088  0085               	movwf fsr0h	
  6561                           	
  6562  0089  0800               	movf	indf0,w
  6563  008A  00AD               	movwf	(??_Load_Main+0)+0
  6564  008B  086D               	movf	(_Load),w
  6565  008C  3E43               	addlw	043h
  6566  008D  0084               	movwf	fsr0l
  6567  008E  3002               	movlw 2	; select bank4/5
  6568  008F  0085               	movwf fsr0h	
  6569                           	
  6570  0090  0800               	movf	indf0,w
  6571  0091  072D               	addwf	(??_Load_Main+0)+0,w
  6572  0092  0701               	addwf	indf1,w
  6573  0093  00AE               	movwf	(??_Load_Main+1)+0
  6574  0094  086D               	movf	(_Load),w
  6575  0095  3E3E               	addlw	03Eh
  6576  0096  0086               	movwf	fsr1l
  6577  0097  3002               	movlw 2	; select bank4/5
  6578  0098  0087               	movwf fsr1h	
  6579                           	
  6580  0099  082E               	movf	(??_Load_Main+1)+0,w
  6581  009A  0081               	movwf	indf1
  6582                           	line	67
  6583                           	
  6584  009B                     l25402:	
  6585                           ;OverLoad_B1.c: 67: for(i=1 ; i<4 ; i++)
  6586  009B  01B1               	clrf	(Load_Main@i)
  6587  009C  1403               	bsf	status,0
  6588  009D  0DB1               	rlf	(Load_Main@i),f
  6589                           	
  6590  009E                     l25404:	
  6591  009E  3004               	movlw	(04h)
  6592  009F  0231               	subwf	(Load_Main@i),w
  6593  00A0  1C03               	skipc
  6594  00A1  28A3               	goto	u9951
  6595  00A2  28A4               	goto	u9950
  6596  00A3                     u9951:
  6597  00A3  28A6               	goto	l25408
  6598  00A4                     u9950:
  6599  00A4  28D9               	goto	l25414
  6600                           	
  6601  00A5                     l25406:	
  6602  00A5  28D9               	goto	l25414
  6603                           	line	68
  6604                           	
  6605  00A6                     l10558:	
  6606                           	line	69
  6607                           	
  6608  00A6                     l25408:	
  6609                           ;OverLoad_B1.c: 68: {
  6610                           ;OverLoad_B1.c: 69: Load->ADH+=Load->AH[i];
  6611  00A6  0831               	movf	(Load_Main@i),w
  6612  00A7  0709               	addwf	wreg,w
  6613  00A8  3E08               	addlw	08h
  6614  00A9  076D               	addwf	(_Load),w
  6615  00AA  00AD               	movwf	(??_Load_Main+0)+0
  6616  00AB  082D               	movf	0+(??_Load_Main+0)+0,w
  6617  00AC  0086               	movwf	fsr1l
  6618  00AD  3002               	movlw 2	; select bank4/5
  6619  00AE  0087               	movwf fsr1h	
  6620                           	
  6621  00AF  086D               	movf	(_Load),w
  6622  00B0  3E2E               	addlw	02Eh
  6623  00B1  0084               	movwf	fsr0l
  6624  00B2  3002               	movlw 2	; select bank4/5
  6625  00B3  0085               	movwf fsr0h	
  6626                           	
  6627  00B4  3F40               	moviw	[0]fsr1
  6628  00B5  0780               	addwf	indf0,f
  6629  00B6  3101               	addfsr	fsr0,1
  6630  00B7  3F41               	moviw	[1]fsr1
  6631  00B8  3D80               	addwfc	indf0,f
  6632  00B9  313F               	addfsr	fsr0,-1
  6633                           	line	70
  6634                           ;OverLoad_B1.c: 70: Load->ADL+=Load->AL[i];
  6635  00BA  0831               	movf	(Load_Main@i),w
  6636  00BB  0709               	addwf	wreg,w
  6637  00BC  3E1A               	addlw	01Ah
  6638  00BD  076D               	addwf	(_Load),w
  6639  00BE  00AD               	movwf	(??_Load_Main+0)+0
  6640  00BF  082D               	movf	0+(??_Load_Main+0)+0,w
  6641  00C0  0086               	movwf	fsr1l
  6642  00C1  3002               	movlw 2	; select bank4/5
  6643  00C2  0087               	movwf fsr1h	
  6644                           	
  6645  00C3  086D               	movf	(_Load),w
  6646  00C4  3E30               	addlw	030h
  6647  00C5  0084               	movwf	fsr0l
  6648  00C6  3002               	movlw 2	; select bank4/5
  6649  00C7  0085               	movwf fsr0h	
  6650                           	
  6651  00C8  3F40               	moviw	[0]fsr1
  6652  00C9  0780               	addwf	indf0,f
  6653  00CA  3101               	addfsr	fsr0,1
  6654  00CB  3F41               	moviw	[1]fsr1
  6655  00CC  3D80               	addwfc	indf0,f
  6656  00CD  313F               	addfsr	fsr0,-1
  6657                           	line	67
  6658                           	
  6659  00CE                     l25410:	
  6660  00CE  3001               	movlw	(01h)
  6661  00CF  00AD               	movwf	(??_Load_Main+0)+0
  6662  00D0  082D               	movf	(??_Load_Main+0)+0,w
  6663  00D1  07B1               	addwf	(Load_Main@i),f
  6664                           	
  6665  00D2                     l25412:	
  6666  00D2  3004               	movlw	(04h)
  6667  00D3  0231               	subwf	(Load_Main@i),w
  6668  00D4  1C03               	skipc
  6669  00D5  28D7               	goto	u9961
  6670  00D6  28D8               	goto	u9960
  6671  00D7                     u9961:
  6672  00D7  28A6               	goto	l25408
  6673  00D8                     u9960:
  6674  00D8  28D9               	goto	l25414
  6675                           	
  6676  00D9                     l10559:	
  6677                           	line	72
  6678                           	
  6679  00D9                     l25414:	
  6680                           ;OverLoad_B1.c: 71: }
  6681                           ;OverLoad_B1.c: 72: Load->ADH/=3;
  6682  00D9  3003               	movlw	low(03h)
  6683  00DA  00A0               	movwf	(?___lwdiv)
  6684  00DB  3000               	movlw	high(03h)
  6685  00DC  00A1               	movwf	((?___lwdiv))+1
  6686  00DD  086D               	movf	(_Load),w
  6687  00DE  3E2E               	addlw	02Eh
  6688  00DF  0086               	movwf	fsr1l
  6689  00E0  3002               	movlw 2	; select bank4/5
  6690  00E1  0087               	movwf fsr1h	
  6691                           	
  6692  00E2  3F40               	moviw	[0]fsr1
  6693  00E3  00A2               	movwf	0+(?___lwdiv)+02h
  6694  00E4  3F41               	moviw	[1]fsr1
  6695  00E5  00A3               	movwf	1+(?___lwdiv)+02h
  6696  00E6  3199  219E  3180   	fcall	___lwdiv
  6697  00E9  0020               	movlb 0	; select bank0
  6698  00EA  086D               	movf	(_Load),w
  6699  00EB  3E2E               	addlw	02Eh
  6700  00EC  0086               	movwf	fsr1l
  6701  00ED  3002               	movlw 2	; select bank4/5
  6702  00EE  0087               	movwf fsr1h	
  6703                           	
  6704  00EF  0820               	movf	(0+(?___lwdiv)),w
  6705  00F0  3FC0               	movwi	[0]fsr1
  6706  00F1  0821               	movf	(1+(?___lwdiv)),w
  6707  00F2  3FC1               	movwi	[1]fsr1
  6708                           	line	73
  6709                           ;OverLoad_B1.c: 73: Load->ADL/=3;
  6710  00F3  3003               	movlw	low(03h)
  6711  00F4  00A0               	movwf	(?___lwdiv)
  6712  00F5  3000               	movlw	high(03h)
  6713  00F6  00A1               	movwf	((?___lwdiv))+1
  6714  00F7  086D               	movf	(_Load),w
  6715  00F8  3E30               	addlw	030h
  6716  00F9  0086               	movwf	fsr1l
  6717  00FA  3002               	movlw 2	; select bank4/5
  6718  00FB  0087               	movwf fsr1h	
  6719                           	
  6720  00FC  3F40               	moviw	[0]fsr1
  6721  00FD  00A2               	movwf	0+(?___lwdiv)+02h
  6722  00FE  3F41               	moviw	[1]fsr1
  6723  00FF  00A3               	movwf	1+(?___lwdiv)+02h
  6724  0100  3199  219E  3180   	fcall	___lwdiv
  6725  0103  0020               	movlb 0	; select bank0
  6726  0104  086D               	movf	(_Load),w
  6727  0105  3E30               	addlw	030h
  6728  0106  0086               	movwf	fsr1l
  6729  0107  3002               	movlw 2	; select bank4/5
  6730  0108  0087               	movwf fsr1h	
  6731                           	
  6732  0109  0820               	movf	(0+(?___lwdiv)),w
  6733  010A  3FC0               	movwi	[0]fsr1
  6734  010B  0821               	movf	(1+(?___lwdiv)),w
  6735  010C  3FC1               	movwi	[1]fsr1
  6736                           	line	74
  6737                           	
  6738  010D                     l25416:	
  6739                           ;OverLoad_B1.c: 74: if(Load->ADH > Load->ADL)
  6740  010D  086D               	movf	(_Load),w
  6741  010E  3E2E               	addlw	02Eh
  6742  010F  0086               	movwf	fsr1l
  6743  0110  3002               	movlw 2	; select bank4/5
  6744  0111  0087               	movwf fsr1h	
  6745                           	
  6746  0112  3F40               	moviw	[0]fsr1
  6747  0113  00AD               	movwf	(??_Load_Main+0)+0
  6748  0114  3F41               	moviw	[1]fsr1
  6749  0115  00AE               	movwf	(??_Load_Main+0)+0+1
  6750  0116  086D               	movf	(_Load),w
  6751  0117  3E30               	addlw	030h
  6752  0118  0086               	movwf	fsr1l
  6753  0119  3002               	movlw 2	; select bank4/5
  6754  011A  0087               	movwf fsr1h	
  6755                           	
  6756  011B  3F40               	moviw	[0]fsr1
  6757  011C  00AF               	movwf	(??_Load_Main+2)+0
  6758  011D  3F41               	moviw	[1]fsr1
  6759  011E  00B0               	movwf	(??_Load_Main+2)+0+1
  6760  011F  082E               	movf	1+(??_Load_Main+0)+0,w
  6761  0120  0230               	subwf	1+(??_Load_Main+2)+0,w
  6762  0121  1D03               	skipz
  6763  0122  2925               	goto	u9975
  6764  0123  082D               	movf	0+(??_Load_Main+0)+0,w
  6765  0124  022F               	subwf	0+(??_Load_Main+2)+0,w
  6766  0125                     u9975:
  6767  0125  1803               	skipnc
  6768  0126  2928               	goto	u9971
  6769  0127  2929               	goto	u9970
  6770  0128                     u9971:
  6771  0128  2A83               	goto	l25464
  6772  0129                     u9970:
  6773                           	line	76
  6774                           	
  6775  0129                     l25418:	
  6776                           ;OverLoad_B1.c: 75: {
  6777                           ;OverLoad_B1.c: 76: Load->AD=(Load->ADH-Load->ADL);
  6778  0129  086D               	movf	(_Load),w
  6779  012A  3E2E               	addlw	02Eh
  6780  012B  0086               	movwf	fsr1l
  6781  012C  3002               	movlw 2	; select bank4/5
  6782  012D  0087               	movwf fsr1h	
  6783                           	
  6784  012E  086D               	movf	(_Load),w
  6785  012F  3E30               	addlw	030h
  6786  0130  0084               	movwf	fsr0l
  6787  0131  3002               	movlw 2	; select bank4/5
  6788  0132  0085               	movwf fsr0h	
  6789                           	
  6790  0133  3F00               	moviw	[0]fsr0
  6791  0134  00AD               	movwf	(??_Load_Main+0)+0
  6792  0135  3F01               	moviw	[1]fsr0
  6793  0136  00AE               	movwf	(??_Load_Main+0)+0+1
  6794  0137  09AD               	comf	(??_Load_Main+0)+0,f
  6795  0138  09AE               	comf	(??_Load_Main+0)+1,f
  6796  0139  0AAD               	incf	(??_Load_Main+0)+0,f
  6797  013A  1903               	skipnz
  6798  013B  0AAE               	incf	(??_Load_Main+0)+1,f
  6799  013C  3F40               	moviw	[0]fsr1
  6800  013D  072D               	addwf	0+(??_Load_Main+0)+0,w
  6801  013E  00AF               	movwf	(??_Load_Main+2)+0
  6802  013F  3F41               	moviw	[1]fsr1
  6803  0140  3D2E               	addwfc	1+(??_Load_Main+0)+0,w
  6804  0141  00B0               	movwf	(??_Load_Main+2)+0+1
  6805  0142  086D               	movf	(_Load),w
  6806  0143  3E2C               	addlw	02Ch
  6807  0144  0086               	movwf	fsr1l
  6808  0145  3002               	movlw 2	; select bank4/5
  6809  0146  0087               	movwf fsr1h	
  6810                           	
  6811  0147  082F               	movf	0+(??_Load_Main+2)+0,w
  6812  0148  3FC0               	movwi	[0]fsr1
  6813  0149  0830               	movf	1+(??_Load_Main+2)+0,w
  6814  014A  3FC1               	movwi	[1]fsr1
  6815                           	line	78
  6816                           	
  6817  014B                     l25420:	
  6818                           ;OverLoad_B1.c: 78: if(Load->Count < 2)
  6819  014B  086D               	movf	(_Load),w
  6820  014C  3E3A               	addlw	03Ah
  6821  014D  0086               	movwf	fsr1l
  6822  014E  3002               	movlw 2	; select bank4/5
  6823  014F  0087               	movwf fsr1h	
  6824                           	
  6825  0150  3002               	movlw	(02h)
  6826  0151  0201               	subwf	indf1,w
  6827  0152  1803               	skipnc
  6828  0153  2955               	goto	u9981
  6829  0154  2956               	goto	u9980
  6830  0155                     u9981:
  6831  0155  29B0               	goto	l25436
  6832  0156                     u9980:
  6833                           	line	80
  6834                           	
  6835  0156                     l25422:	
  6836                           ;OverLoad_B1.c: 79: {
  6837                           ;OverLoad_B1.c: 80: Load->Count++;
  6838  0156  3001               	movlw	(01h)
  6839  0157  00AD               	movwf	(??_Load_Main+0)+0
  6840  0158  086D               	movf	(_Load),w
  6841  0159  3E3A               	addlw	03Ah
  6842  015A  0086               	movwf	fsr1l
  6843  015B  3002               	movlw 2	; select bank4/5
  6844  015C  0087               	movwf fsr1h	
  6845                           	
  6846  015D  082D               	movf	(??_Load_Main+0)+0,w
  6847  015E  0781               	addwf	indf1,f
  6848                           	line	81
  6849                           	
  6850  015F                     l25424:	
  6851                           ;OverLoad_B1.c: 81: if(Load->Count == 1)
  6852  015F  086D               	movf	(_Load),w
  6853  0160  3E3A               	addlw	03Ah
  6854  0161  0086               	movwf	fsr1l
  6855  0162  3002               	movlw 2	; select bank4/5
  6856  0163  0087               	movwf fsr1h	
  6857                           	
  6858  0164  0801               	movf	indf1,w
  6859  0165  3A01               	xorlw	01h&0ffh
  6860  0166  1D03               	skipz
  6861  0167  2969               	goto	u9991
  6862  0168  296A               	goto	u9990
  6863  0169                     u9991:
  6864  0169  2974               	goto	l25428
  6865  016A                     u9990:
  6866                           	line	83
  6867                           	
  6868  016A                     l25426:	
  6869                           ;OverLoad_B1.c: 82: {
  6870                           ;OverLoad_B1.c: 83: Load->JudgeValue=500;
  6871  016A  086D               	movf	(_Load),w
  6872  016B  3E36               	addlw	036h
  6873  016C  0086               	movwf	fsr1l
  6874  016D  3002               	movlw 2	; select bank4/5
  6875  016E  0087               	movwf fsr1h	
  6876                           	
  6877  016F  30F4               	movlw	low(01F4h)
  6878  0170  3FC0               	movwi	[0]fsr1
  6879  0171  3001               	movlw	high(01F4h)
  6880  0172  3FC1               	movwi	[1]fsr1
  6881                           	line	84
  6882                           ;OverLoad_B1.c: 84: }
  6883  0173  29B0               	goto	l25436
  6884                           	line	85
  6885                           	
  6886  0174                     l10562:	
  6887                           	
  6888  0174                     l25428:	
  6889                           ;OverLoad_B1.c: 85: else if(Load->Count == 2)
  6890  0174  086D               	movf	(_Load),w
  6891  0175  3E3A               	addlw	03Ah
  6892  0176  0086               	movwf	fsr1l
  6893  0177  3002               	movlw 2	; select bank4/5
  6894  0178  0087               	movwf fsr1h	
  6895                           	
  6896  0179  0801               	movf	indf1,w
  6897  017A  3A02               	xorlw	02h&0ffh
  6898  017B  1D03               	skipz
  6899  017C  297E               	goto	u10001
  6900  017D  297F               	goto	u10000
  6901  017E                     u10001:
  6902  017E  29B0               	goto	l25436
  6903  017F                     u10000:
  6904                           	line	87
  6905                           	
  6906  017F                     l25430:	
  6907                           ;OverLoad_B1.c: 86: {
  6908                           ;OverLoad_B1.c: 87: if(Load->LightsCount == 1)
  6909  017F  086D               	movf	(_Load),w
  6910  0180  3E3E               	addlw	03Eh
  6911  0181  0086               	movwf	fsr1l
  6912  0182  3002               	movlw 2	; select bank4/5
  6913  0183  0087               	movwf fsr1h	
  6914                           	
  6915  0184  0801               	movf	indf1,w
  6916  0185  3A01               	xorlw	01h&0ffh
  6917  0186  1D03               	skipz
  6918  0187  2989               	goto	u10011
  6919  0188  298A               	goto	u10010
  6920  0189                     u10011:
  6921  0189  2994               	goto	l25434
  6922  018A                     u10010:
  6923                           	line	89
  6924                           	
  6925  018A                     l25432:	
  6926                           ;OverLoad_B1.c: 88: {
  6927                           ;OverLoad_B1.c: 89: Load->JudgeValue=0x32;
  6928  018A  086D               	movf	(_Load),w
  6929  018B  3E36               	addlw	036h
  6930  018C  0086               	movwf	fsr1l
  6931  018D  3002               	movlw 2	; select bank4/5
  6932  018E  0087               	movwf fsr1h	
  6933                           	
  6934  018F  3032               	movlw	low(032h)
  6935  0190  3FC0               	movwi	[0]fsr1
  6936  0191  3000               	movlw	high(032h)
  6937  0192  3FC1               	movwi	[1]fsr1
  6938                           	line	90
  6939                           ;OverLoad_B1.c: 90: }
  6940  0193  29B0               	goto	l25436
  6941                           	line	91
  6942                           	
  6943  0194                     l10565:	
  6944                           	line	93
  6945                           	
  6946  0194                     l25434:	
  6947                           ;OverLoad_B1.c: 91: else
  6948                           ;OverLoad_B1.c: 92: {
  6949                           ;OverLoad_B1.c: 93: Load->JudgeValue=(0x32+Load->TotalLoad)-0x08;
  6950  0194  086D               	movf	(_Load),w
  6951  0195  3E06               	addlw	06h
  6952  0196  0086               	movwf	fsr1l
  6953  0197  3002               	movlw 2	; select bank4/5
  6954  0198  0087               	movwf fsr1h	
  6955                           	
  6956  0199  3F40               	moviw	[0]fsr1
  6957  019A  00AD               	movwf	(??_Load_Main+0)+0
  6958  019B  3F41               	moviw	[1]fsr1
  6959  019C  00AE               	movwf	(??_Load_Main+0)+0+1
  6960  019D  082D               	movf	0+(??_Load_Main+0)+0,w
  6961  019E  3E2A               	addlw	low(02Ah)
  6962  019F  00AF               	movwf	(??_Load_Main+2)+0
  6963  01A0  3000               	movlw	high(02Ah)
  6964  01A1  3D2E               	addwfc	1+(??_Load_Main+0)+0,w
  6965  01A2  00B0               	movwf	1+(??_Load_Main+2)+0
  6966  01A3  086D               	movf	(_Load),w
  6967  01A4  3E36               	addlw	036h
  6968  01A5  0086               	movwf	fsr1l
  6969  01A6  3002               	movlw 2	; select bank4/5
  6970  01A7  0087               	movwf fsr1h	
  6971                           	
  6972  01A8  082F               	movf	0+(??_Load_Main+2)+0,w
  6973  01A9  3FC0               	movwi	[0]fsr1
  6974  01AA  0830               	movf	1+(??_Load_Main+2)+0,w
  6975  01AB  3FC1               	movwi	[1]fsr1
  6976  01AC  29B0               	goto	l25436
  6977                           	line	94
  6978                           	
  6979  01AD                     l10566:	
  6980  01AD  29B0               	goto	l25436
  6981                           	line	95
  6982                           	
  6983  01AE                     l10564:	
  6984  01AE  29B0               	goto	l25436
  6985                           	line	96
  6986                           	
  6987  01AF                     l10563:	
  6988  01AF  29B0               	goto	l25436
  6989                           	
  6990  01B0                     l10561:	
  6991                           	line	98
  6992                           	
  6993  01B0                     l25436:	
  6994                           ;OverLoad_B1.c: 94: }
  6995                           ;OverLoad_B1.c: 95: }
  6996                           ;OverLoad_B1.c: 96: }
  6997                           ;OverLoad_B1.c: 98: if(Load->AD >= Load->JudgeValue)
  6998  01B0  086D               	movf	(_Load),w
  6999  01B1  3E36               	addlw	036h
  7000  01B2  0086               	movwf	fsr1l
  7001  01B3  3002               	movlw 2	; select bank4/5
  7002  01B4  0087               	movwf fsr1h	
  7003                           	
  7004  01B5  3F40               	moviw	[0]fsr1
  7005  01B6  00AD               	movwf	(??_Load_Main+0)+0
  7006  01B7  3F41               	moviw	[1]fsr1
  7007  01B8  00AE               	movwf	(??_Load_Main+0)+0+1
  7008  01B9  086D               	movf	(_Load),w
  7009  01BA  3E2C               	addlw	02Ch
  7010  01BB  0086               	movwf	fsr1l
  7011  01BC  3002               	movlw 2	; select bank4/5
  7012  01BD  0087               	movwf fsr1h	
  7013                           	
  7014  01BE  3F40               	moviw	[0]fsr1
  7015  01BF  00AF               	movwf	(??_Load_Main+2)+0
  7016  01C0  3F41               	moviw	[1]fsr1
  7017  01C1  00B0               	movwf	(??_Load_Main+2)+0+1
  7018  01C2  082E               	movf	1+(??_Load_Main+0)+0,w
  7019  01C3  0230               	subwf	1+(??_Load_Main+2)+0,w
  7020  01C4  1D03               	skipz
  7021  01C5  29C8               	goto	u10025
  7022  01C6  082D               	movf	0+(??_Load_Main+0)+0,w
  7023  01C7  022F               	subwf	0+(??_Load_Main+2)+0,w
  7024  01C8                     u10025:
  7025  01C8  1C03               	skipc
  7026  01C9  29CB               	goto	u10021
  7027  01CA  29CC               	goto	u10020
  7028  01CB                     u10021:
  7029  01CB  29EC               	goto	l25446
  7030  01CC                     u10020:
  7031                           	line	100
  7032                           	
  7033  01CC                     l25438:	
  7034                           ;OverLoad_B1.c: 99: {
  7035                           ;OverLoad_B1.c: 100: Load->ErrorCount++;
  7036  01CC  3001               	movlw	(01h)
  7037  01CD  00AD               	movwf	(??_Load_Main+0)+0
  7038  01CE  086D               	movf	(_Load),w
  7039  01CF  3E3C               	addlw	03Ch
  7040  01D0  0086               	movwf	fsr1l
  7041  01D1  3002               	movlw 2	; select bank4/5
  7042  01D2  0087               	movwf fsr1h	
  7043                           	
  7044  01D3  082D               	movf	(??_Load_Main+0)+0,w
  7045  01D4  0781               	addwf	indf1,f
  7046                           	line	101
  7047                           	
  7048  01D5                     l25440:	
  7049                           ;OverLoad_B1.c: 101: if(Load->ErrorCount >2)
  7050  01D5  086D               	movf	(_Load),w
  7051  01D6  3E3C               	addlw	03Ch
  7052  01D7  0086               	movwf	fsr1l
  7053  01D8  3002               	movlw 2	; select bank4/5
  7054  01D9  0087               	movwf fsr1h	
  7055                           	
  7056  01DA  3003               	movlw	(03h)
  7057  01DB  0201               	subwf	indf1,w
  7058  01DC  1C03               	skipc
  7059  01DD  29DF               	goto	u10031
  7060  01DE  29E0               	goto	u10030
  7061  01DF                     u10031:
  7062  01DF  2A83               	goto	l25464
  7063  01E0                     u10030:
  7064                           	line	103
  7065                           	
  7066  01E0                     l25442:	
  7067                           ;OverLoad_B1.c: 102: {
  7068                           ;OverLoad_B1.c: 103: Load->ErrorCount=0;
  7069  01E0  086D               	movf	(_Load),w
  7070  01E1  3E3C               	addlw	03Ch
  7071  01E2  0086               	movwf	fsr1l
  7072  01E3  3002               	movlw 2	; select bank4/5
  7073  01E4  0087               	movwf fsr1h	
  7074                           	
  7075  01E5  0181               	clrf	indf1
  7076                           	line	104
  7077                           	
  7078  01E6                     l25444:	
  7079                           ;OverLoad_B1.c: 104: setLoad_Exceptions(1);
  7080  01E6  3001               	movlw	(01h)
  7081  01E7  319B  2357  3180   	fcall	_setLoad_Exceptions
  7082  01EA  2A83               	goto	l25464
  7083                           	line	113
  7084                           	
  7085  01EB                     l10568:	
  7086                           	line	114
  7087                           ;OverLoad_B1.c: 113: }
  7088                           ;OverLoad_B1.c: 114: }
  7089  01EB  2A83               	goto	l25464
  7090                           	line	115
  7091                           	
  7092  01EC                     l10567:	
  7093                           	line	117
  7094                           	
  7095  01EC                     l25446:	
  7096                           ;OverLoad_B1.c: 115: else
  7097                           ;OverLoad_B1.c: 116: {
  7098                           ;OverLoad_B1.c: 117: Load->ErrorCount=0;
  7099  01EC  0020               	movlb 0	; select bank0
  7100  01ED  086D               	movf	(_Load),w
  7101  01EE  3E3C               	addlw	03Ch
  7102  01EF  0086               	movwf	fsr1l
  7103  01F0  3002               	movlw 2	; select bank4/5
  7104  01F1  0087               	movwf fsr1h	
  7105                           	
  7106  01F2  0181               	clrf	indf1
  7107                           	line	118
  7108                           ;OverLoad_B1.c: 118: if(Load->SafeCount < 10)
  7109  01F3  086D               	movf	(_Load),w
  7110  01F4  3E42               	addlw	042h
  7111  01F5  0086               	movwf	fsr1l
  7112  01F6  3002               	movlw 2	; select bank4/5
  7113  01F7  0087               	movwf fsr1h	
  7114                           	
  7115  01F8  300A               	movlw	(0Ah)
  7116  01F9  0201               	subwf	indf1,w
  7117  01FA  1803               	skipnc
  7118  01FB  29FD               	goto	u10041
  7119  01FC  29FE               	goto	u10040
  7120  01FD                     u10041:
  7121  01FD  2A08               	goto	l25450
  7122  01FE                     u10040:
  7123                           	line	120
  7124                           	
  7125  01FE                     l25448:	
  7126                           ;OverLoad_B1.c: 119: {
  7127                           ;OverLoad_B1.c: 120: Load->SafeCount++;
  7128  01FE  3001               	movlw	(01h)
  7129  01FF  00AD               	movwf	(??_Load_Main+0)+0
  7130  0200  086D               	movf	(_Load),w
  7131  0201  3E42               	addlw	042h
  7132  0202  0086               	movwf	fsr1l
  7133  0203  3002               	movlw 2	; select bank4/5
  7134  0204  0087               	movwf fsr1h	
  7135                           	
  7136  0205  082D               	movf	(??_Load_Main+0)+0,w
  7137  0206  0781               	addwf	indf1,f
  7138  0207  2A08               	goto	l25450
  7139                           	line	121
  7140                           	
  7141  0208                     l10570:	
  7142                           	line	122
  7143                           	
  7144  0208                     l25450:	
  7145                           ;OverLoad_B1.c: 121: }
  7146                           ;OverLoad_B1.c: 122: if(Load->SafeCount >= 10)
  7147  0208  086D               	movf	(_Load),w
  7148  0209  3E42               	addlw	042h
  7149  020A  0086               	movwf	fsr1l
  7150  020B  3002               	movlw 2	; select bank4/5
  7151  020C  0087               	movwf fsr1h	
  7152                           	
  7153  020D  300A               	movlw	(0Ah)
  7154  020E  0201               	subwf	indf1,w
  7155  020F  1C03               	skipc
  7156  0210  2A12               	goto	u10051
  7157  0211  2A13               	goto	u10050
  7158  0212                     u10051:
  7159  0212  2A83               	goto	l25464
  7160  0213                     u10050:
  7161                           	line	124
  7162                           	
  7163  0213                     l25452:	
  7164                           ;OverLoad_B1.c: 123: {
  7165                           ;OverLoad_B1.c: 124: Load->Safe=1;
  7166  0213  086D               	movf	(_Load),w
  7167  0214  0086               	movwf	fsr1l
  7168  0215  3002               	movlw 2	; select bank4/5
  7169  0216  0087               	movwf fsr1h	
  7170                           	
  7171  0217  1581               	bsf	indf1,3
  7172                           	line	127
  7173                           	
  7174  0218                     l25454:	
  7175                           ;OverLoad_B1.c: 127: setDimmerLights_Clear(1,1);
  7176  0218  01A2               	clrf	(?_setDimmerLights_Clear)
  7177  0219  1403               	bsf	status,0
  7178  021A  0DA2               	rlf	(?_setDimmerLights_Clear),f
  7179  021B  3001               	movlw	(01h)
  7180  021C  31A2  22FB  3180   	fcall	_setDimmerLights_Clear
  7181                           	line	138
  7182                           	
  7183  021F                     l25456:	
  7184                           ;OverLoad_B1.c: 138: if(Load->StatusOn)
  7185  021F  0020               	movlb 0	; select bank0
  7186  0220  086D               	movf	(_Load),w
  7187  0221  3E46               	addlw	046h
  7188  0222  0086               	movwf	fsr1l
  7189  0223  3002               	movlw 2	; select bank4/5
  7190  0224  0087               	movwf fsr1h	
  7191                           	
  7192  0225  1C01               	btfss	indf1,0
  7193  0226  2A28               	goto	u10061
  7194  0227  2A29               	goto	u10060
  7195  0228                     u10061:
  7196  0228  2A41               	goto	l10572
  7197  0229                     u10060:
  7198                           	line	140
  7199                           	
  7200  0229                     l25458:	
  7201                           ;OverLoad_B1.c: 139: {
  7202                           ;OverLoad_B1.c: 140: Load->StatusOn=0;
  7203  0229  086D               	movf	(_Load),w
  7204  022A  3E46               	addlw	046h
  7205  022B  0086               	movwf	fsr1l
  7206  022C  3002               	movlw 2	; select bank4/5
  7207  022D  0087               	movwf fsr1h	
  7208                           	
  7209  022E  1001               	bcf	indf1,0
  7210                           	line	141
  7211                           ;OverLoad_B1.c: 141: Load->TotalLoad=Load->AD;
  7212  022F  086D               	movf	(_Load),w
  7213  0230  3E2C               	addlw	02Ch
  7214  0231  0086               	movwf	fsr1l
  7215  0232  3002               	movlw 2	; select bank4/5
  7216  0233  0087               	movwf fsr1h	
  7217                           	
  7218  0234  3F40               	moviw	[0]fsr1
  7219  0235  00AD               	movwf	(??_Load_Main+0)+0
  7220  0236  3F41               	moviw	[1]fsr1
  7221  0237  00AE               	movwf	(??_Load_Main+0)+0+1
  7222  0238  086D               	movf	(_Load),w
  7223  0239  3E06               	addlw	06h
  7224  023A  0086               	movwf	fsr1l
  7225  023B  3002               	movlw 2	; select bank4/5
  7226  023C  0087               	movwf fsr1h	
  7227                           	
  7228  023D  082D               	movf	0+(??_Load_Main+0)+0,w
  7229  023E  3FC0               	movwi	[0]fsr1
  7230  023F  082E               	movf	1+(??_Load_Main+0)+0,w
  7231  0240  3FC1               	movwi	[1]fsr1
  7232                           	line	143
  7233                           	
  7234  0241                     l10572:	
  7235                           	line	145
  7236                           ;OverLoad_B1.c: 143: }
  7237                           ;OverLoad_B1.c: 145: if(Load->StatusOff)
  7238  0241  086D               	movf	(_Load),w
  7239  0242  3E46               	addlw	046h
  7240  0243  0086               	movwf	fsr1l
  7241  0244  3002               	movlw 2	; select bank4/5
  7242  0245  0087               	movwf fsr1h	
  7243                           	
  7244  0246  1C81               	btfss	indf1,1
  7245  0247  2A49               	goto	u10071
  7246  0248  2A4A               	goto	u10070
  7247  0249                     u10071:
  7248  0249  2A83               	goto	l25464
  7249  024A                     u10070:
  7250                           	line	147
  7251                           	
  7252  024A                     l25460:	
  7253                           ;OverLoad_B1.c: 146: {
  7254                           ;OverLoad_B1.c: 147: Load->StatusOff=0;
  7255  024A  086D               	movf	(_Load),w
  7256  024B  3E46               	addlw	046h
  7257  024C  0086               	movwf	fsr1l
  7258  024D  3002               	movlw 2	; select bank4/5
  7259  024E  0087               	movwf fsr1h	
  7260                           	
  7261  024F  1081               	bcf	indf1,1
  7262                           	line	148
  7263                           ;OverLoad_B1.c: 148: Load->TotalLoad=Load->AD;
  7264  0250  086D               	movf	(_Load),w
  7265  0251  3E2C               	addlw	02Ch
  7266  0252  0086               	movwf	fsr1l
  7267  0253  3002               	movlw 2	; select bank4/5
  7268  0254  0087               	movwf fsr1h	
  7269                           	
  7270  0255  3F40               	moviw	[0]fsr1
  7271  0256  00AD               	movwf	(??_Load_Main+0)+0
  7272  0257  3F41               	moviw	[1]fsr1
  7273  0258  00AE               	movwf	(??_Load_Main+0)+0+1
  7274  0259  086D               	movf	(_Load),w
  7275  025A  3E06               	addlw	06h
  7276  025B  0086               	movwf	fsr1l
  7277  025C  3002               	movlw 2	; select bank4/5
  7278  025D  0087               	movwf fsr1h	
  7279                           	
  7280  025E  082D               	movf	0+(??_Load_Main+0)+0,w
  7281  025F  3FC0               	movwi	[0]fsr1
  7282  0260  082E               	movf	1+(??_Load_Main+0)+0,w
  7283  0261  3FC1               	movwi	[1]fsr1
  7284                           	line	149
  7285                           	
  7286  0262                     l25462:	
  7287                           ;OverLoad_B1.c: 149: Load->JudgeValue=0x32*Load->LightsCount;
  7288  0262  086D               	movf	(_Load),w
  7289  0263  3E3E               	addlw	03Eh
  7290  0264  0086               	movwf	fsr1l
  7291  0265  3002               	movlw 2	; select bank4/5
  7292  0266  0087               	movwf fsr1h	
  7293                           	
  7294  0267  0801               	movf	indf1,w
  7295  0268  00AD               	movwf	(??_Load_Main+0)+0
  7296  0269  01AE               	clrf	(??_Load_Main+0)+0+1
  7297  026A  082D               	movf	0+(??_Load_Main+0)+0,w
  7298  026B  00A0               	movwf	(?___wmul)
  7299  026C  082E               	movf	1+(??_Load_Main+0)+0,w
  7300  026D  00A1               	movwf	(?___wmul+1)
  7301  026E  3032               	movlw	low(032h)
  7302  026F  00A2               	movwf	0+(?___wmul)+02h
  7303  0270  3000               	movlw	high(032h)
  7304  0271  00A3               	movwf	(0+(?___wmul)+02h)+1
  7305  0272  3187  27DB  3180   	fcall	___wmul
  7306  0275  0020               	movlb 0	; select bank0
  7307  0276  086D               	movf	(_Load),w
  7308  0277  3E36               	addlw	036h
  7309  0278  0086               	movwf	fsr1l
  7310  0279  3002               	movlw 2	; select bank4/5
  7311  027A  0087               	movwf fsr1h	
  7312                           	
  7313  027B  0820               	movf	(0+(?___wmul)),w
  7314  027C  3FC0               	movwi	[0]fsr1
  7315  027D  0821               	movf	(1+(?___wmul)),w
  7316  027E  3FC1               	movwi	[1]fsr1
  7317  027F  2A83               	goto	l25464
  7318                           	line	150
  7319                           	
  7320  0280                     l10573:	
  7321  0280  2A83               	goto	l25464
  7322                           	line	151
  7323                           	
  7324  0281                     l10571:	
  7325  0281  2A83               	goto	l25464
  7326                           	line	152
  7327                           	
  7328  0282                     l10569:	
  7329  0282  2A83               	goto	l25464
  7330                           	line	153
  7331                           	
  7332  0283                     l10560:	
  7333                           	line	154
  7334                           	
  7335  0283                     l25464:	
  7336                           ;OverLoad_B1.c: 150: }
  7337                           ;OverLoad_B1.c: 151: }
  7338                           ;OverLoad_B1.c: 152: }
  7339                           ;OverLoad_B1.c: 153: }
  7340                           ;OverLoad_B1.c: 154: setLoad_AH_AL_Restore();
  7341  0283  31A6  26BE  3180   	fcall	_setLoad_AH_AL_Restore
  7342  0286  2B0D               	goto	l10580
  7343                           	line	166
  7344                           	
  7345  0287                     l10557:	
  7346                           	line	167
  7347                           ;OverLoad_B1.c: 166: }
  7348                           ;OverLoad_B1.c: 167: }
  7349  0287  2B0D               	goto	l10580
  7350                           	line	168
  7351                           	
  7352  0288                     l10556:	
  7353                           	line	170
  7354                           	
  7355  0288                     l25466:	
  7356                           ;OverLoad_B1.c: 168: else
  7357                           ;OverLoad_B1.c: 169: {
  7358                           ;OverLoad_B1.c: 170: if(Load->GO)
  7359  0288  0020               	movlb 0	; select bank0
  7360  0289  086D               	movf	(_Load),w
  7361  028A  0086               	movwf	fsr1l
  7362  028B  3002               	movlw 2	; select bank4/5
  7363  028C  0087               	movwf fsr1h	
  7364                           	
  7365  028D  1C81               	btfss	indf1,1
  7366  028E  2A90               	goto	u10081
  7367  028F  2A91               	goto	u10080
  7368  0290                     u10081:
  7369  0290  2ABC               	goto	l25478
  7370  0291                     u10080:
  7371                           	line	172
  7372                           	
  7373  0291                     l25468:	
  7374                           ;OverLoad_B1.c: 171: {
  7375                           ;OverLoad_B1.c: 172: if(!Load->LightsON)
  7376  0291  086D               	movf	(_Load),w
  7377  0292  0086               	movwf	fsr1l
  7378  0293  3002               	movlw 2	; select bank4/5
  7379  0294  0087               	movwf fsr1h	
  7380                           	
  7381  0295  1901               	btfsc	indf1,2
  7382  0296  2A98               	goto	u10091
  7383  0297  2A99               	goto	u10090
  7384  0298                     u10091:
  7385  0298  2AA4               	goto	l25472
  7386  0299                     u10090:
  7387                           	line	174
  7388                           	
  7389  0299                     l25470:	
  7390                           ;OverLoad_B1.c: 173: {
  7391                           ;OverLoad_B1.c: 174: Load->LightsON=1;
  7392  0299  086D               	movf	(_Load),w
  7393  029A  0086               	movwf	fsr1l
  7394  029B  3002               	movlw 2	; select bank4/5
  7395  029C  0087               	movwf fsr1h	
  7396                           	
  7397  029D  1501               	bsf	indf1,2
  7398                           	line	175
  7399                           ;OverLoad_B1.c: 175: Load->Safe=0;
  7400  029E  086D               	movf	(_Load),w
  7401  029F  0086               	movwf	fsr1l
  7402  02A0  3002               	movlw 2	; select bank4/5
  7403  02A1  0087               	movwf fsr1h	
  7404                           	
  7405  02A2  1181               	bcf	indf1,3
  7406  02A3  2AA4               	goto	l25472
  7407                           	line	176
  7408                           	
  7409  02A4                     l10576:	
  7410                           	line	177
  7411                           	
  7412  02A4                     l25472:	
  7413                           ;OverLoad_B1.c: 176: }
  7414                           ;OverLoad_B1.c: 177: if(getTemp_Safe() && getPF_Safe())
  7415  02A4  31A0  20E5  3180   	fcall	_getTemp_Safe
  7416  02A7  3A00               	xorlw	0&0ffh
  7417  02A8  1903               	skipnz
  7418  02A9  2AAB               	goto	u10101
  7419  02AA  2AAC               	goto	u10100
  7420  02AB                     u10101:
  7421  02AB  2B0D               	goto	l10580
  7422  02AC                     u10100:
  7423                           	
  7424  02AC                     l25474:	
  7425  02AC  31A0  20ED  3180   	fcall	_getPF_Safe
  7426  02AF  3A00               	xorlw	0&0ffh
  7427  02B0  1903               	skipnz
  7428  02B1  2AB3               	goto	u10111
  7429  02B2  2AB4               	goto	u10110
  7430  02B3                     u10111:
  7431  02B3  2B0D               	goto	l10580
  7432  02B4                     u10110:
  7433                           	line	179
  7434                           	
  7435  02B4                     l25476:	
  7436                           ;OverLoad_B1.c: 178: {
  7437                           ;OverLoad_B1.c: 179: Load->ADtoGO=1;
  7438  02B4  0020               	movlb 0	; select bank0
  7439  02B5  086D               	movf	(_Load),w
  7440  02B6  0086               	movwf	fsr1l
  7441  02B7  3002               	movlw 2	; select bank4/5
  7442  02B8  0087               	movwf fsr1h	
  7443                           	
  7444  02B9  1601               	bsf	indf1,4
  7445  02BA  2B0D               	goto	l10580
  7446                           	line	180
  7447                           	
  7448  02BB                     l10577:	
  7449                           	line	181
  7450                           ;OverLoad_B1.c: 180: }
  7451                           ;OverLoad_B1.c: 181: }
  7452  02BB  2B0D               	goto	l10580
  7453                           	line	182
  7454                           	
  7455  02BC                     l10575:	
  7456                           	line	184
  7457                           	
  7458  02BC                     l25478:	
  7459                           ;OverLoad_B1.c: 182: else
  7460                           ;OverLoad_B1.c: 183: {
  7461                           ;OverLoad_B1.c: 184: if(Load->LightsON)
  7462  02BC  086D               	movf	(_Load),w
  7463  02BD  0086               	movwf	fsr1l
  7464  02BE  3002               	movlw 2	; select bank4/5
  7465  02BF  0087               	movwf fsr1h	
  7466                           	
  7467  02C0  1D01               	btfss	indf1,2
  7468  02C1  2AC3               	goto	u10121
  7469  02C2  2AC4               	goto	u10120
  7470  02C3                     u10121:
  7471  02C3  2B0D               	goto	l10580
  7472  02C4                     u10120:
  7473                           	line	186
  7474                           	
  7475  02C4                     l25480:	
  7476                           ;OverLoad_B1.c: 185: {
  7477                           ;OverLoad_B1.c: 186: Load->LightsON=0;
  7478  02C4  086D               	movf	(_Load),w
  7479  02C5  0086               	movwf	fsr1l
  7480  02C6  3002               	movlw 2	; select bank4/5
  7481  02C7  0087               	movwf fsr1h	
  7482                           	
  7483  02C8  1101               	bcf	indf1,2
  7484                           	line	187
  7485                           ;OverLoad_B1.c: 187: Load->Safe=1;
  7486  02C9  086D               	movf	(_Load),w
  7487  02CA  0086               	movwf	fsr1l
  7488  02CB  3002               	movlw 2	; select bank4/5
  7489  02CC  0087               	movwf fsr1h	
  7490                           	
  7491  02CD  1581               	bsf	indf1,3
  7492                           	line	188
  7493                           ;OverLoad_B1.c: 188: Load->ErrorCount=0;
  7494  02CE  086D               	movf	(_Load),w
  7495  02CF  3E3C               	addlw	03Ch
  7496  02D0  0086               	movwf	fsr1l
  7497  02D1  3002               	movlw 2	; select bank4/5
  7498  02D2  0087               	movwf fsr1h	
  7499                           	
  7500  02D3  0181               	clrf	indf1
  7501                           	line	189
  7502                           ;OverLoad_B1.c: 189: Load->Count=0;
  7503  02D4  086D               	movf	(_Load),w
  7504  02D5  3E3A               	addlw	03Ah
  7505  02D6  0086               	movwf	fsr1l
  7506  02D7  3002               	movlw 2	; select bank4/5
  7507  02D8  0087               	movwf fsr1h	
  7508                           	
  7509  02D9  0181               	clrf	indf1
  7510                           	line	190
  7511                           ;OverLoad_B1.c: 190: Load->TotalLoad=0;
  7512  02DA  086D               	movf	(_Load),w
  7513  02DB  3E06               	addlw	06h
  7514  02DC  0086               	movwf	fsr1l
  7515  02DD  3002               	movlw 2	; select bank4/5
  7516  02DE  0087               	movwf fsr1h	
  7517                           	
  7518  02DF  3000               	movlw	low(0)
  7519  02E0  3FC0               	movwi	[0]fsr1
  7520  02E1  3000               	movlw	high(0)
  7521  02E2  3FC1               	movwi	[1]fsr1
  7522                           	line	191
  7523                           ;OverLoad_B1.c: 191: Load->NumberCount=0;
  7524  02E3  086D               	movf	(_Load),w
  7525  02E4  3E3F               	addlw	03Fh
  7526  02E5  0086               	movwf	fsr1l
  7527  02E6  3002               	movlw 2	; select bank4/5
  7528  02E7  0087               	movwf fsr1h	
  7529                           	
  7530  02E8  0181               	clrf	indf1
  7531                           	line	192
  7532                           ;OverLoad_B1.c: 192: Load->StatusOn=0;
  7533  02E9  086D               	movf	(_Load),w
  7534  02EA  3E46               	addlw	046h
  7535  02EB  0086               	movwf	fsr1l
  7536  02EC  3002               	movlw 2	; select bank4/5
  7537  02ED  0087               	movwf fsr1h	
  7538                           	
  7539  02EE  1001               	bcf	indf1,0
  7540                           	line	193
  7541                           ;OverLoad_B1.c: 193: Load->StatusOff=0;
  7542  02EF  086D               	movf	(_Load),w
  7543  02F0  3E46               	addlw	046h
  7544  02F1  0086               	movwf	fsr1l
  7545  02F2  3002               	movlw 2	; select bank4/5
  7546  02F3  0087               	movwf fsr1h	
  7547                           	
  7548  02F4  1081               	bcf	indf1,1
  7549                           	line	194
  7550                           ;OverLoad_B1.c: 194: Load->AD=0;
  7551  02F5  086D               	movf	(_Load),w
  7552  02F6  3E2C               	addlw	02Ch
  7553  02F7  0086               	movwf	fsr1l
  7554  02F8  3002               	movlw 2	; select bank4/5
  7555  02F9  0087               	movwf fsr1h	
  7556                           	
  7557  02FA  3000               	movlw	low(0)
  7558  02FB  3FC0               	movwi	[0]fsr1
  7559  02FC  3000               	movlw	high(0)
  7560  02FD  3FC1               	movwi	[1]fsr1
  7561                           	line	195
  7562                           	
  7563  02FE                     l25482:	
  7564                           ;OverLoad_B1.c: 195: setLoad_AH_AL_Restore();
  7565  02FE  31A6  26BE  3180   	fcall	_setLoad_AH_AL_Restore
  7566                           	line	198
  7567                           	
  7568  0301                     l25484:	
  7569                           ;OverLoad_B1.c: 198: setDimmerLights_Clear(1,1);
  7570  0301  0020               	movlb 0	; select bank0
  7571  0302  01A2               	clrf	(?_setDimmerLights_Clear)
  7572  0303  1403               	bsf	status,0
  7573  0304  0DA2               	rlf	(?_setDimmerLights_Clear),f
  7574  0305  3001               	movlw	(01h)
  7575  0306  31A2  22FB  3180   	fcall	_setDimmerLights_Clear
  7576  0309  2B0D               	goto	l10580
  7577                           	line	223
  7578                           	
  7579  030A                     l10579:	
  7580  030A  2B0D               	goto	l10580
  7581                           	line	224
  7582                           	
  7583  030B                     l10578:	
  7584  030B  2B0D               	goto	l10580
  7585                           	line	225
  7586                           	
  7587  030C                     l10574:	
  7588  030C  2B0D               	goto	l10580
  7589                           	line	226
  7590                           	
  7591  030D                     l10555:	
  7592                           	line	227
  7593                           	
  7594  030D                     l10580:	
  7595  030D  0008               	return
  7596                           	opt stack 0
  7597                           GLOBAL	__end_of_Load_Main
  7598  030E                     	__end_of_Load_Main:
  7599 ;; =============== function _Load_Main ends ============
  7600                           
  7601                           	signat	_Load_Main,88
  7602                           	global	_setRF_DimmerValue
  7603                           psect	text4094,local,class=CODE,delta=2
  7604                           global __ptext4094
  7605  1867                     __ptext4094:
  7606                           
  7607 ;; *************** function _setRF_DimmerValue *****************
  7608 ;; Defined at:
  7609 ;;		line 426 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
  7610 ;; Parameters:    Size  Location     Type
  7611 ;;  lights          1    wreg     unsigned char 
  7612 ;; Auto vars:     Size  Location     Type
  7613 ;;  lights          1   67[BANK0 ] unsigned char 
  7614 ;; Return value:  Size  Location     Type
  7615 ;;		None               void
  7616 ;; Registers used:
  7617 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7618 ;; Tracked objects:
  7619 ;;		On entry : 0/0
  7620 ;;		On exit  : 0/0
  7621 ;;		Unchanged: 0/0
  7622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  7623 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  7624 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  7625 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  7626 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
  7627 ;;Total ram usage:        3 bytes
  7628 ;; Hardware stack levels used:    1
  7629 ;; Hardware stack levels required when called:    8
  7630 ;; This function calls:
  7631 ;;		_setDimmerLights_AdjRF
  7632 ;; This function is called by:
  7633 ;;		_setRFSW_AdjControl
  7634 ;; This function uses a non-reentrant model
  7635 ;;
  7636                           psect	text4094
  7637                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
  7638                           	line	426
  7639                           	global	__size_of_setRF_DimmerValue
  7640  0039                     	__size_of_setRF_DimmerValue	equ	__end_of_setRF_DimmerValue-_setRF_DimmerValue
  7641                           	
  7642  1867                     _setRF_DimmerValue:	
  7643                           	opt	stack 2
  7644                           ; Regs used in _setRF_DimmerValue: [wreg+fsr1l-status,0+pclath+cstack]
  7645                           ;setRF_DimmerValue@lights stored from wreg
  7646  1867  0020               	movlb 0	; select bank0
  7647  1868  00E3               	movwf	(setRF_DimmerValue@lights)
  7648                           	line	427
  7649                           	
  7650  1869                     l24030:	
  7651                           ;RF_Control_B1.c: 427: if(RF_Data[9] > 0x64)
  7652  1869  3065               	movlw	(065h)
  7653  186A  0021               	movlb 1	; select bank1
  7654  186B  0229               	subwf	0+(_RF_Data)^080h+09h,w
  7655  186C  1C03               	skipc
  7656  186D  286F               	goto	u8011
  7657  186E  2870               	goto	u8010
  7658  186F                     u8011:
  7659  186F  2877               	goto	l24034
  7660  1870                     u8010:
  7661                           	line	429
  7662                           	
  7663  1870                     l24032:	
  7664                           ;RF_Control_B1.c: 428: {
  7665                           ;RF_Control_B1.c: 429: RF_Data[9]=0x64;
  7666  1870  3064               	movlw	(064h)
  7667  1871  0020               	movlb 0	; select bank0
  7668  1872  00E1               	movwf	(??_setRF_DimmerValue+0)+0
  7669  1873  0861               	movf	(??_setRF_DimmerValue+0)+0,w
  7670  1874  0021               	movlb 1	; select bank1
  7671  1875  00A9               	movwf	0+(_RF_Data)^080h+09h
  7672  1876  2877               	goto	l24034
  7673                           	line	430
  7674                           	
  7675  1877                     l15286:	
  7676                           	line	431
  7677                           	
  7678  1877                     l24034:	
  7679                           ;RF_Control_B1.c: 430: }
  7680                           ;RF_Control_B1.c: 431: Product->Data[9]=RF_Data[9];
  7681  1877  0829               	movf	0+(_RF_Data)^080h+09h,w
  7682  1878  0020               	movlb 0	; select bank0
  7683  1879  00E1               	movwf	(??_setRF_DimmerValue+0)+0
  7684  187A  086F               	movf	(_Product),w
  7685  187B  3E09               	addlw	09h
  7686  187C  0086               	movwf	fsr1l
  7687  187D  3001               	movlw 1	; select bank2/3
  7688  187E  0087               	movwf fsr1h	
  7689                           	
  7690  187F  0861               	movf	(??_setRF_DimmerValue+0)+0,w
  7691  1880  0081               	movwf	indf1
  7692                           	line	432
  7693                           	
  7694  1881                     l24036:	
  7695                           ;RF_Control_B1.c: 432: Product->Data[11]=lights;
  7696  1881  0863               	movf	(setRF_DimmerValue@lights),w
  7697  1882  00E1               	movwf	(??_setRF_DimmerValue+0)+0
  7698  1883  086F               	movf	(_Product),w
  7699  1884  3E0B               	addlw	0Bh
  7700  1885  0086               	movwf	fsr1l
  7701  1886  3001               	movlw 1	; select bank2/3
  7702  1887  0087               	movwf fsr1h	
  7703                           	
  7704  1888  0861               	movf	(??_setRF_DimmerValue+0)+0,w
  7705  1889  0081               	movwf	indf1
  7706                           	line	433
  7707                           	
  7708  188A                     l24038:	
  7709                           ;RF_Control_B1.c: 433: Product->Data[(20+lights)]=Product->Data[9];
  7710  188A  086F               	movf	(_Product),w
  7711  188B  3E09               	addlw	09h
  7712  188C  0086               	movwf	fsr1l
  7713  188D  3001               	movlw 1	; select bank2/3
  7714  188E  0087               	movwf fsr1h	
  7715                           	
  7716  188F  0801               	movf	indf1,w
  7717  1890  00E1               	movwf	(??_setRF_DimmerValue+0)+0
  7718  1891  0863               	movf	(setRF_DimmerValue@lights),w
  7719  1892  3E14               	addlw	014h
  7720  1893  076F               	addwf	(_Product),w
  7721  1894  00E2               	movwf	(??_setRF_DimmerValue+1)+0
  7722  1895  0862               	movf	0+(??_setRF_DimmerValue+1)+0,w
  7723  1896  0086               	movwf	fsr1l
  7724  1897  3001               	movlw 1	; select bank2/3
  7725  1898  0087               	movwf fsr1h	
  7726                           	
  7727  1899  0861               	movf	(??_setRF_DimmerValue+0)+0,w
  7728  189A  0081               	movwf	indf1
  7729                           	line	434
  7730                           	
  7731  189B                     l24040:	
  7732                           ;RF_Control_B1.c: 434: setDimmerLights_AdjRF(lights);
  7733  189B  0863               	movf	(setRF_DimmerValue@lights),w
  7734  189C  31A4  2464  3198   	fcall	_setDimmerLights_AdjRF
  7735                           	line	435
  7736                           	
  7737  189F                     l15287:	
  7738  189F  0008               	return
  7739                           	opt stack 0
  7740                           GLOBAL	__end_of_setRF_DimmerValue
  7741  18A0                     	__end_of_setRF_DimmerValue:
  7742 ;; =============== function _setRF_DimmerValue ends ============
  7743                           
  7744                           	signat	_setRF_DimmerValue,4216
  7745                           	global	_setPowerFault_Exceptions
  7746                           psect	text4095,local,class=CODE,delta=2
  7747                           global __ptext4095
  7748  1918                     __ptext4095:
  7749                           
  7750 ;; *************** function _setPowerFault_Exceptions *****************
  7751 ;; Defined at:
  7752 ;;		line 134 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\PowerFault_B1.c"
  7753 ;; Parameters:    Size  Location     Type
  7754 ;;  command         1    wreg     unsigned char 
  7755 ;; Auto vars:     Size  Location     Type
  7756 ;;  command         1   12[BANK0 ] unsigned char 
  7757 ;; Return value:  Size  Location     Type
  7758 ;;		None               void
  7759 ;; Registers used:
  7760 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7761 ;; Tracked objects:
  7762 ;;		On entry : 0/0
  7763 ;;		On exit  : 0/0
  7764 ;;		Unchanged: 0/0
  7765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  7766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  7767 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  7768 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  7769 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  7770 ;;Total ram usage:        2 bytes
  7771 ;; Hardware stack levels used:    1
  7772 ;; Hardware stack levels required when called:    8
  7773 ;; This function calls:
  7774 ;;		_DimmerLights_Exceptions
  7775 ;;		_setLED
  7776 ;;		_setSw_Enable
  7777 ;;		_setRF_Enable
  7778 ;; This function is called by:
  7779 ;;		_setPowerFault_Main
  7780 ;; This function uses a non-reentrant model
  7781 ;;
  7782                           psect	text4095
  7783                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\PowerFault_B1.c"
  7784                           	line	134
  7785                           	global	__size_of_setPowerFault_Exceptions
  7786  0043                     	__size_of_setPowerFault_Exceptions	equ	__end_of_setPowerFault_Exceptions-_setPowerFault
                                 _Exceptions
  7787                           	
  7788  1918                     _setPowerFault_Exceptions:	
  7789                           	opt	stack 5
  7790                           ; Regs used in _setPowerFault_Exceptions: [wreg+fsr1l-status,0+pclath+cstack]
  7791                           ;setPowerFault_Exceptions@command stored from wreg
  7792  1918  0020               	movlb 0	; select bank0
  7793  1919  00AC               	movwf	(setPowerFault_Exceptions@command)
  7794                           	line	135
  7795                           	
  7796  191A                     l25374:	
  7797                           ;PowerFault_B1.c: 135: PF->ERROR=command;
  7798  191A  087A               	movf	(_PF),w
  7799  191B  0086               	movwf	fsr1l
  7800  191C  0187               	clrf fsr1h	
  7801                           	
  7802  191D  082C               	movf	(setPowerFault_Exceptions@command),w
  7803  191E  1081               	bcf	indf1,1
  7804  191F  1D03               	skipz
  7805  1920  1481               	bsf	indf1,1
  7806                           	line	136
  7807                           	
  7808  1921                     l25376:	
  7809                           ;PowerFault_B1.c: 136: PF->Safe=(~command) & 0x01;
  7810  1921  092C               	comf	(setPowerFault_Exceptions@command),w
  7811  1922  3901               	andlw	01h
  7812  1923  00AB               	movwf	(??_setPowerFault_Exceptions+0)+0
  7813  1924  087A               	movf	(_PF),w
  7814  1925  0086               	movwf	fsr1l
  7815  1926  0187               	clrf fsr1h	
  7816                           	
  7817  1927  0DAB               	rlf	(??_setPowerFault_Exceptions+0)+0,f
  7818  1928  0DAB               	rlf	(??_setPowerFault_Exceptions+0)+0,f
  7819  1929  0801               	movf	indf1,w
  7820  192A  062B               	xorwf	(??_setPowerFault_Exceptions+0)+0,w
  7821  192B  39FB               	andlw	not (((1<<1)-1)<<2)
  7822  192C  062B               	xorwf	(??_setPowerFault_Exceptions+0)+0,w
  7823  192D  0081               	movwf	indf1
  7824                           	line	137
  7825                           	
  7826  192E                     l25378:	
  7827                           ;PowerFault_B1.c: 137: if(command == 1)
  7828  192E  082C               	movf	(setPowerFault_Exceptions@command),w
  7829  192F  3A01               	xorlw	01h&0ffh
  7830  1930  1D03               	skipz
  7831  1931  2933               	goto	u9901
  7832  1932  2934               	goto	u9900
  7833  1933                     u9901:
  7834  1933  2938               	goto	l14042
  7835  1934                     u9900:
  7836                           	line	139
  7837                           	
  7838  1934                     l25380:	
  7839                           ;PowerFault_B1.c: 138: {
  7840                           ;PowerFault_B1.c: 139: DimmerLights_Exceptions(3);
  7841  1934  3003               	movlw	(03h)
  7842  1935  319D  25B2  3199   	fcall	_DimmerLights_Exceptions
  7843                           	line	140
  7844                           	
  7845  1938                     l14042:	
  7846                           	line	141
  7847                           ;PowerFault_B1.c: 140: }
  7848                           ;PowerFault_B1.c: 141: setLED(99,command+10);
  7849  1938  0020               	movlb 0	; select bank0
  7850  1939  082C               	movf	(setPowerFault_Exceptions@command),w
  7851  193A  3E0A               	addlw	0Ah
  7852  193B  00AB               	movwf	(??_setPowerFault_Exceptions+0)+0
  7853  193C  082B               	movf	(??_setPowerFault_Exceptions+0)+0,w
  7854  193D  00A2               	movwf	(?_setLED)
  7855  193E  3063               	movlw	(063h)
  7856  193F  3193  23CF  3199   	fcall	_setLED
  7857                           	line	143
  7858                           ;PowerFault_B1.c: 143: setSw_Enable((~command) & 0x01);
  7859  1942  0020               	movlb 0	; select bank0
  7860  1943  092C               	comf	(setPowerFault_Exceptions@command),w
  7861  1944  3901               	andlw	01h
  7862  1945  31A2  22A7  3199   	fcall	_setSw_Enable
  7863                           	line	145
  7864                           ;PowerFault_B1.c: 145: setRF_Enable(1,(~command) & 0x01);
  7865  1948  0020               	movlb 0	; select bank0
  7866  1949  092C               	comf	(setPowerFault_Exceptions@command),w
  7867  194A  3901               	andlw	01h
  7868  194B  00AB               	movwf	(??_setPowerFault_Exceptions+0)+0
  7869  194C  082B               	movf	(??_setPowerFault_Exceptions+0)+0,w
  7870  194D  00A2               	movwf	(?_setRF_Enable)
  7871  194E  3001               	movlw	(01h)
  7872  194F  31A5  257F  3199   	fcall	_setRF_Enable
  7873                           	line	149
  7874                           ;PowerFault_B1.c: 149: setLED(2,1);
  7875  1952  0020               	movlb 0	; select bank0
  7876  1953  01A2               	clrf	(?_setLED)
  7877  1954  1403               	bsf	status,0
  7878  1955  0DA2               	rlf	(?_setLED),f
  7879  1956  3002               	movlw	(02h)
  7880  1957  3193  23CF  3199   	fcall	_setLED
  7881                           	line	151
  7882                           	
  7883  195A                     l14043:	
  7884  195A  0008               	return
  7885                           	opt stack 0
  7886                           GLOBAL	__end_of_setPowerFault_Exceptions
  7887  195B                     	__end_of_setPowerFault_Exceptions:
  7888 ;; =============== function _setPowerFault_Exceptions ends ============
  7889                           
  7890                           	signat	_setPowerFault_Exceptions,4216
  7891                           	global	_setOverTemp_Exceptions
  7892                           psect	text4096,local,class=CODE,delta=2
  7893                           global __ptext4096
  7894  1B0B                     __ptext4096:
  7895                           
  7896 ;; *************** function _setOverTemp_Exceptions *****************
  7897 ;; Defined at:
  7898 ;;		line 141 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\OverTemperature_B1.c"
  7899 ;; Parameters:    Size  Location     Type
  7900 ;;  command         1    wreg     unsigned char 
  7901 ;; Auto vars:     Size  Location     Type
  7902 ;;  command         1   12[BANK0 ] unsigned char 
  7903 ;; Return value:  Size  Location     Type
  7904 ;;		None               void
  7905 ;; Registers used:
  7906 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7907 ;; Tracked objects:
  7908 ;;		On entry : 0/0
  7909 ;;		On exit  : 0/0
  7910 ;;		Unchanged: 0/0
  7911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  7912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  7913 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  7914 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  7915 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  7916 ;;Total ram usage:        2 bytes
  7917 ;; Hardware stack levels used:    1
  7918 ;; Hardware stack levels required when called:    8
  7919 ;; This function calls:
  7920 ;;		_DimmerLights_Exceptions
  7921 ;;		_setBuz
  7922 ;;		_setLED
  7923 ;;		_setSw_Enable
  7924 ;;		_setRF_Enable
  7925 ;; This function is called by:
  7926 ;;		_setTemp_Main
  7927 ;; This function uses a non-reentrant model
  7928 ;;
  7929                           psect	text4096
  7930                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\OverTemperature_B1.c"
  7931                           	line	141
  7932                           	global	__size_of_setOverTemp_Exceptions
  7933  004C                     	__size_of_setOverTemp_Exceptions	equ	__end_of_setOverTemp_Exceptions-_setOverTemp_Excep
                                 tions
  7934                           	
  7935  1B0B                     _setOverTemp_Exceptions:	
  7936                           	opt	stack 5
  7937                           ; Regs used in _setOverTemp_Exceptions: [wreg+fsr1l-status,0+pclath+cstack]
  7938                           ;setOverTemp_Exceptions@command stored from wreg
  7939  1B0B  0020               	movlb 0	; select bank0
  7940  1B0C  00AC               	movwf	(setOverTemp_Exceptions@command)
  7941                           	line	142
  7942                           	
  7943  1B0D                     l25364:	
  7944                           ;OverTemperature_B1.c: 142: Temp->ERROR=command;
  7945  1B0D  087C               	movf	(_Temp),w
  7946  1B0E  0086               	movwf	fsr1l
  7947  1B0F  3001               	movlw 1	; select bank2/3
  7948  1B10  0087               	movwf fsr1h	
  7949                           	
  7950  1B11  082C               	movf	(setOverTemp_Exceptions@command),w
  7951  1B12  1081               	bcf	indf1,1
  7952  1B13  1D03               	skipz
  7953  1B14  1481               	bsf	indf1,1
  7954                           	line	143
  7955                           	
  7956  1B15                     l25366:	
  7957                           ;OverTemperature_B1.c: 143: Temp->Safe=(~command) & 0x01;
  7958  1B15  092C               	comf	(setOverTemp_Exceptions@command),w
  7959  1B16  3901               	andlw	01h
  7960  1B17  00AB               	movwf	(??_setOverTemp_Exceptions+0)+0
  7961  1B18  087C               	movf	(_Temp),w
  7962  1B19  0086               	movwf	fsr1l
  7963  1B1A  3001               	movlw 1	; select bank2/3
  7964  1B1B  0087               	movwf fsr1h	
  7965                           	
  7966  1B1C  0EAB               	swapf	(??_setOverTemp_Exceptions+0)+0,f
  7967  1B1D  0801               	movf	indf1,w
  7968  1B1E  062B               	xorwf	(??_setOverTemp_Exceptions+0)+0,w
  7969  1B1F  39EF               	andlw	not (((1<<1)-1)<<4)
  7970  1B20  062B               	xorwf	(??_setOverTemp_Exceptions+0)+0,w
  7971  1B21  0081               	movwf	indf1
  7972                           	line	144
  7973                           	
  7974  1B22                     l25368:	
  7975                           ;OverTemperature_B1.c: 144: if(command)
  7976  1B22  082C               	movf	(setOverTemp_Exceptions@command),w
  7977  1B23  1D03               	skipz
  7978  1B24  2B26               	goto	u9890
  7979  1B25  2B2B               	goto	l25372
  7980  1B26                     u9890:
  7981                           	line	146
  7982                           	
  7983  1B26                     l25370:	
  7984                           ;OverTemperature_B1.c: 145: {
  7985                           ;OverTemperature_B1.c: 146: DimmerLights_Exceptions(1);
  7986  1B26  3001               	movlw	(01h)
  7987  1B27  319D  25B2  319B   	fcall	_DimmerLights_Exceptions
  7988                           	line	147
  7989                           ;OverTemperature_B1.c: 147: }
  7990  1B2A  2B34               	goto	l11782
  7991                           	line	148
  7992                           	
  7993  1B2B                     l11781:	
  7994                           	line	150
  7995                           	
  7996  1B2B                     l25372:	
  7997                           ;OverTemperature_B1.c: 148: else
  7998                           ;OverTemperature_B1.c: 149: {
  7999                           ;OverTemperature_B1.c: 150: setBuz(2,100);
  8000  1B2B  3064               	movlw	low(064h)
  8001  1B2C  0020               	movlb 0	; select bank0
  8002  1B2D  00A6               	movwf	(?_setBuz)
  8003  1B2E  3000               	movlw	high(064h)
  8004  1B2F  00A7               	movwf	((?_setBuz))+1
  8005  1B30  3002               	movlw	(02h)
  8006  1B31  3192  22C6  319B   	fcall	_setBuz
  8007                           	line	151
  8008                           	
  8009  1B34                     l11782:	
  8010                           	line	154
  8011                           ;OverTemperature_B1.c: 151: }
  8012                           ;OverTemperature_B1.c: 154: setLED(99,command+10);
  8013  1B34  0020               	movlb 0	; select bank0
  8014  1B35  082C               	movf	(setOverTemp_Exceptions@command),w
  8015  1B36  3E0A               	addlw	0Ah
  8016  1B37  00AB               	movwf	(??_setOverTemp_Exceptions+0)+0
  8017  1B38  082B               	movf	(??_setOverTemp_Exceptions+0)+0,w
  8018  1B39  00A2               	movwf	(?_setLED)
  8019  1B3A  3063               	movlw	(063h)
  8020  1B3B  3193  23CF  319B   	fcall	_setLED
  8021                           	line	156
  8022                           ;OverTemperature_B1.c: 156: setSw_Enable((~command) & 0x01);
  8023  1B3E  0020               	movlb 0	; select bank0
  8024  1B3F  092C               	comf	(setOverTemp_Exceptions@command),w
  8025  1B40  3901               	andlw	01h
  8026  1B41  31A2  22A7  319B   	fcall	_setSw_Enable
  8027                           	line	158
  8028                           ;OverTemperature_B1.c: 158: setRF_Enable(1,(~command) & 0x01);
  8029  1B44  0020               	movlb 0	; select bank0
  8030  1B45  092C               	comf	(setOverTemp_Exceptions@command),w
  8031  1B46  3901               	andlw	01h
  8032  1B47  00AB               	movwf	(??_setOverTemp_Exceptions+0)+0
  8033  1B48  082B               	movf	(??_setOverTemp_Exceptions+0)+0,w
  8034  1B49  00A2               	movwf	(?_setRF_Enable)
  8035  1B4A  3001               	movlw	(01h)
  8036  1B4B  31A5  257F  319B   	fcall	_setRF_Enable
  8037                           	line	162
  8038                           ;OverTemperature_B1.c: 162: setLED(2,1);
  8039  1B4E  0020               	movlb 0	; select bank0
  8040  1B4F  01A2               	clrf	(?_setLED)
  8041  1B50  1403               	bsf	status,0
  8042  1B51  0DA2               	rlf	(?_setLED),f
  8043  1B52  3002               	movlw	(02h)
  8044  1B53  3193  23CF  319B   	fcall	_setLED
  8045                           	line	165
  8046                           	
  8047  1B56                     l11783:	
  8048  1B56  0008               	return
  8049                           	opt stack 0
  8050                           GLOBAL	__end_of_setOverTemp_Exceptions
  8051  1B57                     	__end_of_setOverTemp_Exceptions:
  8052 ;; =============== function _setOverTemp_Exceptions ends ============
  8053                           
  8054                           	signat	_setOverTemp_Exceptions,4216
  8055                           	global	_setLoad_Exceptions
  8056                           psect	text4097,local,class=CODE,delta=2
  8057                           global __ptext4097
  8058  1B57                     __ptext4097:
  8059                           
  8060 ;; *************** function _setLoad_Exceptions *****************
  8061 ;; Defined at:
  8062 ;;		line 230 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\OverLoad_B1.c"
  8063 ;; Parameters:    Size  Location     Type
  8064 ;;  command         1    wreg     unsigned char 
  8065 ;; Auto vars:     Size  Location     Type
  8066 ;;  command         1   12[BANK0 ] unsigned char 
  8067 ;; Return value:  Size  Location     Type
  8068 ;;		None               void
  8069 ;; Registers used:
  8070 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8071 ;; Tracked objects:
  8072 ;;		On entry : 0/0
  8073 ;;		On exit  : 0/0
  8074 ;;		Unchanged: 0/0
  8075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  8076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  8077 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  8078 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  8079 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  8080 ;;Total ram usage:        2 bytes
  8081 ;; Hardware stack levels used:    1
  8082 ;; Hardware stack levels required when called:    8
  8083 ;; This function calls:
  8084 ;;		_DimmerLights_Exceptions
  8085 ;;		_setLED
  8086 ;;		_setSw_Enable
  8087 ;;		_setRF_Enable
  8088 ;; This function is called by:
  8089 ;;		_Load_Main
  8090 ;; This function uses a non-reentrant model
  8091 ;;
  8092                           psect	text4097
  8093                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\OverLoad_B1.c"
  8094                           	line	230
  8095                           	global	__size_of_setLoad_Exceptions
  8096  004D                     	__size_of_setLoad_Exceptions	equ	__end_of_setLoad_Exceptions-_setLoad_Exceptions
  8097                           	
  8098  1B57                     _setLoad_Exceptions:	
  8099                           	opt	stack 6
  8100                           ; Regs used in _setLoad_Exceptions: [wreg+fsr1l-status,0+pclath+cstack]
  8101                           ;setLoad_Exceptions@command stored from wreg
  8102  1B57  0020               	movlb 0	; select bank0
  8103  1B58  00AC               	movwf	(setLoad_Exceptions@command)
  8104                           	line	231
  8105                           	
  8106  1B59                     l25354:	
  8107                           ;OverLoad_B1.c: 231: Load->ERROR=command;
  8108  1B59  086D               	movf	(_Load),w
  8109  1B5A  0086               	movwf	fsr1l
  8110  1B5B  3002               	movlw 2	; select bank4/5
  8111  1B5C  0087               	movwf fsr1h	
  8112                           	
  8113  1B5D  082C               	movf	(setLoad_Exceptions@command),w
  8114  1B5E  1281               	bcf	indf1,5
  8115  1B5F  1D03               	skipz
  8116  1B60  1681               	bsf	indf1,5
  8117                           	line	232
  8118                           	
  8119  1B61                     l25356:	
  8120                           ;OverLoad_B1.c: 232: Load->Safe=(~command) & 0x01;
  8121  1B61  092C               	comf	(setLoad_Exceptions@command),w
  8122  1B62  3901               	andlw	01h
  8123  1B63  00AB               	movwf	(??_setLoad_Exceptions+0)+0
  8124  1B64  086D               	movf	(_Load),w
  8125  1B65  0086               	movwf	fsr1l
  8126  1B66  3002               	movlw 2	; select bank4/5
  8127  1B67  0087               	movwf fsr1h	
  8128                           	
  8129  1B68  0DAB               	rlf	(??_setLoad_Exceptions+0)+0,f
  8130  1B69  0DAB               	rlf	(??_setLoad_Exceptions+0)+0,f
  8131  1B6A  0DAB               	rlf	(??_setLoad_Exceptions+0)+0,f
  8132  1B6B  0801               	movf	indf1,w
  8133  1B6C  062B               	xorwf	(??_setLoad_Exceptions+0)+0,w
  8134  1B6D  39F7               	andlw	not (((1<<1)-1)<<3)
  8135  1B6E  062B               	xorwf	(??_setLoad_Exceptions+0)+0,w
  8136  1B6F  0081               	movwf	indf1
  8137                           	line	233
  8138                           	
  8139  1B70                     l25358:	
  8140                           ;OverLoad_B1.c: 233: Load->ErrorStatus=command;
  8141  1B70  082C               	movf	(setLoad_Exceptions@command),w
  8142  1B71  00AB               	movwf	(??_setLoad_Exceptions+0)+0
  8143  1B72  086D               	movf	(_Load),w
  8144  1B73  3E05               	addlw	05h
  8145  1B74  0086               	movwf	fsr1l
  8146  1B75  3002               	movlw 2	; select bank4/5
  8147  1B76  0087               	movwf fsr1h	
  8148                           	
  8149  1B77  082B               	movf	(??_setLoad_Exceptions+0)+0,w
  8150  1B78  0081               	movwf	indf1
  8151                           	line	235
  8152                           	
  8153  1B79                     l25360:	
  8154                           ;OverLoad_B1.c: 235: if(command)
  8155  1B79  082C               	movf	(setLoad_Exceptions@command),w
  8156  1B7A  1D03               	skipz
  8157  1B7B  2B7D               	goto	u9880
  8158  1B7C  2B81               	goto	l10583
  8159  1B7D                     u9880:
  8160                           	line	237
  8161                           	
  8162  1B7D                     l25362:	
  8163                           ;OverLoad_B1.c: 236: {
  8164                           ;OverLoad_B1.c: 237: DimmerLights_Exceptions(2);
  8165  1B7D  3002               	movlw	(02h)
  8166  1B7E  319D  25B2  319B   	fcall	_DimmerLights_Exceptions
  8167                           	line	238
  8168                           	
  8169  1B81                     l10583:	
  8170                           	line	239
  8171                           ;OverLoad_B1.c: 238: }
  8172                           ;OverLoad_B1.c: 239: setLED(99,command+10);
  8173  1B81  0020               	movlb 0	; select bank0
  8174  1B82  082C               	movf	(setLoad_Exceptions@command),w
  8175  1B83  3E0A               	addlw	0Ah
  8176  1B84  00AB               	movwf	(??_setLoad_Exceptions+0)+0
  8177  1B85  082B               	movf	(??_setLoad_Exceptions+0)+0,w
  8178  1B86  00A2               	movwf	(?_setLED)
  8179  1B87  3063               	movlw	(063h)
  8180  1B88  3193  23CF  319B   	fcall	_setLED
  8181                           	line	241
  8182                           ;OverLoad_B1.c: 241: setSw_Enable((~command) & 0x01);
  8183  1B8B  0020               	movlb 0	; select bank0
  8184  1B8C  092C               	comf	(setLoad_Exceptions@command),w
  8185  1B8D  3901               	andlw	01h
  8186  1B8E  31A2  22A7  319B   	fcall	_setSw_Enable
  8187                           	line	243
  8188                           ;OverLoad_B1.c: 243: setRF_Enable(1,(~command) & 0x01);
  8189  1B91  0020               	movlb 0	; select bank0
  8190  1B92  092C               	comf	(setLoad_Exceptions@command),w
  8191  1B93  3901               	andlw	01h
  8192  1B94  00AB               	movwf	(??_setLoad_Exceptions+0)+0
  8193  1B95  082B               	movf	(??_setLoad_Exceptions+0)+0,w
  8194  1B96  00A2               	movwf	(?_setRF_Enable)
  8195  1B97  3001               	movlw	(01h)
  8196  1B98  31A5  257F  319B   	fcall	_setRF_Enable
  8197                           	line	247
  8198                           ;OverLoad_B1.c: 247: setLED(2,1);
  8199  1B9B  0020               	movlb 0	; select bank0
  8200  1B9C  01A2               	clrf	(?_setLED)
  8201  1B9D  1403               	bsf	status,0
  8202  1B9E  0DA2               	rlf	(?_setLED),f
  8203  1B9F  3002               	movlw	(02h)
  8204  1BA0  3193  23CF  319B   	fcall	_setLED
  8205                           	line	249
  8206                           	
  8207  1BA3                     l10584:	
  8208  1BA3  0008               	return
  8209                           	opt stack 0
  8210                           GLOBAL	__end_of_setLoad_Exceptions
  8211  1BA4                     	__end_of_setLoad_Exceptions:
  8212 ;; =============== function _setLoad_Exceptions ends ============
  8213                           
  8214                           	signat	_setLoad_Exceptions,4216
  8215                           	global	_Switch_Main
  8216                           psect	text4098,local,class=CODE,delta=2
  8217                           global __ptext4098
  8218  20B4                     __ptext4098:
  8219                           
  8220 ;; *************** function _Switch_Main *****************
  8221 ;; Defined at:
  8222 ;;		line 63 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Switch_B1.c"
  8223 ;; Parameters:    Size  Location     Type
  8224 ;;		None
  8225 ;; Auto vars:     Size  Location     Type
  8226 ;;		None
  8227 ;; Return value:  Size  Location     Type
  8228 ;;		None               void
  8229 ;; Registers used:
  8230 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8231 ;; Tracked objects:
  8232 ;;		On entry : 0/0
  8233 ;;		On exit  : 0/0
  8234 ;;		Unchanged: 0/0
  8235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  8236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  8237 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  8238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  8239 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  8240 ;;Total ram usage:        0 bytes
  8241 ;; Hardware stack levels used:    1
  8242 ;; Hardware stack levels required when called:    8
  8243 ;; This function calls:
  8244 ;;		_setSw_Main
  8245 ;; This function is called by:
  8246 ;;		_main
  8247 ;; This function uses a non-reentrant model
  8248 ;;
  8249                           psect	text4098
  8250                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Switch_B1.c"
  8251                           	line	63
  8252                           	global	__size_of_Switch_Main
  8253  0005                     	__size_of_Switch_Main	equ	__end_of_Switch_Main-_Switch_Main
  8254                           	
  8255  20B4                     _Switch_Main:	
  8256                           	opt	stack 7
  8257                           ; Regs used in _Switch_Main: [wreg+fsr1l-status,0+pclath+cstack]
  8258                           	line	65
  8259                           	
  8260  20B4                     l25352:	
  8261                           ;Switch_B1.c: 65: setSw_Main(1);
  8262  20B4  3001               	movlw	(01h)
  8263  20B5  3185  2523  31A0   	fcall	_setSw_Main
  8264                           	line	76
  8265                           	
  8266  20B8                     l16442:	
  8267  20B8  0008               	return
  8268                           	opt stack 0
  8269                           GLOBAL	__end_of_Switch_Main
  8270  20B9                     	__end_of_Switch_Main:
  8271 ;; =============== function _Switch_Main ends ============
  8272                           
  8273                           	signat	_Switch_Main,88
  8274                           	global	_Flash_Memory_Main
  8275                           psect	text4099,local,class=CODE,delta=2
  8276                           global __ptext4099
  8277  1BF3                     __ptext4099:
  8278                           
  8279 ;; *************** function _Flash_Memory_Main *****************
  8280 ;; Defined at:
  8281 ;;		line 475 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_16f1518_B1.c"
  8282 ;; Parameters:    Size  Location     Type
  8283 ;;		None
  8284 ;; Auto vars:     Size  Location     Type
  8285 ;;		None
  8286 ;; Return value:  Size  Location     Type
  8287 ;;		None               void
  8288 ;; Registers used:
  8289 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8290 ;; Tracked objects:
  8291 ;;		On entry : 0/0
  8292 ;;		On exit  : 0/0
  8293 ;;		Unchanged: 0/0
  8294 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  8295 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  8296 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  8297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  8298 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  8299 ;;Total ram usage:        0 bytes
  8300 ;; Hardware stack levels used:    1
  8301 ;; Hardware stack levels required when called:    7
  8302 ;; This function calls:
  8303 ;;		_Flash_Memory_Modify
  8304 ;; This function is called by:
  8305 ;;		_main
  8306 ;; This function uses a non-reentrant model
  8307 ;;
  8308                           psect	text4099
  8309                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_16f1518_B1.c"
  8310                           	line	475
  8311                           	global	__size_of_Flash_Memory_Main
  8312  0050                     	__size_of_Flash_Memory_Main	equ	__end_of_Flash_Memory_Main-_Flash_Memory_Main
  8313                           	
  8314  1BF3                     _Flash_Memory_Main:	
  8315                           	opt	stack 8
  8316                           ; Regs used in _Flash_Memory_Main: [wreg+fsr1l-status,0+pclath+cstack]
  8317                           	line	476
  8318                           	
  8319  1BF3                     l25338:	
  8320                           ;MCU_16f1518_B1.c: 476: if(Memory->GO)
  8321  1BF3  0021               	movlb 1	; select bank1
  8322  1BF4  086A               	movf	(_Memory)^080h,w
  8323  1BF5  3E22               	addlw	022h
  8324  1BF6  0086               	movwf	fsr1l
  8325  1BF7  3001               	movlw 1	; select bank2/3
  8326  1BF8  0087               	movwf fsr1h	
  8327                           	
  8328  1BF9  1C81               	btfss	indf1,1
  8329  1BFA  2BFC               	goto	u9851
  8330  1BFB  2BFD               	goto	u9850
  8331  1BFC                     u9851:
  8332  1BFC  2C42               	goto	l9400
  8333  1BFD                     u9850:
  8334                           	line	478
  8335                           	
  8336  1BFD                     l25340:	
  8337                           ;MCU_16f1518_B1.c: 477: {
  8338                           ;MCU_16f1518_B1.c: 478: if(Memory->Modify)
  8339  1BFD  086A               	movf	(_Memory)^080h,w
  8340  1BFE  3E22               	addlw	022h
  8341  1BFF  0086               	movwf	fsr1l
  8342  1C00  3001               	movlw 1	; select bank2/3
  8343  1C01  0087               	movwf fsr1h	
  8344                           	
  8345  1C02  1C01               	btfss	indf1,0
  8346  1C03  2C05               	goto	u9861
  8347  1C04  2C06               	goto	u9860
  8348  1C05                     u9861:
  8349  1C05  2C39               	goto	l25350
  8350  1C06                     u9860:
  8351                           	line	480
  8352                           	
  8353  1C06                     l25342:	
  8354                           ;MCU_16f1518_B1.c: 479: {
  8355                           ;MCU_16f1518_B1.c: 480: Memory->Time++;
  8356  1C06  086A               	movf	(_Memory)^080h,w
  8357  1C07  3E23               	addlw	023h
  8358  1C08  0086               	movwf	fsr1l
  8359  1C09  3001               	movlw 1	; select bank2/3
  8360  1C0A  0087               	movwf fsr1h	
  8361                           	
  8362  1C0B  3001               	movlw	01h
  8363  1C0C  0781               	addwf	indf1,f
  8364  1C0D  3141               	addfsr	fsr1,1
  8365  1C0E  1803               	skipnc
  8366  1C0F  0A81               	incf	indf1,f
  8367                           	line	481
  8368                           	
  8369  1C10                     l25344:	
  8370                           ;MCU_16f1518_B1.c: 481: if(Memory->Time == 25)
  8371  1C10  086A               	movf	(_Memory)^080h,w
  8372  1C11  3E23               	addlw	023h
  8373  1C12  0086               	movwf	fsr1l
  8374  1C13  3001               	movlw 1	; select bank2/3
  8375  1C14  0087               	movwf fsr1h	
  8376                           	
  8377  1C15  3F40               	moviw	[0]fsr1
  8378  1C16  3A19               	xorlw	low(019h)
  8379  1C17  1D03               	skipz
  8380  1C18  2C1B               	goto	u9875
  8381  1C19  3F41               	moviw	[1]fsr1
  8382  1C1A  3A00               	xorlw	high(019h)
  8383  1C1B                     u9875:
  8384  1C1B  1D03               	skipz
  8385  1C1C  2C1E               	goto	u9871
  8386  1C1D  2C1F               	goto	u9870
  8387  1C1E                     u9871:
  8388  1C1E  2C42               	goto	l9400
  8389  1C1F                     u9870:
  8390                           	line	483
  8391                           	
  8392  1C1F                     l25346:	
  8393                           ;MCU_16f1518_B1.c: 482: {
  8394                           ;MCU_16f1518_B1.c: 483: Memory->Time=0;
  8395  1C1F  086A               	movf	(_Memory)^080h,w
  8396  1C20  3E23               	addlw	023h
  8397  1C21  0086               	movwf	fsr1l
  8398  1C22  3001               	movlw 1	; select bank2/3
  8399  1C23  0087               	movwf fsr1h	
  8400                           	
  8401  1C24  3000               	movlw	low(0)
  8402  1C25  3FC0               	movwi	[0]fsr1
  8403  1C26  3000               	movlw	high(0)
  8404  1C27  3FC1               	movwi	[1]fsr1
  8405                           	line	484
  8406                           ;MCU_16f1518_B1.c: 484: Memory->Modify=0;
  8407  1C28  086A               	movf	(_Memory)^080h,w
  8408  1C29  3E22               	addlw	022h
  8409  1C2A  0086               	movwf	fsr1l
  8410  1C2B  3001               	movlw 1	; select bank2/3
  8411  1C2C  0087               	movwf fsr1h	
  8412                           	
  8413  1C2D  1001               	bcf	indf1,0
  8414                           	line	485
  8415                           ;MCU_16f1518_B1.c: 485: Memory->GO=0;
  8416  1C2E  086A               	movf	(_Memory)^080h,w
  8417  1C2F  3E22               	addlw	022h
  8418  1C30  0086               	movwf	fsr1l
  8419  1C31  3001               	movlw 1	; select bank2/3
  8420  1C32  0087               	movwf fsr1h	
  8421                           	
  8422  1C33  1081               	bcf	indf1,1
  8423                           	line	486
  8424                           	
  8425  1C34                     l25348:	
  8426                           ;MCU_16f1518_B1.c: 486: Flash_Memory_Modify();
  8427  1C34  3190  2054  319B   	fcall	_Flash_Memory_Modify
  8428  1C37  2C42               	goto	l9400
  8429                           	line	488
  8430                           	
  8431  1C38                     l9398:	
  8432                           	line	489
  8433                           ;MCU_16f1518_B1.c: 488: }
  8434                           ;MCU_16f1518_B1.c: 489: }
  8435  1C38  2C42               	goto	l9400
  8436                           	line	490
  8437                           	
  8438  1C39                     l9397:	
  8439                           	line	492
  8440                           	
  8441  1C39                     l25350:	
  8442                           ;MCU_16f1518_B1.c: 490: else
  8443                           ;MCU_16f1518_B1.c: 491: {
  8444                           ;MCU_16f1518_B1.c: 492: Memory->GO=0;
  8445  1C39  0021               	movlb 1	; select bank1
  8446  1C3A  086A               	movf	(_Memory)^080h,w
  8447  1C3B  3E22               	addlw	022h
  8448  1C3C  0086               	movwf	fsr1l
  8449  1C3D  3001               	movlw 1	; select bank2/3
  8450  1C3E  0087               	movwf fsr1h	
  8451                           	
  8452  1C3F  1081               	bcf	indf1,1
  8453  1C40  2C42               	goto	l9400
  8454                           	line	493
  8455                           	
  8456  1C41                     l9399:	
  8457  1C41  2C42               	goto	l9400
  8458                           	line	494
  8459                           	
  8460  1C42                     l9396:	
  8461                           	line	495
  8462                           	
  8463  1C42                     l9400:	
  8464  1C42  0008               	return
  8465                           	opt stack 0
  8466                           GLOBAL	__end_of_Flash_Memory_Main
  8467  1C43                     	__end_of_Flash_Memory_Main:
  8468 ;; =============== function _Flash_Memory_Main ends ============
  8469                           
  8470                           	signat	_Flash_Memory_Main,88
  8471                           	global	_DimmerLights_Main
  8472                           psect	text4100,local,class=CODE,delta=2
  8473                           global __ptext4100
  8474  20F5                     __ptext4100:
  8475                           
  8476 ;; *************** function _DimmerLights_Main *****************
  8477 ;; Defined at:
  8478 ;;		line 106 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
  8479 ;; Parameters:    Size  Location     Type
  8480 ;;		None
  8481 ;; Auto vars:     Size  Location     Type
  8482 ;;		None
  8483 ;; Return value:  Size  Location     Type
  8484 ;;		None               void
  8485 ;; Registers used:
  8486 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8487 ;; Tracked objects:
  8488 ;;		On entry : 0/0
  8489 ;;		On exit  : 0/0
  8490 ;;		Unchanged: 0/0
  8491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  8492 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  8493 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  8494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  8495 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  8496 ;;Total ram usage:        0 bytes
  8497 ;; Hardware stack levels used:    1
  8498 ;; Hardware stack levels required when called:    8
  8499 ;; This function calls:
  8500 ;;		_setDimmerLights_Main
  8501 ;;		_DimmerLights_Close
  8502 ;; This function is called by:
  8503 ;;		_main
  8504 ;; This function uses a non-reentrant model
  8505 ;;
  8506                           psect	text4100
  8507                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
  8508                           	line	106
  8509                           	global	__size_of_DimmerLights_Main
  8510  0008                     	__size_of_DimmerLights_Main	equ	__end_of_DimmerLights_Main-_DimmerLights_Main
  8511                           	
  8512  20F5                     _DimmerLights_Main:	
  8513                           	opt	stack 7
  8514                           ; Regs used in _DimmerLights_Main: [wreg+fsr1l-status,0+pclath+cstack]
  8515                           	line	108
  8516                           	
  8517  20F5                     l25336:	
  8518                           ;Dimmer_B1.c: 108: setDimmerLights_Main(1);
  8519  20F5  3001               	movlw	(01h)
  8520  20F6  3194  2456  31A0   	fcall	_setDimmerLights_Main
  8521                           	line	119
  8522                           ;Dimmer_B1.c: 119: DimmerLights_Close();
  8523  20F9  31A5  25D7  31A0   	fcall	_DimmerLights_Close
  8524                           	line	120
  8525                           	
  8526  20FC                     l5767:	
  8527  20FC  0008               	return
  8528                           	opt stack 0
  8529                           GLOBAL	__end_of_DimmerLights_Main
  8530  20FD                     	__end_of_DimmerLights_Main:
  8531 ;; =============== function _DimmerLights_Main ends ============
  8532                           
  8533                           	signat	_DimmerLights_Main,88
  8534                           	global	_setSw_Main
  8535                           psect	text4101,local,class=CODE,delta=2
  8536                           global __ptext4101
  8537  0523                     __ptext4101:
  8538                           
  8539 ;; *************** function _setSw_Main *****************
  8540 ;; Defined at:
  8541 ;;		line 113 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Switch_B1.c"
  8542 ;; Parameters:    Size  Location     Type
  8543 ;;  sw              1    wreg     unsigned char 
  8544 ;; Auto vars:     Size  Location     Type
  8545 ;;  sw              1   15[BANK0 ] unsigned char 
  8546 ;; Return value:  Size  Location     Type
  8547 ;;		None               void
  8548 ;; Registers used:
  8549 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8550 ;; Tracked objects:
  8551 ;;		On entry : 0/0
  8552 ;;		On exit  : 0/0
  8553 ;;		Unchanged: 0/0
  8554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  8555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  8556 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  8557 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  8558 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
  8559 ;;Total ram usage:        4 bytes
  8560 ;; Hardware stack levels used:    1
  8561 ;; Hardware stack levels required when called:    7
  8562 ;; This function calls:
  8563 ;;		_SwPointSelect
  8564 ;;		_Sw_DimmerOnFunc
  8565 ;;		_Sw_DimmerAdjFunc
  8566 ;;		_setRF_Learn
  8567 ;;		_setBuz
  8568 ;;		_Sw_DimmerOffFunc
  8569 ;; This function is called by:
  8570 ;;		_Switch_Main
  8571 ;; This function uses a non-reentrant model
  8572 ;;
  8573                           psect	text4101
  8574                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Switch_B1.c"
  8575                           	line	113
  8576                           	global	__size_of_setSw_Main
  8577  0188                     	__size_of_setSw_Main	equ	__end_of_setSw_Main-_setSw_Main
  8578                           	
  8579  0523                     _setSw_Main:	
  8580                           	opt	stack 7
  8581                           ; Regs used in _setSw_Main: [wreg+fsr1l-status,0+pclath+cstack]
  8582                           ;setSw_Main@sw stored from wreg
  8583  0523  0020               	movlb 0	; select bank0
  8584  0524  00AF               	movwf	(setSw_Main@sw)
  8585                           	line	114
  8586                           	
  8587  0525                     l25262:	
  8588                           ;Switch_B1.c: 114: if(Sw->Enable)
  8589  0525  086E               	movf	(_Sw),w
  8590  0526  0086               	movwf	fsr1l
  8591  0527  3001               	movlw 1	; select bank2/3
  8592  0528  0087               	movwf fsr1h	
  8593                           	
  8594  0529  1C01               	btfss	indf1,0
  8595  052A  2D2C               	goto	u9681
  8596  052B  2D2D               	goto	u9680
  8597  052C                     u9681:
  8598  052C  2EAA               	goto	l16473
  8599  052D                     u9680:
  8600                           	line	116
  8601                           	
  8602  052D                     l25264:	
  8603                           ;Switch_B1.c: 115: {
  8604                           ;Switch_B1.c: 116: SwPointSelect(sw);
  8605  052D  082F               	movf	(setSw_Main@sw),w
  8606  052E  31A2  2210  3185   	fcall	_SwPointSelect
  8607                           	line	144
  8608                           	
  8609  0531                     l25266:	
  8610                           ;Switch_B1.c: 144: Sw->Touch=(RA6 || RA4 || RA0 || RB1)?1:0;
  8611  0531  0020               	movlb 0	; select bank0
  8612  0532  01AE               	clrf	(_setSw_Main$20644)
  8613  0533  1403               	bsf	status,0
  8614  0534  0DAE               	rlf	(_setSw_Main$20644),f
  8615                           	
  8616  0535                     l25268:	
  8617  0535  1B0C               	btfsc	(102/8),(102)&7
  8618  0536  2D38               	goto	u9691
  8619  0537  2D39               	goto	u9690
  8620  0538                     u9691:
  8621  0538  2D47               	goto	l25278
  8622  0539                     u9690:
  8623                           	
  8624  0539                     l25270:	
  8625  0539  1A0C               	btfsc	(100/8),(100)&7
  8626  053A  2D3C               	goto	u9701
  8627  053B  2D3D               	goto	u9700
  8628  053C                     u9701:
  8629  053C  2D47               	goto	l25278
  8630  053D                     u9700:
  8631                           	
  8632  053D                     l25272:	
  8633  053D  180C               	btfsc	(96/8),(96)&7
  8634  053E  2D40               	goto	u9711
  8635  053F  2D41               	goto	u9710
  8636  0540                     u9711:
  8637  0540  2D47               	goto	l25278
  8638  0541                     u9710:
  8639                           	
  8640  0541                     l25274:	
  8641  0541  188D               	btfsc	(105/8),(105)&7
  8642  0542  2D44               	goto	u9721
  8643  0543  2D45               	goto	u9720
  8644  0544                     u9721:
  8645  0544  2D47               	goto	l25278
  8646  0545                     u9720:
  8647                           	
  8648  0545                     l25276:	
  8649  0545  01AE               	clrf	(_setSw_Main$20644)
  8650  0546  2D47               	goto	l25278
  8651                           	
  8652  0547                     l16456:	
  8653                           	
  8654  0547                     l25278:	
  8655  0547  086E               	movf	(_Sw),w
  8656  0548  0086               	movwf	fsr1l
  8657  0549  3001               	movlw 1	; select bank2/3
  8658  054A  0087               	movwf fsr1h	
  8659                           	
  8660  054B  082E               	movf	(_setSw_Main$20644),w
  8661  054C  1081               	bcf	indf1,1
  8662  054D  1D03               	skipz
  8663  054E  1481               	bsf	indf1,1
  8664                           	line	148
  8665                           ;Switch_B1.c: 148: if(Sw->Touch)
  8666  054F  086E               	movf	(_Sw),w
  8667  0550  0086               	movwf	fsr1l
  8668  0551  3001               	movlw 1	; select bank2/3
  8669  0552  0087               	movwf fsr1h	
  8670                           	
  8671  0553  1C81               	btfss	indf1,1
  8672  0554  2D56               	goto	u9731
  8673  0555  2D57               	goto	u9730
  8674  0556                     u9731:
  8675  0556  2E4A               	goto	l25324
  8676  0557                     u9730:
  8677                           	line	150
  8678                           	
  8679  0557                     l25280:	
  8680                           ;Switch_B1.c: 149: {
  8681                           ;Switch_B1.c: 150: if(!Sw->Debounce)
  8682  0557  086E               	movf	(_Sw),w
  8683  0558  0086               	movwf	fsr1l
  8684  0559  3001               	movlw 1	; select bank2/3
  8685  055A  0087               	movwf fsr1h	
  8686                           	
  8687  055B  1901               	btfsc	indf1,2
  8688  055C  2D5E               	goto	u9741
  8689  055D  2D5F               	goto	u9740
  8690  055E                     u9741:
  8691  055E  2D84               	goto	l25290
  8692  055F                     u9740:
  8693                           	line	152
  8694                           	
  8695  055F                     l25282:	
  8696                           ;Switch_B1.c: 151: {
  8697                           ;Switch_B1.c: 152: Sw->DebounceTime++;
  8698  055F  3001               	movlw	(01h)
  8699  0560  00AC               	movwf	(??_setSw_Main+0)+0
  8700  0561  086E               	movf	(_Sw),w
  8701  0562  3E02               	addlw	02h
  8702  0563  0086               	movwf	fsr1l
  8703  0564  3001               	movlw 1	; select bank2/3
  8704  0565  0087               	movwf fsr1h	
  8705                           	
  8706  0566  082C               	movf	(??_setSw_Main+0)+0,w
  8707  0567  0781               	addwf	indf1,f
  8708                           	line	153
  8709                           	
  8710  0568                     l25284:	
  8711                           ;Switch_B1.c: 153: if(Sw->DebounceTime >= 5)
  8712  0568  086E               	movf	(_Sw),w
  8713  0569  3E02               	addlw	02h
  8714  056A  0086               	movwf	fsr1l
  8715  056B  3001               	movlw 1	; select bank2/3
  8716  056C  0087               	movwf fsr1h	
  8717                           	
  8718  056D  3005               	movlw	(05h)
  8719  056E  0201               	subwf	indf1,w
  8720  056F  1C03               	skipc
  8721  0570  2D72               	goto	u9751
  8722  0571  2D73               	goto	u9750
  8723  0572                     u9751:
  8724  0572  2EAA               	goto	l16473
  8725  0573                     u9750:
  8726                           	line	155
  8727                           	
  8728  0573                     l25286:	
  8729                           ;Switch_B1.c: 154: {
  8730                           ;Switch_B1.c: 155: Sw->DebounceTime=0;
  8731  0573  086E               	movf	(_Sw),w
  8732  0574  3E02               	addlw	02h
  8733  0575  0086               	movwf	fsr1l
  8734  0576  3001               	movlw 1	; select bank2/3
  8735  0577  0087               	movwf fsr1h	
  8736                           	
  8737  0578  0181               	clrf	indf1
  8738                           	line	156
  8739                           ;Switch_B1.c: 156: Sw->Debounce=1;
  8740  0579  086E               	movf	(_Sw),w
  8741  057A  0086               	movwf	fsr1l
  8742  057B  3001               	movlw 1	; select bank2/3
  8743  057C  0087               	movwf fsr1h	
  8744                           	
  8745  057D  1501               	bsf	indf1,2
  8746                           	line	159
  8747                           	
  8748  057E                     l25288:	
  8749                           ;Switch_B1.c: 159: Sw_DimmerOnFunc(sw);
  8750  057E  082F               	movf	(setSw_Main@sw),w
  8751  057F  319D  2550  3185   	fcall	_Sw_DimmerOnFunc
  8752  0582  2EAA               	goto	l16473
  8753                           	line	162
  8754                           	
  8755  0583                     l16459:	
  8756                           	line	163
  8757                           ;Switch_B1.c: 162: }
  8758                           ;Switch_B1.c: 163: }
  8759  0583  2EAA               	goto	l16473
  8760                           	line	164
  8761                           	
  8762  0584                     l16458:	
  8763                           	line	166
  8764                           	
  8765  0584                     l25290:	
  8766                           ;Switch_B1.c: 164: else
  8767                           ;Switch_B1.c: 165: {
  8768                           ;Switch_B1.c: 166: if(!Sw->Hold1)
  8769  0584  0020               	movlb 0	; select bank0
  8770  0585  086E               	movf	(_Sw),w
  8771  0586  0086               	movwf	fsr1l
  8772  0587  3001               	movlw 1	; select bank2/3
  8773  0588  0087               	movwf fsr1h	
  8774                           	
  8775  0589  1981               	btfsc	indf1,3
  8776  058A  2D8C               	goto	u9761
  8777  058B  2D8D               	goto	u9760
  8778  058C                     u9761:
  8779  058C  2DBD               	goto	l25300
  8780  058D                     u9760:
  8781                           	line	168
  8782                           	
  8783  058D                     l25292:	
  8784                           ;Switch_B1.c: 167: {
  8785                           ;Switch_B1.c: 168: Sw->Hold1Time++;
  8786  058D  086E               	movf	(_Sw),w
  8787  058E  3E03               	addlw	03h
  8788  058F  0086               	movwf	fsr1l
  8789  0590  3001               	movlw 1	; select bank2/3
  8790  0591  0087               	movwf fsr1h	
  8791                           	
  8792  0592  3001               	movlw	01h
  8793  0593  0781               	addwf	indf1,f
  8794  0594  3141               	addfsr	fsr1,1
  8795  0595  1803               	skipnc
  8796  0596  0A81               	incf	indf1,f
  8797                           	line	169
  8798                           	
  8799  0597                     l25294:	
  8800                           ;Switch_B1.c: 169: if(Sw->Hold1Time >= 150)
  8801  0597  086E               	movf	(_Sw),w
  8802  0598  3E03               	addlw	03h
  8803  0599  0086               	movwf	fsr1l
  8804  059A  3001               	movlw 1	; select bank2/3
  8805  059B  0087               	movwf fsr1h	
  8806                           	
  8807  059C  3F40               	moviw	[0]fsr1
  8808  059D  00AC               	movwf	(??_setSw_Main+0)+0
  8809  059E  3F41               	moviw	[1]fsr1
  8810  059F  00AD               	movwf	(??_setSw_Main+0)+0+1
  8811  05A0  3000               	movlw	high(096h)
  8812  05A1  022D               	subwf	1+(??_setSw_Main+0)+0,w
  8813  05A2  3096               	movlw	low(096h)
  8814  05A3  1903               	skipnz
  8815  05A4  022C               	subwf	0+(??_setSw_Main+0)+0,w
  8816  05A5  1C03               	skipc
  8817  05A6  2DA8               	goto	u9771
  8818  05A7  2DA9               	goto	u9770
  8819  05A8                     u9771:
  8820  05A8  2EAA               	goto	l16473
  8821  05A9                     u9770:
  8822                           	line	171
  8823                           	
  8824  05A9                     l25296:	
  8825                           ;Switch_B1.c: 170: {
  8826                           ;Switch_B1.c: 171: Sw->Hold1Time=0;
  8827  05A9  086E               	movf	(_Sw),w
  8828  05AA  3E03               	addlw	03h
  8829  05AB  0086               	movwf	fsr1l
  8830  05AC  3001               	movlw 1	; select bank2/3
  8831  05AD  0087               	movwf fsr1h	
  8832                           	
  8833  05AE  3000               	movlw	low(0)
  8834  05AF  3FC0               	movwi	[0]fsr1
  8835  05B0  3000               	movlw	high(0)
  8836  05B1  3FC1               	movwi	[1]fsr1
  8837                           	line	172
  8838                           ;Switch_B1.c: 172: Sw->Hold1=1;
  8839  05B2  086E               	movf	(_Sw),w
  8840  05B3  0086               	movwf	fsr1l
  8841  05B4  3001               	movlw 1	; select bank2/3
  8842  05B5  0087               	movwf fsr1h	
  8843                           	
  8844  05B6  1581               	bsf	indf1,3
  8845                           	line	175
  8846                           	
  8847  05B7                     l25298:	
  8848                           ;Switch_B1.c: 175: Sw_DimmerAdjFunc(sw);
  8849  05B7  082F               	movf	(setSw_Main@sw),w
  8850  05B8  31A6  2632  3185   	fcall	_Sw_DimmerAdjFunc
  8851  05BB  2EAA               	goto	l16473
  8852                           	line	178
  8853                           	
  8854  05BC                     l16462:	
  8855                           	line	179
  8856                           ;Switch_B1.c: 178: }
  8857                           ;Switch_B1.c: 179: }
  8858  05BC  2EAA               	goto	l16473
  8859                           	line	180
  8860                           	
  8861  05BD                     l16461:	
  8862                           	line	182
  8863                           	
  8864  05BD                     l25300:	
  8865                           ;Switch_B1.c: 180: else
  8866                           ;Switch_B1.c: 181: {
  8867                           ;Switch_B1.c: 182: if(!Sw->Hold2)
  8868  05BD  0020               	movlb 0	; select bank0
  8869  05BE  086E               	movf	(_Sw),w
  8870  05BF  0086               	movwf	fsr1l
  8871  05C0  3001               	movlw 1	; select bank2/3
  8872  05C1  0087               	movwf fsr1h	
  8873                           	
  8874  05C2  1A01               	btfsc	indf1,4
  8875  05C3  2DC5               	goto	u9781
  8876  05C4  2DC6               	goto	u9780
  8877  05C5                     u9781:
  8878  05C5  2E0C               	goto	l25314
  8879  05C6                     u9780:
  8880                           	line	184
  8881                           	
  8882  05C6                     l25302:	
  8883                           ;Switch_B1.c: 183: {
  8884                           ;Switch_B1.c: 184: Sw->Hold2Time++;
  8885  05C6  086E               	movf	(_Sw),w
  8886  05C7  3E05               	addlw	05h
  8887  05C8  0086               	movwf	fsr1l
  8888  05C9  3001               	movlw 1	; select bank2/3
  8889  05CA  0087               	movwf fsr1h	
  8890                           	
  8891  05CB  3001               	movlw	01h
  8892  05CC  0781               	addwf	indf1,f
  8893  05CD  3141               	addfsr	fsr1,1
  8894  05CE  1803               	skipnc
  8895  05CF  0A81               	incf	indf1,f
  8896                           	line	185
  8897                           	
  8898  05D0                     l25304:	
  8899                           ;Switch_B1.c: 185: if(Sw->Hold2Time >= 150)
  8900  05D0  086E               	movf	(_Sw),w
  8901  05D1  3E05               	addlw	05h
  8902  05D2  0086               	movwf	fsr1l
  8903  05D3  3001               	movlw 1	; select bank2/3
  8904  05D4  0087               	movwf fsr1h	
  8905                           	
  8906  05D5  3F40               	moviw	[0]fsr1
  8907  05D6  00AC               	movwf	(??_setSw_Main+0)+0
  8908  05D7  3F41               	moviw	[1]fsr1
  8909  05D8  00AD               	movwf	(??_setSw_Main+0)+0+1
  8910  05D9  3000               	movlw	high(096h)
  8911  05DA  022D               	subwf	1+(??_setSw_Main+0)+0,w
  8912  05DB  3096               	movlw	low(096h)
  8913  05DC  1903               	skipnz
  8914  05DD  022C               	subwf	0+(??_setSw_Main+0)+0,w
  8915  05DE  1C03               	skipc
  8916  05DF  2DE1               	goto	u9791
  8917  05E0  2DE2               	goto	u9790
  8918  05E1                     u9791:
  8919  05E1  2EAA               	goto	l16473
  8920  05E2                     u9790:
  8921                           	line	187
  8922                           	
  8923  05E2                     l25306:	
  8924                           ;Switch_B1.c: 186: {
  8925                           ;Switch_B1.c: 187: Sw->Hold2Time=0;
  8926  05E2  086E               	movf	(_Sw),w
  8927  05E3  3E05               	addlw	05h
  8928  05E4  0086               	movwf	fsr1l
  8929  05E5  3001               	movlw 1	; select bank2/3
  8930  05E6  0087               	movwf fsr1h	
  8931                           	
  8932  05E7  3000               	movlw	low(0)
  8933  05E8  3FC0               	movwi	[0]fsr1
  8934  05E9  3000               	movlw	high(0)
  8935  05EA  3FC1               	movwi	[1]fsr1
  8936                           	line	188
  8937                           ;Switch_B1.c: 188: Sw->Hold2=1;
  8938  05EB  086E               	movf	(_Sw),w
  8939  05EC  0086               	movwf	fsr1l
  8940  05ED  3001               	movlw 1	; select bank2/3
  8941  05EE  0087               	movwf fsr1h	
  8942                           	
  8943  05EF  1601               	bsf	indf1,4
  8944                           	line	192
  8945                           	
  8946  05F0                     l25308:	
  8947                           ;Switch_B1.c: 192: setRF_Learn(1,1);
  8948  05F0  01A2               	clrf	(?_setRF_Learn)
  8949  05F1  1403               	bsf	status,0
  8950  05F2  0DA2               	rlf	(?_setRF_Learn),f
  8951  05F3  3001               	movlw	(01h)
  8952  05F4  31A2  2268  3185   	fcall	_setRF_Learn
  8953                           	line	194
  8954                           	
  8955  05F7                     l25310:	
  8956                           ;Switch_B1.c: 194: if(TMain->First)
  8957  05F7  087D               	movf	(_TMain),w
  8958  05F8  3E03               	addlw	03h
  8959  05F9  0086               	movwf	fsr1l
  8960  05FA  3001               	movlw 1	; select bank2/3
  8961  05FB  0087               	movwf fsr1h	
  8962                           	
  8963  05FC  1C81               	btfss	indf1,1
  8964  05FD  2DFF               	goto	u9801
  8965  05FE  2E00               	goto	u9800
  8966  05FF                     u9801:
  8967  05FF  2EAA               	goto	l16473
  8968  0600                     u9800:
  8969                           	line	196
  8970                           	
  8971  0600                     l25312:	
  8972                           ;Switch_B1.c: 195: {
  8973                           ;Switch_B1.c: 196: setBuz(2,100);
  8974  0600  3064               	movlw	low(064h)
  8975  0601  0020               	movlb 0	; select bank0
  8976  0602  00A6               	movwf	(?_setBuz)
  8977  0603  3000               	movlw	high(064h)
  8978  0604  00A7               	movwf	((?_setBuz))+1
  8979  0605  3002               	movlw	(02h)
  8980  0606  3192  22C6  3185   	fcall	_setBuz
  8981  0609  2EAA               	goto	l16473
  8982                           	line	197
  8983                           	
  8984  060A                     l16466:	
  8985  060A  2EAA               	goto	l16473
  8986                           	line	199
  8987                           	
  8988  060B                     l16465:	
  8989                           	line	200
  8990                           ;Switch_B1.c: 197: }
  8991                           ;Switch_B1.c: 199: }
  8992                           ;Switch_B1.c: 200: }
  8993  060B  2EAA               	goto	l16473
  8994                           	line	201
  8995                           	
  8996  060C                     l16464:	
  8997                           	line	203
  8998                           	
  8999  060C                     l25314:	
  9000                           ;Switch_B1.c: 201: else
  9001                           ;Switch_B1.c: 202: {
  9002                           ;Switch_B1.c: 203: if(!Sw->Hold3)
  9003  060C  0020               	movlb 0	; select bank0
  9004  060D  086E               	movf	(_Sw),w
  9005  060E  0086               	movwf	fsr1l
  9006  060F  3001               	movlw 1	; select bank2/3
  9007  0610  0087               	movwf fsr1h	
  9008                           	
  9009  0611  1A81               	btfsc	indf1,5
  9010  0612  2E14               	goto	u9811
  9011  0613  2E15               	goto	u9810
  9012  0614                     u9811:
  9013  0614  2EAA               	goto	l16473
  9014  0615                     u9810:
  9015                           	line	205
  9016                           	
  9017  0615                     l25316:	
  9018                           ;Switch_B1.c: 204: {
  9019                           ;Switch_B1.c: 205: Sw->Hold3Time++;
  9020  0615  086E               	movf	(_Sw),w
  9021  0616  3E07               	addlw	07h
  9022  0617  0086               	movwf	fsr1l
  9023  0618  3001               	movlw 1	; select bank2/3
  9024  0619  0087               	movwf fsr1h	
  9025                           	
  9026  061A  3001               	movlw	01h
  9027  061B  0781               	addwf	indf1,f
  9028  061C  3141               	addfsr	fsr1,1
  9029  061D  1803               	skipnc
  9030  061E  0A81               	incf	indf1,f
  9031                           	line	206
  9032                           	
  9033  061F                     l25318:	
  9034                           ;Switch_B1.c: 206: if(Sw->Hold3Time >= 300)
  9035  061F  086E               	movf	(_Sw),w
  9036  0620  3E07               	addlw	07h
  9037  0621  0086               	movwf	fsr1l
  9038  0622  3001               	movlw 1	; select bank2/3
  9039  0623  0087               	movwf fsr1h	
  9040                           	
  9041  0624  3F40               	moviw	[0]fsr1
  9042  0625  00AC               	movwf	(??_setSw_Main+0)+0
  9043  0626  3F41               	moviw	[1]fsr1
  9044  0627  00AD               	movwf	(??_setSw_Main+0)+0+1
  9045  0628  3001               	movlw	high(012Ch)
  9046  0629  022D               	subwf	1+(??_setSw_Main+0)+0,w
  9047  062A  302C               	movlw	low(012Ch)
  9048  062B  1903               	skipnz
  9049  062C  022C               	subwf	0+(??_setSw_Main+0)+0,w
  9050  062D  1C03               	skipc
  9051  062E  2E30               	goto	u9821
  9052  062F  2E31               	goto	u9820
  9053  0630                     u9821:
  9054  0630  2EAA               	goto	l16473
  9055  0631                     u9820:
  9056                           	line	208
  9057                           	
  9058  0631                     l25320:	
  9059                           ;Switch_B1.c: 207: {
  9060                           ;Switch_B1.c: 208: Sw->Hold3Time=0;
  9061  0631  086E               	movf	(_Sw),w
  9062  0632  3E07               	addlw	07h
  9063  0633  0086               	movwf	fsr1l
  9064  0634  3001               	movlw 1	; select bank2/3
  9065  0635  0087               	movwf fsr1h	
  9066                           	
  9067  0636  3000               	movlw	low(0)
  9068  0637  3FC0               	movwi	[0]fsr1
  9069  0638  3000               	movlw	high(0)
  9070  0639  3FC1               	movwi	[1]fsr1
  9071                           	line	209
  9072                           ;Switch_B1.c: 209: Sw->Hold3=1;
  9073  063A  086E               	movf	(_Sw),w
  9074  063B  0086               	movwf	fsr1l
  9075  063C  3001               	movlw 1	; select bank2/3
  9076  063D  0087               	movwf fsr1h	
  9077                           	
  9078  063E  1681               	bsf	indf1,5
  9079                           	line	212
  9080                           	
  9081  063F                     l25322:	
  9082                           ;Switch_B1.c: 212: setRF_Learn(1,0);
  9083  063F  01A2               	clrf	(?_setRF_Learn)
  9084  0640  3001               	movlw	(01h)
  9085  0641  31A2  2268  3185   	fcall	_setRF_Learn
  9086  0644  2EAA               	goto	l16473
  9087                           	line	215
  9088                           	
  9089  0645                     l16469:	
  9090  0645  2EAA               	goto	l16473
  9091                           	line	216
  9092                           	
  9093  0646                     l16468:	
  9094  0646  2EAA               	goto	l16473
  9095                           	line	217
  9096                           	
  9097  0647                     l16467:	
  9098  0647  2EAA               	goto	l16473
  9099                           	line	218
  9100                           	
  9101  0648                     l16463:	
  9102  0648  2EAA               	goto	l16473
  9103                           	line	219
  9104                           	
  9105  0649                     l16460:	
  9106                           	line	220
  9107                           ;Switch_B1.c: 215: }
  9108                           ;Switch_B1.c: 216: }
  9109                           ;Switch_B1.c: 217: }
  9110                           ;Switch_B1.c: 218: }
  9111                           ;Switch_B1.c: 219: }
  9112                           ;Switch_B1.c: 220: }
  9113  0649  2EAA               	goto	l16473
  9114                           	line	221
  9115                           	
  9116  064A                     l16457:	
  9117                           	line	223
  9118                           	
  9119  064A                     l25324:	
  9120                           ;Switch_B1.c: 221: else
  9121                           ;Switch_B1.c: 222: {
  9122                           ;Switch_B1.c: 223: if(Sw->Debounce)
  9123  064A  0020               	movlb 0	; select bank0
  9124  064B  086E               	movf	(_Sw),w
  9125  064C  0086               	movwf	fsr1l
  9126  064D  3001               	movlw 1	; select bank2/3
  9127  064E  0087               	movwf fsr1h	
  9128                           	
  9129  064F  1D01               	btfss	indf1,2
  9130  0650  2E52               	goto	u9831
  9131  0651  2E53               	goto	u9830
  9132  0652                     u9831:
  9133  0652  2EAA               	goto	l16473
  9134  0653                     u9830:
  9135                           	line	225
  9136                           	
  9137  0653                     l25326:	
  9138                           ;Switch_B1.c: 224: {
  9139                           ;Switch_B1.c: 225: Sw->DebounceTime++;
  9140  0653  3001               	movlw	(01h)
  9141  0654  00AC               	movwf	(??_setSw_Main+0)+0
  9142  0655  086E               	movf	(_Sw),w
  9143  0656  3E02               	addlw	02h
  9144  0657  0086               	movwf	fsr1l
  9145  0658  3001               	movlw 1	; select bank2/3
  9146  0659  0087               	movwf fsr1h	
  9147                           	
  9148  065A  082C               	movf	(??_setSw_Main+0)+0,w
  9149  065B  0781               	addwf	indf1,f
  9150                           	line	226
  9151                           	
  9152  065C                     l25328:	
  9153                           ;Switch_B1.c: 226: if(Sw->DebounceTime >= 5)
  9154  065C  086E               	movf	(_Sw),w
  9155  065D  3E02               	addlw	02h
  9156  065E  0086               	movwf	fsr1l
  9157  065F  3001               	movlw 1	; select bank2/3
  9158  0660  0087               	movwf fsr1h	
  9159                           	
  9160  0661  3005               	movlw	(05h)
  9161  0662  0201               	subwf	indf1,w
  9162  0663  1C03               	skipc
  9163  0664  2E66               	goto	u9841
  9164  0665  2E67               	goto	u9840
  9165  0666                     u9841:
  9166  0666  2EAA               	goto	l16473
  9167  0667                     u9840:
  9168                           	line	228
  9169                           	
  9170  0667                     l25330:	
  9171                           ;Switch_B1.c: 227: {
  9172                           ;Switch_B1.c: 228: Sw->DebounceTime=0;
  9173  0667  086E               	movf	(_Sw),w
  9174  0668  3E02               	addlw	02h
  9175  0669  0086               	movwf	fsr1l
  9176  066A  3001               	movlw 1	; select bank2/3
  9177  066B  0087               	movwf fsr1h	
  9178                           	
  9179  066C  0181               	clrf	indf1
  9180                           	line	229
  9181                           ;Switch_B1.c: 229: Sw->Debounce=0;
  9182  066D  086E               	movf	(_Sw),w
  9183  066E  0086               	movwf	fsr1l
  9184  066F  3001               	movlw 1	; select bank2/3
  9185  0670  0087               	movwf fsr1h	
  9186                           	
  9187  0671  1101               	bcf	indf1,2
  9188                           	line	230
  9189                           ;Switch_B1.c: 230: Sw->Hold1Time=0;
  9190  0672  086E               	movf	(_Sw),w
  9191  0673  3E03               	addlw	03h
  9192  0674  0086               	movwf	fsr1l
  9193  0675  3001               	movlw 1	; select bank2/3
  9194  0676  0087               	movwf fsr1h	
  9195                           	
  9196  0677  3000               	movlw	low(0)
  9197  0678  3FC0               	movwi	[0]fsr1
  9198  0679  3000               	movlw	high(0)
  9199  067A  3FC1               	movwi	[1]fsr1
  9200                           	line	231
  9201                           ;Switch_B1.c: 231: Sw->Hold1=0;
  9202  067B  086E               	movf	(_Sw),w
  9203  067C  0086               	movwf	fsr1l
  9204  067D  3001               	movlw 1	; select bank2/3
  9205  067E  0087               	movwf fsr1h	
  9206                           	
  9207  067F  1181               	bcf	indf1,3
  9208                           	line	232
  9209                           ;Switch_B1.c: 232: Sw->Hold2Time=0;
  9210  0680  086E               	movf	(_Sw),w
  9211  0681  3E05               	addlw	05h
  9212  0682  0086               	movwf	fsr1l
  9213  0683  3001               	movlw 1	; select bank2/3
  9214  0684  0087               	movwf fsr1h	
  9215                           	
  9216  0685  3000               	movlw	low(0)
  9217  0686  3FC0               	movwi	[0]fsr1
  9218  0687  3000               	movlw	high(0)
  9219  0688  3FC1               	movwi	[1]fsr1
  9220                           	line	233
  9221                           ;Switch_B1.c: 233: Sw->Hold2=0;
  9222  0689  086E               	movf	(_Sw),w
  9223  068A  0086               	movwf	fsr1l
  9224  068B  3001               	movlw 1	; select bank2/3
  9225  068C  0087               	movwf fsr1h	
  9226                           	
  9227  068D  1201               	bcf	indf1,4
  9228                           	line	234
  9229                           ;Switch_B1.c: 234: Sw->Hold3Time=0;
  9230  068E  086E               	movf	(_Sw),w
  9231  068F  3E07               	addlw	07h
  9232  0690  0086               	movwf	fsr1l
  9233  0691  3001               	movlw 1	; select bank2/3
  9234  0692  0087               	movwf fsr1h	
  9235                           	
  9236  0693  3000               	movlw	low(0)
  9237  0694  3FC0               	movwi	[0]fsr1
  9238  0695  3000               	movlw	high(0)
  9239  0696  3FC1               	movwi	[1]fsr1
  9240                           	line	235
  9241                           ;Switch_B1.c: 235: Sw->Hold3=0;
  9242  0697  086E               	movf	(_Sw),w
  9243  0698  0086               	movwf	fsr1l
  9244  0699  3001               	movlw 1	; select bank2/3
  9245  069A  0087               	movwf fsr1h	
  9246                           	
  9247  069B  1281               	bcf	indf1,5
  9248                           	line	238
  9249                           	
  9250  069C                     l25332:	
  9251                           ;Switch_B1.c: 238: Sw_DimmerOffFunc(sw);
  9252  069C  082F               	movf	(setSw_Main@sw),w
  9253  069D  3192  2246  3185   	fcall	_Sw_DimmerOffFunc
  9254                           	line	243
  9255                           	
  9256  06A0                     l25334:	
  9257                           ;Switch_B1.c: 243: setRF_Learn(1,0);
  9258  06A0  0020               	movlb 0	; select bank0
  9259  06A1  01A2               	clrf	(?_setRF_Learn)
  9260  06A2  3001               	movlw	(01h)
  9261  06A3  31A2  2268  3185   	fcall	_setRF_Learn
  9262  06A6  2EAA               	goto	l16473
  9263                           	line	245
  9264                           	
  9265  06A7                     l16472:	
  9266  06A7  2EAA               	goto	l16473
  9267                           	line	246
  9268                           	
  9269  06A8                     l16471:	
  9270  06A8  2EAA               	goto	l16473
  9271                           	line	247
  9272                           	
  9273  06A9                     l16470:	
  9274  06A9  2EAA               	goto	l16473
  9275                           	line	248
  9276                           	
  9277  06AA                     l16454:	
  9278                           	line	249
  9279                           	
  9280  06AA                     l16473:	
  9281  06AA  0008               	return
  9282                           	opt stack 0
  9283                           GLOBAL	__end_of_setSw_Main
  9284  06AB                     	__end_of_setSw_Main:
  9285 ;; =============== function _setSw_Main ends ============
  9286                           
  9287                           	signat	_setSw_Main,4216
  9288                           	global	_Flash_Memory_Modify
  9289                           psect	text4102,local,class=CODE,delta=2
  9290                           global __ptext4102
  9291  1054                     __ptext4102:
  9292                           
  9293 ;; *************** function _Flash_Memory_Modify *****************
  9294 ;; Defined at:
  9295 ;;		line 550 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_16f1518_B1.c"
  9296 ;; Parameters:    Size  Location     Type
  9297 ;;		None
  9298 ;; Auto vars:     Size  Location     Type
  9299 ;;  i               1    6[BANK0 ] unsigned char 
  9300 ;; Return value:  Size  Location     Type
  9301 ;;		None               void
  9302 ;; Registers used:
  9303 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9304 ;; Tracked objects:
  9305 ;;		On entry : 0/0
  9306 ;;		On exit  : 0/0
  9307 ;;		Unchanged: 0/0
  9308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  9309 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  9310 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  9311 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  9312 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
  9313 ;;Total ram usage:        3 bytes
  9314 ;; Hardware stack levels used:    1
  9315 ;; Hardware stack levels required when called:    6
  9316 ;; This function calls:
  9317 ;;		_Flash_Memory_Read
  9318 ;;		_Flash_Memory_Erasing
  9319 ;;		_Flash_Memory_Write
  9320 ;; This function is called by:
  9321 ;;		_Flash_Memory_Main
  9322 ;; This function uses a non-reentrant model
  9323 ;;
  9324                           psect	text4102
  9325                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_16f1518_B1.c"
  9326                           	line	550
  9327                           	global	__size_of_Flash_Memory_Modify
  9328  007A                     	__size_of_Flash_Memory_Modify	equ	__end_of_Flash_Memory_Modify-_Flash_Memory_Modify
  9329                           	
  9330  1054                     _Flash_Memory_Modify:	
  9331                           	opt	stack 8
  9332                           ; Regs used in _Flash_Memory_Modify: [wreg+fsr1l-status,0+pclath+cstack]
  9333                           	line	552
  9334                           	
  9335  1054                     l25238:	
  9336                           ;MCU_16f1518_B1.c: 551: char i;
  9337                           ;MCU_16f1518_B1.c: 552: for(i=0;i<32;i++)
  9338  1054  0020               	movlb 0	; select bank0
  9339  1055  01A6               	clrf	(Flash_Memory_Modify@i)
  9340                           	
  9341  1056                     l25240:	
  9342  1056  3020               	movlw	(020h)
  9343  1057  0226               	subwf	(Flash_Memory_Modify@i),w
  9344  1058  1C03               	skipc
  9345  1059  285B               	goto	u9651
  9346  105A  285C               	goto	u9650
  9347  105B                     u9651:
  9348  105B  285E               	goto	l25244
  9349  105C                     u9650:
  9350  105C  287A               	goto	l25250
  9351                           	
  9352  105D                     l25242:	
  9353  105D  287A               	goto	l25250
  9354                           	line	553
  9355                           	
  9356  105E                     l9417:	
  9357                           	line	554
  9358                           	
  9359  105E                     l25244:	
  9360                           ;MCU_16f1518_B1.c: 553: {
  9361                           ;MCU_16f1518_B1.c: 554: Memory->Data[i]=Flash_Memory_Read(i);
  9362  105E  0826               	movf	(Flash_Memory_Modify@i),w
  9363  105F  31A3  23C8  3190   	fcall	_Flash_Memory_Read
  9364  1062  0020               	movlb 0	; select bank0
  9365  1063  00A4               	movwf	(??_Flash_Memory_Modify+0)+0
  9366  1064  0826               	movf	(Flash_Memory_Modify@i),w
  9367  1065  0021               	movlb 1	; select bank1
  9368  1066  076A               	addwf	(_Memory)^080h,w
  9369  1067  0020               	movlb 0	; select bank0
  9370  1068  00A5               	movwf	(??_Flash_Memory_Modify+1)+0
  9371  1069  0825               	movf	0+(??_Flash_Memory_Modify+1)+0,w
  9372  106A  0086               	movwf	fsr1l
  9373  106B  3001               	movlw 1	; select bank2/3
  9374  106C  0087               	movwf fsr1h	
  9375                           	
  9376  106D  0824               	movf	(??_Flash_Memory_Modify+0)+0,w
  9377  106E  0081               	movwf	indf1
  9378                           	line	552
  9379                           	
  9380  106F                     l25246:	
  9381  106F  3001               	movlw	(01h)
  9382  1070  00A4               	movwf	(??_Flash_Memory_Modify+0)+0
  9383  1071  0824               	movf	(??_Flash_Memory_Modify+0)+0,w
  9384  1072  07A6               	addwf	(Flash_Memory_Modify@i),f
  9385                           	
  9386  1073                     l25248:	
  9387  1073  3020               	movlw	(020h)
  9388  1074  0226               	subwf	(Flash_Memory_Modify@i),w
  9389  1075  1C03               	skipc
  9390  1076  2878               	goto	u9661
  9391  1077  2879               	goto	u9660
  9392  1078                     u9661:
  9393  1078  285E               	goto	l25244
  9394  1079                     u9660:
  9395  1079  287A               	goto	l25250
  9396                           	
  9397  107A                     l9418:	
  9398                           	line	556
  9399                           	
  9400  107A                     l25250:	
  9401                           ;MCU_16f1518_B1.c: 555: }
  9402                           ;MCU_16f1518_B1.c: 556: Memory->Data[0]=Product->Data[12];
  9403  107A  086F               	movf	(_Product),w
  9404  107B  3E0C               	addlw	0Ch
  9405  107C  0086               	movwf	fsr1l
  9406  107D  3001               	movlw 1	; select bank2/3
  9407  107E  0087               	movwf fsr1h	
  9408                           	
  9409  107F  0801               	movf	indf1,w
  9410  1080  00A4               	movwf	(??_Flash_Memory_Modify+0)+0
  9411  1081  0021               	movlb 1	; select bank1
  9412  1082  086A               	movf	(_Memory)^080h,w
  9413  1083  0086               	movwf	fsr1l
  9414  1084  3001               	movlw 1	; select bank2/3
  9415  1085  0087               	movwf fsr1h	
  9416                           	
  9417  1086  0020               	movlb 0	; select bank0
  9418  1087  0824               	movf	(??_Flash_Memory_Modify+0)+0,w
  9419  1088  0081               	movwf	indf1
  9420                           	line	557
  9421                           ;MCU_16f1518_B1.c: 557: Memory->Data[1]=Product->Data[13];
  9422  1089  086F               	movf	(_Product),w
  9423  108A  3E0D               	addlw	0Dh
  9424  108B  0086               	movwf	fsr1l
  9425  108C  3001               	movlw 1	; select bank2/3
  9426  108D  0087               	movwf fsr1h	
  9427                           	
  9428  108E  0801               	movf	indf1,w
  9429  108F  00A4               	movwf	(??_Flash_Memory_Modify+0)+0
  9430  1090  0021               	movlb 1	; select bank1
  9431  1091  086A               	movf	(_Memory)^080h,w
  9432  1092  3E01               	addlw	01h
  9433  1093  0086               	movwf	fsr1l
  9434  1094  3001               	movlw 1	; select bank2/3
  9435  1095  0087               	movwf fsr1h	
  9436                           	
  9437  1096  0020               	movlb 0	; select bank0
  9438  1097  0824               	movf	(??_Flash_Memory_Modify+0)+0,w
  9439  1098  0081               	movwf	indf1
  9440                           	line	558
  9441                           ;MCU_16f1518_B1.c: 558: Memory->Data[2]=Product->Data[14];
  9442  1099  086F               	movf	(_Product),w
  9443  109A  3E0E               	addlw	0Eh
  9444  109B  0086               	movwf	fsr1l
  9445  109C  3001               	movlw 1	; select bank2/3
  9446  109D  0087               	movwf fsr1h	
  9447                           	
  9448  109E  0801               	movf	indf1,w
  9449  109F  00A4               	movwf	(??_Flash_Memory_Modify+0)+0
  9450  10A0  0021               	movlb 1	; select bank1
  9451  10A1  086A               	movf	(_Memory)^080h,w
  9452  10A2  3E02               	addlw	02h
  9453  10A3  0086               	movwf	fsr1l
  9454  10A4  3001               	movlw 1	; select bank2/3
  9455  10A5  0087               	movwf fsr1h	
  9456                           	
  9457  10A6  0020               	movlb 0	; select bank0
  9458  10A7  0824               	movf	(??_Flash_Memory_Modify+0)+0,w
  9459  10A8  0081               	movwf	indf1
  9460                           	line	564
  9461                           ;MCU_16f1518_B1.c: 564: if(Memory->LoopSave)
  9462  10A9  0021               	movlb 1	; select bank1
  9463  10AA  086A               	movf	(_Memory)^080h,w
  9464  10AB  3E22               	addlw	022h
  9465  10AC  0086               	movwf	fsr1l
  9466  10AD  3001               	movlw 1	; select bank2/3
  9467  10AE  0087               	movwf fsr1h	
  9468                           	
  9469  10AF  1D01               	btfss	indf1,2
  9470  10B0  28B2               	goto	u9671
  9471  10B1  28B3               	goto	u9670
  9472  10B2                     u9671:
  9473  10B2  28C5               	goto	l25254
  9474  10B3                     u9670:
  9475                           	line	566
  9476                           	
  9477  10B3                     l25252:	
  9478                           ;MCU_16f1518_B1.c: 565: {
  9479                           ;MCU_16f1518_B1.c: 566: Memory->LoopSave=0;
  9480  10B3  086A               	movf	(_Memory)^080h,w
  9481  10B4  3E22               	addlw	022h
  9482  10B5  0086               	movwf	fsr1l
  9483  10B6  3001               	movlw 1	; select bank2/3
  9484  10B7  0087               	movwf fsr1h	
  9485                           	
  9486  10B8  1101               	bcf	indf1,2
  9487                           	line	567
  9488                           ;MCU_16f1518_B1.c: 567: TMain->FirstOpen=0;
  9489  10B9  087D               	movf	(_TMain),w
  9490  10BA  0086               	movwf	fsr1l
  9491  10BB  3001               	movlw 1	; select bank2/3
  9492  10BC  0087               	movwf fsr1h	
  9493                           	
  9494  10BD  1281               	bcf	indf1,5
  9495                           	line	568
  9496                           ;MCU_16f1518_B1.c: 568: TMain->First=0;
  9497  10BE  087D               	movf	(_TMain),w
  9498  10BF  3E03               	addlw	03h
  9499  10C0  0086               	movwf	fsr1l
  9500  10C1  3001               	movlw 1	; select bank2/3
  9501  10C2  0087               	movwf fsr1h	
  9502                           	
  9503  10C3  1081               	bcf	indf1,1
  9504  10C4  28C5               	goto	l25254
  9505                           	line	570
  9506                           	
  9507  10C5                     l9419:	
  9508                           	line	571
  9509                           	
  9510  10C5                     l25254:	
  9511                           ;MCU_16f1518_B1.c: 570: }
  9512                           ;MCU_16f1518_B1.c: 571: GIE=0;
  9513  10C5  138B               	bcf	(95/8),(95)&7
  9514                           	line	572
  9515                           	
  9516  10C6                     l25256:	
  9517                           ;MCU_16f1518_B1.c: 572: Flash_Memory_Erasing();
  9518  10C6  31A1  21CC  3190   	fcall	_Flash_Memory_Erasing
  9519                           	line	573
  9520                           	
  9521  10C9                     l25258:	
  9522                           ;MCU_16f1518_B1.c: 573: Flash_Memory_Write();
  9523  10C9  31A7  2756  3190   	fcall	_Flash_Memory_Write
  9524                           	line	574
  9525                           	
  9526  10CC                     l25260:	
  9527                           ;MCU_16f1518_B1.c: 574: GIE=1;
  9528  10CC  178B               	bsf	(95/8),(95)&7
  9529                           	line	575
  9530                           	
  9531  10CD                     l9420:	
  9532  10CD  0008               	return
  9533                           	opt stack 0
  9534                           GLOBAL	__end_of_Flash_Memory_Modify
  9535  10CE                     	__end_of_Flash_Memory_Modify:
  9536 ;; =============== function _Flash_Memory_Modify ends ============
  9537                           
  9538                           	signat	_Flash_Memory_Modify,88
  9539                           	global	_Switch_Initialization
  9540                           psect	text4103,local,class=CODE,delta=2
  9541                           global __ptext4103
  9542  2123                     __ptext4103:
  9543                           
  9544 ;; *************** function _Switch_Initialization *****************
  9545 ;; Defined at:
  9546 ;;		line 39 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Switch_B1.c"
  9547 ;; Parameters:    Size  Location     Type
  9548 ;;		None
  9549 ;; Auto vars:     Size  Location     Type
  9550 ;;		None
  9551 ;; Return value:  Size  Location     Type
  9552 ;;		None               void
  9553 ;; Registers used:
  9554 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9555 ;; Tracked objects:
  9556 ;;		On entry : 0/0
  9557 ;;		On exit  : 0/0
  9558 ;;		Unchanged: 0/0
  9559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  9560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  9561 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  9562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  9563 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  9564 ;;Total ram usage:        0 bytes
  9565 ;; Hardware stack levels used:    1
  9566 ;; Hardware stack levels required when called:    7
  9567 ;; This function calls:
  9568 ;;		_TouchPower
  9569 ;;		_setSw_Initialization
  9570 ;; This function is called by:
  9571 ;;		_main
  9572 ;; This function uses a non-reentrant model
  9573 ;;
  9574                           psect	text4103
  9575                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Switch_B1.c"
  9576                           	line	39
  9577                           	global	__size_of_Switch_Initialization
  9578  000A                     	__size_of_Switch_Initialization	equ	__end_of_Switch_Initialization-_Switch_Initializati
                                 on
  9579                           	
  9580  2123                     _Switch_Initialization:	
  9581                           	opt	stack 8
  9582                           ; Regs used in _Switch_Initialization: [wreg+fsr1l-status,0+pclath+cstack]
  9583                           	line	40
  9584                           	
  9585  2123                     l25232:	
  9586                           ;Switch_B1.c: 40: TouchPower();
  9587  2123  31A0  20FD  31A1   	fcall	_TouchPower
  9588                           	line	42
  9589                           	
  9590  2126                     l25234:	
  9591                           ;Switch_B1.c: 42: WPUB1=0;
  9592  2126  0024               	movlb 4	; select bank4
  9593  2127  108D               	bcf	(4201/8)^0200h,(4201)&7
  9594                           	line	51
  9595                           	
  9596  2128                     l25236:	
  9597                           ;Switch_B1.c: 51: setSw_Initialization(1);
  9598  2128  3001               	movlw	(01h)
  9599  2129  31A3  2343  31A1   	fcall	_setSw_Initialization
  9600                           	line	60
  9601                           	
  9602  212C                     l16439:	
  9603  212C  0008               	return
  9604                           	opt stack 0
  9605                           GLOBAL	__end_of_Switch_Initialization
  9606  212D                     	__end_of_Switch_Initialization:
  9607 ;; =============== function _Switch_Initialization ends ============
  9608                           
  9609                           	signat	_Switch_Initialization,88
  9610                           	global	_Flash_Memory_Initialization
  9611                           psect	text4104,local,class=CODE,delta=2
  9612                           global __ptext4104
  9613  0C5C                     __ptext4104:
  9614                           
  9615 ;; *************** function _Flash_Memory_Initialization *****************
  9616 ;; Defined at:
  9617 ;;		line 430 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_16f1518_B1.c"
  9618 ;; Parameters:    Size  Location     Type
  9619 ;;		None
  9620 ;; Auto vars:     Size  Location     Type
  9621 ;;  i               1   49[BANK0 ] unsigned char 
  9622 ;; Return value:  Size  Location     Type
  9623 ;;		None               void
  9624 ;; Registers used:
  9625 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9626 ;; Tracked objects:
  9627 ;;		On entry : 0/0
  9628 ;;		On exit  : 0/0
  9629 ;;		Unchanged: 0/0
  9630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  9631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  9632 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  9633 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  9634 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  9635 ;;Total ram usage:        2 bytes
  9636 ;; Hardware stack levels used:    1
  9637 ;; Hardware stack levels required when called:    7
  9638 ;; This function calls:
  9639 ;;		_Flash_Memory_Read
  9640 ;;		_setPercentValue
  9641 ;;		_Flash_Memory_Write
  9642 ;; This function is called by:
  9643 ;;		_main
  9644 ;; This function uses a non-reentrant model
  9645 ;;
  9646                           psect	text4104
  9647                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_16f1518_B1.c"
  9648                           	line	430
  9649                           	global	__size_of_Flash_Memory_Initialization
  9650  0102                     	__size_of_Flash_Memory_Initialization	equ	__end_of_Flash_Memory_Initialization-_Flash_M
                                 emory_Initialization
  9651                           	
  9652  0C5C                     _Flash_Memory_Initialization:	
  9653                           	opt	stack 8
  9654                           ; Regs used in _Flash_Memory_Initialization: [wreg+fsr1l-status,0+pclath+cstack]
  9655                           	line	432
  9656                           	
  9657  0C5C                     l25180:	
  9658                           ;MCU_16f1518_B1.c: 431: char i;
  9659                           ;MCU_16f1518_B1.c: 432: if(Flash_Memory_Read(31) == 0xaa)
  9660  0C5C  301F               	movlw	(01Fh)
  9661  0C5D  31A3  23C8  318C   	fcall	_Flash_Memory_Read
  9662  0C60  3AAA               	xorlw	0AAh&0ffh
  9663  0C61  1D03               	skipz
  9664  0C62  2C64               	goto	u9611
  9665  0C63  2C65               	goto	u9610
  9666  0C64                     u9611:
  9667  0C64  2CDD               	goto	l25200
  9668  0C65                     u9610:
  9669                           	line	434
  9670                           	
  9671  0C65                     l25182:	
  9672                           ;MCU_16f1518_B1.c: 433: {
  9673                           ;MCU_16f1518_B1.c: 434: Product->Data[12]=Flash_Memory_Read(0);
  9674  0C65  3000               	movlw	(0)
  9675  0C66  31A3  23C8  318C   	fcall	_Flash_Memory_Read
  9676  0C69  0020               	movlb 0	; select bank0
  9677  0C6A  00D0               	movwf	(??_Flash_Memory_Initialization+0)+0
  9678  0C6B  086F               	movf	(_Product),w
  9679  0C6C  3E0C               	addlw	0Ch
  9680  0C6D  0086               	movwf	fsr1l
  9681  0C6E  3001               	movlw 1	; select bank2/3
  9682  0C6F  0087               	movwf fsr1h	
  9683                           	
  9684  0C70  0850               	movf	(??_Flash_Memory_Initialization+0)+0,w
  9685  0C71  0081               	movwf	indf1
  9686                           	line	435
  9687                           ;MCU_16f1518_B1.c: 435: Product->Data[13]=Flash_Memory_Read(1);
  9688  0C72  3001               	movlw	(01h)
  9689  0C73  31A3  23C8  318C   	fcall	_Flash_Memory_Read
  9690  0C76  0020               	movlb 0	; select bank0
  9691  0C77  00D0               	movwf	(??_Flash_Memory_Initialization+0)+0
  9692  0C78  086F               	movf	(_Product),w
  9693  0C79  3E0D               	addlw	0Dh
  9694  0C7A  0086               	movwf	fsr1l
  9695  0C7B  3001               	movlw 1	; select bank2/3
  9696  0C7C  0087               	movwf fsr1h	
  9697                           	
  9698  0C7D  0850               	movf	(??_Flash_Memory_Initialization+0)+0,w
  9699  0C7E  0081               	movwf	indf1
  9700                           	line	436
  9701                           ;MCU_16f1518_B1.c: 436: Product->Data[14]=Flash_Memory_Read(2);
  9702  0C7F  3002               	movlw	(02h)
  9703  0C80  31A3  23C8  318C   	fcall	_Flash_Memory_Read
  9704  0C83  0020               	movlb 0	; select bank0
  9705  0C84  00D0               	movwf	(??_Flash_Memory_Initialization+0)+0
  9706  0C85  086F               	movf	(_Product),w
  9707  0C86  3E0E               	addlw	0Eh
  9708  0C87  0086               	movwf	fsr1l
  9709  0C88  3001               	movlw 1	; select bank2/3
  9710  0C89  0087               	movwf fsr1h	
  9711                           	
  9712  0C8A  0850               	movf	(??_Flash_Memory_Initialization+0)+0,w
  9713  0C8B  0081               	movwf	indf1
  9714                           	line	442
  9715                           	
  9716  0C8C                     l25184:	
  9717                           ;MCU_16f1518_B1.c: 442: i=setPercentValue(((char)((100-55)*1.5)));
  9718  0C8C  3043               	movlw	(043h)
  9719  0C8D  319A  222C  318C   	fcall	_setPercentValue
  9720  0C90  0020               	movlb 0	; select bank0
  9721  0C91  00D0               	movwf	(??_Flash_Memory_Initialization+0)+0
  9722  0C92  0850               	movf	(??_Flash_Memory_Initialization+0)+0,w
  9723  0C93  00D1               	movwf	(Flash_Memory_Initialization@i)
  9724                           	line	443
  9725                           	
  9726  0C94                     l25186:	
  9727                           ;MCU_16f1518_B1.c: 443: Product->Data[21]=i;
  9728  0C94  0851               	movf	(Flash_Memory_Initialization@i),w
  9729  0C95  00D0               	movwf	(??_Flash_Memory_Initialization+0)+0
  9730  0C96  086F               	movf	(_Product),w
  9731  0C97  3E15               	addlw	015h
  9732  0C98  0086               	movwf	fsr1l
  9733  0C99  3001               	movlw 1	; select bank2/3
  9734  0C9A  0087               	movwf fsr1h	
  9735                           	
  9736  0C9B  0850               	movf	(??_Flash_Memory_Initialization+0)+0,w
  9737  0C9C  0081               	movwf	indf1
  9738                           	line	444
  9739                           	
  9740  0C9D                     l25188:	
  9741                           ;MCU_16f1518_B1.c: 444: Product->Data[22]=i;
  9742  0C9D  0851               	movf	(Flash_Memory_Initialization@i),w
  9743  0C9E  00D0               	movwf	(??_Flash_Memory_Initialization+0)+0
  9744  0C9F  086F               	movf	(_Product),w
  9745  0CA0  3E16               	addlw	016h
  9746  0CA1  0086               	movwf	fsr1l
  9747  0CA2  3001               	movlw 1	; select bank2/3
  9748  0CA3  0087               	movwf fsr1h	
  9749                           	
  9750  0CA4  0850               	movf	(??_Flash_Memory_Initialization+0)+0,w
  9751  0CA5  0081               	movwf	indf1
  9752                           	line	445
  9753                           	
  9754  0CA6                     l25190:	
  9755                           ;MCU_16f1518_B1.c: 445: Product->Data[23]=i;
  9756  0CA6  0851               	movf	(Flash_Memory_Initialization@i),w
  9757  0CA7  00D0               	movwf	(??_Flash_Memory_Initialization+0)+0
  9758  0CA8  086F               	movf	(_Product),w
  9759  0CA9  3E17               	addlw	017h
  9760  0CAA  0086               	movwf	fsr1l
  9761  0CAB  3001               	movlw 1	; select bank2/3
  9762  0CAC  0087               	movwf fsr1h	
  9763                           	
  9764  0CAD  0850               	movf	(??_Flash_Memory_Initialization+0)+0,w
  9765  0CAE  0081               	movwf	indf1
  9766                           	line	447
  9767                           	
  9768  0CAF                     l25192:	
  9769                           ;MCU_16f1518_B1.c: 447: if(Product->Data[12]==0xff && Product->Data[13]==0xff && Product
                                 ->Data[14]==0xff)
  9770  0CAF  086F               	movf	(_Product),w
  9771  0CB0  3E0C               	addlw	0Ch
  9772  0CB1  0086               	movwf	fsr1l
  9773  0CB2  3001               	movlw 1	; select bank2/3
  9774  0CB3  0087               	movwf fsr1h	
  9775                           	
  9776  0CB4  0801               	movf	indf1,w
  9777  0CB5  3AFF               	xorlw	0FFh&0ffh
  9778  0CB6  1D03               	skipz
  9779  0CB7  2CB9               	goto	u9621
  9780  0CB8  2CBA               	goto	u9620
  9781  0CB9                     u9621:
  9782  0CB9  2D5D               	goto	l9393
  9783  0CBA                     u9620:
  9784                           	
  9785  0CBA                     l25194:	
  9786  0CBA  086F               	movf	(_Product),w
  9787  0CBB  3E0D               	addlw	0Dh
  9788  0CBC  0086               	movwf	fsr1l
  9789  0CBD  3001               	movlw 1	; select bank2/3
  9790  0CBE  0087               	movwf fsr1h	
  9791                           	
  9792  0CBF  0801               	movf	indf1,w
  9793  0CC0  3AFF               	xorlw	0FFh&0ffh
  9794  0CC1  1D03               	skipz
  9795  0CC2  2CC4               	goto	u9631
  9796  0CC3  2CC5               	goto	u9630
  9797  0CC4                     u9631:
  9798  0CC4  2D5D               	goto	l9393
  9799  0CC5                     u9630:
  9800                           	
  9801  0CC5                     l25196:	
  9802  0CC5  086F               	movf	(_Product),w
  9803  0CC6  3E0E               	addlw	0Eh
  9804  0CC7  0086               	movwf	fsr1l
  9805  0CC8  3001               	movlw 1	; select bank2/3
  9806  0CC9  0087               	movwf fsr1h	
  9807                           	
  9808  0CCA  0801               	movf	indf1,w
  9809  0CCB  3AFF               	xorlw	0FFh&0ffh
  9810  0CCC  1D03               	skipz
  9811  0CCD  2CCF               	goto	u9641
  9812  0CCE  2CD0               	goto	u9640
  9813  0CCF                     u9641:
  9814  0CCF  2D5D               	goto	l9393
  9815  0CD0                     u9640:
  9816                           	line	449
  9817                           	
  9818  0CD0                     l25198:	
  9819                           ;MCU_16f1518_B1.c: 448: {
  9820                           ;MCU_16f1518_B1.c: 449: TMain->FirstOpen=1;
  9821  0CD0  087D               	movf	(_TMain),w
  9822  0CD1  0086               	movwf	fsr1l
  9823  0CD2  3001               	movlw 1	; select bank2/3
  9824  0CD3  0087               	movwf fsr1h	
  9825                           	
  9826  0CD4  1681               	bsf	indf1,5
  9827                           	line	450
  9828                           ;MCU_16f1518_B1.c: 450: TMain->First=1;
  9829  0CD5  087D               	movf	(_TMain),w
  9830  0CD6  3E03               	addlw	03h
  9831  0CD7  0086               	movwf	fsr1l
  9832  0CD8  3001               	movlw 1	; select bank2/3
  9833  0CD9  0087               	movwf fsr1h	
  9834                           	
  9835  0CDA  1481               	bsf	indf1,1
  9836  0CDB  2D5D               	goto	l9393
  9837                           	line	451
  9838                           	
  9839  0CDC                     l9391:	
  9840                           	line	452
  9841                           ;MCU_16f1518_B1.c: 451: }
  9842                           ;MCU_16f1518_B1.c: 452: }
  9843  0CDC  2D5D               	goto	l9393
  9844                           	line	453
  9845                           	
  9846  0CDD                     l9390:	
  9847                           	line	455
  9848                           	
  9849  0CDD                     l25200:	
  9850                           ;MCU_16f1518_B1.c: 453: else
  9851                           ;MCU_16f1518_B1.c: 454: {
  9852                           ;MCU_16f1518_B1.c: 455: i=setPercentValue(((char)((100-55)*1.5)));
  9853  0CDD  3043               	movlw	(043h)
  9854  0CDE  319A  222C  318C   	fcall	_setPercentValue
  9855  0CE1  0020               	movlb 0	; select bank0
  9856  0CE2  00D0               	movwf	(??_Flash_Memory_Initialization+0)+0
  9857  0CE3  0850               	movf	(??_Flash_Memory_Initialization+0)+0,w
  9858  0CE4  00D1               	movwf	(Flash_Memory_Initialization@i)
  9859                           	line	456
  9860                           	
  9861  0CE5                     l25202:	
  9862                           ;MCU_16f1518_B1.c: 456: Memory->Data[0]=0xff;
  9863  0CE5  30FF               	movlw	(0FFh)
  9864  0CE6  00D0               	movwf	(??_Flash_Memory_Initialization+0)+0
  9865  0CE7  0021               	movlb 1	; select bank1
  9866  0CE8  086A               	movf	(_Memory)^080h,w
  9867  0CE9  0086               	movwf	fsr1l
  9868  0CEA  3001               	movlw 1	; select bank2/3
  9869  0CEB  0087               	movwf fsr1h	
  9870                           	
  9871  0CEC  0020               	movlb 0	; select bank0
  9872  0CED  0850               	movf	(??_Flash_Memory_Initialization+0)+0,w
  9873  0CEE  0081               	movwf	indf1
  9874                           	line	457
  9875                           	
  9876  0CEF                     l25204:	
  9877                           ;MCU_16f1518_B1.c: 457: Memory->Data[1]=0xff;
  9878  0CEF  30FF               	movlw	(0FFh)
  9879  0CF0  00D0               	movwf	(??_Flash_Memory_Initialization+0)+0
  9880  0CF1  0021               	movlb 1	; select bank1
  9881  0CF2  086A               	movf	(_Memory)^080h,w
  9882  0CF3  3E01               	addlw	01h
  9883  0CF4  0086               	movwf	fsr1l
  9884  0CF5  3001               	movlw 1	; select bank2/3
  9885  0CF6  0087               	movwf fsr1h	
  9886                           	
  9887  0CF7  0020               	movlb 0	; select bank0
  9888  0CF8  0850               	movf	(??_Flash_Memory_Initialization+0)+0,w
  9889  0CF9  0081               	movwf	indf1
  9890                           	line	458
  9891                           	
  9892  0CFA                     l25206:	
  9893                           ;MCU_16f1518_B1.c: 458: Memory->Data[2]=0xff;
  9894  0CFA  30FF               	movlw	(0FFh)
  9895  0CFB  00D0               	movwf	(??_Flash_Memory_Initialization+0)+0
  9896  0CFC  0021               	movlb 1	; select bank1
  9897  0CFD  086A               	movf	(_Memory)^080h,w
  9898  0CFE  3E02               	addlw	02h
  9899  0CFF  0086               	movwf	fsr1l
  9900  0D00  3001               	movlw 1	; select bank2/3
  9901  0D01  0087               	movwf fsr1h	
  9902                           	
  9903  0D02  0020               	movlb 0	; select bank0
  9904  0D03  0850               	movf	(??_Flash_Memory_Initialization+0)+0,w
  9905  0D04  0081               	movwf	indf1
  9906                           	line	459
  9907                           	
  9908  0D05                     l25208:	
  9909                           ;MCU_16f1518_B1.c: 459: Memory->Data[3]=0xff;
  9910  0D05  30FF               	movlw	(0FFh)
  9911  0D06  00D0               	movwf	(??_Flash_Memory_Initialization+0)+0
  9912  0D07  0021               	movlb 1	; select bank1
  9913  0D08  086A               	movf	(_Memory)^080h,w
  9914  0D09  3E03               	addlw	03h
  9915  0D0A  0086               	movwf	fsr1l
  9916  0D0B  3001               	movlw 1	; select bank2/3
  9917  0D0C  0087               	movwf fsr1h	
  9918                           	
  9919  0D0D  0020               	movlb 0	; select bank0
  9920  0D0E  0850               	movf	(??_Flash_Memory_Initialization+0)+0,w
  9921  0D0F  0081               	movwf	indf1
  9922                           	line	460
  9923                           	
  9924  0D10                     l25210:	
  9925                           ;MCU_16f1518_B1.c: 460: Memory->Data[4]=0xff;
  9926  0D10  30FF               	movlw	(0FFh)
  9927  0D11  00D0               	movwf	(??_Flash_Memory_Initialization+0)+0
  9928  0D12  0021               	movlb 1	; select bank1
  9929  0D13  086A               	movf	(_Memory)^080h,w
  9930  0D14  3E04               	addlw	04h
  9931  0D15  0086               	movwf	fsr1l
  9932  0D16  3001               	movlw 1	; select bank2/3
  9933  0D17  0087               	movwf fsr1h	
  9934                           	
  9935  0D18  0020               	movlb 0	; select bank0
  9936  0D19  0850               	movf	(??_Flash_Memory_Initialization+0)+0,w
  9937  0D1A  0081               	movwf	indf1
  9938                           	line	461
  9939                           	
  9940  0D1B                     l25212:	
  9941                           ;MCU_16f1518_B1.c: 461: Memory->Data[5]=0xff;
  9942  0D1B  30FF               	movlw	(0FFh)
  9943  0D1C  00D0               	movwf	(??_Flash_Memory_Initialization+0)+0
  9944  0D1D  0021               	movlb 1	; select bank1
  9945  0D1E  086A               	movf	(_Memory)^080h,w
  9946  0D1F  3E05               	addlw	05h
  9947  0D20  0086               	movwf	fsr1l
  9948  0D21  3001               	movlw 1	; select bank2/3
  9949  0D22  0087               	movwf fsr1h	
  9950                           	
  9951  0D23  0020               	movlb 0	; select bank0
  9952  0D24  0850               	movf	(??_Flash_Memory_Initialization+0)+0,w
  9953  0D25  0081               	movwf	indf1
  9954                           	line	462
  9955                           	
  9956  0D26                     l25214:	
  9957                           ;MCU_16f1518_B1.c: 462: Memory->Data[31]=0xaa;
  9958  0D26  30AA               	movlw	(0AAh)
  9959  0D27  00D0               	movwf	(??_Flash_Memory_Initialization+0)+0
  9960  0D28  0021               	movlb 1	; select bank1
  9961  0D29  086A               	movf	(_Memory)^080h,w
  9962  0D2A  3E1F               	addlw	01Fh
  9963  0D2B  0086               	movwf	fsr1l
  9964  0D2C  3001               	movlw 1	; select bank2/3
  9965  0D2D  0087               	movwf fsr1h	
  9966                           	
  9967  0D2E  0020               	movlb 0	; select bank0
  9968  0D2F  0850               	movf	(??_Flash_Memory_Initialization+0)+0,w
  9969  0D30  0081               	movwf	indf1
  9970                           	line	463
  9971                           	
  9972  0D31                     l25216:	
  9973                           ;MCU_16f1518_B1.c: 463: Product->Data[21]=i;
  9974  0D31  0851               	movf	(Flash_Memory_Initialization@i),w
  9975  0D32  00D0               	movwf	(??_Flash_Memory_Initialization+0)+0
  9976  0D33  086F               	movf	(_Product),w
  9977  0D34  3E15               	addlw	015h
  9978  0D35  0086               	movwf	fsr1l
  9979  0D36  3001               	movlw 1	; select bank2/3
  9980  0D37  0087               	movwf fsr1h	
  9981                           	
  9982  0D38  0850               	movf	(??_Flash_Memory_Initialization+0)+0,w
  9983  0D39  0081               	movwf	indf1
  9984                           	line	464
  9985                           	
  9986  0D3A                     l25218:	
  9987                           ;MCU_16f1518_B1.c: 464: Product->Data[22]=i;
  9988  0D3A  0851               	movf	(Flash_Memory_Initialization@i),w
  9989  0D3B  00D0               	movwf	(??_Flash_Memory_Initialization+0)+0
  9990  0D3C  086F               	movf	(_Product),w
  9991  0D3D  3E16               	addlw	016h
  9992  0D3E  0086               	movwf	fsr1l
  9993  0D3F  3001               	movlw 1	; select bank2/3
  9994  0D40  0087               	movwf fsr1h	
  9995                           	
  9996  0D41  0850               	movf	(??_Flash_Memory_Initialization+0)+0,w
  9997  0D42  0081               	movwf	indf1
  9998                           	line	465
  9999                           	
 10000  0D43                     l25220:	
 10001                           ;MCU_16f1518_B1.c: 465: Product->Data[23]=i;
 10002  0D43  0851               	movf	(Flash_Memory_Initialization@i),w
 10003  0D44  00D0               	movwf	(??_Flash_Memory_Initialization+0)+0
 10004  0D45  086F               	movf	(_Product),w
 10005  0D46  3E17               	addlw	017h
 10006  0D47  0086               	movwf	fsr1l
 10007  0D48  3001               	movlw 1	; select bank2/3
 10008  0D49  0087               	movwf fsr1h	
 10009                           	
 10010  0D4A  0850               	movf	(??_Flash_Memory_Initialization+0)+0,w
 10011  0D4B  0081               	movwf	indf1
 10012                           	line	466
 10013                           	
 10014  0D4C                     l25222:	
 10015                           ;MCU_16f1518_B1.c: 466: GIE=0;
 10016  0D4C  138B               	bcf	(95/8),(95)&7
 10017                           	line	467
 10018                           	
 10019  0D4D                     l25224:	
 10020                           ;MCU_16f1518_B1.c: 467: Flash_Memory_Write();
 10021  0D4D  31A7  2756  318C   	fcall	_Flash_Memory_Write
 10022                           	line	468
 10023                           	
 10024  0D50                     l25226:	
 10025                           ;MCU_16f1518_B1.c: 468: GIE=1;
 10026  0D50  178B               	bsf	(95/8),(95)&7
 10027                           	line	469
 10028                           	
 10029  0D51                     l25228:	
 10030                           ;MCU_16f1518_B1.c: 469: TMain->FirstOpen=1;
 10031  0D51  087D               	movf	(_TMain),w
 10032  0D52  0086               	movwf	fsr1l
 10033  0D53  3001               	movlw 1	; select bank2/3
 10034  0D54  0087               	movwf fsr1h	
 10035                           	
 10036  0D55  1681               	bsf	indf1,5
 10037                           	line	470
 10038                           	
 10039  0D56                     l25230:	
 10040                           ;MCU_16f1518_B1.c: 470: TMain->First=1;
 10041  0D56  087D               	movf	(_TMain),w
 10042  0D57  3E03               	addlw	03h
 10043  0D58  0086               	movwf	fsr1l
 10044  0D59  3001               	movlw 1	; select bank2/3
 10045  0D5A  0087               	movwf fsr1h	
 10046                           	
 10047  0D5B  1481               	bsf	indf1,1
 10048  0D5C  2D5D               	goto	l9393
 10049                           	line	471
 10050                           	
 10051  0D5D                     l9392:	
 10052                           	line	472
 10053                           	
 10054  0D5D                     l9393:	
 10055  0D5D  0008               	return
 10056                           	opt stack 0
 10057                           GLOBAL	__end_of_Flash_Memory_Initialization
 10058  0D5E                     	__end_of_Flash_Memory_Initialization:
 10059 ;; =============== function _Flash_Memory_Initialization ends ============
 10060                           
 10061                           	signat	_Flash_Memory_Initialization,88
 10062                           	global	_LED_Initialization
 10063                           psect	text4105,local,class=CODE,delta=2
 10064                           global __ptext4105
 10065  21D9                     __ptext4105:
 10066                           
 10067 ;; *************** function _LED_Initialization *****************
 10068 ;; Defined at:
 10069 ;;		line 36 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\LED_B1.c"
 10070 ;; Parameters:    Size  Location     Type
 10071 ;;		None
 10072 ;; Auto vars:     Size  Location     Type
 10073 ;;		None
 10074 ;; Return value:  Size  Location     Type
 10075 ;;		None               void
 10076 ;; Registers used:
 10077 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10078 ;; Tracked objects:
 10079 ;;		On entry : 0/0
 10080 ;;		On exit  : 0/0
 10081 ;;		Unchanged: 0/0
 10082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 10083 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 10084 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 10085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 10086 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 10087 ;;Total ram usage:        0 bytes
 10088 ;; Hardware stack levels used:    1
 10089 ;; Hardware stack levels required when called:    7
 10090 ;; This function calls:
 10091 ;;		_setLED_Initialization
 10092 ;; This function is called by:
 10093 ;;		_main
 10094 ;; This function uses a non-reentrant model
 10095 ;;
 10096                           psect	text4105
 10097                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\LED_B1.c"
 10098                           	line	36
 10099                           	global	__size_of_LED_Initialization
 10100  000D                     	__size_of_LED_Initialization	equ	__end_of_LED_Initialization-_LED_Initialization
 10101                           	
 10102  21D9                     _LED_Initialization:	
 10103                           	opt	stack 8
 10104                           ; Regs used in _LED_Initialization: [wreg+fsr1l-status,0+pclath+cstack]
 10105                           	line	38
 10106                           	
 10107  21D9                     l25178:	
 10108                           ;LED_B1.c: 38: setLED_Initialization(1);
 10109  21D9  3001               	movlw	(01h)
 10110  21DA  31A3  231E  31A1   	fcall	_setLED_Initialization
 10111                           	line	41
 10112                           ;LED_B1.c: 41: setLED_Initialization(2);
 10113  21DD  3002               	movlw	(02h)
 10114  21DE  31A3  231E  31A1   	fcall	_setLED_Initialization
 10115                           	line	47
 10116                           ;LED_B1.c: 47: setLED_Initialization(99);
 10117  21E1  3063               	movlw	(063h)
 10118  21E2  31A3  231E  31A1   	fcall	_setLED_Initialization
 10119                           	line	49
 10120                           	
 10121  21E5                     l6961:	
 10122  21E5  0008               	return
 10123                           	opt stack 0
 10124                           GLOBAL	__end_of_LED_Initialization
 10125  21E6                     	__end_of_LED_Initialization:
 10126 ;; =============== function _LED_Initialization ends ============
 10127                           
 10128                           	signat	_LED_Initialization,88
 10129                           	global	_setDimmerLights_AdjRF
 10130                           psect	text4106,local,class=CODE,delta=2
 10131                           global __ptext4106
 10132  2464                     __ptext4106:
 10133                           
 10134 ;; *************** function _setDimmerLights_AdjRF *****************
 10135 ;; Defined at:
 10136 ;;		line 413 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 10137 ;; Parameters:    Size  Location     Type
 10138 ;;  lights          1    wreg     unsigned char 
 10139 ;; Auto vars:     Size  Location     Type
 10140 ;;  lights          1   64[BANK0 ] unsigned char 
 10141 ;; Return value:  Size  Location     Type
 10142 ;;		None               void
 10143 ;; Registers used:
 10144 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10145 ;; Tracked objects:
 10146 ;;		On entry : 0/0
 10147 ;;		On exit  : 0/0
 10148 ;;		Unchanged: 0/0
 10149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 10150 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 10151 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 10152 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 10153 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 10154 ;;Total ram usage:        2 bytes
 10155 ;; Hardware stack levels used:    1
 10156 ;; Hardware stack levels required when called:    7
 10157 ;; This function calls:
 10158 ;;		_DimmerLightsPointSelect
 10159 ;;		_getPercentValue
 10160 ;; This function is called by:
 10161 ;;		_setRF_DimmerValue
 10162 ;; This function uses a non-reentrant model
 10163 ;;
 10164                           psect	text4106
 10165                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 10166                           	line	413
 10167                           	global	__size_of_setDimmerLights_AdjRF
 10168  0024                     	__size_of_setDimmerLights_AdjRF	equ	__end_of_setDimmerLights_AdjRF-_setDimmerLights_Adj
                                 RF
 10169                           	
 10170  2464                     _setDimmerLights_AdjRF:	
 10171                           	opt	stack 2
 10172                           ; Regs used in _setDimmerLights_AdjRF: [wreg+fsr1l-status,0+pclath+cstack]
 10173                           ;setDimmerLights_AdjRF@lights stored from wreg
 10174  2464  0020               	movlb 0	; select bank0
 10175  2465  00E0               	movwf	(setDimmerLights_AdjRF@lights)
 10176                           	line	414
 10177                           	
 10178  2466                     l23818:	
 10179                           ;Dimmer_B1.c: 414: DimmerLightsPointSelect(lights);
 10180  2466  0860               	movf	(setDimmerLights_AdjRF@lights),w
 10181  2467  31A1  21E6  31A4   	fcall	_DimmerLightsPointSelect
 10182                           	line	415
 10183                           	
 10184  246A                     l23820:	
 10185                           ;Dimmer_B1.c: 415: DimmerLights->AdjRF=1;
 10186  246A  0020               	movlb 0	; select bank0
 10187  246B  086C               	movf	(_DimmerLights),w
 10188  246C  0086               	movwf	fsr1l
 10189  246D  3001               	movlw 1	; select bank2/3
 10190  246E  0087               	movwf fsr1h	
 10191                           	
 10192  246F  1501               	bsf	indf1,2
 10193                           	line	416
 10194                           	
 10195  2470                     l23822:	
 10196                           ;Dimmer_B1.c: 416: DimmerLights->Signal=1;
 10197  2470  086C               	movf	(_DimmerLights),w
 10198  2471  0086               	movwf	fsr1l
 10199  2472  3001               	movlw 1	; select bank2/3
 10200  2473  0087               	movwf fsr1h	
 10201                           	
 10202  2474  1481               	bsf	indf1,1
 10203                           	line	417
 10204                           	
 10205  2475                     l23824:	
 10206                           ;Dimmer_B1.c: 417: DimmerLights->MaxmumValue=getPercentValue(Product->Data[9]);
 10207  2475  086F               	movf	(_Product),w
 10208  2476  3E09               	addlw	09h
 10209  2477  0086               	movwf	fsr1l
 10210  2478  3001               	movlw 1	; select bank2/3
 10211  2479  0087               	movwf fsr1h	
 10212                           	
 10213  247A  0801               	movf	indf1,w
 10214  247B  319C  24F3  31A4   	fcall	_getPercentValue
 10215  247E  0020               	movlb 0	; select bank0
 10216  247F  00DF               	movwf	(??_setDimmerLights_AdjRF+0)+0
 10217  2480  086C               	movf	(_DimmerLights),w
 10218  2481  3E05               	addlw	05h
 10219  2482  0086               	movwf	fsr1l
 10220  2483  3001               	movlw 1	; select bank2/3
 10221  2484  0087               	movwf fsr1h	
 10222                           	
 10223  2485  085F               	movf	(??_setDimmerLights_AdjRF+0)+0,w
 10224  2486  0081               	movwf	indf1
 10225                           	line	418
 10226                           	
 10227  2487                     l5821:	
 10228  2487  0008               	return
 10229                           	opt stack 0
 10230                           GLOBAL	__end_of_setDimmerLights_AdjRF
 10231  2488                     	__end_of_setDimmerLights_AdjRF:
 10232 ;; =============== function _setDimmerLights_AdjRF ends ============
 10233                           
 10234                           	signat	_setDimmerLights_AdjRF,4216
 10235                           	global	_DimmerLights_Exceptions
 10236                           psect	text4107,local,class=CODE,delta=2
 10237                           global __ptext4107
 10238  1DB2                     __ptext4107:
 10239                           
 10240 ;; *************** function _DimmerLights_Exceptions *****************
 10241 ;; Defined at:
 10242 ;;		line 238 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 10243 ;; Parameters:    Size  Location     Type
 10244 ;;  status          1    wreg     unsigned char 
 10245 ;; Auto vars:     Size  Location     Type
 10246 ;;  status          1   10[BANK0 ] unsigned char 
 10247 ;; Return value:  Size  Location     Type
 10248 ;;		None               void
 10249 ;; Registers used:
 10250 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10251 ;; Tracked objects:
 10252 ;;		On entry : 0/0
 10253 ;;		On exit  : 0/0
 10254 ;;		Unchanged: 0/0
 10255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 10256 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 10257 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 10258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 10259 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 10260 ;;Total ram usage:        1 bytes
 10261 ;; Hardware stack levels used:    1
 10262 ;; Hardware stack levels required when called:    7
 10263 ;; This function calls:
 10264 ;;		_getDimmerLights_StatusFlag
 10265 ;;		_setBuz
 10266 ;;		_setDimmerLights_ERROR
 10267 ;;		_setDimmerLights_TriggerERROR
 10268 ;; This function is called by:
 10269 ;;		_setLoad_Exceptions
 10270 ;;		_setOverTemp_Exceptions
 10271 ;;		_setPowerFault_Exceptions
 10272 ;; This function uses a non-reentrant model
 10273 ;;
 10274                           psect	text4107
 10275                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 10276                           	line	238
 10277                           	global	__size_of_DimmerLights_Exceptions
 10278  0070                     	__size_of_DimmerLights_Exceptions	equ	__end_of_DimmerLights_Exceptions-_DimmerLights_Ex
                                 ceptions
 10279                           	
 10280  1DB2                     _DimmerLights_Exceptions:	
 10281                           	opt	stack 5
 10282                           ; Regs used in _DimmerLights_Exceptions: [wreg+fsr1l-status,0+pclath+cstack]
 10283                           ;DimmerLights_Exceptions@status stored from wreg
 10284  1DB2  0020               	movlb 0	; select bank0
 10285  1DB3  00AA               	movwf	(DimmerLights_Exceptions@status)
 10286                           	line	239
 10287                           	
 10288  1DB4                     l25160:	
 10289                           ;Dimmer_B1.c: 239: if(status == 1)
 10290  1DB4  082A               	movf	(DimmerLights_Exceptions@status),w
 10291  1DB5  3A01               	xorlw	01h&0ffh
 10292  1DB6  1D03               	skipz
 10293  1DB7  2DB9               	goto	u9561
 10294  1DB8  2DBA               	goto	u9560
 10295  1DB9                     u9561:
 10296  1DB9  2DD0               	goto	l25166
 10297  1DBA                     u9560:
 10298                           	line	241
 10299                           	
 10300  1DBA                     l25162:	
 10301                           ;Dimmer_B1.c: 240: {
 10302                           ;Dimmer_B1.c: 241: if(getDimmerLights_StatusFlag())
 10303  1DBA  31A2  223B  319D   	fcall	_getDimmerLights_StatusFlag
 10304  1DBD  3A00               	xorlw	0&0ffh
 10305  1DBE  1903               	skipnz
 10306  1DBF  2DC1               	goto	u9571
 10307  1DC0  2DC2               	goto	u9570
 10308  1DC1                     u9571:
 10309  1DC1  2DCB               	goto	l5789
 10310  1DC2                     u9570:
 10311                           	line	243
 10312                           	
 10313  1DC2                     l25164:	
 10314                           ;Dimmer_B1.c: 242: {
 10315                           ;Dimmer_B1.c: 243: setBuz(10,300);
 10316  1DC2  302C               	movlw	low(012Ch)
 10317  1DC3  0020               	movlb 0	; select bank0
 10318  1DC4  00A6               	movwf	(?_setBuz)
 10319  1DC5  3001               	movlw	high(012Ch)
 10320  1DC6  00A7               	movwf	((?_setBuz))+1
 10321  1DC7  300A               	movlw	(0Ah)
 10322  1DC8  3192  22C6  319D   	fcall	_setBuz
 10323                           	line	244
 10324                           	
 10325  1DCB                     l5789:	
 10326                           	line	247
 10327                           ;Dimmer_B1.c: 244: }
 10328                           ;Dimmer_B1.c: 247: setDimmerLights_ERROR(1);
 10329  1DCB  3001               	movlw	(01h)
 10330  1DCC  319C  2496  319D   	fcall	_setDimmerLights_ERROR
 10331                           	line	255
 10332                           ;Dimmer_B1.c: 255: }
 10333  1DCF  2DF6               	goto	l5790
 10334                           	line	256
 10335                           	
 10336  1DD0                     l5788:	
 10337                           	
 10338  1DD0                     l25166:	
 10339                           ;Dimmer_B1.c: 256: else if(status == 2)
 10340  1DD0  0020               	movlb 0	; select bank0
 10341  1DD1  082A               	movf	(DimmerLights_Exceptions@status),w
 10342  1DD2  3A02               	xorlw	02h&0ffh
 10343  1DD3  1D03               	skipz
 10344  1DD4  2DD6               	goto	u9581
 10345  1DD5  2DD7               	goto	u9580
 10346  1DD6                     u9581:
 10347  1DD6  2DE9               	goto	l25170
 10348  1DD7                     u9580:
 10349                           	line	258
 10350                           	
 10351  1DD7                     l25168:	
 10352                           ;Dimmer_B1.c: 257: {
 10353                           ;Dimmer_B1.c: 258: setBuz(5,300);
 10354  1DD7  302C               	movlw	low(012Ch)
 10355  1DD8  00A6               	movwf	(?_setBuz)
 10356  1DD9  3001               	movlw	high(012Ch)
 10357  1DDA  00A7               	movwf	((?_setBuz))+1
 10358  1DDB  3005               	movlw	(05h)
 10359  1DDC  3192  22C6  319D   	fcall	_setBuz
 10360                           	line	259
 10361                           ;Dimmer_B1.c: 259: setDimmerLights_ERROR(Dimmer->Load);
 10362  1DDF  0021               	movlb 1	; select bank1
 10363  1DE0  0839               	movf	(_Dimmer)^080h,w
 10364  1DE1  3E01               	addlw	01h
 10365  1DE2  0086               	movwf	fsr1l
 10366  1DE3  0187               	clrf fsr1h	
 10367                           	
 10368  1DE4  0801               	movf	indf1,w
 10369  1DE5  319C  2496  319D   	fcall	_setDimmerLights_ERROR
 10370                           	line	260
 10371                           ;Dimmer_B1.c: 260: }
 10372  1DE8  2DF6               	goto	l5790
 10373                           	line	261
 10374                           	
 10375  1DE9                     l5791:	
 10376                           	
 10377  1DE9                     l25170:	
 10378                           ;Dimmer_B1.c: 261: else if(status == 3)
 10379  1DE9  0020               	movlb 0	; select bank0
 10380  1DEA  082A               	movf	(DimmerLights_Exceptions@status),w
 10381  1DEB  3A03               	xorlw	03h&0ffh
 10382  1DEC  1D03               	skipz
 10383  1DED  2DEF               	goto	u9591
 10384  1DEE  2DF0               	goto	u9590
 10385  1DEF                     u9591:
 10386  1DEF  2DF6               	goto	l5790
 10387  1DF0                     u9590:
 10388                           	line	264
 10389                           	
 10390  1DF0                     l25172:	
 10391                           ;Dimmer_B1.c: 262: {
 10392                           ;Dimmer_B1.c: 264: setDimmerLights_ERROR(1);
 10393  1DF0  3001               	movlw	(01h)
 10394  1DF1  319C  2496  319D   	fcall	_setDimmerLights_ERROR
 10395  1DF4  2DF6               	goto	l5790
 10396                           	line	272
 10397                           	
 10398  1DF5                     l5793:	
 10399  1DF5  2DF6               	goto	l5790
 10400                           	line	275
 10401                           	
 10402  1DF6                     l5792:	
 10403                           	
 10404  1DF6                     l5790:	
 10405                           ;Dimmer_B1.c: 272: }
 10406                           ;Dimmer_B1.c: 275: setDimmerLights_TriggerERROR(1,0);
 10407  1DF6  0020               	movlb 0	; select bank0
 10408  1DF7  01A2               	clrf	(?_setDimmerLights_TriggerERROR)
 10409  1DF8  3001               	movlw	(01h)
 10410  1DF9  31A5  2553  319D   	fcall	_setDimmerLights_TriggerERROR
 10411                           	line	284
 10412                           	
 10413  1DFC                     l25174:	
 10414                           ;Dimmer_B1.c: 284: if(TMain->SelfTest == 0)
 10415  1DFC  087D               	movf	(_TMain),w
 10416  1DFD  3E03               	addlw	03h
 10417  1DFE  0086               	movwf	fsr1l
 10418  1DFF  3001               	movlw 1	; select bank2/3
 10419  1E00  0087               	movwf fsr1h	
 10420                           	
 10421  1E01  1801               	btfsc	indf1,0
 10422  1E02  2E04               	goto	u9601
 10423  1E03  2E05               	goto	u9600
 10424  1E04                     u9601:
 10425  1E04  2E21               	goto	l5795
 10426  1E05                     u9600:
 10427                           	line	286
 10428                           	
 10429  1E05                     l25176:	
 10430                           ;Dimmer_B1.c: 285: {
 10431                           ;Dimmer_B1.c: 286: TMain->i=0;
 10432  1E05  087D               	movf	(_TMain),w
 10433  1E06  3E0E               	addlw	0Eh
 10434  1E07  0086               	movwf	fsr1l
 10435  1E08  3001               	movlw 1	; select bank2/3
 10436  1E09  0087               	movwf fsr1h	
 10437                           	
 10438  1E0A  1001               	bcf	indf1,0
 10439                           	line	287
 10440                           ;Dimmer_B1.c: 287: TMain->j=0;
 10441  1E0B  087D               	movf	(_TMain),w
 10442  1E0C  3E0E               	addlw	0Eh
 10443  1E0D  0086               	movwf	fsr1l
 10444  1E0E  3001               	movlw 1	; select bank2/3
 10445  1E0F  0087               	movwf fsr1h	
 10446                           	
 10447  1E10  1081               	bcf	indf1,1
 10448                           	line	288
 10449                           ;Dimmer_B1.c: 288: TMain->k=1;
 10450  1E11  087D               	movf	(_TMain),w
 10451  1E12  3E0E               	addlw	0Eh
 10452  1E13  0086               	movwf	fsr1l
 10453  1E14  3001               	movlw 1	; select bank2/3
 10454  1E15  0087               	movwf fsr1h	
 10455                           	
 10456  1E16  1501               	bsf	indf1,2
 10457                           	line	289
 10458                           ;Dimmer_B1.c: 289: TMain->Count2=0;
 10459  1E17  087D               	movf	(_TMain),w
 10460  1E18  3E08               	addlw	08h
 10461  1E19  0086               	movwf	fsr1l
 10462  1E1A  3001               	movlw 1	; select bank2/3
 10463  1E1B  0087               	movwf fsr1h	
 10464                           	
 10465  1E1C  3000               	movlw	low(0)
 10466  1E1D  3FC0               	movwi	[0]fsr1
 10467  1E1E  3000               	movlw	high(0)
 10468  1E1F  3FC1               	movwi	[1]fsr1
 10469  1E20  2E21               	goto	l5795
 10470                           	line	290
 10471                           	
 10472  1E21                     l5794:	
 10473                           	line	291
 10474                           	
 10475  1E21                     l5795:	
 10476  1E21  0008               	return
 10477                           	opt stack 0
 10478                           GLOBAL	__end_of_DimmerLights_Exceptions
 10479  1E22                     	__end_of_DimmerLights_Exceptions:
 10480 ;; =============== function _DimmerLights_Exceptions ends ============
 10481                           
 10482                           	signat	_DimmerLights_Exceptions,4216
 10483                           	global	_setDimmerLights_Main
 10484                           psect	text4108,local,class=CODE,delta=2
 10485                           global __ptext4108
 10486  1456                     __ptext4108:
 10487                           
 10488 ;; *************** function _setDimmerLights_Main *****************
 10489 ;; Defined at:
 10490 ;;		line 123 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 10491 ;; Parameters:    Size  Location     Type
 10492 ;;  lights          1    wreg     unsigned char 
 10493 ;; Auto vars:     Size  Location     Type
 10494 ;;  lights          1   11[BANK0 ] unsigned char 
 10495 ;;  clear           1   10[BANK0 ] unsigned char 
 10496 ;; Return value:  Size  Location     Type
 10497 ;;		None               void
 10498 ;; Registers used:
 10499 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10500 ;; Tracked objects:
 10501 ;;		On entry : 0/0
 10502 ;;		On exit  : 0/0
 10503 ;;		Unchanged: 0/0
 10504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 10505 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 10506 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 10507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 10508 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 10509 ;;Total ram usage:        2 bytes
 10510 ;; Hardware stack levels used:    1
 10511 ;; Hardware stack levels required when called:    7
 10512 ;; This function calls:
 10513 ;;		_DimmerLightsPointSelect
 10514 ;;		_setDimmerLights
 10515 ;;		_setDimmerLights_Adj
 10516 ;;		_setBuz
 10517 ;; This function is called by:
 10518 ;;		_DimmerLights_Main
 10519 ;; This function uses a non-reentrant model
 10520 ;;
 10521                           psect	text4108
 10522                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 10523                           	line	123
 10524                           	global	__size_of_setDimmerLights_Main
 10525  0087                     	__size_of_setDimmerLights_Main	equ	__end_of_setDimmerLights_Main-_setDimmerLights_Main
 10526                           	
 10527  1456                     _setDimmerLights_Main:	
 10528                           	opt	stack 7
 10529                           ; Regs used in _setDimmerLights_Main: [wreg+fsr1l-status,0+pclath+cstack]
 10530                           ;setDimmerLights_Main@lights stored from wreg
 10531  1456  0020               	movlb 0	; select bank0
 10532  1457  00AB               	movwf	(setDimmerLights_Main@lights)
 10533                           	line	124
 10534                           	
 10535  1458                     l25124:	
 10536                           ;Dimmer_B1.c: 124: char clear=1;
 10537  1458  01AA               	clrf	(setDimmerLights_Main@clear)
 10538  1459  1403               	bsf	status,0
 10539  145A  0DAA               	rlf	(setDimmerLights_Main@clear),f
 10540                           	line	125
 10541                           	
 10542  145B                     l25126:	
 10543                           ;Dimmer_B1.c: 125: DimmerLightsPointSelect(lights);
 10544  145B  082B               	movf	(setDimmerLights_Main@lights),w
 10545  145C  31A1  21E6  3194   	fcall	_DimmerLightsPointSelect
 10546                           	line	153
 10547                           	
 10548  145F                     l25128:	
 10549                           ;Dimmer_B1.c: 153: if(DimmerLights->Trigger)
 10550  145F  0020               	movlb 0	; select bank0
 10551  1460  086C               	movf	(_DimmerLights),w
 10552  1461  3E09               	addlw	09h
 10553  1462  0086               	movwf	fsr1l
 10554  1463  3001               	movlw 1	; select bank2/3
 10555  1464  0087               	movwf fsr1h	
 10556                           	
 10557  1465  1C81               	btfss	indf1,1
 10558  1466  2C68               	goto	u9501
 10559  1467  2C69               	goto	u9500
 10560  1468                     u9501:
 10561  1468  2CA0               	goto	l25146
 10562  1469                     u9500:
 10563                           	line	155
 10564                           	
 10565  1469                     l25130:	
 10566                           ;Dimmer_B1.c: 154: {
 10567                           ;Dimmer_B1.c: 155: if(clear)
 10568  1469  082A               	movf	(setDimmerLights_Main@clear),w
 10569  146A  1D03               	skipz
 10570  146B  2C6D               	goto	u9510
 10571  146C  2CDC               	goto	l5779
 10572  146D                     u9510:
 10573                           	line	157
 10574                           	
 10575  146D                     l25132:	
 10576                           ;Dimmer_B1.c: 156: {
 10577                           ;Dimmer_B1.c: 157: if(DimmerLights->Switch)
 10578  146D  086C               	movf	(_DimmerLights),w
 10579  146E  3E09               	addlw	09h
 10580  146F  0086               	movwf	fsr1l
 10581  1470  3001               	movlw 1	; select bank2/3
 10582  1471  0087               	movwf fsr1h	
 10583                           	
 10584  1472  1C01               	btfss	indf1,0
 10585  1473  2C75               	goto	u9521
 10586  1474  2C76               	goto	u9520
 10587  1475                     u9521:
 10588  1475  2C8B               	goto	l25140
 10589  1476                     u9520:
 10590                           	line	159
 10591                           	
 10592  1476                     l25134:	
 10593                           ;Dimmer_B1.c: 158: {
 10594                           ;Dimmer_B1.c: 159: DimmerLights->Trigger=0;
 10595  1476  086C               	movf	(_DimmerLights),w
 10596  1477  3E09               	addlw	09h
 10597  1478  0086               	movwf	fsr1l
 10598  1479  3001               	movlw 1	; select bank2/3
 10599  147A  0087               	movwf fsr1h	
 10600                           	
 10601  147B  1081               	bcf	indf1,1
 10602                           	line	160
 10603                           	
 10604  147C                     l25136:	
 10605                           ;Dimmer_B1.c: 160: setDimmerLights(lights,1);
 10606  147C  01A4               	clrf	(?_setDimmerLights)
 10607  147D  1403               	bsf	status,0
 10608  147E  0DA4               	rlf	(?_setDimmerLights),f
 10609  147F  082B               	movf	(setDimmerLights_Main@lights),w
 10610  1480  3196  2605  3194   	fcall	_setDimmerLights
 10611                           	line	163
 10612                           	
 10613  1483                     l25138:	
 10614                           ;Dimmer_B1.c: 163: DimmerLights->Clear=0;
 10615  1483  0020               	movlb 0	; select bank0
 10616  1484  086C               	movf	(_DimmerLights),w
 10617  1485  3E0C               	addlw	0Ch
 10618  1486  0086               	movwf	fsr1l
 10619  1487  3001               	movlw 1	; select bank2/3
 10620  1488  0087               	movwf fsr1h	
 10621                           	
 10622  1489  1001               	bcf	indf1,0
 10623                           	line	165
 10624                           ;Dimmer_B1.c: 165: }
 10625  148A  2CDC               	goto	l5779
 10626                           	line	166
 10627                           	
 10628  148B                     l5772:	
 10629                           	line	168
 10630                           	
 10631  148B                     l25140:	
 10632                           ;Dimmer_B1.c: 166: else
 10633                           ;Dimmer_B1.c: 167: {
 10634                           ;Dimmer_B1.c: 168: DimmerLights->Trigger=0;
 10635  148B  086C               	movf	(_DimmerLights),w
 10636  148C  3E09               	addlw	09h
 10637  148D  0086               	movwf	fsr1l
 10638  148E  3001               	movlw 1	; select bank2/3
 10639  148F  0087               	movwf fsr1h	
 10640                           	
 10641  1490  1081               	bcf	indf1,1
 10642                           	line	169
 10643                           	
 10644  1491                     l25142:	
 10645                           ;Dimmer_B1.c: 169: setDimmerLights(lights,0);
 10646  1491  01A4               	clrf	(?_setDimmerLights)
 10647  1492  082B               	movf	(setDimmerLights_Main@lights),w
 10648  1493  3196  2605  3194   	fcall	_setDimmerLights
 10649                           	line	172
 10650                           	
 10651  1496                     l25144:	
 10652                           ;Dimmer_B1.c: 172: DimmerLights->Clear=0;
 10653  1496  0020               	movlb 0	; select bank0
 10654  1497  086C               	movf	(_DimmerLights),w
 10655  1498  3E0C               	addlw	0Ch
 10656  1499  0086               	movwf	fsr1l
 10657  149A  3001               	movlw 1	; select bank2/3
 10658  149B  0087               	movwf fsr1h	
 10659                           	
 10660  149C  1001               	bcf	indf1,0
 10661  149D  2CDC               	goto	l5779
 10662                           	line	174
 10663                           	
 10664  149E                     l5773:	
 10665  149E  2CDC               	goto	l5779
 10666                           	line	175
 10667                           	
 10668  149F                     l5771:	
 10669                           	line	176
 10670                           ;Dimmer_B1.c: 174: }
 10671                           ;Dimmer_B1.c: 175: }
 10672                           ;Dimmer_B1.c: 176: }
 10673  149F  2CDC               	goto	l5779
 10674                           	line	177
 10675                           	
 10676  14A0                     l5770:	
 10677                           	line	179
 10678                           	
 10679  14A0                     l25146:	
 10680                           ;Dimmer_B1.c: 177: else
 10681                           ;Dimmer_B1.c: 178: {
 10682                           ;Dimmer_B1.c: 179: if(DimmerLights->TriggerAdj)
 10683  14A0  086C               	movf	(_DimmerLights),w
 10684  14A1  3E09               	addlw	09h
 10685  14A2  0086               	movwf	fsr1l
 10686  14A3  3001               	movlw 1	; select bank2/3
 10687  14A4  0087               	movwf fsr1h	
 10688                           	
 10689  14A5  1D81               	btfss	indf1,3
 10690  14A6  2CA8               	goto	u9531
 10691  14A7  2CA9               	goto	u9530
 10692  14A8                     u9531:
 10693  14A8  2CDC               	goto	l5779
 10694  14A9                     u9530:
 10695                           	line	181
 10696                           	
 10697  14A9                     l25148:	
 10698                           ;Dimmer_B1.c: 180: {
 10699                           ;Dimmer_B1.c: 181: if(clear)
 10700  14A9  082A               	movf	(setDimmerLights_Main@clear),w
 10701  14AA  1D03               	skipz
 10702  14AB  2CAD               	goto	u9540
 10703  14AC  2CDC               	goto	l5779
 10704  14AD                     u9540:
 10705                           	line	183
 10706                           	
 10707  14AD                     l25150:	
 10708                           ;Dimmer_B1.c: 182: {
 10709                           ;Dimmer_B1.c: 183: DimmerLightsPointSelect(lights);
 10710  14AD  082B               	movf	(setDimmerLights_Main@lights),w
 10711  14AE  31A1  21E6  3194   	fcall	_DimmerLightsPointSelect
 10712                           	line	184
 10713                           	
 10714  14B1                     l25152:	
 10715                           ;Dimmer_B1.c: 184: DimmerLights->TriggerAdj=0;
 10716  14B1  0020               	movlb 0	; select bank0
 10717  14B2  086C               	movf	(_DimmerLights),w
 10718  14B3  3E09               	addlw	09h
 10719  14B4  0086               	movwf	fsr1l
 10720  14B5  3001               	movlw 1	; select bank2/3
 10721  14B6  0087               	movwf fsr1h	
 10722                           	
 10723  14B7  1181               	bcf	indf1,3
 10724                           	line	185
 10725                           	
 10726  14B8                     l25154:	
 10727                           ;Dimmer_B1.c: 185: if(DimmerLights->AdjGo)
 10728  14B8  086C               	movf	(_DimmerLights),w
 10729  14B9  3E09               	addlw	09h
 10730  14BA  0086               	movwf	fsr1l
 10731  14BB  3001               	movlw 1	; select bank2/3
 10732  14BC  0087               	movwf fsr1h	
 10733                           	
 10734  14BD  1D01               	btfss	indf1,2
 10735  14BE  2CC0               	goto	u9551
 10736  14BF  2CC1               	goto	u9550
 10737  14C0                     u9551:
 10738  14C0  2CD2               	goto	l25158
 10739  14C1                     u9550:
 10740                           	line	187
 10741                           	
 10742  14C1                     l25156:	
 10743                           ;Dimmer_B1.c: 186: {
 10744                           ;Dimmer_B1.c: 187: setDimmerLights_Adj(lights,1);
 10745  14C1  01A5               	clrf	(?_setDimmerLights_Adj)
 10746  14C2  1403               	bsf	status,0
 10747  14C3  0DA5               	rlf	(?_setDimmerLights_Adj),f
 10748  14C4  082B               	movf	(setDimmerLights_Main@lights),w
 10749  14C5  319A  22BF  3194   	fcall	_setDimmerLights_Adj
 10750                           	line	188
 10751                           ;Dimmer_B1.c: 188: setBuz(1,100);
 10752  14C8  3064               	movlw	low(064h)
 10753  14C9  0020               	movlb 0	; select bank0
 10754  14CA  00A6               	movwf	(?_setBuz)
 10755  14CB  3000               	movlw	high(064h)
 10756  14CC  00A7               	movwf	((?_setBuz))+1
 10757  14CD  3001               	movlw	(01h)
 10758  14CE  3192  22C6  3194   	fcall	_setBuz
 10759                           	line	189
 10760                           ;Dimmer_B1.c: 189: }
 10761  14D1  2CDC               	goto	l5779
 10762                           	line	190
 10763                           	
 10764  14D2                     l5777:	
 10765                           	line	192
 10766                           	
 10767  14D2                     l25158:	
 10768                           ;Dimmer_B1.c: 190: else
 10769                           ;Dimmer_B1.c: 191: {
 10770                           ;Dimmer_B1.c: 192: setDimmerLights_Adj(lights,0);
 10771  14D2  0020               	movlb 0	; select bank0
 10772  14D3  01A5               	clrf	(?_setDimmerLights_Adj)
 10773  14D4  082B               	movf	(setDimmerLights_Main@lights),w
 10774  14D5  319A  22BF  3194   	fcall	_setDimmerLights_Adj
 10775  14D8  2CDC               	goto	l5779
 10776                           	line	193
 10777                           	
 10778  14D9                     l5778:	
 10779  14D9  2CDC               	goto	l5779
 10780                           	line	194
 10781                           	
 10782  14DA                     l5776:	
 10783  14DA  2CDC               	goto	l5779
 10784                           	line	195
 10785                           	
 10786  14DB                     l5775:	
 10787  14DB  2CDC               	goto	l5779
 10788                           	line	196
 10789                           	
 10790  14DC                     l5774:	
 10791                           	line	197
 10792                           	
 10793  14DC                     l5779:	
 10794  14DC  0008               	return
 10795                           	opt stack 0
 10796                           GLOBAL	__end_of_setDimmerLights_Main
 10797  14DD                     	__end_of_setDimmerLights_Main:
 10798 ;; =============== function _setDimmerLights_Main ends ============
 10799                           
 10800                           	signat	_setDimmerLights_Main,4216
 10801                           	global	_DelayOff_Main
 10802                           psect	text4109,local,class=CODE,delta=2
 10803                           global __ptext4109
 10804  20AF                     __ptext4109:
 10805                           
 10806 ;; *************** function _DelayOff_Main *****************
 10807 ;; Defined at:
 10808 ;;		line 46 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\DelayOff_B1.c"
 10809 ;; Parameters:    Size  Location     Type
 10810 ;;		None
 10811 ;; Auto vars:     Size  Location     Type
 10812 ;;		None
 10813 ;; Return value:  Size  Location     Type
 10814 ;;		None               void
 10815 ;; Registers used:
 10816 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10817 ;; Tracked objects:
 10818 ;;		On entry : 0/0
 10819 ;;		On exit  : 0/0
 10820 ;;		Unchanged: 0/0
 10821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 10822 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 10823 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 10824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 10825 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 10826 ;;Total ram usage:        0 bytes
 10827 ;; Hardware stack levels used:    1
 10828 ;; Hardware stack levels required when called:    7
 10829 ;; This function calls:
 10830 ;;		_DlyOff_Main
 10831 ;; This function is called by:
 10832 ;;		_main
 10833 ;; This function uses a non-reentrant model
 10834 ;;
 10835                           psect	text4109
 10836                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\DelayOff_B1.c"
 10837                           	line	46
 10838                           	global	__size_of_DelayOff_Main
 10839  0005                     	__size_of_DelayOff_Main	equ	__end_of_DelayOff_Main-_DelayOff_Main
 10840                           	
 10841  20AF                     _DelayOff_Main:	
 10842                           	opt	stack 8
 10843                           ; Regs used in _DelayOff_Main: [wreg-status,0+pclath+cstack]
 10844                           	line	48
 10845                           	
 10846  20AF                     l25122:	
 10847                           ;DelayOff_B1.c: 48: DlyOff_Main(1);
 10848  20AF  3001               	movlw	(01h)
 10849  20B0  3193  2349  31A0   	fcall	_DlyOff_Main
 10850                           	line	58
 10851                           	
 10852  20B3                     l4580:	
 10853  20B3  0008               	return
 10854                           	opt stack 0
 10855                           GLOBAL	__end_of_DelayOff_Main
 10856  20B4                     	__end_of_DelayOff_Main:
 10857 ;; =============== function _DelayOff_Main ends ============
 10858                           
 10859                           	signat	_DelayOff_Main,88
 10860                           	global	_CC2500_PowerOnInitial
 10861                           psect	text4110,local,class=CODE,delta=2
 10862                           global __ptext4110
 10863  2380                     __ptext4110:
 10864                           
 10865 ;; *************** function _CC2500_PowerOnInitial *****************
 10866 ;; Defined at:
 10867 ;;		line 98 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
 10868 ;; Parameters:    Size  Location     Type
 10869 ;;		None
 10870 ;; Auto vars:     Size  Location     Type
 10871 ;;		None
 10872 ;; Return value:  Size  Location     Type
 10873 ;;		None               void
 10874 ;; Registers used:
 10875 ;;		wreg, status,2, status,0, pclath, cstack
 10876 ;; Tracked objects:
 10877 ;;		On entry : 0/0
 10878 ;;		On exit  : 0/0
 10879 ;;		Unchanged: 0/0
 10880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 10881 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 10882 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 10883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 10884 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 10885 ;;Total ram usage:        0 bytes
 10886 ;; Hardware stack levels used:    1
 10887 ;; Hardware stack levels required when called:    7
 10888 ;; This function calls:
 10889 ;;		_CC2500_PowerRST
 10890 ;;		_CC2500_InitSetREG
 10891 ;;		_CC2500_InitPATable
 10892 ;;		_CC2500_ClearTXFIFO
 10893 ;;		_CC2500_ClearRXFIFO
 10894 ;;		_CC2500_FrequencyCabr
 10895 ;;		_CC2500_SIDLEMode
 10896 ;; This function is called by:
 10897 ;;		_main
 10898 ;; This function uses a non-reentrant model
 10899 ;;
 10900                           psect	text4110
 10901                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
 10902                           	line	98
 10903                           	global	__size_of_CC2500_PowerOnInitial
 10904  0016                     	__size_of_CC2500_PowerOnInitial	equ	__end_of_CC2500_PowerOnInitial-_CC2500_PowerOnIniti
                                 al
 10905                           	
 10906  2380                     _CC2500_PowerOnInitial:	
 10907                           	opt	stack 8
 10908                           ; Regs used in _CC2500_PowerOnInitial: [wreg+status,2+status,0+pclath+cstack]
 10909                           	line	99
 10910                           	
 10911  2380                     l25120:	
 10912                           ;CC2500_B1.c: 99: CC2500_PowerRST();
 10913  2380  31A7  271F  31A3   	fcall	_CC2500_PowerRST
 10914                           	line	100
 10915                           ;CC2500_B1.c: 100: CC2500_InitSetREG();
 10916  2383  31A6  268F  31A3   	fcall	_CC2500_InitSetREG
 10917                           	line	101
 10918                           ;CC2500_B1.c: 101: CC2500_InitPATable();
 10919  2386  31A4  24AE  31A3   	fcall	_CC2500_InitPATable
 10920                           	line	102
 10921                           ;CC2500_B1.c: 102: CC2500_ClearTXFIFO();
 10922  2389  31A0  209B  31A3   	fcall	_CC2500_ClearTXFIFO
 10923                           	line	103
 10924                           ;CC2500_B1.c: 103: CC2500_ClearRXFIFO();
 10925  238C  31A0  20A0  31A3   	fcall	_CC2500_ClearRXFIFO
 10926                           	line	104
 10927                           ;CC2500_B1.c: 104: CC2500_FrequencyCabr();
 10928  238F  31A1  21A5  31A3   	fcall	_CC2500_FrequencyCabr
 10929                           	line	105
 10930                           ;CC2500_B1.c: 105: CC2500_SIDLEMode();
 10931  2392  31A0  20A5  31A3   	fcall	_CC2500_SIDLEMode
 10932                           	line	106
 10933                           	
 10934  2395                     l2281:	
 10935  2395  0008               	return
 10936                           	opt stack 0
 10937                           GLOBAL	__end_of_CC2500_PowerOnInitial
 10938  2396                     	__end_of_CC2500_PowerOnInitial:
 10939 ;; =============== function _CC2500_PowerOnInitial ends ============
 10940                           
 10941                           	signat	_CC2500_PowerOnInitial,88
 10942                           	global	_Sw_DimmerOffFunc
 10943                           psect	text4111,local,class=CODE,delta=2
 10944                           global __ptext4111
 10945  1246                     __ptext4111:
 10946                           
 10947 ;; *************** function _Sw_DimmerOffFunc *****************
 10948 ;; Defined at:
 10949 ;;		line 304 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Switch_B1.c"
 10950 ;; Parameters:    Size  Location     Type
 10951 ;;  sw              1    wreg     unsigned char 
 10952 ;; Auto vars:     Size  Location     Type
 10953 ;;  sw              1   10[BANK0 ] unsigned char 
 10954 ;; Return value:  Size  Location     Type
 10955 ;;		None               void
 10956 ;; Registers used:
 10957 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10958 ;; Tracked objects:
 10959 ;;		On entry : 0/0
 10960 ;;		On exit  : 0/0
 10961 ;;		Unchanged: 0/0
 10962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 10963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 10964 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 10965 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 10966 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 10967 ;;Total ram usage:        3 bytes
 10968 ;; Hardware stack levels used:    1
 10969 ;; Hardware stack levels required when called:    6
 10970 ;; This function calls:
 10971 ;;		_setDimmerLights_TriggerAdj
 10972 ;;		_setDimmerLights_AdjGo
 10973 ;;		_setRF_DimmerLights
 10974 ;;		_setTxData
 10975 ;;		_setDimmerLights_Trigger
 10976 ;;		_setDimmerLights_Switch
 10977 ;;		_setDelayOff_GO
 10978 ;; This function is called by:
 10979 ;;		_setSw_Main
 10980 ;; This function uses a non-reentrant model
 10981 ;;
 10982                           psect	text4111
 10983                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Switch_B1.c"
 10984                           	line	304
 10985                           	global	__size_of_Sw_DimmerOffFunc
 10986  0080                     	__size_of_Sw_DimmerOffFunc	equ	__end_of_Sw_DimmerOffFunc-_Sw_DimmerOffFunc
 10987                           	
 10988  1246                     _Sw_DimmerOffFunc:	
 10989                           	opt	stack 7
 10990                           ; Regs used in _Sw_DimmerOffFunc: [wreg+fsr1l-status,0+pclath+cstack]
 10991                           ;Sw_DimmerOffFunc@sw stored from wreg
 10992  1246  0020               	movlb 0	; select bank0
 10993  1247  00AA               	movwf	(Sw_DimmerOffFunc@sw)
 10994                           	line	305
 10995                           	
 10996  1248                     l25100:	
 10997                           ;Switch_B1.c: 305: if(Sw->Flag)
 10998  1248  086E               	movf	(_Sw),w
 10999  1249  0086               	movwf	fsr1l
 11000  124A  3001               	movlw 1	; select bank2/3
 11001  124B  0087               	movwf fsr1h	
 11002                           	
 11003  124C  1F81               	btfss	indf1,7
 11004  124D  2A4F               	goto	u9471
 11005  124E  2A50               	goto	u9470
 11006  124F                     u9471:
 11007  124F  2AC5               	goto	l16486
 11008  1250                     u9470:
 11009                           	line	307
 11010                           	
 11011  1250                     l25102:	
 11012                           ;Switch_B1.c: 306: {
 11013                           ;Switch_B1.c: 307: Sw->Flag=0;
 11014  1250  086E               	movf	(_Sw),w
 11015  1251  0086               	movwf	fsr1l
 11016  1252  3001               	movlw 1	; select bank2/3
 11017  1253  0087               	movwf fsr1h	
 11018                           	
 11019  1254  1381               	bcf	indf1,7
 11020                           	line	308
 11021                           ;Switch_B1.c: 308: if(Sw->Status)
 11022  1255  086E               	movf	(_Sw),w
 11023  1256  0086               	movwf	fsr1l
 11024  1257  3001               	movlw 1	; select bank2/3
 11025  1258  0087               	movwf fsr1h	
 11026                           	
 11027  1259  1F01               	btfss	indf1,6
 11028  125A  2A5C               	goto	u9481
 11029  125B  2A5D               	goto	u9480
 11030  125C                     u9481:
 11031  125C  2A9D               	goto	l25118
 11032  125D                     u9480:
 11033                           	line	310
 11034                           	
 11035  125D                     l25104:	
 11036                           ;Switch_B1.c: 309: {
 11037                           ;Switch_B1.c: 310: if(Sw->Adj)
 11038  125D  086E               	movf	(_Sw),w
 11039  125E  3E01               	addlw	01h
 11040  125F  0086               	movwf	fsr1l
 11041  1260  3001               	movlw 1	; select bank2/3
 11042  1261  0087               	movwf fsr1h	
 11043                           	
 11044  1262  1C01               	btfss	indf1,0
 11045  1263  2A65               	goto	u9491
 11046  1264  2A66               	goto	u9490
 11047  1265                     u9491:
 11048  1265  2AC5               	goto	l16486
 11049  1266                     u9490:
 11050                           	line	312
 11051                           	
 11052  1266                     l25106:	
 11053                           ;Switch_B1.c: 311: {
 11054                           ;Switch_B1.c: 312: Sw->Adj=0;
 11055  1266  086E               	movf	(_Sw),w
 11056  1267  3E01               	addlw	01h
 11057  1268  0086               	movwf	fsr1l
 11058  1269  3001               	movlw 1	; select bank2/3
 11059  126A  0087               	movwf fsr1h	
 11060                           	
 11061  126B  1001               	bcf	indf1,0
 11062                           	line	313
 11063                           	
 11064  126C                     l25108:	
 11065                           ;Switch_B1.c: 313: setDimmerLights_TriggerAdj(sw,1);
 11066  126C  01A2               	clrf	(?_setDimmerLights_TriggerAdj)
 11067  126D  1403               	bsf	status,0
 11068  126E  0DA2               	rlf	(?_setDimmerLights_TriggerAdj),f
 11069  126F  082A               	movf	(Sw_DimmerOffFunc@sw),w
 11070  1270  31A2  22EA  3192   	fcall	_setDimmerLights_TriggerAdj
 11071                           	line	314
 11072                           	
 11073  1273                     l25110:	
 11074                           ;Switch_B1.c: 314: setDimmerLights_AdjGo(sw,0);
 11075  1273  0020               	movlb 0	; select bank0
 11076  1274  01A2               	clrf	(?_setDimmerLights_AdjGo)
 11077  1275  082A               	movf	(Sw_DimmerOffFunc@sw),w
 11078  1276  31A2  22D9  3192   	fcall	_setDimmerLights_AdjGo
 11079                           	line	316
 11080                           	
 11081  1279                     l25112:	
 11082                           ;Switch_B1.c: 316: Product->Data[17]=Product->Data[26+sw];
 11083  1279  0020               	movlb 0	; select bank0
 11084  127A  082A               	movf	(Sw_DimmerOffFunc@sw),w
 11085  127B  3E1A               	addlw	01Ah
 11086  127C  076F               	addwf	(_Product),w
 11087  127D  00A8               	movwf	(??_Sw_DimmerOffFunc+0)+0
 11088  127E  0828               	movf	0+(??_Sw_DimmerOffFunc+0)+0,w
 11089  127F  0086               	movwf	fsr1l
 11090  1280  3001               	movlw 1	; select bank2/3
 11091  1281  0087               	movwf fsr1h	
 11092                           	
 11093  1282  0801               	movf	indf1,w
 11094  1283  00A9               	movwf	(??_Sw_DimmerOffFunc+1)+0
 11095  1284  086F               	movf	(_Product),w
 11096  1285  3E11               	addlw	011h
 11097  1286  0086               	movwf	fsr1l
 11098  1287  3001               	movlw 1	; select bank2/3
 11099  1288  0087               	movwf fsr1h	
 11100                           	
 11101  1289  0829               	movf	(??_Sw_DimmerOffFunc+1)+0,w
 11102  128A  0081               	movwf	indf1
 11103                           	line	317
 11104                           	
 11105  128B                     l25114:	
 11106                           ;Switch_B1.c: 317: setRF_DimmerLights(sw,Sw->Status);
 11107  128B  086E               	movf	(_Sw),w
 11108  128C  0086               	movwf	fsr1l
 11109  128D  3001               	movlw 1	; select bank2/3
 11110  128E  0087               	movwf fsr1h	
 11111                           	
 11112  128F  3000               	movlw	0
 11113  1290  1B01               	btfsc	indf1,6
 11114  1291  3001               	movlw	1
 11115  1292  00A0               	movwf	(?_setRF_DimmerLights)
 11116  1293  082A               	movf	(Sw_DimmerOffFunc@sw),w
 11117  1294  3188  2001  3192   	fcall	_setRF_DimmerLights
 11118                           	line	318
 11119                           	
 11120  1297                     l25116:	
 11121                           ;Switch_B1.c: 318: setTxData(1);
 11122  1297  3001               	movlw	(01h)
 11123  1298  318B  236C  3192   	fcall	_setTxData
 11124  129B  2AC5               	goto	l16486
 11125                           	line	320
 11126                           	
 11127  129C                     l16484:	
 11128                           	line	321
 11129                           ;Switch_B1.c: 320: }
 11130                           ;Switch_B1.c: 321: }
 11131  129C  2AC5               	goto	l16486
 11132                           	line	322
 11133                           	
 11134  129D                     l16483:	
 11135                           	line	324
 11136                           	
 11137  129D                     l25118:	
 11138                           ;Switch_B1.c: 322: else
 11139                           ;Switch_B1.c: 323: {
 11140                           ;Switch_B1.c: 324: setDimmerLights_Trigger(sw,1);
 11141  129D  0020               	movlb 0	; select bank0
 11142  129E  01A2               	clrf	(?_setDimmerLights_Trigger)
 11143  129F  1403               	bsf	status,0
 11144  12A0  0DA2               	rlf	(?_setDimmerLights_Trigger),f
 11145  12A1  082A               	movf	(Sw_DimmerOffFunc@sw),w
 11146  12A2  31A2  22B7  3192   	fcall	_setDimmerLights_Trigger
 11147                           	line	325
 11148                           ;Switch_B1.c: 325: setDimmerLights_Switch(sw,0);
 11149  12A5  0020               	movlb 0	; select bank0
 11150  12A6  01A2               	clrf	(?_setDimmerLights_Switch)
 11151  12A7  082A               	movf	(Sw_DimmerOffFunc@sw),w
 11152  12A8  31A2  22C8  3192   	fcall	_setDimmerLights_Switch
 11153                           	line	327
 11154                           ;Switch_B1.c: 327: setDelayOff_GO(sw,0,0);
 11155  12AB  0020               	movlb 0	; select bank0
 11156  12AC  01A3               	clrf	(?_setDelayOff_GO)
 11157  12AD  01A4               	clrf	0+(?_setDelayOff_GO)+01h
 11158  12AE  082A               	movf	(Sw_DimmerOffFunc@sw),w
 11159  12AF  319F  270E  3192   	fcall	_setDelayOff_GO
 11160                           	line	328
 11161                           ;Switch_B1.c: 328: setRF_DimmerLights(sw,Sw->Status);
 11162  12B2  0020               	movlb 0	; select bank0
 11163  12B3  086E               	movf	(_Sw),w
 11164  12B4  0086               	movwf	fsr1l
 11165  12B5  3001               	movlw 1	; select bank2/3
 11166  12B6  0087               	movwf fsr1h	
 11167                           	
 11168  12B7  3000               	movlw	0
 11169  12B8  1B01               	btfsc	indf1,6
 11170  12B9  3001               	movlw	1
 11171  12BA  00A0               	movwf	(?_setRF_DimmerLights)
 11172  12BB  082A               	movf	(Sw_DimmerOffFunc@sw),w
 11173  12BC  3188  2001  3192   	fcall	_setRF_DimmerLights
 11174                           	line	329
 11175                           ;Switch_B1.c: 329: setTxData(1);
 11176  12BF  3001               	movlw	(01h)
 11177  12C0  318B  236C  3192   	fcall	_setTxData
 11178  12C3  2AC5               	goto	l16486
 11179                           	line	330
 11180                           	
 11181  12C4                     l16485:	
 11182  12C4  2AC5               	goto	l16486
 11183                           	line	331
 11184                           	
 11185  12C5                     l16482:	
 11186                           	line	332
 11187                           	
 11188  12C5                     l16486:	
 11189  12C5  0008               	return
 11190                           	opt stack 0
 11191                           GLOBAL	__end_of_Sw_DimmerOffFunc
 11192  12C6                     	__end_of_Sw_DimmerOffFunc:
 11193 ;; =============== function _Sw_DimmerOffFunc ends ============
 11194                           
 11195                           	signat	_Sw_DimmerOffFunc,4216
 11196                           	global	_Sw_DimmerAdjFunc
 11197                           psect	text4112,local,class=CODE,delta=2
 11198                           global __ptext4112
 11199  2632                     __ptext4112:
 11200                           
 11201 ;; *************** function _Sw_DimmerAdjFunc *****************
 11202 ;; Defined at:
 11203 ;;		line 335 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Switch_B1.c"
 11204 ;; Parameters:    Size  Location     Type
 11205 ;;  sw              1    wreg     unsigned char 
 11206 ;; Auto vars:     Size  Location     Type
 11207 ;;  sw              1    4[BANK0 ] unsigned char 
 11208 ;; Return value:  Size  Location     Type
 11209 ;;		None               void
 11210 ;; Registers used:
 11211 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11212 ;; Tracked objects:
 11213 ;;		On entry : 0/0
 11214 ;;		On exit  : 0/0
 11215 ;;		Unchanged: 0/0
 11216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 11217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11218 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 11219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11220 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 11221 ;;Total ram usage:        1 bytes
 11222 ;; Hardware stack levels used:    1
 11223 ;; Hardware stack levels required when called:    6
 11224 ;; This function calls:
 11225 ;;		_setRFSW_Status
 11226 ;;		_setDimmerLights_TriggerAdj
 11227 ;;		_setDimmerLights_AdjGo
 11228 ;; This function is called by:
 11229 ;;		_setSw_Main
 11230 ;; This function uses a non-reentrant model
 11231 ;;
 11232                           psect	text4112
 11233                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Switch_B1.c"
 11234                           	line	335
 11235                           	global	__size_of_Sw_DimmerAdjFunc
 11236  002E                     	__size_of_Sw_DimmerAdjFunc	equ	__end_of_Sw_DimmerAdjFunc-_Sw_DimmerAdjFunc
 11237                           	
 11238  2632                     _Sw_DimmerAdjFunc:	
 11239                           	opt	stack 7
 11240                           ; Regs used in _Sw_DimmerAdjFunc: [wreg+fsr1l-status,0+pclath+cstack]
 11241                           ;Sw_DimmerAdjFunc@sw stored from wreg
 11242  2632  0020               	movlb 0	; select bank0
 11243  2633  00A4               	movwf	(Sw_DimmerAdjFunc@sw)
 11244                           	line	336
 11245                           	
 11246  2634                     l25090:	
 11247                           ;Switch_B1.c: 336: if(Sw->Flag)
 11248  2634  086E               	movf	(_Sw),w
 11249  2635  0086               	movwf	fsr1l
 11250  2636  3001               	movlw 1	; select bank2/3
 11251  2637  0087               	movwf fsr1h	
 11252                           	
 11253  2638  1F81               	btfss	indf1,7
 11254  2639  2E3B               	goto	u9461
 11255  263A  2E3C               	goto	u9460
 11256  263B                     u9461:
 11257  263B  2E5F               	goto	l16490
 11258  263C                     u9460:
 11259                           	line	338
 11260                           	
 11261  263C                     l25092:	
 11262                           ;Switch_B1.c: 337: {
 11263                           ;Switch_B1.c: 338: Sw->Adj=1;
 11264  263C  086E               	movf	(_Sw),w
 11265  263D  3E01               	addlw	01h
 11266  263E  0086               	movwf	fsr1l
 11267  263F  3001               	movlw 1	; select bank2/3
 11268  2640  0087               	movwf fsr1h	
 11269                           	
 11270  2641  1401               	bsf	indf1,0
 11271                           	line	339
 11272                           ;Switch_B1.c: 339: Sw->Status=1;
 11273  2642  086E               	movf	(_Sw),w
 11274  2643  0086               	movwf	fsr1l
 11275  2644  3001               	movlw 1	; select bank2/3
 11276  2645  0087               	movwf fsr1h	
 11277                           	
 11278  2646  1701               	bsf	indf1,6
 11279                           	line	340
 11280                           	
 11281  2647                     l25094:	
 11282                           ;Switch_B1.c: 340: setRFSW_Status(sw,1);
 11283  2647  01A2               	clrf	(?_setRFSW_Status)
 11284  2648  1403               	bsf	status,0
 11285  2649  0DA2               	rlf	(?_setRFSW_Status),f
 11286  264A  0824               	movf	(Sw_DimmerAdjFunc@sw),w
 11287  264B  31A2  2297  31A6   	fcall	_setRFSW_Status
 11288                           	line	342
 11289                           	
 11290  264E                     l25096:	
 11291                           ;Switch_B1.c: 342: setDimmerLights_TriggerAdj(sw,1);
 11292  264E  0020               	movlb 0	; select bank0
 11293  264F  01A2               	clrf	(?_setDimmerLights_TriggerAdj)
 11294  2650  1403               	bsf	status,0
 11295  2651  0DA2               	rlf	(?_setDimmerLights_TriggerAdj),f
 11296  2652  0824               	movf	(Sw_DimmerAdjFunc@sw),w
 11297  2653  31A2  22EA  31A6   	fcall	_setDimmerLights_TriggerAdj
 11298                           	line	343
 11299                           	
 11300  2656                     l25098:	
 11301                           ;Switch_B1.c: 343: setDimmerLights_AdjGo(sw,1);
 11302  2656  0020               	movlb 0	; select bank0
 11303  2657  01A2               	clrf	(?_setDimmerLights_AdjGo)
 11304  2658  1403               	bsf	status,0
 11305  2659  0DA2               	rlf	(?_setDimmerLights_AdjGo),f
 11306  265A  0824               	movf	(Sw_DimmerAdjFunc@sw),w
 11307  265B  31A2  22D9  31A6   	fcall	_setDimmerLights_AdjGo
 11308  265E  2E5F               	goto	l16490
 11309                           	line	345
 11310                           	
 11311  265F                     l16489:	
 11312                           	line	346
 11313                           	
 11314  265F                     l16490:	
 11315  265F  0008               	return
 11316                           	opt stack 0
 11317                           GLOBAL	__end_of_Sw_DimmerAdjFunc
 11318  2660                     	__end_of_Sw_DimmerAdjFunc:
 11319 ;; =============== function _Sw_DimmerAdjFunc ends ============
 11320                           
 11321                           	signat	_Sw_DimmerAdjFunc,4216
 11322                           	global	_Sw_DimmerOnFunc
 11323                           psect	text4113,local,class=CODE,delta=2
 11324                           global __ptext4113
 11325  1D50                     __ptext4113:
 11326                           
 11327 ;; *************** function _Sw_DimmerOnFunc *****************
 11328 ;; Defined at:
 11329 ;;		line 252 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Switch_B1.c"
 11330 ;; Parameters:    Size  Location     Type
 11331 ;;  sw              1    wreg     unsigned char 
 11332 ;; Auto vars:     Size  Location     Type
 11333 ;;  sw              1   11[BANK0 ] unsigned char 
 11334 ;;  Idle            1   10[BANK0 ] unsigned char 
 11335 ;; Return value:  Size  Location     Type
 11336 ;;		None               void
 11337 ;; Registers used:
 11338 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11339 ;; Tracked objects:
 11340 ;;		On entry : 0/0
 11341 ;;		On exit  : 0/0
 11342 ;;		Unchanged: 0/0
 11343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 11344 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11345 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 11346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11347 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 11348 ;;Total ram usage:        2 bytes
 11349 ;; Hardware stack levels used:    1
 11350 ;; Hardware stack levels required when called:    6
 11351 ;; This function calls:
 11352 ;;		_setBuz
 11353 ;;		_setRFSW_Status
 11354 ;;		_setDimmerLights_Trigger
 11355 ;;		_setDimmerLights_Switch
 11356 ;;		_setRF_DimmerLights
 11357 ;;		_setTxData
 11358 ;; This function is called by:
 11359 ;;		_setSw_Main
 11360 ;; This function uses a non-reentrant model
 11361 ;;
 11362                           psect	text4113
 11363                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Switch_B1.c"
 11364                           	line	252
 11365                           	global	__size_of_Sw_DimmerOnFunc
 11366  0062                     	__size_of_Sw_DimmerOnFunc	equ	__end_of_Sw_DimmerOnFunc-_Sw_DimmerOnFunc
 11367                           	
 11368  1D50                     _Sw_DimmerOnFunc:	
 11369                           	opt	stack 7
 11370                           ; Regs used in _Sw_DimmerOnFunc: [wreg+fsr1l-status,0+pclath+cstack]
 11371                           ;Sw_DimmerOnFunc@sw stored from wreg
 11372  1D50  0020               	movlb 0	; select bank0
 11373  1D51  00AB               	movwf	(Sw_DimmerOnFunc@sw)
 11374                           	line	253
 11375                           	
 11376  1D52                     l25064:	
 11377                           ;Switch_B1.c: 253: char Idle=1;
 11378  1D52  01AA               	clrf	(Sw_DimmerOnFunc@Idle)
 11379  1D53  1403               	bsf	status,0
 11380  1D54  0DAA               	rlf	(Sw_DimmerOnFunc@Idle),f
 11381                           	line	280
 11382                           	
 11383  1D55                     l25066:	
 11384                           ;Switch_B1.c: 280: if(Idle)
 11385  1D55  082A               	movf	(Sw_DimmerOnFunc@Idle),w
 11386  1D56  1D03               	skipz
 11387  1D57  2D59               	goto	u9440
 11388  1D58  2DB1               	goto	l16479
 11389  1D59                     u9440:
 11390                           	line	282
 11391                           	
 11392  1D59                     l25068:	
 11393                           ;Switch_B1.c: 281: {
 11394                           ;Switch_B1.c: 282: Sw->Flag=1;
 11395  1D59  086E               	movf	(_Sw),w
 11396  1D5A  0086               	movwf	fsr1l
 11397  1D5B  3001               	movlw 1	; select bank2/3
 11398  1D5C  0087               	movwf fsr1h	
 11399                           	
 11400  1D5D  1781               	bsf	indf1,7
 11401                           	line	283
 11402                           	
 11403  1D5E                     l25070:	
 11404                           ;Switch_B1.c: 283: setBuz(1,100);
 11405  1D5E  3064               	movlw	low(064h)
 11406  1D5F  00A6               	movwf	(?_setBuz)
 11407  1D60  3000               	movlw	high(064h)
 11408  1D61  00A7               	movwf	((?_setBuz))+1
 11409  1D62  3001               	movlw	(01h)
 11410  1D63  3192  22C6  319D   	fcall	_setBuz
 11411                           	line	284
 11412                           	
 11413  1D66                     l25072:	
 11414                           ;Switch_B1.c: 284: if(!Sw->Status)
 11415  1D66  0020               	movlb 0	; select bank0
 11416  1D67  086E               	movf	(_Sw),w
 11417  1D68  0086               	movwf	fsr1l
 11418  1D69  3001               	movlw 1	; select bank2/3
 11419  1D6A  0087               	movwf fsr1h	
 11420                           	
 11421  1D6B  1B01               	btfsc	indf1,6
 11422  1D6C  2D6E               	goto	u9451
 11423  1D6D  2D6F               	goto	u9450
 11424  1D6E                     u9451:
 11425  1D6E  2D9D               	goto	l25086
 11426  1D6F                     u9450:
 11427                           	line	286
 11428                           	
 11429  1D6F                     l25074:	
 11430                           ;Switch_B1.c: 285: {
 11431                           ;Switch_B1.c: 286: Sw->Status=1;
 11432  1D6F  086E               	movf	(_Sw),w
 11433  1D70  0086               	movwf	fsr1l
 11434  1D71  3001               	movlw 1	; select bank2/3
 11435  1D72  0087               	movwf fsr1h	
 11436                           	
 11437  1D73  1701               	bsf	indf1,6
 11438                           	line	287
 11439                           	
 11440  1D74                     l25076:	
 11441                           ;Switch_B1.c: 287: setRFSW_Status(sw,1);
 11442  1D74  01A2               	clrf	(?_setRFSW_Status)
 11443  1D75  1403               	bsf	status,0
 11444  1D76  0DA2               	rlf	(?_setRFSW_Status),f
 11445  1D77  082B               	movf	(Sw_DimmerOnFunc@sw),w
 11446  1D78  31A2  2297  319D   	fcall	_setRFSW_Status
 11447                           	line	289
 11448                           	
 11449  1D7B                     l25078:	
 11450                           ;Switch_B1.c: 289: setDimmerLights_Trigger(sw,1);
 11451  1D7B  0020               	movlb 0	; select bank0
 11452  1D7C  01A2               	clrf	(?_setDimmerLights_Trigger)
 11453  1D7D  1403               	bsf	status,0
 11454  1D7E  0DA2               	rlf	(?_setDimmerLights_Trigger),f
 11455  1D7F  082B               	movf	(Sw_DimmerOnFunc@sw),w
 11456  1D80  31A2  22B7  319D   	fcall	_setDimmerLights_Trigger
 11457                           	line	290
 11458                           	
 11459  1D83                     l25080:	
 11460                           ;Switch_B1.c: 290: setDimmerLights_Switch(sw,1);
 11461  1D83  0020               	movlb 0	; select bank0
 11462  1D84  01A2               	clrf	(?_setDimmerLights_Switch)
 11463  1D85  1403               	bsf	status,0
 11464  1D86  0DA2               	rlf	(?_setDimmerLights_Switch),f
 11465  1D87  082B               	movf	(Sw_DimmerOnFunc@sw),w
 11466  1D88  31A2  22C8  319D   	fcall	_setDimmerLights_Switch
 11467                           	line	292
 11468                           	
 11469  1D8B                     l25082:	
 11470                           ;Switch_B1.c: 292: setRF_DimmerLights(sw,Sw->Status);
 11471  1D8B  0020               	movlb 0	; select bank0
 11472  1D8C  086E               	movf	(_Sw),w
 11473  1D8D  0086               	movwf	fsr1l
 11474  1D8E  3001               	movlw 1	; select bank2/3
 11475  1D8F  0087               	movwf fsr1h	
 11476                           	
 11477  1D90  3000               	movlw	0
 11478  1D91  1B01               	btfsc	indf1,6
 11479  1D92  3001               	movlw	1
 11480  1D93  00A0               	movwf	(?_setRF_DimmerLights)
 11481  1D94  082B               	movf	(Sw_DimmerOnFunc@sw),w
 11482  1D95  3188  2001  319D   	fcall	_setRF_DimmerLights
 11483                           	line	293
 11484                           	
 11485  1D98                     l25084:	
 11486                           ;Switch_B1.c: 293: setTxData(1);
 11487  1D98  3001               	movlw	(01h)
 11488  1D99  318B  236C  319D   	fcall	_setTxData
 11489                           	line	294
 11490                           ;Switch_B1.c: 294: }
 11491  1D9C  2DB1               	goto	l16479
 11492                           	line	295
 11493                           	
 11494  1D9D                     l16477:	
 11495                           	line	297
 11496                           	
 11497  1D9D                     l25086:	
 11498                           ;Switch_B1.c: 295: else
 11499                           ;Switch_B1.c: 296: {
 11500                           ;Switch_B1.c: 297: Sw->Status=0;
 11501  1D9D  0020               	movlb 0	; select bank0
 11502  1D9E  086E               	movf	(_Sw),w
 11503  1D9F  0086               	movwf	fsr1l
 11504  1DA0  3001               	movlw 1	; select bank2/3
 11505  1DA1  0087               	movwf fsr1h	
 11506                           	
 11507  1DA2  1301               	bcf	indf1,6
 11508                           	line	298
 11509                           	
 11510  1DA3                     l25088:	
 11511                           ;Switch_B1.c: 298: setRFSW_Status(sw,Sw->Status);
 11512  1DA3  086E               	movf	(_Sw),w
 11513  1DA4  0086               	movwf	fsr1l
 11514  1DA5  3001               	movlw 1	; select bank2/3
 11515  1DA6  0087               	movwf fsr1h	
 11516                           	
 11517  1DA7  3000               	movlw	0
 11518  1DA8  1B01               	btfsc	indf1,6
 11519  1DA9  3001               	movlw	1
 11520  1DAA  00A2               	movwf	(?_setRFSW_Status)
 11521  1DAB  082B               	movf	(Sw_DimmerOnFunc@sw),w
 11522  1DAC  31A2  2297  319D   	fcall	_setRFSW_Status
 11523  1DAF  2DB1               	goto	l16479
 11524                           	line	299
 11525                           	
 11526  1DB0                     l16478:	
 11527  1DB0  2DB1               	goto	l16479
 11528                           	line	300
 11529                           	
 11530  1DB1                     l16476:	
 11531                           	line	301
 11532                           	
 11533  1DB1                     l16479:	
 11534  1DB1  0008               	return
 11535                           	opt stack 0
 11536                           GLOBAL	__end_of_Sw_DimmerOnFunc
 11537  1DB2                     	__end_of_Sw_DimmerOnFunc:
 11538 ;; =============== function _Sw_DimmerOnFunc ends ============
 11539                           
 11540                           	signat	_Sw_DimmerOnFunc,4216
 11541                           	global	_setSw_Initialization
 11542                           psect	text4114,local,class=CODE,delta=2
 11543                           global __ptext4114
 11544  2343                     __ptext4114:
 11545                           
 11546 ;; *************** function _setSw_Initialization *****************
 11547 ;; Defined at:
 11548 ;;		line 79 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Switch_B1.c"
 11549 ;; Parameters:    Size  Location     Type
 11550 ;;  sw              1    wreg     unsigned char 
 11551 ;; Auto vars:     Size  Location     Type
 11552 ;;  sw              1    4[BANK0 ] unsigned char 
 11553 ;; Return value:  Size  Location     Type
 11554 ;;		None               void
 11555 ;; Registers used:
 11556 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11557 ;; Tracked objects:
 11558 ;;		On entry : 0/0
 11559 ;;		On exit  : 0/0
 11560 ;;		Unchanged: 0/0
 11561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 11562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11563 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 11564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11565 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 11566 ;;Total ram usage:        1 bytes
 11567 ;; Hardware stack levels used:    1
 11568 ;; Hardware stack levels required when called:    6
 11569 ;; This function calls:
 11570 ;;		_setLED
 11571 ;; This function is called by:
 11572 ;;		_Switch_Initialization
 11573 ;; This function uses a non-reentrant model
 11574 ;;
 11575                           psect	text4114
 11576                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Switch_B1.c"
 11577                           	line	79
 11578                           	global	__size_of_setSw_Initialization
 11579  0013                     	__size_of_setSw_Initialization	equ	__end_of_setSw_Initialization-_setSw_Initialization
 11580                           	
 11581  2343                     _setSw_Initialization:	
 11582                           	opt	stack 8
 11583                           ; Regs used in _setSw_Initialization: [wreg+fsr1l-status,0+pclath+cstack]
 11584                           ;setSw_Initialization@sw stored from wreg
 11585  2343  0020               	movlb 0	; select bank0
 11586  2344  00A4               	movwf	(setSw_Initialization@sw)
 11587                           	line	80
 11588                           	
 11589  2345                     l25062:	
 11590                           ;Switch_B1.c: 80: setLED(sw,1);
 11591  2345  01A2               	clrf	(?_setLED)
 11592  2346  1403               	bsf	status,0
 11593  2347  0DA2               	rlf	(?_setLED),f
 11594  2348  0824               	movf	(setSw_Initialization@sw),w
 11595  2349  3193  23CF  31A3   	fcall	_setLED
 11596                           	line	82
 11597                           ;Switch_B1.c: 82: setLED(sw+1,1);
 11598  234C  0020               	movlb 0	; select bank0
 11599  234D  01A2               	clrf	(?_setLED)
 11600  234E  1403               	bsf	status,0
 11601  234F  0DA2               	rlf	(?_setLED),f
 11602  2350  0824               	movf	(setSw_Initialization@sw),w
 11603  2351  3E01               	addlw	01h
 11604  2352  3193  23CF  31A3   	fcall	_setLED
 11605                           	line	84
 11606                           	
 11607  2355                     l16445:	
 11608  2355  0008               	return
 11609                           	opt stack 0
 11610                           GLOBAL	__end_of_setSw_Initialization
 11611  2356                     	__end_of_setSw_Initialization:
 11612 ;; =============== function _setSw_Initialization ends ============
 11613                           
 11614                           	signat	_setSw_Initialization,4216
 11615                           	global	_setRFSW_Control
 11616                           psect	text4115,local,class=CODE,delta=2
 11617                           global __ptext4115
 11618  16A5                     __ptext4115:
 11619                           
 11620 ;; *************** function _setRFSW_Control *****************
 11621 ;; Defined at:
 11622 ;;		line 362 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
 11623 ;; Parameters:    Size  Location     Type
 11624 ;;  sw              1    wreg     unsigned char 
 11625 ;; Auto vars:     Size  Location     Type
 11626 ;;  sw              1   11[BANK0 ] unsigned char 
 11627 ;; Return value:  Size  Location     Type
 11628 ;;		None               void
 11629 ;; Registers used:
 11630 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11631 ;; Tracked objects:
 11632 ;;		On entry : 0/0
 11633 ;;		On exit  : 0/0
 11634 ;;		Unchanged: 0/0
 11635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 11636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11637 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 11638 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 11639 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 11640 ;;Total ram usage:        2 bytes
 11641 ;; Hardware stack levels used:    1
 11642 ;; Hardware stack levels required when called:    6
 11643 ;; This function calls:
 11644 ;;		_RfSWPointSelect
 11645 ;;		_setDelayOff_GO
 11646 ;;		_setSw_Status
 11647 ;;		_setDimmerLights_Trigger
 11648 ;;		_setDimmerLights_Switch
 11649 ;;		_setRF_DimmerLights
 11650 ;;		_setBuz
 11651 ;;		_setTxData
 11652 ;; This function is called by:
 11653 ;;		_setControl_Lights_Table
 11654 ;; This function uses a non-reentrant model
 11655 ;;
 11656                           psect	text4115
 11657                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
 11658                           	line	362
 11659                           	global	__size_of_setRFSW_Control
 11660  00A9                     	__size_of_setRFSW_Control	equ	__end_of_setRFSW_Control-_setRFSW_Control
 11661                           	
 11662  16A5                     _setRFSW_Control:	
 11663                           	opt	stack 5
 11664                           ; Regs used in _setRFSW_Control: [wreg+fsr1l-status,0+pclath+cstack]
 11665                           ;setRFSW_Control@sw stored from wreg
 11666  16A5  0020               	movlb 0	; select bank0
 11667  16A6  00AB               	movwf	(setRFSW_Control@sw)
 11668                           	line	363
 11669                           	
 11670  16A7                     l25024:	
 11671                           ;RF_Control_B1.c: 363: RfSWPointSelect(sw);
 11672  16A7  082B               	movf	(setRFSW_Control@sw),w
 11673  16A8  31A2  224A  3196   	fcall	_RfSWPointSelect
 11674                           	line	364
 11675                           	
 11676  16AB                     l25026:	
 11677                           ;RF_Control_B1.c: 364: if(!RFSW->Status)
 11678  16AB  0021               	movlb 1	; select bank1
 11679  16AC  083C               	movf	(_RFSW)^080h,w
 11680  16AD  0086               	movwf	fsr1l
 11681  16AE  0187               	clrf fsr1h	
 11682                           	
 11683  16AF  1801               	btfsc	indf1,0
 11684  16B0  2EB2               	goto	u9411
 11685  16B1  2EB3               	goto	u9410
 11686  16B2                     u9411:
 11687  16B2  2EF3               	goto	l25042
 11688  16B3                     u9410:
 11689                           	line	366
 11690                           	
 11691  16B3                     l25028:	
 11692                           ;RF_Control_B1.c: 365: {
 11693                           ;RF_Control_B1.c: 366: if(RF_Data[16] == 0x80)
 11694  16B3  0830               	movf	0+(_RF_Data)^080h+010h,w
 11695  16B4  3A80               	xorlw	080h&0ffh
 11696  16B5  1D03               	skipz
 11697  16B6  2EB8               	goto	u9421
 11698  16B7  2EB9               	goto	u9420
 11699  16B8                     u9421:
 11700  16B8  2EC8               	goto	l25032
 11701  16B9                     u9420:
 11702                           	line	368
 11703                           	
 11704  16B9                     l25030:	
 11705                           ;RF_Control_B1.c: 367: {
 11706                           ;RF_Control_B1.c: 368: setDelayOff_GO(sw,1,RF_Data[17]);
 11707  16B9  0020               	movlb 0	; select bank0
 11708  16BA  01A3               	clrf	(?_setDelayOff_GO)
 11709  16BB  1403               	bsf	status,0
 11710  16BC  0DA3               	rlf	(?_setDelayOff_GO),f
 11711  16BD  0021               	movlb 1	; select bank1
 11712  16BE  0831               	movf	0+(_RF_Data)^080h+011h,w
 11713  16BF  0020               	movlb 0	; select bank0
 11714  16C0  00AA               	movwf	(??_setRFSW_Control+0)+0
 11715  16C1  082A               	movf	(??_setRFSW_Control+0)+0,w
 11716  16C2  00A4               	movwf	0+(?_setDelayOff_GO)+01h
 11717  16C3  082B               	movf	(setRFSW_Control@sw),w
 11718  16C4  319F  270E  3196   	fcall	_setDelayOff_GO
 11719  16C7  2EC8               	goto	l25032
 11720                           	line	369
 11721                           	
 11722  16C8                     l15271:	
 11723                           	line	370
 11724                           	
 11725  16C8                     l25032:	
 11726                           ;RF_Control_B1.c: 369: }
 11727                           ;RF_Control_B1.c: 370: RFSW->Status=1;
 11728  16C8  0021               	movlb 1	; select bank1
 11729  16C9  083C               	movf	(_RFSW)^080h,w
 11730  16CA  0086               	movwf	fsr1l
 11731  16CB  0187               	clrf fsr1h	
 11732                           	
 11733  16CC  1401               	bsf	indf1,0
 11734                           	line	371
 11735                           	
 11736  16CD                     l25034:	
 11737                           ;RF_Control_B1.c: 371: setSw_Status(sw,1);
 11738  16CD  0020               	movlb 0	; select bank0
 11739  16CE  01A2               	clrf	(?_setSw_Status)
 11740  16CF  1403               	bsf	status,0
 11741  16D0  0DA2               	rlf	(?_setSw_Status),f
 11742  16D1  082B               	movf	(setRFSW_Control@sw),w
 11743  16D2  31A2  2287  3196   	fcall	_setSw_Status
 11744                           	line	373
 11745                           	
 11746  16D5                     l25036:	
 11747                           ;RF_Control_B1.c: 373: setDimmerLights_Trigger(sw,1);
 11748  16D5  0020               	movlb 0	; select bank0
 11749  16D6  01A2               	clrf	(?_setDimmerLights_Trigger)
 11750  16D7  1403               	bsf	status,0
 11751  16D8  0DA2               	rlf	(?_setDimmerLights_Trigger),f
 11752  16D9  082B               	movf	(setRFSW_Control@sw),w
 11753  16DA  31A2  22B7  3196   	fcall	_setDimmerLights_Trigger
 11754                           	line	374
 11755                           	
 11756  16DD                     l25038:	
 11757                           ;RF_Control_B1.c: 374: setDimmerLights_Switch(sw,1);
 11758  16DD  0020               	movlb 0	; select bank0
 11759  16DE  01A2               	clrf	(?_setDimmerLights_Switch)
 11760  16DF  1403               	bsf	status,0
 11761  16E0  0DA2               	rlf	(?_setDimmerLights_Switch),f
 11762  16E1  082B               	movf	(setRFSW_Control@sw),w
 11763  16E2  31A2  22C8  3196   	fcall	_setDimmerLights_Switch
 11764                           	line	376
 11765                           	
 11766  16E5                     l25040:	
 11767                           ;RF_Control_B1.c: 376: setRF_DimmerLights(sw,RFSW->Status);
 11768  16E5  0021               	movlb 1	; select bank1
 11769  16E6  083C               	movf	(_RFSW)^080h,w
 11770  16E7  0086               	movwf	fsr1l
 11771  16E8  0187               	clrf fsr1h	
 11772                           	
 11773  16E9  3000               	movlw	0
 11774  16EA  1801               	btfsc	indf1,0
 11775  16EB  3001               	movlw	1
 11776  16EC  0020               	movlb 0	; select bank0
 11777  16ED  00A0               	movwf	(?_setRF_DimmerLights)
 11778  16EE  082B               	movf	(setRFSW_Control@sw),w
 11779  16EF  3188  2001  3196   	fcall	_setRF_DimmerLights
 11780                           	line	377
 11781                           ;RF_Control_B1.c: 377: }
 11782  16F2  2F40               	goto	l25058
 11783                           	line	378
 11784                           	
 11785  16F3                     l15270:	
 11786                           	line	380
 11787                           	
 11788  16F3                     l25042:	
 11789                           ;RF_Control_B1.c: 378: else
 11790                           ;RF_Control_B1.c: 379: {
 11791                           ;RF_Control_B1.c: 380: if(RF_Data[16] == 0x80)
 11792  16F3  0021               	movlb 1	; select bank1
 11793  16F4  0830               	movf	0+(_RF_Data)^080h+010h,w
 11794  16F5  3A80               	xorlw	080h&0ffh
 11795  16F6  1D03               	skipz
 11796  16F7  2EF9               	goto	u9431
 11797  16F8  2EFA               	goto	u9430
 11798  16F9                     u9431:
 11799  16F9  2F11               	goto	l25046
 11800  16FA                     u9430:
 11801                           	line	382
 11802                           	
 11803  16FA                     l25044:	
 11804                           ;RF_Control_B1.c: 381: {
 11805                           ;RF_Control_B1.c: 382: setDelayOff_GO(sw,1,RF_Data[17]);
 11806  16FA  0020               	movlb 0	; select bank0
 11807  16FB  01A3               	clrf	(?_setDelayOff_GO)
 11808  16FC  1403               	bsf	status,0
 11809  16FD  0DA3               	rlf	(?_setDelayOff_GO),f
 11810  16FE  0021               	movlb 1	; select bank1
 11811  16FF  0831               	movf	0+(_RF_Data)^080h+011h,w
 11812  1700  0020               	movlb 0	; select bank0
 11813  1701  00AA               	movwf	(??_setRFSW_Control+0)+0
 11814  1702  082A               	movf	(??_setRFSW_Control+0)+0,w
 11815  1703  00A4               	movwf	0+(?_setDelayOff_GO)+01h
 11816  1704  082B               	movf	(setRFSW_Control@sw),w
 11817  1705  319F  270E  3196   	fcall	_setDelayOff_GO
 11818                           	line	383
 11819                           ;RF_Control_B1.c: 383: setRF_DimmerLights(sw,1);
 11820  1708  0020               	movlb 0	; select bank0
 11821  1709  01A0               	clrf	(?_setRF_DimmerLights)
 11822  170A  1403               	bsf	status,0
 11823  170B  0DA0               	rlf	(?_setRF_DimmerLights),f
 11824  170C  082B               	movf	(setRFSW_Control@sw),w
 11825  170D  3188  2001  3196   	fcall	_setRF_DimmerLights
 11826                           	line	384
 11827                           ;RF_Control_B1.c: 384: }
 11828  1710  2F40               	goto	l25058
 11829                           	line	385
 11830                           	
 11831  1711                     l15273:	
 11832                           	line	387
 11833                           	
 11834  1711                     l25046:	
 11835                           ;RF_Control_B1.c: 385: else
 11836                           ;RF_Control_B1.c: 386: {
 11837                           ;RF_Control_B1.c: 387: RFSW->Status=0;
 11838  1711  0021               	movlb 1	; select bank1
 11839  1712  083C               	movf	(_RFSW)^080h,w
 11840  1713  0086               	movwf	fsr1l
 11841  1714  0187               	clrf fsr1h	
 11842                           	
 11843  1715  1001               	bcf	indf1,0
 11844                           	line	388
 11845                           	
 11846  1716                     l25048:	
 11847                           ;RF_Control_B1.c: 388: setSw_Status(sw,0);
 11848  1716  0020               	movlb 0	; select bank0
 11849  1717  01A2               	clrf	(?_setSw_Status)
 11850  1718  082B               	movf	(setRFSW_Control@sw),w
 11851  1719  31A2  2287  3196   	fcall	_setSw_Status
 11852                           	line	390
 11853                           	
 11854  171C                     l25050:	
 11855                           ;RF_Control_B1.c: 390: setDimmerLights_Trigger(sw,1);
 11856  171C  0020               	movlb 0	; select bank0
 11857  171D  01A2               	clrf	(?_setDimmerLights_Trigger)
 11858  171E  1403               	bsf	status,0
 11859  171F  0DA2               	rlf	(?_setDimmerLights_Trigger),f
 11860  1720  082B               	movf	(setRFSW_Control@sw),w
 11861  1721  31A2  22B7  3196   	fcall	_setDimmerLights_Trigger
 11862                           	line	391
 11863                           	
 11864  1724                     l25052:	
 11865                           ;RF_Control_B1.c: 391: setDimmerLights_Switch(sw,RFSW->Status);
 11866  1724  0021               	movlb 1	; select bank1
 11867  1725  083C               	movf	(_RFSW)^080h,w
 11868  1726  0086               	movwf	fsr1l
 11869  1727  0187               	clrf fsr1h	
 11870                           	
 11871  1728  3000               	movlw	0
 11872  1729  1801               	btfsc	indf1,0
 11873  172A  3001               	movlw	1
 11874  172B  0020               	movlb 0	; select bank0
 11875  172C  00A2               	movwf	(?_setDimmerLights_Switch)
 11876  172D  082B               	movf	(setRFSW_Control@sw),w
 11877  172E  31A2  22C8  3196   	fcall	_setDimmerLights_Switch
 11878                           	line	393
 11879                           	
 11880  1731                     l25054:	
 11881                           ;RF_Control_B1.c: 393: setDelayOff_GO(sw,0,0);
 11882  1731  0020               	movlb 0	; select bank0
 11883  1732  01A3               	clrf	(?_setDelayOff_GO)
 11884  1733  01A4               	clrf	0+(?_setDelayOff_GO)+01h
 11885  1734  082B               	movf	(setRFSW_Control@sw),w
 11886  1735  319F  270E  3196   	fcall	_setDelayOff_GO
 11887                           	line	394
 11888                           	
 11889  1738                     l25056:	
 11890                           ;RF_Control_B1.c: 394: setRF_DimmerLights(sw,0);
 11891  1738  0020               	movlb 0	; select bank0
 11892  1739  01A0               	clrf	(?_setRF_DimmerLights)
 11893  173A  082B               	movf	(setRFSW_Control@sw),w
 11894  173B  3188  2001  3196   	fcall	_setRF_DimmerLights
 11895  173E  2F40               	goto	l25058
 11896                           	line	395
 11897                           	
 11898  173F                     l15274:	
 11899  173F  2F40               	goto	l25058
 11900                           	line	396
 11901                           	
 11902  1740                     l15272:	
 11903                           	line	397
 11904                           	
 11905  1740                     l25058:	
 11906                           ;RF_Control_B1.c: 395: }
 11907                           ;RF_Control_B1.c: 396: }
 11908                           ;RF_Control_B1.c: 397: setBuz(1,100);
 11909  1740  3064               	movlw	low(064h)
 11910  1741  0020               	movlb 0	; select bank0
 11911  1742  00A6               	movwf	(?_setBuz)
 11912  1743  3000               	movlw	high(064h)
 11913  1744  00A7               	movwf	((?_setBuz))+1
 11914  1745  3001               	movlw	(01h)
 11915  1746  3192  22C6  3196   	fcall	_setBuz
 11916                           	line	398
 11917                           	
 11918  1749                     l25060:	
 11919                           ;RF_Control_B1.c: 398: setTxData(1);
 11920  1749  3001               	movlw	(01h)
 11921  174A  318B  236C  3196   	fcall	_setTxData
 11922                           	line	399
 11923                           	
 11924  174D                     l15275:	
 11925  174D  0008               	return
 11926                           	opt stack 0
 11927                           GLOBAL	__end_of_setRFSW_Control
 11928  174E                     	__end_of_setRFSW_Control:
 11929 ;; =============== function _setRFSW_Control ends ============
 11930                           
 11931                           	signat	_setRFSW_Control,4216
 11932                           	global	_setLog_Code
 11933                           psect	text4116,local,class=CODE,delta=2
 11934                           global __ptext4116
 11935  1A74                     __ptext4116:
 11936                           
 11937 ;; *************** function _setLog_Code *****************
 11938 ;; Defined at:
 11939 ;;		line 250 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
 11940 ;; Parameters:    Size  Location     Type
 11941 ;;  rf              1    wreg     unsigned char 
 11942 ;; Auto vars:     Size  Location     Type
 11943 ;;  rf              1   11[BANK0 ] unsigned char 
 11944 ;; Return value:  Size  Location     Type
 11945 ;;		None               void
 11946 ;; Registers used:
 11947 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11948 ;; Tracked objects:
 11949 ;;		On entry : 0/0
 11950 ;;		On exit  : 0/0
 11951 ;;		Unchanged: 0/0
 11952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 11953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11954 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 11955 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 11956 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 11957 ;;Total ram usage:        2 bytes
 11958 ;; Hardware stack levels used:    1
 11959 ;; Hardware stack levels required when called:    6
 11960 ;; This function calls:
 11961 ;;		_RfPointSelect
 11962 ;;		_setBuz
 11963 ;; This function is called by:
 11964 ;;		_getRxData
 11965 ;; This function uses a non-reentrant model
 11966 ;;
 11967                           psect	text4116
 11968                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
 11969                           	line	250
 11970                           	global	__size_of_setLog_Code
 11971  004B                     	__size_of_setLog_Code	equ	__end_of_setLog_Code-_setLog_Code
 11972                           	
 11973  1A74                     _setLog_Code:	
 11974                           	opt	stack 6
 11975                           ; Regs used in _setLog_Code: [wreg+fsr1l-status,0+pclath+cstack]
 11976                           ;setLog_Code@rf stored from wreg
 11977  1A74  0020               	movlb 0	; select bank0
 11978  1A75  00AB               	movwf	(setLog_Code@rf)
 11979                           	line	251
 11980                           	
 11981  1A76                     l25008:	
 11982                           ;RF_Control_B1.c: 251: RfPointSelect(rf);
 11983  1A76  082B               	movf	(setLog_Code@rf),w
 11984  1A77  31A2  2202  319A   	fcall	_RfPointSelect
 11985                           	line	252
 11986                           	
 11987  1A7A                     l25010:	
 11988                           ;RF_Control_B1.c: 252: Product->Data[12]=RF_Data[12];
 11989  1A7A  0021               	movlb 1	; select bank1
 11990  1A7B  082C               	movf	0+(_RF_Data)^080h+0Ch,w
 11991  1A7C  0020               	movlb 0	; select bank0
 11992  1A7D  00AA               	movwf	(??_setLog_Code+0)+0
 11993  1A7E  086F               	movf	(_Product),w
 11994  1A7F  3E0C               	addlw	0Ch
 11995  1A80  0086               	movwf	fsr1l
 11996  1A81  3001               	movlw 1	; select bank2/3
 11997  1A82  0087               	movwf fsr1h	
 11998                           	
 11999  1A83  082A               	movf	(??_setLog_Code+0)+0,w
 12000  1A84  0081               	movwf	indf1
 12001                           	line	253
 12002                           	
 12003  1A85                     l25012:	
 12004                           ;RF_Control_B1.c: 253: Product->Data[13]=RF_Data[13];
 12005  1A85  0021               	movlb 1	; select bank1
 12006  1A86  082D               	movf	0+(_RF_Data)^080h+0Dh,w
 12007  1A87  0020               	movlb 0	; select bank0
 12008  1A88  00AA               	movwf	(??_setLog_Code+0)+0
 12009  1A89  086F               	movf	(_Product),w
 12010  1A8A  3E0D               	addlw	0Dh
 12011  1A8B  0086               	movwf	fsr1l
 12012  1A8C  3001               	movlw 1	; select bank2/3
 12013  1A8D  0087               	movwf fsr1h	
 12014                           	
 12015  1A8E  082A               	movf	(??_setLog_Code+0)+0,w
 12016  1A8F  0081               	movwf	indf1
 12017                           	line	254
 12018                           	
 12019  1A90                     l25014:	
 12020                           ;RF_Control_B1.c: 254: Product->Data[14]=RF_Data[14];
 12021  1A90  0021               	movlb 1	; select bank1
 12022  1A91  082E               	movf	0+(_RF_Data)^080h+0Eh,w
 12023  1A92  0020               	movlb 0	; select bank0
 12024  1A93  00AA               	movwf	(??_setLog_Code+0)+0
 12025  1A94  086F               	movf	(_Product),w
 12026  1A95  3E0E               	addlw	0Eh
 12027  1A96  0086               	movwf	fsr1l
 12028  1A97  3001               	movlw 1	; select bank2/3
 12029  1A98  0087               	movwf fsr1h	
 12030                           	
 12031  1A99  082A               	movf	(??_setLog_Code+0)+0,w
 12032  1A9A  0081               	movwf	indf1
 12033                           	line	255
 12034                           	
 12035  1A9B                     l25016:	
 12036                           ;RF_Control_B1.c: 255: setBuz(1,100);
 12037  1A9B  3064               	movlw	low(064h)
 12038  1A9C  00A6               	movwf	(?_setBuz)
 12039  1A9D  3000               	movlw	high(064h)
 12040  1A9E  00A7               	movwf	((?_setBuz))+1
 12041  1A9F  3001               	movlw	(01h)
 12042  1AA0  3192  22C6  319A   	fcall	_setBuz
 12043                           	line	256
 12044                           	
 12045  1AA3                     l25018:	
 12046                           ;RF_Control_B1.c: 256: RF->Learn=0;
 12047  1AA3  087B               	movf	(_RF),w
 12048  1AA4  0086               	movwf	fsr1l
 12049  1AA5  0187               	clrf fsr1h	
 12050                           	
 12051  1AA6  1301               	bcf	indf1,6
 12052                           	line	257
 12053                           	
 12054  1AA7                     l25020:	
 12055                           ;RF_Control_B1.c: 257: if(TMain->First)
 12056  1AA7  087D               	movf	(_TMain),w
 12057  1AA8  3E03               	addlw	03h
 12058  1AA9  0086               	movwf	fsr1l
 12059  1AAA  3001               	movlw 1	; select bank2/3
 12060  1AAB  0087               	movwf fsr1h	
 12061                           	
 12062  1AAC  1C81               	btfss	indf1,1
 12063  1AAD  2AAF               	goto	u9401
 12064  1AAE  2AB0               	goto	u9400
 12065  1AAF                     u9401:
 12066  1AAF  2AB7               	goto	l15252
 12067  1AB0                     u9400:
 12068                           	line	259
 12069                           	
 12070  1AB0                     l25022:	
 12071                           ;RF_Control_B1.c: 258: {
 12072                           ;RF_Control_B1.c: 259: Memory->LoopSave=1;
 12073  1AB0  0021               	movlb 1	; select bank1
 12074  1AB1  086A               	movf	(_Memory)^080h,w
 12075  1AB2  3E22               	addlw	022h
 12076  1AB3  0086               	movwf	fsr1l
 12077  1AB4  3001               	movlw 1	; select bank2/3
 12078  1AB5  0087               	movwf fsr1h	
 12079                           	
 12080  1AB6  1501               	bsf	indf1,2
 12081                           	line	260
 12082                           	
 12083  1AB7                     l15252:	
 12084                           	line	261
 12085                           ;RF_Control_B1.c: 260: }
 12086                           ;RF_Control_B1.c: 261: Memory->Modify=1;
 12087  1AB7  0021               	movlb 1	; select bank1
 12088  1AB8  086A               	movf	(_Memory)^080h,w
 12089  1AB9  3E22               	addlw	022h
 12090  1ABA  0086               	movwf	fsr1l
 12091  1ABB  3001               	movlw 1	; select bank2/3
 12092  1ABC  0087               	movwf fsr1h	
 12093                           	
 12094  1ABD  1401               	bsf	indf1,0
 12095                           	line	262
 12096                           	
 12097  1ABE                     l15253:	
 12098  1ABE  0008               	return
 12099                           	opt stack 0
 12100                           GLOBAL	__end_of_setLog_Code
 12101  1ABF                     	__end_of_setLog_Code:
 12102 ;; =============== function _setLog_Code ends ============
 12103                           
 12104                           	signat	_setLog_Code,4216
 12105                           	global	_RF_RxDisable
 12106                           psect	text4117,local,class=CODE,delta=2
 12107                           global __ptext4117
 12108  25AB                     __ptext4117:
 12109                           
 12110 ;; *************** function _RF_RxDisable *****************
 12111 ;; Defined at:
 12112 ;;		line 192 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
 12113 ;; Parameters:    Size  Location     Type
 12114 ;;  rf              1    wreg     unsigned char 
 12115 ;; Auto vars:     Size  Location     Type
 12116 ;;  rf              1    4[BANK0 ] unsigned char 
 12117 ;; Return value:  Size  Location     Type
 12118 ;;		None               void
 12119 ;; Registers used:
 12120 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12121 ;; Tracked objects:
 12122 ;;		On entry : 0/0
 12123 ;;		On exit  : 0/0
 12124 ;;		Unchanged: 0/0
 12125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 12126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 12127 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 12128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 12129 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 12130 ;;Total ram usage:        1 bytes
 12131 ;; Hardware stack levels used:    1
 12132 ;; Hardware stack levels required when called:    6
 12133 ;; This function calls:
 12134 ;;		_RfPointSelect
 12135 ;;		_CC2500_WriteCommand
 12136 ;;		_setINT_GO
 12137 ;; This function is called by:
 12138 ;;		_setRF_Main
 12139 ;; This function uses a non-reentrant model
 12140 ;;
 12141                           psect	text4117
 12142                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
 12143                           	line	192
 12144                           	global	__size_of_RF_RxDisable
 12145  002C                     	__size_of_RF_RxDisable	equ	__end_of_RF_RxDisable-_RF_RxDisable
 12146                           	
 12147  25AB                     _RF_RxDisable:	
 12148                           	opt	stack 7
 12149                           ; Regs used in _RF_RxDisable: [wreg+fsr1l-status,0+pclath+cstack]
 12150                           ;RF_RxDisable@rf stored from wreg
 12151  25AB  0020               	movlb 0	; select bank0
 12152  25AC  00A4               	movwf	(RF_RxDisable@rf)
 12153                           	line	193
 12154                           	
 12155  25AD                     l24996:	
 12156                           ;RF_Control_B1.c: 193: RfPointSelect(rf);
 12157  25AD  0824               	movf	(RF_RxDisable@rf),w
 12158  25AE  31A2  2202  31A5   	fcall	_RfPointSelect
 12159                           	line	195
 12160                           	
 12161  25B1                     l24998:	
 12162                           ;RF_Control_B1.c: 195: if(RF->RxStatus)
 12163  25B1  087B               	movf	(_RF),w
 12164  25B2  0086               	movwf	fsr1l
 12165  25B3  0187               	clrf fsr1h	
 12166                           	
 12167  25B4  1D81               	btfss	indf1,3
 12168  25B5  2DB7               	goto	u9391
 12169  25B6  2DB8               	goto	u9390
 12170  25B7                     u9391:
 12171  25B7  2DD6               	goto	l15235
 12172  25B8                     u9390:
 12173                           	line	197
 12174                           	
 12175  25B8                     l25000:	
 12176                           ;RF_Control_B1.c: 196: {
 12177                           ;RF_Control_B1.c: 197: RF->RxStatus=0;
 12178  25B8  087B               	movf	(_RF),w
 12179  25B9  0086               	movwf	fsr1l
 12180  25BA  0187               	clrf fsr1h	
 12181                           	
 12182  25BB  1181               	bcf	indf1,3
 12183                           	line	198
 12184                           ;RF_Control_B1.c: 198: RF->ReceiveGO=0;
 12185  25BC  087B               	movf	(_RF),w
 12186  25BD  0086               	movwf	fsr1l
 12187  25BE  0187               	clrf fsr1h	
 12188                           	
 12189  25BF  1081               	bcf	indf1,1
 12190                           	line	199
 12191                           ;RF_Control_B1.c: 199: RF->DebounceTime=0;
 12192  25C0  087B               	movf	(_RF),w
 12193  25C1  3E01               	addlw	01h
 12194  25C2  0086               	movwf	fsr1l
 12195  25C3  0187               	clrf fsr1h	
 12196                           	
 12197  25C4  0181               	clrf	indf1
 12198                           	line	200
 12199                           ;RF_Control_B1.c: 200: RF->Debounce=0;
 12200  25C5  087B               	movf	(_RF),w
 12201  25C6  0086               	movwf	fsr1l
 12202  25C7  0187               	clrf fsr1h	
 12203                           	
 12204  25C8  1281               	bcf	indf1,5
 12205                           	line	201
 12206                           	
 12207  25C9                     l25002:	
 12208                           ;RF_Control_B1.c: 201: CC2500_WriteCommand(0x36);
 12209  25C9  3036               	movlw	(036h)
 12210  25CA  31A3  236B  31A5   	fcall	_CC2500_WriteCommand
 12211                           	line	202
 12212                           	
 12213  25CD                     l25004:	
 12214                           ;RF_Control_B1.c: 202: CC2500_WriteCommand(0x3A);
 12215  25CD  303A               	movlw	(03Ah)
 12216  25CE  31A3  236B  31A5   	fcall	_CC2500_WriteCommand
 12217                           	line	203
 12218                           	
 12219  25D1                     l25006:	
 12220                           ;RF_Control_B1.c: 203: setINT_GO(0);
 12221  25D1  3000               	movlw	(0)
 12222  25D2  31A1  2119  31A5   	fcall	_setINT_GO
 12223  25D5  2DD6               	goto	l15235
 12224                           	line	204
 12225                           	
 12226  25D6                     l15234:	
 12227                           	line	205
 12228                           	
 12229  25D6                     l15235:	
 12230  25D6  0008               	return
 12231                           	opt stack 0
 12232                           GLOBAL	__end_of_RF_RxDisable
 12233  25D7                     	__end_of_RF_RxDisable:
 12234 ;; =============== function _RF_RxDisable ends ============
 12235                           
 12236                           	signat	_RF_RxDisable,4216
 12237                           	global	_Flash_Memory_Erasing
 12238                           psect	text4118,local,class=CODE,delta=2
 12239                           global __ptext4118
 12240  21CC                     __ptext4118:
 12241                           
 12242 ;; *************** function _Flash_Memory_Erasing *****************
 12243 ;; Defined at:
 12244 ;;		line 539 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_16f1518_B1.c"
 12245 ;; Parameters:    Size  Location     Type
 12246 ;;		None
 12247 ;; Auto vars:     Size  Location     Type
 12248 ;;		None
 12249 ;; Return value:  Size  Location     Type
 12250 ;;		None               void
 12251 ;; Registers used:
 12252 ;;		wreg, status,2, status,0, pclath, cstack
 12253 ;; Tracked objects:
 12254 ;;		On entry : 0/0
 12255 ;;		On exit  : 0/0
 12256 ;;		Unchanged: 0/0
 12257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 12258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 12259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 12260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 12261 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 12262 ;;Total ram usage:        0 bytes
 12263 ;; Hardware stack levels used:    1
 12264 ;; Hardware stack levels required when called:    5
 12265 ;; This function calls:
 12266 ;;		_Flash_Memory_Unlock
 12267 ;; This function is called by:
 12268 ;;		_Flash_Memory_Modify
 12269 ;; This function uses a non-reentrant model
 12270 ;;
 12271                           psect	text4118
 12272                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_16f1518_B1.c"
 12273                           	line	539
 12274                           	global	__size_of_Flash_Memory_Erasing
 12275  000D                     	__size_of_Flash_Memory_Erasing	equ	__end_of_Flash_Memory_Erasing-_Flash_Memory_Erasing
 12276                           	
 12277  21CC                     _Flash_Memory_Erasing:	
 12278                           	opt	stack 8
 12279                           ; Regs used in _Flash_Memory_Erasing: [wreg+status,2+status,0+pclath+cstack]
 12280                           	line	540
 12281                           	
 12282  21CC                     l24982:	
 12283                           ;MCU_16f1518_B1.c: 540: CFGS=0;
 12284  21CC  0023               	movlb 3	; select bank3
 12285  21CD  1315               	bcf	(3246/8)^0180h,(3246)&7
 12286                           	line	541
 12287                           	
 12288  21CE                     l24984:	
 12289                           ;MCU_16f1518_B1.c: 541: PMADRH=0x30;
 12290  21CE  3030               	movlw	(030h)
 12291  21CF  0092               	movwf	(402)^0180h	;volatile
 12292                           	line	542
 12293                           	
 12294  21D0                     l24986:	
 12295                           ;MCU_16f1518_B1.c: 542: PMADRL=0x00;
 12296  21D0  0191               	clrf	(401)^0180h	;volatile
 12297                           	line	543
 12298                           	
 12299  21D1                     l24988:	
 12300                           ;MCU_16f1518_B1.c: 543: FREE=1;
 12301  21D1  1615               	bsf	(3244/8)^0180h,(3244)&7
 12302                           	line	544
 12303                           	
 12304  21D2                     l24990:	
 12305                           ;MCU_16f1518_B1.c: 544: WREN=1;
 12306  21D2  1515               	bsf	(3242/8)^0180h,(3242)&7
 12307                           	line	545
 12308                           	
 12309  21D3                     l24992:	
 12310                           ;MCU_16f1518_B1.c: 545: Flash_Memory_Unlock();
 12311  21D3  31A1  2106  31A1   	fcall	_Flash_Memory_Unlock
 12312                           	line	546
 12313                           	
 12314  21D6                     l24994:	
 12315                           ;MCU_16f1518_B1.c: 546: WREN=0;
 12316  21D6  0023               	movlb 3	; select bank3
 12317  21D7  1115               	bcf	(3242/8)^0180h,(3242)&7
 12318                           	line	547
 12319                           	
 12320  21D8                     l9414:	
 12321  21D8  0008               	return
 12322                           	opt stack 0
 12323                           GLOBAL	__end_of_Flash_Memory_Erasing
 12324  21D9                     	__end_of_Flash_Memory_Erasing:
 12325 ;; =============== function _Flash_Memory_Erasing ends ============
 12326                           
 12327                           	signat	_Flash_Memory_Erasing,88
 12328                           	global	_Flash_Memory_Write
 12329                           psect	text4119,local,class=CODE,delta=2
 12330                           global __ptext4119
 12331  2756                     __ptext4119:
 12332                           
 12333 ;; *************** function _Flash_Memory_Write *****************
 12334 ;; Defined at:
 12335 ;;		line 519 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_16f1518_B1.c"
 12336 ;; Parameters:    Size  Location     Type
 12337 ;;		None
 12338 ;; Auto vars:     Size  Location     Type
 12339 ;;  i               1    1[BANK0 ] unsigned char 
 12340 ;; Return value:  Size  Location     Type
 12341 ;;		None               void
 12342 ;; Registers used:
 12343 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12344 ;; Tracked objects:
 12345 ;;		On entry : 0/0
 12346 ;;		On exit  : 0/0
 12347 ;;		Unchanged: 0/0
 12348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 12349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 12350 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 12351 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 12352 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 12353 ;;Total ram usage:        2 bytes
 12354 ;; Hardware stack levels used:    1
 12355 ;; Hardware stack levels required when called:    5
 12356 ;; This function calls:
 12357 ;;		_Flash_Memory_Unlock
 12358 ;; This function is called by:
 12359 ;;		_Flash_Memory_Initialization
 12360 ;;		_Flash_Memory_Modify
 12361 ;; This function uses a non-reentrant model
 12362 ;;
 12363                           psect	text4119
 12364                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_16f1518_B1.c"
 12365                           	line	519
 12366                           	global	__size_of_Flash_Memory_Write
 12367  0038                     	__size_of_Flash_Memory_Write	equ	__end_of_Flash_Memory_Write-_Flash_Memory_Write
 12368                           	
 12369  2756                     _Flash_Memory_Write:	
 12370                           	opt	stack 8
 12371                           ; Regs used in _Flash_Memory_Write: [wreg+fsr1l-status,0+pclath+cstack]
 12372                           	line	521
 12373                           	
 12374  2756                     l24950:	
 12375                           ;MCU_16f1518_B1.c: 520: char i;
 12376                           ;MCU_16f1518_B1.c: 521: CFGS=0;
 12377  2756  0023               	movlb 3	; select bank3
 12378  2757  1315               	bcf	(3246/8)^0180h,(3246)&7
 12379                           	line	522
 12380                           	
 12381  2758                     l24952:	
 12382                           ;MCU_16f1518_B1.c: 522: PMADRH=0x30;
 12383  2758  3030               	movlw	(030h)
 12384  2759  0092               	movwf	(402)^0180h	;volatile
 12385                           	line	523
 12386                           	
 12387  275A                     l24954:	
 12388                           ;MCU_16f1518_B1.c: 523: PMDATH=0;
 12389  275A  0194               	clrf	(404)^0180h	;volatile
 12390                           	line	524
 12391                           	
 12392  275B                     l24956:	
 12393                           ;MCU_16f1518_B1.c: 524: FREE=0;
 12394  275B  1215               	bcf	(3244/8)^0180h,(3244)&7
 12395                           	line	525
 12396                           	
 12397  275C                     l24958:	
 12398                           ;MCU_16f1518_B1.c: 525: LWLO=1;
 12399  275C  1695               	bsf	(3245/8)^0180h,(3245)&7
 12400                           	line	526
 12401                           	
 12402  275D                     l24960:	
 12403                           ;MCU_16f1518_B1.c: 526: WREN=1;
 12404  275D  1515               	bsf	(3242/8)^0180h,(3242)&7
 12405                           	line	527
 12406                           	
 12407  275E                     l24962:	
 12408                           ;MCU_16f1518_B1.c: 527: for(i=0 ; i<32 ; i++)
 12409  275E  0020               	movlb 0	; select bank0
 12410  275F  01A1               	clrf	(Flash_Memory_Write@i)
 12411                           	
 12412  2760                     l24964:	
 12413  2760  3020               	movlw	(020h)
 12414  2761  0221               	subwf	(Flash_Memory_Write@i),w
 12415  2762  1C03               	skipc
 12416  2763  2F65               	goto	u9371
 12417  2764  2F66               	goto	u9370
 12418  2765                     u9371:
 12419  2765  2F68               	goto	l24968
 12420  2766                     u9370:
 12421  2766  2F86               	goto	l9410
 12422                           	
 12423  2767                     l24966:	
 12424  2767  2F86               	goto	l9410
 12425                           	line	528
 12426                           	
 12427  2768                     l9409:	
 12428                           	line	529
 12429                           	
 12430  2768                     l24968:	
 12431                           ;MCU_16f1518_B1.c: 528: {
 12432                           ;MCU_16f1518_B1.c: 529: PMADRL=i;
 12433  2768  0821               	movf	(Flash_Memory_Write@i),w
 12434  2769  0023               	movlb 3	; select bank3
 12435  276A  0091               	movwf	(401)^0180h	;volatile
 12436                           	line	530
 12437                           	
 12438  276B                     l24970:	
 12439                           ;MCU_16f1518_B1.c: 530: PMDATL=Memory->Data[i];
 12440  276B  0020               	movlb 0	; select bank0
 12441  276C  0821               	movf	(Flash_Memory_Write@i),w
 12442  276D  0021               	movlb 1	; select bank1
 12443  276E  076A               	addwf	(_Memory)^080h,w
 12444  276F  0020               	movlb 0	; select bank0
 12445  2770  00A0               	movwf	(??_Flash_Memory_Write+0)+0
 12446  2771  0820               	movf	0+(??_Flash_Memory_Write+0)+0,w
 12447  2772  0086               	movwf	fsr1l
 12448  2773  3001               	movlw 1	; select bank2/3
 12449  2774  0087               	movwf fsr1h	
 12450                           	
 12451  2775  0801               	movf	indf1,w
 12452  2776  0023               	movlb 3	; select bank3
 12453  2777  0093               	movwf	(403)^0180h	;volatile
 12454                           	line	531
 12455                           	
 12456  2778                     l24972:	
 12457                           ;MCU_16f1518_B1.c: 531: Flash_Memory_Unlock();
 12458  2778  31A1  2106  31A7   	fcall	_Flash_Memory_Unlock
 12459                           	line	527
 12460                           	
 12461  277B                     l24974:	
 12462  277B  3001               	movlw	(01h)
 12463  277C  0020               	movlb 0	; select bank0
 12464  277D  00A0               	movwf	(??_Flash_Memory_Write+0)+0
 12465  277E  0820               	movf	(??_Flash_Memory_Write+0)+0,w
 12466  277F  07A1               	addwf	(Flash_Memory_Write@i),f
 12467                           	
 12468  2780                     l24976:	
 12469  2780  3020               	movlw	(020h)
 12470  2781  0221               	subwf	(Flash_Memory_Write@i),w
 12471  2782  1C03               	skipc
 12472  2783  2F85               	goto	u9381
 12473  2784  2F86               	goto	u9380
 12474  2785                     u9381:
 12475  2785  2F68               	goto	l24968
 12476  2786                     u9380:
 12477                           	
 12478  2786                     l9410:	
 12479                           	line	533
 12480                           ;MCU_16f1518_B1.c: 532: }
 12481                           ;MCU_16f1518_B1.c: 533: LWLO=0;
 12482  2786  0023               	movlb 3	; select bank3
 12483  2787  1295               	bcf	(3245/8)^0180h,(3245)&7
 12484                           	line	534
 12485                           	
 12486  2788                     l24978:	
 12487                           ;MCU_16f1518_B1.c: 534: Flash_Memory_Unlock();
 12488  2788  31A1  2106  31A7   	fcall	_Flash_Memory_Unlock
 12489                           	line	535
 12490                           	
 12491  278B                     l24980:	
 12492                           ;MCU_16f1518_B1.c: 535: WREN=0;
 12493  278B  0023               	movlb 3	; select bank3
 12494  278C  1115               	bcf	(3242/8)^0180h,(3242)&7
 12495                           	line	536
 12496                           	
 12497  278D                     l9411:	
 12498  278D  0008               	return
 12499                           	opt stack 0
 12500                           GLOBAL	__end_of_Flash_Memory_Write
 12501  278E                     	__end_of_Flash_Memory_Write:
 12502 ;; =============== function _Flash_Memory_Write ends ============
 12503                           
 12504                           	signat	_Flash_Memory_Write,88
 12505                           	global	_MainT
 12506                           psect	text4120,local,class=CODE,delta=2
 12507                           global __ptext4120
 12508  14DD                     __ptext4120:
 12509                           
 12510 ;; *************** function _MainT *****************
 12511 ;; Defined at:
 12512 ;;		line 104 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\main.c"
 12513 ;; Parameters:    Size  Location     Type
 12514 ;;		None
 12515 ;; Auto vars:     Size  Location     Type
 12516 ;;		None
 12517 ;; Return value:  Size  Location     Type
 12518 ;;		None               void
 12519 ;; Registers used:
 12520 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12521 ;; Tracked objects:
 12522 ;;		On entry : 0/0
 12523 ;;		On exit  : 0/0
 12524 ;;		Unchanged: 0/0
 12525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 12526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 12527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 12528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 12529 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 12530 ;;Total ram usage:        0 bytes
 12531 ;; Hardware stack levels used:    1
 12532 ;; Hardware stack levels required when called:    6
 12533 ;; This function calls:
 12534 ;;		_setTemp_Enable
 12535 ;;		_setLoad_Enable
 12536 ;;		_setBuz
 12537 ;;		_setSw_Enable
 12538 ;;		_setRF_Enable
 12539 ;; This function is called by:
 12540 ;;		_main
 12541 ;; This function uses a non-reentrant model
 12542 ;;
 12543                           psect	text4120
 12544                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\main.c"
 12545                           	line	104
 12546                           	global	__size_of_MainT
 12547  0089                     	__size_of_MainT	equ	__end_of_MainT-_MainT
 12548                           	
 12549  14DD                     _MainT:	
 12550                           	opt	stack 9
 12551                           ; Regs used in _MainT: [wreg+fsr1l-status,0+pclath+cstack]
 12552                           	line	106
 12553                           	
 12554  14DD                     l24924:	
 12555                           ;main.c: 106: if(!TMain->PowerON)
 12556  14DD  087D               	movf	(_TMain),w
 12557  14DE  0086               	movwf	fsr1l
 12558  14DF  3001               	movlw 1	; select bank2/3
 12559  14E0  0087               	movwf fsr1h	
 12560                           	
 12561  14E1  1801               	btfsc	indf1,0
 12562  14E2  2CE4               	goto	u9331
 12563  14E3  2CE5               	goto	u9330
 12564  14E4                     u9331:
 12565  14E4  2D31               	goto	l24940
 12566  14E5                     u9330:
 12567                           	line	108
 12568                           	
 12569  14E5                     l24926:	
 12570                           ;main.c: 107: {
 12571                           ;main.c: 108: TMain->PowerCount++;
 12572  14E5  087D               	movf	(_TMain),w
 12573  14E6  3E01               	addlw	01h
 12574  14E7  0086               	movwf	fsr1l
 12575  14E8  3001               	movlw 1	; select bank2/3
 12576  14E9  0087               	movwf fsr1h	
 12577                           	
 12578  14EA  3001               	movlw	01h
 12579  14EB  0781               	addwf	indf1,f
 12580  14EC  3141               	addfsr	fsr1,1
 12581  14ED  1803               	skipnc
 12582  14EE  0A81               	incf	indf1,f
 12583                           	line	109
 12584                           	
 12585  14EF                     l24928:	
 12586                           ;main.c: 109: if(TMain->PowerCount == 150)
 12587  14EF  087D               	movf	(_TMain),w
 12588  14F0  3E01               	addlw	01h
 12589  14F1  0086               	movwf	fsr1l
 12590  14F2  3001               	movlw 1	; select bank2/3
 12591  14F3  0087               	movwf fsr1h	
 12592                           	
 12593  14F4  3F40               	moviw	[0]fsr1
 12594  14F5  3A96               	xorlw	low(096h)
 12595  14F6  1D03               	skipz
 12596  14F7  2CFA               	goto	u9345
 12597  14F8  3F41               	moviw	[1]fsr1
 12598  14F9  3A00               	xorlw	high(096h)
 12599  14FA                     u9345:
 12600  14FA  1D03               	skipz
 12601  14FB  2CFD               	goto	u9341
 12602  14FC  2CFE               	goto	u9340
 12603  14FD                     u9341:
 12604  14FD  2D65               	goto	l8183
 12605  14FE                     u9340:
 12606                           	line	111
 12607                           	
 12608  14FE                     l24930:	
 12609                           ;main.c: 110: {
 12610                           ;main.c: 111: TMain->PowerCount=0;
 12611  14FE  087D               	movf	(_TMain),w
 12612  14FF  3E01               	addlw	01h
 12613  1500  0086               	movwf	fsr1l
 12614  1501  3001               	movlw 1	; select bank2/3
 12615  1502  0087               	movwf fsr1h	
 12616                           	
 12617  1503  3000               	movlw	low(0)
 12618  1504  3FC0               	movwi	[0]fsr1
 12619  1505  3000               	movlw	high(0)
 12620  1506  3FC1               	movwi	[1]fsr1
 12621                           	line	112
 12622                           ;main.c: 112: TMain->PowerON=1;
 12623  1507  087D               	movf	(_TMain),w
 12624  1508  0086               	movwf	fsr1l
 12625  1509  3001               	movlw 1	; select bank2/3
 12626  150A  0087               	movwf fsr1h	
 12627                           	
 12628  150B  1401               	bsf	indf1,0
 12629                           	line	115
 12630                           	
 12631  150C                     l24932:	
 12632                           ;main.c: 115: setTemp_Enable(1);
 12633  150C  3001               	movlw	(01h)
 12634  150D  31A1  2143  3194   	fcall	_setTemp_Enable
 12635                           	line	119
 12636                           	
 12637  1510                     l24934:	
 12638                           ;main.c: 119: setLoad_Enable(1);
 12639  1510  3001               	movlw	(01h)
 12640  1511  31A2  2277  3194   	fcall	_setLoad_Enable
 12641                           	line	125
 12642                           	
 12643  1514                     l24936:	
 12644                           ;main.c: 125: setBuz(3,50);
 12645  1514  3032               	movlw	low(032h)
 12646  1515  0020               	movlb 0	; select bank0
 12647  1516  00A6               	movwf	(?_setBuz)
 12648  1517  3000               	movlw	high(032h)
 12649  1518  00A7               	movwf	((?_setBuz))+1
 12650  1519  3003               	movlw	(03h)
 12651  151A  3192  22C6  3194   	fcall	_setBuz
 12652                           	line	126
 12653                           	
 12654  151D                     l24938:	
 12655                           ;main.c: 126: TMain->SelfTest=1;
 12656  151D  087D               	movf	(_TMain),w
 12657  151E  3E03               	addlw	03h
 12658  151F  0086               	movwf	fsr1l
 12659  1520  3001               	movlw 1	; select bank2/3
 12660  1521  0087               	movwf fsr1h	
 12661                           	
 12662  1522  1401               	bsf	indf1,0
 12663                           	line	128
 12664                           ;main.c: 128: setSw_Enable(1);
 12665  1523  3001               	movlw	(01h)
 12666  1524  31A2  22A7  3194   	fcall	_setSw_Enable
 12667                           	line	131
 12668                           ;main.c: 131: setRF_Enable(1,1);
 12669  1527  0020               	movlb 0	; select bank0
 12670  1528  01A2               	clrf	(?_setRF_Enable)
 12671  1529  1403               	bsf	status,0
 12672  152A  0DA2               	rlf	(?_setRF_Enable),f
 12673  152B  3001               	movlw	(01h)
 12674  152C  31A5  257F  3194   	fcall	_setRF_Enable
 12675  152F  2D65               	goto	l8183
 12676                           	line	135
 12677                           	
 12678  1530                     l8178:	
 12679                           	line	136
 12680                           ;main.c: 135: }
 12681                           ;main.c: 136: }
 12682  1530  2D65               	goto	l8183
 12683                           	line	137
 12684                           	
 12685  1531                     l8177:	
 12686                           	line	146
 12687                           	
 12688  1531                     l24940:	
 12689                           ;main.c: 137: else
 12690                           ;main.c: 138: {
 12691                           ;main.c: 146: TMain->Count1++;
 12692  1531  087D               	movf	(_TMain),w
 12693  1532  3E06               	addlw	06h
 12694  1533  0086               	movwf	fsr1l
 12695  1534  3001               	movlw 1	; select bank2/3
 12696  1535  0087               	movwf fsr1h	
 12697                           	
 12698  1536  3001               	movlw	01h
 12699  1537  0781               	addwf	indf1,f
 12700  1538  3141               	addfsr	fsr1,1
 12701  1539  1803               	skipnc
 12702  153A  0A81               	incf	indf1,f
 12703                           	line	147
 12704                           	
 12705  153B                     l24942:	
 12706                           ;main.c: 147: if(TMain->Count1 == 1000)
 12707  153B  087D               	movf	(_TMain),w
 12708  153C  3E06               	addlw	06h
 12709  153D  0086               	movwf	fsr1l
 12710  153E  3001               	movlw 1	; select bank2/3
 12711  153F  0087               	movwf fsr1h	
 12712                           	
 12713  1540  3F40               	moviw	[0]fsr1
 12714  1541  3AE8               	xorlw	low(03E8h)
 12715  1542  1D03               	skipz
 12716  1543  2D46               	goto	u9355
 12717  1544  3F41               	moviw	[1]fsr1
 12718  1545  3A03               	xorlw	high(03E8h)
 12719  1546                     u9355:
 12720  1546  1D03               	skipz
 12721  1547  2D49               	goto	u9351
 12722  1548  2D4A               	goto	u9350
 12723  1549                     u9351:
 12724  1549  2D65               	goto	l8183
 12725  154A                     u9350:
 12726                           	line	149
 12727                           	
 12728  154A                     l24944:	
 12729                           ;main.c: 148: {
 12730                           ;main.c: 149: TMain->Count1=0;
 12731  154A  087D               	movf	(_TMain),w
 12732  154B  3E06               	addlw	06h
 12733  154C  0086               	movwf	fsr1l
 12734  154D  3001               	movlw 1	; select bank2/3
 12735  154E  0087               	movwf fsr1h	
 12736                           	
 12737  154F  3000               	movlw	low(0)
 12738  1550  3FC0               	movwi	[0]fsr1
 12739  1551  3000               	movlw	high(0)
 12740  1552  3FC1               	movwi	[1]fsr1
 12741                           	line	160
 12742                           ;main.c: 160: if(TMain->Flag)
 12743  1553  087D               	movf	(_TMain),w
 12744  1554  0086               	movwf	fsr1l
 12745  1555  3001               	movlw 1	; select bank2/3
 12746  1556  0087               	movwf fsr1h	
 12747                           	
 12748  1557  1D81               	btfss	indf1,3
 12749  1558  2D5A               	goto	u9361
 12750  1559  2D5B               	goto	u9360
 12751  155A                     u9361:
 12752  155A  2D5D               	goto	l24948
 12753  155B                     u9360:
 12754  155B  2D65               	goto	l8183
 12755                           	line	169
 12756                           	
 12757  155C                     l24946:	
 12758                           ;main.c: 161: {
 12759                           ;main.c: 169: }
 12760  155C  2D65               	goto	l8183
 12761                           	line	170
 12762                           	
 12763  155D                     l8181:	
 12764                           	line	172
 12765                           	
 12766  155D                     l24948:	
 12767                           ;main.c: 170: else
 12768                           ;main.c: 171: {
 12769                           ;main.c: 172: TMain->Flag=1;
 12770  155D  087D               	movf	(_TMain),w
 12771  155E  0086               	movwf	fsr1l
 12772  155F  3001               	movlw 1	; select bank2/3
 12773  1560  0087               	movwf fsr1h	
 12774                           	
 12775  1561  1581               	bsf	indf1,3
 12776  1562  2D65               	goto	l8183
 12777                           	line	180
 12778                           	
 12779  1563                     l8182:	
 12780  1563  2D65               	goto	l8183
 12781                           	line	181
 12782                           	
 12783  1564                     l8180:	
 12784  1564  2D65               	goto	l8183
 12785                           	line	183
 12786                           	
 12787  1565                     l8179:	
 12788                           	line	184
 12789                           	
 12790  1565                     l8183:	
 12791  1565  0008               	return
 12792                           	opt stack 0
 12793                           GLOBAL	__end_of_MainT
 12794  1566                     	__end_of_MainT:
 12795 ;; =============== function _MainT ends ============
 12796                           
 12797                           	signat	_MainT,88
 12798                           	global	_LED_Main
 12799                           psect	text4121,local,class=CODE,delta=2
 12800                           global __ptext4121
 12801  21BF                     __ptext4121:
 12802                           
 12803 ;; *************** function _LED_Main *****************
 12804 ;; Defined at:
 12805 ;;		line 52 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\LED_B1.c"
 12806 ;; Parameters:    Size  Location     Type
 12807 ;;		None
 12808 ;; Auto vars:     Size  Location     Type
 12809 ;;		None
 12810 ;; Return value:  Size  Location     Type
 12811 ;;		None               void
 12812 ;; Registers used:
 12813 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12814 ;; Tracked objects:
 12815 ;;		On entry : 0/0
 12816 ;;		On exit  : 0/0
 12817 ;;		Unchanged: 0/0
 12818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 12819 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 12820 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 12821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 12822 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 12823 ;;Total ram usage:        0 bytes
 12824 ;; Hardware stack levels used:    1
 12825 ;; Hardware stack levels required when called:    6
 12826 ;; This function calls:
 12827 ;;		_setLED_Main
 12828 ;; This function is called by:
 12829 ;;		_main
 12830 ;; This function uses a non-reentrant model
 12831 ;;
 12832                           psect	text4121
 12833                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\LED_B1.c"
 12834                           	line	52
 12835                           	global	__size_of_LED_Main
 12836  000D                     	__size_of_LED_Main	equ	__end_of_LED_Main-_LED_Main
 12837                           	
 12838  21BF                     _LED_Main:	
 12839                           	opt	stack 9
 12840                           ; Regs used in _LED_Main: [wreg+fsr1l-status,0+pclath+cstack]
 12841                           	line	54
 12842                           	
 12843  21BF                     l24922:	
 12844                           ;LED_B1.c: 54: setLED_Main(1);
 12845  21BF  3001               	movlw	(01h)
 12846  21C0  319C  2443  31A1   	fcall	_setLED_Main
 12847                           	line	57
 12848                           ;LED_B1.c: 57: setLED_Main(2);
 12849  21C3  3002               	movlw	(02h)
 12850  21C4  319C  2443  31A1   	fcall	_setLED_Main
 12851                           	line	63
 12852                           ;LED_B1.c: 63: setLED_Main(99);
 12853  21C7  3063               	movlw	(063h)
 12854  21C8  319C  2443  31A1   	fcall	_setLED_Main
 12855                           	line	65
 12856                           	
 12857  21CB                     l6964:	
 12858  21CB  0008               	return
 12859                           	opt stack 0
 12860                           GLOBAL	__end_of_LED_Main
 12861  21CC                     	__end_of_LED_Main:
 12862 ;; =============== function _LED_Main ends ============
 12863                           
 12864                           	signat	_LED_Main,88
 12865                           	global	_setLED_Initialization
 12866                           psect	text4122,local,class=CODE,delta=2
 12867                           global __ptext4122
 12868  231E                     __ptext4122:
 12869                           
 12870 ;; *************** function _setLED_Initialization *****************
 12871 ;; Defined at:
 12872 ;;		line 68 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\LED_B1.c"
 12873 ;; Parameters:    Size  Location     Type
 12874 ;;  led             1    wreg     unsigned char 
 12875 ;; Auto vars:     Size  Location     Type
 12876 ;;  led             1    4[BANK0 ] unsigned char 
 12877 ;; Return value:  Size  Location     Type
 12878 ;;		None               void
 12879 ;; Registers used:
 12880 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12881 ;; Tracked objects:
 12882 ;;		On entry : 0/0
 12883 ;;		On exit  : 0/0
 12884 ;;		Unchanged: 0/0
 12885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 12886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 12887 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 12888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 12889 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 12890 ;;Total ram usage:        1 bytes
 12891 ;; Hardware stack levels used:    1
 12892 ;; Hardware stack levels required when called:    6
 12893 ;; This function calls:
 12894 ;;		_LedPointSelect
 12895 ;;		_setLED
 12896 ;; This function is called by:
 12897 ;;		_LED_Initialization
 12898 ;; This function uses a non-reentrant model
 12899 ;;
 12900                           psect	text4122
 12901                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\LED_B1.c"
 12902                           	line	68
 12903                           	global	__size_of_setLED_Initialization
 12904  0012                     	__size_of_setLED_Initialization	equ	__end_of_setLED_Initialization-_setLED_Initializati
                                 on
 12905                           	
 12906  231E                     _setLED_Initialization:	
 12907                           	opt	stack 8
 12908                           ; Regs used in _setLED_Initialization: [wreg+fsr1l-status,0+pclath+cstack]
 12909                           ;setLED_Initialization@led stored from wreg
 12910  231E  0020               	movlb 0	; select bank0
 12911  231F  00A4               	movwf	(setLED_Initialization@led)
 12912                           	line	69
 12913                           	
 12914  2320                     l24916:	
 12915                           ;LED_B1.c: 69: LedPointSelect(led);
 12916  2320  0824               	movf	(setLED_Initialization@led),w
 12917  2321  31A5  2528  31A3   	fcall	_LedPointSelect
 12918                           	line	70
 12919                           	
 12920  2324                     l24918:	
 12921                           ;LED_B1.c: 70: LED->Enable=1;
 12922  2324  0021               	movlb 1	; select bank1
 12923  2325  083B               	movf	(_LED)^080h,w
 12924  2326  0086               	movwf	fsr1l
 12925  2327  0187               	clrf fsr1h	
 12926                           	
 12927  2328  1401               	bsf	indf1,0
 12928                           	line	71
 12929                           	
 12930  2329                     l24920:	
 12931                           ;LED_B1.c: 71: setLED(led,0);
 12932  2329  0020               	movlb 0	; select bank0
 12933  232A  01A2               	clrf	(?_setLED)
 12934  232B  0824               	movf	(setLED_Initialization@led),w
 12935  232C  3193  23CF  31A3   	fcall	_setLED
 12936                           	line	72
 12937                           	
 12938  232F                     l6967:	
 12939  232F  0008               	return
 12940                           	opt stack 0
 12941                           GLOBAL	__end_of_setLED_Initialization
 12942  2330                     	__end_of_setLED_Initialization:
 12943 ;; =============== function _setLED_Initialization ends ============
 12944                           
 12945                           	signat	_setLED_Initialization,4216
 12946                           	global	_setPercentValue
 12947                           psect	text4123,local,class=CODE,delta=2
 12948                           global __ptext4123
 12949  1A2C                     __ptext4123:
 12950                           
 12951 ;; *************** function _setPercentValue *****************
 12952 ;; Defined at:
 12953 ;;		line 495 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 12954 ;; Parameters:    Size  Location     Type
 12955 ;;  value           1    wreg     unsigned char 
 12956 ;; Auto vars:     Size  Location     Type
 12957 ;;  value           1   44[BANK0 ] unsigned char 
 12958 ;;  i               3   45[BANK0 ] float 
 12959 ;; Return value:  Size  Location     Type
 12960 ;;                  1    wreg      unsigned char 
 12961 ;; Registers used:
 12962 ;;		wreg, status,2, status,0, pclath, cstack
 12963 ;; Tracked objects:
 12964 ;;		On entry : 0/0
 12965 ;;		On exit  : 0/0
 12966 ;;		Unchanged: 0/0
 12967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 12968 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 12969 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 12970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 12971 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 12972 ;;Total ram usage:        4 bytes
 12973 ;; Hardware stack levels used:    1
 12974 ;; Hardware stack levels required when called:    6
 12975 ;; This function calls:
 12976 ;;		___ftdiv
 12977 ;;		___awtoft
 12978 ;;		___fttol
 12979 ;; This function is called by:
 12980 ;;		_Flash_Memory_Initialization
 12981 ;; This function uses a non-reentrant model
 12982 ;;
 12983                           psect	text4123
 12984                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 12985                           	line	495
 12986                           	global	__size_of_setPercentValue
 12987  0048                     	__size_of_setPercentValue	equ	__end_of_setPercentValue-_setPercentValue
 12988                           	
 12989  1A2C                     _setPercentValue:	
 12990                           	opt	stack 8
 12991                           ; Regs used in _setPercentValue: [wreg+status,2+status,0+pclath+cstack]
 12992                           ;setPercentValue@value stored from wreg
 12993                           	line	497
 12994  1A2C  0020               	movlb 0	; select bank0
 12995  1A2D  00CC               	movwf	(setPercentValue@value)
 12996                           	
 12997  1A2E                     l24908:	
 12998                           ;Dimmer_B1.c: 497: float i=((char)((100-20)*1.5))-((char)((100-55)*1.5));
 12999  1A2E  3000               	movlw	0x0
 13000  1A2F  00CD               	movwf	(setPercentValue@i)
 13001  1A30  3054               	movlw	0x54
 13002  1A31  00CE               	movwf	(setPercentValue@i+1)
 13003  1A32  3042               	movlw	0x42
 13004  1A33  00CF               	movwf	(setPercentValue@i+2)
 13005                           	line	498
 13006                           	
 13007  1A34                     l24910:	
 13008                           ;Dimmer_B1.c: 498: i/=100;
 13009  1A34  3000               	movlw	0x0
 13010  1A35  00BC               	movwf	(?___ftdiv)
 13011  1A36  30C8               	movlw	0xc8
 13012  1A37  00BD               	movwf	(?___ftdiv+1)
 13013  1A38  3042               	movlw	0x42
 13014  1A39  00BE               	movwf	(?___ftdiv+2)
 13015  1A3A  084D               	movf	(setPercentValue@i),w
 13016  1A3B  00BF               	movwf	0+(?___ftdiv)+03h
 13017  1A3C  084E               	movf	(setPercentValue@i+1),w
 13018  1A3D  00C0               	movwf	1+(?___ftdiv)+03h
 13019  1A3E  084F               	movf	(setPercentValue@i+2),w
 13020  1A3F  00C1               	movwf	2+(?___ftdiv)+03h
 13021  1A40  3188  205F  319A   	fcall	___ftdiv
 13022  1A43  0020               	movlb 0	; select bank0
 13023  1A44  083C               	movf	(0+(?___ftdiv)),w
 13024  1A45  00CD               	movwf	(setPercentValue@i)
 13025  1A46  083D               	movf	(1+(?___ftdiv)),w
 13026  1A47  00CE               	movwf	(setPercentValue@i+1)
 13027  1A48  083E               	movf	(2+(?___ftdiv)),w
 13028  1A49  00CF               	movwf	(setPercentValue@i+2)
 13029                           	line	499
 13030                           	
 13031  1A4A                     l24912:	
 13032                           ;Dimmer_B1.c: 499: return (100-(char)((value-((char)((100-55)*1.5)))/i));
 13033  1A4A  084C               	movf	(setPercentValue@value),w
 13034  1A4B  3EBD               	addlw	low(-67)
 13035  1A4C  00B6               	movwf	(?___awtoft)
 13036  1A4D  30FF               	movlw	high(-67)
 13037  1A4E  1803               	skipnc
 13038  1A4F  3000               	movlw	(high(-67)+1)&0ffh
 13039  1A50  00B7               	movwf	((?___awtoft))+1
 13040  1A51  31A4  24D5  319A   	fcall	___awtoft
 13041  1A54  0020               	movlb 0	; select bank0
 13042  1A55  0836               	movf	(0+(?___awtoft)),w
 13043  1A56  00BF               	movwf	0+(?___ftdiv)+03h
 13044  1A57  0837               	movf	(1+(?___awtoft)),w
 13045  1A58  00C0               	movwf	1+(?___ftdiv)+03h
 13046  1A59  0838               	movf	(2+(?___awtoft)),w
 13047  1A5A  00C1               	movwf	2+(?___ftdiv)+03h
 13048  1A5B  084D               	movf	(setPercentValue@i),w
 13049  1A5C  00BC               	movwf	(?___ftdiv)
 13050  1A5D  084E               	movf	(setPercentValue@i+1),w
 13051  1A5E  00BD               	movwf	(?___ftdiv+1)
 13052  1A5F  084F               	movf	(setPercentValue@i+2),w
 13053  1A60  00BE               	movwf	(?___ftdiv+2)
 13054  1A61  3188  205F  319A   	fcall	___ftdiv
 13055  1A64  0020               	movlb 0	; select bank0
 13056  1A65  083C               	movf	(0+(?___ftdiv)),w
 13057  1A66  00A8               	movwf	(?___fttol)
 13058  1A67  083D               	movf	(1+(?___ftdiv)),w
 13059  1A68  00A9               	movwf	(?___fttol+1)
 13060  1A69  083E               	movf	(2+(?___ftdiv)),w
 13061  1A6A  00AA               	movwf	(?___fttol+2)
 13062  1A6B  3195  2566  319A   	fcall	___fttol
 13063  1A6E  0020               	movlb 0	; select bank0
 13064  1A6F  0328               	decf	0+(((0+(?___fttol)))),w
 13065  1A70  3AFF               	xorlw	0ffh
 13066  1A71  3E64               	addlw	064h
 13067  1A72  2A73               	goto	l5845
 13068                           	
 13069  1A73                     l24914:	
 13070                           	line	507
 13071                           	
 13072  1A73                     l5845:	
 13073  1A73  0008               	return
 13074                           	opt stack 0
 13075                           GLOBAL	__end_of_setPercentValue
 13076  1A74                     	__end_of_setPercentValue:
 13077 ;; =============== function _setPercentValue ends ============
 13078                           
 13079                           	signat	_setPercentValue,4217
 13080                           	global	_getPercentValue
 13081                           psect	text4124,local,class=CODE,delta=2
 13082                           global __ptext4124
 13083  1CF3                     __ptext4124:
 13084                           
 13085 ;; *************** function _getPercentValue *****************
 13086 ;; Defined at:
 13087 ;;		line 480 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 13088 ;; Parameters:    Size  Location     Type
 13089 ;;  value           1    wreg     unsigned char 
 13090 ;; Auto vars:     Size  Location     Type
 13091 ;;  value           1   59[BANK0 ] unsigned char 
 13092 ;;  i               3   60[BANK0 ] float 
 13093 ;; Return value:  Size  Location     Type
 13094 ;;                  1    wreg      unsigned char 
 13095 ;; Registers used:
 13096 ;;		wreg, status,2, status,0, pclath, cstack
 13097 ;; Tracked objects:
 13098 ;;		On entry : 0/0
 13099 ;;		On exit  : 0/0
 13100 ;;		Unchanged: 0/0
 13101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 13102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 13103 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 13104 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 13105 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0
 13106 ;;Total ram usage:        6 bytes
 13107 ;; Hardware stack levels used:    1
 13108 ;; Hardware stack levels required when called:    6
 13109 ;; This function calls:
 13110 ;;		___ftdiv
 13111 ;;		___awtoft
 13112 ;;		___ftmul
 13113 ;;		___ftadd
 13114 ;;		___fttol
 13115 ;; This function is called by:
 13116 ;;		_setDimmerLights_AdjRF
 13117 ;; This function uses a non-reentrant model
 13118 ;;
 13119                           psect	text4124
 13120                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 13121                           	line	480
 13122                           	global	__size_of_getPercentValue
 13123  005D                     	__size_of_getPercentValue	equ	__end_of_getPercentValue-_getPercentValue
 13124                           	
 13125  1CF3                     _getPercentValue:	
 13126                           	opt	stack 2
 13127                           ; Regs used in _getPercentValue: [wreg+status,2+status,0+pclath+cstack]
 13128                           ;getPercentValue@value stored from wreg
 13129                           	line	482
 13130  1CF3  0020               	movlb 0	; select bank0
 13131  1CF4  00DB               	movwf	(getPercentValue@value)
 13132                           	
 13133  1CF5                     l23540:	
 13134                           ;Dimmer_B1.c: 482: float i=((char)((100-20)*1.5))-((char)((100-55)*1.5));
 13135  1CF5  3000               	movlw	0x0
 13136  1CF6  00DC               	movwf	(getPercentValue@i)
 13137  1CF7  3054               	movlw	0x54
 13138  1CF8  00DD               	movwf	(getPercentValue@i+1)
 13139  1CF9  3042               	movlw	0x42
 13140  1CFA  00DE               	movwf	(getPercentValue@i+2)
 13141                           	line	483
 13142                           	
 13143  1CFB                     l23542:	
 13144                           ;Dimmer_B1.c: 483: i/=100;
 13145  1CFB  3000               	movlw	0x0
 13146  1CFC  00BC               	movwf	(?___ftdiv)
 13147  1CFD  30C8               	movlw	0xc8
 13148  1CFE  00BD               	movwf	(?___ftdiv+1)
 13149  1CFF  3042               	movlw	0x42
 13150  1D00  00BE               	movwf	(?___ftdiv+2)
 13151  1D01  085C               	movf	(getPercentValue@i),w
 13152  1D02  00BF               	movwf	0+(?___ftdiv)+03h
 13153  1D03  085D               	movf	(getPercentValue@i+1),w
 13154  1D04  00C0               	movwf	1+(?___ftdiv)+03h
 13155  1D05  085E               	movf	(getPercentValue@i+2),w
 13156  1D06  00C1               	movwf	2+(?___ftdiv)+03h
 13157  1D07  3188  205F  319C   	fcall	___ftdiv
 13158  1D0A  0020               	movlb 0	; select bank0
 13159  1D0B  083C               	movf	(0+(?___ftdiv)),w
 13160  1D0C  00DC               	movwf	(getPercentValue@i)
 13161  1D0D  083D               	movf	(1+(?___ftdiv)),w
 13162  1D0E  00DD               	movwf	(getPercentValue@i+1)
 13163  1D0F  083E               	movf	(2+(?___ftdiv)),w
 13164  1D10  00DE               	movwf	(getPercentValue@i+2)
 13165                           	line	484
 13166                           	
 13167  1D11                     l23544:	
 13168                           ;Dimmer_B1.c: 484: return (char)(((100-value)*i)+((char)((100-55)*1.5)));
 13169  1D11  085B               	movf	(getPercentValue@value),w
 13170  1D12  00D9               	movwf	(??_getPercentValue+0)+0
 13171  1D13  01DA               	clrf	(??_getPercentValue+0)+0+1
 13172  1D14  09D9               	comf	(??_getPercentValue+0)+0,f
 13173  1D15  09DA               	comf	(??_getPercentValue+0)+1,f
 13174  1D16  0AD9               	incf	(??_getPercentValue+0)+0,f
 13175  1D17  1903               	skipnz
 13176  1D18  0ADA               	incf	(??_getPercentValue+0)+1,f
 13177  1D19  0859               	movf	0+(??_getPercentValue+0)+0,w
 13178  1D1A  3E64               	addlw	low(064h)
 13179  1D1B  00B6               	movwf	(?___awtoft)
 13180  1D1C  3000               	movlw	high(064h)
 13181  1D1D  3D5A               	addwfc	1+(??_getPercentValue+0)+0,w
 13182  1D1E  00B7               	movwf	1+(?___awtoft)
 13183  1D1F  31A4  24D5  319C   	fcall	___awtoft
 13184  1D22  0020               	movlb 0	; select bank0
 13185  1D23  0836               	movf	(0+(?___awtoft)),w
 13186  1D24  00BF               	movwf	0+(?___ftmul)+03h
 13187  1D25  0837               	movf	(1+(?___awtoft)),w
 13188  1D26  00C0               	movwf	1+(?___ftmul)+03h
 13189  1D27  0838               	movf	(2+(?___awtoft)),w
 13190  1D28  00C1               	movwf	2+(?___ftmul)+03h
 13191  1D29  085C               	movf	(getPercentValue@i),w
 13192  1D2A  00BC               	movwf	(?___ftmul)
 13193  1D2B  085D               	movf	(getPercentValue@i+1),w
 13194  1D2C  00BD               	movwf	(?___ftmul+1)
 13195  1D2D  085E               	movf	(getPercentValue@i+2),w
 13196  1D2E  00BE               	movwf	(?___ftmul+2)
 13197  1D2F  3189  21D6  319C   	fcall	___ftmul
 13198  1D32  0020               	movlb 0	; select bank0
 13199  1D33  083C               	movf	(0+(?___ftmul)),w
 13200  1D34  00CF               	movwf	0+(?___ftadd)+03h
 13201  1D35  083D               	movf	(1+(?___ftmul)),w
 13202  1D36  00D0               	movwf	1+(?___ftadd)+03h
 13203  1D37  083E               	movf	(2+(?___ftmul)),w
 13204  1D38  00D1               	movwf	2+(?___ftadd)+03h
 13205  1D39  3000               	movlw	0x0
 13206  1D3A  00CC               	movwf	(?___ftadd)
 13207  1D3B  3086               	movlw	0x86
 13208  1D3C  00CD               	movwf	(?___ftadd+1)
 13209  1D3D  3042               	movlw	0x42
 13210  1D3E  00CE               	movwf	(?___ftadd+2)
 13211  1D3F  3186  26AB  319C   	fcall	___ftadd
 13212  1D42  0020               	movlb 0	; select bank0
 13213  1D43  084C               	movf	(0+(?___ftadd)),w
 13214  1D44  00A8               	movwf	(?___fttol)
 13215  1D45  084D               	movf	(1+(?___ftadd)),w
 13216  1D46  00A9               	movwf	(?___fttol+1)
 13217  1D47  084E               	movf	(2+(?___ftadd)),w
 13218  1D48  00AA               	movwf	(?___fttol+2)
 13219  1D49  3195  2566  319C   	fcall	___fttol
 13220  1D4C  0020               	movlb 0	; select bank0
 13221  1D4D  0828               	movf	0+(((0+(?___fttol)))),w
 13222  1D4E  2D4F               	goto	l5842
 13223                           	
 13224  1D4F                     l23546:	
 13225                           	line	492
 13226                           	
 13227  1D4F                     l5842:	
 13228  1D4F  0008               	return
 13229                           	opt stack 0
 13230                           GLOBAL	__end_of_getPercentValue
 13231  1D50                     	__end_of_getPercentValue:
 13232 ;; =============== function _getPercentValue ends ============
 13233                           
 13234                           	signat	_getPercentValue,4217
 13235                           	global	_setDimmerLights_ERROR
 13236                           psect	text4125,local,class=CODE,delta=2
 13237                           global __ptext4125
 13238  1C96                     __ptext4125:
 13239                           
 13240 ;; *************** function _setDimmerLights_ERROR *****************
 13241 ;; Defined at:
 13242 ;;		line 294 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 13243 ;; Parameters:    Size  Location     Type
 13244 ;;  lights          1    wreg     unsigned char 
 13245 ;; Auto vars:     Size  Location     Type
 13246 ;;  lights          1    5[BANK0 ] unsigned char 
 13247 ;; Return value:  Size  Location     Type
 13248 ;;		None               void
 13249 ;; Registers used:
 13250 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13251 ;; Tracked objects:
 13252 ;;		On entry : 0/0
 13253 ;;		On exit  : 0/0
 13254 ;;		Unchanged: 0/0
 13255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 13256 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 13257 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 13258 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 13259 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 13260 ;;Total ram usage:        2 bytes
 13261 ;; Hardware stack levels used:    1
 13262 ;; Hardware stack levels required when called:    6
 13263 ;; This function calls:
 13264 ;;		_DimmerLightsPointSelect
 13265 ;;		_setLoad_StatusOff
 13266 ;;		_setLED
 13267 ;;		_setSw_Status
 13268 ;;		_setRFSW_Status
 13269 ;; This function is called by:
 13270 ;;		_DimmerLights_Exceptions
 13271 ;; This function uses a non-reentrant model
 13272 ;;
 13273                           psect	text4125
 13274                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 13275                           	line	294
 13276                           	global	__size_of_setDimmerLights_ERROR
 13277  005D                     	__size_of_setDimmerLights_ERROR	equ	__end_of_setDimmerLights_ERROR-_setDimmerLights_ERR
                                 OR
 13278                           	
 13279  1C96                     _setDimmerLights_ERROR:	
 13280                           	opt	stack 5
 13281                           ; Regs used in _setDimmerLights_ERROR: [wreg+fsr1l-status,0+pclath+cstack]
 13282                           ;setDimmerLights_ERROR@lights stored from wreg
 13283  1C96  0020               	movlb 0	; select bank0
 13284  1C97  00A5               	movwf	(setDimmerLights_ERROR@lights)
 13285                           	line	295
 13286                           	
 13287  1C98                     l24894:	
 13288                           ;Dimmer_B1.c: 295: DimmerLightsPointSelect(lights);
 13289  1C98  0825               	movf	(setDimmerLights_ERROR@lights),w
 13290  1C99  31A1  21E6  319C   	fcall	_DimmerLightsPointSelect
 13291                           	line	296
 13292                           	
 13293  1C9C                     l24896:	
 13294                           ;Dimmer_B1.c: 296: if(DimmerLights->Status)
 13295  1C9C  0020               	movlb 0	; select bank0
 13296  1C9D  086C               	movf	(_DimmerLights),w
 13297  1C9E  0086               	movwf	fsr1l
 13298  1C9F  3001               	movlw 1	; select bank2/3
 13299  1CA0  0087               	movwf fsr1h	
 13300                           	
 13301  1CA1  1E81               	btfss	indf1,5
 13302  1CA2  2CA4               	goto	u9321
 13303  1CA3  2CA5               	goto	u9320
 13304  1CA4                     u9321:
 13305  1CA4  2CF2               	goto	l5799
 13306  1CA5                     u9320:
 13307                           	line	298
 13308                           	
 13309  1CA5                     l24898:	
 13310                           ;Dimmer_B1.c: 297: {
 13311                           ;Dimmer_B1.c: 298: DimmerLights->Signal=0;
 13312  1CA5  086C               	movf	(_DimmerLights),w
 13313  1CA6  0086               	movwf	fsr1l
 13314  1CA7  3001               	movlw 1	; select bank2/3
 13315  1CA8  0087               	movwf fsr1h	
 13316                           	
 13317  1CA9  1081               	bcf	indf1,1
 13318                           	line	299
 13319                           ;Dimmer_B1.c: 299: DimmerLights->AdjFlag=0;
 13320  1CAA  086C               	movf	(_DimmerLights),w
 13321  1CAB  0086               	movwf	fsr1l
 13322  1CAC  3001               	movlw 1	; select bank2/3
 13323  1CAD  0087               	movwf fsr1h	
 13324                           	
 13325  1CAE  1181               	bcf	indf1,3
 13326                           	line	300
 13327                           ;Dimmer_B1.c: 300: DimmerLights->AdjStatus=0;
 13328  1CAF  086C               	movf	(_DimmerLights),w
 13329  1CB0  0086               	movwf	fsr1l
 13330  1CB1  3001               	movlw 1	; select bank2/3
 13331  1CB2  0087               	movwf fsr1h	
 13332                           	
 13333  1CB3  1201               	bcf	indf1,4
 13334                           	line	301
 13335                           ;Dimmer_B1.c: 301: DimmerLights->StatusFlag=0;
 13336  1CB4  086C               	movf	(_DimmerLights),w
 13337  1CB5  0086               	movwf	fsr1l
 13338  1CB6  3001               	movlw 1	; select bank2/3
 13339  1CB7  0087               	movwf fsr1h	
 13340                           	
 13341  1CB8  1301               	bcf	indf1,6
 13342                           	line	302
 13343                           ;Dimmer_B1.c: 302: DimmerLights->DimmingTimeValue=3;
 13344  1CB9  3003               	movlw	(03h)
 13345  1CBA  00A4               	movwf	(??_setDimmerLights_ERROR+0)+0
 13346  1CBB  086C               	movf	(_DimmerLights),w
 13347  1CBC  3E02               	addlw	02h
 13348  1CBD  0086               	movwf	fsr1l
 13349  1CBE  3001               	movlw 1	; select bank2/3
 13350  1CBF  0087               	movwf fsr1h	
 13351                           	
 13352  1CC0  0824               	movf	(??_setDimmerLights_ERROR+0)+0,w
 13353  1CC1  0081               	movwf	indf1
 13354                           	line	303
 13355                           ;Dimmer_B1.c: 303: DimmerLights->DimmingValue=DimmerLights->MinimumValue;
 13356  1CC2  086C               	movf	(_DimmerLights),w
 13357  1CC3  3E06               	addlw	06h
 13358  1CC4  0086               	movwf	fsr1l
 13359  1CC5  3001               	movlw 1	; select bank2/3
 13360  1CC6  0087               	movwf fsr1h	
 13361                           	
 13362  1CC7  0801               	movf	indf1,w
 13363  1CC8  00A4               	movwf	(??_setDimmerLights_ERROR+0)+0
 13364  1CC9  086C               	movf	(_DimmerLights),w
 13365  1CCA  3E04               	addlw	04h
 13366  1CCB  0086               	movwf	fsr1l
 13367  1CCC  3001               	movlw 1	; select bank2/3
 13368  1CCD  0087               	movwf fsr1h	
 13369                           	
 13370  1CCE  0824               	movf	(??_setDimmerLights_ERROR+0)+0,w
 13371  1CCF  0081               	movwf	indf1
 13372                           	line	304
 13373                           ;Dimmer_B1.c: 304: Dimmer->Detect=1;
 13374  1CD0  0021               	movlb 1	; select bank1
 13375  1CD1  0839               	movf	(_Dimmer)^080h,w
 13376  1CD2  0086               	movwf	fsr1l
 13377  1CD3  0187               	clrf fsr1h	
 13378                           	
 13379  1CD4  1401               	bsf	indf1,0
 13380                           	line	305
 13381                           	
 13382  1CD5                     l24900:	
 13383                           ;Dimmer_B1.c: 305: setLoad_StatusOff(lights,1);
 13384  1CD5  0020               	movlb 0	; select bank0
 13385  1CD6  01A0               	clrf	(?_setLoad_StatusOff)
 13386  1CD7  1403               	bsf	status,0
 13387  1CD8  0DA0               	rlf	(?_setLoad_StatusOff),f
 13388  1CD9  0825               	movf	(setDimmerLights_ERROR@lights),w
 13389  1CDA  3198  20A0  319C   	fcall	_setLoad_StatusOff
 13390                           	line	306
 13391                           	
 13392  1CDD                     l24902:	
 13393                           ;Dimmer_B1.c: 306: setLED(lights,1);
 13394  1CDD  0020               	movlb 0	; select bank0
 13395  1CDE  01A2               	clrf	(?_setLED)
 13396  1CDF  1403               	bsf	status,0
 13397  1CE0  0DA2               	rlf	(?_setLED),f
 13398  1CE1  0825               	movf	(setDimmerLights_ERROR@lights),w
 13399  1CE2  3193  23CF  319C   	fcall	_setLED
 13400                           	line	307
 13401                           	
 13402  1CE5                     l24904:	
 13403                           ;Dimmer_B1.c: 307: setSw_Status(lights,0);
 13404  1CE5  0020               	movlb 0	; select bank0
 13405  1CE6  01A2               	clrf	(?_setSw_Status)
 13406  1CE7  0825               	movf	(setDimmerLights_ERROR@lights),w
 13407  1CE8  31A2  2287  319C   	fcall	_setSw_Status
 13408                           	line	308
 13409                           	
 13410  1CEB                     l24906:	
 13411                           ;Dimmer_B1.c: 308: setRFSW_Status(lights,0);
 13412  1CEB  0020               	movlb 0	; select bank0
 13413  1CEC  01A2               	clrf	(?_setRFSW_Status)
 13414  1CED  0825               	movf	(setDimmerLights_ERROR@lights),w
 13415  1CEE  31A2  2297  319C   	fcall	_setRFSW_Status
 13416  1CF1  2CF2               	goto	l5799
 13417                           	line	309
 13418                           	
 13419  1CF2                     l5798:	
 13420                           	line	310
 13421                           	
 13422  1CF2                     l5799:	
 13423  1CF2  0008               	return
 13424                           	opt stack 0
 13425                           GLOBAL	__end_of_setDimmerLights_ERROR
 13426  1CF3                     	__end_of_setDimmerLights_ERROR:
 13427 ;; =============== function _setDimmerLights_ERROR ends ============
 13428                           
 13429                           	signat	_setDimmerLights_ERROR,4216
 13430                           	global	_setDimmerLights_Adj
 13431                           psect	text4126,local,class=CODE,delta=2
 13432                           global __ptext4126
 13433  1ABF                     __ptext4126:
 13434                           
 13435 ;; *************** function _setDimmerLights_Adj *****************
 13436 ;; Defined at:
 13437 ;;		line 380 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 13438 ;; Parameters:    Size  Location     Type
 13439 ;;  lights          1    wreg     unsigned char 
 13440 ;;  status          1    5[BANK0 ] unsigned char 
 13441 ;; Auto vars:     Size  Location     Type
 13442 ;;  lights          1    7[BANK0 ] unsigned char 
 13443 ;; Return value:  Size  Location     Type
 13444 ;;		None               void
 13445 ;; Registers used:
 13446 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13447 ;; Tracked objects:
 13448 ;;		On entry : 0/0
 13449 ;;		On exit  : 0/0
 13450 ;;		Unchanged: 0/0
 13451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 13452 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 13453 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 13454 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 13455 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 13456 ;;Total ram usage:        3 bytes
 13457 ;; Hardware stack levels used:    1
 13458 ;; Hardware stack levels required when called:    6
 13459 ;; This function calls:
 13460 ;;		_DimmerLightsPointSelect
 13461 ;;		_setLoad_StatusOff
 13462 ;;		_setRF_DimmerLights
 13463 ;;		_setTxData
 13464 ;; This function is called by:
 13465 ;;		_setDimmerLights_Main
 13466 ;; This function uses a non-reentrant model
 13467 ;;
 13468                           psect	text4126
 13469                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 13470                           	line	380
 13471                           	global	__size_of_setDimmerLights_Adj
 13472  004C                     	__size_of_setDimmerLights_Adj	equ	__end_of_setDimmerLights_Adj-_setDimmerLights_Adj
 13473                           	
 13474  1ABF                     _setDimmerLights_Adj:	
 13475                           	opt	stack 7
 13476                           ; Regs used in _setDimmerLights_Adj: [wreg+fsr1l-status,0+pclath+cstack]
 13477                           ;setDimmerLights_Adj@lights stored from wreg
 13478  1ABF  0020               	movlb 0	; select bank0
 13479  1AC0  00A7               	movwf	(setDimmerLights_Adj@lights)
 13480                           	line	381
 13481                           	
 13482  1AC1                     l24880:	
 13483                           ;Dimmer_B1.c: 381: DimmerLightsPointSelect(lights);
 13484  1AC1  0827               	movf	(setDimmerLights_Adj@lights),w
 13485  1AC2  31A1  21E6  319A   	fcall	_DimmerLightsPointSelect
 13486                           	line	382
 13487                           	
 13488  1AC5                     l24882:	
 13489                           ;Dimmer_B1.c: 382: if(status)
 13490  1AC5  0020               	movlb 0	; select bank0
 13491  1AC6  0825               	movf	(setDimmerLights_Adj@status),w
 13492  1AC7  1D03               	skipz
 13493  1AC8  2ACA               	goto	u9300
 13494  1AC9  2AD5               	goto	l24886
 13495  1ACA                     u9300:
 13496                           	line	384
 13497                           	
 13498  1ACA                     l24884:	
 13499                           ;Dimmer_B1.c: 383: {
 13500                           ;Dimmer_B1.c: 384: DimmerLights->AdjFlag=1;
 13501  1ACA  086C               	movf	(_DimmerLights),w
 13502  1ACB  0086               	movwf	fsr1l
 13503  1ACC  3001               	movlw 1	; select bank2/3
 13504  1ACD  0087               	movwf fsr1h	
 13505                           	
 13506  1ACE  1581               	bsf	indf1,3
 13507                           	line	385
 13508                           ;Dimmer_B1.c: 385: DimmerLights->Signal=1;
 13509  1ACF  086C               	movf	(_DimmerLights),w
 13510  1AD0  0086               	movwf	fsr1l
 13511  1AD1  3001               	movlw 1	; select bank2/3
 13512  1AD2  0087               	movwf fsr1h	
 13513                           	
 13514  1AD3  1481               	bsf	indf1,1
 13515                           	line	386
 13516                           ;Dimmer_B1.c: 386: }
 13517  1AD4  2B0A               	goto	l5815
 13518                           	line	387
 13519                           	
 13520  1AD5                     l5812:	
 13521                           	line	389
 13522                           	
 13523  1AD5                     l24886:	
 13524                           ;Dimmer_B1.c: 387: else
 13525                           ;Dimmer_B1.c: 388: {
 13526                           ;Dimmer_B1.c: 389: if(DimmerLights->AdjFlag)
 13527  1AD5  086C               	movf	(_DimmerLights),w
 13528  1AD6  0086               	movwf	fsr1l
 13529  1AD7  3001               	movlw 1	; select bank2/3
 13530  1AD8  0087               	movwf fsr1h	
 13531                           	
 13532  1AD9  1D81               	btfss	indf1,3
 13533  1ADA  2ADC               	goto	u9311
 13534  1ADB  2ADD               	goto	u9310
 13535  1ADC                     u9311:
 13536  1ADC  2B0A               	goto	l5815
 13537  1ADD                     u9310:
 13538                           	line	391
 13539                           	
 13540  1ADD                     l24888:	
 13541                           ;Dimmer_B1.c: 390: {
 13542                           ;Dimmer_B1.c: 391: DimmerLights->Signal=0;
 13543  1ADD  086C               	movf	(_DimmerLights),w
 13544  1ADE  0086               	movwf	fsr1l
 13545  1ADF  3001               	movlw 1	; select bank2/3
 13546  1AE0  0087               	movwf fsr1h	
 13547                           	
 13548  1AE1  1081               	bcf	indf1,1
 13549                           	line	392
 13550                           ;Dimmer_B1.c: 392: DimmerLights->AdjFlag=0;
 13551  1AE2  086C               	movf	(_DimmerLights),w
 13552  1AE3  0086               	movwf	fsr1l
 13553  1AE4  3001               	movlw 1	; select bank2/3
 13554  1AE5  0087               	movwf fsr1h	
 13555                           	
 13556  1AE6  1181               	bcf	indf1,3
 13557                           	line	393
 13558                           	
 13559  1AE7                     l24890:	
 13560                           ;Dimmer_B1.c: 393: setLoad_StatusOff(0,1);
 13561  1AE7  01A0               	clrf	(?_setLoad_StatusOff)
 13562  1AE8  1403               	bsf	status,0
 13563  1AE9  0DA0               	rlf	(?_setLoad_StatusOff),f
 13564  1AEA  3000               	movlw	(0)
 13565  1AEB  3198  20A0  319A   	fcall	_setLoad_StatusOff
 13566                           	line	394
 13567                           	
 13568  1AEE                     l24892:	
 13569                           ;Dimmer_B1.c: 394: DimmerLights->MaxmumValue=DimmerLights->DimmingValue;
 13570  1AEE  0020               	movlb 0	; select bank0
 13571  1AEF  086C               	movf	(_DimmerLights),w
 13572  1AF0  3E04               	addlw	04h
 13573  1AF1  0086               	movwf	fsr1l
 13574  1AF2  3001               	movlw 1	; select bank2/3
 13575  1AF3  0087               	movwf fsr1h	
 13576                           	
 13577  1AF4  0801               	movf	indf1,w
 13578  1AF5  00A6               	movwf	(??_setDimmerLights_Adj+0)+0
 13579  1AF6  086C               	movf	(_DimmerLights),w
 13580  1AF7  3E05               	addlw	05h
 13581  1AF8  0086               	movwf	fsr1l
 13582  1AF9  3001               	movlw 1	; select bank2/3
 13583  1AFA  0087               	movwf fsr1h	
 13584                           	
 13585  1AFB  0826               	movf	(??_setDimmerLights_Adj+0)+0,w
 13586  1AFC  0081               	movwf	indf1
 13587                           	line	400
 13588                           ;Dimmer_B1.c: 400: setRF_DimmerLights(lights,1);
 13589  1AFD  01A0               	clrf	(?_setRF_DimmerLights)
 13590  1AFE  1403               	bsf	status,0
 13591  1AFF  0DA0               	rlf	(?_setRF_DimmerLights),f
 13592  1B00  0827               	movf	(setDimmerLights_Adj@lights),w
 13593  1B01  3188  2001  319A   	fcall	_setRF_DimmerLights
 13594                           	line	401
 13595                           ;Dimmer_B1.c: 401: setTxData(1);
 13596  1B04  3001               	movlw	(01h)
 13597  1B05  318B  236C  319A   	fcall	_setTxData
 13598  1B08  2B0A               	goto	l5815
 13599                           	line	402
 13600                           	
 13601  1B09                     l5814:	
 13602  1B09  2B0A               	goto	l5815
 13603                           	line	403
 13604                           	
 13605  1B0A                     l5813:	
 13606                           	line	404
 13607                           	
 13608  1B0A                     l5815:	
 13609  1B0A  0008               	return
 13610                           	opt stack 0
 13611                           GLOBAL	__end_of_setDimmerLights_Adj
 13612  1B0B                     	__end_of_setDimmerLights_Adj:
 13613 ;; =============== function _setDimmerLights_Adj ends ============
 13614                           
 13615                           	signat	_setDimmerLights_Adj,8312
 13616                           	global	_setDimmerLights
 13617                           psect	text4127,local,class=CODE,delta=2
 13618                           global __ptext4127
 13619  1605                     __ptext4127:
 13620                           
 13621 ;; *************** function _setDimmerLights *****************
 13622 ;; Defined at:
 13623 ;;		line 322 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 13624 ;; Parameters:    Size  Location     Type
 13625 ;;  lights          1    wreg     unsigned char 
 13626 ;;  status          1    4[BANK0 ] unsigned char 
 13627 ;; Auto vars:     Size  Location     Type
 13628 ;;  lights          1    6[BANK0 ] unsigned char 
 13629 ;; Return value:  Size  Location     Type
 13630 ;;		None               void
 13631 ;; Registers used:
 13632 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13633 ;; Tracked objects:
 13634 ;;		On entry : 0/0
 13635 ;;		On exit  : 0/0
 13636 ;;		Unchanged: 0/0
 13637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 13638 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 13639 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 13640 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 13641 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 13642 ;;Total ram usage:        3 bytes
 13643 ;; Hardware stack levels used:    1
 13644 ;; Hardware stack levels required when called:    6
 13645 ;; This function calls:
 13646 ;;		_DimmerLightsPointSelect
 13647 ;;		_setLED
 13648 ;;		_setLoad_Count
 13649 ;;		_setLoad_StatusOn
 13650 ;; This function is called by:
 13651 ;;		_setDimmerLights_Main
 13652 ;;		_setControl_Lights_Table
 13653 ;; This function uses a non-reentrant model
 13654 ;;
 13655                           psect	text4127
 13656                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 13657                           	line	322
 13658                           	global	__size_of_setDimmerLights
 13659  00A0                     	__size_of_setDimmerLights	equ	__end_of_setDimmerLights-_setDimmerLights
 13660                           	
 13661  1605                     _setDimmerLights:	
 13662                           	opt	stack 5
 13663                           ; Regs used in _setDimmerLights: [wreg+fsr1l-status,0+pclath+cstack]
 13664                           ;setDimmerLights@lights stored from wreg
 13665  1605  0020               	movlb 0	; select bank0
 13666  1606  00A6               	movwf	(setDimmerLights@lights)
 13667                           	line	323
 13668                           	
 13669  1607                     l24852:	
 13670                           ;Dimmer_B1.c: 323: DimmerLightsPointSelect(lights);
 13671  1607  0826               	movf	(setDimmerLights@lights),w
 13672  1608  31A1  21E6  3196   	fcall	_DimmerLightsPointSelect
 13673                           	line	324
 13674                           	
 13675  160B                     l24854:	
 13676                           ;Dimmer_B1.c: 324: Dimmer->Load=lights;
 13677  160B  0020               	movlb 0	; select bank0
 13678  160C  0826               	movf	(setDimmerLights@lights),w
 13679  160D  00A5               	movwf	(??_setDimmerLights+0)+0
 13680  160E  0021               	movlb 1	; select bank1
 13681  160F  0839               	movf	(_Dimmer)^080h,w
 13682  1610  3E01               	addlw	01h
 13683  1611  0086               	movwf	fsr1l
 13684  1612  0187               	clrf fsr1h	
 13685                           	
 13686  1613  0020               	movlb 0	; select bank0
 13687  1614  0825               	movf	(??_setDimmerLights+0)+0,w
 13688  1615  0081               	movwf	indf1
 13689                           	line	325
 13690                           	
 13691  1616                     l24856:	
 13692                           ;Dimmer_B1.c: 325: if(status)
 13693  1616  0824               	movf	(setDimmerLights@status),w
 13694  1617  1D03               	skipz
 13695  1618  2E1A               	goto	u9280
 13696  1619  2E78               	goto	l24878
 13697  161A                     u9280:
 13698                           	line	327
 13699                           	
 13700  161A                     l24858:	
 13701                           ;Dimmer_B1.c: 326: {
 13702                           ;Dimmer_B1.c: 327: DimmerLights->Status=1;
 13703  161A  086C               	movf	(_DimmerLights),w
 13704  161B  0086               	movwf	fsr1l
 13705  161C  3001               	movlw 1	; select bank2/3
 13706  161D  0087               	movwf fsr1h	
 13707                           	
 13708  161E  1681               	bsf	indf1,5
 13709                           	line	328
 13710                           	
 13711  161F                     l24860:	
 13712                           ;Dimmer_B1.c: 328: setLED(lights,0);
 13713  161F  01A2               	clrf	(?_setLED)
 13714  1620  0826               	movf	(setDimmerLights@lights),w
 13715  1621  3193  23CF  3196   	fcall	_setLED
 13716                           	line	329
 13717                           	
 13718  1624                     l24862:	
 13719                           ;Dimmer_B1.c: 329: RC7=!0;
 13720  1624  0020               	movlb 0	; select bank0
 13721  1625  178E               	bsf	(119/8),(119)&7
 13722                           	line	330
 13723                           	
 13724  1626                     l24864:	
 13725                           ;Dimmer_B1.c: 330: setLoad_Count(0);
 13726  1626  3000               	movlw	(0)
 13727  1627  31A3  2356  3196   	fcall	_setLoad_Count
 13728                           	line	332
 13729                           ;Dimmer_B1.c: 332: DimmerLights->Signal=1;
 13730  162A  0020               	movlb 0	; select bank0
 13731  162B  086C               	movf	(_DimmerLights),w
 13732  162C  0086               	movwf	fsr1l
 13733  162D  3001               	movlw 1	; select bank2/3
 13734  162E  0087               	movwf fsr1h	
 13735                           	
 13736  162F  1481               	bsf	indf1,1
 13737                           	line	333
 13738                           ;Dimmer_B1.c: 333: DimmerLights->DimmingTimeValue=3;
 13739  1630  3003               	movlw	(03h)
 13740  1631  00A5               	movwf	(??_setDimmerLights+0)+0
 13741  1632  086C               	movf	(_DimmerLights),w
 13742  1633  3E02               	addlw	02h
 13743  1634  0086               	movwf	fsr1l
 13744  1635  3001               	movlw 1	; select bank2/3
 13745  1636  0087               	movwf fsr1h	
 13746                           	
 13747  1637  0825               	movf	(??_setDimmerLights+0)+0,w
 13748  1638  0081               	movwf	indf1
 13749                           	line	335
 13750                           ;Dimmer_B1.c: 335: if(!DimmerLights->StatusFlag)
 13751  1639  086C               	movf	(_DimmerLights),w
 13752  163A  0086               	movwf	fsr1l
 13753  163B  3001               	movlw 1	; select bank2/3
 13754  163C  0087               	movwf fsr1h	
 13755                           	
 13756  163D  1B01               	btfsc	indf1,6
 13757  163E  2E40               	goto	u9291
 13758  163F  2E41               	goto	u9290
 13759  1640                     u9291:
 13760  1640  2EA4               	goto	l5809
 13761  1641                     u9290:
 13762                           	line	337
 13763                           	
 13764  1641                     l24866:	
 13765                           ;Dimmer_B1.c: 336: {
 13766                           ;Dimmer_B1.c: 337: DimmerLights->StatusFlag=1;
 13767  1641  086C               	movf	(_DimmerLights),w
 13768  1642  0086               	movwf	fsr1l
 13769  1643  3001               	movlw 1	; select bank2/3
 13770  1644  0087               	movwf fsr1h	
 13771                           	
 13772  1645  1701               	bsf	indf1,6
 13773                           	line	338
 13774                           	
 13775  1646                     l24868:	
 13776                           ;Dimmer_B1.c: 338: setLoad_StatusOn(lights,1);
 13777  1646  01A0               	clrf	(?_setLoad_StatusOn)
 13778  1647  1403               	bsf	status,0
 13779  1648  0DA0               	rlf	(?_setLoad_StatusOn),f
 13780  1649  0826               	movf	(setDimmerLights@lights),w
 13781  164A  3198  20DA  3196   	fcall	_setLoad_StatusOn
 13782                           	line	339
 13783                           	
 13784  164D                     l24870:	
 13785                           ;Dimmer_B1.c: 339: Memory->GO=0; if(!0) { Memory->Time=0; } ;;
 13786  164D  0021               	movlb 1	; select bank1
 13787  164E  086A               	movf	(_Memory)^080h,w
 13788  164F  3E22               	addlw	022h
 13789  1650  0086               	movwf	fsr1l
 13790  1651  3001               	movlw 1	; select bank2/3
 13791  1652  0087               	movwf fsr1h	
 13792                           	
 13793  1653  1081               	bcf	indf1,1
 13794                           	
 13795  1654                     l24872:	
 13796  1654  086A               	movf	(_Memory)^080h,w
 13797  1655  3E23               	addlw	023h
 13798  1656  0086               	movwf	fsr1l
 13799  1657  3001               	movlw 1	; select bank2/3
 13800  1658  0087               	movwf fsr1h	
 13801                           	
 13802  1659  3000               	movlw	low(0)
 13803  165A  3FC0               	movwi	[0]fsr1
 13804  165B  3000               	movlw	high(0)
 13805  165C  3FC1               	movwi	[1]fsr1
 13806  165D  2E5E               	goto	l24874
 13807                           	
 13808  165E                     l5807:	
 13809                           	line	342
 13810                           	
 13811  165E                     l24874:	
 13812                           ;Dimmer_B1.c: 342: DimmerLights->DimmingValue=DimmerLights->MaxmumValue;
 13813  165E  0020               	movlb 0	; select bank0
 13814  165F  086C               	movf	(_DimmerLights),w
 13815  1660  3E05               	addlw	05h
 13816  1661  0086               	movwf	fsr1l
 13817  1662  3001               	movlw 1	; select bank2/3
 13818  1663  0087               	movwf fsr1h	
 13819                           	
 13820  1664  0801               	movf	indf1,w
 13821  1665  00A5               	movwf	(??_setDimmerLights+0)+0
 13822  1666  086C               	movf	(_DimmerLights),w
 13823  1667  3E04               	addlw	04h
 13824  1668  0086               	movwf	fsr1l
 13825  1669  3001               	movlw 1	; select bank2/3
 13826  166A  0087               	movwf fsr1h	
 13827                           	
 13828  166B  0825               	movf	(??_setDimmerLights+0)+0,w
 13829  166C  0081               	movwf	indf1
 13830                           	line	346
 13831                           	
 13832  166D                     l24876:	
 13833                           ;Dimmer_B1.c: 346: DimmerLights->DimmingValue=((char)((100-55)*1.5));
 13834  166D  3043               	movlw	(043h)
 13835  166E  00A5               	movwf	(??_setDimmerLights+0)+0
 13836  166F  086C               	movf	(_DimmerLights),w
 13837  1670  3E04               	addlw	04h
 13838  1671  0086               	movwf	fsr1l
 13839  1672  3001               	movlw 1	; select bank2/3
 13840  1673  0087               	movwf fsr1h	
 13841                           	
 13842  1674  0825               	movf	(??_setDimmerLights+0)+0,w
 13843  1675  0081               	movwf	indf1
 13844  1676  2EA4               	goto	l5809
 13845                           	line	348
 13846                           	
 13847  1677                     l5806:	
 13848                           	line	349
 13849                           ;Dimmer_B1.c: 348: }
 13850                           ;Dimmer_B1.c: 349: }
 13851  1677  2EA4               	goto	l5809
 13852                           	line	350
 13853                           	
 13854  1678                     l5805:	
 13855                           	line	352
 13856                           	
 13857  1678                     l24878:	
 13858                           ;Dimmer_B1.c: 350: else
 13859                           ;Dimmer_B1.c: 351: {
 13860                           ;Dimmer_B1.c: 352: DimmerLights->Status=0;
 13861  1678  086C               	movf	(_DimmerLights),w
 13862  1679  0086               	movwf	fsr1l
 13863  167A  3001               	movlw 1	; select bank2/3
 13864  167B  0087               	movwf fsr1h	
 13865                           	
 13866  167C  1281               	bcf	indf1,5
 13867                           	line	354
 13868                           ;Dimmer_B1.c: 354: DimmerLights->DimmingValue=DimmerLights->MinimumValue;
 13869  167D  086C               	movf	(_DimmerLights),w
 13870  167E  3E06               	addlw	06h
 13871  167F  0086               	movwf	fsr1l
 13872  1680  3001               	movlw 1	; select bank2/3
 13873  1681  0087               	movwf fsr1h	
 13874                           	
 13875  1682  0801               	movf	indf1,w
 13876  1683  00A5               	movwf	(??_setDimmerLights+0)+0
 13877  1684  086C               	movf	(_DimmerLights),w
 13878  1685  3E04               	addlw	04h
 13879  1686  0086               	movwf	fsr1l
 13880  1687  3001               	movlw 1	; select bank2/3
 13881  1688  0087               	movwf fsr1h	
 13882                           	
 13883  1689  0825               	movf	(??_setDimmerLights+0)+0,w
 13884  168A  0081               	movwf	indf1
 13885                           	line	361
 13886                           ;Dimmer_B1.c: 361: DimmerLights->Signal=1;
 13887  168B  086C               	movf	(_DimmerLights),w
 13888  168C  0086               	movwf	fsr1l
 13889  168D  3001               	movlw 1	; select bank2/3
 13890  168E  0087               	movwf fsr1h	
 13891                           	
 13892  168F  1481               	bsf	indf1,1
 13893                           	line	362
 13894                           ;Dimmer_B1.c: 362: DimmerLights->AdjFlag=0;
 13895  1690  086C               	movf	(_DimmerLights),w
 13896  1691  0086               	movwf	fsr1l
 13897  1692  3001               	movlw 1	; select bank2/3
 13898  1693  0087               	movwf fsr1h	
 13899                           	
 13900  1694  1181               	bcf	indf1,3
 13901                           	line	363
 13902                           ;Dimmer_B1.c: 363: DimmerLights->AdjStatus=0;
 13903  1695  086C               	movf	(_DimmerLights),w
 13904  1696  0086               	movwf	fsr1l
 13905  1697  3001               	movlw 1	; select bank2/3
 13906  1698  0087               	movwf fsr1h	
 13907                           	
 13908  1699  1201               	bcf	indf1,4
 13909                           	line	364
 13910                           ;Dimmer_B1.c: 364: DimmerLights->DimmingTimeValue=3;
 13911  169A  3003               	movlw	(03h)
 13912  169B  00A5               	movwf	(??_setDimmerLights+0)+0
 13913  169C  086C               	movf	(_DimmerLights),w
 13914  169D  3E02               	addlw	02h
 13915  169E  0086               	movwf	fsr1l
 13916  169F  3001               	movlw 1	; select bank2/3
 13917  16A0  0087               	movwf fsr1h	
 13918                           	
 13919  16A1  0825               	movf	(??_setDimmerLights+0)+0,w
 13920  16A2  0081               	movwf	indf1
 13921  16A3  2EA4               	goto	l5809
 13922                           	line	376
 13923                           	
 13924  16A4                     l5808:	
 13925                           	line	377
 13926                           	
 13927  16A4                     l5809:	
 13928  16A4  0008               	return
 13929                           	opt stack 0
 13930                           GLOBAL	__end_of_setDimmerLights
 13931  16A5                     	__end_of_setDimmerLights:
 13932 ;; =============== function _setDimmerLights ends ============
 13933                           
 13934                           	signat	_setDimmerLights,8312
 13935                           	global	_DimmerLights_Initialization
 13936                           psect	text4128,local,class=CODE,delta=2
 13937                           global __ptext4128
 13938  21B2                     __ptext4128:
 13939                           
 13940 ;; *************** function _DimmerLights_Initialization *****************
 13941 ;; Defined at:
 13942 ;;		line 33 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 13943 ;; Parameters:    Size  Location     Type
 13944 ;;		None
 13945 ;; Auto vars:     Size  Location     Type
 13946 ;;		None
 13947 ;; Return value:  Size  Location     Type
 13948 ;;		None               void
 13949 ;; Registers used:
 13950 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13951 ;; Tracked objects:
 13952 ;;		On entry : 0/0
 13953 ;;		On exit  : 0/0
 13954 ;;		Unchanged: 0/0
 13955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 13956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 13957 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 13958 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 13959 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 13960 ;;Total ram usage:        1 bytes
 13961 ;; Hardware stack levels used:    1
 13962 ;; Hardware stack levels required when called:    6
 13963 ;; This function calls:
 13964 ;;		_setDimmerLights_Initialization
 13965 ;;		_Dimmer_Initialization
 13966 ;; This function is called by:
 13967 ;;		_main
 13968 ;; This function uses a non-reentrant model
 13969 ;;
 13970                           psect	text4128
 13971                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 13972                           	line	33
 13973                           	global	__size_of_DimmerLights_Initialization
 13974  000D                     	__size_of_DimmerLights_Initialization	equ	__end_of_DimmerLights_Initialization-_DimmerL
                                 ights_Initialization
 13975                           	
 13976  21B2                     _DimmerLights_Initialization:	
 13977                           	opt	stack 9
 13978                           ; Regs used in _DimmerLights_Initialization: [wreg+fsr1l-status,0+pclath+cstack]
 13979                           	line	35
 13980                           	
 13981  21B2                     l23478:	
 13982                           ;Dimmer_B1.c: 35: DimmerLights11=&DimmerLights1;
 13983  21B2  303E               	movlw	(_DimmerLights1)&0ffh
 13984  21B3  0020               	movlb 0	; select bank0
 13985  21B4  00A4               	movwf	(??_DimmerLights_Initialization+0)+0
 13986  21B5  0824               	movf	(??_DimmerLights_Initialization+0)+0,w
 13987  21B6  00F9               	movwf	(_DimmerLights11)
 13988                           	line	36
 13989                           	
 13990  21B7                     l23480:	
 13991                           ;Dimmer_B1.c: 36: setDimmerLights_Initialization(1);
 13992  21B7  3001               	movlw	(01h)
 13993  21B8  31A6  2604  31A1   	fcall	_setDimmerLights_Initialization
 13994                           	line	50
 13995                           	
 13996  21BB                     l23482:	
 13997                           ;Dimmer_B1.c: 50: Dimmer_Initialization();
 13998  21BB  31A0  20D0  31A1   	fcall	_Dimmer_Initialization
 13999                           	line	53
 14000                           	
 14001  21BE                     l5755:	
 14002  21BE  0008               	return
 14003                           	opt stack 0
 14004                           GLOBAL	__end_of_DimmerLights_Initialization
 14005  21BF                     	__end_of_DimmerLights_Initialization:
 14006 ;; =============== function _DimmerLights_Initialization ends ============
 14007                           
 14008                           	signat	_DimmerLights_Initialization,88
 14009                           	global	_DlyOff_Main
 14010                           psect	text4129,local,class=CODE,delta=2
 14011                           global __ptext4129
 14012  1349                     __ptext4129:
 14013                           
 14014 ;; *************** function _DlyOff_Main *****************
 14015 ;; Defined at:
 14016 ;;		line 67 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\DelayOff_B1.c"
 14017 ;; Parameters:    Size  Location     Type
 14018 ;;  sw              1    wreg     unsigned char 
 14019 ;; Auto vars:     Size  Location     Type
 14020 ;;  sw              1   12[BANK0 ] unsigned char 
 14021 ;; Return value:  Size  Location     Type
 14022 ;;		None               void
 14023 ;; Registers used:
 14024 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14025 ;; Tracked objects:
 14026 ;;		On entry : 0/0
 14027 ;;		On exit  : 0/0
 14028 ;;		Unchanged: 0/0
 14029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 14030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 14031 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 14032 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 14033 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 14034 ;;Total ram usage:        3 bytes
 14035 ;; Hardware stack levels used:    1
 14036 ;; Hardware stack levels required when called:    6
 14037 ;; This function calls:
 14038 ;;		_DelayOffPointSelect
 14039 ;;		_setSw_Status
 14040 ;;		_setRFSW_Status
 14041 ;;		_setRF_DimmerLights
 14042 ;;		_setDimmerLights_Trigger
 14043 ;;		_setDimmerLights_Switch
 14044 ;;		_setTxData
 14045 ;;		_setBuz
 14046 ;; This function is called by:
 14047 ;;		_DelayOff_Main
 14048 ;; This function uses a non-reentrant model
 14049 ;;
 14050                           psect	text4129
 14051                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\DelayOff_B1.c"
 14052                           	line	67
 14053                           	global	__size_of_DlyOff_Main
 14054  0086                     	__size_of_DlyOff_Main	equ	__end_of_DlyOff_Main-_DlyOff_Main
 14055                           	
 14056  1349                     _DlyOff_Main:	
 14057                           	opt	stack 8
 14058                           ; Regs used in _DlyOff_Main: [wreg-status,0+pclath+cstack]
 14059                           ;DlyOff_Main@sw stored from wreg
 14060  1349  0020               	movlb 0	; select bank0
 14061  134A  00AC               	movwf	(DlyOff_Main@sw)
 14062                           	line	68
 14063                           	
 14064  134B                     l24822:	
 14065                           ;DelayOff_B1.c: 68: DelayOffPointSelect(sw);
 14066  134B  082C               	movf	(DlyOff_Main@sw),w
 14067  134C  31A2  222C  3193   	fcall	_DelayOffPointSelect
 14068                           	line	69
 14069                           	
 14070  134F                     l24824:	
 14071                           ;DelayOff_B1.c: 69: if(DelayOff->GO)
 14072  134F  0021               	movlb 1	; select bank1
 14073  1350  0838               	movf	(_DelayOff)^080h,w
 14074  1351  0086               	movwf	fsr1l
 14075  1352  0187               	clrf fsr1h	
 14076                           	
 14077  1353  1C81               	btfss	indf1,1
 14078  1354  2B56               	goto	u9251
 14079  1355  2B57               	goto	u9250
 14080  1356                     u9251:
 14081  1356  2BCE               	goto	l4589
 14082  1357                     u9250:
 14083                           	line	71
 14084                           	
 14085  1357                     l24826:	
 14086                           ;DelayOff_B1.c: 70: {
 14087                           ;DelayOff_B1.c: 71: DelayOff->SecondTime++;
 14088  1357  0838               	movf	(_DelayOff)^080h,w
 14089  1358  3E02               	addlw	02h
 14090  1359  0086               	movwf	fsr1l
 14091  135A  0187               	clrf fsr1h	
 14092                           	
 14093  135B  3001               	movlw	01h
 14094  135C  0781               	addwf	indf1,f
 14095  135D  3141               	addfsr	fsr1,1
 14096  135E  1803               	skipnc
 14097  135F  0A81               	incf	indf1,f
 14098                           	line	72
 14099                           	
 14100  1360                     l24828:	
 14101                           ;DelayOff_B1.c: 72: if(DelayOff->SecondTime >= 5600)
 14102  1360  0838               	movf	(_DelayOff)^080h,w
 14103  1361  3E02               	addlw	02h
 14104  1362  0086               	movwf	fsr1l
 14105  1363  0187               	clrf fsr1h	
 14106                           	
 14107  1364  3F40               	moviw	[0]fsr1
 14108  1365  0020               	movlb 0	; select bank0
 14109  1366  00AA               	movwf	(??_DlyOff_Main+0)+0
 14110  1367  3F41               	moviw	[1]fsr1
 14111  1368  00AB               	movwf	(??_DlyOff_Main+0)+0+1
 14112  1369  3015               	movlw	high(015E0h)
 14113  136A  022B               	subwf	1+(??_DlyOff_Main+0)+0,w
 14114  136B  30E0               	movlw	low(015E0h)
 14115  136C  1903               	skipnz
 14116  136D  022A               	subwf	0+(??_DlyOff_Main+0)+0,w
 14117  136E  1C03               	skipc
 14118  136F  2B71               	goto	u9261
 14119  1370  2B72               	goto	u9260
 14120  1371                     u9261:
 14121  1371  2BCE               	goto	l4589
 14122  1372                     u9260:
 14123                           	line	74
 14124                           	
 14125  1372                     l24830:	
 14126                           ;DelayOff_B1.c: 73: {
 14127                           ;DelayOff_B1.c: 74: DelayOff->SecondTime=0;
 14128  1372  0021               	movlb 1	; select bank1
 14129  1373  0838               	movf	(_DelayOff)^080h,w
 14130  1374  3E02               	addlw	02h
 14131  1375  0086               	movwf	fsr1l
 14132  1376  0187               	clrf fsr1h	
 14133                           	
 14134  1377  3000               	movlw	low(0)
 14135  1378  3FC0               	movwi	[0]fsr1
 14136  1379  3000               	movlw	high(0)
 14137  137A  3FC1               	movwi	[1]fsr1
 14138                           	line	75
 14139                           	
 14140  137B                     l24832:	
 14141                           ;DelayOff_B1.c: 75: DelayOff->MinuteTime++;
 14142  137B  3001               	movlw	(01h)
 14143  137C  0020               	movlb 0	; select bank0
 14144  137D  00AA               	movwf	(??_DlyOff_Main+0)+0
 14145  137E  0021               	movlb 1	; select bank1
 14146  137F  0838               	movf	(_DelayOff)^080h,w
 14147  1380  3E04               	addlw	04h
 14148  1381  0086               	movwf	fsr1l
 14149  1382  0187               	clrf fsr1h	
 14150                           	
 14151  1383  0020               	movlb 0	; select bank0
 14152  1384  082A               	movf	(??_DlyOff_Main+0)+0,w
 14153  1385  0781               	addwf	indf1,f
 14154                           	line	76
 14155                           	
 14156  1386                     l24834:	
 14157                           ;DelayOff_B1.c: 76: if(DelayOff->MinuteTime >= DelayOff->Value)
 14158  1386  0021               	movlb 1	; select bank1
 14159  1387  0838               	movf	(_DelayOff)^080h,w
 14160  1388  3E04               	addlw	04h
 14161  1389  0086               	movwf	fsr1l
 14162  138A  0187               	clrf fsr1h	
 14163                           	
 14164  138B  0838               	movf	(_DelayOff)^080h,w
 14165  138C  3E01               	addlw	01h
 14166  138D  0084               	movwf	fsr0l
 14167  138E  0185               	clrf fsr0h	
 14168                           	
 14169  138F  0800               	movf	indf0,w
 14170  1390  0201               	subwf	indf1,w
 14171  1391  1C03               	skipc
 14172  1392  2B94               	goto	u9271
 14173  1393  2B95               	goto	u9270
 14174  1394                     u9271:
 14175  1394  2BCE               	goto	l4589
 14176  1395                     u9270:
 14177                           	line	78
 14178                           	
 14179  1395                     l24836:	
 14180                           ;DelayOff_B1.c: 77: {
 14181                           ;DelayOff_B1.c: 78: DelayOff->MinuteTime=0;
 14182  1395  0838               	movf	(_DelayOff)^080h,w
 14183  1396  3E04               	addlw	04h
 14184  1397  0086               	movwf	fsr1l
 14185  1398  0187               	clrf fsr1h	
 14186                           	
 14187  1399  0181               	clrf	indf1
 14188                           	line	79
 14189                           ;DelayOff_B1.c: 79: DelayOff->GO=0;
 14190  139A  0838               	movf	(_DelayOff)^080h,w
 14191  139B  0086               	movwf	fsr1l
 14192  139C  0187               	clrf fsr1h	
 14193                           	
 14194  139D  1081               	bcf	indf1,1
 14195                           	line	80
 14196                           	
 14197  139E                     l24838:	
 14198                           ;DelayOff_B1.c: 80: setSw_Status(sw,0);
 14199  139E  0020               	movlb 0	; select bank0
 14200  139F  01A2               	clrf	(?_setSw_Status)
 14201  13A0  082C               	movf	(DlyOff_Main@sw),w
 14202  13A1  31A2  2287  3193   	fcall	_setSw_Status
 14203                           	line	81
 14204                           	
 14205  13A4                     l24840:	
 14206                           ;DelayOff_B1.c: 81: setRFSW_Status(sw,0);
 14207  13A4  0020               	movlb 0	; select bank0
 14208  13A5  01A2               	clrf	(?_setRFSW_Status)
 14209  13A6  082C               	movf	(DlyOff_Main@sw),w
 14210  13A7  31A2  2297  3193   	fcall	_setRFSW_Status
 14211                           	line	82
 14212                           	
 14213  13AA                     l24842:	
 14214                           ;DelayOff_B1.c: 82: setRF_DimmerLights(sw,0);
 14215  13AA  0020               	movlb 0	; select bank0
 14216  13AB  01A0               	clrf	(?_setRF_DimmerLights)
 14217  13AC  082C               	movf	(DlyOff_Main@sw),w
 14218  13AD  3188  2001  3193   	fcall	_setRF_DimmerLights
 14219                           	line	83
 14220                           	
 14221  13B0                     l24844:	
 14222                           ;DelayOff_B1.c: 83: setDimmerLights_Trigger(sw,1);
 14223  13B0  0020               	movlb 0	; select bank0
 14224  13B1  01A2               	clrf	(?_setDimmerLights_Trigger)
 14225  13B2  1403               	bsf	status,0
 14226  13B3  0DA2               	rlf	(?_setDimmerLights_Trigger),f
 14227  13B4  082C               	movf	(DlyOff_Main@sw),w
 14228  13B5  31A2  22B7  3193   	fcall	_setDimmerLights_Trigger
 14229                           	line	84
 14230                           	
 14231  13B8                     l24846:	
 14232                           ;DelayOff_B1.c: 84: setDimmerLights_Switch(sw,0);
 14233  13B8  0020               	movlb 0	; select bank0
 14234  13B9  01A2               	clrf	(?_setDimmerLights_Switch)
 14235  13BA  082C               	movf	(DlyOff_Main@sw),w
 14236  13BB  31A2  22C8  3193   	fcall	_setDimmerLights_Switch
 14237                           	line	85
 14238                           	
 14239  13BE                     l24848:	
 14240                           ;DelayOff_B1.c: 85: setTxData(1);
 14241  13BE  3001               	movlw	(01h)
 14242  13BF  318B  236C  3193   	fcall	_setTxData
 14243                           	line	86
 14244                           	
 14245  13C2                     l24850:	
 14246                           ;DelayOff_B1.c: 86: setBuz(1,100);
 14247  13C2  3064               	movlw	low(064h)
 14248  13C3  0020               	movlb 0	; select bank0
 14249  13C4  00A6               	movwf	(?_setBuz)
 14250  13C5  3000               	movlw	high(064h)
 14251  13C6  00A7               	movwf	((?_setBuz))+1
 14252  13C7  3001               	movlw	(01h)
 14253  13C8  3192  22C6  3193   	fcall	_setBuz
 14254  13CB  2BCE               	goto	l4589
 14255                           	line	87
 14256                           	
 14257  13CC                     l4588:	
 14258  13CC  2BCE               	goto	l4589
 14259                           	line	88
 14260                           	
 14261  13CD                     l4587:	
 14262  13CD  2BCE               	goto	l4589
 14263                           	line	89
 14264                           	
 14265  13CE                     l4586:	
 14266                           	line	90
 14267                           	
 14268  13CE                     l4589:	
 14269  13CE  0008               	return
 14270                           	opt stack 0
 14271                           GLOBAL	__end_of_DlyOff_Main
 14272  13CF                     	__end_of_DlyOff_Main:
 14273 ;; =============== function _DlyOff_Main ends ============
 14274                           
 14275                           	signat	_DlyOff_Main,4216
 14276                           	global	_DelayOff_Initialization
 14277                           psect	text4130,local,class=CODE,delta=2
 14278                           global __ptext4130
 14279  20AA                     __ptext4130:
 14280                           
 14281 ;; *************** function _DelayOff_Initialization *****************
 14282 ;; Defined at:
 14283 ;;		line 31 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\DelayOff_B1.c"
 14284 ;; Parameters:    Size  Location     Type
 14285 ;;		None
 14286 ;; Auto vars:     Size  Location     Type
 14287 ;;		None
 14288 ;; Return value:  Size  Location     Type
 14289 ;;		None               void
 14290 ;; Registers used:
 14291 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14292 ;; Tracked objects:
 14293 ;;		On entry : 0/0
 14294 ;;		On exit  : 0/0
 14295 ;;		Unchanged: 0/0
 14296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 14297 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 14298 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 14299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 14300 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 14301 ;;Total ram usage:        0 bytes
 14302 ;; Hardware stack levels used:    1
 14303 ;; Hardware stack levels required when called:    6
 14304 ;; This function calls:
 14305 ;;		_DlyOff_Initialization
 14306 ;; This function is called by:
 14307 ;;		_main
 14308 ;; This function uses a non-reentrant model
 14309 ;;
 14310                           psect	text4130
 14311                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\DelayOff_B1.c"
 14312                           	line	31
 14313                           	global	__size_of_DelayOff_Initialization
 14314  0005                     	__size_of_DelayOff_Initialization	equ	__end_of_DelayOff_Initialization-_DelayOff_Initia
                                 lization
 14315                           	
 14316  20AA                     _DelayOff_Initialization:	
 14317                           	opt	stack 9
 14318                           ; Regs used in _DelayOff_Initialization: [wreg+fsr1l-status,0+pclath+cstack]
 14319                           	line	33
 14320                           	
 14321  20AA                     l24820:	
 14322                           ;DelayOff_B1.c: 33: DlyOff_Initialization(1);
 14323  20AA  3001               	movlw	(01h)
 14324  20AB  31A1  2165  31A0   	fcall	_DlyOff_Initialization
 14325                           	line	43
 14326                           	
 14327  20AE                     l4577:	
 14328  20AE  0008               	return
 14329                           	opt stack 0
 14330                           GLOBAL	__end_of_DelayOff_Initialization
 14331  20AF                     	__end_of_DelayOff_Initialization:
 14332 ;; =============== function _DelayOff_Initialization ends ============
 14333                           
 14334                           	signat	_DelayOff_Initialization,88
 14335                           	global	_CC2500_SIDLEMode
 14336                           psect	text4131,local,class=CODE,delta=2
 14337                           global __ptext4131
 14338  20A5                     __ptext4131:
 14339                           
 14340 ;; *************** function _CC2500_SIDLEMode *****************
 14341 ;; Defined at:
 14342 ;;		line 184 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
 14343 ;; Parameters:    Size  Location     Type
 14344 ;;		None
 14345 ;; Auto vars:     Size  Location     Type
 14346 ;;		None
 14347 ;; Return value:  Size  Location     Type
 14348 ;;		None               void
 14349 ;; Registers used:
 14350 ;;		wreg, status,2, status,0, pclath, cstack
 14351 ;; Tracked objects:
 14352 ;;		On entry : 0/0
 14353 ;;		On exit  : 0/0
 14354 ;;		Unchanged: 0/0
 14355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 14356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 14357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 14358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 14359 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 14360 ;;Total ram usage:        0 bytes
 14361 ;; Hardware stack levels used:    1
 14362 ;; Hardware stack levels required when called:    6
 14363 ;; This function calls:
 14364 ;;		_CC2500_WriteCommand
 14365 ;; This function is called by:
 14366 ;;		_CC2500_PowerOnInitial
 14367 ;; This function uses a non-reentrant model
 14368 ;;
 14369                           psect	text4131
 14370                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
 14371                           	line	184
 14372                           	global	__size_of_CC2500_SIDLEMode
 14373  0005                     	__size_of_CC2500_SIDLEMode	equ	__end_of_CC2500_SIDLEMode-_CC2500_SIDLEMode
 14374                           	
 14375  20A5                     _CC2500_SIDLEMode:	
 14376                           	opt	stack 8
 14377                           ; Regs used in _CC2500_SIDLEMode: [wreg+status,2+status,0+pclath+cstack]
 14378                           	line	185
 14379                           	
 14380  20A5                     l24818:	
 14381                           ;CC2500_B1.c: 185: CC2500_WriteCommand(0x36);
 14382  20A5  3036               	movlw	(036h)
 14383  20A6  31A3  236B  31A0   	fcall	_CC2500_WriteCommand
 14384                           	line	186
 14385                           	
 14386  20A9                     l2312:	
 14387  20A9  0008               	return
 14388                           	opt stack 0
 14389                           GLOBAL	__end_of_CC2500_SIDLEMode
 14390  20AA                     	__end_of_CC2500_SIDLEMode:
 14391 ;; =============== function _CC2500_SIDLEMode ends ============
 14392                           
 14393                           	signat	_CC2500_SIDLEMode,88
 14394                           	global	_CC2500_FrequencyCabr
 14395                           psect	text4132,local,class=CODE,delta=2
 14396                           global __ptext4132
 14397  21A5                     __ptext4132:
 14398                           
 14399 ;; *************** function _CC2500_FrequencyCabr *****************
 14400 ;; Defined at:
 14401 ;;		line 176 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
 14402 ;; Parameters:    Size  Location     Type
 14403 ;;		None
 14404 ;; Auto vars:     Size  Location     Type
 14405 ;;		None
 14406 ;; Return value:  Size  Location     Type
 14407 ;;		None               void
 14408 ;; Registers used:
 14409 ;;		wreg, status,2, status,0, pclath, cstack
 14410 ;; Tracked objects:
 14411 ;;		On entry : 0/0
 14412 ;;		On exit  : 0/0
 14413 ;;		Unchanged: 0/0
 14414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 14415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 14416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 14417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 14418 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 14419 ;;Total ram usage:        0 bytes
 14420 ;; Hardware stack levels used:    1
 14421 ;; Hardware stack levels required when called:    6
 14422 ;; This function calls:
 14423 ;;		_CC2500_WriteCommand
 14424 ;;		_DelayTime_1us
 14425 ;; This function is called by:
 14426 ;;		_CC2500_PowerOnInitial
 14427 ;; This function uses a non-reentrant model
 14428 ;;
 14429                           psect	text4132
 14430                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
 14431                           	line	176
 14432                           	global	__size_of_CC2500_FrequencyCabr
 14433  000D                     	__size_of_CC2500_FrequencyCabr	equ	__end_of_CC2500_FrequencyCabr-_CC2500_FrequencyCabr
 14434                           	
 14435  21A5                     _CC2500_FrequencyCabr:	
 14436                           	opt	stack 8
 14437                           ; Regs used in _CC2500_FrequencyCabr: [wreg+status,2+status,0+pclath+cstack]
 14438                           	line	177
 14439                           	
 14440  21A5                     l24816:	
 14441                           ;CC2500_B1.c: 177: CC2500_WriteCommand(0x33);
 14442  21A5  3033               	movlw	(033h)
 14443  21A6  31A3  236B  31A1   	fcall	_CC2500_WriteCommand
 14444                           	line	178
 14445                           ;CC2500_B1.c: 178: DelayTime_1us(1000);
 14446  21A9  30E8               	movlw	low(03E8h)
 14447  21AA  0020               	movlb 0	; select bank0
 14448  21AB  00A0               	movwf	(?_DelayTime_1us)
 14449  21AC  3003               	movlw	high(03E8h)
 14450  21AD  00A1               	movwf	((?_DelayTime_1us))+1
 14451  21AE  31A6  26EE  31A1   	fcall	_DelayTime_1us
 14452                           	line	179
 14453                           	
 14454  21B1                     l2309:	
 14455  21B1  0008               	return
 14456                           	opt stack 0
 14457                           GLOBAL	__end_of_CC2500_FrequencyCabr
 14458  21B2                     	__end_of_CC2500_FrequencyCabr:
 14459 ;; =============== function _CC2500_FrequencyCabr ends ============
 14460                           
 14461                           	signat	_CC2500_FrequencyCabr,88
 14462                           	global	_CC2500_ClearRXFIFO
 14463                           psect	text4133,local,class=CODE,delta=2
 14464                           global __ptext4133
 14465  20A0                     __ptext4133:
 14466                           
 14467 ;; *************** function _CC2500_ClearRXFIFO *****************
 14468 ;; Defined at:
 14469 ;;		line 169 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
 14470 ;; Parameters:    Size  Location     Type
 14471 ;;		None
 14472 ;; Auto vars:     Size  Location     Type
 14473 ;;		None
 14474 ;; Return value:  Size  Location     Type
 14475 ;;		None               void
 14476 ;; Registers used:
 14477 ;;		wreg, status,2, status,0, pclath, cstack
 14478 ;; Tracked objects:
 14479 ;;		On entry : 0/0
 14480 ;;		On exit  : 0/0
 14481 ;;		Unchanged: 0/0
 14482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 14483 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 14484 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 14485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 14486 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 14487 ;;Total ram usage:        0 bytes
 14488 ;; Hardware stack levels used:    1
 14489 ;; Hardware stack levels required when called:    6
 14490 ;; This function calls:
 14491 ;;		_CC2500_WriteCommand
 14492 ;; This function is called by:
 14493 ;;		_CC2500_PowerOnInitial
 14494 ;; This function uses a non-reentrant model
 14495 ;;
 14496                           psect	text4133
 14497                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
 14498                           	line	169
 14499                           	global	__size_of_CC2500_ClearRXFIFO
 14500  0005                     	__size_of_CC2500_ClearRXFIFO	equ	__end_of_CC2500_ClearRXFIFO-_CC2500_ClearRXFIFO
 14501                           	
 14502  20A0                     _CC2500_ClearRXFIFO:	
 14503                           	opt	stack 8
 14504                           ; Regs used in _CC2500_ClearRXFIFO: [wreg+status,2+status,0+pclath+cstack]
 14505                           	line	170
 14506                           	
 14507  20A0                     l24814:	
 14508                           ;CC2500_B1.c: 170: CC2500_WriteCommand(0x3A);
 14509  20A0  303A               	movlw	(03Ah)
 14510  20A1  31A3  236B  31A0   	fcall	_CC2500_WriteCommand
 14511                           	line	171
 14512                           	
 14513  20A4                     l2306:	
 14514  20A4  0008               	return
 14515                           	opt stack 0
 14516                           GLOBAL	__end_of_CC2500_ClearRXFIFO
 14517  20A5                     	__end_of_CC2500_ClearRXFIFO:
 14518 ;; =============== function _CC2500_ClearRXFIFO ends ============
 14519                           
 14520                           	signat	_CC2500_ClearRXFIFO,88
 14521                           	global	_CC2500_ClearTXFIFO
 14522                           psect	text4134,local,class=CODE,delta=2
 14523                           global __ptext4134
 14524  209B                     __ptext4134:
 14525                           
 14526 ;; *************** function _CC2500_ClearTXFIFO *****************
 14527 ;; Defined at:
 14528 ;;		line 162 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
 14529 ;; Parameters:    Size  Location     Type
 14530 ;;		None
 14531 ;; Auto vars:     Size  Location     Type
 14532 ;;		None
 14533 ;; Return value:  Size  Location     Type
 14534 ;;		None               void
 14535 ;; Registers used:
 14536 ;;		wreg, status,2, status,0, pclath, cstack
 14537 ;; Tracked objects:
 14538 ;;		On entry : 0/0
 14539 ;;		On exit  : 0/0
 14540 ;;		Unchanged: 0/0
 14541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 14542 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 14543 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 14544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 14545 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 14546 ;;Total ram usage:        0 bytes
 14547 ;; Hardware stack levels used:    1
 14548 ;; Hardware stack levels required when called:    6
 14549 ;; This function calls:
 14550 ;;		_CC2500_WriteCommand
 14551 ;; This function is called by:
 14552 ;;		_CC2500_PowerOnInitial
 14553 ;; This function uses a non-reentrant model
 14554 ;;
 14555                           psect	text4134
 14556                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
 14557                           	line	162
 14558                           	global	__size_of_CC2500_ClearTXFIFO
 14559  0005                     	__size_of_CC2500_ClearTXFIFO	equ	__end_of_CC2500_ClearTXFIFO-_CC2500_ClearTXFIFO
 14560                           	
 14561  209B                     _CC2500_ClearTXFIFO:	
 14562                           	opt	stack 8
 14563                           ; Regs used in _CC2500_ClearTXFIFO: [wreg+status,2+status,0+pclath+cstack]
 14564                           	line	163
 14565                           	
 14566  209B                     l24812:	
 14567                           ;CC2500_B1.c: 163: CC2500_WriteCommand(0x3B);
 14568  209B  303B               	movlw	(03Bh)
 14569  209C  31A3  236B  31A0   	fcall	_CC2500_WriteCommand
 14570                           	line	164
 14571                           	
 14572  209F                     l2303:	
 14573  209F  0008               	return
 14574                           	opt stack 0
 14575                           GLOBAL	__end_of_CC2500_ClearTXFIFO
 14576  20A0                     	__end_of_CC2500_ClearTXFIFO:
 14577 ;; =============== function _CC2500_ClearTXFIFO ends ============
 14578                           
 14579                           	signat	_CC2500_ClearTXFIFO,88
 14580                           	global	_CC2500_InitPATable
 14581                           psect	text4135,local,class=CODE,delta=2
 14582                           global __ptext4135
 14583  24AE                     __ptext4135:
 14584                           
 14585 ;; *************** function _CC2500_InitPATable *****************
 14586 ;; Defined at:
 14587 ;;		line 148 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
 14588 ;; Parameters:    Size  Location     Type
 14589 ;;		None
 14590 ;; Auto vars:     Size  Location     Type
 14591 ;;  loop_d          1    7[BANK0 ] unsigned char 
 14592 ;;  temp            1    6[BANK0 ] unsigned char 
 14593 ;; Return value:  Size  Location     Type
 14594 ;;		None               void
 14595 ;; Registers used:
 14596 ;;		wreg, status,2, status,0, pclath, cstack
 14597 ;; Tracked objects:
 14598 ;;		On entry : 0/0
 14599 ;;		On exit  : 0/0
 14600 ;;		Unchanged: 0/0
 14601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 14602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 14603 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 14604 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 14605 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 14606 ;;Total ram usage:        3 bytes
 14607 ;; Hardware stack levels used:    1
 14608 ;; Hardware stack levels required when called:    6
 14609 ;; This function calls:
 14610 ;;		_CC2500_WriteREG
 14611 ;; This function is called by:
 14612 ;;		_CC2500_PowerOnInitial
 14613 ;; This function uses a non-reentrant model
 14614 ;;
 14615                           psect	text4135
 14616                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
 14617                           	line	148
 14618                           	global	__size_of_CC2500_InitPATable
 14619  0027                     	__size_of_CC2500_InitPATable	equ	__end_of_CC2500_InitPATable-_CC2500_InitPATable
 14620                           	
 14621  24AE                     _CC2500_InitPATable:	
 14622                           	opt	stack 8
 14623                           ; Regs used in _CC2500_InitPATable: [wreg+status,2+status,0+pclath+cstack]
 14624                           	line	152
 14625                           	
 14626  24AE                     l23424:	
 14627                           ;CC2500_B1.c: 149: unsigned char loop_d;
 14628                           ;CC2500_B1.c: 150: unsigned char temp;
 14629                           ;CC2500_B1.c: 152: for(loop_d=0;loop_d<8;loop_d++)
 14630  24AE  0020               	movlb 0	; select bank0
 14631  24AF  01A7               	clrf	(CC2500_InitPATable@loop_d)
 14632                           	
 14633  24B0                     l23426:	
 14634  24B0  3008               	movlw	(08h)
 14635  24B1  0227               	subwf	(CC2500_InitPATable@loop_d),w
 14636  24B2  1C03               	skipc
 14637  24B3  2CB5               	goto	u7331
 14638  24B4  2CB6               	goto	u7330
 14639  24B5                     u7331:
 14640  24B5  2CB8               	goto	l23430
 14641  24B6                     u7330:
 14642  24B6  2CD4               	goto	l2300
 14643                           	
 14644  24B7                     l23428:	
 14645  24B7  2CD4               	goto	l2300
 14646                           	line	153
 14647                           	
 14648  24B8                     l2298:	
 14649                           	line	154
 14650                           	
 14651  24B8                     l23430:	
 14652                           ;CC2500_B1.c: 153: {
 14653                           ;CC2500_B1.c: 154: temp=CC2500_patable_vaule[loop_d];
 14654  24B8  0827               	movf	(CC2500_InitPATable@loop_d),w
 14655  24B9  3E5F               	addlw	low(_CC2500_patable_vaule|8000h)
 14656  24BA  3198               	movlp	high __stringtab
 14657  24BB  000A               	callw
 14658  24BC  31A4               	pagesel	$
 14659  24BD  00A5               	movwf	(??_CC2500_InitPATable+0)+0
 14660  24BE  0825               	movf	(??_CC2500_InitPATable+0)+0,w
 14661  24BF  00A6               	movwf	(CC2500_InitPATable@temp)
 14662                           	line	155
 14663                           	
 14664  24C0                     l23432:	
 14665                           ;CC2500_B1.c: 155: CC2500_WriteREG(0x3E,temp);
 14666  24C0  0826               	movf	(CC2500_InitPATable@temp),w
 14667  24C1  00A5               	movwf	(??_CC2500_InitPATable+0)+0
 14668  24C2  0825               	movf	(??_CC2500_InitPATable+0)+0,w
 14669  24C3  00A2               	movwf	(?_CC2500_WriteREG)
 14670  24C4  303E               	movlw	(03Eh)
 14671  24C5  31A3  23E2  31A4   	fcall	_CC2500_WriteREG
 14672                           	line	152
 14673                           	
 14674  24C8                     l23434:	
 14675  24C8  3001               	movlw	(01h)
 14676  24C9  0020               	movlb 0	; select bank0
 14677  24CA  00A5               	movwf	(??_CC2500_InitPATable+0)+0
 14678  24CB  0825               	movf	(??_CC2500_InitPATable+0)+0,w
 14679  24CC  07A7               	addwf	(CC2500_InitPATable@loop_d),f
 14680                           	
 14681  24CD                     l23436:	
 14682  24CD  3008               	movlw	(08h)
 14683  24CE  0227               	subwf	(CC2500_InitPATable@loop_d),w
 14684  24CF  1C03               	skipc
 14685  24D0  2CD2               	goto	u7341
 14686  24D1  2CD3               	goto	u7340
 14687  24D2                     u7341:
 14688  24D2  2CB8               	goto	l23430
 14689  24D3                     u7340:
 14690  24D3  2CD4               	goto	l2300
 14691                           	
 14692  24D4                     l2299:	
 14693                           	line	157
 14694                           	
 14695  24D4                     l2300:	
 14696  24D4  0008               	return
 14697                           	opt stack 0
 14698                           GLOBAL	__end_of_CC2500_InitPATable
 14699  24D5                     	__end_of_CC2500_InitPATable:
 14700 ;; =============== function _CC2500_InitPATable ends ============
 14701                           
 14702                           	signat	_CC2500_InitPATable,88
 14703                           	global	_CC2500_InitSetREG
 14704                           psect	text4136,local,class=CODE,delta=2
 14705                           global __ptext4136
 14706  268F                     __ptext4136:
 14707                           
 14708 ;; *************** function _CC2500_InitSetREG *****************
 14709 ;; Defined at:
 14710 ;;		line 132 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
 14711 ;; Parameters:    Size  Location     Type
 14712 ;;		None
 14713 ;; Auto vars:     Size  Location     Type
 14714 ;;  loop_c          1    8[BANK0 ] unsigned char 
 14715 ;;  temp2           1    7[BANK0 ] unsigned char 
 14716 ;;  temp1           1    6[BANK0 ] unsigned char 
 14717 ;; Return value:  Size  Location     Type
 14718 ;;		None               void
 14719 ;; Registers used:
 14720 ;;		wreg, status,2, status,0, pclath, cstack
 14721 ;; Tracked objects:
 14722 ;;		On entry : 0/0
 14723 ;;		On exit  : 0/0
 14724 ;;		Unchanged: 0/0
 14725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 14726 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 14727 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 14728 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 14729 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 14730 ;;Total ram usage:        4 bytes
 14731 ;; Hardware stack levels used:    1
 14732 ;; Hardware stack levels required when called:    6
 14733 ;; This function calls:
 14734 ;;		_CC2500_WriteREG
 14735 ;; This function is called by:
 14736 ;;		_CC2500_PowerOnInitial
 14737 ;; This function uses a non-reentrant model
 14738 ;;
 14739                           psect	text4136
 14740                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
 14741                           	line	132
 14742                           	global	__size_of_CC2500_InitSetREG
 14743  002F                     	__size_of_CC2500_InitSetREG	equ	__end_of_CC2500_InitSetREG-_CC2500_InitSetREG
 14744                           	
 14745  268F                     _CC2500_InitSetREG:	
 14746                           	opt	stack 8
 14747                           ; Regs used in _CC2500_InitSetREG: [wreg+status,2+status,0+pclath+cstack]
 14748                           	line	136
 14749                           	
 14750  268F                     l23410:	
 14751                           ;CC2500_B1.c: 133: unsigned char loop_c;
 14752                           ;CC2500_B1.c: 134: unsigned char temp1,temp2;
 14753                           ;CC2500_B1.c: 136: for(loop_c=0;loop_c<47;loop_c++)
 14754  268F  0020               	movlb 0	; select bank0
 14755  2690  01A8               	clrf	(CC2500_InitSetREG@loop_c)
 14756                           	
 14757  2691                     l23412:	
 14758  2691  302F               	movlw	(02Fh)
 14759  2692  0228               	subwf	(CC2500_InitSetREG@loop_c),w
 14760  2693  1C03               	skipc
 14761  2694  2E96               	goto	u7311
 14762  2695  2E97               	goto	u7310
 14763  2696                     u7311:
 14764  2696  2E99               	goto	l23416
 14765  2697                     u7310:
 14766  2697  2EBD               	goto	l2295
 14767                           	
 14768  2698                     l23414:	
 14769  2698  2EBD               	goto	l2295
 14770                           	line	137
 14771                           	
 14772  2699                     l2293:	
 14773                           	line	138
 14774                           	
 14775  2699                     l23416:	
 14776                           ;CC2500_B1.c: 137: {
 14777                           ;CC2500_B1.c: 138: temp1 = CC2500_registers_address[loop_c];
 14778  2699  0828               	movf	(CC2500_InitSetREG@loop_c),w
 14779  269A  3E01               	addlw	low(_CC2500_registers_address|8000h)
 14780  269B  3198               	movlp	high __stringtab
 14781  269C  000A               	callw
 14782  269D  31A6               	pagesel	$
 14783  269E  00A5               	movwf	(??_CC2500_InitSetREG+0)+0
 14784  269F  0825               	movf	(??_CC2500_InitSetREG+0)+0,w
 14785  26A0  00A6               	movwf	(CC2500_InitSetREG@temp1)
 14786                           	line	139
 14787                           ;CC2500_B1.c: 139: temp2 = CC2500_rfSettings[loop_c];
 14788  26A1  0828               	movf	(CC2500_InitSetREG@loop_c),w
 14789  26A2  3E30               	addlw	low(_CC2500_rfSettings|8000h)
 14790  26A3  3198               	movlp	high __stringtab
 14791  26A4  000A               	callw
 14792  26A5  31A6               	pagesel	$
 14793  26A6  00A5               	movwf	(??_CC2500_InitSetREG+0)+0
 14794  26A7  0825               	movf	(??_CC2500_InitSetREG+0)+0,w
 14795  26A8  00A7               	movwf	(CC2500_InitSetREG@temp2)
 14796                           	line	141
 14797                           	
 14798  26A9                     l23418:	
 14799                           ;CC2500_B1.c: 141: CC2500_WriteREG(temp1,temp2);
 14800  26A9  0827               	movf	(CC2500_InitSetREG@temp2),w
 14801  26AA  00A5               	movwf	(??_CC2500_InitSetREG+0)+0
 14802  26AB  0825               	movf	(??_CC2500_InitSetREG+0)+0,w
 14803  26AC  00A2               	movwf	(?_CC2500_WriteREG)
 14804  26AD  0826               	movf	(CC2500_InitSetREG@temp1),w
 14805  26AE  31A3  23E2  31A6   	fcall	_CC2500_WriteREG
 14806                           	line	136
 14807                           	
 14808  26B1                     l23420:	
 14809  26B1  3001               	movlw	(01h)
 14810  26B2  0020               	movlb 0	; select bank0
 14811  26B3  00A5               	movwf	(??_CC2500_InitSetREG+0)+0
 14812  26B4  0825               	movf	(??_CC2500_InitSetREG+0)+0,w
 14813  26B5  07A8               	addwf	(CC2500_InitSetREG@loop_c),f
 14814                           	
 14815  26B6                     l23422:	
 14816  26B6  302F               	movlw	(02Fh)
 14817  26B7  0228               	subwf	(CC2500_InitSetREG@loop_c),w
 14818  26B8  1C03               	skipc
 14819  26B9  2EBB               	goto	u7321
 14820  26BA  2EBC               	goto	u7320
 14821  26BB                     u7321:
 14822  26BB  2E99               	goto	l23416
 14823  26BC                     u7320:
 14824  26BC  2EBD               	goto	l2295
 14825                           	
 14826  26BD                     l2294:	
 14827                           	line	143
 14828                           	
 14829  26BD                     l2295:	
 14830  26BD  0008               	return
 14831                           	opt stack 0
 14832                           GLOBAL	__end_of_CC2500_InitSetREG
 14833  26BE                     	__end_of_CC2500_InitSetREG:
 14834 ;; =============== function _CC2500_InitSetREG ends ============
 14835                           
 14836                           	signat	_CC2500_InitSetREG,88
 14837                           	global	_CC2500_RxData
 14838                           psect	text4137,local,class=CODE,delta=2
 14839                           global __ptext4137
 14840  10CE                     __ptext4137:
 14841                           
 14842 ;; *************** function _CC2500_RxData *****************
 14843 ;; Defined at:
 14844 ;;		line 57 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
 14845 ;; Parameters:    Size  Location     Type
 14846 ;;		None
 14847 ;; Auto vars:     Size  Location     Type
 14848 ;;  loop_f          1    5[BANK0 ] unsigned char 
 14849 ;; Return value:  Size  Location     Type
 14850 ;;		None               void
 14851 ;; Registers used:
 14852 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14853 ;; Tracked objects:
 14854 ;;		On entry : 0/0
 14855 ;;		On exit  : 0/0
 14856 ;;		Unchanged: 0/0
 14857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 14858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 14859 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 14860 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 14861 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 14862 ;;Total ram usage:        2 bytes
 14863 ;; Hardware stack levels used:    1
 14864 ;; Hardware stack levels required when called:    6
 14865 ;; This function calls:
 14866 ;;		_CC2500_ReadStatus
 14867 ;;		_CC2500_WriteByte
 14868 ;;		_CC2500_ReadByte
 14869 ;;		_CC2500_WriteCommand
 14870 ;;		_setRF_RxStatus
 14871 ;; This function is called by:
 14872 ;;		_setRF_Main
 14873 ;; This function uses a non-reentrant model
 14874 ;;
 14875                           psect	text4137
 14876                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
 14877                           	line	57
 14878                           	global	__size_of_CC2500_RxData
 14879  007C                     	__size_of_CC2500_RxData	equ	__end_of_CC2500_RxData-_CC2500_RxData
 14880                           	
 14881  10CE                     _CC2500_RxData:	
 14882                           	opt	stack 7
 14883                           ; Regs used in _CC2500_RxData: [wreg+fsr1l-status,0+pclath+cstack]
 14884                           	line	62
 14885                           	
 14886  10CE                     l24770:	
 14887                           ;CC2500_B1.c: 58: unsigned char loop_f;
 14888                           ;CC2500_B1.c: 62: if(RB0 == 1)
 14889  10CE  0020               	movlb 0	; select bank0
 14890  10CF  1C0D               	btfss	(104/8),(104)&7
 14891  10D0  28D2               	goto	u9191
 14892  10D1  28D3               	goto	u9190
 14893  10D2                     u9191:
 14894  10D2  28DB               	goto	l24774
 14895  10D3                     u9190:
 14896  10D3  28D5               	goto	l2267
 14897                           	line	64
 14898                           	
 14899  10D4                     l24772:	
 14900                           ;CC2500_B1.c: 63: {
 14901                           ;CC2500_B1.c: 64: while(RB0 == 1);
 14902  10D4  28D5               	goto	l2267
 14903                           	
 14904  10D5                     l2268:	
 14905                           	
 14906  10D5                     l2267:	
 14907  10D5  180D               	btfsc	(104/8),(104)&7
 14908  10D6  28D8               	goto	u9201
 14909  10D7  28D9               	goto	u9200
 14910  10D8                     u9201:
 14911  10D8  28D5               	goto	l2267
 14912  10D9                     u9200:
 14913  10D9  28DB               	goto	l24774
 14914                           	
 14915  10DA                     l2269:	
 14916  10DA  28DB               	goto	l24774
 14917                           	line	65
 14918                           	
 14919  10DB                     l2266:	
 14920                           	line	66
 14921                           	
 14922  10DB                     l24774:	
 14923                           ;CC2500_B1.c: 65: }
 14924                           ;CC2500_B1.c: 66: CC2500_ReadStatus(0x3B);
 14925  10DB  303B               	movlw	(03Bh)
 14926  10DC  31A4  2400  3190   	fcall	_CC2500_ReadStatus
 14927                           	line	67
 14928                           	
 14929  10DF                     l24776:	
 14930                           ;CC2500_B1.c: 67: if(s_data != 0)
 14931  10DF  0021               	movlb 1	; select bank1
 14932  10E0  0843               	movf	(_s_data)^080h,w
 14933  10E1  1D03               	skipz
 14934  10E2  28E4               	goto	u9210
 14935  10E3  293B               	goto	l24808
 14936  10E4                     u9210:
 14937                           	line	70
 14938                           	
 14939  10E4                     l24778:	
 14940                           ;CC2500_B1.c: 69: {
 14941                           ;CC2500_B1.c: 70: RC4=0;
 14942  10E4  0020               	movlb 0	; select bank0
 14943  10E5  120E               	bcf	(116/8),(116)&7
 14944                           	line	71
 14945                           	
 14946  10E6                     l24780:	
 14947                           ;CC2500_B1.c: 71: SPI0Buffer=0x3F+0xC0;
 14948  10E6  30FF               	movlw	(0FFh)
 14949  10E7  00A4               	movwf	(??_CC2500_RxData+0)+0
 14950  10E8  0824               	movf	(??_CC2500_RxData+0)+0,w
 14951  10E9  0021               	movlb 1	; select bank1
 14952  10EA  00BF               	movwf	(_SPI0Buffer)^080h
 14953                           	line	72
 14954                           ;CC2500_B1.c: 72: while(RC2==1);
 14955  10EB  28EC               	goto	l2271
 14956                           	
 14957  10EC                     l2272:	
 14958                           	
 14959  10EC                     l2271:	
 14960  10EC  0020               	movlb 0	; select bank0
 14961  10ED  190E               	btfsc	(114/8),(114)&7
 14962  10EE  28F0               	goto	u9221
 14963  10EF  28F1               	goto	u9220
 14964  10F0                     u9221:
 14965  10F0  28EC               	goto	l2271
 14966  10F1                     u9220:
 14967  10F1  28F2               	goto	l24782
 14968                           	
 14969  10F2                     l2273:	
 14970                           	line	73
 14971                           	
 14972  10F2                     l24782:	
 14973                           ;CC2500_B1.c: 73: CC2500_WriteByte();
 14974  10F2  31A4  2488  3190   	fcall	_CC2500_WriteByte
 14975                           	line	75
 14976                           ;CC2500_B1.c: 75: CC2500_ReadByte();
 14977  10F5  31A4  24FD  3190   	fcall	_CC2500_ReadByte
 14978                           	line	76
 14979                           	
 14980  10F8                     l24784:	
 14981                           ;CC2500_B1.c: 76: Rx_Length=SPI0Buffer;
 14982  10F8  0021               	movlb 1	; select bank1
 14983  10F9  083F               	movf	(_SPI0Buffer)^080h,w
 14984  10FA  0020               	movlb 0	; select bank0
 14985  10FB  00A4               	movwf	(??_CC2500_RxData+0)+0
 14986  10FC  0824               	movf	(??_CC2500_RxData+0)+0,w
 14987  10FD  0021               	movlb 1	; select bank1
 14988  10FE  00BE               	movwf	(_Rx_Length)^080h
 14989                           	line	77
 14990                           	
 14991  10FF                     l24786:	
 14992                           ;CC2500_B1.c: 77: for(loop_f=0;loop_f<Rx_Length;loop_f++)
 14993  10FF  0020               	movlb 0	; select bank0
 14994  1100  01A5               	clrf	(CC2500_RxData@loop_f)
 14995  1101  2914               	goto	l24794
 14996                           	line	78
 14997                           	
 14998  1102                     l2275:	
 14999                           	line	79
 15000                           	
 15001  1102                     l24788:	
 15002                           ;CC2500_B1.c: 78: {
 15003                           ;CC2500_B1.c: 79: CC2500_ReadByte();
 15004  1102  31A4  24FD  3190   	fcall	_CC2500_ReadByte
 15005                           	line	80
 15006                           	
 15007  1105                     l24790:	
 15008                           ;CC2500_B1.c: 80: RF_Data[loop_f]=SPI0Buffer;
 15009  1105  0021               	movlb 1	; select bank1
 15010  1106  083F               	movf	(_SPI0Buffer)^080h,w
 15011  1107  0020               	movlb 0	; select bank0
 15012  1108  00A4               	movwf	(??_CC2500_RxData+0)+0
 15013  1109  0825               	movf	(CC2500_RxData@loop_f),w
 15014  110A  3EA0               	addlw	_RF_Data&0ffh
 15015  110B  0086               	movwf	fsr1l
 15016  110C  0187               	clrf fsr1h	
 15017                           	
 15018  110D  0824               	movf	(??_CC2500_RxData+0)+0,w
 15019  110E  0081               	movwf	indf1
 15020                           	line	77
 15021                           	
 15022  110F                     l24792:	
 15023  110F  3001               	movlw	(01h)
 15024  1110  00A4               	movwf	(??_CC2500_RxData+0)+0
 15025  1111  0824               	movf	(??_CC2500_RxData+0)+0,w
 15026  1112  07A5               	addwf	(CC2500_RxData@loop_f),f
 15027  1113  2914               	goto	l24794
 15028                           	
 15029  1114                     l2274:	
 15030                           	
 15031  1114                     l24794:	
 15032  1114  0021               	movlb 1	; select bank1
 15033  1115  083E               	movf	(_Rx_Length)^080h,w
 15034  1116  0020               	movlb 0	; select bank0
 15035  1117  0225               	subwf	(CC2500_RxData@loop_f),w
 15036  1118  1C03               	skipc
 15037  1119  291B               	goto	u9231
 15038  111A  291C               	goto	u9230
 15039  111B                     u9231:
 15040  111B  2902               	goto	l24788
 15041  111C                     u9230:
 15042  111C  291D               	goto	l24796
 15043                           	
 15044  111D                     l2276:	
 15045                           	line	82
 15046                           	
 15047  111D                     l24796:	
 15048                           ;CC2500_B1.c: 81: }
 15049                           ;CC2500_B1.c: 82: CC2500_ReadByte();
 15050  111D  31A4  24FD  3190   	fcall	_CC2500_ReadByte
 15051                           	line	83
 15052                           	
 15053  1120                     l24798:	
 15054                           ;CC2500_B1.c: 83: RSSI=SPI0Buffer;
 15055  1120  0021               	movlb 1	; select bank1
 15056  1121  083F               	movf	(_SPI0Buffer)^080h,w
 15057  1122  0020               	movlb 0	; select bank0
 15058  1123  00A4               	movwf	(??_CC2500_RxData+0)+0
 15059  1124  0824               	movf	(??_CC2500_RxData+0)+0,w
 15060  1125  0021               	movlb 1	; select bank1
 15061  1126  00BD               	movwf	(_RSSI)^080h
 15062                           	line	84
 15063                           	
 15064  1127                     l24800:	
 15065                           ;CC2500_B1.c: 84: CC2500_ReadByte();
 15066  1127  31A4  24FD  3190   	fcall	_CC2500_ReadByte
 15067                           	line	85
 15068                           ;CC2500_B1.c: 85: CRC=SPI0Buffer;
 15069  112A  0021               	movlb 1	; select bank1
 15070  112B  083F               	movf	(_SPI0Buffer)^080h,w
 15071  112C  0020               	movlb 0	; select bank0
 15072  112D  00A4               	movwf	(??_CC2500_RxData+0)+0
 15073  112E  0824               	movf	(??_CC2500_RxData+0)+0,w
 15074  112F  0021               	movlb 1	; select bank1
 15075  1130  00B7               	movwf	(_CRC)^080h
 15076                           	line	86
 15077                           	
 15078  1131                     l24802:	
 15079                           ;CC2500_B1.c: 86: RC4=1;
 15080  1131  0020               	movlb 0	; select bank0
 15081  1132  160E               	bsf	(116/8),(116)&7
 15082                           	line	87
 15083                           	
 15084  1133                     l24804:	
 15085                           ;CC2500_B1.c: 87: if(CRC & 0x80)
 15086  1133  0021               	movlb 1	; select bank1
 15087  1134  1FB7               	btfss	(_CRC)^080h,(7)&7
 15088  1135  2937               	goto	u9241
 15089  1136  2938               	goto	u9240
 15090  1137                     u9241:
 15091  1137  293B               	goto	l24808
 15092  1138                     u9240:
 15093                           	line	88
 15094                           	
 15095  1138                     l24806:	
 15096                           ;CC2500_B1.c: 88: Receive_OK=1;
 15097  1138  1570               	bsf	(_Receive_OK/8),(_Receive_OK)&7
 15098  1139  293B               	goto	l24808
 15099                           	
 15100  113A                     l2277:	
 15101  113A  293B               	goto	l24808
 15102                           	line	89
 15103                           	
 15104  113B                     l2270:	
 15105                           	line	90
 15106                           	
 15107  113B                     l24808:	
 15108                           ;CC2500_B1.c: 89: }
 15109                           ;CC2500_B1.c: 90: CC2500_WriteCommand(0x36);
 15110  113B  3036               	movlw	(036h)
 15111  113C  31A3  236B  3190   	fcall	_CC2500_WriteCommand
 15112                           	line	91
 15113                           ;CC2500_B1.c: 91: CC2500_WriteCommand(0x3A);
 15114  113F  303A               	movlw	(03Ah)
 15115  1140  31A3  236B  3190   	fcall	_CC2500_WriteCommand
 15116                           	line	92
 15117                           	
 15118  1143                     l24810:	
 15119                           ;CC2500_B1.c: 92: setRF_RxStatus(1,0);
 15120  1143  0020               	movlb 0	; select bank0
 15121  1144  01A2               	clrf	(?_setRF_RxStatus)
 15122  1145  3001               	movlw	(01h)
 15123  1146  31A2  2259  3190   	fcall	_setRF_RxStatus
 15124                           	line	93
 15125                           	
 15126  1149                     l2278:	
 15127  1149  0008               	return
 15128                           	opt stack 0
 15129                           GLOBAL	__end_of_CC2500_RxData
 15130  114A                     	__end_of_CC2500_RxData:
 15131 ;; =============== function _CC2500_RxData ends ============
 15132                           
 15133                           	signat	_CC2500_RxData,88
 15134                           	global	_CC2500_TxData
 15135                           psect	text4138,local,class=CODE,delta=2
 15136                           global __ptext4138
 15137  1000                     __ptext4138:
 15138                           
 15139 ;; *************** function _CC2500_TxData *****************
 15140 ;; Defined at:
 15141 ;;		line 31 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
 15142 ;; Parameters:    Size  Location     Type
 15143 ;;		None
 15144 ;; Auto vars:     Size  Location     Type
 15145 ;;  loop_e          1    5[BANK0 ] unsigned char 
 15146 ;; Return value:  Size  Location     Type
 15147 ;;		None               void
 15148 ;; Registers used:
 15149 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15150 ;; Tracked objects:
 15151 ;;		On entry : 0/0
 15152 ;;		On exit  : 0/0
 15153 ;;		Unchanged: 0/0
 15154 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 15155 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 15156 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 15157 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 15158 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 15159 ;;Total ram usage:        2 bytes
 15160 ;; Hardware stack levels used:    1
 15161 ;; Hardware stack levels required when called:    6
 15162 ;; This function calls:
 15163 ;;		_CC2500_WriteByte
 15164 ;;		_CC2500_WriteCommand
 15165 ;; This function is called by:
 15166 ;;		_setRF_Main
 15167 ;; This function uses a non-reentrant model
 15168 ;;
 15169                           psect	text4138
 15170                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
 15171                           	line	31
 15172                           	global	__size_of_CC2500_TxData
 15173  0054                     	__size_of_CC2500_TxData	equ	__end_of_CC2500_TxData-_CC2500_TxData
 15174                           	
 15175  1000                     _CC2500_TxData:	
 15176                           	opt	stack 7
 15177                           ; Regs used in _CC2500_TxData: [wreg+fsr1l-status,0+pclath+cstack]
 15178                           	line	34
 15179                           	
 15180  1000                     l23342:	
 15181                           ;CC2500_B1.c: 32: unsigned char loop_e;
 15182                           ;CC2500_B1.c: 34: RC4=0;
 15183  1000  0020               	movlb 0	; select bank0
 15184  1001  120E               	bcf	(116/8),(116)&7
 15185                           	line	35
 15186                           	
 15187  1002                     l23344:	
 15188                           ;CC2500_B1.c: 35: SPI0Buffer=0x3F+0x40;
 15189  1002  307F               	movlw	(07Fh)
 15190  1003  00A4               	movwf	(??_CC2500_TxData+0)+0
 15191  1004  0824               	movf	(??_CC2500_TxData+0)+0,w
 15192  1005  0021               	movlb 1	; select bank1
 15193  1006  00BF               	movwf	(_SPI0Buffer)^080h
 15194                           	line	36
 15195                           ;CC2500_B1.c: 36: while(RC2==1);
 15196  1007  2808               	goto	l2251
 15197                           	
 15198  1008                     l2252:	
 15199                           	
 15200  1008                     l2251:	
 15201  1008  0020               	movlb 0	; select bank0
 15202  1009  190E               	btfsc	(114/8),(114)&7
 15203  100A  280C               	goto	u7211
 15204  100B  280D               	goto	u7210
 15205  100C                     u7211:
 15206  100C  2808               	goto	l2251
 15207  100D                     u7210:
 15208  100D  280E               	goto	l23346
 15209                           	
 15210  100E                     l2253:	
 15211                           	line	37
 15212                           	
 15213  100E                     l23346:	
 15214                           ;CC2500_B1.c: 37: CC2500_WriteByte();
 15215  100E  31A4  2488  3190   	fcall	_CC2500_WriteByte
 15216                           	line	38
 15217                           	
 15218  1011                     l23348:	
 15219                           ;CC2500_B1.c: 38: SPI0Buffer=Tx_Length;
 15220  1011  0021               	movlb 1	; select bank1
 15221  1012  0840               	movf	(_Tx_Length)^080h,w
 15222  1013  0020               	movlb 0	; select bank0
 15223  1014  00A4               	movwf	(??_CC2500_TxData+0)+0
 15224  1015  0824               	movf	(??_CC2500_TxData+0)+0,w
 15225  1016  0021               	movlb 1	; select bank1
 15226  1017  00BF               	movwf	(_SPI0Buffer)^080h
 15227                           	line	39
 15228                           	
 15229  1018                     l23350:	
 15230                           ;CC2500_B1.c: 39: CC2500_WriteByte();
 15231  1018  31A4  2488  3190   	fcall	_CC2500_WriteByte
 15232                           	line	40
 15233                           	
 15234  101B                     l23352:	
 15235                           ;CC2500_B1.c: 40: for(loop_e=0;loop_e<Tx_Length;loop_e++)
 15236  101B  0020               	movlb 0	; select bank0
 15237  101C  01A5               	clrf	(CC2500_TxData@loop_e)
 15238  101D  2830               	goto	l23360
 15239                           	line	41
 15240                           	
 15241  101E                     l2255:	
 15242                           	line	42
 15243                           	
 15244  101E                     l23354:	
 15245                           ;CC2500_B1.c: 41: {
 15246                           ;CC2500_B1.c: 42: SPI0Buffer=RF_Data[loop_e];
 15247  101E  0825               	movf	(CC2500_TxData@loop_e),w
 15248  101F  3EA0               	addlw	_RF_Data&0ffh
 15249  1020  0086               	movwf	fsr1l
 15250  1021  0187               	clrf fsr1h	
 15251                           	
 15252  1022  0801               	movf	indf1,w
 15253  1023  00A4               	movwf	(??_CC2500_TxData+0)+0
 15254  1024  0824               	movf	(??_CC2500_TxData+0)+0,w
 15255  1025  0021               	movlb 1	; select bank1
 15256  1026  00BF               	movwf	(_SPI0Buffer)^080h
 15257                           	line	43
 15258                           	
 15259  1027                     l23356:	
 15260                           ;CC2500_B1.c: 43: CC2500_WriteByte();
 15261  1027  31A4  2488  3190   	fcall	_CC2500_WriteByte
 15262                           	line	40
 15263                           	
 15264  102A                     l23358:	
 15265  102A  3001               	movlw	(01h)
 15266  102B  0020               	movlb 0	; select bank0
 15267  102C  00A4               	movwf	(??_CC2500_TxData+0)+0
 15268  102D  0824               	movf	(??_CC2500_TxData+0)+0,w
 15269  102E  07A5               	addwf	(CC2500_TxData@loop_e),f
 15270  102F  2830               	goto	l23360
 15271                           	
 15272  1030                     l2254:	
 15273                           	
 15274  1030                     l23360:	
 15275  1030  0021               	movlb 1	; select bank1
 15276  1031  0840               	movf	(_Tx_Length)^080h,w
 15277  1032  0020               	movlb 0	; select bank0
 15278  1033  0225               	subwf	(CC2500_TxData@loop_e),w
 15279  1034  1C03               	skipc
 15280  1035  2837               	goto	u7221
 15281  1036  2838               	goto	u7220
 15282  1037                     u7221:
 15283  1037  281E               	goto	l23354
 15284  1038                     u7220:
 15285                           	
 15286  1038                     l2256:	
 15287                           	line	45
 15288                           ;CC2500_B1.c: 44: }
 15289                           ;CC2500_B1.c: 45: RC4=1;
 15290  1038  160E               	bsf	(116/8),(116)&7
 15291                           	line	46
 15292                           	
 15293  1039                     l23362:	
 15294                           ;CC2500_B1.c: 46: CC2500_WriteCommand(0x35);
 15295  1039  3035               	movlw	(035h)
 15296  103A  31A3  236B  3190   	fcall	_CC2500_WriteCommand
 15297                           	line	47
 15298                           ;CC2500_B1.c: 47: while(RB0==0);
 15299  103D  283E               	goto	l2257
 15300                           	
 15301  103E                     l2258:	
 15302                           	
 15303  103E                     l2257:	
 15304  103E  0020               	movlb 0	; select bank0
 15305  103F  1C0D               	btfss	(104/8),(104)&7
 15306  1040  2842               	goto	u7231
 15307  1041  2843               	goto	u7230
 15308  1042                     u7231:
 15309  1042  283E               	goto	l2257
 15310  1043                     u7230:
 15311  1043  2845               	goto	l2260
 15312                           	
 15313  1044                     l2259:	
 15314                           	line	48
 15315                           ;CC2500_B1.c: 48: while(RB0==1);
 15316  1044  2845               	goto	l2260
 15317                           	
 15318  1045                     l2261:	
 15319                           	
 15320  1045                     l2260:	
 15321  1045  180D               	btfsc	(104/8),(104)&7
 15322  1046  2848               	goto	u7241
 15323  1047  2849               	goto	u7240
 15324  1048                     u7241:
 15325  1048  2845               	goto	l2260
 15326  1049                     u7240:
 15327  1049  284A               	goto	l23364
 15328                           	
 15329  104A                     l2262:	
 15330                           	line	49
 15331                           	
 15332  104A                     l23364:	
 15333                           ;CC2500_B1.c: 49: CC2500_WriteCommand(0x36);
 15334  104A  3036               	movlw	(036h)
 15335  104B  31A3  236B  3190   	fcall	_CC2500_WriteCommand
 15336                           	line	50
 15337                           ;CC2500_B1.c: 50: CC2500_WriteCommand(0x3B);
 15338  104E  303B               	movlw	(03Bh)
 15339  104F  31A3  236B  3190   	fcall	_CC2500_WriteCommand
 15340                           	line	51
 15341                           	
 15342  1052                     l23366:	
 15343                           ;CC2500_B1.c: 51: Transceive_OK=1;
 15344  1052  16F0               	bsf	(_Transceive_OK/8),(_Transceive_OK)&7
 15345                           	line	52
 15346                           	
 15347  1053                     l2263:	
 15348  1053  0008               	return
 15349                           	opt stack 0
 15350                           GLOBAL	__end_of_CC2500_TxData
 15351  1054                     	__end_of_CC2500_TxData:
 15352 ;; =============== function _CC2500_TxData ends ============
 15353                           
 15354                           	signat	_CC2500_TxData,88
 15355                           	global	___awtoft
 15356                           psect	text4139,local,class=CODE,delta=2
 15357                           global __ptext4139
 15358  24D5                     __ptext4139:
 15359                           
 15360 ;; *************** function ___awtoft *****************
 15361 ;; Defined at:
 15362 ;;		line 33 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awtoft.c"
 15363 ;; Parameters:    Size  Location     Type
 15364 ;;  c               2   22[BANK0 ] int 
 15365 ;; Auto vars:     Size  Location     Type
 15366 ;;  sign            1   27[BANK0 ] unsigned char 
 15367 ;; Return value:  Size  Location     Type
 15368 ;;                  3   22[BANK0 ] float 
 15369 ;; Registers used:
 15370 ;;		wreg, status,2, status,0, pclath, cstack
 15371 ;; Tracked objects:
 15372 ;;		On entry : 0/0
 15373 ;;		On exit  : 0/0
 15374 ;;		Unchanged: 0/0
 15375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 15376 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 15377 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 15378 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 15379 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0
 15380 ;;Total ram usage:        6 bytes
 15381 ;; Hardware stack levels used:    1
 15382 ;; Hardware stack levels required when called:    5
 15383 ;; This function calls:
 15384 ;;		___ftpack
 15385 ;; This function is called by:
 15386 ;;		_getPercentValue
 15387 ;;		_setPercentValue
 15388 ;; This function uses a non-reentrant model
 15389 ;;
 15390                           psect	text4139
 15391                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awtoft.c"
 15392                           	line	33
 15393                           	global	__size_of___awtoft
 15394  0028                     	__size_of___awtoft	equ	__end_of___awtoft-___awtoft
 15395                           	
 15396  24D5                     ___awtoft:	
 15397                           	opt	stack 2
 15398                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
 15399                           	line	36
 15400                           	
 15401  24D5                     l23334:	
 15402  24D5  0020               	movlb 0	; select bank0
 15403  24D6  01BB               	clrf	(___awtoft@sign)
 15404                           	line	37
 15405  24D7  1FB7               	btfss	(___awtoft@c+1),7
 15406  24D8  2CDA               	goto	u7201
 15407  24D9  2CDB               	goto	u7200
 15408  24DA                     u7201:
 15409  24DA  2CE4               	goto	l23338
 15410  24DB                     u7200:
 15411                           	line	38
 15412                           	
 15413  24DB                     l23336:	
 15414  24DB  09B6               	comf	(___awtoft@c),f
 15415  24DC  09B7               	comf	(___awtoft@c+1),f
 15416  24DD  0AB6               	incf	(___awtoft@c),f
 15417  24DE  1903               	skipnz
 15418  24DF  0AB7               	incf	(___awtoft@c+1),f
 15419                           	line	39
 15420  24E0  01BB               	clrf	(___awtoft@sign)
 15421  24E1  1403               	bsf	status,0
 15422  24E2  0DBB               	rlf	(___awtoft@sign),f
 15423  24E3  2CE4               	goto	l23338
 15424                           	line	40
 15425                           	
 15426  24E4                     l18832:	
 15427                           	line	41
 15428                           	
 15429  24E4                     l23338:	
 15430  24E4  0836               	movf	(___awtoft@c),w
 15431  24E5  00A0               	movwf	(?___ftpack)
 15432  24E6  0837               	movf	(___awtoft@c+1),w
 15433  24E7  00A1               	movwf	(?___ftpack+1)
 15434  24E8  01A2               	clrf	(?___ftpack+2)
 15435  24E9  308E               	movlw	(08Eh)
 15436  24EA  00B9               	movwf	(??___awtoft+0)+0
 15437  24EB  0839               	movf	(??___awtoft+0)+0,w
 15438  24EC  00A3               	movwf	0+(?___ftpack)+03h
 15439  24ED  083B               	movf	(___awtoft@sign),w
 15440  24EE  00BA               	movwf	(??___awtoft+1)+0
 15441  24EF  083A               	movf	(??___awtoft+1)+0,w
 15442  24F0  00A4               	movwf	0+(?___ftpack)+04h
 15443  24F1  319E  2622  31A4   	fcall	___ftpack
 15444  24F4  0020               	movlb 0	; select bank0
 15445  24F5  0820               	movf	(0+(?___ftpack)),w
 15446  24F6  00B6               	movwf	(?___awtoft)
 15447  24F7  0821               	movf	(1+(?___ftpack)),w
 15448  24F8  00B7               	movwf	(?___awtoft+1)
 15449  24F9  0822               	movf	(2+(?___ftpack)),w
 15450  24FA  00B8               	movwf	(?___awtoft+2)
 15451  24FB  2CFC               	goto	l18833
 15452                           	
 15453  24FC                     l23340:	
 15454                           	line	42
 15455                           	
 15456  24FC                     l18833:	
 15457  24FC  0008               	return
 15458                           	opt stack 0
 15459                           GLOBAL	__end_of___awtoft
 15460  24FD                     	__end_of___awtoft:
 15461 ;; =============== function ___awtoft ends ============
 15462                           
 15463                           	signat	___awtoft,4219
 15464                           	global	___ftmul
 15465                           psect	text4140,local,class=CODE,delta=2
 15466                           global __ptext4140
 15467  09D6                     __ptext4140:
 15468                           
 15469 ;; *************** function ___ftmul *****************
 15470 ;; Defined at:
 15471 ;;		line 52 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftmul.c"
 15472 ;; Parameters:    Size  Location     Type
 15473 ;;  f1              3   28[BANK0 ] float 
 15474 ;;  f2              3   31[BANK0 ] float 
 15475 ;; Auto vars:     Size  Location     Type
 15476 ;;  f3_as_produc    3   39[BANK0 ] unsigned um
 15477 ;;  sign            1   43[BANK0 ] unsigned char 
 15478 ;;  cntr            1   42[BANK0 ] unsigned char 
 15479 ;;  exp             1   38[BANK0 ] unsigned char 
 15480 ;; Return value:  Size  Location     Type
 15481 ;;                  3   28[BANK0 ] float 
 15482 ;; Registers used:
 15483 ;;		wreg, status,2, status,0, pclath, cstack
 15484 ;; Tracked objects:
 15485 ;;		On entry : 0/0
 15486 ;;		On exit  : 0/0
 15487 ;;		Unchanged: 0/0
 15488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 15489 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0
 15490 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0
 15491 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 15492 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
       0       0
 15493 ;;Total ram usage:       16 bytes
 15494 ;; Hardware stack levels used:    1
 15495 ;; Hardware stack levels required when called:    5
 15496 ;; This function calls:
 15497 ;;		___ftpack
 15498 ;; This function is called by:
 15499 ;;		_getPercentValue
 15500 ;; This function uses a non-reentrant model
 15501 ;;
 15502                           psect	text4140
 15503                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftmul.c"
 15504                           	line	52
 15505                           	global	__size_of___ftmul
 15506  00CA                     	__size_of___ftmul	equ	__end_of___ftmul-___ftmul
 15507                           	
 15508  09D6                     ___ftmul:	
 15509                           	opt	stack 2
 15510                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
 15511                           	line	56
 15512                           	
 15513  09D6                     l23284:	
 15514  09D6  0020               	movlb 0	; select bank0
 15515  09D7  083C               	movf	(___ftmul@f1),w
 15516  09D8  00C2               	movwf	((??___ftmul+0)+0)
 15517  09D9  083D               	movf	(___ftmul@f1+1),w
 15518  09DA  00C3               	movwf	((??___ftmul+0)+0+1)
 15519  09DB  083E               	movf	(___ftmul@f1+2),w
 15520  09DC  00C4               	movwf	((??___ftmul+0)+0+2)
 15521  09DD  1003               	clrc
 15522  09DE  0D43               	rlf	(??___ftmul+0)+1,w
 15523  09DF  0D44               	rlf	(??___ftmul+0)+2,w
 15524  09E0  00C5               	movwf	(??___ftmul+3)+0
 15525  09E1  0845               	movf	(??___ftmul+3)+0,w
 15526  09E2  00C6               	movwf	(___ftmul@exp)
 15527  09E3  08C6               	movf	((___ftmul@exp)),f
 15528  09E4  1D03               	skipz
 15529  09E5  29E7               	goto	u7081
 15530  09E6  29E8               	goto	u7080
 15531  09E7                     u7081:
 15532  09E7  29F0               	goto	l23290
 15533  09E8                     u7080:
 15534                           	line	57
 15535                           	
 15536  09E8                     l23286:	
 15537  09E8  3000               	movlw	0x0
 15538  09E9  00BC               	movwf	(?___ftmul)
 15539  09EA  3000               	movlw	0x0
 15540  09EB  00BD               	movwf	(?___ftmul+1)
 15541  09EC  3000               	movlw	0x0
 15542  09ED  00BE               	movwf	(?___ftmul+2)
 15543  09EE  2A9F               	goto	l18795
 15544                           	
 15545  09EF                     l23288:	
 15546  09EF  2A9F               	goto	l18795
 15547                           	
 15548  09F0                     l18794:	
 15549                           	line	58
 15550                           	
 15551  09F0                     l23290:	
 15552  09F0  083F               	movf	(___ftmul@f2),w
 15553  09F1  00C2               	movwf	((??___ftmul+0)+0)
 15554  09F2  0840               	movf	(___ftmul@f2+1),w
 15555  09F3  00C3               	movwf	((??___ftmul+0)+0+1)
 15556  09F4  0841               	movf	(___ftmul@f2+2),w
 15557  09F5  00C4               	movwf	((??___ftmul+0)+0+2)
 15558  09F6  1003               	clrc
 15559  09F7  0D43               	rlf	(??___ftmul+0)+1,w
 15560  09F8  0D44               	rlf	(??___ftmul+0)+2,w
 15561  09F9  00C5               	movwf	(??___ftmul+3)+0
 15562  09FA  0845               	movf	(??___ftmul+3)+0,w
 15563  09FB  00CB               	movwf	(___ftmul@sign)
 15564  09FC  08CB               	movf	((___ftmul@sign)),f
 15565  09FD  1D03               	skipz
 15566  09FE  2A00               	goto	u7091
 15567  09FF  2A01               	goto	u7090
 15568  0A00                     u7091:
 15569  0A00  2A09               	goto	l23296
 15570  0A01                     u7090:
 15571                           	line	59
 15572                           	
 15573  0A01                     l23292:	
 15574  0A01  3000               	movlw	0x0
 15575  0A02  00BC               	movwf	(?___ftmul)
 15576  0A03  3000               	movlw	0x0
 15577  0A04  00BD               	movwf	(?___ftmul+1)
 15578  0A05  3000               	movlw	0x0
 15579  0A06  00BE               	movwf	(?___ftmul+2)
 15580  0A07  2A9F               	goto	l18795
 15581                           	
 15582  0A08                     l23294:	
 15583  0A08  2A9F               	goto	l18795
 15584                           	
 15585  0A09                     l18796:	
 15586                           	line	60
 15587                           	
 15588  0A09                     l23296:	
 15589  0A09  084B               	movf	(___ftmul@sign),w
 15590  0A0A  3E7B               	addlw	07Bh
 15591  0A0B  00C2               	movwf	(??___ftmul+0)+0
 15592  0A0C  0842               	movf	(??___ftmul+0)+0,w
 15593  0A0D  07C6               	addwf	(___ftmul@exp),f
 15594                           	line	61
 15595  0A0E  083C               	movf	(___ftmul@f1),w
 15596  0A0F  00C2               	movwf	((??___ftmul+0)+0)
 15597  0A10  083D               	movf	(___ftmul@f1+1),w
 15598  0A11  00C3               	movwf	((??___ftmul+0)+0+1)
 15599  0A12  083E               	movf	(___ftmul@f1+2),w
 15600  0A13  00C4               	movwf	((??___ftmul+0)+0+2)
 15601  0A14  3010               	movlw	010h
 15602  0A15                     u7105:
 15603  0A15  36C4               	lsrf	(??___ftmul+0)+2,f
 15604  0A16  0CC3               	rrf	(??___ftmul+0)+1,f
 15605  0A17  0CC2               	rrf	(??___ftmul+0)+0,f
 15606  0A18                     u7100:
 15607  0A18  0B89               	decfsz	wreg,f
 15608  0A19  2A15               	goto	u7105
 15609  0A1A  0842               	movf	0+(??___ftmul+0)+0,w
 15610  0A1B  00C5               	movwf	(??___ftmul+3)+0
 15611  0A1C  0845               	movf	(??___ftmul+3)+0,w
 15612  0A1D  00CB               	movwf	(___ftmul@sign)
 15613                           	line	62
 15614  0A1E  083F               	movf	(___ftmul@f2),w
 15615  0A1F  00C2               	movwf	((??___ftmul+0)+0)
 15616  0A20  0840               	movf	(___ftmul@f2+1),w
 15617  0A21  00C3               	movwf	((??___ftmul+0)+0+1)
 15618  0A22  0841               	movf	(___ftmul@f2+2),w
 15619  0A23  00C4               	movwf	((??___ftmul+0)+0+2)
 15620  0A24  3010               	movlw	010h
 15621  0A25                     u7115:
 15622  0A25  36C4               	lsrf	(??___ftmul+0)+2,f
 15623  0A26  0CC3               	rrf	(??___ftmul+0)+1,f
 15624  0A27  0CC2               	rrf	(??___ftmul+0)+0,f
 15625  0A28                     u7110:
 15626  0A28  0B89               	decfsz	wreg,f
 15627  0A29  2A25               	goto	u7115
 15628  0A2A  0842               	movf	0+(??___ftmul+0)+0,w
 15629  0A2B  00C5               	movwf	(??___ftmul+3)+0
 15630  0A2C  0845               	movf	(??___ftmul+3)+0,w
 15631  0A2D  06CB               	xorwf	(___ftmul@sign),f
 15632                           	line	63
 15633  0A2E  3080               	movlw	(080h)
 15634  0A2F  00C2               	movwf	(??___ftmul+0)+0
 15635  0A30  0842               	movf	(??___ftmul+0)+0,w
 15636  0A31  05CB               	andwf	(___ftmul@sign),f
 15637                           	line	64
 15638                           	
 15639  0A32                     l23298:	
 15640  0A32  17BD               	bsf	(___ftmul@f1)+(15/8),(15)&7
 15641                           	line	66
 15642                           	
 15643  0A33                     l23300:	
 15644  0A33  17C0               	bsf	(___ftmul@f2)+(15/8),(15)&7
 15645                           	line	67
 15646                           	
 15647  0A34                     l23302:	
 15648  0A34  30FF               	movlw	0FFh
 15649  0A35  05BF               	andwf	(___ftmul@f2),f
 15650  0A36  30FF               	movlw	0FFh
 15651  0A37  05C0               	andwf	(___ftmul@f2+1),f
 15652  0A38  3000               	movlw	0
 15653  0A39  05C1               	andwf	(___ftmul@f2+2),f
 15654                           	line	68
 15655                           	
 15656  0A3A                     l23304:	
 15657  0A3A  3000               	movlw	0
 15658  0A3B  00C7               	movwf	(___ftmul@f3_as_product)
 15659  0A3C  3000               	movlw	0
 15660  0A3D  00C8               	movwf	(___ftmul@f3_as_product+1)
 15661  0A3E  3000               	movlw	0
 15662  0A3F  00C9               	movwf	(___ftmul@f3_as_product+2)
 15663                           	line	69
 15664                           	
 15665  0A40                     l23306:	
 15666  0A40  3007               	movlw	(07h)
 15667  0A41  00C2               	movwf	(??___ftmul+0)+0
 15668  0A42  0842               	movf	(??___ftmul+0)+0,w
 15669  0A43  00CA               	movwf	(___ftmul@cntr)
 15670  0A44  2A45               	goto	l23308
 15671                           	line	70
 15672                           	
 15673  0A45                     l18797:	
 15674                           	line	71
 15675                           	
 15676  0A45                     l23308:	
 15677  0A45  1C3C               	btfss	(___ftmul@f1),(0)&7
 15678  0A46  2A48               	goto	u7121
 15679  0A47  2A49               	goto	u7120
 15680  0A48                     u7121:
 15681  0A48  2A50               	goto	l23312
 15682  0A49                     u7120:
 15683                           	line	72
 15684                           	
 15685  0A49                     l23310:	
 15686  0A49  083F               	movf	(___ftmul@f2),w
 15687  0A4A  07C7               	addwf	(___ftmul@f3_as_product),f
 15688  0A4B  0840               	movf	(___ftmul@f2+1),w
 15689  0A4C  3DC8               	addwfc	(___ftmul@f3_as_product+1),f
 15690  0A4D  0841               	movf	(___ftmul@f2+2),w
 15691  0A4E  3DC9               	addwfc	(___ftmul@f3_as_product+2),f
 15692  0A4F  2A50               	goto	l23312
 15693                           	
 15694  0A50                     l18798:	
 15695                           	line	73
 15696                           	
 15697  0A50                     l23312:	
 15698  0A50  3001               	movlw	01h
 15699  0A51                     u7135:
 15700  0A51  36BE               	lsrf	(___ftmul@f1+2),f
 15701  0A52  0CBD               	rrf	(___ftmul@f1+1),f
 15702  0A53  0CBC               	rrf	(___ftmul@f1),f
 15703  0A54  0B89               	decfsz	wreg,f
 15704  0A55  2A51               	goto	u7135
 15705                           
 15706                           	line	74
 15707                           	
 15708  0A56                     l23314:	
 15709  0A56  3001               	movlw	01h
 15710  0A57                     u7145:
 15711  0A57  35BF               	lslf	(___ftmul@f2),f
 15712  0A58  0DC0               	rlf	(___ftmul@f2+1),f
 15713  0A59  0DC1               	rlf	(___ftmul@f2+2),f
 15714  0A5A  0B89               	decfsz	wreg,f
 15715  0A5B  2A57               	goto	u7145
 15716                           	line	75
 15717                           	
 15718  0A5C                     l23316:	
 15719  0A5C  3001               	movlw	low(01h)
 15720  0A5D  02CA               	subwf	(___ftmul@cntr),f
 15721  0A5E  1D03               	btfss	status,2
 15722  0A5F  2A61               	goto	u7151
 15723  0A60  2A62               	goto	u7150
 15724  0A61                     u7151:
 15725  0A61  2A45               	goto	l23308
 15726  0A62                     u7150:
 15727  0A62  2A63               	goto	l23318
 15728                           	
 15729  0A63                     l18799:	
 15730                           	line	76
 15731                           	
 15732  0A63                     l23318:	
 15733  0A63  3009               	movlw	(09h)
 15734  0A64  00C2               	movwf	(??___ftmul+0)+0
 15735  0A65  0842               	movf	(??___ftmul+0)+0,w
 15736  0A66  00CA               	movwf	(___ftmul@cntr)
 15737  0A67  2A68               	goto	l23320
 15738                           	line	77
 15739                           	
 15740  0A68                     l18800:	
 15741                           	line	78
 15742                           	
 15743  0A68                     l23320:	
 15744  0A68  1C3C               	btfss	(___ftmul@f1),(0)&7
 15745  0A69  2A6B               	goto	u7161
 15746  0A6A  2A6C               	goto	u7160
 15747  0A6B                     u7161:
 15748  0A6B  2A73               	goto	l23324
 15749  0A6C                     u7160:
 15750                           	line	79
 15751                           	
 15752  0A6C                     l23322:	
 15753  0A6C  083F               	movf	(___ftmul@f2),w
 15754  0A6D  07C7               	addwf	(___ftmul@f3_as_product),f
 15755  0A6E  0840               	movf	(___ftmul@f2+1),w
 15756  0A6F  3DC8               	addwfc	(___ftmul@f3_as_product+1),f
 15757  0A70  0841               	movf	(___ftmul@f2+2),w
 15758  0A71  3DC9               	addwfc	(___ftmul@f3_as_product+2),f
 15759  0A72  2A73               	goto	l23324
 15760                           	
 15761  0A73                     l18801:	
 15762                           	line	80
 15763                           	
 15764  0A73                     l23324:	
 15765  0A73  3001               	movlw	01h
 15766  0A74                     u7175:
 15767  0A74  36BE               	lsrf	(___ftmul@f1+2),f
 15768  0A75  0CBD               	rrf	(___ftmul@f1+1),f
 15769  0A76  0CBC               	rrf	(___ftmul@f1),f
 15770  0A77  0B89               	decfsz	wreg,f
 15771  0A78  2A74               	goto	u7175
 15772                           
 15773                           	line	81
 15774                           	
 15775  0A79                     l23326:	
 15776  0A79  3001               	movlw	01h
 15777  0A7A                     u7185:
 15778  0A7A  36C9               	lsrf	(___ftmul@f3_as_product+2),f
 15779  0A7B  0CC8               	rrf	(___ftmul@f3_as_product+1),f
 15780  0A7C  0CC7               	rrf	(___ftmul@f3_as_product),f
 15781  0A7D  0B89               	decfsz	wreg,f
 15782  0A7E  2A7A               	goto	u7185
 15783                           
 15784                           	line	82
 15785                           	
 15786  0A7F                     l23328:	
 15787  0A7F  3001               	movlw	low(01h)
 15788  0A80  02CA               	subwf	(___ftmul@cntr),f
 15789  0A81  1D03               	btfss	status,2
 15790  0A82  2A84               	goto	u7191
 15791  0A83  2A85               	goto	u7190
 15792  0A84                     u7191:
 15793  0A84  2A68               	goto	l23320
 15794  0A85                     u7190:
 15795  0A85  2A86               	goto	l23330
 15796                           	
 15797  0A86                     l18802:	
 15798                           	line	83
 15799                           	
 15800  0A86                     l23330:	
 15801  0A86  0847               	movf	(___ftmul@f3_as_product),w
 15802  0A87  00A0               	movwf	(?___ftpack)
 15803  0A88  0848               	movf	(___ftmul@f3_as_product+1),w
 15804  0A89  00A1               	movwf	(?___ftpack+1)
 15805  0A8A  0849               	movf	(___ftmul@f3_as_product+2),w
 15806  0A8B  00A2               	movwf	(?___ftpack+2)
 15807  0A8C  0846               	movf	(___ftmul@exp),w
 15808  0A8D  00C2               	movwf	(??___ftmul+0)+0
 15809  0A8E  0842               	movf	(??___ftmul+0)+0,w
 15810  0A8F  00A3               	movwf	0+(?___ftpack)+03h
 15811  0A90  084B               	movf	(___ftmul@sign),w
 15812  0A91  00C3               	movwf	(??___ftmul+1)+0
 15813  0A92  0843               	movf	(??___ftmul+1)+0,w
 15814  0A93  00A4               	movwf	0+(?___ftpack)+04h
 15815  0A94  319E  2622  3189   	fcall	___ftpack
 15816  0A97  0020               	movlb 0	; select bank0
 15817  0A98  0820               	movf	(0+(?___ftpack)),w
 15818  0A99  00BC               	movwf	(?___ftmul)
 15819  0A9A  0821               	movf	(1+(?___ftpack)),w
 15820  0A9B  00BD               	movwf	(?___ftmul+1)
 15821  0A9C  0822               	movf	(2+(?___ftpack)),w
 15822  0A9D  00BE               	movwf	(?___ftmul+2)
 15823  0A9E  2A9F               	goto	l18795
 15824                           	
 15825  0A9F                     l23332:	
 15826                           	line	84
 15827                           	
 15828  0A9F                     l18795:	
 15829  0A9F  0008               	return
 15830                           	opt stack 0
 15831                           GLOBAL	__end_of___ftmul
 15832  0AA0                     	__end_of___ftmul:
 15833 ;; =============== function ___ftmul ends ============
 15834                           
 15835                           	signat	___ftmul,8315
 15836                           	global	___ftdiv
 15837                           psect	text4141,local,class=CODE,delta=2
 15838                           global __ptext4141
 15839  085F                     __ptext4141:
 15840                           
 15841 ;; *************** function ___ftdiv *****************
 15842 ;; Defined at:
 15843 ;;		line 50 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftdiv.c"
 15844 ;; Parameters:    Size  Location     Type
 15845 ;;  f2              3   28[BANK0 ] float 
 15846 ;;  f1              3   31[BANK0 ] float 
 15847 ;; Auto vars:     Size  Location     Type
 15848 ;;  f3              3   39[BANK0 ] float 
 15849 ;;  sign            1   43[BANK0 ] unsigned char 
 15850 ;;  exp             1   42[BANK0 ] unsigned char 
 15851 ;;  cntr            1   38[BANK0 ] unsigned char 
 15852 ;; Return value:  Size  Location     Type
 15853 ;;                  3   28[BANK0 ] float 
 15854 ;; Registers used:
 15855 ;;		wreg, status,2, status,0, pclath, cstack
 15856 ;; Tracked objects:
 15857 ;;		On entry : 0/0
 15858 ;;		On exit  : 0/0
 15859 ;;		Unchanged: 0/0
 15860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 15861 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0
 15862 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0
 15863 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 15864 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
       0       0
 15865 ;;Total ram usage:       16 bytes
 15866 ;; Hardware stack levels used:    1
 15867 ;; Hardware stack levels required when called:    5
 15868 ;; This function calls:
 15869 ;;		___ftpack
 15870 ;; This function is called by:
 15871 ;;		_getPercentValue
 15872 ;;		_setPercentValue
 15873 ;; This function uses a non-reentrant model
 15874 ;;
 15875                           psect	text4141
 15876                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftdiv.c"
 15877                           	line	50
 15878                           	global	__size_of___ftdiv
 15879  00B8                     	__size_of___ftdiv	equ	__end_of___ftdiv-___ftdiv
 15880                           	
 15881  085F                     ___ftdiv:	
 15882                           	opt	stack 2
 15883                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
 15884                           	line	55
 15885                           	
 15886  085F                     l23242:	
 15887  085F  0020               	movlb 0	; select bank0
 15888  0860  083F               	movf	(___ftdiv@f1),w
 15889  0861  00C2               	movwf	((??___ftdiv+0)+0)
 15890  0862  0840               	movf	(___ftdiv@f1+1),w
 15891  0863  00C3               	movwf	((??___ftdiv+0)+0+1)
 15892  0864  0841               	movf	(___ftdiv@f1+2),w
 15893  0865  00C4               	movwf	((??___ftdiv+0)+0+2)
 15894  0866  1003               	clrc
 15895  0867  0D43               	rlf	(??___ftdiv+0)+1,w
 15896  0868  0D44               	rlf	(??___ftdiv+0)+2,w
 15897  0869  00C5               	movwf	(??___ftdiv+3)+0
 15898  086A  0845               	movf	(??___ftdiv+3)+0,w
 15899  086B  00CA               	movwf	(___ftdiv@exp)
 15900  086C  08CA               	movf	((___ftdiv@exp)),f
 15901  086D  1D03               	skipz
 15902  086E  2870               	goto	u7001
 15903  086F  2871               	goto	u7000
 15904  0870                     u7001:
 15905  0870  2879               	goto	l23248
 15906  0871                     u7000:
 15907                           	line	56
 15908                           	
 15909  0871                     l23244:	
 15910  0871  3000               	movlw	0x0
 15911  0872  00BC               	movwf	(?___ftdiv)
 15912  0873  3000               	movlw	0x0
 15913  0874  00BD               	movwf	(?___ftdiv+1)
 15914  0875  3000               	movlw	0x0
 15915  0876  00BE               	movwf	(?___ftdiv+2)
 15916  0877  2916               	goto	l18785
 15917                           	
 15918  0878                     l23246:	
 15919  0878  2916               	goto	l18785
 15920                           	
 15921  0879                     l18784:	
 15922                           	line	57
 15923                           	
 15924  0879                     l23248:	
 15925  0879  083C               	movf	(___ftdiv@f2),w
 15926  087A  00C2               	movwf	((??___ftdiv+0)+0)
 15927  087B  083D               	movf	(___ftdiv@f2+1),w
 15928  087C  00C3               	movwf	((??___ftdiv+0)+0+1)
 15929  087D  083E               	movf	(___ftdiv@f2+2),w
 15930  087E  00C4               	movwf	((??___ftdiv+0)+0+2)
 15931  087F  1003               	clrc
 15932  0880  0D43               	rlf	(??___ftdiv+0)+1,w
 15933  0881  0D44               	rlf	(??___ftdiv+0)+2,w
 15934  0882  00C5               	movwf	(??___ftdiv+3)+0
 15935  0883  0845               	movf	(??___ftdiv+3)+0,w
 15936  0884  00CB               	movwf	(___ftdiv@sign)
 15937  0885  08CB               	movf	((___ftdiv@sign)),f
 15938  0886  1D03               	skipz
 15939  0887  2889               	goto	u7011
 15940  0888  288A               	goto	u7010
 15941  0889                     u7011:
 15942  0889  2892               	goto	l23254
 15943  088A                     u7010:
 15944                           	line	58
 15945                           	
 15946  088A                     l23250:	
 15947  088A  3000               	movlw	0x0
 15948  088B  00BC               	movwf	(?___ftdiv)
 15949  088C  3000               	movlw	0x0
 15950  088D  00BD               	movwf	(?___ftdiv+1)
 15951  088E  3000               	movlw	0x0
 15952  088F  00BE               	movwf	(?___ftdiv+2)
 15953  0890  2916               	goto	l18785
 15954                           	
 15955  0891                     l23252:	
 15956  0891  2916               	goto	l18785
 15957                           	
 15958  0892                     l18786:	
 15959                           	line	59
 15960                           	
 15961  0892                     l23254:	
 15962  0892  3000               	movlw	0
 15963  0893  00C7               	movwf	(___ftdiv@f3)
 15964  0894  3000               	movlw	0
 15965  0895  00C8               	movwf	(___ftdiv@f3+1)
 15966  0896  3000               	movlw	0
 15967  0897  00C9               	movwf	(___ftdiv@f3+2)
 15968                           	line	60
 15969                           	
 15970  0898                     l23256:	
 15971  0898  3089               	movlw	(089h)
 15972  0899  074B               	addwf	(___ftdiv@sign),w
 15973  089A  00C2               	movwf	(??___ftdiv+0)+0
 15974  089B  0842               	movf	0+(??___ftdiv+0)+0,w
 15975  089C  02CA               	subwf	(___ftdiv@exp),f
 15976                           	line	61
 15977                           	
 15978  089D                     l23258:	
 15979  089D  083F               	movf	(___ftdiv@f1),w
 15980  089E  00C2               	movwf	((??___ftdiv+0)+0)
 15981  089F  0840               	movf	(___ftdiv@f1+1),w
 15982  08A0  00C3               	movwf	((??___ftdiv+0)+0+1)
 15983  08A1  0841               	movf	(___ftdiv@f1+2),w
 15984  08A2  00C4               	movwf	((??___ftdiv+0)+0+2)
 15985  08A3  3010               	movlw	010h
 15986  08A4                     u7025:
 15987  08A4  36C4               	lsrf	(??___ftdiv+0)+2,f
 15988  08A5  0CC3               	rrf	(??___ftdiv+0)+1,f
 15989  08A6  0CC2               	rrf	(??___ftdiv+0)+0,f
 15990  08A7                     u7020:
 15991  08A7  0B89               	decfsz	wreg,f
 15992  08A8  28A4               	goto	u7025
 15993  08A9  0842               	movf	0+(??___ftdiv+0)+0,w
 15994  08AA  00C5               	movwf	(??___ftdiv+3)+0
 15995  08AB  0845               	movf	(??___ftdiv+3)+0,w
 15996  08AC  00CB               	movwf	(___ftdiv@sign)
 15997                           	line	62
 15998                           	
 15999  08AD                     l23260:	
 16000  08AD  083C               	movf	(___ftdiv@f2),w
 16001  08AE  00C2               	movwf	((??___ftdiv+0)+0)
 16002  08AF  083D               	movf	(___ftdiv@f2+1),w
 16003  08B0  00C3               	movwf	((??___ftdiv+0)+0+1)
 16004  08B1  083E               	movf	(___ftdiv@f2+2),w
 16005  08B2  00C4               	movwf	((??___ftdiv+0)+0+2)
 16006  08B3  3010               	movlw	010h
 16007  08B4                     u7035:
 16008  08B4  36C4               	lsrf	(??___ftdiv+0)+2,f
 16009  08B5  0CC3               	rrf	(??___ftdiv+0)+1,f
 16010  08B6  0CC2               	rrf	(??___ftdiv+0)+0,f
 16011  08B7                     u7030:
 16012  08B7  0B89               	decfsz	wreg,f
 16013  08B8  28B4               	goto	u7035
 16014  08B9  0842               	movf	0+(??___ftdiv+0)+0,w
 16015  08BA  00C5               	movwf	(??___ftdiv+3)+0
 16016  08BB  0845               	movf	(??___ftdiv+3)+0,w
 16017  08BC  06CB               	xorwf	(___ftdiv@sign),f
 16018                           	line	63
 16019                           	
 16020  08BD                     l23262:	
 16021  08BD  3080               	movlw	(080h)
 16022  08BE  00C2               	movwf	(??___ftdiv+0)+0
 16023  08BF  0842               	movf	(??___ftdiv+0)+0,w
 16024  08C0  05CB               	andwf	(___ftdiv@sign),f
 16025                           	line	64
 16026                           	
 16027  08C1                     l23264:	
 16028  08C1  17C0               	bsf	(___ftdiv@f1)+(15/8),(15)&7
 16029                           	line	65
 16030  08C2  30FF               	movlw	0FFh
 16031  08C3  05BF               	andwf	(___ftdiv@f1),f
 16032  08C4  30FF               	movlw	0FFh
 16033  08C5  05C0               	andwf	(___ftdiv@f1+1),f
 16034  08C6  3000               	movlw	0
 16035  08C7  05C1               	andwf	(___ftdiv@f1+2),f
 16036                           	line	66
 16037                           	
 16038  08C8                     l23266:	
 16039  08C8  17BD               	bsf	(___ftdiv@f2)+(15/8),(15)&7
 16040                           	line	67
 16041  08C9  30FF               	movlw	0FFh
 16042  08CA  05BC               	andwf	(___ftdiv@f2),f
 16043  08CB  30FF               	movlw	0FFh
 16044  08CC  05BD               	andwf	(___ftdiv@f2+1),f
 16045  08CD  3000               	movlw	0
 16046  08CE  05BE               	andwf	(___ftdiv@f2+2),f
 16047                           	line	68
 16048  08CF  3018               	movlw	(018h)
 16049  08D0  00C2               	movwf	(??___ftdiv+0)+0
 16050  08D1  0842               	movf	(??___ftdiv+0)+0,w
 16051  08D2  00C6               	movwf	(___ftdiv@cntr)
 16052  08D3  28D4               	goto	l23268
 16053                           	line	69
 16054                           	
 16055  08D4                     l18787:	
 16056                           	line	70
 16057                           	
 16058  08D4                     l23268:	
 16059  08D4  3001               	movlw	01h
 16060  08D5                     u7045:
 16061  08D5  35C7               	lslf	(___ftdiv@f3),f
 16062  08D6  0DC8               	rlf	(___ftdiv@f3+1),f
 16063  08D7  0DC9               	rlf	(___ftdiv@f3+2),f
 16064  08D8  0B89               	decfsz	wreg,f
 16065  08D9  28D5               	goto	u7045
 16066                           	line	71
 16067                           	
 16068  08DA                     l23270:	
 16069  08DA  083E               	movf	(___ftdiv@f2+2),w
 16070  08DB  0241               	subwf	(___ftdiv@f1+2),w
 16071  08DC  1D03               	skipz
 16072  08DD  28E4               	goto	u7055
 16073  08DE  083D               	movf	(___ftdiv@f2+1),w
 16074  08DF  0240               	subwf	(___ftdiv@f1+1),w
 16075  08E0  1D03               	skipz
 16076  08E1  28E4               	goto	u7055
 16077  08E2  083C               	movf	(___ftdiv@f2),w
 16078  08E3  023F               	subwf	(___ftdiv@f1),w
 16079  08E4                     u7055:
 16080  08E4  1C03               	skipc
 16081  08E5  28E7               	goto	u7051
 16082  08E6  28E8               	goto	u7050
 16083  08E7                     u7051:
 16084  08E7  28F0               	goto	l23276
 16085  08E8                     u7050:
 16086                           	line	72
 16087                           	
 16088  08E8                     l23272:	
 16089  08E8  083C               	movf	(___ftdiv@f2),w
 16090  08E9  02BF               	subwf	(___ftdiv@f1),f
 16091  08EA  083D               	movf	(___ftdiv@f2+1),w
 16092  08EB  3BC0               	subwfb	(___ftdiv@f1+1),f
 16093  08EC  083E               	movf	(___ftdiv@f2+2),w
 16094  08ED  3BC1               	subwfb	(___ftdiv@f1+2),f
 16095                           	line	73
 16096                           	
 16097  08EE                     l23274:	
 16098  08EE  1447               	bsf	(___ftdiv@f3)+(0/8),(0)&7
 16099  08EF  28F0               	goto	l23276
 16100                           	line	74
 16101                           	
 16102  08F0                     l18788:	
 16103                           	line	75
 16104                           	
 16105  08F0                     l23276:	
 16106  08F0  3001               	movlw	01h
 16107  08F1                     u7065:
 16108  08F1  35BF               	lslf	(___ftdiv@f1),f
 16109  08F2  0DC0               	rlf	(___ftdiv@f1+1),f
 16110  08F3  0DC1               	rlf	(___ftdiv@f1+2),f
 16111  08F4  0B89               	decfsz	wreg,f
 16112  08F5  28F1               	goto	u7065
 16113                           	line	76
 16114                           	
 16115  08F6                     l23278:	
 16116  08F6  3001               	movlw	low(01h)
 16117  08F7  02C6               	subwf	(___ftdiv@cntr),f
 16118  08F8  1D03               	btfss	status,2
 16119  08F9  28FB               	goto	u7071
 16120  08FA  28FC               	goto	u7070
 16121  08FB                     u7071:
 16122  08FB  28D4               	goto	l23268
 16123  08FC                     u7070:
 16124  08FC  28FD               	goto	l23280
 16125                           	
 16126  08FD                     l18789:	
 16127                           	line	77
 16128                           	
 16129  08FD                     l23280:	
 16130  08FD  0847               	movf	(___ftdiv@f3),w
 16131  08FE  00A0               	movwf	(?___ftpack)
 16132  08FF  0848               	movf	(___ftdiv@f3+1),w
 16133  0900  00A1               	movwf	(?___ftpack+1)
 16134  0901  0849               	movf	(___ftdiv@f3+2),w
 16135  0902  00A2               	movwf	(?___ftpack+2)
 16136  0903  084A               	movf	(___ftdiv@exp),w
 16137  0904  00C2               	movwf	(??___ftdiv+0)+0
 16138  0905  0842               	movf	(??___ftdiv+0)+0,w
 16139  0906  00A3               	movwf	0+(?___ftpack)+03h
 16140  0907  084B               	movf	(___ftdiv@sign),w
 16141  0908  00C3               	movwf	(??___ftdiv+1)+0
 16142  0909  0843               	movf	(??___ftdiv+1)+0,w
 16143  090A  00A4               	movwf	0+(?___ftpack)+04h
 16144  090B  319E  2622  3188   	fcall	___ftpack
 16145  090E  0020               	movlb 0	; select bank0
 16146  090F  0820               	movf	(0+(?___ftpack)),w
 16147  0910  00BC               	movwf	(?___ftdiv)
 16148  0911  0821               	movf	(1+(?___ftpack)),w
 16149  0912  00BD               	movwf	(?___ftdiv+1)
 16150  0913  0822               	movf	(2+(?___ftpack)),w
 16151  0914  00BE               	movwf	(?___ftdiv+2)
 16152  0915  2916               	goto	l18785
 16153                           	
 16154  0916                     l23282:	
 16155                           	line	78
 16156                           	
 16157  0916                     l18785:	
 16158  0916  0008               	return
 16159                           	opt stack 0
 16160                           GLOBAL	__end_of___ftdiv
 16161  0917                     	__end_of___ftdiv:
 16162 ;; =============== function ___ftdiv ends ============
 16163                           
 16164                           	signat	___ftdiv,8315
 16165                           	global	___ftadd
 16166                           psect	text4142,local,class=CODE,delta=2
 16167                           global __ptext4142
 16168  06AB                     __ptext4142:
 16169                           
 16170 ;; *************** function ___ftadd *****************
 16171 ;; Defined at:
 16172 ;;		line 87 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftadd.c"
 16173 ;; Parameters:    Size  Location     Type
 16174 ;;  f1              3   44[BANK0 ] float 
 16175 ;;  f2              3   47[BANK0 ] float 
 16176 ;; Auto vars:     Size  Location     Type
 16177 ;;  exp1            1   56[BANK0 ] unsigned char 
 16178 ;;  exp2            1   55[BANK0 ] unsigned char 
 16179 ;;  sign            1   54[BANK0 ] unsigned char 
 16180 ;; Return value:  Size  Location     Type
 16181 ;;                  3   44[BANK0 ] float 
 16182 ;; Registers used:
 16183 ;;		wreg, status,2, status,0, pclath, cstack
 16184 ;; Tracked objects:
 16185 ;;		On entry : 0/0
 16186 ;;		On exit  : 0/0
 16187 ;;		Unchanged: 0/0
 16188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 16189 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0
 16190 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 16191 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 16192 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
       0       0
 16193 ;;Total ram usage:       13 bytes
 16194 ;; Hardware stack levels used:    1
 16195 ;; Hardware stack levels required when called:    5
 16196 ;; This function calls:
 16197 ;;		___ftpack
 16198 ;; This function is called by:
 16199 ;;		_getPercentValue
 16200 ;;		___ftsub
 16201 ;; This function uses a non-reentrant model
 16202 ;;
 16203                           psect	text4142
 16204                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftadd.c"
 16205                           	line	87
 16206                           	global	__size_of___ftadd
 16207  0130                     	__size_of___ftadd	equ	__end_of___ftadd-___ftadd
 16208                           	
 16209  06AB                     ___ftadd:	
 16210                           	opt	stack 2
 16211                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
 16212                           	line	90
 16213                           	
 16214  06AB                     l23172:	
 16215  06AB  0020               	movlb 0	; select bank0
 16216  06AC  084C               	movf	(___ftadd@f1),w
 16217  06AD  00D2               	movwf	((??___ftadd+0)+0)
 16218  06AE  084D               	movf	(___ftadd@f1+1),w
 16219  06AF  00D3               	movwf	((??___ftadd+0)+0+1)
 16220  06B0  084E               	movf	(___ftadd@f1+2),w
 16221  06B1  00D4               	movwf	((??___ftadd+0)+0+2)
 16222  06B2  1003               	clrc
 16223  06B3  0D53               	rlf	(??___ftadd+0)+1,w
 16224  06B4  0D54               	rlf	(??___ftadd+0)+2,w
 16225  06B5  00D5               	movwf	(??___ftadd+3)+0
 16226  06B6  0855               	movf	(??___ftadd+3)+0,w
 16227  06B7  00D8               	movwf	(___ftadd@exp1)
 16228                           	line	91
 16229  06B8  084F               	movf	(___ftadd@f2),w
 16230  06B9  00D2               	movwf	((??___ftadd+0)+0)
 16231  06BA  0850               	movf	(___ftadd@f2+1),w
 16232  06BB  00D3               	movwf	((??___ftadd+0)+0+1)
 16233  06BC  0851               	movf	(___ftadd@f2+2),w
 16234  06BD  00D4               	movwf	((??___ftadd+0)+0+2)
 16235  06BE  1003               	clrc
 16236  06BF  0D53               	rlf	(??___ftadd+0)+1,w
 16237  06C0  0D54               	rlf	(??___ftadd+0)+2,w
 16238  06C1  00D5               	movwf	(??___ftadd+3)+0
 16239  06C2  0855               	movf	(??___ftadd+3)+0,w
 16240  06C3  00D7               	movwf	(___ftadd@exp2)
 16241                           	line	92
 16242                           	
 16243  06C4                     l23174:	
 16244  06C4  0858               	movf	(___ftadd@exp1),w
 16245  06C5  1D03               	skipz
 16246  06C6  2EC8               	goto	u6770
 16247  06C7  2ED9               	goto	l23180
 16248  06C8                     u6770:
 16249                           	
 16250  06C8                     l23176:	
 16251  06C8  0857               	movf	(___ftadd@exp2),w
 16252  06C9  0258               	subwf	(___ftadd@exp1),w
 16253  06CA  1803               	skipnc
 16254  06CB  2ECD               	goto	u6781
 16255  06CC  2ECE               	goto	u6780
 16256  06CD                     u6781:
 16257  06CD  2EE1               	goto	l23184
 16258  06CE                     u6780:
 16259                           	
 16260  06CE                     l23178:	
 16261  06CE  0358               	decf	(___ftadd@exp1),w
 16262  06CF  3AFF               	xorlw	0ffh
 16263  06D0  0757               	addwf	(___ftadd@exp2),w
 16264  06D1  00D2               	movwf	(??___ftadd+0)+0
 16265  06D2  3019               	movlw	(019h)
 16266  06D3  0252               	subwf	0+(??___ftadd+0)+0,w
 16267  06D4  1C03               	skipc
 16268  06D5  2ED7               	goto	u6791
 16269  06D6  2ED8               	goto	u6790
 16270  06D7                     u6791:
 16271  06D7  2EE1               	goto	l23184
 16272  06D8                     u6790:
 16273  06D8  2ED9               	goto	l23180
 16274                           	
 16275  06D9                     l18742:	
 16276                           	line	93
 16277                           	
 16278  06D9                     l23180:	
 16279  06D9  084F               	movf	(___ftadd@f2),w
 16280  06DA  00CC               	movwf	(?___ftadd)
 16281  06DB  0850               	movf	(___ftadd@f2+1),w
 16282  06DC  00CD               	movwf	(?___ftadd+1)
 16283  06DD  0851               	movf	(___ftadd@f2+2),w
 16284  06DE  00CE               	movwf	(?___ftadd+2)
 16285  06DF  2FDA               	goto	l18743
 16286                           	
 16287  06E0                     l23182:	
 16288  06E0  2FDA               	goto	l18743
 16289                           	
 16290  06E1                     l18740:	
 16291                           	line	94
 16292                           	
 16293  06E1                     l23184:	
 16294  06E1  0857               	movf	(___ftadd@exp2),w
 16295  06E2  1D03               	skipz
 16296  06E3  2EE5               	goto	u6800
 16297  06E4  2EF5               	goto	l18746
 16298  06E5                     u6800:
 16299                           	
 16300  06E5                     l23186:	
 16301  06E5  0858               	movf	(___ftadd@exp1),w
 16302  06E6  0257               	subwf	(___ftadd@exp2),w
 16303  06E7  1803               	skipnc
 16304  06E8  2EEA               	goto	u6811
 16305  06E9  2EEB               	goto	u6810
 16306  06EA                     u6811:
 16307  06EA  2EF6               	goto	l23190
 16308  06EB                     u6810:
 16309                           	
 16310  06EB                     l23188:	
 16311  06EB  0357               	decf	(___ftadd@exp2),w
 16312  06EC  3AFF               	xorlw	0ffh
 16313  06ED  0758               	addwf	(___ftadd@exp1),w
 16314  06EE  00D2               	movwf	(??___ftadd+0)+0
 16315  06EF  3019               	movlw	(019h)
 16316  06F0  0252               	subwf	0+(??___ftadd+0)+0,w
 16317  06F1  1C03               	skipc
 16318  06F2  2EF4               	goto	u6821
 16319  06F3  2EF5               	goto	u6820
 16320  06F4                     u6821:
 16321  06F4  2EF6               	goto	l23190
 16322  06F5                     u6820:
 16323                           	
 16324  06F5                     l18746:	
 16325                           	line	95
 16326  06F5  2FDA               	goto	l18743
 16327                           	
 16328  06F6                     l18744:	
 16329                           	line	96
 16330                           	
 16331  06F6                     l23190:	
 16332  06F6  3006               	movlw	(06h)
 16333  06F7  00D2               	movwf	(??___ftadd+0)+0
 16334  06F8  0852               	movf	(??___ftadd+0)+0,w
 16335  06F9  00D6               	movwf	(___ftadd@sign)
 16336                           	line	97
 16337                           	
 16338  06FA                     l23192:	
 16339  06FA  1FCE               	btfss	(___ftadd@f1+2),(23)&7
 16340  06FB  2EFD               	goto	u6831
 16341  06FC  2EFE               	goto	u6830
 16342  06FD                     u6831:
 16343  06FD  2EFF               	goto	l18747
 16344  06FE                     u6830:
 16345                           	line	98
 16346                           	
 16347  06FE                     l23194:	
 16348  06FE  17D6               	bsf	(___ftadd@sign)+(7/8),(7)&7
 16349                           	
 16350  06FF                     l18747:	
 16351                           	line	99
 16352  06FF  1FD1               	btfss	(___ftadd@f2+2),(23)&7
 16353  0700  2F02               	goto	u6841
 16354  0701  2F03               	goto	u6840
 16355  0702                     u6841:
 16356  0702  2F04               	goto	l18748
 16357  0703                     u6840:
 16358                           	line	100
 16359                           	
 16360  0703                     l23196:	
 16361  0703  1756               	bsf	(___ftadd@sign)+(6/8),(6)&7
 16362                           	
 16363  0704                     l18748:	
 16364                           	line	101
 16365  0704  17CD               	bsf	(___ftadd@f1)+(15/8),(15)&7
 16366                           	line	102
 16367                           	
 16368  0705                     l23198:	
 16369  0705  30FF               	movlw	0FFh
 16370  0706  05CC               	andwf	(___ftadd@f1),f
 16371  0707  30FF               	movlw	0FFh
 16372  0708  05CD               	andwf	(___ftadd@f1+1),f
 16373  0709  3000               	movlw	0
 16374  070A  05CE               	andwf	(___ftadd@f1+2),f
 16375                           	line	103
 16376                           	
 16377  070B                     l23200:	
 16378  070B  17D0               	bsf	(___ftadd@f2)+(15/8),(15)&7
 16379                           	line	104
 16380  070C  30FF               	movlw	0FFh
 16381  070D  05CF               	andwf	(___ftadd@f2),f
 16382  070E  30FF               	movlw	0FFh
 16383  070F  05D0               	andwf	(___ftadd@f2+1),f
 16384  0710  3000               	movlw	0
 16385  0711  05D1               	andwf	(___ftadd@f2+2),f
 16386                           	line	106
 16387  0712  0857               	movf	(___ftadd@exp2),w
 16388  0713  0258               	subwf	(___ftadd@exp1),w
 16389  0714  1803               	skipnc
 16390  0715  2F17               	goto	u6851
 16391  0716  2F18               	goto	u6850
 16392  0717                     u6851:
 16393  0717  2F45               	goto	l23212
 16394  0718                     u6850:
 16395  0718  2F19               	goto	l23202
 16396                           	line	109
 16397                           	
 16398  0719                     l18750:	
 16399                           	line	110
 16400                           	
 16401  0719                     l23202:	
 16402  0719  3001               	movlw	01h
 16403  071A                     u6865:
 16404  071A  35CF               	lslf	(___ftadd@f2),f
 16405  071B  0DD0               	rlf	(___ftadd@f2+1),f
 16406  071C  0DD1               	rlf	(___ftadd@f2+2),f
 16407  071D  0B89               	decfsz	wreg,f
 16408  071E  2F1A               	goto	u6865
 16409                           	line	111
 16410  071F  3001               	movlw	low(01h)
 16411  0720  02D7               	subwf	(___ftadd@exp2),f
 16412                           	line	112
 16413                           	
 16414  0721                     l23204:	
 16415  0721  0857               	movf	(___ftadd@exp2),w
 16416  0722  0658               	xorwf	(___ftadd@exp1),w
 16417  0723  1903               	skipnz
 16418  0724  2F26               	goto	u6871
 16419  0725  2F27               	goto	u6870
 16420  0726                     u6871:
 16421  0726  2F3D               	goto	l23210
 16422  0727                     u6870:
 16423                           	
 16424  0727                     l23206:	
 16425  0727  3001               	movlw	low(01h)
 16426  0728  02D6               	subwf	(___ftadd@sign),f
 16427  0729  0856               	movf	((___ftadd@sign)),w
 16428  072A  3907               	andlw	07h
 16429  072B  1D03               	btfss	status,2
 16430  072C  2F2E               	goto	u6881
 16431  072D  2F2F               	goto	u6880
 16432  072E                     u6881:
 16433  072E  2F19               	goto	l23202
 16434  072F                     u6880:
 16435  072F  2F3D               	goto	l23210
 16436                           	
 16437  0730                     l18752:	
 16438  0730  2F3D               	goto	l23210
 16439                           	
 16440  0731                     l18753:	
 16441                           	line	113
 16442  0731  2F3D               	goto	l23210
 16443                           	
 16444  0732                     l18755:	
 16445                           	line	114
 16446                           	
 16447  0732                     l23208:	
 16448  0732  3001               	movlw	01h
 16449  0733                     u6895:
 16450  0733  36CE               	lsrf	(___ftadd@f1+2),f
 16451  0734  0CCD               	rrf	(___ftadd@f1+1),f
 16452  0735  0CCC               	rrf	(___ftadd@f1),f
 16453  0736  0B89               	decfsz	wreg,f
 16454  0737  2F33               	goto	u6895
 16455                           
 16456                           	line	115
 16457  0738  3001               	movlw	(01h)
 16458  0739  00D2               	movwf	(??___ftadd+0)+0
 16459  073A  0852               	movf	(??___ftadd+0)+0,w
 16460  073B  07D8               	addwf	(___ftadd@exp1),f
 16461  073C  2F3D               	goto	l23210
 16462                           	line	116
 16463                           	
 16464  073D                     l18754:	
 16465                           	line	113
 16466                           	
 16467  073D                     l23210:	
 16468  073D  0858               	movf	(___ftadd@exp1),w
 16469  073E  0657               	xorwf	(___ftadd@exp2),w
 16470  073F  1D03               	skipz
 16471  0740  2F42               	goto	u6901
 16472  0741  2F43               	goto	u6900
 16473  0742                     u6901:
 16474  0742  2F32               	goto	l23208
 16475  0743                     u6900:
 16476  0743  2F78               	goto	l18757
 16477                           	
 16478  0744                     l18756:	
 16479                           	line	117
 16480  0744  2F78               	goto	l18757
 16481                           	
 16482  0745                     l18749:	
 16483                           	
 16484  0745                     l23212:	
 16485  0745  0858               	movf	(___ftadd@exp1),w
 16486  0746  0257               	subwf	(___ftadd@exp2),w
 16487  0747  1803               	skipnc
 16488  0748  2F4A               	goto	u6911
 16489  0749  2F4B               	goto	u6910
 16490  074A                     u6911:
 16491  074A  2F78               	goto	l18757
 16492  074B                     u6910:
 16493  074B  2F4C               	goto	l23214
 16494                           	line	120
 16495                           	
 16496  074C                     l18759:	
 16497                           	line	121
 16498                           	
 16499  074C                     l23214:	
 16500  074C  3001               	movlw	01h
 16501  074D                     u6925:
 16502  074D  35CC               	lslf	(___ftadd@f1),f
 16503  074E  0DCD               	rlf	(___ftadd@f1+1),f
 16504  074F  0DCE               	rlf	(___ftadd@f1+2),f
 16505  0750  0B89               	decfsz	wreg,f
 16506  0751  2F4D               	goto	u6925
 16507                           	line	122
 16508  0752  3001               	movlw	low(01h)
 16509  0753  02D8               	subwf	(___ftadd@exp1),f
 16510                           	line	123
 16511                           	
 16512  0754                     l23216:	
 16513  0754  0857               	movf	(___ftadd@exp2),w
 16514  0755  0658               	xorwf	(___ftadd@exp1),w
 16515  0756  1903               	skipnz
 16516  0757  2F59               	goto	u6931
 16517  0758  2F5A               	goto	u6930
 16518  0759                     u6931:
 16519  0759  2F70               	goto	l23222
 16520  075A                     u6930:
 16521                           	
 16522  075A                     l23218:	
 16523  075A  3001               	movlw	low(01h)
 16524  075B  02D6               	subwf	(___ftadd@sign),f
 16525  075C  0856               	movf	((___ftadd@sign)),w
 16526  075D  3907               	andlw	07h
 16527  075E  1D03               	btfss	status,2
 16528  075F  2F61               	goto	u6941
 16529  0760  2F62               	goto	u6940
 16530  0761                     u6941:
 16531  0761  2F4C               	goto	l23214
 16532  0762                     u6940:
 16533  0762  2F70               	goto	l23222
 16534                           	
 16535  0763                     l18761:	
 16536  0763  2F70               	goto	l23222
 16537                           	
 16538  0764                     l18762:	
 16539                           	line	124
 16540  0764  2F70               	goto	l23222
 16541                           	
 16542  0765                     l18764:	
 16543                           	line	125
 16544                           	
 16545  0765                     l23220:	
 16546  0765  3001               	movlw	01h
 16547  0766                     u6955:
 16548  0766  36D1               	lsrf	(___ftadd@f2+2),f
 16549  0767  0CD0               	rrf	(___ftadd@f2+1),f
 16550  0768  0CCF               	rrf	(___ftadd@f2),f
 16551  0769  0B89               	decfsz	wreg,f
 16552  076A  2F66               	goto	u6955
 16553                           
 16554                           	line	126
 16555  076B  3001               	movlw	(01h)
 16556  076C  00D2               	movwf	(??___ftadd+0)+0
 16557  076D  0852               	movf	(??___ftadd+0)+0,w
 16558  076E  07D7               	addwf	(___ftadd@exp2),f
 16559  076F  2F70               	goto	l23222
 16560                           	line	127
 16561                           	
 16562  0770                     l18763:	
 16563                           	line	124
 16564                           	
 16565  0770                     l23222:	
 16566  0770  0858               	movf	(___ftadd@exp1),w
 16567  0771  0657               	xorwf	(___ftadd@exp2),w
 16568  0772  1D03               	skipz
 16569  0773  2F75               	goto	u6961
 16570  0774  2F76               	goto	u6960
 16571  0775                     u6961:
 16572  0775  2F65               	goto	l23220
 16573  0776                     u6960:
 16574  0776  2F78               	goto	l18757
 16575                           	
 16576  0777                     l18765:	
 16577  0777  2F78               	goto	l18757
 16578                           	line	128
 16579                           	
 16580  0778                     l18758:	
 16581                           	line	129
 16582                           	
 16583  0778                     l18757:	
 16584  0778  1FD6               	btfss	(___ftadd@sign),(7)&7
 16585  0779  2F7B               	goto	u6971
 16586  077A  2F7C               	goto	u6970
 16587  077B                     u6971:
 16588  077B  2F8D               	goto	l23226
 16589  077C                     u6970:
 16590                           	line	131
 16591                           	
 16592  077C                     l23224:	
 16593  077C  30FF               	movlw	0FFh
 16594  077D  06CC               	xorwf	(___ftadd@f1),f
 16595  077E  30FF               	movlw	0FFh
 16596  077F  06CD               	xorwf	(___ftadd@f1+1),f
 16597  0780  30FF               	movlw	0FFh
 16598  0781  06CE               	xorwf	(___ftadd@f1+2),f
 16599                           	line	132
 16600  0782  3001               	movlw	01h
 16601  0783  07CC               	addwf	(___ftadd@f1),f
 16602  0784  3000               	movlw	0
 16603  0785  1803               	skipnc
 16604  0786  3001               movlw 1
 16605  0787  07CD               	addwf	(___ftadd@f1+1),f
 16606  0788  3000               	movlw	0
 16607  0789  1803               	skipnc
 16608  078A  3001               movlw 1
 16609  078B  07CE               	addwf	(___ftadd@f1+2),f
 16610  078C  2F8D               	goto	l23226
 16611                           	line	133
 16612                           	
 16613  078D                     l18766:	
 16614                           	line	134
 16615                           	
 16616  078D                     l23226:	
 16617  078D  1F56               	btfss	(___ftadd@sign),(6)&7
 16618  078E  2F90               	goto	u6981
 16619  078F  2F91               	goto	u6980
 16620  0790                     u6981:
 16621  0790  2FA2               	goto	l23230
 16622  0791                     u6980:
 16623                           	line	136
 16624                           	
 16625  0791                     l23228:	
 16626  0791  30FF               	movlw	0FFh
 16627  0792  06CF               	xorwf	(___ftadd@f2),f
 16628  0793  30FF               	movlw	0FFh
 16629  0794  06D0               	xorwf	(___ftadd@f2+1),f
 16630  0795  30FF               	movlw	0FFh
 16631  0796  06D1               	xorwf	(___ftadd@f2+2),f
 16632                           	line	137
 16633  0797  3001               	movlw	01h
 16634  0798  07CF               	addwf	(___ftadd@f2),f
 16635  0799  3000               	movlw	0
 16636  079A  1803               	skipnc
 16637  079B  3001               movlw 1
 16638  079C  07D0               	addwf	(___ftadd@f2+1),f
 16639  079D  3000               	movlw	0
 16640  079E  1803               	skipnc
 16641  079F  3001               movlw 1
 16642  07A0  07D1               	addwf	(___ftadd@f2+2),f
 16643  07A1  2FA2               	goto	l23230
 16644                           	line	138
 16645                           	
 16646  07A2                     l18767:	
 16647                           	line	139
 16648                           	
 16649  07A2                     l23230:	
 16650  07A2  01D6               	clrf	(___ftadd@sign)
 16651                           	line	140
 16652  07A3  084C               	movf	(___ftadd@f1),w
 16653  07A4  07CF               	addwf	(___ftadd@f2),f
 16654  07A5  084D               	movf	(___ftadd@f1+1),w
 16655  07A6  3DD0               	addwfc	(___ftadd@f2+1),f
 16656  07A7  084E               	movf	(___ftadd@f1+2),w
 16657  07A8  3DD1               	addwfc	(___ftadd@f2+2),f
 16658                           	line	141
 16659                           	
 16660  07A9                     l23232:	
 16661  07A9  1FD1               	btfss	(___ftadd@f2+2),(23)&7
 16662  07AA  2FAC               	goto	u6991
 16663  07AB  2FAD               	goto	u6990
 16664  07AC                     u6991:
 16665  07AC  2FC1               	goto	l23238
 16666  07AD                     u6990:
 16667                           	line	142
 16668                           	
 16669  07AD                     l23234:	
 16670  07AD  30FF               	movlw	0FFh
 16671  07AE  06CF               	xorwf	(___ftadd@f2),f
 16672  07AF  30FF               	movlw	0FFh
 16673  07B0  06D0               	xorwf	(___ftadd@f2+1),f
 16674  07B1  30FF               	movlw	0FFh
 16675  07B2  06D1               	xorwf	(___ftadd@f2+2),f
 16676                           	line	143
 16677  07B3  3001               	movlw	01h
 16678  07B4  07CF               	addwf	(___ftadd@f2),f
 16679  07B5  3000               	movlw	0
 16680  07B6  1803               	skipnc
 16681  07B7  3001               movlw 1
 16682  07B8  07D0               	addwf	(___ftadd@f2+1),f
 16683  07B9  3000               	movlw	0
 16684  07BA  1803               	skipnc
 16685  07BB  3001               movlw 1
 16686  07BC  07D1               	addwf	(___ftadd@f2+2),f
 16687                           	line	144
 16688                           	
 16689  07BD                     l23236:	
 16690  07BD  01D6               	clrf	(___ftadd@sign)
 16691  07BE  1403               	bsf	status,0
 16692  07BF  0DD6               	rlf	(___ftadd@sign),f
 16693  07C0  2FC1               	goto	l23238
 16694                           	line	145
 16695                           	
 16696  07C1                     l18768:	
 16697                           	line	146
 16698                           	
 16699  07C1                     l23238:	
 16700  07C1  084F               	movf	(___ftadd@f2),w
 16701  07C2  00A0               	movwf	(?___ftpack)
 16702  07C3  0850               	movf	(___ftadd@f2+1),w
 16703  07C4  00A1               	movwf	(?___ftpack+1)
 16704  07C5  0851               	movf	(___ftadd@f2+2),w
 16705  07C6  00A2               	movwf	(?___ftpack+2)
 16706  07C7  0858               	movf	(___ftadd@exp1),w
 16707  07C8  00D2               	movwf	(??___ftadd+0)+0
 16708  07C9  0852               	movf	(??___ftadd+0)+0,w
 16709  07CA  00A3               	movwf	0+(?___ftpack)+03h
 16710  07CB  0856               	movf	(___ftadd@sign),w
 16711  07CC  00D3               	movwf	(??___ftadd+1)+0
 16712  07CD  0853               	movf	(??___ftadd+1)+0,w
 16713  07CE  00A4               	movwf	0+(?___ftpack)+04h
 16714  07CF  319E  2622  3186   	fcall	___ftpack
 16715  07D2  0020               	movlb 0	; select bank0
 16716  07D3  0820               	movf	(0+(?___ftpack)),w
 16717  07D4  00CC               	movwf	(?___ftadd)
 16718  07D5  0821               	movf	(1+(?___ftpack)),w
 16719  07D6  00CD               	movwf	(?___ftadd+1)
 16720  07D7  0822               	movf	(2+(?___ftpack)),w
 16721  07D8  00CE               	movwf	(?___ftadd+2)
 16722  07D9  2FDA               	goto	l18743
 16723                           	
 16724  07DA                     l23240:	
 16725                           	line	148
 16726                           	
 16727  07DA                     l18743:	
 16728  07DA  0008               	return
 16729                           	opt stack 0
 16730                           GLOBAL	__end_of___ftadd
 16731  07DB                     	__end_of___ftadd:
 16732 ;; =============== function ___ftadd ends ============
 16733                           
 16734                           	signat	___ftadd,8315
 16735                           	global	_setRF_Learn
 16736                           psect	text4143,local,class=CODE,delta=2
 16737                           global __ptext4143
 16738  2268                     __ptext4143:
 16739                           
 16740 ;; *************** function _setRF_Learn *****************
 16741 ;; Defined at:
 16742 ;;		line 32 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
 16743 ;; Parameters:    Size  Location     Type
 16744 ;;  rf              1    wreg     unsigned char 
 16745 ;;  command         1    2[BANK0 ] unsigned char 
 16746 ;; Auto vars:     Size  Location     Type
 16747 ;;  rf              1    3[BANK0 ] unsigned char 
 16748 ;; Return value:  Size  Location     Type
 16749 ;;		None               void
 16750 ;; Registers used:
 16751 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16752 ;; Tracked objects:
 16753 ;;		On entry : 0/0
 16754 ;;		On exit  : 0/0
 16755 ;;		Unchanged: 0/0
 16756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 16757 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 16758 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 16759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 16760 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 16761 ;;Total ram usage:        2 bytes
 16762 ;; Hardware stack levels used:    1
 16763 ;; Hardware stack levels required when called:    5
 16764 ;; This function calls:
 16765 ;;		_RfPointSelect
 16766 ;; This function is called by:
 16767 ;;		_setSw_Main
 16768 ;; This function uses a non-reentrant model
 16769 ;;
 16770                           psect	text4143
 16771                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
 16772                           	line	32
 16773                           	global	__size_of_setRF_Learn
 16774  000F                     	__size_of_setRF_Learn	equ	__end_of_setRF_Learn-_setRF_Learn
 16775                           	
 16776  2268                     _setRF_Learn:	
 16777                           	opt	stack 8
 16778                           ; Regs used in _setRF_Learn: [wreg+fsr1l-status,0+pclath+cstack]
 16779                           ;setRF_Learn@rf stored from wreg
 16780  2268  0020               	movlb 0	; select bank0
 16781  2269  00A3               	movwf	(setRF_Learn@rf)
 16782                           	line	33
 16783                           	
 16784  226A                     l24766:	
 16785                           ;RF_Control_B1.c: 33: RfPointSelect(rf);
 16786  226A  0823               	movf	(setRF_Learn@rf),w
 16787  226B  31A2  2202  31A2   	fcall	_RfPointSelect
 16788                           	line	34
 16789                           	
 16790  226E                     l24768:	
 16791                           ;RF_Control_B1.c: 34: RF->Learn=command;
 16792  226E  087B               	movf	(_RF),w
 16793  226F  0086               	movwf	fsr1l
 16794  2270  0187               	clrf fsr1h	
 16795                           	
 16796  2271  0020               	movlb 0	; select bank0
 16797  2272  0822               	movf	(setRF_Learn@command),w
 16798  2273  1301               	bcf	indf1,6
 16799  2274  1D03               	skipz
 16800  2275  1701               	bsf	indf1,6
 16801                           	line	35
 16802                           	
 16803  2276                     l15198:	
 16804  2276  0008               	return
 16805                           	opt stack 0
 16806                           GLOBAL	__end_of_setRF_Learn
 16807  2277                     	__end_of_setRF_Learn:
 16808 ;; =============== function _setRF_Learn ends ============
 16809                           
 16810                           	signat	_setRF_Learn,8312
 16811                           	global	_Flash_Memory_Unlock
 16812                           psect	text4144,local,class=CODE,delta=2
 16813                           global __ptext4144
 16814  2106                     __ptext4144:
 16815                           
 16816 ;; *************** function _Flash_Memory_Unlock *****************
 16817 ;; Defined at:
 16818 ;;		line 498 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_16f1518_B1.c"
 16819 ;; Parameters:    Size  Location     Type
 16820 ;;		None
 16821 ;; Auto vars:     Size  Location     Type
 16822 ;;		None
 16823 ;; Return value:  Size  Location     Type
 16824 ;;		None               void
 16825 ;; Registers used:
 16826 ;;		wreg
 16827 ;; Tracked objects:
 16828 ;;		On entry : 0/0
 16829 ;;		On exit  : 0/0
 16830 ;;		Unchanged: 0/0
 16831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 16832 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 16833 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 16834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 16835 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 16836 ;;Total ram usage:        0 bytes
 16837 ;; Hardware stack levels used:    1
 16838 ;; Hardware stack levels required when called:    4
 16839 ;; This function calls:
 16840 ;;		Nothing
 16841 ;; This function is called by:
 16842 ;;		_Flash_Memory_Write
 16843 ;;		_Flash_Memory_Erasing
 16844 ;; This function uses a non-reentrant model
 16845 ;;
 16846                           psect	text4144
 16847                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_16f1518_B1.c"
 16848                           	line	498
 16849                           	global	__size_of_Flash_Memory_Unlock
 16850  0009                     	__size_of_Flash_Memory_Unlock	equ	__end_of_Flash_Memory_Unlock-_Flash_Memory_Unlock
 16851                           	
 16852  2106                     _Flash_Memory_Unlock:	
 16853                           	opt	stack 8
 16854                           ; Regs used in _Flash_Memory_Unlock: [wreg]
 16855                           	line	499
 16856                           	
 16857  2106                     l24758:	
 16858                           ;MCU_16f1518_B1.c: 499: PMCON2=0x55;
 16859  2106  3055               	movlw	(055h)
 16860  2107  0023               	movlb 3	; select bank3
 16861  2108  0096               	movwf	(406)^0180h	;volatile
 16862                           	line	500
 16863                           ;MCU_16f1518_B1.c: 500: PMCON2=0xaa;
 16864  2109  30AA               	movlw	(0AAh)
 16865  210A  0096               	movwf	(406)^0180h	;volatile
 16866                           	line	501
 16867                           	
 16868  210B                     l24760:	
 16869                           ;MCU_16f1518_B1.c: 501: WR=1;
 16870  210B  1495               	bsf	(3241/8)^0180h,(3241)&7
 16871                           	line	502
 16872                           	
 16873  210C                     l24762:	
 16874                           ;MCU_16f1518_B1.c: 502: _nop();
 16875  210C  0000               	nop
 16876                           	line	503
 16877                           	
 16878  210D                     l24764:	
 16879                           ;MCU_16f1518_B1.c: 503: _nop();
 16880  210D  0000               	nop
 16881                           	line	504
 16882                           	
 16883  210E                     l9403:	
 16884  210E  0008               	return
 16885                           	opt stack 0
 16886                           GLOBAL	__end_of_Flash_Memory_Unlock
 16887  210F                     	__end_of_Flash_Memory_Unlock:
 16888 ;; =============== function _Flash_Memory_Unlock ends ============
 16889                           
 16890                           	signat	_Flash_Memory_Unlock,88
 16891                           	global	_setRF_Enable
 16892                           psect	text4145,local,class=CODE,delta=2
 16893                           global __ptext4145
 16894  257F                     __ptext4145:
 16895                           
 16896 ;; *************** function _setRF_Enable *****************
 16897 ;; Defined at:
 16898 ;;		line 179 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
 16899 ;; Parameters:    Size  Location     Type
 16900 ;;  rf              1    wreg     unsigned char 
 16901 ;;  command         1    2[BANK0 ] unsigned char 
 16902 ;; Auto vars:     Size  Location     Type
 16903 ;;  rf              1    3[BANK0 ] unsigned char 
 16904 ;; Return value:  Size  Location     Type
 16905 ;;		None               void
 16906 ;; Registers used:
 16907 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16908 ;; Tracked objects:
 16909 ;;		On entry : 0/0
 16910 ;;		On exit  : 0/0
 16911 ;;		Unchanged: 0/0
 16912 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 16913 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 16914 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 16915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 16916 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 16917 ;;Total ram usage:        2 bytes
 16918 ;; Hardware stack levels used:    1
 16919 ;; Hardware stack levels required when called:    5
 16920 ;; This function calls:
 16921 ;;		_RfPointSelect
 16922 ;;		_setINT_GO
 16923 ;; This function is called by:
 16924 ;;		_MainT
 16925 ;;		_setLoad_Exceptions
 16926 ;;		_setOverTemp_Exceptions
 16927 ;;		_setPowerFault_Exceptions
 16928 ;; This function uses a non-reentrant model
 16929 ;;
 16930                           psect	text4145
 16931                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
 16932                           	line	179
 16933                           	global	__size_of_setRF_Enable
 16934  002C                     	__size_of_setRF_Enable	equ	__end_of_setRF_Enable-_setRF_Enable
 16935                           	
 16936  257F                     _setRF_Enable:	
 16937                           	opt	stack 7
 16938                           ; Regs used in _setRF_Enable: [wreg+fsr1l-status,0+pclath+cstack]
 16939                           ;setRF_Enable@rf stored from wreg
 16940  257F  0020               	movlb 0	; select bank0
 16941  2580  00A3               	movwf	(setRF_Enable@rf)
 16942                           	line	180
 16943                           	
 16944  2581                     l24740:	
 16945                           ;RF_Control_B1.c: 180: RfPointSelect(rf);
 16946  2581  0823               	movf	(setRF_Enable@rf),w
 16947  2582  31A2  2202  31A5   	fcall	_RfPointSelect
 16948                           	line	181
 16949                           	
 16950  2585                     l24742:	
 16951                           ;RF_Control_B1.c: 181: RF->Enable=command;
 16952  2585  087B               	movf	(_RF),w
 16953  2586  0086               	movwf	fsr1l
 16954  2587  0187               	clrf fsr1h	
 16955                           	
 16956  2588  0020               	movlb 0	; select bank0
 16957  2589  0822               	movf	(setRF_Enable@command),w
 16958  258A  1001               	bcf	indf1,0
 16959  258B  1D03               	skipz
 16960  258C  1401               	bsf	indf1,0
 16961                           	line	182
 16962                           	
 16963  258D                     l24744:	
 16964                           ;RF_Control_B1.c: 182: RF->Learn=0;
 16965  258D  087B               	movf	(_RF),w
 16966  258E  0086               	movwf	fsr1l
 16967  258F  0187               	clrf fsr1h	
 16968                           	
 16969  2590  1301               	bcf	indf1,6
 16970                           	line	183
 16971                           	
 16972  2591                     l24746:	
 16973                           ;RF_Control_B1.c: 183: RF->TransceiveGO=0;
 16974  2591  087B               	movf	(_RF),w
 16975  2592  0086               	movwf	fsr1l
 16976  2593  0187               	clrf fsr1h	
 16977                           	
 16978  2594  1101               	bcf	indf1,2
 16979                           	line	184
 16980                           	
 16981  2595                     l24748:	
 16982                           ;RF_Control_B1.c: 184: RF->RxStatus=0;
 16983  2595  087B               	movf	(_RF),w
 16984  2596  0086               	movwf	fsr1l
 16985  2597  0187               	clrf fsr1h	
 16986                           	
 16987  2598  1181               	bcf	indf1,3
 16988                           	line	185
 16989                           	
 16990  2599                     l24750:	
 16991                           ;RF_Control_B1.c: 185: RF->ReceiveGO=0;
 16992  2599  087B               	movf	(_RF),w
 16993  259A  0086               	movwf	fsr1l
 16994  259B  0187               	clrf fsr1h	
 16995                           	
 16996  259C  1081               	bcf	indf1,1
 16997                           	line	186
 16998                           	
 16999  259D                     l24752:	
 17000                           ;RF_Control_B1.c: 186: RF->DebounceTime=0;
 17001  259D  087B               	movf	(_RF),w
 17002  259E  3E01               	addlw	01h
 17003  259F  0086               	movwf	fsr1l
 17004  25A0  0187               	clrf fsr1h	
 17005                           	
 17006  25A1  0181               	clrf	indf1
 17007                           	line	187
 17008                           	
 17009  25A2                     l24754:	
 17010                           ;RF_Control_B1.c: 187: RF->Debounce=0;
 17011  25A2  087B               	movf	(_RF),w
 17012  25A3  0086               	movwf	fsr1l
 17013  25A4  0187               	clrf fsr1h	
 17014                           	
 17015  25A5  1281               	bcf	indf1,5
 17016                           	line	188
 17017                           	
 17018  25A6                     l24756:	
 17019                           ;RF_Control_B1.c: 188: setINT_GO(0);
 17020  25A6  3000               	movlw	(0)
 17021  25A7  31A1  2119  31A5   	fcall	_setINT_GO
 17022                           	line	189
 17023                           	
 17024  25AA                     l15231:	
 17025  25AA  0008               	return
 17026                           	opt stack 0
 17027                           GLOBAL	__end_of_setRF_Enable
 17028  25AB                     	__end_of_setRF_Enable:
 17029 ;; =============== function _setRF_Enable ends ============
 17030                           
 17031                           	signat	_setRF_Enable,8312
 17032                           	global	_setSw_Enable
 17033                           psect	text4146,local,class=CODE,delta=2
 17034                           global __ptext4146
 17035  22A7                     __ptext4146:
 17036                           
 17037 ;; *************** function _setSw_Enable *****************
 17038 ;; Defined at:
 17039 ;;		line 87 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Switch_B1.c"
 17040 ;; Parameters:    Size  Location     Type
 17041 ;;  command         1    wreg     unsigned char 
 17042 ;; Auto vars:     Size  Location     Type
 17043 ;;  command         1    2[BANK0 ] unsigned char 
 17044 ;; Return value:  Size  Location     Type
 17045 ;;		None               void
 17046 ;; Registers used:
 17047 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17048 ;; Tracked objects:
 17049 ;;		On entry : 0/0
 17050 ;;		On exit  : 0/0
 17051 ;;		Unchanged: 0/0
 17052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 17053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 17054 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 17055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 17056 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 17057 ;;Total ram usage:        1 bytes
 17058 ;; Hardware stack levels used:    1
 17059 ;; Hardware stack levels required when called:    5
 17060 ;; This function calls:
 17061 ;;		_SwPointSelect
 17062 ;; This function is called by:
 17063 ;;		_MainT
 17064 ;;		_setLoad_Exceptions
 17065 ;;		_setOverTemp_Exceptions
 17066 ;;		_setPowerFault_Exceptions
 17067 ;; This function uses a non-reentrant model
 17068 ;;
 17069                           psect	text4146
 17070                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Switch_B1.c"
 17071                           	line	87
 17072                           	global	__size_of_setSw_Enable
 17073  0010                     	__size_of_setSw_Enable	equ	__end_of_setSw_Enable-_setSw_Enable
 17074                           	
 17075  22A7                     _setSw_Enable:	
 17076                           	opt	stack 7
 17077                           ; Regs used in _setSw_Enable: [wreg+fsr1l-status,0+pclath+cstack]
 17078                           ;setSw_Enable@command stored from wreg
 17079                           	line	90
 17080  22A7  0020               	movlb 0	; select bank0
 17081  22A8  00A2               	movwf	(setSw_Enable@command)
 17082                           	
 17083  22A9                     l24736:	
 17084                           ;Switch_B1.c: 90: SwPointSelect(1);
 17085  22A9  3001               	movlw	(01h)
 17086  22AA  31A2  2210  31A2   	fcall	_SwPointSelect
 17087                           	line	91
 17088                           	
 17089  22AD                     l24738:	
 17090                           ;Switch_B1.c: 91: Sw->Enable=command;
 17091  22AD  0020               	movlb 0	; select bank0
 17092  22AE  086E               	movf	(_Sw),w
 17093  22AF  0086               	movwf	fsr1l
 17094  22B0  3001               	movlw 1	; select bank2/3
 17095  22B1  0087               	movwf fsr1h	
 17096                           	
 17097  22B2  0822               	movf	(setSw_Enable@command),w
 17098  22B3  1001               	bcf	indf1,0
 17099  22B4  1D03               	skipz
 17100  22B5  1401               	bsf	indf1,0
 17101                           	line	104
 17102                           	
 17103  22B6                     l16448:	
 17104  22B6  0008               	return
 17105                           	opt stack 0
 17106                           GLOBAL	__end_of_setSw_Enable
 17107  22B7                     	__end_of_setSw_Enable:
 17108 ;; =============== function _setSw_Enable ends ============
 17109                           
 17110                           	signat	_setSw_Enable,4216
 17111                           	global	_getPowerFault_AD
 17112                           psect	text4147,local,class=CODE,delta=2
 17113                           global __ptext4147
 17114  19E5                     __ptext4147:
 17115                           
 17116 ;; *************** function _getPowerFault_AD *****************
 17117 ;; Defined at:
 17118 ;;		line 50 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\PowerFault_B1.c"
 17119 ;; Parameters:    Size  Location     Type
 17120 ;;  channel         1    wreg     unsigned char 
 17121 ;; Auto vars:     Size  Location     Type
 17122 ;;  channel         1   11[BANK0 ] unsigned char 
 17123 ;; Return value:  Size  Location     Type
 17124 ;;		None               void
 17125 ;; Registers used:
 17126 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
 17127 ;; Tracked objects:
 17128 ;;		On entry : 0/0
 17129 ;;		On exit  : 0/0
 17130 ;;		Unchanged: 0/0
 17131 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 17132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 17133 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 17134 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 17135 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
       0       0
 17136 ;;Total ram usage:        5 bytes
 17137 ;; Hardware stack levels used:    1
 17138 ;; Hardware stack levels required when called:    5
 17139 ;; This function calls:
 17140 ;;		_getAD
 17141 ;; This function is called by:
 17142 ;;		_main
 17143 ;; This function uses a non-reentrant model
 17144 ;;
 17145                           psect	text4147
 17146                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\PowerFault_B1.c"
 17147                           	line	50
 17148                           	global	__size_of_getPowerFault_AD
 17149  0047                     	__size_of_getPowerFault_AD	equ	__end_of_getPowerFault_AD-_getPowerFault_AD
 17150                           	
 17151  19E5                     _getPowerFault_AD:	
 17152                           	opt	stack 10
 17153                           ; Regs used in _getPowerFault_AD: [wreg+fsr1l-status,0+btemp+1+pclath+cstack]
 17154                           ;getPowerFault_AD@channel stored from wreg
 17155  19E5  0020               	movlb 0	; select bank0
 17156  19E6  00AB               	movwf	(getPowerFault_AD@channel)
 17157                           	line	51
 17158                           	
 17159  19E7                     l23130:	
 17160                           ;PowerFault_B1.c: 51: if(PF->ADtoGO)
 17161  19E7  087A               	movf	(_PF),w
 17162  19E8  0086               	movwf	fsr1l
 17163  19E9  0187               	clrf fsr1h	
 17164                           	
 17165  19EA  1D81               	btfss	indf1,3
 17166  19EB  29ED               	goto	u6751
 17167  19EC  29EE               	goto	u6750
 17168  19ED                     u6751:
 17169  19ED  2A2B               	goto	l14018
 17170  19EE                     u6750:
 17171                           	line	53
 17172                           	
 17173  19EE                     l23132:	
 17174                           ;PowerFault_B1.c: 52: {
 17175                           ;PowerFault_B1.c: 53: PF->ADRES=getAD(channel,0xf0);
 17176  19EE  30F0               	movlw	(0F0h)
 17177  19EF  00A7               	movwf	(??_getPowerFault_AD+0)+0
 17178  19F0  0827               	movf	(??_getPowerFault_AD+0)+0,w
 17179  19F1  00A0               	movwf	(?_getAD)
 17180  19F2  082B               	movf	(getPowerFault_AD@channel),w
 17181  19F3  31A4  2440  3199   	fcall	_getAD
 17182  19F6  087A               	movf	(_PF),w
 17183  19F7  3E03               	addlw	03h
 17184  19F8  0086               	movwf	fsr1l
 17185  19F9  0187               	clrf fsr1h	
 17186                           	
 17187  19FA  0020               	movlb 0	; select bank0
 17188  19FB  0820               	movf	(0+(?_getAD)),w
 17189  19FC  3FC0               	movwi	[0]fsr1
 17190  19FD  0821               	movf	(1+(?_getAD)),w
 17191  19FE  3FC1               	movwi	[1]fsr1
 17192                           	line	54
 17193                           	
 17194  19FF                     l23134:	
 17195                           ;PowerFault_B1.c: 54: if(PF->AD < PF->ADRES)
 17196  19FF  087A               	movf	(_PF),w
 17197  1A00  3E03               	addlw	03h
 17198  1A01  0086               	movwf	fsr1l
 17199  1A02  0187               	clrf fsr1h	
 17200                           	
 17201  1A03  3F40               	moviw	[0]fsr1
 17202  1A04  00A7               	movwf	(??_getPowerFault_AD+0)+0
 17203  1A05  3F41               	moviw	[1]fsr1
 17204  1A06  00A8               	movwf	(??_getPowerFault_AD+0)+0+1
 17205  1A07  087A               	movf	(_PF),w
 17206  1A08  3E01               	addlw	01h
 17207  1A09  0086               	movwf	fsr1l
 17208  1A0A  0187               	clrf fsr1h	
 17209                           	
 17210  1A0B  3F40               	moviw	[0]fsr1
 17211  1A0C  00A9               	movwf	(??_getPowerFault_AD+2)+0
 17212  1A0D  3F41               	moviw	[1]fsr1
 17213  1A0E  00AA               	movwf	(??_getPowerFault_AD+2)+0+1
 17214  1A0F  0828               	movf	1+(??_getPowerFault_AD+0)+0,w
 17215  1A10  022A               	subwf	1+(??_getPowerFault_AD+2)+0,w
 17216  1A11  1D03               	skipz
 17217  1A12  2A15               	goto	u6765
 17218  1A13  0827               	movf	0+(??_getPowerFault_AD+0)+0,w
 17219  1A14  0229               	subwf	0+(??_getPowerFault_AD+2)+0,w
 17220  1A15                     u6765:
 17221  1A15  1803               	skipnc
 17222  1A16  2A18               	goto	u6761
 17223  1A17  2A19               	goto	u6760
 17224  1A18                     u6761:
 17225  1A18  2A2B               	goto	l14018
 17226  1A19                     u6760:
 17227                           	line	56
 17228                           	
 17229  1A19                     l23136:	
 17230                           ;PowerFault_B1.c: 55: {
 17231                           ;PowerFault_B1.c: 56: PF->AD=PF->ADRES;
 17232  1A19  087A               	movf	(_PF),w
 17233  1A1A  3E03               	addlw	03h
 17234  1A1B  0086               	movwf	fsr1l
 17235  1A1C  0187               	clrf fsr1h	
 17236                           	
 17237  1A1D  3F40               	moviw	[0]fsr1
 17238  1A1E  00A7               	movwf	(??_getPowerFault_AD+0)+0
 17239  1A1F  3F41               	moviw	[1]fsr1
 17240  1A20  00A8               	movwf	(??_getPowerFault_AD+0)+0+1
 17241  1A21  087A               	movf	(_PF),w
 17242  1A22  3E01               	addlw	01h
 17243  1A23  0086               	movwf	fsr1l
 17244  1A24  0187               	clrf fsr1h	
 17245                           	
 17246  1A25  0827               	movf	0+(??_getPowerFault_AD+0)+0,w
 17247  1A26  3FC0               	movwi	[0]fsr1
 17248  1A27  0828               	movf	1+(??_getPowerFault_AD+0)+0,w
 17249  1A28  3FC1               	movwi	[1]fsr1
 17250  1A29  2A2B               	goto	l14018
 17251                           	line	57
 17252                           	
 17253  1A2A                     l14017:	
 17254  1A2A  2A2B               	goto	l14018
 17255                           	line	58
 17256                           	
 17257  1A2B                     l14016:	
 17258                           	line	59
 17259                           	
 17260  1A2B                     l14018:	
 17261  1A2B  0008               	return
 17262                           	opt stack 0
 17263                           GLOBAL	__end_of_getPowerFault_AD
 17264  1A2C                     	__end_of_getPowerFault_AD:
 17265 ;; =============== function _getPowerFault_AD ends ============
 17266                           
 17267                           	signat	_getPowerFault_AD,4216
 17268                           	global	_getTemp_AD
 17269                           psect	text4148,local,class=CODE,delta=2
 17270                           global __ptext4148
 17271  114A                     __ptext4148:
 17272                           
 17273 ;; *************** function _getTemp_AD *****************
 17274 ;; Defined at:
 17275 ;;		line 36 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\OverTemperature_B1.c"
 17276 ;; Parameters:    Size  Location     Type
 17277 ;;  channel         1    wreg     unsigned char 
 17278 ;; Auto vars:     Size  Location     Type
 17279 ;;  channel         1   11[BANK0 ] unsigned char 
 17280 ;; Return value:  Size  Location     Type
 17281 ;;		None               void
 17282 ;; Registers used:
 17283 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
 17284 ;; Tracked objects:
 17285 ;;		On entry : 0/0
 17286 ;;		On exit  : 0/0
 17287 ;;		Unchanged: 0/0
 17288 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 17289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 17290 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 17291 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 17292 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
       0       0
 17293 ;;Total ram usage:        5 bytes
 17294 ;; Hardware stack levels used:    1
 17295 ;; Hardware stack levels required when called:    5
 17296 ;; This function calls:
 17297 ;;		_getAD
 17298 ;; This function is called by:
 17299 ;;		_main
 17300 ;; This function uses a non-reentrant model
 17301 ;;
 17302                           psect	text4148
 17303                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\OverTemperature_B1.c"
 17304                           	line	36
 17305                           	global	__size_of_getTemp_AD
 17306  007D                     	__size_of_getTemp_AD	equ	__end_of_getTemp_AD-_getTemp_AD
 17307                           	
 17308  114A                     _getTemp_AD:	
 17309                           	opt	stack 10
 17310                           ; Regs used in _getTemp_AD: [wreg+fsr1l-status,0+btemp+1+pclath+cstack]
 17311                           ;getTemp_AD@channel stored from wreg
 17312  114A  0020               	movlb 0	; select bank0
 17313  114B  00AB               	movwf	(getTemp_AD@channel)
 17314                           	line	37
 17315                           	
 17316  114C                     l23118:	
 17317                           ;OverTemperature_B1.c: 37: if(Temp->ADtoGO)
 17318  114C  087C               	movf	(_Temp),w
 17319  114D  0086               	movwf	fsr1l
 17320  114E  3001               	movlw 1	; select bank2/3
 17321  114F  0087               	movwf fsr1h	
 17322                           	
 17323  1150  1D01               	btfss	indf1,2
 17324  1151  2953               	goto	u6721
 17325  1152  2954               	goto	u6720
 17326  1153                     u6721:
 17327  1153  29C6               	goto	l11753
 17328  1154                     u6720:
 17329                           	line	39
 17330                           	
 17331  1154                     l23120:	
 17332                           ;OverTemperature_B1.c: 38: {
 17333                           ;OverTemperature_B1.c: 39: Temp->ADRES=getAD(channel,0xf0);
 17334  1154  30F0               	movlw	(0F0h)
 17335  1155  00A7               	movwf	(??_getTemp_AD+0)+0
 17336  1156  0827               	movf	(??_getTemp_AD+0)+0,w
 17337  1157  00A0               	movwf	(?_getAD)
 17338  1158  082B               	movf	(getTemp_AD@channel),w
 17339  1159  31A4  2440  3191   	fcall	_getAD
 17340  115C  087C               	movf	(_Temp),w
 17341  115D  3E0A               	addlw	0Ah
 17342  115E  0086               	movwf	fsr1l
 17343  115F  3001               	movlw 1	; select bank2/3
 17344  1160  0087               	movwf fsr1h	
 17345                           	
 17346  1161  0020               	movlb 0	; select bank0
 17347  1162  0820               	movf	(0+(?_getAD)),w
 17348  1163  3FC0               	movwi	[0]fsr1
 17349  1164  0821               	movf	(1+(?_getAD)),w
 17350  1165  3FC1               	movwi	[1]fsr1
 17351                           	line	40
 17352                           	
 17353  1166                     l23122:	
 17354                           ;OverTemperature_B1.c: 40: if(Temp->ADH[0] < Temp->ADRES)
 17355  1166  087C               	movf	(_Temp),w
 17356  1167  3E0A               	addlw	0Ah
 17357  1168  0086               	movwf	fsr1l
 17358  1169  3001               	movlw 1	; select bank2/3
 17359  116A  0087               	movwf fsr1h	
 17360                           	
 17361  116B  3F40               	moviw	[0]fsr1
 17362  116C  00A7               	movwf	(??_getTemp_AD+0)+0
 17363  116D  3F41               	moviw	[1]fsr1
 17364  116E  00A8               	movwf	(??_getTemp_AD+0)+0+1
 17365  116F  087C               	movf	(_Temp),w
 17366  1170  3E06               	addlw	06h
 17367  1171  0086               	movwf	fsr1l
 17368  1172  3001               	movlw 1	; select bank2/3
 17369  1173  0087               	movwf fsr1h	
 17370                           	
 17371  1174  3F40               	moviw	[0]fsr1
 17372  1175  00A9               	movwf	(??_getTemp_AD+2)+0
 17373  1176  3F41               	moviw	[1]fsr1
 17374  1177  00AA               	movwf	(??_getTemp_AD+2)+0+1
 17375  1178  0828               	movf	1+(??_getTemp_AD+0)+0,w
 17376  1179  022A               	subwf	1+(??_getTemp_AD+2)+0,w
 17377  117A  1D03               	skipz
 17378  117B  297E               	goto	u6735
 17379  117C  0827               	movf	0+(??_getTemp_AD+0)+0,w
 17380  117D  0229               	subwf	0+(??_getTemp_AD+2)+0,w
 17381  117E                     u6735:
 17382  117E  1803               	skipnc
 17383  117F  2981               	goto	u6731
 17384  1180  2982               	goto	u6730
 17385  1181                     u6731:
 17386  1181  2995               	goto	l23126
 17387  1182                     u6730:
 17388                           	line	42
 17389                           	
 17390  1182                     l23124:	
 17391                           ;OverTemperature_B1.c: 41: {
 17392                           ;OverTemperature_B1.c: 42: Temp->ADH[0]=Temp->ADRES;
 17393  1182  087C               	movf	(_Temp),w
 17394  1183  3E0A               	addlw	0Ah
 17395  1184  0086               	movwf	fsr1l
 17396  1185  3001               	movlw 1	; select bank2/3
 17397  1186  0087               	movwf fsr1h	
 17398                           	
 17399  1187  3F40               	moviw	[0]fsr1
 17400  1188  00A7               	movwf	(??_getTemp_AD+0)+0
 17401  1189  3F41               	moviw	[1]fsr1
 17402  118A  00A8               	movwf	(??_getTemp_AD+0)+0+1
 17403  118B  087C               	movf	(_Temp),w
 17404  118C  3E06               	addlw	06h
 17405  118D  0086               	movwf	fsr1l
 17406  118E  3001               	movlw 1	; select bank2/3
 17407  118F  0087               	movwf fsr1h	
 17408                           	
 17409  1190  0827               	movf	0+(??_getTemp_AD+0)+0,w
 17410  1191  3FC0               	movwi	[0]fsr1
 17411  1192  0828               	movf	1+(??_getTemp_AD+0)+0,w
 17412  1193  3FC1               	movwi	[1]fsr1
 17413                           	line	43
 17414                           ;OverTemperature_B1.c: 43: }
 17415  1194  29C6               	goto	l11753
 17416                           	line	44
 17417                           	
 17418  1195                     l11750:	
 17419                           	
 17420  1195                     l23126:	
 17421                           ;OverTemperature_B1.c: 44: else if(Temp->ADH[1] < Temp->ADRES)
 17422  1195  087C               	movf	(_Temp),w
 17423  1196  3E0A               	addlw	0Ah
 17424  1197  0086               	movwf	fsr1l
 17425  1198  3001               	movlw 1	; select bank2/3
 17426  1199  0087               	movwf fsr1h	
 17427                           	
 17428  119A  3F40               	moviw	[0]fsr1
 17429  119B  00A7               	movwf	(??_getTemp_AD+0)+0
 17430  119C  3F41               	moviw	[1]fsr1
 17431  119D  00A8               	movwf	(??_getTemp_AD+0)+0+1
 17432  119E  087C               	movf	(_Temp),w
 17433  119F  3E08               	addlw	08h
 17434  11A0  0086               	movwf	fsr1l
 17435  11A1  3001               	movlw 1	; select bank2/3
 17436  11A2  0087               	movwf fsr1h	
 17437                           	
 17438  11A3  3F40               	moviw	[0]fsr1
 17439  11A4  00A9               	movwf	(??_getTemp_AD+2)+0
 17440  11A5  3F41               	moviw	[1]fsr1
 17441  11A6  00AA               	movwf	(??_getTemp_AD+2)+0+1
 17442  11A7  0828               	movf	1+(??_getTemp_AD+0)+0,w
 17443  11A8  022A               	subwf	1+(??_getTemp_AD+2)+0,w
 17444  11A9  1D03               	skipz
 17445  11AA  29AD               	goto	u6745
 17446  11AB  0827               	movf	0+(??_getTemp_AD+0)+0,w
 17447  11AC  0229               	subwf	0+(??_getTemp_AD+2)+0,w
 17448  11AD                     u6745:
 17449  11AD  1803               	skipnc
 17450  11AE  29B0               	goto	u6741
 17451  11AF  29B1               	goto	u6740
 17452  11B0                     u6741:
 17453  11B0  29C6               	goto	l11753
 17454  11B1                     u6740:
 17455                           	line	46
 17456                           	
 17457  11B1                     l23128:	
 17458                           ;OverTemperature_B1.c: 45: {
 17459                           ;OverTemperature_B1.c: 46: Temp->ADH[1]=Temp->ADRES;
 17460  11B1  087C               	movf	(_Temp),w
 17461  11B2  3E0A               	addlw	0Ah
 17462  11B3  0086               	movwf	fsr1l
 17463  11B4  3001               	movlw 1	; select bank2/3
 17464  11B5  0087               	movwf fsr1h	
 17465                           	
 17466  11B6  3F40               	moviw	[0]fsr1
 17467  11B7  00A7               	movwf	(??_getTemp_AD+0)+0
 17468  11B8  3F41               	moviw	[1]fsr1
 17469  11B9  00A8               	movwf	(??_getTemp_AD+0)+0+1
 17470  11BA  087C               	movf	(_Temp),w
 17471  11BB  3E08               	addlw	08h
 17472  11BC  0086               	movwf	fsr1l
 17473  11BD  3001               	movlw 1	; select bank2/3
 17474  11BE  0087               	movwf fsr1h	
 17475                           	
 17476  11BF  0827               	movf	0+(??_getTemp_AD+0)+0,w
 17477  11C0  3FC0               	movwi	[0]fsr1
 17478  11C1  0828               	movf	1+(??_getTemp_AD+0)+0,w
 17479  11C2  3FC1               	movwi	[1]fsr1
 17480  11C3  29C6               	goto	l11753
 17481                           	line	47
 17482                           	
 17483  11C4                     l11752:	
 17484  11C4  29C6               	goto	l11753
 17485                           	line	48
 17486                           	
 17487  11C5                     l11751:	
 17488  11C5  29C6               	goto	l11753
 17489                           	
 17490  11C6                     l11749:	
 17491                           	line	49
 17492                           	
 17493  11C6                     l11753:	
 17494  11C6  0008               	return
 17495                           	opt stack 0
 17496                           GLOBAL	__end_of_getTemp_AD
 17497  11C7                     	__end_of_getTemp_AD:
 17498 ;; =============== function _getTemp_AD ends ============
 17499                           
 17500                           	signat	_getTemp_AD,4216
 17501                           	global	_getLoad_AD
 17502                           psect	text4149,local,class=CODE,delta=2
 17503                           global __ptext4149
 17504  0917                     __ptext4149:
 17505                           
 17506 ;; *************** function _getLoad_AD *****************
 17507 ;; Defined at:
 17508 ;;		line 16 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\OverLoad_B1.c"
 17509 ;; Parameters:    Size  Location     Type
 17510 ;;  channel         1    wreg     unsigned char 
 17511 ;; Auto vars:     Size  Location     Type
 17512 ;;  channel         1   12[BANK0 ] unsigned char 
 17513 ;;  i               1   14[BANK0 ] unsigned char 
 17514 ;;  j               1   13[BANK0 ] unsigned char 
 17515 ;; Return value:  Size  Location     Type
 17516 ;;		None               void
 17517 ;; Registers used:
 17518 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
 17519 ;; Tracked objects:
 17520 ;;		On entry : 0/0
 17521 ;;		On exit  : 0/0
 17522 ;;		Unchanged: 0/0
 17523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 17524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 17525 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 17526 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
       0       0
 17527 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
       0       0
 17528 ;;Total ram usage:        8 bytes
 17529 ;; Hardware stack levels used:    1
 17530 ;; Hardware stack levels required when called:    5
 17531 ;; This function calls:
 17532 ;;		_getAD
 17533 ;; This function is called by:
 17534 ;;		_main
 17535 ;; This function uses a non-reentrant model
 17536 ;;
 17537                           psect	text4149
 17538                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\OverLoad_B1.c"
 17539                           	line	16
 17540                           	global	__size_of_getLoad_AD
 17541  00BF                     	__size_of_getLoad_AD	equ	__end_of_getLoad_AD-_getLoad_AD
 17542                           	
 17543  0917                     _getLoad_AD:	
 17544                           	opt	stack 10
 17545                           ; Regs used in _getLoad_AD: [wreg+fsr1l-status,0+btemp+1+pclath+cstack]
 17546                           ;getLoad_AD@channel stored from wreg
 17547  0917  0020               	movlb 0	; select bank0
 17548  0918  00AC               	movwf	(getLoad_AD@channel)
 17549                           	line	17
 17550                           	
 17551  0919                     l23080:	
 17552                           ;OverLoad_B1.c: 17: char i=0,j=0;
 17553  0919  01AE               	clrf	(getLoad_AD@i)
 17554  091A  01AD               	clrf	(getLoad_AD@j)
 17555                           	line	19
 17556                           	
 17557  091B                     l23082:	
 17558                           ;OverLoad_B1.c: 19: if(Load->ADtoGO)
 17559  091B  086D               	movf	(_Load),w
 17560  091C  0086               	movwf	fsr1l
 17561  091D  3002               	movlw 2	; select bank4/5
 17562  091E  0087               	movwf fsr1h	
 17563                           	
 17564  091F  1E01               	btfss	indf1,4
 17565  0920  2922               	goto	u6641
 17566  0921  2923               	goto	u6640
 17567  0922                     u6641:
 17568  0922  29D5               	goto	l10550
 17569  0923                     u6640:
 17570                           	line	21
 17571                           	
 17572  0923                     l23084:	
 17573                           ;OverLoad_B1.c: 20: {
 17574                           ;OverLoad_B1.c: 21: Load->ADRES=getAD(channel,0xc0);
 17575  0923  30C0               	movlw	(0C0h)
 17576  0924  00A7               	movwf	(??_getLoad_AD+0)+0
 17577  0925  0827               	movf	(??_getLoad_AD+0)+0,w
 17578  0926  00A0               	movwf	(?_getAD)
 17579  0927  082C               	movf	(getLoad_AD@channel),w
 17580  0928  31A4  2440  3189   	fcall	_getAD
 17581  092B  0020               	movlb 0	; select bank0
 17582  092C  086D               	movf	(_Load),w
 17583  092D  3E32               	addlw	032h
 17584  092E  0086               	movwf	fsr1l
 17585  092F  3002               	movlw 2	; select bank4/5
 17586  0930  0087               	movwf fsr1h	
 17587                           	
 17588  0931  0820               	movf	(0+(?_getAD)),w
 17589  0932  3FC0               	movwi	[0]fsr1
 17590  0933  0821               	movf	(1+(?_getAD)),w
 17591  0934  3FC1               	movwi	[1]fsr1
 17592                           	line	22
 17593                           	
 17594  0935                     l23086:	
 17595                           ;OverLoad_B1.c: 22: for(i=0 ; i<5 ;i++)
 17596  0935  01AE               	clrf	(getLoad_AD@i)
 17597                           	
 17598  0936                     l23088:	
 17599  0936  3005               	movlw	(05h)
 17600  0937  022E               	subwf	(getLoad_AD@i),w
 17601  0938  1C03               	skipc
 17602  0939  293B               	goto	u6651
 17603  093A  293C               	goto	u6650
 17604  093B                     u6651:
 17605  093B  293E               	goto	l23092
 17606  093C                     u6650:
 17607  093C  2983               	goto	l23102
 17608                           	
 17609  093D                     l23090:	
 17610  093D  2983               	goto	l23102
 17611                           	line	23
 17612                           	
 17613  093E                     l10543:	
 17614                           	line	24
 17615                           	
 17616  093E                     l23092:	
 17617                           ;OverLoad_B1.c: 23: {
 17618                           ;OverLoad_B1.c: 24: if(Load->AH[i] < Load->ADRES)
 17619  093E  086D               	movf	(_Load),w
 17620  093F  3E32               	addlw	032h
 17621  0940  0086               	movwf	fsr1l
 17622  0941  3002               	movlw 2	; select bank4/5
 17623  0942  0087               	movwf fsr1h	
 17624                           	
 17625  0943  3F40               	moviw	[0]fsr1
 17626  0944  00A7               	movwf	(??_getLoad_AD+0)+0
 17627  0945  3F41               	moviw	[1]fsr1
 17628  0946  00A8               	movwf	(??_getLoad_AD+0)+0+1
 17629  0947  082E               	movf	(getLoad_AD@i),w
 17630  0948  0709               	addwf	wreg,w
 17631  0949  3E08               	addlw	08h
 17632  094A  076D               	addwf	(_Load),w
 17633  094B  00A9               	movwf	(??_getLoad_AD+2)+0
 17634  094C  0829               	movf	0+(??_getLoad_AD+2)+0,w
 17635  094D  0086               	movwf	fsr1l
 17636  094E  3002               	movlw 2	; select bank4/5
 17637  094F  0087               	movwf fsr1h	
 17638                           	
 17639  0950  3F40               	moviw	[0]fsr1
 17640  0951  00AA               	movwf	(??_getLoad_AD+3)+0
 17641  0952  3F41               	moviw	[1]fsr1
 17642  0953  00AB               	movwf	(??_getLoad_AD+3)+0+1
 17643  0954  0828               	movf	1+(??_getLoad_AD+0)+0,w
 17644  0955  022B               	subwf	1+(??_getLoad_AD+3)+0,w
 17645  0956  1D03               	skipz
 17646  0957  295A               	goto	u6665
 17647  0958  0827               	movf	0+(??_getLoad_AD+0)+0,w
 17648  0959  022A               	subwf	0+(??_getLoad_AD+3)+0,w
 17649  095A                     u6665:
 17650  095A  1803               	skipnc
 17651  095B  295D               	goto	u6661
 17652  095C  295E               	goto	u6660
 17653  095D                     u6661:
 17654  095D  2978               	goto	l23098
 17655  095E                     u6660:
 17656                           	line	26
 17657                           	
 17658  095E                     l23094:	
 17659                           ;OverLoad_B1.c: 25: {
 17660                           ;OverLoad_B1.c: 26: Load->AH[i]=Load->ADRES;
 17661  095E  086D               	movf	(_Load),w
 17662  095F  3E32               	addlw	032h
 17663  0960  0086               	movwf	fsr1l
 17664  0961  3002               	movlw 2	; select bank4/5
 17665  0962  0087               	movwf fsr1h	
 17666                           	
 17667  0963  3F40               	moviw	[0]fsr1
 17668  0964  00A7               	movwf	(??_getLoad_AD+0)+0
 17669  0965  3F41               	moviw	[1]fsr1
 17670  0966  00A8               	movwf	(??_getLoad_AD+0)+0+1
 17671  0967  082E               	movf	(getLoad_AD@i),w
 17672  0968  0709               	addwf	wreg,w
 17673  0969  3E08               	addlw	08h
 17674  096A  076D               	addwf	(_Load),w
 17675  096B  00A9               	movwf	(??_getLoad_AD+2)+0
 17676  096C  0829               	movf	0+(??_getLoad_AD+2)+0,w
 17677  096D  0086               	movwf	fsr1l
 17678  096E  3002               	movlw 2	; select bank4/5
 17679  096F  0087               	movwf fsr1h	
 17680                           	
 17681  0970  0827               	movf	0+(??_getLoad_AD+0)+0,w
 17682  0971  3FC0               	movwi	[0]fsr1
 17683  0972  0828               	movf	1+(??_getLoad_AD+0)+0,w
 17684  0973  3FC1               	movwi	[1]fsr1
 17685                           	line	27
 17686                           	
 17687  0974                     l23096:	
 17688                           ;OverLoad_B1.c: 27: j=1;
 17689  0974  01AD               	clrf	(getLoad_AD@j)
 17690  0975  1403               	bsf	status,0
 17691  0976  0DAD               	rlf	(getLoad_AD@j),f
 17692                           	line	28
 17693                           ;OverLoad_B1.c: 28: break;
 17694  0977  2983               	goto	l23102
 17695                           	line	29
 17696                           	
 17697  0978                     l10545:	
 17698                           	line	22
 17699                           	
 17700  0978                     l23098:	
 17701  0978  3001               	movlw	(01h)
 17702  0979  00A7               	movwf	(??_getLoad_AD+0)+0
 17703  097A  0827               	movf	(??_getLoad_AD+0)+0,w
 17704  097B  07AE               	addwf	(getLoad_AD@i),f
 17705                           	
 17706  097C                     l23100:	
 17707  097C  3005               	movlw	(05h)
 17708  097D  022E               	subwf	(getLoad_AD@i),w
 17709  097E  1C03               	skipc
 17710  097F  2981               	goto	u6671
 17711  0980  2982               	goto	u6670
 17712  0981                     u6671:
 17713  0981  293E               	goto	l23092
 17714  0982                     u6670:
 17715  0982  2983               	goto	l23102
 17716                           	
 17717  0983                     l10544:	
 17718                           	line	31
 17719                           	
 17720  0983                     l23102:	
 17721                           ;OverLoad_B1.c: 29: }
 17722                           ;OverLoad_B1.c: 30: }
 17723                           ;OverLoad_B1.c: 31: if(!j)
 17724  0983  08AD               	movf	(getLoad_AD@j),f
 17725  0984  1D03               	skipz
 17726  0985  2987               	goto	u6681
 17727  0986  2988               	goto	u6680
 17728  0987                     u6681:
 17729  0987  29D5               	goto	l10550
 17730  0988                     u6680:
 17731                           	line	33
 17732                           	
 17733  0988                     l23104:	
 17734                           ;OverLoad_B1.c: 32: {
 17735                           ;OverLoad_B1.c: 33: for(i=0 ; i<5 ;i++)
 17736  0988  01AE               	clrf	(getLoad_AD@i)
 17737                           	
 17738  0989                     l23106:	
 17739  0989  3005               	movlw	(05h)
 17740  098A  022E               	subwf	(getLoad_AD@i),w
 17741  098B  1C03               	skipc
 17742  098C  298E               	goto	u6691
 17743  098D  298F               	goto	u6690
 17744  098E                     u6691:
 17745  098E  2991               	goto	l23110
 17746  098F                     u6690:
 17747  098F  29D5               	goto	l10550
 17748                           	
 17749  0990                     l23108:	
 17750  0990  29D5               	goto	l10550
 17751                           	line	34
 17752                           	
 17753  0991                     l10547:	
 17754                           	line	35
 17755                           	
 17756  0991                     l23110:	
 17757                           ;OverLoad_B1.c: 34: {
 17758                           ;OverLoad_B1.c: 35: if(Load->AL[i] > Load->ADRES)
 17759  0991  082E               	movf	(getLoad_AD@i),w
 17760  0992  0709               	addwf	wreg,w
 17761  0993  3E1A               	addlw	01Ah
 17762  0994  076D               	addwf	(_Load),w
 17763  0995  00A7               	movwf	(??_getLoad_AD+0)+0
 17764  0996  0827               	movf	0+(??_getLoad_AD+0)+0,w
 17765  0997  0086               	movwf	fsr1l
 17766  0998  3002               	movlw 2	; select bank4/5
 17767  0999  0087               	movwf fsr1h	
 17768                           	
 17769  099A  3F40               	moviw	[0]fsr1
 17770  099B  00A8               	movwf	(??_getLoad_AD+1)+0
 17771  099C  3F41               	moviw	[1]fsr1
 17772  099D  00A9               	movwf	(??_getLoad_AD+1)+0+1
 17773  099E  086D               	movf	(_Load),w
 17774  099F  3E32               	addlw	032h
 17775  09A0  0086               	movwf	fsr1l
 17776  09A1  3002               	movlw 2	; select bank4/5
 17777  09A2  0087               	movwf fsr1h	
 17778                           	
 17779  09A3  3F40               	moviw	[0]fsr1
 17780  09A4  00AA               	movwf	(??_getLoad_AD+3)+0
 17781  09A5  3F41               	moviw	[1]fsr1
 17782  09A6  00AB               	movwf	(??_getLoad_AD+3)+0+1
 17783  09A7  0829               	movf	1+(??_getLoad_AD+1)+0,w
 17784  09A8  022B               	subwf	1+(??_getLoad_AD+3)+0,w
 17785  09A9  1D03               	skipz
 17786  09AA  29AD               	goto	u6705
 17787  09AB  0828               	movf	0+(??_getLoad_AD+1)+0,w
 17788  09AC  022A               	subwf	0+(??_getLoad_AD+3)+0,w
 17789  09AD                     u6705:
 17790  09AD  1803               	skipnc
 17791  09AE  29B0               	goto	u6701
 17792  09AF  29B1               	goto	u6700
 17793  09B0                     u6701:
 17794  09B0  29C8               	goto	l23114
 17795  09B1                     u6700:
 17796                           	line	37
 17797                           	
 17798  09B1                     l23112:	
 17799                           ;OverLoad_B1.c: 36: {
 17800                           ;OverLoad_B1.c: 37: Load->AL[i]=Load->ADRES;
 17801  09B1  086D               	movf	(_Load),w
 17802  09B2  3E32               	addlw	032h
 17803  09B3  0086               	movwf	fsr1l
 17804  09B4  3002               	movlw 2	; select bank4/5
 17805  09B5  0087               	movwf fsr1h	
 17806                           	
 17807  09B6  3F40               	moviw	[0]fsr1
 17808  09B7  00A7               	movwf	(??_getLoad_AD+0)+0
 17809  09B8  3F41               	moviw	[1]fsr1
 17810  09B9  00A8               	movwf	(??_getLoad_AD+0)+0+1
 17811  09BA  082E               	movf	(getLoad_AD@i),w
 17812  09BB  0709               	addwf	wreg,w
 17813  09BC  3E1A               	addlw	01Ah
 17814  09BD  076D               	addwf	(_Load),w
 17815  09BE  00A9               	movwf	(??_getLoad_AD+2)+0
 17816  09BF  0829               	movf	0+(??_getLoad_AD+2)+0,w
 17817  09C0  0086               	movwf	fsr1l
 17818  09C1  3002               	movlw 2	; select bank4/5
 17819  09C2  0087               	movwf fsr1h	
 17820                           	
 17821  09C3  0827               	movf	0+(??_getLoad_AD+0)+0,w
 17822  09C4  3FC0               	movwi	[0]fsr1
 17823  09C5  0828               	movf	1+(??_getLoad_AD+0)+0,w
 17824  09C6  3FC1               	movwi	[1]fsr1
 17825                           	line	38
 17826                           ;OverLoad_B1.c: 38: break;
 17827  09C7  29D5               	goto	l10550
 17828                           	line	39
 17829                           	
 17830  09C8                     l10549:	
 17831                           	line	33
 17832                           	
 17833  09C8                     l23114:	
 17834  09C8  3001               	movlw	(01h)
 17835  09C9  00A7               	movwf	(??_getLoad_AD+0)+0
 17836  09CA  0827               	movf	(??_getLoad_AD+0)+0,w
 17837  09CB  07AE               	addwf	(getLoad_AD@i),f
 17838                           	
 17839  09CC                     l23116:	
 17840  09CC  3005               	movlw	(05h)
 17841  09CD  022E               	subwf	(getLoad_AD@i),w
 17842  09CE  1C03               	skipc
 17843  09CF  29D1               	goto	u6711
 17844  09D0  29D2               	goto	u6710
 17845  09D1                     u6711:
 17846  09D1  2991               	goto	l23110
 17847  09D2                     u6710:
 17848  09D2  29D5               	goto	l10550
 17849                           	
 17850  09D3                     l10548:	
 17851  09D3  29D5               	goto	l10550
 17852                           	line	41
 17853                           	
 17854  09D4                     l10546:	
 17855  09D4  29D5               	goto	l10550
 17856                           	line	42
 17857                           	
 17858  09D5                     l10542:	
 17859                           	line	43
 17860                           	
 17861  09D5                     l10550:	
 17862  09D5  0008               	return
 17863                           	opt stack 0
 17864                           GLOBAL	__end_of_getLoad_AD
 17865  09D6                     	__end_of_getLoad_AD:
 17866 ;; =============== function _getLoad_AD ends ============
 17867                           
 17868                           	signat	_getLoad_AD,4216
 17869                           	global	_RF_Initialization
 17870                           psect	text4150,local,class=CODE,delta=2
 17871                           global __ptext4150
 17872  2096                     __ptext4150:
 17873                           
 17874 ;; *************** function _RF_Initialization *****************
 17875 ;; Defined at:
 17876 ;;		line 18 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
 17877 ;; Parameters:    Size  Location     Type
 17878 ;;		None
 17879 ;; Auto vars:     Size  Location     Type
 17880 ;;		None
 17881 ;; Return value:  Size  Location     Type
 17882 ;;		None               void
 17883 ;; Registers used:
 17884 ;;		wreg, status,2, status,0, pclath, cstack
 17885 ;; Tracked objects:
 17886 ;;		On entry : 0/0
 17887 ;;		On exit  : 0/0
 17888 ;;		Unchanged: 0/0
 17889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 17890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 17891 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 17892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 17893 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 17894 ;;Total ram usage:        0 bytes
 17895 ;; Hardware stack levels used:    1
 17896 ;; Hardware stack levels required when called:    5
 17897 ;; This function calls:
 17898 ;;		_setRF_Initialization
 17899 ;; This function is called by:
 17900 ;;		_main
 17901 ;; This function uses a non-reentrant model
 17902 ;;
 17903                           psect	text4150
 17904                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
 17905                           	line	18
 17906                           	global	__size_of_RF_Initialization
 17907  0005                     	__size_of_RF_Initialization	equ	__end_of_RF_Initialization-_RF_Initialization
 17908                           	
 17909  2096                     _RF_Initialization:	
 17910                           	opt	stack 10
 17911                           ; Regs used in _RF_Initialization: [wreg+status,2+status,0+pclath+cstack]
 17912                           	line	20
 17913                           	
 17914  2096                     l24734:	
 17915                           ;RF_Control_B1.c: 20: setRF_Initialization(1);
 17916  2096  3001               	movlw	(01h)
 17917  2097  31A0  20DE  31A0   	fcall	_setRF_Initialization
 17918                           	line	22
 17919                           	
 17920  209A                     l15192:	
 17921  209A  0008               	return
 17922                           	opt stack 0
 17923                           GLOBAL	__end_of_RF_Initialization
 17924  209B                     	__end_of_RF_Initialization:
 17925 ;; =============== function _RF_Initialization ends ============
 17926                           
 17927                           	signat	_RF_Initialization,88
 17928                           	global	_PowerFault_Initialization
 17929                           psect	text4151,local,class=CODE,delta=2
 17930                           global __ptext4151
 17931  208A                     __ptext4151:
 17932                           
 17933 ;; *************** function _PowerFault_Initialization *****************
 17934 ;; Defined at:
 17935 ;;		line 16 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\PowerFault_B1.c"
 17936 ;; Parameters:    Size  Location     Type
 17937 ;;		None
 17938 ;; Auto vars:     Size  Location     Type
 17939 ;;		None
 17940 ;; Return value:  Size  Location     Type
 17941 ;;		None               void
 17942 ;; Registers used:
 17943 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17944 ;; Tracked objects:
 17945 ;;		On entry : 0/0
 17946 ;;		On exit  : 0/0
 17947 ;;		Unchanged: 0/0
 17948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 17949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 17950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 17951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 17952 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 17953 ;;Total ram usage:        0 bytes
 17954 ;; Hardware stack levels used:    1
 17955 ;; Hardware stack levels required when called:    5
 17956 ;; This function calls:
 17957 ;;		_setPowerFault_Initialization
 17958 ;; This function is called by:
 17959 ;;		_main
 17960 ;; This function uses a non-reentrant model
 17961 ;;
 17962                           psect	text4151
 17963                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\PowerFault_B1.c"
 17964                           	line	16
 17965                           	global	__size_of_PowerFault_Initialization
 17966  0004                     	__size_of_PowerFault_Initialization	equ	__end_of_PowerFault_Initialization-_PowerFault_
                                 Initialization
 17967                           	
 17968  208A                     _PowerFault_Initialization:	
 17969                           	opt	stack 10
 17970                           ; Regs used in _PowerFault_Initialization: [wreg+fsr1l-status,0+pclath+cstack]
 17971                           	line	18
 17972                           	
 17973  208A                     l24732:	
 17974                           ;PowerFault_B1.c: 18: setPowerFault_Initialization();
 17975  208A  31A1  21F4  31A0   	fcall	_setPowerFault_Initialization
 17976                           	line	20
 17977                           	
 17978  208D                     l13998:	
 17979  208D  0008               	return
 17980                           	opt stack 0
 17981                           GLOBAL	__end_of_PowerFault_Initialization
 17982  208E                     	__end_of_PowerFault_Initialization:
 17983 ;; =============== function _PowerFault_Initialization ends ============
 17984                           
 17985                           	signat	_PowerFault_Initialization,88
 17986                           	global	_Load_Initialization
 17987                           psect	text4152,local,class=CODE,delta=2
 17988                           global __ptext4152
 17989  221E                     __ptext4152:
 17990                           
 17991 ;; *************** function _Load_Initialization *****************
 17992 ;; Defined at:
 17993 ;;		line 9 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\OverLoad_B1.c"
 17994 ;; Parameters:    Size  Location     Type
 17995 ;;		None
 17996 ;; Auto vars:     Size  Location     Type
 17997 ;;		None
 17998 ;; Return value:  Size  Location     Type
 17999 ;;		None               void
 18000 ;; Registers used:
 18001 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18002 ;; Tracked objects:
 18003 ;;		On entry : 0/0
 18004 ;;		On exit  : 0/0
 18005 ;;		Unchanged: 0/0
 18006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 18007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 18008 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 18009 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 18010 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 18011 ;;Total ram usage:        1 bytes
 18012 ;; Hardware stack levels used:    1
 18013 ;; Hardware stack levels required when called:    5
 18014 ;; This function calls:
 18015 ;;		_setLoad_AH_AL_Restore
 18016 ;; This function is called by:
 18017 ;;		_main
 18018 ;; This function uses a non-reentrant model
 18019 ;;
 18020                           psect	text4152
 18021                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\OverLoad_B1.c"
 18022                           	line	9
 18023                           	global	__size_of_Load_Initialization
 18024  000E                     	__size_of_Load_Initialization	equ	__end_of_Load_Initialization-_Load_Initialization
 18025                           	
 18026  221E                     _Load_Initialization:	
 18027                           	opt	stack 10
 18028                           ; Regs used in _Load_Initialization: [wreg+fsr1l-status,0+pclath+cstack]
 18029                           	line	10
 18030                           	
 18031  221E                     l23070:	
 18032                           ;OverLoad_B1.c: 10: Load=&Load1;
 18033  221E  3020               	movlw	(_Load1)&0ffh
 18034  221F  0020               	movlb 0	; select bank0
 18035  2220  00A2               	movwf	(??_Load_Initialization+0)+0
 18036  2221  0822               	movf	(??_Load_Initialization+0)+0,w
 18037  2222  00ED               	movwf	(_Load)
 18038                           	line	11
 18039                           	
 18040  2223                     l23072:	
 18041                           ;OverLoad_B1.c: 11: Load->Safe=1;
 18042  2223  086D               	movf	(_Load),w
 18043  2224  0086               	movwf	fsr1l
 18044  2225  3002               	movlw 2	; select bank4/5
 18045  2226  0087               	movwf fsr1h	
 18046                           	
 18047  2227  1581               	bsf	indf1,3
 18048                           	line	12
 18049                           	
 18050  2228                     l23074:	
 18051                           ;OverLoad_B1.c: 12: setLoad_AH_AL_Restore();
 18052  2228  31A6  26BE  31A2   	fcall	_setLoad_AH_AL_Restore
 18053                           	line	13
 18054                           	
 18055  222B                     l10539:	
 18056  222B  0008               	return
 18057                           	opt stack 0
 18058                           GLOBAL	__end_of_Load_Initialization
 18059  222C                     	__end_of_Load_Initialization:
 18060 ;; =============== function _Load_Initialization ends ============
 18061                           
 18062                           	signat	_Load_Initialization,88
 18063                           	global	_Temp_Initialization
 18064                           psect	text4153,local,class=CODE,delta=2
 18065                           global __ptext4153
 18066  2086                     __ptext4153:
 18067                           
 18068 ;; *************** function _Temp_Initialization *****************
 18069 ;; Defined at:
 18070 ;;		line 16 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\OverTemperature_B1.c"
 18071 ;; Parameters:    Size  Location     Type
 18072 ;;		None
 18073 ;; Auto vars:     Size  Location     Type
 18074 ;;		None
 18075 ;; Return value:  Size  Location     Type
 18076 ;;		None               void
 18077 ;; Registers used:
 18078 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18079 ;; Tracked objects:
 18080 ;;		On entry : 0/0
 18081 ;;		On exit  : 0/0
 18082 ;;		Unchanged: 0/0
 18083 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 18084 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 18085 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 18086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 18087 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 18088 ;;Total ram usage:        0 bytes
 18089 ;; Hardware stack levels used:    1
 18090 ;; Hardware stack levels required when called:    5
 18091 ;; This function calls:
 18092 ;;		_setTemp_Initialization
 18093 ;; This function is called by:
 18094 ;;		_main
 18095 ;; This function uses a non-reentrant model
 18096 ;;
 18097                           psect	text4153
 18098                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\OverTemperature_B1.c"
 18099                           	line	16
 18100                           	global	__size_of_Temp_Initialization
 18101  0004                     	__size_of_Temp_Initialization	equ	__end_of_Temp_Initialization-_Temp_Initialization
 18102                           	
 18103  2086                     _Temp_Initialization:	
 18104                           	opt	stack 10
 18105                           ; Regs used in _Temp_Initialization: [wreg+fsr1l-status,0+pclath+cstack]
 18106                           	line	18
 18107                           	
 18108  2086                     l24730:	
 18109                           ;OverTemperature_B1.c: 18: setTemp_Initialization();
 18110  2086  31A1  214E  31A0   	fcall	_setTemp_Initialization
 18111                           	line	20
 18112                           	
 18113  2089                     l11737:	
 18114  2089  0008               	return
 18115                           	opt stack 0
 18116                           GLOBAL	__end_of_Temp_Initialization
 18117  208A                     	__end_of_Temp_Initialization:
 18118 ;; =============== function _Temp_Initialization ends ============
 18119                           
 18120                           	signat	_Temp_Initialization,88
 18121                           	global	_Mcu_Initialization
 18122                           psect	text4154,local,class=CODE,delta=2
 18123                           global __ptext4154
 18124  23AF                     __ptext4154:
 18125                           
 18126 ;; *************** function _Mcu_Initialization *****************
 18127 ;; Defined at:
 18128 ;;		line 12 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_16f1518_B1.c"
 18129 ;; Parameters:    Size  Location     Type
 18130 ;;		None
 18131 ;; Auto vars:     Size  Location     Type
 18132 ;;		None
 18133 ;; Return value:  Size  Location     Type
 18134 ;;		None               void
 18135 ;; Registers used:
 18136 ;;		wreg, status,2, status,0, pclath, cstack
 18137 ;; Tracked objects:
 18138 ;;		On entry : 0/0
 18139 ;;		On exit  : 0/0
 18140 ;;		Unchanged: 0/0
 18141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 18142 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 18143 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 18144 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 18145 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 18146 ;;Total ram usage:        1 bytes
 18147 ;; Hardware stack levels used:    1
 18148 ;; Hardware stack levels required when called:    5
 18149 ;; This function calls:
 18150 ;;		_IO_Set
 18151 ;;		_TMR0_Set
 18152 ;;		_ADC_Set
 18153 ;;		_INT_Set
 18154 ;;		_IOC_Set
 18155 ;; This function is called by:
 18156 ;;		_main
 18157 ;; This function uses a non-reentrant model
 18158 ;;
 18159                           psect	text4154
 18160                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_16f1518_B1.c"
 18161                           	line	12
 18162                           	global	__size_of_Mcu_Initialization
 18163  0019                     	__size_of_Mcu_Initialization	equ	__end_of_Mcu_Initialization-_Mcu_Initialization
 18164                           	
 18165  23AF                     _Mcu_Initialization:	
 18166                           	opt	stack 10
 18167                           ; Regs used in _Mcu_Initialization: [wreg+status,2+status,0+pclath+cstack]
 18168                           	line	14
 18169                           	
 18170  23AF                     l24720:	
 18171                           ;MCU_16f1518_B1.c: 14: OSCCON=0x78; ;;
 18172  23AF  3078               	movlw	(078h)
 18173  23B0  0021               	movlb 1	; select bank1
 18174  23B1  0099               	movwf	(153)^080h	;volatile
 18175                           	line	16
 18176                           	
 18177  23B2                     l24722:	
 18178                           ;MCU_16f1518_B1.c: 16: IO_Set();
 18179  23B2  31A3  2396  31A3   	fcall	_IO_Set
 18180                           	line	18
 18181                           	
 18182  23B5                     l24724:	
 18183                           ;MCU_16f1518_B1.c: 18: TMR0_Set();
 18184  23B5  31A1  218B  31A3   	fcall	_TMR0_Set
 18185                           	line	22
 18186                           	
 18187  23B8                     l24726:	
 18188                           ;MCU_16f1518_B1.c: 20: ;;
 18189                           ;MCU_16f1518_B1.c: 22: ADC_Set();
 18190  23B8  31A0  20D7  31A3   	fcall	_ADC_Set
 18191                           	line	26
 18192                           ;MCU_16f1518_B1.c: 26: INT_Set();
 18193  23BB  31A0  20BE  31A3   	fcall	_INT_Set
 18194                           	line	28
 18195                           	
 18196  23BE                     l24728:	
 18197                           ;MCU_16f1518_B1.c: 28: IOC_Set();
 18198  23BE  31A1  2198  31A3   	fcall	_IOC_Set
 18199                           	line	34
 18200                           ;MCU_16f1518_B1.c: 30: ;;
 18201                           ;MCU_16f1518_B1.c: 32: ;;
 18202                           ;MCU_16f1518_B1.c: 34: Memory=&VarMemory;
 18203  23C1  30A0               	movlw	(_VarMemory)&0ffh
 18204  23C2  0020               	movlb 0	; select bank0
 18205  23C3  00A1               	movwf	(??_Mcu_Initialization+0)+0
 18206  23C4  0821               	movf	(??_Mcu_Initialization+0)+0,w
 18207  23C5  0021               	movlb 1	; select bank1
 18208  23C6  00EA               	movwf	(_Memory)^080h
 18209                           	line	35
 18210                           	
 18211  23C7                     l9312:	
 18212  23C7  0008               	return
 18213                           	opt stack 0
 18214                           GLOBAL	__end_of_Mcu_Initialization
 18215  23C8                     	__end_of_Mcu_Initialization:
 18216 ;; =============== function _Mcu_Initialization ends ============
 18217                           
 18218                           	signat	_Mcu_Initialization,88
 18219                           	global	_setLED_Main
 18220                           psect	text4155,local,class=CODE,delta=2
 18221                           global __ptext4155
 18222  1C43                     __ptext4155:
 18223                           
 18224 ;; *************** function _setLED_Main *****************
 18225 ;; Defined at:
 18226 ;;		line 215 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\LED_B1.c"
 18227 ;; Parameters:    Size  Location     Type
 18228 ;;  led             1    wreg     unsigned char 
 18229 ;; Auto vars:     Size  Location     Type
 18230 ;;  led             1    4[BANK0 ] unsigned char 
 18231 ;; Return value:  Size  Location     Type
 18232 ;;		None               void
 18233 ;; Registers used:
 18234 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18235 ;; Tracked objects:
 18236 ;;		On entry : 0/0
 18237 ;;		On exit  : 0/0
 18238 ;;		Unchanged: 0/0
 18239 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 18240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 18241 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 18242 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 18243 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 18244 ;;Total ram usage:        3 bytes
 18245 ;; Hardware stack levels used:    1
 18246 ;; Hardware stack levels required when called:    5
 18247 ;; This function calls:
 18248 ;;		_LedPointSelect
 18249 ;; This function is called by:
 18250 ;;		_LED_Main
 18251 ;; This function uses a non-reentrant model
 18252 ;;
 18253                           psect	text4155
 18254                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\LED_B1.c"
 18255                           	line	215
 18256                           	global	__size_of_setLED_Main
 18257  0053                     	__size_of_setLED_Main	equ	__end_of_setLED_Main-_setLED_Main
 18258                           	
 18259  1C43                     _setLED_Main:	
 18260                           	opt	stack 9
 18261                           ; Regs used in _setLED_Main: [wreg+fsr1l-status,0+pclath+cstack]
 18262                           ;setLED_Main@led stored from wreg
 18263  1C43  0020               	movlb 0	; select bank0
 18264  1C44  00A4               	movwf	(setLED_Main@led)
 18265                           	line	216
 18266                           	
 18267  1C45                     l23036:	
 18268                           ;LED_B1.c: 216: LedPointSelect(led);
 18269  1C45  0824               	movf	(setLED_Main@led),w
 18270  1C46  31A5  2528  319C   	fcall	_LedPointSelect
 18271                           	line	217
 18272                           	
 18273  1C49                     l23038:	
 18274                           ;LED_B1.c: 217: if(LED->GO)
 18275  1C49  0021               	movlb 1	; select bank1
 18276  1C4A  083B               	movf	(_LED)^080h,w
 18277  1C4B  0086               	movwf	fsr1l
 18278  1C4C  0187               	clrf fsr1h	
 18279                           	
 18280  1C4D  1C81               	btfss	indf1,1
 18281  1C4E  2C50               	goto	u6591
 18282  1C4F  2C51               	goto	u6590
 18283  1C50                     u6591:
 18284  1C50  2C95               	goto	l7002
 18285  1C51                     u6590:
 18286                           	line	219
 18287                           	
 18288  1C51                     l23040:	
 18289                           ;LED_B1.c: 218: {
 18290                           ;LED_B1.c: 219: LED->Time++;
 18291  1C51  083B               	movf	(_LED)^080h,w
 18292  1C52  3E01               	addlw	01h
 18293  1C53  0086               	movwf	fsr1l
 18294  1C54  0187               	clrf fsr1h	
 18295                           	
 18296  1C55  3001               	movlw	01h
 18297  1C56  0781               	addwf	indf1,f
 18298  1C57  3141               	addfsr	fsr1,1
 18299  1C58  1803               	skipnc
 18300  1C59  0A81               	incf	indf1,f
 18301                           	line	220
 18302                           	
 18303  1C5A                     l23042:	
 18304                           ;LED_B1.c: 220: if(LED->Time >= 500/10)
 18305  1C5A  083B               	movf	(_LED)^080h,w
 18306  1C5B  3E01               	addlw	01h
 18307  1C5C  0086               	movwf	fsr1l
 18308  1C5D  0187               	clrf fsr1h	
 18309                           	
 18310  1C5E  3F40               	moviw	[0]fsr1
 18311  1C5F  0020               	movlb 0	; select bank0
 18312  1C60  00A2               	movwf	(??_setLED_Main+0)+0
 18313  1C61  3F41               	moviw	[1]fsr1
 18314  1C62  00A3               	movwf	(??_setLED_Main+0)+0+1
 18315  1C63  3000               	movlw	high(032h)
 18316  1C64  0223               	subwf	1+(??_setLED_Main+0)+0,w
 18317  1C65  3032               	movlw	low(032h)
 18318  1C66  1903               	skipnz
 18319  1C67  0222               	subwf	0+(??_setLED_Main+0)+0,w
 18320  1C68  1C03               	skipc
 18321  1C69  2C6B               	goto	u6601
 18322  1C6A  2C6C               	goto	u6600
 18323  1C6B                     u6601:
 18324  1C6B  2C95               	goto	l7002
 18325  1C6C                     u6600:
 18326                           	line	222
 18327                           	
 18328  1C6C                     l23044:	
 18329                           ;LED_B1.c: 221: {
 18330                           ;LED_B1.c: 222: LED->Time=0;
 18331  1C6C  0021               	movlb 1	; select bank1
 18332  1C6D  083B               	movf	(_LED)^080h,w
 18333  1C6E  3E01               	addlw	01h
 18334  1C6F  0086               	movwf	fsr1l
 18335  1C70  0187               	clrf fsr1h	
 18336                           	
 18337  1C71  3000               	movlw	low(0)
 18338  1C72  3FC0               	movwi	[0]fsr1
 18339  1C73  3000               	movlw	high(0)
 18340  1C74  3FC1               	movwi	[1]fsr1
 18341                           	line	224
 18342                           	
 18343  1C75                     l23046:	
 18344                           ;LED_B1.c: 224: if(led == 1)
 18345  1C75  0020               	movlb 0	; select bank0
 18346  1C76  0824               	movf	(setLED_Main@led),w
 18347  1C77  3A01               	xorlw	01h&0ffh
 18348  1C78  1D03               	skipz
 18349  1C79  2C7B               	goto	u6611
 18350  1C7A  2C7C               	goto	u6610
 18351  1C7B                     u6611:
 18352  1C7B  2C7F               	goto	l23050
 18353  1C7C                     u6610:
 18354                           	line	226
 18355                           	
 18356  1C7C                     l23048:	
 18357                           ;LED_B1.c: 225: {
 18358                           ;LED_B1.c: 226: RA3=~RA3;
 18359  1C7C  3008               	movlw	1<<((99)&7)
 18360  1C7D  068C               	xorwf	((99)/8),f
 18361                           	line	227
 18362                           ;LED_B1.c: 227: }
 18363  1C7E  2C95               	goto	l7002
 18364                           	line	230
 18365                           	
 18366  1C7F                     l6997:	
 18367                           	
 18368  1C7F                     l23050:	
 18369                           ;LED_B1.c: 230: else if(led == 2)
 18370  1C7F  0824               	movf	(setLED_Main@led),w
 18371  1C80  3A02               	xorlw	02h&0ffh
 18372  1C81  1D03               	skipz
 18373  1C82  2C84               	goto	u6621
 18374  1C83  2C85               	goto	u6620
 18375  1C84                     u6621:
 18376  1C84  2C88               	goto	l23054
 18377  1C85                     u6620:
 18378                           	line	232
 18379                           	
 18380  1C85                     l23052:	
 18381                           ;LED_B1.c: 231: {
 18382                           ;LED_B1.c: 232: RC7=~RC7;
 18383  1C85  3080               	movlw	1<<((119)&7)
 18384  1C86  068E               	xorwf	((119)/8),f
 18385                           	line	233
 18386                           ;LED_B1.c: 233: }
 18387  1C87  2C95               	goto	l7002
 18388                           	line	242
 18389                           	
 18390  1C88                     l6999:	
 18391                           	
 18392  1C88                     l23054:	
 18393                           ;LED_B1.c: 242: else if(led == 99)
 18394  1C88  0824               	movf	(setLED_Main@led),w
 18395  1C89  3A63               	xorlw	063h&0ffh
 18396  1C8A  1D03               	skipz
 18397  1C8B  2C8D               	goto	u6631
 18398  1C8C  2C8E               	goto	u6630
 18399  1C8D                     u6631:
 18400  1C8D  2C95               	goto	l7002
 18401  1C8E                     u6630:
 18402                           	line	244
 18403                           	
 18404  1C8E                     l23056:	
 18405                           ;LED_B1.c: 243: {
 18406                           ;LED_B1.c: 244: RB5=~RB5;
 18407  1C8E  3020               	movlw	1<<((109)&7)
 18408  1C8F  068D               	xorwf	((109)/8),f
 18409  1C90  2C95               	goto	l7002
 18410                           	line	245
 18411                           	
 18412  1C91                     l7001:	
 18413  1C91  2C95               	goto	l7002
 18414                           	line	247
 18415                           	
 18416  1C92                     l7000:	
 18417  1C92  2C95               	goto	l7002
 18418                           	
 18419  1C93                     l6998:	
 18420  1C93  2C95               	goto	l7002
 18421                           	
 18422  1C94                     l6996:	
 18423  1C94  2C95               	goto	l7002
 18424                           	line	248
 18425                           	
 18426  1C95                     l6995:	
 18427                           	line	249
 18428                           	
 18429  1C95                     l7002:	
 18430  1C95  0008               	return
 18431                           	opt stack 0
 18432                           GLOBAL	__end_of_setLED_Main
 18433  1C96                     	__end_of_setLED_Main:
 18434 ;; =============== function _setLED_Main ends ============
 18435                           
 18436                           	signat	_setLED_Main,4216
 18437                           	global	_setDimmerLights_Clear
 18438                           psect	text4156,local,class=CODE,delta=2
 18439                           global __ptext4156
 18440  22FB                     __ptext4156:
 18441                           
 18442 ;; *************** function _setDimmerLights_Clear *****************
 18443 ;; Defined at:
 18444 ;;		line 446 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 18445 ;; Parameters:    Size  Location     Type
 18446 ;;  lights          1    wreg     unsigned char 
 18447 ;;  command         1    2[BANK0 ] unsigned char 
 18448 ;; Auto vars:     Size  Location     Type
 18449 ;;  lights          1    3[BANK0 ] unsigned char 
 18450 ;; Return value:  Size  Location     Type
 18451 ;;		None               void
 18452 ;; Registers used:
 18453 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18454 ;; Tracked objects:
 18455 ;;		On entry : 0/0
 18456 ;;		On exit  : 0/0
 18457 ;;		Unchanged: 0/0
 18458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 18459 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 18460 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 18461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 18462 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 18463 ;;Total ram usage:        2 bytes
 18464 ;; Hardware stack levels used:    1
 18465 ;; Hardware stack levels required when called:    5
 18466 ;; This function calls:
 18467 ;;		_DimmerLightsPointSelect
 18468 ;; This function is called by:
 18469 ;;		_Load_Main
 18470 ;; This function uses a non-reentrant model
 18471 ;;
 18472                           psect	text4156
 18473                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 18474                           	line	446
 18475                           	global	__size_of_setDimmerLights_Clear
 18476  0011                     	__size_of_setDimmerLights_Clear	equ	__end_of_setDimmerLights_Clear-_setDimmerLights_Cle
                                 ar
 18477                           	
 18478  22FB                     _setDimmerLights_Clear:	
 18479                           	opt	stack 9
 18480                           ; Regs used in _setDimmerLights_Clear: [wreg+fsr1l-status,0+pclath+cstack]
 18481                           ;setDimmerLights_Clear@lights stored from wreg
 18482  22FB  0020               	movlb 0	; select bank0
 18483  22FC  00A3               	movwf	(setDimmerLights_Clear@lights)
 18484                           	line	447
 18485                           	
 18486  22FD                     l24716:	
 18487                           ;Dimmer_B1.c: 447: DimmerLightsPointSelect(lights);
 18488  22FD  0823               	movf	(setDimmerLights_Clear@lights),w
 18489  22FE  31A1  21E6  31A2   	fcall	_DimmerLightsPointSelect
 18490                           	line	448
 18491                           	
 18492  2301                     l24718:	
 18493                           ;Dimmer_B1.c: 448: DimmerLights->Clear=command;
 18494  2301  0020               	movlb 0	; select bank0
 18495  2302  086C               	movf	(_DimmerLights),w
 18496  2303  3E0C               	addlw	0Ch
 18497  2304  0086               	movwf	fsr1l
 18498  2305  3001               	movlw 1	; select bank2/3
 18499  2306  0087               	movwf fsr1h	
 18500                           	
 18501  2307  0822               	movf	(setDimmerLights_Clear@command),w
 18502  2308  1001               	bcf	indf1,0
 18503  2309  1D03               	skipz
 18504  230A  1401               	bsf	indf1,0
 18505                           	line	449
 18506                           	
 18507  230B                     l5839:	
 18508  230B  0008               	return
 18509                           	opt stack 0
 18510                           GLOBAL	__end_of_setDimmerLights_Clear
 18511  230C                     	__end_of_setDimmerLights_Clear:
 18512 ;; =============== function _setDimmerLights_Clear ends ============
 18513                           
 18514                           	signat	_setDimmerLights_Clear,8312
 18515                           	global	_setDimmerLights_TriggerAdj
 18516                           psect	text4157,local,class=CODE,delta=2
 18517                           global __ptext4157
 18518  22EA                     __ptext4157:
 18519                           
 18520 ;; *************** function _setDimmerLights_TriggerAdj *****************
 18521 ;; Defined at:
 18522 ;;		line 440 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 18523 ;; Parameters:    Size  Location     Type
 18524 ;;  lights          1    wreg     unsigned char 
 18525 ;;  command         1    2[BANK0 ] unsigned char 
 18526 ;; Auto vars:     Size  Location     Type
 18527 ;;  lights          1    3[BANK0 ] unsigned char 
 18528 ;; Return value:  Size  Location     Type
 18529 ;;		None               void
 18530 ;; Registers used:
 18531 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18532 ;; Tracked objects:
 18533 ;;		On entry : 0/0
 18534 ;;		On exit  : 0/0
 18535 ;;		Unchanged: 0/0
 18536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 18537 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 18538 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 18539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 18540 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 18541 ;;Total ram usage:        2 bytes
 18542 ;; Hardware stack levels used:    1
 18543 ;; Hardware stack levels required when called:    5
 18544 ;; This function calls:
 18545 ;;		_DimmerLightsPointSelect
 18546 ;; This function is called by:
 18547 ;;		_Sw_DimmerOffFunc
 18548 ;;		_Sw_DimmerAdjFunc
 18549 ;; This function uses a non-reentrant model
 18550 ;;
 18551                           psect	text4157
 18552                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 18553                           	line	440
 18554                           	global	__size_of_setDimmerLights_TriggerAdj
 18555  0011                     	__size_of_setDimmerLights_TriggerAdj	equ	__end_of_setDimmerLights_TriggerAdj-_setDimmer
                                 Lights_TriggerAdj
 18556                           	
 18557  22EA                     _setDimmerLights_TriggerAdj:	
 18558                           	opt	stack 7
 18559                           ; Regs used in _setDimmerLights_TriggerAdj: [wreg+fsr1l-status,0+pclath+cstack]
 18560                           ;setDimmerLights_TriggerAdj@lights stored from wreg
 18561  22EA  0020               	movlb 0	; select bank0
 18562  22EB  00A3               	movwf	(setDimmerLights_TriggerAdj@lights)
 18563                           	line	441
 18564                           	
 18565  22EC                     l24712:	
 18566                           ;Dimmer_B1.c: 441: DimmerLightsPointSelect(lights);
 18567  22EC  0823               	movf	(setDimmerLights_TriggerAdj@lights),w
 18568  22ED  31A1  21E6  31A2   	fcall	_DimmerLightsPointSelect
 18569                           	line	442
 18570                           	
 18571  22F0                     l24714:	
 18572                           ;Dimmer_B1.c: 442: DimmerLights->TriggerAdj=command;
 18573  22F0  0020               	movlb 0	; select bank0
 18574  22F1  086C               	movf	(_DimmerLights),w
 18575  22F2  3E09               	addlw	09h
 18576  22F3  0086               	movwf	fsr1l
 18577  22F4  3001               	movlw 1	; select bank2/3
 18578  22F5  0087               	movwf fsr1h	
 18579                           	
 18580  22F6  0822               	movf	(setDimmerLights_TriggerAdj@command),w
 18581  22F7  1181               	bcf	indf1,3
 18582  22F8  1D03               	skipz
 18583  22F9  1581               	bsf	indf1,3
 18584                           	line	443
 18585                           	
 18586  22FA                     l5836:	
 18587  22FA  0008               	return
 18588                           	opt stack 0
 18589                           GLOBAL	__end_of_setDimmerLights_TriggerAdj
 18590  22FB                     	__end_of_setDimmerLights_TriggerAdj:
 18591 ;; =============== function _setDimmerLights_TriggerAdj ends ============
 18592                           
 18593                           	signat	_setDimmerLights_TriggerAdj,8312
 18594                           	global	_setDimmerLights_AdjGo
 18595                           psect	text4158,local,class=CODE,delta=2
 18596                           global __ptext4158
 18597  22D9                     __ptext4158:
 18598                           
 18599 ;; *************** function _setDimmerLights_AdjGo *****************
 18600 ;; Defined at:
 18601 ;;		line 430 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 18602 ;; Parameters:    Size  Location     Type
 18603 ;;  lights          1    wreg     unsigned char 
 18604 ;;  command         1    2[BANK0 ] unsigned char 
 18605 ;; Auto vars:     Size  Location     Type
 18606 ;;  lights          1    3[BANK0 ] unsigned char 
 18607 ;; Return value:  Size  Location     Type
 18608 ;;		None               void
 18609 ;; Registers used:
 18610 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18611 ;; Tracked objects:
 18612 ;;		On entry : 0/0
 18613 ;;		On exit  : 0/0
 18614 ;;		Unchanged: 0/0
 18615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 18616 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 18617 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 18618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 18619 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 18620 ;;Total ram usage:        2 bytes
 18621 ;; Hardware stack levels used:    1
 18622 ;; Hardware stack levels required when called:    5
 18623 ;; This function calls:
 18624 ;;		_DimmerLightsPointSelect
 18625 ;; This function is called by:
 18626 ;;		_Sw_DimmerOffFunc
 18627 ;;		_Sw_DimmerAdjFunc
 18628 ;; This function uses a non-reentrant model
 18629 ;;
 18630                           psect	text4158
 18631                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 18632                           	line	430
 18633                           	global	__size_of_setDimmerLights_AdjGo
 18634  0011                     	__size_of_setDimmerLights_AdjGo	equ	__end_of_setDimmerLights_AdjGo-_setDimmerLights_Adj
                                 Go
 18635                           	
 18636  22D9                     _setDimmerLights_AdjGo:	
 18637                           	opt	stack 7
 18638                           ; Regs used in _setDimmerLights_AdjGo: [wreg+fsr1l-status,0+pclath+cstack]
 18639                           ;setDimmerLights_AdjGo@lights stored from wreg
 18640  22D9  0020               	movlb 0	; select bank0
 18641  22DA  00A3               	movwf	(setDimmerLights_AdjGo@lights)
 18642                           	line	431
 18643                           	
 18644  22DB                     l24708:	
 18645                           ;Dimmer_B1.c: 431: DimmerLightsPointSelect(lights);
 18646  22DB  0823               	movf	(setDimmerLights_AdjGo@lights),w
 18647  22DC  31A1  21E6  31A2   	fcall	_DimmerLightsPointSelect
 18648                           	line	432
 18649                           	
 18650  22DF                     l24710:	
 18651                           ;Dimmer_B1.c: 432: DimmerLights->AdjGo=command;
 18652  22DF  0020               	movlb 0	; select bank0
 18653  22E0  086C               	movf	(_DimmerLights),w
 18654  22E1  3E09               	addlw	09h
 18655  22E2  0086               	movwf	fsr1l
 18656  22E3  3001               	movlw 1	; select bank2/3
 18657  22E4  0087               	movwf fsr1h	
 18658                           	
 18659  22E5  0822               	movf	(setDimmerLights_AdjGo@command),w
 18660  22E6  1101               	bcf	indf1,2
 18661  22E7  1D03               	skipz
 18662  22E8  1501               	bsf	indf1,2
 18663                           	line	433
 18664                           	
 18665  22E9                     l5830:	
 18666  22E9  0008               	return
 18667                           	opt stack 0
 18668                           GLOBAL	__end_of_setDimmerLights_AdjGo
 18669  22EA                     	__end_of_setDimmerLights_AdjGo:
 18670 ;; =============== function _setDimmerLights_AdjGo ends ============
 18671                           
 18672                           	signat	_setDimmerLights_AdjGo,8312
 18673                           	global	_setLED
 18674                           psect	text4159,local,class=CODE,delta=2
 18675                           global __ptext4159
 18676  13CF                     __ptext4159:
 18677                           
 18678 ;; *************** function _setLED *****************
 18679 ;; Defined at:
 18680 ;;		line 75 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\LED_B1.c"
 18681 ;; Parameters:    Size  Location     Type
 18682 ;;  led             1    wreg     unsigned char 
 18683 ;;  command         1    2[BANK0 ] unsigned char 
 18684 ;; Auto vars:     Size  Location     Type
 18685 ;;  led             1    3[BANK0 ] unsigned char 
 18686 ;; Return value:  Size  Location     Type
 18687 ;;		None               void
 18688 ;; Registers used:
 18689 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18690 ;; Tracked objects:
 18691 ;;		On entry : 0/0
 18692 ;;		On exit  : 0/0
 18693 ;;		Unchanged: 0/0
 18694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 18695 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 18696 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 18697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 18698 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 18699 ;;Total ram usage:        2 bytes
 18700 ;; Hardware stack levels used:    1
 18701 ;; Hardware stack levels required when called:    5
 18702 ;; This function calls:
 18703 ;;		_LedPointSelect
 18704 ;; This function is called by:
 18705 ;;		_setDimmerLights_ERROR
 18706 ;;		_setDimmerLights
 18707 ;;		_setLED_Initialization
 18708 ;;		_setLoad_Exceptions
 18709 ;;		_setOverTemp_Exceptions
 18710 ;;		_setPowerFault_Exceptions
 18711 ;;		_setSw_Initialization
 18712 ;; This function uses a non-reentrant model
 18713 ;;
 18714                           psect	text4159
 18715                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\LED_B1.c"
 18716                           	line	75
 18717                           	global	__size_of_setLED
 18718  0087                     	__size_of_setLED	equ	__end_of_setLED-_setLED
 18719                           	
 18720  13CF                     _setLED:	
 18721                           	opt	stack 5
 18722                           ; Regs used in _setLED: [wreg+fsr1l-status,0+pclath+cstack]
 18723                           ;setLED@led stored from wreg
 18724  13CF  0020               	movlb 0	; select bank0
 18725  13D0  00A3               	movwf	(setLED@led)
 18726                           	line	76
 18727                           	
 18728  13D1                     l24658:	
 18729                           ;LED_B1.c: 76: LedPointSelect(led);
 18730  13D1  0823               	movf	(setLED@led),w
 18731  13D2  31A5  2528  3193   	fcall	_LedPointSelect
 18732                           	line	77
 18733                           	
 18734  13D5                     l24660:	
 18735                           ;LED_B1.c: 77: if(command == 0)
 18736  13D5  0020               	movlb 0	; select bank0
 18737  13D6  08A2               	movf	(setLED@command),f
 18738  13D7  1D03               	skipz
 18739  13D8  2BDA               	goto	u9061
 18740  13D9  2BDB               	goto	u9060
 18741  13DA                     u9061:
 18742  13DA  2BF6               	goto	l24674
 18743  13DB                     u9060:
 18744                           	line	80
 18745                           	
 18746  13DB                     l24662:	
 18747                           ;LED_B1.c: 78: {
 18748                           ;LED_B1.c: 80: if(led == 1)
 18749  13DB  0823               	movf	(setLED@led),w
 18750  13DC  3A01               	xorlw	01h&0ffh
 18751  13DD  1D03               	skipz
 18752  13DE  2BE0               	goto	u9071
 18753  13DF  2BE1               	goto	u9070
 18754  13E0                     u9071:
 18755  13E0  2BE3               	goto	l24666
 18756  13E1                     u9070:
 18757                           	line	85
 18758                           	
 18759  13E1                     l24664:	
 18760                           ;LED_B1.c: 81: {
 18761                           ;LED_B1.c: 85: RA3=1;
 18762  13E1  158C               	bsf	(99/8),(99)&7
 18763                           	line	87
 18764                           ;LED_B1.c: 87: }
 18765  13E2  2C55               	goto	l6992
 18766                           	line	90
 18767                           	
 18768  13E3                     l6971:	
 18769                           	
 18770  13E3                     l24666:	
 18771                           ;LED_B1.c: 90: else if(led == 2)
 18772  13E3  0823               	movf	(setLED@led),w
 18773  13E4  3A02               	xorlw	02h&0ffh
 18774  13E5  1D03               	skipz
 18775  13E6  2BE8               	goto	u9081
 18776  13E7  2BE9               	goto	u9080
 18777  13E8                     u9081:
 18778  13E8  2BEB               	goto	l24670
 18779  13E9                     u9080:
 18780                           	line	95
 18781                           	
 18782  13E9                     l24668:	
 18783                           ;LED_B1.c: 91: {
 18784                           ;LED_B1.c: 95: RC7=1;
 18785  13E9  178E               	bsf	(119/8),(119)&7
 18786                           	line	97
 18787                           ;LED_B1.c: 97: }
 18788  13EA  2C55               	goto	l6992
 18789                           	line	110
 18790                           	
 18791  13EB                     l6973:	
 18792                           	
 18793  13EB                     l24670:	
 18794                           ;LED_B1.c: 110: else if(led == 99)
 18795  13EB  0823               	movf	(setLED@led),w
 18796  13EC  3A63               	xorlw	063h&0ffh
 18797  13ED  1D03               	skipz
 18798  13EE  2BF0               	goto	u9091
 18799  13EF  2BF1               	goto	u9090
 18800  13F0                     u9091:
 18801  13F0  2C55               	goto	l6992
 18802  13F1                     u9090:
 18803                           	line	115
 18804                           	
 18805  13F1                     l24672:	
 18806                           ;LED_B1.c: 111: {
 18807                           ;LED_B1.c: 115: RB5=1;
 18808  13F1  168D               	bsf	(109/8),(109)&7
 18809  13F2  2C55               	goto	l6992
 18810                           	line	117
 18811                           	
 18812  13F3                     l6975:	
 18813  13F3  2C55               	goto	l6992
 18814                           	line	119
 18815                           	
 18816  13F4                     l6974:	
 18817  13F4  2C55               	goto	l6992
 18818                           	
 18819  13F5                     l6972:	
 18820                           ;LED_B1.c: 117: }
 18821                           ;LED_B1.c: 119: }
 18822  13F5  2C55               	goto	l6992
 18823                           	line	120
 18824                           	
 18825  13F6                     l6970:	
 18826                           	
 18827  13F6                     l24674:	
 18828                           ;LED_B1.c: 120: else if(command == 1)
 18829  13F6  0822               	movf	(setLED@command),w
 18830  13F7  3A01               	xorlw	01h&0ffh
 18831  13F8  1D03               	skipz
 18832  13F9  2BFB               	goto	u9101
 18833  13FA  2BFC               	goto	u9100
 18834  13FB                     u9101:
 18835  13FB  2C17               	goto	l24688
 18836  13FC                     u9100:
 18837                           	line	123
 18838                           	
 18839  13FC                     l24676:	
 18840                           ;LED_B1.c: 121: {
 18841                           ;LED_B1.c: 123: if(led == 1)
 18842  13FC  0823               	movf	(setLED@led),w
 18843  13FD  3A01               	xorlw	01h&0ffh
 18844  13FE  1D03               	skipz
 18845  13FF  2C01               	goto	u9111
 18846  1400  2C02               	goto	u9110
 18847  1401                     u9111:
 18848  1401  2C04               	goto	l24680
 18849  1402                     u9110:
 18850                           	line	128
 18851                           	
 18852  1402                     l24678:	
 18853                           ;LED_B1.c: 124: {
 18854                           ;LED_B1.c: 128: RA3=0;
 18855  1402  118C               	bcf	(99/8),(99)&7
 18856                           	line	130
 18857                           ;LED_B1.c: 130: }
 18858  1403  2C55               	goto	l6992
 18859                           	line	133
 18860                           	
 18861  1404                     l6978:	
 18862                           	
 18863  1404                     l24680:	
 18864                           ;LED_B1.c: 133: else if(led == 2)
 18865  1404  0823               	movf	(setLED@led),w
 18866  1405  3A02               	xorlw	02h&0ffh
 18867  1406  1D03               	skipz
 18868  1407  2C09               	goto	u9121
 18869  1408  2C0A               	goto	u9120
 18870  1409                     u9121:
 18871  1409  2C0C               	goto	l24684
 18872  140A                     u9120:
 18873                           	line	138
 18874                           	
 18875  140A                     l24682:	
 18876                           ;LED_B1.c: 134: {
 18877                           ;LED_B1.c: 138: RC7=0;
 18878  140A  138E               	bcf	(119/8),(119)&7
 18879                           	line	140
 18880                           ;LED_B1.c: 140: }
 18881  140B  2C55               	goto	l6992
 18882                           	line	153
 18883                           	
 18884  140C                     l6980:	
 18885                           	
 18886  140C                     l24684:	
 18887                           ;LED_B1.c: 153: else if(led == 99)
 18888  140C  0823               	movf	(setLED@led),w
 18889  140D  3A63               	xorlw	063h&0ffh
 18890  140E  1D03               	skipz
 18891  140F  2C11               	goto	u9131
 18892  1410  2C12               	goto	u9130
 18893  1411                     u9131:
 18894  1411  2C55               	goto	l6992
 18895  1412                     u9130:
 18896                           	line	158
 18897                           	
 18898  1412                     l24686:	
 18899                           ;LED_B1.c: 154: {
 18900                           ;LED_B1.c: 158: RB5=0;
 18901  1412  128D               	bcf	(109/8),(109)&7
 18902  1413  2C55               	goto	l6992
 18903                           	line	160
 18904                           	
 18905  1414                     l6982:	
 18906  1414  2C55               	goto	l6992
 18907                           	line	162
 18908                           	
 18909  1415                     l6981:	
 18910  1415  2C55               	goto	l6992
 18911                           	
 18912  1416                     l6979:	
 18913                           ;LED_B1.c: 160: }
 18914                           ;LED_B1.c: 162: }
 18915  1416  2C55               	goto	l6992
 18916                           	line	163
 18917                           	
 18918  1417                     l6977:	
 18919                           	
 18920  1417                     l24688:	
 18921                           ;LED_B1.c: 163: else if(command == 10)
 18922  1417  0822               	movf	(setLED@command),w
 18923  1418  3A0A               	xorlw	0Ah&0ffh
 18924  1419  1D03               	skipz
 18925  141A  2C1C               	goto	u9141
 18926  141B  2C1D               	goto	u9140
 18927  141C                     u9141:
 18928  141C  2C46               	goto	l24704
 18929  141D                     u9140:
 18930                           	line	165
 18931                           	
 18932  141D                     l24690:	
 18933                           ;LED_B1.c: 164: {
 18934                           ;LED_B1.c: 165: LED->GO=0;
 18935  141D  0021               	movlb 1	; select bank1
 18936  141E  083B               	movf	(_LED)^080h,w
 18937  141F  0086               	movwf	fsr1l
 18938  1420  0187               	clrf fsr1h	
 18939                           	
 18940  1421  1081               	bcf	indf1,1
 18941                           	line	166
 18942                           ;LED_B1.c: 166: LED->Time=0;
 18943  1422  083B               	movf	(_LED)^080h,w
 18944  1423  3E01               	addlw	01h
 18945  1424  0086               	movwf	fsr1l
 18946  1425  0187               	clrf fsr1h	
 18947                           	
 18948  1426  3000               	movlw	low(0)
 18949  1427  3FC0               	movwi	[0]fsr1
 18950  1428  3000               	movlw	high(0)
 18951  1429  3FC1               	movwi	[1]fsr1
 18952                           	line	168
 18953                           	
 18954  142A                     l24692:	
 18955                           ;LED_B1.c: 168: if(led == 1)
 18956  142A  0020               	movlb 0	; select bank0
 18957  142B  0823               	movf	(setLED@led),w
 18958  142C  3A01               	xorlw	01h&0ffh
 18959  142D  1D03               	skipz
 18960  142E  2C30               	goto	u9151
 18961  142F  2C31               	goto	u9150
 18962  1430                     u9151:
 18963  1430  2C33               	goto	l24696
 18964  1431                     u9150:
 18965                           	line	173
 18966                           	
 18967  1431                     l24694:	
 18968                           ;LED_B1.c: 169: {
 18969                           ;LED_B1.c: 173: RA3=1;
 18970  1431  158C               	bsf	(99/8),(99)&7
 18971                           	line	175
 18972                           ;LED_B1.c: 175: }
 18973  1432  2C55               	goto	l6992
 18974                           	line	178
 18975                           	
 18976  1433                     l6985:	
 18977                           	
 18978  1433                     l24696:	
 18979                           ;LED_B1.c: 178: else if(led == 2)
 18980  1433  0823               	movf	(setLED@led),w
 18981  1434  3A02               	xorlw	02h&0ffh
 18982  1435  1D03               	skipz
 18983  1436  2C38               	goto	u9161
 18984  1437  2C39               	goto	u9160
 18985  1438                     u9161:
 18986  1438  2C3B               	goto	l24700
 18987  1439                     u9160:
 18988                           	line	183
 18989                           	
 18990  1439                     l24698:	
 18991                           ;LED_B1.c: 179: {
 18992                           ;LED_B1.c: 183: RC7=1;
 18993  1439  178E               	bsf	(119/8),(119)&7
 18994                           	line	185
 18995                           ;LED_B1.c: 185: }
 18996  143A  2C55               	goto	l6992
 18997                           	line	198
 18998                           	
 18999  143B                     l6987:	
 19000                           	
 19001  143B                     l24700:	
 19002                           ;LED_B1.c: 198: else if(led == 99)
 19003  143B  0823               	movf	(setLED@led),w
 19004  143C  3A63               	xorlw	063h&0ffh
 19005  143D  1D03               	skipz
 19006  143E  2C40               	goto	u9171
 19007  143F  2C41               	goto	u9170
 19008  1440                     u9171:
 19009  1440  2C55               	goto	l6992
 19010  1441                     u9170:
 19011                           	line	203
 19012                           	
 19013  1441                     l24702:	
 19014                           ;LED_B1.c: 199: {
 19015                           ;LED_B1.c: 203: RB5=1;
 19016  1441  168D               	bsf	(109/8),(109)&7
 19017  1442  2C55               	goto	l6992
 19018                           	line	205
 19019                           	
 19020  1443                     l6989:	
 19021  1443  2C55               	goto	l6992
 19022                           	line	207
 19023                           	
 19024  1444                     l6988:	
 19025  1444  2C55               	goto	l6992
 19026                           	
 19027  1445                     l6986:	
 19028                           ;LED_B1.c: 205: }
 19029                           ;LED_B1.c: 207: }
 19030  1445  2C55               	goto	l6992
 19031                           	line	208
 19032                           	
 19033  1446                     l6984:	
 19034                           	
 19035  1446                     l24704:	
 19036                           ;LED_B1.c: 208: else if(command == 11)
 19037  1446  0822               	movf	(setLED@command),w
 19038  1447  3A0B               	xorlw	0Bh&0ffh
 19039  1448  1D03               	skipz
 19040  1449  2C4B               	goto	u9181
 19041  144A  2C4C               	goto	u9180
 19042  144B                     u9181:
 19043  144B  2C55               	goto	l6992
 19044  144C                     u9180:
 19045                           	line	210
 19046                           	
 19047  144C                     l24706:	
 19048                           ;LED_B1.c: 209: {
 19049                           ;LED_B1.c: 210: LED->GO=1;
 19050  144C  0021               	movlb 1	; select bank1
 19051  144D  083B               	movf	(_LED)^080h,w
 19052  144E  0086               	movwf	fsr1l
 19053  144F  0187               	clrf fsr1h	
 19054                           	
 19055  1450  1481               	bsf	indf1,1
 19056  1451  2C55               	goto	l6992
 19057                           	line	211
 19058                           	
 19059  1452                     l6991:	
 19060  1452  2C55               	goto	l6992
 19061                           	line	212
 19062                           	
 19063  1453                     l6990:	
 19064  1453  2C55               	goto	l6992
 19065                           	
 19066  1454                     l6983:	
 19067  1454  2C55               	goto	l6992
 19068                           	
 19069  1455                     l6976:	
 19070                           	
 19071  1455                     l6992:	
 19072  1455  0008               	return
 19073                           	opt stack 0
 19074                           GLOBAL	__end_of_setLED
 19075  1456                     	__end_of_setLED:
 19076 ;; =============== function _setLED ends ============
 19077                           
 19078                           	signat	_setLED,8312
 19079                           	global	_setDimmerLights_TriggerERROR
 19080                           psect	text4160,local,class=CODE,delta=2
 19081                           global __ptext4160
 19082  2553                     __ptext4160:
 19083                           
 19084 ;; *************** function _setDimmerLights_TriggerERROR *****************
 19085 ;; Defined at:
 19086 ;;		line 312 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 19087 ;; Parameters:    Size  Location     Type
 19088 ;;  lights          1    wreg     unsigned char 
 19089 ;;  command         1    2[BANK0 ] unsigned char 
 19090 ;; Auto vars:     Size  Location     Type
 19091 ;;  lights          1    3[BANK0 ] unsigned char 
 19092 ;; Return value:  Size  Location     Type
 19093 ;;		None               void
 19094 ;; Registers used:
 19095 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19096 ;; Tracked objects:
 19097 ;;		On entry : 0/0
 19098 ;;		On exit  : 0/0
 19099 ;;		Unchanged: 0/0
 19100 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 19101 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 19102 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 19103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 19104 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 19105 ;;Total ram usage:        2 bytes
 19106 ;; Hardware stack levels used:    1
 19107 ;; Hardware stack levels required when called:    5
 19108 ;; This function calls:
 19109 ;;		_DimmerLightsPointSelect
 19110 ;; This function is called by:
 19111 ;;		_DimmerLights_Exceptions
 19112 ;; This function uses a non-reentrant model
 19113 ;;
 19114                           psect	text4160
 19115                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 19116                           	line	312
 19117                           	global	__size_of_setDimmerLights_TriggerERROR
 19118  002C                     	__size_of_setDimmerLights_TriggerERROR	equ	__end_of_setDimmerLights_TriggerERROR-_setDi
                                 mmerLights_TriggerERROR
 19119                           	
 19120  2553                     _setDimmerLights_TriggerERROR:	
 19121                           	opt	stack 6
 19122                           ; Regs used in _setDimmerLights_TriggerERROR: [wreg+fsr1l-status,0+pclath+cstack]
 19123                           ;setDimmerLights_TriggerERROR@lights stored from wreg
 19124  2553  0020               	movlb 0	; select bank0
 19125  2554  00A3               	movwf	(setDimmerLights_TriggerERROR@lights)
 19126                           	line	313
 19127                           	
 19128  2555                     l24648:	
 19129                           ;Dimmer_B1.c: 313: DimmerLightsPointSelect(lights);
 19130  2555  0823               	movf	(setDimmerLights_TriggerERROR@lights),w
 19131  2556  31A1  21E6  31A5   	fcall	_DimmerLightsPointSelect
 19132                           	line	314
 19133                           	
 19134  2559                     l24650:	
 19135                           ;Dimmer_B1.c: 314: DimmerLights->Trigger=command;
 19136  2559  0020               	movlb 0	; select bank0
 19137  255A  086C               	movf	(_DimmerLights),w
 19138  255B  3E09               	addlw	09h
 19139  255C  0086               	movwf	fsr1l
 19140  255D  3001               	movlw 1	; select bank2/3
 19141  255E  0087               	movwf fsr1h	
 19142                           	
 19143  255F  0822               	movf	(setDimmerLights_TriggerERROR@command),w
 19144  2560  1081               	bcf	indf1,1
 19145  2561  1D03               	skipz
 19146  2562  1481               	bsf	indf1,1
 19147                           	line	315
 19148                           	
 19149  2563                     l24652:	
 19150                           ;Dimmer_B1.c: 315: DimmerLights->Switch=command;
 19151  2563  086C               	movf	(_DimmerLights),w
 19152  2564  3E09               	addlw	09h
 19153  2565  0086               	movwf	fsr1l
 19154  2566  3001               	movlw 1	; select bank2/3
 19155  2567  0087               	movwf fsr1h	
 19156                           	
 19157  2568  0822               	movf	(setDimmerLights_TriggerERROR@command),w
 19158  2569  1001               	bcf	indf1,0
 19159  256A  1D03               	skipz
 19160  256B  1401               	bsf	indf1,0
 19161                           	line	316
 19162                           	
 19163  256C                     l24654:	
 19164                           ;Dimmer_B1.c: 316: DimmerLights->TriggerAdj=command;
 19165  256C  086C               	movf	(_DimmerLights),w
 19166  256D  3E09               	addlw	09h
 19167  256E  0086               	movwf	fsr1l
 19168  256F  3001               	movlw 1	; select bank2/3
 19169  2570  0087               	movwf fsr1h	
 19170                           	
 19171  2571  0822               	movf	(setDimmerLights_TriggerERROR@command),w
 19172  2572  1181               	bcf	indf1,3
 19173  2573  1D03               	skipz
 19174  2574  1581               	bsf	indf1,3
 19175                           	line	317
 19176                           	
 19177  2575                     l24656:	
 19178                           ;Dimmer_B1.c: 317: DimmerLights->AdjGo=command;
 19179  2575  086C               	movf	(_DimmerLights),w
 19180  2576  3E09               	addlw	09h
 19181  2577  0086               	movwf	fsr1l
 19182  2578  3001               	movlw 1	; select bank2/3
 19183  2579  0087               	movwf fsr1h	
 19184                           	
 19185  257A  0822               	movf	(setDimmerLights_TriggerERROR@command),w
 19186  257B  1101               	bcf	indf1,2
 19187  257C  1D03               	skipz
 19188  257D  1501               	bsf	indf1,2
 19189                           	line	318
 19190                           	
 19191  257E                     l5802:	
 19192  257E  0008               	return
 19193                           	opt stack 0
 19194                           GLOBAL	__end_of_setDimmerLights_TriggerERROR
 19195  257F                     	__end_of_setDimmerLights_TriggerERROR:
 19196 ;; =============== function _setDimmerLights_TriggerERROR ends ============
 19197                           
 19198                           	signat	_setDimmerLights_TriggerERROR,8312
 19199                           	global	_DimmerLights_Close
 19200                           psect	text4161,local,class=CODE,delta=2
 19201                           global __ptext4161
 19202  25D7                     __ptext4161:
 19203                           
 19204 ;; *************** function _DimmerLights_Close *****************
 19205 ;; Defined at:
 19206 ;;		line 93 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 19207 ;; Parameters:    Size  Location     Type
 19208 ;;		None
 19209 ;; Auto vars:     Size  Location     Type
 19210 ;;		None
 19211 ;; Return value:  Size  Location     Type
 19212 ;;		None               void
 19213 ;; Registers used:
 19214 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19215 ;; Tracked objects:
 19216 ;;		On entry : 0/0
 19217 ;;		On exit  : 0/0
 19218 ;;		Unchanged: 0/0
 19219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 19220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 19221 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 19222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 19223 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 19224 ;;Total ram usage:        0 bytes
 19225 ;; Hardware stack levels used:    1
 19226 ;; Hardware stack levels required when called:    5
 19227 ;; This function calls:
 19228 ;;		_getDimmerLights_StatusFlag
 19229 ;;		_setLoad_GO
 19230 ;; This function is called by:
 19231 ;;		_DimmerLights_Main
 19232 ;; This function uses a non-reentrant model
 19233 ;;
 19234                           psect	text4161
 19235                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 19236                           	line	93
 19237                           	global	__size_of_DimmerLights_Close
 19238  002D                     	__size_of_DimmerLights_Close	equ	__end_of_DimmerLights_Close-_DimmerLights_Close
 19239                           	
 19240  25D7                     _DimmerLights_Close:	
 19241                           	opt	stack 9
 19242                           ; Regs used in _DimmerLights_Close: [wreg+fsr1l-status,0+pclath+cstack]
 19243                           	line	94
 19244                           	
 19245  25D7                     l24636:	
 19246                           ;Dimmer_B1.c: 94: if(Dimmer->Detect)
 19247  25D7  0021               	movlb 1	; select bank1
 19248  25D8  0839               	movf	(_Dimmer)^080h,w
 19249  25D9  0086               	movwf	fsr1l
 19250  25DA  0187               	clrf fsr1h	
 19251                           	
 19252  25DB  1C01               	btfss	indf1,0
 19253  25DC  2DDE               	goto	u9041
 19254  25DD  2DDF               	goto	u9040
 19255  25DE                     u9041:
 19256  25DE  2E03               	goto	l5764
 19257  25DF                     u9040:
 19258                           	line	96
 19259                           	
 19260  25DF                     l24638:	
 19261                           ;Dimmer_B1.c: 95: {
 19262                           ;Dimmer_B1.c: 96: Dimmer->Detect=0;
 19263  25DF  0839               	movf	(_Dimmer)^080h,w
 19264  25E0  0086               	movwf	fsr1l
 19265  25E1  0187               	clrf fsr1h	
 19266                           	
 19267  25E2  1001               	bcf	indf1,0
 19268                           	line	97
 19269                           	
 19270  25E3                     l24640:	
 19271                           ;Dimmer_B1.c: 97: if(!getDimmerLights_StatusFlag())
 19272  25E3  31A2  223B  31A5   	fcall	_getDimmerLights_StatusFlag
 19273  25E6  3800               	iorlw	0
 19274  25E7  1D03               	skipz
 19275  25E8  2DEA               	goto	u9051
 19276  25E9  2DEB               	goto	u9050
 19277  25EA                     u9051:
 19278  25EA  2E03               	goto	l5764
 19279  25EB                     u9050:
 19280                           	line	99
 19281                           	
 19282  25EB                     l24642:	
 19283                           ;Dimmer_B1.c: 98: {
 19284                           ;Dimmer_B1.c: 99: setLoad_GO(0);
 19285  25EB  3000               	movlw	(0)
 19286  25EC  31A1  2138  31A5   	fcall	_setLoad_GO
 19287                           	line	100
 19288                           	
 19289  25EF                     l24644:	
 19290                           ;Dimmer_B1.c: 100: Memory->GO=1; if(!1) { Memory->Time=1; } ;;
 19291  25EF  0021               	movlb 1	; select bank1
 19292  25F0  086A               	movf	(_Memory)^080h,w
 19293  25F1  3E22               	addlw	022h
 19294  25F2  0086               	movwf	fsr1l
 19295  25F3  3001               	movlw 1	; select bank2/3
 19296  25F4  0087               	movwf fsr1h	
 19297                           	
 19298  25F5  1481               	bsf	indf1,1
 19299  25F6  2E03               	goto	l5764
 19300                           	
 19301  25F7                     l24646:	
 19302  25F7  086A               	movf	(_Memory)^080h,w
 19303  25F8  3E23               	addlw	023h
 19304  25F9  0086               	movwf	fsr1l
 19305  25FA  3001               	movlw 1	; select bank2/3
 19306  25FB  0087               	movwf fsr1h	
 19307                           	
 19308  25FC  3001               	movlw	low(01h)
 19309  25FD  3FC0               	movwi	[0]fsr1
 19310  25FE  3000               	movlw	high(01h)
 19311  25FF  3FC1               	movwi	[1]fsr1
 19312  2600  2E03               	goto	l5764
 19313                           	
 19314  2601                     l5763:	
 19315  2601  2E03               	goto	l5764
 19316                           	line	101
 19317                           	
 19318  2602                     l5762:	
 19319  2602  2E03               	goto	l5764
 19320                           	line	102
 19321                           	
 19322  2603                     l5761:	
 19323                           	line	103
 19324                           	
 19325  2603                     l5764:	
 19326  2603  0008               	return
 19327                           	opt stack 0
 19328                           GLOBAL	__end_of_DimmerLights_Close
 19329  2604                     	__end_of_DimmerLights_Close:
 19330 ;; =============== function _DimmerLights_Close ends ============
 19331                           
 19332                           	signat	_DimmerLights_Close,88
 19333                           	global	_setDimmerLights_Initialization
 19334                           psect	text4162,local,class=CODE,delta=2
 19335                           global __ptext4162
 19336  2604                     __ptext4162:
 19337                           
 19338 ;; *************** function _setDimmerLights_Initialization *****************
 19339 ;; Defined at:
 19340 ;;		line 55 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 19341 ;; Parameters:    Size  Location     Type
 19342 ;;  lights          1    wreg     unsigned char 
 19343 ;; Auto vars:     Size  Location     Type
 19344 ;;  lights          1    3[BANK0 ] unsigned char 
 19345 ;; Return value:  Size  Location     Type
 19346 ;;		None               void
 19347 ;; Registers used:
 19348 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19349 ;; Tracked objects:
 19350 ;;		On entry : 0/0
 19351 ;;		On exit  : 0/0
 19352 ;;		Unchanged: 0/0
 19353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 19354 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 19355 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 19356 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 19357 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 19358 ;;Total ram usage:        2 bytes
 19359 ;; Hardware stack levels used:    1
 19360 ;; Hardware stack levels required when called:    5
 19361 ;; This function calls:
 19362 ;;		_DimmerLightsPointSelect
 19363 ;; This function is called by:
 19364 ;;		_DimmerLights_Initialization
 19365 ;; This function uses a non-reentrant model
 19366 ;;
 19367                           psect	text4162
 19368                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 19369                           	line	55
 19370                           	global	__size_of_setDimmerLights_Initialization
 19371  002E                     	__size_of_setDimmerLights_Initialization	equ	__end_of_setDimmerLights_Initialization-_s
                                 etDimmerLights_Initialization
 19372                           	
 19373  2604                     _setDimmerLights_Initialization:	
 19374                           	opt	stack 9
 19375                           ; Regs used in _setDimmerLights_Initialization: [wreg+fsr1l-status,0+pclath+cstack]
 19376                           ;setDimmerLights_Initialization@lights stored from wreg
 19377  2604  0020               	movlb 0	; select bank0
 19378  2605  00A3               	movwf	(setDimmerLights_Initialization@lights)
 19379                           	line	56
 19380                           	
 19381  2606                     l22942:	
 19382                           ;Dimmer_B1.c: 56: DimmerLightsPointSelect(lights);
 19383  2606  0823               	movf	(setDimmerLights_Initialization@lights),w
 19384  2607  31A1  21E6  31A6   	fcall	_DimmerLightsPointSelect
 19385                           	line	57
 19386                           	
 19387  260A                     l22944:	
 19388                           ;Dimmer_B1.c: 57: DimmerLights->Clear=1;
 19389  260A  0020               	movlb 0	; select bank0
 19390  260B  086C               	movf	(_DimmerLights),w
 19391  260C  3E0C               	addlw	0Ch
 19392  260D  0086               	movwf	fsr1l
 19393  260E  3001               	movlw 1	; select bank2/3
 19394  260F  0087               	movwf fsr1h	
 19395                           	
 19396  2610  1401               	bsf	indf1,0
 19397                           	line	63
 19398                           	
 19399  2611                     l22946:	
 19400                           ;Dimmer_B1.c: 63: DimmerLights->MaxmumValue=((char)((100-55)*1.5));
 19401  2611  3043               	movlw	(043h)
 19402  2612  00A2               	movwf	(??_setDimmerLights_Initialization+0)+0
 19403  2613  086C               	movf	(_DimmerLights),w
 19404  2614  3E05               	addlw	05h
 19405  2615  0086               	movwf	fsr1l
 19406  2616  3001               	movlw 1	; select bank2/3
 19407  2617  0087               	movwf fsr1h	
 19408                           	
 19409  2618  0822               	movf	(??_setDimmerLights_Initialization+0)+0,w
 19410  2619  0081               	movwf	indf1
 19411                           	line	64
 19412                           	
 19413  261A                     l22948:	
 19414                           ;Dimmer_B1.c: 64: DimmerLights->MinimumValue=((char)((100-20)*1.5));
 19415  261A  3078               	movlw	(078h)
 19416  261B  00A2               	movwf	(??_setDimmerLights_Initialization+0)+0
 19417  261C  086C               	movf	(_DimmerLights),w
 19418  261D  3E06               	addlw	06h
 19419  261E  0086               	movwf	fsr1l
 19420  261F  3001               	movlw 1	; select bank2/3
 19421  2620  0087               	movwf fsr1h	
 19422                           	
 19423  2621  0822               	movf	(??_setDimmerLights_Initialization+0)+0,w
 19424  2622  0081               	movwf	indf1
 19425                           	line	74
 19426                           	
 19427  2623                     l22950:	
 19428                           ;Dimmer_B1.c: 74: DimmerLights->DimmingValue=DimmerLights->MinimumValue;
 19429  2623  086C               	movf	(_DimmerLights),w
 19430  2624  3E06               	addlw	06h
 19431  2625  0086               	movwf	fsr1l
 19432  2626  3001               	movlw 1	; select bank2/3
 19433  2627  0087               	movwf fsr1h	
 19434                           	
 19435  2628  0801               	movf	indf1,w
 19436  2629  00A2               	movwf	(??_setDimmerLights_Initialization+0)+0
 19437  262A  086C               	movf	(_DimmerLights),w
 19438  262B  3E04               	addlw	04h
 19439  262C  0086               	movwf	fsr1l
 19440  262D  3001               	movlw 1	; select bank2/3
 19441  262E  0087               	movwf fsr1h	
 19442                           	
 19443  262F  0822               	movf	(??_setDimmerLights_Initialization+0)+0,w
 19444  2630  0081               	movwf	indf1
 19445                           	line	90
 19446                           	
 19447  2631                     l5758:	
 19448  2631  0008               	return
 19449                           	opt stack 0
 19450                           GLOBAL	__end_of_setDimmerLights_Initialization
 19451  2632                     	__end_of_setDimmerLights_Initialization:
 19452 ;; =============== function _setDimmerLights_Initialization ends ============
 19453                           
 19454                           	signat	_setDimmerLights_Initialization,4216
 19455                           	global	_setDelayOff_GO
 19456                           psect	text4163,local,class=CODE,delta=2
 19457                           global __ptext4163
 19458  1F0E                     __ptext4163:
 19459                           
 19460 ;; *************** function _setDelayOff_GO *****************
 19461 ;; Defined at:
 19462 ;;		line 93 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\DelayOff_B1.c"
 19463 ;; Parameters:    Size  Location     Type
 19464 ;;  sw              1    wreg     unsigned char 
 19465 ;;  command         1    3[BANK0 ] unsigned char 
 19466 ;;  value           1    4[BANK0 ] unsigned char 
 19467 ;; Auto vars:     Size  Location     Type
 19468 ;;  sw              1    7[BANK0 ] unsigned char 
 19469 ;; Return value:  Size  Location     Type
 19470 ;;		None               void
 19471 ;; Registers used:
 19472 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19473 ;; Tracked objects:
 19474 ;;		On entry : 0/0
 19475 ;;		On exit  : 0/0
 19476 ;;		Unchanged: 0/0
 19477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 19478 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 19479 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 19480 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 19481 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
       0       0
 19482 ;;Total ram usage:        5 bytes
 19483 ;; Hardware stack levels used:    1
 19484 ;; Hardware stack levels required when called:    5
 19485 ;; This function calls:
 19486 ;;		_DelayOffPointSelect
 19487 ;;		_DelayTimejudge
 19488 ;; This function is called by:
 19489 ;;		_setRFSW_Control
 19490 ;;		_Sw_DimmerOffFunc
 19491 ;; This function uses a non-reentrant model
 19492 ;;
 19493                           psect	text4163
 19494                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\DelayOff_B1.c"
 19495                           	line	93
 19496                           	global	__size_of_setDelayOff_GO
 19497  0079                     	__size_of_setDelayOff_GO	equ	__end_of_setDelayOff_GO-_setDelayOff_GO
 19498                           	
 19499  1F0E                     _setDelayOff_GO:	
 19500                           	opt	stack 5
 19501                           ; Regs used in _setDelayOff_GO: [wreg+fsr1l-status,0+pclath+cstack]
 19502                           ;setDelayOff_GO@sw stored from wreg
 19503  1F0E  0020               	movlb 0	; select bank0
 19504  1F0F  00A7               	movwf	(setDelayOff_GO@sw)
 19505                           	line	94
 19506                           	
 19507  1F10                     l22914:	
 19508                           ;DelayOff_B1.c: 94: DelayOffPointSelect(sw);
 19509  1F10  0827               	movf	(setDelayOff_GO@sw),w
 19510  1F11  31A2  222C  319F   	fcall	_DelayOffPointSelect
 19511                           	line	95
 19512                           	
 19513  1F14                     l22916:	
 19514                           ;DelayOff_B1.c: 95: if(DelayOff->Enable)
 19515  1F14  0021               	movlb 1	; select bank1
 19516  1F15  0838               	movf	(_DelayOff)^080h,w
 19517  1F16  0086               	movwf	fsr1l
 19518  1F17  0187               	clrf fsr1h	
 19519                           	
 19520  1F18  1C01               	btfss	indf1,0
 19521  1F19  2F1B               	goto	u6381
 19522  1F1A  2F1C               	goto	u6380
 19523  1F1B                     u6381:
 19524  1F1B  2F86               	goto	l4600
 19525  1F1C                     u6380:
 19526                           	line	97
 19527                           	
 19528  1F1C                     l22918:	
 19529                           ;DelayOff_B1.c: 96: {
 19530                           ;DelayOff_B1.c: 97: DelayOff->GO=command;
 19531  1F1C  0838               	movf	(_DelayOff)^080h,w
 19532  1F1D  0086               	movwf	fsr1l
 19533  1F1E  0187               	clrf fsr1h	
 19534                           	
 19535  1F1F  0020               	movlb 0	; select bank0
 19536  1F20  0823               	movf	(setDelayOff_GO@command),w
 19537  1F21  1081               	bcf	indf1,1
 19538  1F22  1D03               	skipz
 19539  1F23  1481               	bsf	indf1,1
 19540                           	line	98
 19541                           	
 19542  1F24                     l22920:	
 19543                           ;DelayOff_B1.c: 98: if(command)
 19544  1F24  0823               	movf	(setDelayOff_GO@command),w
 19545  1F25  1D03               	skipz
 19546  1F26  2F28               	goto	u6390
 19547  1F27  2F67               	goto	l22934
 19548  1F28                     u6390:
 19549                           	line	100
 19550                           	
 19551  1F28                     l22922:	
 19552                           ;DelayOff_B1.c: 99: {
 19553                           ;DelayOff_B1.c: 100: DelayOff->Value=DelayTimejudge(value);
 19554  1F28  0824               	movf	(setDelayOff_GO@value),w
 19555  1F29  319B  23A4  319F   	fcall	_DelayTimejudge
 19556  1F2C  0020               	movlb 0	; select bank0
 19557  1F2D  00A5               	movwf	(??_setDelayOff_GO+0)+0
 19558  1F2E  0021               	movlb 1	; select bank1
 19559  1F2F  0838               	movf	(_DelayOff)^080h,w
 19560  1F30  3E01               	addlw	01h
 19561  1F31  0086               	movwf	fsr1l
 19562  1F32  0187               	clrf fsr1h	
 19563                           	
 19564  1F33  0020               	movlb 0	; select bank0
 19565  1F34  0825               	movf	(??_setDelayOff_GO+0)+0,w
 19566  1F35  0081               	movwf	indf1
 19567                           	line	101
 19568                           	
 19569  1F36                     l22924:	
 19570                           ;DelayOff_B1.c: 101: if(((value%16)==5 || !(value%16)) && value <= 0x25)
 19571  1F36  300F               	movlw	(0Fh)
 19572  1F37  0524               	andwf	(setDelayOff_GO@value),w
 19573  1F38  00A5               	movwf	(??_setDelayOff_GO+0)+0
 19574  1F39  0825               	movf	0+(??_setDelayOff_GO+0)+0,w
 19575  1F3A  3A05               	xorlw	05h&0ffh
 19576  1F3B  1903               	skipnz
 19577  1F3C  2F3E               	goto	u6401
 19578  1F3D  2F3F               	goto	u6400
 19579  1F3E                     u6401:
 19580  1F3E  2F46               	goto	l22928
 19581  1F3F                     u6400:
 19582                           	
 19583  1F3F                     l22926:	
 19584  1F3F  0824               	movf	(setDelayOff_GO@value),w
 19585  1F40  390F               	andlw	0Fh
 19586  1F41  1D03               	btfss	status,2
 19587  1F42  2F44               	goto	u6411
 19588  1F43  2F45               	goto	u6410
 19589  1F44                     u6411:
 19590  1F44  2F59               	goto	l22932
 19591  1F45                     u6410:
 19592  1F45  2F46               	goto	l22928
 19593                           	
 19594  1F46                     l4596:	
 19595                           	
 19596  1F46                     l22928:	
 19597  1F46  3026               	movlw	(026h)
 19598  1F47  0224               	subwf	(setDelayOff_GO@value),w
 19599  1F48  1803               	skipnc
 19600  1F49  2F4B               	goto	u6421
 19601  1F4A  2F4C               	goto	u6420
 19602  1F4B                     u6421:
 19603  1F4B  2F59               	goto	l22932
 19604  1F4C                     u6420:
 19605                           	line	103
 19606                           	
 19607  1F4C                     l22930:	
 19608                           ;DelayOff_B1.c: 102: {
 19609                           ;DelayOff_B1.c: 103: Product->Data[26+sw]=value;
 19610  1F4C  0824               	movf	(setDelayOff_GO@value),w
 19611  1F4D  00A5               	movwf	(??_setDelayOff_GO+0)+0
 19612  1F4E  0827               	movf	(setDelayOff_GO@sw),w
 19613  1F4F  3E1A               	addlw	01Ah
 19614  1F50  076F               	addwf	(_Product),w
 19615  1F51  00A6               	movwf	(??_setDelayOff_GO+1)+0
 19616  1F52  0826               	movf	0+(??_setDelayOff_GO+1)+0,w
 19617  1F53  0086               	movwf	fsr1l
 19618  1F54  3001               	movlw 1	; select bank2/3
 19619  1F55  0087               	movwf fsr1h	
 19620                           	
 19621  1F56  0825               	movf	(??_setDelayOff_GO+0)+0,w
 19622  1F57  0081               	movwf	indf1
 19623                           	line	104
 19624                           ;DelayOff_B1.c: 104: }
 19625  1F58  2F77               	goto	l22938
 19626                           	line	105
 19627                           	
 19628  1F59                     l4594:	
 19629                           	line	107
 19630                           	
 19631  1F59                     l22932:	
 19632                           ;DelayOff_B1.c: 105: else
 19633                           ;DelayOff_B1.c: 106: {
 19634                           ;DelayOff_B1.c: 107: Product->Data[26+sw]=0x05;
 19635  1F59  3005               	movlw	(05h)
 19636  1F5A  00A5               	movwf	(??_setDelayOff_GO+0)+0
 19637  1F5B  0827               	movf	(setDelayOff_GO@sw),w
 19638  1F5C  3E1A               	addlw	01Ah
 19639  1F5D  076F               	addwf	(_Product),w
 19640  1F5E  00A6               	movwf	(??_setDelayOff_GO+1)+0
 19641  1F5F  0826               	movf	0+(??_setDelayOff_GO+1)+0,w
 19642  1F60  0086               	movwf	fsr1l
 19643  1F61  3001               	movlw 1	; select bank2/3
 19644  1F62  0087               	movwf fsr1h	
 19645                           	
 19646  1F63  0825               	movf	(??_setDelayOff_GO+0)+0,w
 19647  1F64  0081               	movwf	indf1
 19648  1F65  2F77               	goto	l22938
 19649                           	line	108
 19650                           	
 19651  1F66                     l4597:	
 19652                           	line	109
 19653                           ;DelayOff_B1.c: 108: }
 19654                           ;DelayOff_B1.c: 109: }
 19655  1F66  2F77               	goto	l22938
 19656                           	line	110
 19657                           	
 19658  1F67                     l4593:	
 19659                           	
 19660  1F67                     l22934:	
 19661                           ;DelayOff_B1.c: 110: else if(!command)
 19662  1F67  08A3               	movf	(setDelayOff_GO@command),f
 19663  1F68  1D03               	skipz
 19664  1F69  2F6B               	goto	u6431
 19665  1F6A  2F6C               	goto	u6430
 19666  1F6B                     u6431:
 19667  1F6B  2F77               	goto	l22938
 19668  1F6C                     u6430:
 19669                           	line	112
 19670                           	
 19671  1F6C                     l22936:	
 19672                           ;DelayOff_B1.c: 111: {
 19673                           ;DelayOff_B1.c: 112: Product->Data[sw+26]=0;
 19674  1F6C  0827               	movf	(setDelayOff_GO@sw),w
 19675  1F6D  3E1A               	addlw	01Ah
 19676  1F6E  076F               	addwf	(_Product),w
 19677  1F6F  00A5               	movwf	(??_setDelayOff_GO+0)+0
 19678  1F70  0825               	movf	0+(??_setDelayOff_GO+0)+0,w
 19679  1F71  0086               	movwf	fsr1l
 19680  1F72  3001               	movlw 1	; select bank2/3
 19681  1F73  0087               	movwf fsr1h	
 19682                           	
 19683  1F74  0181               	clrf	indf1
 19684  1F75  2F77               	goto	l22938
 19685                           	line	113
 19686                           	
 19687  1F76                     l4599:	
 19688  1F76  2F77               	goto	l22938
 19689                           	line	114
 19690                           	
 19691  1F77                     l4598:	
 19692                           	
 19693  1F77                     l22938:	
 19694                           ;DelayOff_B1.c: 113: }
 19695                           ;DelayOff_B1.c: 114: DelayOff->SecondTime=0;
 19696  1F77  0021               	movlb 1	; select bank1
 19697  1F78  0838               	movf	(_DelayOff)^080h,w
 19698  1F79  3E02               	addlw	02h
 19699  1F7A  0086               	movwf	fsr1l
 19700  1F7B  0187               	clrf fsr1h	
 19701                           	
 19702  1F7C  3000               	movlw	low(0)
 19703  1F7D  3FC0               	movwi	[0]fsr1
 19704  1F7E  3000               	movlw	high(0)
 19705  1F7F  3FC1               	movwi	[1]fsr1
 19706                           	line	115
 19707                           	
 19708  1F80                     l22940:	
 19709                           ;DelayOff_B1.c: 115: DelayOff->MinuteTime=0;
 19710  1F80  0838               	movf	(_DelayOff)^080h,w
 19711  1F81  3E04               	addlw	04h
 19712  1F82  0086               	movwf	fsr1l
 19713  1F83  0187               	clrf fsr1h	
 19714                           	
 19715  1F84  0181               	clrf	indf1
 19716  1F85  2F86               	goto	l4600
 19717                           	line	116
 19718                           	
 19719  1F86                     l4592:	
 19720                           	line	117
 19721                           	
 19722  1F86                     l4600:	
 19723  1F86  0008               	return
 19724                           	opt stack 0
 19725                           GLOBAL	__end_of_setDelayOff_GO
 19726  1F87                     	__end_of_setDelayOff_GO:
 19727 ;; =============== function _setDelayOff_GO ends ============
 19728                           
 19729                           	signat	_setDelayOff_GO,12408
 19730                           	global	_setTxData
 19731                           psect	text4164,local,class=CODE,delta=2
 19732                           global __ptext4164
 19733  0B6C                     __ptext4164:
 19734                           
 19735 ;; *************** function _setTxData *****************
 19736 ;; Defined at:
 19737 ;;		line 134 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
 19738 ;; Parameters:    Size  Location     Type
 19739 ;;  rf              1    wreg     unsigned char 
 19740 ;; Auto vars:     Size  Location     Type
 19741 ;;  rf              1    3[BANK0 ] unsigned char 
 19742 ;;  i               1    0        unsigned char 
 19743 ;; Return value:  Size  Location     Type
 19744 ;;		None               void
 19745 ;; Registers used:
 19746 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19747 ;; Tracked objects:
 19748 ;;		On entry : 0/0
 19749 ;;		On exit  : 0/0
 19750 ;;		Unchanged: 0/0
 19751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 19752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 19753 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 19754 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 19755 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 19756 ;;Total ram usage:        2 bytes
 19757 ;; Hardware stack levels used:    1
 19758 ;; Hardware stack levels required when called:    5
 19759 ;; This function calls:
 19760 ;;		_RfPointSelect
 19761 ;; This function is called by:
 19762 ;;		_DlyOff_Main
 19763 ;;		_setDimmerLights_Adj
 19764 ;;		_setControl_Lights_Table
 19765 ;;		_setRFSW_Control
 19766 ;;		_setRFSW_AdjControl
 19767 ;;		_Sw_DimmerOnFunc
 19768 ;;		_Sw_DimmerOffFunc
 19769 ;; This function uses a non-reentrant model
 19770 ;;
 19771                           psect	text4164
 19772                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
 19773                           	line	134
 19774                           	global	__size_of_setTxData
 19775  00F0                     	__size_of_setTxData	equ	__end_of_setTxData-_setTxData
 19776                           	
 19777  0B6C                     _setTxData:	
 19778                           	opt	stack 8
 19779                           ; Regs used in _setTxData: [wreg+fsr1l-status,0+pclath+cstack]
 19780                           ;setTxData@rf stored from wreg
 19781                           	line	136
 19782  0B6C  0020               	movlb 0	; select bank0
 19783  0B6D  00A3               	movwf	(setTxData@rf)
 19784                           	
 19785  0B6E                     l22900:	
 19786                           ;RF_Control_B1.c: 135: char i;
 19787                           ;RF_Control_B1.c: 136: RfPointSelect(rf);
 19788  0B6E  0823               	movf	(setTxData@rf),w
 19789  0B6F  31A2  2202  318B   	fcall	_RfPointSelect
 19790                           	line	137
 19791                           	
 19792  0B72                     l22902:	
 19793                           ;RF_Control_B1.c: 137: if(RF->Enable)
 19794  0B72  087B               	movf	(_RF),w
 19795  0B73  0086               	movwf	fsr1l
 19796  0B74  0187               	clrf fsr1h	
 19797                           	
 19798  0B75  1C01               	btfss	indf1,0
 19799  0B76  2B78               	goto	u6361
 19800  0B77  2B79               	goto	u6360
 19801  0B78                     u6361:
 19802  0B78  2C5B               	goto	l15228
 19803  0B79                     u6360:
 19804                           	line	140
 19805                           	
 19806  0B79                     l22904:	
 19807                           ;RF_Control_B1.c: 138: {
 19808                           ;RF_Control_B1.c: 140: if(!RF->TransceiveGO)
 19809  0B79  087B               	movf	(_RF),w
 19810  0B7A  0086               	movwf	fsr1l
 19811  0B7B  0187               	clrf fsr1h	
 19812                           	
 19813  0B7C  1901               	btfsc	indf1,2
 19814  0B7D  2B7F               	goto	u6371
 19815  0B7E  2B80               	goto	u6370
 19816  0B7F                     u6371:
 19817  0B7F  2C5B               	goto	l15228
 19818  0B80                     u6370:
 19819                           	line	142
 19820                           	
 19821  0B80                     l22906:	
 19822                           ;RF_Control_B1.c: 141: {
 19823                           ;RF_Control_B1.c: 142: RF->TransceiveGO=1;
 19824  0B80  087B               	movf	(_RF),w
 19825  0B81  0086               	movwf	fsr1l
 19826  0B82  0187               	clrf fsr1h	
 19827                           	
 19828  0B83  1501               	bsf	indf1,2
 19829                           	line	151
 19830                           	
 19831  0B84                     l22908:	
 19832                           ;RF_Control_B1.c: 151: RF_Data[0]=0x63;
 19833  0B84  3063               	movlw	(063h)
 19834  0B85  0020               	movlb 0	; select bank0
 19835  0B86  00A2               	movwf	(??_setTxData+0)+0
 19836  0B87  0822               	movf	(??_setTxData+0)+0,w
 19837  0B88  0021               	movlb 1	; select bank1
 19838  0B89  00A0               	movwf	(_RF_Data)^080h
 19839                           	line	152
 19840                           	
 19841  0B8A                     l22910:	
 19842                           ;RF_Control_B1.c: 152: RF_Data[1]=0x02;
 19843  0B8A  3002               	movlw	(02h)
 19844  0B8B  0020               	movlb 0	; select bank0
 19845  0B8C  00A2               	movwf	(??_setTxData+0)+0
 19846  0B8D  0822               	movf	(??_setTxData+0)+0,w
 19847  0B8E  0021               	movlb 1	; select bank1
 19848  0B8F  00A1               	movwf	0+(_RF_Data)^080h+01h
 19849                           	line	153
 19850                           ;RF_Control_B1.c: 153: RF_Data[2]=Product->Data[2];
 19851  0B90  0020               	movlb 0	; select bank0
 19852  0B91  086F               	movf	(_Product),w
 19853  0B92  3E02               	addlw	02h
 19854  0B93  0086               	movwf	fsr1l
 19855  0B94  3001               	movlw 1	; select bank2/3
 19856  0B95  0087               	movwf fsr1h	
 19857                           	
 19858  0B96  0801               	movf	indf1,w
 19859  0B97  00A2               	movwf	(??_setTxData+0)+0
 19860  0B98  0822               	movf	(??_setTxData+0)+0,w
 19861  0B99  0021               	movlb 1	; select bank1
 19862  0B9A  00A2               	movwf	0+(_RF_Data)^080h+02h
 19863                           	line	154
 19864                           ;RF_Control_B1.c: 154: RF_Data[3]=Product->Data[3];
 19865  0B9B  0020               	movlb 0	; select bank0
 19866  0B9C  086F               	movf	(_Product),w
 19867  0B9D  3E03               	addlw	03h
 19868  0B9E  0086               	movwf	fsr1l
 19869  0B9F  3001               	movlw 1	; select bank2/3
 19870  0BA0  0087               	movwf fsr1h	
 19871                           	
 19872  0BA1  0801               	movf	indf1,w
 19873  0BA2  00A2               	movwf	(??_setTxData+0)+0
 19874  0BA3  0822               	movf	(??_setTxData+0)+0,w
 19875  0BA4  0021               	movlb 1	; select bank1
 19876  0BA5  00A3               	movwf	0+(_RF_Data)^080h+03h
 19877                           	line	155
 19878                           ;RF_Control_B1.c: 155: RF_Data[4]=Product->Data[4];
 19879  0BA6  0020               	movlb 0	; select bank0
 19880  0BA7  086F               	movf	(_Product),w
 19881  0BA8  3E04               	addlw	04h
 19882  0BA9  0086               	movwf	fsr1l
 19883  0BAA  3001               	movlw 1	; select bank2/3
 19884  0BAB  0087               	movwf fsr1h	
 19885                           	
 19886  0BAC  0801               	movf	indf1,w
 19887  0BAD  00A2               	movwf	(??_setTxData+0)+0
 19888  0BAE  0822               	movf	(??_setTxData+0)+0,w
 19889  0BAF  0021               	movlb 1	; select bank1
 19890  0BB0  00A4               	movwf	0+(_RF_Data)^080h+04h
 19891                           	line	156
 19892                           ;RF_Control_B1.c: 156: RF_Data[5]=Product->Data[5];
 19893  0BB1  0020               	movlb 0	; select bank0
 19894  0BB2  086F               	movf	(_Product),w
 19895  0BB3  3E05               	addlw	05h
 19896  0BB4  0086               	movwf	fsr1l
 19897  0BB5  3001               	movlw 1	; select bank2/3
 19898  0BB6  0087               	movwf fsr1h	
 19899                           	
 19900  0BB7  0801               	movf	indf1,w
 19901  0BB8  00A2               	movwf	(??_setTxData+0)+0
 19902  0BB9  0822               	movf	(??_setTxData+0)+0,w
 19903  0BBA  0021               	movlb 1	; select bank1
 19904  0BBB  00A5               	movwf	0+(_RF_Data)^080h+05h
 19905                           	line	157
 19906                           ;RF_Control_B1.c: 157: RF_Data[6]=Product->Data[6];
 19907  0BBC  0020               	movlb 0	; select bank0
 19908  0BBD  086F               	movf	(_Product),w
 19909  0BBE  3E06               	addlw	06h
 19910  0BBF  0086               	movwf	fsr1l
 19911  0BC0  3001               	movlw 1	; select bank2/3
 19912  0BC1  0087               	movwf fsr1h	
 19913                           	
 19914  0BC2  0801               	movf	indf1,w
 19915  0BC3  00A2               	movwf	(??_setTxData+0)+0
 19916  0BC4  0822               	movf	(??_setTxData+0)+0,w
 19917  0BC5  0021               	movlb 1	; select bank1
 19918  0BC6  00A6               	movwf	0+(_RF_Data)^080h+06h
 19919                           	line	158
 19920                           ;RF_Control_B1.c: 158: RF_Data[7]=Product->Data[7];
 19921  0BC7  0020               	movlb 0	; select bank0
 19922  0BC8  086F               	movf	(_Product),w
 19923  0BC9  3E07               	addlw	07h
 19924  0BCA  0086               	movwf	fsr1l
 19925  0BCB  3001               	movlw 1	; select bank2/3
 19926  0BCC  0087               	movwf fsr1h	
 19927                           	
 19928  0BCD  0801               	movf	indf1,w
 19929  0BCE  00A2               	movwf	(??_setTxData+0)+0
 19930  0BCF  0822               	movf	(??_setTxData+0)+0,w
 19931  0BD0  0021               	movlb 1	; select bank1
 19932  0BD1  00A7               	movwf	0+(_RF_Data)^080h+07h
 19933                           	line	159
 19934                           ;RF_Control_B1.c: 159: RF_Data[8]=Product->Data[8];
 19935  0BD2  0020               	movlb 0	; select bank0
 19936  0BD3  086F               	movf	(_Product),w
 19937  0BD4  3E08               	addlw	08h
 19938  0BD5  0086               	movwf	fsr1l
 19939  0BD6  3001               	movlw 1	; select bank2/3
 19940  0BD7  0087               	movwf fsr1h	
 19941                           	
 19942  0BD8  0801               	movf	indf1,w
 19943  0BD9  00A2               	movwf	(??_setTxData+0)+0
 19944  0BDA  0822               	movf	(??_setTxData+0)+0,w
 19945  0BDB  0021               	movlb 1	; select bank1
 19946  0BDC  00A8               	movwf	0+(_RF_Data)^080h+08h
 19947                           	line	160
 19948                           ;RF_Control_B1.c: 160: RF_Data[9]=Product->Data[9];
 19949  0BDD  0020               	movlb 0	; select bank0
 19950  0BDE  086F               	movf	(_Product),w
 19951  0BDF  3E09               	addlw	09h
 19952  0BE0  0086               	movwf	fsr1l
 19953  0BE1  3001               	movlw 1	; select bank2/3
 19954  0BE2  0087               	movwf fsr1h	
 19955                           	
 19956  0BE3  0801               	movf	indf1,w
 19957  0BE4  00A2               	movwf	(??_setTxData+0)+0
 19958  0BE5  0822               	movf	(??_setTxData+0)+0,w
 19959  0BE6  0021               	movlb 1	; select bank1
 19960  0BE7  00A9               	movwf	0+(_RF_Data)^080h+09h
 19961                           	line	161
 19962                           ;RF_Control_B1.c: 161: RF_Data[10]=Product->Data[10];
 19963  0BE8  0020               	movlb 0	; select bank0
 19964  0BE9  086F               	movf	(_Product),w
 19965  0BEA  3E0A               	addlw	0Ah
 19966  0BEB  0086               	movwf	fsr1l
 19967  0BEC  3001               	movlw 1	; select bank2/3
 19968  0BED  0087               	movwf fsr1h	
 19969                           	
 19970  0BEE  0801               	movf	indf1,w
 19971  0BEF  00A2               	movwf	(??_setTxData+0)+0
 19972  0BF0  0822               	movf	(??_setTxData+0)+0,w
 19973  0BF1  0021               	movlb 1	; select bank1
 19974  0BF2  00AA               	movwf	0+(_RF_Data)^080h+0Ah
 19975                           	line	162
 19976                           ;RF_Control_B1.c: 162: RF_Data[11]=Product->Data[11];
 19977  0BF3  0020               	movlb 0	; select bank0
 19978  0BF4  086F               	movf	(_Product),w
 19979  0BF5  3E0B               	addlw	0Bh
 19980  0BF6  0086               	movwf	fsr1l
 19981  0BF7  3001               	movlw 1	; select bank2/3
 19982  0BF8  0087               	movwf fsr1h	
 19983                           	
 19984  0BF9  0801               	movf	indf1,w
 19985  0BFA  00A2               	movwf	(??_setTxData+0)+0
 19986  0BFB  0822               	movf	(??_setTxData+0)+0,w
 19987  0BFC  0021               	movlb 1	; select bank1
 19988  0BFD  00AB               	movwf	0+(_RF_Data)^080h+0Bh
 19989                           	line	163
 19990                           ;RF_Control_B1.c: 163: RF_Data[12]=Product->Data[12];
 19991  0BFE  0020               	movlb 0	; select bank0
 19992  0BFF  086F               	movf	(_Product),w
 19993  0C00  3E0C               	addlw	0Ch
 19994  0C01  0086               	movwf	fsr1l
 19995  0C02  3001               	movlw 1	; select bank2/3
 19996  0C03  0087               	movwf fsr1h	
 19997                           	
 19998  0C04  0801               	movf	indf1,w
 19999  0C05  00A2               	movwf	(??_setTxData+0)+0
 20000  0C06  0822               	movf	(??_setTxData+0)+0,w
 20001  0C07  0021               	movlb 1	; select bank1
 20002  0C08  00AC               	movwf	0+(_RF_Data)^080h+0Ch
 20003                           	line	164
 20004                           ;RF_Control_B1.c: 164: RF_Data[13]=Product->Data[13];
 20005  0C09  0020               	movlb 0	; select bank0
 20006  0C0A  086F               	movf	(_Product),w
 20007  0C0B  3E0D               	addlw	0Dh
 20008  0C0C  0086               	movwf	fsr1l
 20009  0C0D  3001               	movlw 1	; select bank2/3
 20010  0C0E  0087               	movwf fsr1h	
 20011                           	
 20012  0C0F  0801               	movf	indf1,w
 20013  0C10  00A2               	movwf	(??_setTxData+0)+0
 20014  0C11  0822               	movf	(??_setTxData+0)+0,w
 20015  0C12  0021               	movlb 1	; select bank1
 20016  0C13  00AD               	movwf	0+(_RF_Data)^080h+0Dh
 20017                           	line	165
 20018                           ;RF_Control_B1.c: 165: RF_Data[14]=Product->Data[14];
 20019  0C14  0020               	movlb 0	; select bank0
 20020  0C15  086F               	movf	(_Product),w
 20021  0C16  3E0E               	addlw	0Eh
 20022  0C17  0086               	movwf	fsr1l
 20023  0C18  3001               	movlw 1	; select bank2/3
 20024  0C19  0087               	movwf fsr1h	
 20025                           	
 20026  0C1A  0801               	movf	indf1,w
 20027  0C1B  00A2               	movwf	(??_setTxData+0)+0
 20028  0C1C  0822               	movf	(??_setTxData+0)+0,w
 20029  0C1D  0021               	movlb 1	; select bank1
 20030  0C1E  00AE               	movwf	0+(_RF_Data)^080h+0Eh
 20031                           	line	166
 20032                           ;RF_Control_B1.c: 166: RF_Data[15]=Product->Data[15];
 20033  0C1F  0020               	movlb 0	; select bank0
 20034  0C20  086F               	movf	(_Product),w
 20035  0C21  3E0F               	addlw	0Fh
 20036  0C22  0086               	movwf	fsr1l
 20037  0C23  3001               	movlw 1	; select bank2/3
 20038  0C24  0087               	movwf fsr1h	
 20039                           	
 20040  0C25  0801               	movf	indf1,w
 20041  0C26  00A2               	movwf	(??_setTxData+0)+0
 20042  0C27  0822               	movf	(??_setTxData+0)+0,w
 20043  0C28  0021               	movlb 1	; select bank1
 20044  0C29  00AF               	movwf	0+(_RF_Data)^080h+0Fh
 20045                           	line	167
 20046                           ;RF_Control_B1.c: 167: RF_Data[16]=Product->Data[16];
 20047  0C2A  0020               	movlb 0	; select bank0
 20048  0C2B  086F               	movf	(_Product),w
 20049  0C2C  3E10               	addlw	010h
 20050  0C2D  0086               	movwf	fsr1l
 20051  0C2E  3001               	movlw 1	; select bank2/3
 20052  0C2F  0087               	movwf fsr1h	
 20053                           	
 20054  0C30  0801               	movf	indf1,w
 20055  0C31  00A2               	movwf	(??_setTxData+0)+0
 20056  0C32  0822               	movf	(??_setTxData+0)+0,w
 20057  0C33  0021               	movlb 1	; select bank1
 20058  0C34  00B0               	movwf	0+(_RF_Data)^080h+010h
 20059                           	line	168
 20060                           ;RF_Control_B1.c: 168: RF_Data[17]=Product->Data[17];
 20061  0C35  0020               	movlb 0	; select bank0
 20062  0C36  086F               	movf	(_Product),w
 20063  0C37  3E11               	addlw	011h
 20064  0C38  0086               	movwf	fsr1l
 20065  0C39  3001               	movlw 1	; select bank2/3
 20066  0C3A  0087               	movwf fsr1h	
 20067                           	
 20068  0C3B  0801               	movf	indf1,w
 20069  0C3C  00A2               	movwf	(??_setTxData+0)+0
 20070  0C3D  0822               	movf	(??_setTxData+0)+0,w
 20071  0C3E  0021               	movlb 1	; select bank1
 20072  0C3F  00B1               	movwf	0+(_RF_Data)^080h+011h
 20073                           	line	169
 20074                           ;RF_Control_B1.c: 169: RF_Data[18]=Product->Data[18];
 20075  0C40  0020               	movlb 0	; select bank0
 20076  0C41  086F               	movf	(_Product),w
 20077  0C42  3E12               	addlw	012h
 20078  0C43  0086               	movwf	fsr1l
 20079  0C44  3001               	movlw 1	; select bank2/3
 20080  0C45  0087               	movwf fsr1h	
 20081                           	
 20082  0C46  0801               	movf	indf1,w
 20083  0C47  00A2               	movwf	(??_setTxData+0)+0
 20084  0C48  0822               	movf	(??_setTxData+0)+0,w
 20085  0C49  0021               	movlb 1	; select bank1
 20086  0C4A  00B2               	movwf	0+(_RF_Data)^080h+012h
 20087                           	line	170
 20088                           ;RF_Control_B1.c: 170: RF_Data[19]=Product->Data[19];
 20089  0C4B  0020               	movlb 0	; select bank0
 20090  0C4C  086F               	movf	(_Product),w
 20091  0C4D  3E13               	addlw	013h
 20092  0C4E  0086               	movwf	fsr1l
 20093  0C4F  3001               	movlw 1	; select bank2/3
 20094  0C50  0087               	movwf fsr1h	
 20095                           	
 20096  0C51  0801               	movf	indf1,w
 20097  0C52  00A2               	movwf	(??_setTxData+0)+0
 20098  0C53  0822               	movf	(??_setTxData+0)+0,w
 20099  0C54  0021               	movlb 1	; select bank1
 20100  0C55  00B3               	movwf	0+(_RF_Data)^080h+013h
 20101                           	line	171
 20102                           	
 20103  0C56                     l22912:	
 20104                           ;RF_Control_B1.c: 171: RF_Data[20]=1;
 20105  0C56  01B4               	clrf	0+(_RF_Data)^080h+014h
 20106  0C57  1403               	bsf	status,0
 20107  0C58  0DB4               	rlf	0+(_RF_Data)^080h+014h,f
 20108  0C59  2C5B               	goto	l15228
 20109                           	line	173
 20110                           	
 20111  0C5A                     l15227:	
 20112  0C5A  2C5B               	goto	l15228
 20113                           	line	175
 20114                           	
 20115  0C5B                     l15226:	
 20116                           	line	176
 20117                           	
 20118  0C5B                     l15228:	
 20119  0C5B  0008               	return
 20120                           	opt stack 0
 20121                           GLOBAL	__end_of_setTxData
 20122  0C5C                     	__end_of_setTxData:
 20123 ;; =============== function _setTxData ends ============
 20124                           
 20125                           	signat	_setTxData,4216
 20126                           	global	_setDimmerLights_Switch
 20127                           psect	text4165,local,class=CODE,delta=2
 20128                           global __ptext4165
 20129  22C8                     __ptext4165:
 20130                           
 20131 ;; *************** function _setDimmerLights_Switch *****************
 20132 ;; Defined at:
 20133 ;;		line 425 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 20134 ;; Parameters:    Size  Location     Type
 20135 ;;  lights          1    wreg     unsigned char 
 20136 ;;  command         1    2[BANK0 ] unsigned char 
 20137 ;; Auto vars:     Size  Location     Type
 20138 ;;  lights          1    3[BANK0 ] unsigned char 
 20139 ;; Return value:  Size  Location     Type
 20140 ;;		None               void
 20141 ;; Registers used:
 20142 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20143 ;; Tracked objects:
 20144 ;;		On entry : 0/0
 20145 ;;		On exit  : 0/0
 20146 ;;		Unchanged: 0/0
 20147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 20148 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 20149 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 20150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 20151 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 20152 ;;Total ram usage:        2 bytes
 20153 ;; Hardware stack levels used:    1
 20154 ;; Hardware stack levels required when called:    5
 20155 ;; This function calls:
 20156 ;;		_DimmerLightsPointSelect
 20157 ;; This function is called by:
 20158 ;;		_DlyOff_Main
 20159 ;;		_setRFSW_Control
 20160 ;;		_Sw_DimmerOnFunc
 20161 ;;		_Sw_DimmerOffFunc
 20162 ;; This function uses a non-reentrant model
 20163 ;;
 20164                           psect	text4165
 20165                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 20166                           	line	425
 20167                           	global	__size_of_setDimmerLights_Switch
 20168  0011                     	__size_of_setDimmerLights_Switch	equ	__end_of_setDimmerLights_Switch-_setDimmerLights_S
                                 witch
 20169                           	
 20170  22C8                     _setDimmerLights_Switch:	
 20171                           	opt	stack 8
 20172                           ; Regs used in _setDimmerLights_Switch: [wreg+fsr1l-status,0+pclath+cstack]
 20173                           ;setDimmerLights_Switch@lights stored from wreg
 20174  22C8  0020               	movlb 0	; select bank0
 20175  22C9  00A3               	movwf	(setDimmerLights_Switch@lights)
 20176                           	line	426
 20177                           	
 20178  22CA                     l24632:	
 20179                           ;Dimmer_B1.c: 426: DimmerLightsPointSelect(lights);
 20180  22CA  0823               	movf	(setDimmerLights_Switch@lights),w
 20181  22CB  31A1  21E6  31A2   	fcall	_DimmerLightsPointSelect
 20182                           	line	427
 20183                           	
 20184  22CE                     l24634:	
 20185                           ;Dimmer_B1.c: 427: DimmerLights->Switch=command;
 20186  22CE  0020               	movlb 0	; select bank0
 20187  22CF  086C               	movf	(_DimmerLights),w
 20188  22D0  3E09               	addlw	09h
 20189  22D1  0086               	movwf	fsr1l
 20190  22D2  3001               	movlw 1	; select bank2/3
 20191  22D3  0087               	movwf fsr1h	
 20192                           	
 20193  22D4  0822               	movf	(setDimmerLights_Switch@command),w
 20194  22D5  1001               	bcf	indf1,0
 20195  22D6  1D03               	skipz
 20196  22D7  1401               	bsf	indf1,0
 20197                           	line	428
 20198                           	
 20199  22D8                     l5827:	
 20200  22D8  0008               	return
 20201                           	opt stack 0
 20202                           GLOBAL	__end_of_setDimmerLights_Switch
 20203  22D9                     	__end_of_setDimmerLights_Switch:
 20204 ;; =============== function _setDimmerLights_Switch ends ============
 20205                           
 20206                           	signat	_setDimmerLights_Switch,8312
 20207                           	global	_setDimmerLights_Trigger
 20208                           psect	text4166,local,class=CODE,delta=2
 20209                           global __ptext4166
 20210  22B7                     __ptext4166:
 20211                           
 20212 ;; *************** function _setDimmerLights_Trigger *****************
 20213 ;; Defined at:
 20214 ;;		line 435 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 20215 ;; Parameters:    Size  Location     Type
 20216 ;;  lights          1    wreg     unsigned char 
 20217 ;;  command         1    2[BANK0 ] unsigned char 
 20218 ;; Auto vars:     Size  Location     Type
 20219 ;;  lights          1    3[BANK0 ] unsigned char 
 20220 ;; Return value:  Size  Location     Type
 20221 ;;		None               void
 20222 ;; Registers used:
 20223 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20224 ;; Tracked objects:
 20225 ;;		On entry : 0/0
 20226 ;;		On exit  : 0/0
 20227 ;;		Unchanged: 0/0
 20228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 20229 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 20230 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 20231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 20232 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 20233 ;;Total ram usage:        2 bytes
 20234 ;; Hardware stack levels used:    1
 20235 ;; Hardware stack levels required when called:    5
 20236 ;; This function calls:
 20237 ;;		_DimmerLightsPointSelect
 20238 ;; This function is called by:
 20239 ;;		_DlyOff_Main
 20240 ;;		_setRFSW_Control
 20241 ;;		_Sw_DimmerOnFunc
 20242 ;;		_Sw_DimmerOffFunc
 20243 ;; This function uses a non-reentrant model
 20244 ;;
 20245                           psect	text4166
 20246                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 20247                           	line	435
 20248                           	global	__size_of_setDimmerLights_Trigger
 20249  0011                     	__size_of_setDimmerLights_Trigger	equ	__end_of_setDimmerLights_Trigger-_setDimmerLights
                                 _Trigger
 20250                           	
 20251  22B7                     _setDimmerLights_Trigger:	
 20252                           	opt	stack 8
 20253                           ; Regs used in _setDimmerLights_Trigger: [wreg+fsr1l-status,0+pclath+cstack]
 20254                           ;setDimmerLights_Trigger@lights stored from wreg
 20255  22B7  0020               	movlb 0	; select bank0
 20256  22B8  00A3               	movwf	(setDimmerLights_Trigger@lights)
 20257                           	line	436
 20258                           	
 20259  22B9                     l24628:	
 20260                           ;Dimmer_B1.c: 436: DimmerLightsPointSelect(lights);
 20261  22B9  0823               	movf	(setDimmerLights_Trigger@lights),w
 20262  22BA  31A1  21E6  31A2   	fcall	_DimmerLightsPointSelect
 20263                           	line	437
 20264                           	
 20265  22BD                     l24630:	
 20266                           ;Dimmer_B1.c: 437: DimmerLights->Trigger=command;
 20267  22BD  0020               	movlb 0	; select bank0
 20268  22BE  086C               	movf	(_DimmerLights),w
 20269  22BF  3E09               	addlw	09h
 20270  22C0  0086               	movwf	fsr1l
 20271  22C1  3001               	movlw 1	; select bank2/3
 20272  22C2  0087               	movwf fsr1h	
 20273                           	
 20274  22C3  0822               	movf	(setDimmerLights_Trigger@command),w
 20275  22C4  1081               	bcf	indf1,1
 20276  22C5  1D03               	skipz
 20277  22C6  1481               	bsf	indf1,1
 20278                           	line	438
 20279                           	
 20280  22C7                     l5833:	
 20281  22C7  0008               	return
 20282                           	opt stack 0
 20283                           GLOBAL	__end_of_setDimmerLights_Trigger
 20284  22C8                     	__end_of_setDimmerLights_Trigger:
 20285 ;; =============== function _setDimmerLights_Trigger ends ============
 20286                           
 20287                           	signat	_setDimmerLights_Trigger,8312
 20288                           	global	_setRFSW_Status
 20289                           psect	text4167,local,class=CODE,delta=2
 20290                           global __ptext4167
 20291  2297                     __ptext4167:
 20292                           
 20293 ;; *************** function _setRFSW_Status *****************
 20294 ;; Defined at:
 20295 ;;		line 418 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
 20296 ;; Parameters:    Size  Location     Type
 20297 ;;  sw              1    wreg     unsigned char 
 20298 ;;  command         1    2[BANK0 ] unsigned char 
 20299 ;; Auto vars:     Size  Location     Type
 20300 ;;  sw              1    3[BANK0 ] unsigned char 
 20301 ;; Return value:  Size  Location     Type
 20302 ;;		None               void
 20303 ;; Registers used:
 20304 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20305 ;; Tracked objects:
 20306 ;;		On entry : 0/0
 20307 ;;		On exit  : 0/0
 20308 ;;		Unchanged: 0/0
 20309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 20310 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 20311 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 20312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 20313 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 20314 ;;Total ram usage:        2 bytes
 20315 ;; Hardware stack levels used:    1
 20316 ;; Hardware stack levels required when called:    5
 20317 ;; This function calls:
 20318 ;;		_RfSWPointSelect
 20319 ;; This function is called by:
 20320 ;;		_DlyOff_Main
 20321 ;;		_setDimmerLights_ERROR
 20322 ;;		_setControl_Lights_Table
 20323 ;;		_Sw_DimmerOnFunc
 20324 ;;		_Sw_DimmerAdjFunc
 20325 ;; This function uses a non-reentrant model
 20326 ;;
 20327                           psect	text4167
 20328                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
 20329                           	line	418
 20330                           	global	__size_of_setRFSW_Status
 20331  0010                     	__size_of_setRFSW_Status	equ	__end_of_setRFSW_Status-_setRFSW_Status
 20332                           	
 20333  2297                     _setRFSW_Status:	
 20334                           	opt	stack 8
 20335                           ; Regs used in _setRFSW_Status: [wreg+fsr1l-status,0+pclath+cstack]
 20336                           ;setRFSW_Status@sw stored from wreg
 20337  2297  0020               	movlb 0	; select bank0
 20338  2298  00A3               	movwf	(setRFSW_Status@sw)
 20339                           	line	419
 20340                           	
 20341  2299                     l24624:	
 20342                           ;RF_Control_B1.c: 419: RfSWPointSelect(sw);
 20343  2299  0823               	movf	(setRFSW_Status@sw),w
 20344  229A  31A2  224A  31A2   	fcall	_RfSWPointSelect
 20345                           	line	420
 20346                           	
 20347  229D                     l24626:	
 20348                           ;RF_Control_B1.c: 420: RFSW->Status=command;
 20349  229D  0021               	movlb 1	; select bank1
 20350  229E  083C               	movf	(_RFSW)^080h,w
 20351  229F  0086               	movwf	fsr1l
 20352  22A0  0187               	clrf fsr1h	
 20353                           	
 20354  22A1  0020               	movlb 0	; select bank0
 20355  22A2  0822               	movf	(setRFSW_Status@command),w
 20356  22A3  1001               	bcf	indf1,0
 20357  22A4  1D03               	skipz
 20358  22A5  1401               	bsf	indf1,0
 20359                           	line	421
 20360                           	
 20361  22A6                     l15283:	
 20362  22A6  0008               	return
 20363                           	opt stack 0
 20364                           GLOBAL	__end_of_setRFSW_Status
 20365  22A7                     	__end_of_setRFSW_Status:
 20366 ;; =============== function _setRFSW_Status ends ============
 20367                           
 20368                           	signat	_setRFSW_Status,8312
 20369                           	global	_setSw_Status
 20370                           psect	text4168,local,class=CODE,delta=2
 20371                           global __ptext4168
 20372  2287                     __ptext4168:
 20373                           
 20374 ;; *************** function _setSw_Status *****************
 20375 ;; Defined at:
 20376 ;;		line 107 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Switch_B1.c"
 20377 ;; Parameters:    Size  Location     Type
 20378 ;;  sw              1    wreg     unsigned char 
 20379 ;;  command         1    2[BANK0 ] unsigned char 
 20380 ;; Auto vars:     Size  Location     Type
 20381 ;;  sw              1    3[BANK0 ] unsigned char 
 20382 ;; Return value:  Size  Location     Type
 20383 ;;		None               void
 20384 ;; Registers used:
 20385 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20386 ;; Tracked objects:
 20387 ;;		On entry : 0/0
 20388 ;;		On exit  : 0/0
 20389 ;;		Unchanged: 0/0
 20390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 20391 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 20392 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 20393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 20394 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 20395 ;;Total ram usage:        2 bytes
 20396 ;; Hardware stack levels used:    1
 20397 ;; Hardware stack levels required when called:    5
 20398 ;; This function calls:
 20399 ;;		_SwPointSelect
 20400 ;; This function is called by:
 20401 ;;		_DlyOff_Main
 20402 ;;		_setDimmerLights_ERROR
 20403 ;;		_setControl_Lights_Table
 20404 ;;		_setRFSW_Control
 20405 ;; This function uses a non-reentrant model
 20406 ;;
 20407                           psect	text4168
 20408                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Switch_B1.c"
 20409                           	line	107
 20410                           	global	__size_of_setSw_Status
 20411  0010                     	__size_of_setSw_Status	equ	__end_of_setSw_Status-_setSw_Status
 20412                           	
 20413  2287                     _setSw_Status:	
 20414                           	opt	stack 8
 20415                           ; Regs used in _setSw_Status: [wreg+fsr1l-status,0+pclath+cstack]
 20416                           ;setSw_Status@sw stored from wreg
 20417  2287  0020               	movlb 0	; select bank0
 20418  2288  00A3               	movwf	(setSw_Status@sw)
 20419                           	line	108
 20420                           	
 20421  2289                     l24620:	
 20422                           ;Switch_B1.c: 108: SwPointSelect(sw);
 20423  2289  0823               	movf	(setSw_Status@sw),w
 20424  228A  31A2  2210  31A2   	fcall	_SwPointSelect
 20425                           	line	109
 20426                           	
 20427  228D                     l24622:	
 20428                           ;Switch_B1.c: 109: Sw->Status=command;
 20429  228D  0020               	movlb 0	; select bank0
 20430  228E  086E               	movf	(_Sw),w
 20431  228F  0086               	movwf	fsr1l
 20432  2290  3001               	movlw 1	; select bank2/3
 20433  2291  0087               	movwf fsr1h	
 20434                           	
 20435  2292  0822               	movf	(setSw_Status@command),w
 20436  2293  1301               	bcf	indf1,6
 20437  2294  1D03               	skipz
 20438  2295  1701               	bsf	indf1,6
 20439                           	line	110
 20440                           	
 20441  2296                     l16451:	
 20442  2296  0008               	return
 20443                           	opt stack 0
 20444                           GLOBAL	__end_of_setSw_Status
 20445  2297                     	__end_of_setSw_Status:
 20446 ;; =============== function _setSw_Status ends ============
 20447                           
 20448                           	signat	_setSw_Status,8312
 20449                           	global	_DlyOff_Initialization
 20450                           psect	text4169,local,class=CODE,delta=2
 20451                           global __ptext4169
 20452  2165                     __ptext4169:
 20453                           
 20454 ;; *************** function _DlyOff_Initialization *****************
 20455 ;; Defined at:
 20456 ;;		line 61 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\DelayOff_B1.c"
 20457 ;; Parameters:    Size  Location     Type
 20458 ;;  sw              1    wreg     unsigned char 
 20459 ;; Auto vars:     Size  Location     Type
 20460 ;;  sw              1    2[BANK0 ] unsigned char 
 20461 ;; Return value:  Size  Location     Type
 20462 ;;		None               void
 20463 ;; Registers used:
 20464 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20465 ;; Tracked objects:
 20466 ;;		On entry : 0/0
 20467 ;;		On exit  : 0/0
 20468 ;;		Unchanged: 0/0
 20469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 20470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 20471 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 20472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 20473 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 20474 ;;Total ram usage:        1 bytes
 20475 ;; Hardware stack levels used:    1
 20476 ;; Hardware stack levels required when called:    5
 20477 ;; This function calls:
 20478 ;;		_DelayOffPointSelect
 20479 ;; This function is called by:
 20480 ;;		_DelayOff_Initialization
 20481 ;; This function uses a non-reentrant model
 20482 ;;
 20483                           psect	text4169
 20484                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\DelayOff_B1.c"
 20485                           	line	61
 20486                           	global	__size_of_DlyOff_Initialization
 20487  000C                     	__size_of_DlyOff_Initialization	equ	__end_of_DlyOff_Initialization-_DlyOff_Initializati
                                 on
 20488                           	
 20489  2165                     _DlyOff_Initialization:	
 20490                           	opt	stack 9
 20491                           ; Regs used in _DlyOff_Initialization: [wreg+fsr1l-status,0+pclath+cstack]
 20492                           ;DlyOff_Initialization@sw stored from wreg
 20493  2165  0020               	movlb 0	; select bank0
 20494  2166  00A2               	movwf	(DlyOff_Initialization@sw)
 20495                           	line	62
 20496                           	
 20497  2167                     l24616:	
 20498                           ;DelayOff_B1.c: 62: DelayOffPointSelect(sw);
 20499  2167  0822               	movf	(DlyOff_Initialization@sw),w
 20500  2168  31A2  222C  31A1   	fcall	_DelayOffPointSelect
 20501                           	line	63
 20502                           	
 20503  216B                     l24618:	
 20504                           ;DelayOff_B1.c: 63: DelayOff->Enable=1;
 20505  216B  0021               	movlb 1	; select bank1
 20506  216C  0838               	movf	(_DelayOff)^080h,w
 20507  216D  0086               	movwf	fsr1l
 20508  216E  0187               	clrf fsr1h	
 20509                           	
 20510  216F  1401               	bsf	indf1,0
 20511                           	line	64
 20512                           	
 20513  2170                     l4583:	
 20514  2170  0008               	return
 20515                           	opt stack 0
 20516                           GLOBAL	__end_of_DlyOff_Initialization
 20517  2171                     	__end_of_DlyOff_Initialization:
 20518 ;; =============== function _DlyOff_Initialization ends ============
 20519                           
 20520                           	signat	_DlyOff_Initialization,4216
 20521                           	global	_CC2500_WriteREG
 20522                           psect	text4170,local,class=CODE,delta=2
 20523                           global __ptext4170
 20524  23E2                     __ptext4170:
 20525                           
 20526 ;; *************** function _CC2500_WriteREG *****************
 20527 ;; Defined at:
 20528 ;;		line 228 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
 20529 ;; Parameters:    Size  Location     Type
 20530 ;;  w_addr          1    wreg     unsigned char 
 20531 ;;  value           1    2[BANK0 ] unsigned char 
 20532 ;; Auto vars:     Size  Location     Type
 20533 ;;  w_addr          1    4[BANK0 ] unsigned char 
 20534 ;; Return value:  Size  Location     Type
 20535 ;;		None               void
 20536 ;; Registers used:
 20537 ;;		wreg, status,2, status,0, pclath, cstack
 20538 ;; Tracked objects:
 20539 ;;		On entry : 0/0
 20540 ;;		On exit  : 0/0
 20541 ;;		Unchanged: 0/0
 20542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 20543 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 20544 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 20545 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 20546 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 20547 ;;Total ram usage:        3 bytes
 20548 ;; Hardware stack levels used:    1
 20549 ;; Hardware stack levels required when called:    5
 20550 ;; This function calls:
 20551 ;;		_CC2500_WriteByte
 20552 ;; This function is called by:
 20553 ;;		_CC2500_InitSetREG
 20554 ;;		_CC2500_InitPATable
 20555 ;; This function uses a non-reentrant model
 20556 ;;
 20557                           psect	text4170
 20558                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
 20559                           	line	228
 20560                           	global	__size_of_CC2500_WriteREG
 20561  001E                     	__size_of_CC2500_WriteREG	equ	__end_of_CC2500_WriteREG-_CC2500_WriteREG
 20562                           	
 20563  23E2                     _CC2500_WriteREG:	
 20564                           	opt	stack 8
 20565                           ; Regs used in _CC2500_WriteREG: [wreg+status,2+status,0+pclath+cstack]
 20566                           ;CC2500_WriteREG@w_addr stored from wreg
 20567  23E2  0020               	movlb 0	; select bank0
 20568  23E3  00A4               	movwf	(CC2500_WriteREG@w_addr)
 20569                           	line	229
 20570                           	
 20571  23E4                     l22868:	
 20572                           ;CC2500_B1.c: 229: RC4=0;
 20573  23E4  120E               	bcf	(116/8),(116)&7
 20574                           	line	230
 20575                           	
 20576  23E5                     l22870:	
 20577                           ;CC2500_B1.c: 230: SPI0Buffer=w_addr;
 20578  23E5  0824               	movf	(CC2500_WriteREG@w_addr),w
 20579  23E6  00A3               	movwf	(??_CC2500_WriteREG+0)+0
 20580  23E7  0823               	movf	(??_CC2500_WriteREG+0)+0,w
 20581  23E8  0021               	movlb 1	; select bank1
 20582  23E9  00BF               	movwf	(_SPI0Buffer)^080h
 20583                           	line	231
 20584                           ;CC2500_B1.c: 231: while(RC2==1);
 20585  23EA  2BEB               	goto	l2329
 20586                           	
 20587  23EB                     l2330:	
 20588                           	
 20589  23EB                     l2329:	
 20590  23EB  0020               	movlb 0	; select bank0
 20591  23EC  190E               	btfsc	(114/8),(114)&7
 20592  23ED  2BEF               	goto	u6351
 20593  23EE  2BF0               	goto	u6350
 20594  23EF                     u6351:
 20595  23EF  2BEB               	goto	l2329
 20596  23F0                     u6350:
 20597  23F0  2BF1               	goto	l22872
 20598                           	
 20599  23F1                     l2331:	
 20600                           	line	232
 20601                           	
 20602  23F1                     l22872:	
 20603                           ;CC2500_B1.c: 232: CC2500_WriteByte();
 20604  23F1  31A4  2488  31A3   	fcall	_CC2500_WriteByte
 20605                           	line	233
 20606                           	
 20607  23F4                     l22874:	
 20608                           ;CC2500_B1.c: 233: SPI0Buffer=value;
 20609  23F4  0020               	movlb 0	; select bank0
 20610  23F5  0822               	movf	(CC2500_WriteREG@value),w
 20611  23F6  00A3               	movwf	(??_CC2500_WriteREG+0)+0
 20612  23F7  0823               	movf	(??_CC2500_WriteREG+0)+0,w
 20613  23F8  0021               	movlb 1	; select bank1
 20614  23F9  00BF               	movwf	(_SPI0Buffer)^080h
 20615                           	line	234
 20616                           	
 20617  23FA                     l22876:	
 20618                           ;CC2500_B1.c: 234: CC2500_WriteByte();
 20619  23FA  31A4  2488  31A3   	fcall	_CC2500_WriteByte
 20620                           	line	235
 20621                           	
 20622  23FD                     l22878:	
 20623                           ;CC2500_B1.c: 235: RC4=1;
 20624  23FD  0020               	movlb 0	; select bank0
 20625  23FE  160E               	bsf	(116/8),(116)&7
 20626                           	line	236
 20627                           	
 20628  23FF                     l2332:	
 20629  23FF  0008               	return
 20630                           	opt stack 0
 20631                           GLOBAL	__end_of_CC2500_WriteREG
 20632  2400                     	__end_of_CC2500_WriteREG:
 20633 ;; =============== function _CC2500_WriteREG ends ============
 20634                           
 20635                           	signat	_CC2500_WriteREG,8312
 20636                           	global	_CC2500_PowerRST
 20637                           psect	text4171,local,class=CODE,delta=2
 20638                           global __ptext4171
 20639  271F                     __ptext4171:
 20640                           
 20641 ;; *************** function _CC2500_PowerRST *****************
 20642 ;; Defined at:
 20643 ;;		line 111 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
 20644 ;; Parameters:    Size  Location     Type
 20645 ;;		None
 20646 ;; Auto vars:     Size  Location     Type
 20647 ;;		None
 20648 ;; Return value:  Size  Location     Type
 20649 ;;		None               void
 20650 ;; Registers used:
 20651 ;;		wreg, status,2, status,0, pclath, cstack
 20652 ;; Tracked objects:
 20653 ;;		On entry : 0/0
 20654 ;;		On exit  : 0/0
 20655 ;;		Unchanged: 0/0
 20656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 20657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 20658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 20659 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 20660 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 20661 ;;Total ram usage:        1 bytes
 20662 ;; Hardware stack levels used:    1
 20663 ;; Hardware stack levels required when called:    5
 20664 ;; This function calls:
 20665 ;;		_DelayTime_1us
 20666 ;;		_CC2500_WriteByte
 20667 ;; This function is called by:
 20668 ;;		_CC2500_PowerOnInitial
 20669 ;; This function uses a non-reentrant model
 20670 ;;
 20671                           psect	text4171
 20672                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
 20673                           	line	111
 20674                           	global	__size_of_CC2500_PowerRST
 20675  0037                     	__size_of_CC2500_PowerRST	equ	__end_of_CC2500_PowerRST-_CC2500_PowerRST
 20676                           	
 20677  271F                     _CC2500_PowerRST:	
 20678                           	opt	stack 9
 20679                           ; Regs used in _CC2500_PowerRST: [wreg+status,2+status,0+pclath+cstack]
 20680                           	line	112
 20681                           	
 20682  271F                     l24602:	
 20683                           ;CC2500_B1.c: 112: RC1=0;
 20684  271F  0020               	movlb 0	; select bank0
 20685  2720  108E               	bcf	(113/8),(113)&7
 20686                           	line	113
 20687                           ;CC2500_B1.c: 113: RC0=0;
 20688  2721  100E               	bcf	(112/8),(112)&7
 20689                           	line	114
 20690                           ;CC2500_B1.c: 114: RC4=1;
 20691  2722  160E               	bsf	(116/8),(116)&7
 20692                           	line	115
 20693                           	
 20694  2723                     l24604:	
 20695                           ;CC2500_B1.c: 115: DelayTime_1us(10);
 20696  2723  300A               	movlw	low(0Ah)
 20697  2724  00A0               	movwf	(?_DelayTime_1us)
 20698  2725  3000               	movlw	high(0Ah)
 20699  2726  00A1               	movwf	((?_DelayTime_1us))+1
 20700  2727  31A6  26EE  31A7   	fcall	_DelayTime_1us
 20701                           	line	116
 20702                           	
 20703  272A                     l24606:	
 20704                           ;CC2500_B1.c: 116: RC4=0;
 20705  272A  0020               	movlb 0	; select bank0
 20706  272B  120E               	bcf	(116/8),(116)&7
 20707                           	line	117
 20708                           ;CC2500_B1.c: 117: DelayTime_1us(10);
 20709  272C  300A               	movlw	low(0Ah)
 20710  272D  00A0               	movwf	(?_DelayTime_1us)
 20711  272E  3000               	movlw	high(0Ah)
 20712  272F  00A1               	movwf	((?_DelayTime_1us))+1
 20713  2730  31A6  26EE  31A7   	fcall	_DelayTime_1us
 20714                           	line	118
 20715                           	
 20716  2733                     l24608:	
 20717                           ;CC2500_B1.c: 118: RC4=1;
 20718  2733  0020               	movlb 0	; select bank0
 20719  2734  160E               	bsf	(116/8),(116)&7
 20720                           	line	119
 20721                           ;CC2500_B1.c: 119: DelayTime_1us(40);
 20722  2735  3028               	movlw	low(028h)
 20723  2736  00A0               	movwf	(?_DelayTime_1us)
 20724  2737  3000               	movlw	high(028h)
 20725  2738  00A1               	movwf	((?_DelayTime_1us))+1
 20726  2739  31A6  26EE  31A7   	fcall	_DelayTime_1us
 20727                           	line	120
 20728                           	
 20729  273C                     l24610:	
 20730                           ;CC2500_B1.c: 120: RC4=0;
 20731  273C  0020               	movlb 0	; select bank0
 20732  273D  120E               	bcf	(116/8),(116)&7
 20733                           	line	121
 20734                           	
 20735  273E                     l24612:	
 20736                           ;CC2500_B1.c: 121: SPI0Buffer=0x30;
 20737  273E  3030               	movlw	(030h)
 20738  273F  00A6               	movwf	(??_CC2500_PowerRST+0)+0
 20739  2740  0826               	movf	(??_CC2500_PowerRST+0)+0,w
 20740  2741  0021               	movlb 1	; select bank1
 20741  2742  00BF               	movwf	(_SPI0Buffer)^080h
 20742                           	line	122
 20743                           ;CC2500_B1.c: 122: while(RC2==1);
 20744  2743  2F44               	goto	l2284
 20745                           	
 20746  2744                     l2285:	
 20747                           	
 20748  2744                     l2284:	
 20749  2744  0020               	movlb 0	; select bank0
 20750  2745  190E               	btfsc	(114/8),(114)&7
 20751  2746  2F48               	goto	u9021
 20752  2747  2F49               	goto	u9020
 20753  2748                     u9021:
 20754  2748  2F44               	goto	l2284
 20755  2749                     u9020:
 20756  2749  2F4A               	goto	l24614
 20757                           	
 20758  274A                     l2286:	
 20759                           	line	123
 20760                           	
 20761  274A                     l24614:	
 20762                           ;CC2500_B1.c: 123: CC2500_WriteByte();
 20763  274A  31A4  2488  31A7   	fcall	_CC2500_WriteByte
 20764                           	line	124
 20765                           ;CC2500_B1.c: 124: while(RC2==1);
 20766  274D  2F4E               	goto	l2287
 20767                           	
 20768  274E                     l2288:	
 20769                           	
 20770  274E                     l2287:	
 20771  274E  0020               	movlb 0	; select bank0
 20772  274F  190E               	btfsc	(114/8),(114)&7
 20773  2750  2F52               	goto	u9031
 20774  2751  2F53               	goto	u9030
 20775  2752                     u9031:
 20776  2752  2F4E               	goto	l2287
 20777  2753                     u9030:
 20778                           	
 20779  2753                     l2289:	
 20780                           	line	125
 20781                           ;CC2500_B1.c: 125: RC0=0;
 20782  2753  100E               	bcf	(112/8),(112)&7
 20783                           	line	126
 20784                           ;CC2500_B1.c: 126: RC4=1;
 20785  2754  160E               	bsf	(116/8),(116)&7
 20786                           	line	127
 20787                           	
 20788  2755                     l2290:	
 20789  2755  0008               	return
 20790                           	opt stack 0
 20791                           GLOBAL	__end_of_CC2500_PowerRST
 20792  2756                     	__end_of_CC2500_PowerRST:
 20793 ;; =============== function _CC2500_PowerRST ends ============
 20794                           
 20795                           	signat	_CC2500_PowerRST,88
 20796                           	global	_setRF_RxStatus
 20797                           psect	text4172,local,class=CODE,delta=2
 20798                           global __ptext4172
 20799  2259                     __ptext4172:
 20800                           
 20801 ;; *************** function _setRF_RxStatus *****************
 20802 ;; Defined at:
 20803 ;;		line 44 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
 20804 ;; Parameters:    Size  Location     Type
 20805 ;;  rf              1    wreg     unsigned char 
 20806 ;;  command         1    2[BANK0 ] unsigned char 
 20807 ;; Auto vars:     Size  Location     Type
 20808 ;;  rf              1    3[BANK0 ] unsigned char 
 20809 ;; Return value:  Size  Location     Type
 20810 ;;		None               void
 20811 ;; Registers used:
 20812 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20813 ;; Tracked objects:
 20814 ;;		On entry : 0/0
 20815 ;;		On exit  : 0/0
 20816 ;;		Unchanged: 0/0
 20817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 20818 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 20819 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 20820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 20821 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 20822 ;;Total ram usage:        2 bytes
 20823 ;; Hardware stack levels used:    1
 20824 ;; Hardware stack levels required when called:    5
 20825 ;; This function calls:
 20826 ;;		_RfPointSelect
 20827 ;; This function is called by:
 20828 ;;		_CC2500_RxData
 20829 ;; This function uses a non-reentrant model
 20830 ;;
 20831                           psect	text4172
 20832                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
 20833                           	line	44
 20834                           	global	__size_of_setRF_RxStatus
 20835  000F                     	__size_of_setRF_RxStatus	equ	__end_of_setRF_RxStatus-_setRF_RxStatus
 20836                           	
 20837  2259                     _setRF_RxStatus:	
 20838                           	opt	stack 7
 20839                           ; Regs used in _setRF_RxStatus: [wreg+fsr1l-status,0+pclath+cstack]
 20840                           ;setRF_RxStatus@rf stored from wreg
 20841  2259  0020               	movlb 0	; select bank0
 20842  225A  00A3               	movwf	(setRF_RxStatus@rf)
 20843                           	line	45
 20844                           	
 20845  225B                     l24598:	
 20846                           ;RF_Control_B1.c: 45: RfPointSelect(rf);
 20847  225B  0823               	movf	(setRF_RxStatus@rf),w
 20848  225C  31A2  2202  31A2   	fcall	_RfPointSelect
 20849                           	line	46
 20850                           	
 20851  225F                     l24600:	
 20852                           ;RF_Control_B1.c: 46: RF->RxStatus=command;
 20853  225F  087B               	movf	(_RF),w
 20854  2260  0086               	movwf	fsr1l
 20855  2261  0187               	clrf fsr1h	
 20856                           	
 20857  2262  0020               	movlb 0	; select bank0
 20858  2263  0822               	movf	(setRF_RxStatus@command),w
 20859  2264  1181               	bcf	indf1,3
 20860  2265  1D03               	skipz
 20861  2266  1581               	bsf	indf1,3
 20862                           	line	47
 20863                           	
 20864  2267                     l15204:	
 20865  2267  0008               	return
 20866                           	opt stack 0
 20867                           GLOBAL	__end_of_setRF_RxStatus
 20868  2268                     	__end_of_setRF_RxStatus:
 20869 ;; =============== function _setRF_RxStatus ends ============
 20870                           
 20871                           	signat	_setRF_RxStatus,8312
 20872                           	global	_CC2500_ReadStatus
 20873                           psect	text4173,local,class=CODE,delta=2
 20874                           global __ptext4173
 20875  2400                     __ptext4173:
 20876                           
 20877 ;; *************** function _CC2500_ReadStatus *****************
 20878 ;; Defined at:
 20879 ;;		line 268 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
 20880 ;; Parameters:    Size  Location     Type
 20881 ;;  status_addr     1    wreg     unsigned char 
 20882 ;; Auto vars:     Size  Location     Type
 20883 ;;  status_addr     1    3[BANK0 ] unsigned char 
 20884 ;; Return value:  Size  Location     Type
 20885 ;;		None               void
 20886 ;; Registers used:
 20887 ;;		wreg, status,2, status,0, pclath, cstack
 20888 ;; Tracked objects:
 20889 ;;		On entry : 0/0
 20890 ;;		On exit  : 0/0
 20891 ;;		Unchanged: 0/0
 20892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 20893 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 20894 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 20895 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 20896 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 20897 ;;Total ram usage:        2 bytes
 20898 ;; Hardware stack levels used:    1
 20899 ;; Hardware stack levels required when called:    5
 20900 ;; This function calls:
 20901 ;;		_CC2500_WriteByte
 20902 ;;		_CC2500_ReadByte
 20903 ;; This function is called by:
 20904 ;;		_CC2500_RxData
 20905 ;; This function uses a non-reentrant model
 20906 ;;
 20907                           psect	text4173
 20908                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
 20909                           	line	268
 20910                           	global	__size_of_CC2500_ReadStatus
 20911  0020                     	__size_of_CC2500_ReadStatus	equ	__end_of_CC2500_ReadStatus-_CC2500_ReadStatus
 20912                           	
 20913  2400                     _CC2500_ReadStatus:	
 20914                           	opt	stack 7
 20915                           ; Regs used in _CC2500_ReadStatus: [wreg+status,2+status,0+pclath+cstack]
 20916                           ;CC2500_ReadStatus@status_addr stored from wreg
 20917  2400  0020               	movlb 0	; select bank0
 20918  2401  00A3               	movwf	(CC2500_ReadStatus@status_addr)
 20919                           	line	269
 20920                           	
 20921  2402                     l22840:	
 20922                           ;CC2500_B1.c: 269: RC4=0;
 20923  2402  120E               	bcf	(116/8),(116)&7
 20924                           	line	270
 20925                           	
 20926  2403                     l22842:	
 20927                           ;CC2500_B1.c: 270: SPI0Buffer=status_addr+0xC0;
 20928  2403  0823               	movf	(CC2500_ReadStatus@status_addr),w
 20929  2404  3EC0               	addlw	0C0h
 20930  2405  00A2               	movwf	(??_CC2500_ReadStatus+0)+0
 20931  2406  0822               	movf	(??_CC2500_ReadStatus+0)+0,w
 20932  2407  0021               	movlb 1	; select bank1
 20933  2408  00BF               	movwf	(_SPI0Buffer)^080h
 20934                           	line	272
 20935                           ;CC2500_B1.c: 272: while(RC2==1);
 20936  2409  2C0A               	goto	l2347
 20937                           	
 20938  240A                     l2348:	
 20939                           	
 20940  240A                     l2347:	
 20941  240A  0020               	movlb 0	; select bank0
 20942  240B  190E               	btfsc	(114/8),(114)&7
 20943  240C  2C0E               	goto	u6321
 20944  240D  2C0F               	goto	u6320
 20945  240E                     u6321:
 20946  240E  2C0A               	goto	l2347
 20947  240F                     u6320:
 20948  240F  2C10               	goto	l22844
 20949                           	
 20950  2410                     l2349:	
 20951                           	line	274
 20952                           	
 20953  2410                     l22844:	
 20954                           ;CC2500_B1.c: 274: CC2500_WriteByte();
 20955  2410  31A4  2488  31A4   	fcall	_CC2500_WriteByte
 20956                           	line	275
 20957                           ;CC2500_B1.c: 275: CC2500_ReadByte();
 20958  2413  31A4  24FD  31A4   	fcall	_CC2500_ReadByte
 20959                           	line	276
 20960                           	
 20961  2416                     l22846:	
 20962                           ;CC2500_B1.c: 276: RC4=1;
 20963  2416  0020               	movlb 0	; select bank0
 20964  2417  160E               	bsf	(116/8),(116)&7
 20965                           	line	278
 20966                           	
 20967  2418                     l22848:	
 20968                           ;CC2500_B1.c: 278: s_data=SPI0Buffer;
 20969  2418  0021               	movlb 1	; select bank1
 20970  2419  083F               	movf	(_SPI0Buffer)^080h,w
 20971  241A  0020               	movlb 0	; select bank0
 20972  241B  00A2               	movwf	(??_CC2500_ReadStatus+0)+0
 20973  241C  0822               	movf	(??_CC2500_ReadStatus+0)+0,w
 20974  241D  0021               	movlb 1	; select bank1
 20975  241E  00C3               	movwf	(_s_data)^080h
 20976                           	line	279
 20977                           	
 20978  241F                     l2350:	
 20979  241F  0008               	return
 20980                           	opt stack 0
 20981                           GLOBAL	__end_of_CC2500_ReadStatus
 20982  2420                     	__end_of_CC2500_ReadStatus:
 20983 ;; =============== function _CC2500_ReadStatus ends ============
 20984                           
 20985                           	signat	_CC2500_ReadStatus,4216
 20986                           	global	_CC2500_WriteCommand
 20987                           psect	text4174,local,class=CODE,delta=2
 20988                           global __ptext4174
 20989  236B                     __ptext4174:
 20990                           
 20991 ;; *************** function _CC2500_WriteCommand *****************
 20992 ;; Defined at:
 20993 ;;		line 254 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
 20994 ;; Parameters:    Size  Location     Type
 20995 ;;  command         1    wreg     unsigned char 
 20996 ;; Auto vars:     Size  Location     Type
 20997 ;;  command         1    3[BANK0 ] unsigned char 
 20998 ;; Return value:  Size  Location     Type
 20999 ;;		None               void
 21000 ;; Registers used:
 21001 ;;		wreg, status,2, status,0, pclath, cstack
 21002 ;; Tracked objects:
 21003 ;;		On entry : 0/0
 21004 ;;		On exit  : 0/0
 21005 ;;		Unchanged: 0/0
 21006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 21007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 21008 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 21009 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 21010 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 21011 ;;Total ram usage:        2 bytes
 21012 ;; Hardware stack levels used:    1
 21013 ;; Hardware stack levels required when called:    5
 21014 ;; This function calls:
 21015 ;;		_CC2500_WriteByte
 21016 ;; This function is called by:
 21017 ;;		_CC2500_TxData
 21018 ;;		_CC2500_RxData
 21019 ;;		_CC2500_ClearTXFIFO
 21020 ;;		_CC2500_ClearRXFIFO
 21021 ;;		_CC2500_FrequencyCabr
 21022 ;;		_CC2500_SIDLEMode
 21023 ;;		_setRF_Main
 21024 ;;		_RF_RxDisable
 21025 ;; This function uses a non-reentrant model
 21026 ;;
 21027                           psect	text4174
 21028                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
 21029                           	line	254
 21030                           	global	__size_of_CC2500_WriteCommand
 21031  0015                     	__size_of_CC2500_WriteCommand	equ	__end_of_CC2500_WriteCommand-_CC2500_WriteCommand
 21032                           	
 21033  236B                     _CC2500_WriteCommand:	
 21034                           	opt	stack 7
 21035                           ; Regs used in _CC2500_WriteCommand: [wreg+status,2+status,0+pclath+cstack]
 21036                           ;CC2500_WriteCommand@command stored from wreg
 21037  236B  0020               	movlb 0	; select bank0
 21038  236C  00A3               	movwf	(CC2500_WriteCommand@command)
 21039                           	line	255
 21040                           	
 21041  236D                     l22832:	
 21042                           ;CC2500_B1.c: 255: RC4=0;
 21043  236D  120E               	bcf	(116/8),(116)&7
 21044                           	line	256
 21045                           	
 21046  236E                     l22834:	
 21047                           ;CC2500_B1.c: 256: SPI0Buffer=command;
 21048  236E  0823               	movf	(CC2500_WriteCommand@command),w
 21049  236F  00A2               	movwf	(??_CC2500_WriteCommand+0)+0
 21050  2370  0822               	movf	(??_CC2500_WriteCommand+0)+0,w
 21051  2371  0021               	movlb 1	; select bank1
 21052  2372  00BF               	movwf	(_SPI0Buffer)^080h
 21053                           	line	258
 21054                           ;CC2500_B1.c: 258: while(RC2==1);
 21055  2373  2B74               	goto	l2341
 21056                           	
 21057  2374                     l2342:	
 21058                           	
 21059  2374                     l2341:	
 21060  2374  0020               	movlb 0	; select bank0
 21061  2375  190E               	btfsc	(114/8),(114)&7
 21062  2376  2B78               	goto	u6311
 21063  2377  2B79               	goto	u6310
 21064  2378                     u6311:
 21065  2378  2B74               	goto	l2341
 21066  2379                     u6310:
 21067  2379  2B7A               	goto	l22836
 21068                           	
 21069  237A                     l2343:	
 21070                           	line	260
 21071                           	
 21072  237A                     l22836:	
 21073                           ;CC2500_B1.c: 260: CC2500_WriteByte();
 21074  237A  31A4  2488  31A3   	fcall	_CC2500_WriteByte
 21075                           	line	261
 21076                           	
 21077  237D                     l22838:	
 21078                           ;CC2500_B1.c: 261: RC4=1;
 21079  237D  0020               	movlb 0	; select bank0
 21080  237E  160E               	bsf	(116/8),(116)&7
 21081                           	line	263
 21082                           	
 21083  237F                     l2344:	
 21084  237F  0008               	return
 21085                           	opt stack 0
 21086                           GLOBAL	__end_of_CC2500_WriteCommand
 21087  2380                     	__end_of_CC2500_WriteCommand:
 21088 ;; =============== function _CC2500_WriteCommand ends ============
 21089                           
 21090                           	signat	_CC2500_WriteCommand,4216
 21091                           	global	_setBuz
 21092                           psect	text4175,local,class=CODE,delta=2
 21093                           global __ptext4175
 21094  12C6                     __ptext4175:
 21095                           
 21096 ;; *************** function _setBuz *****************
 21097 ;; Defined at:
 21098 ;;		line 23 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Buzzer_B1.c"
 21099 ;; Parameters:    Size  Location     Type
 21100 ;;  count           1    wreg     unsigned char 
 21101 ;;  time            2    6[BANK0 ] int 
 21102 ;; Auto vars:     Size  Location     Type
 21103 ;;  count           1    9[BANK0 ] unsigned char 
 21104 ;; Return value:  Size  Location     Type
 21105 ;;		None               void
 21106 ;; Registers used:
 21107 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21108 ;; Tracked objects:
 21109 ;;		On entry : 0/0
 21110 ;;		On exit  : 0/0
 21111 ;;		Unchanged: 0/0
 21112 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 21113 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 21114 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 21115 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 21116 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 21117 ;;Total ram usage:        4 bytes
 21118 ;; Hardware stack levels used:    1
 21119 ;; Hardware stack levels required when called:    5
 21120 ;; This function calls:
 21121 ;;		___wmul
 21122 ;; This function is called by:
 21123 ;;		_DlyOff_Main
 21124 ;;		_setDimmerLights_Main
 21125 ;;		_DimmerLights_Exceptions
 21126 ;;		_MainT
 21127 ;;		_setOverTemp_Exceptions
 21128 ;;		_setLog_Code
 21129 ;;		_setControl_Lights_Table
 21130 ;;		_setRFSW_Control
 21131 ;;		_setSw_Main
 21132 ;;		_Sw_DimmerOnFunc
 21133 ;; This function uses a non-reentrant model
 21134 ;;
 21135                           psect	text4175
 21136                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Buzzer_B1.c"
 21137                           	line	23
 21138                           	global	__size_of_setBuz
 21139  0083                     	__size_of_setBuz	equ	__end_of_setBuz-_setBuz
 21140                           	
 21141  12C6                     _setBuz:	
 21142                           	opt	stack 8
 21143                           ; Regs used in _setBuz: [wreg+fsr1l-status,0+pclath+cstack]
 21144                           ;setBuz@count stored from wreg
 21145  12C6  0020               	movlb 0	; select bank0
 21146  12C7  00A9               	movwf	(setBuz@count)
 21147                           	line	24
 21148                           	
 21149  12C8                     l24580:	
 21150                           ;Buzzer_B1.c: 24: time*=20;
 21151  12C8  3014               	movlw	low(014h)
 21152  12C9  00A0               	movwf	(?___wmul)
 21153  12CA  3000               	movlw	high(014h)
 21154  12CB  00A1               	movwf	((?___wmul))+1
 21155  12CC  0827               	movf	(setBuz@time+1),w
 21156  12CD  01A3               	clrf	1+(?___wmul)+02h
 21157  12CE  07A3               	addwf	1+(?___wmul)+02h
 21158  12CF  0826               	movf	(setBuz@time),w
 21159  12D0  01A2               	clrf	0+(?___wmul)+02h
 21160  12D1  07A2               	addwf	0+(?___wmul)+02h
 21161                           
 21162  12D2  3187  27DB  3192   	fcall	___wmul
 21163  12D5  0020               	movlb 0	; select bank0
 21164  12D6  0821               	movf	(1+(?___wmul)),w
 21165  12D7  01A7               	clrf	(setBuz@time+1)
 21166  12D8  07A7               	addwf	(setBuz@time+1)
 21167  12D9  0820               	movf	(0+(?___wmul)),w
 21168  12DA  01A6               	clrf	(setBuz@time)
 21169  12DB  07A6               	addwf	(setBuz@time)
 21170                           
 21171                           	line	25
 21172                           	
 21173  12DC                     l24582:	
 21174                           ;Buzzer_B1.c: 25: if(Buz->Enable)
 21175  12DC  0878               	movf	(_Buz),w
 21176  12DD  0086               	movwf	fsr1l
 21177  12DE  3001               	movlw 1	; select bank2/3
 21178  12DF  0087               	movwf fsr1h	
 21179                           	
 21180  12E0  1C01               	btfss	indf1,0
 21181  12E1  2AE3               	goto	u8981
 21182  12E2  2AE4               	goto	u8980
 21183  12E3                     u8981:
 21184  12E3  2B48               	goto	l1111
 21185  12E4                     u8980:
 21186                           	line	27
 21187                           	
 21188  12E4                     l24584:	
 21189                           ;Buzzer_B1.c: 26: {
 21190                           ;Buzzer_B1.c: 27: if(!Buz->GO)
 21191  12E4  0878               	movf	(_Buz),w
 21192  12E5  0086               	movwf	fsr1l
 21193  12E6  3001               	movlw 1	; select bank2/3
 21194  12E7  0087               	movwf fsr1h	
 21195                           	
 21196  12E8  1881               	btfsc	indf1,1
 21197  12E9  2AEB               	goto	u8991
 21198  12EA  2AEC               	goto	u8990
 21199  12EB                     u8991:
 21200  12EB  2B05               	goto	l24590
 21201  12EC                     u8990:
 21202                           	line	29
 21203                           	
 21204  12EC                     l24586:	
 21205                           ;Buzzer_B1.c: 28: {
 21206                           ;Buzzer_B1.c: 29: Buz->GO=1;
 21207  12EC  0878               	movf	(_Buz),w
 21208  12ED  0086               	movwf	fsr1l
 21209  12EE  3001               	movlw 1	; select bank2/3
 21210  12EF  0087               	movwf fsr1h	
 21211                           	
 21212  12F0  1481               	bsf	indf1,1
 21213                           	line	30
 21214                           ;Buzzer_B1.c: 30: Buz->Count=count;
 21215  12F1  0829               	movf	(setBuz@count),w
 21216  12F2  00A8               	movwf	(??_setBuz+0)+0
 21217  12F3  0878               	movf	(_Buz),w
 21218  12F4  3E03               	addlw	03h
 21219  12F5  0086               	movwf	fsr1l
 21220  12F6  3001               	movlw 1	; select bank2/3
 21221  12F7  0087               	movwf fsr1h	
 21222                           	
 21223  12F8  0828               	movf	(??_setBuz+0)+0,w
 21224  12F9  0081               	movwf	indf1
 21225                           	line	31
 21226                           ;Buzzer_B1.c: 31: Buz->TimeValue=time;
 21227  12FA  0878               	movf	(_Buz),w
 21228  12FB  3E06               	addlw	06h
 21229  12FC  0086               	movwf	fsr1l
 21230  12FD  3001               	movlw 1	; select bank2/3
 21231  12FE  0087               	movwf fsr1h	
 21232                           	
 21233  12FF  0826               	movf	(setBuz@time),w
 21234  1300  3FC0               	movwi	[0]fsr1
 21235  1301  0827               	movf	(setBuz@time+1),w
 21236  1302  3FC1               	movwi	[1]fsr1
 21237                           	line	33
 21238                           	
 21239  1303                     l24588:	
 21240                           ;Buzzer_B1.c: 33: RB3=1;
 21241  1303  158D               	bsf	(107/8),(107)&7
 21242                           	line	34
 21243                           ;Buzzer_B1.c: 34: }
 21244  1304  2B48               	goto	l1111
 21245                           	line	35
 21246                           	
 21247  1305                     l1106:	
 21248                           	line	37
 21249                           	
 21250  1305                     l24590:	
 21251                           ;Buzzer_B1.c: 35: else
 21252                           ;Buzzer_B1.c: 36: {
 21253                           ;Buzzer_B1.c: 37: if(!Buz->BufferStatus1)
 21254  1305  0878               	movf	(_Buz),w
 21255  1306  0086               	movwf	fsr1l
 21256  1307  3001               	movlw 1	; select bank2/3
 21257  1308  0087               	movwf fsr1h	
 21258                           	
 21259  1309  1981               	btfsc	indf1,3
 21260  130A  2B0C               	goto	u9001
 21261  130B  2B0D               	goto	u9000
 21262  130C                     u9001:
 21263  130C  2B25               	goto	l24594
 21264  130D                     u9000:
 21265                           	line	39
 21266                           	
 21267  130D                     l24592:	
 21268                           ;Buzzer_B1.c: 38: {
 21269                           ;Buzzer_B1.c: 39: Buz->BufferStatus1=1;
 21270  130D  0878               	movf	(_Buz),w
 21271  130E  0086               	movwf	fsr1l
 21272  130F  3001               	movlw 1	; select bank2/3
 21273  1310  0087               	movwf fsr1h	
 21274                           	
 21275  1311  1581               	bsf	indf1,3
 21276                           	line	40
 21277                           ;Buzzer_B1.c: 40: Buz->CountBuffer1=count;
 21278  1312  0829               	movf	(setBuz@count),w
 21279  1313  00A8               	movwf	(??_setBuz+0)+0
 21280  1314  0878               	movf	(_Buz),w
 21281  1315  3E04               	addlw	04h
 21282  1316  0086               	movwf	fsr1l
 21283  1317  3001               	movlw 1	; select bank2/3
 21284  1318  0087               	movwf fsr1h	
 21285                           	
 21286  1319  0828               	movf	(??_setBuz+0)+0,w
 21287  131A  0081               	movwf	indf1
 21288                           	line	41
 21289                           ;Buzzer_B1.c: 41: Buz->TimeValueBuffer1=time;
 21290  131B  0878               	movf	(_Buz),w
 21291  131C  3E08               	addlw	08h
 21292  131D  0086               	movwf	fsr1l
 21293  131E  3001               	movlw 1	; select bank2/3
 21294  131F  0087               	movwf fsr1h	
 21295                           	
 21296  1320  0826               	movf	(setBuz@time),w
 21297  1321  3FC0               	movwi	[0]fsr1
 21298  1322  0827               	movf	(setBuz@time+1),w
 21299  1323  3FC1               	movwi	[1]fsr1
 21300                           	line	42
 21301                           ;Buzzer_B1.c: 42: }
 21302  1324  2B48               	goto	l1111
 21303                           	line	43
 21304                           	
 21305  1325                     l1108:	
 21306                           	
 21307  1325                     l24594:	
 21308                           ;Buzzer_B1.c: 43: else if(!Buz->BufferStatus2)
 21309  1325  0878               	movf	(_Buz),w
 21310  1326  0086               	movwf	fsr1l
 21311  1327  3001               	movlw 1	; select bank2/3
 21312  1328  0087               	movwf fsr1h	
 21313                           	
 21314  1329  1A01               	btfsc	indf1,4
 21315  132A  2B2C               	goto	u9011
 21316  132B  2B2D               	goto	u9010
 21317  132C                     u9011:
 21318  132C  2B48               	goto	l1111
 21319  132D                     u9010:
 21320                           	line	45
 21321                           	
 21322  132D                     l24596:	
 21323                           ;Buzzer_B1.c: 44: {
 21324                           ;Buzzer_B1.c: 45: Buz->BufferStatus2=1;
 21325  132D  0878               	movf	(_Buz),w
 21326  132E  0086               	movwf	fsr1l
 21327  132F  3001               	movlw 1	; select bank2/3
 21328  1330  0087               	movwf fsr1h	
 21329                           	
 21330  1331  1601               	bsf	indf1,4
 21331                           	line	46
 21332                           ;Buzzer_B1.c: 46: Buz->CountBuffer2=count;
 21333  1332  0829               	movf	(setBuz@count),w
 21334  1333  00A8               	movwf	(??_setBuz+0)+0
 21335  1334  0878               	movf	(_Buz),w
 21336  1335  3E05               	addlw	05h
 21337  1336  0086               	movwf	fsr1l
 21338  1337  3001               	movlw 1	; select bank2/3
 21339  1338  0087               	movwf fsr1h	
 21340                           	
 21341  1339  0828               	movf	(??_setBuz+0)+0,w
 21342  133A  0081               	movwf	indf1
 21343                           	line	47
 21344                           ;Buzzer_B1.c: 47: Buz->TimeValueBuffer2=time;
 21345  133B  0878               	movf	(_Buz),w
 21346  133C  3E0A               	addlw	0Ah
 21347  133D  0086               	movwf	fsr1l
 21348  133E  3001               	movlw 1	; select bank2/3
 21349  133F  0087               	movwf fsr1h	
 21350                           	
 21351  1340  0826               	movf	(setBuz@time),w
 21352  1341  3FC0               	movwi	[0]fsr1
 21353  1342  0827               	movf	(setBuz@time+1),w
 21354  1343  3FC1               	movwi	[1]fsr1
 21355  1344  2B48               	goto	l1111
 21356                           	line	48
 21357                           	
 21358  1345                     l1110:	
 21359  1345  2B48               	goto	l1111
 21360                           	line	49
 21361                           	
 21362  1346                     l1109:	
 21363  1346  2B48               	goto	l1111
 21364                           	
 21365  1347                     l1107:	
 21366  1347  2B48               	goto	l1111
 21367                           	line	50
 21368                           	
 21369  1348                     l1105:	
 21370                           	line	51
 21371                           	
 21372  1348                     l1111:	
 21373  1348  0008               	return
 21374                           	opt stack 0
 21375                           GLOBAL	__end_of_setBuz
 21376  1349                     	__end_of_setBuz:
 21377 ;; =============== function _setBuz ends ============
 21378                           
 21379                           	signat	_setBuz,8312
 21380                           	global	___fttol
 21381                           psect	text4176,local,class=CODE,delta=2
 21382                           global __ptext4176
 21383  1566                     __ptext4176:
 21384                           
 21385 ;; *************** function ___fttol *****************
 21386 ;; Defined at:
 21387 ;;		line 45 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\fttol.c"
 21388 ;; Parameters:    Size  Location     Type
 21389 ;;  f1              3    8[BANK0 ] float 
 21390 ;; Auto vars:     Size  Location     Type
 21391 ;;  lval            4   17[BANK0 ] unsigned long 
 21392 ;;  exp1            1   21[BANK0 ] unsigned char 
 21393 ;;  sign1           1   16[BANK0 ] unsigned char 
 21394 ;; Return value:  Size  Location     Type
 21395 ;;                  4    8[BANK0 ] long 
 21396 ;; Registers used:
 21397 ;;		wreg, status,2, status,0
 21398 ;; Tracked objects:
 21399 ;;		On entry : 0/0
 21400 ;;		On exit  : 0/0
 21401 ;;		Unchanged: 0/0
 21402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 21403 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 21404 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0
 21405 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 21406 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
       0       0
 21407 ;;Total ram usage:       14 bytes
 21408 ;; Hardware stack levels used:    1
 21409 ;; Hardware stack levels required when called:    4
 21410 ;; This function calls:
 21411 ;;		Nothing
 21412 ;; This function is called by:
 21413 ;;		_getPercentValue
 21414 ;;		_setPercentValue
 21415 ;; This function uses a non-reentrant model
 21416 ;;
 21417                           psect	text4176
 21418                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\fttol.c"
 21419                           	line	45
 21420                           	global	__size_of___fttol
 21421  009F                     	__size_of___fttol	equ	__end_of___fttol-___fttol
 21422                           	
 21423  1566                     ___fttol:	
 21424                           	opt	stack 3
 21425                           ; Regs used in ___fttol: [wreg+status,2+status,0]
 21426                           	line	49
 21427                           	
 21428  1566                     l22688:	
 21429  1566  0020               	movlb 0	; select bank0
 21430  1567  0828               	movf	(___fttol@f1),w
 21431  1568  00AC               	movwf	((??___fttol+0)+0)
 21432  1569  0829               	movf	(___fttol@f1+1),w
 21433  156A  00AD               	movwf	((??___fttol+0)+0+1)
 21434  156B  082A               	movf	(___fttol@f1+2),w
 21435  156C  00AE               	movwf	((??___fttol+0)+0+2)
 21436  156D  1003               	clrc
 21437  156E  0D2D               	rlf	(??___fttol+0)+1,w
 21438  156F  0D2E               	rlf	(??___fttol+0)+2,w
 21439  1570  00AF               	movwf	(??___fttol+3)+0
 21440  1571  082F               	movf	(??___fttol+3)+0,w
 21441  1572  00B5               	movwf	(___fttol@exp1)
 21442  1573  08B5               	movf	((___fttol@exp1)),f
 21443  1574  1D03               	skipz
 21444  1575  2D77               	goto	u6061
 21445  1576  2D78               	goto	u6060
 21446  1577                     u6061:
 21447  1577  2D82               	goto	l22694
 21448  1578                     u6060:
 21449                           	line	50
 21450                           	
 21451  1578                     l22690:	
 21452  1578  3000               	movlw	0
 21453  1579  00AB               	movwf	(?___fttol+3)
 21454  157A  3000               	movlw	0
 21455  157B  00AA               	movwf	(?___fttol+2)
 21456  157C  3000               	movlw	0
 21457  157D  00A9               	movwf	(?___fttol+1)
 21458  157E  3000               	movlw	0
 21459  157F  00A8               	movwf	(?___fttol)
 21460                           
 21461  1580  2E04               	goto	l18806
 21462                           	
 21463  1581                     l22692:	
 21464  1581  2E04               	goto	l18806
 21465                           	
 21466  1582                     l18805:	
 21467                           	line	51
 21468                           	
 21469  1582                     l22694:	
 21470  1582  0828               	movf	(___fttol@f1),w
 21471  1583  00AC               	movwf	((??___fttol+0)+0)
 21472  1584  0829               	movf	(___fttol@f1+1),w
 21473  1585  00AD               	movwf	((??___fttol+0)+0+1)
 21474  1586  082A               	movf	(___fttol@f1+2),w
 21475  1587  00AE               	movwf	((??___fttol+0)+0+2)
 21476  1588  3017               	movlw	017h
 21477  1589                     u6075:
 21478  1589  36AE               	lsrf	(??___fttol+0)+2,f
 21479  158A  0CAD               	rrf	(??___fttol+0)+1,f
 21480  158B  0CAC               	rrf	(??___fttol+0)+0,f
 21481  158C                     u6070:
 21482  158C  0B89               	decfsz	wreg,f
 21483  158D  2D89               	goto	u6075
 21484  158E  082C               	movf	0+(??___fttol+0)+0,w
 21485  158F  00AF               	movwf	(??___fttol+3)+0
 21486  1590  082F               	movf	(??___fttol+3)+0,w
 21487  1591  00B0               	movwf	(___fttol@sign1)
 21488                           	line	52
 21489                           	
 21490  1592                     l22696:	
 21491  1592  17A9               	bsf	(___fttol@f1)+(15/8),(15)&7
 21492                           	line	53
 21493                           	
 21494  1593                     l22698:	
 21495  1593  30FF               	movlw	0FFh
 21496  1594  05A8               	andwf	(___fttol@f1),f
 21497  1595  30FF               	movlw	0FFh
 21498  1596  05A9               	andwf	(___fttol@f1+1),f
 21499  1597  3000               	movlw	0
 21500  1598  05AA               	andwf	(___fttol@f1+2),f
 21501                           	line	54
 21502                           	
 21503  1599                     l22700:	
 21504  1599  0828               	movf	(___fttol@f1),w
 21505  159A  00B1               	movwf	(___fttol@lval)
 21506  159B  0829               	movf	(___fttol@f1+1),w
 21507  159C  00B2               	movwf	((___fttol@lval))+1
 21508  159D  082A               	movf	(___fttol@f1+2),w
 21509  159E  00B3               	movwf	((___fttol@lval))+2
 21510  159F  01B4               	clrf	((___fttol@lval))+3
 21511                           	line	55
 21512                           	
 21513  15A0                     l22702:	
 21514  15A0  308E               	movlw	low(08Eh)
 21515  15A1  02B5               	subwf	(___fttol@exp1),f
 21516                           	line	56
 21517                           	
 21518  15A2                     l22704:	
 21519  15A2  1FB5               	btfss	(___fttol@exp1),7
 21520  15A3  2DA5               	goto	u6081
 21521  15A4  2DA6               	goto	u6080
 21522  15A5                     u6081:
 21523  15A5  2DC9               	goto	l22714
 21524  15A6                     u6080:
 21525                           	line	57
 21526                           	
 21527  15A6                     l22706:	
 21528  15A6  0835               	movf	(___fttol@exp1),w
 21529  15A7  3A80               	xorlw	80h
 21530  15A8  3E8F               	addlw	-((-15)^80h)
 21531  15A9  1803               	skipnc
 21532  15AA  2DAC               	goto	u6091
 21533  15AB  2DAD               	goto	u6090
 21534  15AC                     u6091:
 21535  15AC  2DB8               	goto	l22712
 21536  15AD                     u6090:
 21537                           	line	58
 21538                           	
 21539  15AD                     l22708:	
 21540  15AD  3000               	movlw	0
 21541  15AE  00AB               	movwf	(?___fttol+3)
 21542  15AF  3000               	movlw	0
 21543  15B0  00AA               	movwf	(?___fttol+2)
 21544  15B1  3000               	movlw	0
 21545  15B2  00A9               	movwf	(?___fttol+1)
 21546  15B3  3000               	movlw	0
 21547  15B4  00A8               	movwf	(?___fttol)
 21548                           
 21549  15B5  2E04               	goto	l18806
 21550                           	
 21551  15B6                     l22710:	
 21552  15B6  2E04               	goto	l18806
 21553                           	
 21554  15B7                     l18808:	
 21555  15B7  2DB8               	goto	l22712
 21556                           	line	59
 21557                           	
 21558  15B8                     l18809:	
 21559                           	line	60
 21560                           	
 21561  15B8                     l22712:	
 21562  15B8  3001               	movlw	01h
 21563  15B9                     u6105:
 21564  15B9  36B4               	lsrf	(___fttol@lval+3),f
 21565  15BA  0CB3               	rrf	(___fttol@lval+2),f
 21566  15BB  0CB2               	rrf	(___fttol@lval+1),f
 21567  15BC  0CB1               	rrf	(___fttol@lval),f
 21568  15BD  0B89               	decfsz	wreg,f
 21569  15BE  2DB9               	goto	u6105
 21570                           
 21571                           	line	61
 21572  15BF  3001               	movlw	(01h)
 21573  15C0  00AC               	movwf	(??___fttol+0)+0
 21574  15C1  082C               	movf	(??___fttol+0)+0,w
 21575  15C2  07B5               	addwf	(___fttol@exp1),f
 21576  15C3  1D03               	btfss	status,2
 21577  15C4  2DC6               	goto	u6111
 21578  15C5  2DC7               	goto	u6110
 21579  15C6                     u6111:
 21580  15C6  2DB8               	goto	l22712
 21581  15C7                     u6110:
 21582  15C7  2DEB               	goto	l22724
 21583                           	
 21584  15C8                     l18810:	
 21585                           	line	62
 21586  15C8  2DEB               	goto	l22724
 21587                           	
 21588  15C9                     l18807:	
 21589                           	line	63
 21590                           	
 21591  15C9                     l22714:	
 21592  15C9  3018               	movlw	(018h)
 21593  15CA  0235               	subwf	(___fttol@exp1),w
 21594  15CB  1C03               	skipc
 21595  15CC  2DCE               	goto	u6121
 21596  15CD  2DCF               	goto	u6120
 21597  15CE                     u6121:
 21598  15CE  2DE4               	goto	l22722
 21599  15CF                     u6120:
 21600                           	line	64
 21601                           	
 21602  15CF                     l22716:	
 21603  15CF  3000               	movlw	0
 21604  15D0  00AB               	movwf	(?___fttol+3)
 21605  15D1  3000               	movlw	0
 21606  15D2  00AA               	movwf	(?___fttol+2)
 21607  15D3  3000               	movlw	0
 21608  15D4  00A9               	movwf	(?___fttol+1)
 21609  15D5  3000               	movlw	0
 21610  15D6  00A8               	movwf	(?___fttol)
 21611                           
 21612  15D7  2E04               	goto	l18806
 21613                           	
 21614  15D8                     l22718:	
 21615  15D8  2E04               	goto	l18806
 21616                           	
 21617  15D9                     l18812:	
 21618                           	line	65
 21619  15D9  2DE4               	goto	l22722
 21620                           	
 21621  15DA                     l18814:	
 21622                           	line	66
 21623                           	
 21624  15DA                     l22720:	
 21625  15DA  3001               	movlw	01h
 21626  15DB                     u6135:
 21627  15DB  35B1               	lslf	(___fttol@lval),f
 21628  15DC  0DB2               	rlf	(___fttol@lval+1),f
 21629  15DD  0DB3               	rlf	(___fttol@lval+2),f
 21630  15DE  0DB4               	rlf	(___fttol@lval+3),f
 21631  15DF  0B89               	decfsz	wreg,f
 21632  15E0  2DDB               	goto	u6135
 21633                           	line	67
 21634  15E1  3001               	movlw	low(01h)
 21635  15E2  02B5               	subwf	(___fttol@exp1),f
 21636  15E3  2DE4               	goto	l22722
 21637                           	line	68
 21638                           	
 21639  15E4                     l18813:	
 21640                           	line	65
 21641                           	
 21642  15E4                     l22722:	
 21643  15E4  08B5               	movf	(___fttol@exp1),f
 21644  15E5  1D03               	skipz
 21645  15E6  2DE8               	goto	u6141
 21646  15E7  2DE9               	goto	u6140
 21647  15E8                     u6141:
 21648  15E8  2DDA               	goto	l22720
 21649  15E9                     u6140:
 21650  15E9  2DEB               	goto	l22724
 21651                           	
 21652  15EA                     l18815:	
 21653  15EA  2DEB               	goto	l22724
 21654                           	line	69
 21655                           	
 21656  15EB                     l18811:	
 21657                           	line	70
 21658                           	
 21659  15EB                     l22724:	
 21660  15EB  0830               	movf	(___fttol@sign1),w
 21661  15EC  1D03               	skipz
 21662  15ED  2DEF               	goto	u6150
 21663  15EE  2DFB               	goto	l22728
 21664  15EF                     u6150:
 21665                           	line	71
 21666                           	
 21667  15EF                     l22726:	
 21668  15EF  09B1               	comf	(___fttol@lval),f
 21669  15F0  09B2               	comf	(___fttol@lval+1),f
 21670  15F1  09B3               	comf	(___fttol@lval+2),f
 21671  15F2  09B4               	comf	(___fttol@lval+3),f
 21672  15F3  0AB1               	incf	(___fttol@lval),f
 21673  15F4  1903               	skipnz
 21674  15F5  0AB2               	incf	(___fttol@lval+1),f
 21675  15F6  1903               	skipnz
 21676  15F7  0AB3               	incf	(___fttol@lval+2),f
 21677  15F8  1903               	skipnz
 21678  15F9  0AB4               	incf	(___fttol@lval+3),f
 21679  15FA  2DFB               	goto	l22728
 21680                           	
 21681  15FB                     l18816:	
 21682                           	line	72
 21683                           	
 21684  15FB                     l22728:	
 21685  15FB  0834               	movf	(___fttol@lval+3),w
 21686  15FC  00AB               	movwf	(?___fttol+3)
 21687  15FD  0833               	movf	(___fttol@lval+2),w
 21688  15FE  00AA               	movwf	(?___fttol+2)
 21689  15FF  0832               	movf	(___fttol@lval+1),w
 21690  1600  00A9               	movwf	(?___fttol+1)
 21691  1601  0831               	movf	(___fttol@lval),w
 21692  1602  00A8               	movwf	(?___fttol)
 21693                           
 21694  1603  2E04               	goto	l18806
 21695                           	
 21696  1604                     l22730:	
 21697                           	line	73
 21698                           	
 21699  1604                     l18806:	
 21700  1604  0008               	return
 21701                           	opt stack 0
 21702                           GLOBAL	__end_of___fttol
 21703  1605                     	__end_of___fttol:
 21704 ;; =============== function ___fttol ends ============
 21705                           
 21706                           	signat	___fttol,4220
 21707                           	global	___ftpack
 21708                           psect	text4177,local,class=CODE,delta=2
 21709                           global __ptext4177
 21710  1E22                     __ptext4177:
 21711                           
 21712 ;; *************** function ___ftpack *****************
 21713 ;; Defined at:
 21714 ;;		line 63 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\float.c"
 21715 ;; Parameters:    Size  Location     Type
 21716 ;;  arg             3    0[BANK0 ] unsigned um
 21717 ;;  exp             1    3[BANK0 ] unsigned char 
 21718 ;;  sign            1    4[BANK0 ] unsigned char 
 21719 ;; Auto vars:     Size  Location     Type
 21720 ;;		None
 21721 ;; Return value:  Size  Location     Type
 21722 ;;                  3    0[BANK0 ] float 
 21723 ;; Registers used:
 21724 ;;		wreg, status,2, status,0
 21725 ;; Tracked objects:
 21726 ;;		On entry : 0/0
 21727 ;;		On exit  : 0/0
 21728 ;;		Unchanged: 0/0
 21729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 21730 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
       0       0
 21731 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 21732 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 21733 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
       0       0
 21734 ;;Total ram usage:        8 bytes
 21735 ;; Hardware stack levels used:    1
 21736 ;; Hardware stack levels required when called:    4
 21737 ;; This function calls:
 21738 ;;		Nothing
 21739 ;; This function is called by:
 21740 ;;		___ftadd
 21741 ;;		___ftdiv
 21742 ;;		___ftmul
 21743 ;;		___awtoft
 21744 ;;		___lbtoft
 21745 ;;		___abtoft
 21746 ;;		___lwtoft
 21747 ;;		___altoft
 21748 ;;		___lltoft
 21749 ;;		___attoft
 21750 ;;		___lttoft
 21751 ;; This function uses a non-reentrant model
 21752 ;;
 21753                           psect	text4177
 21754                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\float.c"
 21755                           	line	63
 21756                           	global	__size_of___ftpack
 21757  0074                     	__size_of___ftpack	equ	__end_of___ftpack-___ftpack
 21758                           	
 21759  1E22                     ___ftpack:	
 21760                           	opt	stack 2
 21761                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
 21762                           	line	64
 21763                           	
 21764  1E22                     l22652:	
 21765  1E22  0020               	movlb 0	; select bank0
 21766  1E23  0823               	movf	(___ftpack@exp),w
 21767  1E24  1D03               	skipz
 21768  1E25  2E27               	goto	u5950
 21769  1E26  2E2F               	goto	l22656
 21770  1E27                     u5950:
 21771                           	
 21772  1E27                     l22654:	
 21773  1E27  0822               	movf	(___ftpack@arg+2),w
 21774  1E28  0421               	iorwf	(___ftpack@arg+1),w
 21775  1E29  0420               	iorwf	(___ftpack@arg),w
 21776  1E2A  1D03               	skipz
 21777  1E2B  2E2D               	goto	u5961
 21778  1E2C  2E2E               	goto	u5960
 21779  1E2D                     u5961:
 21780  1E2D  2E43               	goto	l22662
 21781  1E2E                     u5960:
 21782  1E2E  2E2F               	goto	l22656
 21783                           	
 21784  1E2F                     l19030:	
 21785                           	line	65
 21786                           	
 21787  1E2F                     l22656:	
 21788  1E2F  3000               	movlw	0x0
 21789  1E30  00A0               	movwf	(?___ftpack)
 21790  1E31  3000               	movlw	0x0
 21791  1E32  00A1               	movwf	(?___ftpack+1)
 21792  1E33  3000               	movlw	0x0
 21793  1E34  00A2               	movwf	(?___ftpack+2)
 21794  1E35  2E95               	goto	l19031
 21795                           	
 21796  1E36                     l22658:	
 21797  1E36  2E95               	goto	l19031
 21798                           	
 21799  1E37                     l19028:	
 21800                           	line	66
 21801  1E37  2E43               	goto	l22662
 21802                           	
 21803  1E38                     l19033:	
 21804                           	line	67
 21805                           	
 21806  1E38                     l22660:	
 21807  1E38  3001               	movlw	(01h)
 21808  1E39  00A5               	movwf	(??___ftpack+0)+0
 21809  1E3A  0825               	movf	(??___ftpack+0)+0,w
 21810  1E3B  07A3               	addwf	(___ftpack@exp),f
 21811                           	line	68
 21812  1E3C  3001               	movlw	01h
 21813  1E3D                     u5975:
 21814  1E3D  36A2               	lsrf	(___ftpack@arg+2),f
 21815  1E3E  0CA1               	rrf	(___ftpack@arg+1),f
 21816  1E3F  0CA0               	rrf	(___ftpack@arg),f
 21817  1E40  0B89               	decfsz	wreg,f
 21818  1E41  2E3D               	goto	u5975
 21819                           
 21820  1E42  2E43               	goto	l22662
 21821                           	line	69
 21822                           	
 21823  1E43                     l19032:	
 21824                           	line	66
 21825                           	
 21826  1E43                     l22662:	
 21827  1E43  30FE               	movlw	low highword(0FE0000h)
 21828  1E44  0522               	andwf	(___ftpack@arg+2),w
 21829  1E45  1D03               	btfss	status,2
 21830  1E46  2E48               	goto	u5981
 21831  1E47  2E49               	goto	u5980
 21832  1E48                     u5981:
 21833  1E48  2E38               	goto	l22660
 21834  1E49                     u5980:
 21835  1E49  2E5F               	goto	l19035
 21836                           	
 21837  1E4A                     l19034:	
 21838                           	line	70
 21839  1E4A  2E5F               	goto	l19035
 21840                           	
 21841  1E4B                     l19036:	
 21842                           	line	71
 21843                           	
 21844  1E4B                     l22664:	
 21845  1E4B  3001               	movlw	(01h)
 21846  1E4C  00A5               	movwf	(??___ftpack+0)+0
 21847  1E4D  0825               	movf	(??___ftpack+0)+0,w
 21848  1E4E  07A3               	addwf	(___ftpack@exp),f
 21849                           	line	72
 21850                           	
 21851  1E4F                     l22666:	
 21852  1E4F  3001               	movlw	01h
 21853  1E50  07A0               	addwf	(___ftpack@arg),f
 21854  1E51  3000               	movlw	0
 21855  1E52  1803               	skipnc
 21856  1E53  3001               movlw 1
 21857  1E54  07A1               	addwf	(___ftpack@arg+1),f
 21858  1E55  3000               	movlw	0
 21859  1E56  1803               	skipnc
 21860  1E57  3001               movlw 1
 21861  1E58  07A2               	addwf	(___ftpack@arg+2),f
 21862                           	line	73
 21863                           	
 21864  1E59                     l22668:	
 21865  1E59  3001               	movlw	01h
 21866  1E5A                     u5995:
 21867  1E5A  36A2               	lsrf	(___ftpack@arg+2),f
 21868  1E5B  0CA1               	rrf	(___ftpack@arg+1),f
 21869  1E5C  0CA0               	rrf	(___ftpack@arg),f
 21870  1E5D  0B89               	decfsz	wreg,f
 21871  1E5E  2E5A               	goto	u5995
 21872                           
 21873                           	line	74
 21874                           	
 21875  1E5F                     l19035:	
 21876                           	line	70
 21877  1E5F  30FF               	movlw	low highword(0FF0000h)
 21878  1E60  0522               	andwf	(___ftpack@arg+2),w
 21879  1E61  1D03               	btfss	status,2
 21880  1E62  2E64               	goto	u6001
 21881  1E63  2E65               	goto	u6000
 21882  1E64                     u6001:
 21883  1E64  2E4B               	goto	l22664
 21884  1E65                     u6000:
 21885  1E65  2E70               	goto	l22672
 21886                           	
 21887  1E66                     l19037:	
 21888                           	line	75
 21889  1E66  2E70               	goto	l22672
 21890                           	
 21891  1E67                     l19039:	
 21892                           	line	76
 21893                           	
 21894  1E67                     l22670:	
 21895  1E67  3001               	movlw	low(01h)
 21896  1E68  02A3               	subwf	(___ftpack@exp),f
 21897                           	line	77
 21898  1E69  3001               	movlw	01h
 21899  1E6A                     u6015:
 21900  1E6A  35A0               	lslf	(___ftpack@arg),f
 21901  1E6B  0DA1               	rlf	(___ftpack@arg+1),f
 21902  1E6C  0DA2               	rlf	(___ftpack@arg+2),f
 21903  1E6D  0B89               	decfsz	wreg,f
 21904  1E6E  2E6A               	goto	u6015
 21905  1E6F  2E70               	goto	l22672
 21906                           	line	78
 21907                           	
 21908  1E70                     l19038:	
 21909                           	line	75
 21910                           	
 21911  1E70                     l22672:	
 21912  1E70  1FA1               	btfss	(___ftpack@arg+1),(15)&7
 21913  1E71  2E73               	goto	u6021
 21914  1E72  2E74               	goto	u6020
 21915  1E73                     u6021:
 21916  1E73  2E67               	goto	l22670
 21917  1E74                     u6020:
 21918                           	
 21919  1E74                     l19040:	
 21920                           	line	79
 21921  1E74  1823               	btfsc	(___ftpack@exp),(0)&7
 21922  1E75  2E77               	goto	u6031
 21923  1E76  2E78               	goto	u6030
 21924  1E77                     u6031:
 21925  1E77  2E7E               	goto	l19041
 21926  1E78                     u6030:
 21927                           	line	80
 21928                           	
 21929  1E78                     l22674:	
 21930  1E78  30FF               	movlw	0FFh
 21931  1E79  05A0               	andwf	(___ftpack@arg),f
 21932  1E7A  307F               	movlw	07Fh
 21933  1E7B  05A1               	andwf	(___ftpack@arg+1),f
 21934  1E7C  30FF               	movlw	0FFh
 21935  1E7D  05A2               	andwf	(___ftpack@arg+2),f
 21936                           	
 21937  1E7E                     l19041:	
 21938                           	line	81
 21939  1E7E  1003               	clrc
 21940  1E7F  0CA3               	rrf	(___ftpack@exp),f
 21941                           
 21942                           	line	82
 21943                           	
 21944  1E80                     l22676:	
 21945  1E80  0823               	movf	(___ftpack@exp),w
 21946  1E81  00A5               	movwf	((??___ftpack+0)+0)
 21947  1E82  01A6               	clrf	((??___ftpack+0)+0+1)
 21948  1E83  01A7               	clrf	((??___ftpack+0)+0+2)
 21949  1E84  3010               	movlw	010h
 21950  1E85                     u6045:
 21951  1E85  35A5               	lslf	(??___ftpack+0)+0,f
 21952  1E86  0DA6               	rlf	(??___ftpack+0)+1,f
 21953  1E87  0DA7               	rlf	(??___ftpack+0)+2,f
 21954  1E88                     u6040:
 21955  1E88  0B89               	decfsz	wreg,f
 21956  1E89  2E85               	goto	u6045
 21957  1E8A  0825               	movf	0+(??___ftpack+0)+0,w
 21958  1E8B  04A0               	iorwf	(___ftpack@arg),f
 21959  1E8C  0826               	movf	1+(??___ftpack+0)+0,w
 21960  1E8D  04A1               	iorwf	(___ftpack@arg+1),f
 21961  1E8E  0827               	movf	2+(??___ftpack+0)+0,w
 21962  1E8F  04A2               	iorwf	(___ftpack@arg+2),f
 21963                           	line	83
 21964                           	
 21965  1E90                     l22678:	
 21966  1E90  0824               	movf	(___ftpack@sign),w
 21967  1E91  1D03               	skipz
 21968  1E92  2E94               	goto	u6050
 21969  1E93  2E95               	goto	l19042
 21970  1E94                     u6050:
 21971                           	line	84
 21972                           	
 21973  1E94                     l22680:	
 21974  1E94  17A2               	bsf	(___ftpack@arg)+(23/8),(23)&7
 21975                           	
 21976  1E95                     l19042:	
 21977                           	line	85
 21978                           	line	86
 21979                           	
 21980  1E95                     l19031:	
 21981  1E95  0008               	return
 21982                           	opt stack 0
 21983                           GLOBAL	__end_of___ftpack
 21984  1E96                     	__end_of___ftpack:
 21985 ;; =============== function ___ftpack ends ============
 21986                           
 21987                           	signat	___ftpack,12411
 21988                           	global	___lwdiv
 21989                           psect	text4178,local,class=CODE,delta=2
 21990                           global __ptext4178
 21991  199E                     __ptext4178:
 21992                           
 21993 ;; *************** function ___lwdiv *****************
 21994 ;; Defined at:
 21995 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lwdiv.c"
 21996 ;; Parameters:    Size  Location     Type
 21997 ;;  divisor         2    0[BANK0 ] unsigned int 
 21998 ;;  dividend        2    2[BANK0 ] unsigned int 
 21999 ;; Auto vars:     Size  Location     Type
 22000 ;;  quotient        2    5[BANK0 ] unsigned int 
 22001 ;;  counter         1    7[BANK0 ] unsigned char 
 22002 ;; Return value:  Size  Location     Type
 22003 ;;                  2    0[BANK0 ] unsigned int 
 22004 ;; Registers used:
 22005 ;;		wreg, status,2, status,0
 22006 ;; Tracked objects:
 22007 ;;		On entry : 0/0
 22008 ;;		On exit  : 0/0
 22009 ;;		Unchanged: 0/0
 22010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 22011 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 22012 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 22013 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 22014 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
       0       0
 22015 ;;Total ram usage:        8 bytes
 22016 ;; Hardware stack levels used:    1
 22017 ;; Hardware stack levels required when called:    4
 22018 ;; This function calls:
 22019 ;;		Nothing
 22020 ;; This function is called by:
 22021 ;;		_Load_Main
 22022 ;; This function uses a non-reentrant model
 22023 ;;
 22024                           psect	text4178
 22025                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lwdiv.c"
 22026                           	line	5
 22027                           	global	__size_of___lwdiv
 22028  0047                     	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
 22029                           	
 22030  199E                     ___lwdiv:	
 22031                           	opt	stack 10
 22032                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 22033                           	line	9
 22034                           	
 22035  199E                     l22626:	
 22036  199E  0020               	movlb 0	; select bank0
 22037  199F  01A5               	clrf	(___lwdiv@quotient)
 22038  19A0  01A6               	clrf	(___lwdiv@quotient+1)
 22039                           	line	10
 22040                           	
 22041  19A1                     l22628:	
 22042  19A1  0821               	movf	(___lwdiv@divisor+1),w
 22043  19A2  0420               	iorwf	(___lwdiv@divisor),w
 22044  19A3  1903               	skipnz
 22045  19A4  29A6               	goto	u5881
 22046  19A5  29A7               	goto	u5880
 22047  19A6                     u5881:
 22048  19A6  29DD               	goto	l22648
 22049  19A7                     u5880:
 22050                           	line	11
 22051                           	
 22052  19A7                     l22630:	
 22053  19A7  01A7               	clrf	(___lwdiv@counter)
 22054  19A8  1403               	bsf	status,0
 22055  19A9  0DA7               	rlf	(___lwdiv@counter),f
 22056                           	line	12
 22057  19AA  29B5               	goto	l22636
 22058                           	
 22059  19AB                     l18704:	
 22060                           	line	13
 22061                           	
 22062  19AB                     l22632:	
 22063  19AB  3001               	movlw	01h
 22064                           	
 22065  19AC                     u5895:
 22066  19AC  35A0               	lslf	(___lwdiv@divisor),f
 22067  19AD  0DA1               	rlf	(___lwdiv@divisor+1),f
 22068  19AE  0B89               	decfsz	wreg,f
 22069  19AF  29AC               	goto	u5895
 22070                           	line	14
 22071                           	
 22072  19B0                     l22634:	
 22073  19B0  3001               	movlw	(01h)
 22074  19B1  00A4               	movwf	(??___lwdiv+0)+0
 22075  19B2  0824               	movf	(??___lwdiv+0)+0,w
 22076  19B3  07A7               	addwf	(___lwdiv@counter),f
 22077  19B4  29B5               	goto	l22636
 22078                           	line	15
 22079                           	
 22080  19B5                     l18703:	
 22081                           	line	12
 22082                           	
 22083  19B5                     l22636:	
 22084  19B5  1FA1               	btfss	(___lwdiv@divisor+1),(15)&7
 22085  19B6  29B8               	goto	u5901
 22086  19B7  29B9               	goto	u5900
 22087  19B8                     u5901:
 22088  19B8  29AB               	goto	l22632
 22089  19B9                     u5900:
 22090  19B9  29BB               	goto	l22638
 22091                           	
 22092  19BA                     l18705:	
 22093  19BA  29BB               	goto	l22638
 22094                           	line	16
 22095                           	
 22096  19BB                     l18706:	
 22097                           	line	17
 22098                           	
 22099  19BB                     l22638:	
 22100  19BB  3001               	movlw	01h
 22101                           	
 22102  19BC                     u5915:
 22103  19BC  35A5               	lslf	(___lwdiv@quotient),f
 22104  19BD  0DA6               	rlf	(___lwdiv@quotient+1),f
 22105  19BE  0B89               	decfsz	wreg,f
 22106  19BF  29BC               	goto	u5915
 22107                           	line	18
 22108  19C0  0821               	movf	(___lwdiv@divisor+1),w
 22109  19C1  0223               	subwf	(___lwdiv@dividend+1),w
 22110  19C2  1D03               	skipz
 22111  19C3  29C6               	goto	u5925
 22112  19C4  0820               	movf	(___lwdiv@divisor),w
 22113  19C5  0222               	subwf	(___lwdiv@dividend),w
 22114  19C6                     u5925:
 22115  19C6  1C03               	skipc
 22116  19C7  29C9               	goto	u5921
 22117  19C8  29CA               	goto	u5920
 22118  19C9                     u5921:
 22119  19C9  29D0               	goto	l22644
 22120  19CA                     u5920:
 22121                           	line	19
 22122                           	
 22123  19CA                     l22640:	
 22124  19CA  0820               	movf	(___lwdiv@divisor),w
 22125  19CB  02A2               	subwf	(___lwdiv@dividend),f
 22126  19CC  0821               	movf	(___lwdiv@divisor+1),w
 22127  19CD  3BA3               	subwfb	(___lwdiv@dividend+1),f
 22128                           	line	20
 22129                           	
 22130  19CE                     l22642:	
 22131  19CE  1425               	bsf	(___lwdiv@quotient)+(0/8),(0)&7
 22132  19CF  29D0               	goto	l22644
 22133                           	line	21
 22134                           	
 22135  19D0                     l18707:	
 22136                           	line	22
 22137                           	
 22138  19D0                     l22644:	
 22139  19D0  3001               	movlw	01h
 22140                           	
 22141  19D1                     u5935:
 22142  19D1  36A1               	lsrf	(___lwdiv@divisor+1),f
 22143  19D2  0CA0               	rrf	(___lwdiv@divisor),f
 22144  19D3  0B89               	decfsz	wreg,f
 22145  19D4  29D1               	goto	u5935
 22146                           	line	23
 22147                           	
 22148  19D5                     l22646:	
 22149  19D5  3001               	movlw	low(01h)
 22150  19D6  02A7               	subwf	(___lwdiv@counter),f
 22151  19D7  1D03               	btfss	status,2
 22152  19D8  29DA               	goto	u5941
 22153  19D9  29DB               	goto	u5940
 22154  19DA                     u5941:
 22155  19DA  29BB               	goto	l22638
 22156  19DB                     u5940:
 22157  19DB  29DD               	goto	l22648
 22158                           	
 22159  19DC                     l18708:	
 22160  19DC  29DD               	goto	l22648
 22161                           	line	24
 22162                           	
 22163  19DD                     l18702:	
 22164                           	line	25
 22165                           	
 22166  19DD                     l22648:	
 22167  19DD  0826               	movf	(___lwdiv@quotient+1),w
 22168  19DE  01A1               	clrf	(?___lwdiv+1)
 22169  19DF  07A1               	addwf	(?___lwdiv+1)
 22170  19E0  0825               	movf	(___lwdiv@quotient),w
 22171  19E1  01A0               	clrf	(?___lwdiv)
 22172  19E2  07A0               	addwf	(?___lwdiv)
 22173                           
 22174  19E3  29E4               	goto	l18709
 22175                           	
 22176  19E4                     l22650:	
 22177                           	line	26
 22178                           	
 22179  19E4                     l18709:	
 22180  19E4  0008               	return
 22181                           	opt stack 0
 22182                           GLOBAL	__end_of___lwdiv
 22183  19E5                     	__end_of___lwdiv:
 22184 ;; =============== function ___lwdiv ends ============
 22185                           
 22186                           	signat	___lwdiv,8314
 22187                           	global	___wmul
 22188                           psect	text4179,local,class=CODE,delta=2
 22189                           global __ptext4179
 22190  07DB                     __ptext4179:
 22191                           
 22192 ;; *************** function ___wmul *****************
 22193 ;; Defined at:
 22194 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\wmul.c"
 22195 ;; Parameters:    Size  Location     Type
 22196 ;;  multiplier      2    0[BANK0 ] unsigned int 
 22197 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 22198 ;; Auto vars:     Size  Location     Type
 22199 ;;  product         2    4[BANK0 ] unsigned int 
 22200 ;; Return value:  Size  Location     Type
 22201 ;;                  2    0[BANK0 ] unsigned int 
 22202 ;; Registers used:
 22203 ;;		wreg, status,2, status,0
 22204 ;; Tracked objects:
 22205 ;;		On entry : 0/0
 22206 ;;		On exit  : 0/0
 22207 ;;		Unchanged: 0/0
 22208 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 22209 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 22210 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 22211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 22212 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0
 22213 ;;Total ram usage:        6 bytes
 22214 ;; Hardware stack levels used:    1
 22215 ;; Hardware stack levels required when called:    4
 22216 ;; This function calls:
 22217 ;;		Nothing
 22218 ;; This function is called by:
 22219 ;;		_setBuz
 22220 ;;		_Load_Main
 22221 ;; This function uses a non-reentrant model
 22222 ;;
 22223                           psect	text4179
 22224                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\wmul.c"
 22225                           	line	3
 22226                           	global	__size_of___wmul
 22227  0025                     	__size_of___wmul	equ	__end_of___wmul-___wmul
 22228                           	
 22229  07DB                     ___wmul:	
 22230                           	opt	stack 8
 22231                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 22232                           	line	4
 22233                           	
 22234  07DB                     l24568:	
 22235  07DB  0020               	movlb 0	; select bank0
 22236  07DC  01A4               	clrf	(___wmul@product)
 22237  07DD  01A5               	clrf	(___wmul@product+1)
 22238  07DE  2FDF               	goto	l24570
 22239                           	line	6
 22240                           	
 22241  07DF                     l18696:	
 22242                           	line	7
 22243                           	
 22244  07DF                     l24570:	
 22245  07DF  1C20               	btfss	(___wmul@multiplier),(0)&7
 22246  07E0  2FE2               	goto	u8941
 22247  07E1  2FE3               	goto	u8940
 22248  07E2                     u8941:
 22249  07E2  2FE7               	goto	l18697
 22250  07E3                     u8940:
 22251                           	line	8
 22252                           	
 22253  07E3                     l24572:	
 22254  07E3  0822               	movf	(___wmul@multiplicand),w
 22255  07E4  07A4               	addwf	(___wmul@product),f
 22256  07E5  0823               	movf	(___wmul@multiplicand+1),w
 22257  07E6  3DA5               	addwfc	(___wmul@product+1),f
 22258                           	
 22259  07E7                     l18697:	
 22260                           	line	9
 22261  07E7  3001               	movlw	01h
 22262                           	
 22263  07E8                     u8955:
 22264  07E8  35A2               	lslf	(___wmul@multiplicand),f
 22265  07E9  0DA3               	rlf	(___wmul@multiplicand+1),f
 22266  07EA  0B89               	decfsz	wreg,f
 22267  07EB  2FE8               	goto	u8955
 22268                           	line	10
 22269                           	
 22270  07EC                     l24574:	
 22271  07EC  3001               	movlw	01h
 22272                           	
 22273  07ED                     u8965:
 22274  07ED  36A1               	lsrf	(___wmul@multiplier+1),f
 22275  07EE  0CA0               	rrf	(___wmul@multiplier),f
 22276  07EF  0B89               	decfsz	wreg,f
 22277  07F0  2FED               	goto	u8965
 22278                           	line	11
 22279  07F1  0821               	movf	((___wmul@multiplier+1)),w
 22280  07F2  0420               	iorwf	((___wmul@multiplier)),w
 22281  07F3  1D03               	skipz
 22282  07F4  2FF6               	goto	u8971
 22283  07F5  2FF7               	goto	u8970
 22284  07F6                     u8971:
 22285  07F6  2FDF               	goto	l24570
 22286  07F7                     u8970:
 22287  07F7  2FF8               	goto	l24576
 22288                           	
 22289  07F8                     l18698:	
 22290                           	line	12
 22291                           	
 22292  07F8                     l24576:	
 22293  07F8  0825               	movf	(___wmul@product+1),w
 22294  07F9  01A1               	clrf	(?___wmul+1)
 22295  07FA  07A1               	addwf	(?___wmul+1)
 22296  07FB  0824               	movf	(___wmul@product),w
 22297  07FC  01A0               	clrf	(?___wmul)
 22298  07FD  07A0               	addwf	(?___wmul)
 22299                           
 22300  07FE  2FFF               	goto	l18699
 22301                           	
 22302  07FF                     l24578:	
 22303                           	line	13
 22304                           	
 22305  07FF                     l18699:	
 22306  07FF  0008               	return
 22307                           	opt stack 0
 22308                           GLOBAL	__end_of___wmul
 22309  0800                     	__end_of___wmul:
 22310 ;; =============== function ___wmul ends ============
 22311                           
 22312                           	signat	___wmul,8314
 22313                           	global	_SwPointSelect
 22314                           psect	text4180,local,class=CODE,delta=2
 22315                           global __ptext4180
 22316  2210                     __ptext4180:
 22317                           
 22318 ;; *************** function _SwPointSelect *****************
 22319 ;; Defined at:
 22320 ;;		line 17 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Switch_B1.c"
 22321 ;; Parameters:    Size  Location     Type
 22322 ;;  sw              1    wreg     unsigned char 
 22323 ;; Auto vars:     Size  Location     Type
 22324 ;;  sw              1    1[BANK0 ] unsigned char 
 22325 ;; Return value:  Size  Location     Type
 22326 ;;		None               void
 22327 ;; Registers used:
 22328 ;;		wreg
 22329 ;; Tracked objects:
 22330 ;;		On entry : 0/0
 22331 ;;		On exit  : 0/0
 22332 ;;		Unchanged: 0/0
 22333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 22334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 22335 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 22336 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 22337 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 22338 ;;Total ram usage:        2 bytes
 22339 ;; Hardware stack levels used:    1
 22340 ;; Hardware stack levels required when called:    4
 22341 ;; This function calls:
 22342 ;;		Nothing
 22343 ;; This function is called by:
 22344 ;;		_setSw_Enable
 22345 ;;		_setSw_Status
 22346 ;;		_setSw_Main
 22347 ;;		_Sw_Detect
 22348 ;; This function uses a non-reentrant model
 22349 ;;
 22350                           psect	text4180
 22351                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Switch_B1.c"
 22352                           	line	17
 22353                           	global	__size_of_SwPointSelect
 22354  000E                     	__size_of_SwPointSelect	equ	__end_of_SwPointSelect-_SwPointSelect
 22355                           	
 22356  2210                     _SwPointSelect:	
 22357                           	opt	stack 8
 22358                           ; Regs used in _SwPointSelect: [wreg]
 22359                           ;SwPointSelect@sw stored from wreg
 22360                           	line	19
 22361  2210  0020               	movlb 0	; select bank0
 22362  2211  00A1               	movwf	(SwPointSelect@sw)
 22363                           	
 22364  2212                     l22596:	
 22365                           ;Switch_B1.c: 19: if(sw == 1)
 22366  2212  0821               	movf	(SwPointSelect@sw),w
 22367  2213  3A01               	xorlw	01h&0ffh
 22368  2214  1D03               	skipz
 22369  2215  2A17               	goto	u5781
 22370  2216  2A18               	goto	u5780
 22371  2217                     u5781:
 22372  2217  2A1D               	goto	l16436
 22373  2218                     u5780:
 22374                           	line	21
 22375                           	
 22376  2218                     l22598:	
 22377                           ;Switch_B1.c: 20: {
 22378                           ;Switch_B1.c: 21: Sw=&Sw1;
 22379  2218  3057               	movlw	(_Sw1)&0ffh
 22380  2219  00A0               	movwf	(??_SwPointSelect+0)+0
 22381  221A  0820               	movf	(??_SwPointSelect+0)+0,w
 22382  221B  00EE               	movwf	(_Sw)
 22383  221C  2A1D               	goto	l16436
 22384                           	line	22
 22385                           	
 22386  221D                     l16435:	
 22387                           	line	36
 22388                           	
 22389  221D                     l16436:	
 22390  221D  0008               	return
 22391                           	opt stack 0
 22392                           GLOBAL	__end_of_SwPointSelect
 22393  221E                     	__end_of_SwPointSelect:
 22394 ;; =============== function _SwPointSelect ends ============
 22395                           
 22396                           	signat	_SwPointSelect,4216
 22397                           	global	_TouchPower
 22398                           psect	text4181,local,class=CODE,delta=2
 22399                           global __ptext4181
 22400  20FD                     __ptext4181:
 22401                           
 22402 ;; *************** function _TouchPower *****************
 22403 ;; Defined at:
 22404 ;;		line 10 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Switch_B1.c"
 22405 ;; Parameters:    Size  Location     Type
 22406 ;;		None
 22407 ;; Auto vars:     Size  Location     Type
 22408 ;;		None
 22409 ;; Return value:  Size  Location     Type
 22410 ;;		None               void
 22411 ;; Registers used:
 22412 ;;		None
 22413 ;; Tracked objects:
 22414 ;;		On entry : 0/0
 22415 ;;		On exit  : 0/0
 22416 ;;		Unchanged: 0/0
 22417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 22418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 22419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 22420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 22421 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 22422 ;;Total ram usage:        0 bytes
 22423 ;; Hardware stack levels used:    1
 22424 ;; Hardware stack levels required when called:    4
 22425 ;; This function calls:
 22426 ;;		Nothing
 22427 ;; This function is called by:
 22428 ;;		_Switch_Initialization
 22429 ;; This function uses a non-reentrant model
 22430 ;;
 22431                           psect	text4181
 22432                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Switch_B1.c"
 22433                           	line	10
 22434                           	global	__size_of_TouchPower
 22435  0009                     	__size_of_TouchPower	equ	__end_of_TouchPower-_TouchPower
 22436                           	
 22437  20FD                     _TouchPower:	
 22438                           	opt	stack 10
 22439                           ; Regs used in _TouchPower: []
 22440                           	line	11
 22441                           	
 22442  20FD                     l24566:	
 22443                           ;Switch_B1.c: 11: while(!RC5)
 22444  20FD  28FF               	goto	l16429
 22445                           	
 22446  20FE                     l16430:	
 22447                           	line	12
 22448                           ;Switch_B1.c: 12: RC5=1;
 22449  20FE  168E               	bsf	(117/8),(117)&7
 22450                           	
 22451  20FF                     l16429:	
 22452                           	line	11
 22453  20FF  0020               	movlb 0	; select bank0
 22454  2100  1E8E               	btfss	(117/8),(117)&7
 22455  2101  2903               	goto	u8931
 22456  2102  2904               	goto	u8930
 22457  2103                     u8931:
 22458  2103  28FE               	goto	l16430
 22459  2104                     u8930:
 22460  2104  2905               	goto	l16432
 22461                           	
 22462  2105                     l16431:	
 22463                           	line	13
 22464                           	
 22465  2105                     l16432:	
 22466  2105  0008               	return
 22467                           	opt stack 0
 22468                           GLOBAL	__end_of_TouchPower
 22469  2106                     	__end_of_TouchPower:
 22470 ;; =============== function _TouchPower ends ============
 22471                           
 22472                           	signat	_TouchPower,88
 22473                           	global	_RfSWPointSelect
 22474                           psect	text4182,local,class=CODE,delta=2
 22475                           global __ptext4182
 22476  224A                     __ptext4182:
 22477                           
 22478 ;; *************** function _RfSWPointSelect *****************
 22479 ;; Defined at:
 22480 ;;		line 340 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
 22481 ;; Parameters:    Size  Location     Type
 22482 ;;  sw              1    wreg     unsigned char 
 22483 ;; Auto vars:     Size  Location     Type
 22484 ;;  sw              1    1[BANK0 ] unsigned char 
 22485 ;; Return value:  Size  Location     Type
 22486 ;;		None               void
 22487 ;; Registers used:
 22488 ;;		wreg
 22489 ;; Tracked objects:
 22490 ;;		On entry : 0/0
 22491 ;;		On exit  : 0/0
 22492 ;;		Unchanged: 0/0
 22493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 22494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 22495 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 22496 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 22497 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 22498 ;;Total ram usage:        2 bytes
 22499 ;; Hardware stack levels used:    1
 22500 ;; Hardware stack levels required when called:    4
 22501 ;; This function calls:
 22502 ;;		Nothing
 22503 ;; This function is called by:
 22504 ;;		_setRFSW_Control
 22505 ;;		_setRFSW_AdjControl
 22506 ;;		_setRFSW_Status
 22507 ;; This function uses a non-reentrant model
 22508 ;;
 22509                           psect	text4182
 22510                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
 22511                           	line	340
 22512                           	global	__size_of_RfSWPointSelect
 22513  000F                     	__size_of_RfSWPointSelect	equ	__end_of_RfSWPointSelect-_RfSWPointSelect
 22514                           	
 22515  224A                     _RfSWPointSelect:	
 22516                           	opt	stack 8
 22517                           ; Regs used in _RfSWPointSelect: [wreg]
 22518                           ;RfSWPointSelect@sw stored from wreg
 22519                           	line	342
 22520  224A  0020               	movlb 0	; select bank0
 22521  224B  00A1               	movwf	(RfSWPointSelect@sw)
 22522                           	
 22523  224C                     l22590:	
 22524                           ;RF_Control_B1.c: 342: if(sw == 1)
 22525  224C  0821               	movf	(RfSWPointSelect@sw),w
 22526  224D  3A01               	xorlw	01h&0ffh
 22527  224E  1D03               	skipz
 22528  224F  2A51               	goto	u5761
 22529  2250  2A52               	goto	u5760
 22530  2251                     u5761:
 22531  2251  2A58               	goto	l15267
 22532  2252                     u5760:
 22533                           	line	344
 22534                           	
 22535  2252                     l22592:	
 22536                           ;RF_Control_B1.c: 343: {
 22537                           ;RF_Control_B1.c: 344: RFSW=&RFSW1;
 22538  2252  30E9               	movlw	(_RFSW1)&0ffh
 22539  2253  00A0               	movwf	(??_RfSWPointSelect+0)+0
 22540  2254  0820               	movf	(??_RfSWPointSelect+0)+0,w
 22541  2255  0021               	movlb 1	; select bank1
 22542  2256  00BC               	movwf	(_RFSW)^080h
 22543  2257  2A58               	goto	l15267
 22544                           	line	345
 22545                           	
 22546  2258                     l15266:	
 22547                           	line	359
 22548                           	
 22549  2258                     l15267:	
 22550  2258  0008               	return
 22551                           	opt stack 0
 22552                           GLOBAL	__end_of_RfSWPointSelect
 22553  2259                     	__end_of_RfSWPointSelect:
 22554 ;; =============== function _RfSWPointSelect ends ============
 22555                           
 22556                           	signat	_RfSWPointSelect,4216
 22557                           	global	_setRF_Initialization
 22558                           psect	text4183,local,class=CODE,delta=2
 22559                           global __ptext4183
 22560  20DE                     __ptext4183:
 22561                           
 22562 ;; *************** function _setRF_Initialization *****************
 22563 ;; Defined at:
 22564 ;;		line 51 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
 22565 ;; Parameters:    Size  Location     Type
 22566 ;;  rf              1    wreg     unsigned char 
 22567 ;; Auto vars:     Size  Location     Type
 22568 ;;  rf              1    0[COMMON] unsigned char 
 22569 ;; Return value:  Size  Location     Type
 22570 ;;		None               void
 22571 ;; Registers used:
 22572 ;;		wreg
 22573 ;; Tracked objects:
 22574 ;;		On entry : 0/0
 22575 ;;		On exit  : 0/0
 22576 ;;		Unchanged: 0/0
 22577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 22578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 22579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 22580 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 22581 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 22582 ;;Total ram usage:        1 bytes
 22583 ;; Hardware stack levels used:    1
 22584 ;; Hardware stack levels required when called:    4
 22585 ;; This function calls:
 22586 ;;		Nothing
 22587 ;; This function is called by:
 22588 ;;		_RF_Initialization
 22589 ;; This function uses a non-reentrant model
 22590 ;;
 22591                           psect	text4183
 22592                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
 22593                           	line	51
 22594                           	global	__size_of_setRF_Initialization
 22595  0007                     	__size_of_setRF_Initialization	equ	__end_of_setRF_Initialization-_setRF_Initialization
 22596                           	
 22597  20DE                     _setRF_Initialization:	
 22598                           	opt	stack 10
 22599                           ; Regs used in _setRF_Initialization: [wreg]
 22600                           	line	54
 22601                           	
 22602  20DE                     l22588:	
 22603                           ;RF_Control_B1.c: 54: Tx_Length=21;
 22604  20DE  3015               	movlw	(015h)
 22605  20DF  0020               	movlb 0	; select bank0
 22606  20E0  00A0               	movwf	(??_setRF_Initialization+0)+0
 22607  20E1  0820               	movf	(??_setRF_Initialization+0)+0,w
 22608  20E2  0021               	movlb 1	; select bank1
 22609  20E3  00C0               	movwf	(_Tx_Length)^080h
 22610                           	line	56
 22611                           	
 22612  20E4                     l15207:	
 22613  20E4  0008               	return
 22614                           	opt stack 0
 22615                           GLOBAL	__end_of_setRF_Initialization
 22616  20E5                     	__end_of_setRF_Initialization:
 22617 ;; =============== function _setRF_Initialization ends ============
 22618                           
 22619                           	signat	_setRF_Initialization,4216
 22620                           	global	_RfPointSelect
 22621                           psect	text4184,local,class=CODE,delta=2
 22622                           global __ptext4184
 22623  2202                     __ptext4184:
 22624                           
 22625 ;; *************** function _RfPointSelect *****************
 22626 ;; Defined at:
 22627 ;;		line 8 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
 22628 ;; Parameters:    Size  Location     Type
 22629 ;;  rf              1    wreg     unsigned char 
 22630 ;; Auto vars:     Size  Location     Type
 22631 ;;  rf              1    1[BANK0 ] unsigned char 
 22632 ;; Return value:  Size  Location     Type
 22633 ;;		None               void
 22634 ;; Registers used:
 22635 ;;		wreg
 22636 ;; Tracked objects:
 22637 ;;		On entry : 0/0
 22638 ;;		On exit  : 0/0
 22639 ;;		Unchanged: 0/0
 22640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 22641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 22642 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 22643 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 22644 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 22645 ;;Total ram usage:        2 bytes
 22646 ;; Hardware stack levels used:    1
 22647 ;; Hardware stack levels required when called:    4
 22648 ;; This function calls:
 22649 ;;		Nothing
 22650 ;; This function is called by:
 22651 ;;		_setRF_Learn
 22652 ;;		_setRF_RxStatus
 22653 ;;		_setRF_Main
 22654 ;;		_setTxData
 22655 ;;		_setRF_Enable
 22656 ;;		_RF_RxDisable
 22657 ;;		_getRxData
 22658 ;;		_setLog_Code
 22659 ;;		_setControl_Lights_Table
 22660 ;; This function uses a non-reentrant model
 22661 ;;
 22662                           psect	text4184
 22663                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
 22664                           	line	8
 22665                           	global	__size_of_RfPointSelect
 22666  000E                     	__size_of_RfPointSelect	equ	__end_of_RfPointSelect-_RfPointSelect
 22667                           	
 22668  2202                     _RfPointSelect:	
 22669                           	opt	stack 8
 22670                           ; Regs used in _RfPointSelect: [wreg]
 22671                           ;RfPointSelect@rf stored from wreg
 22672                           	line	10
 22673  2202  0020               	movlb 0	; select bank0
 22674  2203  00A1               	movwf	(RfPointSelect@rf)
 22675                           	
 22676  2204                     l22584:	
 22677                           ;RF_Control_B1.c: 10: if(rf == 1)
 22678  2204  0821               	movf	(RfPointSelect@rf),w
 22679  2205  3A01               	xorlw	01h&0ffh
 22680  2206  1D03               	skipz
 22681  2207  2A09               	goto	u5751
 22682  2208  2A0A               	goto	u5750
 22683  2209                     u5751:
 22684  2209  2A0F               	goto	l15189
 22685  220A                     u5750:
 22686                           	line	12
 22687                           	
 22688  220A                     l22586:	
 22689                           ;RF_Control_B1.c: 11: {
 22690                           ;RF_Control_B1.c: 12: RF=&RF1;
 22691  220A  30E7               	movlw	(_RF1)&0ffh
 22692  220B  00A0               	movwf	(??_RfPointSelect+0)+0
 22693  220C  0820               	movf	(??_RfPointSelect+0)+0,w
 22694  220D  00FB               	movwf	(_RF)
 22695  220E  2A0F               	goto	l15189
 22696                           	line	13
 22697                           	
 22698  220F                     l15188:	
 22699                           	line	15
 22700                           	
 22701  220F                     l15189:	
 22702  220F  0008               	return
 22703                           	opt stack 0
 22704                           GLOBAL	__end_of_RfPointSelect
 22705  2210                     	__end_of_RfPointSelect:
 22706 ;; =============== function _RfPointSelect ends ============
 22707                           
 22708                           	signat	_RfPointSelect,4216
 22709                           	global	_setPowerFault_Initialization
 22710                           psect	text4185,local,class=CODE,delta=2
 22711                           global __ptext4185
 22712  21F4                     __ptext4185:
 22713                           
 22714 ;; *************** function _setPowerFault_Initialization *****************
 22715 ;; Defined at:
 22716 ;;		line 30 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\PowerFault_B1.c"
 22717 ;; Parameters:    Size  Location     Type
 22718 ;;		None
 22719 ;; Auto vars:     Size  Location     Type
 22720 ;;		None
 22721 ;; Return value:  Size  Location     Type
 22722 ;;		None               void
 22723 ;; Registers used:
 22724 ;;		wreg, fsr1l, fsr1h
 22725 ;; Tracked objects:
 22726 ;;		On entry : 0/0
 22727 ;;		On exit  : 0/0
 22728 ;;		Unchanged: 0/0
 22729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 22730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 22731 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 22732 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 22733 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 22734 ;;Total ram usage:        1 bytes
 22735 ;; Hardware stack levels used:    1
 22736 ;; Hardware stack levels required when called:    4
 22737 ;; This function calls:
 22738 ;;		Nothing
 22739 ;; This function is called by:
 22740 ;;		_PowerFault_Initialization
 22741 ;; This function uses a non-reentrant model
 22742 ;;
 22743                           psect	text4185
 22744                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\PowerFault_B1.c"
 22745                           	line	30
 22746                           	global	__size_of_setPowerFault_Initialization
 22747  000E                     	__size_of_setPowerFault_Initialization	equ	__end_of_setPowerFault_Initialization-_setPo
                                 werFault_Initialization
 22748                           	
 22749  21F4                     _setPowerFault_Initialization:	
 22750                           	opt	stack 10
 22751                           ; Regs used in _setPowerFault_Initialization: [wregfsr1]
 22752                           	line	31
 22753                           	
 22754  21F4                     l22572:	
 22755                           ;PowerFault_B1.c: 31: PF=&PF1;
 22756  21F4  30C4               	movlw	(_PF1)&0ffh
 22757  21F5  0020               	movlb 0	; select bank0
 22758  21F6  00A0               	movwf	(??_setPowerFault_Initialization+0)+0
 22759  21F7  0820               	movf	(??_setPowerFault_Initialization+0)+0,w
 22760  21F8  00FA               	movwf	(_PF)
 22761                           	line	32
 22762                           	
 22763  21F9                     l22574:	
 22764                           ;PowerFault_B1.c: 32: PF->Enable=1;
 22765  21F9  087A               	movf	(_PF),w
 22766  21FA  0086               	movwf	fsr1l
 22767  21FB  0187               	clrf fsr1h	
 22768                           	
 22769  21FC  1401               	bsf	indf1,0
 22770                           	line	33
 22771                           	
 22772  21FD                     l22576:	
 22773                           ;PowerFault_B1.c: 33: PF->Safe=1;
 22774  21FD  087A               	movf	(_PF),w
 22775  21FE  0086               	movwf	fsr1l
 22776  21FF  0187               	clrf fsr1h	
 22777                           	
 22778  2200  1501               	bsf	indf1,2
 22779                           	line	34
 22780                           	
 22781  2201                     l14004:	
 22782  2201  0008               	return
 22783                           	opt stack 0
 22784                           GLOBAL	__end_of_setPowerFault_Initialization
 22785  2202                     	__end_of_setPowerFault_Initialization:
 22786 ;; =============== function _setPowerFault_Initialization ends ============
 22787                           
 22788                           	signat	_setPowerFault_Initialization,88
 22789                           	global	_setTemp_Initialization
 22790                           psect	text4186,local,class=CODE,delta=2
 22791                           global __ptext4186
 22792  214E                     __ptext4186:
 22793                           
 22794 ;; *************** function _setTemp_Initialization *****************
 22795 ;; Defined at:
 22796 ;;		line 52 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\OverTemperature_B1.c"
 22797 ;; Parameters:    Size  Location     Type
 22798 ;;		None
 22799 ;; Auto vars:     Size  Location     Type
 22800 ;;		None
 22801 ;; Return value:  Size  Location     Type
 22802 ;;		None               void
 22803 ;; Registers used:
 22804 ;;		wreg, fsr1l, fsr1h
 22805 ;; Tracked objects:
 22806 ;;		On entry : 0/0
 22807 ;;		On exit  : 0/0
 22808 ;;		Unchanged: 0/0
 22809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 22810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 22811 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 22812 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 22813 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 22814 ;;Total ram usage:        1 bytes
 22815 ;; Hardware stack levels used:    1
 22816 ;; Hardware stack levels required when called:    4
 22817 ;; This function calls:
 22818 ;;		Nothing
 22819 ;; This function is called by:
 22820 ;;		_Temp_Initialization
 22821 ;; This function uses a non-reentrant model
 22822 ;;
 22823                           psect	text4186
 22824                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\OverTemperature_B1.c"
 22825                           	line	52
 22826                           	global	__size_of_setTemp_Initialization
 22827  000B                     	__size_of_setTemp_Initialization	equ	__end_of_setTemp_Initialization-_setTemp_Initializ
                                 ation
 22828                           	
 22829  214E                     _setTemp_Initialization:	
 22830                           	opt	stack 10
 22831                           ; Regs used in _setTemp_Initialization: [wregfsr1]
 22832                           	line	53
 22833                           	
 22834  214E                     l22564:	
 22835                           ;OverTemperature_B1.c: 53: Temp=&Temp1;
 22836  214E  3030               	movlw	(_Temp1)&0ffh
 22837  214F  0020               	movlb 0	; select bank0
 22838  2150  00A0               	movwf	(??_setTemp_Initialization+0)+0
 22839  2151  0820               	movf	(??_setTemp_Initialization+0)+0,w
 22840  2152  00FC               	movwf	(_Temp)
 22841                           	line	54
 22842                           	
 22843  2153                     l22566:	
 22844                           ;OverTemperature_B1.c: 54: Temp->Safe=1;
 22845  2153  087C               	movf	(_Temp),w
 22846  2154  0086               	movwf	fsr1l
 22847  2155  3001               	movlw 1	; select bank2/3
 22848  2156  0087               	movwf fsr1h	
 22849                           	
 22850  2157  1601               	bsf	indf1,4
 22851                           	line	55
 22852                           	
 22853  2158                     l11756:	
 22854  2158  0008               	return
 22855                           	opt stack 0
 22856                           GLOBAL	__end_of_setTemp_Initialization
 22857  2159                     	__end_of_setTemp_Initialization:
 22858 ;; =============== function _setTemp_Initialization ends ============
 22859                           
 22860                           	signat	_setTemp_Initialization,88
 22861                           	global	_getLoad_Safe
 22862                           psect	text4187,local,class=CODE,delta=2
 22863                           global __ptext4187
 22864  2159                     __ptext4187:
 22865                           
 22866 ;; *************** function _getLoad_Safe *****************
 22867 ;; Defined at:
 22868 ;;		line 302 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\OverLoad_B1.c"
 22869 ;; Parameters:    Size  Location     Type
 22870 ;;		None
 22871 ;; Auto vars:     Size  Location     Type
 22872 ;;		None
 22873 ;; Return value:  Size  Location     Type
 22874 ;;                  1    wreg      unsigned char 
 22875 ;; Registers used:
 22876 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 22877 ;; Tracked objects:
 22878 ;;		On entry : 0/0
 22879 ;;		On exit  : 0/0
 22880 ;;		Unchanged: 0/0
 22881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 22882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 22883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 22884 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 22885 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 22886 ;;Total ram usage:        1 bytes
 22887 ;; Hardware stack levels used:    1
 22888 ;; Hardware stack levels required when called:    4
 22889 ;; This function calls:
 22890 ;;		Nothing
 22891 ;; This function is called by:
 22892 ;;		_setTemp_Main
 22893 ;;		_setPowerFault_Main
 22894 ;; This function uses a non-reentrant model
 22895 ;;
 22896                           psect	text4187
 22897                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\OverLoad_B1.c"
 22898                           	line	302
 22899                           	global	__size_of_getLoad_Safe
 22900  000C                     	__size_of_getLoad_Safe	equ	__end_of_getLoad_Safe-_getLoad_Safe
 22901                           	
 22902  2159                     _getLoad_Safe:	
 22903                           	opt	stack 9
 22904                           ; Regs used in _getLoad_Safe: [wreg+fsr1l-status,0]
 22905                           	line	303
 22906                           	
 22907  2159                     l22556:	
 22908                           ;OverLoad_B1.c: 303: return Load->Safe;
 22909  2159  0020               	movlb 0	; select bank0
 22910  215A  086D               	movf	(_Load),w
 22911  215B  0086               	movwf	fsr1l
 22912  215C  3002               	movlw 2	; select bank4/5
 22913  215D  0087               	movwf fsr1h	
 22914                           	
 22915  215E  0C01               	rrf	indf1,w
 22916  215F  00A0               	movwf	(??_getLoad_Safe+0)+0
 22917  2160  0CA0               	rrf	(??_getLoad_Safe+0)+0,f
 22918  2161  0C20               	rrf	(??_getLoad_Safe+0)+0,w
 22919  2162  3901               	andlw	(1<<1)-1
 22920  2163  2964               	goto	l10608
 22921                           	
 22922  2164                     l22558:	
 22923                           	line	304
 22924                           	
 22925  2164                     l10608:	
 22926  2164  0008               	return
 22927                           	opt stack 0
 22928                           GLOBAL	__end_of_getLoad_Safe
 22929  2165                     	__end_of_getLoad_Safe:
 22930 ;; =============== function _getLoad_Safe ends ============
 22931                           
 22932                           	signat	_getLoad_Safe,89
 22933                           	global	_getPF_Safe
 22934                           psect	text4188,local,class=CODE,delta=2
 22935                           global __ptext4188
 22936  20ED                     __ptext4188:
 22937                           
 22938 ;; *************** function _getPF_Safe *****************
 22939 ;; Defined at:
 22940 ;;		line 41 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\PowerFault_B1.c"
 22941 ;; Parameters:    Size  Location     Type
 22942 ;;		None
 22943 ;; Auto vars:     Size  Location     Type
 22944 ;;		None
 22945 ;; Return value:  Size  Location     Type
 22946 ;;                  1    wreg      unsigned char 
 22947 ;; Registers used:
 22948 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 22949 ;; Tracked objects:
 22950 ;;		On entry : 0/0
 22951 ;;		On exit  : 0/0
 22952 ;;		Unchanged: 0/0
 22953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 22954 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 22955 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 22956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 22957 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 22958 ;;Total ram usage:        0 bytes
 22959 ;; Hardware stack levels used:    1
 22960 ;; Hardware stack levels required when called:    4
 22961 ;; This function calls:
 22962 ;;		Nothing
 22963 ;; This function is called by:
 22964 ;;		_Load_Main
 22965 ;;		_setTemp_Main
 22966 ;; This function uses a non-reentrant model
 22967 ;;
 22968                           psect	text4188
 22969                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\PowerFault_B1.c"
 22970                           	line	41
 22971                           	global	__size_of_getPF_Safe
 22972  0008                     	__size_of_getPF_Safe	equ	__end_of_getPF_Safe-_getPF_Safe
 22973                           	
 22974  20ED                     _getPF_Safe:	
 22975                           	opt	stack 10
 22976                           ; Regs used in _getPF_Safe: [wreg+fsr1l-status,0]
 22977                           	line	42
 22978                           	
 22979  20ED                     l24562:	
 22980                           ;PowerFault_B1.c: 42: return PF->Safe;
 22981  20ED  087A               	movf	(_PF),w
 22982  20EE  0086               	movwf	fsr1l
 22983  20EF  0187               	clrf fsr1h	
 22984                           	
 22985  20F0  0C01               	rrf	indf1,w
 22986  20F1  0C89               	rrf	wreg,f
 22987  20F2  3901               	andlw	(1<<1)-1
 22988  20F3  28F4               	goto	l14010
 22989                           	
 22990  20F4                     l24564:	
 22991                           	line	43
 22992                           	
 22993  20F4                     l14010:	
 22994  20F4  0008               	return
 22995                           	opt stack 0
 22996                           GLOBAL	__end_of_getPF_Safe
 22997  20F5                     	__end_of_getPF_Safe:
 22998 ;; =============== function _getPF_Safe ends ============
 22999                           
 23000                           	signat	_getPF_Safe,89
 23001                           	global	_getTemp_Safe
 23002                           psect	text4189,local,class=CODE,delta=2
 23003                           global __ptext4189
 23004  20E5                     __ptext4189:
 23005                           
 23006 ;; *************** function _getTemp_Safe *****************
 23007 ;; Defined at:
 23008 ;;		line 27 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\OverTemperature_B1.c"
 23009 ;; Parameters:    Size  Location     Type
 23010 ;;		None
 23011 ;; Auto vars:     Size  Location     Type
 23012 ;;		None
 23013 ;; Return value:  Size  Location     Type
 23014 ;;                  1    wreg      unsigned char 
 23015 ;; Registers used:
 23016 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 23017 ;; Tracked objects:
 23018 ;;		On entry : 0/0
 23019 ;;		On exit  : 0/0
 23020 ;;		Unchanged: 0/0
 23021 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 23022 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 23023 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 23024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 23025 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 23026 ;;Total ram usage:        0 bytes
 23027 ;; Hardware stack levels used:    1
 23028 ;; Hardware stack levels required when called:    4
 23029 ;; This function calls:
 23030 ;;		Nothing
 23031 ;; This function is called by:
 23032 ;;		_Load_Main
 23033 ;;		_setPowerFault_Main
 23034 ;; This function uses a non-reentrant model
 23035 ;;
 23036                           psect	text4189
 23037                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\OverTemperature_B1.c"
 23038                           	line	27
 23039                           	global	__size_of_getTemp_Safe
 23040  0008                     	__size_of_getTemp_Safe	equ	__end_of_getTemp_Safe-_getTemp_Safe
 23041                           	
 23042  20E5                     _getTemp_Safe:	
 23043                           	opt	stack 9
 23044                           ; Regs used in _getTemp_Safe: [wreg+fsr1l-status,0]
 23045                           	line	28
 23046                           	
 23047  20E5                     l24558:	
 23048                           ;OverTemperature_B1.c: 28: return Temp->Safe;
 23049  20E5  087C               	movf	(_Temp),w
 23050  20E6  0086               	movwf	fsr1l
 23051  20E7  3001               	movlw 1	; select bank2/3
 23052  20E8  0087               	movwf fsr1h	
 23053                           	
 23054  20E9  0E01               	swapf	indf1,w
 23055  20EA  3901               	andlw	(1<<1)-1
 23056  20EB  28EC               	goto	l11743
 23057                           	
 23058  20EC                     l24560:	
 23059                           	line	29
 23060                           	
 23061  20EC                     l11743:	
 23062  20EC  0008               	return
 23063                           	opt stack 0
 23064                           GLOBAL	__end_of_getTemp_Safe
 23065  20ED                     	__end_of_getTemp_Safe:
 23066 ;; =============== function _getTemp_Safe ends ============
 23067                           
 23068                           	signat	_getTemp_Safe,89
 23069                           	global	_setLoad_AH_AL_Restore
 23070                           psect	text4190,local,class=CODE,delta=2
 23071                           global __ptext4190
 23072  26BE                     __ptext4190:
 23073                           
 23074 ;; *************** function _setLoad_AH_AL_Restore *****************
 23075 ;; Defined at:
 23076 ;;		line 311 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\OverLoad_B1.c"
 23077 ;; Parameters:    Size  Location     Type
 23078 ;;		None
 23079 ;; Auto vars:     Size  Location     Type
 23080 ;;  i               1    1[BANK0 ] unsigned char 
 23081 ;; Return value:  Size  Location     Type
 23082 ;;		None               void
 23083 ;; Registers used:
 23084 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 23085 ;; Tracked objects:
 23086 ;;		On entry : 0/0
 23087 ;;		On exit  : 0/0
 23088 ;;		Unchanged: 0/0
 23089 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 23090 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 23091 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 23092 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 23093 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 23094 ;;Total ram usage:        2 bytes
 23095 ;; Hardware stack levels used:    1
 23096 ;; Hardware stack levels required when called:    4
 23097 ;; This function calls:
 23098 ;;		Nothing
 23099 ;; This function is called by:
 23100 ;;		_Load_Initialization
 23101 ;;		_Load_Main
 23102 ;; This function uses a non-reentrant model
 23103 ;;
 23104                           psect	text4190
 23105                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\OverLoad_B1.c"
 23106                           	line	311
 23107                           	global	__size_of_setLoad_AH_AL_Restore
 23108  0030                     	__size_of_setLoad_AH_AL_Restore	equ	__end_of_setLoad_AH_AL_Restore-_setLoad_AH_AL_Resto
                                 re
 23109                           	
 23110  26BE                     _setLoad_AH_AL_Restore:	
 23111                           	opt	stack 10
 23112                           ; Regs used in _setLoad_AH_AL_Restore: [wreg+fsr1l-status,0]
 23113                           	line	313
 23114                           	
 23115  26BE                     l22536:	
 23116                           ;OverLoad_B1.c: 312: char i;
 23117                           ;OverLoad_B1.c: 313: for(i=0 ; i<5 ;i++)
 23118  26BE  0020               	movlb 0	; select bank0
 23119  26BF  01A1               	clrf	(setLoad_AH_AL_Restore@i)
 23120                           	
 23121  26C0                     l22538:	
 23122  26C0  3005               	movlw	(05h)
 23123  26C1  0221               	subwf	(setLoad_AH_AL_Restore@i),w
 23124  26C2  1C03               	skipc
 23125  26C3  2EC5               	goto	u5731
 23126  26C4  2EC6               	goto	u5730
 23127  26C5                     u5731:
 23128  26C5  2EC8               	goto	l22542
 23129  26C6                     u5730:
 23130  26C6  2EED               	goto	l10616
 23131                           	
 23132  26C7                     l22540:	
 23133  26C7  2EED               	goto	l10616
 23134                           	line	314
 23135                           	
 23136  26C8                     l10614:	
 23137                           	line	315
 23138                           	
 23139  26C8                     l22542:	
 23140                           ;OverLoad_B1.c: 314: {
 23141                           ;OverLoad_B1.c: 315: Load->AH[i]=0;
 23142  26C8  0821               	movf	(setLoad_AH_AL_Restore@i),w
 23143  26C9  0709               	addwf	wreg,w
 23144  26CA  3E08               	addlw	08h
 23145  26CB  076D               	addwf	(_Load),w
 23146  26CC  00A0               	movwf	(??_setLoad_AH_AL_Restore+0)+0
 23147  26CD  0820               	movf	0+(??_setLoad_AH_AL_Restore+0)+0,w
 23148  26CE  0086               	movwf	fsr1l
 23149  26CF  3002               	movlw 2	; select bank4/5
 23150  26D0  0087               	movwf fsr1h	
 23151                           	
 23152  26D1  3000               	movlw	low(0)
 23153  26D2  3FC0               	movwi	[0]fsr1
 23154  26D3  3000               	movlw	high(0)
 23155  26D4  3FC1               	movwi	[1]fsr1
 23156                           	line	316
 23157                           ;OverLoad_B1.c: 316: Load->AL[i]=0xffff;
 23158  26D5  0821               	movf	(setLoad_AH_AL_Restore@i),w
 23159  26D6  0709               	addwf	wreg,w
 23160  26D7  3E1A               	addlw	01Ah
 23161  26D8  076D               	addwf	(_Load),w
 23162  26D9  00A0               	movwf	(??_setLoad_AH_AL_Restore+0)+0
 23163  26DA  0820               	movf	0+(??_setLoad_AH_AL_Restore+0)+0,w
 23164  26DB  0086               	movwf	fsr1l
 23165  26DC  3002               	movlw 2	; select bank4/5
 23166  26DD  0087               	movwf fsr1h	
 23167                           	
 23168  26DE  30FF               	movlw	low(0FFFFh)
 23169  26DF  3FC0               	movwi	[0]fsr1
 23170  26E0  30FF               	movlw	high(0FFFFh)
 23171  26E1  3FC1               	movwi	[1]fsr1
 23172                           	line	313
 23173                           	
 23174  26E2                     l22544:	
 23175  26E2  3001               	movlw	(01h)
 23176  26E3  00A0               	movwf	(??_setLoad_AH_AL_Restore+0)+0
 23177  26E4  0820               	movf	(??_setLoad_AH_AL_Restore+0)+0,w
 23178  26E5  07A1               	addwf	(setLoad_AH_AL_Restore@i),f
 23179                           	
 23180  26E6                     l22546:	
 23181  26E6  3005               	movlw	(05h)
 23182  26E7  0221               	subwf	(setLoad_AH_AL_Restore@i),w
 23183  26E8  1C03               	skipc
 23184  26E9  2EEB               	goto	u5741
 23185  26EA  2EEC               	goto	u5740
 23186  26EB                     u5741:
 23187  26EB  2EC8               	goto	l22542
 23188  26EC                     u5740:
 23189  26EC  2EED               	goto	l10616
 23190                           	
 23191  26ED                     l10615:	
 23192                           	line	318
 23193                           	
 23194  26ED                     l10616:	
 23195  26ED  0008               	return
 23196                           	opt stack 0
 23197                           GLOBAL	__end_of_setLoad_AH_AL_Restore
 23198  26EE                     	__end_of_setLoad_AH_AL_Restore:
 23199 ;; =============== function _setLoad_AH_AL_Restore ends ============
 23200                           
 23201                           	signat	_setLoad_AH_AL_Restore,88
 23202                           	global	_Flash_Memory_Read
 23203                           psect	text4191,local,class=CODE,delta=2
 23204                           global __ptext4191
 23205  23C8                     __ptext4191:
 23206                           
 23207 ;; *************** function _Flash_Memory_Read *****************
 23208 ;; Defined at:
 23209 ;;		line 507 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_16f1518_B1.c"
 23210 ;; Parameters:    Size  Location     Type
 23211 ;;  address         1    wreg     unsigned char 
 23212 ;; Auto vars:     Size  Location     Type
 23213 ;;  address         1    2[BANK0 ] unsigned char 
 23214 ;;  ret             1    3[BANK0 ] unsigned char 
 23215 ;;  i               1    1[BANK0 ] unsigned char 
 23216 ;; Return value:  Size  Location     Type
 23217 ;;                  1    wreg      unsigned char 
 23218 ;; Registers used:
 23219 ;;		wreg
 23220 ;; Tracked objects:
 23221 ;;		On entry : 0/0
 23222 ;;		On exit  : 0/0
 23223 ;;		Unchanged: 0/0
 23224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 23225 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 23226 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 23227 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 23228 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 23229 ;;Total ram usage:        4 bytes
 23230 ;; Hardware stack levels used:    1
 23231 ;; Hardware stack levels required when called:    4
 23232 ;; This function calls:
 23233 ;;		Nothing
 23234 ;; This function is called by:
 23235 ;;		_Flash_Memory_Initialization
 23236 ;;		_Flash_Memory_Modify
 23237 ;; This function uses a non-reentrant model
 23238 ;;
 23239                           psect	text4191
 23240                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_16f1518_B1.c"
 23241                           	line	507
 23242                           	global	__size_of_Flash_Memory_Read
 23243  001A                     	__size_of_Flash_Memory_Read	equ	__end_of_Flash_Memory_Read-_Flash_Memory_Read
 23244                           	
 23245  23C8                     _Flash_Memory_Read:	
 23246                           	opt	stack 9
 23247                           ; Regs used in _Flash_Memory_Read: [wreg]
 23248                           ;Flash_Memory_Read@address stored from wreg
 23249  23C8  0020               	movlb 0	; select bank0
 23250  23C9  00A2               	movwf	(Flash_Memory_Read@address)
 23251                           	line	508
 23252                           	
 23253  23CA                     l22526:	
 23254                           ;MCU_16f1518_B1.c: 508: char i,ret=0;
 23255  23CA  01A3               	clrf	(Flash_Memory_Read@ret)
 23256                           	line	509
 23257                           	
 23258  23CB                     l22528:	
 23259                           ;MCU_16f1518_B1.c: 509: PMADRH=0x30;
 23260  23CB  3030               	movlw	(030h)
 23261  23CC  0023               	movlb 3	; select bank3
 23262  23CD  0092               	movwf	(402)^0180h	;volatile
 23263                           	line	510
 23264                           ;MCU_16f1518_B1.c: 510: PMADRL=address;
 23265  23CE  0020               	movlb 0	; select bank0
 23266  23CF  0822               	movf	(Flash_Memory_Read@address),w
 23267  23D0  0023               	movlb 3	; select bank3
 23268  23D1  0091               	movwf	(401)^0180h	;volatile
 23269                           	line	511
 23270                           	
 23271  23D2                     l22530:	
 23272                           ;MCU_16f1518_B1.c: 511: CFGS=0;
 23273  23D2  1315               	bcf	(3246/8)^0180h,(3246)&7
 23274                           	line	512
 23275                           	
 23276  23D3                     l22532:	
 23277                           ;MCU_16f1518_B1.c: 512: RD=1;
 23278  23D3  1415               	bsf	(3240/8)^0180h,(3240)&7
 23279                           	line	513
 23280                           ;MCU_16f1518_B1.c: 513: i=PMDATH;
 23281  23D4  0814               	movf	(404)^0180h,w	;volatile
 23282  23D5  0020               	movlb 0	; select bank0
 23283  23D6  00A0               	movwf	(??_Flash_Memory_Read+0)+0
 23284  23D7  0820               	movf	(??_Flash_Memory_Read+0)+0,w
 23285  23D8  00A1               	movwf	(Flash_Memory_Read@i)
 23286                           	line	514
 23287                           ;MCU_16f1518_B1.c: 514: ret=PMDATL;
 23288  23D9  0023               	movlb 3	; select bank3
 23289  23DA  0813               	movf	(403)^0180h,w	;volatile
 23290  23DB  0020               	movlb 0	; select bank0
 23291  23DC  00A0               	movwf	(??_Flash_Memory_Read+0)+0
 23292  23DD  0820               	movf	(??_Flash_Memory_Read+0)+0,w
 23293  23DE  00A3               	movwf	(Flash_Memory_Read@ret)
 23294                           	line	515
 23295                           ;MCU_16f1518_B1.c: 515: return ret;
 23296  23DF  0823               	movf	(Flash_Memory_Read@ret),w
 23297  23E0  2BE1               	goto	l9406
 23298                           	
 23299  23E1                     l22534:	
 23300                           	line	516
 23301                           	
 23302  23E1                     l9406:	
 23303  23E1  0008               	return
 23304                           	opt stack 0
 23305                           GLOBAL	__end_of_Flash_Memory_Read
 23306  23E2                     	__end_of_Flash_Memory_Read:
 23307 ;; =============== function _Flash_Memory_Read ends ============
 23308                           
 23309                           	signat	_Flash_Memory_Read,4217
 23310                           	global	_getAD
 23311                           psect	text4192,local,class=CODE,delta=2
 23312                           global __ptext4192
 23313  2440                     __ptext4192:
 23314                           
 23315 ;; *************** function _getAD *****************
 23316 ;; Defined at:
 23317 ;;		line 310 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_16f1518_B1.c"
 23318 ;; Parameters:    Size  Location     Type
 23319 ;;  adcon0          1    wreg     unsigned char 
 23320 ;;  adcon1          1    0[BANK0 ] unsigned char 
 23321 ;; Auto vars:     Size  Location     Type
 23322 ;;  adcon0          1    6[BANK0 ] unsigned char 
 23323 ;; Return value:  Size  Location     Type
 23324 ;;                  2    0[BANK0 ] int 
 23325 ;; Registers used:
 23326 ;;		wreg, status,2, status,0, btemp+1
 23327 ;; Tracked objects:
 23328 ;;		On entry : 0/0
 23329 ;;		On exit  : 0/0
 23330 ;;		Unchanged: 0/0
 23331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 23332 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 23333 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 23334 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 23335 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
       0       0
 23336 ;;Total ram usage:        7 bytes
 23337 ;; Hardware stack levels used:    1
 23338 ;; Hardware stack levels required when called:    4
 23339 ;; This function calls:
 23340 ;;		Nothing
 23341 ;; This function is called by:
 23342 ;;		_getLoad_AD
 23343 ;;		_getTemp_AD
 23344 ;;		_getPowerFault_AD
 23345 ;; This function uses a non-reentrant model
 23346 ;;
 23347                           psect	text4192
 23348                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_16f1518_B1.c"
 23349                           	line	310
 23350                           	global	__size_of_getAD
 23351  0024                     	__size_of_getAD	equ	__end_of_getAD-_getAD
 23352                           	
 23353  2440                     _getAD:	
 23354                           	opt	stack 10
 23355                           ; Regs used in _getAD: [wreg+status,2+status,0+btemp+1]
 23356                           ;getAD@adcon0 stored from wreg
 23357  2440  0020               	movlb 0	; select bank0
 23358  2441  00A6               	movwf	(getAD@adcon0)
 23359                           	line	311
 23360                           	
 23361  2442                     l22518:	
 23362                           ;MCU_16f1518_B1.c: 311: ADCON0=adcon0;
 23363  2442  0826               	movf	(getAD@adcon0),w
 23364  2443  0021               	movlb 1	; select bank1
 23365  2444  009D               	movwf	(157)^080h	;volatile
 23366                           	line	312
 23367                           ;MCU_16f1518_B1.c: 312: ADCON1=adcon1;
 23368  2445  0020               	movlb 0	; select bank0
 23369  2446  0820               	movf	(getAD@adcon1),w
 23370  2447  0021               	movlb 1	; select bank1
 23371  2448  009E               	movwf	(158)^080h	;volatile
 23372                           	line	313
 23373                           	
 23374  2449                     l22520:	
 23375                           ;MCU_16f1518_B1.c: 313: GO_nDONE=1;
 23376  2449  149D               	bsf	(1257/8)^080h,(1257)&7
 23377                           	line	314
 23378                           ;MCU_16f1518_B1.c: 314: while(GO_nDONE);
 23379  244A  2C4B               	goto	l9384
 23380                           	
 23381  244B                     l9385:	
 23382                           	
 23383  244B                     l9384:	
 23384  244B  189D               	btfsc	(1257/8)^080h,(1257)&7
 23385  244C  2C4E               	goto	u5721
 23386  244D  2C4F               	goto	u5720
 23387  244E                     u5721:
 23388  244E  2C4B               	goto	l9384
 23389  244F                     u5720:
 23390  244F  2C50               	goto	l22522
 23391                           	
 23392  2450                     l9386:	
 23393                           	line	315
 23394                           	
 23395  2450                     l22522:	
 23396                           ;MCU_16f1518_B1.c: 315: return ((ADRESH*256)+ADRESL);
 23397  2450  081B               	movf	(155)^080h,w	;volatile
 23398  2451  0020               	movlb 0	; select bank0
 23399  2452  00A2               	movwf	(??_getAD+0)+0
 23400  2453  01A3               	clrf	(??_getAD+0)+0+1
 23401  2454  0021               	movlb 1	; select bank1
 23402  2455  081C               	movf	(156)^080h,w	;volatile
 23403  2456  0020               	movlb 0	; select bank0
 23404  2457  00A4               	movwf	(??_getAD+2)+0
 23405  2458  01A5               	clrf	(??_getAD+2)+0+1
 23406  2459  0824               	movf	(??_getAD+2)+0,w
 23407  245A  00A5               	movwf	(??_getAD+2)+1
 23408  245B  01A4               	clrf	(??_getAD+2)+0
 23409  245C  0822               	movf	0+(??_getAD+0)+0,w
 23410  245D  0724               	addwf	0+(??_getAD+2)+0,w
 23411  245E  00A0               	movwf	(?_getAD)
 23412  245F  0823               	movf	1+(??_getAD+0)+0,w
 23413  2460  3D25               	addwfc	1+(??_getAD+2)+0,w
 23414  2461  00A1               	movwf	1+(?_getAD)
 23415  2462  2C63               	goto	l9387
 23416                           	
 23417  2463                     l22524:	
 23418                           	line	316
 23419                           	
 23420  2463                     l9387:	
 23421  2463  0008               	return
 23422                           	opt stack 0
 23423                           GLOBAL	__end_of_getAD
 23424  2464                     	__end_of_getAD:
 23425 ;; =============== function _getAD ends ============
 23426                           
 23427                           	signat	_getAD,8314
 23428                           	global	_setINT_GO
 23429                           psect	text4193,local,class=CODE,delta=2
 23430                           global __ptext4193
 23431  2119                     __ptext4193:
 23432                           
 23433 ;; *************** function _setINT_GO *****************
 23434 ;; Defined at:
 23435 ;;		line 236 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_16f1518_B1.c"
 23436 ;; Parameters:    Size  Location     Type
 23437 ;;  command         1    wreg     unsigned char 
 23438 ;; Auto vars:     Size  Location     Type
 23439 ;;  command         1    0[BANK0 ] unsigned char 
 23440 ;; Return value:  Size  Location     Type
 23441 ;;		None               void
 23442 ;; Registers used:
 23443 ;;		wreg
 23444 ;; Tracked objects:
 23445 ;;		On entry : 0/0
 23446 ;;		On exit  : 0/0
 23447 ;;		Unchanged: 0/0
 23448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 23449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 23450 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 23451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 23452 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 23453 ;;Total ram usage:        1 bytes
 23454 ;; Hardware stack levels used:    1
 23455 ;; Hardware stack levels required when called:    4
 23456 ;; This function calls:
 23457 ;;		Nothing
 23458 ;; This function is called by:
 23459 ;;		_setRF_Main
 23460 ;;		_setRF_Enable
 23461 ;;		_RF_RxDisable
 23462 ;; This function uses a non-reentrant model
 23463 ;;
 23464                           psect	text4193
 23465                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_16f1518_B1.c"
 23466                           	line	236
 23467                           	global	__size_of_setINT_GO
 23468  000A                     	__size_of_setINT_GO	equ	__end_of_setINT_GO-_setINT_GO
 23469                           	
 23470  2119                     _setINT_GO:	
 23471                           	opt	stack 8
 23472                           ; Regs used in _setINT_GO: [wreg]
 23473                           ;setINT_GO@command stored from wreg
 23474  2119  0020               	movlb 0	; select bank0
 23475  211A  00A0               	movwf	(setINT_GO@command)
 23476                           	line	237
 23477                           	
 23478  211B                     l24554:	
 23479                           ;MCU_16f1518_B1.c: 237: INTF=0;
 23480  211B  108B               	bcf	(89/8),(89)&7
 23481                           	line	238
 23482                           	
 23483  211C                     l24556:	
 23484                           ;MCU_16f1518_B1.c: 238: INTE=command;
 23485  211C  1820               	btfsc	(setINT_GO@command),0
 23486  211D  291F               	goto	u8911
 23487  211E  2921               	goto	u8910
 23488                           	
 23489  211F                     u8911:
 23490  211F  160B               	bsf	(92/8),(92)&7
 23491  2120  2922               	goto	u8924
 23492  2121                     u8910:
 23493  2121  120B               	bcf	(92/8),(92)&7
 23494  2122                     u8924:
 23495                           	line	239
 23496                           	
 23497  2122                     l9368:	
 23498  2122  0008               	return
 23499                           	opt stack 0
 23500                           GLOBAL	__end_of_setINT_GO
 23501  2123                     	__end_of_setINT_GO:
 23502 ;; =============== function _setINT_GO ends ============
 23503                           
 23504                           	signat	_setINT_GO,4216
 23505                           	global	_IOC_Set
 23506                           psect	text4194,local,class=CODE,delta=2
 23507                           global __ptext4194
 23508  2198                     __ptext4194:
 23509                           
 23510 ;; *************** function _IOC_Set *****************
 23511 ;; Defined at:
 23512 ;;		line 247 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_16f1518_B1.c"
 23513 ;; Parameters:    Size  Location     Type
 23514 ;;		None
 23515 ;; Auto vars:     Size  Location     Type
 23516 ;;		None
 23517 ;; Return value:  Size  Location     Type
 23518 ;;		None               void
 23519 ;; Registers used:
 23520 ;;		wreg, status,2
 23521 ;; Tracked objects:
 23522 ;;		On entry : 0/0
 23523 ;;		On exit  : 0/0
 23524 ;;		Unchanged: 0/0
 23525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 23526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 23527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 23528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 23529 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 23530 ;;Total ram usage:        0 bytes
 23531 ;; Hardware stack levels used:    1
 23532 ;; Hardware stack levels required when called:    4
 23533 ;; This function calls:
 23534 ;;		Nothing
 23535 ;; This function is called by:
 23536 ;;		_Mcu_Initialization
 23537 ;; This function uses a non-reentrant model
 23538 ;;
 23539                           psect	text4194
 23540                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_16f1518_B1.c"
 23541                           	line	247
 23542                           	global	__size_of_IOC_Set
 23543  000D                     	__size_of_IOC_Set	equ	__end_of_IOC_Set-_IOC_Set
 23544                           	
 23545  2198                     _IOC_Set:	
 23546                           	opt	stack 10
 23547                           ; Regs used in _IOC_Set: [wreg+status,2]
 23548                           	line	248
 23549                           	
 23550  2198                     l24540:	
 23551                           ;MCU_16f1518_B1.c: 248: WPUB2=0;
 23552  2198  0024               	movlb 4	; select bank4
 23553  2199  110D               	bcf	(4202/8)^0200h,(4202)&7
 23554                           	line	250
 23555                           	
 23556  219A                     l24542:	
 23557                           ;MCU_16f1518_B1.c: 250: IOCBP=0b00000100;
 23558  219A  3004               	movlw	(04h)
 23559  219B  0027               	movlb 7	; select bank7
 23560  219C  0094               	movwf	(916)^0380h	;volatile
 23561                           	line	251
 23562                           ;MCU_16f1518_B1.c: 251: IOCBN=0b00000100;
 23563  219D  3004               	movlw	(04h)
 23564  219E  0095               	movwf	(917)^0380h	;volatile
 23565                           	line	259
 23566                           	
 23567  219F                     l24544:	
 23568                           ;MCU_16f1518_B1.c: 259: IOCBF=0b00000000;
 23569  219F  0196               	clrf	(918)^0380h	;volatile
 23570                           	line	261
 23571                           	
 23572  21A0                     l24546:	
 23573                           ;MCU_16f1518_B1.c: 261: IOCIE=1;
 23574  21A0  158B               	bsf	(91/8),(91)&7
 23575                           	line	262
 23576                           	
 23577  21A1                     l24548:	
 23578                           ;MCU_16f1518_B1.c: 262: IOCIF=0;
 23579  21A1  100B               	bcf	(88/8),(88)&7
 23580                           	line	263
 23581                           	
 23582  21A2                     l24550:	
 23583                           ;MCU_16f1518_B1.c: 263: PEIE=1;
 23584  21A2  170B               	bsf	(94/8),(94)&7
 23585                           	line	264
 23586                           	
 23587  21A3                     l24552:	
 23588                           ;MCU_16f1518_B1.c: 264: GIE=1;
 23589  21A3  178B               	bsf	(95/8),(95)&7
 23590                           	line	265
 23591                           	
 23592  21A4                     l9371:	
 23593  21A4  0008               	return
 23594                           	opt stack 0
 23595                           GLOBAL	__end_of_IOC_Set
 23596  21A5                     	__end_of_IOC_Set:
 23597 ;; =============== function _IOC_Set ends ============
 23598                           
 23599                           	signat	_IOC_Set,88
 23600                           	global	_INT_Set
 23601                           psect	text4195,local,class=CODE,delta=2
 23602                           global __ptext4195
 23603  20BE                     __ptext4195:
 23604                           
 23605 ;; *************** function _INT_Set *****************
 23606 ;; Defined at:
 23607 ;;		line 218 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_16f1518_B1.c"
 23608 ;; Parameters:    Size  Location     Type
 23609 ;;		None
 23610 ;; Auto vars:     Size  Location     Type
 23611 ;;		None
 23612 ;; Return value:  Size  Location     Type
 23613 ;;		None               void
 23614 ;; Registers used:
 23615 ;;		None
 23616 ;; Tracked objects:
 23617 ;;		On entry : 0/0
 23618 ;;		On exit  : 0/0
 23619 ;;		Unchanged: 0/0
 23620 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 23621 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 23622 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 23623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 23624 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 23625 ;;Total ram usage:        0 bytes
 23626 ;; Hardware stack levels used:    1
 23627 ;; Hardware stack levels required when called:    4
 23628 ;; This function calls:
 23629 ;;		Nothing
 23630 ;; This function is called by:
 23631 ;;		_Mcu_Initialization
 23632 ;; This function uses a non-reentrant model
 23633 ;;
 23634                           psect	text4195
 23635                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_16f1518_B1.c"
 23636                           	line	218
 23637                           	global	__size_of_INT_Set
 23638  0006                     	__size_of_INT_Set	equ	__end_of_INT_Set-_INT_Set
 23639                           	
 23640  20BE                     _INT_Set:	
 23641                           	opt	stack 10
 23642                           ; Regs used in _INT_Set: []
 23643                           	line	219
 23644                           	
 23645  20BE                     l24538:	
 23646                           ;MCU_16f1518_B1.c: 219: WPUB0=0;
 23647  20BE  0024               	movlb 4	; select bank4
 23648  20BF  100D               	bcf	(4200/8)^0200h,(4200)&7
 23649                           	line	220
 23650                           ;MCU_16f1518_B1.c: 220: INTE=1;
 23651  20C0  160B               	bsf	(92/8),(92)&7
 23652                           	line	221
 23653                           ;MCU_16f1518_B1.c: 221: PEIE=1;
 23654  20C1  170B               	bsf	(94/8),(94)&7
 23655                           	line	222
 23656                           ;MCU_16f1518_B1.c: 222: GIE=1;
 23657  20C2  178B               	bsf	(95/8),(95)&7
 23658                           	line	223
 23659                           	
 23660  20C3                     l9361:	
 23661  20C3  0008               	return
 23662                           	opt stack 0
 23663                           GLOBAL	__end_of_INT_Set
 23664  20C4                     	__end_of_INT_Set:
 23665 ;; =============== function _INT_Set ends ============
 23666                           
 23667                           	signat	_INT_Set,88
 23668                           	global	_ADC_Set
 23669                           psect	text4196,local,class=CODE,delta=2
 23670                           global __ptext4196
 23671  20D7                     __ptext4196:
 23672                           
 23673 ;; *************** function _ADC_Set *****************
 23674 ;; Defined at:
 23675 ;;		line 304 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_16f1518_B1.c"
 23676 ;; Parameters:    Size  Location     Type
 23677 ;;		None
 23678 ;; Auto vars:     Size  Location     Type
 23679 ;;		None
 23680 ;; Return value:  Size  Location     Type
 23681 ;;		None               void
 23682 ;; Registers used:
 23683 ;;		wreg
 23684 ;; Tracked objects:
 23685 ;;		On entry : 0/0
 23686 ;;		On exit  : 0/0
 23687 ;;		Unchanged: 0/0
 23688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 23689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 23690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 23691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 23692 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 23693 ;;Total ram usage:        0 bytes
 23694 ;; Hardware stack levels used:    1
 23695 ;; Hardware stack levels required when called:    4
 23696 ;; This function calls:
 23697 ;;		Nothing
 23698 ;; This function is called by:
 23699 ;;		_Mcu_Initialization
 23700 ;; This function uses a non-reentrant model
 23701 ;;
 23702                           psect	text4196
 23703                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_16f1518_B1.c"
 23704                           	line	304
 23705                           	global	__size_of_ADC_Set
 23706  0007                     	__size_of_ADC_Set	equ	__end_of_ADC_Set-_ADC_Set
 23707                           	
 23708  20D7                     _ADC_Set:	
 23709                           	opt	stack 10
 23710                           ; Regs used in _ADC_Set: [wreg]
 23711                           	line	305
 23712                           	
 23713  20D7                     l24536:	
 23714                           ;MCU_16f1518_B1.c: 305: ADCON1=0xf2;
 23715  20D7  30F2               	movlw	(0F2h)
 23716  20D8  0021               	movlb 1	; select bank1
 23717  20D9  009E               	movwf	(158)^080h	;volatile
 23718                           	line	306
 23719                           ;MCU_16f1518_B1.c: 306: FVRCON=0xc0;
 23720  20DA  30C0               	movlw	(0C0h)
 23721  20DB  0022               	movlb 2	; select bank2
 23722  20DC  0097               	movwf	(279)^0100h	;volatile
 23723                           	line	307
 23724                           	
 23725  20DD                     l9381:	
 23726  20DD  0008               	return
 23727                           	opt stack 0
 23728                           GLOBAL	__end_of_ADC_Set
 23729  20DE                     	__end_of_ADC_Set:
 23730 ;; =============== function _ADC_Set ends ============
 23731                           
 23732                           	signat	_ADC_Set,88
 23733                           	global	_TMR0_Set
 23734                           psect	text4197,local,class=CODE,delta=2
 23735                           global __ptext4197
 23736  218B                     __ptext4197:
 23737                           
 23738 ;; *************** function _TMR0_Set *****************
 23739 ;; Defined at:
 23740 ;;		line 74 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_16f1518_B1.c"
 23741 ;; Parameters:    Size  Location     Type
 23742 ;;		None
 23743 ;; Auto vars:     Size  Location     Type
 23744 ;;		None
 23745 ;; Return value:  Size  Location     Type
 23746 ;;		None               void
 23747 ;; Registers used:
 23748 ;;		wreg, status,2
 23749 ;; Tracked objects:
 23750 ;;		On entry : 0/0
 23751 ;;		On exit  : 0/0
 23752 ;;		Unchanged: 0/0
 23753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 23754 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 23755 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 23756 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 23757 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 23758 ;;Total ram usage:        1 bytes
 23759 ;; Hardware stack levels used:    1
 23760 ;; Hardware stack levels required when called:    4
 23761 ;; This function calls:
 23762 ;;		Nothing
 23763 ;; This function is called by:
 23764 ;;		_Mcu_Initialization
 23765 ;; This function uses a non-reentrant model
 23766 ;;
 23767                           psect	text4197
 23768                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_16f1518_B1.c"
 23769                           	line	74
 23770                           	global	__size_of_TMR0_Set
 23771  000D                     	__size_of_TMR0_Set	equ	__end_of_TMR0_Set-_TMR0_Set
 23772                           	
 23773  218B                     _TMR0_Set:	
 23774                           	opt	stack 10
 23775                           ; Regs used in _TMR0_Set: [wreg+status,2]
 23776                           	line	75
 23777                           	
 23778  218B                     l22354:	
 23779                           ;MCU_16f1518_B1.c: 75: Timer0=&VarTimer0;
 23780  218B  30CC               	movlw	(_VarTimer0)&0ffh
 23781  218C  0020               	movlb 0	; select bank0
 23782  218D  00A0               	movwf	(??_TMR0_Set+0)+0
 23783  218E  0820               	movf	(??_TMR0_Set+0)+0,w
 23784  218F  0021               	movlb 1	; select bank1
 23785  2190  00EB               	movwf	(_Timer0)^080h
 23786                           	line	76
 23787                           	
 23788  2191                     l22356:	
 23789                           ;MCU_16f1518_B1.c: 76: OPTION_REG=0x00;
 23790  2191  0195               	clrf	(149)^080h	;volatile
 23791                           	line	77
 23792                           	
 23793  2192                     l22358:	
 23794                           ;MCU_16f1518_B1.c: 77: TMR0=(256-90);
 23795  2192  30A6               	movlw	(0A6h)
 23796  2193  0020               	movlb 0	; select bank0
 23797  2194  0095               	movwf	(21)	;volatile
 23798                           	line	78
 23799                           	
 23800  2195                     l22360:	
 23801                           ;MCU_16f1518_B1.c: 78: TMR0IE=1;
 23802  2195  168B               	bsf	(93/8),(93)&7
 23803                           	line	79
 23804                           	
 23805  2196                     l22362:	
 23806                           ;MCU_16f1518_B1.c: 79: GIE=1;
 23807  2196  178B               	bsf	(95/8),(95)&7
 23808                           	line	80
 23809                           	
 23810  2197                     l9321:	
 23811  2197  0008               	return
 23812                           	opt stack 0
 23813                           GLOBAL	__end_of_TMR0_Set
 23814  2198                     	__end_of_TMR0_Set:
 23815 ;; =============== function _TMR0_Set ends ============
 23816                           
 23817                           	signat	_TMR0_Set,88
 23818                           	global	_IO_Set
 23819                           psect	text4198,local,class=CODE,delta=2
 23820                           global __ptext4198
 23821  2396                     __ptext4198:
 23822                           
 23823 ;; *************** function _IO_Set *****************
 23824 ;; Defined at:
 23825 ;;		line 38 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_16f1518_B1.c"
 23826 ;; Parameters:    Size  Location     Type
 23827 ;;		None
 23828 ;; Auto vars:     Size  Location     Type
 23829 ;;		None
 23830 ;; Return value:  Size  Location     Type
 23831 ;;		None               void
 23832 ;; Registers used:
 23833 ;;		wreg, status,2
 23834 ;; Tracked objects:
 23835 ;;		On entry : 0/0
 23836 ;;		On exit  : 0/0
 23837 ;;		Unchanged: 0/0
 23838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 23839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 23840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 23841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 23842 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 23843 ;;Total ram usage:        0 bytes
 23844 ;; Hardware stack levels used:    1
 23845 ;; Hardware stack levels required when called:    4
 23846 ;; This function calls:
 23847 ;;		Nothing
 23848 ;; This function is called by:
 23849 ;;		_Mcu_Initialization
 23850 ;; This function uses a non-reentrant model
 23851 ;;
 23852                           psect	text4198
 23853                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_16f1518_B1.c"
 23854                           	line	38
 23855                           	global	__size_of_IO_Set
 23856  0019                     	__size_of_IO_Set	equ	__end_of_IO_Set-_IO_Set
 23857                           	
 23858  2396                     _IO_Set:	
 23859                           	opt	stack 10
 23860                           ; Regs used in _IO_Set: [wreg+status,2]
 23861                           	line	39
 23862                           	
 23863  2396                     l24518:	
 23864                           ;MCU_16f1518_B1.c: 39: TRISA=0b01110111;;
 23865  2396  3077               	movlw	(077h)
 23866  2397  0021               	movlb 1	; select bank1
 23867  2398  008C               	movwf	(140)^080h	;volatile
 23868                           	line	40
 23869                           ;MCU_16f1518_B1.c: 40: TRISB=0b00000111;;
 23870  2399  3007               	movlw	(07h)
 23871  239A  008D               	movwf	(141)^080h	;volatile
 23872                           	line	41
 23873                           ;MCU_16f1518_B1.c: 41: TRISC=0b00001100;;
 23874  239B  300C               	movlw	(0Ch)
 23875  239C  008E               	movwf	(142)^080h	;volatile
 23876                           	line	42
 23877                           	
 23878  239D                     l24520:	
 23879                           ;MCU_16f1518_B1.c: 42: LATA=0b00000000;;
 23880  239D  0022               	movlb 2	; select bank2
 23881  239E  018C               	clrf	(268)^0100h	;volatile
 23882                           	line	43
 23883                           	
 23884  239F                     l24522:	
 23885                           ;MCU_16f1518_B1.c: 43: LATB=0b00000010;;
 23886  239F  3002               	movlw	(02h)
 23887  23A0  008D               	movwf	(269)^0100h	;volatile
 23888                           	line	44
 23889                           ;MCU_16f1518_B1.c: 44: LATC=0b00000000;;
 23890  23A1  018E               	clrf	(270)^0100h	;volatile
 23891                           	line	45
 23892                           	
 23893  23A2                     l24524:	
 23894                           ;MCU_16f1518_B1.c: 45: ANSELA=0b00100010;;
 23895  23A2  3022               	movlw	(022h)
 23896  23A3  0023               	movlb 3	; select bank3
 23897  23A4  008C               	movwf	(396)^0180h	;volatile
 23898                           	line	46
 23899                           	
 23900  23A5                     l24526:	
 23901                           ;MCU_16f1518_B1.c: 46: ANSELB=0b00000000;;
 23902  23A5  018D               	clrf	(397)^0180h	;volatile
 23903                           	line	47
 23904                           	
 23905  23A6                     l24528:	
 23906                           ;MCU_16f1518_B1.c: 47: ANSELC=0b00000000;;
 23907  23A6  018E               	clrf	(398)^0180h	;volatile
 23908                           	line	48
 23909                           	
 23910  23A7                     l24530:	
 23911                           ;MCU_16f1518_B1.c: 48: PORTA=0b01110111;;
 23912  23A7  3077               	movlw	(077h)
 23913  23A8  0020               	movlb 0	; select bank0
 23914  23A9  008C               	movwf	(12)	;volatile
 23915                           	line	49
 23916                           	
 23917  23AA                     l24532:	
 23918                           ;MCU_16f1518_B1.c: 49: PORTB=0b00000111;;
 23919  23AA  3007               	movlw	(07h)
 23920  23AB  008D               	movwf	(13)	;volatile
 23921                           	line	50
 23922                           	
 23923  23AC                     l24534:	
 23924                           ;MCU_16f1518_B1.c: 50: PORTC=0b00001100;;
 23925  23AC  300C               	movlw	(0Ch)
 23926  23AD  008E               	movwf	(14)	;volatile
 23927                           	line	51
 23928                           	
 23929  23AE                     l9315:	
 23930  23AE  0008               	return
 23931                           	opt stack 0
 23932                           GLOBAL	__end_of_IO_Set
 23933  23AF                     	__end_of_IO_Set:
 23934 ;; =============== function _IO_Set ends ============
 23935                           
 23936                           	signat	_IO_Set,88
 23937                           	global	_setLoad_Enable
 23938                           psect	text4199,local,class=CODE,delta=2
 23939                           global __ptext4199
 23940  2277                     __ptext4199:
 23941                           
 23942 ;; *************** function _setLoad_Enable *****************
 23943 ;; Defined at:
 23944 ;;		line 258 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\OverLoad_B1.c"
 23945 ;; Parameters:    Size  Location     Type
 23946 ;;  command         1    wreg     unsigned char 
 23947 ;; Auto vars:     Size  Location     Type
 23948 ;;  command         1    0[BANK0 ] unsigned char 
 23949 ;; Return value:  Size  Location     Type
 23950 ;;		None               void
 23951 ;; Registers used:
 23952 ;;		wreg, fsr1l, fsr1h
 23953 ;; Tracked objects:
 23954 ;;		On entry : 0/0
 23955 ;;		On exit  : 0/0
 23956 ;;		Unchanged: 0/0
 23957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 23958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 23959 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 23960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 23961 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 23962 ;;Total ram usage:        1 bytes
 23963 ;; Hardware stack levels used:    1
 23964 ;; Hardware stack levels required when called:    4
 23965 ;; This function calls:
 23966 ;;		Nothing
 23967 ;; This function is called by:
 23968 ;;		_MainT
 23969 ;; This function uses a non-reentrant model
 23970 ;;
 23971                           psect	text4199
 23972                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\OverLoad_B1.c"
 23973                           	line	258
 23974                           	global	__size_of_setLoad_Enable
 23975  0010                     	__size_of_setLoad_Enable	equ	__end_of_setLoad_Enable-_setLoad_Enable
 23976                           	
 23977  2277                     _setLoad_Enable:	
 23978                           	opt	stack 10
 23979                           ; Regs used in _setLoad_Enable: [wregfsr1]
 23980                           ;setLoad_Enable@command stored from wreg
 23981  2277  0020               	movlb 0	; select bank0
 23982  2278  00A0               	movwf	(setLoad_Enable@command)
 23983                           	line	259
 23984                           	
 23985  2279                     l24516:	
 23986                           ;OverLoad_B1.c: 259: Load->Enable=command;
 23987  2279  086D               	movf	(_Load),w
 23988  227A  0086               	movwf	fsr1l
 23989  227B  3002               	movlw 2	; select bank4/5
 23990  227C  0087               	movwf fsr1h	
 23991                           	
 23992  227D  0820               	movf	(setLoad_Enable@command),w
 23993  227E  1001               	bcf	indf1,0
 23994  227F  1D03               	skipz
 23995  2280  1401               	bsf	indf1,0
 23996                           	line	260
 23997                           ;OverLoad_B1.c: 260: Load->GO=0;
 23998  2281  086D               	movf	(_Load),w
 23999  2282  0086               	movwf	fsr1l
 24000  2283  3002               	movlw 2	; select bank4/5
 24001  2284  0087               	movwf fsr1h	
 24002                           	
 24003  2285  1081               	bcf	indf1,1
 24004                           	line	261
 24005                           	
 24006  2286                     l10590:	
 24007  2286  0008               	return
 24008                           	opt stack 0
 24009                           GLOBAL	__end_of_setLoad_Enable
 24010  2287                     	__end_of_setLoad_Enable:
 24011 ;; =============== function _setLoad_Enable ends ============
 24012                           
 24013                           	signat	_setLoad_Enable,4216
 24014                           	global	_setTemp_Enable
 24015                           psect	text4200,local,class=CODE,delta=2
 24016                           global __ptext4200
 24017  2143                     __ptext4200:
 24018                           
 24019 ;; *************** function _setTemp_Enable *****************
 24020 ;; Defined at:
 24021 ;;		line 23 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\OverTemperature_B1.c"
 24022 ;; Parameters:    Size  Location     Type
 24023 ;;  command         1    wreg     unsigned char 
 24024 ;; Auto vars:     Size  Location     Type
 24025 ;;  command         1    0[BANK0 ] unsigned char 
 24026 ;; Return value:  Size  Location     Type
 24027 ;;		None               void
 24028 ;; Registers used:
 24029 ;;		wreg, fsr1l, fsr1h
 24030 ;; Tracked objects:
 24031 ;;		On entry : 0/0
 24032 ;;		On exit  : 0/0
 24033 ;;		Unchanged: 0/0
 24034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 24035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 24036 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 24037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 24038 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 24039 ;;Total ram usage:        1 bytes
 24040 ;; Hardware stack levels used:    1
 24041 ;; Hardware stack levels required when called:    4
 24042 ;; This function calls:
 24043 ;;		Nothing
 24044 ;; This function is called by:
 24045 ;;		_MainT
 24046 ;; This function uses a non-reentrant model
 24047 ;;
 24048                           psect	text4200
 24049                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\OverTemperature_B1.c"
 24050                           	line	23
 24051                           	global	__size_of_setTemp_Enable
 24052  000B                     	__size_of_setTemp_Enable	equ	__end_of_setTemp_Enable-_setTemp_Enable
 24053                           	
 24054  2143                     _setTemp_Enable:	
 24055                           	opt	stack 10
 24056                           ; Regs used in _setTemp_Enable: [wregfsr1]
 24057                           ;setTemp_Enable@command stored from wreg
 24058  2143  0020               	movlb 0	; select bank0
 24059  2144  00A0               	movwf	(setTemp_Enable@command)
 24060                           	line	24
 24061                           	
 24062  2145                     l24514:	
 24063                           ;OverTemperature_B1.c: 24: Temp->Enable=command;
 24064  2145  087C               	movf	(_Temp),w
 24065  2146  0086               	movwf	fsr1l
 24066  2147  3001               	movlw 1	; select bank2/3
 24067  2148  0087               	movwf fsr1h	
 24068                           	
 24069  2149  0820               	movf	(setTemp_Enable@command),w
 24070  214A  1001               	bcf	indf1,0
 24071  214B  1D03               	skipz
 24072  214C  1401               	bsf	indf1,0
 24073                           	line	25
 24074                           	
 24075  214D                     l11740:	
 24076  214D  0008               	return
 24077                           	opt stack 0
 24078                           GLOBAL	__end_of_setTemp_Enable
 24079  214E                     	__end_of_setTemp_Enable:
 24080 ;; =============== function _setTemp_Enable ends ============
 24081                           
 24082                           	signat	_setTemp_Enable,4216
 24083                           	global	_MainT_Initialization
 24084                           psect	text4201,local,class=CODE,delta=2
 24085                           global __ptext4201
 24086  210F                     __ptext4201:
 24087                           
 24088 ;; *************** function _MainT_Initialization *****************
 24089 ;; Defined at:
 24090 ;;		line 93 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\main.c"
 24091 ;; Parameters:    Size  Location     Type
 24092 ;;		None
 24093 ;; Auto vars:     Size  Location     Type
 24094 ;;		None
 24095 ;; Return value:  Size  Location     Type
 24096 ;;		None               void
 24097 ;; Registers used:
 24098 ;;		wreg
 24099 ;; Tracked objects:
 24100 ;;		On entry : 0/0
 24101 ;;		On exit  : 0/0
 24102 ;;		Unchanged: 0/0
 24103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 24104 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 24105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 24106 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 24107 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 24108 ;;Total ram usage:        1 bytes
 24109 ;; Hardware stack levels used:    1
 24110 ;; Hardware stack levels required when called:    4
 24111 ;; This function calls:
 24112 ;;		Nothing
 24113 ;; This function is called by:
 24114 ;;		_main
 24115 ;; This function uses a non-reentrant model
 24116 ;;
 24117                           psect	text4201
 24118                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\main.c"
 24119                           	line	93
 24120                           	global	__size_of_MainT_Initialization
 24121  000A                     	__size_of_MainT_Initialization	equ	__end_of_MainT_Initialization-_MainT_Initialization
 24122                           	
 24123  210F                     _MainT_Initialization:	
 24124                           	opt	stack 11
 24125                           ; Regs used in _MainT_Initialization: [wreg]
 24126                           	line	95
 24127                           	
 24128  210F                     l22330:	
 24129                           ;main.c: 95: Product=&VarProduct;
 24130  210F  30C5               	movlw	(_VarProduct)&0ffh
 24131  2110  0020               	movlb 0	; select bank0
 24132  2111  00A0               	movwf	(??_MainT_Initialization+0)+0
 24133  2112  0820               	movf	(??_MainT_Initialization+0)+0,w
 24134  2113  00EF               	movwf	(_Product)
 24135                           	line	98
 24136                           ;main.c: 98: TMain=&VarTMain;
 24137  2114  3020               	movlw	(_VarTMain)&0ffh
 24138  2115  00A0               	movwf	(??_MainT_Initialization+0)+0
 24139  2116  0820               	movf	(??_MainT_Initialization+0)+0,w
 24140  2117  00FD               	movwf	(_TMain)
 24141                           	line	101
 24142                           	
 24143  2118                     l8174:	
 24144  2118  0008               	return
 24145                           	opt stack 0
 24146                           GLOBAL	__end_of_MainT_Initialization
 24147  2119                     	__end_of_MainT_Initialization:
 24148 ;; =============== function _MainT_Initialization ends ============
 24149                           
 24150                           	signat	_MainT_Initialization,88
 24151                           	global	_LedPointSelect
 24152                           psect	text4202,local,class=CODE,delta=2
 24153                           global __ptext4202
 24154  2528                     __ptext4202:
 24155                           
 24156 ;; *************** function _LedPointSelect *****************
 24157 ;; Defined at:
 24158 ;;		line 8 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\LED_B1.c"
 24159 ;; Parameters:    Size  Location     Type
 24160 ;;  led             1    wreg     unsigned char 
 24161 ;; Auto vars:     Size  Location     Type
 24162 ;;  led             1    1[BANK0 ] unsigned char 
 24163 ;; Return value:  Size  Location     Type
 24164 ;;		None               void
 24165 ;; Registers used:
 24166 ;;		wreg
 24167 ;; Tracked objects:
 24168 ;;		On entry : 0/0
 24169 ;;		On exit  : 0/0
 24170 ;;		Unchanged: 0/0
 24171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 24172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 24173 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 24174 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 24175 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 24176 ;;Total ram usage:        2 bytes
 24177 ;; Hardware stack levels used:    1
 24178 ;; Hardware stack levels required when called:    4
 24179 ;; This function calls:
 24180 ;;		Nothing
 24181 ;; This function is called by:
 24182 ;;		_setLED_Initialization
 24183 ;;		_setLED
 24184 ;;		_setLED_Main
 24185 ;; This function uses a non-reentrant model
 24186 ;;
 24187                           psect	text4202
 24188                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\LED_B1.c"
 24189                           	line	8
 24190                           	global	__size_of_LedPointSelect
 24191  002B                     	__size_of_LedPointSelect	equ	__end_of_LedPointSelect-_LedPointSelect
 24192                           	
 24193  2528                     _LedPointSelect:	
 24194                           	opt	stack 5
 24195                           ; Regs used in _LedPointSelect: [wreg]
 24196                           ;LedPointSelect@led stored from wreg
 24197                           	line	10
 24198  2528  0020               	movlb 0	; select bank0
 24199  2529  00A1               	movwf	(LedPointSelect@led)
 24200                           	
 24201  252A                     l22318:	
 24202                           ;LED_B1.c: 10: if(led == 1)
 24203  252A  0821               	movf	(LedPointSelect@led),w
 24204  252B  3A01               	xorlw	01h&0ffh
 24205  252C  1D03               	skipz
 24206  252D  2D2F               	goto	u5371
 24207  252E  2D30               	goto	u5370
 24208  252F                     u5371:
 24209  252F  2D36               	goto	l22322
 24210  2530                     u5370:
 24211                           	line	12
 24212                           	
 24213  2530                     l22320:	
 24214                           ;LED_B1.c: 11: {
 24215                           ;LED_B1.c: 12: LED=&VarLED1;
 24216  2530  30DC               	movlw	(_VarLED1)&0ffh
 24217  2531  00A0               	movwf	(??_LedPointSelect+0)+0
 24218  2532  0820               	movf	(??_LedPointSelect+0)+0,w
 24219  2533  0021               	movlb 1	; select bank1
 24220  2534  00BB               	movwf	(_LED)^080h
 24221                           	line	13
 24222                           ;LED_B1.c: 13: }
 24223  2535  2D52               	goto	l6958
 24224                           	line	16
 24225                           	
 24226  2536                     l6953:	
 24227                           	
 24228  2536                     l22322:	
 24229                           ;LED_B1.c: 16: else if(led == 2)
 24230  2536  0020               	movlb 0	; select bank0
 24231  2537  0821               	movf	(LedPointSelect@led),w
 24232  2538  3A02               	xorlw	02h&0ffh
 24233  2539  1D03               	skipz
 24234  253A  2D3C               	goto	u5381
 24235  253B  2D3D               	goto	u5380
 24236  253C                     u5381:
 24237  253C  2D43               	goto	l22326
 24238  253D                     u5380:
 24239                           	line	18
 24240                           	
 24241  253D                     l22324:	
 24242                           ;LED_B1.c: 17: {
 24243                           ;LED_B1.c: 18: LED=&VarLED2;
 24244  253D  30E0               	movlw	(_VarLED2)&0ffh
 24245  253E  00A0               	movwf	(??_LedPointSelect+0)+0
 24246  253F  0820               	movf	(??_LedPointSelect+0)+0,w
 24247  2540  0021               	movlb 1	; select bank1
 24248  2541  00BB               	movwf	(_LED)^080h
 24249                           	line	19
 24250                           ;LED_B1.c: 19: }
 24251  2542  2D52               	goto	l6958
 24252                           	line	28
 24253                           	
 24254  2543                     l6955:	
 24255                           	
 24256  2543                     l22326:	
 24257                           ;LED_B1.c: 28: else if(led == 99)
 24258  2543  0020               	movlb 0	; select bank0
 24259  2544  0821               	movf	(LedPointSelect@led),w
 24260  2545  3A63               	xorlw	063h&0ffh
 24261  2546  1D03               	skipz
 24262  2547  2D49               	goto	u5391
 24263  2548  2D4A               	goto	u5390
 24264  2549                     u5391:
 24265  2549  2D52               	goto	l6958
 24266  254A                     u5390:
 24267                           	line	30
 24268                           	
 24269  254A                     l22328:	
 24270                           ;LED_B1.c: 29: {
 24271                           ;LED_B1.c: 30: LED=&VarErrLED;
 24272  254A  30D8               	movlw	(_VarErrLED)&0ffh
 24273  254B  00A0               	movwf	(??_LedPointSelect+0)+0
 24274  254C  0820               	movf	(??_LedPointSelect+0)+0,w
 24275  254D  0021               	movlb 1	; select bank1
 24276  254E  00BB               	movwf	(_LED)^080h
 24277  254F  2D52               	goto	l6958
 24278                           	line	31
 24279                           	
 24280  2550                     l6957:	
 24281  2550  2D52               	goto	l6958
 24282                           	line	33
 24283                           	
 24284  2551                     l6956:	
 24285  2551  2D52               	goto	l6958
 24286                           	
 24287  2552                     l6954:	
 24288                           	
 24289  2552                     l6958:	
 24290  2552  0008               	return
 24291                           	opt stack 0
 24292                           GLOBAL	__end_of_LedPointSelect
 24293  2553                     	__end_of_LedPointSelect:
 24294 ;; =============== function _LedPointSelect ends ============
 24295                           
 24296                           	signat	_LedPointSelect,4216
 24297                           	global	_setLoad_StatusOn
 24298                           psect	text4203,local,class=CODE,delta=2
 24299                           global __ptext4203
 24300  18DA                     __ptext4203:
 24301                           
 24302 ;; *************** function _setLoad_StatusOn *****************
 24303 ;; Defined at:
 24304 ;;		line 267 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\OverLoad_B1.c"
 24305 ;; Parameters:    Size  Location     Type
 24306 ;;  lights          1    wreg     unsigned char 
 24307 ;;  command         1    0[BANK0 ] unsigned char 
 24308 ;; Auto vars:     Size  Location     Type
 24309 ;;  lights          1    1[BANK0 ] unsigned char 
 24310 ;; Return value:  Size  Location     Type
 24311 ;;		None               void
 24312 ;; Registers used:
 24313 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 24314 ;; Tracked objects:
 24315 ;;		On entry : 0/0
 24316 ;;		On exit  : 0/0
 24317 ;;		Unchanged: 0/0
 24318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 24319 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 24320 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 24321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 24322 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 24323 ;;Total ram usage:        2 bytes
 24324 ;; Hardware stack levels used:    1
 24325 ;; Hardware stack levels required when called:    4
 24326 ;; This function calls:
 24327 ;;		Nothing
 24328 ;; This function is called by:
 24329 ;;		_setDimmerLights
 24330 ;; This function uses a non-reentrant model
 24331 ;;
 24332                           psect	text4203
 24333                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\OverLoad_B1.c"
 24334                           	line	267
 24335                           	global	__size_of_setLoad_StatusOn
 24336  003E                     	__size_of_setLoad_StatusOn	equ	__end_of_setLoad_StatusOn-_setLoad_StatusOn
 24337                           	
 24338  18DA                     _setLoad_StatusOn:	
 24339                           	opt	stack 6
 24340                           ; Regs used in _setLoad_StatusOn: [wreg+fsr1l-status,0]
 24341                           ;setLoad_StatusOn@lights stored from wreg
 24342  18DA  0020               	movlb 0	; select bank0
 24343  18DB  00A1               	movwf	(setLoad_StatusOn@lights)
 24344                           	line	268
 24345                           	
 24346  18DC                     l24500:	
 24347                           ;OverLoad_B1.c: 268: Load->GO=1;
 24348  18DC  086D               	movf	(_Load),w
 24349  18DD  0086               	movwf	fsr1l
 24350  18DE  3002               	movlw 2	; select bank4/5
 24351  18DF  0087               	movwf fsr1h	
 24352                           	
 24353  18E0  1481               	bsf	indf1,1
 24354                           	line	269
 24355                           ;OverLoad_B1.c: 269: Load->StatusOn=command;
 24356  18E1  086D               	movf	(_Load),w
 24357  18E2  3E46               	addlw	046h
 24358  18E3  0086               	movwf	fsr1l
 24359  18E4  3002               	movlw 2	; select bank4/5
 24360  18E5  0087               	movwf fsr1h	
 24361                           	
 24362  18E6  0820               	movf	(setLoad_StatusOn@command),w
 24363  18E7  1001               	bcf	indf1,0
 24364  18E8  1D03               	skipz
 24365  18E9  1401               	bsf	indf1,0
 24366                           	line	271
 24367                           	
 24368  18EA                     l24502:	
 24369                           ;OverLoad_B1.c: 271: if(lights == 1)
 24370  18EA  0821               	movf	(setLoad_StatusOn@lights),w
 24371  18EB  3A01               	xorlw	01h&0ffh
 24372  18EC  1D03               	skipz
 24373  18ED  28EF               	goto	u8881
 24374  18EE  28F0               	goto	u8880
 24375  18EF                     u8881:
 24376  18EF  28F9               	goto	l24506
 24377  18F0                     u8880:
 24378                           	line	273
 24379                           	
 24380  18F0                     l24504:	
 24381                           ;OverLoad_B1.c: 272: {
 24382                           ;OverLoad_B1.c: 273: Load->Lights1Status=1;
 24383  18F0  086D               	movf	(_Load),w
 24384  18F1  3E43               	addlw	043h
 24385  18F2  0086               	movwf	fsr1l
 24386  18F3  3002               	movlw 2	; select bank4/5
 24387  18F4  0087               	movwf fsr1h	
 24388                           	
 24389  18F5  0181               	clrf	indf1
 24390  18F6  1403               	bsf	status,0
 24391  18F7  0D81               	rlf	indf1,f
 24392  18F8  28F9               	goto	l24506
 24393                           	line	274
 24394                           	
 24395  18F9                     l10596:	
 24396                           	line	275
 24397                           	
 24398  18F9                     l24506:	
 24399                           ;OverLoad_B1.c: 274: }
 24400                           ;OverLoad_B1.c: 275: if(lights == 2)
 24401  18F9  0821               	movf	(setLoad_StatusOn@lights),w
 24402  18FA  3A02               	xorlw	02h&0ffh
 24403  18FB  1D03               	skipz
 24404  18FC  28FE               	goto	u8891
 24405  18FD  28FF               	goto	u8890
 24406  18FE                     u8891:
 24407  18FE  2908               	goto	l24510
 24408  18FF                     u8890:
 24409                           	line	277
 24410                           	
 24411  18FF                     l24508:	
 24412                           ;OverLoad_B1.c: 276: {
 24413                           ;OverLoad_B1.c: 277: Load->Lights2Status=1;
 24414  18FF  086D               	movf	(_Load),w
 24415  1900  3E44               	addlw	044h
 24416  1901  0086               	movwf	fsr1l
 24417  1902  3002               	movlw 2	; select bank4/5
 24418  1903  0087               	movwf fsr1h	
 24419                           	
 24420  1904  0181               	clrf	indf1
 24421  1905  1403               	bsf	status,0
 24422  1906  0D81               	rlf	indf1,f
 24423  1907  2908               	goto	l24510
 24424                           	line	278
 24425                           	
 24426  1908                     l10597:	
 24427                           	line	279
 24428                           	
 24429  1908                     l24510:	
 24430                           ;OverLoad_B1.c: 278: }
 24431                           ;OverLoad_B1.c: 279: if(lights == 3)
 24432  1908  0821               	movf	(setLoad_StatusOn@lights),w
 24433  1909  3A03               	xorlw	03h&0ffh
 24434  190A  1D03               	skipz
 24435  190B  290D               	goto	u8901
 24436  190C  290E               	goto	u8900
 24437  190D                     u8901:
 24438  190D  2917               	goto	l10599
 24439  190E                     u8900:
 24440                           	line	281
 24441                           	
 24442  190E                     l24512:	
 24443                           ;OverLoad_B1.c: 280: {
 24444                           ;OverLoad_B1.c: 281: Load->Lights3Status=1;
 24445  190E  086D               	movf	(_Load),w
 24446  190F  3E45               	addlw	045h
 24447  1910  0086               	movwf	fsr1l
 24448  1911  3002               	movlw 2	; select bank4/5
 24449  1912  0087               	movwf fsr1h	
 24450                           	
 24451  1913  0181               	clrf	indf1
 24452  1914  1403               	bsf	status,0
 24453  1915  0D81               	rlf	indf1,f
 24454  1916  2917               	goto	l10599
 24455                           	line	282
 24456                           	
 24457  1917                     l10598:	
 24458                           	line	283
 24459                           	
 24460  1917                     l10599:	
 24461  1917  0008               	return
 24462                           	opt stack 0
 24463                           GLOBAL	__end_of_setLoad_StatusOn
 24464  1918                     	__end_of_setLoad_StatusOn:
 24465 ;; =============== function _setLoad_StatusOn ends ============
 24466                           
 24467                           	signat	_setLoad_StatusOn,8312
 24468                           	global	_setLoad_Count
 24469                           psect	text4204,local,class=CODE,delta=2
 24470                           global __ptext4204
 24471  2356                     __ptext4204:
 24472                           
 24473 ;; *************** function _setLoad_Count *****************
 24474 ;; Defined at:
 24475 ;;		line 252 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\OverLoad_B1.c"
 24476 ;; Parameters:    Size  Location     Type
 24477 ;;  command         1    wreg     unsigned char 
 24478 ;; Auto vars:     Size  Location     Type
 24479 ;;  command         1    1[BANK0 ] unsigned char 
 24480 ;; Return value:  Size  Location     Type
 24481 ;;		None               void
 24482 ;; Registers used:
 24483 ;;		wreg, fsr1l, fsr1h
 24484 ;; Tracked objects:
 24485 ;;		On entry : 0/0
 24486 ;;		On exit  : 0/0
 24487 ;;		Unchanged: 0/0
 24488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 24489 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 24490 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 24491 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 24492 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 24493 ;;Total ram usage:        2 bytes
 24494 ;; Hardware stack levels used:    1
 24495 ;; Hardware stack levels required when called:    4
 24496 ;; This function calls:
 24497 ;;		Nothing
 24498 ;; This function is called by:
 24499 ;;		_setDimmerLights
 24500 ;; This function uses a non-reentrant model
 24501 ;;
 24502                           psect	text4204
 24503                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\OverLoad_B1.c"
 24504                           	line	252
 24505                           	global	__size_of_setLoad_Count
 24506  0015                     	__size_of_setLoad_Count	equ	__end_of_setLoad_Count-_setLoad_Count
 24507                           	
 24508  2356                     _setLoad_Count:	
 24509                           	opt	stack 6
 24510                           ; Regs used in _setLoad_Count: [wregfsr1]
 24511                           ;setLoad_Count@command stored from wreg
 24512  2356  0020               	movlb 0	; select bank0
 24513  2357  00A1               	movwf	(setLoad_Count@command)
 24514                           	line	253
 24515                           	
 24516  2358                     l22294:	
 24517                           ;OverLoad_B1.c: 253: Load->Count=command;
 24518  2358  0821               	movf	(setLoad_Count@command),w
 24519  2359  00A0               	movwf	(??_setLoad_Count+0)+0
 24520  235A  086D               	movf	(_Load),w
 24521  235B  3E3A               	addlw	03Ah
 24522  235C  0086               	movwf	fsr1l
 24523  235D  3002               	movlw 2	; select bank4/5
 24524  235E  0087               	movwf fsr1h	
 24525                           	
 24526  235F  0820               	movf	(??_setLoad_Count+0)+0,w
 24527  2360  0081               	movwf	indf1
 24528                           	line	254
 24529                           ;OverLoad_B1.c: 254: Load->SafeCount=command;
 24530  2361  0821               	movf	(setLoad_Count@command),w
 24531  2362  00A0               	movwf	(??_setLoad_Count+0)+0
 24532  2363  086D               	movf	(_Load),w
 24533  2364  3E42               	addlw	042h
 24534  2365  0086               	movwf	fsr1l
 24535  2366  3002               	movlw 2	; select bank4/5
 24536  2367  0087               	movwf fsr1h	
 24537                           	
 24538  2368  0820               	movf	(??_setLoad_Count+0)+0,w
 24539  2369  0081               	movwf	indf1
 24540                           	line	255
 24541                           	
 24542  236A                     l10587:	
 24543  236A  0008               	return
 24544                           	opt stack 0
 24545                           GLOBAL	__end_of_setLoad_Count
 24546  236B                     	__end_of_setLoad_Count:
 24547 ;; =============== function _setLoad_Count ends ============
 24548                           
 24549                           	signat	_setLoad_Count,4216
 24550                           	global	_setLoad_StatusOff
 24551                           psect	text4205,local,class=CODE,delta=2
 24552                           global __ptext4205
 24553  18A0                     __ptext4205:
 24554                           
 24555 ;; *************** function _setLoad_StatusOff *****************
 24556 ;; Defined at:
 24557 ;;		line 285 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\OverLoad_B1.c"
 24558 ;; Parameters:    Size  Location     Type
 24559 ;;  lights          1    wreg     unsigned char 
 24560 ;;  command         1    0[BANK0 ] unsigned char 
 24561 ;; Auto vars:     Size  Location     Type
 24562 ;;  lights          1    1[BANK0 ] unsigned char 
 24563 ;; Return value:  Size  Location     Type
 24564 ;;		None               void
 24565 ;; Registers used:
 24566 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 24567 ;; Tracked objects:
 24568 ;;		On entry : 0/0
 24569 ;;		On exit  : 0/0
 24570 ;;		Unchanged: 0/0
 24571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 24572 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 24573 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 24574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 24575 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 24576 ;;Total ram usage:        2 bytes
 24577 ;; Hardware stack levels used:    1
 24578 ;; Hardware stack levels required when called:    4
 24579 ;; This function calls:
 24580 ;;		Nothing
 24581 ;; This function is called by:
 24582 ;;		_setDimmerLights_ERROR
 24583 ;;		_setDimmerLights_Adj
 24584 ;; This function uses a non-reentrant model
 24585 ;;
 24586                           psect	text4205
 24587                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\OverLoad_B1.c"
 24588                           	line	285
 24589                           	global	__size_of_setLoad_StatusOff
 24590  003A                     	__size_of_setLoad_StatusOff	equ	__end_of_setLoad_StatusOff-_setLoad_StatusOff
 24591                           	
 24592  18A0                     _setLoad_StatusOff:	
 24593                           	opt	stack 8
 24594                           ; Regs used in _setLoad_StatusOff: [wreg+fsr1l-status,0]
 24595                           ;setLoad_StatusOff@lights stored from wreg
 24596  18A0  0020               	movlb 0	; select bank0
 24597  18A1  00A1               	movwf	(setLoad_StatusOff@lights)
 24598                           	line	286
 24599                           	
 24600  18A2                     l24484:	
 24601                           ;OverLoad_B1.c: 286: Load->StatusOff=command;
 24602  18A2  086D               	movf	(_Load),w
 24603  18A3  3E46               	addlw	046h
 24604  18A4  0086               	movwf	fsr1l
 24605  18A5  3002               	movlw 2	; select bank4/5
 24606  18A6  0087               	movwf fsr1h	
 24607                           	
 24608  18A7  0820               	movf	(setLoad_StatusOff@command),w
 24609  18A8  1081               	bcf	indf1,1
 24610  18A9  1D03               	skipz
 24611  18AA  1481               	bsf	indf1,1
 24612                           	line	287
 24613                           	
 24614  18AB                     l24486:	
 24615                           ;OverLoad_B1.c: 287: Load->SafeCount-=2;
 24616  18AB  086D               	movf	(_Load),w
 24617  18AC  3E42               	addlw	042h
 24618  18AD  0086               	movwf	fsr1l
 24619  18AE  3002               	movlw 2	; select bank4/5
 24620  18AF  0087               	movwf fsr1h	
 24621                           	
 24622  18B0  3002               	movlw	low(02h)
 24623  18B1  0281               	subwf	indf1,f
 24624                           	line	288
 24625                           	
 24626  18B2                     l24488:	
 24627                           ;OverLoad_B1.c: 288: if(lights == 1)
 24628  18B2  0821               	movf	(setLoad_StatusOff@lights),w
 24629  18B3  3A01               	xorlw	01h&0ffh
 24630  18B4  1D03               	skipz
 24631  18B5  28B7               	goto	u8851
 24632  18B6  28B8               	goto	u8850
 24633  18B7                     u8851:
 24634  18B7  28BF               	goto	l24492
 24635  18B8                     u8850:
 24636                           	line	290
 24637                           	
 24638  18B8                     l24490:	
 24639                           ;OverLoad_B1.c: 289: {
 24640                           ;OverLoad_B1.c: 290: Load->Lights1Status=0;
 24641  18B8  086D               	movf	(_Load),w
 24642  18B9  3E43               	addlw	043h
 24643  18BA  0086               	movwf	fsr1l
 24644  18BB  3002               	movlw 2	; select bank4/5
 24645  18BC  0087               	movwf fsr1h	
 24646                           	
 24647  18BD  0181               	clrf	indf1
 24648  18BE  28BF               	goto	l24492
 24649                           	line	291
 24650                           	
 24651  18BF                     l10602:	
 24652                           	line	292
 24653                           	
 24654  18BF                     l24492:	
 24655                           ;OverLoad_B1.c: 291: }
 24656                           ;OverLoad_B1.c: 292: if(lights == 2)
 24657  18BF  0821               	movf	(setLoad_StatusOff@lights),w
 24658  18C0  3A02               	xorlw	02h&0ffh
 24659  18C1  1D03               	skipz
 24660  18C2  28C4               	goto	u8861
 24661  18C3  28C5               	goto	u8860
 24662  18C4                     u8861:
 24663  18C4  28CC               	goto	l24496
 24664  18C5                     u8860:
 24665                           	line	294
 24666                           	
 24667  18C5                     l24494:	
 24668                           ;OverLoad_B1.c: 293: {
 24669                           ;OverLoad_B1.c: 294: Load->Lights2Status=0;
 24670  18C5  086D               	movf	(_Load),w
 24671  18C6  3E44               	addlw	044h
 24672  18C7  0086               	movwf	fsr1l
 24673  18C8  3002               	movlw 2	; select bank4/5
 24674  18C9  0087               	movwf fsr1h	
 24675                           	
 24676  18CA  0181               	clrf	indf1
 24677  18CB  28CC               	goto	l24496
 24678                           	line	295
 24679                           	
 24680  18CC                     l10603:	
 24681                           	line	296
 24682                           	
 24683  18CC                     l24496:	
 24684                           ;OverLoad_B1.c: 295: }
 24685                           ;OverLoad_B1.c: 296: if(lights == 3)
 24686  18CC  0821               	movf	(setLoad_StatusOff@lights),w
 24687  18CD  3A03               	xorlw	03h&0ffh
 24688  18CE  1D03               	skipz
 24689  18CF  28D1               	goto	u8871
 24690  18D0  28D2               	goto	u8870
 24691  18D1                     u8871:
 24692  18D1  28D9               	goto	l10605
 24693  18D2                     u8870:
 24694                           	line	298
 24695                           	
 24696  18D2                     l24498:	
 24697                           ;OverLoad_B1.c: 297: {
 24698                           ;OverLoad_B1.c: 298: Load->Lights3Status=0;
 24699  18D2  086D               	movf	(_Load),w
 24700  18D3  3E45               	addlw	045h
 24701  18D4  0086               	movwf	fsr1l
 24702  18D5  3002               	movlw 2	; select bank4/5
 24703  18D6  0087               	movwf fsr1h	
 24704                           	
 24705  18D7  0181               	clrf	indf1
 24706  18D8  28D9               	goto	l10605
 24707                           	line	299
 24708                           	
 24709  18D9                     l10604:	
 24710                           	line	300
 24711                           	
 24712  18D9                     l10605:	
 24713  18D9  0008               	return
 24714                           	opt stack 0
 24715                           GLOBAL	__end_of_setLoad_StatusOff
 24716  18DA                     	__end_of_setLoad_StatusOff:
 24717 ;; =============== function _setLoad_StatusOff ends ============
 24718                           
 24719                           	signat	_setLoad_StatusOff,8312
 24720                           	global	_setLoad_GO
 24721                           psect	text4206,local,class=CODE,delta=2
 24722                           global __ptext4206
 24723  2138                     __ptext4206:
 24724                           
 24725 ;; *************** function _setLoad_GO *****************
 24726 ;; Defined at:
 24727 ;;		line 263 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\OverLoad_B1.c"
 24728 ;; Parameters:    Size  Location     Type
 24729 ;;  command         1    wreg     unsigned char 
 24730 ;; Auto vars:     Size  Location     Type
 24731 ;;  command         1    0[BANK0 ] unsigned char 
 24732 ;; Return value:  Size  Location     Type
 24733 ;;		None               void
 24734 ;; Registers used:
 24735 ;;		wreg, fsr1l, fsr1h
 24736 ;; Tracked objects:
 24737 ;;		On entry : 0/0
 24738 ;;		On exit  : 0/0
 24739 ;;		Unchanged: 0/0
 24740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 24741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 24742 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 24743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 24744 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 24745 ;;Total ram usage:        1 bytes
 24746 ;; Hardware stack levels used:    1
 24747 ;; Hardware stack levels required when called:    4
 24748 ;; This function calls:
 24749 ;;		Nothing
 24750 ;; This function is called by:
 24751 ;;		_DimmerLights_Close
 24752 ;; This function uses a non-reentrant model
 24753 ;;
 24754                           psect	text4206
 24755                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\OverLoad_B1.c"
 24756                           	line	263
 24757                           	global	__size_of_setLoad_GO
 24758  000B                     	__size_of_setLoad_GO	equ	__end_of_setLoad_GO-_setLoad_GO
 24759                           	
 24760  2138                     _setLoad_GO:	
 24761                           	opt	stack 9
 24762                           ; Regs used in _setLoad_GO: [wregfsr1]
 24763                           ;setLoad_GO@command stored from wreg
 24764  2138  0020               	movlb 0	; select bank0
 24765  2139  00A0               	movwf	(setLoad_GO@command)
 24766                           	line	264
 24767                           	
 24768  213A                     l24482:	
 24769                           ;OverLoad_B1.c: 264: Load->GO=command;
 24770  213A  086D               	movf	(_Load),w
 24771  213B  0086               	movwf	fsr1l
 24772  213C  3002               	movlw 2	; select bank4/5
 24773  213D  0087               	movwf fsr1h	
 24774                           	
 24775  213E  0820               	movf	(setLoad_GO@command),w
 24776  213F  1081               	bcf	indf1,1
 24777  2140  1D03               	skipz
 24778  2141  1481               	bsf	indf1,1
 24779                           	line	265
 24780                           	
 24781  2142                     l10593:	
 24782  2142  0008               	return
 24783                           	opt stack 0
 24784                           GLOBAL	__end_of_setLoad_GO
 24785  2143                     	__end_of_setLoad_GO:
 24786 ;; =============== function _setLoad_GO ends ============
 24787                           
 24788                           	signat	_setLoad_GO,4216
 24789                           	global	_getDimmerLights_StatusFlag
 24790                           psect	text4207,local,class=CODE,delta=2
 24791                           global __ptext4207
 24792  223B                     __ptext4207:
 24793                           
 24794 ;; *************** function _getDimmerLights_StatusFlag *****************
 24795 ;; Defined at:
 24796 ;;		line 200 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 24797 ;; Parameters:    Size  Location     Type
 24798 ;;		None
 24799 ;; Auto vars:     Size  Location     Type
 24800 ;;  Status          1    1[BANK0 ] unsigned char 
 24801 ;; Return value:  Size  Location     Type
 24802 ;;                  1    wreg      unsigned char 
 24803 ;; Registers used:
 24804 ;;		wreg, fsr1l, fsr1h
 24805 ;; Tracked objects:
 24806 ;;		On entry : 0/0
 24807 ;;		On exit  : 0/0
 24808 ;;		Unchanged: 0/0
 24809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 24810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 24811 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 24812 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 24813 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 24814 ;;Total ram usage:        2 bytes
 24815 ;; Hardware stack levels used:    1
 24816 ;; Hardware stack levels required when called:    4
 24817 ;; This function calls:
 24818 ;;		Nothing
 24819 ;; This function is called by:
 24820 ;;		_DimmerLights_Close
 24821 ;;		_DimmerLights_Exceptions
 24822 ;; This function uses a non-reentrant model
 24823 ;;
 24824                           psect	text4207
 24825                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 24826                           	line	200
 24827                           	global	__size_of_getDimmerLights_StatusFlag
 24828  000F                     	__size_of_getDimmerLights_StatusFlag	equ	__end_of_getDimmerLights_StatusFlag-_getDimmer
                                 Lights_StatusFlag
 24829                           	
 24830  223B                     _getDimmerLights_StatusFlag:	
 24831                           	opt	stack 9
 24832                           ; Regs used in _getDimmerLights_StatusFlag: [wregfsr1]
 24833                           	line	201
 24834                           	
 24835  223B                     l22262:	
 24836                           ;Dimmer_B1.c: 201: char Status=0;
 24837  223B  0020               	movlb 0	; select bank0
 24838  223C  01A1               	clrf	(getDimmerLights_StatusFlag@Status)
 24839                           	line	212
 24840                           	
 24841  223D                     l22264:	
 24842                           ;Dimmer_B1.c: 212: Status=(DimmerLights11->StatusFlag)?1:0;
 24843  223D  0879               	movf	(_DimmerLights11),w
 24844  223E  0086               	movwf	fsr1l
 24845  223F  3001               	movlw 1	; select bank2/3
 24846  2240  0087               	movwf fsr1h	
 24847                           	
 24848  2241  3000               	movlw	0
 24849  2242  1B01               	btfsc	indf1,6
 24850  2243  3001               	movlw	1
 24851  2244  00A0               	movwf	(??_getDimmerLights_StatusFlag+0)+0
 24852  2245  0820               	movf	(??_getDimmerLights_StatusFlag+0)+0,w
 24853  2246  00A1               	movwf	(getDimmerLights_StatusFlag@Status)
 24854                           	line	215
 24855                           	
 24856  2247                     l22266:	
 24857                           ;Dimmer_B1.c: 215: return Status;
 24858  2247  0821               	movf	(getDimmerLights_StatusFlag@Status),w
 24859  2248  2A49               	goto	l5782
 24860                           	
 24861  2249                     l22268:	
 24862                           	line	216
 24863                           	
 24864  2249                     l5782:	
 24865  2249  0008               	return
 24866                           	opt stack 0
 24867                           GLOBAL	__end_of_getDimmerLights_StatusFlag
 24868  224A                     	__end_of_getDimmerLights_StatusFlag:
 24869 ;; =============== function _getDimmerLights_StatusFlag ends ============
 24870                           
 24871                           	signat	_getDimmerLights_StatusFlag,89
 24872                           	global	_Dimmer_Initialization
 24873                           psect	text4208,local,class=CODE,delta=2
 24874                           global __ptext4208
 24875  20D0                     __ptext4208:
 24876                           
 24877 ;; *************** function _Dimmer_Initialization *****************
 24878 ;; Defined at:
 24879 ;;		line 510 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 24880 ;; Parameters:    Size  Location     Type
 24881 ;;		None
 24882 ;; Auto vars:     Size  Location     Type
 24883 ;;		None
 24884 ;; Return value:  Size  Location     Type
 24885 ;;		None               void
 24886 ;; Registers used:
 24887 ;;		wreg
 24888 ;; Tracked objects:
 24889 ;;		On entry : 0/0
 24890 ;;		On exit  : 0/0
 24891 ;;		Unchanged: 0/0
 24892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 24893 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 24894 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 24895 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 24896 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 24897 ;;Total ram usage:        1 bytes
 24898 ;; Hardware stack levels used:    1
 24899 ;; Hardware stack levels required when called:    4
 24900 ;; This function calls:
 24901 ;;		Nothing
 24902 ;; This function is called by:
 24903 ;;		_DimmerLights_Initialization
 24904 ;; This function uses a non-reentrant model
 24905 ;;
 24906                           psect	text4208
 24907                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 24908                           	line	510
 24909                           	global	__size_of_Dimmer_Initialization
 24910  0007                     	__size_of_Dimmer_Initialization	equ	__end_of_Dimmer_Initialization-_Dimmer_Initializati
                                 on
 24911                           	
 24912  20D0                     _Dimmer_Initialization:	
 24913                           	opt	stack 10
 24914                           ; Regs used in _Dimmer_Initialization: [wreg]
 24915                           	line	511
 24916                           	
 24917  20D0                     l22260:	
 24918                           ;Dimmer_B1.c: 511: Dimmer=&Dimmer1;
 24919  20D0  30E4               	movlw	(_Dimmer1)&0ffh
 24920  20D1  0020               	movlb 0	; select bank0
 24921  20D2  00A0               	movwf	(??_Dimmer_Initialization+0)+0
 24922  20D3  0820               	movf	(??_Dimmer_Initialization+0)+0,w
 24923  20D4  0021               	movlb 1	; select bank1
 24924  20D5  00B9               	movwf	(_Dimmer)^080h
 24925                           	line	512
 24926                           	
 24927  20D6                     l5848:	
 24928  20D6  0008               	return
 24929                           	opt stack 0
 24930                           GLOBAL	__end_of_Dimmer_Initialization
 24931  20D7                     	__end_of_Dimmer_Initialization:
 24932 ;; =============== function _Dimmer_Initialization ends ============
 24933                           
 24934                           	signat	_Dimmer_Initialization,88
 24935                           	global	_DimmerLightsPointSelect
 24936                           psect	text4209,local,class=CODE,delta=2
 24937                           global __ptext4209
 24938  21E6                     __ptext4209:
 24939                           
 24940 ;; *************** function _DimmerLightsPointSelect *****************
 24941 ;; Defined at:
 24942 ;;		line 8 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 24943 ;; Parameters:    Size  Location     Type
 24944 ;;  lights          1    wreg     unsigned char 
 24945 ;; Auto vars:     Size  Location     Type
 24946 ;;  lights          1    1[BANK0 ] unsigned char 
 24947 ;; Return value:  Size  Location     Type
 24948 ;;		None               void
 24949 ;; Registers used:
 24950 ;;		wreg
 24951 ;; Tracked objects:
 24952 ;;		On entry : 0/0
 24953 ;;		On exit  : 0/0
 24954 ;;		Unchanged: 0/0
 24955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 24956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 24957 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 24958 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 24959 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 24960 ;;Total ram usage:        2 bytes
 24961 ;; Hardware stack levels used:    1
 24962 ;; Hardware stack levels required when called:    4
 24963 ;; This function calls:
 24964 ;;		Nothing
 24965 ;; This function is called by:
 24966 ;;		_setDimmerLights_Initialization
 24967 ;;		_setDimmerLights_Main
 24968 ;;		_setDimmerLights_ERROR
 24969 ;;		_setDimmerLights_TriggerERROR
 24970 ;;		_setDimmerLights
 24971 ;;		_setDimmerLights_Adj
 24972 ;;		_setDimmerLights_AdjRF
 24973 ;;		_setDimmerLights_Switch
 24974 ;;		_setDimmerLights_AdjGo
 24975 ;;		_setDimmerLights_Trigger
 24976 ;;		_setDimmerLights_TriggerAdj
 24977 ;;		_setDimmerLights_Clear
 24978 ;;		_setDimmerLights_GO
 24979 ;;		_setDimmerLights_MaxmumValue
 24980 ;; This function uses a non-reentrant model
 24981 ;;
 24982                           psect	text4209
 24983                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Dimmer_B1.c"
 24984                           	line	8
 24985                           	global	__size_of_DimmerLightsPointSelect
 24986  000E                     	__size_of_DimmerLightsPointSelect	equ	__end_of_DimmerLightsPointSelect-_DimmerLightsPoi
                                 ntSelect
 24987                           	
 24988  21E6                     _DimmerLightsPointSelect:	
 24989                           	opt	stack 8
 24990                           ; Regs used in _DimmerLightsPointSelect: [wreg]
 24991                           ;DimmerLightsPointSelect@lights stored from wreg
 24992                           	line	10
 24993  21E6  0020               	movlb 0	; select bank0
 24994  21E7  00A1               	movwf	(DimmerLightsPointSelect@lights)
 24995                           	
 24996  21E8                     l22256:	
 24997                           ;Dimmer_B1.c: 10: if(lights == 1)
 24998  21E8  0821               	movf	(DimmerLightsPointSelect@lights),w
 24999  21E9  3A01               	xorlw	01h&0ffh
 25000  21EA  1D03               	skipz
 25001  21EB  29ED               	goto	u5301
 25002  21EC  29EE               	goto	u5300
 25003  21ED                     u5301:
 25004  21ED  29F3               	goto	l5752
 25005  21EE                     u5300:
 25006                           	line	12
 25007                           	
 25008  21EE                     l22258:	
 25009                           ;Dimmer_B1.c: 11: {
 25010                           ;Dimmer_B1.c: 12: DimmerLights=&DimmerLights1;
 25011  21EE  303E               	movlw	(_DimmerLights1)&0ffh
 25012  21EF  00A0               	movwf	(??_DimmerLightsPointSelect+0)+0
 25013  21F0  0820               	movf	(??_DimmerLightsPointSelect+0)+0,w
 25014  21F1  00EC               	movwf	(_DimmerLights)
 25015  21F2  29F3               	goto	l5752
 25016                           	line	13
 25017                           	
 25018  21F3                     l5751:	
 25019                           	line	29
 25020                           	
 25021  21F3                     l5752:	
 25022  21F3  0008               	return
 25023                           	opt stack 0
 25024                           GLOBAL	__end_of_DimmerLightsPointSelect
 25025  21F4                     	__end_of_DimmerLightsPointSelect:
 25026 ;; =============== function _DimmerLightsPointSelect ends ============
 25027                           
 25028                           	signat	_DimmerLightsPointSelect,4216
 25029                           	global	_DelayTimejudge
 25030                           psect	text4210,local,class=CODE,delta=2
 25031                           global __ptext4210
 25032  1BA4                     __ptext4210:
 25033                           
 25034 ;; *************** function _DelayTimejudge *****************
 25035 ;; Defined at:
 25036 ;;		line 120 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\DelayOff_B1.c"
 25037 ;; Parameters:    Size  Location     Type
 25038 ;;  value           1    wreg     unsigned char 
 25039 ;; Auto vars:     Size  Location     Type
 25040 ;;  value           1    2[BANK0 ] unsigned char 
 25041 ;;  i               1    1[BANK0 ] unsigned char 
 25042 ;; Return value:  Size  Location     Type
 25043 ;;                  1    wreg      unsigned char 
 25044 ;; Registers used:
 25045 ;;		wreg
 25046 ;; Tracked objects:
 25047 ;;		On entry : 0/0
 25048 ;;		On exit  : 0/0
 25049 ;;		Unchanged: 0/0
 25050 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 25051 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 25052 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 25053 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 25054 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 25055 ;;Total ram usage:        3 bytes
 25056 ;; Hardware stack levels used:    1
 25057 ;; Hardware stack levels required when called:    4
 25058 ;; This function calls:
 25059 ;;		Nothing
 25060 ;; This function is called by:
 25061 ;;		_setDelayOff_GO
 25062 ;; This function uses a non-reentrant model
 25063 ;;
 25064                           psect	text4210
 25065                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\DelayOff_B1.c"
 25066                           	line	120
 25067                           	global	__size_of_DelayTimejudge
 25068  004F                     	__size_of_DelayTimejudge	equ	__end_of_DelayTimejudge-_DelayTimejudge
 25069                           	
 25070  1BA4                     _DelayTimejudge:	
 25071                           	opt	stack 5
 25072                           ; Regs used in _DelayTimejudge: [wreg]
 25073                           ;DelayTimejudge@value stored from wreg
 25074  1BA4  0020               	movlb 0	; select bank0
 25075  1BA5  00A2               	movwf	(DelayTimejudge@value)
 25076                           	line	121
 25077                           	
 25078  1BA6                     l22230:	
 25079                           ;DelayOff_B1.c: 121: char i=5;
 25080  1BA6  3005               	movlw	(05h)
 25081  1BA7  00A0               	movwf	(??_DelayTimejudge+0)+0
 25082  1BA8  0820               	movf	(??_DelayTimejudge+0)+0,w
 25083  1BA9  00A1               	movwf	(DelayTimejudge@i)
 25084                           	line	122
 25085                           ;DelayOff_B1.c: 122: if(value == 0x05)
 25086  1BAA  0822               	movf	(DelayTimejudge@value),w
 25087  1BAB  3A05               	xorlw	05h&0ffh
 25088  1BAC  1D03               	skipz
 25089  1BAD  2BAF               	goto	u5241
 25090  1BAE  2BB0               	goto	u5240
 25091  1BAF                     u5241:
 25092  1BAF  2BB5               	goto	l22234
 25093  1BB0                     u5240:
 25094                           	line	124
 25095                           	
 25096  1BB0                     l22232:	
 25097                           ;DelayOff_B1.c: 123: {
 25098                           ;DelayOff_B1.c: 124: i=5;
 25099  1BB0  3005               	movlw	(05h)
 25100  1BB1  00A0               	movwf	(??_DelayTimejudge+0)+0
 25101  1BB2  0820               	movf	(??_DelayTimejudge+0)+0,w
 25102  1BB3  00A1               	movwf	(DelayTimejudge@i)
 25103                           	line	125
 25104                           ;DelayOff_B1.c: 125: }
 25105  1BB4  2BF0               	goto	l4604
 25106                           	line	126
 25107                           	
 25108  1BB5                     l4603:	
 25109                           	
 25110  1BB5                     l22234:	
 25111                           ;DelayOff_B1.c: 126: else if(value == 0x10)
 25112  1BB5  0822               	movf	(DelayTimejudge@value),w
 25113  1BB6  3A10               	xorlw	010h&0ffh
 25114  1BB7  1D03               	skipz
 25115  1BB8  2BBA               	goto	u5251
 25116  1BB9  2BBB               	goto	u5250
 25117  1BBA                     u5251:
 25118  1BBA  2BC0               	goto	l22238
 25119  1BBB                     u5250:
 25120                           	line	128
 25121                           	
 25122  1BBB                     l22236:	
 25123                           ;DelayOff_B1.c: 127: {
 25124                           ;DelayOff_B1.c: 128: i=10;
 25125  1BBB  300A               	movlw	(0Ah)
 25126  1BBC  00A0               	movwf	(??_DelayTimejudge+0)+0
 25127  1BBD  0820               	movf	(??_DelayTimejudge+0)+0,w
 25128  1BBE  00A1               	movwf	(DelayTimejudge@i)
 25129                           	line	129
 25130                           ;DelayOff_B1.c: 129: }
 25131  1BBF  2BF0               	goto	l4604
 25132                           	line	130
 25133                           	
 25134  1BC0                     l4605:	
 25135                           	
 25136  1BC0                     l22238:	
 25137                           ;DelayOff_B1.c: 130: else if(value == 0x15)
 25138  1BC0  0822               	movf	(DelayTimejudge@value),w
 25139  1BC1  3A15               	xorlw	015h&0ffh
 25140  1BC2  1D03               	skipz
 25141  1BC3  2BC5               	goto	u5261
 25142  1BC4  2BC6               	goto	u5260
 25143  1BC5                     u5261:
 25144  1BC5  2BCB               	goto	l22242
 25145  1BC6                     u5260:
 25146                           	line	132
 25147                           	
 25148  1BC6                     l22240:	
 25149                           ;DelayOff_B1.c: 131: {
 25150                           ;DelayOff_B1.c: 132: i=15;
 25151  1BC6  300F               	movlw	(0Fh)
 25152  1BC7  00A0               	movwf	(??_DelayTimejudge+0)+0
 25153  1BC8  0820               	movf	(??_DelayTimejudge+0)+0,w
 25154  1BC9  00A1               	movwf	(DelayTimejudge@i)
 25155                           	line	133
 25156                           ;DelayOff_B1.c: 133: }
 25157  1BCA  2BF0               	goto	l4604
 25158                           	line	134
 25159                           	
 25160  1BCB                     l4607:	
 25161                           	
 25162  1BCB                     l22242:	
 25163                           ;DelayOff_B1.c: 134: else if(value == 0x20)
 25164  1BCB  0822               	movf	(DelayTimejudge@value),w
 25165  1BCC  3A20               	xorlw	020h&0ffh
 25166  1BCD  1D03               	skipz
 25167  1BCE  2BD0               	goto	u5271
 25168  1BCF  2BD1               	goto	u5270
 25169  1BD0                     u5271:
 25170  1BD0  2BD6               	goto	l22246
 25171  1BD1                     u5270:
 25172                           	line	136
 25173                           	
 25174  1BD1                     l22244:	
 25175                           ;DelayOff_B1.c: 135: {
 25176                           ;DelayOff_B1.c: 136: i=20;
 25177  1BD1  3014               	movlw	(014h)
 25178  1BD2  00A0               	movwf	(??_DelayTimejudge+0)+0
 25179  1BD3  0820               	movf	(??_DelayTimejudge+0)+0,w
 25180  1BD4  00A1               	movwf	(DelayTimejudge@i)
 25181                           	line	137
 25182                           ;DelayOff_B1.c: 137: }
 25183  1BD5  2BF0               	goto	l4604
 25184                           	line	138
 25185                           	
 25186  1BD6                     l4609:	
 25187                           	
 25188  1BD6                     l22246:	
 25189                           ;DelayOff_B1.c: 138: else if(value == 0x25)
 25190  1BD6  0822               	movf	(DelayTimejudge@value),w
 25191  1BD7  3A25               	xorlw	025h&0ffh
 25192  1BD8  1D03               	skipz
 25193  1BD9  2BDB               	goto	u5281
 25194  1BDA  2BDC               	goto	u5280
 25195  1BDB                     u5281:
 25196  1BDB  2BE1               	goto	l22250
 25197  1BDC                     u5280:
 25198                           	line	140
 25199                           	
 25200  1BDC                     l22248:	
 25201                           ;DelayOff_B1.c: 139: {
 25202                           ;DelayOff_B1.c: 140: i=25;
 25203  1BDC  3019               	movlw	(019h)
 25204  1BDD  00A0               	movwf	(??_DelayTimejudge+0)+0
 25205  1BDE  0820               	movf	(??_DelayTimejudge+0)+0,w
 25206  1BDF  00A1               	movwf	(DelayTimejudge@i)
 25207                           	line	141
 25208                           ;DelayOff_B1.c: 141: }
 25209  1BE0  2BF0               	goto	l4604
 25210                           	line	142
 25211                           	
 25212  1BE1                     l4611:	
 25213                           	
 25214  1BE1                     l22250:	
 25215                           ;DelayOff_B1.c: 142: else if(value == 0x30)
 25216  1BE1  0822               	movf	(DelayTimejudge@value),w
 25217  1BE2  3A30               	xorlw	030h&0ffh
 25218  1BE3  1D03               	skipz
 25219  1BE4  2BE6               	goto	u5291
 25220  1BE5  2BE7               	goto	u5290
 25221  1BE6                     u5291:
 25222  1BE6  2BF0               	goto	l4604
 25223  1BE7                     u5290:
 25224                           	line	144
 25225                           	
 25226  1BE7                     l22252:	
 25227                           ;DelayOff_B1.c: 143: {
 25228                           ;DelayOff_B1.c: 144: i=30;
 25229  1BE7  301E               	movlw	(01Eh)
 25230  1BE8  00A0               	movwf	(??_DelayTimejudge+0)+0
 25231  1BE9  0820               	movf	(??_DelayTimejudge+0)+0,w
 25232  1BEA  00A1               	movwf	(DelayTimejudge@i)
 25233  1BEB  2BF0               	goto	l4604
 25234                           	line	145
 25235                           	
 25236  1BEC                     l4613:	
 25237  1BEC  2BF0               	goto	l4604
 25238                           	line	146
 25239                           	
 25240  1BED                     l4612:	
 25241  1BED  2BF0               	goto	l4604
 25242                           	
 25243  1BEE                     l4610:	
 25244  1BEE  2BF0               	goto	l4604
 25245                           	
 25246  1BEF                     l4608:	
 25247  1BEF  2BF0               	goto	l4604
 25248                           	
 25249  1BF0                     l4606:	
 25250                           	
 25251  1BF0                     l4604:	
 25252                           ;DelayOff_B1.c: 145: }
 25253                           ;DelayOff_B1.c: 146: return i;
 25254  1BF0  0821               	movf	(DelayTimejudge@i),w
 25255  1BF1  2BF2               	goto	l4614
 25256                           	
 25257  1BF2                     l22254:	
 25258                           	line	147
 25259                           	
 25260  1BF2                     l4614:	
 25261  1BF2  0008               	return
 25262                           	opt stack 0
 25263                           GLOBAL	__end_of_DelayTimejudge
 25264  1BF3                     	__end_of_DelayTimejudge:
 25265 ;; =============== function _DelayTimejudge ends ============
 25266                           
 25267                           	signat	_DelayTimejudge,4217
 25268                           	global	_setRF_DimmerLights
 25269                           psect	text4211,local,class=CODE,delta=2
 25270                           global __ptext4211
 25271  0801                     __ptext4211:
 25272                           
 25273 ;; *************** function _setRF_DimmerLights *****************
 25274 ;; Defined at:
 25275 ;;		line 438 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
 25276 ;; Parameters:    Size  Location     Type
 25277 ;;  lights          1    wreg     unsigned char 
 25278 ;;  on              1    0[BANK0 ] unsigned char 
 25279 ;; Auto vars:     Size  Location     Type
 25280 ;;  lights          1    4[BANK0 ] unsigned char 
 25281 ;;  status          1    3[BANK0 ] unsigned char 
 25282 ;; Return value:  Size  Location     Type
 25283 ;;		None               void
 25284 ;; Registers used:
 25285 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 25286 ;; Tracked objects:
 25287 ;;		On entry : 0/0
 25288 ;;		On exit  : 0/0
 25289 ;;		Unchanged: 0/0
 25290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 25291 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 25292 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 25293 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 25294 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
       0       0
 25295 ;;Total ram usage:        5 bytes
 25296 ;; Hardware stack levels used:    1
 25297 ;; Hardware stack levels required when called:    4
 25298 ;; This function calls:
 25299 ;;		Nothing
 25300 ;; This function is called by:
 25301 ;;		_DlyOff_Main
 25302 ;;		_setDimmerLights_Adj
 25303 ;;		_setRFSW_Control
 25304 ;;		_Sw_DimmerOnFunc
 25305 ;;		_Sw_DimmerOffFunc
 25306 ;; This function uses a non-reentrant model
 25307 ;;
 25308                           psect	text4211
 25309                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
 25310                           	line	438
 25311                           	global	__size_of_setRF_DimmerLights
 25312  005E                     	__size_of_setRF_DimmerLights	equ	__end_of_setRF_DimmerLights-_setRF_DimmerLights
 25313                           	
 25314  0801                     _setRF_DimmerLights:	
 25315                           	opt	stack 9
 25316                           ; Regs used in _setRF_DimmerLights: [wreg+fsr1l-status,0]
 25317                           ;setRF_DimmerLights@lights stored from wreg
 25318                           	line	440
 25319  0801  0020               	movlb 0	; select bank0
 25320  0802  00A4               	movwf	(setRF_DimmerLights@lights)
 25321                           	
 25322  0803                     l22214:	
 25323                           ;RF_Control_B1.c: 439: char status;
 25324                           ;RF_Control_B1.c: 440: status=1;
 25325  0803  01A3               	clrf	(setRF_DimmerLights@status)
 25326  0804  1403               	bsf	status,0
 25327  0805  0DA3               	rlf	(setRF_DimmerLights@status),f
 25328                           	line	441
 25329                           	
 25330  0806                     l22216:	
 25331                           ;RF_Control_B1.c: 441: status<<=(lights-1);
 25332  0806  0824               	movf	(setRF_DimmerLights@lights),w
 25333  0807  3EFF               	addlw	-1
 25334  0808  0A89               	incf	wreg,f
 25335                           	
 25336  0809  280C               	goto	u5220
 25337  080A                     u5225:
 25338  080A  1003               	clrc
 25339  080B  0DA3               	rlf	(setRF_DimmerLights@status),f
 25340  080C                     u5220:
 25341  080C  3EFF               	addlw	-1
 25342  080D  1D03               	skipz
 25343  080E  280A               	goto	u5225
 25344                           	line	442
 25345                           	
 25346  080F                     l22218:	
 25347                           ;RF_Control_B1.c: 442: Product->Data[11]=lights;
 25348  080F  0824               	movf	(setRF_DimmerLights@lights),w
 25349  0810  00A1               	movwf	(??_setRF_DimmerLights+0)+0
 25350  0811  086F               	movf	(_Product),w
 25351  0812  3E0B               	addlw	0Bh
 25352  0813  0086               	movwf	fsr1l
 25353  0814  3001               	movlw 1	; select bank2/3
 25354  0815  0087               	movwf fsr1h	
 25355                           	
 25356  0816  0821               	movf	(??_setRF_DimmerLights+0)+0,w
 25357  0817  0081               	movwf	indf1
 25358                           	line	443
 25359                           	
 25360  0818                     l22220:	
 25361                           ;RF_Control_B1.c: 443: Product->Data[9]=Product->Data[20+lights];
 25362  0818  0824               	movf	(setRF_DimmerLights@lights),w
 25363  0819  3E14               	addlw	014h
 25364  081A  076F               	addwf	(_Product),w
 25365  081B  00A1               	movwf	(??_setRF_DimmerLights+0)+0
 25366  081C  0821               	movf	0+(??_setRF_DimmerLights+0)+0,w
 25367  081D  0086               	movwf	fsr1l
 25368  081E  3001               	movlw 1	; select bank2/3
 25369  081F  0087               	movwf fsr1h	
 25370                           	
 25371  0820  0801               	movf	indf1,w
 25372  0821  00A2               	movwf	(??_setRF_DimmerLights+1)+0
 25373  0822  086F               	movf	(_Product),w
 25374  0823  3E09               	addlw	09h
 25375  0824  0086               	movwf	fsr1l
 25376  0825  3001               	movlw 1	; select bank2/3
 25377  0826  0087               	movwf fsr1h	
 25378                           	
 25379  0827  0822               	movf	(??_setRF_DimmerLights+1)+0,w
 25380  0828  0081               	movwf	indf1
 25381                           	line	444
 25382                           	
 25383  0829                     l22222:	
 25384                           ;RF_Control_B1.c: 444: Product->Data[17]=Product->Data[26+lights];
 25385  0829  0824               	movf	(setRF_DimmerLights@lights),w
 25386  082A  3E1A               	addlw	01Ah
 25387  082B  076F               	addwf	(_Product),w
 25388  082C  00A1               	movwf	(??_setRF_DimmerLights+0)+0
 25389  082D  0821               	movf	0+(??_setRF_DimmerLights+0)+0,w
 25390  082E  0086               	movwf	fsr1l
 25391  082F  3001               	movlw 1	; select bank2/3
 25392  0830  0087               	movwf fsr1h	
 25393                           	
 25394  0831  0801               	movf	indf1,w
 25395  0832  00A2               	movwf	(??_setRF_DimmerLights+1)+0
 25396  0833  086F               	movf	(_Product),w
 25397  0834  3E11               	addlw	011h
 25398  0835  0086               	movwf	fsr1l
 25399  0836  3001               	movlw 1	; select bank2/3
 25400  0837  0087               	movwf fsr1h	
 25401                           	
 25402  0838  0822               	movf	(??_setRF_DimmerLights+1)+0,w
 25403  0839  0081               	movwf	indf1
 25404                           	line	445
 25405                           	
 25406  083A                     l22224:	
 25407                           ;RF_Control_B1.c: 445: if(on)
 25408  083A  0820               	movf	(setRF_DimmerLights@on),w
 25409  083B  1D03               	skipz
 25410  083C  283E               	goto	u5230
 25411  083D  284E               	goto	l22228
 25412  083E                     u5230:
 25413                           	line	447
 25414                           	
 25415  083E                     l22226:	
 25416                           ;RF_Control_B1.c: 446: {
 25417                           ;RF_Control_B1.c: 447: Product->Data[15]=(Product->Data[15]|status);
 25418  083E  086F               	movf	(_Product),w
 25419  083F  3E0F               	addlw	0Fh
 25420  0840  0086               	movwf	fsr1l
 25421  0841  3001               	movlw 1	; select bank2/3
 25422  0842  0087               	movwf fsr1h	
 25423                           	
 25424  0843  0801               	movf	indf1,w
 25425  0844  0423               	iorwf	(setRF_DimmerLights@status),w
 25426  0845  00A1               	movwf	(??_setRF_DimmerLights+0)+0
 25427  0846  086F               	movf	(_Product),w
 25428  0847  3E0F               	addlw	0Fh
 25429  0848  0086               	movwf	fsr1l
 25430  0849  3001               	movlw 1	; select bank2/3
 25431  084A  0087               	movwf fsr1h	
 25432                           	
 25433  084B  0821               	movf	(??_setRF_DimmerLights+0)+0,w
 25434  084C  0081               	movwf	indf1
 25435                           	line	448
 25436                           ;RF_Control_B1.c: 448: }
 25437  084D  285E               	goto	l15292
 25438                           	line	449
 25439                           	
 25440  084E                     l15290:	
 25441                           	line	451
 25442                           	
 25443  084E                     l22228:	
 25444                           ;RF_Control_B1.c: 449: else
 25445                           ;RF_Control_B1.c: 450: {
 25446                           ;RF_Control_B1.c: 451: Product->Data[15]=(Product->Data[15]&(~status));
 25447  084E  086F               	movf	(_Product),w
 25448  084F  3E0F               	addlw	0Fh
 25449  0850  0086               	movwf	fsr1l
 25450  0851  3001               	movlw 1	; select bank2/3
 25451  0852  0087               	movwf fsr1h	
 25452                           	
 25453  0853  0923               	comf	(setRF_DimmerLights@status),w
 25454  0854  0501               	andwf	indf1,w
 25455  0855  00A1               	movwf	(??_setRF_DimmerLights+0)+0
 25456  0856  086F               	movf	(_Product),w
 25457  0857  3E0F               	addlw	0Fh
 25458  0858  0086               	movwf	fsr1l
 25459  0859  3001               	movlw 1	; select bank2/3
 25460  085A  0087               	movwf fsr1h	
 25461                           	
 25462  085B  0821               	movf	(??_setRF_DimmerLights+0)+0,w
 25463  085C  0081               	movwf	indf1
 25464  085D  285E               	goto	l15292
 25465                           	line	452
 25466                           	
 25467  085E                     l15291:	
 25468                           	line	453
 25469                           	
 25470  085E                     l15292:	
 25471  085E  0008               	return
 25472                           	opt stack 0
 25473                           GLOBAL	__end_of_setRF_DimmerLights
 25474  085F                     	__end_of_setRF_DimmerLights:
 25475 ;; =============== function _setRF_DimmerLights ends ============
 25476                           
 25477                           	signat	_setRF_DimmerLights,8312
 25478                           	global	_DelayOffPointSelect
 25479                           psect	text4212,local,class=CODE,delta=2
 25480                           global __ptext4212
 25481  222C                     __ptext4212:
 25482                           
 25483 ;; *************** function _DelayOffPointSelect *****************
 25484 ;; Defined at:
 25485 ;;		line 9 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\DelayOff_B1.c"
 25486 ;; Parameters:    Size  Location     Type
 25487 ;;  sw              1    wreg     unsigned char 
 25488 ;; Auto vars:     Size  Location     Type
 25489 ;;  sw              1    1[BANK0 ] unsigned char 
 25490 ;; Return value:  Size  Location     Type
 25491 ;;		None               void
 25492 ;; Registers used:
 25493 ;;		wreg
 25494 ;; Tracked objects:
 25495 ;;		On entry : 0/0
 25496 ;;		On exit  : 0/0
 25497 ;;		Unchanged: 0/0
 25498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 25499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 25500 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 25501 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 25502 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 25503 ;;Total ram usage:        2 bytes
 25504 ;; Hardware stack levels used:    1
 25505 ;; Hardware stack levels required when called:    4
 25506 ;; This function calls:
 25507 ;;		Nothing
 25508 ;; This function is called by:
 25509 ;;		_DlyOff_Initialization
 25510 ;;		_DlyOff_Main
 25511 ;;		_setDelayOff_GO
 25512 ;; This function uses a non-reentrant model
 25513 ;;
 25514                           psect	text4212
 25515                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\DelayOff_B1.c"
 25516                           	line	9
 25517                           	global	__size_of_DelayOffPointSelect
 25518  000F                     	__size_of_DelayOffPointSelect	equ	__end_of_DelayOffPointSelect-_DelayOffPointSelect
 25519                           	
 25520  222C                     _DelayOffPointSelect:	
 25521                           	opt	stack 9
 25522                           ; Regs used in _DelayOffPointSelect: [wreg]
 25523                           ;DelayOffPointSelect@sw stored from wreg
 25524                           	line	11
 25525  222C  0020               	movlb 0	; select bank0
 25526  222D  00A1               	movwf	(DelayOffPointSelect@sw)
 25527                           	
 25528  222E                     l22210:	
 25529                           ;DelayOff_B1.c: 11: if(sw == 1)
 25530  222E  0821               	movf	(DelayOffPointSelect@sw),w
 25531  222F  3A01               	xorlw	01h&0ffh
 25532  2230  1D03               	skipz
 25533  2231  2A33               	goto	u5211
 25534  2232  2A34               	goto	u5210
 25535  2233                     u5211:
 25536  2233  2A3A               	goto	l4574
 25537  2234                     u5210:
 25538                           	line	13
 25539                           	
 25540  2234                     l22212:	
 25541                           ;DelayOff_B1.c: 12: {
 25542                           ;DelayOff_B1.c: 13: DelayOff=&DlySw1;
 25543  2234  30D3               	movlw	(_DlySw1)&0ffh
 25544  2235  00A0               	movwf	(??_DelayOffPointSelect+0)+0
 25545  2236  0820               	movf	(??_DelayOffPointSelect+0)+0,w
 25546  2237  0021               	movlb 1	; select bank1
 25547  2238  00B8               	movwf	(_DelayOff)^080h
 25548  2239  2A3A               	goto	l4574
 25549                           	line	14
 25550                           	
 25551  223A                     l4573:	
 25552                           	line	28
 25553                           	
 25554  223A                     l4574:	
 25555  223A  0008               	return
 25556                           	opt stack 0
 25557                           GLOBAL	__end_of_DelayOffPointSelect
 25558  223B                     	__end_of_DelayOffPointSelect:
 25559 ;; =============== function _DelayOffPointSelect ends ============
 25560                           
 25561                           	signat	_DelayOffPointSelect,4216
 25562                           	global	_DelayTime_1us
 25563                           psect	text4213,local,class=CODE,delta=2
 25564                           global __ptext4213
 25565  26EE                     __ptext4213:
 25566                           
 25567 ;; *************** function _DelayTime_1us *****************
 25568 ;; Defined at:
 25569 ;;		line 284 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
 25570 ;; Parameters:    Size  Location     Type
 25571 ;;  count           2    0[BANK0 ] int 
 25572 ;; Auto vars:     Size  Location     Type
 25573 ;;  j               2    4[BANK0 ] unsigned int 
 25574 ;;  i               2    2[BANK0 ] unsigned int 
 25575 ;; Return value:  Size  Location     Type
 25576 ;;		None               void
 25577 ;; Registers used:
 25578 ;;		wreg, status,2
 25579 ;; Tracked objects:
 25580 ;;		On entry : 0/0
 25581 ;;		On exit  : 0/0
 25582 ;;		Unchanged: 0/0
 25583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 25584 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 25585 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 25586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 25587 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0
 25588 ;;Total ram usage:        6 bytes
 25589 ;; Hardware stack levels used:    1
 25590 ;; Hardware stack levels required when called:    4
 25591 ;; This function calls:
 25592 ;;		Nothing
 25593 ;; This function is called by:
 25594 ;;		_CC2500_PowerRST
 25595 ;;		_CC2500_FrequencyCabr
 25596 ;; This function uses a non-reentrant model
 25597 ;;
 25598                           psect	text4213
 25599                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
 25600                           	line	284
 25601                           	global	__size_of_DelayTime_1us
 25602  0031                     	__size_of_DelayTime_1us	equ	__end_of_DelayTime_1us-_DelayTime_1us
 25603                           	
 25604  26EE                     _DelayTime_1us:	
 25605                           	opt	stack 9
 25606                           ; Regs used in _DelayTime_1us: [wreg+status,2]
 25607                           	line	286
 25608                           	
 25609  26EE                     l24470:	
 25610                           ;CC2500_B1.c: 285: unsigned int i,j;
 25611                           ;CC2500_B1.c: 286: for(i=1;i<count;i++)
 25612  26EE  3001               	movlw	low(01h)
 25613  26EF  0020               	movlb 0	; select bank0
 25614  26F0  00A2               	movwf	(DelayTime_1us@i)
 25615  26F1  3000               	movlw	high(01h)
 25616  26F2  00A3               	movwf	((DelayTime_1us@i))+1
 25617  26F3  2F13               	goto	l2353
 25618                           	line	287
 25619                           	
 25620  26F4                     l2354:	
 25621                           	
 25622  26F4                     l24472:	
 25623                           ;CC2500_B1.c: 287: for(j=0;j<=1;j++);
 25624  26F4  01A4               	clrf	(DelayTime_1us@j)
 25625  26F5  01A5               	clrf	(DelayTime_1us@j+1)
 25626                           	
 25627  26F6                     l24474:	
 25628  26F6  3000               	movlw	high(02h)
 25629  26F7  0225               	subwf	(DelayTime_1us@j+1),w
 25630  26F8  3002               	movlw	low(02h)
 25631  26F9  1903               	skipnz
 25632  26FA  0224               	subwf	(DelayTime_1us@j),w
 25633  26FB  1C03               	skipc
 25634  26FC  2EFE               	goto	u8821
 25635  26FD  2EFF               	goto	u8820
 25636  26FE                     u8821:
 25637  26FE  2F01               	goto	l24478
 25638  26FF                     u8820:
 25639  26FF  2F0F               	goto	l24480
 25640                           	
 25641  2700                     l24476:	
 25642  2700  2F0F               	goto	l24480
 25643                           	
 25644  2701                     l2355:	
 25645                           	
 25646  2701                     l24478:	
 25647  2701  3001               	movlw	low(01h)
 25648  2702  07A4               	addwf	(DelayTime_1us@j),f
 25649  2703  3000               	movlw	high(01h)
 25650  2704  3DA5               	addwfc	(DelayTime_1us@j+1),f
 25651  2705  3000               	movlw	high(02h)
 25652  2706  0225               	subwf	(DelayTime_1us@j+1),w
 25653  2707  3002               	movlw	low(02h)
 25654  2708  1903               	skipnz
 25655  2709  0224               	subwf	(DelayTime_1us@j),w
 25656  270A  1C03               	skipc
 25657  270B  2F0D               	goto	u8831
 25658  270C  2F0E               	goto	u8830
 25659  270D                     u8831:
 25660  270D  2F01               	goto	l24478
 25661  270E                     u8830:
 25662  270E  2F0F               	goto	l24480
 25663                           	
 25664  270F                     l2356:	
 25665                           	line	286
 25666                           	
 25667  270F                     l24480:	
 25668  270F  3001               	movlw	low(01h)
 25669  2710  07A2               	addwf	(DelayTime_1us@i),f
 25670  2711  3000               	movlw	high(01h)
 25671  2712  3DA3               	addwfc	(DelayTime_1us@i+1),f
 25672                           	
 25673  2713                     l2353:	
 25674  2713  0821               	movf	(DelayTime_1us@count+1),w
 25675  2714  0223               	subwf	(DelayTime_1us@i+1),w
 25676  2715  1D03               	skipz
 25677  2716  2F19               	goto	u8845
 25678  2717  0820               	movf	(DelayTime_1us@count),w
 25679  2718  0222               	subwf	(DelayTime_1us@i),w
 25680  2719                     u8845:
 25681  2719  1C03               	skipc
 25682  271A  2F1C               	goto	u8841
 25683  271B  2F1D               	goto	u8840
 25684  271C                     u8841:
 25685  271C  2EF4               	goto	l24472
 25686  271D                     u8840:
 25687  271D  2F1E               	goto	l2358
 25688                           	
 25689  271E                     l2357:	
 25690                           	line	288
 25691                           	
 25692  271E                     l2358:	
 25693  271E  0008               	return
 25694                           	opt stack 0
 25695                           GLOBAL	__end_of_DelayTime_1us
 25696  271F                     	__end_of_DelayTime_1us:
 25697 ;; =============== function _DelayTime_1us ends ============
 25698                           
 25699                           	signat	_DelayTime_1us,4216
 25700                           	global	_CC2500_ReadByte
 25701                           psect	text4214,local,class=CODE,delta=2
 25702                           global __ptext4214
 25703  24FD                     __ptext4214:
 25704                           
 25705 ;; *************** function _CC2500_ReadByte *****************
 25706 ;; Defined at:
 25707 ;;		line 211 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
 25708 ;; Parameters:    Size  Location     Type
 25709 ;;		None
 25710 ;; Auto vars:     Size  Location     Type
 25711 ;;  loop_b          1    1[BANK0 ] unsigned char 
 25712 ;; Return value:  Size  Location     Type
 25713 ;;		None               void
 25714 ;; Registers used:
 25715 ;;		wreg, status,2, status,0
 25716 ;; Tracked objects:
 25717 ;;		On entry : 0/0
 25718 ;;		On exit  : 0/0
 25719 ;;		Unchanged: 0/0
 25720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 25721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 25722 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 25723 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 25724 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 25725 ;;Total ram usage:        2 bytes
 25726 ;; Hardware stack levels used:    1
 25727 ;; Hardware stack levels required when called:    4
 25728 ;; This function calls:
 25729 ;;		Nothing
 25730 ;; This function is called by:
 25731 ;;		_CC2500_RxData
 25732 ;;		_CC2500_ReadStatus
 25733 ;;		_CC2500_ReadREG
 25734 ;; This function uses a non-reentrant model
 25735 ;;
 25736                           psect	text4214
 25737                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
 25738                           	line	211
 25739                           	global	__size_of_CC2500_ReadByte
 25740  002B                     	__size_of_CC2500_ReadByte	equ	__end_of_CC2500_ReadByte-_CC2500_ReadByte
 25741                           	
 25742  24FD                     _CC2500_ReadByte:	
 25743                           	opt	stack 8
 25744                           ; Regs used in _CC2500_ReadByte: [wreg+status,2+status,0]
 25745                           	line	213
 25746                           	
 25747  24FD                     l22170:	
 25748                           ;CC2500_B1.c: 212: unsigned char loop_b;
 25749                           ;CC2500_B1.c: 213: for(loop_b=0;loop_b<8;loop_b++)
 25750  24FD  0020               	movlb 0	; select bank0
 25751  24FE  01A1               	clrf	(CC2500_ReadByte@loop_b)
 25752                           	
 25753  24FF                     l22172:	
 25754  24FF  3008               	movlw	(08h)
 25755  2500  0221               	subwf	(CC2500_ReadByte@loop_b),w
 25756  2501  1C03               	skipc
 25757  2502  2D04               	goto	u5141
 25758  2503  2D05               	goto	u5140
 25759  2504                     u5141:
 25760  2504  2D07               	goto	l2322
 25761  2505                     u5140:
 25762  2505  2D27               	goto	l2326
 25763                           	
 25764  2506                     l22174:	
 25765  2506  2D27               	goto	l2326
 25766                           	line	214
 25767                           	
 25768  2507                     l2322:	
 25769                           	line	215
 25770                           ;CC2500_B1.c: 214: {
 25771                           ;CC2500_B1.c: 215: RC1=1;
 25772  2507  148E               	bsf	(113/8),(113)&7
 25773                           	line	216
 25774                           	
 25775  2508                     l22176:	
 25776                           ;CC2500_B1.c: 216: SPI0Buffer<<=1;
 25777  2508  1003               	clrc
 25778  2509  0021               	movlb 1	; select bank1
 25779  250A  0DBF               	rlf	(_SPI0Buffer)^080h,f
 25780                           
 25781                           	line	217
 25782                           	
 25783  250B                     l22178:	
 25784                           ;CC2500_B1.c: 217: if(RC2 == 1)
 25785  250B  0020               	movlb 0	; select bank0
 25786  250C  1D0E               	btfss	(114/8),(114)&7
 25787  250D  2D0F               	goto	u5151
 25788  250E  2D10               	goto	u5150
 25789  250F                     u5151:
 25790  250F  2D13               	goto	l22182
 25791  2510                     u5150:
 25792                           	line	218
 25793                           	
 25794  2510                     l22180:	
 25795                           ;CC2500_B1.c: 218: SPI0Buffer |= 0x01;
 25796  2510  0021               	movlb 1	; select bank1
 25797  2511  143F               	bsf	(_SPI0Buffer)^080h+(0/8),(0)&7
 25798  2512  2D1A               	goto	l22184
 25799                           	line	219
 25800                           	
 25801  2513                     l2324:	
 25802                           	line	220
 25803                           	
 25804  2513                     l22182:	
 25805                           ;CC2500_B1.c: 219: else
 25806                           ;CC2500_B1.c: 220: SPI0Buffer &= 0xFE;
 25807  2513  30FE               	movlw	(0FEh)
 25808  2514  0020               	movlb 0	; select bank0
 25809  2515  00A0               	movwf	(??_CC2500_ReadByte+0)+0
 25810  2516  0820               	movf	(??_CC2500_ReadByte+0)+0,w
 25811  2517  0021               	movlb 1	; select bank1
 25812  2518  05BF               	andwf	(_SPI0Buffer)^080h,f
 25813  2519  2D1A               	goto	l22184
 25814                           	
 25815  251A                     l2325:	
 25816                           	line	221
 25817                           	
 25818  251A                     l22184:	
 25819                           ;CC2500_B1.c: 221: RC1=0;
 25820  251A  0020               	movlb 0	; select bank0
 25821  251B  108E               	bcf	(113/8),(113)&7
 25822                           	line	213
 25823  251C  3001               	movlw	(01h)
 25824  251D  00A0               	movwf	(??_CC2500_ReadByte+0)+0
 25825  251E  0820               	movf	(??_CC2500_ReadByte+0)+0,w
 25826  251F  07A1               	addwf	(CC2500_ReadByte@loop_b),f
 25827                           	
 25828  2520                     l22186:	
 25829  2520  3008               	movlw	(08h)
 25830  2521  0221               	subwf	(CC2500_ReadByte@loop_b),w
 25831  2522  1C03               	skipc
 25832  2523  2D25               	goto	u5161
 25833  2524  2D26               	goto	u5160
 25834  2525                     u5161:
 25835  2525  2D07               	goto	l2322
 25836  2526                     u5160:
 25837  2526  2D27               	goto	l2326
 25838                           	
 25839  2527                     l2323:	
 25840                           	line	223
 25841                           	
 25842  2527                     l2326:	
 25843  2527  0008               	return
 25844                           	opt stack 0
 25845                           GLOBAL	__end_of_CC2500_ReadByte
 25846  2528                     	__end_of_CC2500_ReadByte:
 25847 ;; =============== function _CC2500_ReadByte ends ============
 25848                           
 25849                           	signat	_CC2500_ReadByte,88
 25850                           	global	_CC2500_WriteByte
 25851                           psect	text4215,local,class=CODE,delta=2
 25852                           global __ptext4215
 25853  2488                     __ptext4215:
 25854                           
 25855 ;; *************** function _CC2500_WriteByte *****************
 25856 ;; Defined at:
 25857 ;;		line 194 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
 25858 ;; Parameters:    Size  Location     Type
 25859 ;;		None
 25860 ;; Auto vars:     Size  Location     Type
 25861 ;;  loop_a          1    1[BANK0 ] unsigned char 
 25862 ;; Return value:  Size  Location     Type
 25863 ;;		None               void
 25864 ;; Registers used:
 25865 ;;		wreg, status,2, status,0
 25866 ;; Tracked objects:
 25867 ;;		On entry : 0/0
 25868 ;;		On exit  : 0/0
 25869 ;;		Unchanged: 0/0
 25870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 25871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 25872 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 25873 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 25874 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 25875 ;;Total ram usage:        2 bytes
 25876 ;; Hardware stack levels used:    1
 25877 ;; Hardware stack levels required when called:    4
 25878 ;; This function calls:
 25879 ;;		Nothing
 25880 ;; This function is called by:
 25881 ;;		_CC2500_TxData
 25882 ;;		_CC2500_RxData
 25883 ;;		_CC2500_PowerRST
 25884 ;;		_CC2500_WriteREG
 25885 ;;		_CC2500_WriteCommand
 25886 ;;		_CC2500_ReadStatus
 25887 ;;		_CC2500_ReadREG
 25888 ;; This function uses a non-reentrant model
 25889 ;;
 25890                           psect	text4215
 25891                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\CC2500_B1.c"
 25892                           	line	194
 25893                           	global	__size_of_CC2500_WriteByte
 25894  0026                     	__size_of_CC2500_WriteByte	equ	__end_of_CC2500_WriteByte-_CC2500_WriteByte
 25895                           	
 25896  2488                     _CC2500_WriteByte:	
 25897                           	opt	stack 7
 25898                           ; Regs used in _CC2500_WriteByte: [wreg+status,2+status,0]
 25899                           	line	196
 25900                           	
 25901  2488                     l22154:	
 25902                           ;CC2500_B1.c: 195: unsigned char loop_a;
 25903                           ;CC2500_B1.c: 196: for(loop_a=0;loop_a<8;loop_a++)
 25904  2488  0020               	movlb 0	; select bank0
 25905  2489  01A1               	clrf	(CC2500_WriteByte@loop_a)
 25906                           	
 25907  248A                     l22156:	
 25908  248A  3008               	movlw	(08h)
 25909  248B  0221               	subwf	(CC2500_WriteByte@loop_a),w
 25910  248C  1C03               	skipc
 25911  248D  2C8F               	goto	u5111
 25912  248E  2C90               	goto	u5110
 25913  248F                     u5111:
 25914  248F  2C92               	goto	l2315
 25915  2490                     u5110:
 25916  2490  2CAD               	goto	l2319
 25917                           	
 25918  2491                     l22158:	
 25919  2491  2CAD               	goto	l2319
 25920                           	line	197
 25921                           	
 25922  2492                     l2315:	
 25923                           	line	198
 25924                           ;CC2500_B1.c: 197: {
 25925                           ;CC2500_B1.c: 198: if(SPI0Buffer&0x80)
 25926  2492  0021               	movlb 1	; select bank1
 25927  2493  1FBF               	btfss	(_SPI0Buffer)^080h,(7)&7
 25928  2494  2C96               	goto	u5121
 25929  2495  2C97               	goto	u5120
 25930  2496                     u5121:
 25931  2496  2C9A               	goto	l2317
 25932  2497                     u5120:
 25933                           	line	199
 25934                           	
 25935  2497                     l22160:	
 25936                           ;CC2500_B1.c: 199: RC0=1;
 25937  2497  0020               	movlb 0	; select bank0
 25938  2498  140E               	bsf	(112/8),(112)&7
 25939  2499  2C9C               	goto	l2318
 25940                           	line	200
 25941                           	
 25942  249A                     l2317:	
 25943                           	line	201
 25944                           ;CC2500_B1.c: 200: else
 25945                           ;CC2500_B1.c: 201: RC0=0;
 25946  249A  0020               	movlb 0	; select bank0
 25947  249B  100E               	bcf	(112/8),(112)&7
 25948                           	
 25949  249C                     l2318:	
 25950                           	line	202
 25951                           ;CC2500_B1.c: 202: RC1=1;
 25952  249C  148E               	bsf	(113/8),(113)&7
 25953                           	line	203
 25954                           	
 25955  249D                     l22162:	
 25956                           ;CC2500_B1.c: 203: SPI0Buffer<<=1;
 25957  249D  1003               	clrc
 25958  249E  0021               	movlb 1	; select bank1
 25959  249F  0DBF               	rlf	(_SPI0Buffer)^080h,f
 25960                           
 25961                           	line	204
 25962                           	
 25963  24A0                     l22164:	
 25964                           ;CC2500_B1.c: 204: RC1=0;
 25965  24A0  0020               	movlb 0	; select bank0
 25966  24A1  108E               	bcf	(113/8),(113)&7
 25967                           	line	196
 25968                           	
 25969  24A2                     l22166:	
 25970  24A2  3001               	movlw	(01h)
 25971  24A3  00A0               	movwf	(??_CC2500_WriteByte+0)+0
 25972  24A4  0820               	movf	(??_CC2500_WriteByte+0)+0,w
 25973  24A5  07A1               	addwf	(CC2500_WriteByte@loop_a),f
 25974                           	
 25975  24A6                     l22168:	
 25976  24A6  3008               	movlw	(08h)
 25977  24A7  0221               	subwf	(CC2500_WriteByte@loop_a),w
 25978  24A8  1C03               	skipc
 25979  24A9  2CAB               	goto	u5131
 25980  24AA  2CAC               	goto	u5130
 25981  24AB                     u5131:
 25982  24AB  2C92               	goto	l2315
 25983  24AC                     u5130:
 25984  24AC  2CAD               	goto	l2319
 25985                           	
 25986  24AD                     l2316:	
 25987                           	line	206
 25988                           	
 25989  24AD                     l2319:	
 25990  24AD  0008               	return
 25991                           	opt stack 0
 25992                           GLOBAL	__end_of_CC2500_WriteByte
 25993  24AE                     	__end_of_CC2500_WriteByte:
 25994 ;; =============== function _CC2500_WriteByte ends ============
 25995                           
 25996                           	signat	_CC2500_WriteByte,88
 25997                           	global	_Buzzer_Main
 25998                           psect	text4216,local,class=CODE,delta=2
 25999                           global __ptext4216
 26000  0AA0                     __ptext4216:
 26001                           
 26002 ;; *************** function _Buzzer_Main *****************
 26003 ;; Defined at:
 26004 ;;		line 54 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Buzzer_B1.c"
 26005 ;; Parameters:    Size  Location     Type
 26006 ;;		None
 26007 ;; Auto vars:     Size  Location     Type
 26008 ;;		None
 26009 ;; Return value:  Size  Location     Type
 26010 ;;		None               void
 26011 ;; Registers used:
 26012 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 26013 ;; Tracked objects:
 26014 ;;		On entry : 0/0
 26015 ;;		On exit  : 0/0
 26016 ;;		Unchanged: 0/0
 26017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 26018 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 26019 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 26020 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 26021 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 26022 ;;Total ram usage:        4 bytes
 26023 ;; Hardware stack levels used:    1
 26024 ;; Hardware stack levels required when called:    4
 26025 ;; This function calls:
 26026 ;;		Nothing
 26027 ;; This function is called by:
 26028 ;;		_main
 26029 ;; This function uses a non-reentrant model
 26030 ;;
 26031                           psect	text4216
 26032                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Buzzer_B1.c"
 26033                           	line	54
 26034                           	global	__size_of_Buzzer_Main
 26035  00CC                     	__size_of_Buzzer_Main	equ	__end_of_Buzzer_Main-_Buzzer_Main
 26036                           	
 26037  0AA0                     _Buzzer_Main:	
 26038                           	opt	stack 11
 26039                           ; Regs used in _Buzzer_Main: [wreg+fsr1l-status,0]
 26040                           	line	55
 26041                           	
 26042  0AA0                     l22124:	
 26043                           ;Buzzer_B1.c: 55: Buz->Switch=(RB3)?1:0;
 26044  0AA0  3000               	movlw	0
 26045  0AA1  0020               	movlb 0	; select bank0
 26046  0AA2  198D               	btfsc	(107/8),(107)&7
 26047  0AA3  3001               	movlw	1
 26048  0AA4  00A0               	movwf	(??_Buzzer_Main+0)+0
 26049  0AA5  0878               	movf	(_Buz),w
 26050  0AA6  0086               	movwf	fsr1l
 26051  0AA7  3001               	movlw 1	; select bank2/3
 26052  0AA8  0087               	movwf fsr1h	
 26053                           	
 26054  0AA9  0EA0               	swapf	(??_Buzzer_Main+0)+0,f
 26055  0AAA  0DA0               	rlf	(??_Buzzer_Main+0)+0,f
 26056  0AAB  0801               	movf	indf1,w
 26057  0AAC  0620               	xorwf	(??_Buzzer_Main+0)+0,w
 26058  0AAD  39DF               	andlw	not (((1<<1)-1)<<5)
 26059  0AAE  0620               	xorwf	(??_Buzzer_Main+0)+0,w
 26060  0AAF  0081               	movwf	indf1
 26061                           	line	57
 26062                           	
 26063  0AB0                     l22126:	
 26064                           ;Buzzer_B1.c: 57: if(Buz->GO)
 26065  0AB0  0878               	movf	(_Buz),w
 26066  0AB1  0086               	movwf	fsr1l
 26067  0AB2  3001               	movlw 1	; select bank2/3
 26068  0AB3  0087               	movwf fsr1h	
 26069                           	
 26070  0AB4  1C81               	btfss	indf1,1
 26071  0AB5  2AB7               	goto	u5051
 26072  0AB6  2AB8               	goto	u5050
 26073  0AB7                     u5051:
 26074  0AB7  2B6B               	goto	l1124
 26075  0AB8                     u5050:
 26076                           	line	60
 26077                           	
 26078  0AB8                     l22128:	
 26079                           ;Buzzer_B1.c: 58: {
 26080                           ;Buzzer_B1.c: 60: if(Buz->Time >= Buz->TimeValue)
 26081  0AB8  0878               	movf	(_Buz),w
 26082  0AB9  3E06               	addlw	06h
 26083  0ABA  0086               	movwf	fsr1l
 26084  0ABB  3001               	movlw 1	; select bank2/3
 26085  0ABC  0087               	movwf fsr1h	
 26086                           	
 26087  0ABD  3F40               	moviw	[0]fsr1
 26088  0ABE  00A0               	movwf	(??_Buzzer_Main+0)+0
 26089  0ABF  3F41               	moviw	[1]fsr1
 26090  0AC0  00A1               	movwf	(??_Buzzer_Main+0)+0+1
 26091  0AC1  0878               	movf	(_Buz),w
 26092  0AC2  3E01               	addlw	01h
 26093  0AC3  0086               	movwf	fsr1l
 26094  0AC4  3001               	movlw 1	; select bank2/3
 26095  0AC5  0087               	movwf fsr1h	
 26096                           	
 26097  0AC6  3F40               	moviw	[0]fsr1
 26098  0AC7  00A2               	movwf	(??_Buzzer_Main+2)+0
 26099  0AC8  3F41               	moviw	[1]fsr1
 26100  0AC9  00A3               	movwf	(??_Buzzer_Main+2)+0+1
 26101  0ACA  0821               	movf	1+(??_Buzzer_Main+0)+0,w
 26102  0ACB  0223               	subwf	1+(??_Buzzer_Main+2)+0,w
 26103  0ACC  1D03               	skipz
 26104  0ACD  2AD0               	goto	u5065
 26105  0ACE  0820               	movf	0+(??_Buzzer_Main+0)+0,w
 26106  0ACF  0222               	subwf	0+(??_Buzzer_Main+2)+0,w
 26107  0AD0                     u5065:
 26108  0AD0  1C03               	skipc
 26109  0AD1  2AD3               	goto	u5061
 26110  0AD2  2AD4               	goto	u5060
 26111  0AD3                     u5061:
 26112  0AD3  2B6B               	goto	l1124
 26113  0AD4                     u5060:
 26114                           	line	62
 26115                           	
 26116  0AD4                     l22130:	
 26117                           ;Buzzer_B1.c: 61: {
 26118                           ;Buzzer_B1.c: 62: Buz->Time=0;
 26119  0AD4  0878               	movf	(_Buz),w
 26120  0AD5  3E01               	addlw	01h
 26121  0AD6  0086               	movwf	fsr1l
 26122  0AD7  3001               	movlw 1	; select bank2/3
 26123  0AD8  0087               	movwf fsr1h	
 26124                           	
 26125  0AD9  3000               	movlw	low(0)
 26126  0ADA  3FC0               	movwi	[0]fsr1
 26127  0ADB  3000               	movlw	high(0)
 26128  0ADC  3FC1               	movwi	[1]fsr1
 26129                           	line	63
 26130                           ;Buzzer_B1.c: 63: if(!Buz->Switch)
 26131  0ADD  0878               	movf	(_Buz),w
 26132  0ADE  0086               	movwf	fsr1l
 26133  0ADF  3001               	movlw 1	; select bank2/3
 26134  0AE0  0087               	movwf fsr1h	
 26135                           	
 26136  0AE1  1A81               	btfsc	indf1,5
 26137  0AE2  2AE4               	goto	u5071
 26138  0AE3  2AE5               	goto	u5070
 26139  0AE4                     u5071:
 26140  0AE4  2B5B               	goto	l22148
 26141  0AE5                     u5070:
 26142                           	line	65
 26143                           	
 26144  0AE5                     l22132:	
 26145                           ;Buzzer_B1.c: 64: {
 26146                           ;Buzzer_B1.c: 65: if(Buz->Count == 0)
 26147  0AE5  0878               	movf	(_Buz),w
 26148  0AE6  3E03               	addlw	03h
 26149  0AE7  0086               	movwf	fsr1l
 26150  0AE8  3001               	movlw 1	; select bank2/3
 26151  0AE9  0087               	movwf fsr1h	
 26152                           	
 26153  0AEA  0881               	movf	indf1,f
 26154  0AEB  1D03               	skipz
 26155  0AEC  2AEE               	goto	u5081
 26156  0AED  2AEF               	goto	u5080
 26157  0AEE                     u5081:
 26158  0AEE  2B53               	goto	l22144
 26159  0AEF                     u5080:
 26160                           	line	67
 26161                           	
 26162  0AEF                     l22134:	
 26163                           ;Buzzer_B1.c: 66: {
 26164                           ;Buzzer_B1.c: 67: if(Buz->BufferStatus1)
 26165  0AEF  0878               	movf	(_Buz),w
 26166  0AF0  0086               	movwf	fsr1l
 26167  0AF1  3001               	movlw 1	; select bank2/3
 26168  0AF2  0087               	movwf fsr1h	
 26169                           	
 26170  0AF3  1D81               	btfss	indf1,3
 26171  0AF4  2AF6               	goto	u5091
 26172  0AF5  2AF7               	goto	u5090
 26173  0AF6                     u5091:
 26174  0AF6  2B1D               	goto	l22138
 26175  0AF7                     u5090:
 26176                           	line	69
 26177                           	
 26178  0AF7                     l22136:	
 26179                           ;Buzzer_B1.c: 68: {
 26180                           ;Buzzer_B1.c: 69: Buz->BufferStatus1=0;
 26181  0AF7  0878               	movf	(_Buz),w
 26182  0AF8  0086               	movwf	fsr1l
 26183  0AF9  3001               	movlw 1	; select bank2/3
 26184  0AFA  0087               	movwf fsr1h	
 26185                           	
 26186  0AFB  1181               	bcf	indf1,3
 26187                           	line	70
 26188                           ;Buzzer_B1.c: 70: Buz->Count=Buz->CountBuffer1;
 26189  0AFC  0878               	movf	(_Buz),w
 26190  0AFD  3E04               	addlw	04h
 26191  0AFE  0086               	movwf	fsr1l
 26192  0AFF  3001               	movlw 1	; select bank2/3
 26193  0B00  0087               	movwf fsr1h	
 26194                           	
 26195  0B01  0801               	movf	indf1,w
 26196  0B02  00A0               	movwf	(??_Buzzer_Main+0)+0
 26197  0B03  0878               	movf	(_Buz),w
 26198  0B04  3E03               	addlw	03h
 26199  0B05  0086               	movwf	fsr1l
 26200  0B06  3001               	movlw 1	; select bank2/3
 26201  0B07  0087               	movwf fsr1h	
 26202                           	
 26203  0B08  0820               	movf	(??_Buzzer_Main+0)+0,w
 26204  0B09  0081               	movwf	indf1
 26205                           	line	71
 26206                           ;Buzzer_B1.c: 71: Buz->TimeValue=Buz->TimeValueBuffer1;
 26207  0B0A  0878               	movf	(_Buz),w
 26208  0B0B  3E08               	addlw	08h
 26209  0B0C  0086               	movwf	fsr1l
 26210  0B0D  3001               	movlw 1	; select bank2/3
 26211  0B0E  0087               	movwf fsr1h	
 26212                           	
 26213  0B0F  3F40               	moviw	[0]fsr1
 26214  0B10  00A0               	movwf	(??_Buzzer_Main+0)+0
 26215  0B11  3F41               	moviw	[1]fsr1
 26216  0B12  00A1               	movwf	(??_Buzzer_Main+0)+0+1
 26217  0B13  0878               	movf	(_Buz),w
 26218  0B14  3E06               	addlw	06h
 26219  0B15  0086               	movwf	fsr1l
 26220  0B16  3001               	movlw 1	; select bank2/3
 26221  0B17  0087               	movwf fsr1h	
 26222                           	
 26223  0B18  0820               	movf	0+(??_Buzzer_Main+0)+0,w
 26224  0B19  3FC0               	movwi	[0]fsr1
 26225  0B1A  0821               	movf	1+(??_Buzzer_Main+0)+0,w
 26226  0B1B  3FC1               	movwi	[1]fsr1
 26227                           	line	72
 26228                           ;Buzzer_B1.c: 72: }
 26229  0B1C  2B6B               	goto	l1124
 26230                           	line	73
 26231                           	
 26232  0B1D                     l1118:	
 26233                           	
 26234  0B1D                     l22138:	
 26235                           ;Buzzer_B1.c: 73: else if(Buz->BufferStatus2)
 26236  0B1D  0878               	movf	(_Buz),w
 26237  0B1E  0086               	movwf	fsr1l
 26238  0B1F  3001               	movlw 1	; select bank2/3
 26239  0B20  0087               	movwf fsr1h	
 26240                           	
 26241  0B21  1E01               	btfss	indf1,4
 26242  0B22  2B24               	goto	u5101
 26243  0B23  2B25               	goto	u5100
 26244  0B24                     u5101:
 26245  0B24  2B4B               	goto	l22142
 26246  0B25                     u5100:
 26247                           	line	75
 26248                           	
 26249  0B25                     l22140:	
 26250                           ;Buzzer_B1.c: 74: {
 26251                           ;Buzzer_B1.c: 75: Buz->BufferStatus2=0;
 26252  0B25  0878               	movf	(_Buz),w
 26253  0B26  0086               	movwf	fsr1l
 26254  0B27  3001               	movlw 1	; select bank2/3
 26255  0B28  0087               	movwf fsr1h	
 26256                           	
 26257  0B29  1201               	bcf	indf1,4
 26258                           	line	76
 26259                           ;Buzzer_B1.c: 76: Buz->Count=Buz->CountBuffer2;
 26260  0B2A  0878               	movf	(_Buz),w
 26261  0B2B  3E05               	addlw	05h
 26262  0B2C  0086               	movwf	fsr1l
 26263  0B2D  3001               	movlw 1	; select bank2/3
 26264  0B2E  0087               	movwf fsr1h	
 26265                           	
 26266  0B2F  0801               	movf	indf1,w
 26267  0B30  00A0               	movwf	(??_Buzzer_Main+0)+0
 26268  0B31  0878               	movf	(_Buz),w
 26269  0B32  3E03               	addlw	03h
 26270  0B33  0086               	movwf	fsr1l
 26271  0B34  3001               	movlw 1	; select bank2/3
 26272  0B35  0087               	movwf fsr1h	
 26273                           	
 26274  0B36  0820               	movf	(??_Buzzer_Main+0)+0,w
 26275  0B37  0081               	movwf	indf1
 26276                           	line	77
 26277                           ;Buzzer_B1.c: 77: Buz->TimeValue=Buz->TimeValueBuffer2;
 26278  0B38  0878               	movf	(_Buz),w
 26279  0B39  3E0A               	addlw	0Ah
 26280  0B3A  0086               	movwf	fsr1l
 26281  0B3B  3001               	movlw 1	; select bank2/3
 26282  0B3C  0087               	movwf fsr1h	
 26283                           	
 26284  0B3D  3F40               	moviw	[0]fsr1
 26285  0B3E  00A0               	movwf	(??_Buzzer_Main+0)+0
 26286  0B3F  3F41               	moviw	[1]fsr1
 26287  0B40  00A1               	movwf	(??_Buzzer_Main+0)+0+1
 26288  0B41  0878               	movf	(_Buz),w
 26289  0B42  3E06               	addlw	06h
 26290  0B43  0086               	movwf	fsr1l
 26291  0B44  3001               	movlw 1	; select bank2/3
 26292  0B45  0087               	movwf fsr1h	
 26293                           	
 26294  0B46  0820               	movf	0+(??_Buzzer_Main+0)+0,w
 26295  0B47  3FC0               	movwi	[0]fsr1
 26296  0B48  0821               	movf	1+(??_Buzzer_Main+0)+0,w
 26297  0B49  3FC1               	movwi	[1]fsr1
 26298                           	line	78
 26299                           ;Buzzer_B1.c: 78: }
 26300  0B4A  2B6B               	goto	l1124
 26301                           	line	79
 26302                           	
 26303  0B4B                     l1120:	
 26304                           	line	81
 26305                           	
 26306  0B4B                     l22142:	
 26307                           ;Buzzer_B1.c: 79: else
 26308                           ;Buzzer_B1.c: 80: {
 26309                           ;Buzzer_B1.c: 81: Buz->GO=0;
 26310  0B4B  0878               	movf	(_Buz),w
 26311  0B4C  0086               	movwf	fsr1l
 26312  0B4D  3001               	movlw 1	; select bank2/3
 26313  0B4E  0087               	movwf fsr1h	
 26314                           	
 26315  0B4F  1081               	bcf	indf1,1
 26316  0B50  2B6B               	goto	l1124
 26317                           	line	82
 26318                           	
 26319  0B51                     l1121:	
 26320  0B51  2B6B               	goto	l1124
 26321                           	
 26322  0B52                     l1119:	
 26323                           	line	83
 26324                           ;Buzzer_B1.c: 82: }
 26325                           ;Buzzer_B1.c: 83: }
 26326  0B52  2B6B               	goto	l1124
 26327                           	line	84
 26328                           	
 26329  0B53                     l1117:	
 26330                           	line	86
 26331                           	
 26332  0B53                     l22144:	
 26333                           ;Buzzer_B1.c: 84: else
 26334                           ;Buzzer_B1.c: 85: {
 26335                           ;Buzzer_B1.c: 86: Buz->Switch=1;
 26336  0B53  0878               	movf	(_Buz),w
 26337  0B54  0086               	movwf	fsr1l
 26338  0B55  3001               	movlw 1	; select bank2/3
 26339  0B56  0087               	movwf fsr1h	
 26340                           	
 26341  0B57  1681               	bsf	indf1,5
 26342                           	line	88
 26343                           	
 26344  0B58                     l22146:	
 26345                           ;Buzzer_B1.c: 88: RB3=1;
 26346  0B58  158D               	bsf	(107/8),(107)&7
 26347  0B59  2B6B               	goto	l1124
 26348                           	line	89
 26349                           	
 26350  0B5A                     l1122:	
 26351                           	line	90
 26352                           ;Buzzer_B1.c: 89: }
 26353                           ;Buzzer_B1.c: 90: }
 26354  0B5A  2B6B               	goto	l1124
 26355                           	line	91
 26356                           	
 26357  0B5B                     l1116:	
 26358                           	line	93
 26359                           	
 26360  0B5B                     l22148:	
 26361                           ;Buzzer_B1.c: 91: else
 26362                           ;Buzzer_B1.c: 92: {
 26363                           ;Buzzer_B1.c: 93: Buz->Switch=0;
 26364  0B5B  0878               	movf	(_Buz),w
 26365  0B5C  0086               	movwf	fsr1l
 26366  0B5D  3001               	movlw 1	; select bank2/3
 26367  0B5E  0087               	movwf fsr1h	
 26368                           	
 26369  0B5F  1281               	bcf	indf1,5
 26370                           	line	95
 26371                           	
 26372  0B60                     l22150:	
 26373                           ;Buzzer_B1.c: 95: RB3=0;
 26374  0B60  118D               	bcf	(107/8),(107)&7
 26375                           	line	97
 26376                           	
 26377  0B61                     l22152:	
 26378                           ;Buzzer_B1.c: 97: Buz->Count--;
 26379  0B61  0878               	movf	(_Buz),w
 26380  0B62  3E03               	addlw	03h
 26381  0B63  0086               	movwf	fsr1l
 26382  0B64  3001               	movlw 1	; select bank2/3
 26383  0B65  0087               	movwf fsr1h	
 26384                           	
 26385  0B66  3001               	movlw	low(01h)
 26386  0B67  0281               	subwf	indf1,f
 26387  0B68  2B6B               	goto	l1124
 26388                           	line	98
 26389                           	
 26390  0B69                     l1123:	
 26391  0B69  2B6B               	goto	l1124
 26392                           	line	99
 26393                           	
 26394  0B6A                     l1115:	
 26395  0B6A  2B6B               	goto	l1124
 26396                           	line	100
 26397                           	
 26398  0B6B                     l1114:	
 26399                           	line	101
 26400                           	
 26401  0B6B                     l1124:	
 26402  0B6B  0008               	return
 26403                           	opt stack 0
 26404                           GLOBAL	__end_of_Buzzer_Main
 26405  0B6C                     	__end_of_Buzzer_Main:
 26406 ;; =============== function _Buzzer_Main ends ============
 26407                           
 26408                           	signat	_Buzzer_Main,88
 26409                           	global	_Buzzer_Initialization
 26410                           psect	text4217,local,class=CODE,delta=2
 26411                           global __ptext4217
 26412  212D                     __ptext4217:
 26413                           
 26414 ;; *************** function _Buzzer_Initialization *****************
 26415 ;; Defined at:
 26416 ;;		line 11 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Buzzer_B1.c"
 26417 ;; Parameters:    Size  Location     Type
 26418 ;;		None
 26419 ;; Auto vars:     Size  Location     Type
 26420 ;;		None
 26421 ;; Return value:  Size  Location     Type
 26422 ;;		None               void
 26423 ;; Registers used:
 26424 ;;		wreg, fsr1l, fsr1h
 26425 ;; Tracked objects:
 26426 ;;		On entry : 0/0
 26427 ;;		On exit  : 0/0
 26428 ;;		Unchanged: 0/0
 26429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 26430 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 26431 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 26432 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 26433 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 26434 ;;Total ram usage:        1 bytes
 26435 ;; Hardware stack levels used:    1
 26436 ;; Hardware stack levels required when called:    4
 26437 ;; This function calls:
 26438 ;;		Nothing
 26439 ;; This function is called by:
 26440 ;;		_main
 26441 ;; This function uses a non-reentrant model
 26442 ;;
 26443                           psect	text4217
 26444                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\Buzzer_B1.c"
 26445                           	line	11
 26446                           	global	__size_of_Buzzer_Initialization
 26447  000B                     	__size_of_Buzzer_Initialization	equ	__end_of_Buzzer_Initialization-_Buzzer_Initializati
                                 on
 26448                           	
 26449  212D                     _Buzzer_Initialization:	
 26450                           	opt	stack 11
 26451                           ; Regs used in _Buzzer_Initialization: [wregfsr1]
 26452                           	line	12
 26453                           	
 26454  212D                     l22118:	
 26455                           ;Buzzer_B1.c: 12: Buz=&Buz1;
 26456  212D  304B               	movlw	(_Buz1)&0ffh
 26457  212E  0020               	movlb 0	; select bank0
 26458  212F  00A0               	movwf	(??_Buzzer_Initialization+0)+0
 26459  2130  0820               	movf	(??_Buzzer_Initialization+0)+0,w
 26460  2131  00F8               	movwf	(_Buz)
 26461                           	line	13
 26462                           	
 26463  2132                     l22120:	
 26464                           ;Buzzer_B1.c: 13: Buz->Enable=1;
 26465  2132  0878               	movf	(_Buz),w
 26466  2133  0086               	movwf	fsr1l
 26467  2134  3001               	movlw 1	; select bank2/3
 26468  2135  0087               	movwf fsr1h	
 26469                           	
 26470  2136  1401               	bsf	indf1,0
 26471                           	line	14
 26472                           	
 26473  2137                     l1099:	
 26474  2137  0008               	return
 26475                           	opt stack 0
 26476                           GLOBAL	__end_of_Buzzer_Initialization
 26477  2138                     	__end_of_Buzzer_Initialization:
 26478 ;; =============== function _Buzzer_Initialization ends ============
 26479                           
 26480                           	signat	_Buzzer_Initialization,88
 26481                           	global	_ISR
 26482                           psect	intentry,class=CODE,delta=2
 26483                           global __pintentry
 26484  0004                     __pintentry:
 26485                           
 26486 ;; *************** function _ISR *****************
 26487 ;; Defined at:
 26488 ;;		line 57 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_16f1518_B1.c"
 26489 ;; Parameters:    Size  Location     Type
 26490 ;;		None
 26491 ;; Auto vars:     Size  Location     Type
 26492 ;;		None
 26493 ;; Return value:  Size  Location     Type
 26494 ;;		None               void
 26495 ;; Registers used:
 26496 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
 26497 ;; Tracked objects:
 26498 ;;		On entry : 0/0
 26499 ;;		On exit  : 0/0
 26500 ;;		Unchanged: 0/0
 26501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 26502 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 26503 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 26504 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 26505 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 26506 ;;Total ram usage:        1 bytes
 26507 ;; Hardware stack levels used:    1
 26508 ;; Hardware stack levels required when called:    3
 26509 ;; This function calls:
 26510 ;;		_IOC_ISR
 26511 ;;		_TMR0_ISR
 26512 ;;		_INT_ISR
 26513 ;; This function is called by:
 26514 ;;		Interrupt level 1
 26515 ;; This function uses a non-reentrant model
 26516 ;;
 26517                           psect	intentry
 26518                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_16f1518_B1.c"
 26519                           	line	57
 26520                           	global	__size_of_ISR
 26521  0011                     	__size_of_ISR	equ	__end_of_ISR-_ISR
 26522                           	
 26523  0004                     _ISR:	
 26524                           	opt	stack 2
 26525                           ; Regs used in _ISR: [allreg]
 26526                           psect	intentry
 26527  0004  3180               	pagesel	$
 26528  0005  0020               	movlb 0	; select bank0
 26529  0006  087F               	movf	btemp+1,w
 26530  0007  00F7               	movwf	(??_ISR+0)
 26531                           	line	58
 26532                           	
 26533  0008                     i1l22382:	
 26534                           ;MCU_16f1518_B1.c: 58: IOC_ISR();
 26535  0008  31A6  2660  3180   	fcall	_IOC_ISR
 26536                           	line	60
 26537                           	
 26538  000B                     i1l22384:	
 26539                           ;MCU_16f1518_B1.c: 60: TMR0_ISR();
 26540  000B  3183  230E  3180   	fcall	_TMR0_ISR
 26541                           	line	66
 26542                           	
 26543  000E                     i1l22386:	
 26544                           ;MCU_16f1518_B1.c: 62: ;;
 26545                           ;MCU_16f1518_B1.c: 66: INT_ISR();
 26546  000E  31A3  2330  3180   	fcall	_INT_ISR
 26547                           	line	69
 26548                           	
 26549  0011                     i1l9318:	
 26550  0011  0877               	movf	(??_ISR+0),w
 26551  0012  0020               	movlb 0	; select bank0
 26552  0013  00FF               	movwf	btemp+1
 26553  0014  0009               	retfie
 26554                           	opt stack 0
 26555                           GLOBAL	__end_of_ISR
 26556  0015                     	__end_of_ISR:
 26557 ;; =============== function _ISR ends ============
 26558                           
 26559                           	signat	_ISR,88
 26560                           	global	_INT_ISR
 26561                           psect	text4219,local,class=CODE,delta=2
 26562                           global __ptext4219
 26563  2330                     __ptext4219:
 26564                           
 26565 ;; *************** function _INT_ISR *****************
 26566 ;; Defined at:
 26567 ;;		line 226 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_16f1518_B1.c"
 26568 ;; Parameters:    Size  Location     Type
 26569 ;;		None
 26570 ;; Auto vars:     Size  Location     Type
 26571 ;;		None
 26572 ;; Return value:  Size  Location     Type
 26573 ;;		None               void
 26574 ;; Registers used:
 26575 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 26576 ;; Tracked objects:
 26577 ;;		On entry : 0/0
 26578 ;;		On exit  : 0/0
 26579 ;;		Unchanged: 0/0
 26580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 26581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 26582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 26583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 26584 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 26585 ;;Total ram usage:        0 bytes
 26586 ;; Hardware stack levels used:    1
 26587 ;; Hardware stack levels required when called:    2
 26588 ;; This function calls:
 26589 ;;		_setRF_ReceiveGO
 26590 ;; This function is called by:
 26591 ;;		_ISR
 26592 ;; This function uses a non-reentrant model
 26593 ;;
 26594                           psect	text4219
 26595                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_16f1518_B1.c"
 26596                           	line	226
 26597                           	global	__size_of_INT_ISR
 26598  0013                     	__size_of_INT_ISR	equ	__end_of_INT_ISR-_INT_ISR
 26599                           	
 26600  2330                     _INT_ISR:	
 26601                           	opt	stack 2
 26602                           ; Regs used in _INT_ISR: [wreg+fsr1l-status,0+pclath+cstack]
 26603                           	line	227
 26604                           	
 26605  2330                     i1l22496:	
 26606                           ;MCU_16f1518_B1.c: 227: if(INTE && INTF)
 26607  2330  1E0B               	btfss	(92/8),(92)&7
 26608  2331  2B33               	goto	u567_21
 26609  2332  2B34               	goto	u567_20
 26610  2333                     u567_21:
 26611  2333  2B42               	goto	i1l9365
 26612  2334                     u567_20:
 26613                           	
 26614  2334                     i1l22498:	
 26615  2334  1C8B               	btfss	(89/8),(89)&7
 26616  2335  2B37               	goto	u568_21
 26617  2336  2B38               	goto	u568_20
 26618  2337                     u568_21:
 26619  2337  2B42               	goto	i1l9365
 26620  2338                     u568_20:
 26621                           	line	229
 26622                           	
 26623  2338                     i1l22500:	
 26624                           ;MCU_16f1518_B1.c: 228: {
 26625                           ;MCU_16f1518_B1.c: 229: INTF=0;
 26626  2338  108B               	bcf	(89/8),(89)&7
 26627                           	line	230
 26628                           ;MCU_16f1518_B1.c: 230: INTE=0;
 26629  2339  120B               	bcf	(92/8),(92)&7
 26630                           	line	231
 26631                           	
 26632  233A                     i1l22502:	
 26633                           ;MCU_16f1518_B1.c: 231: setRF_ReceiveGO(1,1);
 26634  233A  01F3               	clrf	(?_setRF_ReceiveGO)
 26635  233B  1403               	bsf	status,0
 26636  233C  0DF3               	rlf	(?_setRF_ReceiveGO),f
 26637  233D  3001               	movlw	(01h)
 26638  233E  31A1  217E  31A3   	fcall	_setRF_ReceiveGO
 26639  2341  2B42               	goto	i1l9365
 26640                           	line	232
 26641                           	
 26642  2342                     i1l9364:	
 26643                           	line	233
 26644                           	
 26645  2342                     i1l9365:	
 26646  2342  0008               	return
 26647                           	opt stack 0
 26648                           GLOBAL	__end_of_INT_ISR
 26649  2343                     	__end_of_INT_ISR:
 26650 ;; =============== function _INT_ISR ends ============
 26651                           
 26652                           	signat	_INT_ISR,88
 26653                           	global	_setRF_ReceiveGO
 26654                           psect	text4220,local,class=CODE,delta=2
 26655                           global __ptext4220
 26656  217E                     __ptext4220:
 26657                           
 26658 ;; *************** function _setRF_ReceiveGO *****************
 26659 ;; Defined at:
 26660 ;;		line 38 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
 26661 ;; Parameters:    Size  Location     Type
 26662 ;;  rf              1    wreg     unsigned char 
 26663 ;;  command         1    2[COMMON] unsigned char 
 26664 ;; Auto vars:     Size  Location     Type
 26665 ;;  rf              1    3[COMMON] unsigned char 
 26666 ;; Return value:  Size  Location     Type
 26667 ;;		None               void
 26668 ;; Registers used:
 26669 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 26670 ;; Tracked objects:
 26671 ;;		On entry : 0/0
 26672 ;;		On exit  : 0/0
 26673 ;;		Unchanged: 0/0
 26674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 26675 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 26676 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 26677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 26678 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 26679 ;;Total ram usage:        2 bytes
 26680 ;; Hardware stack levels used:    1
 26681 ;; Hardware stack levels required when called:    1
 26682 ;; This function calls:
 26683 ;;		i1_RfPointSelect
 26684 ;; This function is called by:
 26685 ;;		_INT_ISR
 26686 ;; This function uses a non-reentrant model
 26687 ;;
 26688                           psect	text4220
 26689                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
 26690                           	line	38
 26691                           	global	__size_of_setRF_ReceiveGO
 26692  000D                     	__size_of_setRF_ReceiveGO	equ	__end_of_setRF_ReceiveGO-_setRF_ReceiveGO
 26693                           	
 26694  217E                     _setRF_ReceiveGO:	
 26695                           	opt	stack 2
 26696                           ; Regs used in _setRF_ReceiveGO: [wreg+fsr1l-status,0+pclath+cstack]
 26697                           ;setRF_ReceiveGO@rf stored from wreg
 26698  217E  00F4               	movwf	(setRF_ReceiveGO@rf)
 26699                           	line	39
 26700                           	
 26701  217F                     i1l22510:	
 26702                           ;RF_Control_B1.c: 39: RfPointSelect(rf);
 26703  217F  0874               	movf	(setRF_ReceiveGO@rf),w
 26704  2180  31A1  2171  31A1   	fcall	i1_RfPointSelect
 26705                           	line	40
 26706                           	
 26707  2183                     i1l22512:	
 26708                           ;RF_Control_B1.c: 40: RF->ReceiveGO=command;
 26709  2183  087B               	movf	(_RF),w
 26710  2184  0086               	movwf	fsr1l
 26711  2185  0187               	clrf fsr1h	
 26712                           	
 26713  2186  0873               	movf	(setRF_ReceiveGO@command),w
 26714  2187  1081               	bcf	indf1,1
 26715  2188  1D03               	skipz
 26716  2189  1481               	bsf	indf1,1
 26717                           	line	41
 26718                           	
 26719  218A                     i1l15201:	
 26720  218A  0008               	return
 26721                           	opt stack 0
 26722                           GLOBAL	__end_of_setRF_ReceiveGO
 26723  218B                     	__end_of_setRF_ReceiveGO:
 26724 ;; =============== function _setRF_ReceiveGO ends ============
 26725                           
 26726                           	signat	_setRF_ReceiveGO,8312
 26727                           	global	_TMR0_ISR
 26728                           psect	text4221,local,class=CODE,delta=2
 26729                           global __ptext4221
 26730  030E                     __ptext4221:
 26731                           
 26732 ;; *************** function _TMR0_ISR *****************
 26733 ;; Defined at:
 26734 ;;		line 83 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_16f1518_B1.c"
 26735 ;; Parameters:    Size  Location     Type
 26736 ;;		None
 26737 ;; Auto vars:     Size  Location     Type
 26738 ;;		None
 26739 ;; Return value:  Size  Location     Type
 26740 ;;		None               void
 26741 ;; Registers used:
 26742 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 26743 ;; Tracked objects:
 26744 ;;		On entry : 0/0
 26745 ;;		On exit  : 0/0
 26746 ;;		Unchanged: 0/0
 26747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 26748 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 26749 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 26750 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 26751 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 26752 ;;Total ram usage:        4 bytes
 26753 ;; Hardware stack levels used:    1
 26754 ;; Hardware stack levels required when called:    1
 26755 ;; This function calls:
 26756 ;;		i1_setLoad_StatusOff
 26757 ;; This function is called by:
 26758 ;;		_ISR
 26759 ;; This function uses a non-reentrant model
 26760 ;;
 26761                           psect	text4221
 26762                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_16f1518_B1.c"
 26763                           	line	83
 26764                           	global	__size_of_TMR0_ISR
 26765  0215                     	__size_of_TMR0_ISR	equ	__end_of_TMR0_ISR-_TMR0_ISR
 26766                           	
 26767  030E                     _TMR0_ISR:	
 26768                           	opt	stack 3
 26769                           ; Regs used in _TMR0_ISR: [wreg-status,0+pclath+cstack]
 26770                           	line	84
 26771                           	
 26772  030E                     i1l22404:	
 26773                           ;MCU_16f1518_B1.c: 84: if(TMR0IE && TMR0IF)
 26774  030E  1E8B               	btfss	(93/8),(93)&7
 26775  030F  2B11               	goto	u544_21
 26776  0310  2B12               	goto	u544_20
 26777  0311                     u544_21:
 26778  0311  2D22               	goto	i1l9354
 26779  0312                     u544_20:
 26780                           	
 26781  0312                     i1l22406:	
 26782  0312  1D0B               	btfss	(90/8),(90)&7
 26783  0313  2B15               	goto	u545_21
 26784  0314  2B16               	goto	u545_20
 26785  0315                     u545_21:
 26786  0315  2D22               	goto	i1l9354
 26787  0316                     u545_20:
 26788                           	line	86
 26789                           	
 26790  0316                     i1l22408:	
 26791                           ;MCU_16f1518_B1.c: 85: {
 26792                           ;MCU_16f1518_B1.c: 86: TMR0=(256-90);
 26793  0316  30A6               	movlw	(0A6h)
 26794  0317  0020               	movlb 0	; select bank0
 26795  0318  0095               	movwf	(21)	;volatile
 26796                           	line	87
 26797                           	
 26798  0319                     i1l22410:	
 26799                           ;MCU_16f1518_B1.c: 87: TMR0IF=0;
 26800  0319  110B               	bcf	(90/8),(90)&7
 26801                           	line	100
 26802                           	
 26803  031A                     i1l22412:	
 26804                           ;MCU_16f1518_B1.c: 100: if(DimmerLights11->GO) { DimmerLights11->Count++; if(DimmerLight
                                 s11->Count >= (DimmerLights11->DimmingValue-Dimmer->Correction)) { DimmerLights11->Count
                                 =0; DimmerLights11->GO=0; DimmerLights11->Flag=1; if(DimmerLights11->StatusFlag) { RA7=1
                                 ; RB4=1; }
 26805  031A  0879               	movf	(_DimmerLights11),w
 26806  031B  0086               	movwf	fsr1l
 26807  031C  3001               	movlw 1	; select bank2/3
 26808  031D  0087               	movwf fsr1h	
 26809                           	
 26810  031E  1C01               	btfss	indf1,0
 26811  031F  2B21               	goto	u546_21
 26812  0320  2B22               	goto	u546_20
 26813  0321                     u546_21:
 26814  0321  2B73               	goto	i1l22420
 26815  0322                     u546_20:
 26816                           	
 26817  0322                     i1l22414:	
 26818  0322  3001               	movlw	(01h)
 26819  0323  00F3               	movwf	(??_TMR0_ISR+0)+0
 26820  0324  0879               	movf	(_DimmerLights11),w
 26821  0325  3E03               	addlw	03h
 26822  0326  0086               	movwf	fsr1l
 26823  0327  3001               	movlw 1	; select bank2/3
 26824  0328  0087               	movwf fsr1h	
 26825                           	
 26826  0329  0873               	movf	(??_TMR0_ISR+0)+0,w
 26827  032A  0781               	addwf	indf1,f
 26828  032B  0021               	movlb 1	; select bank1
 26829  032C  0839               	movf	(_Dimmer)^080h,w
 26830  032D  3E02               	addlw	02h
 26831  032E  0086               	movwf	fsr1l
 26832  032F  0187               	clrf fsr1h	
 26833                           	
 26834  0330  0801               	movf	indf1,w
 26835  0331  00F3               	movwf	(??_TMR0_ISR+0)+0
 26836  0332  01F4               	clrf	(??_TMR0_ISR+0)+0+1
 26837  0333  09F3               	comf	(??_TMR0_ISR+0)+0,f
 26838  0334  09F4               	comf	(??_TMR0_ISR+0)+1,f
 26839  0335  0AF3               	incf	(??_TMR0_ISR+0)+0,f
 26840  0336  1903               	skipnz
 26841  0337  0AF4               	incf	(??_TMR0_ISR+0)+1,f
 26842  0338  0879               	movf	(_DimmerLights11),w
 26843  0339  3E04               	addlw	04h
 26844  033A  0086               	movwf	fsr1l
 26845  033B  3001               	movlw 1	; select bank2/3
 26846  033C  0087               	movwf fsr1h	
 26847                           	
 26848  033D  0801               	movf	indf1,w
 26849  033E  0773               	addwf	0+(??_TMR0_ISR+0)+0,w
 26850  033F  00F5               	movwf	(??_TMR0_ISR+2)+0
 26851  0340  0874               	movf	1+(??_TMR0_ISR+0)+0,w
 26852  0341  1803               	skipnc
 26853  0342  0A74               	incf	1+(??_TMR0_ISR+0)+0,w
 26854  0343  00F6               	movwf	((??_TMR0_ISR+2)+0)+1
 26855  0344  0879               	movf	(_DimmerLights11),w
 26856  0345  3E03               	addlw	03h
 26857  0346  0086               	movwf	fsr1l
 26858  0347  3001               	movlw 1	; select bank2/3
 26859  0348  0087               	movwf fsr1h	
 26860                           	
 26861  0349  0876               	movf	1+(??_TMR0_ISR+2)+0,w
 26862  034A  3A80               	xorlw	80h
 26863  034B  3C80               	sublw	080h
 26864  034C  1D03               	skipz
 26865  034D  2B50               	goto	u547_25
 26866  034E  0875               	movf	0+(??_TMR0_ISR+2)+0,w
 26867  034F  0201               	subwf	indf1,w
 26868  0350                     u547_25:
 26869                           
 26870  0350  1C03               	skipc
 26871  0351  2B53               	goto	u547_21
 26872  0352  2B54               	goto	u547_20
 26873  0353                     u547_21:
 26874  0353  2CE9               	goto	i1l22488
 26875  0354                     u547_20:
 26876                           	
 26877  0354                     i1l22416:	
 26878  0354  0879               	movf	(_DimmerLights11),w
 26879  0355  3E03               	addlw	03h
 26880  0356  0086               	movwf	fsr1l
 26881  0357  3001               	movlw 1	; select bank2/3
 26882  0358  0087               	movwf fsr1h	
 26883                           	
 26884  0359  0181               	clrf	indf1
 26885  035A  0879               	movf	(_DimmerLights11),w
 26886  035B  0086               	movwf	fsr1l
 26887  035C  3001               	movlw 1	; select bank2/3
 26888  035D  0087               	movwf fsr1h	
 26889                           	
 26890  035E  1001               	bcf	indf1,0
 26891  035F  0879               	movf	(_DimmerLights11),w
 26892  0360  3E07               	addlw	07h
 26893  0361  0086               	movwf	fsr1l
 26894  0362  3001               	movlw 1	; select bank2/3
 26895  0363  0087               	movwf fsr1h	
 26896                           	
 26897  0364  1401               	bsf	indf1,0
 26898  0365  0879               	movf	(_DimmerLights11),w
 26899  0366  0086               	movwf	fsr1l
 26900  0367  3001               	movlw 1	; select bank2/3
 26901  0368  0087               	movwf fsr1h	
 26902                           	
 26903  0369  1F01               	btfss	indf1,6
 26904  036A  2B6C               	goto	u548_21
 26905  036B  2B6D               	goto	u548_20
 26906  036C                     u548_21:
 26907  036C  2CE9               	goto	i1l22488
 26908  036D                     u548_20:
 26909                           	
 26910  036D                     i1l22418:	
 26911  036D  0020               	movlb 0	; select bank0
 26912  036E  178C               	bsf	(103/8),(103)&7
 26913  036F  160D               	bsf	(108/8),(108)&7
 26914  0370  2CE9               	goto	i1l22488
 26915                           	
 26916  0371                     i1l9327:	
 26917  0371  2CE9               	goto	i1l22488
 26918                           	
 26919  0372                     i1l9326:	
 26920  0372  2CE9               	goto	i1l22488
 26921                           	
 26922  0373                     i1l9325:	
 26923                           	
 26924  0373                     i1l22420:	
 26925  0373  0879               	movf	(_DimmerLights11),w
 26926  0374  3E07               	addlw	07h
 26927  0375  0086               	movwf	fsr1l
 26928  0376  3001               	movlw 1	; select bank2/3
 26929  0377  0087               	movwf fsr1h	
 26930                           	
 26931  0378  1C01               	btfss	indf1,0
 26932  0379  2B7B               	goto	u549_21
 26933  037A  2B7C               	goto	u549_20
 26934  037B                     u549_21:
 26935  037B  2CAC               	goto	i1l22478
 26936  037C                     u549_20:
 26937                           	
 26938  037C                     i1l22422:	
 26939  037C  0879               	movf	(_DimmerLights11),w
 26940  037D  3E07               	addlw	07h
 26941  037E  0086               	movwf	fsr1l
 26942  037F  3001               	movlw 1	; select bank2/3
 26943  0380  0087               	movwf fsr1h	
 26944                           	
 26945  0381  1001               	bcf	indf1,0
 26946  0382  0879               	movf	(_DimmerLights11),w
 26947  0383  0086               	movwf	fsr1l
 26948  0384  3001               	movlw 1	; select bank2/3
 26949  0385  0087               	movwf fsr1h	
 26950                           	
 26951  0386  1C81               	btfss	indf1,1
 26952  0387  2B89               	goto	u550_21
 26953  0388  2B8A               	goto	u550_20
 26954  0389                     u550_21:
 26955  0389  2CAC               	goto	i1l22478
 26956  038A                     u550_20:
 26957                           	
 26958  038A                     i1l22424:	
 26959  038A  3001               	movlw	(01h)
 26960  038B  00F3               	movwf	(??_TMR0_ISR+0)+0
 26961  038C  0879               	movf	(_DimmerLights11),w
 26962  038D  3E01               	addlw	01h
 26963  038E  0086               	movwf	fsr1l
 26964  038F  3001               	movlw 1	; select bank2/3
 26965  0390  0087               	movwf fsr1h	
 26966                           	
 26967  0391  0873               	movf	(??_TMR0_ISR+0)+0,w
 26968  0392  0781               	addwf	indf1,f
 26969                           	
 26970  0393                     i1l22426:	
 26971  0393  0879               	movf	(_DimmerLights11),w
 26972  0394  3E01               	addlw	01h
 26973  0395  0086               	movwf	fsr1l
 26974  0396  3001               	movlw 1	; select bank2/3
 26975  0397  0087               	movwf fsr1h	
 26976                           	
 26977  0398  0879               	movf	(_DimmerLights11),w
 26978  0399  3E02               	addlw	02h
 26979  039A  0084               	movwf	fsr0l
 26980  039B  3001               	movlw 1	; select bank2/3
 26981  039C  0085               	movwf fsr0h	
 26982                           	
 26983  039D  0800               	movf	indf0,w
 26984  039E  0201               	subwf	indf1,w
 26985  039F  1C03               	skipc
 26986  03A0  2BA2               	goto	u551_21
 26987  03A1  2BA3               	goto	u551_20
 26988  03A2                     u551_21:
 26989  03A2  2CAC               	goto	i1l22478
 26990  03A3                     u551_20:
 26991                           	
 26992  03A3                     i1l22428:	
 26993  03A3  0879               	movf	(_DimmerLights11),w
 26994  03A4  3E01               	addlw	01h
 26995  03A5  0086               	movwf	fsr1l
 26996  03A6  3001               	movlw 1	; select bank2/3
 26997  03A7  0087               	movwf fsr1h	
 26998                           	
 26999  03A8  0181               	clrf	indf1
 27000  03A9  0879               	movf	(_DimmerLights11),w
 27001  03AA  0086               	movwf	fsr1l
 27002  03AB  3001               	movlw 1	; select bank2/3
 27003  03AC  0087               	movwf fsr1h	
 27004                           	
 27005  03AD  1D81               	btfss	indf1,3
 27006  03AE  2BB0               	goto	u552_21
 27007  03AF  2BB1               	goto	u552_20
 27008  03B0                     u552_21:
 27009  03B0  2BF0               	goto	i1l22444
 27010  03B1                     u552_20:
 27011                           	
 27012  03B1                     i1l22430:	
 27013  03B1  0879               	movf	(_DimmerLights11),w
 27014  03B2  0086               	movwf	fsr1l
 27015  03B3  3001               	movlw 1	; select bank2/3
 27016  03B4  0087               	movwf fsr1h	
 27017                           	
 27018  03B5  1A01               	btfsc	indf1,4
 27019  03B6  2BB8               	goto	u553_21
 27020  03B7  2BB9               	goto	u553_20
 27021  03B8                     u553_21:
 27022  03B8  2BD3               	goto	i1l22438
 27023  03B9                     u553_20:
 27024                           	
 27025  03B9                     i1l22432:	
 27026  03B9  0879               	movf	(_DimmerLights11),w
 27027  03BA  3E04               	addlw	04h
 27028  03BB  0086               	movwf	fsr1l
 27029  03BC  3001               	movlw 1	; select bank2/3
 27030  03BD  0087               	movwf fsr1h	
 27031                           	
 27032  03BE  3044               	movlw	(044h)
 27033  03BF  0201               	subwf	indf1,w
 27034  03C0  1C03               	skipc
 27035  03C1  2BC3               	goto	u554_21
 27036  03C2  2BC4               	goto	u554_20
 27037  03C3                     u554_21:
 27038  03C3  2BCC               	goto	i1l22436
 27039  03C4                     u554_20:
 27040                           	
 27041  03C4                     i1l22434:	
 27042  03C4  0879               	movf	(_DimmerLights11),w
 27043  03C5  3E04               	addlw	04h
 27044  03C6  0086               	movwf	fsr1l
 27045  03C7  3001               	movlw 1	; select bank2/3
 27046  03C8  0087               	movwf fsr1h	
 27047                           	
 27048  03C9  3001               	movlw	low(01h)
 27049  03CA  0281               	subwf	indf1,f
 27050  03CB  2CAC               	goto	i1l22478
 27051                           	
 27052  03CC                     i1l9334:	
 27053                           	
 27054  03CC                     i1l22436:	
 27055  03CC  0879               	movf	(_DimmerLights11),w
 27056  03CD  0086               	movwf	fsr1l
 27057  03CE  3001               	movlw 1	; select bank2/3
 27058  03CF  0087               	movwf fsr1h	
 27059                           	
 27060  03D0  1601               	bsf	indf1,4
 27061  03D1  2CAC               	goto	i1l22478
 27062                           	
 27063  03D2                     i1l9335:	
 27064  03D2  2CAC               	goto	i1l22478
 27065                           	
 27066  03D3                     i1l9333:	
 27067                           	
 27068  03D3                     i1l22438:	
 27069  03D3  0879               	movf	(_DimmerLights11),w
 27070  03D4  3E04               	addlw	04h
 27071  03D5  0086               	movwf	fsr1l
 27072  03D6  3001               	movlw 1	; select bank2/3
 27073  03D7  0087               	movwf fsr1h	
 27074                           	
 27075  03D8  3078               	movlw	(078h)
 27076  03D9  0201               	subwf	indf1,w
 27077  03DA  1803               	skipnc
 27078  03DB  2BDD               	goto	u555_21
 27079  03DC  2BDE               	goto	u555_20
 27080  03DD                     u555_21:
 27081  03DD  2BE8               	goto	i1l22442
 27082  03DE                     u555_20:
 27083                           	
 27084  03DE                     i1l22440:	
 27085  03DE  3001               	movlw	(01h)
 27086  03DF  00F3               	movwf	(??_TMR0_ISR+0)+0
 27087  03E0  0879               	movf	(_DimmerLights11),w
 27088  03E1  3E04               	addlw	04h
 27089  03E2  0086               	movwf	fsr1l
 27090  03E3  3001               	movlw 1	; select bank2/3
 27091  03E4  0087               	movwf fsr1h	
 27092                           	
 27093  03E5  0873               	movf	(??_TMR0_ISR+0)+0,w
 27094  03E6  0781               	addwf	indf1,f
 27095  03E7  2CAC               	goto	i1l22478
 27096                           	
 27097  03E8                     i1l9337:	
 27098                           	
 27099  03E8                     i1l22442:	
 27100  03E8  0879               	movf	(_DimmerLights11),w
 27101  03E9  0086               	movwf	fsr1l
 27102  03EA  3001               	movlw 1	; select bank2/3
 27103  03EB  0087               	movwf fsr1h	
 27104                           	
 27105  03EC  1201               	bcf	indf1,4
 27106  03ED  2CAC               	goto	i1l22478
 27107                           	
 27108  03EE                     i1l9338:	
 27109  03EE  2CAC               	goto	i1l22478
 27110                           	
 27111  03EF                     i1l9336:	
 27112  03EF  2CAC               	goto	i1l22478
 27113                           	
 27114  03F0                     i1l9332:	
 27115                           	
 27116  03F0                     i1l22444:	
 27117  03F0  0879               	movf	(_DimmerLights11),w
 27118  03F1  0086               	movwf	fsr1l
 27119  03F2  3001               	movlw 1	; select bank2/3
 27120  03F3  0087               	movwf fsr1h	
 27121                           	
 27122  03F4  1D01               	btfss	indf1,2
 27123  03F5  2BF7               	goto	u556_21
 27124  03F6  2BF8               	goto	u556_20
 27125  03F7                     u556_21:
 27126  03F7  2C47               	goto	i1l22458
 27127  03F8                     u556_20:
 27128                           	
 27129  03F8                     i1l22446:	
 27130  03F8  0879               	movf	(_DimmerLights11),w
 27131  03F9  3E05               	addlw	05h
 27132  03FA  0086               	movwf	fsr1l
 27133  03FB  3001               	movlw 1	; select bank2/3
 27134  03FC  0087               	movwf fsr1h	
 27135                           	
 27136  03FD  0879               	movf	(_DimmerLights11),w
 27137  03FE  3E04               	addlw	04h
 27138  03FF  0084               	movwf	fsr0l
 27139  0400  3001               	movlw 1	; select bank2/3
 27140  0401  0085               	movwf fsr0h	
 27141                           	
 27142  0402  0800               	movf	indf0,w
 27143  0403  0201               	subwf	indf1,w
 27144  0404  1803               	skipnc
 27145  0405  2C07               	goto	u557_21
 27146  0406  2C08               	goto	u557_20
 27147  0407                     u557_21:
 27148  0407  2C10               	goto	i1l22450
 27149  0408                     u557_20:
 27150                           	
 27151  0408                     i1l22448:	
 27152  0408  0879               	movf	(_DimmerLights11),w
 27153  0409  3E04               	addlw	04h
 27154  040A  0086               	movwf	fsr1l
 27155  040B  3001               	movlw 1	; select bank2/3
 27156  040C  0087               	movwf fsr1h	
 27157                           	
 27158  040D  3001               	movlw	low(01h)
 27159  040E  0281               	subwf	indf1,f
 27160  040F  2C2B               	goto	i1l22454
 27161                           	
 27162  0410                     i1l9341:	
 27163                           	
 27164  0410                     i1l22450:	
 27165  0410  0879               	movf	(_DimmerLights11),w
 27166  0411  3E04               	addlw	04h
 27167  0412  0086               	movwf	fsr1l
 27168  0413  3001               	movlw 1	; select bank2/3
 27169  0414  0087               	movwf fsr1h	
 27170                           	
 27171  0415  0879               	movf	(_DimmerLights11),w
 27172  0416  3E05               	addlw	05h
 27173  0417  0084               	movwf	fsr0l
 27174  0418  3001               	movlw 1	; select bank2/3
 27175  0419  0085               	movwf fsr0h	
 27176                           	
 27177  041A  0800               	movf	indf0,w
 27178  041B  0201               	subwf	indf1,w
 27179  041C  1803               	skipnc
 27180  041D  2C1F               	goto	u558_21
 27181  041E  2C20               	goto	u558_20
 27182  041F                     u558_21:
 27183  041F  2C2B               	goto	i1l22454
 27184  0420                     u558_20:
 27185                           	
 27186  0420                     i1l22452:	
 27187  0420  3001               	movlw	(01h)
 27188  0421  00F3               	movwf	(??_TMR0_ISR+0)+0
 27189  0422  0879               	movf	(_DimmerLights11),w
 27190  0423  3E04               	addlw	04h
 27191  0424  0086               	movwf	fsr1l
 27192  0425  3001               	movlw 1	; select bank2/3
 27193  0426  0087               	movwf fsr1h	
 27194                           	
 27195  0427  0873               	movf	(??_TMR0_ISR+0)+0,w
 27196  0428  0781               	addwf	indf1,f
 27197  0429  2C2B               	goto	i1l22454
 27198                           	
 27199  042A                     i1l9343:	
 27200  042A  2C2B               	goto	i1l22454
 27201                           	
 27202  042B                     i1l9342:	
 27203                           	
 27204  042B                     i1l22454:	
 27205  042B  0879               	movf	(_DimmerLights11),w
 27206  042C  3E05               	addlw	05h
 27207  042D  0086               	movwf	fsr1l
 27208  042E  3001               	movlw 1	; select bank2/3
 27209  042F  0087               	movwf fsr1h	
 27210                           	
 27211  0430  0879               	movf	(_DimmerLights11),w
 27212  0431  3E04               	addlw	04h
 27213  0432  0084               	movwf	fsr0l
 27214  0433  3001               	movlw 1	; select bank2/3
 27215  0434  0085               	movwf fsr0h	
 27216                           	
 27217  0435  0800               	movf	indf0,w
 27218  0436  0601               	xorwf	indf1,w
 27219  0437  1D03               	skipz
 27220  0438  2C3A               	goto	u559_21
 27221  0439  2C3B               	goto	u559_20
 27222  043A                     u559_21:
 27223  043A  2CAC               	goto	i1l22478
 27224  043B                     u559_20:
 27225                           	
 27226  043B                     i1l22456:	
 27227  043B  0879               	movf	(_DimmerLights11),w
 27228  043C  0086               	movwf	fsr1l
 27229  043D  3001               	movlw 1	; select bank2/3
 27230  043E  0087               	movwf fsr1h	
 27231                           	
 27232  043F  1101               	bcf	indf1,2
 27233  0440  0879               	movf	(_DimmerLights11),w
 27234  0441  0086               	movwf	fsr1l
 27235  0442  3001               	movlw 1	; select bank2/3
 27236  0443  0087               	movwf fsr1h	
 27237                           	
 27238  0444  1081               	bcf	indf1,1
 27239  0445  2CAC               	goto	i1l22478
 27240                           	
 27241  0446                     i1l9344:	
 27242  0446  2CAC               	goto	i1l22478
 27243                           	
 27244  0447                     i1l9340:	
 27245                           	
 27246  0447                     i1l22458:	
 27247  0447  0879               	movf	(_DimmerLights11),w
 27248  0448  0086               	movwf	fsr1l
 27249  0449  3001               	movlw 1	; select bank2/3
 27250  044A  0087               	movwf fsr1h	
 27251                           	
 27252  044B  1E81               	btfss	indf1,5
 27253  044C  2C4E               	goto	u560_21
 27254  044D  2C4F               	goto	u560_20
 27255  044E                     u560_21:
 27256  044E  2C6D               	goto	i1l22466
 27257  044F                     u560_20:
 27258                           	
 27259  044F                     i1l22460:	
 27260  044F  0879               	movf	(_DimmerLights11),w
 27261  0450  3E04               	addlw	04h
 27262  0451  0086               	movwf	fsr1l
 27263  0452  3001               	movlw 1	; select bank2/3
 27264  0453  0087               	movwf fsr1h	
 27265                           	
 27266  0454  3001               	movlw	low(01h)
 27267  0455  0281               	subwf	indf1,f
 27268                           	
 27269  0456                     i1l22462:	
 27270  0456  0879               	movf	(_DimmerLights11),w
 27271  0457  3E05               	addlw	05h
 27272  0458  0086               	movwf	fsr1l
 27273  0459  3001               	movlw 1	; select bank2/3
 27274  045A  0087               	movwf fsr1h	
 27275                           	
 27276  045B  0879               	movf	(_DimmerLights11),w
 27277  045C  3E04               	addlw	04h
 27278  045D  0084               	movwf	fsr0l
 27279  045E  3001               	movlw 1	; select bank2/3
 27280  045F  0085               	movwf fsr0h	
 27281                           	
 27282  0460  0800               	movf	indf0,w
 27283  0461  0201               	subwf	indf1,w
 27284  0462  1C03               	skipc
 27285  0463  2C65               	goto	u561_21
 27286  0464  2C66               	goto	u561_20
 27287  0465                     u561_21:
 27288  0465  2CAC               	goto	i1l22478
 27289  0466                     u561_20:
 27290                           	
 27291  0466                     i1l22464:	
 27292  0466  0879               	movf	(_DimmerLights11),w
 27293  0467  0086               	movwf	fsr1l
 27294  0468  3001               	movlw 1	; select bank2/3
 27295  0469  0087               	movwf fsr1h	
 27296                           	
 27297  046A  1081               	bcf	indf1,1
 27298  046B  2CAC               	goto	i1l22478
 27299                           	
 27300  046C                     i1l9347:	
 27301  046C  2CAC               	goto	i1l22478
 27302                           	
 27303  046D                     i1l9346:	
 27304                           	
 27305  046D                     i1l22466:	
 27306  046D  3001               	movlw	(01h)
 27307  046E  00F3               	movwf	(??_TMR0_ISR+0)+0
 27308  046F  0879               	movf	(_DimmerLights11),w
 27309  0470  3E04               	addlw	04h
 27310  0471  0086               	movwf	fsr1l
 27311  0472  3001               	movlw 1	; select bank2/3
 27312  0473  0087               	movwf fsr1h	
 27313                           	
 27314  0474  0873               	movf	(??_TMR0_ISR+0)+0,w
 27315  0475  0781               	addwf	indf1,f
 27316                           	
 27317  0476                     i1l22468:	
 27318  0476  0879               	movf	(_DimmerLights11),w
 27319  0477  3E04               	addlw	04h
 27320  0478  0086               	movwf	fsr1l
 27321  0479  3001               	movlw 1	; select bank2/3
 27322  047A  0087               	movwf fsr1h	
 27323                           	
 27324  047B  0879               	movf	(_DimmerLights11),w
 27325  047C  3E06               	addlw	06h
 27326  047D  0084               	movwf	fsr0l
 27327  047E  3001               	movlw 1	; select bank2/3
 27328  047F  0085               	movwf fsr0h	
 27329                           	
 27330  0480  0800               	movf	indf0,w
 27331  0481  0201               	subwf	indf1,w
 27332  0482  1C03               	skipc
 27333  0483  2C85               	goto	u562_21
 27334  0484  2C86               	goto	u562_20
 27335  0485                     u562_21:
 27336  0485  2CAC               	goto	i1l22478
 27337  0486                     u562_20:
 27338                           	
 27339  0486                     i1l22470:	
 27340  0486  0879               	movf	(_DimmerLights11),w
 27341  0487  0086               	movwf	fsr1l
 27342  0488  3001               	movlw 1	; select bank2/3
 27343  0489  0087               	movwf fsr1h	
 27344                           	
 27345  048A  1081               	bcf	indf1,1
 27346  048B  0879               	movf	(_DimmerLights11),w
 27347  048C  0086               	movwf	fsr1l
 27348  048D  3001               	movlw 1	; select bank2/3
 27349  048E  0087               	movwf fsr1h	
 27350                           	
 27351  048F  1301               	bcf	indf1,6
 27352  0490  0879               	movf	(_DimmerLights11),w
 27353  0491  3E0C               	addlw	0Ch
 27354  0492  0086               	movwf	fsr1l
 27355  0493  3001               	movlw 1	; select bank2/3
 27356  0494  0087               	movwf fsr1h	
 27357                           	
 27358  0495  1401               	bsf	indf1,0
 27359  0496  0021               	movlb 1	; select bank1
 27360  0497  0839               	movf	(_Dimmer)^080h,w
 27361  0498  0086               	movwf	fsr1l
 27362  0499  0187               	clrf fsr1h	
 27363                           	
 27364  049A  1401               	bsf	indf1,0
 27365                           	
 27366  049B                     i1l22472:	
 27367  049B  0020               	movlb 0	; select bank0
 27368  049C  118C               	bcf	(99/8),(99)&7
 27369                           	
 27370  049D                     i1l22474:	
 27371  049D  138E               	bcf	(119/8),(119)&7
 27372                           	
 27373  049E                     i1l22476:	
 27374  049E  01F1               	clrf	(?i1_setLoad_StatusOff)
 27375  049F  1403               	bsf	status,0
 27376  04A0  0DF1               	rlf	(?i1_setLoad_StatusOff),f
 27377  04A1  3001               	movlw	(01h)
 27378  04A2  31A7  27C6  3183   	fcall	i1_setLoad_StatusOff
 27379  04A5  2CAC               	goto	i1l22478
 27380                           	
 27381  04A6                     i1l9349:	
 27382  04A6  2CAC               	goto	i1l22478
 27383                           	
 27384  04A7                     i1l9348:	
 27385  04A7  2CAC               	goto	i1l22478
 27386                           	
 27387  04A8                     i1l9345:	
 27388  04A8  2CAC               	goto	i1l22478
 27389                           	
 27390  04A9                     i1l9339:	
 27391  04A9  2CAC               	goto	i1l22478
 27392                           	
 27393  04AA                     i1l9331:	
 27394  04AA  2CAC               	goto	i1l22478
 27395                           	
 27396  04AB                     i1l9330:	
 27397  04AB  2CAC               	goto	i1l22478
 27398                           	
 27399  04AC                     i1l9329:	
 27400                           	
 27401  04AC                     i1l22478:	
 27402  04AC  0020               	movlb 0	; select bank0
 27403  04AD  1F8C               	btfss	(103/8),(103)&7
 27404  04AE  2CB0               	goto	u563_21
 27405  04AF  2CB1               	goto	u563_20
 27406  04B0                     u563_21:
 27407  04B0  2CE9               	goto	i1l22488
 27408  04B1                     u563_20:
 27409                           	
 27410  04B1                     i1l22480:	
 27411  04B1  3001               	movlw	(01h)
 27412  04B2  00F3               	movwf	(??_TMR0_ISR+0)+0
 27413  04B3  0879               	movf	(_DimmerLights11),w
 27414  04B4  3E08               	addlw	08h
 27415  04B5  0086               	movwf	fsr1l
 27416  04B6  3001               	movlw 1	; select bank2/3
 27417  04B7  0087               	movwf fsr1h	
 27418                           	
 27419  04B8  0873               	movf	(??_TMR0_ISR+0)+0,w
 27420  04B9  0781               	addwf	indf1,f
 27421  04BA  0879               	movf	(_DimmerLights11),w
 27422  04BB  3E04               	addlw	04h
 27423  04BC  0086               	movwf	fsr1l
 27424  04BD  3001               	movlw 1	; select bank2/3
 27425  04BE  0087               	movwf fsr1h	
 27426                           	
 27427  04BF  0801               	movf	indf1,w
 27428  04C0  00F3               	movwf	(??_TMR0_ISR+0)+0
 27429  04C1  01F4               	clrf	(??_TMR0_ISR+0)+0+1
 27430  04C2  09F3               	comf	(??_TMR0_ISR+0)+0,f
 27431  04C3  09F4               	comf	(??_TMR0_ISR+0)+1,f
 27432  04C4  0AF3               	incf	(??_TMR0_ISR+0)+0,f
 27433  04C5  1903               	skipnz
 27434  04C6  0AF4               	incf	(??_TMR0_ISR+0)+1,f
 27435  04C7  0873               	movf	0+(??_TMR0_ISR+0)+0,w
 27436  04C8  3E78               	addlw	low(078h)
 27437  04C9  00F5               	movwf	(??_TMR0_ISR+2)+0
 27438  04CA  3000               	movlw	high(078h)
 27439  04CB  3D74               	addwfc	1+(??_TMR0_ISR+0)+0,w
 27440  04CC  00F6               	movwf	1+(??_TMR0_ISR+2)+0
 27441  04CD  0879               	movf	(_DimmerLights11),w
 27442  04CE  3E08               	addlw	08h
 27443  04CF  0086               	movwf	fsr1l
 27444  04D0  3001               	movlw 1	; select bank2/3
 27445  04D1  0087               	movwf fsr1h	
 27446                           	
 27447  04D2  0876               	movf	1+(??_TMR0_ISR+2)+0,w
 27448  04D3  3A80               	xorlw	80h
 27449  04D4  3C80               	sublw	080h
 27450  04D5  1D03               	skipz
 27451  04D6  2CD9               	goto	u564_25
 27452  04D7  0875               	movf	0+(??_TMR0_ISR+2)+0,w
 27453  04D8  0201               	subwf	indf1,w
 27454  04D9                     u564_25:
 27455                           
 27456  04D9  1C03               	skipc
 27457  04DA  2CDC               	goto	u564_21
 27458  04DB  2CDD               	goto	u564_20
 27459  04DC                     u564_21:
 27460  04DC  2CE9               	goto	i1l22488
 27461  04DD                     u564_20:
 27462                           	
 27463  04DD                     i1l22482:	
 27464  04DD  0879               	movf	(_DimmerLights11),w
 27465  04DE  3E08               	addlw	08h
 27466  04DF  0086               	movwf	fsr1l
 27467  04E0  3001               	movlw 1	; select bank2/3
 27468  04E1  0087               	movwf fsr1h	
 27469                           	
 27470  04E2  0181               	clrf	indf1
 27471                           	
 27472  04E3                     i1l22484:	
 27473  04E3  0020               	movlb 0	; select bank0
 27474  04E4  138C               	bcf	(103/8),(103)&7
 27475                           	
 27476  04E5                     i1l22486:	
 27477  04E5  120D               	bcf	(108/8),(108)&7
 27478  04E6  2CE9               	goto	i1l22488
 27479                           	
 27480  04E7                     i1l9351:	
 27481  04E7  2CE9               	goto	i1l22488
 27482                           	
 27483  04E8                     i1l9350:	
 27484  04E8  2CE9               	goto	i1l22488
 27485                           	
 27486  04E9                     i1l9328:	
 27487                           	line	113
 27488                           	
 27489  04E9                     i1l22488:	
 27490                           ;MCU_16f1518_B1.c: 113: Timer0->Count++;
 27491  04E9  0021               	movlb 1	; select bank1
 27492  04EA  086B               	movf	(_Timer0)^080h,w
 27493  04EB  3E01               	addlw	01h
 27494  04EC  0086               	movwf	fsr1l
 27495  04ED  0187               	clrf fsr1h	
 27496                           	
 27497  04EE  3001               	movlw	01h
 27498  04EF  0781               	addwf	indf1,f
 27499  04F0  3141               	addfsr	fsr1,1
 27500  04F1  1803               	skipnc
 27501  04F2  0A81               	incf	indf1,f
 27502                           	line	114
 27503                           	
 27504  04F3                     i1l22490:	
 27505                           ;MCU_16f1518_B1.c: 114: if(Timer0->Count == 200)
 27506  04F3  086B               	movf	(_Timer0)^080h,w
 27507  04F4  3E01               	addlw	01h
 27508  04F5  0086               	movwf	fsr1l
 27509  04F6  0187               	clrf fsr1h	
 27510                           	
 27511  04F7  3F40               	moviw	[0]fsr1
 27512  04F8  3AC8               	xorlw	low(0C8h)
 27513  04F9  1D03               	skipz
 27514  04FA  2CFD               	goto	u565_25
 27515  04FB  3F41               	moviw	[1]fsr1
 27516  04FC  3A00               	xorlw	high(0C8h)
 27517  04FD                     u565_25:
 27518  04FD  1D03               	skipz
 27519  04FE  2D00               	goto	u565_21
 27520  04FF  2D01               	goto	u565_20
 27521  0500                     u565_21:
 27522  0500  2D0E               	goto	i1l9352
 27523  0501                     u565_20:
 27524                           	line	116
 27525                           	
 27526  0501                     i1l22492:	
 27527                           ;MCU_16f1518_B1.c: 115: {
 27528                           ;MCU_16f1518_B1.c: 116: Timer0->Count=0;
 27529  0501  086B               	movf	(_Timer0)^080h,w
 27530  0502  3E01               	addlw	01h
 27531  0503  0086               	movwf	fsr1l
 27532  0504  0187               	clrf fsr1h	
 27533                           	
 27534  0505  3000               	movlw	low(0)
 27535  0506  3FC0               	movwi	[0]fsr1
 27536  0507  3000               	movlw	high(0)
 27537  0508  3FC1               	movwi	[1]fsr1
 27538                           	line	117
 27539                           ;MCU_16f1518_B1.c: 117: TMain->T0_Timerout=1;
 27540  0509  087D               	movf	(_TMain),w
 27541  050A  0086               	movwf	fsr1l
 27542  050B  3001               	movlw 1	; select bank2/3
 27543  050C  0087               	movwf fsr1h	
 27544                           	
 27545  050D  1481               	bsf	indf1,1
 27546                           	line	118
 27547                           	
 27548  050E                     i1l9352:	
 27549                           	line	121
 27550                           ;MCU_16f1518_B1.c: 118: }
 27551                           ;MCU_16f1518_B1.c: 121: if(Buz->GO)
 27552  050E  0878               	movf	(_Buz),w
 27553  050F  0086               	movwf	fsr1l
 27554  0510  3001               	movlw 1	; select bank2/3
 27555  0511  0087               	movwf fsr1h	
 27556                           	
 27557  0512  1C81               	btfss	indf1,1
 27558  0513  2D15               	goto	u566_21
 27559  0514  2D16               	goto	u566_20
 27560  0515                     u566_21:
 27561  0515  2D22               	goto	i1l9354
 27562  0516                     u566_20:
 27563                           	line	123
 27564                           	
 27565  0516                     i1l22494:	
 27566                           ;MCU_16f1518_B1.c: 122: {
 27567                           ;MCU_16f1518_B1.c: 123: Buz->Time++;
 27568  0516  0878               	movf	(_Buz),w
 27569  0517  3E01               	addlw	01h
 27570  0518  0086               	movwf	fsr1l
 27571  0519  3001               	movlw 1	; select bank2/3
 27572  051A  0087               	movwf fsr1h	
 27573                           	
 27574  051B  3001               	movlw	01h
 27575  051C  0781               	addwf	indf1,f
 27576  051D  3141               	addfsr	fsr1,1
 27577  051E  1803               	skipnc
 27578  051F  0A81               	incf	indf1,f
 27579  0520  2D22               	goto	i1l9354
 27580                           	line	124
 27581                           	
 27582  0521                     i1l9353:	
 27583  0521  2D22               	goto	i1l9354
 27584                           	line	126
 27585                           	
 27586  0522                     i1l9324:	
 27587                           	line	127
 27588                           	
 27589  0522                     i1l9354:	
 27590  0522  0008               	return
 27591                           	opt stack 0
 27592                           GLOBAL	__end_of_TMR0_ISR
 27593  0523                     	__end_of_TMR0_ISR:
 27594 ;; =============== function _TMR0_ISR ends ============
 27595                           
 27596                           	signat	_TMR0_ISR,88
 27597                           	global	_IOC_ISR
 27598                           psect	text4222,local,class=CODE,delta=2
 27599                           global __ptext4222
 27600  2660                     __ptext4222:
 27601                           
 27602 ;; *************** function _IOC_ISR *****************
 27603 ;; Defined at:
 27604 ;;		line 268 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_16f1518_B1.c"
 27605 ;; Parameters:    Size  Location     Type
 27606 ;;		None
 27607 ;; Auto vars:     Size  Location     Type
 27608 ;;		None
 27609 ;; Return value:  Size  Location     Type
 27610 ;;		None               void
 27611 ;; Registers used:
 27612 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 27613 ;; Tracked objects:
 27614 ;;		On entry : 0/0
 27615 ;;		On exit  : 0/0
 27616 ;;		Unchanged: 0/0
 27617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 27618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 27619 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 27620 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 27621 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 27622 ;;Total ram usage:        1 bytes
 27623 ;; Hardware stack levels used:    1
 27624 ;; Hardware stack levels required when called:    1
 27625 ;; This function calls:
 27626 ;;		_setDimmerReClock
 27627 ;; This function is called by:
 27628 ;;		_ISR
 27629 ;; This function uses a non-reentrant model
 27630 ;;
 27631                           psect	text4222
 27632                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_16f1518_B1.c"
 27633                           	line	268
 27634                           	global	__size_of_IOC_ISR
 27635  002F                     	__size_of_IOC_ISR	equ	__end_of_IOC_ISR-_IOC_ISR
 27636                           	
 27637  2660                     _IOC_ISR:	
 27638                           	opt	stack 3
 27639                           ; Regs used in _IOC_ISR: [wreg+fsr1l-status,0+pclath+cstack]
 27640                           	line	269
 27641                           	
 27642  2660                     i1l22388:	
 27643                           ;MCU_16f1518_B1.c: 269: if(IOCIE && IOCBF2)
 27644  2660  1D8B               	btfss	(91/8),(91)&7
 27645  2661  2E63               	goto	u540_21
 27646  2662  2E64               	goto	u540_20
 27647  2663                     u540_21:
 27648  2663  2E8E               	goto	i1l9378
 27649  2664                     u540_20:
 27650                           	
 27651  2664                     i1l22390:	
 27652  2664  0027               	movlb 7	; select bank7
 27653  2665  1D16               	btfss	(7346/8)^0380h,(7346)&7
 27654  2666  2E68               	goto	u541_21
 27655  2667  2E69               	goto	u541_20
 27656  2668                     u541_21:
 27657  2668  2E8E               	goto	i1l9378
 27658  2669                     u541_20:
 27659                           	line	271
 27660                           	
 27661  2669                     i1l22392:	
 27662                           ;MCU_16f1518_B1.c: 270: {
 27663                           ;MCU_16f1518_B1.c: 271: IOCBF2=0;
 27664  2669  1116               	bcf	(7346/8)^0380h,(7346)&7
 27665                           	line	272
 27666                           ;MCU_16f1518_B1.c: 272: IOCIF=0;
 27667  266A  100B               	bcf	(88/8),(88)&7
 27668                           	line	273
 27669                           	
 27670  266B                     i1l22394:	
 27671                           ;MCU_16f1518_B1.c: 273: if(TMain->PowerON)
 27672  266B  087D               	movf	(_TMain),w
 27673  266C  0086               	movwf	fsr1l
 27674  266D  3001               	movlw 1	; select bank2/3
 27675  266E  0087               	movwf fsr1h	
 27676                           	
 27677  266F  1C01               	btfss	indf1,0
 27678  2670  2E72               	goto	u542_21
 27679  2671  2E73               	goto	u542_20
 27680  2672                     u542_21:
 27681  2672  2E8E               	goto	i1l9378
 27682  2673                     u542_20:
 27683                           	line	278
 27684                           	
 27685  2673                     i1l22396:	
 27686                           ;MCU_16f1518_B1.c: 274: {
 27687                           ;MCU_16f1518_B1.c: 278: setDimmerReClock();
 27688  2673  31A3  230C  31A6   	fcall	_setDimmerReClock
 27689                           	line	279
 27690                           	
 27691  2676                     i1l22398:	
 27692                           ;MCU_16f1518_B1.c: 279: if(RB2)
 27693  2676  0020               	movlb 0	; select bank0
 27694  2677  1D0D               	btfss	(106/8),(106)&7
 27695  2678  2E7A               	goto	u543_21
 27696  2679  2E7B               	goto	u543_20
 27697  267A                     u543_21:
 27698  267A  2E82               	goto	i1l22402
 27699  267B                     u543_20:
 27700                           	line	281
 27701                           	
 27702  267B                     i1l22400:	
 27703                           ;MCU_16f1518_B1.c: 280: {
 27704                           ;MCU_16f1518_B1.c: 281: Dimmer->Correction=0;
 27705  267B  0021               	movlb 1	; select bank1
 27706  267C  0839               	movf	(_Dimmer)^080h,w
 27707  267D  3E02               	addlw	02h
 27708  267E  0086               	movwf	fsr1l
 27709  267F  0187               	clrf fsr1h	
 27710                           	
 27711  2680  0181               	clrf	indf1
 27712                           	line	282
 27713                           ;MCU_16f1518_B1.c: 282: }
 27714  2681  2E8E               	goto	i1l9378
 27715                           	line	283
 27716                           	
 27717  2682                     i1l9376:	
 27718                           	line	285
 27719                           	
 27720  2682                     i1l22402:	
 27721                           ;MCU_16f1518_B1.c: 283: else
 27722                           ;MCU_16f1518_B1.c: 284: {
 27723                           ;MCU_16f1518_B1.c: 285: Dimmer->Correction=8;
 27724  2682  3008               	movlw	(08h)
 27725  2683  00F1               	movwf	(??_IOC_ISR+0)+0
 27726  2684  0021               	movlb 1	; select bank1
 27727  2685  0839               	movf	(_Dimmer)^080h,w
 27728  2686  3E02               	addlw	02h
 27729  2687  0086               	movwf	fsr1l
 27730  2688  0187               	clrf fsr1h	
 27731                           	
 27732  2689  0871               	movf	(??_IOC_ISR+0)+0,w
 27733  268A  0081               	movwf	indf1
 27734  268B  2E8E               	goto	i1l9378
 27735                           	line	286
 27736                           	
 27737  268C                     i1l9377:	
 27738  268C  2E8E               	goto	i1l9378
 27739                           	line	293
 27740                           	
 27741  268D                     i1l9375:	
 27742  268D  2E8E               	goto	i1l9378
 27743                           	line	294
 27744                           	
 27745  268E                     i1l9374:	
 27746                           	line	295
 27747                           	
 27748  268E                     i1l9378:	
 27749  268E  0008               	return
 27750                           	opt stack 0
 27751                           GLOBAL	__end_of_IOC_ISR
 27752  268F                     	__end_of_IOC_ISR:
 27753 ;; =============== function _IOC_ISR ends ============
 27754                           
 27755                           	signat	_IOC_ISR,88
 27756                           	global	i1_RfPointSelect
 27757                           psect	text4223,local,class=CODE,delta=2
 27758                           global __ptext4223
 27759  2171                     __ptext4223:
 27760                           
 27761 ;; *************** function i1_RfPointSelect *****************
 27762 ;; Defined at:
 27763 ;;		line 8 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
 27764 ;; Parameters:    Size  Location     Type
 27765 ;;  RfPointSelec    1    wreg     unsigned char 
 27766 ;; Auto vars:     Size  Location     Type
 27767 ;;  RfPointSelec    1    1[COMMON] unsigned char 
 27768 ;; Return value:  Size  Location     Type
 27769 ;;		None               void
 27770 ;; Registers used:
 27771 ;;		wreg
 27772 ;; Tracked objects:
 27773 ;;		On entry : 0/0
 27774 ;;		On exit  : 0/0
 27775 ;;		Unchanged: 0/0
 27776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 27777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 27778 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 27779 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 27780 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 27781 ;;Total ram usage:        2 bytes
 27782 ;; Hardware stack levels used:    1
 27783 ;; This function calls:
 27784 ;;		Nothing
 27785 ;; This function is called by:
 27786 ;;		_setRF_ReceiveGO
 27787 ;; This function uses a non-reentrant model
 27788 ;;
 27789                           psect	text4223
 27790                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\RF_Control_B1.c"
 27791                           	line	8
 27792                           	global	__size_ofi1_RfPointSelect
 27793  000D                     	__size_ofi1_RfPointSelect	equ	__end_ofi1_RfPointSelect-i1_RfPointSelect
 27794                           	
 27795  2171                     i1_RfPointSelect:	
 27796                           	opt	stack 2
 27797                           ; Regs used in i1_RfPointSelect: [wreg]
 27798                           ;i1RfPointSelect@rf stored from wreg
 27799                           	line	10
 27800  2171  00F2               	movwf	(i1RfPointSelect@rf)
 27801                           	
 27802  2172                     i1l22810:	
 27803                           ;RF_Control_B1.c: 10: if(rf == 1)
 27804  2172  0872               	movf	(i1RfPointSelect@rf),w
 27805  2173  3A01               	xorlw	01h&0ffh
 27806  2174  1D03               	skipz
 27807  2175  2977               	goto	u626_21
 27808  2176  2978               	goto	u626_20
 27809  2177                     u626_21:
 27810  2177  297D               	goto	i1l15189
 27811  2178                     u626_20:
 27812                           	line	12
 27813                           	
 27814  2178                     i1l22812:	
 27815                           ;RF_Control_B1.c: 11: {
 27816                           ;RF_Control_B1.c: 12: RF=&RF1;
 27817  2178  30E7               	movlw	(_RF1)&0ffh
 27818  2179  00F1               	movwf	(??i1_RfPointSelect+0)+0
 27819  217A  0871               	movf	(??i1_RfPointSelect+0)+0,w
 27820  217B  00FB               	movwf	(_RF)
 27821  217C  297D               	goto	i1l15189
 27822                           	line	13
 27823                           	
 27824  217D                     i1l15188:	
 27825                           	line	15
 27826                           	
 27827  217D                     i1l15189:	
 27828  217D  0008               	return
 27829                           	opt stack 0
 27830                           GLOBAL	__end_ofi1_RfPointSelect
 27831  217E                     	__end_ofi1_RfPointSelect:
 27832 ;; =============== function i1_RfPointSelect ends ============
 27833                           
 27834                           	signat	i1_RfPointSelect,88
 27835                           	global	i1_setLoad_StatusOff
 27836                           psect	text4224,local,class=CODE,delta=2
 27837                           global __ptext4224
 27838  27C6                     __ptext4224:
 27839                           
 27840 ;; *************** function i1_setLoad_StatusOff *****************
 27841 ;; Defined at:
 27842 ;;		line 285 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\OverLoad_B1.c"
 27843 ;; Parameters:    Size  Location     Type
 27844 ;;  setLoad_Stat    1    wreg     unsigned char 
 27845 ;;  setLoad_Stat    1    0[COMMON] unsigned char 
 27846 ;; Auto vars:     Size  Location     Type
 27847 ;;  setLoad_Stat    1    1[COMMON] unsigned char 
 27848 ;; Return value:  Size  Location     Type
 27849 ;;		None               void
 27850 ;; Registers used:
 27851 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 27852 ;; Tracked objects:
 27853 ;;		On entry : 0/0
 27854 ;;		On exit  : 0/0
 27855 ;;		Unchanged: 0/0
 27856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 27857 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 27858 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 27859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 27860 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 27861 ;;Total ram usage:        2 bytes
 27862 ;; Hardware stack levels used:    1
 27863 ;; This function calls:
 27864 ;;		Nothing
 27865 ;; This function is called by:
 27866 ;;		_TMR0_ISR
 27867 ;; This function uses a non-reentrant model
 27868 ;;
 27869                           psect	text4224
 27870                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\OverLoad_B1.c"
 27871                           	line	285
 27872                           	global	__size_ofi1_setLoad_StatusOff
 27873  003A                     	__size_ofi1_setLoad_StatusOff	equ	__end_ofi1_setLoad_StatusOff-i1_setLoad_StatusOff
 27874                           	
 27875  27C6                     i1_setLoad_StatusOff:	
 27876                           	opt	stack 3
 27877                           ; Regs used in i1_setLoad_StatusOff: [wreg+fsr1l-status,0]
 27878                           ;i1setLoad_StatusOff@lights stored from wreg
 27879  27C6  00F2               	movwf	(i1setLoad_StatusOff@lights)
 27880                           	line	286
 27881                           	
 27882  27C7                     i1l22794:	
 27883                           ;OverLoad_B1.c: 286: Load->StatusOff=command;
 27884  27C7  0020               	movlb 0	; select bank0
 27885  27C8  086D               	movf	(_Load),w
 27886  27C9  3E46               	addlw	046h
 27887  27CA  0086               	movwf	fsr1l
 27888  27CB  3002               	movlw 2	; select bank4/5
 27889  27CC  0087               	movwf fsr1h	
 27890                           	
 27891  27CD  0871               	movf	(i1setLoad_StatusOff@command),w
 27892  27CE  1081               	bcf	indf1,1
 27893  27CF  1D03               	skipz
 27894  27D0  1481               	bsf	indf1,1
 27895                           	line	287
 27896                           	
 27897  27D1                     i1l22796:	
 27898                           ;OverLoad_B1.c: 287: Load->SafeCount-=2;
 27899  27D1  086D               	movf	(_Load),w
 27900  27D2  3E42               	addlw	042h
 27901  27D3  0086               	movwf	fsr1l
 27902  27D4  3002               	movlw 2	; select bank4/5
 27903  27D5  0087               	movwf fsr1h	
 27904                           	
 27905  27D6  3002               	movlw	low(02h)
 27906  27D7  0281               	subwf	indf1,f
 27907                           	line	288
 27908                           	
 27909  27D8                     i1l22798:	
 27910                           ;OverLoad_B1.c: 288: if(lights == 1)
 27911  27D8  0872               	movf	(i1setLoad_StatusOff@lights),w
 27912  27D9  3A01               	xorlw	01h&0ffh
 27913  27DA  1D03               	skipz
 27914  27DB  2FDD               	goto	u623_21
 27915  27DC  2FDE               	goto	u623_20
 27916  27DD                     u623_21:
 27917  27DD  2FE5               	goto	i1l22802
 27918  27DE                     u623_20:
 27919                           	line	290
 27920                           	
 27921  27DE                     i1l22800:	
 27922                           ;OverLoad_B1.c: 289: {
 27923                           ;OverLoad_B1.c: 290: Load->Lights1Status=0;
 27924  27DE  086D               	movf	(_Load),w
 27925  27DF  3E43               	addlw	043h
 27926  27E0  0086               	movwf	fsr1l
 27927  27E1  3002               	movlw 2	; select bank4/5
 27928  27E2  0087               	movwf fsr1h	
 27929                           	
 27930  27E3  0181               	clrf	indf1
 27931  27E4  2FE5               	goto	i1l22802
 27932                           	line	291
 27933                           	
 27934  27E5                     i1l10602:	
 27935                           	line	292
 27936                           	
 27937  27E5                     i1l22802:	
 27938                           ;OverLoad_B1.c: 291: }
 27939                           ;OverLoad_B1.c: 292: if(lights == 2)
 27940  27E5  0872               	movf	(i1setLoad_StatusOff@lights),w
 27941  27E6  3A02               	xorlw	02h&0ffh
 27942  27E7  1D03               	skipz
 27943  27E8  2FEA               	goto	u624_21
 27944  27E9  2FEB               	goto	u624_20
 27945  27EA                     u624_21:
 27946  27EA  2FF2               	goto	i1l22806
 27947  27EB                     u624_20:
 27948                           	line	294
 27949                           	
 27950  27EB                     i1l22804:	
 27951                           ;OverLoad_B1.c: 293: {
 27952                           ;OverLoad_B1.c: 294: Load->Lights2Status=0;
 27953  27EB  086D               	movf	(_Load),w
 27954  27EC  3E44               	addlw	044h
 27955  27ED  0086               	movwf	fsr1l
 27956  27EE  3002               	movlw 2	; select bank4/5
 27957  27EF  0087               	movwf fsr1h	
 27958                           	
 27959  27F0  0181               	clrf	indf1
 27960  27F1  2FF2               	goto	i1l22806
 27961                           	line	295
 27962                           	
 27963  27F2                     i1l10603:	
 27964                           	line	296
 27965                           	
 27966  27F2                     i1l22806:	
 27967                           ;OverLoad_B1.c: 295: }
 27968                           ;OverLoad_B1.c: 296: if(lights == 3)
 27969  27F2  0872               	movf	(i1setLoad_StatusOff@lights),w
 27970  27F3  3A03               	xorlw	03h&0ffh
 27971  27F4  1D03               	skipz
 27972  27F5  2FF7               	goto	u625_21
 27973  27F6  2FF8               	goto	u625_20
 27974  27F7                     u625_21:
 27975  27F7  2FFF               	goto	i1l10605
 27976  27F8                     u625_20:
 27977                           	line	298
 27978                           	
 27979  27F8                     i1l22808:	
 27980                           ;OverLoad_B1.c: 297: {
 27981                           ;OverLoad_B1.c: 298: Load->Lights3Status=0;
 27982  27F8  086D               	movf	(_Load),w
 27983  27F9  3E45               	addlw	045h
 27984  27FA  0086               	movwf	fsr1l
 27985  27FB  3002               	movlw 2	; select bank4/5
 27986  27FC  0087               	movwf fsr1h	
 27987                           	
 27988  27FD  0181               	clrf	indf1
 27989  27FE  2FFF               	goto	i1l10605
 27990                           	line	299
 27991                           	
 27992  27FF                     i1l10604:	
 27993                           	line	300
 27994                           	
 27995  27FF                     i1l10605:	
 27996  27FF  0008               	return
 27997                           	opt stack 0
 27998                           GLOBAL	__end_ofi1_setLoad_StatusOff
 27999  2800                     	__end_ofi1_setLoad_StatusOff:
 28000 ;; =============== function i1_setLoad_StatusOff ends ============
 28001                           
 28002                           	signat	i1_setLoad_StatusOff,88
 28003                           	global	_setDimmerReClock
 28004                           psect	text4225,local,class=CODE,delta=2
 28005                           global __ptext4225
 28006  230C                     __ptext4225:
 28007                           
 28008 ;; *************** function _setDimmerReClock *****************
 28009 ;; Defined at:
 28010 ;;		line 130 in file "C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_16f1518_B1.c"
 28011 ;; Parameters:    Size  Location     Type
 28012 ;;		None
 28013 ;; Auto vars:     Size  Location     Type
 28014 ;;		None
 28015 ;; Return value:  Size  Location     Type
 28016 ;;		None               void
 28017 ;; Registers used:
 28018 ;;		wreg, fsr1l, fsr1h
 28019 ;; Tracked objects:
 28020 ;;		On entry : 0/0
 28021 ;;		On exit  : 0/0
 28022 ;;		Unchanged: 0/0
 28023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 28024 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 28025 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 28026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 28027 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 28028 ;;Total ram usage:        0 bytes
 28029 ;; Hardware stack levels used:    1
 28030 ;; This function calls:
 28031 ;;		Nothing
 28032 ;; This function is called by:
 28033 ;;		_IOC_ISR
 28034 ;; This function uses a non-reentrant model
 28035 ;;
 28036                           psect	text4225
 28037                           	file	"C:\Users\taianluo\Documents\GitHub\myPicCode\Source_File\MCU_16f1518_B1.c"
 28038                           	line	130
 28039                           	global	__size_of_setDimmerReClock
 28040  0012                     	__size_of_setDimmerReClock	equ	__end_of_setDimmerReClock-_setDimmerReClock
 28041                           	
 28042  230C                     _setDimmerReClock:	
 28043                           	opt	stack 3
 28044                           ; Regs used in _setDimmerReClock: [wregfsr1]
 28045                           	line	131
 28046                           	
 28047  230C                     i1l22504:	
 28048                           ;MCU_16f1518_B1.c: 131: TMR0=255;
 28049  230C  30FF               	movlw	(0FFh)
 28050  230D  0020               	movlb 0	; select bank0
 28051  230E  0095               	movwf	(21)	;volatile
 28052                           	line	136
 28053                           	
 28054  230F                     i1l22506:	
 28055                           ;MCU_16f1518_B1.c: 136: if(!DimmerLights11->GO)
 28056  230F  0879               	movf	(_DimmerLights11),w
 28057  2310  0086               	movwf	fsr1l
 28058  2311  3001               	movlw 1	; select bank2/3
 28059  2312  0087               	movwf fsr1h	
 28060                           	
 28061  2313  1801               	btfsc	indf1,0
 28062  2314  2B16               	goto	u569_21
 28063  2315  2B17               	goto	u569_20
 28064  2316                     u569_21:
 28065  2316  2B1D               	goto	i1l9358
 28066  2317                     u569_20:
 28067                           	line	138
 28068                           	
 28069  2317                     i1l22508:	
 28070                           ;MCU_16f1518_B1.c: 137: {
 28071                           ;MCU_16f1518_B1.c: 138: DimmerLights11->GO=1;
 28072  2317  0879               	movf	(_DimmerLights11),w
 28073  2318  0086               	movwf	fsr1l
 28074  2319  3001               	movlw 1	; select bank2/3
 28075  231A  0087               	movwf fsr1h	
 28076                           	
 28077  231B  1401               	bsf	indf1,0
 28078  231C  2B1D               	goto	i1l9358
 28079                           	line	139
 28080                           	
 28081  231D                     i1l9357:	
 28082                           	line	174
 28083                           	
 28084  231D                     i1l9358:	
 28085  231D  0008               	return
 28086                           	opt stack 0
 28087                           GLOBAL	__end_of_setDimmerReClock
 28088  231E                     	__end_of_setDimmerReClock:
 28089 ;; =============== function _setDimmerReClock ends ============
 28090                           
 28091                           	signat	_setDimmerReClock,88
 28092                           psect	text4226,local,class=CODE,delta=2
 28093                           global __ptext4226
 28094  0000                     __ptext4226:
 28095                           	global	btemp
 28096  007E                     	btemp set 07Eh
 28097                           
 28098                           	DABS	1,126,2	;btemp
 28099                           	global	wtemp0
 28100  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Mon Sep 15 11:55:00 2014

                   __size_of_Switch_Main 0005                    ?_Flash_Memory_Erasing 0071  
           ??_setDimmerLights_TriggerAdj 0023                                       _PF 007A  
                                     _RD 0CA8                                       _RF 007B  
                __end_of_CC2500_WriteREG 2400                                       _WR 0CA9  
                                     _Sw 006E       __end_of_getDimmerLights_StatusFlag 224A  
             _getDimmerLights_StatusFlag 223B                      ___wmul@multiplicand 0022  
                 __end_of_setDelayOff_GO 1F87                             ___ftadd@exp1 0058  
                           ___ftadd@exp2 0057                setDimmerLights_Adj@lights 0027  
              __end_of_setLoad_StatusOff 18DA                     _setDimmerLights_Main 1456  
                           ___ftadd@sign 0056                                      _GIE 005F  
                                    _CRC 00B7                                      _RA0 0060  
                                    _RB0 0068     __size_of_DimmerLights_Initialization 000D  
                                    _RB1 0069                                      _RA3 0063  
                                    _PF1 00C4                                      _RC0 0070  
                                    _RB2 006A                                      _RA4 0064  
                                    _LED 00BB                                      _RC1 0071  
                                    _RB3 006B                                      _RC2 0072  
                                    _RB4 006C                                      _RA6 0066  
                                    _RB5 006D                                      _RA7 0067  
                                    _RC4 0074                                      _RC5 0075  
                                    _RC7 0077                                      _RF1 00E7  
                                    _ISR 0004          setPowerFault_Exceptions@command 002C  
                                    _Sw1 0157                                      _Buz 0078  
              setDimmerLights_Adj@status 0025                 __end_of_CC2500_WriteByte 24AE  
         ??_setDimmerLights_TriggerERROR 0023                    _Buzzer_Initialization 212D  
                        __end_of_ADC_Set 20DE                          ?_DelayTimejudge 0071  
                                    wreg 0009     setDimmerLights_Initialization@lights 0023  
                        _setDimmerLights 1605                    _setDimmerLights_ERROR 1C96  
                  _setDimmerLights_AdjRF 2464                    _setDimmerLights_AdjGo 22D9  
                __size_of_setTemp_Enable 000B                    _setDimmerLights_Clear 22FB  
                                   ?_ISR 0071                          _PowerFault_Main 2092  
                           ___ftdiv@cntr 0046                          __end_of_IOC_ISR 268F  
                             Load_Main@i 0031                             ___ftdiv@sign 004B  
                                   l1110 1345                                     l1111 1348  
                                   l1120 0B4B                                     l1121 0B51  
                                   l1105 1348                                     l1114 0B6B  
                                   l1122 0B5A                                     l1106 1305  
                                   l1115 0B6A                                     l1123 0B69  
                                   l1107 1347                                     l1116 0B5B  
                                   l1124 0B6B                                     l1108 1325  
                                   l1117 0B53                                     l1109 1346  
                                   l1118 0B1D                                     l1119 0B52  
                                   l2300 24D4                                     l2303 209F  
                                   l2312 20A9                                     l2322 2507  
                                   l2330 23EB                                     l2306 20A4  
               ?_DimmerLightsPointSelect 0071                                     l1099 2137  
                                   l2315 2492                                     l2323 2527  
                                   l2331 23F1                                     l2251 1008  
                                   l2316 24AD                                     l2324 2513  
                                   l2332 23FF                                     l2260 1045  
                                   l2252 1008                                     l2317 249A  
                                   l2325 251A                                     l2341 2374  
                                   l2261 1045                                     l2253 100E  
                                   l2309 21B1                                     l2318 249C  
                                   l2326 2527                                     l2342 2374  
                                   l2350 241F                                     l2262 104A  
                                   l2254 1030                                     l2270 113B  
                                   l2319 24AD                                     l2343 237A  
                                   l2263 1053                                     l2255 101E  
                                   l2271 10EC                                     l2344 237F  
                                   l2256 1038                                     l2272 10EC  
                                   l2353 2713                                     l2329 23EB  
                                   l2257 103E                                     l2273 10F2  
                                   l2281 2395                                     l2354 26F4  
                                   l2290 2755                                     l2258 103E  
                                   l2274 1114                                     l2266 10DB  
                                   l2355 2701                                     l2347 240A  
                                   l2259 1044                                     l2275 1102  
                                   l2267 10D5                                     l2356 270F  
                                   l2348 240A                                     l2284 2744  
                                   l2276 111D                                     l2268 10D5  
                                   l2357 271E                          __end_of_IOC_Set 21A5  
                                   l2349 2410                                     l2285 2744  
                                   l2277 113A                                     l2269 10DA  
                                   l2293 2699                                     l2358 271E  
                                   l2286 274A                                     l2278 1149  
                                   l2294 26BD                                     l2287 274E  
                                   l2295 26BD                                     l2288 274E  
                                   l2289 2753                                     l2298 24B8  
                                   l2299 24D4                                     l4600 1F86  
                                   l7000 1C92                                     l7001 1C91  
                                   l4610 1BEE                                     l7002 1C95  
                                   l4611 1BE1                                     l4603 1BB5  
                                   l4612 1BED                                     l4604 1BF0  
                                   l4613 1BEC                                     l4605 1BC0  
                                   l4614 1BF2                                     l4606 1BF0  
                                   l4607 1BCB                                     l4608 1BEF  
                                   l4609 1BD6                                     l4580 20B3  
                                   l4573 223A                                     l4574 223A  
                                   l4583 2170                                     l4592 1F86  
                                   l4593 1F67                                     l4577 20AE  
                                   l4594 1F59                                     l5802 257E  
                                   l4586 13CE                                     l4587 13CD  
                                   l4596 1F46                                     l4588 13CC  
                                   l5812 1AD5                                     l4597 1F66  
                                   l4589 13CE                                     l5805 1678  
                                   l5813 1B0A                                     l5821 2487  
                                   l4598 1F77                                     l5830 22E9  
                                   l5806 1677                                     l5814 1B09  
                                   l5751 21F3                                     l4599 1F76  
                                   l5807 165E                                     l5815 1B0A  
                                   l5752 21F3                                     l5808 16A4  
                                   l5833 22C7                                     l5761 2603  
                                   l5809 16A4                                     l5762 2602  
                                   l5842 1D4F                                     l5770 14A0  
                                   l8170 1FFE                                     l5827 22D8  
                                   l5763 2601                                     l5755 21BE  
                                   l5771 149F                                     l8171 1FFE  
                                   l5764 2603                                     l5836 22FA  
                                   l8180 1564                                     l5772 148B  
                                   l5845 1A73                                     l8181 155D  
                                   l5773 149E                                     l8165 1FAF  
                                   l5782 2249                                     l8174 2118  
                                   l5758 2631                                     l8182 1563  
                                   l5774 14DC                                     l5790 1DF6  
                                   l8166 1FC7                                     l5839 230B  
                                   l8183 1565                                     l5775 14DB  
                                   l5791 1DE9                                     l5767 20FC  
                                   l8167 1FFC                                     l5848 20D6  
                                   l9312 23C7                                     l5776 14DA  
                                   l5792 1DF6                                     l9400 1C42  
                                   l8168 1FFB                                     l9321 2197  
                                   l8177 1531                                     l5777 14D2  
                                   l5793 1DF5                                     l8169 1FFD  
                                   l8178 1530                                     l9410 2786  
                                   l5778 14D9                                     l5794 1E21  
                                   l9315 23AE                                     l9403 210E  
                                   l8179 1565                                     l9411 278D  
                                   l5779 14DC                                     l5795 1E21  
                                   l5788 1DD0                                     l9420 10CD  
                                   l5789 1DCB                                     l9406 23E1  
                                   l5798 1CF2                                     l9414 21D8  
                                   l5799 1CF2                                     l6953 2536  
                                   l9361 20C3                                     l9409 2768  
                                   l6961 21E5                                     l9417 105E  
                                   l6954 2552                                     l6970 13F6  
                                   l9418 107A                                     l6955 2543  
                                   l9371 21A4                                     l6971 13E3  
                                   l9419 10C5                                     l6956 2551  
                                   l6980 140C                                     l6972 13F5  
                                   l6964 21CB                                     l6957 2550  
                                   l9381 20DD                                     l6981 1415  
                                   l6973 13EB                                     l6958 2552  
                                   l6990 1453                                     l6982 1414  
                                   l6974 13F4                                     l9390 0CDD  
                                   l6983 1454                                     l6991 1452  
                                   l6975 13F3                                     l6967 232F  
                                   l9391 0CDC                                     l9368 2122  
                                   l9384 244B                                     l6976 1455  
                                   l6984 1446                                     l6992 1455  
                                   l9392 0D5D                                     l9385 244B  
                                   l6985 1433                                     l6977 1417  
                                   l9393 0D5D                                     l9386 2450  
                                   l6986 1445                                     l6978 1404  
                                   l9387 2463                                     l6987 143B  
                                   l6979 1416                                     l6995 1C95  
                                   l6988 1444                                     l6996 1C94  
                                   l9396 1C42                                     l6989 1443  
                                   l6997 1C7F                                     l9397 1C39  
                                   l6998 1C93                                     l9398 1C38  
                                   l6999 1C88                                     l9399 1C41  
                                   _CFGS 0CAE                                     _FREE 0CAC  
                                   _LATA 010C                                     _LATB 010D  
                        __end_of_INT_ISR 2343                                     _LATC 010E  
                                   u5100 0B25                                     u5101 0B24  
                                   u5110 2490                                     u5111 248F  
                                   u5120 2497                                     u6000 1E65  
                                   u5121 2496                                     u6001 1E64  
                                   u5050 0AB8                                     u5130 24AC  
                                   u5210 2234                                     u5051 0AB7  
                                   u5131 24AB                                     u5211 2233  
                                   u5060 0AD4                                     u5140 2505  
                                   u5220 080C                                     u5300 21EE  
                                   u6020 1E74                                     u5061 0AD3  
                                   u5141 2504                                     u5301 21ED  
                                   u6021 1E73                                     u5070 0AE5  
                                   u5150 2510                                     u5230 083E  
                                   u6030 1E78                                     u6110 15C7  
                                   u5071 0AE4                                     u5151 250F  
                                   u6031 1E77                                     u6015 1E6A  
                                   u6111 15C6                                     u5080 0AEF  
                                   u5160 2526                                     u5240 1BB0  
                                   u6040 1E88                                     u6120 15CF  
                                   u7000 0871                                     u5081 0AEE  
                                   u5065 0AD0                                     u5161 2525  
                                   u5225 080A                                     u5241 1BAF  
                                   u6121 15CE                                     u6105 15B9  
                                   u7001 0870                                     u5090 0AF7  
                                   u5250 1BBB                                     u6050 1E94  
                                   u7010 088A                                     u5091 0AF6  
                                   u5251 1BBA                                     u7011 0889  
                                   _PEIE 005E                                     u5260 1BC6  
                                   u6140 15E9                                     u6060 1578  
                                   u7020 08A7                                     u7100 0A18  
                                   u5261 1BC5                                     u6045 1E85  
                                   u6141 15E8                                     u6061 1577  
                                   _INTE 005C                                     u5270 1BD1  
                                   u6150 15EF                                     u6070 158C  
                                   u6310 2379                                     u7030 08B7  
                                   u7110 0A28                                     _INTF 0059  
                                   u5271 1BD0                                     u6135 15DB  
                                   u6311 2378                                     u5280 1BDC  
                                   u6080 15A6                                     u6320 240F  
                                   u6400 1F3F                                     u7120 0A49  
                                   u7200 24DB                                     u5281 1BDB  
                                   u6081 15A5                                     u6321 240E  
                                   u6401 1F3E                                     u7025 08A4  
                                   u7121 0A48                                     u7105 0A15  
                                   u7201 24DA                                     u5290 1BE7  
                                   u5370 2530                                     u6090 15AD  
                                   u6410 1F45                                     u7050 08E8  
                                   u7210 100D                                     u8010 1870  
                                   u5291 1BE6                                     u5371 252F  
                                   u6091 15AC                                     u6075 1589  
                                   u6411 1F44                                     u7051 08E7  
                                   u7035 08B4                                     u7115 0A25  
                                   u7211 100C                                     u8011 186F  
                                   u5380 253D                                     u6420 1F4C  
                                   u7220 1038                                     u5381 253C  
                                   u6421 1F4B                                     u7045 08D5  
                                   u7221 1037                                     u5390 254A  
                                   u6350 23F0                                     u6430 1F6C  
                                   u7070 08FC                                     u7150 0A62  
                                   u7230 1043                                     u7310 2697  
                                   u5391 2549                                     u6351 23EF  
                                   u6431 1F6B                                     u7071 08FB  
                                   u7055 08E4                                     u7151 0A61  
                                   u7135 0A51                                     u7231 1042  
                                   u7311 2696                                     u5720 244F  
                                   u9000 130D                                     u6360 0B79  
                                   u6600 1C6C                                     u7160 0A6C  
                                   u7080 09E8                                     u7240 1049  
                                   u7320 26BC                                     u5721 244E  
                                   u9001 130C                                     u6361 0B78  
                                   u6601 1C6B                                     u7065 08F1  
                                   u7161 0A6B                                     u7145 0A57  
                                   u7081 09E7                                     u7241 1048  
                                   u7321 26BB                                     u5730 26C6  
                                   u9010 132D                                     u6370 0B80  
                                   u6610 1C7C                                     u7090 0A01  
                                   u7330 24B6                                     u5731 26C5  
                                   u9011 132C                                     u6371 0B7F  
                                   u6611 1C7B                                     u7091 0A00  
                                   u7331 24B5                                     u5740 26EC  
                                   u5900 19B9                                     u9020 2749  
                                   u6380 1F1C                                     u9100 13FC  
                                   u6620 1C85                                     u6700 09B1  
                                   u7340 24D3                                     u5741 26EB  
                                   u5901 19B8                                     u9021 2748  
                                   u6381 1F1B                                     u9101 13FB  
                                   u6621 1C84                                     u6701 09B0  
                                   u7341 24D2                                     u5750 220A  
                                   u9030 2753                                     u6390 1F28  
                                   u9110 1402                                     u6630 1C8E  
                                   u6710 09D2                                     u7190 0A85  
                                   u5751 2209                                     u9031 2752  
                                   u9111 1401                                     u6631 1C8D  
                                   u6711 09D1                                     u7191 0A84  
                                   u7175 0A74                                     u5760 2252  
                                   u5920 19CA                                     u9040 25DF  
                                   u9120 140A                                     u6640 0923  
                                   u6720 1154                                     u6800 06E5  
                                   u9200 10D9                                     u5761 2251  
                                   u5921 19C9                                     u9041 25DE  
                                   u9121 1409                                     u6705 09AD  
                                   u6641 0922                                     u6721 1153  
                                   u7185 0A7A                                     u9201 10D8  
                                   u9050 25EB                                     u9130 1412  
                                   u6650 093C                                     u6730 1182  
                                   u6810 06EB                                     u9210 10E4  
                                   u5915 19BC                                     u9051 25EA  
                                   u9131 1411                                     u6651 093B  
                                   u6731 1181                                     u6811 06EA  
                                   u5780 2218                                     u5940 19DB  
                                   u9140 141D                                     u9060 13DB  
                                   u6660 095E                                     u6740 11B1  
                                   u6900 0743                                     u6820 06F5  
                                   u9220 10F1                                     u9300 1ACA  
                                   u8500 1969                                     u5781 2217  
                                   u5941 19DA                                     u5925 19C6  
                                   u9141 141C                                     u9061 13DA  
                                   u6661 095D                                     u6741 11B0  
                                   u6901 0742                                     u6821 06F4  
                                   u9221 10F0                                     u8501 1968  
                                   u5950 1E27                                     u9150 1431  
                                   u9070 13E1                                     u6590 1C51  
                                   u6670 0982                                     u6750 19EE  
                                   u6910 074B                                     u6830 06FE  
                                   u9230 111C                                     u9310 1ADD  
                                   u5935 19D1                                     u9151 1430  
                                   u9071 13E0                                     u6591 1C50  
                                   u6671 0981                                     u6735 117E  
                                   u6751 19ED                                     u6911 074A  
                                   u6831 06FD                                     u9231 111B  
                                   u9311 1ADC                                     u5880 19A7  
                                   u5960 1E2E                                     u9160 1439  
                                   u9080 13E9                                     u6680 0988  
                                   u6760 1A19                                     u6840 0703  
                                   u9240 1138                                     u9320 1CA5  
                                   u9400 1AB0                                     u5881 19A6  
                                   u5961 1E2D                                     u9161 1438  
                                   u9081 13E8                                     u6681 0987  
                                   u6665 095A                                     u6745 11AD  
                                   u6761 1A18                                     u6841 0702  
                                   u9241 1137                                     u9321 1CA4  
                                   u9401 1AAF                                     u9170 1441  
                                   u9090 13F1                                     u6690 098F  
                                   u6930 075A                                     u6850 0718  
                                   u6770 06C8                                     u9250 1357  
                                   u9330 14E5                                     u9410 16B3  
                                   u9171 1440                                     u9091 13F0  
                                   u6691 098E                                     u6931 0759  
                                   u6851 0717                                     u9251 1356  
                                   u9331 14E4                                     u9411 16B2  
                                   u5980 1E49                                     u9180 144C  
                                   u6940 0762                                     u6780 06CE  
                                   u9260 1372                                     u9340 14FE  
                                   u9420 16B9                                     u9500 1469  
                                   u5981 1E48                                     u9181 144B  
                                   u6765 1A15                                     u6941 0761  
                                   u6925 074D                                     u6781 06CD  
                                   u9261 1371                                     u9341 14FD  
                                   u9421 16B8                                     u9501 1468  
                                   u6870 0727                                     u6790 06D8  
                                   u9190 10D3                                     u9270 1395  
                                   u9350 154A                                     u9430 16FA  
                                   u9510 146D                                     u5895 19AC  
                                   u5975 1E3D                                     u6871 0726  
                                   u6791 06D7                                     u9191 10D2  
                                   u9271 1394                                     u9351 1549  
                                   u9431 16F9                                     u6960 0776  
                                   u6880 072F                                     u9280 161A  
                                   u9360 155B                                     u9440 1D59  
                                   u9520 1476                                     u9600 1E05  
                                   u6961 0775                                     u6881 072E  
                                   u6865 071A                                     u9361 155A  
                                   u9345 14FA                                     u9521 1475  
                                   u9601 1E04                                     u6970 077C  
                                   u9290 1641                                     u9370 2766  
                                   u9450 1D6F                                     u9530 14A9  
                                   u9610 0C65                                     u5995 1E5A  
                                   u6971 077B                                     u6955 0766  
                                   u9291 1640                                     u9355 1546  
                                   u9371 2765                                     u9451 1D6E  
                                   u9531 14A8                                     u9611 0C64  
                                   u8820 26FF                                     u8900 190E  
                                   u6980 0791                                     u9380 2786  
                                   u9460 263C                                     u9540 14AD  
                                   u9620 0CBA                                     u9700 053D  
                                   u8821 26FE                                     u8901 190D  
                                   u6981 0790                                     u9381 2785  
                                   u9461 263B                                     u9621 0CB9  
                                   u9701 053C                                     u8830 270E  
                                   u8910 2121                                     u6990 07AD  
                                   u9390 25B8                                     u9470 1250  
                                   u9550 14C1                                     u9630 0CC5  
                                   u9710 0541                                     u8831 270D  
                                   u8911 211F                                     u6991 07AC  
                                   u6895 0733                                     u9391 25B7  
                                   u9471 124F                                     u9551 14C0  
                                   u9631 0CC4                                     u9711 0540  
                                   u8840 271D                                     u9480 125D  
                                   u9560 1DBA                                     u9640 0CD0  
                                   u9800 0600                                     u9720 0545  
                                   u8841 271C                                     u9481 125C  
                                   u9561 1DB9                                     u9641 0CCF  
                                   u9801 05FF                                     u9721 0544  
                                   u8850 18B8                                     u8930 2104  
                                   u9490 1266                                     u9570 1DC2  
                                   u9650 105C                                     u9810 0615  
                                   u9730 0557                                     u8851 18B7  
                                   u8931 2103                                     u9491 1265  
                                   u9571 1DC1                                     u9651 105B  
                                   u9811 0614                                     u9731 0556  
                                   u8860 18C5                                     u8924 2122  
                                   u8940 07E3                                     u9580 1DD7  
                                   u9660 1079                                     u9820 0631  
                                   u9740 055F                                     u9900 1934  
                                   u8845 2719                                     u8861 18C4  
                                   u8941 07E2                                     u9581 1DD6  
                                   u9661 1078                                     u9821 0630  
                                   u9741 055E                                     u9901 1933  
                                   u8870 18D2                                     u9590 1DF0  
                                   u9670 10B3                                     u9830 0653  
                                   u9750 0573                                     u9910 0021  
                                   u8871 18D1                                     u9591 1DEF  
                                   u9671 10B2                                     u9831 0652  
                                   u9751 0572                                     u9911 0020  
                                   u8880 18F0                                     u9840 0667  
                                   u9760 058D                                     u9680 052D  
                                   u9920 003D                                     u8881 18EF  
                                   u9841 0666                                     u9761 058C  
                                   u9681 052C                                     u9921 003C  
                                   u8890 18FF                                     u8970 07F7  
                                   u9770 05A9                                     u9690 0539  
                                   u9850 1BFD                                     u9930 0055  
                                   u8891 18FE                                     u8971 07F6  
                                   u8955 07E8                                     u9771 05A8  
                                   u9691 0538                                     u9851 1BFC  
                                   u9931 0054                                     _LWLO 0CAD  
                                   u8980 12E4                                     u9780 05C6  
                                   u9860 1C06                                     u9940 0071  
                                   u8965 07ED                                     u8981 12E3  
                                   u9781 05C5                                     u9861 1C05  
                                   u9941 0070                                     _RFSW 00BC  
                                   u8990 12EC                                     u9790 05E2  
                                   u9870 1C1F                                     u9950 00A4  
                                   u8991 12EB                                     u9791 05E1  
                                   u9871 1C1E                                     u9951 00A3  
                                   u9880 1B7D                                     u9960 00D8  
                                   _TMR0 0015                                     u9961 00D7  
                                   u9890 1B26                                     u9970 0129  
                                   u9875 1C1B                                     u9971 0128  
                                   u9980 0156                                     u9981 0155  
                                   u9990 016A                                     u9991 0169  
                                   u9975 0125                          __end_of_INT_Set 20C4  
                                   _RSSI 00BD                                     _WREN 0CAA  
                                   _Buz1 014B                                     _Load 006D  
                                   _Temp 007C                                     _main 1F87  
                           ___ftpack@arg 0020        __end_of_PowerFault_Initialization 208E  
                    __end_of_DlyOff_Main 13CF                          __end_of_RF_Main 20BE  
                           ___ftpack@exp 0023                                     fsr0h 0005  
                                   fsr1h 0007                                     fsr0l 0004  
                                   indf0 0000                                     indf1 0001  
                                   fsr1l 0006      __size_of_setDimmerLights_TriggerAdj 0011  
                                   btemp 007E            __size_of_setRF_Initialization 0007  
                       _setDimmerReClock 230C                                     start 0015  
               _setPowerFault_Exceptions 1918                      DelayTimejudge@value 0022  
                          _RfPointSelect 2202               __end_of_setRFSW_AdjControl 199E  
                           ___ftmul@cntr 004A                             ___ftmul@sign 004B  
           __size_of_Temp_Initialization 0004              __size_of_setPowerFault_Main 0127  
                                  ??_ISR 0077                             ___fttol@exp1 0035  
                           ___fttol@lval 0031                         __end_of_LED_Main 21CC  
                                  l10602 18BF                                    l10603 18CC  
                                  l10604 18D9                                    l10605 18D9  
                                  l10614 26C8                                    l10542 09D5  
                                  l10550 09D5                                    l10615 26ED  
                                  l10543 093E                                    l10616 26ED  
                                  l10608 2164                                    l10544 0983  
                                  l10560 0283                                    l10545 0978  
                                  l10561 01B0                                    l10553 004C  
                                  l14001 2095                                    l14010 20F4  
                                  l10546 09D4                                    l10570 0208  
                                  l10562 0174                                    l10554 004B  
                                  l10539 222B                                    l10547 0991  
                                  l10555 030D                                    l10571 0281  
                                  l10563 01AF                                    l14004 2201  
                                  l10548 09D3                                    l10556 0288  
                                  l10572 0241                                    l10564 01AE  
                                  l10580 030D                                    l10549 09C8  
                                  l10557 0287                                    l10573 0280  
                                  l10565 0194                                    l14021 0E84  
                                  l10590 2286                                    l10574 030C  
                                  l10566 01AD                                    l10558 00A6  
                                  l14030 0E1F                                    l14022 0DB3  
                                  l10583 1B81                                    l10575 02BC  
                                  l10567 01EC                                    l10559 00D9  
                                  l14031 0E26                                    l14023 0DB2  
                  ?_setDimmerLights_Main 0071                                    l22120 2132  
                                  l14016 1A2B                                    l10584 1BA3  
                                  l10576 02A4                                    l10568 01EB  
                                  l14032 0E6E                                    l14024 0DA8  
                                  l10593 2142                                    l14017 1A2A  
                                  l10577 02BB                                    l10569 0282  
                                  l14033 0E68                                    l14025 0DB1  
                                  l22130 0AD4                                    l22210 222E  
                                  l14018 1A2B                                    l14042 1938  
                                  l10578 030B                                    l14026 0E83  
                                  l10587 236A                                    l14043 195A  
                                  l10579 030A                                    l14027 0E82  
                                  l14035 0E4B                                    l22140 0B25  
                                  l22132 0AE5                                    l22124 0AA0  
                                  l22212 2234                                    l22220 0818  
                                  l10596 18F9                                    l11740 214D  
                                  l23100 097C                                    l14036 0E67  
                                  l14028 0E27                                    l10597 1908  
                                  l14037 0E6E                                    l14029 0E20  
                                  l22118 212D                                    l22150 0B60  
                                  l22142 0B4B                                    l22134 0AEF  
                                  l22126 0AB0                                    l22222 0829  
                                  l22214 0803                                    l22230 1BA6  
                                  l10598 1917                                    l23110 0991  
                                  l23102 0983                                    l11750 1195  
                                  l14038 0E79                                    l10599 1917  
                                  l11743 20EC                                    l11751 11C5  
                                  l14039 0E84                                    l22152 0B61  
                                  l22136 0AF7                                    l22144 0B53  
                                  l22128 0AB8                                    l22160 2497  
                                  l22224 083A                                    l22216 0806  
                                  l22240 1BC6                                    l22232 1BB0  
                                  l22320 2530                                    l23040 1C51  
                                  l23112 09B1                                    l23104 0988  
                                  l11752 11C4                                    l23120 1154  
                                  l23200 070B                                    l11737 2089  
                                  l11753 11C6                                    l22146 0B58  
                                  l22138 0B1D                                    l22162 249D  
                                  l22154 2488                                    l22170 24FD  
                                  l22226 083E                                    l22218 080F  
                                  l22250 1BE1                                    l22242 1BCB  
                                  l22234 1BB5                                    l22322 2536  
                                  l22330 210F                                    l23050 1C7F  
                                  l23042 1C5A                                    l23114 09C8  
                                  l23106 0989                                    l23122 1166  
                                  l23130 19E7                                    l23210 073D  
                                  l23202 0719                                    l11762 0FFF  
                                  l11770 0F59                                    l15210 17FF  
                                  l11771 0F58                                    l11763 0EE2  
                                  l22148 0B5B                                    l22164 24A0  
                                  l22156 248A                                    l22180 2510  
                                  l22172 24FF                                    l22228 084E  
                                  l22252 1BE7                                    l22244 1BD1  
                                  l22236 1BBB                                    l22260 20D0  
                                  l22324 253D                                    l11756 2158  
                                  l15204 2267                                    l23052 1C85  
                                  l23044 1C6C                                    l23036 1C45  
                                  l23116 09CC                                    l23108 0990  
                                  l23124 1182                                    l23132 19EE  
                                  l23220 0765                                    l23204 0721  
                                  l23212 0745                                    l23300 0A33  
                                  l11772 0F60                                    l11764 0EE1  
                                  l15220 17F1                                    l15212 1779  
                                  l11749 11C6                                    l11781 1B2B  
                                  l11773 0F9B                                    l11765 0ED6  
                                  l15221 17F0                                    l15213 17BC  
                                  l22166 24A2                                    l22158 2491  
                                  l22182 2513                                    l22174 2506  
                                  l22254 1BF2                                    l22246 1BD6  
                                  l22238 1BC0                                    l22262 223B  
                                  l22326 2543                                    l22318 252A  
                                  l23054 1C88                                    l23046 1C75  
                                  l23038 1C49                                    l23070 221E  
                                  l23126 1195                                    l23118 114C  
                                  l23134 19FF                                    l23230 07A2  
                                  l23222 0770                                    l23214 074C  
                                  l23206 0727                                    l23310 0A49  
                                  l23302 0A34                                    l11782 1B34  
                                  l24030 1869                                    l11774 0F94  
                                  l11766 0EE0                                    l15222 17FD  
                                  l15214 179A                                    l15207 20E4  
                                  l15231 25AA                                    l11783 1B56  
                                  l11767 0FFE                                    l11775 0F93  
                                  l11759 2091                                    l15215 17BB  
                                  l15223 17FF                                    l22168 24A6  
                                  l22184 251A                                    l22176 2508  
                                  l22248 1BDC                                    l22256 21E8  
                                  l22264 223D                                    l22328 254A  
                                  l22360 2195                                    l22520 2449  
                                  l23056 1C8E                                    l23048 1C7C  
                                  l23072 2223                                    l23080 0919  
                                  l23128 11B1                                    l23136 1A19  
                                  l23240 07DA                                    l23232 07A9  
                                  l23224 077C                                    l23216 0754  
                                  l23208 0732                                    l23320 0A68  
                                  l23312 0A50                                    l23304 0A3A  
                                  l25000 25B8                                    l24040 189B  
                                  l24032 1870                                    l11768 0FFD  
                                  l11776 0F9B                                    l15240 1F0D  
                                  l15216 17BA                                    l11777 0FA9  
                                  l11769 0F61                                    l15241 1F03  
                                  l15217 17B9                                    l22186 2520  
                                  l22178 250B                                    l22258 21EE  
                                  l22266 2247                                    l22362 2196  
                                  l22354 218B                                    l22522 2450  
                                  l22530 23D2                                    l15226 0C5B  
                                  l23074 2228                                    l23090 093D  
                                  l23082 091B                                    l23234 07AD  
                                  l23226 078D                                    l23218 075A  
                                  l23250 088A                                    l23242 085F  
                                  l23330 0A86                                    l23322 0A6C  
                                  l23314 0A56                                    l23306 0A40  
                                  l23410 268F                                    l15234 25D6  
                                  l25002 25C9                                    l25010 1A7A  
                                  l24034 1877                                    l11778 0FFF  
                                  l15242 1ED5                                    l15218 17C1  
                                  l15227 0C5A                                    l15235 25D6  
                                  l15243 1F02                                    l15219 17FE  
                                  l22268 2249                                    l22356 2191  
                                  l22524 2463                                    l22532 23D3  
                                  l22540 26C7                                    l22700 1599  
                                  l15228 0C5B                                    l23092 093E  
                                  l23084 0923                                    l23236 07BD  
                                  l23228 0791                                    l23180 06D9  
                                  l23172 06AB                                    l23260 08AD  
                                  l23252 0891                                    l23244 0871  
                                  l23332 0A9F                                    l23324 0A73  
                                  l23316 0A5C                                    l23308 0A45  
                                  l23340 24FC                                    l23420 26B1  
                                  l23412 2691                                    l25004 25CD  
                                  l15252 1AB7                                    l25020 1AA7  
                                  l25012 1A85                                    l25100 1248  
                                  l24036 1881                                    l15260 1236  
                                  l15244 1F01                                    l15253 1ABE  
                                  l15261 1243                                    l15245 1F0C  
                                  l22294 2358                                    l22358 2192  
                                  l22518 2442                                    l22534 23E1  
                                  l22526 23CA                                    l22542 26C8  
                                  l22630 19A7                                    l22710 15B6  
                                  l22702 15A0                                    l23094 095E  
                                  l23086 0935                                    l23238 07C1  
                                  l23190 06F6                                    l23182 06E0  
                                  l23174 06C4                                    l23270 08DA  
                                  l23262 08BD                                    l23254 0892  
                                  l23246 0878                                    l23326 0A79  
                                  l23318 0A63                                    l23334 24D5  
                                  l23350 1018                                    l23342 1000  
                                  l23422 26B6                                    l23414 2698  
                                  l23430 24B8                                    l25006 25D1  
                                  l25022 1AB0                                    l25014 1A90  
                                  l15270 16F3                                    l25030 16B9  
                                  l25110 1273                                    l25102 1250  
                                  l24038 188A                                    l15262 1242  
                                  l15246 1F07                                    l15238 1EB5  
                                  l15271 16C8                                    l15263 1245  
                                  l15247 1F0B                                    l15239 1EB4  
                                  l22528 23CB                                    l22544 26E2  
                                  l22536 26BE                                    l22640 19CA  
                                  l22632 19AB                                    l22720 15DA  
                                  l22712 15B8                                    l22704 15A2  
                                  l15192 209A                                    l23096 0974  
                                  l23088 0936                                    l23192 06FA  
                                  l23184 06E1                                    l23176 06C8  
                                  l23280 08FD                                    l23272 08E8  
                                  l23264 08C1                                    l23256 0898  
                                  l23248 0879                                    l23328 0A7F  
                                  l23336 24DB                                    l23360 1030  
                                  l23352 101B                                    l23344 1002  
                                  l23416 2699                                    l23432 24C0  
                                  l23424 24AE                                    l25016 1A9B  
                                  l25008 1A76                                    l15272 1740  
                                  l25040 16E5                                    l25032 16C8  
                                  l25024 16A7                                    l25112 1279  
                                  l25104 125D                                    l25120 2380  
                                  l25200 0CDD                                    l15280 199D  
                                  l15256 120B                                    l15248 1F0A  
                                  l15273 1711                                    l15257 1245  
                                  l15249 1F0D                                    l15290 084E  
                                  l22546 26E6                                    l22538 26C0  
                                  l15266 2258                                    l22650 19E4  
                                  l22642 19CE                                    l22634 19B0  
                                  l22626 199E                                    l22730 1604  
                                  l22722 15E4                                    l22706 15A6  
                                  l22714 15C9                                    l23098 0978  
                                  l23194 06FE                                    l23186 06E5  
                                  l23178 06CE                                    l23282 0916  
                                  l23274 08EE                                    l23266 08C8  
                                  l23258 089D                                    l23290 09F0  
                                  l23338 24E4                                    l23362 1039  
                                  l23354 101E                                    l23346 100E  
                                  l23418 26A9                                    l23434 24C8  
                                  l23426 24B0                                    l25018 1AA3  
                                  l15274 173F                                    l25050 171C  
                                  l25034 16CD                                    l25042 16F3  
                                  l25026 16AB                                    l25114 128B  
                                  l25106 1266                                    l25122 20AF  
                                  l25130 1469                                    l25210 0D10  
                                  l25202 0CE5                                    l15258 122A  
                                  l15291 085E                                    l15267 2258  
                                  l15283 22A6                                    l15275 174D  
                                  l15259 1244                                    l15195 20BD  
                                  l15292 085E                                    l24500 18DC  
                                  l22556 2159                                    l22564 214E  
                                  l22572 21F4                                    l15188 220F  
                                  l22644 19D0                                    l22636 19B5  
                                  l22628 19A1                                    l22660 1E38  
                                  l22652 1E22                                    l22716 15CF  
                                  l22724 15EB                                    l22708 15AD  
                                  l22900 0B6E                                    l23196 0703  
                                  l23188 06EB                                    l23276 08F0  
                                  l23268 08D4                                    l23292 0A01  
                                  l23284 09D6                                    l23364 104A  
                                  l23356 1027                                    l23348 1011  
                                  l23436 24CD                                    l23428 24B7  
                                  l23540 1CF5                                    l25060 1749  
                                  l25052 1724                                    l25044 16FA  
                                  l25036 16D5                                    l25028 16B3  
                                  l25116 1297                                    l25108 126C  
                                  l25140 148B                                    l25132 146D  
                                  l25124 1458                                    l25220 0D43  
                                  l25212 0D1B                                    l25204 0CEF  
                                  l25300 05BD                                    l24260 1969  
                                  l15189 220F                                    l24510 1908  
                                  l24502 18EA                                    l22558 2164  
                                  l22566 2153                                    l22574 21F9  
                                  l22590 224C                                    l16430 20FE  
                                  l22646 19D5                                    l22638 19BB  
                                  l22670 1E67                                    l22662 1E43  
                                  l22654 1E27                                    l22726 15EF  
                                  l22718 15D8                                    l22910 0B8A  
                                  l22902 0B72                                    l15198 2276  
                                  l23198 0705                                    l23278 08F6  
                                  l23294 0A08                                    l23286 09E8  
                                  l23366 1052                                    l23358 102A  
                                  l23542 1CFB                                    l25054 1731  
                                  l25046 1711                                    l25038 16DD  
                                  l25062 2345                                    l25070 1D5E  
                                  l25118 129D                                    l25150 14AD  
                                  l25142 1491                                    l25134 1476  
                                  l25126 145B                                    l25230 0D56  
                                  l25222 0D4C                                    l25214 0D26  
                                  l25206 0CFA                                    l25310 05F7  
                                  l25302 05C6                                    l15286 1877  
                                  l15278 1975                                    l24262 196F  
                                  l16431 2105                                    l15287 189F  
                                  l15279 1987                                    l24512 190E  
                                  l24504 18F0                                    l24520 239D  
                                  l22576 21FD                                    l22584 2204  
                                  l22592 2252                                    l16432 2105  
                                  l22648 19DD                                    l22680 1E94  
                                  l22672 1E70                                    l22664 1E4B  
                                  l22656 1E2F                                    l22728 15FB  
                                  l22832 236D                                    l22840 2402  
                                  l24600 225F                                    l22912 0C56  
                                  l22904 0B79                                    l22920 1F24  
                                  l23296 0A09                                    l23288 09EF  
                                  l23480 21B7                                    l23544 1D11  
                                  l25056 1738                                    l25048 1716  
                                  l25080 1D83                                    l25072 1D66  
                                  l25064 1D52                                    l25152 14B1  
                                  l25144 1496                                    l25136 147C  
                                  l25128 145F                                    l25160 1DB4  
                                  l25224 0D4D                                    l25216 0D31  
                                  l25208 0D05                                    l25232 2123  
                                  l25240 1056                                    l25320 0631  
                                  l25312 0600                                    l25304 05D0  
                                  l25400 007F                                    l24264 1975  
                                  l24256 195D                                    l24506 18F9  
                                  l24514 2145                                    l24530 23A7  
                                  l24522 239F                                    l22586 220A  
                                  l22674 1E78                                    l22666 1E4F  
                                  l22658 1E36                                    l22690 1578  
                                  l22834 236E                                    l22842 2403  
                                  l24610 273C                                    l24602 271F  
                                  l22906 0B80                                    l22930 1F4C  
                                  l22922 1F28                                    l22914 1F10  
                                  l23298 0A32                                    l23482 21BB  
                                  l23546 1D4F                                    l25058 1740  
                                  l25082 1D8B                                    l25074 1D6F  
                                  l25066 1D55                                    l25090 2634  
                                  l25154 14B8                                    l25138 1483  
                                  l25146 14A0                                    l25170 1DE9  
                                  l25162 1DBA                                    l25226 0D50  
                                  l25218 0D3A                                    l25234 2126  
                                  l25242 105D                                    l25250 107A  
                                  l25330 0667                                    l25322 063F  
                                  l25306 05E2                                    l25314 060C  
                                  l16442 20B8                                    l25410 00CE  
                                  l25402 009B                                    l24266 1999  
                                  l24258 1961                                    l16435 221D  
                                  l16451 2296                                    l24508 18FF  
                                  l24516 2279                                    l24532 23AA  
                                  l24524 23A2                                    l24540 2198  
                                  l22588 20DE                                    l16436 221D  
                                  l22596 2212                                    l22676 1E80  
                                  l22668 1E59                                    l22692 1581  
                                  l22836 237A                                    l22844 2410  
                                  l24612 273E                                    l24604 2723  
                                  l24620 2289                                    l22908 0B84  
                                  l22940 1F80                                    l22932 1F59  
                                  l22924 1F36                                    l22916 1F14  
                                  l24700 143B                                    l25084 1D98  
                                  l25076 1D74                                    l25068 1D59  
                                  l25092 263C                                    l25156 14C1  
                                  l25148 14A9                                    l25172 1DF0  
                                  l25164 1DC2                                    l23820 246A  
                                  l25228 0D51                                    l25180 0C5C  
                                  l25236 2128                                    l25260 10CC  
                                  l25252 10B3                                    l25244 105E  
                                  l25332 069C                                    l16460 0649  
                                  l25316 0615                                    l25308 05F0  
                                  l25324 064A                                    l25340 1BFD  
                                  l25420 014B                                    l25412 00D2  
                                  l25404 009E                                    l25500 0ED6  
                                  l16429 20FF                                    l16445 2355  
                                  l16461 05BD                                    l24470 26EE  
                                  l24534 23AC                                    l24526 23A5  
                                  l24518 2396                                    l24550 21A2  
                                  l24542 219A                                    l22598 2218  
                                  l22678 1E90                                    l19030 1E2F  
                                  l22694 1582                                    l22838 237D  
                                  l22846 2416                                    l24614 274A  
                                  l24606 272A                                    l22870 23E5  
                                  l24622 228D                                    l24630 22BD  
                                  l22926 1F3F                                    l22934 1F67  
                                  l22918 1F1C                                    l22950 2623  
                                  l22942 2606                                    l24702 1441  
                                  l24710 22DF                                    l23478 21B2  
                                  l25078 1D7B                                    l25086 1D9D  
                                  l25094 2647                                    l25158 14D2  
                                  l25174 1DFC                                    l25166 1DD0  
                                  l23822 2470                                    l25190 0CA6  
                                  l25182 0C65                                    l25254 10C5  
                                  l25246 106F                                    l25238 1054  
                                  l16454 06AA                                    l16470 06A9  
                                  l25334 06A0                                    l25326 0653  
                                  l25318 061F                                    l16462 05BC  
                                  l25270 0539                                    l25262 0525  
                                  l25342 1C06                                    l25350 1C39  
                                  l25430 017F                                    l25422 0156  
                                  l25406 00A5                                    l25414 00D9  
                                  l25510 0F39                                    l25502 0EE2  
                                  l19031 1E95                                    l16439 212C  
                                  l16471 06A8                                    l16463 0648  
                                  l24480 270F                                    l24472 26F4  
                                  l24528 23A6                                    l24536 20D7  
                                  l24552 21A3                                    l24544 219F  
                                  l24560 20EC                                    l19040 1E74  
                                  l19032 1E43                                    l22696 1592  
                                  l22688 1566                                    l22848 2418  
                                  l24608 2733                                    l22872 23F1  
                                  l24616 2167                                    l24624 2299  
                                  l24632 22CA                                    l22936 1F6C  
                                  l22928 1F46                                    l22944 260A  
                                  l24640 25E3                                    l24704 1446  
                                  l24712 22EC                                    l24720 23AF  
                                  l16448 22B6                                    l24800 1127  
                                  l25088 1DA3                                    l25096 264E  
                                  l25176 1E05                                    l25168 1DD7  
                                  l23824 2475                                    l25192 0CAF  
                                  l25184 0C8C                                    l25256 10C6  
                                  l25248 1073                                    l16472 06A7  
                                  l25328 065C                                    l16464 060C  
                                  l25280 0557                                    l16456 0547  
                                  l25272 053D                                    l25264 052D  
                                  l25336 20F5                                    l25344 1C10  
                                  l25352 20B4                                    l25360 1B79  
                                  l25440 01D5                                    l25432 018A  
                                  l25424 015F                                    l25416 010D  
                                  l25408 00A6                                    l25512 0F42  
                                  l25520 0F61                                    l25504 0EEC  
                                  l25600 11C9                                    l19041 1E7E  
                                  l19033 1E38                                    l16457 064A  
                                  l16465 060B                                    l16473 06AA  
                                  l24474 26F6                                    l24482 213A  
                                  l24490 18B8                                    l24538 20BE  
                                  l24546 21A0                                    l24554 211B  
                                  l24562 20ED                                    l24570 07DF  
                                  l19042 1E95                                    l19034 1E4A  
                                  l22698 1593                                    l22874 23F4  
                                  l24618 216B                                    l24626 229D  
                                  l24634 22CE                                    l22938 1F77  
                                  l22946 2611                                    l24642 25EB  
                                  l24650 2559                                    l24706 144C  
                                  l24714 22F0                                    l24722 23B2  
                                  l24730 2086                                    l24810 1143  
                                  l24802 1131                                    l25098 2656  
                                  l16490 265F                                    l16482 12C5  
                                  l23818 2466                                    l25178 21D9  
                                  l25194 0CBA                                    l25186 0C94  
                                  l25258 10C9                                    l16466 060A  
                                  l16458 0584                                    l25282 055F  
                                  l25290 0584                                    l25274 0541  
                                  l25266 0531                                    l25346 1C1F  
                                  l25338 1BF3                                    l25362 1B7D  
                                  l25354 1B59                                    l25370 1B26  
                                  l25450 0208                                    l25442 01E0  
                                  l25434 0194                                    l25426 016A  
                                  l25418 0129                                    l25522 0F74  
                                  l25530 0F94                                    l25514 0F4D  
                                  l25506 0EFF                                    l25610 11F2  
                                  l25602 11CD                                    l24458 176E  
                                  l19035 1E5F                                    l16483 129D  
                                  l16467 0647                                    l16459 0583  
                                  l24476 2700                                    l24492 18BF  
                                  l24484 18A2                                    l24548 21A1  
                                  l24556 211C                                    l24564 20F4  
                                  l24572 07E3                                    l19036 1E4B  
                                  l19028 1E37                                    l24580 12C8  
                                  l22876 23FA                                    l22868 23E4  
                                  l24628 22B9                                    l22948 261A  
                                  l24644 25EF                                    l24636 25D7  
                                  l24652 2563                                    l24660 13D5  
                                  l24708 22DB                                    l24716 22FD  
                                  l24724 23B5                                    l24732 208A  
                                  l24740 2581                                    l24804 1133  
                                  l24812 209B                                    l24820 20AA  
                                  l24900 1CD5                                    l16476 1DB1  
                                  l16484 129C                                    l25196 0CC5  
                                  l25188 0C9D                                    l16468 0646  
                                  l25292 058D                                    l25284 0568  
                                  l25276 0545                                    l25268 0535  
                                  l25348 1C34                                    l25356 1B61  
                                  l25372 1B2B                                    l25364 1B0D  
                                  l25380 1934                                    l25460 024A  
                                  l25452 0213                                    l25444 01E6  
                                  l25428 0174                                    l25436 01B0  
                                  l25540 0FEA                                    l25532 0FA3  
                                  l25524 0F7D                                    l25516 0F53  
                                  l25508 0F27                                    l25620 122A  
                                  l25612 11F8                                    l25604 11D3  
                                  l25700 17A8                                    l19037 1E66  
                                  l16477 1D9D                                    l16485 12C4  
                                  l16469 0645                                    l24478 2701  
                                  l24494 18C5                                    l24486 18AB  
                                  l24558 20E5                                    l24566 20FD  
                                  l24574 07EC                                    l19038 1E70  
                                  l24590 1305                                    l24582 12DC  
                                  l22878 23FD                                    l24646 25F7  
                                  l24638 25DF                                    l24654 256C  
                                  l24670 13EB                                    l24662 13DB  
                                  l24718 2301                                    l24726 23B8  
                                  l13998 208D                                    l24734 2096  
                                  l24750 2599                                    l24742 2585  
                                  l24806 1138                                    l24814 20A0  
                                  l24830 1372                                    l24822 134B  
                                  l24902 1CDD                                    l24910 1A34  
                                  l16478 1DB0                                    l16486 12C5  
                                  l25198 0CD0                                    l25294 0597  
                                  l25286 0573                                    l25278 0547  
                                  l25358 1B70                                    l25366 1B15  
                                  l25374 191A                                    l25470 0299  
                                  l25462 0262                                    l25454 0218  
                                  l25438 01CC                                    l25446 01EC  
                                  l25390 0046                                    l25382 0018  
                                  l25542 0FF3                                    l25534 0FA9  
                                  l25526 0F88                                    l25518 0F59  
                                  l25550 0D75                                    l25622 1231  
                                  l25606 11E5                                    l25614 120B  
                                  l25630 1E9C                                    l25702 17AC  
                                  l25710 17C1                                    l19039 1E67  
                                  l16479 1DB1                                    l24496 18CC  
                                  l24488 18B2                                    l24576 07F8  
                                  l24568 07DB                                    l24592 130D  
                                  l24584 12E4                                    l24656 2575  
                                  l24648 2555                                    l24680 1404  
                                  l24672 13F1                                    l24664 13E1  
                                  l24728 23BE                                    l24736 22A9  
                                  l24752 259D                                    l24744 258D  
                                  l24760 210B                                    l24808 113B  
                                  l24816 21A5                                    l24840 13A4  
                                  l24832 137B                                    l24824 134F  
                                  l24904 1CE5                                    l24912 1A4A  
                                  l24920 2329                                    l25296 05A9  
                                  l25288 057E                                    l25368 1B22  
                                  l25376 1921                                    l25480 02C4  
                                  l25472 02A4                                    l25456 021F  
                                  l25448 01FE                                    l25464 0283  
                                  l25384 0021                                    l25392 004C  
                                  l25536 0FBC                                    l25528 0F8E  
                                  l25552 0D87                                    l25560 0DB3  
                                  l25544 0D5E                                    l25624 1236  
                                  l25616 1212                                    l25608 11EC  
                                  l25640 1EBB                                    l25632 1EA3  
                                  l25720 17E6                                    l25712 17C8  
                                  l25704 17B0                                    l16489 265F  
                                  l24498 18D2                                    l24578 07FF  
                                  l24594 1325                                    l24586 12EC  
                                  l24690 141D                                    l24682 140A  
                                  l24666 13E3                                    l24674 13F6  
                                  l24658 13D1                                    l24738 22AD  
                                  l24754 25A2                                    l24746 2591  
                                  l24762 210C                                    l24770 10CE  
                                  l24818 20A5                                    l24850 13C2  
                                  l24842 13AA                                    l24834 1386  
                                  l24826 1357                                    l24906 1CEB  
                                  l24914 1A73                                    l24922 21BF  
                                  l24930 14FE                                    l25298 05B7  
                                  l25378 192E                                    l25482 02FE  
                                  l25474 02AC                                    l25458 0229  
                                  l25394 0055                                    l25466 0288  
                                  l25386 002B                                    l25538 0FDC  
                                  l25490 0E95                                    l25570 0E03  
                                  l25562 0DBC                                    l25554 0D8F  
                                  l25546 0D65                                    l25626 123D  
                                  l25618 1225                                    l25650 1ED5  
                                  l25642 1EC1                                    l25634 1EA9  
                                  l25722 17F1                                    l25714 17CC  
                                  l25706 17B4                                    l25730 1F8D  
                                  l24596 132D                                    l24588 1303  
                                  l24692 142A                                    l24684 140C  
                                  l24676 13FC                                    l24668 13E9  
                                  l24756 25A6                                    l24748 2595  
                                  l24764 210D                                    l24780 10E6  
                                  l24772 10D4                                    l24844 13B0  
                                  l24836 1395                                    l24828 1360  
                                  l24860 161F                                    l24852 1607  
                                  l24908 1A2E                                    l24916 2320  
                                  l24932 150C                                    l24940 1531  
                                  l24924 14DD                                    l25484 0301  
                                  l25476 02B4                                    l25468 0291  
                                  l25396 005F                                    l25388 003D  
                                  l25492 0E9F                                    l25572 0E0B  
                                  l25580 0E27                                    l25564 0DCE  
                                  l25556 0D97                                    l25548 0D6C  
                                  l25660 1F05                                    l25652 1EE2  
                                  l25644 1EC7                                    l25636 1EAF  
                                  l25628 1E98                                    l25724 17F9  
                                  l25716 17D3                                    l25708 17BC  
                                  l25740 1F9C                                    l25732 1F90  
                                  l18702 19DD                                    l24598 225B  
                                  l24694 1431                                    l24686 1412  
                                  l24678 1402                                    l24758 2106  
                                  l24766 226A                                    l24790 1105  
                                  l24782 10F2                                    l24774 10DB  
                                  l24846 13B8                                    l24838 139E  
                                  l24870 164D                                    l24862 1624  
                                  l24854 160B                                    l24918 2324  
                                  l24942 153B                                    l24934 1510  
                                  l24926 14E5                                    l24950 2756  
                                  l25478 02BC                                    l25398 0071  
                                  l25494 0EB2                                    l25486 0E85  
                                  l25590 0E62                                    l25582 0E39  
                                  l25574 0E15                                    l25566 0DE1  
                                  l25558 0DA8                                    l25662 1F06  
                                  l25654 1EEF                                    l25646 1ECD  
                                  l25638 1EB5                                    l25718 17DC  
                                  l25670 1754                                    l25726 20B9  
                                  l25750 1FAB                                    l25742 1F9F  
                                  l25734 1F93                                    l18703 19B5  
                                  l18704 19AB                                    l24696 1433  
                                  l24688 1417                                    l24768 226E  
                                  l18800 0A68                                    l24792 110F  
                                  l24784 10F8                                    l24776 10DF  
                                  l24848 13BE                                    l24872 1654  
                                  l24864 1626                                    l24856 1616  
                                  l24880 1AC1                                    l24944 154A  
                                  l24936 1514                                    l24928 14EF  
                                  l24960 275D                                    l24952 2758  
                                  l25496 0EBA                                    l25488 0E8D  
                                  l25592 0E68                                    l25584 0E4B  
                                  l25576 0E1A                                    l25568 0DF2  
                                  l25664 1F08                                    l25656 1EFC  
                                  l25648 1ED3                                    l25680 176E  
                                  l25672 175B                                    l25760 1FCF  
                                  l25752 1FAF                                    l25744 1FA2  
                                  l25736 1F96                                    l25728 1F87  
                                  l18705 19BA                                    l18801 0A73  
                                  l18706 19BB                                    l18810 15C8  
                                  l24698 1439                                    l18802 0A86  
                                  l24794 1114                                    l24786 10FF  
                                  l24778 10E4                                    l24874 165E  
                                  l24866 1641                                    l24858 161A  
                                  l24890 1AE7                                    l24882 1AC5  
                                  l24946 155C                                    l24938 151D  
                                  l24970 276B                                    l24962 275E  
                                  l24954 275A                                    l25498 0EC2  
                                  l25594 0E75                                    l25586 0E53  
                                  l25578 0E20                                    l25666 1F09  
                                  l25658 1F04                                    l25690 178E  
                                  l25682 1775                                    l25674 1761  
                                  l25770 1FEB                                    l25762 1FD4  
                                  l25754 1FB7                                    l25746 1FA5  
                                  l25738 1F99                                    l18707 19D0  
                                  l18811 15EB                                    l18708 19DC  
                                  l18812 15D9                                    l18740 06E1  
                                  l24796 111D                                    l24788 1102  
                                  l24876 166D                                    l24868 1646  
                                  l24892 1AEE                                    l24884 1ACA  
                                  l24948 155D                                    l24980 278B  
                                  l24972 2778                                    l24964 2760  
                                  l24956 275B                                    l25588 0E5D  
                                  l25596 208E                                    l25692 1792  
                                  l25684 1779                                    l25676 1765  
                                  l25668 1750                                    l25772 1FEE  
                                  l25764 1FD7                                    l25756 1FC3  
                                  l25748 1FA8                          ?_setDelayOff_GO 0023  
                                  l18709 19E4                                    l18813 15E4  
                                  l18805 1582                                    l18814 15DA  
                                  l18806 1604                                    l18750 0719  
                                  l18742 06D9                                    l24798 1120  
                                  l24878 1678                                    l24886 1AD5  
                                  l24894 1C98                                    l24974 277B  
                                  l24966 2767                                    l24958 275C  
                                  l24990 21D2                                    l24982 21CC  
                                  l25598 2092                                    l25694 1795  
                                  l25686 1780                                    l25678 1769  
                                  l25774 1FF1                                    l25766 1FDF  
                                  l25758 1FC7                                    l18815 15EA  
                                  l18807 15C9                                    l18743 07DA  
                                  l18816 15FB                                    l18808 15B7  
                                  l18752 0730                                    l18744 06F6  
                                  l18832 24E4                                    l24888 1ADD  
                                  l24896 1C9C                                    l24976 2780  
                                  l24968 2768                                    l24992 21D3  
                                  l24984 21CE                                    l25696 179A  
                                  l25688 1787                                    l25776 1FF4  
                                  l25768 1FE8                                    l18809 15B8  
                                  l18761 0763                                    l18753 0731  
                                  l18833 24FC                                    l18762 0764  
                                  l18754 073D                                    l18746 06F5  
                                  l24898 1CA5                                    l24978 2788  
                                  l24994 21D6                                    l24986 21D0  
                                  l25698 17A1                                    l25778 1FF7  
                                  l18763 0770                                    l18755 0732  
                                  l18747 06FF                                    l18764 0765  
                                  l18756 0744                                    l18748 0704  
                                  l24988 21D1                                    l24996 25AD  
                                  l18765 0777                                    l18749 0745  
                                  l18757 0778                                    l18766 078D  
                                  l18758 0778                                    l24998 25B1  
                                  l18767 07A2                                    l18759 074C  
                                  l18696 07DF                                    l18768 07C1  
                                  l18784 0879                    __end_of_setLoad_Count 236B  
                                  l18697 07E7                                    l18785 0916  
                                  l18698 07F8                                    l18786 0892  
                                  l18794 09F0                                    l18699 07FF  
                                  l18787 08D4                                    l18795 0A9F  
                                  l18788 08F0                                    l18796 0A09  
                                  l18789 08FD                                    l18797 0A45  
                                  l18798 0A50                                    l18799 0A63  
                                  ?_main 0071                setControl_Lights_Table@rf 0067  
                        __end_of___ftadd 07DB                          __end_of___ftdiv 0917  
                                  u10000 017F                                    u10001 017E  
                                  u10010 018A                                    u10011 0189  
                                  u10100 02AC                                    u10020 01CC  
                                  u10101 02AB                                    u10021 01CB  
                                  u10110 02B4                                    u10030 01E0  
                                  u10111 02B3                                    u10031 01DF  
                                  u10120 02C4                                    u10040 01FE  
                                  u10200 0F39                                    u10121 02C3  
                                  u10041 01FD                                    u10025 01C8  
                                  u10201 0F38                                    u10050 0213  
                                  u10210 0F4D                                    u10130 0E8D  
                                  u10051 0212                                    u10211 0F4C  
                                  u10131 0E8C                                    u10060 0229  
                                  u10220 0F74                                    u10140 0E95  
                                  u10300 0DCE                                    u10061 0228  
                                  u10221 0F73                                    u10141 0E94  
                                  u10301 0DCD                                    u10070 024A  
                                  u10230 0F88                                    u10150 0EB2  
                                  u10310 0DE1                                    u10071 0249  
                                  u10231 0F87                                    u10151 0EB1  
                                  u10311 0DE0                                    u10080 0291  
                                  u10240 0FA3                                    u10160 0EBA  
                                  u10320 0DF2                                    u10400 1212  
                                  u10081 0290                                    u10241 0FA2  
                                  u10161 0EB9                                    u10321 0DF1  
                                  u10401 1211                                    u10090 0299  
                                  u10170 0EC2                                    u10330 0E03  
                                  u10250 0D65                                    u10410 1231  
                                  u10091 0298                                    u10171 0EC1  
                                  u10331 0E02                                    u10251 0D64  
                                  u10411 1230                                    u10180 0EFF  
                                  u10340 0E15                                    u10260 0D6C  
                                  u10420 123D                                    u10500 1ED3  
                        __end_of___ftmul 0AA0                                    u10181 0EFE  
                                  u10341 0E14                                    u10261 0D6B  
                                  u10421 123C                                    u10501 1ED2  
                                  u10190 0F27                                    u10350 0E39  
                                  u10270 0D87                                    u10510 1EE2  
                                  u10430 1EA3                                    u10191 0F26  
                                  u10351 0E38                                    u10271 0D86  
                                  u10511 1EE1                                    u10431 1EA2  
                                  u10360 0E4A                                    u10280 0D8F  
                                  u10520 1EEF                                    u10440 1EA9  
                                  u10600 1787                                    u10361 0E49  
                                  u10281 0D8E                                    u10521 1EEE  
                                  u10441 1EA8                                    u10601 1786  
                                  u10370 0E5D                                    u10290 0D97  
                                  u10530 1EFC                                    u10450 1EAF  
                                  u10610 178E                                    u10371 0E5C  
                                  u10291 0D96                                    u10531 1EFB  
                                  u10451 1EAE                                    u10611 178D  
                                  u10380 0E75                                    u10460 1EBB  
                                  u10620 17A1                                    u10540 175B  
                                  u10381 0E74                                    u10461 1EBA  
                                  u10621 17A0                                    u10541 175A  
                                  u10390 11D3                                    u10470 1EC1  
                                  u10630 17A8                                    u10550 1761  
                                  u10391 11D2                                    u10471 1EC0  
                                  u10631 17A7                                    u10551 1760  
                                  u10480 1EC7                                    u10640 17C8  
                                  u10560 1765                                    u10481 1EC6  
                                  u10641 17C7                                    u10561 1764  
                                  u10490 1ECD                                    u10650 17D3  
                                  u10570 1769                                    u10491 1ECC  
                                  u10651 17D2                                    u10571 1768  
                                  u10660 17E6                                    u10580 176D  
                        __end_of___fttol 1605                                    u10661 17E5  
                                  u10581 176C                                    u10590 1775  
                                  u10670 1FB7                                    u10591 1774  
                                  u10671 1FB6                                    u10680 1FCF  
                                  u10681 1FCE                                    u10690 1FDF  
                                  u10691 1FDE             setDimmerLights_AdjGo@command 0022  
                                  _IOCBF 0396                                    _IOCBN 0395  
                                  _IOCBP 0394                                    _IOCIE 005B  
                                  _IOCIF 0058                          __end_of___lwdiv 19E5  
                 _setDimmerLights_Switch 22C8            __size_of_CC2500_FrequencyCabr 000D  
                                  _RFSW1 00E9                                    _PORTA 000C  
                                  _PORTB 000D                                    _PORTC 000E  
                           ?_setLED_Main 0071                       setRF_Learn@command 0022  
                                  _TRISA 008C                                    _TRISB 008D  
                                  _TRISC 008E             __size_ofi1_setLoad_StatusOff 003A  
                                  _WPUB0 1068                                    _WPUB1 1069  
                                  _WPUB2 106A                                    _TMain 007D  
                          setRF_Learn@rf 0023                                    _MainT 14DD  
                                  _Load1 0220                                    _Temp1 0130  
                       __end_of_TMR0_ISR 0523             __size_of_CC2500_WriteCommand 0015  
                       __end_of_TMR0_Set 2198                                    _getAD 2440  
                          ___awtoft@sign 003B          __end_of_DimmerLights_Exceptions 1E22  
          DimmerLights_Exceptions@status 002A                            ___ftpack@sign 0024  
                         _setLoad_Enable 2277              __size_of_CC2500_ClearRXFIFO 0005  
                          ??_Buzzer_Main 0020              __size_of_CC2500_ClearTXFIFO 0005  
                    CC2500_RxData@loop_f 0025                           __pbitbssCOMMON 0380  
                     Flash_Memory_Read@i 0021                         ?_CC2500_ReadByte 0071  
         __size_of_setLED_Initialization 0012            __end_of_setLED_Initialization 2330  
                           ?_setRF_Learn 0022                                    status 0003  
                                  wtemp0 007E                       _setRF_DimmerLights 0801  
            __size_of_Flash_Memory_Write 0038                   ??_MainT_Initialization 0020  
                      ?_CC2500_SIDLEMode 0071               __size_of_RF_Initialization 0005  
                         ?_RfPointSelect 0071                           setSw_Status@sw 0023  
               setLoad_StatusOff@command 0020         __size_of_DelayOff_Initialization 0005  
                 ?_setLoad_AH_AL_Restore 0071                setDimmerLights_Main@clear 002A  
                  setLoad_Enable@command 0020                   ??_Flash_Memory_Erasing 0020  
                        _getPercentValue 1CF3                       ??_CC2500_SIDLEMode 0024  
                       ?_CC2500_PowerRST 0071                        ??_Sw_DimmerOnFunc 002A  
                   __end_of_getLoad_Safe 2165                        ??_setPercentValue 004C  
                           __end_of_main 2000                      ?_setRF_DimmerLights 0020  
                       ?_CC2500_WriteREG 0022                                ??_ADC_Set 0020  
                __end_of_setDimmerLights 16A5                     _setSw_Initialization 2343  
             __size_of_setLoad_StatusOff 003A                                   ??_main 006C  
                          ___fttol@sign1 0030                             ?_setLog_Code 0071  
                _setControl_Lights_Table 11C7                   ?_Buzzer_Initialization 0071  
                ??_DlyOff_Initialization 0022                  __end_of_PowerFault_Main 2096  
                             _Receive_GO 0381                               _Receive_OK 0382  
                              ??_IOC_ISR 0071                   ?_setDimmerLights_ERROR 0071  
                              ??_IOC_Set 0020          __end_of_DimmerLightsPointSelect 21F4  
                                 ?_MainT 0071                   ?_setDimmerLights_AdjRF 0071  
                              ??_INT_ISR 0075                   ?_setDimmerLights_AdjGo 0022  
               __size_of_setRFSW_Control 00A9                         ??_setRFSW_Status 0023  
                              ??_INT_Set 0020                   ?_setDimmerLights_Clear 0022  
                ??_Switch_Initialization 0025                   __end_of_setLoad_Enable 2287  
                   __end_of_getTemp_Safe 20ED                        i1RfPointSelect@rf 0072  
                   ??_setRF_DimmerLights 0021                                   ?_getAD 0020  
                            _DlyOff_Main 1349                                   _ADCON0 009D  
                                 _ADCON1 009E                                ??_RF_Main 006C  
                                 _ADRESH 009C                                   _ADRESL 009B  
             i1setLoad_StatusOff@command 0071                        ?_getPowerFault_AD 0071  
                         setRF_Enable@rf 0023                         __end_of___awtoft 24FD  
                                 _ANSELA 018C                                   _ANSELB 018D  
                                 _ANSELC 018E                         __end_of___ftpack 1E96  
                                 _IOCBF2 1CB2                  _setDimmerLights_Trigger 22B7  
                                 i1l9330 04AB                                   i1l9331 04AA  
                                 i1l9324 0522                                   i1l9340 0447  
                                 i1l9332 03F0                                   i1l9341 0410  
                                 i1l9333 03D3                                   i1l9325 0373  
                                 i1l9350 04E8                                   i1l9342 042B  
                                 i1l9334 03CC                                   i1l9326 0372  
                                 i1l9318 0011                                   i1l9351 04E7  
                                 i1l9343 042A                                   i1l9335 03D2  
                                 i1l9327 0371                                   i1l9352 050E  
                                 i1l9328 04E9                                   i1l9344 0446  
                                 i1l9336 03EF                                   i1l9353 0521  
                                 i1l9329 04AC                                   i1l9345 04A8  
                                 i1l9337 03E8                                   i1l9346 046D  
                                 i1l9338 03EE                                   i1l9354 0522  
                                 i1l9339 04A9                                   i1l9347 046C  
                                 i1l9348 04A7                                   i1l9364 2342  
                                 i1l9357 231D                                   i1l9349 04A6  
                                 i1l9365 2342                                   i1l9358 231D  
                                 i1l9374 268E                                   i1l9375 268D  
                                 i1l9376 2682                                   i1l9377 268C  
                                 i1l9378 268E                                   _FVRCON 0117  
                                 _PMADRH 0192                                   _PMADRL 0191  
                                 _PMDATH 0194                                   _PMDATL 0193  
                                 u540_20 2664                                   u540_21 2663  
                                 _PMCON2 0196                                   u541_20 2669  
                                 u541_21 2668                                   u542_20 2673  
                                 u550_20 038A                                   u542_21 2672  
                                 u550_21 0389                                   u623_20 27DE  
                                 u543_20 267B                                   u551_20 03A3  
                                 u623_21 27DD                                   u543_21 267A  
                                 u551_21 03A2                                   u624_20 27EB  
                                 u560_20 044F                                   u552_20 03B1  
                                 u544_20 0312                                   u624_21 27EA  
                                 u560_21 044E                                   u552_21 03B0  
                                 u544_21 0311                       ??_getPowerFault_AD 0027  
                                 u625_20 27F8                                   u561_20 0466  
                                 u553_20 03B9                                   u545_20 0316  
                                 u625_21 27F7                                   u561_21 0465  
                                 u553_21 03B8                                   u545_21 0315  
                                 u626_20 2178                                   u562_20 0486  
                                 u554_20 03C4                                   u546_20 0322  
                                 _OSCCON 0099                                   u626_21 2177  
                                 u562_21 0485                                   u554_21 03C3  
                                 u546_21 0321                                   u563_20 04B1  
                                 u555_20 03DE                                   u547_20 0354  
                                 u563_21 04B0                                   u555_21 03DD  
                                 u547_21 0353                                   u547_25 0350  
                                 u564_20 04DD                                   u556_20 03F8  
                                 u548_20 036D                                   u564_21 04DC  
                                 u556_21 03F7                                   u548_21 036C  
                                 u564_25 04D9                                   u565_20 0501  
                                 u557_20 0408                                   u549_20 037C  
                                 u565_21 0500                                   u557_21 0407  
                                 u549_21 037B                                   u565_25 04FD  
                     __size_of_Load_Main 02F6                                   u566_20 0516  
                                 u558_20 0420                                   u566_21 0515  
                                 u558_21 041F                                   u559_20 043B  
                                 u567_20 2334                                   u559_21 043A  
                                 u567_21 2333                                   u568_20 2338  
                                 u568_21 2337                                   u569_20 2317  
                                 u569_21 2316                                   _TMR0IE 005D  
                                 _TMR0IF 005A                                   _IO_Set 2396  
                     DelayTime_1us@count 0020                               _VarProduct 01C5  
                  _Dimmer_Initialization 20D0           __size_of_CC2500_PowerOnInitial 0016  
          __end_of_CC2500_PowerOnInitial 2396                                   _Dimmer 00B9  
                                 _DlySw1 00D3              __size_of_setLoad_Exceptions 004D  
             __end_of_Mcu_Initialization 23C8                      __end_of_Buzzer_Main 0B6C  
                                 _Memory 00EA                                   _Timer0 00EB  
     __end_of_setDimmerLights_TriggerAdj 22FB               _setDimmerLights_TriggerAdj 22EA  
          setDimmerLights_Switch@command 0022                                   ___wmul 07DB  
                              ??___ftadd 0052             __size_of_DelayOffPointSelect 000F  
                              ??___ftdiv 0042                    setDimmerLights@lights 0026  
                              ??___ftmul 0042                                ??___fttol 002C  
           ?_Flash_Memory_Initialization 0071                                ??___lwdiv 0024  
                        i1_RfPointSelect 2171              setDimmerLights_AdjRF@lights 0060  
                 ??_setDimmerLights_Main 002A                                   _r_data 00C2  
                                 _s_data 00C3                                   _setLED 13CF  
                       _DimmerLightsIntr 00BA                    ?_setSw_Initialization 0071  
                  setDimmerLights@status 0024                                   _setBuz 12C6  
                     __size_of_Temp_Main 0004              __end_of_Load_Initialization 222C  
       ??_setDimmerLights_Initialization 0022          ?_setDimmerLights_Initialization 0071  
                                 clrloop 20CB                    ___ftmul@f3_as_product 0047  
           ??_getDimmerLights_StatusFlag 0020                 Flash_Memory_Read@address 0022  
                      RfSWPointSelect@sw 0021                         ??_setRF_RxStatus 0023  
                  __end_of_SwPointSelect 221E                          ?_setLoad_Enable 0071  
                getPowerFault_AD@channel 002B                            ?_setRF_Enable 0022  
                         _setTemp_Enable 2143                          _RfSWPointSelect 224A  
           __size_of_Flash_Memory_Modify 007A              __size_of_DimmerLights_Close 002D  
                __size_of_LedPointSelect 002B                      Flash_Memory_Write@i 0021  
           __size_of_Flash_Memory_Unlock 0009                               _TouchPower 20FD  
                      ?_Sw_DimmerAdjFunc 0071              __size_of_CC2500_InitPATable 0027  
                    CC2500_TxData@loop_e 0025                  __end_of_getPercentValue 1D50  
   __end_of_setPowerFault_Initialization 2202    __size_of_setPowerFault_Initialization 000E  
           _setPowerFault_Initialization 21F4              ??_PowerFault_Initialization 0021  
                        ??_RfPointSelect 0020              setDimmerLights_AdjGo@lights 0023  
                              ?_LED_Main 0071                               ___ftadd@f1 004C  
                             ___ftadd@f2 004F                         _setRF_Main$19191 006B  
                     ??_Sw_DimmerAdjFunc 0024                      setSw_Enable@command 0022  
                             ___ftdiv@f1 003F                               ___ftdiv@f2 003C  
                             ___ftdiv@f3 0047                        ?_Sw_DimmerOffFunc 0071  
                             ___awtoft@c 0036             ?_DimmerLights_Initialization 0071  
                             ___ftmul@f1 003C                               ___ftmul@f2 003F  
                          __end_of_MainT 1566                               ___fttol@f1 0028  
                         __pcstackCOMMON 0071                       ??_Sw_DimmerOffFunc 0028  
                           __pidataBANK3 2420                            __end_of_getAD 2464  
                              ?_TMR0_ISR 0071                                ?_TMR0_Set 0071  
                 setLoad_AH_AL_Restore@i 0021             __size_of_setDimmerLights_Adj 004C  
                     _LED_Initialization 21D9                ??_setControl_Lights_Table 0067  
       __size_of_DimmerLights_Exceptions 0070                         ??_DelayTimejudge 0020  
            ?_getDimmerLights_StatusFlag 0071                __size_of_setLoad_StatusOn 003E  
          ??_Flash_Memory_Initialization 0050                 __size_of_setRF_ReceiveGO 000D  
                       ?_setDimmerLights 0024                        __end_of_Load_Main 030E  
                       ?_PowerFault_Main 0071                 __end_of_setDimmerReClock 231E  
                     __size_of_getRxData 0078                      ?_LED_Initialization 0071  
                 __end_of_setTemp_Enable 214E                        ?_CC2500_WriteByte 0071  
                                ??_MainT 002A                           ??_setRF_Enable 0023  
                         _DimmerLights11 0079                     __size_of_setLED_Main 0053  
              ??_setDimmerLights_Trigger 0023                                  ??_getAD 0022  
                    _Temp_Initialization 2086                       ??_CC2500_WriteByte 0020  
             ??_setPowerFault_Exceptions 002B             setDimmerLights_Switch@lights 0023  
                             __pbssBANK0 006C                               __pbssBANK1 00A0  
                             __pbssBANK2 0120                               __pbssBANK3 01A0  
                             __pbssBANK4 0220                              _Buzzer_Main 0AA0  
                      ??_setRFSW_Control 002A                        __end_of_Temp_Main 2092  
                 ?_Dimmer_Initialization 0071                                  ?_IO_Set 0071  
                             ??_LED_Main 0025                  _DelayOff_Initialization 20AA  
                             __pnvCOMMON 007D                    __size_of_getLoad_Safe 000C  
          ?_setPowerFault_Initialization 0071                               _getPF_Safe 20ED  
                          ??_Switch_Main 0030                           DelayTime_1us@i 0022  
                         DelayTime_1us@j 0024                     ??_LED_Initialization 0025  
                           _DimmerLights 006C                        LedPointSelect@led 0021  
                __end_ofi1_RfPointSelect 217E                      i1_setLoad_StatusOff 27C6  
                     __size_of_setINT_GO 000A                   __size_of_DelayOff_Main 0005  
                   __size_of_setRF_Learn 000F                              setBuz@count 0029  
                             __pmaintext 1F87                      _CC2500_WriteCommand 236B  
                   ?_Temp_Initialization 0071         __size_of_DimmerLightsPointSelect 000E  
                       ??_setDelayOff_GO 0025            ??_DimmerLights_Initialization 0024  
                                ?___wmul 0020                               ??_TMR0_ISR 0073  
                          ?_setTemp_Main 0071                               ??_TMR0_Set 0020  
                             _getLoad_AD 0917                               __pintentry 0004  
                 ??_setSw_Initialization 0024                            ?_setSw_Enable 0071  
                     __size_of_setTxData 00F0                  ?_setDimmerLights_Switch 0022  
                             __ptext4100 20F5                               __ptext4101 0523  
                                ?_setLED 0022                               __ptext4110 2380  
                             __ptext4102 1054                               __ptext4111 1246  
                             __ptext4103 2123                               __ptext4200 2143  
                             __ptext4120 14DD                               __ptext4112 2632  
                             __ptext4104 0C5C                               __ptext4201 210F  
                             __ptext4121 21BF                               __ptext4113 1D50  
                             __ptext4105 21D9                               __ptext4210 1BA4  
                             __ptext4202 2528                               __ptext4130 20AA  
                             __ptext4122 231E                               __ptext4114 2343  
                             __ptext4106 2464                               __ptext4211 0801  
                             __ptext4203 18DA                               __ptext4131 20A5  
                             __ptext4123 1A2C                               __ptext4115 16A5  
                             __ptext4107 1DB2                               __ptext4220 217E  
                             __ptext4212 222C                               __ptext4204 2356  
                             __ptext4140 09D6                               __ptext4132 21A5  
                             __ptext4124 1CF3                               __ptext4116 1A74  
                             __ptext4108 1456                               __ptext4221 030E  
                             __ptext4213 26EE                               __ptext4205 18A0  
                             __ptext4141 085F                               __ptext4133 20A0  
                             __ptext4125 1C96                               __ptext4117 25AB  
                             __ptext4109 20AF                               __ptext4222 2660  
                             __ptext4214 24FD                               __ptext4206 2138  
                             __ptext4150 2096                               __ptext4142 06AB  
                             __ptext4134 209B                               __ptext4126 1ABF  
                             __ptext4118 21CC                               __ptext4223 2171  
                             __ptext4215 2488                               __ptext4207 223B  
                             __ptext4151 208A                               __ptext4143 2268  
                             __ptext4135 24AE                               __ptext4127 1605  
                             __ptext4119 2756                               __ptext4224 27C6  
                             __ptext4216 0AA0                               __ptext4208 20D0  
                             __ptext4160 2553                               __ptext4152 221E  
                             __ptext4144 2106                               __ptext4136 268F  
                             __ptext4128 21B2                               __ptext4225 230C  
                             __ptext4217 212D                               __ptext4209 21E6  
                             __ptext4161 25D7                               __ptext4153 2086  
                             __ptext4145 257F                               __ptext4137 10CE  
                             __ptext4129 1349                               __ptext4226 0000  
                             __ptext4170 23E2                               __ptext4162 2604  
                             __ptext4154 23AF                               __ptext4146 22A7  
                             __ptext4138 1000                               __ptext4090 195B  
                             __ptext4219 2330                               __ptext4171 271F  
                             __ptext4163 1F0E                               __ptext4155 1C43  
                             __ptext4147 19E5                               __ptext4139 24D5  
                             __ptext4091 0D5E                               __ptext4180 2210  
                             __ptext4172 2259                               __ptext4164 0B6C  
                             __ptext4156 22FB                               __ptext4148 114A  
                             __ptext4092 0E85                               __ptext4084 20B9  
                             __ptext4181 20FD                               __ptext4173 2400  
                             __ptext4165 22C8                               __ptext4157 22EA  
                             __ptext4149 0917                               __ptext4093 0018  
                             __ptext4085 174E                               __ptext4190 26BE  
                             __ptext4182 224A                               __ptext4174 236B  
                             __ptext4166 22B7                               __ptext4158 22D9  
                             __ptext4094 1867                               __ptext4086 1E96  
                             __ptext4191 23C8                               __ptext4183 20DE  
                             __ptext4175 12C6                               __ptext4167 2297  
                             __ptext4159 13CF                               __ptext4095 1918  
                             __ptext4087 11C7                               __ptext4192 2440  
                             __ptext4184 2202                               __ptext4176 1566  
                             __ptext4168 2287                               __ptext4096 1B0B  
                             __ptext4088 2092                               __ptext4193 2119  
                             __ptext4185 21F4                               __ptext4177 1E22  
                             __ptext4169 2165                               __ptext4097 1B57  
                             __ptext4089 208E                               __ptext4194 2198  
                             __ptext4186 214E                               __ptext4178 199E  
                             __ptext4098 20B4                               __ptext4195 20BE  
                             __ptext4187 2159                               __ptext4179 07DB  
                             __ptext4099 1BF3                               __ptext4196 20D7  
                             __ptext4188 20ED                               __ptext4197 218B  
                             __ptext4189 20E5                               __ptext4198 2396  
                             __ptext4199 2277                   __size_of_DelayTime_1us 0031  
                                _ADC_Set 20D7                _PowerFault_Initialization 208A  
                                ?_setBuz 0026                                ?___awtoft 0036  
                              ?___ftpack 0020                               _getTemp_AD 114A  
           __end_of_setRF_Initialization 20E5                    __size_of_getTemp_Safe 0008  
                          ?_setSw_Status 0022                       _setRFSW_AdjControl 195B  
                __end_of_RfSWPointSelect 2259                        Sw_DimmerOnFunc@sw 002B  
                                i1l10602 27E5                                  i1l10603 27F2  
                                i1l10604 27FF                                  i1l10605 27FF  
                                i1l22400 267B                                  i1l15201 218A  
                                i1l22402 2682                                  i1l22410 0319  
                                i1l22420 0373                                  i1l22412 031A  
                                i1l22404 030E                                  i1l22500 2338  
                                i1l22430 03B1                                  i1l22422 037C  
                                i1l22414 0322                                  i1l22406 0312  
                                i1l22510 217F                                  i1l22502 233A  
                                i1l22504 230C                                  i1l22440 03DE  
                                i1l22432 03B9                                  i1l22424 038A  
                                i1l22416 0354                                  i1l22408 0316  
                                i1l22512 2183                                  i1l22506 230F  
                                i1l22450 0410                                  i1l22442 03E8  
                                i1l22434 03C4                                  i1l22426 0393  
                                i1l22418 036D                                  i1l22508 2317  
                                i1l22460 044F                                  i1l22452 0420  
                                i1l22436 03CC                                  i1l22444 03F0  
                                i1l22428 03A3                                  i1l22390 2664  
                                i1l22470 0486                                  i1l22462 0456  
                                i1l22454 042B                                  i1l22446 03F8  
                                i1l22438 03D3                                  i1l22382 0008  
                                i1l22800 27DE                                  i1l22392 2669  
                                i1l22480 04B1                                  i1l22472 049B  
                                i1l22464 0466                                  i1l22456 043B  
                                i1l22448 0408                                  i1l22384 000B  
                                i1l22802 27E5                                  i1l22810 2172  
                                i1l22394 266B                                  i1l22490 04F3  
                                i1l22482 04DD                                  i1l22474 049D  
                                i1l22466 046D                                  i1l22458 0447  
                                i1l22386 000E                                  i1l22804 27EB  
                                i1l15188 217D                                  i1l22812 2178  
                                i1l22396 2673                                  i1l22388 2660  
                                i1l22492 0501                                  i1l22484 04E3  
                                i1l22476 049E                                  i1l22468 0476  
                                i1l15189 217D                                  i1l22806 27F2  
                                i1l22398 2676                                  i1l22494 0516  
                                i1l22486 04E5                                  i1l22478 04AC  
                                i1l22808 27F8                                  i1l22488 04E9  
                                i1l22496 2330                                  i1l22498 2334  
                                i1l22794 27C7                                  i1l22796 27D1  
                                i1l22798 27D8                     ?i1_setLoad_StatusOff 0071  
                                _IOC_ISR 2660                          ?_setTemp_Enable 0071  
                                _IOC_Set 2198                     __size_of_setLog_Code 004B  
                                _INT_ISR 2330                                  _INT_Set 20BE  
                   ?_CC2500_WriteCommand 0071                        _Flash_Memory_Main 1BF3  
                      _Flash_Memory_Read 23C8                   __size_of_CC2500_RxData 007C  
                 __size_of_CC2500_TxData 0054                      ?_setRFSW_AdjControl 0071  
    setDimmerLights_TriggerERROR@command 0022                             _getLoad_Safe 2159  
                            setTxData@rf 0023                                  _RF_Data 00A0  
                                _RF_Main 20B9                       ?_Flash_Memory_Main 0071  
                     ?_Flash_Memory_Read 0071          __end_of_setControl_Lights_Table 1246  
                             __stringtab 1800                              ?_TouchPower 0071  
                        _Sw_DimmerOnFunc 1D50                          _setPercentValue 1A2C  
                ??_setLoad_AH_AL_Restore 0020                            setLog_Code@rf 002B  
                       ?_getPercentValue 0071                                  _Dimmer1 00E4  
           __end_of_CC2500_FrequencyCabr 21B2                          __size_of_IO_Set 0019  
                    ??_Flash_Memory_Main 0027                      ??_Flash_Memory_Read 0020  
                                _VarLED1 00DC                                  _VarLED2 00E0  
                      __end_of_getRxData 1F0E               __end_of_setPowerFault_Main 0E85  
               _CC2500_registers_address 1801                           RF_RxDisable@rf 0024  
                  ??_Temp_Initialization 0021          __end_of_setDimmerLights_Trigger 22C8  
                                _Product 006F                     ??_setRFSW_AdjControl 0064  
                           _getTemp_Safe 20E5                           ??_setTemp_Main 002D  
         __end_of_setDimmerLights_Switch 22D9                                  ___ftadd 06AB  
                         ??_setSw_Enable 0022                                  ___ftdiv 085F  
                        __size_of___wmul 0025                                  ___ftmul 09D6  
                                ___fttol 1566                      __end_of_Switch_Main 20B9  
                                ___lwdiv 199E                  ??_Buzzer_Initialization 0020  
               ??_setOverTemp_Exceptions 002B                               ??___awtoft 0039  
                             ??___ftpack 0025                          __size_of_setLED 0087  
                   setRFSW_AdjControl@sw 0066                  ??_setDimmerLights_ERROR 0024  
                        __size_of_setBuz 0083                           ??_setSw_Status 0023  
                ??_setDimmerLights_AdjRF 005F                  ??_setDimmerLights_AdjGo 0023  
              __size_of_CC2500_SIDLEMode 0005                  ??_setDimmerLights_Clear 0023  
                    Sw_DimmerOnFunc@Idle 002A                    ??i1_setLoad_StatusOff 0072  
                           __size_of_ISR 0011                __end_of_Flash_Memory_Main 1C43  
              __end_of_Flash_Memory_Read 23E2                               _setRF_Main 174E  
                          _DelayOff_Main 20AF                        _DimmerLights_Main 20F5  
                      __end_of_setINT_GO 2123           __size_of_DlyOff_Initialization 000C  
                  ??_CC2500_WriteCommand 0022            __end_of_DlyOff_Initialization 2171  
                      ??_setRF_ReceiveGO 0074               __end_of_CC2500_ClearRXFIFO 20A5  
               ??_setTemp_Initialization 0020               __end_of_CC2500_ClearTXFIFO 20A0  
          DimmerLightsPointSelect@lights 0021                             ?_DlyOff_Main 0071  
                     ?_DimmerLights_Main 0071                           _LedPointSelect 2528  
                    _DelayOffPointSelect 222C           __size_of_Switch_Initialization 000A  
          __end_of_Switch_Initialization 212D                     end_of_initialization 27C3  
              ??_DelayOff_Initialization 0023                               _setLoad_GO 2138  
                      _CC2500_InitSetREG 268F                            _DelayTime_1us 26EE  
                      __end_of_setTxData 0C5C               __end_of_Flash_Memory_Write 278E  
                                init_ram 20C4                       ?_CC2500_InitSetREG 0071  
                    ??_DimmerLights_Main 002C                     Flash_Memory_Read@ret 0023  
                                initloop 20C5                               _setSw_Main 0523  
                  CC2500_ReadByte@loop_b 0021                        _CC2500_ReadStatus 2400  
                            ?_getPF_Safe 0071                   __size_of_setLoad_Count 0015  
                   Flash_Memory_Modify@i 0026                    _setLED_Initialization 231E  
                          _CC2500_Enable 0380                         ?i1_RfPointSelect 0071  
                     ?_CC2500_ReadStatus 0071                         setRFSW_Status@sw 0023  
          __size_of_MainT_Initialization 000A                 __size_of_CC2500_ReadByte 002B  
                          _CC2500_RxData 10CE                            _CC2500_TxData 1000  
                    ??_CC2500_InitSetREG 0025                     __end_of_setRF_Enable 25AB  
         ??_setPowerFault_Initialization 0020              ?_setDimmerLights_TriggerAdj 0022  
              __size_of_getPowerFault_AD 0047            __size_of_Flash_Memory_Erasing 000D  
                   ?_DelayOffPointSelect 0071                      _Flash_Memory_Modify 1054  
                _DimmerLights_Exceptions 1DB2                              ?_getLoad_AD 0071  
                    _Flash_Memory_Unlock 2106                      ??_CC2500_ReadStatus 0022  
                 setRF_Initialization@rf 0071                         _setLoad_StatusOn 18DA  
       getDimmerLights_StatusFlag@Status 0021                  CC2500_InitSetREG@loop_c 0028  
                            ?_getTemp_AD 0071                setLoad_Exceptions@command 002C  
                    __size_of_TouchPower 0009                 setLED_Initialization@led 0024  
                 setSw_Initialization@sw 0024                __end_of_DimmerLights_Main 20FD  
                     _Mcu_Initialization 23AF                         ??_setLoad_Enable 0020  
               __size_of_CC2500_PowerRST 0037                           ?_DelayOff_Main 0071  
                       ?_RfSWPointSelect 0071                   __end_of_LedPointSelect 2553  
                __end_of_Sw_DimmerOnFunc 1DB2                  __end_of_setPercentValue 1A74  
               __size_of_CC2500_WriteREG 001E                __end_of_CC2500_InitSetREG 26BE  
                    ?_Mcu_Initialization 0071         __end_of_setPowerFault_Exceptions 195B  
                   ?_Flash_Memory_Modify 0071              __size_of_setRF_DimmerLights 005E  
                         ?_DelayTime_1us 0020                      _setDimmerLights_Adj 1ABF  
                   ?_Flash_Memory_Unlock 0071                __end_of_CC2500_ReadStatus 2420  
                          ?_RF_RxDisable 0071               __end_of_setLoad_Exceptions 1BA4  
                            ___ftdiv@exp 004A                           __end_of_IO_Set 23AF  
                   _setRF_Initialization 20DE                              _Switch_Main 20B4  
            setDimmerLights_Clear@lights 0023                        __size_of_LED_Main 000D  
                         ?_CC2500_RxData 0071                           ?_CC2500_TxData 0071  
                _DimmerLightsPointSelect 21E6                              ___ftmul@exp 0046  
                  _CC2500_PowerOnInitial 2380                     ??_Mcu_Initialization 0021  
                  ??_DelayOffPointSelect 0020                     ?_setDimmerLights_Adj 0025  
              __size_of_Sw_DimmerAdjFunc 002E                     setRF_DimmerLights@on 0020  
                         __end_of___wmul 0800                             setRF_Main@rf 006A  
                      __size_of_TMR0_ISR 0215          __size_of_setOverTemp_Exceptions 004C  
                      __size_of_TMR0_Set 000D            __size_of_setDimmerLights_Main 0087  
                         __end_of_setLED 1456                           __end_of_setBuz 1349  
                          _setLoad_Count 2356                     _CC2500_FrequencyCabr 21A5  
                setLoad_StatusOn@command 0020                __size_of_Sw_DimmerOffFunc 0080  
             __size_of_Flash_Memory_Main 0050               __size_of_Flash_Memory_Read 001A  
                            ?_setRF_Main 0071                          _setRFSW_Control 16A5  
                    __size_of_getPF_Safe 0008                        ?_setDimmerReClock 0071  
                    start_initialization 278E                        _setRF_DimmerValue 1867  
                        ?_LedPointSelect 0071               __end_of_DimmerLights_Close 2604  
                              _Load_Main 0018                  setLoad_StatusOff@lights 0021  
                            __end_of_ISR 0015                    ??_Flash_Memory_Modify 0024  
           __size_of_Load_Initialization 000E       __size_of_PowerFault_Initialization 0004  
                     ??_setDimmerReClock 0071                       ?_setRF_DimmerValue 0071  
             __end_of_CC2500_InitPATable 24D5          __size_of_setTemp_Initialization 000B  
                  ??_Flash_Memory_Unlock 0020                  ??_Dimmer_Initialization 0020  
                   __end_of_setTemp_Main 1000                              ?_setLoad_GO 0071  
                         ??_RF_RxDisable 0024                     __end_of_setSw_Enable 22B7  
                        RfPointSelect@rf 0021                      __size_of_getLoad_AD 00BF  
                           ?_Buzzer_Main 0071                                 ??_IO_Set 0020  
                              _VarErrLED 00D8                              ?_setSw_Main 0071  
                    ??_setRF_DimmerValue 0061                      __size_of_getTemp_AD 007D  
                 ?_setLED_Initialization 0071                     __end_of_setSw_Status 2297  
                     Sw_DimmerAdjFunc@sw 0024                    ?_setRF_Initialization 0071  
              i1setLoad_StatusOff@lights 0072                                _VarMemory 01A0  
                __size_of_setRFSW_Status 0010                    __end_of_RfPointSelect 2210  
              __size_of_CC2500_WriteByte 0026                                _VarTimer0 00CC  
                              _Temp_Main 208E                ??_DimmerLights_Exceptions 002A  
          setOverTemp_Exceptions@command 002C                                _Rx_Length 00BE  
                setRF_DimmerValue@lights 0063                    ??_setDimmerLights_Adj 0026  
                               ??___wmul 0024                   __size_of_SwPointSelect 000E  
                              _Tx_Length 00C0                              __pdataBANK3 01C5  
                               ??_setLED 0023                         ??_setTemp_Enable 0020  
                               ?_ADC_Set 0071                                 ??_setBuz 0028  
                        ??_DelayOff_Main 002D                        ??_CC2500_ReadByte 0020  
                         ?_setLoad_Count 0071                         _CC2500_SIDLEMode 20A5  
             __size_of_DimmerLights_Main 0008                __end_of_setRF_DimmerValue 18A0  
                  ?_CC2500_FrequencyCabr 0071                         setINT_GO@command 0020  
                          ??_setLED_Main 0022                        __size_of___awtoft 0028  
                      __size_of___ftpack 0074                                 ?_IOC_ISR 0071  
                            __pbssCOMMON 0078                                 ?_IOC_Set 0071  
                             ?_Load_Main 0071                    setTemp_Enable@command 0020  
                               ?_INT_ISR 0071                      setRF_Enable@command 0022  
                       ?_Sw_DimmerOnFunc 0071                            __pcstackBANK0 0020  
                               ?_INT_Set 0071                         ?_setPercentValue 0071  
                        ??_DelayTime_1us 0022               __size_of_CC2500_InitSetREG 002F  
               __size_of_setDimmerLights 00A0                            DlyOff_Main@sw 002C  
                      ??_CC2500_PowerRST 0026                                 ?_RF_Main 0071  
           setDimmerLights_Clear@command 0022                             ??_TouchPower 0020  
               __size_of_PowerFault_Main 0004                     __size_of_DlyOff_Main 0086  
             __size_of_CC2500_ReadStatus 0020                   _setOverTemp_Exceptions 1B0B  
                          ??_setRF_Learn 0023                        ??_CC2500_WriteREG 0023  
                          _DimmerLights1 013E                    CC2500_WriteREG@w_addr 0024  
                  setDelayOff_GO@command 0023                ??_DimmerLightsPointSelect 0020  
         __size_of_setLoad_AH_AL_Restore 0030                    __size_of_setRF_Enable 002C  
                        ??_CC2500_RxData 0024            __end_of_setLoad_AH_AL_Restore 26EE  
                __size_of_setRF_RxStatus 000F                          ??_CC2500_TxData 0024  
                              __pnvBANK0 006F                                __pnvBANK1 00EA  
            __size_of_LED_Initialization 000D                   ?_CC2500_PowerOnInitial 0071  
                             ?_Temp_Main 0071                      __size_of_setRF_Main 00B2  
                       ___lwdiv@dividend 0022                    DelayOffPointSelect@sw 0021  
                             setBuz@time 0026                      setDelayOff_GO@value 0024  
               ?_setControl_Lights_Table 0071                   _setTemp_Initialization 214E  
                       _getPowerFault_AD 19E5        __size_of_setPowerFault_Exceptions 0043  
    __end_of_Flash_Memory_Initialization 0D5E              _Flash_Memory_Initialization 0C5C  
              ?_setPowerFault_Exceptions 0071                                 ?___ftadd 004C  
                              _getRxData 1E96                                 ?___ftdiv 003C  
                               ?___ftmul 003C                                 ?___fttol 0028  
                               ?___lwdiv 0020                  __end_of_setRFSW_Control 174E  
                        _setRF_ReceiveGO 217E                      __size_of_setLoad_GO 000B  
          __size_of_setSw_Initialization 0013                                __pstrings 1800  
         __size_of_Buzzer_Initialization 000B            __end_of_Buzzer_Initialization 2138  
                       getPercentValue@i 005C                         setPercentValue@i 004D  
                          ??_setLog_Code 002A                       __end_of_TouchPower 2106  
                     _setPowerFault_Main 0D5E       setDimmerLights_TriggerERROR@lights 0023  
         __size_of_setDimmerLights_ERROR 005D                 ?_setDimmerLights_Trigger 0022  
                        DelayTimejudge@i 0021                      __size_of_setSw_Main 0188  
          __end_of_setDimmerLights_ERROR 1CF3             CC2500_ReadStatus@status_addr 0023  
         __size_of_setDimmerLights_AdjRF 0024           __size_of_setDimmerLights_AdjGo 0011  
          __end_of_setDimmerLights_AdjRF 2488            __end_of_setDimmerLights_AdjGo 22EA  
                 CC2500_WriteByte@loop_a 0021           __size_of_setDimmerLights_Clear 0011  
          __end_of_setDimmerLights_Clear 230C                           __size_of_MainT 0089  
                              _r_address 00C1                      ?_setPowerFault_Main 0071  
                         __size_of_getAD 0024                             _setRF_Enable 257F  
                       ___lwdiv@quotient 0025                  __size_of_DelayTimejudge 004F  
                          _SwPointSelect 2210                       Sw_DimmerOffFunc@sw 002A  
                              _setINT_GO 2119                      __end_of_setLED_Main 1C96  
               __end_of_setLoad_StatusOn 1918                   ??_setRF_Initialization 0020  
            __end_of_Temp_Initialization 208A                        _CC2500_rfSettings 1830  
                         ___wmul@product 0024                                 _LED_Main 21BF  
                           ??_getPF_Safe 0020                          SwPointSelect@sw 0021  
               CC2500_InitPATable@loop_d 0027                                _setTxData 0B6C  
    __end_of_DimmerLights_Initialization 21BF              _DimmerLights_Initialization 21B2  
                     _CC2500_ClearRXFIFO 20A0                       _CC2500_ClearTXFIFO 209B  
         setDimmerLights_Trigger@command 0022                 setRF_DimmerLights@lights 0024  
                               _GO_nDONE 04E9                      __end_of_setRF_Learn 2277  
                   ??_setPowerFault_Main 002D                 __size_of_getPercentValue 005D  
               setRF_DimmerLights@status 0023                   setRF_ReceiveGO@command 0073  
            __size_of_setRFSW_AdjControl 0043                       _Flash_Memory_Write 2756  
                             ?_getRxData 0071                                 _TMR0_ISR 030E  
                           ??_getLoad_AD 0027                   CC2500_InitSetREG@temp1 0026  
                 CC2500_InitSetREG@temp2 0027              __end_ofi1_setLoad_StatusOff 2800  
                      setRF_ReceiveGO@rf 0074                                 _TMR0_Set 218B  
                       _Sw_DimmerAdjFunc 2632                      ?_CC2500_ClearRXFIFO 0071  
                    ?_CC2500_ClearTXFIFO 0071                          ??_setLoad_Count 0020  
      setDimmerLights_TriggerAdj@command 0022                                 _RF_Count 00B5  
                   __end_of_RF_RxDisable 25D7                             ??_getTemp_AD 0027  
            __end_of_CC2500_WriteCommand 2380                   ??_CC2500_FrequencyCabr 0026  
                DlyOff_Initialization@sw 0022                         __size_of_ADC_Set 0007  
                      ___wmul@multiplier 0020               __size_of_setRF_DimmerValue 0039  
                    ?_Flash_Memory_Write 0071                         _Sw_DimmerOffFunc 1246  
                  __size_of_setTemp_Main 017B             __end_of_MainT_Initialization 2119  
                __size_of_setDelayOff_GO 0079                    __size_of_setSw_Enable 0010  
                               _DelayOff 00B8                             setSw_Main@sw 002F  
                            ??_Load_Main 002D                       __end_of_getPF_Safe 20F5  
                       __size_of_IOC_ISR 002F                         __size_of_IOC_Set 000D  
           __end_of_Flash_Memory_Erasing 21D9                           ?_SwPointSelect 0071  
                            getAD@adcon0 0026                              getAD@adcon1 0020  
                       __size_of_INT_ISR 0013                           setLED_Main@led 0024  
                       __size_of_INT_Set 0006                      __end_of_setLog_Code 1ABF  
                  _DlyOff_Initialization 2165                    __size_of_setSw_Status 0010  
                             ?_setINT_GO 0071                     ??_CC2500_ClearRXFIFO 0024  
                   ??_CC2500_ClearTXFIFO 0024                         __size_of_RF_Main 0005  
                 setLoad_StatusOn@lights 0021                       __end_of_getLoad_AD 09D6  
                  _Switch_Initialization 2123                     ??_Flash_Memory_Write 0020  
                      ??_setDimmerLights 0025                           _setRFSW_Status 2297  
                   __size_of_Buzzer_Main 00CC                       __end_of_getTemp_AD 11C7  
                             ?_setTxData 0071                             ?_Switch_Main 0071  
                       _CC2500_WriteByte 2488                                 _VarTMain 0120  
                      getLoad_AD@channel 002C             Flash_Memory_Initialization@i 0051  
                __end_of_setRF_ReceiveGO 218B                              ??_Temp_Main 0030  
                      ??_PowerFault_Main 002F                        setRFSW_Control@sw 002B  
                    _Load_Initialization 221E                                setLED@led 0023  
                               _RxStatus 0383     __end_of_setDimmerLights_TriggerERROR 257F  
  __size_of_setDimmerLights_TriggerERROR 002C             _setDimmerLights_TriggerERROR 2553  
                               _TxStatus 0386                             _setTemp_Main 0E85  
                     _setLoad_Exceptions 1B57                         __size_of___ftadd 0130  
                       ?_setRFSW_Control 0071                         __size_of___ftdiv 00B8  
                           _setSw_Enable 22A7                         __size_of___ftmul 00CA  
                       __size_of___fttol 009F                         __size_of___lwdiv 0047  
               __size_ofi1_RfPointSelect 000D                                 ___awtoft 24D5  
                       ??_LedPointSelect 0020                                 ___ftpack 1E22  
                           _setSw_Status 2287                        getTemp_AD@channel 002B  
                           ??_setRF_Main 0069                     CC2500_WriteREG@value 0022  
                            _setLED_Main 1C43                      ?_setLoad_Exceptions 0071  
                  setRFSW_Status@command 0022               __end_of_setRF_DimmerLights 085F  
               ?_DelayOff_Initialization 0071                         setDelayOff_GO@sw 0027  
                        ___lwdiv@divisor 0020                     ?_Load_Initialization 0071  
                        ___lwdiv@counter 0027                             ??_setLoad_GO 0020  
                ??_setLED_Initialization 0024                 __size_of_RfSWPointSelect 000F  
         __size_of_Dimmer_Initialization 0007                   __end_of_setRFSW_Status 22A7  
          __end_of_Dimmer_Initialization 20D7             __end_of_setDimmerLights_Main 14DD  
            setDimmerLights_ERROR@lights 0025                             ??_setSw_Main 002C  
                          setLED@command 0022                            __size_of_main 0079  
                            _setRF_Learn 2268                 __end_of_CC2500_SIDLEMode 20AA  
                         _setRF_RxStatus 2259               setDimmerLights_Main@lights 002B  
            __end_of_DelayOffPointSelect 223B               CC2500_WriteCommand@command 0023  
                     _DimmerLights_Close 25D7                 ??_setDimmerLights_Switch 0023  
              __size_of_setDimmerReClock 0012                     ??_setLoad_Exceptions 002B  
                        _CC2500_ReadByte 24FD                                 clear_ram 20CA  
                     _CC2500_InitPATable 24AE      __size_of_getDimmerLights_StatusFlag 000F  
          setDimmerLights_Trigger@lights 0023                       __end_of_setRF_Main 1800  
            __size_of_Mcu_Initialization 0019                     _CC2500_patable_vaule 185F  
                            ??_getRxData 0068                      ?_DimmerLights_Close 0071  
       setDimmerLights_TriggerAdj@lights 0023            ?_setDimmerLights_TriggerERROR 0022  
                    ?_CC2500_InitPATable 0071                          _CC2500_PowerRST 271F  
                     __end_of_setLoad_GO 2143              __end_of_Flash_Memory_Modify 10CE  
                      ??_getPercentValue 0059                              _setLog_Code 1A74  
                  setRF_RxStatus@command 0022              __end_of_Flash_Memory_Unlock 210F  
                        ??_SwPointSelect 0020                          _CC2500_WriteREG 23E2  
                     __end_of_setSw_Main 06AB                        setLoad_GO@command 0020  
                  ??_Load_Initialization 0022                            _Transceive_GO 0384  
                          _Transceive_OK 0385                     setLoad_Count@command 0021  
                 ?_DlyOff_Initialization 0071                  ?_setOverTemp_Exceptions 0071  
                         _DelayTimejudge 1BA4                            ?_getLoad_Safe 0071  
               __end_of_getPowerFault_AD 1A2C                     ??_DimmerLights_Close 0022  
                            ??_setINT_GO 0020                                 intlevel1 0000  
                   ??_CC2500_InitPATable 0025                  __size_of_setLoad_Enable 0010  
                 ?_Switch_Initialization 0071                   __end_of_setRF_RxStatus 2268  
                        ?_setRFSW_Status 0022                  ??_CC2500_PowerOnInitial 0029  
 __end_of_setDimmerLights_Initialization 2632  __size_of_setDimmerLights_Initialization 002E  
         _setDimmerLights_Initialization 2604              __end_of_setDimmerLights_Adj 1B0B  
                ?_setTemp_Initialization 0071                              ??_setTxData 0022  
                       ?_setRF_ReceiveGO 0073                   CC2500_InitPATable@temp 0026  
                   _MainT_Initialization 210F                    __size_of_RF_RxDisable 002C  
                      _RF_Initialization 2096                              getLoad_AD@i 002E  
                            getLoad_AD@j 002D                            ?_getTemp_Safe 0071  
                   _Flash_Memory_Erasing 21CC                       ?_RF_Initialization 0071  
                             _SPI0Buffer 00BF          __end_of_DelayOff_Initialization 20AF  
                             _OPTION_REG 0095                    __end_of_DelayOff_Main 20B4  
                    ??_RF_Initialization 0021                              getRxData@rf 0068  
                         _setDelayOff_GO 1F0E         __size_of_setControl_Lights_Table 007F  
                      _setLoad_StatusOff 18A0                   __end_of_DelayTimejudge 1BF3  
         __end_of_setOverTemp_Exceptions 1B57                   __size_of_RfPointSelect 000E  
                      ??i1_RfPointSelect 0071                           ??_getLoad_Safe 0020  
   __size_of_Flash_Memory_Initialization 0102                            ??_DlyOff_Main 002A  
                     ?_setLoad_StatusOff 0020                    __end_of_DelayTime_1us 271F  
               __end_of_Sw_DimmerAdjFunc 2660                  __end_of_CC2500_ReadByte 2528  
           __end_of_setSw_Initialization 2356                          ?_setRF_RxStatus 0022  
                       _setSw_Main$20644 002E                     getPercentValue@value 005B  
                           _RF_RxDisable 25AB               ?_PowerFault_Initialization 0071  
             __end_of_LED_Initialization 21E6         __size_of_setDimmerLights_Trigger 0011  
                      ?_setLoad_StatusOn 0020           __end_of_setTemp_Initialization 2159  
               __size_of_Sw_DimmerOnFunc 0062                      ??_setLoad_StatusOff 0021  
               ?_DimmerLights_Exceptions 0071                 __size_of_setPercentValue 0048  
                   setPercentValue@value 004C                __end_of_RF_Initialization 209B  
               __end_of_Sw_DimmerOffFunc 12C6                       ??_setLoad_StatusOn 0021  
        __size_of_setDimmerLights_Switch 0011                        ??_RfSWPointSelect 0020  
                  ?_MainT_Initialization 0071                         setRF_RxStatus@rf 0023  
                  __end_of_CC2500_RxData 114A                    __end_of_CC2500_TxData 1054  
                         ??_getTemp_Safe 0020                    _setLoad_AH_AL_Restore 26BE  
                    setSw_Status@command 0022                  __end_of_CC2500_PowerRST 2756  
