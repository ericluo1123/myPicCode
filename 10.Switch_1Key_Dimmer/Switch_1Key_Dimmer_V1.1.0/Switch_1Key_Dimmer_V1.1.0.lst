

HI-TECH Software PIC LITE Macro Assembler V9.83 build 10920 
                                                                                               Wed Aug 20 17:34:27 2014

HI-TECH Software Omniscient Code Generator (Lite mode) build 10920
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 10920"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F1518
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0001                     indf1	equ	1
    35  0002                     pc	equ	2
    36  0002                     pcl	equ	2
    37  0003                     status	equ	3
    38  0004                     fsr0l	equ	4
    39  0005                     fsr0h	equ	5
    40  0006                     fsr1l	equ	6
    41  0007                     fsr1h	equ	7
    42  0008                     bsr	equ	8
    43  0009                     wreg	equ	9
    44  000B                     intcon	equ	11
    45  0001                     c	equ	1
    46  0000                     z	equ	0
    47  000A                     pclath	equ	10
    48                           # 7 "G:\Program\PIC\Source_File\MCU_16f1518_B1.c"
    49                           	psect config,class=CONFIG,delta=2 ;#
    50                           # 7 "G:\Program\PIC\Source_File\MCU_16f1518_B1.c"
    51  8007  F9E4               	dw 0xFFFC & 0xFFE7 & 0xF9FF ;#
    52                           # 8 "G:\Program\PIC\Source_File\MCU_16f1518_B1.c"
    53                           	psect config,class=CONFIG,delta=2 ;#
    54                           # 8 "G:\Program\PIC\Source_File\MCU_16f1518_B1.c"
    55  8008  FFFE               	dw 0xFFFF & 0xFFFE ;#
    56                           	FNCALL	_main,_MainT_Initialization
    57                           	FNCALL	_main,_Mcu_Initialization
    58                           	FNCALL	_main,_Flash_Memory_Initialization
    59                           	FNCALL	_main,_LED_Initialization
    60                           	FNCALL	_main,_Buzzer_Initialization
    61                           	FNCALL	_main,_DimmerLights_Initialization
    62                           	FNCALL	_main,_Temp_Initialization
    63                           	FNCALL	_main,_Load_Initialization
    64                           	FNCALL	_main,_PowerFault_Initialization
    65                           	FNCALL	_main,_DelayOff_Initialization
    66                           	FNCALL	_main,_Switch_Initialization
    67                           	FNCALL	_main,_RF_Initialization
    68                           	FNCALL	_main,_CC2500_PowerOnInitial
    69                           	FNCALL	_main,_getLoad_AD
    70                           	FNCALL	_main,_getTemp_AD
    71                           	FNCALL	_main,_getPowerFault_AD
    72                           	FNCALL	_main,_MainT
    73                           	FNCALL	_main,_Flash_Memory_Main
    74                           	FNCALL	_main,_Buzzer_Main
    75                           	FNCALL	_main,_LED_Main
    76                           	FNCALL	_main,_Temp_Main
    77                           	FNCALL	_main,_Load_Main
    78                           	FNCALL	_main,_PowerFault_Main
    79                           	FNCALL	_main,_DimmerLights_Main
    80                           	FNCALL	_main,_Switch_Main
    81                           	FNCALL	_main,_RF_Main
    82                           	FNCALL	_main,_DelayOff_Main
    83                           	FNCALL	_RF_Main,_setRF_Main
    84                           	FNCALL	_setRF_Main,_RfPointSelect
    85                           	FNCALL	_setRF_Main,_RF_RxDisable
    86                           	FNCALL	_setRF_Main,_CC2500_RxData
    87                           	FNCALL	_setRF_Main,_getRxData
    88                           	FNCALL	_setRF_Main,_CC2500_TxData
    89                           	FNCALL	_setRF_Main,_CC2500_WriteCommand
    90                           	FNCALL	_setRF_Main,_setINT_GO
    91                           	FNCALL	_getRxData,_RfPointSelect
    92                           	FNCALL	_getRxData,_setLog_Code
    93                           	FNCALL	_getRxData,_setControl_Lights_Table
    94                           	FNCALL	_setControl_Lights_Table,_RfPointSelect
    95                           	FNCALL	_setControl_Lights_Table,_setDimmerLights
    96                           	FNCALL	_setControl_Lights_Table,_setRFSW_Status
    97                           	FNCALL	_setControl_Lights_Table,_setSw_Status
    98                           	FNCALL	_setControl_Lights_Table,_setBuz
    99                           	FNCALL	_setControl_Lights_Table,_setTxData
   100                           	FNCALL	_setControl_Lights_Table,_setRFSW_Control
   101                           	FNCALL	_setControl_Lights_Table,_setRFSW_AdjControl
   102                           	FNCALL	_PowerFault_Main,_setPowerFault_Main
   103                           	FNCALL	_Load_Main,_setLoad_Main
   104                           	FNCALL	_Temp_Main,_setTemp_Main
   105                           	FNCALL	_setRFSW_AdjControl,_RfSWPointSelect
   106                           	FNCALL	_setRFSW_AdjControl,_setRF_DimmerValue
   107                           	FNCALL	_setRFSW_AdjControl,_setTxData
   108                           	FNCALL	_setPowerFault_Main,_PowerFaultPointSelect
   109                           	FNCALL	_setPowerFault_Main,_getLoad_Safe
   110                           	FNCALL	_setPowerFault_Main,_getTemp_Safe
   111                           	FNCALL	_setPowerFault_Main,_setPowerFault_ERROR
   112                           	FNCALL	_setTemp_Main,_TempPointSelect
   113                           	FNCALL	_setTemp_Main,_getLoad_Safe
   114                           	FNCALL	_setTemp_Main,_getPF_Safe
   115                           	FNCALL	_setTemp_Main,_setOverTemp_ERROR
   116                           	FNCALL	_setLoad_Main,_LoadPointSelect
   117                           	FNCALL	_setLoad_Main,_setLoad_ERROR
   118                           	FNCALL	_setLoad_Main,___lwdiv
   119                           	FNCALL	_setLoad_Main,___wmul
   120                           	FNCALL	_setLoad_Main,_setDimmerLights_Open
   121                           	FNCALL	_setLoad_Main,_setLoad_AH_AL_Restore
   122                           	FNCALL	_setLoad_Main,_getTemp_Safe
   123                           	FNCALL	_setLoad_Main,_getPF_Safe
   124                           	FNCALL	_DimmerLights_Main,_setDimmerLights_Main
   125                           	FNCALL	_DimmerLights_Main,_DimmerLights_Close
   126                           	FNCALL	_setRF_DimmerValue,_setDimmerLights_AdjRF
   127                           	FNCALL	_setPowerFault_ERROR,_PowerFaultPointSelect
   128                           	FNCALL	_setPowerFault_ERROR,_setDimmer_PFERROR
   129                           	FNCALL	_setPowerFault_ERROR,_DimmerLights_ERROR
   130                           	FNCALL	_setPowerFault_ERROR,_setLED
   131                           	FNCALL	_setPowerFault_ERROR,_setSw_Enable
   132                           	FNCALL	_setPowerFault_ERROR,_setRF_Enable
   133                           	FNCALL	_setOverTemp_ERROR,_TempPointSelect
   134                           	FNCALL	_setOverTemp_ERROR,_setDimmer_TempERROR
   135                           	FNCALL	_setOverTemp_ERROR,_DimmerLights_ERROR
   136                           	FNCALL	_setOverTemp_ERROR,_setLED
   137                           	FNCALL	_setOverTemp_ERROR,_setSw_Enable
   138                           	FNCALL	_setOverTemp_ERROR,_setRF_Enable
   139                           	FNCALL	_setOverTemp_ERROR,_setBuz
   140                           	FNCALL	_setLoad_ERROR,_LoadPointSelect
   141                           	FNCALL	_setLoad_ERROR,_setDimmer_LoadERROR
   142                           	FNCALL	_setLoad_ERROR,_DimmerLights_ERROR
   143                           	FNCALL	_setLoad_ERROR,_setLED
   144                           	FNCALL	_setLoad_ERROR,_setSw_Enable
   145                           	FNCALL	_setLoad_ERROR,_setRF_Enable
   146                           	FNCALL	_Switch_Main,_setSw_Main
   147                           	FNCALL	_Flash_Memory_Main,_Flash_Memory_Modify
   148                           	FNCALL	_MainT,_setTemp_Enable
   149                           	FNCALL	_MainT,_setLoad_Enable
   150                           	FNCALL	_MainT,_getTemp_ERROR
   151                           	FNCALL	_MainT,_getPF_ERROR
   152                           	FNCALL	_MainT,_getLoad_ERROR
   153                           	FNCALL	_MainT,_DimmerLightsPointSelect
   154                           	FNCALL	_MainT,_setDimmerLights_Trigger
   155                           	FNCALL	_MainT,_setDimmerLights_Switch
   156                           	FNCALL	_MainT,_setBuz
   157                           	FNCALL	_MainT,_getTemp_Safe
   158                           	FNCALL	_MainT,_getPF_Safe
   159                           	FNCALL	_MainT,_getLoad_Safe
   160                           	FNCALL	_MainT,_getPercentValue
   161                           	FNCALL	_MainT,_setSw_Enable
   162                           	FNCALL	_MainT,_setRF_Enable
   163                           	FNCALL	_setDimmerLights_Main,_DimmerLightsPointSelect
   164                           	FNCALL	_setDimmerLights_Main,_setDimmerLights_Open
   165                           	FNCALL	_setDimmerLights_Main,_setDimmerLights_Close
   166                           	FNCALL	_setDimmerLights_Main,_setDimmerLights
   167                           	FNCALL	_setDimmerLights_Main,_getDimmerLights_Trigger
   168                           	FNCALL	_setDimmerLights_Main,_setDimmerLights_Adj
   169                           	FNCALL	_setDimmerLights_Main,_setBuz
   170                           	FNCALL	_DimmerLights_Initialization,_setDimmerLights_Initialization
   171                           	FNCALL	_setSw_Main,_SwPointSelect
   172                           	FNCALL	_setSw_Main,_Sw_OnFunc
   173                           	FNCALL	_setSw_Main,_Sw_AdjFunc
   174                           	FNCALL	_setSw_Main,_setRF_Learn
   175                           	FNCALL	_setSw_Main,_setBuz
   176                           	FNCALL	_setSw_Main,_Sw_OffFunc
   177                           	FNCALL	_Flash_Memory_Modify,_Flash_Memory_Read
   178                           	FNCALL	_Flash_Memory_Modify,_Flash_Memory_Erasing
   179                           	FNCALL	_Flash_Memory_Modify,_Flash_Memory_Write
   180                           	FNCALL	_setRF_Enable,_RfPointSelect
   181                           	FNCALL	_setRF_Enable,_CC2500_WriteCommand
   182                           	FNCALL	_setRF_Enable,_RF_RxDisable
   183                           	FNCALL	_Switch_Initialization,_TouchPower
   184                           	FNCALL	_Switch_Initialization,_setSw_Initialization
   185                           	FNCALL	_Switch_Initialization,_setLED
   186                           	FNCALL	_Flash_Memory_Initialization,_Flash_Memory_Read
   187                           	FNCALL	_Flash_Memory_Initialization,_setPercentValue
   188                           	FNCALL	_Flash_Memory_Initialization,_Flash_Memory_Write
   189                           	FNCALL	_LED_Initialization,_setLED_Initialization
   190                           	FNCALL	_setDimmerLights_AdjRF,_DimmerLightsPointSelect
   191                           	FNCALL	_setDimmerLights_AdjRF,_getPercentValue
   192                           	FNCALL	_DimmerLights_ERROR,_getDimmer_TempERROR
   193                           	FNCALL	_DimmerLights_ERROR,_getDimmerLights_StatusFlag
   194                           	FNCALL	_DimmerLights_ERROR,_setBuz
   195                           	FNCALL	_DimmerLights_ERROR,_setDimmerLights_ERROR
   196                           	FNCALL	_DimmerLights_ERROR,_getDimmer_LoadERROR
   197                           	FNCALL	_DimmerLights_ERROR,_getDimmer_PFERROR
   198                           	FNCALL	_DimmerLights_ERROR,_setDimmerLights_TriggerERROR
   199                           	FNCALL	_setDimmerLights_Adj,_DimmerLightsPointSelect
   200                           	FNCALL	_setDimmerLights_Adj,_setLoad_StatusOff
   201                           	FNCALL	_setDimmerLights_Adj,_setRF_DimmerLights
   202                           	FNCALL	_setDimmerLights_Adj,_setTxData
   203                           	FNCALL	_setDimmerLights_Adj,_setPercentValue
   204                           	FNCALL	_setDimmerLights_Initialization,_DimmerLightsPointSelect
   205                           	FNCALL	_setDimmerLights_Initialization,_getPercentValue
   206                           	FNCALL	_DelayOff_Main,_DlyOff_Main
   207                           	FNCALL	_CC2500_PowerOnInitial,_CC2500_PowerRST
   208                           	FNCALL	_CC2500_PowerOnInitial,_CC2500_InitSetREG
   209                           	FNCALL	_CC2500_PowerOnInitial,_CC2500_InitPATable
   210                           	FNCALL	_CC2500_PowerOnInitial,_CC2500_ClearTXFIFO
   211                           	FNCALL	_CC2500_PowerOnInitial,_CC2500_ClearRXFIFO
   212                           	FNCALL	_CC2500_PowerOnInitial,_CC2500_FrequencyCabr
   213                           	FNCALL	_CC2500_PowerOnInitial,_CC2500_SIDLEMode
   214                           	FNCALL	_Buzzer_Initialization,_setBuz_Initialization
   215                           	FNCALL	_Sw_OffFunc,_setDimmerLights_TriggerAdj
   216                           	FNCALL	_Sw_OffFunc,_setDimmerLights_AdjGo
   217                           	FNCALL	_Sw_OffFunc,_setRF_DimmerLights
   218                           	FNCALL	_Sw_OffFunc,_setTxData
   219                           	FNCALL	_Sw_OffFunc,_setDelayOff_GO
   220                           	FNCALL	_Sw_OffFunc,_setDimmerLights_Trigger
   221                           	FNCALL	_Sw_OffFunc,_setDimmerLights_Switch
   222                           	FNCALL	_Sw_AdjFunc,_setRFSW_Status
   223                           	FNCALL	_Sw_AdjFunc,_setDimmerLights_TriggerAdj
   224                           	FNCALL	_Sw_AdjFunc,_setDimmerLights_AdjGo
   225                           	FNCALL	_Sw_OnFunc,_setBuz
   226                           	FNCALL	_Sw_OnFunc,_setRFSW_Status
   227                           	FNCALL	_Sw_OnFunc,_setDimmerLights_Trigger
   228                           	FNCALL	_Sw_OnFunc,_setDimmerLights_Switch
   229                           	FNCALL	_Sw_OnFunc,_setRF_DimmerLights
   230                           	FNCALL	_Sw_OnFunc,_setTxData
   231                           	FNCALL	_setSw_Initialization,_setLED
   232                           	FNCALL	_setRFSW_Control,_RfSWPointSelect
   233                           	FNCALL	_setRFSW_Control,_setDelayOff_GO
   234                           	FNCALL	_setRFSW_Control,_setSw_Status
   235                           	FNCALL	_setRFSW_Control,_setRF_DimmerLights
   236                           	FNCALL	_setRFSW_Control,_setDimmerLights_Trigger
   237                           	FNCALL	_setRFSW_Control,_setDimmerLights_Switch
   238                           	FNCALL	_setRFSW_Control,_setBuz
   239                           	FNCALL	_setRFSW_Control,_setTxData
   240                           	FNCALL	_setLog_Code,_RfPointSelect
   241                           	FNCALL	_setLog_Code,_setBuz
   242                           	FNCALL	_RF_RxDisable,_RfPointSelect
   243                           	FNCALL	_RF_RxDisable,_CC2500_WriteCommand
   244                           	FNCALL	_RF_RxDisable,_setINT_GO
   245                           	FNCALL	_Flash_Memory_Erasing,_Flash_Memory_Unlock
   246                           	FNCALL	_Flash_Memory_Write,_Flash_Memory_Unlock
   247                           	FNCALL	_PowerFault_Initialization,_setPowerFault_Initialization
   248                           	FNCALL	_Load_Initialization,_setLoad_Initialization
   249                           	FNCALL	_Temp_Initialization,_setTemp_Initialization
   250                           	FNCALL	_LED_Main,_setLED_Main
   251                           	FNCALL	_setLED_Initialization,_LedPointSelect
   252                           	FNCALL	_setLED_Initialization,_setLED
   253                           	FNCALL	_setPercentValue,___awtoft
   254                           	FNCALL	_setPercentValue,___ftdiv
   255                           	FNCALL	_setPercentValue,___fttol
   256                           	FNCALL	_setDimmerLights_ERROR,_DimmerLightsPointSelect
   257                           	FNCALL	_setDimmerLights_ERROR,_setLoad_StatusOff
   258                           	FNCALL	_setDimmerLights_ERROR,_setLED
   259                           	FNCALL	_setDimmerLights_ERROR,_setSw_Status
   260                           	FNCALL	_setDimmerLights_ERROR,_setRFSW_Status
   261                           	FNCALL	_setDimmerLights,_DimmerLightsPointSelect
   262                           	FNCALL	_setDimmerLights,_setLED
   263                           	FNCALL	_setDimmerLights,_setLoad_StatusOn
   264                           	FNCALL	_setDimmerLights,_setLoad_Count
   265                           	FNCALL	_setDimmerLights,_setDimmer_Detect
   266                           	FNCALL	_setDimmerLights,_setLoad_GO
   267                           	FNCALL	_setDimmerLights,_setLoad_LightsStatus
   268                           	FNCALL	_DimmerLights_Close,_getDimmer_Detect
   269                           	FNCALL	_DimmerLights_Close,_setDimmer_Detect
   270                           	FNCALL	_DimmerLights_Close,_getDimmerLights_StatusFlag
   271                           	FNCALL	_DimmerLights_Close,_setLoad_GO
   272                           	FNCALL	_getPercentValue,___awtoft
   273                           	FNCALL	_getPercentValue,___ftmul
   274                           	FNCALL	_getPercentValue,___ftadd
   275                           	FNCALL	_getPercentValue,___fttol
   276                           	FNCALL	_DlyOff_Main,_DelayOffPointSelect
   277                           	FNCALL	_DlyOff_Main,_setSw_Status
   278                           	FNCALL	_DlyOff_Main,_setRFSW_Status
   279                           	FNCALL	_DlyOff_Main,_setRF_DimmerLights
   280                           	FNCALL	_DlyOff_Main,_setDimmerLights_Trigger
   281                           	FNCALL	_DlyOff_Main,_setDimmerLights_Switch
   282                           	FNCALL	_DlyOff_Main,_setTxData
   283                           	FNCALL	_DlyOff_Main,_setBuz
   284                           	FNCALL	_DelayOff_Initialization,_DlyOff_Initialization
   285                           	FNCALL	_CC2500_SIDLEMode,_CC2500_WriteCommand
   286                           	FNCALL	_CC2500_FrequencyCabr,_CC2500_WriteCommand
   287                           	FNCALL	_CC2500_FrequencyCabr,_DelayTime_1us
   288                           	FNCALL	_CC2500_ClearRXFIFO,_CC2500_WriteCommand
   289                           	FNCALL	_CC2500_ClearTXFIFO,_CC2500_WriteCommand
   290                           	FNCALL	_CC2500_InitPATable,_CC2500_WriteREG
   291                           	FNCALL	_CC2500_InitSetREG,_CC2500_WriteREG
   292                           	FNCALL	_CC2500_RxData,_CC2500_ReadStatus
   293                           	FNCALL	_CC2500_RxData,_CC2500_WriteByte
   294                           	FNCALL	_CC2500_RxData,_CC2500_ReadByte
   295                           	FNCALL	_CC2500_RxData,_CC2500_WriteCommand
   296                           	FNCALL	_CC2500_RxData,_setRF_RxStatus
   297                           	FNCALL	_CC2500_TxData,_CC2500_WriteByte
   298                           	FNCALL	_CC2500_TxData,_CC2500_WriteCommand
   299                           	FNCALL	_Buzzer_Main,_setBuz_Main
   300                           	FNCALL	_setBuz_Initialization,_setBuz_Enable
   301                           	FNCALL	___awtoft,___ftpack
   302                           	FNCALL	___ftmul,___ftpack
   303                           	FNCALL	___ftdiv,___ftpack
   304                           	FNCALL	___ftadd,___ftpack
   305                           	FNCALL	_setRF_Learn,_RfPointSelect
   306                           	FNCALL	_setPowerFault_Initialization,_PowerFaultPointSelect
   307                           	FNCALL	_setTemp_Initialization,_TempPointSelect
   308                           	FNCALL	_setLoad_Initialization,_LoadPointSelect
   309                           	FNCALL	_setLoad_Initialization,_setLoad_AH_AL_Restore
   310                           	FNCALL	_setSw_Enable,_SwPointSelect
   311                           	FNCALL	_getLoad_Safe,_LoadPointSelect
   312                           	FNCALL	_getPF_Safe,_PowerFaultPointSelect
   313                           	FNCALL	_getTemp_Safe,_TempPointSelect
   314                           	FNCALL	_getLoad_ERROR,_LoadPointSelect
   315                           	FNCALL	_getPF_ERROR,_PowerFaultPointSelect
   316                           	FNCALL	_getTemp_ERROR,_TempPointSelect
   317                           	FNCALL	_setLoad_Enable,_LoadPointSelect
   318                           	FNCALL	_setTemp_Enable,_TempPointSelect
   319                           	FNCALL	_getPowerFault_AD,_PowerFaultPointSelect
   320                           	FNCALL	_getPowerFault_AD,_getAD
   321                           	FNCALL	_getTemp_AD,_TempPointSelect
   322                           	FNCALL	_getTemp_AD,_getAD
   323                           	FNCALL	_getLoad_AD,_LoadPointSelect
   324                           	FNCALL	_getLoad_AD,_getAD
   325                           	FNCALL	_RF_Initialization,_setRF_Initialization
   326                           	FNCALL	_Mcu_Initialization,_IO_Set
   327                           	FNCALL	_Mcu_Initialization,_TMR0_Set
   328                           	FNCALL	_Mcu_Initialization,_ADC_Set
   329                           	FNCALL	_Mcu_Initialization,_INT_Set
   330                           	FNCALL	_Mcu_Initialization,_IOC_Set
   331                           	FNCALL	_setLED_Main,_LedPointSelect
   332                           	FNCALL	_setDimmer_PFERROR,_DimmerPointSelect
   333                           	FNCALL	_setDimmer_LoadERROR,_DimmerPointSelect
   334                           	FNCALL	_setDimmer_TempERROR,_DimmerPointSelect
   335                           	FNCALL	_setDimmerLights_TriggerAdj,_DimmerLightsPointSelect
   336                           	FNCALL	_setDimmerLights_AdjGo,_DimmerLightsPointSelect
   337                           	FNCALL	_setLoad_LightsStatus,_LoadPointSelect
   338                           	FNCALL	_setLoad_StatusOn,_LoadPointSelect
   339                           	FNCALL	_setLED,_LedPointSelect
   340                           	FNCALL	_setLoad_StatusOff,_LoadPointSelect
   341                           	FNCALL	_setDimmerLights_TriggerERROR,_DimmerLightsPointSelect
   342                           	FNCALL	_getDimmer_PFERROR,_DimmerPointSelect
   343                           	FNCALL	_getDimmer_LoadERROR,_DimmerPointSelect
   344                           	FNCALL	_getDimmer_TempERROR,_DimmerPointSelect
   345                           	FNCALL	_getDimmerLights_Trigger,_DimmerLightsPointSelect
   346                           	FNCALL	_setDimmerLights_Close,_DimmerLightsPointSelect
   347                           	FNCALL	_setDimmerLights_Open,_DimmerLightsPointSelect
   348                           	FNCALL	_setLoad_GO,_LoadPointSelect
   349                           	FNCALL	_getDimmerLights_StatusFlag,_DimmerLightsPointSelect
   350                           	FNCALL	_setDimmer_Detect,_DimmerPointSelect
   351                           	FNCALL	_getDimmer_Detect,_DimmerPointSelect
   352                           	FNCALL	_setDelayOff_GO,_DelayOffPointSelect
   353                           	FNCALL	_setDelayOff_GO,_DelayTimejudge
   354                           	FNCALL	_setTxData,_RfPointSelect
   355                           	FNCALL	_setDimmerLights_Switch,_DimmerLightsPointSelect
   356                           	FNCALL	_setDimmerLights_Trigger,_DimmerLightsPointSelect
   357                           	FNCALL	_setRFSW_Status,_RfSWPointSelect
   358                           	FNCALL	_setSw_Status,_SwPointSelect
   359                           	FNCALL	_DlyOff_Initialization,_DelayOffPointSelect
   360                           	FNCALL	_CC2500_WriteREG,_CC2500_WriteByte
   361                           	FNCALL	_CC2500_PowerRST,_DelayTime_1us
   362                           	FNCALL	_CC2500_PowerRST,_CC2500_WriteByte
   363                           	FNCALL	_setRF_RxStatus,_RfPointSelect
   364                           	FNCALL	_CC2500_ReadStatus,_CC2500_WriteByte
   365                           	FNCALL	_CC2500_ReadStatus,_CC2500_ReadByte
   366                           	FNCALL	_CC2500_WriteCommand,_CC2500_WriteByte
   367                           	FNCALL	_setBuz,_BuzPointSelect
   368                           	FNCALL	_setBuz,___awdiv
   369                           	FNCALL	_setBuz_Enable,_BuzPointSelect
   370                           	FNCALL	_setBuz_Main,_BuzPointSelect
   371                           	FNROOT	_main
   372                           	FNCALL	_ISR,_IOC_ISR
   373                           	FNCALL	_ISR,_TMR0_ISR
   374                           	FNCALL	_ISR,_INT_ISR
   375                           	FNCALL	_INT_ISR,_setRF_ReceiveGO
   376                           	FNCALL	_TMR0_ISR,i1_setLoad_StatusOff
   377                           	FNCALL	i1_setLoad_StatusOff,i1_LoadPointSelect
   378                           	FNCALL	_setRF_ReceiveGO,i1_RfPointSelect
   379                           	FNCALL	_IOC_ISR,_setDimmerReClock
   380                           	FNCALL	intlevel1,_ISR
   381                           	global	intlevel1
   382                           	FNROOT	intlevel1
   383                           	global	_VarMemory
   384                           	global	_VarProduct
   385                           psect	idataBANK3,class=CODE,space=0,delta=2
   386                           global __pidataBANK3
   387  2731                     __pidataBANK3:
   388                           	file	"G:\Program\PIC\Header_File\../Header_File/MCU_16F1518_B1.h"
   389                           	line	434
   390                           
   391                           ;initializer for _VarMemory
   392  2731  34FF               	retlw	0FFh
   393  2732  34FF               	retlw	0FFh
   394  2733  34FF               	retlw	0FFh
   395  2734  3400               	retlw	0
   396  2735  3400               	retlw	0
   397  2736  3400               	retlw	0
   398  2737  3400               	retlw	0
   399  2738  3400               	retlw	0
   400  2739  3400               	retlw	0
   401  273A  3400               	retlw	0
   402  273B  3400               	retlw	0
   403  273C  3400               	retlw	0
   404  273D  3400               	retlw	0
   405  273E  3400               	retlw	0
   406  273F  3400               	retlw	0
   407  2740  3400               	retlw	0
   408  2741  3400               	retlw	0
   409  2742  3400               	retlw	0
   410  2743  3400               	retlw	0
   411  2744  3400               	retlw	0
   412  2745  3400               	retlw	0
   413  2746  3400               	retlw	0
   414  2747  3400               	retlw	0
   415  2748  3400               	retlw	0
   416  2749  3400               	retlw	0
   417  274A  3400               	retlw	0
   418  274B  3400               	retlw	0
   419  274C  3400               	retlw	0
   420  274D  3400               	retlw	0
   421  274E  3400               	retlw	0
   422  274F  3400               	retlw	0
   423  2750  34AA               	retlw	0AAh
   424  2751  3400               	retlw	0
   425  2752  3400               	retlw	0
   426  2753  3400               	retlw	0
   427  2754  3400               	retlw	0
   428  2755  3400               	retlw	0
   429                           	file	"G:\Program\PIC\10.Switch_1Key_Dimmer\Switch_1Key_Dimmer_V1.1.0\Release\../Release
                                 /Switch_1key_Dimmer_V1.1.0.h"
   430                           	line	211
   431                           
   432                           ;initializer for _VarProduct
   433  2756  3463               	retlw	063h
   434  2757  3402               	retlw	02h
   435  2758  3400               	retlw	0
   436  2759  3400               	retlw	0
   437  275A  3400               	retlw	0
   438  275B  3400               	retlw	0
   439  275C  3400               	retlw	0
   440  275D  3400               	retlw	0
   441  275E  3400               	retlw	0
   442  275F  3400               	retlw	0
   443  2760  3400               	retlw	0
   444  2761  3400               	retlw	0
   445  2762  34FF               	retlw	0FFh
   446  2763  34FF               	retlw	0FFh
   447  2764  34FF               	retlw	0FFh
   448  2765  3400               	retlw	0
   449  2766  3400               	retlw	0
   450  2767  3400               	retlw	0
   451  2768  3400               	retlw	0
   452  2769  3400               	retlw	0
   453  276A  3401               	retlw	01h
   454  276B  3400               	retlw	0
   455  276C  3400               	retlw	0
   456  276D  3400               	retlw	0
   457  276E  3400               	retlw	0
   458  276F  3400               	retlw	0
   459  2770  3400               	retlw	0
   460  2771  3400               	retlw	0
   461  2772  3400               	retlw	0
   462  2773  3400               	retlw	0
   463                           	global	_CC2500_registers_address
   464                           psect	strings,class=STRING,delta=2
   465                           global __pstrings
   466  1800                     __pstrings:
   467                           	global    __stringtab
   468  1800                     __stringtab:
   469  1800  3400               	retlw	0
   470                           psect	strings
   471                           	file	"G:\Program\PIC\Header_File\../Header_File/CC2500_B1.h"
   472                           	line	218
   473  1801                     _CC2500_registers_address:
   474  1801  3403               	retlw	03h
   475  1802  3416               	retlw	016h
   476  1803  3417               	retlw	017h
   477  1804  341E               	retlw	01Eh
   478  1805  341F               	retlw	01Fh
   479  1806  3420               	retlw	020h
   480  1807  342A               	retlw	02Ah
   481  1808  342B               	retlw	02Bh
   482  1809  340B               	retlw	0Bh
   483  180A  340C               	retlw	0Ch
   484  180B  340D               	retlw	0Dh
   485  180C  340E               	retlw	0Eh
   486  180D  340F               	retlw	0Fh
   487  180E  3410               	retlw	010h
   488  180F  3411               	retlw	011h
   489  1810  3412               	retlw	012h
   490  1811  3413               	retlw	013h
   491  1812  3414               	retlw	014h
   492  1813  340A               	retlw	0Ah
   493  1814  3415               	retlw	015h
   494  1815  3421               	retlw	021h
   495  1816  3422               	retlw	022h
   496  1817  3418               	retlw	018h
   497  1818  3419               	retlw	019h
   498  1819  341A               	retlw	01Ah
   499  181A  341B               	retlw	01Bh
   500  181B  341C               	retlw	01Ch
   501  181C  341D               	retlw	01Dh
   502  181D  3423               	retlw	023h
   503  181E  3424               	retlw	024h
   504  181F  3425               	retlw	025h
   505  1820  3426               	retlw	026h
   506  1821  3429               	retlw	029h
   507  1822  342C               	retlw	02Ch
   508  1823  342D               	retlw	02Dh
   509  1824  342E               	retlw	02Eh
   510  1825  3400               	retlw	0
   511  1826  3401               	retlw	01h
   512  1827  3402               	retlw	02h
   513  1828  3407               	retlw	07h
   514  1829  3408               	retlw	08h
   515  182A  3409               	retlw	09h
   516  182B  3406               	retlw	06h
   517  182C  3404               	retlw	04h
   518  182D  3405               	retlw	05h
   519  182E  3427               	retlw	027h
   520  182F  3428               	retlw	028h
   521                           	global	_CC2500_rfSettings
   522                           psect	strings
   523                           	file	"G:\Program\PIC\Header_File\../Header_File/CC2500_B1.h"
   524                           	line	161
   525  1830                     _CC2500_rfSettings:
   526  1830  3407               	retlw	07h
   527  1831  3407               	retlw	07h
   528  1832  3430               	retlw	030h
   529  1833  3487               	retlw	087h
   530  1834  346B               	retlw	06Bh
   531  1835  34F8               	retlw	0F8h
   532  1836  347F               	retlw	07Fh
   533  1837  343F               	retlw	03Fh
   534  1838  3409               	retlw	09h
   535  1839  3400               	retlw	0
   536  183A  345C               	retlw	05Ch
   537  183B  34A7               	retlw	0A7h
   538  183C  3462               	retlw	062h
   539  183D  3486               	retlw	086h
   540  183E  3483               	retlw	083h
   541  183F  3403               	retlw	03h
   542  1840  3422               	retlw	022h
   543  1841  34F8               	retlw	0F8h
   544  1842  3400               	retlw	0
   545  1843  3444               	retlw	044h
   546  1844  34B6               	retlw	0B6h
   547  1845  3410               	retlw	010h
   548  1846  3418               	retlw	018h
   549  1847  341D               	retlw	01Dh
   550  1848  341C               	retlw	01Ch
   551  1849  34C7               	retlw	0C7h
   552  184A  3400               	retlw	0
   553  184B  34B2               	retlw	0B2h
   554  184C  34EA               	retlw	0EAh
   555  184D  340A               	retlw	0Ah
   556  184E  3400               	retlw	0
   557  184F  3411               	retlw	011h
   558  1850  3459               	retlw	059h
   559  1851  3488               	retlw	088h
   560  1852  3431               	retlw	031h
   561  1853  340B               	retlw	0Bh
   562  1854  342F               	retlw	02Fh
   563  1855  342E               	retlw	02Eh
   564  1856  3406               	retlw	06h
   565  1857  3404               	retlw	04h
   566  1858  3405               	retlw	05h
   567  1859  3400               	retlw	0
   568  185A  3430               	retlw	030h
   569  185B  34D3               	retlw	0D3h
   570  185C  3491               	retlw	091h
   571  185D  3441               	retlw	041h
   572  185E  3400               	retlw	0
   573                           	global	_CC2500_patable_vaule
   574                           psect	strings
   575                           	file	"G:\Program\PIC\Header_File\../Header_File/CC2500_B1.h"
   576                           	line	292
   577  185F                     _CC2500_patable_vaule:
   578  185F  34FE               	retlw	0FEh
   579  1860  34FE               	retlw	0FEh
   580  1861  34FE               	retlw	0FEh
   581  1862  34FE               	retlw	0FEh
   582  1863  34FE               	retlw	0FEh
   583  1864  34FE               	retlw	0FEh
   584  1865  34FE               	retlw	0FEh
   585  1866  34FE               	retlw	0FEh
   586                           	global	_CC2500_registers_address
   587                           	global	_CC2500_rfSettings
   588                           	global	_CC2500_patable_vaule
   589                           	global	_DimmerLights
   590                           	global	_Load
   591                           	global	_PF
   592                           	global	_Sw
   593                           	global	_Temp
   594                           	global	_Buz
   595                           	global	_DelayOff
   596                           	global	_DimmerLights11
   597                           	global	_RF
   598                           	global	_CC2500_Enable
   599                           	global	_Receive_GO
   600                           	global	_Receive_OK
   601                           	global	_RxStatus
   602                           	global	_Transceive_GO
   603                           	global	_Transceive_OK
   604                           	global	_TxStatus
   605                           	global	_RF_Data
   606                           	global	_RF_Count
   607                           	global	_CRC
   608                           	global	_Dimmer
   609                           	global	_DimmerLightsIntr
   610                           	global	_LED
   611                           	global	_RFSW
   612                           	global	_RSSI
   613                           	global	_Rx_Length
   614                           	global	_SPI0Buffer
   615                           	global	_Tx_Length
   616                           	global	_r_address
   617                           	global	_r_data
   618                           	global	_s_data
   619                           	global	_VarTMain
   620                           	global	_Temp1
   621                           	global	_Buz1
   622                           	global	_DimmerLights1
   623                           	global	_Sw1
   624                           	global	_Load1
   625                           	global	_PF1
   626                           	global	_VarTimer0
   627                           	global	_DlySw1
   628                           	global	_VarErrLED
   629                           	global	_VarLED1
   630                           	global	_VarLED2
   631                           	global	_Dimmer1
   632                           	global	_RF1
   633                           	global	_RFSW1
   634                           	global	_Product
   635                           psect	nvBANK0,class=BANK0,space=1
   636                           global __pnvBANK0
   637  006F                     __pnvBANK0:
   638  006F                     _Product:
   639  006F                            ds      1
   640                           
   641                           	global	_Memory
   642                           psect	nvCOMMON,class=COMMON,space=1
   643                           global __pnvCOMMON
   644  007C                     __pnvCOMMON:
   645  007C                     _Memory:
   646  007C                            ds      1
   647                           
   648                           	global	_TMain
   649  007D                     _TMain:
   650  007D                            ds      1
   651                           
   652                           	global	_PORTA
   653  000C                     _PORTA	set	12
   654                           	global	_PORTB
   655  000D                     _PORTB	set	13
   656                           	global	_PORTC
   657  000E                     _PORTC	set	14
   658                           	global	_TMR0
   659  0015                     _TMR0	set	21
   660                           	global	_GIE
   661  005F                     _GIE	set	95
   662                           	global	_INTE
   663  005C                     _INTE	set	92
   664                           	global	_INTF
   665  0059                     _INTF	set	89
   666                           	global	_IOCIE
   667  005B                     _IOCIE	set	91
   668                           	global	_IOCIF
   669  0058                     _IOCIF	set	88
   670                           	global	_PEIE
   671  005E                     _PEIE	set	94
   672                           	global	_RA0
   673  0060                     _RA0	set	96
   674                           	global	_RA3
   675  0063                     _RA3	set	99
   676                           	global	_RA4
   677  0064                     _RA4	set	100
   678                           	global	_RA6
   679  0066                     _RA6	set	102
   680                           	global	_RA7
   681  0067                     _RA7	set	103
   682                           	global	_RB0
   683  0068                     _RB0	set	104
   684                           	global	_RB1
   685  0069                     _RB1	set	105
   686                           	global	_RB3
   687  006B                     _RB3	set	107
   688                           	global	_RB4
   689  006C                     _RB4	set	108
   690                           	global	_RB5
   691  006D                     _RB5	set	109
   692                           	global	_RC0
   693  0070                     _RC0	set	112
   694                           	global	_RC1
   695  0071                     _RC1	set	113
   696                           	global	_RC2
   697  0072                     _RC2	set	114
   698                           	global	_RC4
   699  0074                     _RC4	set	116
   700                           	global	_RC5
   701  0075                     _RC5	set	117
   702                           	global	_RC7
   703  0077                     _RC7	set	119
   704                           	global	_TMR0IE
   705  005D                     _TMR0IE	set	93
   706                           	global	_TMR0IF
   707  005A                     _TMR0IF	set	90
   708                           	global	_ADCON0
   709  009D                     _ADCON0	set	157
   710                           	global	_ADCON1
   711  009E                     _ADCON1	set	158
   712                           	global	_ADRESH
   713  009C                     _ADRESH	set	156
   714                           	global	_ADRESL
   715  009B                     _ADRESL	set	155
   716                           	global	_OPTION_REG
   717  0095                     _OPTION_REG	set	149
   718                           	global	_OSCCON
   719  0099                     _OSCCON	set	153
   720                           	global	_TRISA
   721  008C                     _TRISA	set	140
   722                           	global	_TRISB
   723  008D                     _TRISB	set	141
   724                           	global	_TRISC
   725  008E                     _TRISC	set	142
   726                           	global	_GO_nDONE
   727  04E9                     _GO_nDONE	set	1257
   728                           	global	_FVRCON
   729  0117                     _FVRCON	set	279
   730                           	global	_LATA
   731  010C                     _LATA	set	268
   732                           	global	_LATB
   733  010D                     _LATB	set	269
   734                           	global	_LATC
   735  010E                     _LATC	set	270
   736                           	global	_ANSELA
   737  018C                     _ANSELA	set	396
   738                           	global	_ANSELB
   739  018D                     _ANSELB	set	397
   740                           	global	_ANSELC
   741  018E                     _ANSELC	set	398
   742                           	global	_PMADRH
   743  0192                     _PMADRH	set	402
   744                           	global	_PMADRL
   745  0191                     _PMADRL	set	401
   746                           	global	_PMCON2
   747  0196                     _PMCON2	set	406
   748                           	global	_PMDATH
   749  0194                     _PMDATH	set	404
   750                           	global	_PMDATL
   751  0193                     _PMDATL	set	403
   752                           	global	_CFGS
   753  0CAE                     _CFGS	set	3246
   754                           	global	_FREE
   755  0CAC                     _FREE	set	3244
   756                           	global	_LWLO
   757  0CAD                     _LWLO	set	3245
   758                           	global	_RD
   759  0CA8                     _RD	set	3240
   760                           	global	_WR
   761  0CA9                     _WR	set	3241
   762                           	global	_WREN
   763  0CAA                     _WREN	set	3242
   764                           	global	_WPUB0
   765  1068                     _WPUB0	set	4200
   766                           	global	_WPUB1
   767  1069                     _WPUB1	set	4201
   768                           	global	_WPUB2
   769  106A                     _WPUB2	set	4202
   770                           	global	_IOCBF
   771  0396                     _IOCBF	set	918
   772                           	global	_IOCBN
   773  0395                     _IOCBN	set	917
   774                           	global	_IOCBP
   775  0394                     _IOCBP	set	916
   776                           	global	_IOCBF2
   777  1CB2                     _IOCBF2	set	7346
   778                           	global	_Timer0
   779                           psect	nvBANK1,class=BANK1,space=1
   780                           global __pnvBANK1
   781  00E8                     __pnvBANK1:
   782  00E8                     _Timer0:
   783  00E8                            ds      1
   784                           
   785                           	file	"Switch_1Key_Dimmer_V1.1.0.as"
   786                           	line	#
   787                           psect cinit,class=CODE,delta=2
   788                           global start_initialization
   789  247D                     start_initialization:
   790                           
   791                           psect	bitbssCOMMON,class=COMMON,bit,space=1
   792                           global __pbitbssCOMMON
   793  0380                     __pbitbssCOMMON:
   794  0380                     _CC2500_Enable:
   795  0380                            ds      1
   796                           
   797  0381                     _Receive_GO:
   798  0381                            ds      1
   799                           
   800  0382                     _Receive_OK:
   801  0382                            ds      1
   802                           
   803  0383                     _RxStatus:
   804  0383                            ds      1
   805                           
   806  0384                     _Transceive_GO:
   807  0384                            ds      1
   808                           
   809  0385                     _Transceive_OK:
   810  0385                            ds      1
   811                           
   812  0386                     _TxStatus:
   813  0386                            ds      1
   814                           
   815                           psect	bssCOMMON,class=COMMON,space=1
   816                           global __pbssCOMMON
   817  0078                     __pbssCOMMON:
   818  0078                     _Buz:
   819  0078                            ds      1
   820                           
   821  0079                     _DelayOff:
   822  0079                            ds      1
   823                           
   824  007A                     _DimmerLights11:
   825  007A                            ds      1
   826                           
   827  007B                     _RF:
   828  007B                            ds      1
   829                           
   830                           psect	bssBANK0,class=BANK0,space=1
   831                           global __pbssBANK0
   832  006A                     __pbssBANK0:
   833  006A                     _DimmerLights:
   834  006A                            ds      1
   835                           
   836  006B                     _Load:
   837  006B                            ds      1
   838                           
   839  006C                     _PF:
   840  006C                            ds      1
   841                           
   842  006D                     _Sw:
   843  006D                            ds      1
   844                           
   845  006E                     _Temp:
   846  006E                            ds      1
   847                           
   848                           psect	bssBANK1,class=BANK1,space=1
   849                           global __pbssBANK1
   850  00A0                     __pbssBANK1:
   851  00A0                     _RF_Data:
   852  00A0                            ds      21
   853                           
   854  00B5                     _RF_Count:
   855  00B5                            ds      2
   856                           
   857  00B7                     _CRC:
   858  00B7                            ds      1
   859                           
   860  00B8                     _Dimmer:
   861  00B8                            ds      1
   862                           
   863  00B9                     _DimmerLightsIntr:
   864  00B9                            ds      1
   865                           
   866  00BA                     _LED:
   867  00BA                            ds      1
   868                           
   869  00BB                     _RFSW:
   870  00BB                            ds      1
   871                           
   872  00BC                     _RSSI:
   873  00BC                            ds      1
   874                           
   875  00BD                     _Rx_Length:
   876  00BD                            ds      1
   877                           
   878  00BE                     _SPI0Buffer:
   879  00BE                            ds      1
   880                           
   881  00BF                     _Tx_Length:
   882  00BF                            ds      1
   883                           
   884  00C0                     _r_address:
   885  00C0                            ds      1
   886                           
   887  00C1                     _r_data:
   888  00C1                            ds      1
   889                           
   890  00C2                     _s_data:
   891  00C2                            ds      1
   892                           
   893  00C3                     _PF1:
   894  00C3                            ds      8
   895                           
   896  00CB                     _VarTimer0:
   897  00CB                            ds      7
   898                           
   899  00D2                     _DlySw1:
   900  00D2                            ds      5
   901                           
   902  00D7                     _VarErrLED:
   903  00D7                            ds      4
   904                           
   905  00DB                     _VarLED1:
   906  00DB                            ds      4
   907                           
   908  00DF                     _VarLED2:
   909  00DF                            ds      4
   910                           
   911  00E3                     _Dimmer1:
   912  00E3                            ds      2
   913                           
   914  00E5                     _RF1:
   915  00E5                            ds      2
   916                           
   917  00E7                     _RFSW1:
   918  00E7                            ds      1
   919                           
   920                           psect	bssBANK2,class=BANK2,space=1
   921                           global __pbssBANK2
   922  0120                     __pbssBANK2:
   923  0120                     _VarTMain:
   924  0120                            ds      16
   925                           
   926  0130                     _Temp1:
   927  0130                            ds      14
   928                           
   929  013E                     _Buz1:
   930  013E                            ds      12
   931                           
   932  014A                     _DimmerLights1:
   933  014A                            ds      10
   934                           
   935  0154                     _Sw1:
   936  0154                            ds      9
   937                           
   938                           psect	dataBANK3,class=BANK3,space=1
   939                           global __pdataBANK3
   940  01A0                     __pdataBANK3:
   941                           	file	"G:\Program\PIC\Header_File\../Header_File/MCU_16F1518_B1.h"
   942                           	line	434
   943  01A0                     _VarMemory:
   944  01A0                            ds      37
   945                           
   946                           psect	dataBANK3
   947                           	file	"G:\Program\PIC\10.Switch_1Key_Dimmer\Switch_1Key_Dimmer_V1.1.0\Release\../Release
                                 /Switch_1key_Dimmer_V1.1.0.h"
   948                           	line	211
   949  01C5                     _VarProduct:
   950  01C5                            ds      30
   951                           
   952                           psect	bssBANK4,class=BANK4,space=1
   953                           global __pbssBANK4
   954  0220                     __pbssBANK4:
   955  0220                     _Load1:
   956  0220                            ds      71
   957                           
   958                           psect clrtext,class=CODE,delta=2
   959                           global clear_ram
   960                           ;	Called with FSR0 containing the base address, and
   961                           ;	WREG with the size to clear
   962  2000                     clear_ram:
   963  2000  0064               	clrwdt			;clear the watchdog before getting into this loop
   964  2001                     clrloop:
   965  2001  0180               	clrf	indf0		;clear RAM location pointed to by FSR
   966  2002  3101               	addfsr	0,1
   967  2003  0B89               	decfsz wreg		;Have we reached the end of clearing yet?
   968  2004  2801               	goto clrloop	;have we reached the end yet?
   969  2005  3400               	retlw	0		;all done for this memory range, return
   970                           ; Clear objects allocated to BITCOMMON
   971                           psect cinit,class=CODE,delta=2
   972                           	global __pbitbssCOMMON
   973  247D  01F0               	clrf	((__pbitbssCOMMON/8)+0)&07Fh
   974                           ; Clear objects allocated to COMMON
   975                           psect cinit,class=CODE,delta=2
   976                           	global __pbssCOMMON
   977  247E  01F8               	clrf	((__pbssCOMMON)+0)&07Fh
   978  247F  01F9               	clrf	((__pbssCOMMON)+1)&07Fh
   979  2480  01FA               	clrf	((__pbssCOMMON)+2)&07Fh
   980  2481  01FB               	clrf	((__pbssCOMMON)+3)&07Fh
   981                           ; Clear objects allocated to BANK0
   982                           psect cinit,class=CODE,delta=2
   983                           	global __pbssBANK0
   984  2482  01EA               	clrf	((__pbssBANK0)+0)&07Fh
   985  2483  01EB               	clrf	((__pbssBANK0)+1)&07Fh
   986  2484  01EC               	clrf	((__pbssBANK0)+2)&07Fh
   987  2485  01ED               	clrf	((__pbssBANK0)+3)&07Fh
   988  2486  01EE               	clrf	((__pbssBANK0)+4)&07Fh
   989                           ; Clear objects allocated to BANK1
   990                           psect cinit,class=CODE,delta=2
   991                           	global __pbssBANK1
   992  2487  30A0               	movlw	low(__pbssBANK1)
   993  2488  0084               	movwf	fsr0l
   994  2489  3000               	movlw	high(__pbssBANK1)
   995  248A  0085               	movwf	fsr0h
   996  248B  3048               	movlw	048h
   997  248C  31A0  2000  31A4   	fcall	clear_ram
   998                           ; Clear objects allocated to BANK2
   999                           psect cinit,class=CODE,delta=2
  1000                           	global __pbssBANK2
  1001  248F  3020               	movlw	low(__pbssBANK2)
  1002  2490  0084               	movwf	fsr0l
  1003  2491  3001               	movlw	high(__pbssBANK2)
  1004  2492  0085               	movwf	fsr0h
  1005  2493  303D               	movlw	03Dh
  1006  2494  31A0  2000  31A4   	fcall	clear_ram
  1007                           ; Clear objects allocated to BANK4
  1008                           psect cinit,class=CODE,delta=2
  1009                           	global __pbssBANK4
  1010  2497  3020               	movlw	low(__pbssBANK4)
  1011  2498  0084               	movwf	fsr0l
  1012  2499  3002               	movlw	high(__pbssBANK4)
  1013  249A  0085               	movwf	fsr0h
  1014  249B  3047               	movlw	047h
  1015  249C  31A0  2000  31A4   	fcall	clear_ram
  1016                           psect inittext,class=CODE,delta=2
  1017                           global init_ram,btemp
  1018  2D8A                     init_ram:
  1019  2D8A  00FE               	movwf btemp,f
  1020  2D8B                     initloop:
  1021  2D8B  0012               	moviw fsr0++
  1022  2D8C  001E               	movwi fsr1++
  1023  2D8D  0BFE               	decfsz btemp
  1024  2D8E  2D8B               	goto initloop
  1025  2D8F  3400               	retlw 0
  1026                           ; Initialize objects allocated to BANK3
  1027                           	global __pidataBANK3,__pdataBANK3
  1028                           psect cinit,class=CODE,delta=2
  1029  249F  3031               	movlw low(__pidataBANK3)
  1030  24A0  0084               	movwf fsr0l
  1031  24A1  30A7               	movlw high(__pidataBANK3)|80h
  1032  24A2  0085               	movwf fsr0h
  1033  24A3  30A0               	movlw low(__pdataBANK3)
  1034  24A4  0086               	movwf fsr1l
  1035  24A5  3001               	movlw high(__pdataBANK3)
  1036  24A6  0087               	movwf fsr1h
  1037  24A7  3043               	movlw 043h
  1038  24A8  31AD  258A  31A4   	fcall init_ram
  1039                           psect cinit,class=CODE,delta=2
  1040                           global end_of_initialization
  1041                           
  1042                           ;End of C runtime variable initialization code
  1043                           
  1044  24AB                     end_of_initialization:
  1045  24AB  0020               movlb 0
  1046  24AC  3188  2815         ljmp _main	;jump to C main() function
  1047                           psect	cstackCOMMON,class=COMMON,space=1
  1048                           global __pcstackCOMMON
  1049  0071                     __pcstackCOMMON:
  1050                           	global	?_setBuz_Initialization
  1051  0071                     ?_setBuz_Initialization:	; 0 bytes @ 0x0
  1052                           	global	?_setBuz_Main
  1053  0071                     ?_setBuz_Main:	; 0 bytes @ 0x0
  1054                           	global	?_CC2500_WriteByte
  1055  0071                     ?_CC2500_WriteByte:	; 0 bytes @ 0x0
  1056                           	global	?_CC2500_WriteCommand
  1057  0071                     ?_CC2500_WriteCommand:	; 0 bytes @ 0x0
  1058                           	global	?_CC2500_ReadStatus
  1059  0071                     ?_CC2500_ReadStatus:	; 0 bytes @ 0x0
  1060                           	global	?_CC2500_ReadByte
  1061  0071                     ?_CC2500_ReadByte:	; 0 bytes @ 0x0
  1062                           	global	?_CC2500_PowerRST
  1063  0071                     ?_CC2500_PowerRST:	; 0 bytes @ 0x0
  1064                           	global	?_CC2500_InitSetREG
  1065  0071                     ?_CC2500_InitSetREG:	; 0 bytes @ 0x0
  1066                           	global	?_CC2500_InitPATable
  1067  0071                     ?_CC2500_InitPATable:	; 0 bytes @ 0x0
  1068                           	global	?_CC2500_ClearTXFIFO
  1069  0071                     ?_CC2500_ClearTXFIFO:	; 0 bytes @ 0x0
  1070                           	global	?_CC2500_ClearRXFIFO
  1071  0071                     ?_CC2500_ClearRXFIFO:	; 0 bytes @ 0x0
  1072                           	global	?_CC2500_FrequencyCabr
  1073  0071                     ?_CC2500_FrequencyCabr:	; 0 bytes @ 0x0
  1074                           	global	?_CC2500_SIDLEMode
  1075  0071                     ?_CC2500_SIDLEMode:	; 0 bytes @ 0x0
  1076                           	global	?_DlyOff_Initialization
  1077  0071                     ?_DlyOff_Initialization:	; 0 bytes @ 0x0
  1078                           	global	?_DlyOff_Main
  1079  0071                     ?_DlyOff_Main:	; 0 bytes @ 0x0
  1080                           	global	?_setTxData
  1081  0071                     ?_setTxData:	; 0 bytes @ 0x0
  1082                           	global	?_setDimmerLights_Initialization
  1083  0071                     ?_setDimmerLights_Initialization:	; 0 bytes @ 0x0
  1084                           	global	?_setDimmerLights_Main
  1085  0071                     ?_setDimmerLights_Main:	; 0 bytes @ 0x0
  1086                           	global	?_setDimmerLights_ERROR
  1087  0071                     ?_setDimmerLights_ERROR:	; 0 bytes @ 0x0
  1088                           	global	?_setLED_Initialization
  1089  0071                     ?_setLED_Initialization:	; 0 bytes @ 0x0
  1090                           	global	?_setLED_Main
  1091  0071                     ?_setLED_Main:	; 0 bytes @ 0x0
  1092                           	global	?_MainT_Initialization
  1093  0071                     ?_MainT_Initialization:	; 0 bytes @ 0x0
  1094                           	global	?_Mcu_Initialization
  1095  0071                     ?_Mcu_Initialization:	; 0 bytes @ 0x0
  1096                           	global	?_Flash_Memory_Initialization
  1097  0071                     ?_Flash_Memory_Initialization:	; 0 bytes @ 0x0
  1098                           	global	?_Temp_Initialization
  1099  0071                     ?_Temp_Initialization:	; 0 bytes @ 0x0
  1100                           	global	?_Load_Initialization
  1101  0071                     ?_Load_Initialization:	; 0 bytes @ 0x0
  1102                           	global	?_PowerFault_Initialization
  1103  0071                     ?_PowerFault_Initialization:	; 0 bytes @ 0x0
  1104                           	global	?_Switch_Initialization
  1105  0071                     ?_Switch_Initialization:	; 0 bytes @ 0x0
  1106                           	global	?_RF_Initialization
  1107  0071                     ?_RF_Initialization:	; 0 bytes @ 0x0
  1108                           	global	?_MainT
  1109  0071                     ?_MainT:	; 0 bytes @ 0x0
  1110                           	global	?_Flash_Memory_Main
  1111  0071                     ?_Flash_Memory_Main:	; 0 bytes @ 0x0
  1112                           	global	?_Temp_Main
  1113  0071                     ?_Temp_Main:	; 0 bytes @ 0x0
  1114                           	global	?_Load_Main
  1115  0071                     ?_Load_Main:	; 0 bytes @ 0x0
  1116                           	global	?_PowerFault_Main
  1117  0071                     ?_PowerFault_Main:	; 0 bytes @ 0x0
  1118                           	global	?_Switch_Main
  1119  0071                     ?_Switch_Main:	; 0 bytes @ 0x0
  1120                           	global	?_RF_Main
  1121  0071                     ?_RF_Main:	; 0 bytes @ 0x0
  1122                           	global	?_IO_Set
  1123  0071                     ?_IO_Set:	; 0 bytes @ 0x0
  1124                           	global	?_TMR0_Set
  1125  0071                     ?_TMR0_Set:	; 0 bytes @ 0x0
  1126                           	global	?_ADC_Set
  1127  0071                     ?_ADC_Set:	; 0 bytes @ 0x0
  1128                           	global	?_INT_Set
  1129  0071                     ?_INT_Set:	; 0 bytes @ 0x0
  1130                           	global	?_IOC_Set
  1131  0071                     ?_IOC_Set:	; 0 bytes @ 0x0
  1132                           	global	?_IOC_ISR
  1133  0071                     ?_IOC_ISR:	; 0 bytes @ 0x0
  1134                           	global	??_IOC_ISR
  1135  0071                     ??_IOC_ISR:	; 0 bytes @ 0x0
  1136                           	global	?_TMR0_ISR
  1137  0071                     ?_TMR0_ISR:	; 0 bytes @ 0x0
  1138                           	global	?_INT_ISR
  1139  0071                     ?_INT_ISR:	; 0 bytes @ 0x0
  1140                           	global	?_Flash_Memory_Write
  1141  0071                     ?_Flash_Memory_Write:	; 0 bytes @ 0x0
  1142                           	global	?_Flash_Memory_Modify
  1143  0071                     ?_Flash_Memory_Modify:	; 0 bytes @ 0x0
  1144                           	global	?_setLoad_Initialization
  1145  0071                     ?_setLoad_Initialization:	; 0 bytes @ 0x0
  1146                           	global	?_setLoad_Main
  1147  0071                     ?_setLoad_Main:	; 0 bytes @ 0x0
  1148                           	global	?_setLoad_AH_AL_Restore
  1149  0071                     ?_setLoad_AH_AL_Restore:	; 0 bytes @ 0x0
  1150                           	global	?_setTemp_Main
  1151  0071                     ?_setTemp_Main:	; 0 bytes @ 0x0
  1152                           	global	?_setTemp_Initialization
  1153  0071                     ?_setTemp_Initialization:	; 0 bytes @ 0x0
  1154                           	global	?_setPowerFault_Initialization
  1155  0071                     ?_setPowerFault_Initialization:	; 0 bytes @ 0x0
  1156                           	global	?_setPowerFault_Main
  1157  0071                     ?_setPowerFault_Main:	; 0 bytes @ 0x0
  1158                           	global	?_setRF_Initialization
  1159  0071                     ?_setRF_Initialization:	; 0 bytes @ 0x0
  1160                           	global	?_setRF_Main
  1161  0071                     ?_setRF_Main:	; 0 bytes @ 0x0
  1162                           	global	?_RF_RxDisable
  1163  0071                     ?_RF_RxDisable:	; 0 bytes @ 0x0
  1164                           	global	?_getRxData
  1165  0071                     ?_getRxData:	; 0 bytes @ 0x0
  1166                           	global	?_setLog_Code
  1167  0071                     ?_setLog_Code:	; 0 bytes @ 0x0
  1168                           	global	?_setControl_Lights_Table
  1169  0071                     ?_setControl_Lights_Table:	; 0 bytes @ 0x0
  1170                           	global	?_setRFSW_Control
  1171  0071                     ?_setRFSW_Control:	; 0 bytes @ 0x0
  1172                           	global	?_setRFSW_AdjControl
  1173  0071                     ?_setRFSW_AdjControl:	; 0 bytes @ 0x0
  1174                           	global	?_setRF_DimmerValue
  1175  0071                     ?_setRF_DimmerValue:	; 0 bytes @ 0x0
  1176                           	global	?_setSw_Initialization
  1177  0071                     ?_setSw_Initialization:	; 0 bytes @ 0x0
  1178                           	global	?_setSw_Main
  1179  0071                     ?_setSw_Main:	; 0 bytes @ 0x0
  1180                           	global	?_Sw_OnFunc
  1181  0071                     ?_Sw_OnFunc:	; 0 bytes @ 0x0
  1182                           	global	?_Sw_AdjFunc
  1183  0071                     ?_Sw_AdjFunc:	; 0 bytes @ 0x0
  1184                           	global	?_Sw_OffFunc
  1185  0071                     ?_Sw_OffFunc:	; 0 bytes @ 0x0
  1186                           	global	?_BuzPointSelect
  1187  0071                     ?_BuzPointSelect:	; 0 bytes @ 0x0
  1188                           	global	?_Buzzer_Initialization
  1189  0071                     ?_Buzzer_Initialization:	; 0 bytes @ 0x0
  1190                           	global	?_Buzzer_Main
  1191  0071                     ?_Buzzer_Main:	; 0 bytes @ 0x0
  1192                           	global	?_CC2500_TxData
  1193  0071                     ?_CC2500_TxData:	; 0 bytes @ 0x0
  1194                           	global	?_CC2500_RxData
  1195  0071                     ?_CC2500_RxData:	; 0 bytes @ 0x0
  1196                           	global	?_CC2500_PowerOnInitial
  1197  0071                     ?_CC2500_PowerOnInitial:	; 0 bytes @ 0x0
  1198                           	global	?_DelayOffPointSelect
  1199  0071                     ?_DelayOffPointSelect:	; 0 bytes @ 0x0
  1200                           	global	?_DelayOff_Initialization
  1201  0071                     ?_DelayOff_Initialization:	; 0 bytes @ 0x0
  1202                           	global	?_DelayOff_Main
  1203  0071                     ?_DelayOff_Main:	; 0 bytes @ 0x0
  1204                           	global	?_DimmerLightsPointSelect
  1205  0071                     ?_DimmerLightsPointSelect:	; 0 bytes @ 0x0
  1206                           	global	?_DimmerLights_Initialization
  1207  0071                     ?_DimmerLights_Initialization:	; 0 bytes @ 0x0
  1208                           	global	?_DimmerLights_Close
  1209  0071                     ?_DimmerLights_Close:	; 0 bytes @ 0x0
  1210                           	global	?_DimmerLights_Main
  1211  0071                     ?_DimmerLights_Main:	; 0 bytes @ 0x0
  1212                           	global	?_DimmerLights_ERROR
  1213  0071                     ?_DimmerLights_ERROR:	; 0 bytes @ 0x0
  1214                           	global	?_setDimmerLights_AdjRF
  1215  0071                     ?_setDimmerLights_AdjRF:	; 0 bytes @ 0x0
  1216                           	global	?_DimmerPointSelect
  1217  0071                     ?_DimmerPointSelect:	; 0 bytes @ 0x0
  1218                           	global	?_LedPointSelect
  1219  0071                     ?_LedPointSelect:	; 0 bytes @ 0x0
  1220                           	global	?_LED_Initialization
  1221  0071                     ?_LED_Initialization:	; 0 bytes @ 0x0
  1222                           	global	?_LED_Main
  1223  0071                     ?_LED_Main:	; 0 bytes @ 0x0
  1224                           	global	?_main
  1225  0071                     ?_main:	; 0 bytes @ 0x0
  1226                           	global	?_ISR
  1227  0071                     ?_ISR:	; 0 bytes @ 0x0
  1228                           	global	?_setDimmerReClock
  1229  0071                     ?_setDimmerReClock:	; 0 bytes @ 0x0
  1230                           	global	??_setDimmerReClock
  1231  0071                     ??_setDimmerReClock:	; 0 bytes @ 0x0
  1232                           	global	?_setINT_GO
  1233  0071                     ?_setINT_GO:	; 0 bytes @ 0x0
  1234                           	global	?_Flash_Memory_Unlock
  1235  0071                     ?_Flash_Memory_Unlock:	; 0 bytes @ 0x0
  1236                           	global	?_Flash_Memory_Erasing
  1237  0071                     ?_Flash_Memory_Erasing:	; 0 bytes @ 0x0
  1238                           	global	?_LoadPointSelect
  1239  0071                     ?_LoadPointSelect:	; 0 bytes @ 0x0
  1240                           	global	?_TempPointSelect
  1241  0071                     ?_TempPointSelect:	; 0 bytes @ 0x0
  1242                           	global	?_PowerFaultPointSelect
  1243  0071                     ?_PowerFaultPointSelect:	; 0 bytes @ 0x0
  1244                           	global	?_RfPointSelect
  1245  0071                     ?_RfPointSelect:	; 0 bytes @ 0x0
  1246                           	global	?_RfSWPointSelect
  1247  0071                     ?_RfSWPointSelect:	; 0 bytes @ 0x0
  1248                           	global	?_TouchPower
  1249  0071                     ?_TouchPower:	; 0 bytes @ 0x0
  1250                           	global	?_SwPointSelect
  1251  0071                     ?_SwPointSelect:	; 0 bytes @ 0x0
  1252                           	global	?i1_LoadPointSelect
  1253  0071                     ?i1_LoadPointSelect:	; 0 bytes @ 0x0
  1254                           	global	??i1_LoadPointSelect
  1255  0071                     ??i1_LoadPointSelect:	; 0 bytes @ 0x0
  1256                           	global	?i1_RfPointSelect
  1257  0071                     ?i1_RfPointSelect:	; 0 bytes @ 0x0
  1258                           	global	??i1_RfPointSelect
  1259  0071                     ??i1_RfPointSelect:	; 0 bytes @ 0x0
  1260                           	global	?_DelayTimejudge
  1261  0071                     ?_DelayTimejudge:	; 1 bytes @ 0x0
  1262                           	global	?_getPercentValue
  1263  0071                     ?_getPercentValue:	; 1 bytes @ 0x0
  1264                           	global	?_getDimmer_Detect
  1265  0071                     ?_getDimmer_Detect:	; 1 bytes @ 0x0
  1266                           	global	?_getDimmerLights_StatusFlag
  1267  0071                     ?_getDimmerLights_StatusFlag:	; 1 bytes @ 0x0
  1268                           	global	?_getDimmerLights_Trigger
  1269  0071                     ?_getDimmerLights_Trigger:	; 1 bytes @ 0x0
  1270                           	global	?_getDimmer_TempERROR
  1271  0071                     ?_getDimmer_TempERROR:	; 1 bytes @ 0x0
  1272                           	global	?_getDimmer_LoadERROR
  1273  0071                     ?_getDimmer_LoadERROR:	; 1 bytes @ 0x0
  1274                           	global	?_getDimmer_PFERROR
  1275  0071                     ?_getDimmer_PFERROR:	; 1 bytes @ 0x0
  1276                           	global	?_setPercentValue
  1277  0071                     ?_setPercentValue:	; 1 bytes @ 0x0
  1278                           	global	?_getTemp_ERROR
  1279  0071                     ?_getTemp_ERROR:	; 1 bytes @ 0x0
  1280                           	global	?_getPF_ERROR
  1281  0071                     ?_getPF_ERROR:	; 1 bytes @ 0x0
  1282                           	global	?_getLoad_ERROR
  1283  0071                     ?_getLoad_ERROR:	; 1 bytes @ 0x0
  1284                           	global	?_getTemp_Safe
  1285  0071                     ?_getTemp_Safe:	; 1 bytes @ 0x0
  1286                           	global	?_getPF_Safe
  1287  0071                     ?_getPF_Safe:	; 1 bytes @ 0x0
  1288                           	global	?_getLoad_Safe
  1289  0071                     ?_getLoad_Safe:	; 1 bytes @ 0x0
  1290                           	global	?_Flash_Memory_Read
  1291  0071                     ?_Flash_Memory_Read:	; 1 bytes @ 0x0
  1292                           	global	setBuz_Initialization@buz
  1293  0071                     setBuz_Initialization@buz:	; 1 bytes @ 0x0
  1294                           	global	setLoad_Count@load
  1295  0071                     setLoad_Count@load:	; 1 bytes @ 0x0
  1296                           	global	setLoad_AH_AL_Restore@load
  1297  0071                     setLoad_AH_AL_Restore@load:	; 1 bytes @ 0x0
  1298                           	global	TempPointSelect@temp
  1299  0071                     TempPointSelect@temp:	; 1 bytes @ 0x0
  1300                           	global	PowerFaultPointSelect@pf
  1301  0071                     PowerFaultPointSelect@pf:	; 1 bytes @ 0x0
  1302                           	global	setRF_Initialization@rf
  1303  0071                     setRF_Initialization@rf:	; 1 bytes @ 0x0
  1304  0071                     	ds	1
  1305                           	global	i1LoadPointSelect@load
  1306  0072                     i1LoadPointSelect@load:	; 1 bytes @ 0x1
  1307                           	global	i1RfPointSelect@rf
  1308  0072                     i1RfPointSelect@rf:	; 1 bytes @ 0x1
  1309  0072                     	ds	1
  1310                           	global	?_setRF_ReceiveGO
  1311  0073                     ?_setRF_ReceiveGO:	; 0 bytes @ 0x2
  1312                           	global	?i1_setLoad_StatusOff
  1313  0073                     ?i1_setLoad_StatusOff:	; 0 bytes @ 0x2
  1314                           	global	setRF_ReceiveGO@command
  1315  0073                     setRF_ReceiveGO@command:	; 1 bytes @ 0x2
  1316                           	global	i1setLoad_StatusOff@lights
  1317  0073                     i1setLoad_StatusOff@lights:	; 1 bytes @ 0x2
  1318  0073                     	ds	1
  1319                           	global	??_setRF_ReceiveGO
  1320  0074                     ??_setRF_ReceiveGO:	; 0 bytes @ 0x3
  1321                           	global	setRF_ReceiveGO@rf
  1322  0074                     setRF_ReceiveGO@rf:	; 1 bytes @ 0x3
  1323                           	global	i1setLoad_StatusOff@command
  1324  0074                     i1setLoad_StatusOff@command:	; 1 bytes @ 0x3
  1325  0074                     	ds	1
  1326                           	global	??_INT_ISR
  1327  0075                     ??_INT_ISR:	; 0 bytes @ 0x4
  1328                           	global	??i1_setLoad_StatusOff
  1329  0075                     ??i1_setLoad_StatusOff:	; 0 bytes @ 0x4
  1330                           	global	i1setLoad_StatusOff@load
  1331  0075                     i1setLoad_StatusOff@load:	; 1 bytes @ 0x4
  1332  0075                     	ds	1
  1333                           	global	??_TMR0_ISR
  1334  0076                     ??_TMR0_ISR:	; 0 bytes @ 0x5
  1335  0076                     	ds	1
  1336                           	global	??_ISR
  1337  0077                     ??_ISR:	; 0 bytes @ 0x6
  1338  0077                     	ds	1
  1339                           psect	cstackBANK0,class=BANK0,space=1
  1340                           global __pcstackBANK0
  1341  0020                     __pcstackBANK0:
  1342                           	global	??_CC2500_WriteByte
  1343  0020                     ??_CC2500_WriteByte:	; 0 bytes @ 0x0
  1344                           	global	??_CC2500_ReadByte
  1345  0020                     ??_CC2500_ReadByte:	; 0 bytes @ 0x0
  1346                           	global	?_DelayTime_1us
  1347  0020                     ?_DelayTime_1us:	; 0 bytes @ 0x0
  1348                           	global	?_setRF_DimmerLights
  1349  0020                     ?_setRF_DimmerLights:	; 0 bytes @ 0x0
  1350                           	global	??_DelayTimejudge
  1351  0020                     ??_DelayTimejudge:	; 0 bytes @ 0x0
  1352                           	global	?_setLoad_Count
  1353  0020                     ?_setLoad_Count:	; 0 bytes @ 0x0
  1354                           	global	??_MainT_Initialization
  1355  0020                     ??_MainT_Initialization:	; 0 bytes @ 0x0
  1356                           	global	??_IO_Set
  1357  0020                     ??_IO_Set:	; 0 bytes @ 0x0
  1358                           	global	??_TMR0_Set
  1359  0020                     ??_TMR0_Set:	; 0 bytes @ 0x0
  1360                           	global	??_ADC_Set
  1361  0020                     ??_ADC_Set:	; 0 bytes @ 0x0
  1362                           	global	??_INT_Set
  1363  0020                     ??_INT_Set:	; 0 bytes @ 0x0
  1364                           	global	??_IOC_Set
  1365  0020                     ??_IOC_Set:	; 0 bytes @ 0x0
  1366                           	global	??_Flash_Memory_Read
  1367  0020                     ??_Flash_Memory_Read:	; 0 bytes @ 0x0
  1368                           	global	??_Flash_Memory_Write
  1369  0020                     ??_Flash_Memory_Write:	; 0 bytes @ 0x0
  1370                           	global	??_setLoad_AH_AL_Restore
  1371  0020                     ??_setLoad_AH_AL_Restore:	; 0 bytes @ 0x0
  1372                           	global	??_setRF_Initialization
  1373  0020                     ??_setRF_Initialization:	; 0 bytes @ 0x0
  1374                           	global	??_BuzPointSelect
  1375  0020                     ??_BuzPointSelect:	; 0 bytes @ 0x0
  1376                           	global	??_DelayOffPointSelect
  1377  0020                     ??_DelayOffPointSelect:	; 0 bytes @ 0x0
  1378                           	global	??_DimmerLightsPointSelect
  1379  0020                     ??_DimmerLightsPointSelect:	; 0 bytes @ 0x0
  1380                           	global	??_DimmerPointSelect
  1381  0020                     ??_DimmerPointSelect:	; 0 bytes @ 0x0
  1382                           	global	??_LedPointSelect
  1383  0020                     ??_LedPointSelect:	; 0 bytes @ 0x0
  1384                           	global	??_setINT_GO
  1385  0020                     ??_setINT_GO:	; 0 bytes @ 0x0
  1386                           	global	??_Flash_Memory_Unlock
  1387  0020                     ??_Flash_Memory_Unlock:	; 0 bytes @ 0x0
  1388                           	global	??_Flash_Memory_Erasing
  1389  0020                     ??_Flash_Memory_Erasing:	; 0 bytes @ 0x0
  1390                           	global	??_LoadPointSelect
  1391  0020                     ??_LoadPointSelect:	; 0 bytes @ 0x0
  1392                           	global	??_TempPointSelect
  1393  0020                     ??_TempPointSelect:	; 0 bytes @ 0x0
  1394                           	global	??_PowerFaultPointSelect
  1395  0020                     ??_PowerFaultPointSelect:	; 0 bytes @ 0x0
  1396                           	global	??_RfPointSelect
  1397  0020                     ??_RfPointSelect:	; 0 bytes @ 0x0
  1398                           	global	??_RfSWPointSelect
  1399  0020                     ??_RfSWPointSelect:	; 0 bytes @ 0x0
  1400                           	global	??_TouchPower
  1401  0020                     ??_TouchPower:	; 0 bytes @ 0x0
  1402                           	global	??_SwPointSelect
  1403  0020                     ??_SwPointSelect:	; 0 bytes @ 0x0
  1404                           	global	?_getAD
  1405  0020                     ?_getAD:	; 2 bytes @ 0x0
  1406                           	global	?___wmul
  1407  0020                     ?___wmul:	; 2 bytes @ 0x0
  1408                           	global	?___lwdiv
  1409  0020                     ?___lwdiv:	; 2 bytes @ 0x0
  1410                           	global	?___awdiv
  1411  0020                     ?___awdiv:	; 2 bytes @ 0x0
  1412                           	global	?___ftpack
  1413  0020                     ?___ftpack:	; 3 bytes @ 0x0
  1414                           	global	setINT_GO@command
  1415  0020                     setINT_GO@command:	; 1 bytes @ 0x0
  1416                           	global	getAD@adcon1
  1417  0020                     getAD@adcon1:	; 1 bytes @ 0x0
  1418                           	global	setLoad_Count@command
  1419  0020                     setLoad_Count@command:	; 1 bytes @ 0x0
  1420                           	global	setRF_DimmerLights@on
  1421  0020                     setRF_DimmerLights@on:	; 1 bytes @ 0x0
  1422                           	global	DelayTime_1us@count
  1423  0020                     DelayTime_1us@count:	; 2 bytes @ 0x0
  1424                           	global	___wmul@multiplier
  1425  0020                     ___wmul@multiplier:	; 2 bytes @ 0x0
  1426                           	global	___lwdiv@divisor
  1427  0020                     ___lwdiv@divisor:	; 2 bytes @ 0x0
  1428                           	global	___awdiv@divisor
  1429  0020                     ___awdiv@divisor:	; 2 bytes @ 0x0
  1430                           	global	___ftpack@arg
  1431  0020                     ___ftpack@arg:	; 3 bytes @ 0x0
  1432  0020                     	ds	1
  1433                           	global	??_setRF_DimmerLights
  1434  0021                     ??_setRF_DimmerLights:	; 0 bytes @ 0x1
  1435                           	global	??_setLoad_Count
  1436  0021                     ??_setLoad_Count:	; 0 bytes @ 0x1
  1437                           	global	??_Mcu_Initialization
  1438  0021                     ??_Mcu_Initialization:	; 0 bytes @ 0x1
  1439                           	global	??_RF_Initialization
  1440  0021                     ??_RF_Initialization:	; 0 bytes @ 0x1
  1441                           	global	?_setTemp_Enable
  1442  0021                     ?_setTemp_Enable:	; 0 bytes @ 0x1
  1443                           	global	??_getTemp_ERROR
  1444  0021                     ??_getTemp_ERROR:	; 0 bytes @ 0x1
  1445                           	global	??_getPF_ERROR
  1446  0021                     ??_getPF_ERROR:	; 0 bytes @ 0x1
  1447                           	global	??_getTemp_Safe
  1448  0021                     ??_getTemp_Safe:	; 0 bytes @ 0x1
  1449                           	global	??_getPF_Safe
  1450  0021                     ??_getPF_Safe:	; 0 bytes @ 0x1
  1451                           	global	??_setTemp_Initialization
  1452  0021                     ??_setTemp_Initialization:	; 0 bytes @ 0x1
  1453                           	global	??_setPowerFault_Initialization
  1454  0021                     ??_setPowerFault_Initialization:	; 0 bytes @ 0x1
  1455                           	global	BuzPointSelect@buz
  1456  0021                     BuzPointSelect@buz:	; 1 bytes @ 0x1
  1457                           	global	CC2500_WriteByte@loop_a
  1458  0021                     CC2500_WriteByte@loop_a:	; 1 bytes @ 0x1
  1459                           	global	CC2500_ReadByte@loop_b
  1460  0021                     CC2500_ReadByte@loop_b:	; 1 bytes @ 0x1
  1461                           	global	DelayOffPointSelect@sw
  1462  0021                     DelayOffPointSelect@sw:	; 1 bytes @ 0x1
  1463                           	global	DelayTimejudge@i
  1464  0021                     DelayTimejudge@i:	; 1 bytes @ 0x1
  1465                           	global	DimmerLightsPointSelect@lights
  1466  0021                     DimmerLightsPointSelect@lights:	; 1 bytes @ 0x1
  1467                           	global	DimmerPointSelect@dimmer
  1468  0021                     DimmerPointSelect@dimmer:	; 1 bytes @ 0x1
  1469                           	global	LedPointSelect@led
  1470  0021                     LedPointSelect@led:	; 1 bytes @ 0x1
  1471                           	global	Flash_Memory_Read@i
  1472  0021                     Flash_Memory_Read@i:	; 1 bytes @ 0x1
  1473                           	global	Flash_Memory_Write@i
  1474  0021                     Flash_Memory_Write@i:	; 1 bytes @ 0x1
  1475                           	global	LoadPointSelect@load
  1476  0021                     LoadPointSelect@load:	; 1 bytes @ 0x1
  1477                           	global	setLoad_AH_AL_Restore@i
  1478  0021                     setLoad_AH_AL_Restore@i:	; 1 bytes @ 0x1
  1479                           	global	setTemp_Enable@command
  1480  0021                     setTemp_Enable@command:	; 1 bytes @ 0x1
  1481                           	global	getTemp_Safe@temp
  1482  0021                     getTemp_Safe@temp:	; 1 bytes @ 0x1
  1483                           	global	getTemp_ERROR@temp
  1484  0021                     getTemp_ERROR@temp:	; 1 bytes @ 0x1
  1485                           	global	setTemp_Initialization@temp
  1486  0021                     setTemp_Initialization@temp:	; 1 bytes @ 0x1
  1487                           	global	setPowerFault_Initialization@pf
  1488  0021                     setPowerFault_Initialization@pf:	; 1 bytes @ 0x1
  1489                           	global	getPF_Safe@pf
  1490  0021                     getPF_Safe@pf:	; 1 bytes @ 0x1
  1491                           	global	getPF_ERROR@pf
  1492  0021                     getPF_ERROR@pf:	; 1 bytes @ 0x1
  1493                           	global	RfPointSelect@rf
  1494  0021                     RfPointSelect@rf:	; 1 bytes @ 0x1
  1495                           	global	RfSWPointSelect@sw
  1496  0021                     RfSWPointSelect@sw:	; 1 bytes @ 0x1
  1497                           	global	SwPointSelect@sw
  1498  0021                     SwPointSelect@sw:	; 1 bytes @ 0x1
  1499  0021                     	ds	1
  1500                           	global	??_setBuz_Main
  1501  0022                     ??_setBuz_Main:	; 0 bytes @ 0x2
  1502                           	global	??_CC2500_WriteCommand
  1503  0022                     ??_CC2500_WriteCommand:	; 0 bytes @ 0x2
  1504                           	global	??_CC2500_ReadStatus
  1505  0022                     ??_CC2500_ReadStatus:	; 0 bytes @ 0x2
  1506                           	global	?_setRF_RxStatus
  1507  0022                     ?_setRF_RxStatus:	; 0 bytes @ 0x2
  1508                           	global	??_DelayTime_1us
  1509  0022                     ??_DelayTime_1us:	; 0 bytes @ 0x2
  1510                           	global	?_CC2500_WriteREG
  1511  0022                     ?_CC2500_WriteREG:	; 0 bytes @ 0x2
  1512                           	global	??_DlyOff_Initialization
  1513  0022                     ??_DlyOff_Initialization:	; 0 bytes @ 0x2
  1514                           	global	?_setSw_Status
  1515  0022                     ?_setSw_Status:	; 0 bytes @ 0x2
  1516                           	global	?_setRFSW_Status
  1517  0022                     ?_setRFSW_Status:	; 0 bytes @ 0x2
  1518                           	global	?_setDimmerLights_Trigger
  1519  0022                     ?_setDimmerLights_Trigger:	; 0 bytes @ 0x2
  1520                           	global	?_setDimmerLights_Switch
  1521  0022                     ?_setDimmerLights_Switch:	; 0 bytes @ 0x2
  1522                           	global	??_setTxData
  1523  0022                     ??_setTxData:	; 0 bytes @ 0x2
  1524                           	global	??_getDimmer_Detect
  1525  0022                     ??_getDimmer_Detect:	; 0 bytes @ 0x2
  1526                           	global	?_setDimmer_Detect
  1527  0022                     ?_setDimmer_Detect:	; 0 bytes @ 0x2
  1528                           	global	??_getDimmerLights_StatusFlag
  1529  0022                     ??_getDimmerLights_StatusFlag:	; 0 bytes @ 0x2
  1530                           	global	?_setLoad_GO
  1531  0022                     ?_setLoad_GO:	; 0 bytes @ 0x2
  1532                           	global	?_setDimmerLights_Open
  1533  0022                     ?_setDimmerLights_Open:	; 0 bytes @ 0x2
  1534                           	global	?_setDimmerLights_Close
  1535  0022                     ?_setDimmerLights_Close:	; 0 bytes @ 0x2
  1536                           	global	??_getDimmerLights_Trigger
  1537  0022                     ??_getDimmerLights_Trigger:	; 0 bytes @ 0x2
  1538                           	global	??_getDimmer_TempERROR
  1539  0022                     ??_getDimmer_TempERROR:	; 0 bytes @ 0x2
  1540                           	global	??_getDimmer_LoadERROR
  1541  0022                     ??_getDimmer_LoadERROR:	; 0 bytes @ 0x2
  1542                           	global	??_getDimmer_PFERROR
  1543  0022                     ??_getDimmer_PFERROR:	; 0 bytes @ 0x2
  1544                           	global	?_setDimmerLights_TriggerERROR
  1545  0022                     ?_setDimmerLights_TriggerERROR:	; 0 bytes @ 0x2
  1546                           	global	?_setLoad_StatusOff
  1547  0022                     ?_setLoad_StatusOff:	; 0 bytes @ 0x2
  1548                           	global	?_setLED
  1549  0022                     ?_setLED:	; 0 bytes @ 0x2
  1550                           	global	?_setLoad_StatusOn
  1551  0022                     ?_setLoad_StatusOn:	; 0 bytes @ 0x2
  1552                           	global	?_setLoad_LightsStatus
  1553  0022                     ?_setLoad_LightsStatus:	; 0 bytes @ 0x2
  1554                           	global	??_setLED_Main
  1555  0022                     ??_setLED_Main:	; 0 bytes @ 0x2
  1556                           	global	??_Temp_Initialization
  1557  0022                     ??_Temp_Initialization:	; 0 bytes @ 0x2
  1558                           	global	??_PowerFault_Initialization
  1559  0022                     ??_PowerFault_Initialization:	; 0 bytes @ 0x2
  1560                           	global	??_setTemp_Enable
  1561  0022                     ??_setTemp_Enable:	; 0 bytes @ 0x2
  1562                           	global	?_setLoad_Enable
  1563  0022                     ?_setLoad_Enable:	; 0 bytes @ 0x2
  1564                           	global	??_getLoad_ERROR
  1565  0022                     ??_getLoad_ERROR:	; 0 bytes @ 0x2
  1566                           	global	??_getLoad_Safe
  1567  0022                     ??_getLoad_Safe:	; 0 bytes @ 0x2
  1568                           	global	?_setSw_Enable
  1569  0022                     ?_setSw_Enable:	; 0 bytes @ 0x2
  1570                           	global	??_setLoad_Initialization
  1571  0022                     ??_setLoad_Initialization:	; 0 bytes @ 0x2
  1572                           	global	?_setBuz_Enable
  1573  0022                     ?_setBuz_Enable:	; 0 bytes @ 0x2
  1574                           	global	?_setDimmerLights_AdjGo
  1575  0022                     ?_setDimmerLights_AdjGo:	; 0 bytes @ 0x2
  1576                           	global	?_setDimmerLights_TriggerAdj
  1577  0022                     ?_setDimmerLights_TriggerAdj:	; 0 bytes @ 0x2
  1578                           	global	?_setDimmer_TempERROR
  1579  0022                     ?_setDimmer_TempERROR:	; 0 bytes @ 0x2
  1580                           	global	?_setDimmer_LoadERROR
  1581  0022                     ?_setDimmer_LoadERROR:	; 0 bytes @ 0x2
  1582                           	global	?_setDimmer_PFERROR
  1583  0022                     ?_setDimmer_PFERROR:	; 0 bytes @ 0x2
  1584                           	global	??_getAD
  1585  0022                     ??_getAD:	; 0 bytes @ 0x2
  1586                           	global	?_setRF_Learn
  1587  0022                     ?_setRF_Learn:	; 0 bytes @ 0x2
  1588                           	global	setBuz_Enable@command
  1589  0022                     setBuz_Enable@command:	; 1 bytes @ 0x2
  1590                           	global	CC2500_WriteREG@value
  1591  0022                     CC2500_WriteREG@value:	; 1 bytes @ 0x2
  1592                           	global	DlyOff_Initialization@sw
  1593  0022                     DlyOff_Initialization@sw:	; 1 bytes @ 0x2
  1594                           	global	DelayTimejudge@value
  1595  0022                     DelayTimejudge@value:	; 1 bytes @ 0x2
  1596                           	global	setDimmerLights_TriggerERROR@command
  1597  0022                     setDimmerLights_TriggerERROR@command:	; 1 bytes @ 0x2
  1598                           	global	setDimmerLights_Switch@command
  1599  0022                     setDimmerLights_Switch@command:	; 1 bytes @ 0x2
  1600                           	global	setDimmerLights_AdjGo@command
  1601  0022                     setDimmerLights_AdjGo@command:	; 1 bytes @ 0x2
  1602                           	global	setDimmerLights_Trigger@command
  1603  0022                     setDimmerLights_Trigger@command:	; 1 bytes @ 0x2
  1604                           	global	setDimmerLights_TriggerAdj@command
  1605  0022                     setDimmerLights_TriggerAdj@command:	; 1 bytes @ 0x2
  1606                           	global	setDimmerLights_Open@command
  1607  0022                     setDimmerLights_Open@command:	; 1 bytes @ 0x2
  1608                           	global	setDimmerLights_Close@command
  1609  0022                     setDimmerLights_Close@command:	; 1 bytes @ 0x2
  1610                           	global	setDimmer_TempERROR@command
  1611  0022                     setDimmer_TempERROR@command:	; 1 bytes @ 0x2
  1612                           	global	setDimmer_LoadERROR@command
  1613  0022                     setDimmer_LoadERROR@command:	; 1 bytes @ 0x2
  1614                           	global	setDimmer_PFERROR@command
  1615  0022                     setDimmer_PFERROR@command:	; 1 bytes @ 0x2
  1616                           	global	setDimmer_Detect@command
  1617  0022                     setDimmer_Detect@command:	; 1 bytes @ 0x2
  1618                           	global	getDimmer_TempERROR@dimmer
  1619  0022                     getDimmer_TempERROR@dimmer:	; 1 bytes @ 0x2
  1620                           	global	getDimmer_LoadERROR@dimmer
  1621  0022                     getDimmer_LoadERROR@dimmer:	; 1 bytes @ 0x2
  1622                           	global	getDimmer_PFERROR@dimmer
  1623  0022                     getDimmer_PFERROR@dimmer:	; 1 bytes @ 0x2
  1624                           	global	setLED@command
  1625  0022                     setLED@command:	; 1 bytes @ 0x2
  1626                           	global	setLED_Main@led
  1627  0022                     setLED_Main@led:	; 1 bytes @ 0x2
  1628                           	global	Flash_Memory_Read@address
  1629  0022                     Flash_Memory_Read@address:	; 1 bytes @ 0x2
  1630                           	global	setLoad_Initialization@load
  1631  0022                     setLoad_Initialization@load:	; 1 bytes @ 0x2
  1632                           	global	setLoad_LightsStatus@lights
  1633  0022                     setLoad_LightsStatus@lights:	; 1 bytes @ 0x2
  1634                           	global	setLoad_Enable@command
  1635  0022                     setLoad_Enable@command:	; 1 bytes @ 0x2
  1636                           	global	setLoad_GO@command
  1637  0022                     setLoad_GO@command:	; 1 bytes @ 0x2
  1638                           	global	setLoad_StatusOn@command
  1639  0022                     setLoad_StatusOn@command:	; 1 bytes @ 0x2
  1640                           	global	setLoad_StatusOff@lights
  1641  0022                     setLoad_StatusOff@lights:	; 1 bytes @ 0x2
  1642                           	global	getLoad_ERROR@load
  1643  0022                     getLoad_ERROR@load:	; 1 bytes @ 0x2
  1644                           	global	setTemp_Enable@temp
  1645  0022                     setTemp_Enable@temp:	; 1 bytes @ 0x2
  1646                           	global	setRF_Learn@command
  1647  0022                     setRF_Learn@command:	; 1 bytes @ 0x2
  1648                           	global	setRF_RxStatus@command
  1649  0022                     setRF_RxStatus@command:	; 1 bytes @ 0x2
  1650                           	global	setRFSW_Status@command
  1651  0022                     setRFSW_Status@command:	; 1 bytes @ 0x2
  1652                           	global	setSw_Enable@command
  1653  0022                     setSw_Enable@command:	; 1 bytes @ 0x2
  1654                           	global	setSw_Status@command
  1655  0022                     setSw_Status@command:	; 1 bytes @ 0x2
  1656                           	global	DelayTime_1us@i
  1657  0022                     DelayTime_1us@i:	; 2 bytes @ 0x2
  1658                           	global	___wmul@multiplicand
  1659  0022                     ___wmul@multiplicand:	; 2 bytes @ 0x2
  1660                           	global	___lwdiv@dividend
  1661  0022                     ___lwdiv@dividend:	; 2 bytes @ 0x2
  1662                           	global	___awdiv@dividend
  1663  0022                     ___awdiv@dividend:	; 2 bytes @ 0x2
  1664  0022                     	ds	1
  1665                           	global	??_setRF_RxStatus
  1666  0023                     ??_setRF_RxStatus:	; 0 bytes @ 0x3
  1667                           	global	??_CC2500_WriteREG
  1668  0023                     ??_CC2500_WriteREG:	; 0 bytes @ 0x3
  1669                           	global	??_setSw_Status
  1670  0023                     ??_setSw_Status:	; 0 bytes @ 0x3
  1671                           	global	??_setRFSW_Status
  1672  0023                     ??_setRFSW_Status:	; 0 bytes @ 0x3
  1673                           	global	??_setDimmerLights_Trigger
  1674  0023                     ??_setDimmerLights_Trigger:	; 0 bytes @ 0x3
  1675                           	global	??_setDimmerLights_Switch
  1676  0023                     ??_setDimmerLights_Switch:	; 0 bytes @ 0x3
  1677                           	global	??_setDimmer_Detect
  1678  0023                     ??_setDimmer_Detect:	; 0 bytes @ 0x3
  1679                           	global	??_setLoad_GO
  1680  0023                     ??_setLoad_GO:	; 0 bytes @ 0x3
  1681                           	global	??_setDimmerLights_Open
  1682  0023                     ??_setDimmerLights_Open:	; 0 bytes @ 0x3
  1683                           	global	??_setDimmerLights_Close
  1684  0023                     ??_setDimmerLights_Close:	; 0 bytes @ 0x3
  1685                           	global	??_setDimmerLights_TriggerERROR
  1686  0023                     ??_setDimmerLights_TriggerERROR:	; 0 bytes @ 0x3
  1687                           	global	??_setLED
  1688  0023                     ??_setLED:	; 0 bytes @ 0x3
  1689                           	global	??_setLoad_StatusOn
  1690  0023                     ??_setLoad_StatusOn:	; 0 bytes @ 0x3
  1691                           	global	??_Load_Initialization
  1692  0023                     ??_Load_Initialization:	; 0 bytes @ 0x3
  1693                           	global	??_setLoad_Enable
  1694  0023                     ??_setLoad_Enable:	; 0 bytes @ 0x3
  1695                           	global	??_setSw_Enable
  1696  0023                     ??_setSw_Enable:	; 0 bytes @ 0x3
  1697                           	global	??_setBuz_Enable
  1698  0023                     ??_setBuz_Enable:	; 0 bytes @ 0x3
  1699                           	global	??_DelayOff_Initialization
  1700  0023                     ??_DelayOff_Initialization:	; 0 bytes @ 0x3
  1701                           	global	?_setDelayOff_GO
  1702  0023                     ?_setDelayOff_GO:	; 0 bytes @ 0x3
  1703                           	global	??_setDimmerLights_AdjGo
  1704  0023                     ??_setDimmerLights_AdjGo:	; 0 bytes @ 0x3
  1705                           	global	??_setDimmerLights_TriggerAdj
  1706  0023                     ??_setDimmerLights_TriggerAdj:	; 0 bytes @ 0x3
  1707                           	global	??_setDimmer_TempERROR
  1708  0023                     ??_setDimmer_TempERROR:	; 0 bytes @ 0x3
  1709                           	global	??_setDimmer_LoadERROR
  1710  0023                     ??_setDimmer_LoadERROR:	; 0 bytes @ 0x3
  1711                           	global	??_setDimmer_PFERROR
  1712  0023                     ??_setDimmer_PFERROR:	; 0 bytes @ 0x3
  1713                           	global	??_LED_Main
  1714  0023                     ??_LED_Main:	; 0 bytes @ 0x3
  1715                           	global	??_setRF_Learn
  1716  0023                     ??_setRF_Learn:	; 0 bytes @ 0x3
  1717                           	global	setBuz_Enable@buz
  1718  0023                     setBuz_Enable@buz:	; 1 bytes @ 0x3
  1719                           	global	CC2500_WriteCommand@command
  1720  0023                     CC2500_WriteCommand@command:	; 1 bytes @ 0x3
  1721                           	global	CC2500_ReadStatus@status_addr
  1722  0023                     CC2500_ReadStatus@status_addr:	; 1 bytes @ 0x3
  1723                           	global	setDelayOff_GO@command
  1724  0023                     setDelayOff_GO@command:	; 1 bytes @ 0x3
  1725                           	global	getDimmerLights_StatusFlag@length
  1726  0023                     getDimmerLights_StatusFlag@length:	; 1 bytes @ 0x3
  1727                           	global	getDimmerLights_Trigger@length
  1728  0023                     getDimmerLights_Trigger@length:	; 1 bytes @ 0x3
  1729                           	global	setDimmerLights_Switch@lights
  1730  0023                     setDimmerLights_Switch@lights:	; 1 bytes @ 0x3
  1731                           	global	setDimmerLights_AdjGo@lights
  1732  0023                     setDimmerLights_AdjGo@lights:	; 1 bytes @ 0x3
  1733                           	global	setDimmerLights_Trigger@lights
  1734  0023                     setDimmerLights_Trigger@lights:	; 1 bytes @ 0x3
  1735                           	global	setDimmerLights_TriggerAdj@lights
  1736  0023                     setDimmerLights_TriggerAdj@lights:	; 1 bytes @ 0x3
  1737                           	global	setDimmerLights_Open@lights
  1738  0023                     setDimmerLights_Open@lights:	; 1 bytes @ 0x3
  1739                           	global	setDimmerLights_Close@lights
  1740  0023                     setDimmerLights_Close@lights:	; 1 bytes @ 0x3
  1741                           	global	setDimmer_TempERROR@dimmer
  1742  0023                     setDimmer_TempERROR@dimmer:	; 1 bytes @ 0x3
  1743                           	global	setDimmer_LoadERROR@dimmer
  1744  0023                     setDimmer_LoadERROR@dimmer:	; 1 bytes @ 0x3
  1745                           	global	setDimmer_PFERROR@dimmer
  1746  0023                     setDimmer_PFERROR@dimmer:	; 1 bytes @ 0x3
  1747                           	global	setDimmer_Detect@dimmer
  1748  0023                     setDimmer_Detect@dimmer:	; 1 bytes @ 0x3
  1749                           	global	getDimmer_Detect@dimmer
  1750  0023                     getDimmer_Detect@dimmer:	; 1 bytes @ 0x3
  1751                           	global	setLED@led
  1752  0023                     setLED@led:	; 1 bytes @ 0x3
  1753                           	global	Flash_Memory_Read@ret
  1754  0023                     Flash_Memory_Read@ret:	; 1 bytes @ 0x3
  1755                           	global	setLoad_LightsStatus@command
  1756  0023                     setLoad_LightsStatus@command:	; 1 bytes @ 0x3
  1757                           	global	setLoad_Enable@load
  1758  0023                     setLoad_Enable@load:	; 1 bytes @ 0x3
  1759                           	global	setLoad_GO@load
  1760  0023                     setLoad_GO@load:	; 1 bytes @ 0x3
  1761                           	global	setLoad_StatusOn@load
  1762  0023                     setLoad_StatusOn@load:	; 1 bytes @ 0x3
  1763                           	global	setLoad_StatusOff@command
  1764  0023                     setLoad_StatusOff@command:	; 1 bytes @ 0x3
  1765                           	global	getLoad_Safe@load
  1766  0023                     getLoad_Safe@load:	; 1 bytes @ 0x3
  1767                           	global	setRF_Learn@rf
  1768  0023                     setRF_Learn@rf:	; 1 bytes @ 0x3
  1769                           	global	setRF_RxStatus@rf
  1770  0023                     setRF_RxStatus@rf:	; 1 bytes @ 0x3
  1771                           	global	setTxData@rf
  1772  0023                     setTxData@rf:	; 1 bytes @ 0x3
  1773                           	global	setRFSW_Status@sw
  1774  0023                     setRFSW_Status@sw:	; 1 bytes @ 0x3
  1775                           	global	setRF_DimmerLights@status
  1776  0023                     setRF_DimmerLights@status:	; 1 bytes @ 0x3
  1777                           	global	setSw_Enable@sw
  1778  0023                     setSw_Enable@sw:	; 1 bytes @ 0x3
  1779                           	global	setSw_Status@sw
  1780  0023                     setSw_Status@sw:	; 1 bytes @ 0x3
  1781                           	global	___ftpack@exp
  1782  0023                     ___ftpack@exp:	; 1 bytes @ 0x3
  1783  0023                     	ds	1
  1784                           	global	??_setBuz_Initialization
  1785  0024                     ??_setBuz_Initialization:	; 0 bytes @ 0x4
  1786                           	global	??_CC2500_ClearTXFIFO
  1787  0024                     ??_CC2500_ClearTXFIFO:	; 0 bytes @ 0x4
  1788                           	global	??_CC2500_ClearRXFIFO
  1789  0024                     ??_CC2500_ClearRXFIFO:	; 0 bytes @ 0x4
  1790                           	global	??_CC2500_SIDLEMode
  1791  0024                     ??_CC2500_SIDLEMode:	; 0 bytes @ 0x4
  1792                           	global	??_setLoad_StatusOff
  1793  0024                     ??_setLoad_StatusOff:	; 0 bytes @ 0x4
  1794                           	global	??_setLoad_LightsStatus
  1795  0024                     ??_setLoad_LightsStatus:	; 0 bytes @ 0x4
  1796                           	global	??_setLED_Initialization
  1797  0024                     ??_setLED_Initialization:	; 0 bytes @ 0x4
  1798                           	global	??_Flash_Memory_Modify
  1799  0024                     ??_Flash_Memory_Modify:	; 0 bytes @ 0x4
  1800                           	global	??_RF_RxDisable
  1801  0024                     ??_RF_RxDisable:	; 0 bytes @ 0x4
  1802                           	global	??_setSw_Initialization
  1803  0024                     ??_setSw_Initialization:	; 0 bytes @ 0x4
  1804                           	global	??_Sw_AdjFunc
  1805  0024                     ??_Sw_AdjFunc:	; 0 bytes @ 0x4
  1806                           	global	??_Buzzer_Initialization
  1807  0024                     ??_Buzzer_Initialization:	; 0 bytes @ 0x4
  1808                           	global	??_CC2500_TxData
  1809  0024                     ??_CC2500_TxData:	; 0 bytes @ 0x4
  1810                           	global	??_CC2500_RxData
  1811  0024                     ??_CC2500_RxData:	; 0 bytes @ 0x4
  1812                           	global	??___wmul
  1813  0024                     ??___wmul:	; 0 bytes @ 0x4
  1814                           	global	??___lwdiv
  1815  0024                     ??___lwdiv:	; 0 bytes @ 0x4
  1816                           	global	??___awdiv
  1817  0024                     ??___awdiv:	; 0 bytes @ 0x4
  1818                           	global	setBuz_Main@buz
  1819  0024                     setBuz_Main@buz:	; 1 bytes @ 0x4
  1820                           	global	CC2500_WriteREG@w_addr
  1821  0024                     CC2500_WriteREG@w_addr:	; 1 bytes @ 0x4
  1822                           	global	setDelayOff_GO@value
  1823  0024                     setDelayOff_GO@value:	; 1 bytes @ 0x4
  1824                           	global	getDimmerLights_StatusFlag@Status
  1825  0024                     getDimmerLights_StatusFlag@Status:	; 1 bytes @ 0x4
  1826                           	global	getDimmerLights_Trigger@Status
  1827  0024                     getDimmerLights_Trigger@Status:	; 1 bytes @ 0x4
  1828                           	global	setDimmerLights_TriggerERROR@lights
  1829  0024                     setDimmerLights_TriggerERROR@lights:	; 1 bytes @ 0x4
  1830                           	global	setLED_Initialization@led
  1831  0024                     setLED_Initialization@led:	; 1 bytes @ 0x4
  1832                           	global	setLoad_StatusOff@load
  1833  0024                     setLoad_StatusOff@load:	; 1 bytes @ 0x4
  1834                           	global	RF_RxDisable@rf
  1835  0024                     RF_RxDisable@rf:	; 1 bytes @ 0x4
  1836                           	global	setRF_DimmerLights@lights
  1837  0024                     setRF_DimmerLights@lights:	; 1 bytes @ 0x4
  1838                           	global	setSw_Initialization@sw
  1839  0024                     setSw_Initialization@sw:	; 1 bytes @ 0x4
  1840                           	global	Sw_AdjFunc@sw
  1841  0024                     Sw_AdjFunc@sw:	; 1 bytes @ 0x4
  1842                           	global	___ftpack@sign
  1843  0024                     ___ftpack@sign:	; 1 bytes @ 0x4
  1844                           	global	DelayTime_1us@j
  1845  0024                     DelayTime_1us@j:	; 2 bytes @ 0x4
  1846                           	global	___wmul@product
  1847  0024                     ___wmul@product:	; 2 bytes @ 0x4
  1848  0024                     	ds	1
  1849                           	global	??_CC2500_InitSetREG
  1850  0025                     ??_CC2500_InitSetREG:	; 0 bytes @ 0x5
  1851                           	global	??_CC2500_InitPATable
  1852  0025                     ??_CC2500_InitPATable:	; 0 bytes @ 0x5
  1853                           	global	??_setDimmerLights_ERROR
  1854  0025                     ??_setDimmerLights_ERROR:	; 0 bytes @ 0x5
  1855                           	global	??_Switch_Initialization
  1856  0025                     ??_Switch_Initialization:	; 0 bytes @ 0x5
  1857                           	global	?_setRF_Enable
  1858  0025                     ?_setRF_Enable:	; 0 bytes @ 0x5
  1859                           	global	??___ftpack
  1860  0025                     ??___ftpack:	; 0 bytes @ 0x5
  1861                           	global	??_Buzzer_Main
  1862  0025                     ??_Buzzer_Main:	; 0 bytes @ 0x5
  1863                           	global	??_setDelayOff_GO
  1864  0025                     ??_setDelayOff_GO:	; 0 bytes @ 0x5
  1865                           	global	??_LED_Initialization
  1866  0025                     ??_LED_Initialization:	; 0 bytes @ 0x5
  1867                           	global	CC2500_TxData@loop_e
  1868  0025                     CC2500_TxData@loop_e:	; 1 bytes @ 0x5
  1869                           	global	CC2500_RxData@loop_f
  1870  0025                     CC2500_RxData@loop_f:	; 1 bytes @ 0x5
  1871                           	global	getDimmerLights_StatusFlag@i
  1872  0025                     getDimmerLights_StatusFlag@i:	; 1 bytes @ 0x5
  1873                           	global	getDimmerLights_Trigger@i
  1874  0025                     getDimmerLights_Trigger@i:	; 1 bytes @ 0x5
  1875                           	global	setLoad_LightsStatus@load
  1876  0025                     setLoad_LightsStatus@load:	; 1 bytes @ 0x5
  1877                           	global	setRF_Enable@command
  1878  0025                     setRF_Enable@command:	; 1 bytes @ 0x5
  1879                           	global	___awdiv@counter
  1880  0025                     ___awdiv@counter:	; 1 bytes @ 0x5
  1881                           	global	___lwdiv@quotient
  1882  0025                     ___lwdiv@quotient:	; 2 bytes @ 0x5
  1883  0025                     	ds	1
  1884                           	global	??_CC2500_PowerRST
  1885  0026                     ??_CC2500_PowerRST:	; 0 bytes @ 0x6
  1886                           	global	??_CC2500_FrequencyCabr
  1887  0026                     ??_CC2500_FrequencyCabr:	; 0 bytes @ 0x6
  1888                           	global	?_setDimmerLights
  1889  0026                     ?_setDimmerLights:	; 0 bytes @ 0x6
  1890                           	global	??_setRF_Enable
  1891  0026                     ??_setRF_Enable:	; 0 bytes @ 0x6
  1892                           	global	??_DimmerLights_Close
  1893  0026                     ??_DimmerLights_Close:	; 0 bytes @ 0x6
  1894                           	global	CC2500_InitSetREG@temp1
  1895  0026                     CC2500_InitSetREG@temp1:	; 1 bytes @ 0x6
  1896                           	global	CC2500_InitPATable@temp
  1897  0026                     CC2500_InitPATable@temp:	; 1 bytes @ 0x6
  1898                           	global	setDelayOff_GO@sw
  1899  0026                     setDelayOff_GO@sw:	; 1 bytes @ 0x6
  1900                           	global	setDimmerLights_ERROR@lights
  1901  0026                     setDimmerLights_ERROR@lights:	; 1 bytes @ 0x6
  1902                           	global	setDimmerLights@status
  1903  0026                     setDimmerLights@status:	; 1 bytes @ 0x6
  1904                           	global	getAD@adcon0
  1905  0026                     getAD@adcon0:	; 1 bytes @ 0x6
  1906                           	global	Flash_Memory_Modify@i
  1907  0026                     Flash_Memory_Modify@i:	; 1 bytes @ 0x6
  1908                           	global	setRF_Enable@rf
  1909  0026                     setRF_Enable@rf:	; 1 bytes @ 0x6
  1910                           	global	___awdiv@sign
  1911  0026                     ___awdiv@sign:	; 1 bytes @ 0x6
  1912  0026                     	ds	1
  1913                           	global	??_setDimmerLights
  1914  0027                     ??_setDimmerLights:	; 0 bytes @ 0x7
  1915                           	global	?_getLoad_AD
  1916  0027                     ?_getLoad_AD:	; 0 bytes @ 0x7
  1917                           	global	?_getTemp_AD
  1918  0027                     ?_getTemp_AD:	; 0 bytes @ 0x7
  1919                           	global	?_getPowerFault_AD
  1920  0027                     ?_getPowerFault_AD:	; 0 bytes @ 0x7
  1921                           	global	??_Flash_Memory_Main
  1922  0027                     ??_Flash_Memory_Main:	; 0 bytes @ 0x7
  1923                           	global	??_Sw_OffFunc
  1924  0027                     ??_Sw_OffFunc:	; 0 bytes @ 0x7
  1925                           	global	CC2500_InitSetREG@temp2
  1926  0027                     CC2500_InitSetREG@temp2:	; 1 bytes @ 0x7
  1927                           	global	CC2500_InitPATable@loop_d
  1928  0027                     CC2500_InitPATable@loop_d:	; 1 bytes @ 0x7
  1929                           	global	getLoad_AD@channel
  1930  0027                     getLoad_AD@channel:	; 1 bytes @ 0x7
  1931                           	global	getTemp_AD@channel
  1932  0027                     getTemp_AD@channel:	; 1 bytes @ 0x7
  1933                           	global	getPowerFault_AD@channel
  1934  0027                     getPowerFault_AD@channel:	; 1 bytes @ 0x7
  1935                           	global	___lwdiv@counter
  1936  0027                     ___lwdiv@counter:	; 1 bytes @ 0x7
  1937                           	global	___awdiv@quotient
  1938  0027                     ___awdiv@quotient:	; 2 bytes @ 0x7
  1939  0027                     	ds	1
  1940                           	global	??_getLoad_AD
  1941  0028                     ??_getLoad_AD:	; 0 bytes @ 0x8
  1942                           	global	??_getTemp_AD
  1943  0028                     ??_getTemp_AD:	; 0 bytes @ 0x8
  1944                           	global	??_getPowerFault_AD
  1945  0028                     ??_getPowerFault_AD:	; 0 bytes @ 0x8
  1946                           	global	?___fttol
  1947  0028                     ?___fttol:	; 4 bytes @ 0x8
  1948                           	global	CC2500_InitSetREG@loop_c
  1949  0028                     CC2500_InitSetREG@loop_c:	; 1 bytes @ 0x8
  1950                           	global	setDimmerLights@lights
  1951  0028                     setDimmerLights@lights:	; 1 bytes @ 0x8
  1952                           	global	___fttol@f1
  1953  0028                     ___fttol@f1:	; 3 bytes @ 0x8
  1954  0028                     	ds	1
  1955                           	global	?_setBuz
  1956  0029                     ?_setBuz:	; 0 bytes @ 0x9
  1957                           	global	??_CC2500_PowerOnInitial
  1958  0029                     ??_CC2500_PowerOnInitial:	; 0 bytes @ 0x9
  1959                           	global	setBuz@count
  1960  0029                     setBuz@count:	; 1 bytes @ 0x9
  1961                           	global	Sw_OffFunc@sw
  1962  0029                     Sw_OffFunc@sw:	; 1 bytes @ 0x9
  1963  0029                     	ds	1
  1964                           	global	setBuz@time
  1965  002A                     setBuz@time:	; 2 bytes @ 0xA
  1966  002A                     	ds	2
  1967                           	global	??_setBuz
  1968  002C                     ??_setBuz:	; 0 bytes @ 0xC
  1969                           	global	??___fttol
  1970  002C                     ??___fttol:	; 0 bytes @ 0xC
  1971                           	global	getTemp_AD@temp
  1972  002C                     getTemp_AD@temp:	; 1 bytes @ 0xC
  1973                           	global	getPowerFault_AD@pf
  1974  002C                     getPowerFault_AD@pf:	; 1 bytes @ 0xC
  1975  002C                     	ds	1
  1976                           	global	setBuz@buz
  1977  002D                     setBuz@buz:	; 1 bytes @ 0xD
  1978                           	global	getLoad_AD@load
  1979  002D                     getLoad_AD@load:	; 1 bytes @ 0xD
  1980  002D                     	ds	1
  1981                           	global	??_DlyOff_Main
  1982  002E                     ??_DlyOff_Main:	; 0 bytes @ 0xE
  1983                           	global	??_setLog_Code
  1984  002E                     ??_setLog_Code:	; 0 bytes @ 0xE
  1985                           	global	??_setRFSW_Control
  1986  002E                     ??_setRFSW_Control:	; 0 bytes @ 0xE
  1987                           	global	??_Sw_OnFunc
  1988  002E                     ??_Sw_OnFunc:	; 0 bytes @ 0xE
  1989                           	global	??_DimmerLights_ERROR
  1990  002E                     ??_DimmerLights_ERROR:	; 0 bytes @ 0xE
  1991                           	global	getLoad_AD@j
  1992  002E                     getLoad_AD@j:	; 1 bytes @ 0xE
  1993                           	global	Sw_OnFunc@sw
  1994  002E                     Sw_OnFunc@sw:	; 1 bytes @ 0xE
  1995  002E                     	ds	1
  1996                           	global	?_setLoad_ERROR
  1997  002F                     ?_setLoad_ERROR:	; 0 bytes @ 0xF
  1998                           	global	?_setOverTemp_ERROR
  1999  002F                     ?_setOverTemp_ERROR:	; 0 bytes @ 0xF
  2000                           	global	?_setPowerFault_ERROR
  2001  002F                     ?_setPowerFault_ERROR:	; 0 bytes @ 0xF
  2002                           	global	??_setSw_Main
  2003  002F                     ??_setSw_Main:	; 0 bytes @ 0xF
  2004                           	global	getLoad_AD@i
  2005  002F                     getLoad_AD@i:	; 1 bytes @ 0xF
  2006                           	global	setLoad_ERROR@command
  2007  002F                     setLoad_ERROR@command:	; 1 bytes @ 0xF
  2008                           	global	setOverTemp_ERROR@command
  2009  002F                     setOverTemp_ERROR@command:	; 1 bytes @ 0xF
  2010                           	global	setPowerFault_ERROR@command
  2011  002F                     setPowerFault_ERROR@command:	; 1 bytes @ 0xF
  2012                           	global	setLog_Code@rf
  2013  002F                     setLog_Code@rf:	; 1 bytes @ 0xF
  2014  002F                     	ds	1
  2015                           	global	??_setLoad_ERROR
  2016  0030                     ??_setLoad_ERROR:	; 0 bytes @ 0x10
  2017                           	global	??_setOverTemp_ERROR
  2018  0030                     ??_setOverTemp_ERROR:	; 0 bytes @ 0x10
  2019                           	global	??_setPowerFault_ERROR
  2020  0030                     ??_setPowerFault_ERROR:	; 0 bytes @ 0x10
  2021                           	global	DlyOff_Main@sw
  2022  0030                     DlyOff_Main@sw:	; 1 bytes @ 0x10
  2023                           	global	setRFSW_Control@sw
  2024  0030                     setRFSW_Control@sw:	; 1 bytes @ 0x10
  2025                           	global	___fttol@sign1
  2026  0030                     ___fttol@sign1:	; 1 bytes @ 0x10
  2027  0030                     	ds	1
  2028                           	global	??_DelayOff_Main
  2029  0031                     ??_DelayOff_Main:	; 0 bytes @ 0x11
  2030                           	global	setLoad_ERROR@load
  2031  0031                     setLoad_ERROR@load:	; 1 bytes @ 0x11
  2032                           	global	setOverTemp_ERROR@temp
  2033  0031                     setOverTemp_ERROR@temp:	; 1 bytes @ 0x11
  2034                           	global	setPowerFault_ERROR@pf
  2035  0031                     setPowerFault_ERROR@pf:	; 1 bytes @ 0x11
  2036                           	global	_setSw_Main$18099
  2037  0031                     _setSw_Main$18099:	; 1 bytes @ 0x11
  2038                           	global	___fttol@lval
  2039  0031                     ___fttol@lval:	; 4 bytes @ 0x11
  2040  0031                     	ds	1
  2041                           	global	??_setLoad_Main
  2042  0032                     ??_setLoad_Main:	; 0 bytes @ 0x12
  2043                           	global	??_setTemp_Main
  2044  0032                     ??_setTemp_Main:	; 0 bytes @ 0x12
  2045                           	global	??_setPowerFault_Main
  2046  0032                     ??_setPowerFault_Main:	; 0 bytes @ 0x12
  2047                           	global	setSw_Main@sw
  2048  0032                     setSw_Main@sw:	; 1 bytes @ 0x12
  2049  0032                     	ds	1
  2050                           	global	??_Switch_Main
  2051  0033                     ??_Switch_Main:	; 0 bytes @ 0x13
  2052  0033                     	ds	1
  2053                           	global	setPowerFault_Main@pf
  2054  0034                     setPowerFault_Main@pf:	; 1 bytes @ 0x14
  2055  0034                     	ds	1
  2056                           	global	??_PowerFault_Main
  2057  0035                     ??_PowerFault_Main:	; 0 bytes @ 0x15
  2058                           	global	setTemp_Main@temp
  2059  0035                     setTemp_Main@temp:	; 1 bytes @ 0x15
  2060                           	global	___fttol@exp1
  2061  0035                     ___fttol@exp1:	; 1 bytes @ 0x15
  2062  0035                     	ds	1
  2063                           	global	??_Temp_Main
  2064  0036                     ??_Temp_Main:	; 0 bytes @ 0x16
  2065                           	global	?___awtoft
  2066  0036                     ?___awtoft:	; 3 bytes @ 0x16
  2067                           	global	setLoad_Main@load
  2068  0036                     setLoad_Main@load:	; 1 bytes @ 0x16
  2069                           	global	___awtoft@c
  2070  0036                     ___awtoft@c:	; 2 bytes @ 0x16
  2071  0036                     	ds	1
  2072                           	global	??_Load_Main
  2073  0037                     ??_Load_Main:	; 0 bytes @ 0x17
  2074  0037                     	ds	2
  2075                           	global	??___awtoft
  2076  0039                     ??___awtoft:	; 0 bytes @ 0x19
  2077  0039                     	ds	2
  2078                           	global	___awtoft@sign
  2079  003B                     ___awtoft@sign:	; 1 bytes @ 0x1B
  2080  003B                     	ds	1
  2081                           	global	?___ftdiv
  2082  003C                     ?___ftdiv:	; 3 bytes @ 0x1C
  2083                           	global	?___ftmul
  2084  003C                     ?___ftmul:	; 3 bytes @ 0x1C
  2085                           	global	___ftdiv@f2
  2086  003C                     ___ftdiv@f2:	; 3 bytes @ 0x1C
  2087                           	global	___ftmul@f1
  2088  003C                     ___ftmul@f1:	; 3 bytes @ 0x1C
  2089  003C                     	ds	3
  2090                           	global	___ftdiv@f1
  2091  003F                     ___ftdiv@f1:	; 3 bytes @ 0x1F
  2092                           	global	___ftmul@f2
  2093  003F                     ___ftmul@f2:	; 3 bytes @ 0x1F
  2094  003F                     	ds	3
  2095                           	global	??___ftdiv
  2096  0042                     ??___ftdiv:	; 0 bytes @ 0x22
  2097                           	global	??___ftmul
  2098  0042                     ??___ftmul:	; 0 bytes @ 0x22
  2099  0042                     	ds	4
  2100                           	global	___ftdiv@cntr
  2101  0046                     ___ftdiv@cntr:	; 1 bytes @ 0x26
  2102                           	global	___ftmul@exp
  2103  0046                     ___ftmul@exp:	; 1 bytes @ 0x26
  2104  0046                     	ds	1
  2105                           	global	___ftdiv@f3
  2106  0047                     ___ftdiv@f3:	; 3 bytes @ 0x27
  2107                           	global	___ftmul@f3_as_product
  2108  0047                     ___ftmul@f3_as_product:	; 3 bytes @ 0x27
  2109  0047                     	ds	3
  2110                           	global	___ftdiv@exp
  2111  004A                     ___ftdiv@exp:	; 1 bytes @ 0x2A
  2112                           	global	___ftmul@cntr
  2113  004A                     ___ftmul@cntr:	; 1 bytes @ 0x2A
  2114  004A                     	ds	1
  2115                           	global	___ftdiv@sign
  2116  004B                     ___ftdiv@sign:	; 1 bytes @ 0x2B
  2117                           	global	___ftmul@sign
  2118  004B                     ___ftmul@sign:	; 1 bytes @ 0x2B
  2119  004B                     	ds	1
  2120                           	global	??_setPercentValue
  2121  004C                     ??_setPercentValue:	; 0 bytes @ 0x2C
  2122                           	global	?___ftadd
  2123  004C                     ?___ftadd:	; 3 bytes @ 0x2C
  2124                           	global	setPercentValue@value
  2125  004C                     setPercentValue@value:	; 1 bytes @ 0x2C
  2126                           	global	___ftadd@f1
  2127  004C                     ___ftadd@f1:	; 3 bytes @ 0x2C
  2128  004C                     	ds	1
  2129                           	global	?_setDimmerLights_Adj
  2130  004D                     ?_setDimmerLights_Adj:	; 0 bytes @ 0x2D
  2131                           	global	??_Flash_Memory_Initialization
  2132  004D                     ??_Flash_Memory_Initialization:	; 0 bytes @ 0x2D
  2133                           	global	setDimmerLights_Adj@status
  2134  004D                     setDimmerLights_Adj@status:	; 1 bytes @ 0x2D
  2135  004D                     	ds	1
  2136                           	global	??_setDimmerLights_Adj
  2137  004E                     ??_setDimmerLights_Adj:	; 0 bytes @ 0x2E
  2138                           	global	Flash_Memory_Initialization@i
  2139  004E                     Flash_Memory_Initialization@i:	; 1 bytes @ 0x2E
  2140  004E                     	ds	1
  2141                           	global	___ftadd@f2
  2142  004F                     ___ftadd@f2:	; 3 bytes @ 0x2F
  2143  004F                     	ds	1
  2144                           	global	setDimmerLights_Adj@lights
  2145  0050                     setDimmerLights_Adj@lights:	; 1 bytes @ 0x30
  2146  0050                     	ds	1
  2147                           	global	??_setDimmerLights_Main
  2148  0051                     ??_setDimmerLights_Main:	; 0 bytes @ 0x31
  2149                           	global	setDimmerLights_Main@open
  2150  0051                     setDimmerLights_Main@open:	; 1 bytes @ 0x31
  2151  0051                     	ds	1
  2152                           	global	??___ftadd
  2153  0052                     ??___ftadd:	; 0 bytes @ 0x32
  2154                           	global	setDimmerLights_Main@close
  2155  0052                     setDimmerLights_Main@close:	; 1 bytes @ 0x32
  2156  0052                     	ds	1
  2157                           	global	setDimmerLights_Main@lights
  2158  0053                     setDimmerLights_Main@lights:	; 1 bytes @ 0x33
  2159  0053                     	ds	1
  2160                           	global	??_DimmerLights_Main
  2161  0054                     ??_DimmerLights_Main:	; 0 bytes @ 0x34
  2162  0054                     	ds	2
  2163                           	global	___ftadd@sign
  2164  0056                     ___ftadd@sign:	; 1 bytes @ 0x36
  2165  0056                     	ds	1
  2166                           	global	___ftadd@exp2
  2167  0057                     ___ftadd@exp2:	; 1 bytes @ 0x37
  2168  0057                     	ds	1
  2169                           	global	___ftadd@exp1
  2170  0058                     ___ftadd@exp1:	; 1 bytes @ 0x38
  2171  0058                     	ds	1
  2172                           	global	??_getPercentValue
  2173  0059                     ??_getPercentValue:	; 0 bytes @ 0x39
  2174  0059                     	ds	2
  2175                           	global	getPercentValue@value
  2176  005B                     getPercentValue@value:	; 1 bytes @ 0x3B
  2177  005B                     	ds	1
  2178                           	global	??_setDimmerLights_Initialization
  2179  005C                     ??_setDimmerLights_Initialization:	; 0 bytes @ 0x3C
  2180                           	global	??_MainT
  2181  005C                     ??_MainT:	; 0 bytes @ 0x3C
  2182                           	global	??_setDimmerLights_AdjRF
  2183  005C                     ??_setDimmerLights_AdjRF:	; 0 bytes @ 0x3C
  2184  005C                     	ds	1
  2185                           	global	setDimmerLights_AdjRF@lights
  2186  005D                     setDimmerLights_AdjRF@lights:	; 1 bytes @ 0x3D
  2187  005D                     	ds	1
  2188                           	global	??_setRF_DimmerValue
  2189  005E                     ??_setRF_DimmerValue:	; 0 bytes @ 0x3E
  2190                           	global	setDimmerLights_Initialization@lights
  2191  005E                     setDimmerLights_Initialization@lights:	; 1 bytes @ 0x3E
  2192  005E                     	ds	1
  2193                           	global	??_DimmerLights_Initialization
  2194  005F                     ??_DimmerLights_Initialization:	; 0 bytes @ 0x3F
  2195  005F                     	ds	1
  2196                           	global	setRF_DimmerValue@lights
  2197  0060                     setRF_DimmerValue@lights:	; 1 bytes @ 0x40
  2198  0060                     	ds	1
  2199                           	global	??_setRFSW_AdjControl
  2200  0061                     ??_setRFSW_AdjControl:	; 0 bytes @ 0x41
  2201  0061                     	ds	2
  2202                           	global	setRFSW_AdjControl@sw
  2203  0063                     setRFSW_AdjControl@sw:	; 1 bytes @ 0x43
  2204  0063                     	ds	1
  2205                           	global	??_setControl_Lights_Table
  2206  0064                     ??_setControl_Lights_Table:	; 0 bytes @ 0x44
  2207                           	global	setControl_Lights_Table@rf
  2208  0064                     setControl_Lights_Table@rf:	; 1 bytes @ 0x44
  2209  0064                     	ds	1
  2210                           	global	??_getRxData
  2211  0065                     ??_getRxData:	; 0 bytes @ 0x45
  2212                           	global	getRxData@rf
  2213  0065                     getRxData@rf:	; 1 bytes @ 0x45
  2214  0065                     	ds	1
  2215                           	global	??_setRF_Main
  2216  0066                     ??_setRF_Main:	; 0 bytes @ 0x46
  2217  0066                     	ds	1
  2218                           	global	setRF_Main@rf
  2219  0067                     setRF_Main@rf:	; 1 bytes @ 0x47
  2220  0067                     	ds	1
  2221                           	global	_setRF_Main$16648
  2222  0068                     _setRF_Main$16648:	; 1 bytes @ 0x48
  2223  0068                     	ds	1
  2224                           	global	??_RF_Main
  2225  0069                     ??_RF_Main:	; 0 bytes @ 0x49
  2226                           	global	??_main
  2227  0069                     ??_main:	; 0 bytes @ 0x49
  2228  0069                     	ds	1
  2229 ;;Data sizes: Strings 0, constant 102, data 67, bss 213, persistent 4 stack 0
  2230 ;;Auto spaces:   Size  Autos    Used
  2231 ;; COMMON          14      7      14
  2232 ;; BANK0           80     74      80
  2233 ;; BANK1           80      0      73
  2234 ;; BANK2           80      0      61
  2235 ;; BANK3           80      0      67
  2236 ;; BANK4           80      0      71
  2237 ;; BANK5           80      0       0
  2238 ;; BANK6           80      0       0
  2239 ;; BANK7           80      0       0
  2240 ;; BANK8           80      0       0
  2241 ;; BANK9           80      0       0
  2242 ;; BANK10          80      0       0
  2243 ;; BANK11          80      0       0
  2244 ;; BANK12          48      0       0
  2245                           
  2246 ;;
  2247 ;; Pointer list with targets:
  2248                           
  2249 ;; ?___ftpack	float  size(1) Largest target is 0
  2250 ;;
  2251 ;; ?___wmul	unsigned int  size(1) Largest target is 0
  2252 ;;
  2253 ;; ?___lwdiv	unsigned int  size(1) Largest target is 0
  2254 ;;
  2255 ;; ?_getAD	int  size(1) Largest target is 0
  2256 ;;
  2257 ;; ?___ftdiv	float  size(1) Largest target is 0
  2258 ;;
  2259 ;; ?___fttol	long  size(1) Largest target is 0
  2260 ;;
  2261 ;; ?___ftmul	float  size(1) Largest target is 0
  2262 ;;
  2263 ;; ?___awtoft	float  size(1) Largest target is 0
  2264 ;;
  2265 ;; ?___ftadd	float  size(1) Largest target is 0
  2266 ;;
  2267 ;; ?___awdiv	int  size(1) Largest target is 0
  2268 ;;
  2269 ;; DimmerLightsIntr	PTR struct DimmerLights size(1) Largest target is 0
  2270 ;;		 -> NULL(NULL[0]), 
  2271 ;;
  2272 ;; Sw	PTR struct Switch size(1) Largest target is 9
  2273 ;;		 -> NULL(NULL[0]), Sw1(BANK2[9]), 
  2274 ;;
  2275 ;; RFSW	PTR struct RFSW size(1) Largest target is 1
  2276 ;;		 -> NULL(NULL[0]), RFSW1(BANK1[1]), 
  2277 ;;
  2278 ;; RF	PTR struct RF size(1) Largest target is 2
  2279 ;;		 -> NULL(NULL[0]), RF1(BANK1[2]), 
  2280 ;;
  2281 ;; PF	PTR struct PF size(1) Largest target is 8
  2282 ;;		 -> NULL(NULL[0]), PF1(BANK1[8]), 
  2283 ;;
  2284 ;; Temp	PTR struct OverTemp size(1) Largest target is 14
  2285 ;;		 -> NULL(NULL[0]), Temp1(BANK2[14]), 
  2286 ;;
  2287 ;; Load	PTR struct OverLoad size(1) Largest target is 71
  2288 ;;		 -> NULL(NULL[0]), Load1(BANK4[71]), 
  2289 ;;
  2290 ;; Timer0	PTR struct Timer0 size(1) Largest target is 7
  2291 ;;		 -> NULL(NULL[0]), VarTimer0(BANK1[7]), 
  2292 ;;
  2293 ;; LED	PTR struct LED size(1) Largest target is 4
  2294 ;;		 -> NULL(NULL[0]), VarErrLED(BANK1[4]), VarLED2(BANK1[4]), VarLED1(BANK1[4]), 
  2295 ;;
  2296 ;; TMain	PTR struct TMain size(1) Largest target is 16
  2297 ;;		 -> NULL(NULL[0]), VarTMain(BANK2[16]), 
  2298 ;;
  2299 ;; Dimmer	PTR struct Dimmer size(1) Largest target is 2
  2300 ;;		 -> NULL(NULL[0]), Dimmer1(BANK1[2]), 
  2301 ;;
  2302 ;; Memory	PTR struct FlashMemory size(1) Largest target is 37
  2303 ;;		 -> NULL(NULL[0]), VarMemory(BANK3[37]), 
  2304 ;;
  2305 ;; DimmerLights11	PTR struct DimmerLights size(1) Largest target is 10
  2306 ;;		 -> NULL(NULL[0]), DimmerLights1(BANK2[10]), 
  2307 ;;
  2308 ;; DimmerLights	PTR struct DimmerLights size(1) Largest target is 10
  2309 ;;		 -> NULL(NULL[0]), DimmerLights1(BANK2[10]), 
  2310 ;;
  2311 ;; Product	PTR struct Product size(1) Largest target is 30
  2312 ;;		 -> NULL(NULL[0]), VarProduct(BANK3[30]), 
  2313 ;;
  2314 ;; DelayOff	PTR struct DelayOff size(1) Largest target is 5
  2315 ;;		 -> NULL(NULL[0]), DlySw1(BANK1[5]), 
  2316 ;;
  2317 ;; Buz	PTR struct Buzzer size(1) Largest target is 12
  2318 ;;		 -> NULL(NULL[0]), Buz1(BANK2[12]), 
  2319 ;;
  2320                           
  2321                           
  2322 ;;
  2323 ;; Critical Paths under _main in COMMON
  2324 ;;
  2325 ;;   None.
  2326 ;;
  2327 ;; Critical Paths under _ISR in COMMON
  2328 ;;
  2329 ;;   _ISR->_TMR0_ISR
  2330 ;;   _INT_ISR->_setRF_ReceiveGO
  2331 ;;   _TMR0_ISR->i1_setLoad_StatusOff
  2332 ;;   i1_setLoad_StatusOff->i1_LoadPointSelect
  2333 ;;   _setRF_ReceiveGO->i1_RfPointSelect
  2334 ;;
  2335 ;; Critical Paths under _main in BANK0
  2336 ;;
  2337 ;;   _RF_Main->_setRF_Main
  2338 ;;   _setRF_Main->_getRxData
  2339 ;;   _getRxData->_setControl_Lights_Table
  2340 ;;   _setControl_Lights_Table->_setRFSW_AdjControl
  2341 ;;   _PowerFault_Main->_setPowerFault_Main
  2342 ;;   _Load_Main->_setLoad_Main
  2343 ;;   _Temp_Main->_setTemp_Main
  2344 ;;   _setRFSW_AdjControl->_setRF_DimmerValue
  2345 ;;   _setPowerFault_Main->_setPowerFault_ERROR
  2346 ;;   _setTemp_Main->_setOverTemp_ERROR
  2347 ;;   _setLoad_Main->_setLoad_ERROR
  2348 ;;   _DimmerLights_Main->_setDimmerLights_Main
  2349 ;;   _setRF_DimmerValue->_setDimmerLights_AdjRF
  2350 ;;   _setPowerFault_ERROR->_DimmerLights_ERROR
  2351 ;;   _setOverTemp_ERROR->_DimmerLights_ERROR
  2352 ;;   _setLoad_ERROR->_DimmerLights_ERROR
  2353 ;;   _Switch_Main->_setSw_Main
  2354 ;;   _Flash_Memory_Main->_Flash_Memory_Modify
  2355 ;;   _MainT->_getPercentValue
  2356 ;;   _setDimmerLights_Main->_setDimmerLights_Adj
  2357 ;;   _DimmerLights_Initialization->_setDimmerLights_Initialization
  2358 ;;   _setSw_Main->_Sw_OnFunc
  2359 ;;   _Flash_Memory_Modify->_Flash_Memory_Read
  2360 ;;   _setRF_Enable->_RF_RxDisable
  2361 ;;   _Switch_Initialization->_setSw_Initialization
  2362 ;;   _Flash_Memory_Initialization->_setPercentValue
  2363 ;;   _LED_Initialization->_setLED_Initialization
  2364 ;;   _setDimmerLights_AdjRF->_getPercentValue
  2365 ;;   _DimmerLights_ERROR->_setBuz
  2366 ;;   _setDimmerLights_Adj->_setPercentValue
  2367 ;;   _setDimmerLights_Initialization->_getPercentValue
  2368 ;;   _DelayOff_Main->_DlyOff_Main
  2369 ;;   _CC2500_PowerOnInitial->_CC2500_InitSetREG
  2370 ;;   _Sw_OffFunc->_setDelayOff_GO
  2371 ;;   _Sw_AdjFunc->_setRFSW_Status
  2372 ;;   _Sw_AdjFunc->_setDimmerLights_TriggerAdj
  2373 ;;   _Sw_AdjFunc->_setDimmerLights_AdjGo
  2374 ;;   _Sw_OnFunc->_setBuz
  2375 ;;   _setSw_Initialization->_setLED
  2376 ;;   _setRFSW_Control->_setBuz
  2377 ;;   _setLog_Code->_setBuz
  2378 ;;   _RF_RxDisable->_CC2500_WriteCommand
  2379 ;;   _PowerFault_Initialization->_setPowerFault_Initialization
  2380 ;;   _Load_Initialization->_setLoad_Initialization
  2381 ;;   _Temp_Initialization->_setTemp_Initialization
  2382 ;;   _LED_Main->_setLED_Main
  2383 ;;   _setLED_Initialization->_setLED
  2384 ;;   _setPercentValue->___ftdiv
  2385 ;;   _setDimmerLights_ERROR->_setLoad_StatusOff
  2386 ;;   _setDimmerLights->_setLoad_LightsStatus
  2387 ;;   _DimmerLights_Close->_getDimmerLights_StatusFlag
  2388 ;;   _getPercentValue->___ftadd
  2389 ;;   _DlyOff_Main->_setBuz
  2390 ;;   _DelayOff_Initialization->_DlyOff_Initialization
  2391 ;;   _CC2500_SIDLEMode->_CC2500_WriteCommand
  2392 ;;   _CC2500_FrequencyCabr->_DelayTime_1us
  2393 ;;   _CC2500_ClearRXFIFO->_CC2500_WriteCommand
  2394 ;;   _CC2500_ClearTXFIFO->_CC2500_WriteCommand
  2395 ;;   _CC2500_InitPATable->_CC2500_WriteREG
  2396 ;;   _CC2500_InitSetREG->_CC2500_WriteREG
  2397 ;;   _CC2500_RxData->_CC2500_ReadStatus
  2398 ;;   _CC2500_RxData->_CC2500_WriteCommand
  2399 ;;   _CC2500_RxData->_setRF_RxStatus
  2400 ;;   _CC2500_TxData->_CC2500_WriteCommand
  2401 ;;   _Buzzer_Main->_setBuz_Main
  2402 ;;   _setBuz_Initialization->_setBuz_Enable
  2403 ;;   ___awtoft->___fttol
  2404 ;;   ___ftmul->___awtoft
  2405 ;;   ___ftdiv->___awtoft
  2406 ;;   ___ftadd->___ftmul
  2407 ;;   _setRF_Learn->_RfPointSelect
  2408 ;;   _setPowerFault_Initialization->_PowerFaultPointSelect
  2409 ;;   _setTemp_Initialization->_TempPointSelect
  2410 ;;   _setLoad_Initialization->_LoadPointSelect
  2411 ;;   _setLoad_Initialization->_setLoad_AH_AL_Restore
  2412 ;;   _setSw_Enable->_SwPointSelect
  2413 ;;   _getLoad_Safe->_LoadPointSelect
  2414 ;;   _getPF_Safe->_PowerFaultPointSelect
  2415 ;;   _getTemp_Safe->_TempPointSelect
  2416 ;;   _getLoad_ERROR->_LoadPointSelect
  2417 ;;   _getPF_ERROR->_PowerFaultPointSelect
  2418 ;;   _getTemp_ERROR->_TempPointSelect
  2419 ;;   _setLoad_Enable->_LoadPointSelect
  2420 ;;   _setTemp_Enable->_TempPointSelect
  2421 ;;   _getPowerFault_AD->_getAD
  2422 ;;   _getTemp_AD->_getAD
  2423 ;;   _getLoad_AD->_getAD
  2424 ;;   _RF_Initialization->_setRF_Initialization
  2425 ;;   _Mcu_Initialization->_TMR0_Set
  2426 ;;   _setLED_Main->_LedPointSelect
  2427 ;;   _setDimmer_PFERROR->_DimmerPointSelect
  2428 ;;   _setDimmer_LoadERROR->_DimmerPointSelect
  2429 ;;   _setDimmer_TempERROR->_DimmerPointSelect
  2430 ;;   _setDimmerLights_TriggerAdj->_DimmerLightsPointSelect
  2431 ;;   _setDimmerLights_AdjGo->_DimmerLightsPointSelect
  2432 ;;   _setLoad_LightsStatus->_LoadPointSelect
  2433 ;;   _setLoad_StatusOn->_LoadPointSelect
  2434 ;;   _setLED->_LedPointSelect
  2435 ;;   _setLoad_StatusOff->_LoadPointSelect
  2436 ;;   _setDimmerLights_TriggerERROR->_DimmerLightsPointSelect
  2437 ;;   _getDimmer_PFERROR->_DimmerPointSelect
  2438 ;;   _getDimmer_LoadERROR->_DimmerPointSelect
  2439 ;;   _getDimmer_TempERROR->_DimmerPointSelect
  2440 ;;   _getDimmerLights_Trigger->_DimmerLightsPointSelect
  2441 ;;   _setDimmerLights_Close->_DimmerLightsPointSelect
  2442 ;;   _setDimmerLights_Open->_DimmerLightsPointSelect
  2443 ;;   _setLoad_GO->_LoadPointSelect
  2444 ;;   _getDimmerLights_StatusFlag->_DimmerLightsPointSelect
  2445 ;;   _setDimmer_Detect->_DimmerPointSelect
  2446 ;;   _getDimmer_Detect->_DimmerPointSelect
  2447 ;;   _setDelayOff_GO->_DelayTimejudge
  2448 ;;   _setTxData->_RfPointSelect
  2449 ;;   _setDimmerLights_Switch->_DimmerLightsPointSelect
  2450 ;;   _setDimmerLights_Trigger->_DimmerLightsPointSelect
  2451 ;;   _setRFSW_Status->_RfSWPointSelect
  2452 ;;   _setSw_Status->_SwPointSelect
  2453 ;;   _DlyOff_Initialization->_DelayOffPointSelect
  2454 ;;   _CC2500_WriteREG->_CC2500_WriteByte
  2455 ;;   _CC2500_PowerRST->_DelayTime_1us
  2456 ;;   _setRF_RxStatus->_RfPointSelect
  2457 ;;   _CC2500_ReadStatus->_CC2500_WriteByte
  2458 ;;   _CC2500_ReadStatus->_CC2500_ReadByte
  2459 ;;   _CC2500_WriteCommand->_CC2500_WriteByte
  2460 ;;   _setBuz->___awdiv
  2461 ;;   _setBuz_Enable->_BuzPointSelect
  2462 ;;   _setBuz_Main->_BuzPointSelect
  2463 ;;   ___fttol->___ftpack
  2464 ;;
  2465 ;; Critical Paths under _ISR in BANK0
  2466 ;;
  2467 ;;   None.
  2468 ;;
  2469 ;; Critical Paths under _main in BANK1
  2470 ;;
  2471 ;;   None.
  2472 ;;
  2473 ;; Critical Paths under _ISR in BANK1
  2474 ;;
  2475 ;;   None.
  2476 ;;
  2477 ;; Critical Paths under _main in BANK2
  2478 ;;
  2479 ;;   None.
  2480 ;;
  2481 ;; Critical Paths under _ISR in BANK2
  2482 ;;
  2483 ;;   None.
  2484 ;;
  2485 ;; Critical Paths under _main in BANK3
  2486 ;;
  2487 ;;   None.
  2488 ;;
  2489 ;; Critical Paths under _ISR in BANK3
  2490 ;;
  2491 ;;   None.
  2492 ;;
  2493 ;; Critical Paths under _main in BANK4
  2494 ;;
  2495 ;;   None.
  2496 ;;
  2497 ;; Critical Paths under _ISR in BANK4
  2498 ;;
  2499 ;;   None.
  2500 ;;
  2501 ;; Critical Paths under _main in BANK5
  2502 ;;
  2503 ;;   None.
  2504 ;;
  2505 ;; Critical Paths under _ISR in BANK5
  2506 ;;
  2507 ;;   None.
  2508 ;;
  2509 ;; Critical Paths under _main in BANK6
  2510 ;;
  2511 ;;   None.
  2512 ;;
  2513 ;; Critical Paths under _ISR in BANK6
  2514 ;;
  2515 ;;   None.
  2516 ;;
  2517 ;; Critical Paths under _main in BANK7
  2518 ;;
  2519 ;;   None.
  2520 ;;
  2521 ;; Critical Paths under _ISR in BANK7
  2522 ;;
  2523 ;;   None.
  2524 ;;
  2525 ;; Critical Paths under _main in BANK8
  2526 ;;
  2527 ;;   None.
  2528 ;;
  2529 ;; Critical Paths under _ISR in BANK8
  2530 ;;
  2531 ;;   None.
  2532 ;;
  2533 ;; Critical Paths under _main in BANK9
  2534 ;;
  2535 ;;   None.
  2536 ;;
  2537 ;; Critical Paths under _ISR in BANK9
  2538 ;;
  2539 ;;   None.
  2540 ;;
  2541 ;; Critical Paths under _main in BANK10
  2542 ;;
  2543 ;;   None.
  2544 ;;
  2545 ;; Critical Paths under _ISR in BANK10
  2546 ;;
  2547 ;;   None.
  2548 ;;
  2549 ;; Critical Paths under _main in BANK11
  2550 ;;
  2551 ;;   None.
  2552 ;;
  2553 ;; Critical Paths under _ISR in BANK11
  2554 ;;
  2555 ;;   None.
  2556 ;;
  2557 ;; Critical Paths under _main in BANK12
  2558 ;;
  2559 ;;   None.
  2560 ;;
  2561 ;; Critical Paths under _ISR in BANK12
  2562 ;;
  2563 ;;   None.
  2564                           
  2565 ;;
  2566 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  2567 ;;
  2568                           
  2569 ;;
  2570 ;;Call Graph Tables:
  2571 ;;
  2572 ;; ---------------------------------------------------------------------------------
  2573 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  2574 ;; ---------------------------------------------------------------------------------
  2575 ;; (0) _main                                                 1     1      0   38396
  2576 ;;                                             73 BANK0      1     1      0
  2577 ;;               _MainT_Initialization
  2578 ;;                 _Mcu_Initialization
  2579 ;;        _Flash_Memory_Initialization
  2580 ;;                 _LED_Initialization
  2581 ;;              _Buzzer_Initialization
  2582 ;;        _DimmerLights_Initialization
  2583 ;;                _Temp_Initialization
  2584 ;;                _Load_Initialization
  2585 ;;          _PowerFault_Initialization
  2586 ;;            _DelayOff_Initialization
  2587 ;;              _Switch_Initialization
  2588 ;;                  _RF_Initialization
  2589 ;;              _CC2500_PowerOnInitial
  2590 ;;                         _getLoad_AD
  2591 ;;                         _getTemp_AD
  2592 ;;                   _getPowerFault_AD
  2593 ;;                              _MainT
  2594 ;;                  _Flash_Memory_Main
  2595 ;;                        _Buzzer_Main
  2596 ;;                           _LED_Main
  2597 ;;                          _Temp_Main
  2598 ;;                          _Load_Main
  2599 ;;                    _PowerFault_Main
  2600 ;;                  _DimmerLights_Main
  2601 ;;                        _Switch_Main
  2602 ;;                            _RF_Main
  2603 ;;                      _DelayOff_Main
  2604 ;; ---------------------------------------------------------------------------------
  2605 ;; (1) _RF_Main                                              0     0      0    7615
  2606 ;;                         _setRF_Main
  2607 ;; ---------------------------------------------------------------------------------
  2608 ;; (2) _setRF_Main                                           3     3      0    7615
  2609 ;;                                             70 BANK0      3     3      0
  2610 ;;                      _RfPointSelect
  2611 ;;                       _RF_RxDisable
  2612 ;;                      _CC2500_RxData
  2613 ;;                          _getRxData
  2614 ;;                      _CC2500_TxData
  2615 ;;                _CC2500_WriteCommand
  2616 ;;                          _setINT_GO
  2617 ;; ---------------------------------------------------------------------------------
  2618 ;; (3) _getRxData                                            2     2      0    6688
  2619 ;;                                             69 BANK0      1     1      0
  2620 ;;                      _RfPointSelect
  2621 ;;                        _setLog_Code
  2622 ;;            _setControl_Lights_Table
  2623 ;; ---------------------------------------------------------------------------------
  2624 ;; (4) _setControl_Lights_Table                              1     1      0    6070
  2625 ;;                                             68 BANK0      1     1      0
  2626 ;;                      _RfPointSelect
  2627 ;;                    _setDimmerLights
  2628 ;;                     _setRFSW_Status
  2629 ;;                       _setSw_Status
  2630 ;;                             _setBuz
  2631 ;;                          _setTxData
  2632 ;;                    _setRFSW_Control
  2633 ;;                 _setRFSW_AdjControl
  2634 ;; ---------------------------------------------------------------------------------
  2635 ;; (1) _PowerFault_Main                                      0     0      0    3111
  2636 ;;                 _setPowerFault_Main
  2637 ;; ---------------------------------------------------------------------------------
  2638 ;; (1) _Load_Main                                            0     0      0    3738
  2639 ;;                       _setLoad_Main
  2640 ;; ---------------------------------------------------------------------------------
  2641 ;; (1) _Temp_Main                                            0     0      0    3663
  2642 ;;                       _setTemp_Main
  2643 ;; ---------------------------------------------------------------------------------
  2644 ;; (5) _setRFSW_AdjControl                                   3     3      0    2422
  2645 ;;                                             65 BANK0      3     3      0
  2646 ;;                    _RfSWPointSelect
  2647 ;;                  _setRF_DimmerValue
  2648 ;;                          _setTxData
  2649 ;; ---------------------------------------------------------------------------------
  2650 ;; (2) _setPowerFault_Main                                   3     3      0    3111
  2651 ;;                                             18 BANK0      3     3      0
  2652 ;;              _PowerFaultPointSelect
  2653 ;;                       _getLoad_Safe
  2654 ;;                       _getTemp_Safe
  2655 ;;                _setPowerFault_ERROR
  2656 ;; ---------------------------------------------------------------------------------
  2657 ;; (2) _setTemp_Main                                         4     4      0    3663
  2658 ;;                                             18 BANK0      4     4      0
  2659 ;;                    _TempPointSelect
  2660 ;;                       _getLoad_Safe
  2661 ;;                         _getPF_Safe
  2662 ;;                  _setOverTemp_ERROR
  2663 ;; ---------------------------------------------------------------------------------
  2664 ;; (2) _setLoad_Main                                         6     6      0    3738
  2665 ;;                                             18 BANK0      5     5      0
  2666 ;;                    _LoadPointSelect
  2667 ;;                      _setLoad_ERROR
  2668 ;;                            ___lwdiv
  2669 ;;                             ___wmul
  2670 ;;               _setDimmerLights_Open
  2671 ;;              _setLoad_AH_AL_Restore
  2672 ;;                       _getTemp_Safe
  2673 ;;                         _getPF_Safe
  2674 ;; ---------------------------------------------------------------------------------
  2675 ;; (1) _DimmerLights_Main                                    0     0      0    4275
  2676 ;;               _setDimmerLights_Main
  2677 ;;                 _DimmerLights_Close
  2678 ;; ---------------------------------------------------------------------------------
  2679 ;; (6) _setRF_DimmerValue                                    3     3      0    2268
  2680 ;;                                             62 BANK0      3     3      0
  2681 ;;              _setDimmerLights_AdjRF
  2682 ;; ---------------------------------------------------------------------------------
  2683 ;; (3) _setPowerFault_ERROR                                  3     2      1    3005
  2684 ;;                                             15 BANK0      3     2      1
  2685 ;;              _PowerFaultPointSelect
  2686 ;;                  _setDimmer_PFERROR
  2687 ;;                 _DimmerLights_ERROR
  2688 ;;                             _setLED
  2689 ;;                       _setSw_Enable
  2690 ;;                       _setRF_Enable
  2691 ;; ---------------------------------------------------------------------------------
  2692 ;; (3) _setOverTemp_ERROR                                    3     2      1    3557
  2693 ;;                                             15 BANK0      3     2      1
  2694 ;;                    _TempPointSelect
  2695 ;;                _setDimmer_TempERROR
  2696 ;;                 _DimmerLights_ERROR
  2697 ;;                             _setLED
  2698 ;;                       _setSw_Enable
  2699 ;;                       _setRF_Enable
  2700 ;;                             _setBuz
  2701 ;; ---------------------------------------------------------------------------------
  2702 ;; (3) _setLoad_ERROR                                        3     2      1    3058
  2703 ;;                                             15 BANK0      3     2      1
  2704 ;;                    _LoadPointSelect
  2705 ;;                _setDimmer_LoadERROR
  2706 ;;                 _DimmerLights_ERROR
  2707 ;;                             _setLED
  2708 ;;                       _setSw_Enable
  2709 ;;                       _setRF_Enable
  2710 ;; ---------------------------------------------------------------------------------
  2711 ;; (1) _Switch_Main                                          0     0      0    3360
  2712 ;;                         _setSw_Main
  2713 ;; ---------------------------------------------------------------------------------
  2714 ;; (1) _Flash_Memory_Main                                    0     0      0     307
  2715 ;;                _Flash_Memory_Modify
  2716 ;; ---------------------------------------------------------------------------------
  2717 ;; (1) _MainT                                                1     1      0    3624
  2718 ;;                                             60 BANK0      1     1      0
  2719 ;;                     _setTemp_Enable
  2720 ;;                     _setLoad_Enable
  2721 ;;                      _getTemp_ERROR
  2722 ;;                        _getPF_ERROR
  2723 ;;                      _getLoad_ERROR
  2724 ;;            _DimmerLightsPointSelect
  2725 ;;            _setDimmerLights_Trigger
  2726 ;;             _setDimmerLights_Switch
  2727 ;;                             _setBuz
  2728 ;;                       _getTemp_Safe
  2729 ;;                         _getPF_Safe
  2730 ;;                       _getLoad_Safe
  2731 ;;                    _getPercentValue
  2732 ;;                       _setSw_Enable
  2733 ;;                       _setRF_Enable
  2734 ;; ---------------------------------------------------------------------------------
  2735 ;; (2) _setDimmerLights_Main                                 3     3      0    3948
  2736 ;;                                             49 BANK0      3     3      0
  2737 ;;            _DimmerLightsPointSelect
  2738 ;;               _setDimmerLights_Open
  2739 ;;              _setDimmerLights_Close
  2740 ;;                    _setDimmerLights
  2741 ;;            _getDimmerLights_Trigger
  2742 ;;                _setDimmerLights_Adj
  2743 ;;                             _setBuz
  2744 ;; ---------------------------------------------------------------------------------
  2745 ;; (1) _DimmerLights_Initialization                          1     1      0    2224
  2746 ;;                                             63 BANK0      1     1      0
  2747 ;;     _setDimmerLights_Initialization
  2748 ;; ---------------------------------------------------------------------------------
  2749 ;; (2) _setSw_Main                                           4     4      0    3360
  2750 ;;                                             15 BANK0      4     4      0
  2751 ;;                      _SwPointSelect
  2752 ;;                          _Sw_OnFunc
  2753 ;;                         _Sw_AdjFunc
  2754 ;;                        _setRF_Learn
  2755 ;;                             _setBuz
  2756 ;;                         _Sw_OffFunc
  2757 ;; ---------------------------------------------------------------------------------
  2758 ;; (2) _Flash_Memory_Modify                                  3     3      0     307
  2759 ;;                                              4 BANK0      3     3      0
  2760 ;;                  _Flash_Memory_Read
  2761 ;;               _Flash_Memory_Erasing
  2762 ;;                 _Flash_Memory_Write
  2763 ;; ---------------------------------------------------------------------------------
  2764 ;; (4) _setRF_Enable                                         2     1      1     304
  2765 ;;                                              5 BANK0      2     1      1
  2766 ;;                      _RfPointSelect
  2767 ;;                _CC2500_WriteCommand
  2768 ;;                       _RF_RxDisable
  2769 ;; ---------------------------------------------------------------------------------
  2770 ;; (1) _Switch_Initialization                                0     0      0    1031
  2771 ;;                         _TouchPower
  2772 ;;               _setSw_Initialization
  2773 ;;                             _setLED
  2774 ;; ---------------------------------------------------------------------------------
  2775 ;; (1) _Flash_Memory_Initialization                          2     2      0    1438
  2776 ;;                                             45 BANK0      2     2      0
  2777 ;;                  _Flash_Memory_Read
  2778 ;;                    _setPercentValue
  2779 ;;                 _Flash_Memory_Write
  2780 ;; ---------------------------------------------------------------------------------
  2781 ;; (1) _LED_Initialization                                   0     0      0     628
  2782 ;;              _setLED_Initialization
  2783 ;; ---------------------------------------------------------------------------------
  2784 ;; (7) _setDimmerLights_AdjRF                                2     2      0    2202
  2785 ;;                                             60 BANK0      2     2      0
  2786 ;;            _DimmerLightsPointSelect
  2787 ;;                    _getPercentValue
  2788 ;; ---------------------------------------------------------------------------------
  2789 ;; (4) _DimmerLights_ERROR                                   1     1      0    1971
  2790 ;;                                             14 BANK0      1     1      0
  2791 ;;                _getDimmer_TempERROR
  2792 ;;         _getDimmerLights_StatusFlag
  2793 ;;                             _setBuz
  2794 ;;              _setDimmerLights_ERROR
  2795 ;;                _getDimmer_LoadERROR
  2796 ;;                  _getDimmer_PFERROR
  2797 ;;       _setDimmerLights_TriggerERROR
  2798 ;; ---------------------------------------------------------------------------------
  2799 ;; (3) _setDimmerLights_Adj                                  4     3      1    1595
  2800 ;;                                             45 BANK0      4     3      1
  2801 ;;            _DimmerLightsPointSelect
  2802 ;;                  _setLoad_StatusOff
  2803 ;;                 _setRF_DimmerLights
  2804 ;;                          _setTxData
  2805 ;;                    _setPercentValue
  2806 ;; ---------------------------------------------------------------------------------
  2807 ;; (2) _setDimmerLights_Initialization                       3     3      0    2224
  2808 ;;                                             60 BANK0      3     3      0
  2809 ;;            _DimmerLightsPointSelect
  2810 ;;                    _getPercentValue
  2811 ;; ---------------------------------------------------------------------------------
  2812 ;; (1) _DelayOff_Main                                        0     0      0    1265
  2813 ;;                        _DlyOff_Main
  2814 ;; ---------------------------------------------------------------------------------
  2815 ;; (1) _CC2500_PowerOnInitial                                0     0      0     997
  2816 ;;                    _CC2500_PowerRST
  2817 ;;                  _CC2500_InitSetREG
  2818 ;;                 _CC2500_InitPATable
  2819 ;;                 _CC2500_ClearTXFIFO
  2820 ;;                 _CC2500_ClearRXFIFO
  2821 ;;               _CC2500_FrequencyCabr
  2822 ;;                   _CC2500_SIDLEMode
  2823 ;; ---------------------------------------------------------------------------------
  2824 ;; (1) _Buzzer_Initialization                                0     0      0      84
  2825 ;;              _setBuz_Initialization
  2826 ;; ---------------------------------------------------------------------------------
  2827 ;; (3) _Sw_OffFunc                                           3     3      0    1099
  2828 ;;                                              7 BANK0      3     3      0
  2829 ;;         _setDimmerLights_TriggerAdj
  2830 ;;              _setDimmerLights_AdjGo
  2831 ;;                 _setRF_DimmerLights
  2832 ;;                          _setTxData
  2833 ;;                     _setDelayOff_GO
  2834 ;;            _setDimmerLights_Trigger
  2835 ;;             _setDimmerLights_Switch
  2836 ;; ---------------------------------------------------------------------------------
  2837 ;; (3) _Sw_AdjFunc                                           1     1      0     345
  2838 ;;                                              4 BANK0      1     1      0
  2839 ;;                     _setRFSW_Status
  2840 ;;         _setDimmerLights_TriggerAdj
  2841 ;;              _setDimmerLights_AdjGo
  2842 ;; ---------------------------------------------------------------------------------
  2843 ;; (3) _Sw_OnFunc                                            1     1      0    1128
  2844 ;;                                             14 BANK0      1     1      0
  2845 ;;                             _setBuz
  2846 ;;                     _setRFSW_Status
  2847 ;;            _setDimmerLights_Trigger
  2848 ;;             _setDimmerLights_Switch
  2849 ;;                 _setRF_DimmerLights
  2850 ;;                          _setTxData
  2851 ;; ---------------------------------------------------------------------------------
  2852 ;; (2) _setSw_Initialization                                 1     1      0     531
  2853 ;;                                              4 BANK0      1     1      0
  2854 ;;                             _setLED
  2855 ;; ---------------------------------------------------------------------------------
  2856 ;; (5) _setRFSW_Control                                      3     3      0    1713
  2857 ;;                                             14 BANK0      3     3      0
  2858 ;;                    _RfSWPointSelect
  2859 ;;                     _setDelayOff_GO
  2860 ;;                       _setSw_Status
  2861 ;;                 _setRF_DimmerLights
  2862 ;;            _setDimmerLights_Trigger
  2863 ;;             _setDimmerLights_Switch
  2864 ;;                             _setBuz
  2865 ;;                          _setTxData
  2866 ;; ---------------------------------------------------------------------------------
  2867 ;; (4) _setLog_Code                                          2     2      0     565
  2868 ;;                                             14 BANK0      2     2      0
  2869 ;;                      _RfPointSelect
  2870 ;;                             _setBuz
  2871 ;; ---------------------------------------------------------------------------------
  2872 ;; (3) _RF_RxDisable                                         1     1      0     152
  2873 ;;                                              4 BANK0      1     1      0
  2874 ;;                      _RfPointSelect
  2875 ;;                _CC2500_WriteCommand
  2876 ;;                          _setINT_GO
  2877 ;; ---------------------------------------------------------------------------------
  2878 ;; (3) _Flash_Memory_Erasing                                 0     0      0       0
  2879 ;;                _Flash_Memory_Unlock
  2880 ;; ---------------------------------------------------------------------------------
  2881 ;; (3) _Flash_Memory_Write                                   2     2      0     130
  2882 ;;                                              0 BANK0      2     2      0
  2883 ;;                _Flash_Memory_Unlock
  2884 ;; ---------------------------------------------------------------------------------
  2885 ;; (1) _PowerFault_Initialization                            0     0      0      31
  2886 ;;       _setPowerFault_Initialization
  2887 ;; ---------------------------------------------------------------------------------
  2888 ;; (1) _Load_Initialization                                  0     0      0     174
  2889 ;;             _setLoad_Initialization
  2890 ;; ---------------------------------------------------------------------------------
  2891 ;; (1) _Temp_Initialization                                  0     0      0      31
  2892 ;;             _setTemp_Initialization
  2893 ;; ---------------------------------------------------------------------------------
  2894 ;; (1) _LED_Main                                             0     0      0     190
  2895 ;;                        _setLED_Main
  2896 ;; ---------------------------------------------------------------------------------
  2897 ;; (2) _setLED_Initialization                                1     1      0     628
  2898 ;;                                              4 BANK0      1     1      0
  2899 ;;                     _LedPointSelect
  2900 ;;                             _setLED
  2901 ;; ---------------------------------------------------------------------------------
  2902 ;; (4) _setPercentValue                                      1     1      0    1072
  2903 ;;                                             44 BANK0      1     1      0
  2904 ;;                           ___awtoft
  2905 ;;                            ___ftdiv
  2906 ;;                            ___fttol
  2907 ;; ---------------------------------------------------------------------------------
  2908 ;; (5) _setDimmerLights_ERROR                                2     2      0    1022
  2909 ;;                                              5 BANK0      2     2      0
  2910 ;;            _DimmerLightsPointSelect
  2911 ;;                  _setLoad_StatusOff
  2912 ;;                             _setLED
  2913 ;;                       _setSw_Status
  2914 ;;                     _setRFSW_Status
  2915 ;; ---------------------------------------------------------------------------------
  2916 ;; (5) _setDimmerLights                                      3     2      1    1149
  2917 ;;                                              6 BANK0      3     2      1
  2918 ;;            _DimmerLightsPointSelect
  2919 ;;                             _setLED
  2920 ;;                   _setLoad_StatusOn
  2921 ;;                      _setLoad_Count
  2922 ;;                   _setDimmer_Detect
  2923 ;;                         _setLoad_GO
  2924 ;;               _setLoad_LightsStatus
  2925 ;; ---------------------------------------------------------------------------------
  2926 ;; (2) _DimmerLights_Close                                   0     0      0     327
  2927 ;;                   _getDimmer_Detect
  2928 ;;                   _setDimmer_Detect
  2929 ;;         _getDimmerLights_StatusFlag
  2930 ;;                         _setLoad_GO
  2931 ;; ---------------------------------------------------------------------------------
  2932 ;; (8) _getPercentValue                                      3     3      0    2158
  2933 ;;                                             57 BANK0      3     3      0
  2934 ;;                           ___awtoft
  2935 ;;                            ___ftmul
  2936 ;;                            ___ftadd
  2937 ;;                            ___fttol
  2938 ;; ---------------------------------------------------------------------------------
  2939 ;; (2) _DlyOff_Main                                          3     3      0    1265
  2940 ;;                                             14 BANK0      3     3      0
  2941 ;;                _DelayOffPointSelect
  2942 ;;                       _setSw_Status
  2943 ;;                     _setRFSW_Status
  2944 ;;                 _setRF_DimmerLights
  2945 ;;            _setDimmerLights_Trigger
  2946 ;;             _setDimmerLights_Switch
  2947 ;;                          _setTxData
  2948 ;;                             _setBuz
  2949 ;; ---------------------------------------------------------------------------------
  2950 ;; (1) _DelayOff_Initialization                              0     0      0      53
  2951 ;;              _DlyOff_Initialization
  2952 ;; ---------------------------------------------------------------------------------
  2953 ;; (2) _CC2500_SIDLEMode                                     0     0      0      68
  2954 ;;                _CC2500_WriteCommand
  2955 ;; ---------------------------------------------------------------------------------
  2956 ;; (2) _CC2500_FrequencyCabr                                 0     0      0     204
  2957 ;;                _CC2500_WriteCommand
  2958 ;;                      _DelayTime_1us
  2959 ;; ---------------------------------------------------------------------------------
  2960 ;; (2) _CC2500_ClearRXFIFO                                   0     0      0      68
  2961 ;;                _CC2500_WriteCommand
  2962 ;; ---------------------------------------------------------------------------------
  2963 ;; (2) _CC2500_ClearTXFIFO                                   0     0      0      68
  2964 ;;                _CC2500_WriteCommand
  2965 ;; ---------------------------------------------------------------------------------
  2966 ;; (2) _CC2500_InitPATable                                   3     3      0     181
  2967 ;;                                              5 BANK0      3     3      0
  2968 ;;                    _CC2500_WriteREG
  2969 ;; ---------------------------------------------------------------------------------
  2970 ;; (2) _CC2500_InitSetREG                                    4     4      0     226
  2971 ;;                                              5 BANK0      4     4      0
  2972 ;;                    _CC2500_WriteREG
  2973 ;; ---------------------------------------------------------------------------------
  2974 ;; (3) _CC2500_RxData                                        2     2      0     426
  2975 ;;                                              4 BANK0      2     2      0
  2976 ;;                  _CC2500_ReadStatus
  2977 ;;                   _CC2500_WriteByte
  2978 ;;                    _CC2500_ReadByte
  2979 ;;                _CC2500_WriteCommand
  2980 ;;                     _setRF_RxStatus
  2981 ;; ---------------------------------------------------------------------------------
  2982 ;; (3) _CC2500_TxData                                        2     2      0     160
  2983 ;;                                              4 BANK0      2     2      0
  2984 ;;                   _CC2500_WriteByte
  2985 ;;                _CC2500_WriteCommand
  2986 ;; ---------------------------------------------------------------------------------
  2987 ;; (1) _Buzzer_Main                                          0     0      0      66
  2988 ;;                        _setBuz_Main
  2989 ;; ---------------------------------------------------------------------------------
  2990 ;; (2) _setBuz_Initialization                                1     1      0      84
  2991 ;;                      _setBuz_Enable
  2992 ;; ---------------------------------------------------------------------------------
  2993 ;; (9) ___awtoft                                             6     3      3     300
  2994 ;;                                             22 BANK0      6     3      3
  2995 ;;                           ___ftpack
  2996 ;;                            ___fttol (ARG)
  2997 ;; ---------------------------------------------------------------------------------
  2998 ;; (9) ___ftmul                                             16    10      6     535
  2999 ;;                                             28 BANK0     16    10      6
  3000 ;;                           ___ftpack
  3001 ;;                           ___awtoft (ARG)
  3002 ;;                            ___fttol (ARG)
  3003 ;; ---------------------------------------------------------------------------------
  3004 ;; (5) ___ftdiv                                             16    10      6     489
  3005 ;;                                             28 BANK0     16    10      6
  3006 ;;                           ___ftpack
  3007 ;;                           ___awtoft (ARG)
  3008 ;;                            ___fttol (ARG)
  3009 ;; ---------------------------------------------------------------------------------
  3010 ;; (9) ___ftadd                                             13     7      6    1049
  3011 ;;                                             44 BANK0     13     7      6
  3012 ;;                           ___ftpack
  3013 ;;                            ___ftmul (ARG)
  3014 ;;                           ___awtoft (ARG)
  3015 ;;                            ___fttol (ARG)
  3016 ;; ---------------------------------------------------------------------------------
  3017 ;; (3) _setRF_Learn                                          2     1      1      84
  3018 ;;                                              2 BANK0      2     1      1
  3019 ;;                      _RfPointSelect
  3020 ;; ---------------------------------------------------------------------------------
  3021 ;; (2) _setPowerFault_Initialization                         1     1      0      31
  3022 ;;                                              1 BANK0      1     1      0
  3023 ;;              _PowerFaultPointSelect
  3024 ;; ---------------------------------------------------------------------------------
  3025 ;; (2) _setTemp_Initialization                               1     1      0      31
  3026 ;;                                              1 BANK0      1     1      0
  3027 ;;                    _TempPointSelect
  3028 ;; ---------------------------------------------------------------------------------
  3029 ;; (2) _setLoad_Initialization                               1     1      0     174
  3030 ;;                                              2 BANK0      1     1      0
  3031 ;;                    _LoadPointSelect
  3032 ;;              _setLoad_AH_AL_Restore
  3033 ;; ---------------------------------------------------------------------------------
  3034 ;; (4) _Flash_Memory_Unlock                                  0     0      0       0
  3035 ;; ---------------------------------------------------------------------------------
  3036 ;; (4) _setSw_Enable                                         2     1      1      84
  3037 ;;                                              2 BANK0      2     1      1
  3038 ;;                      _SwPointSelect
  3039 ;; ---------------------------------------------------------------------------------
  3040 ;; (3) _getLoad_Safe                                         2     2      0      44
  3041 ;;                                              2 BANK0      2     2      0
  3042 ;;                    _LoadPointSelect
  3043 ;; ---------------------------------------------------------------------------------
  3044 ;; (3) _getPF_Safe                                           1     1      0      31
  3045 ;;                                              1 BANK0      1     1      0
  3046 ;;              _PowerFaultPointSelect
  3047 ;; ---------------------------------------------------------------------------------
  3048 ;; (3) _getTemp_Safe                                         1     1      0      31
  3049 ;;                                              1 BANK0      1     1      0
  3050 ;;                    _TempPointSelect
  3051 ;; ---------------------------------------------------------------------------------
  3052 ;; (2) _getLoad_ERROR                                        1     1      0      53
  3053 ;;                                              2 BANK0      1     1      0
  3054 ;;                    _LoadPointSelect
  3055 ;; ---------------------------------------------------------------------------------
  3056 ;; (2) _getPF_ERROR                                          1     1      0      31
  3057 ;;                                              1 BANK0      1     1      0
  3058 ;;              _PowerFaultPointSelect
  3059 ;; ---------------------------------------------------------------------------------
  3060 ;; (2) _getTemp_ERROR                                        1     1      0      31
  3061 ;;                                              1 BANK0      1     1      0
  3062 ;;                    _TempPointSelect
  3063 ;; ---------------------------------------------------------------------------------
  3064 ;; (2) _setLoad_Enable                                       2     1      1      84
  3065 ;;                                              2 BANK0      2     1      1
  3066 ;;                    _LoadPointSelect
  3067 ;; ---------------------------------------------------------------------------------
  3068 ;; (2) _setTemp_Enable                                       2     1      1      62
  3069 ;;                                              1 BANK0      2     1      1
  3070 ;;                    _TempPointSelect
  3071 ;; ---------------------------------------------------------------------------------
  3072 ;; (1) _getPowerFault_AD                                     6     5      1      88
  3073 ;;                                              7 BANK0      6     5      1
  3074 ;;              _PowerFaultPointSelect
  3075 ;;                              _getAD
  3076 ;; ---------------------------------------------------------------------------------
  3077 ;; (1) _getTemp_AD                                           6     5      1      88
  3078 ;;                                              7 BANK0      6     5      1
  3079 ;;                    _TempPointSelect
  3080 ;;                              _getAD
  3081 ;; ---------------------------------------------------------------------------------
  3082 ;; (1) _getLoad_AD                                           9     8      1     315
  3083 ;;                                              7 BANK0      9     8      1
  3084 ;;                    _LoadPointSelect
  3085 ;;                              _getAD
  3086 ;; ---------------------------------------------------------------------------------
  3087 ;; (1) _RF_Initialization                                    0     0      0       0
  3088 ;;               _setRF_Initialization
  3089 ;; ---------------------------------------------------------------------------------
  3090 ;; (1) _Mcu_Initialization                                   1     1      0       0
  3091 ;;                                              1 BANK0      1     1      0
  3092 ;;                             _IO_Set
  3093 ;;                           _TMR0_Set
  3094 ;;                            _ADC_Set
  3095 ;;                            _INT_Set
  3096 ;;                            _IOC_Set
  3097 ;; ---------------------------------------------------------------------------------
  3098 ;; (2) _setLED_Main                                          1     1      0     190
  3099 ;;                                              2 BANK0      1     1      0
  3100 ;;                     _LedPointSelect
  3101 ;; ---------------------------------------------------------------------------------
  3102 ;; (4) _setDimmer_PFERROR                                    2     1      1      84
  3103 ;;                                              2 BANK0      2     1      1
  3104 ;;                  _DimmerPointSelect
  3105 ;; ---------------------------------------------------------------------------------
  3106 ;; (4) _setDimmer_LoadERROR                                  2     1      1      84
  3107 ;;                                              2 BANK0      2     1      1
  3108 ;;                  _DimmerPointSelect
  3109 ;; ---------------------------------------------------------------------------------
  3110 ;; (4) _setDimmer_TempERROR                                  2     1      1      84
  3111 ;;                                              2 BANK0      2     1      1
  3112 ;;                  _DimmerPointSelect
  3113 ;; ---------------------------------------------------------------------------------
  3114 ;; (4) _setDimmerLights_TriggerAdj                           2     1      1      84
  3115 ;;                                              2 BANK0      2     1      1
  3116 ;;            _DimmerLightsPointSelect
  3117 ;; ---------------------------------------------------------------------------------
  3118 ;; (4) _setDimmerLights_AdjGo                                2     1      1      84
  3119 ;;                                              2 BANK0      2     1      1
  3120 ;;            _DimmerLightsPointSelect
  3121 ;; ---------------------------------------------------------------------------------
  3122 ;; (6) _setLoad_LightsStatus                                 4     2      2     176
  3123 ;;                                              2 BANK0      4     2      2
  3124 ;;                    _LoadPointSelect
  3125 ;; ---------------------------------------------------------------------------------
  3126 ;; (6) _setLoad_StatusOn                                     2     1      1      84
  3127 ;;                                              2 BANK0      2     1      1
  3128 ;;                    _LoadPointSelect
  3129 ;; ---------------------------------------------------------------------------------
  3130 ;; (6) _setLED                                               2     1      1     500
  3131 ;;                                              2 BANK0      2     1      1
  3132 ;;                     _LedPointSelect
  3133 ;; ---------------------------------------------------------------------------------
  3134 ;; (4) _setLoad_StatusOff                                    3     1      2     177
  3135 ;;                                              2 BANK0      3     1      2
  3136 ;;                    _LoadPointSelect
  3137 ;; ---------------------------------------------------------------------------------
  3138 ;; (5) _setDimmerLights_TriggerERROR                         3     2      1     154
  3139 ;;                                              2 BANK0      3     2      1
  3140 ;;            _DimmerLightsPointSelect
  3141 ;; ---------------------------------------------------------------------------------
  3142 ;; (5) _getDimmer_PFERROR                                    1     1      0      53
  3143 ;;                                              2 BANK0      1     1      0
  3144 ;;                  _DimmerPointSelect
  3145 ;; ---------------------------------------------------------------------------------
  3146 ;; (5) _getDimmer_LoadERROR                                  1     1      0      53
  3147 ;;                                              2 BANK0      1     1      0
  3148 ;;                  _DimmerPointSelect
  3149 ;; ---------------------------------------------------------------------------------
  3150 ;; (5) _getDimmer_TempERROR                                  1     1      0      53
  3151 ;;                                              2 BANK0      1     1      0
  3152 ;;                  _DimmerPointSelect
  3153 ;; ---------------------------------------------------------------------------------
  3154 ;; (3) _getDimmerLights_Trigger                              4     4      0     115
  3155 ;;                                              2 BANK0      4     4      0
  3156 ;;            _DimmerLightsPointSelect
  3157 ;; ---------------------------------------------------------------------------------
  3158 ;; (3) _setDimmerLights_Close                                2     1      1      84
  3159 ;;                                              2 BANK0      2     1      1
  3160 ;;            _DimmerLightsPointSelect
  3161 ;; ---------------------------------------------------------------------------------
  3162 ;; (3) _setDimmerLights_Open                                 2     1      1      84
  3163 ;;                                              2 BANK0      2     1      1
  3164 ;;            _DimmerLightsPointSelect
  3165 ;; ---------------------------------------------------------------------------------
  3166 ;; (6) _setLoad_GO                                           2     1      1      84
  3167 ;;                                              2 BANK0      2     1      1
  3168 ;;                    _LoadPointSelect
  3169 ;; ---------------------------------------------------------------------------------
  3170 ;; (3) _getDimmerLights_StatusFlag                           4     4      0     115
  3171 ;;                                              2 BANK0      4     4      0
  3172 ;;            _DimmerLightsPointSelect
  3173 ;; ---------------------------------------------------------------------------------
  3174 ;; (6) _setDimmer_Detect                                     2     1      1      84
  3175 ;;                                              2 BANK0      2     1      1
  3176 ;;                  _DimmerPointSelect
  3177 ;; ---------------------------------------------------------------------------------
  3178 ;; (3) _getDimmer_Detect                                     2     2      0      44
  3179 ;;                                              2 BANK0      2     2      0
  3180 ;;                  _DimmerPointSelect
  3181 ;; ---------------------------------------------------------------------------------
  3182 ;; (6) _setDelayOff_GO                                       4     2      2     315
  3183 ;;                                              3 BANK0      4     2      2
  3184 ;;                _DelayOffPointSelect
  3185 ;;                     _DelayTimejudge
  3186 ;; ---------------------------------------------------------------------------------
  3187 ;; (3) _setTxData                                            2     2      0      44
  3188 ;;                                              2 BANK0      2     2      0
  3189 ;;                      _RfPointSelect
  3190 ;; ---------------------------------------------------------------------------------
  3191 ;; (3) _setDimmerLights_Switch                               2     1      1      84
  3192 ;;                                              2 BANK0      2     1      1
  3193 ;;            _DimmerLightsPointSelect
  3194 ;; ---------------------------------------------------------------------------------
  3195 ;; (3) _setDimmerLights_Trigger                              2     1      1      84
  3196 ;;                                              2 BANK0      2     1      1
  3197 ;;            _DimmerLightsPointSelect
  3198 ;; ---------------------------------------------------------------------------------
  3199 ;; (3) _setRFSW_Status                                       2     1      1      84
  3200 ;;                                              2 BANK0      2     1      1
  3201 ;;                    _RfSWPointSelect
  3202 ;; ---------------------------------------------------------------------------------
  3203 ;; (3) _setSw_Status                                         2     1      1      84
  3204 ;;                                              2 BANK0      2     1      1
  3205 ;;                      _SwPointSelect
  3206 ;; ---------------------------------------------------------------------------------
  3207 ;; (2) _DlyOff_Initialization                                1     1      0      53
  3208 ;;                                              2 BANK0      1     1      0
  3209 ;;                _DelayOffPointSelect
  3210 ;; ---------------------------------------------------------------------------------
  3211 ;; (3) _CC2500_WriteREG                                      3     2      1      90
  3212 ;;                                              2 BANK0      3     2      1
  3213 ;;                   _CC2500_WriteByte
  3214 ;; ---------------------------------------------------------------------------------
  3215 ;; (2) _CC2500_PowerRST                                      1     1      0     182
  3216 ;;                                              6 BANK0      1     1      0
  3217 ;;                      _DelayTime_1us
  3218 ;;                   _CC2500_WriteByte
  3219 ;; ---------------------------------------------------------------------------------
  3220 ;; (4) _setRF_RxStatus                                       2     1      1      84
  3221 ;;                                              2 BANK0      2     1      1
  3222 ;;                      _RfPointSelect
  3223 ;; ---------------------------------------------------------------------------------
  3224 ;; (4) _CC2500_ReadStatus                                    2     2      0     114
  3225 ;;                                              2 BANK0      2     2      0
  3226 ;;                   _CC2500_WriteByte
  3227 ;;                    _CC2500_ReadByte
  3228 ;; ---------------------------------------------------------------------------------
  3229 ;; (3) _CC2500_WriteCommand                                  2     2      0      68
  3230 ;;                                              2 BANK0      2     2      0
  3231 ;;                   _CC2500_WriteByte
  3232 ;; ---------------------------------------------------------------------------------
  3233 ;; (3) _setBuz                                               5     2      3     521
  3234 ;;                                              9 BANK0      5     2      3
  3235 ;;                     _BuzPointSelect
  3236 ;;                            ___awdiv
  3237 ;; ---------------------------------------------------------------------------------
  3238 ;; (3) _setBuz_Enable                                        2     1      1      84
  3239 ;;                                              2 BANK0      2     1      1
  3240 ;;                     _BuzPointSelect
  3241 ;; ---------------------------------------------------------------------------------
  3242 ;; (2) _setBuz_Main                                          3     3      0      66
  3243 ;;                                              2 BANK0      3     3      0
  3244 ;;                     _BuzPointSelect
  3245 ;; ---------------------------------------------------------------------------------
  3246 ;; (4) ___awdiv                                              9     5      4     300
  3247 ;;                                              0 BANK0      9     5      4
  3248 ;; ---------------------------------------------------------------------------------
  3249 ;; (9) ___fttol                                             14    10      4     252
  3250 ;;                                              8 BANK0     14    10      4
  3251 ;;                           ___ftpack (ARG)
  3252 ;; ---------------------------------------------------------------------------------
  3253 ;; (10) ___ftpack                                            8     3      5     209
  3254 ;;                                              0 BANK0      8     3      5
  3255 ;; ---------------------------------------------------------------------------------
  3256 ;; (3) ___lwdiv                                              8     4      4     162
  3257 ;;                                              0 BANK0      8     4      4
  3258 ;; ---------------------------------------------------------------------------------
  3259 ;; (3) ___wmul                                               6     2      4     136
  3260 ;;                                              0 BANK0      6     2      4
  3261 ;; ---------------------------------------------------------------------------------
  3262 ;; (4) _SwPointSelect                                        2     2      0      22
  3263 ;;                                              0 BANK0      2     2      0
  3264 ;; ---------------------------------------------------------------------------------
  3265 ;; (2) _TouchPower                                           0     0      0       0
  3266 ;; ---------------------------------------------------------------------------------
  3267 ;; (4) _RfSWPointSelect                                      2     2      0      22
  3268 ;;                                              0 BANK0      2     2      0
  3269 ;; ---------------------------------------------------------------------------------
  3270 ;; (2) _setRF_Initialization                                 2     2      0       0
  3271 ;;                                              0 BANK0      1     1      0
  3272 ;; ---------------------------------------------------------------------------------
  3273 ;; (4) _RfPointSelect                                        2     2      0      22
  3274 ;;                                              0 BANK0      2     2      0
  3275 ;; ---------------------------------------------------------------------------------
  3276 ;; (4) _PowerFaultPointSelect                                2     2      0       0
  3277 ;;                                              0 BANK0      1     1      0
  3278 ;; ---------------------------------------------------------------------------------
  3279 ;; (4) _TempPointSelect                                      2     2      0       0
  3280 ;;                                              0 BANK0      1     1      0
  3281 ;; ---------------------------------------------------------------------------------
  3282 ;; (3) _setLoad_AH_AL_Restore                                3     3      0      90
  3283 ;;                                              0 BANK0      2     2      0
  3284 ;; ---------------------------------------------------------------------------------
  3285 ;; (7) _LoadPointSelect                                      2     2      0      22
  3286 ;;                                              0 BANK0      2     2      0
  3287 ;; ---------------------------------------------------------------------------------
  3288 ;; (3) _Flash_Memory_Read                                    4     4      0      47
  3289 ;;                                              0 BANK0      4     4      0
  3290 ;; ---------------------------------------------------------------------------------
  3291 ;; (2) _getAD                                                7     5      2      44
  3292 ;;                                              0 BANK0      7     5      2
  3293 ;; ---------------------------------------------------------------------------------
  3294 ;; (3) _setINT_GO                                            1     1      0      31
  3295 ;;                                              0 BANK0      1     1      0
  3296 ;; ---------------------------------------------------------------------------------
  3297 ;; (2) _IOC_Set                                              0     0      0       0
  3298 ;; ---------------------------------------------------------------------------------
  3299 ;; (2) _INT_Set                                              0     0      0       0
  3300 ;; ---------------------------------------------------------------------------------
  3301 ;; (2) _ADC_Set                                              0     0      0       0
  3302 ;; ---------------------------------------------------------------------------------
  3303 ;; (2) _TMR0_Set                                             1     1      0       0
  3304 ;;                                              0 BANK0      1     1      0
  3305 ;; ---------------------------------------------------------------------------------
  3306 ;; (2) _IO_Set                                               0     0      0       0
  3307 ;; ---------------------------------------------------------------------------------
  3308 ;; (1) _MainT_Initialization                                 1     1      0       0
  3309 ;;                                              0 BANK0      1     1      0
  3310 ;; ---------------------------------------------------------------------------------
  3311 ;; (7) _LedPointSelect                                       2     2      0      66
  3312 ;;                                              0 BANK0      2     2      0
  3313 ;; ---------------------------------------------------------------------------------
  3314 ;; (7) _DimmerPointSelect                                    2     2      0      22
  3315 ;;                                              0 BANK0      2     2      0
  3316 ;; ---------------------------------------------------------------------------------
  3317 ;; (6) _setLoad_Count                                        3     2      1      44
  3318 ;;                                              0 BANK0      2     1      1
  3319 ;; ---------------------------------------------------------------------------------
  3320 ;; (4) _DimmerLightsPointSelect                              2     2      0      22
  3321 ;;                                              0 BANK0      2     2      0
  3322 ;; ---------------------------------------------------------------------------------
  3323 ;; (7) _DelayTimejudge                                       3     3      0     161
  3324 ;;                                              0 BANK0      3     3      0
  3325 ;; ---------------------------------------------------------------------------------
  3326 ;; (3) _setRF_DimmerLights                                   5     4      1     156
  3327 ;;                                              0 BANK0      5     4      1
  3328 ;; ---------------------------------------------------------------------------------
  3329 ;; (3) _DelayOffPointSelect                                  2     2      0      22
  3330 ;;                                              0 BANK0      2     2      0
  3331 ;; ---------------------------------------------------------------------------------
  3332 ;; (3) _DelayTime_1us                                        6     4      2     136
  3333 ;;                                              0 BANK0      6     4      2
  3334 ;; ---------------------------------------------------------------------------------
  3335 ;; (4) _CC2500_ReadByte                                      2     2      0      46
  3336 ;;                                              0 BANK0      2     2      0
  3337 ;; ---------------------------------------------------------------------------------
  3338 ;; (4) _CC2500_WriteByte                                     2     2      0      46
  3339 ;;                                              0 BANK0      2     2      0
  3340 ;; ---------------------------------------------------------------------------------
  3341 ;; (4) _BuzPointSelect                                       2     2      0      22
  3342 ;;                                              0 BANK0      2     2      0
  3343 ;; ---------------------------------------------------------------------------------
  3344 ;; Estimated maximum stack depth 10
  3345 ;; ---------------------------------------------------------------------------------
  3346 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  3347 ;; ---------------------------------------------------------------------------------
  3348 ;; (11) _ISR                                                 1     1      0     555
  3349 ;;                                              6 COMMON     1     1      0
  3350 ;;                            _IOC_ISR
  3351 ;;                           _TMR0_ISR
  3352 ;;                            _INT_ISR
  3353 ;; ---------------------------------------------------------------------------------
  3354 ;; (12) _INT_ISR                                             0     0      0     117
  3355 ;;                    _setRF_ReceiveGO
  3356 ;; ---------------------------------------------------------------------------------
  3357 ;; (12) _TMR0_ISR                                            1     1      0     438
  3358 ;;                                              5 COMMON     1     1      0
  3359 ;;                i1_setLoad_StatusOff
  3360 ;; ---------------------------------------------------------------------------------
  3361 ;; (13) i1_setLoad_StatusOff                                 3     1      2     438
  3362 ;;                                              2 COMMON     3     1      2
  3363 ;;                  i1_LoadPointSelect
  3364 ;; ---------------------------------------------------------------------------------
  3365 ;; (13) _setRF_ReceiveGO                                     2     1      1     117
  3366 ;;                                              2 COMMON     2     1      1
  3367 ;;                    i1_RfPointSelect
  3368 ;; ---------------------------------------------------------------------------------
  3369 ;; (12) _IOC_ISR                                             0     0      0       0
  3370 ;;                   _setDimmerReClock
  3371 ;; ---------------------------------------------------------------------------------
  3372 ;; (14) i1_RfPointSelect                                     2     2      0      73
  3373 ;;                                              0 COMMON     2     2      0
  3374 ;; ---------------------------------------------------------------------------------
  3375 ;; (14) i1_LoadPointSelect                                   2     2      0      73
  3376 ;;                                              0 COMMON     2     2      0
  3377 ;; ---------------------------------------------------------------------------------
  3378 ;; (13) _setDimmerReClock                                    0     0      0       0
  3379 ;; ---------------------------------------------------------------------------------
  3380 ;; Estimated maximum stack depth 14
  3381 ;; ---------------------------------------------------------------------------------
  3382                           
  3383 ;; Call Graph Graphs:
  3384                           
  3385 ;; _main (ROOT)
  3386 ;;   _MainT_Initialization
  3387 ;;   _Mcu_Initialization
  3388 ;;     _IO_Set
  3389 ;;     _TMR0_Set
  3390 ;;     _ADC_Set
  3391 ;;     _INT_Set
  3392 ;;     _IOC_Set
  3393 ;;   _Flash_Memory_Initialization
  3394 ;;     _Flash_Memory_Read
  3395 ;;     _setPercentValue
  3396 ;;       ___awtoft
  3397 ;;         ___ftpack
  3398 ;;         ___fttol (ARG)
  3399 ;;           ___ftpack (ARG)
  3400 ;;       ___ftdiv
  3401 ;;         ___ftpack
  3402 ;;         ___awtoft (ARG)
  3403 ;;           ___ftpack
  3404 ;;           ___fttol (ARG)
  3405 ;;             ___ftpack (ARG)
  3406 ;;         ___fttol (ARG)
  3407 ;;           ___ftpack (ARG)
  3408 ;;       ___fttol
  3409 ;;         ___ftpack (ARG)
  3410 ;;     _Flash_Memory_Write
  3411 ;;       _Flash_Memory_Unlock
  3412 ;;   _LED_Initialization
  3413 ;;     _setLED_Initialization
  3414 ;;       _LedPointSelect
  3415 ;;       _setLED
  3416 ;;         _LedPointSelect
  3417 ;;   _Buzzer_Initialization
  3418 ;;     _setBuz_Initialization
  3419 ;;       _setBuz_Enable
  3420 ;;         _BuzPointSelect
  3421 ;;   _DimmerLights_Initialization
  3422 ;;     _setDimmerLights_Initialization
  3423 ;;       _DimmerLightsPointSelect
  3424 ;;       _getPercentValue
  3425 ;;         ___awtoft
  3426 ;;           ___ftpack
  3427 ;;           ___fttol (ARG)
  3428 ;;             ___ftpack (ARG)
  3429 ;;         ___ftmul
  3430 ;;           ___ftpack
  3431 ;;           ___awtoft (ARG)
  3432 ;;             ___ftpack
  3433 ;;             ___fttol (ARG)
  3434 ;;               ___ftpack (ARG)
  3435 ;;           ___fttol (ARG)
  3436 ;;             ___ftpack (ARG)
  3437 ;;         ___ftadd
  3438 ;;           ___ftpack
  3439 ;;           ___ftmul (ARG)
  3440 ;;             ___ftpack
  3441 ;;             ___awtoft (ARG)
  3442 ;;               ___ftpack
  3443 ;;               ___fttol (ARG)
  3444 ;;                 ___ftpack (ARG)
  3445 ;;             ___fttol (ARG)
  3446 ;;               ___ftpack (ARG)
  3447 ;;           ___awtoft (ARG)
  3448 ;;             ___ftpack
  3449 ;;             ___fttol (ARG)
  3450 ;;               ___ftpack (ARG)
  3451 ;;           ___fttol (ARG)
  3452 ;;             ___ftpack (ARG)
  3453 ;;         ___fttol
  3454 ;;           ___ftpack (ARG)
  3455 ;;   _Temp_Initialization
  3456 ;;     _setTemp_Initialization
  3457 ;;       _TempPointSelect
  3458 ;;   _Load_Initialization
  3459 ;;     _setLoad_Initialization
  3460 ;;       _LoadPointSelect
  3461 ;;       _setLoad_AH_AL_Restore
  3462 ;;   _PowerFault_Initialization
  3463 ;;     _setPowerFault_Initialization
  3464 ;;       _PowerFaultPointSelect
  3465 ;;   _DelayOff_Initialization
  3466 ;;     _DlyOff_Initialization
  3467 ;;       _DelayOffPointSelect
  3468 ;;   _Switch_Initialization
  3469 ;;     _TouchPower
  3470 ;;     _setSw_Initialization
  3471 ;;       _setLED
  3472 ;;         _LedPointSelect
  3473 ;;     _setLED
  3474 ;;       _LedPointSelect
  3475 ;;   _RF_Initialization
  3476 ;;     _setRF_Initialization
  3477 ;;   _CC2500_PowerOnInitial
  3478 ;;     _CC2500_PowerRST
  3479 ;;       _DelayTime_1us
  3480 ;;       _CC2500_WriteByte
  3481 ;;     _CC2500_InitSetREG
  3482 ;;       _CC2500_WriteREG
  3483 ;;         _CC2500_WriteByte
  3484 ;;     _CC2500_InitPATable
  3485 ;;       _CC2500_WriteREG
  3486 ;;         _CC2500_WriteByte
  3487 ;;     _CC2500_ClearTXFIFO
  3488 ;;       _CC2500_WriteCommand
  3489 ;;         _CC2500_WriteByte
  3490 ;;     _CC2500_ClearRXFIFO
  3491 ;;       _CC2500_WriteCommand
  3492 ;;         _CC2500_WriteByte
  3493 ;;     _CC2500_FrequencyCabr
  3494 ;;       _CC2500_WriteCommand
  3495 ;;         _CC2500_WriteByte
  3496 ;;       _DelayTime_1us
  3497 ;;     _CC2500_SIDLEMode
  3498 ;;       _CC2500_WriteCommand
  3499 ;;         _CC2500_WriteByte
  3500 ;;   _getLoad_AD
  3501 ;;     _LoadPointSelect
  3502 ;;     _getAD
  3503 ;;   _getTemp_AD
  3504 ;;     _TempPointSelect
  3505 ;;     _getAD
  3506 ;;   _getPowerFault_AD
  3507 ;;     _PowerFaultPointSelect
  3508 ;;     _getAD
  3509 ;;   _MainT
  3510 ;;     _setTemp_Enable
  3511 ;;       _TempPointSelect
  3512 ;;     _setLoad_Enable
  3513 ;;       _LoadPointSelect
  3514 ;;     _getTemp_ERROR
  3515 ;;       _TempPointSelect
  3516 ;;     _getPF_ERROR
  3517 ;;       _PowerFaultPointSelect
  3518 ;;     _getLoad_ERROR
  3519 ;;       _LoadPointSelect
  3520 ;;     _DimmerLightsPointSelect
  3521 ;;     _setDimmerLights_Trigger
  3522 ;;       _DimmerLightsPointSelect
  3523 ;;     _setDimmerLights_Switch
  3524 ;;       _DimmerLightsPointSelect
  3525 ;;     _setBuz
  3526 ;;       _BuzPointSelect
  3527 ;;       ___awdiv
  3528 ;;     _getTemp_Safe
  3529 ;;       _TempPointSelect
  3530 ;;     _getPF_Safe
  3531 ;;       _PowerFaultPointSelect
  3532 ;;     _getLoad_Safe
  3533 ;;       _LoadPointSelect
  3534 ;;     _getPercentValue
  3535 ;;       ___awtoft
  3536 ;;         ___ftpack
  3537 ;;         ___fttol (ARG)
  3538 ;;           ___ftpack (ARG)
  3539 ;;       ___ftmul
  3540 ;;         ___ftpack
  3541 ;;         ___awtoft (ARG)
  3542 ;;           ___ftpack
  3543 ;;           ___fttol (ARG)
  3544 ;;             ___ftpack (ARG)
  3545 ;;         ___fttol (ARG)
  3546 ;;           ___ftpack (ARG)
  3547 ;;       ___ftadd
  3548 ;;         ___ftpack
  3549 ;;         ___ftmul (ARG)
  3550 ;;           ___ftpack
  3551 ;;           ___awtoft (ARG)
  3552 ;;             ___ftpack
  3553 ;;             ___fttol (ARG)
  3554 ;;               ___ftpack (ARG)
  3555 ;;           ___fttol (ARG)
  3556 ;;             ___ftpack (ARG)
  3557 ;;         ___awtoft (ARG)
  3558 ;;           ___ftpack
  3559 ;;           ___fttol (ARG)
  3560 ;;             ___ftpack (ARG)
  3561 ;;         ___fttol (ARG)
  3562 ;;           ___ftpack (ARG)
  3563 ;;       ___fttol
  3564 ;;         ___ftpack (ARG)
  3565 ;;     _setSw_Enable
  3566 ;;       _SwPointSelect
  3567 ;;     _setRF_Enable
  3568 ;;       _RfPointSelect
  3569 ;;       _CC2500_WriteCommand
  3570 ;;         _CC2500_WriteByte
  3571 ;;       _RF_RxDisable
  3572 ;;         _RfPointSelect
  3573 ;;         _CC2500_WriteCommand
  3574 ;;           _CC2500_WriteByte
  3575 ;;         _setINT_GO
  3576 ;;   _Flash_Memory_Main
  3577 ;;     _Flash_Memory_Modify
  3578 ;;       _Flash_Memory_Read
  3579 ;;       _Flash_Memory_Erasing
  3580 ;;         _Flash_Memory_Unlock
  3581 ;;       _Flash_Memory_Write
  3582 ;;         _Flash_Memory_Unlock
  3583 ;;   _Buzzer_Main
  3584 ;;     _setBuz_Main
  3585 ;;       _BuzPointSelect
  3586 ;;   _LED_Main
  3587 ;;     _setLED_Main
  3588 ;;       _LedPointSelect
  3589 ;;   _Temp_Main
  3590 ;;     _setTemp_Main
  3591 ;;       _TempPointSelect
  3592 ;;       _getLoad_Safe
  3593 ;;         _LoadPointSelect
  3594 ;;       _getPF_Safe
  3595 ;;         _PowerFaultPointSelect
  3596 ;;       _setOverTemp_ERROR
  3597 ;;         _TempPointSelect
  3598 ;;         _setDimmer_TempERROR
  3599 ;;           _DimmerPointSelect
  3600 ;;         _DimmerLights_ERROR
  3601 ;;           _getDimmer_TempERROR
  3602 ;;             _DimmerPointSelect
  3603 ;;           _getDimmerLights_StatusFlag
  3604 ;;             _DimmerLightsPointSelect
  3605 ;;           _setBuz
  3606 ;;             _BuzPointSelect
  3607 ;;             ___awdiv
  3608 ;;           _setDimmerLights_ERROR
  3609 ;;             _DimmerLightsPointSelect
  3610 ;;             _setLoad_StatusOff
  3611 ;;               _LoadPointSelect
  3612 ;;             _setLED
  3613 ;;               _LedPointSelect
  3614 ;;             _setSw_Status
  3615 ;;               _SwPointSelect
  3616 ;;             _setRFSW_Status
  3617 ;;               _RfSWPointSelect
  3618 ;;           _getDimmer_LoadERROR
  3619 ;;             _DimmerPointSelect
  3620 ;;           _getDimmer_PFERROR
  3621 ;;             _DimmerPointSelect
  3622 ;;           _setDimmerLights_TriggerERROR
  3623 ;;             _DimmerLightsPointSelect
  3624 ;;         _setLED
  3625 ;;           _LedPointSelect
  3626 ;;         _setSw_Enable
  3627 ;;           _SwPointSelect
  3628 ;;         _setRF_Enable
  3629 ;;           _RfPointSelect
  3630 ;;           _CC2500_WriteCommand
  3631 ;;             _CC2500_WriteByte
  3632 ;;           _RF_RxDisable
  3633 ;;             _RfPointSelect
  3634 ;;             _CC2500_WriteCommand
  3635 ;;               _CC2500_WriteByte
  3636 ;;             _setINT_GO
  3637 ;;         _setBuz
  3638 ;;           _BuzPointSelect
  3639 ;;           ___awdiv
  3640 ;;   _Load_Main
  3641 ;;     _setLoad_Main
  3642 ;;       _LoadPointSelect
  3643 ;;       _setLoad_ERROR
  3644 ;;         _LoadPointSelect
  3645 ;;         _setDimmer_LoadERROR
  3646 ;;           _DimmerPointSelect
  3647 ;;         _DimmerLights_ERROR
  3648 ;;           _getDimmer_TempERROR
  3649 ;;             _DimmerPointSelect
  3650 ;;           _getDimmerLights_StatusFlag
  3651 ;;             _DimmerLightsPointSelect
  3652 ;;           _setBuz
  3653 ;;             _BuzPointSelect
  3654 ;;             ___awdiv
  3655 ;;           _setDimmerLights_ERROR
  3656 ;;             _DimmerLightsPointSelect
  3657 ;;             _setLoad_StatusOff
  3658 ;;               _LoadPointSelect
  3659 ;;             _setLED
  3660 ;;               _LedPointSelect
  3661 ;;             _setSw_Status
  3662 ;;               _SwPointSelect
  3663 ;;             _setRFSW_Status
  3664 ;;               _RfSWPointSelect
  3665 ;;           _getDimmer_LoadERROR
  3666 ;;             _DimmerPointSelect
  3667 ;;           _getDimmer_PFERROR
  3668 ;;             _DimmerPointSelect
  3669 ;;           _setDimmerLights_TriggerERROR
  3670 ;;             _DimmerLightsPointSelect
  3671 ;;         _setLED
  3672 ;;           _LedPointSelect
  3673 ;;         _setSw_Enable
  3674 ;;           _SwPointSelect
  3675 ;;         _setRF_Enable
  3676 ;;           _RfPointSelect
  3677 ;;           _CC2500_WriteCommand
  3678 ;;             _CC2500_WriteByte
  3679 ;;           _RF_RxDisable
  3680 ;;             _RfPointSelect
  3681 ;;             _CC2500_WriteCommand
  3682 ;;               _CC2500_WriteByte
  3683 ;;             _setINT_GO
  3684 ;;       ___lwdiv
  3685 ;;       ___wmul
  3686 ;;       _setDimmerLights_Open
  3687 ;;         _DimmerLightsPointSelect
  3688 ;;       _setLoad_AH_AL_Restore
  3689 ;;       _getTemp_Safe
  3690 ;;         _TempPointSelect
  3691 ;;       _getPF_Safe
  3692 ;;         _PowerFaultPointSelect
  3693 ;;   _PowerFault_Main
  3694 ;;     _setPowerFault_Main
  3695 ;;       _PowerFaultPointSelect
  3696 ;;       _getLoad_Safe
  3697 ;;         _LoadPointSelect
  3698 ;;       _getTemp_Safe
  3699 ;;         _TempPointSelect
  3700 ;;       _setPowerFault_ERROR
  3701 ;;         _PowerFaultPointSelect
  3702 ;;         _setDimmer_PFERROR
  3703 ;;           _DimmerPointSelect
  3704 ;;         _DimmerLights_ERROR
  3705 ;;           _getDimmer_TempERROR
  3706 ;;             _DimmerPointSelect
  3707 ;;           _getDimmerLights_StatusFlag
  3708 ;;             _DimmerLightsPointSelect
  3709 ;;           _setBuz
  3710 ;;             _BuzPointSelect
  3711 ;;             ___awdiv
  3712 ;;           _setDimmerLights_ERROR
  3713 ;;             _DimmerLightsPointSelect
  3714 ;;             _setLoad_StatusOff
  3715 ;;               _LoadPointSelect
  3716 ;;             _setLED
  3717 ;;               _LedPointSelect
  3718 ;;             _setSw_Status
  3719 ;;               _SwPointSelect
  3720 ;;             _setRFSW_Status
  3721 ;;               _RfSWPointSelect
  3722 ;;           _getDimmer_LoadERROR
  3723 ;;             _DimmerPointSelect
  3724 ;;           _getDimmer_PFERROR
  3725 ;;             _DimmerPointSelect
  3726 ;;           _setDimmerLights_TriggerERROR
  3727 ;;             _DimmerLightsPointSelect
  3728 ;;         _setLED
  3729 ;;           _LedPointSelect
  3730 ;;         _setSw_Enable
  3731 ;;           _SwPointSelect
  3732 ;;         _setRF_Enable
  3733 ;;           _RfPointSelect
  3734 ;;           _CC2500_WriteCommand
  3735 ;;             _CC2500_WriteByte
  3736 ;;           _RF_RxDisable
  3737 ;;             _RfPointSelect
  3738 ;;             _CC2500_WriteCommand
  3739 ;;               _CC2500_WriteByte
  3740 ;;             _setINT_GO
  3741 ;;   _DimmerLights_Main
  3742 ;;     _setDimmerLights_Main
  3743 ;;       _DimmerLightsPointSelect
  3744 ;;       _setDimmerLights_Open
  3745 ;;         _DimmerLightsPointSelect
  3746 ;;       _setDimmerLights_Close
  3747 ;;         _DimmerLightsPointSelect
  3748 ;;       _setDimmerLights
  3749 ;;         _DimmerLightsPointSelect
  3750 ;;         _setLED
  3751 ;;           _LedPointSelect
  3752 ;;         _setLoad_StatusOn
  3753 ;;           _LoadPointSelect
  3754 ;;         _setLoad_Count
  3755 ;;         _setDimmer_Detect
  3756 ;;           _DimmerPointSelect
  3757 ;;         _setLoad_GO
  3758 ;;           _LoadPointSelect
  3759 ;;         _setLoad_LightsStatus
  3760 ;;           _LoadPointSelect
  3761 ;;       _getDimmerLights_Trigger
  3762 ;;         _DimmerLightsPointSelect
  3763 ;;       _setDimmerLights_Adj
  3764 ;;         _DimmerLightsPointSelect
  3765 ;;         _setLoad_StatusOff
  3766 ;;           _LoadPointSelect
  3767 ;;         _setRF_DimmerLights
  3768 ;;         _setTxData
  3769 ;;           _RfPointSelect
  3770 ;;         _setPercentValue
  3771 ;;           ___awtoft
  3772 ;;             ___ftpack
  3773 ;;             ___fttol (ARG)
  3774 ;;               ___ftpack (ARG)
  3775 ;;           ___ftdiv
  3776 ;;             ___ftpack
  3777 ;;             ___awtoft (ARG)
  3778 ;;               ___ftpack
  3779 ;;               ___fttol (ARG)
  3780 ;;                 ___ftpack (ARG)
  3781 ;;             ___fttol (ARG)
  3782 ;;               ___ftpack (ARG)
  3783 ;;           ___fttol
  3784 ;;             ___ftpack (ARG)
  3785 ;;       _setBuz
  3786 ;;         _BuzPointSelect
  3787 ;;         ___awdiv
  3788 ;;     _DimmerLights_Close
  3789 ;;       _getDimmer_Detect
  3790 ;;         _DimmerPointSelect
  3791 ;;       _setDimmer_Detect
  3792 ;;         _DimmerPointSelect
  3793 ;;       _getDimmerLights_StatusFlag
  3794 ;;         _DimmerLightsPointSelect
  3795 ;;       _setLoad_GO
  3796 ;;         _LoadPointSelect
  3797 ;;   _Switch_Main
  3798 ;;     _setSw_Main
  3799 ;;       _SwPointSelect
  3800 ;;       _Sw_OnFunc
  3801 ;;         _setBuz
  3802 ;;           _BuzPointSelect
  3803 ;;           ___awdiv
  3804 ;;         _setRFSW_Status
  3805 ;;           _RfSWPointSelect
  3806 ;;         _setDimmerLights_Trigger
  3807 ;;           _DimmerLightsPointSelect
  3808 ;;         _setDimmerLights_Switch
  3809 ;;           _DimmerLightsPointSelect
  3810 ;;         _setRF_DimmerLights
  3811 ;;         _setTxData
  3812 ;;           _RfPointSelect
  3813 ;;       _Sw_AdjFunc
  3814 ;;         _setRFSW_Status
  3815 ;;           _RfSWPointSelect
  3816 ;;         _setDimmerLights_TriggerAdj
  3817 ;;           _DimmerLightsPointSelect
  3818 ;;         _setDimmerLights_AdjGo
  3819 ;;           _DimmerLightsPointSelect
  3820 ;;       _setRF_Learn
  3821 ;;         _RfPointSelect
  3822 ;;       _setBuz
  3823 ;;         _BuzPointSelect
  3824 ;;         ___awdiv
  3825 ;;       _Sw_OffFunc
  3826 ;;         _setDimmerLights_TriggerAdj
  3827 ;;           _DimmerLightsPointSelect
  3828 ;;         _setDimmerLights_AdjGo
  3829 ;;           _DimmerLightsPointSelect
  3830 ;;         _setRF_DimmerLights
  3831 ;;         _setTxData
  3832 ;;           _RfPointSelect
  3833 ;;         _setDelayOff_GO
  3834 ;;           _DelayOffPointSelect
  3835 ;;           _DelayTimejudge
  3836 ;;         _setDimmerLights_Trigger
  3837 ;;           _DimmerLightsPointSelect
  3838 ;;         _setDimmerLights_Switch
  3839 ;;           _DimmerLightsPointSelect
  3840 ;;   _RF_Main
  3841 ;;     _setRF_Main
  3842 ;;       _RfPointSelect
  3843 ;;       _RF_RxDisable
  3844 ;;         _RfPointSelect
  3845 ;;         _CC2500_WriteCommand
  3846 ;;           _CC2500_WriteByte
  3847 ;;         _setINT_GO
  3848 ;;       _CC2500_RxData
  3849 ;;         _CC2500_ReadStatus
  3850 ;;           _CC2500_WriteByte
  3851 ;;           _CC2500_ReadByte
  3852 ;;         _CC2500_WriteByte
  3853 ;;         _CC2500_ReadByte
  3854 ;;         _CC2500_WriteCommand
  3855 ;;           _CC2500_WriteByte
  3856 ;;         _setRF_RxStatus
  3857 ;;           _RfPointSelect
  3858 ;;       _getRxData
  3859 ;;         _RfPointSelect
  3860 ;;         _setLog_Code
  3861 ;;           _RfPointSelect
  3862 ;;           _setBuz
  3863 ;;             _BuzPointSelect
  3864 ;;             ___awdiv
  3865 ;;         _setControl_Lights_Table
  3866 ;;           _RfPointSelect
  3867 ;;           _setDimmerLights
  3868 ;;             _DimmerLightsPointSelect
  3869 ;;             _setLED
  3870 ;;               _LedPointSelect
  3871 ;;             _setLoad_StatusOn
  3872 ;;               _LoadPointSelect
  3873 ;;             _setLoad_Count
  3874 ;;             _setDimmer_Detect
  3875 ;;               _DimmerPointSelect
  3876 ;;             _setLoad_GO
  3877 ;;               _LoadPointSelect
  3878 ;;             _setLoad_LightsStatus
  3879 ;;               _LoadPointSelect
  3880 ;;           _setRFSW_Status
  3881 ;;             _RfSWPointSelect
  3882 ;;           _setSw_Status
  3883 ;;             _SwPointSelect
  3884 ;;           _setBuz
  3885 ;;             _BuzPointSelect
  3886 ;;             ___awdiv
  3887 ;;           _setTxData
  3888 ;;             _RfPointSelect
  3889 ;;           _setRFSW_Control
  3890 ;;             _RfSWPointSelect
  3891 ;;             _setDelayOff_GO
  3892 ;;               _DelayOffPointSelect
  3893 ;;               _DelayTimejudge
  3894 ;;             _setSw_Status
  3895 ;;               _SwPointSelect
  3896 ;;             _setRF_DimmerLights
  3897 ;;             _setDimmerLights_Trigger
  3898 ;;               _DimmerLightsPointSelect
  3899 ;;             _setDimmerLights_Switch
  3900 ;;               _DimmerLightsPointSelect
  3901 ;;             _setBuz
  3902 ;;               _BuzPointSelect
  3903 ;;               ___awdiv
  3904 ;;             _setTxData
  3905 ;;               _RfPointSelect
  3906 ;;           _setRFSW_AdjControl
  3907 ;;             _RfSWPointSelect
  3908 ;;             _setRF_DimmerValue
  3909 ;;               _setDimmerLights_AdjRF
  3910 ;;                 _DimmerLightsPointSelect
  3911 ;;                 _getPercentValue
  3912 ;;                   ___awtoft
  3913 ;;                     ___ftpack
  3914 ;;                     ___fttol (ARG)
  3915 ;;                       ___ftpack (ARG)
  3916 ;;                   ___ftmul
  3917 ;;                     ___ftpack
  3918 ;;                     ___awtoft (ARG)
  3919 ;;                       ___ftpack
  3920 ;;                       ___fttol (ARG)
  3921 ;;                         ___ftpack (ARG)
  3922 ;;                     ___fttol (ARG)
  3923 ;;                       ___ftpack (ARG)
  3924 ;;                   ___ftadd
  3925 ;;                     ___ftpack
  3926 ;;                     ___ftmul (ARG)
  3927 ;;                       ___ftpack
  3928 ;;                       ___awtoft (ARG)
  3929 ;;                         ___ftpack
  3930 ;;                         ___fttol (ARG)
  3931 ;;                           ___ftpack (ARG)
  3932 ;;                       ___fttol (ARG)
  3933 ;;                         ___ftpack (ARG)
  3934 ;;                     ___awtoft (ARG)
  3935 ;;                       ___ftpack
  3936 ;;                       ___fttol (ARG)
  3937 ;;                         ___ftpack (ARG)
  3938 ;;                     ___fttol (ARG)
  3939 ;;                       ___ftpack (ARG)
  3940 ;;                   ___fttol
  3941 ;;                     ___ftpack (ARG)
  3942 ;;             _setTxData
  3943 ;;               _RfPointSelect
  3944 ;;       _CC2500_TxData
  3945 ;;         _CC2500_WriteByte
  3946 ;;         _CC2500_WriteCommand
  3947 ;;           _CC2500_WriteByte
  3948 ;;       _CC2500_WriteCommand
  3949 ;;         _CC2500_WriteByte
  3950 ;;       _setINT_GO
  3951 ;;   _DelayOff_Main
  3952 ;;     _DlyOff_Main
  3953 ;;       _DelayOffPointSelect
  3954 ;;       _setSw_Status
  3955 ;;         _SwPointSelect
  3956 ;;       _setRFSW_Status
  3957 ;;         _RfSWPointSelect
  3958 ;;       _setRF_DimmerLights
  3959 ;;       _setDimmerLights_Trigger
  3960 ;;         _DimmerLightsPointSelect
  3961 ;;       _setDimmerLights_Switch
  3962 ;;         _DimmerLightsPointSelect
  3963 ;;       _setTxData
  3964 ;;         _RfPointSelect
  3965 ;;       _setBuz
  3966 ;;         _BuzPointSelect
  3967 ;;         ___awdiv
  3968 ;;
  3969 ;; _ISR (ROOT)
  3970 ;;   _IOC_ISR
  3971 ;;     _setDimmerReClock
  3972 ;;   _TMR0_ISR
  3973 ;;     i1_setLoad_StatusOff
  3974 ;;       i1_LoadPointSelect
  3975 ;;   _INT_ISR
  3976 ;;     _setRF_ReceiveGO
  3977 ;;       i1_RfPointSelect
  3978 ;;
  3979                           
  3980 ;; Address spaces:
  3981                           
  3982 ;;Name               Size   Autos  Total    Cost      Usage
  3983 ;;BIGRAM             3F0      0       0       0        0.0%
  3984 ;;NULL                 0      0       0       0        0.0%
  3985 ;;CODE                 0      0       0       0        0.0%
  3986 ;;BITCOMMON            E      0       1       1        7.1%
  3987 ;;BITSFR0              0      0       0       1        0.0%
  3988 ;;SFR0                 0      0       0       1        0.0%
  3989 ;;COMMON               E      7       E       2      100.0%
  3990 ;;BITSFR1              0      0       0       2        0.0%
  3991 ;;SFR1                 0      0       0       2        0.0%
  3992 ;;BITSFR2              0      0       0       3        0.0%
  3993 ;;SFR2                 0      0       0       3        0.0%
  3994 ;;STACK                0      0      12       3        0.0%
  3995 ;;BITBANK0            50      0       0       4        0.0%
  3996 ;;BITSFR3              0      0       0       4        0.0%
  3997 ;;SFR3                 0      0       0       4        0.0%
  3998 ;;BANK0               50     4A      50       5      100.0%
  3999 ;;BITSFR4              0      0       0       5        0.0%
  4000 ;;SFR4                 0      0       0       5        0.0%
  4001 ;;BITBANK1            50      0       0       6        0.0%
  4002 ;;BITSFR5              0      0       0       6        0.0%
  4003 ;;SFR5                 0      0       0       6        0.0%
  4004 ;;BANK1               50      0      49       7       91.3%
  4005 ;;BITSFR6              0      0       0       7        0.0%
  4006 ;;SFR6                 0      0       0       7        0.0%
  4007 ;;BITBANK2            50      0       0       8        0.0%
  4008 ;;BITSFR7              0      0       0       8        0.0%
  4009 ;;SFR7                 0      0       0       8        0.0%
  4010 ;;BANK2               50      0      3D       9       76.3%
  4011 ;;BITSFR8              0      0       0       9        0.0%
  4012 ;;SFR8                 0      0       0       9        0.0%
  4013 ;;BITBANK3            50      0       0      10        0.0%
  4014 ;;BITSFR9              0      0       0      10        0.0%
  4015 ;;SFR9                 0      0       0      10        0.0%
  4016 ;;BANK3               50      0      43      11       83.8%
  4017 ;;BITSFR10             0      0       0      11        0.0%
  4018 ;;SFR10                0      0       0      11        0.0%
  4019 ;;BITBANK4            50      0       0      12        0.0%
  4020 ;;BITSFR11             0      0       0      12        0.0%
  4021 ;;SFR11                0      0       0      12        0.0%
  4022 ;;BANK4               50      0      47      13       88.8%
  4023 ;;BITSFR12             0      0       0      13        0.0%
  4024 ;;SFR12                0      0       0      13        0.0%
  4025 ;;BITBANK5            50      0       0      14        0.0%
  4026 ;;BITSFR13             0      0       0      14        0.0%
  4027 ;;SFR13                0      0       0      14        0.0%
  4028 ;;BANK5               50      0       0      15        0.0%
  4029 ;;BITSFR14             0      0       0      15        0.0%
  4030 ;;SFR14                0      0       0      15        0.0%
  4031 ;;BITBANK6            50      0       0      16        0.0%
  4032 ;;BITSFR15             0      0       0      16        0.0%
  4033 ;;SFR15                0      0       0      16        0.0%
  4034 ;;BANK6               50      0       0      17        0.0%
  4035 ;;BITSFR16             0      0       0      17        0.0%
  4036 ;;SFR16                0      0       0      17        0.0%
  4037 ;;BITBANK7            50      0       0      18        0.0%
  4038 ;;BITSFR17             0      0       0      18        0.0%
  4039 ;;SFR17                0      0       0      18        0.0%
  4040 ;;BANK7               50      0       0      19        0.0%
  4041 ;;BITSFR18             0      0       0      19        0.0%
  4042 ;;SFR18                0      0       0      19        0.0%
  4043 ;;BITSFR19             0      0       0      20        0.0%
  4044 ;;SFR19                0      0       0      20        0.0%
  4045 ;;ABS                  0      0     16E      20        0.0%
  4046 ;;BITBANK8            50      0       0      21        0.0%
  4047 ;;BITSFR20             0      0       0      21        0.0%
  4048 ;;SFR20                0      0       0      21        0.0%
  4049 ;;BANK8               50      0       0      22        0.0%
  4050 ;;BITSFR21             0      0       0      22        0.0%
  4051 ;;SFR21                0      0       0      22        0.0%
  4052 ;;BITBANK9            50      0       0      23        0.0%
  4053 ;;BITSFR22             0      0       0      23        0.0%
  4054 ;;SFR22                0      0       0      23        0.0%
  4055 ;;BANK9               50      0       0      24        0.0%
  4056 ;;BITSFR23             0      0       0      24        0.0%
  4057 ;;SFR23                0      0       0      24        0.0%
  4058 ;;BITBANK10           50      0       0      25        0.0%
  4059 ;;BITSFR24             0      0       0      25        0.0%
  4060 ;;SFR24                0      0       0      25        0.0%
  4061 ;;BANK10              50      0       0      26        0.0%
  4062 ;;BITSFR25             0      0       0      26        0.0%
  4063 ;;SFR25                0      0       0      26        0.0%
  4064 ;;BITBANK11           50      0       0      27        0.0%
  4065 ;;BITSFR26             0      0       0      27        0.0%
  4066 ;;SFR26                0      0       0      27        0.0%
  4067 ;;BANK11              50      0       0      28        0.0%
  4068 ;;BITSFR27             0      0       0      28        0.0%
  4069 ;;SFR27                0      0       0      28        0.0%
  4070 ;;BITBANK12           30      0       0      29        0.0%
  4071 ;;BITSFR28             0      0       0      29        0.0%
  4072 ;;SFR28                0      0       0      29        0.0%
  4073 ;;BANK12              30      0       0      30        0.0%
  4074 ;;BITSFR29             0      0       0      30        0.0%
  4075 ;;SFR29                0      0       0      30        0.0%
  4076 ;;BITSFR30             0      0       0      31        0.0%
  4077 ;;SFR30                0      0       0      31        0.0%
  4078 ;;DATA                 0      0     180      31        0.0%
  4079 ;;BITSFR31             0      0       0      32        0.0%
  4080 ;;SFR31                0      0       0      32        0.0%
  4081                           
  4082                           	global	_main
  4083                           psect	maintext,global,class=CODE,delta=2
  4084                           global __pmaintext
  4085  0815                     __pmaintext:
  4086                           
  4087 ;; *************** function _main *****************
  4088 ;; Defined at:
  4089 ;;		line 7 in file "G:\Program\PIC\Source_File\main.c"
  4090 ;; Parameters:    Size  Location     Type
  4091 ;;		None
  4092 ;; Auto vars:     Size  Location     Type
  4093 ;;		None
  4094 ;; Return value:  Size  Location     Type
  4095 ;;		None               void
  4096 ;; Registers used:
  4097 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  4098 ;; Tracked objects:
  4099 ;;		On entry : 17F/0
  4100 ;;		On exit  : 0/0
  4101 ;;		Unchanged: 0/0
  4102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  4103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4105 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  4106 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  4107 ;;Total ram usage:        1 bytes
  4108 ;; Hardware stack levels required when called:   14
  4109 ;; This function calls:
  4110 ;;		_MainT_Initialization
  4111 ;;		_Mcu_Initialization
  4112 ;;		_Flash_Memory_Initialization
  4113 ;;		_LED_Initialization
  4114 ;;		_Buzzer_Initialization
  4115 ;;		_DimmerLights_Initialization
  4116 ;;		_Temp_Initialization
  4117 ;;		_Load_Initialization
  4118 ;;		_PowerFault_Initialization
  4119 ;;		_DelayOff_Initialization
  4120 ;;		_Switch_Initialization
  4121 ;;		_RF_Initialization
  4122 ;;		_CC2500_PowerOnInitial
  4123 ;;		_getLoad_AD
  4124 ;;		_getTemp_AD
  4125 ;;		_getPowerFault_AD
  4126 ;;		_MainT
  4127 ;;		_Flash_Memory_Main
  4128 ;;		_Buzzer_Main
  4129 ;;		_LED_Main
  4130 ;;		_Temp_Main
  4131 ;;		_Load_Main
  4132 ;;		_PowerFault_Main
  4133 ;;		_DimmerLights_Main
  4134 ;;		_Switch_Main
  4135 ;;		_RF_Main
  4136 ;;		_DelayOff_Main
  4137 ;; This function is called by:
  4138 ;;		Startup code after reset
  4139 ;; This function uses a non-reentrant model
  4140 ;;
  4141                           psect	maintext
  4142                           	file	"G:\Program\PIC\Source_File\main.c"
  4143                           	line	7
  4144                           	global	__size_of_main
  4145  0088                     	__size_of_main	equ	__end_of_main-_main
  4146                           	
  4147  0815                     _main:	
  4148                           	opt	stack 2
  4149                           ; Regs used in _main: [allreg]
  4150                           	line	8
  4151                           	
  4152  0815                     l22152:	
  4153                           ;main.c: 8: MainT_Initialization();
  4154  0815  31A1  210D  3188   	fcall	_MainT_Initialization
  4155                           	line	9
  4156                           ;main.c: 9: Mcu_Initialization();
  4157  0818  31A1  2162  3188   	fcall	_Mcu_Initialization
  4158                           	line	10
  4159                           ;main.c: 10: Flash_Memory_Initialization();
  4160  081B  3196  2696  3188   	fcall	_Flash_Memory_Initialization
  4161                           	line	11
  4162                           ;main.c: 11: LED_Initialization();
  4163  081E  31AE  264D  3188   	fcall	_LED_Initialization
  4164                           	line	12
  4165                           ;main.c: 12: Buzzer_Initialization();
  4166  0821  31AD  255B  3188   	fcall	_Buzzer_Initialization
  4167                           	line	15
  4168                           ;main.c: 15: DimmerLights_Initialization();
  4169  0824  31AD  25DE  3188   	fcall	_DimmerLights_Initialization
  4170                           	line	18
  4171                           ;main.c: 18: Temp_Initialization();
  4172  0827  31AD  254C  3188   	fcall	_Temp_Initialization
  4173                           	line	19
  4174                           ;main.c: 19: Load_Initialization();
  4175  082A  31AD  2551  3188   	fcall	_Load_Initialization
  4176                           	line	20
  4177                           ;main.c: 20: PowerFault_Initialization();
  4178  082D  31AD  2556  3188   	fcall	_PowerFault_Initialization
  4179                           	line	21
  4180                           ;main.c: 21: DelayOff_Initialization();
  4181  0830  31AD  2547  3188   	fcall	_DelayOff_Initialization
  4182                           	line	23
  4183                           ;main.c: 23: Switch_Initialization();
  4184  0833  31A0  20D4  3188   	fcall	_Switch_Initialization
  4185                           	line	24
  4186                           	
  4187  0836                     l22154:	
  4188                           ;main.c: 24: RF_Initialization();
  4189  0836  31AD  252E  3188   	fcall	_RF_Initialization
  4190                           	line	25
  4191                           	
  4192  0839                     l22156:	
  4193                           ;main.c: 25: CC2500_PowerOnInitial();
  4194  0839  31A1  214C  3188   	fcall	_CC2500_PowerOnInitial
  4195  083C  283D               	goto	l22158
  4196                           	line	27
  4197                           ;main.c: 27: while(1)
  4198                           	
  4199  083D                     l7161:	
  4200                           	line	29
  4201                           	
  4202  083D                     l22158:	
  4203                           ;main.c: 28: {
  4204                           ;main.c: 29: if(TMain->PowerON)
  4205  083D  087D               	movf	(_TMain),w
  4206  083E  0086               	movwf	fsr1l
  4207  083F  3001               	movlw 1	; select bank2/3
  4208  0840  0087               	movwf fsr1h	
  4209                           	
  4210  0841  1C01               	btfss	indf1,0
  4211  0842  2844               	goto	u11241
  4212  0843  2845               	goto	u11240
  4213  0844                     u11241:
  4214  0844  2861               	goto	l22162
  4215  0845                     u11240:
  4216                           	line	33
  4217                           	
  4218  0845                     l22160:	
  4219                           ;main.c: 30: {
  4220                           ;main.c: 33: getLoad_AD(1,0x05);
  4221  0845  3005               	movlw	(05h)
  4222  0846  0020               	movlb 0	; select bank0
  4223  0847  00E9               	movwf	(??_main+0)+0
  4224  0848  0869               	movf	(??_main+0)+0,w
  4225  0849  00A7               	movwf	(?_getLoad_AD)
  4226  084A  3001               	movlw	(01h)
  4227  084B  3188  209D  3188   	fcall	_getLoad_AD
  4228                           	line	36
  4229                           ;main.c: 36: getTemp_AD(1,0x09);
  4230  084E  3009               	movlw	(09h)
  4231  084F  0020               	movlb 0	; select bank0
  4232  0850  00E9               	movwf	(??_main+0)+0
  4233  0851  0869               	movf	(??_main+0)+0,w
  4234  0852  00A7               	movwf	(?_getTemp_AD)
  4235  0853  3001               	movlw	(01h)
  4236  0854  3190  201E  3188   	fcall	_getTemp_AD
  4237                           	line	39
  4238                           ;main.c: 39: getPowerFault_AD(1,0x11);
  4239  0857  3011               	movlw	(011h)
  4240  0858  0020               	movlb 0	; select bank0
  4241  0859  00E9               	movwf	(??_main+0)+0
  4242  085A  0869               	movf	(??_main+0)+0,w
  4243  085B  00A7               	movwf	(?_getPowerFault_AD)
  4244  085C  3001               	movlw	(01h)
  4245  085D  3198  2092  3188   	fcall	_getPowerFault_AD
  4246  0860  2861               	goto	l22162
  4247                           	line	41
  4248                           	
  4249  0861                     l7162:	
  4250                           	line	43
  4251                           	
  4252  0861                     l22162:	
  4253                           ;main.c: 41: }
  4254                           ;main.c: 43: if(TMain->T0_Timerout)
  4255  0861  087D               	movf	(_TMain),w
  4256  0862  0086               	movwf	fsr1l
  4257  0863  3001               	movlw 1	; select bank2/3
  4258  0864  0087               	movwf fsr1h	
  4259                           	
  4260  0865  1C81               	btfss	indf1,1
  4261  0866  2868               	goto	u11251
  4262  0867  2869               	goto	u11250
  4263  0868                     u11251:
  4264  0868  283D               	goto	l22158
  4265  0869                     u11250:
  4266                           	line	45
  4267                           	
  4268  0869                     l22164:	
  4269                           ;main.c: 44: {
  4270                           ;main.c: 45: TMain->T0_Timerout = 0;
  4271  0869  087D               	movf	(_TMain),w
  4272  086A  0086               	movwf	fsr1l
  4273  086B  3001               	movlw 1	; select bank2/3
  4274  086C  0087               	movwf fsr1h	
  4275                           	
  4276  086D  1081               	bcf	indf1,1
  4277                           	line	46
  4278                           	
  4279  086E                     l22166:	
  4280                           ;main.c: 46: MainT();
  4281  086E  318E  2675  3188   	fcall	_MainT
  4282                           	line	47
  4283                           	
  4284  0871                     l22168:	
  4285                           ;main.c: 47: if(TMain->PowerON)
  4286  0871  087D               	movf	(_TMain),w
  4287  0872  0086               	movwf	fsr1l
  4288  0873  3001               	movlw 1	; select bank2/3
  4289  0874  0087               	movwf fsr1h	
  4290                           	
  4291  0875  1C01               	btfss	indf1,0
  4292  0876  2878               	goto	u11261
  4293  0877  2879               	goto	u11260
  4294  0878                     u11261:
  4295  0878  283D               	goto	l22158
  4296  0879                     u11260:
  4297                           	line	49
  4298                           	
  4299  0879                     l22170:	
  4300                           ;main.c: 48: {
  4301                           ;main.c: 49: Flash_Memory_Main();
  4302  0879  3199  2178  3188   	fcall	_Flash_Memory_Main
  4303                           	line	50
  4304                           ;main.c: 50: Buzzer_Main();
  4305  087C  31AD  2533  3188   	fcall	_Buzzer_Main
  4306                           	line	51
  4307                           ;main.c: 51: LED_Main();
  4308  087F  31AE  2633  3188   	fcall	_LED_Main
  4309                           	line	54
  4310                           ;main.c: 54: Temp_Main();
  4311  0882  31AD  256A  3188   	fcall	_Temp_Main
  4312                           	line	55
  4313                           	
  4314  0885                     l22172:	
  4315                           ;main.c: 55: Load_Main();
  4316  0885  31AD  256F  3188   	fcall	_Load_Main
  4317                           	line	56
  4318                           	
  4319  0888                     l22174:	
  4320                           ;main.c: 56: PowerFault_Main();
  4321  0888  31AD  2574  3188   	fcall	_PowerFault_Main
  4322                           	line	58
  4323                           	
  4324  088B                     l22176:	
  4325                           ;main.c: 58: DimmerLights_Main();
  4326  088B  31AD  259E  3188   	fcall	_DimmerLights_Main
  4327                           	line	59
  4328                           	
  4329  088E                     l22178:	
  4330                           ;main.c: 59: Switch_Main();
  4331  088E  31AD  2565  3188   	fcall	_Switch_Main
  4332                           	line	60
  4333                           	
  4334  0891                     l22180:	
  4335                           ;main.c: 60: RF_Main();
  4336  0891  31AD  2579  3188   	fcall	_RF_Main
  4337                           	line	61
  4338                           	
  4339  0894                     l22182:	
  4340                           ;main.c: 61: DelayOff_Main();
  4341  0894  31AD  2560  3188   	fcall	_DelayOff_Main
  4342  0897  283D               	goto	l22158
  4343                           	line	63
  4344                           	
  4345  0898                     l7164:	
  4346  0898  283D               	goto	l22158
  4347                           	line	64
  4348                           	
  4349  0899                     l7163:	
  4350  0899  283D               	goto	l22158
  4351                           	line	65
  4352                           	
  4353  089A                     l7165:	
  4354                           	line	27
  4355  089A  283D               	goto	l22158
  4356                           	
  4357  089B                     l7166:	
  4358                           	line	66
  4359                           	
  4360  089B                     l7167:	
  4361                           	global	start
  4362  089B  3180  2815         	ljmp	start
  4363                           	opt stack 0
  4364                           GLOBAL	__end_of_main
  4365  089D                     	__end_of_main:
  4366 ;; =============== function _main ends ============
  4367                           
  4368                           	signat	_main,88
  4369                           	global	_RF_Main
  4370                           psect	text4869,local,class=CODE,delta=2
  4371                           global __ptext4869
  4372  2D79                     __ptext4869:
  4373                           
  4374 ;; *************** function _RF_Main *****************
  4375 ;; Defined at:
  4376 ;;		line 25 in file "G:\Program\PIC\Source_File\RF_Control_B1.c"
  4377 ;; Parameters:    Size  Location     Type
  4378 ;;		None
  4379 ;; Auto vars:     Size  Location     Type
  4380 ;;		None
  4381 ;; Return value:  Size  Location     Type
  4382 ;;		None               void
  4383 ;; Registers used:
  4384 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4385 ;; Tracked objects:
  4386 ;;		On entry : 0/0
  4387 ;;		On exit  : 0/0
  4388 ;;		Unchanged: 0/0
  4389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  4390 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4391 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4393 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4394 ;;Total ram usage:        0 bytes
  4395 ;; Hardware stack levels used:    1
  4396 ;; Hardware stack levels required when called:   13
  4397 ;; This function calls:
  4398 ;;		_setRF_Main
  4399 ;; This function is called by:
  4400 ;;		_main
  4401 ;; This function uses a non-reentrant model
  4402 ;;
  4403                           psect	text4869
  4404                           	file	"G:\Program\PIC\Source_File\RF_Control_B1.c"
  4405                           	line	25
  4406                           	global	__size_of_RF_Main
  4407  0005                     	__size_of_RF_Main	equ	__end_of_RF_Main-_RF_Main
  4408                           	
  4409  2D79                     _RF_Main:	
  4410                           	opt	stack 2
  4411                           ; Regs used in _RF_Main: [wreg+fsr1l-status,0+pclath+cstack]
  4412                           	line	27
  4413                           	
  4414  2D79                     l22150:	
  4415                           ;RF_Control_B1.c: 27: setRF_Main(1);
  4416  2D79  3001               	movlw	(01h)
  4417  2D7A  3195  253F  31AD   	fcall	_setRF_Main
  4418                           	line	29
  4419                           	
  4420  2D7D                     l13140:	
  4421  2D7D  0008               	return
  4422                           	opt stack 0
  4423                           GLOBAL	__end_of_RF_Main
  4424  2D7E                     	__end_of_RF_Main:
  4425 ;; =============== function _RF_Main ends ============
  4426                           
  4427                           	signat	_RF_Main,88
  4428                           	global	_setRF_Main
  4429                           psect	text4870,local,class=CODE,delta=2
  4430                           global __ptext4870
  4431  153F                     __ptext4870:
  4432                           
  4433 ;; *************** function _setRF_Main *****************
  4434 ;; Defined at:
  4435 ;;		line 59 in file "G:\Program\PIC\Source_File\RF_Control_B1.c"
  4436 ;; Parameters:    Size  Location     Type
  4437 ;;  rf              1    wreg     unsigned char 
  4438 ;; Auto vars:     Size  Location     Type
  4439 ;;  rf              1   71[BANK0 ] unsigned char 
  4440 ;; Return value:  Size  Location     Type
  4441 ;;		None               void
  4442 ;; Registers used:
  4443 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4444 ;; Tracked objects:
  4445 ;;		On entry : 0/0
  4446 ;;		On exit  : 0/0
  4447 ;;		Unchanged: 0/0
  4448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  4449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4450 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  4451 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  4452 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
  4453 ;;Total ram usage:        3 bytes
  4454 ;; Hardware stack levels used:    1
  4455 ;; Hardware stack levels required when called:   12
  4456 ;; This function calls:
  4457 ;;		_RfPointSelect
  4458 ;;		_RF_RxDisable
  4459 ;;		_CC2500_RxData
  4460 ;;		_getRxData
  4461 ;;		_CC2500_TxData
  4462 ;;		_CC2500_WriteCommand
  4463 ;;		_setINT_GO
  4464 ;; This function is called by:
  4465 ;;		_RF_Main
  4466 ;; This function uses a non-reentrant model
  4467 ;;
  4468                           psect	text4870
  4469                           	file	"G:\Program\PIC\Source_File\RF_Control_B1.c"
  4470                           	line	59
  4471                           	global	__size_of_setRF_Main
  4472  00AB                     	__size_of_setRF_Main	equ	__end_of_setRF_Main-_setRF_Main
  4473                           	
  4474  153F                     _setRF_Main:	
  4475                           	opt	stack 2
  4476                           ; Regs used in _setRF_Main: [wreg+fsr1l-status,0+pclath+cstack]
  4477                           ;setRF_Main@rf stored from wreg
  4478  153F  0020               	movlb 0	; select bank0
  4479  1540  00E7               	movwf	(setRF_Main@rf)
  4480                           	line	60
  4481                           	
  4482  1541                     l22094:	
  4483                           ;RF_Control_B1.c: 60: RfPointSelect(rf);
  4484  1541  0867               	movf	(setRF_Main@rf),w
  4485  1542  31AE  26A0  3195   	fcall	_RfPointSelect
  4486                           	line	61
  4487                           	
  4488  1545                     l22096:	
  4489                           ;RF_Control_B1.c: 61: if(RF->Enable)
  4490  1545  087B               	movf	(_RF),w
  4491  1546  0086               	movwf	fsr1l
  4492  1547  0187               	clrf fsr1h	
  4493                           	
  4494  1548  1C01               	btfss	indf1,0
  4495  1549  2D4B               	goto	u11121
  4496  154A  2D4C               	goto	u11120
  4497  154B                     u11121:
  4498  154B  2DE9               	goto	l13168
  4499  154C                     u11120:
  4500                           	line	72
  4501                           	
  4502  154C                     l22098:	
  4503                           ;RF_Control_B1.c: 62: {
  4504                           ;RF_Control_B1.c: 72: RF->Key=((RA0 || RB1 || RA6 || RA4) && RF->Learn == 0)?1:0;
  4505  154C  0020               	movlb 0	; select bank0
  4506  154D  01E8               	clrf	(_setRF_Main$16648)
  4507  154E  180C               	btfsc	(96/8),(96)&7
  4508  154F  2D51               	goto	u11131
  4509  1550  2D52               	goto	u11130
  4510  1551                     u11131:
  4511  1551  2D5F               	goto	l22106
  4512  1552                     u11130:
  4513                           	
  4514  1552                     l22100:	
  4515  1552  188D               	btfsc	(105/8),(105)&7
  4516  1553  2D55               	goto	u11141
  4517  1554  2D56               	goto	u11140
  4518  1555                     u11141:
  4519  1555  2D5F               	goto	l22106
  4520  1556                     u11140:
  4521                           	
  4522  1556                     l22102:	
  4523  1556  1B0C               	btfsc	(102/8),(102)&7
  4524  1557  2D59               	goto	u11151
  4525  1558  2D5A               	goto	u11150
  4526  1559                     u11151:
  4527  1559  2D5F               	goto	l22106
  4528  155A                     u11150:
  4529                           	
  4530  155A                     l22104:	
  4531  155A  1E0C               	btfss	(100/8),(100)&7
  4532  155B  2D5D               	goto	u11161
  4533  155C  2D5E               	goto	u11160
  4534  155D                     u11161:
  4535  155D  2D6A               	goto	l22110
  4536  155E                     u11160:
  4537  155E  2D5F               	goto	l22106
  4538                           	
  4539  155F                     l20700:	
  4540                           	
  4541  155F                     l22106:	
  4542  155F  087B               	movf	(_RF),w
  4543  1560  0086               	movwf	fsr1l
  4544  1561  0187               	clrf fsr1h	
  4545                           	
  4546  1562  1B01               	btfsc	indf1,6
  4547  1563  2D65               	goto	u11171
  4548  1564  2D66               	goto	u11170
  4549  1565                     u11171:
  4550  1565  2D6A               	goto	l22110
  4551  1566                     u11170:
  4552                           	
  4553  1566                     l22108:	
  4554  1566  01E8               	clrf	(_setRF_Main$16648)
  4555  1567  1403               	bsf	status,0
  4556  1568  0DE8               	rlf	(_setRF_Main$16648),f
  4557  1569  2D6A               	goto	l22110
  4558                           	
  4559  156A                     l13157:	
  4560                           	
  4561  156A                     l22110:	
  4562  156A  087B               	movf	(_RF),w
  4563  156B  0086               	movwf	fsr1l
  4564  156C  0187               	clrf fsr1h	
  4565                           	
  4566  156D  0868               	movf	(_setRF_Main$16648),w
  4567  156E  1381               	bcf	indf1,7
  4568  156F  1D03               	skipz
  4569  1570  1781               	bsf	indf1,7
  4570                           	line	75
  4571                           	
  4572  1571                     l22112:	
  4573                           ;RF_Control_B1.c: 75: if(RF->Key)
  4574  1571  087B               	movf	(_RF),w
  4575  1572  0086               	movwf	fsr1l
  4576  1573  0187               	clrf fsr1h	
  4577                           	
  4578  1574  1F81               	btfss	indf1,7
  4579  1575  2D77               	goto	u11181
  4580  1576  2D78               	goto	u11180
  4581  1577                     u11181:
  4582  1577  2D7D               	goto	l22116
  4583  1578                     u11180:
  4584                           	line	77
  4585                           	
  4586  1578                     l22114:	
  4587                           ;RF_Control_B1.c: 76: {
  4588                           ;RF_Control_B1.c: 77: RF_RxDisable(1);
  4589  1578  3001               	movlw	(01h)
  4590  1579  31A4  24AE  3195   	fcall	_RF_RxDisable
  4591                           	line	78
  4592                           ;RF_Control_B1.c: 78: }
  4593  157C  2DE9               	goto	l13168
  4594                           	line	79
  4595                           	
  4596  157D                     l13158:	
  4597                           	line	81
  4598                           	
  4599  157D                     l22116:	
  4600                           ;RF_Control_B1.c: 79: else
  4601                           ;RF_Control_B1.c: 80: {
  4602                           ;RF_Control_B1.c: 81: if(RF->ReceiveGO)
  4603  157D  087B               	movf	(_RF),w
  4604  157E  0086               	movwf	fsr1l
  4605  157F  0187               	clrf fsr1h	
  4606                           	
  4607  1580  1C81               	btfss	indf1,1
  4608  1581  2D83               	goto	u11191
  4609  1582  2D84               	goto	u11190
  4610  1583                     u11191:
  4611  1583  2D90               	goto	l22124
  4612  1584                     u11190:
  4613                           	line	83
  4614                           	
  4615  1584                     l22118:	
  4616                           ;RF_Control_B1.c: 82: {
  4617                           ;RF_Control_B1.c: 83: CC2500_RxData();
  4618  1584  319E  2609  3195   	fcall	_CC2500_RxData
  4619                           	line	84
  4620                           	
  4621  1587                     l22120:	
  4622                           ;RF_Control_B1.c: 84: RF->ReceiveGO=0;
  4623  1587  087B               	movf	(_RF),w
  4624  1588  0086               	movwf	fsr1l
  4625  1589  0187               	clrf fsr1h	
  4626                           	
  4627  158A  1081               	bcf	indf1,1
  4628                           	line	85
  4629                           	
  4630  158B                     l22122:	
  4631                           ;RF_Control_B1.c: 85: getRxData(1);
  4632  158B  3001               	movlw	(01h)
  4633  158C  319E  2685  3195   	fcall	_getRxData
  4634                           	line	87
  4635                           ;RF_Control_B1.c: 87: }
  4636  158F  2DE9               	goto	l13168
  4637                           	line	88
  4638                           	
  4639  1590                     l13160:	
  4640                           	line	90
  4641                           	
  4642  1590                     l22124:	
  4643                           ;RF_Control_B1.c: 88: else
  4644                           ;RF_Control_B1.c: 89: {
  4645                           ;RF_Control_B1.c: 90: if(RF->TransceiveGO)
  4646  1590  087B               	movf	(_RF),w
  4647  1591  0086               	movwf	fsr1l
  4648  1592  0187               	clrf fsr1h	
  4649                           	
  4650  1593  1D01               	btfss	indf1,2
  4651  1594  2D96               	goto	u11201
  4652  1595  2D97               	goto	u11200
  4653  1596                     u11201:
  4654  1596  2DCD               	goto	l22140
  4655  1597                     u11200:
  4656                           	line	92
  4657                           	
  4658  1597                     l22126:	
  4659                           ;RF_Control_B1.c: 91: {
  4660                           ;RF_Control_B1.c: 92: RF_RxDisable(1);
  4661  1597  3001               	movlw	(01h)
  4662  1598  31A4  24AE  3195   	fcall	_RF_RxDisable
  4663                           	line	93
  4664                           	
  4665  159B                     l22128:	
  4666                           ;RF_Control_B1.c: 93: if(RF->Debounce == 0)
  4667  159B  087B               	movf	(_RF),w
  4668  159C  0086               	movwf	fsr1l
  4669  159D  0187               	clrf fsr1h	
  4670                           	
  4671  159E  1A81               	btfsc	indf1,5
  4672  159F  2DA1               	goto	u11211
  4673  15A0  2DA2               	goto	u11210
  4674  15A1                     u11211:
  4675  15A1  2DC0               	goto	l22136
  4676  15A2                     u11210:
  4677                           	line	95
  4678                           	
  4679  15A2                     l22130:	
  4680                           ;RF_Control_B1.c: 94: {
  4681                           ;RF_Control_B1.c: 95: RF->DebounceTime++;
  4682  15A2  3001               	movlw	(01h)
  4683  15A3  0020               	movlb 0	; select bank0
  4684  15A4  00E6               	movwf	(??_setRF_Main+0)+0
  4685  15A5  087B               	movf	(_RF),w
  4686  15A6  3E01               	addlw	01h
  4687  15A7  0086               	movwf	fsr1l
  4688  15A8  0187               	clrf fsr1h	
  4689                           	
  4690  15A9  0866               	movf	(??_setRF_Main+0)+0,w
  4691  15AA  0781               	addwf	indf1,f
  4692                           	line	96
  4693                           	
  4694  15AB                     l22132:	
  4695                           ;RF_Control_B1.c: 96: if(RF->DebounceTime == 50)
  4696  15AB  087B               	movf	(_RF),w
  4697  15AC  3E01               	addlw	01h
  4698  15AD  0086               	movwf	fsr1l
  4699  15AE  0187               	clrf fsr1h	
  4700                           	
  4701  15AF  0801               	movf	indf1,w
  4702  15B0  3A32               	xorlw	032h&0ffh
  4703  15B1  1D03               	skipz
  4704  15B2  2DB4               	goto	u11221
  4705  15B3  2DB5               	goto	u11220
  4706  15B4                     u11221:
  4707  15B4  2DE9               	goto	l13168
  4708  15B5                     u11220:
  4709                           	line	98
  4710                           	
  4711  15B5                     l22134:	
  4712                           ;RF_Control_B1.c: 97: {
  4713                           ;RF_Control_B1.c: 98: RF->DebounceTime=0;
  4714  15B5  087B               	movf	(_RF),w
  4715  15B6  3E01               	addlw	01h
  4716  15B7  0086               	movwf	fsr1l
  4717  15B8  0187               	clrf fsr1h	
  4718                           	
  4719  15B9  0181               	clrf	indf1
  4720                           	line	99
  4721                           ;RF_Control_B1.c: 99: RF->Debounce=1;
  4722  15BA  087B               	movf	(_RF),w
  4723  15BB  0086               	movwf	fsr1l
  4724  15BC  0187               	clrf fsr1h	
  4725                           	
  4726  15BD  1681               	bsf	indf1,5
  4727  15BE  2DE9               	goto	l13168
  4728                           	line	100
  4729                           	
  4730  15BF                     l13164:	
  4731                           	line	101
  4732                           ;RF_Control_B1.c: 100: }
  4733                           ;RF_Control_B1.c: 101: }
  4734  15BF  2DE9               	goto	l13168
  4735                           	line	102
  4736                           	
  4737  15C0                     l13163:	
  4738                           	line	104
  4739                           	
  4740  15C0                     l22136:	
  4741                           ;RF_Control_B1.c: 102: else
  4742                           ;RF_Control_B1.c: 103: {
  4743                           ;RF_Control_B1.c: 104: RF->Debounce=0;
  4744  15C0  087B               	movf	(_RF),w
  4745  15C1  0086               	movwf	fsr1l
  4746  15C2  0187               	clrf fsr1h	
  4747                           	
  4748  15C3  1281               	bcf	indf1,5
  4749                           	line	105
  4750                           ;RF_Control_B1.c: 105: RF->TransceiveGO=0;
  4751  15C4  087B               	movf	(_RF),w
  4752  15C5  0086               	movwf	fsr1l
  4753  15C6  0187               	clrf fsr1h	
  4754                           	
  4755  15C7  1101               	bcf	indf1,2
  4756                           	line	106
  4757                           	
  4758  15C8                     l22138:	
  4759                           ;RF_Control_B1.c: 106: CC2500_TxData();
  4760  15C8  319A  2215  3195   	fcall	_CC2500_TxData
  4761  15CB  2DE9               	goto	l13168
  4762                           	line	107
  4763                           	
  4764  15CC                     l13165:	
  4765                           	line	108
  4766                           ;RF_Control_B1.c: 107: }
  4767                           ;RF_Control_B1.c: 108: }
  4768  15CC  2DE9               	goto	l13168
  4769                           	line	109
  4770                           	
  4771  15CD                     l13162:	
  4772                           	line	111
  4773                           	
  4774  15CD                     l22140:	
  4775                           ;RF_Control_B1.c: 109: else
  4776                           ;RF_Control_B1.c: 110: {
  4777                           ;RF_Control_B1.c: 111: if(RF->RxStatus == 0 && 1)
  4778  15CD  087B               	movf	(_RF),w
  4779  15CE  0086               	movwf	fsr1l
  4780  15CF  0187               	clrf fsr1h	
  4781                           	
  4782  15D0  1981               	btfsc	indf1,3
  4783  15D1  2DD3               	goto	u11231
  4784  15D2  2DD4               	goto	u11230
  4785  15D3                     u11231:
  4786  15D3  2DE9               	goto	l13168
  4787  15D4                     u11230:
  4788                           	line	113
  4789                           	
  4790  15D4                     l22142:	
  4791                           ;RF_Control_B1.c: 112: {
  4792                           ;RF_Control_B1.c: 113: RF->RxStatus=1;
  4793  15D4  087B               	movf	(_RF),w
  4794  15D5  0086               	movwf	fsr1l
  4795  15D6  0187               	clrf fsr1h	
  4796                           	
  4797  15D7  1581               	bsf	indf1,3
  4798                           	line	114
  4799                           	
  4800  15D8                     l22144:	
  4801                           ;RF_Control_B1.c: 114: CC2500_WriteCommand(0x36);
  4802  15D8  3036               	movlw	(036h)
  4803  15D9  31A1  2137  3195   	fcall	_CC2500_WriteCommand
  4804                           	line	115
  4805                           	
  4806  15DC                     l22146:	
  4807                           ;RF_Control_B1.c: 115: CC2500_WriteCommand(0x34);
  4808  15DC  3034               	movlw	(034h)
  4809  15DD  31A1  2137  3195   	fcall	_CC2500_WriteCommand
  4810                           	line	116
  4811                           	
  4812  15E0                     l22148:	
  4813                           ;RF_Control_B1.c: 116: setINT_GO(1);
  4814  15E0  3001               	movlw	(01h)
  4815  15E1  31AD  25CA  3195   	fcall	_setINT_GO
  4816  15E4  2DE9               	goto	l13168
  4817                           	line	117
  4818                           	
  4819  15E5                     l13167:	
  4820  15E5  2DE9               	goto	l13168
  4821                           	line	118
  4822                           	
  4823  15E6                     l13166:	
  4824  15E6  2DE9               	goto	l13168
  4825                           	line	119
  4826                           	
  4827  15E7                     l13161:	
  4828  15E7  2DE9               	goto	l13168
  4829                           	line	120
  4830                           	
  4831  15E8                     l13159:	
  4832  15E8  2DE9               	goto	l13168
  4833                           	line	121
  4834                           	
  4835  15E9                     l13155:	
  4836                           	line	122
  4837                           	
  4838  15E9                     l13168:	
  4839  15E9  0008               	return
  4840                           	opt stack 0
  4841                           GLOBAL	__end_of_setRF_Main
  4842  15EA                     	__end_of_setRF_Main:
  4843 ;; =============== function _setRF_Main ends ============
  4844                           
  4845                           	signat	_setRF_Main,4216
  4846                           	global	_getRxData
  4847                           psect	text4871,local,class=CODE,delta=2
  4848                           global __ptext4871
  4849  1E85                     __ptext4871:
  4850                           
  4851 ;; *************** function _getRxData *****************
  4852 ;; Defined at:
  4853 ;;		line 158 in file "G:\Program\PIC\Source_File\RF_Control_B1.c"
  4854 ;; Parameters:    Size  Location     Type
  4855 ;;  rf              1    wreg     unsigned char 
  4856 ;; Auto vars:     Size  Location     Type
  4857 ;;  rf              1   69[BANK0 ] unsigned char 
  4858 ;;  i               1    0        unsigned char 
  4859 ;; Return value:  Size  Location     Type
  4860 ;;		None               void
  4861 ;; Registers used:
  4862 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4863 ;; Tracked objects:
  4864 ;;		On entry : 0/0
  4865 ;;		On exit  : 0/0
  4866 ;;		Unchanged: 0/0
  4867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  4868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4869 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  4870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4871 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  4872 ;;Total ram usage:        1 bytes
  4873 ;; Hardware stack levels used:    1
  4874 ;; Hardware stack levels required when called:   11
  4875 ;; This function calls:
  4876 ;;		_RfPointSelect
  4877 ;;		_setLog_Code
  4878 ;;		_setControl_Lights_Table
  4879 ;; This function is called by:
  4880 ;;		_setRF_Main
  4881 ;; This function uses a non-reentrant model
  4882 ;;
  4883                           psect	text4871
  4884                           	file	"G:\Program\PIC\Source_File\RF_Control_B1.c"
  4885                           	line	158
  4886                           	global	__size_of_getRxData
  4887  007D                     	__size_of_getRxData	equ	__end_of_getRxData-_getRxData
  4888                           	
  4889  1E85                     _getRxData:	
  4890                           	opt	stack 2
  4891                           ; Regs used in _getRxData: [wreg+fsr1l-status,0+pclath+cstack]
  4892                           ;getRxData@rf stored from wreg
  4893                           	line	160
  4894  1E85  0020               	movlb 0	; select bank0
  4895  1E86  00E5               	movwf	(getRxData@rf)
  4896                           	
  4897  1E87                     l22048:	
  4898                           ;RF_Control_B1.c: 159: unsigned char i;
  4899                           ;RF_Control_B1.c: 160: RfPointSelect(rf);
  4900  1E87  0865               	movf	(getRxData@rf),w
  4901  1E88  31AE  26A0  319E   	fcall	_RfPointSelect
  4902                           	line	161
  4903                           	
  4904  1E8B                     l22050:	
  4905                           ;RF_Control_B1.c: 161: if(RF->Learn)
  4906  1E8B  087B               	movf	(_RF),w
  4907  1E8C  0086               	movwf	fsr1l
  4908  1E8D  0187               	clrf fsr1h	
  4909                           	
  4910  1E8E  1F01               	btfss	indf1,6
  4911  1E8F  2E91               	goto	u11011
  4912  1E90  2E92               	goto	u11010
  4913  1E91                     u11011:
  4914  1E91  2EA4               	goto	l22058
  4915  1E92                     u11010:
  4916                           	line	163
  4917                           	
  4918  1E92                     l22052:	
  4919                           ;RF_Control_B1.c: 162: {
  4920                           ;RF_Control_B1.c: 163: if(RF_Data[0] == 0x0 && RF_Data[1] == 0x64)
  4921  1E92  0021               	movlb 1	; select bank1
  4922  1E93  08A0               	movf	(_RF_Data)^080h,f
  4923  1E94  1D03               	skipz
  4924  1E95  2E97               	goto	u11021
  4925  1E96  2E98               	goto	u11020
  4926  1E97                     u11021:
  4927  1E97  2F01               	goto	l13189
  4928  1E98                     u11020:
  4929                           	
  4930  1E98                     l22054:	
  4931  1E98  0821               	movf	0+(_RF_Data)^080h+01h,w
  4932  1E99  3A64               	xorlw	064h&0ffh
  4933  1E9A  1D03               	skipz
  4934  1E9B  2E9D               	goto	u11031
  4935  1E9C  2E9E               	goto	u11030
  4936  1E9D                     u11031:
  4937  1E9D  2F01               	goto	l13189
  4938  1E9E                     u11030:
  4939                           	line	165
  4940                           	
  4941  1E9E                     l22056:	
  4942                           ;RF_Control_B1.c: 164: {
  4943                           ;RF_Control_B1.c: 165: setLog_Code(1);
  4944  1E9E  3001               	movlw	(01h)
  4945  1E9F  3198  20DE  319E   	fcall	_setLog_Code
  4946  1EA2  2F01               	goto	l13189
  4947                           	line	166
  4948                           	
  4949  1EA3                     l13177:	
  4950                           	line	167
  4951                           ;RF_Control_B1.c: 166: }
  4952                           ;RF_Control_B1.c: 167: }
  4953  1EA3  2F01               	goto	l13189
  4954                           	line	168
  4955                           	
  4956  1EA4                     l13176:	
  4957                           	line	170
  4958                           	
  4959  1EA4                     l22058:	
  4960                           ;RF_Control_B1.c: 168: else
  4961                           ;RF_Control_B1.c: 169: {
  4962                           ;RF_Control_B1.c: 170: if(RF_Data[0] == 0x00 && RF_Data[1] == 0x02)
  4963  1EA4  0021               	movlb 1	; select bank1
  4964  1EA5  08A0               	movf	(_RF_Data)^080h,f
  4965  1EA6  1D03               	skipz
  4966  1EA7  2EA9               	goto	u11041
  4967  1EA8  2EAA               	goto	u11040
  4968  1EA9                     u11041:
  4969  1EA9  2F01               	goto	l13189
  4970  1EAA                     u11040:
  4971                           	
  4972  1EAA                     l22060:	
  4973  1EAA  0821               	movf	0+(_RF_Data)^080h+01h,w
  4974  1EAB  3A02               	xorlw	02h&0ffh
  4975  1EAC  1D03               	skipz
  4976  1EAD  2EAF               	goto	u11051
  4977  1EAE  2EB0               	goto	u11050
  4978  1EAF                     u11051:
  4979  1EAF  2F01               	goto	l13189
  4980  1EB0                     u11050:
  4981                           	line	172
  4982                           	
  4983  1EB0                     l22062:	
  4984                           ;RF_Control_B1.c: 171: {
  4985                           ;RF_Control_B1.c: 172: if(RF_Data[12] == 0xff && RF_Data[13] == 0xff && RF_Data[14] == 0
                                 xff)
  4986  1EB0  082C               	movf	0+(_RF_Data)^080h+0Ch,w
  4987  1EB1  3AFF               	xorlw	0FFh&0ffh
  4988  1EB2  1D03               	skipz
  4989  1EB3  2EB5               	goto	u11061
  4990  1EB4  2EB6               	goto	u11060
  4991  1EB5                     u11061:
  4992  1EB5  2EC4               	goto	l22070
  4993  1EB6                     u11060:
  4994                           	
  4995  1EB6                     l22064:	
  4996  1EB6  082D               	movf	0+(_RF_Data)^080h+0Dh,w
  4997  1EB7  3AFF               	xorlw	0FFh&0ffh
  4998  1EB8  1D03               	skipz
  4999  1EB9  2EBB               	goto	u11071
  5000  1EBA  2EBC               	goto	u11070
  5001  1EBB                     u11071:
  5002  1EBB  2EC4               	goto	l22070
  5003  1EBC                     u11070:
  5004                           	
  5005  1EBC                     l22066:	
  5006  1EBC  082E               	movf	0+(_RF_Data)^080h+0Eh,w
  5007  1EBD  3AFF               	xorlw	0FFh&0ffh
  5008  1EBE  1D03               	skipz
  5009  1EBF  2EC1               	goto	u11081
  5010  1EC0  2EC2               	goto	u11080
  5011  1EC1                     u11081:
  5012  1EC1  2EC4               	goto	l22070
  5013  1EC2                     u11080:
  5014                           	line	174
  5015                           	
  5016  1EC2                     l22068:	
  5017                           ;RF_Control_B1.c: 173: {
  5018                           ;RF_Control_B1.c: 174: _nop();
  5019  1EC2  0000               	nop
  5020                           	line	175
  5021                           ;RF_Control_B1.c: 175: }
  5022  1EC3  2F01               	goto	l13189
  5023                           	line	176
  5024                           	
  5025  1EC4                     l13180:	
  5026                           	line	178
  5027                           	
  5028  1EC4                     l22070:	
  5029                           ;RF_Control_B1.c: 176: else
  5030                           ;RF_Control_B1.c: 177: {
  5031                           ;RF_Control_B1.c: 178: if(RF_Data[12] == Product->Data[12] && RF_Data[13] == Product->Da
                                 ta[13] && RF_Data[14] == Product->Data[14])
  5032  1EC4  0020               	movlb 0	; select bank0
  5033  1EC5  086F               	movf	(_Product),w
  5034  1EC6  3E0C               	addlw	0Ch
  5035  1EC7  0086               	movwf	fsr1l
  5036  1EC8  3001               	movlw 1	; select bank2/3
  5037  1EC9  0087               	movwf fsr1h	
  5038                           	
  5039  1ECA  0021               	movlb 1	; select bank1
  5040  1ECB  082C               	movf	0+(_RF_Data)^080h+0Ch,w
  5041  1ECC  0601               	xorwf	indf1,w
  5042  1ECD  1D03               	skipz
  5043  1ECE  2ED0               	goto	u11091
  5044  1ECF  2ED1               	goto	u11090
  5045  1ED0                     u11091:
  5046  1ED0  2F01               	goto	l13189
  5047  1ED1                     u11090:
  5048                           	
  5049  1ED1                     l22072:	
  5050  1ED1  0020               	movlb 0	; select bank0
  5051  1ED2  086F               	movf	(_Product),w
  5052  1ED3  3E0D               	addlw	0Dh
  5053  1ED4  0086               	movwf	fsr1l
  5054  1ED5  3001               	movlw 1	; select bank2/3
  5055  1ED6  0087               	movwf fsr1h	
  5056                           	
  5057  1ED7  0021               	movlb 1	; select bank1
  5058  1ED8  082D               	movf	0+(_RF_Data)^080h+0Dh,w
  5059  1ED9  0601               	xorwf	indf1,w
  5060  1EDA  1D03               	skipz
  5061  1EDB  2EDD               	goto	u11101
  5062  1EDC  2EDE               	goto	u11100
  5063  1EDD                     u11101:
  5064  1EDD  2F01               	goto	l13189
  5065  1EDE                     u11100:
  5066                           	
  5067  1EDE                     l22074:	
  5068  1EDE  0020               	movlb 0	; select bank0
  5069  1EDF  086F               	movf	(_Product),w
  5070  1EE0  3E0E               	addlw	0Eh
  5071  1EE1  0086               	movwf	fsr1l
  5072  1EE2  3001               	movlw 1	; select bank2/3
  5073  1EE3  0087               	movwf fsr1h	
  5074                           	
  5075  1EE4  0021               	movlb 1	; select bank1
  5076  1EE5  082E               	movf	0+(_RF_Data)^080h+0Eh,w
  5077  1EE6  0601               	xorwf	indf1,w
  5078  1EE7  1D03               	skipz
  5079  1EE8  2EEA               	goto	u11111
  5080  1EE9  2EEB               	goto	u11110
  5081  1EEA                     u11111:
  5082  1EEA  2F01               	goto	l13189
  5083  1EEB                     u11110:
  5084                           	line	180
  5085                           	
  5086  1EEB                     l22076:	
  5087                           ;RF_Control_B1.c: 179: {
  5088                           ;RF_Control_B1.c: 180: setControl_Lights_Table(1);
  5089  1EEB  3001               	movlw	(01h)
  5090  1EEC  3191  2122  319E   	fcall	_setControl_Lights_Table
  5091  1EEF  2F01               	goto	l13189
  5092                           	line	181
  5093                           	
  5094  1EF0                     l13182:	
  5095  1EF0  2F01               	goto	l13189
  5096                           	line	182
  5097                           	
  5098  1EF1                     l13181:	
  5099                           	line	183
  5100                           ;RF_Control_B1.c: 181: }
  5101                           ;RF_Control_B1.c: 182: }
  5102                           ;RF_Control_B1.c: 183: }
  5103  1EF1  2F01               	goto	l13189
  5104                           	line	184
  5105                           	
  5106  1EF2                     l13179:	
  5107  1EF2  2F01               	goto	l13189
  5108                           	
  5109  1EF3                     l22078:	
  5110  1EF3  2F01               	goto	l13189
  5111                           	
  5112  1EF4                     l22080:	
  5113  1EF4  2F01               	goto	l13189
  5114                           	line	187
  5115                           	
  5116  1EF5                     l22082:	
  5117                           ;RF_Control_B1.c: 185: {
  5118                           ;RF_Control_B1.c: 186: ;
  5119                           ;RF_Control_B1.c: 187: }
  5120  1EF5  2F01               	goto	l13189
  5121                           	line	188
  5122                           	
  5123  1EF6                     l13184:	
  5124  1EF6  2F01               	goto	l13189
  5125                           	
  5126  1EF7                     l22084:	
  5127  1EF7  2F01               	goto	l13189
  5128                           	
  5129  1EF8                     l22086:	
  5130  1EF8  2F01               	goto	l13189
  5131                           	line	191
  5132                           	
  5133  1EF9                     l22088:	
  5134                           ;RF_Control_B1.c: 189: {
  5135                           ;RF_Control_B1.c: 190: ;
  5136                           ;RF_Control_B1.c: 191: }
  5137  1EF9  2F01               	goto	l13189
  5138                           	line	192
  5139                           	
  5140  1EFA                     l13186:	
  5141  1EFA  2F01               	goto	l13189
  5142                           	
  5143  1EFB                     l22090:	
  5144  1EFB  2F01               	goto	l13189
  5145                           	
  5146  1EFC                     l22092:	
  5147  1EFC  2F01               	goto	l13189
  5148                           	line	195
  5149                           ;RF_Control_B1.c: 193: {
  5150                           ;RF_Control_B1.c: 194: ;
  5151                           	
  5152  1EFD                     l13188:	
  5153  1EFD  2F01               	goto	l13189
  5154                           	line	196
  5155                           	
  5156  1EFE                     l13187:	
  5157  1EFE  2F01               	goto	l13189
  5158                           	
  5159  1EFF                     l13185:	
  5160  1EFF  2F01               	goto	l13189
  5161                           	
  5162  1F00                     l13183:	
  5163  1F00  2F01               	goto	l13189
  5164                           	
  5165  1F01                     l13178:	
  5166                           	line	197
  5167                           	
  5168  1F01                     l13189:	
  5169  1F01  0008               	return
  5170                           	opt stack 0
  5171                           GLOBAL	__end_of_getRxData
  5172  1F02                     	__end_of_getRxData:
  5173 ;; =============== function _getRxData ends ============
  5174                           
  5175                           	signat	_getRxData,4216
  5176                           	global	_setControl_Lights_Table
  5177                           psect	text4872,local,class=CODE,delta=2
  5178                           global __ptext4872
  5179  1122                     __ptext4872:
  5180                           
  5181 ;; *************** function _setControl_Lights_Table *****************
  5182 ;; Defined at:
  5183 ;;		line 215 in file "G:\Program\PIC\Source_File\RF_Control_B1.c"
  5184 ;; Parameters:    Size  Location     Type
  5185 ;;  rf              1    wreg     unsigned char 
  5186 ;; Auto vars:     Size  Location     Type
  5187 ;;  rf              1   68[BANK0 ] unsigned char 
  5188 ;; Return value:  Size  Location     Type
  5189 ;;		None               void
  5190 ;; Registers used:
  5191 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5192 ;; Tracked objects:
  5193 ;;		On entry : 0/0
  5194 ;;		On exit  : 0/0
  5195 ;;		Unchanged: 0/0
  5196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  5197 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5198 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  5199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5200 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  5201 ;;Total ram usage:        1 bytes
  5202 ;; Hardware stack levels used:    1
  5203 ;; Hardware stack levels required when called:   10
  5204 ;; This function calls:
  5205 ;;		_RfPointSelect
  5206 ;;		_setDimmerLights
  5207 ;;		_setRFSW_Status
  5208 ;;		_setSw_Status
  5209 ;;		_setBuz
  5210 ;;		_setTxData
  5211 ;;		_setRFSW_Control
  5212 ;;		_setRFSW_AdjControl
  5213 ;; This function is called by:
  5214 ;;		_getRxData
  5215 ;; This function uses a non-reentrant model
  5216 ;;
  5217                           psect	text4872
  5218                           	file	"G:\Program\PIC\Source_File\RF_Control_B1.c"
  5219                           	line	215
  5220                           	global	__size_of_setControl_Lights_Table
  5221  0082                     	__size_of_setControl_Lights_Table	equ	__end_of_setControl_Lights_Table-_setControl_Ligh
                                 ts_Table
  5222                           	
  5223  1122                     _setControl_Lights_Table:	
  5224                           	opt	stack 2
  5225                           ; Regs used in _setControl_Lights_Table: [wreg+fsr1l-status,0+pclath+cstack]
  5226                           ;setControl_Lights_Table@rf stored from wreg
  5227  1122  0020               	movlb 0	; select bank0
  5228  1123  00E4               	movwf	(setControl_Lights_Table@rf)
  5229                           	line	216
  5230                           	
  5231  1124                     l22020:	
  5232                           ;RF_Control_B1.c: 216: RfPointSelect(rf);
  5233  1124  0864               	movf	(setControl_Lights_Table@rf),w
  5234  1125  31AE  26A0  3191   	fcall	_RfPointSelect
  5235                           	line	217
  5236                           	
  5237  1128                     l22022:	
  5238                           ;RF_Control_B1.c: 217: if(RF_Data[15] == 0x00)
  5239  1128  0021               	movlb 1	; select bank1
  5240  1129  08AF               	movf	0+(_RF_Data)^080h+0Fh,f
  5241  112A  1D03               	skipz
  5242  112B  292D               	goto	u10971
  5243  112C  292E               	goto	u10970
  5244  112D                     u10971:
  5245  112D  2969               	goto	l22034
  5246  112E                     u10970:
  5247                           	line	220
  5248                           	
  5249  112E                     l22024:	
  5250                           ;RF_Control_B1.c: 218: {
  5251                           ;RF_Control_B1.c: 220: setDimmerLights(1,0);
  5252  112E  0020               	movlb 0	; select bank0
  5253  112F  01A6               	clrf	(?_setDimmerLights)
  5254  1130  3001               	movlw	(01h)
  5255  1131  3192  222B  3191   	fcall	_setDimmerLights
  5256                           	line	221
  5257                           ;RF_Control_B1.c: 221: setRFSW_Status(1,0);
  5258  1134  0020               	movlb 0	; select bank0
  5259  1135  01A2               	clrf	(?_setRFSW_Status)
  5260  1136  3001               	movlw	(01h)
  5261  1137  31AF  2770  3191   	fcall	_setRFSW_Status
  5262                           	line	222
  5263                           ;RF_Control_B1.c: 222: setSw_Status(1,0);
  5264  113A  0020               	movlb 0	; select bank0
  5265  113B  01A2               	clrf	(?_setSw_Status)
  5266  113C  3001               	movlw	(01h)
  5267  113D  31AF  2760  3191   	fcall	_setSw_Status
  5268                           	line	235
  5269                           	
  5270  1140                     l22026:	
  5271                           ;RF_Control_B1.c: 235: Product->Data[9]=0;
  5272  1140  0020               	movlb 0	; select bank0
  5273  1141  086F               	movf	(_Product),w
  5274  1142  3E09               	addlw	09h
  5275  1143  0086               	movwf	fsr1l
  5276  1144  3001               	movlw 1	; select bank2/3
  5277  1145  0087               	movwf fsr1h	
  5278                           	
  5279  1146  0181               	clrf	indf1
  5280                           	line	236
  5281                           	
  5282  1147                     l22028:	
  5283                           ;RF_Control_B1.c: 236: Product->Data[11]=0;
  5284  1147  086F               	movf	(_Product),w
  5285  1148  3E0B               	addlw	0Bh
  5286  1149  0086               	movwf	fsr1l
  5287  114A  3001               	movlw 1	; select bank2/3
  5288  114B  0087               	movwf fsr1h	
  5289                           	
  5290  114C  0181               	clrf	indf1
  5291                           	line	237
  5292                           	
  5293  114D                     l22030:	
  5294                           ;RF_Control_B1.c: 237: Product->Data[15]=0;
  5295  114D  086F               	movf	(_Product),w
  5296  114E  3E0F               	addlw	0Fh
  5297  114F  0086               	movwf	fsr1l
  5298  1150  3001               	movlw 1	; select bank2/3
  5299  1151  0087               	movwf fsr1h	
  5300                           	
  5301  1152  0181               	clrf	indf1
  5302                           	line	238
  5303                           	
  5304  1153                     l22032:	
  5305                           ;RF_Control_B1.c: 238: Product->Data[17]=0;
  5306  1153  086F               	movf	(_Product),w
  5307  1154  3E11               	addlw	011h
  5308  1155  0086               	movwf	fsr1l
  5309  1156  3001               	movlw 1	; select bank2/3
  5310  1157  0087               	movwf fsr1h	
  5311                           	
  5312  1158  0181               	clrf	indf1
  5313                           	line	239
  5314                           ;RF_Control_B1.c: 239: setBuz(1,1,100);
  5315  1159  01A9               	clrf	(?_setBuz)
  5316  115A  1403               	bsf	status,0
  5317  115B  0DA9               	rlf	(?_setBuz),f
  5318  115C  3064               	movlw	low(064h)
  5319  115D  00AA               	movwf	0+(?_setBuz)+01h
  5320  115E  3000               	movlw	high(064h)
  5321  115F  00AB               	movwf	(0+(?_setBuz)+01h)+1
  5322  1160  3001               	movlw	(01h)
  5323  1161  3194  2499  3191   	fcall	_setBuz
  5324                           	line	240
  5325                           ;RF_Control_B1.c: 240: setTxData(1);
  5326  1164  3001               	movlw	(01h)
  5327  1165  318B  230E  3191   	fcall	_setTxData
  5328                           	line	241
  5329                           ;RF_Control_B1.c: 241: }
  5330  1168  29A3               	goto	l13203
  5331                           	line	242
  5332                           	
  5333  1169                     l13196:	
  5334                           	
  5335  1169                     l22034:	
  5336                           ;RF_Control_B1.c: 242: else if(RF_Data[15] == 0x20)
  5337  1169  0021               	movlb 1	; select bank1
  5338  116A  082F               	movf	0+(_RF_Data)^080h+0Fh,w
  5339  116B  3A20               	xorlw	020h&0ffh
  5340  116C  1D03               	skipz
  5341  116D  296F               	goto	u10981
  5342  116E  2970               	goto	u10980
  5343  116F                     u10981:
  5344  116F  2988               	goto	l22040
  5345  1170                     u10980:
  5346                           	line	244
  5347                           	
  5348  1170                     l22036:	
  5349                           ;RF_Control_B1.c: 243: {
  5350                           ;RF_Control_B1.c: 244: Product->Data[9]=0;
  5351  1170  0020               	movlb 0	; select bank0
  5352  1171  086F               	movf	(_Product),w
  5353  1172  3E09               	addlw	09h
  5354  1173  0086               	movwf	fsr1l
  5355  1174  3001               	movlw 1	; select bank2/3
  5356  1175  0087               	movwf fsr1h	
  5357                           	
  5358  1176  0181               	clrf	indf1
  5359                           	line	245
  5360                           ;RF_Control_B1.c: 245: Product->Data[11]=0;
  5361  1177  086F               	movf	(_Product),w
  5362  1178  3E0B               	addlw	0Bh
  5363  1179  0086               	movwf	fsr1l
  5364  117A  3001               	movlw 1	; select bank2/3
  5365  117B  0087               	movwf fsr1h	
  5366                           	
  5367  117C  0181               	clrf	indf1
  5368                           	line	246
  5369                           ;RF_Control_B1.c: 246: Product->Data[17]=0;
  5370  117D  086F               	movf	(_Product),w
  5371  117E  3E11               	addlw	011h
  5372  117F  0086               	movwf	fsr1l
  5373  1180  3001               	movlw 1	; select bank2/3
  5374  1181  0087               	movwf fsr1h	
  5375                           	
  5376  1182  0181               	clrf	indf1
  5377                           	line	247
  5378                           	
  5379  1183                     l22038:	
  5380                           ;RF_Control_B1.c: 247: setTxData(1);
  5381  1183  3001               	movlw	(01h)
  5382  1184  318B  230E  3191   	fcall	_setTxData
  5383                           	line	248
  5384                           ;RF_Control_B1.c: 248: }
  5385  1187  29A3               	goto	l13203
  5386                           	line	250
  5387                           	
  5388  1188                     l13198:	
  5389                           	
  5390  1188                     l22040:	
  5391                           ;RF_Control_B1.c: 250: else if(RF_Data[15] == 0x01)
  5392  1188  0021               	movlb 1	; select bank1
  5393  1189  082F               	movf	0+(_RF_Data)^080h+0Fh,w
  5394  118A  3A01               	xorlw	01h&0ffh
  5395  118B  1D03               	skipz
  5396  118C  298E               	goto	u10991
  5397  118D  298F               	goto	u10990
  5398  118E                     u10991:
  5399  118E  2994               	goto	l22044
  5400  118F                     u10990:
  5401                           	line	252
  5402                           	
  5403  118F                     l22042:	
  5404                           ;RF_Control_B1.c: 251: {
  5405                           ;RF_Control_B1.c: 252: setRFSW_Control(1);
  5406  118F  3001               	movlw	(01h)
  5407  1190  3195  25EA  3191   	fcall	_setRFSW_Control
  5408                           	line	253
  5409                           ;RF_Control_B1.c: 253: }
  5410  1193  29A3               	goto	l13203
  5411                           	line	255
  5412                           	
  5413  1194                     l13200:	
  5414                           	
  5415  1194                     l22044:	
  5416                           ;RF_Control_B1.c: 255: else if(RF_Data[15] == 0x11)
  5417  1194  0021               	movlb 1	; select bank1
  5418  1195  082F               	movf	0+(_RF_Data)^080h+0Fh,w
  5419  1196  3A11               	xorlw	011h&0ffh
  5420  1197  1D03               	skipz
  5421  1198  299A               	goto	u11001
  5422  1199  299B               	goto	u11000
  5423  119A                     u11001:
  5424  119A  29A3               	goto	l13203
  5425  119B                     u11000:
  5426                           	line	257
  5427                           	
  5428  119B                     l22046:	
  5429                           ;RF_Control_B1.c: 256: {
  5430                           ;RF_Control_B1.c: 257: setRFSW_AdjControl(1);
  5431  119B  3001               	movlw	(01h)
  5432  119C  31A6  26EE  3191   	fcall	_setRFSW_AdjControl
  5433  119F  29A3               	goto	l13203
  5434                           	line	258
  5435                           	
  5436  11A0                     l13202:	
  5437  11A0  29A3               	goto	l13203
  5438                           	line	285
  5439                           	
  5440  11A1                     l13201:	
  5441  11A1  29A3               	goto	l13203
  5442                           	
  5443  11A2                     l13199:	
  5444  11A2  29A3               	goto	l13203
  5445                           	
  5446  11A3                     l13197:	
  5447                           	
  5448  11A3                     l13203:	
  5449  11A3  0008               	return
  5450                           	opt stack 0
  5451                           GLOBAL	__end_of_setControl_Lights_Table
  5452  11A4                     	__end_of_setControl_Lights_Table:
  5453 ;; =============== function _setControl_Lights_Table ends ============
  5454                           
  5455                           	signat	_setControl_Lights_Table,4216
  5456                           	global	_PowerFault_Main
  5457                           psect	text4873,local,class=CODE,delta=2
  5458                           global __ptext4873
  5459  2D74                     __ptext4873:
  5460                           
  5461 ;; *************** function _PowerFault_Main *****************
  5462 ;; Defined at:
  5463 ;;		line 23 in file "G:\Program\PIC\Source_File\PowerFault_B1.c"
  5464 ;; Parameters:    Size  Location     Type
  5465 ;;		None
  5466 ;; Auto vars:     Size  Location     Type
  5467 ;;		None
  5468 ;; Return value:  Size  Location     Type
  5469 ;;		None               void
  5470 ;; Registers used:
  5471 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5472 ;; Tracked objects:
  5473 ;;		On entry : 0/0
  5474 ;;		On exit  : 0/0
  5475 ;;		Unchanged: 0/0
  5476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  5477 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5478 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5479 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5480 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5481 ;;Total ram usage:        0 bytes
  5482 ;; Hardware stack levels used:    1
  5483 ;; Hardware stack levels required when called:   10
  5484 ;; This function calls:
  5485 ;;		_setPowerFault_Main
  5486 ;; This function is called by:
  5487 ;;		_main
  5488 ;; This function uses a non-reentrant model
  5489 ;;
  5490                           psect	text4873
  5491                           	file	"G:\Program\PIC\Source_File\PowerFault_B1.c"
  5492                           	line	23
  5493                           	global	__size_of_PowerFault_Main
  5494  0005                     	__size_of_PowerFault_Main	equ	__end_of_PowerFault_Main-_PowerFault_Main
  5495                           	
  5496  2D74                     _PowerFault_Main:	
  5497                           	opt	stack 5
  5498                           ; Regs used in _PowerFault_Main: [wreg+fsr1l-status,0+pclath+cstack]
  5499                           	line	25
  5500                           	
  5501  2D74                     l22018:	
  5502                           ;PowerFault_B1.c: 25: setPowerFault_Main(1);
  5503  2D74  3001               	movlw	(01h)
  5504  2D75  318D  253F  31AD   	fcall	_setPowerFault_Main
  5505                           	line	27
  5506                           	
  5507  2D78                     l11945:	
  5508  2D78  0008               	return
  5509                           	opt stack 0
  5510                           GLOBAL	__end_of_PowerFault_Main
  5511  2D79                     	__end_of_PowerFault_Main:
  5512 ;; =============== function _PowerFault_Main ends ============
  5513                           
  5514                           	signat	_PowerFault_Main,88
  5515                           	global	_Load_Main
  5516                           psect	text4874,local,class=CODE,delta=2
  5517                           global __ptext4874
  5518  2D6F                     __ptext4874:
  5519                           
  5520 ;; *************** function _Load_Main *****************
  5521 ;; Defined at:
  5522 ;;		line 25 in file "G:\Program\PIC\Source_File\OverLoad_B1.c"
  5523 ;; Parameters:    Size  Location     Type
  5524 ;;		None
  5525 ;; Auto vars:     Size  Location     Type
  5526 ;;		None
  5527 ;; Return value:  Size  Location     Type
  5528 ;;		None               void
  5529 ;; Registers used:
  5530 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5531 ;; Tracked objects:
  5532 ;;		On entry : 0/0
  5533 ;;		On exit  : 0/0
  5534 ;;		Unchanged: 0/0
  5535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  5536 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5537 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5539 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5540 ;;Total ram usage:        0 bytes
  5541 ;; Hardware stack levels used:    1
  5542 ;; Hardware stack levels required when called:   10
  5543 ;; This function calls:
  5544 ;;		_setLoad_Main
  5545 ;; This function is called by:
  5546 ;;		_main
  5547 ;; This function uses a non-reentrant model
  5548 ;;
  5549                           psect	text4874
  5550                           	file	"G:\Program\PIC\Source_File\OverLoad_B1.c"
  5551                           	line	25
  5552                           	global	__size_of_Load_Main
  5553  0005                     	__size_of_Load_Main	equ	__end_of_Load_Main-_Load_Main
  5554                           	
  5555  2D6F                     _Load_Main:	
  5556                           	opt	stack 5
  5557                           ; Regs used in _Load_Main: [wreg-status,0+pclath+cstack]
  5558                           	line	27
  5559                           	
  5560  2D6F                     l22016:	
  5561                           ;OverLoad_B1.c: 27: setLoad_Main(1);
  5562  2D6F  3001               	movlw	(01h)
  5563  2D70  3180  2018  31AD   	fcall	_setLoad_Main
  5564                           	line	29
  5565                           	
  5566  2D73                     l9556:	
  5567  2D73  0008               	return
  5568                           	opt stack 0
  5569                           GLOBAL	__end_of_Load_Main
  5570  2D74                     	__end_of_Load_Main:
  5571 ;; =============== function _Load_Main ends ============
  5572                           
  5573                           	signat	_Load_Main,88
  5574                           	global	_Temp_Main
  5575                           psect	text4875,local,class=CODE,delta=2
  5576                           global __ptext4875
  5577  2D6A                     __ptext4875:
  5578                           
  5579 ;; *************** function _Temp_Main *****************
  5580 ;; Defined at:
  5581 ;;		line 16 in file "G:\Program\PIC\Source_File\OverTemperature_B1.c"
  5582 ;; Parameters:    Size  Location     Type
  5583 ;;		None
  5584 ;; Auto vars:     Size  Location     Type
  5585 ;;		None
  5586 ;; Return value:  Size  Location     Type
  5587 ;;		None               void
  5588 ;; Registers used:
  5589 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5590 ;; Tracked objects:
  5591 ;;		On entry : 0/0
  5592 ;;		On exit  : 0/0
  5593 ;;		Unchanged: 0/0
  5594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  5595 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5596 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5598 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5599 ;;Total ram usage:        0 bytes
  5600 ;; Hardware stack levels used:    1
  5601 ;; Hardware stack levels required when called:   10
  5602 ;; This function calls:
  5603 ;;		_setTemp_Main
  5604 ;; This function is called by:
  5605 ;;		_main
  5606 ;; This function uses a non-reentrant model
  5607 ;;
  5608                           psect	text4875
  5609                           	file	"G:\Program\PIC\Source_File\OverTemperature_B1.c"
  5610                           	line	16
  5611                           	global	__size_of_Temp_Main
  5612  0005                     	__size_of_Temp_Main	equ	__end_of_Temp_Main-_Temp_Main
  5613                           	
  5614  2D6A                     _Temp_Main:	
  5615                           	opt	stack 5
  5616                           ; Regs used in _Temp_Main: [wreg+fsr1l-status,0+pclath+cstack]
  5617                           	line	18
  5618                           	
  5619  2D6A                     l22014:	
  5620                           ;OverTemperature_B1.c: 18: setTemp_Main(1);
  5621  2D6A  3001               	movlw	(01h)
  5622  2D6B  3186  2689  31AD   	fcall	_setTemp_Main
  5623                           	line	20
  5624                           	
  5625  2D6E                     l10771:	
  5626  2D6E  0008               	return
  5627                           	opt stack 0
  5628                           GLOBAL	__end_of_Temp_Main
  5629  2D6F                     	__end_of_Temp_Main:
  5630 ;; =============== function _Temp_Main ends ============
  5631                           
  5632                           	signat	_Temp_Main,88
  5633                           	global	_setRFSW_AdjControl
  5634                           psect	text4876,local,class=CODE,delta=2
  5635                           global __ptext4876
  5636  26EE                     __ptext4876:
  5637                           
  5638 ;; *************** function _setRFSW_AdjControl *****************
  5639 ;; Defined at:
  5640 ;;		line 380 in file "G:\Program\PIC\Source_File\RF_Control_B1.c"
  5641 ;; Parameters:    Size  Location     Type
  5642 ;;  sw              1    wreg     unsigned char 
  5643 ;; Auto vars:     Size  Location     Type
  5644 ;;  sw              1   67[BANK0 ] unsigned char 
  5645 ;; Return value:  Size  Location     Type
  5646 ;;		None               void
  5647 ;; Registers used:
  5648 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5649 ;; Tracked objects:
  5650 ;;		On entry : 0/0
  5651 ;;		On exit  : 0/0
  5652 ;;		Unchanged: 0/0
  5653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  5654 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5655 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  5656 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  5657 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
  5658 ;;Total ram usage:        3 bytes
  5659 ;; Hardware stack levels used:    1
  5660 ;; Hardware stack levels required when called:    9
  5661 ;; This function calls:
  5662 ;;		_RfSWPointSelect
  5663 ;;		_setRF_DimmerValue
  5664 ;;		_setTxData
  5665 ;; This function is called by:
  5666 ;;		_setControl_Lights_Table
  5667 ;; This function uses a non-reentrant model
  5668 ;;
  5669                           psect	text4876
  5670                           	file	"G:\Program\PIC\Source_File\RF_Control_B1.c"
  5671                           	line	380
  5672                           	global	__size_of_setRFSW_AdjControl
  5673  0043                     	__size_of_setRFSW_AdjControl	equ	__end_of_setRFSW_AdjControl-_setRFSW_AdjControl
  5674                           	
  5675  26EE                     _setRFSW_AdjControl:	
  5676                           	opt	stack 2
  5677                           ; Regs used in _setRFSW_AdjControl: [wreg+fsr1l-status,0+pclath+cstack]
  5678                           ;setRFSW_AdjControl@sw stored from wreg
  5679  26EE  0020               	movlb 0	; select bank0
  5680  26EF  00E3               	movwf	(setRFSW_AdjControl@sw)
  5681                           	line	381
  5682                           	
  5683  26F0                     l20518:	
  5684                           ;RF_Control_B1.c: 381: RfSWPointSelect(sw);
  5685  26F0  0863               	movf	(setRFSW_AdjControl@sw),w
  5686  26F1  31AE  26E7  31A6   	fcall	_RfSWPointSelect
  5687                           	line	382
  5688                           	
  5689  26F4                     l20520:	
  5690                           ;RF_Control_B1.c: 382: if(RFSW->Status)
  5691  26F4  0021               	movlb 1	; select bank1
  5692  26F5  083B               	movf	(_RFSW)^080h,w
  5693  26F6  0086               	movwf	fsr1l
  5694  26F7  0187               	clrf fsr1h	
  5695                           	
  5696  26F8  1C01               	btfss	indf1,0
  5697  26F9  2EFB               	goto	u8971
  5698  26FA  2EFC               	goto	u8970
  5699  26FB                     u8971:
  5700  26FB  2F08               	goto	l20526
  5701  26FC                     u8970:
  5702                           	line	384
  5703                           	
  5704  26FC                     l20522:	
  5705                           ;RF_Control_B1.c: 383: {
  5706                           ;RF_Control_B1.c: 384: Memory->Modify=1;
  5707  26FC  087C               	movf	(_Memory),w
  5708  26FD  3E22               	addlw	022h
  5709  26FE  0086               	movwf	fsr1l
  5710  26FF  3001               	movlw 1	; select bank2/3
  5711  2700  0087               	movwf fsr1h	
  5712                           	
  5713  2701  1401               	bsf	indf1,0
  5714                           	line	385
  5715                           	
  5716  2702                     l20524:	
  5717                           ;RF_Control_B1.c: 385: setRF_DimmerValue(sw);
  5718  2702  0020               	movlb 0	; select bank0
  5719  2703  0863               	movf	(setRFSW_AdjControl@sw),w
  5720  2704  31A5  25F6  31A6   	fcall	_setRF_DimmerValue
  5721                           	line	386
  5722                           ;RF_Control_B1.c: 386: }
  5723  2707  2F1A               	goto	l13230
  5724                           	line	387
  5725                           	
  5726  2708                     l13229:	
  5727                           	line	389
  5728                           	
  5729  2708                     l20526:	
  5730                           ;RF_Control_B1.c: 387: else
  5731                           ;RF_Control_B1.c: 388: {
  5732                           ;RF_Control_B1.c: 389: Product->Data[9]=Product->Data[20+sw];
  5733  2708  0020               	movlb 0	; select bank0
  5734  2709  0863               	movf	(setRFSW_AdjControl@sw),w
  5735  270A  3E14               	addlw	014h
  5736  270B  076F               	addwf	(_Product),w
  5737  270C  00E1               	movwf	(??_setRFSW_AdjControl+0)+0
  5738  270D  0861               	movf	0+(??_setRFSW_AdjControl+0)+0,w
  5739  270E  0086               	movwf	fsr1l
  5740  270F  3001               	movlw 1	; select bank2/3
  5741  2710  0087               	movwf fsr1h	
  5742                           	
  5743  2711  0801               	movf	indf1,w
  5744  2712  00E2               	movwf	(??_setRFSW_AdjControl+1)+0
  5745  2713  086F               	movf	(_Product),w
  5746  2714  3E09               	addlw	09h
  5747  2715  0086               	movwf	fsr1l
  5748  2716  3001               	movlw 1	; select bank2/3
  5749  2717  0087               	movwf fsr1h	
  5750                           	
  5751  2718  0862               	movf	(??_setRFSW_AdjControl+1)+0,w
  5752  2719  0081               	movwf	indf1
  5753                           	line	390
  5754                           	
  5755  271A                     l13230:	
  5756                           	line	391
  5757                           ;RF_Control_B1.c: 390: }
  5758                           ;RF_Control_B1.c: 391: Product->Data[17]=Product->Data[26+sw];
  5759  271A  0020               	movlb 0	; select bank0
  5760  271B  0863               	movf	(setRFSW_AdjControl@sw),w
  5761  271C  3E1A               	addlw	01Ah
  5762  271D  076F               	addwf	(_Product),w
  5763  271E  00E1               	movwf	(??_setRFSW_AdjControl+0)+0
  5764  271F  0861               	movf	0+(??_setRFSW_AdjControl+0)+0,w
  5765  2720  0086               	movwf	fsr1l
  5766  2721  3001               	movlw 1	; select bank2/3
  5767  2722  0087               	movwf fsr1h	
  5768                           	
  5769  2723  0801               	movf	indf1,w
  5770  2724  00E2               	movwf	(??_setRFSW_AdjControl+1)+0
  5771  2725  086F               	movf	(_Product),w
  5772  2726  3E11               	addlw	011h
  5773  2727  0086               	movwf	fsr1l
  5774  2728  3001               	movlw 1	; select bank2/3
  5775  2729  0087               	movwf fsr1h	
  5776                           	
  5777  272A  0862               	movf	(??_setRFSW_AdjControl+1)+0,w
  5778  272B  0081               	movwf	indf1
  5779                           	line	392
  5780                           	
  5781  272C                     l20528:	
  5782                           ;RF_Control_B1.c: 392: setTxData(1);
  5783  272C  3001               	movlw	(01h)
  5784  272D  318B  230E  31A6   	fcall	_setTxData
  5785                           	line	393
  5786                           	
  5787  2730                     l13231:	
  5788  2730  0008               	return
  5789                           	opt stack 0
  5790                           GLOBAL	__end_of_setRFSW_AdjControl
  5791  2731                     	__end_of_setRFSW_AdjControl:
  5792 ;; =============== function _setRFSW_AdjControl ends ============
  5793                           
  5794                           	signat	_setRFSW_AdjControl,4216
  5795                           	global	_setPowerFault_Main
  5796                           psect	text4877,local,class=CODE,delta=2
  5797                           global __ptext4877
  5798  0D3F                     __ptext4877:
  5799                           
  5800 ;; *************** function _setPowerFault_Main *****************
  5801 ;; Defined at:
  5802 ;;		line 66 in file "G:\Program\PIC\Source_File\PowerFault_B1.c"
  5803 ;; Parameters:    Size  Location     Type
  5804 ;;  pf              1    wreg     unsigned char 
  5805 ;; Auto vars:     Size  Location     Type
  5806 ;;  pf              1   20[BANK0 ] unsigned char 
  5807 ;; Return value:  Size  Location     Type
  5808 ;;		None               void
  5809 ;; Registers used:
  5810 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5811 ;; Tracked objects:
  5812 ;;		On entry : 0/0
  5813 ;;		On exit  : 0/0
  5814 ;;		Unchanged: 0/0
  5815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  5816 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5817 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  5818 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  5819 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
  5820 ;;Total ram usage:        3 bytes
  5821 ;; Hardware stack levels used:    1
  5822 ;; Hardware stack levels required when called:    9
  5823 ;; This function calls:
  5824 ;;		_PowerFaultPointSelect
  5825 ;;		_getLoad_Safe
  5826 ;;		_getTemp_Safe
  5827 ;;		_setPowerFault_ERROR
  5828 ;; This function is called by:
  5829 ;;		_PowerFault_Main
  5830 ;; This function uses a non-reentrant model
  5831 ;;
  5832                           psect	text4877
  5833                           	file	"G:\Program\PIC\Source_File\PowerFault_B1.c"
  5834                           	line	66
  5835                           	global	__size_of_setPowerFault_Main
  5836  0136                     	__size_of_setPowerFault_Main	equ	__end_of_setPowerFault_Main-_setPowerFault_Main
  5837                           	
  5838  0D3F                     _setPowerFault_Main:	
  5839                           	opt	stack 5
  5840                           ; Regs used in _setPowerFault_Main: [wreg+fsr1l-status,0+pclath+cstack]
  5841                           ;setPowerFault_Main@pf stored from wreg
  5842  0D3F  0020               	movlb 0	; select bank0
  5843  0D40  00B4               	movwf	(setPowerFault_Main@pf)
  5844                           	line	67
  5845                           	
  5846  0D41                     l21960:	
  5847                           ;PowerFault_B1.c: 67: PowerFaultPointSelect(pf);
  5848  0D41  0834               	movf	(setPowerFault_Main@pf),w
  5849  0D42  31AD  2584  318D   	fcall	_PowerFaultPointSelect
  5850                           	line	68
  5851                           	
  5852  0D45                     l21962:	
  5853                           ;PowerFault_B1.c: 68: if(PF->Enable)
  5854  0D45  0020               	movlb 0	; select bank0
  5855  0D46  086C               	movf	(_PF),w
  5856  0D47  0086               	movwf	fsr1l
  5857  0D48  0187               	clrf fsr1h	
  5858                           	
  5859  0D49  1C01               	btfss	indf1,0
  5860  0D4A  2D4C               	goto	u10831
  5861  0D4B  2D4D               	goto	u10830
  5862  0D4C                     u10831:
  5863  0D4C  2E74               	goto	l11983
  5864  0D4D                     u10830:
  5865                           	line	70
  5866                           	
  5867  0D4D                     l21964:	
  5868                           ;PowerFault_B1.c: 69: {
  5869                           ;PowerFault_B1.c: 70: if(PF->ADtoGO == 0)
  5870  0D4D  086C               	movf	(_PF),w
  5871  0D4E  0086               	movwf	fsr1l
  5872  0D4F  0187               	clrf fsr1h	
  5873                           	
  5874  0D50  1981               	btfsc	indf1,3
  5875  0D51  2D53               	goto	u10841
  5876  0D52  2D54               	goto	u10840
  5877  0D53                     u10841:
  5878  0D53  2D9E               	goto	l21978
  5879  0D54                     u10840:
  5880                           	line	72
  5881                           	
  5882  0D54                     l21966:	
  5883                           ;PowerFault_B1.c: 71: {
  5884                           ;PowerFault_B1.c: 72: PF->Time++;
  5885  0D54  086C               	movf	(_PF),w
  5886  0D55  3E06               	addlw	06h
  5887  0D56  0086               	movwf	fsr1l
  5888  0D57  0187               	clrf fsr1h	
  5889                           	
  5890  0D58  3001               	movlw	01h
  5891  0D59  0781               	addwf	indf1,f
  5892  0D5A  3141               	addfsr	fsr1,1
  5893  0D5B  1803               	skipnc
  5894  0D5C  0A81               	incf	indf1,f
  5895                           	line	73
  5896                           	
  5897  0D5D                     l21968:	
  5898                           ;PowerFault_B1.c: 73: if(PF->Time >= 1400)
  5899  0D5D  086C               	movf	(_PF),w
  5900  0D5E  3E06               	addlw	06h
  5901  0D5F  0086               	movwf	fsr1l
  5902  0D60  0187               	clrf fsr1h	
  5903                           	
  5904  0D61  3F40               	moviw	[0]fsr1
  5905  0D62  00B2               	movwf	(??_setPowerFault_Main+0)+0
  5906  0D63  3F41               	moviw	[1]fsr1
  5907  0D64  00B3               	movwf	(??_setPowerFault_Main+0)+0+1
  5908  0D65  3005               	movlw	high(0578h)
  5909  0D66  0233               	subwf	1+(??_setPowerFault_Main+0)+0,w
  5910  0D67  3078               	movlw	low(0578h)
  5911  0D68  1903               	skipnz
  5912  0D69  0232               	subwf	0+(??_setPowerFault_Main+0)+0,w
  5913  0D6A  1C03               	skipc
  5914  0D6B  2D6D               	goto	u10851
  5915  0D6C  2D6E               	goto	u10850
  5916  0D6D                     u10851:
  5917  0D6D  2E74               	goto	l11983
  5918  0D6E                     u10850:
  5919                           	line	75
  5920                           	
  5921  0D6E                     l21970:	
  5922                           ;PowerFault_B1.c: 74: {
  5923                           ;PowerFault_B1.c: 75: if(getLoad_Safe(1) && getTemp_Safe(1))
  5924  0D6E  3001               	movlw	(01h)
  5925  0D6F  31A0  20B0  318D   	fcall	_getLoad_Safe
  5926  0D72  3A00               	xorlw	0&0ffh
  5927  0D73  1903               	skipnz
  5928  0D74  2D76               	goto	u10861
  5929  0D75  2D77               	goto	u10860
  5930  0D76                     u10861:
  5931  0D76  2D92               	goto	l21976
  5932  0D77                     u10860:
  5933                           	
  5934  0D77                     l21972:	
  5935  0D77  3001               	movlw	(01h)
  5936  0D78  31AF  2723  318D   	fcall	_getTemp_Safe
  5937  0D7B  3A00               	xorlw	0&0ffh
  5938  0D7C  1903               	skipnz
  5939  0D7D  2D7F               	goto	u10871
  5940  0D7E  2D80               	goto	u10870
  5941  0D7F                     u10871:
  5942  0D7F  2D92               	goto	l21976
  5943  0D80                     u10870:
  5944                           	line	77
  5945                           	
  5946  0D80                     l21974:	
  5947                           ;PowerFault_B1.c: 76: {
  5948                           ;PowerFault_B1.c: 77: PF->Time=0;
  5949  0D80  0020               	movlb 0	; select bank0
  5950  0D81  086C               	movf	(_PF),w
  5951  0D82  3E06               	addlw	06h
  5952  0D83  0086               	movwf	fsr1l
  5953  0D84  0187               	clrf fsr1h	
  5954                           	
  5955  0D85  3000               	movlw	low(0)
  5956  0D86  3FC0               	movwi	[0]fsr1
  5957  0D87  3000               	movlw	high(0)
  5958  0D88  3FC1               	movwi	[1]fsr1
  5959                           	line	78
  5960                           ;PowerFault_B1.c: 78: PF->ADtoGO=1;
  5961  0D89  086C               	movf	(_PF),w
  5962  0D8A  0086               	movwf	fsr1l
  5963  0D8B  0187               	clrf fsr1h	
  5964                           	
  5965  0D8C  1581               	bsf	indf1,3
  5966                           	line	79
  5967                           ;PowerFault_B1.c: 79: PF->Safe=0;
  5968  0D8D  086C               	movf	(_PF),w
  5969  0D8E  0086               	movwf	fsr1l
  5970  0D8F  0187               	clrf fsr1h	
  5971                           	
  5972  0D90  1101               	bcf	indf1,2
  5973                           	line	80
  5974                           ;PowerFault_B1.c: 80: }
  5975  0D91  2E74               	goto	l11983
  5976                           	line	81
  5977                           	
  5978  0D92                     l11968:	
  5979                           	line	83
  5980                           	
  5981  0D92                     l21976:	
  5982                           ;PowerFault_B1.c: 81: else
  5983                           ;PowerFault_B1.c: 82: {
  5984                           ;PowerFault_B1.c: 83: PF->Time=1400;
  5985  0D92  0020               	movlb 0	; select bank0
  5986  0D93  086C               	movf	(_PF),w
  5987  0D94  3E06               	addlw	06h
  5988  0D95  0086               	movwf	fsr1l
  5989  0D96  0187               	clrf fsr1h	
  5990                           	
  5991  0D97  3078               	movlw	low(0578h)
  5992  0D98  3FC0               	movwi	[0]fsr1
  5993  0D99  3005               	movlw	high(0578h)
  5994  0D9A  3FC1               	movwi	[1]fsr1
  5995  0D9B  2E74               	goto	l11983
  5996                           	line	84
  5997                           	
  5998  0D9C                     l11969:	
  5999  0D9C  2E74               	goto	l11983
  6000                           	line	85
  6001                           	
  6002  0D9D                     l11967:	
  6003                           	line	86
  6004                           ;PowerFault_B1.c: 84: }
  6005                           ;PowerFault_B1.c: 85: }
  6006                           ;PowerFault_B1.c: 86: }
  6007  0D9D  2E74               	goto	l11983
  6008                           	line	87
  6009                           	
  6010  0D9E                     l11966:	
  6011                           	line	89
  6012                           	
  6013  0D9E                     l21978:	
  6014                           ;PowerFault_B1.c: 87: else
  6015                           ;PowerFault_B1.c: 88: {
  6016                           ;PowerFault_B1.c: 89: PF->Time++;
  6017  0D9E  086C               	movf	(_PF),w
  6018  0D9F  3E06               	addlw	06h
  6019  0DA0  0086               	movwf	fsr1l
  6020  0DA1  0187               	clrf fsr1h	
  6021                           	
  6022  0DA2  3001               	movlw	01h
  6023  0DA3  0781               	addwf	indf1,f
  6024  0DA4  3141               	addfsr	fsr1,1
  6025  0DA5  1803               	skipnc
  6026  0DA6  0A81               	incf	indf1,f
  6027                           	line	90
  6028                           	
  6029  0DA7                     l21980:	
  6030                           ;PowerFault_B1.c: 90: if(PF->Time >= 4)
  6031  0DA7  086C               	movf	(_PF),w
  6032  0DA8  3E06               	addlw	06h
  6033  0DA9  0086               	movwf	fsr1l
  6034  0DAA  0187               	clrf fsr1h	
  6035                           	
  6036  0DAB  3F40               	moviw	[0]fsr1
  6037  0DAC  00B2               	movwf	(??_setPowerFault_Main+0)+0
  6038  0DAD  3F41               	moviw	[1]fsr1
  6039  0DAE  00B3               	movwf	(??_setPowerFault_Main+0)+0+1
  6040  0DAF  3000               	movlw	high(04h)
  6041  0DB0  0233               	subwf	1+(??_setPowerFault_Main+0)+0,w
  6042  0DB1  3004               	movlw	low(04h)
  6043  0DB2  1903               	skipnz
  6044  0DB3  0232               	subwf	0+(??_setPowerFault_Main+0)+0,w
  6045  0DB4  1C03               	skipc
  6046  0DB5  2DB7               	goto	u10881
  6047  0DB6  2DB8               	goto	u10880
  6048  0DB7                     u10881:
  6049  0DB7  2E74               	goto	l11983
  6050  0DB8                     u10880:
  6051                           	line	92
  6052                           	
  6053  0DB8                     l21982:	
  6054                           ;PowerFault_B1.c: 91: {
  6055                           ;PowerFault_B1.c: 92: PF->Time=0;
  6056  0DB8  086C               	movf	(_PF),w
  6057  0DB9  3E06               	addlw	06h
  6058  0DBA  0086               	movwf	fsr1l
  6059  0DBB  0187               	clrf fsr1h	
  6060                           	
  6061  0DBC  3000               	movlw	low(0)
  6062  0DBD  3FC0               	movwi	[0]fsr1
  6063  0DBE  3000               	movlw	high(0)
  6064  0DBF  3FC1               	movwi	[1]fsr1
  6065                           	line	93
  6066                           ;PowerFault_B1.c: 93: PF->ADtoGO=0;
  6067  0DC0  086C               	movf	(_PF),w
  6068  0DC1  0086               	movwf	fsr1l
  6069  0DC2  0187               	clrf fsr1h	
  6070                           	
  6071  0DC3  1181               	bcf	indf1,3
  6072                           	line	95
  6073                           ;PowerFault_B1.c: 95: if(PF->ERROR)
  6074  0DC4  086C               	movf	(_PF),w
  6075  0DC5  0086               	movwf	fsr1l
  6076  0DC6  0187               	clrf fsr1h	
  6077                           	
  6078  0DC7  1C81               	btfss	indf1,1
  6079  0DC8  2DCA               	goto	u10891
  6080  0DC9  2DCB               	goto	u10890
  6081  0DCA                     u10891:
  6082  0DCA  2E13               	goto	l21998
  6083  0DCB                     u10890:
  6084                           	line	97
  6085                           	
  6086  0DCB                     l21984:	
  6087                           ;PowerFault_B1.c: 96: {
  6088                           ;PowerFault_B1.c: 97: if(PF->AD <= (300+100) && PF->AD >= (300-100))
  6089  0DCB  086C               	movf	(_PF),w
  6090  0DCC  3E01               	addlw	01h
  6091  0DCD  0086               	movwf	fsr1l
  6092  0DCE  0187               	clrf fsr1h	
  6093                           	
  6094  0DCF  3F40               	moviw	[0]fsr1
  6095  0DD0  00B2               	movwf	(??_setPowerFault_Main+0)+0
  6096  0DD1  3F41               	moviw	[1]fsr1
  6097  0DD2  00B3               	movwf	(??_setPowerFault_Main+0)+0+1
  6098  0DD3  3001               	movlw	high(0191h)
  6099  0DD4  0233               	subwf	1+(??_setPowerFault_Main+0)+0,w
  6100  0DD5  3091               	movlw	low(0191h)
  6101  0DD6  1903               	skipnz
  6102  0DD7  0232               	subwf	0+(??_setPowerFault_Main+0)+0,w
  6103  0DD8  1803               	skipnc
  6104  0DD9  2DDB               	goto	u10901
  6105  0DDA  2DDC               	goto	u10900
  6106  0DDB                     u10901:
  6107  0DDB  2E0B               	goto	l21996
  6108  0DDC                     u10900:
  6109                           	
  6110  0DDC                     l21986:	
  6111  0DDC  086C               	movf	(_PF),w
  6112  0DDD  3E01               	addlw	01h
  6113  0DDE  0086               	movwf	fsr1l
  6114  0DDF  0187               	clrf fsr1h	
  6115                           	
  6116  0DE0  3F40               	moviw	[0]fsr1
  6117  0DE1  00B2               	movwf	(??_setPowerFault_Main+0)+0
  6118  0DE2  3F41               	moviw	[1]fsr1
  6119  0DE3  00B3               	movwf	(??_setPowerFault_Main+0)+0+1
  6120  0DE4  3000               	movlw	high(0C8h)
  6121  0DE5  0233               	subwf	1+(??_setPowerFault_Main+0)+0,w
  6122  0DE6  30C8               	movlw	low(0C8h)
  6123  0DE7  1903               	skipnz
  6124  0DE8  0232               	subwf	0+(??_setPowerFault_Main+0)+0,w
  6125  0DE9  1C03               	skipc
  6126  0DEA  2DEC               	goto	u10911
  6127  0DEB  2DED               	goto	u10910
  6128  0DEC                     u10911:
  6129  0DEC  2E0B               	goto	l21996
  6130  0DED                     u10910:
  6131                           	line	99
  6132                           	
  6133  0DED                     l21988:	
  6134                           ;PowerFault_B1.c: 98: {
  6135                           ;PowerFault_B1.c: 99: PF->Count++;
  6136  0DED  3001               	movlw	(01h)
  6137  0DEE  00B2               	movwf	(??_setPowerFault_Main+0)+0
  6138  0DEF  086C               	movf	(_PF),w
  6139  0DF0  3E05               	addlw	05h
  6140  0DF1  0086               	movwf	fsr1l
  6141  0DF2  0187               	clrf fsr1h	
  6142                           	
  6143  0DF3  0832               	movf	(??_setPowerFault_Main+0)+0,w
  6144  0DF4  0781               	addwf	indf1,f
  6145                           	line	100
  6146                           	
  6147  0DF5                     l21990:	
  6148                           ;PowerFault_B1.c: 100: if(PF->Count > 1)
  6149  0DF5  086C               	movf	(_PF),w
  6150  0DF6  3E05               	addlw	05h
  6151  0DF7  0086               	movwf	fsr1l
  6152  0DF8  0187               	clrf fsr1h	
  6153                           	
  6154  0DF9  3002               	movlw	(02h)
  6155  0DFA  0201               	subwf	indf1,w
  6156  0DFB  1C03               	skipc
  6157  0DFC  2DFE               	goto	u10921
  6158  0DFD  2DFF               	goto	u10920
  6159  0DFE                     u10921:
  6160  0DFE  2E5D               	goto	l11976
  6161  0DFF                     u10920:
  6162                           	line	102
  6163                           	
  6164  0DFF                     l21992:	
  6165                           ;PowerFault_B1.c: 101: {
  6166                           ;PowerFault_B1.c: 102: PF->Count=0;
  6167  0DFF  086C               	movf	(_PF),w
  6168  0E00  3E05               	addlw	05h
  6169  0E01  0086               	movwf	fsr1l
  6170  0E02  0187               	clrf fsr1h	
  6171                           	
  6172  0E03  0181               	clrf	indf1
  6173                           	line	103
  6174                           	
  6175  0E04                     l21994:	
  6176                           ;PowerFault_B1.c: 103: setPowerFault_ERROR(1,0);
  6177  0E04  01AF               	clrf	(?_setPowerFault_ERROR)
  6178  0E05  3001               	movlw	(01h)
  6179  0E06  319B  2321  318D   	fcall	_setPowerFault_ERROR
  6180  0E09  2E5D               	goto	l11976
  6181                           	line	104
  6182                           	
  6183  0E0A                     l11974:	
  6184                           	line	105
  6185                           ;PowerFault_B1.c: 104: }
  6186                           ;PowerFault_B1.c: 105: }
  6187  0E0A  2E5D               	goto	l11976
  6188                           	line	106
  6189                           	
  6190  0E0B                     l11973:	
  6191                           	line	108
  6192                           	
  6193  0E0B                     l21996:	
  6194                           ;PowerFault_B1.c: 106: else
  6195                           ;PowerFault_B1.c: 107: {
  6196                           ;PowerFault_B1.c: 108: PF->Count=0;
  6197  0E0B  0020               	movlb 0	; select bank0
  6198  0E0C  086C               	movf	(_PF),w
  6199  0E0D  3E05               	addlw	05h
  6200  0E0E  0086               	movwf	fsr1l
  6201  0E0F  0187               	clrf fsr1h	
  6202                           	
  6203  0E10  0181               	clrf	indf1
  6204  0E11  2E5D               	goto	l11976
  6205                           	line	109
  6206                           	
  6207  0E12                     l11975:	
  6208                           	line	110
  6209                           ;PowerFault_B1.c: 109: }
  6210                           ;PowerFault_B1.c: 110: }
  6211  0E12  2E5D               	goto	l11976
  6212                           	line	111
  6213                           	
  6214  0E13                     l11972:	
  6215                           	line	113
  6216                           	
  6217  0E13                     l21998:	
  6218                           ;PowerFault_B1.c: 111: else
  6219                           ;PowerFault_B1.c: 112: {
  6220                           ;PowerFault_B1.c: 113: if(PF->AD >= (300+100) || PF->AD <= (310-100))
  6221  0E13  086C               	movf	(_PF),w
  6222  0E14  3E01               	addlw	01h
  6223  0E15  0086               	movwf	fsr1l
  6224  0E16  0187               	clrf fsr1h	
  6225                           	
  6226  0E17  3F40               	moviw	[0]fsr1
  6227  0E18  00B2               	movwf	(??_setPowerFault_Main+0)+0
  6228  0E19  3F41               	moviw	[1]fsr1
  6229  0E1A  00B3               	movwf	(??_setPowerFault_Main+0)+0+1
  6230  0E1B  3001               	movlw	high(0190h)
  6231  0E1C  0233               	subwf	1+(??_setPowerFault_Main+0)+0,w
  6232  0E1D  3090               	movlw	low(0190h)
  6233  0E1E  1903               	skipnz
  6234  0E1F  0232               	subwf	0+(??_setPowerFault_Main+0)+0,w
  6235  0E20  1803               	skipnc
  6236  0E21  2E23               	goto	u10931
  6237  0E22  2E24               	goto	u10930
  6238  0E23                     u10931:
  6239  0E23  2E36               	goto	l22002
  6240  0E24                     u10930:
  6241                           	
  6242  0E24                     l22000:	
  6243  0E24  086C               	movf	(_PF),w
  6244  0E25  3E01               	addlw	01h
  6245  0E26  0086               	movwf	fsr1l
  6246  0E27  0187               	clrf fsr1h	
  6247                           	
  6248  0E28  3F40               	moviw	[0]fsr1
  6249  0E29  00B2               	movwf	(??_setPowerFault_Main+0)+0
  6250  0E2A  3F41               	moviw	[1]fsr1
  6251  0E2B  00B3               	movwf	(??_setPowerFault_Main+0)+0+1
  6252  0E2C  3000               	movlw	high(0D3h)
  6253  0E2D  0233               	subwf	1+(??_setPowerFault_Main+0)+0,w
  6254  0E2E  30D3               	movlw	low(0D3h)
  6255  0E2F  1903               	skipnz
  6256  0E30  0232               	subwf	0+(??_setPowerFault_Main+0)+0,w
  6257  0E31  1803               	skipnc
  6258  0E32  2E34               	goto	u10941
  6259  0E33  2E35               	goto	u10940
  6260  0E34                     u10941:
  6261  0E34  2E56               	goto	l22010
  6262  0E35                     u10940:
  6263  0E35  2E36               	goto	l22002
  6264                           	
  6265  0E36                     l11979:	
  6266                           	line	115
  6267                           	
  6268  0E36                     l22002:	
  6269                           ;PowerFault_B1.c: 114: {
  6270                           ;PowerFault_B1.c: 115: PF->Count++;
  6271  0E36  3001               	movlw	(01h)
  6272  0E37  00B2               	movwf	(??_setPowerFault_Main+0)+0
  6273  0E38  086C               	movf	(_PF),w
  6274  0E39  3E05               	addlw	05h
  6275  0E3A  0086               	movwf	fsr1l
  6276  0E3B  0187               	clrf fsr1h	
  6277                           	
  6278  0E3C  0832               	movf	(??_setPowerFault_Main+0)+0,w
  6279  0E3D  0781               	addwf	indf1,f
  6280                           	line	116
  6281                           	
  6282  0E3E                     l22004:	
  6283                           ;PowerFault_B1.c: 116: if(PF->Count > 1)
  6284  0E3E  086C               	movf	(_PF),w
  6285  0E3F  3E05               	addlw	05h
  6286  0E40  0086               	movwf	fsr1l
  6287  0E41  0187               	clrf fsr1h	
  6288                           	
  6289  0E42  3002               	movlw	(02h)
  6290  0E43  0201               	subwf	indf1,w
  6291  0E44  1C03               	skipc
  6292  0E45  2E47               	goto	u10951
  6293  0E46  2E48               	goto	u10950
  6294  0E47                     u10951:
  6295  0E47  2E5D               	goto	l11976
  6296  0E48                     u10950:
  6297                           	line	118
  6298                           	
  6299  0E48                     l22006:	
  6300                           ;PowerFault_B1.c: 117: {
  6301                           ;PowerFault_B1.c: 118: PF->Count=0;
  6302  0E48  086C               	movf	(_PF),w
  6303  0E49  3E05               	addlw	05h
  6304  0E4A  0086               	movwf	fsr1l
  6305  0E4B  0187               	clrf fsr1h	
  6306                           	
  6307  0E4C  0181               	clrf	indf1
  6308                           	line	119
  6309                           	
  6310  0E4D                     l22008:	
  6311                           ;PowerFault_B1.c: 119: setPowerFault_ERROR(1,1);
  6312  0E4D  01AF               	clrf	(?_setPowerFault_ERROR)
  6313  0E4E  1403               	bsf	status,0
  6314  0E4F  0DAF               	rlf	(?_setPowerFault_ERROR),f
  6315  0E50  3001               	movlw	(01h)
  6316  0E51  319B  2321  318D   	fcall	_setPowerFault_ERROR
  6317  0E54  2E5D               	goto	l11976
  6318                           	line	120
  6319                           	
  6320  0E55                     l11980:	
  6321                           	line	121
  6322                           ;PowerFault_B1.c: 120: }
  6323                           ;PowerFault_B1.c: 121: }
  6324  0E55  2E5D               	goto	l11976
  6325                           	line	122
  6326                           	
  6327  0E56                     l11977:	
  6328                           	line	124
  6329                           	
  6330  0E56                     l22010:	
  6331                           ;PowerFault_B1.c: 122: else
  6332                           ;PowerFault_B1.c: 123: {
  6333                           ;PowerFault_B1.c: 124: PF->Count=0;
  6334  0E56  0020               	movlb 0	; select bank0
  6335  0E57  086C               	movf	(_PF),w
  6336  0E58  3E05               	addlw	05h
  6337  0E59  0086               	movwf	fsr1l
  6338  0E5A  0187               	clrf fsr1h	
  6339                           	
  6340  0E5B  0181               	clrf	indf1
  6341  0E5C  2E5D               	goto	l11976
  6342                           	line	125
  6343                           	
  6344  0E5D                     l11981:	
  6345                           	line	127
  6346                           	
  6347  0E5D                     l11976:	
  6348                           	line	128
  6349                           ;PowerFault_B1.c: 125: }
  6350                           ;PowerFault_B1.c: 127: }
  6351                           ;PowerFault_B1.c: 128: if(PF->ERROR == 0)
  6352  0E5D  0020               	movlb 0	; select bank0
  6353  0E5E  086C               	movf	(_PF),w
  6354  0E5F  0086               	movwf	fsr1l
  6355  0E60  0187               	clrf fsr1h	
  6356                           	
  6357  0E61  1881               	btfsc	indf1,1
  6358  0E62  2E64               	goto	u10961
  6359  0E63  2E65               	goto	u10960
  6360  0E64                     u10961:
  6361  0E64  2E69               	goto	l11982
  6362  0E65                     u10960:
  6363                           	line	130
  6364                           	
  6365  0E65                     l22012:	
  6366                           ;PowerFault_B1.c: 129: {
  6367                           ;PowerFault_B1.c: 130: PF->Safe=1;
  6368  0E65  086C               	movf	(_PF),w
  6369  0E66  0086               	movwf	fsr1l
  6370  0E67  0187               	clrf fsr1h	
  6371                           	
  6372  0E68  1501               	bsf	indf1,2
  6373                           	line	131
  6374                           	
  6375  0E69                     l11982:	
  6376                           	line	132
  6377                           ;PowerFault_B1.c: 131: }
  6378                           ;PowerFault_B1.c: 132: PF->AD=0;
  6379  0E69  086C               	movf	(_PF),w
  6380  0E6A  3E01               	addlw	01h
  6381  0E6B  0086               	movwf	fsr1l
  6382  0E6C  0187               	clrf fsr1h	
  6383                           	
  6384  0E6D  3000               	movlw	low(0)
  6385  0E6E  3FC0               	movwi	[0]fsr1
  6386  0E6F  3000               	movlw	high(0)
  6387  0E70  3FC1               	movwi	[1]fsr1
  6388  0E71  2E74               	goto	l11983
  6389                           	line	133
  6390                           	
  6391  0E72                     l11971:	
  6392  0E72  2E74               	goto	l11983
  6393                           	line	134
  6394                           	
  6395  0E73                     l11970:	
  6396  0E73  2E74               	goto	l11983
  6397                           	line	135
  6398                           	
  6399  0E74                     l11965:	
  6400                           	line	136
  6401                           	
  6402  0E74                     l11983:	
  6403  0E74  0008               	return
  6404                           	opt stack 0
  6405                           GLOBAL	__end_of_setPowerFault_Main
  6406  0E75                     	__end_of_setPowerFault_Main:
  6407 ;; =============== function _setPowerFault_Main ends ============
  6408                           
  6409                           	signat	_setPowerFault_Main,4216
  6410                           	global	_setTemp_Main
  6411                           psect	text4878,local,class=CODE,delta=2
  6412                           global __ptext4878
  6413  0689                     __ptext4878:
  6414                           
  6415 ;; *************** function _setTemp_Main *****************
  6416 ;; Defined at:
  6417 ;;		line 69 in file "G:\Program\PIC\Source_File\OverTemperature_B1.c"
  6418 ;; Parameters:    Size  Location     Type
  6419 ;;  temp            1    wreg     unsigned char 
  6420 ;; Auto vars:     Size  Location     Type
  6421 ;;  temp            1   21[BANK0 ] unsigned char 
  6422 ;; Return value:  Size  Location     Type
  6423 ;;		None               void
  6424 ;; Registers used:
  6425 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6426 ;; Tracked objects:
  6427 ;;		On entry : 0/0
  6428 ;;		On exit  : 0/0
  6429 ;;		Unchanged: 0/0
  6430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  6431 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  6432 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  6433 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
  6434 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
  6435 ;;Total ram usage:        4 bytes
  6436 ;; Hardware stack levels used:    1
  6437 ;; Hardware stack levels required when called:    9
  6438 ;; This function calls:
  6439 ;;		_TempPointSelect
  6440 ;;		_getLoad_Safe
  6441 ;;		_getPF_Safe
  6442 ;;		_setOverTemp_ERROR
  6443 ;; This function is called by:
  6444 ;;		_Temp_Main
  6445 ;; This function uses a non-reentrant model
  6446 ;;
  6447                           psect	text4878
  6448                           	file	"G:\Program\PIC\Source_File\OverTemperature_B1.c"
  6449                           	line	69
  6450                           	global	__size_of_setTemp_Main
  6451  0169                     	__size_of_setTemp_Main	equ	__end_of_setTemp_Main-_setTemp_Main
  6452                           	
  6453  0689                     _setTemp_Main:	
  6454                           	opt	stack 5
  6455                           ; Regs used in _setTemp_Main: [wreg+fsr1l-status,0+pclath+cstack]
  6456                           ;setTemp_Main@temp stored from wreg
  6457  0689  0020               	movlb 0	; select bank0
  6458  068A  00B5               	movwf	(setTemp_Main@temp)
  6459                           	line	70
  6460                           	
  6461  068B                     l21902:	
  6462                           ;OverTemperature_B1.c: 70: TempPointSelect(temp);
  6463  068B  0835               	movf	(setTemp_Main@temp),w
  6464  068C  31AD  257E  3186   	fcall	_TempPointSelect
  6465                           	line	71
  6466                           	
  6467  068F                     l21904:	
  6468                           ;OverTemperature_B1.c: 71: if(Temp->Enable)
  6469  068F  0020               	movlb 0	; select bank0
  6470  0690  086E               	movf	(_Temp),w
  6471  0691  0086               	movwf	fsr1l
  6472  0692  3001               	movlw 1	; select bank2/3
  6473  0693  0087               	movwf fsr1h	
  6474                           	
  6475  0694  1C01               	btfss	indf1,0
  6476  0695  2E97               	goto	u10711
  6477  0696  2E98               	goto	u10710
  6478  0697                     u10711:
  6479  0697  2FF1               	goto	l10812
  6480  0698                     u10710:
  6481                           	line	73
  6482                           	
  6483  0698                     l21906:	
  6484                           ;OverTemperature_B1.c: 72: {
  6485                           ;OverTemperature_B1.c: 73: if(Temp->ADtoGO == 0)
  6486  0698  086E               	movf	(_Temp),w
  6487  0699  0086               	movwf	fsr1l
  6488  069A  3001               	movlw 1	; select bank2/3
  6489  069B  0087               	movwf fsr1h	
  6490                           	
  6491  069C  1901               	btfsc	indf1,2
  6492  069D  2E9F               	goto	u10721
  6493  069E  2EA0               	goto	u10720
  6494  069F                     u10721:
  6495  069F  2EF0               	goto	l21920
  6496  06A0                     u10720:
  6497                           	line	75
  6498                           	
  6499  06A0                     l21908:	
  6500                           ;OverTemperature_B1.c: 74: {
  6501                           ;OverTemperature_B1.c: 75: Temp->Time++;
  6502  06A0  086E               	movf	(_Temp),w
  6503  06A1  3E01               	addlw	01h
  6504  06A2  0086               	movwf	fsr1l
  6505  06A3  3001               	movlw 1	; select bank2/3
  6506  06A4  0087               	movwf fsr1h	
  6507                           	
  6508  06A5  3001               	movlw	01h
  6509  06A6  0781               	addwf	indf1,f
  6510  06A7  3141               	addfsr	fsr1,1
  6511  06A8  1803               	skipnc
  6512  06A9  0A81               	incf	indf1,f
  6513                           	line	76
  6514                           	
  6515  06AA                     l21910:	
  6516                           ;OverTemperature_B1.c: 76: if(Temp->Time >= 1000)
  6517  06AA  086E               	movf	(_Temp),w
  6518  06AB  3E01               	addlw	01h
  6519  06AC  0086               	movwf	fsr1l
  6520  06AD  3001               	movlw 1	; select bank2/3
  6521  06AE  0087               	movwf fsr1h	
  6522                           	
  6523  06AF  3F40               	moviw	[0]fsr1
  6524  06B0  00B2               	movwf	(??_setTemp_Main+0)+0
  6525  06B1  3F41               	moviw	[1]fsr1
  6526  06B2  00B3               	movwf	(??_setTemp_Main+0)+0+1
  6527  06B3  3003               	movlw	high(03E8h)
  6528  06B4  0233               	subwf	1+(??_setTemp_Main+0)+0,w
  6529  06B5  30E8               	movlw	low(03E8h)
  6530  06B6  1903               	skipnz
  6531  06B7  0232               	subwf	0+(??_setTemp_Main+0)+0,w
  6532  06B8  1C03               	skipc
  6533  06B9  2EBB               	goto	u10731
  6534  06BA  2EBC               	goto	u10730
  6535  06BB                     u10731:
  6536  06BB  2FF1               	goto	l10812
  6537  06BC                     u10730:
  6538                           	line	78
  6539                           	
  6540  06BC                     l21912:	
  6541                           ;OverTemperature_B1.c: 77: {
  6542                           ;OverTemperature_B1.c: 78: if(getLoad_Safe(1) && getPF_Safe(1))
  6543  06BC  3001               	movlw	(01h)
  6544  06BD  31A0  20B0  3186   	fcall	_getLoad_Safe
  6545  06C0  3A00               	xorlw	0&0ffh
  6546  06C1  1903               	skipnz
  6547  06C2  2EC4               	goto	u10741
  6548  06C3  2EC5               	goto	u10740
  6549  06C4                     u10741:
  6550  06C4  2EE3               	goto	l21918
  6551  06C5                     u10740:
  6552                           	
  6553  06C5                     l21914:	
  6554  06C5  3001               	movlw	(01h)
  6555  06C6  31AF  2732  3186   	fcall	_getPF_Safe
  6556  06C9  3A00               	xorlw	0&0ffh
  6557  06CA  1903               	skipnz
  6558  06CB  2ECD               	goto	u10751
  6559  06CC  2ECE               	goto	u10750
  6560  06CD                     u10751:
  6561  06CD  2EE3               	goto	l21918
  6562  06CE                     u10750:
  6563                           	line	80
  6564                           	
  6565  06CE                     l21916:	
  6566                           ;OverTemperature_B1.c: 79: {
  6567                           ;OverTemperature_B1.c: 80: Temp->Time=0;
  6568  06CE  0020               	movlb 0	; select bank0
  6569  06CF  086E               	movf	(_Temp),w
  6570  06D0  3E01               	addlw	01h
  6571  06D1  0086               	movwf	fsr1l
  6572  06D2  3001               	movlw 1	; select bank2/3
  6573  06D3  0087               	movwf fsr1h	
  6574                           	
  6575  06D4  3000               	movlw	low(0)
  6576  06D5  3FC0               	movwi	[0]fsr1
  6577  06D6  3000               	movlw	high(0)
  6578  06D7  3FC1               	movwi	[1]fsr1
  6579                           	line	81
  6580                           ;OverTemperature_B1.c: 81: Temp->ADtoGO=1;
  6581  06D8  086E               	movf	(_Temp),w
  6582  06D9  0086               	movwf	fsr1l
  6583  06DA  3001               	movlw 1	; select bank2/3
  6584  06DB  0087               	movwf fsr1h	
  6585                           	
  6586  06DC  1501               	bsf	indf1,2
  6587                           	line	82
  6588                           ;OverTemperature_B1.c: 82: Temp->Safe=0;
  6589  06DD  086E               	movf	(_Temp),w
  6590  06DE  0086               	movwf	fsr1l
  6591  06DF  3001               	movlw 1	; select bank2/3
  6592  06E0  0087               	movwf fsr1h	
  6593                           	
  6594  06E1  1201               	bcf	indf1,4
  6595                           	line	83
  6596                           ;OverTemperature_B1.c: 83: }
  6597  06E2  2FF1               	goto	l10812
  6598                           	line	84
  6599                           	
  6600  06E3                     l10799:	
  6601                           	line	86
  6602                           	
  6603  06E3                     l21918:	
  6604                           ;OverTemperature_B1.c: 84: else
  6605                           ;OverTemperature_B1.c: 85: {
  6606                           ;OverTemperature_B1.c: 86: Temp->Time=1000;
  6607  06E3  0020               	movlb 0	; select bank0
  6608  06E4  086E               	movf	(_Temp),w
  6609  06E5  3E01               	addlw	01h
  6610  06E6  0086               	movwf	fsr1l
  6611  06E7  3001               	movlw 1	; select bank2/3
  6612  06E8  0087               	movwf fsr1h	
  6613                           	
  6614  06E9  30E8               	movlw	low(03E8h)
  6615  06EA  3FC0               	movwi	[0]fsr1
  6616  06EB  3003               	movlw	high(03E8h)
  6617  06EC  3FC1               	movwi	[1]fsr1
  6618  06ED  2FF1               	goto	l10812
  6619                           	line	87
  6620                           	
  6621  06EE                     l10800:	
  6622  06EE  2FF1               	goto	l10812
  6623                           	line	88
  6624                           	
  6625  06EF                     l10798:	
  6626                           	line	89
  6627                           ;OverTemperature_B1.c: 87: }
  6628                           ;OverTemperature_B1.c: 88: }
  6629                           ;OverTemperature_B1.c: 89: }
  6630  06EF  2FF1               	goto	l10812
  6631                           	line	90
  6632                           	
  6633  06F0                     l10797:	
  6634                           	line	92
  6635                           	
  6636  06F0                     l21920:	
  6637                           ;OverTemperature_B1.c: 90: else
  6638                           ;OverTemperature_B1.c: 91: {
  6639                           ;OverTemperature_B1.c: 92: Temp->Time++;
  6640  06F0  086E               	movf	(_Temp),w
  6641  06F1  3E01               	addlw	01h
  6642  06F2  0086               	movwf	fsr1l
  6643  06F3  3001               	movlw 1	; select bank2/3
  6644  06F4  0087               	movwf fsr1h	
  6645                           	
  6646  06F5  3001               	movlw	01h
  6647  06F6  0781               	addwf	indf1,f
  6648  06F7  3141               	addfsr	fsr1,1
  6649  06F8  1803               	skipnc
  6650  06F9  0A81               	incf	indf1,f
  6651                           	line	93
  6652                           	
  6653  06FA                     l21922:	
  6654                           ;OverTemperature_B1.c: 93: if(Temp->Time >= 7)
  6655  06FA  086E               	movf	(_Temp),w
  6656  06FB  3E01               	addlw	01h
  6657  06FC  0086               	movwf	fsr1l
  6658  06FD  3001               	movlw 1	; select bank2/3
  6659  06FE  0087               	movwf fsr1h	
  6660                           	
  6661  06FF  3F40               	moviw	[0]fsr1
  6662  0700  00B2               	movwf	(??_setTemp_Main+0)+0
  6663  0701  3F41               	moviw	[1]fsr1
  6664  0702  00B3               	movwf	(??_setTemp_Main+0)+0+1
  6665  0703  3000               	movlw	high(07h)
  6666  0704  0233               	subwf	1+(??_setTemp_Main+0)+0,w
  6667  0705  3007               	movlw	low(07h)
  6668  0706  1903               	skipnz
  6669  0707  0232               	subwf	0+(??_setTemp_Main+0)+0,w
  6670  0708  1C03               	skipc
  6671  0709  2F0B               	goto	u10761
  6672  070A  2F0C               	goto	u10760
  6673  070B                     u10761:
  6674  070B  2FF1               	goto	l10812
  6675  070C                     u10760:
  6676                           	line	95
  6677                           	
  6678  070C                     l21924:	
  6679                           ;OverTemperature_B1.c: 94: {
  6680                           ;OverTemperature_B1.c: 95: Temp->Time=0;
  6681  070C  086E               	movf	(_Temp),w
  6682  070D  3E01               	addlw	01h
  6683  070E  0086               	movwf	fsr1l
  6684  070F  3001               	movlw 1	; select bank2/3
  6685  0710  0087               	movwf fsr1h	
  6686                           	
  6687  0711  3000               	movlw	low(0)
  6688  0712  3FC0               	movwi	[0]fsr1
  6689  0713  3000               	movlw	high(0)
  6690  0714  3FC1               	movwi	[1]fsr1
  6691                           	line	96
  6692                           ;OverTemperature_B1.c: 96: Temp->ADtoGO=0;
  6693  0715  086E               	movf	(_Temp),w
  6694  0716  0086               	movwf	fsr1l
  6695  0717  3001               	movlw 1	; select bank2/3
  6696  0718  0087               	movwf fsr1h	
  6697                           	
  6698  0719  1101               	bcf	indf1,2
  6699                           	line	97
  6700                           ;OverTemperature_B1.c: 97: Temp->AD=Temp->ADH[1];
  6701  071A  086E               	movf	(_Temp),w
  6702  071B  3E08               	addlw	08h
  6703  071C  0086               	movwf	fsr1l
  6704  071D  3001               	movlw 1	; select bank2/3
  6705  071E  0087               	movwf fsr1h	
  6706                           	
  6707  071F  3F40               	moviw	[0]fsr1
  6708  0720  00B2               	movwf	(??_setTemp_Main+0)+0
  6709  0721  3F41               	moviw	[1]fsr1
  6710  0722  00B3               	movwf	(??_setTemp_Main+0)+0+1
  6711  0723  086E               	movf	(_Temp),w
  6712  0724  3E04               	addlw	04h
  6713  0725  0086               	movwf	fsr1l
  6714  0726  3001               	movlw 1	; select bank2/3
  6715  0727  0087               	movwf fsr1h	
  6716                           	
  6717  0728  0832               	movf	0+(??_setTemp_Main+0)+0,w
  6718  0729  3FC0               	movwi	[0]fsr1
  6719  072A  0833               	movf	1+(??_setTemp_Main+0)+0,w
  6720  072B  3FC1               	movwi	[1]fsr1
  6721                           	line	98
  6722                           ;OverTemperature_B1.c: 98: if(Temp->ERROR)
  6723  072C  086E               	movf	(_Temp),w
  6724  072D  0086               	movwf	fsr1l
  6725  072E  3001               	movlw 1	; select bank2/3
  6726  072F  0087               	movwf fsr1h	
  6727                           	
  6728  0730  1C81               	btfss	indf1,1
  6729  0731  2F33               	goto	u10771
  6730  0732  2F34               	goto	u10770
  6731  0733                     u10771:
  6732  0733  2F70               	goto	l21938
  6733  0734                     u10770:
  6734                           	line	100
  6735                           	
  6736  0734                     l21926:	
  6737                           ;OverTemperature_B1.c: 99: {
  6738                           ;OverTemperature_B1.c: 100: if(Temp->AD >= 540)
  6739  0734  086E               	movf	(_Temp),w
  6740  0735  3E04               	addlw	04h
  6741  0736  0086               	movwf	fsr1l
  6742  0737  3001               	movlw 1	; select bank2/3
  6743  0738  0087               	movwf fsr1h	
  6744                           	
  6745  0739  3F40               	moviw	[0]fsr1
  6746  073A  00B2               	movwf	(??_setTemp_Main+0)+0
  6747  073B  3F41               	moviw	[1]fsr1
  6748  073C  00B3               	movwf	(??_setTemp_Main+0)+0+1
  6749  073D  3002               	movlw	high(021Ch)
  6750  073E  0233               	subwf	1+(??_setTemp_Main+0)+0,w
  6751  073F  301C               	movlw	low(021Ch)
  6752  0740  1903               	skipnz
  6753  0741  0232               	subwf	0+(??_setTemp_Main+0)+0,w
  6754  0742  1C03               	skipc
  6755  0743  2F45               	goto	u10781
  6756  0744  2F46               	goto	u10780
  6757  0745                     u10781:
  6758  0745  2F67               	goto	l21936
  6759  0746                     u10780:
  6760                           	line	102
  6761                           	
  6762  0746                     l21928:	
  6763                           ;OverTemperature_B1.c: 101: {
  6764                           ;OverTemperature_B1.c: 102: Temp->Count++;
  6765  0746  3001               	movlw	(01h)
  6766  0747  00B2               	movwf	(??_setTemp_Main+0)+0
  6767  0748  086E               	movf	(_Temp),w
  6768  0749  3E03               	addlw	03h
  6769  074A  0086               	movwf	fsr1l
  6770  074B  3001               	movlw 1	; select bank2/3
  6771  074C  0087               	movwf fsr1h	
  6772                           	
  6773  074D  0832               	movf	(??_setTemp_Main+0)+0,w
  6774  074E  0781               	addwf	indf1,f
  6775                           	line	103
  6776                           	
  6777  074F                     l21930:	
  6778                           ;OverTemperature_B1.c: 103: if(Temp->Count >= 3)
  6779  074F  086E               	movf	(_Temp),w
  6780  0750  3E03               	addlw	03h
  6781  0751  0086               	movwf	fsr1l
  6782  0752  3001               	movlw 1	; select bank2/3
  6783  0753  0087               	movwf fsr1h	
  6784                           	
  6785  0754  3003               	movlw	(03h)
  6786  0755  0201               	subwf	indf1,w
  6787  0756  1C03               	skipc
  6788  0757  2F59               	goto	u10791
  6789  0758  2F5A               	goto	u10790
  6790  0759                     u10791:
  6791  0759  2FAD               	goto	l10807
  6792  075A                     u10790:
  6793                           	line	105
  6794                           	
  6795  075A                     l21932:	
  6796                           ;OverTemperature_B1.c: 104: {
  6797                           ;OverTemperature_B1.c: 105: Temp->Count=0;
  6798  075A  086E               	movf	(_Temp),w
  6799  075B  3E03               	addlw	03h
  6800  075C  0086               	movwf	fsr1l
  6801  075D  3001               	movlw 1	; select bank2/3
  6802  075E  0087               	movwf fsr1h	
  6803                           	
  6804  075F  0181               	clrf	indf1
  6805                           	line	106
  6806                           	
  6807  0760                     l21934:	
  6808                           ;OverTemperature_B1.c: 106: setOverTemp_ERROR(1,0);
  6809  0760  01AF               	clrf	(?_setOverTemp_ERROR)
  6810  0761  3001               	movlw	(01h)
  6811  0762  319C  24B2  3186   	fcall	_setOverTemp_ERROR
  6812  0765  2FAD               	goto	l10807
  6813                           	line	107
  6814                           	
  6815  0766                     l10805:	
  6816                           	line	108
  6817                           ;OverTemperature_B1.c: 107: }
  6818                           ;OverTemperature_B1.c: 108: }
  6819  0766  2FAD               	goto	l10807
  6820                           	line	109
  6821                           	
  6822  0767                     l10804:	
  6823                           	line	111
  6824                           	
  6825  0767                     l21936:	
  6826                           ;OverTemperature_B1.c: 109: else
  6827                           ;OverTemperature_B1.c: 110: {
  6828                           ;OverTemperature_B1.c: 111: Temp->Count=0;
  6829  0767  0020               	movlb 0	; select bank0
  6830  0768  086E               	movf	(_Temp),w
  6831  0769  3E03               	addlw	03h
  6832  076A  0086               	movwf	fsr1l
  6833  076B  3001               	movlw 1	; select bank2/3
  6834  076C  0087               	movwf fsr1h	
  6835                           	
  6836  076D  0181               	clrf	indf1
  6837  076E  2FAD               	goto	l10807
  6838                           	line	112
  6839                           	
  6840  076F                     l10806:	
  6841                           	line	113
  6842                           ;OverTemperature_B1.c: 112: }
  6843                           ;OverTemperature_B1.c: 113: }
  6844  076F  2FAD               	goto	l10807
  6845                           	line	114
  6846                           	
  6847  0770                     l10803:	
  6848                           	line	116
  6849                           	
  6850  0770                     l21938:	
  6851                           ;OverTemperature_B1.c: 114: else
  6852                           ;OverTemperature_B1.c: 115: {
  6853                           ;OverTemperature_B1.c: 116: if(Temp->AD <= 475)
  6854  0770  086E               	movf	(_Temp),w
  6855  0771  3E04               	addlw	04h
  6856  0772  0086               	movwf	fsr1l
  6857  0773  3001               	movlw 1	; select bank2/3
  6858  0774  0087               	movwf fsr1h	
  6859                           	
  6860  0775  3F40               	moviw	[0]fsr1
  6861  0776  00B2               	movwf	(??_setTemp_Main+0)+0
  6862  0777  3F41               	moviw	[1]fsr1
  6863  0778  00B3               	movwf	(??_setTemp_Main+0)+0+1
  6864  0779  3001               	movlw	high(01DCh)
  6865  077A  0233               	subwf	1+(??_setTemp_Main+0)+0,w
  6866  077B  30DC               	movlw	low(01DCh)
  6867  077C  1903               	skipnz
  6868  077D  0232               	subwf	0+(??_setTemp_Main+0)+0,w
  6869  077E  1803               	skipnc
  6870  077F  2F81               	goto	u10801
  6871  0780  2F82               	goto	u10800
  6872  0781                     u10801:
  6873  0781  2FA5               	goto	l21948
  6874  0782                     u10800:
  6875                           	line	118
  6876                           	
  6877  0782                     l21940:	
  6878                           ;OverTemperature_B1.c: 117: {
  6879                           ;OverTemperature_B1.c: 118: Temp->Count++;
  6880  0782  3001               	movlw	(01h)
  6881  0783  00B2               	movwf	(??_setTemp_Main+0)+0
  6882  0784  086E               	movf	(_Temp),w
  6883  0785  3E03               	addlw	03h
  6884  0786  0086               	movwf	fsr1l
  6885  0787  3001               	movlw 1	; select bank2/3
  6886  0788  0087               	movwf fsr1h	
  6887                           	
  6888  0789  0832               	movf	(??_setTemp_Main+0)+0,w
  6889  078A  0781               	addwf	indf1,f
  6890                           	line	119
  6891                           	
  6892  078B                     l21942:	
  6893                           ;OverTemperature_B1.c: 119: if(Temp->Count >= 3)
  6894  078B  086E               	movf	(_Temp),w
  6895  078C  3E03               	addlw	03h
  6896  078D  0086               	movwf	fsr1l
  6897  078E  3001               	movlw 1	; select bank2/3
  6898  078F  0087               	movwf fsr1h	
  6899                           	
  6900  0790  3003               	movlw	(03h)
  6901  0791  0201               	subwf	indf1,w
  6902  0792  1C03               	skipc
  6903  0793  2F95               	goto	u10811
  6904  0794  2F96               	goto	u10810
  6905  0795                     u10811:
  6906  0795  2FAD               	goto	l10807
  6907  0796                     u10810:
  6908                           	line	121
  6909                           	
  6910  0796                     l21944:	
  6911                           ;OverTemperature_B1.c: 120: {
  6912                           ;OverTemperature_B1.c: 121: Temp->Count=0;
  6913  0796  086E               	movf	(_Temp),w
  6914  0797  3E03               	addlw	03h
  6915  0798  0086               	movwf	fsr1l
  6916  0799  3001               	movlw 1	; select bank2/3
  6917  079A  0087               	movwf fsr1h	
  6918                           	
  6919  079B  0181               	clrf	indf1
  6920                           	line	122
  6921                           	
  6922  079C                     l21946:	
  6923                           ;OverTemperature_B1.c: 122: setOverTemp_ERROR(1,1);
  6924  079C  01AF               	clrf	(?_setOverTemp_ERROR)
  6925  079D  1403               	bsf	status,0
  6926  079E  0DAF               	rlf	(?_setOverTemp_ERROR),f
  6927  079F  3001               	movlw	(01h)
  6928  07A0  319C  24B2  3186   	fcall	_setOverTemp_ERROR
  6929  07A3  2FAD               	goto	l10807
  6930                           	line	123
  6931                           	
  6932  07A4                     l10809:	
  6933                           	line	124
  6934                           ;OverTemperature_B1.c: 123: }
  6935                           ;OverTemperature_B1.c: 124: }
  6936  07A4  2FAD               	goto	l10807
  6937                           	line	125
  6938                           	
  6939  07A5                     l10808:	
  6940                           	line	127
  6941                           	
  6942  07A5                     l21948:	
  6943                           ;OverTemperature_B1.c: 125: else
  6944                           ;OverTemperature_B1.c: 126: {
  6945                           ;OverTemperature_B1.c: 127: Temp->Count=0;
  6946  07A5  0020               	movlb 0	; select bank0
  6947  07A6  086E               	movf	(_Temp),w
  6948  07A7  3E03               	addlw	03h
  6949  07A8  0086               	movwf	fsr1l
  6950  07A9  3001               	movlw 1	; select bank2/3
  6951  07AA  0087               	movwf fsr1h	
  6952                           	
  6953  07AB  0181               	clrf	indf1
  6954  07AC  2FAD               	goto	l10807
  6955                           	line	128
  6956                           	
  6957  07AD                     l10810:	
  6958                           	line	129
  6959                           	
  6960  07AD                     l10807:	
  6961                           	line	130
  6962                           ;OverTemperature_B1.c: 128: }
  6963                           ;OverTemperature_B1.c: 129: }
  6964                           ;OverTemperature_B1.c: 130: if(Temp->ERROR == 0)
  6965  07AD  0020               	movlb 0	; select bank0
  6966  07AE  086E               	movf	(_Temp),w
  6967  07AF  0086               	movwf	fsr1l
  6968  07B0  3001               	movlw 1	; select bank2/3
  6969  07B1  0087               	movwf fsr1h	
  6970                           	
  6971  07B2  1881               	btfsc	indf1,1
  6972  07B3  2FB5               	goto	u10821
  6973  07B4  2FB6               	goto	u10820
  6974  07B5                     u10821:
  6975  07B5  2FBC               	goto	l21952
  6976  07B6                     u10820:
  6977                           	line	132
  6978                           	
  6979  07B6                     l21950:	
  6980                           ;OverTemperature_B1.c: 131: {
  6981                           ;OverTemperature_B1.c: 132: Temp->Safe=1;
  6982  07B6  086E               	movf	(_Temp),w
  6983  07B7  0086               	movwf	fsr1l
  6984  07B8  3001               	movlw 1	; select bank2/3
  6985  07B9  0087               	movwf fsr1h	
  6986                           	
  6987  07BA  1601               	bsf	indf1,4
  6988  07BB  2FBC               	goto	l21952
  6989                           	line	133
  6990                           	
  6991  07BC                     l10811:	
  6992                           	line	134
  6993                           	
  6994  07BC                     l21952:	
  6995                           ;OverTemperature_B1.c: 133: }
  6996                           ;OverTemperature_B1.c: 134: Product->Data[24]=Temp->AD >> 8;
  6997  07BC  086E               	movf	(_Temp),w
  6998  07BD  3E04               	addlw	04h
  6999  07BE  0086               	movwf	fsr1l
  7000  07BF  3001               	movlw 1	; select bank2/3
  7001  07C0  0087               	movwf fsr1h	
  7002                           	
  7003  07C1  3F40               	moviw	[0]fsr1
  7004  07C2  00B2               	movwf	(??_setTemp_Main+0)+0
  7005  07C3  3F41               	moviw	[1]fsr1
  7006  07C4  00B3               	movwf	(??_setTemp_Main+0)+0+1
  7007  07C5  0833               	movf	1+(??_setTemp_Main+0)+0,w
  7008  07C6  00B4               	movwf	(??_setTemp_Main+2)+0
  7009  07C7  086F               	movf	(_Product),w
  7010  07C8  3E18               	addlw	018h
  7011  07C9  0086               	movwf	fsr1l
  7012  07CA  3001               	movlw 1	; select bank2/3
  7013  07CB  0087               	movwf fsr1h	
  7014                           	
  7015  07CC  0834               	movf	(??_setTemp_Main+2)+0,w
  7016  07CD  0081               	movwf	indf1
  7017                           	line	135
  7018                           	
  7019  07CE                     l21954:	
  7020                           ;OverTemperature_B1.c: 135: Product->Data[25]=Temp->AD;
  7021  07CE  086E               	movf	(_Temp),w
  7022  07CF  3E04               	addlw	04h
  7023  07D0  0086               	movwf	fsr1l
  7024  07D1  3001               	movlw 1	; select bank2/3
  7025  07D2  0087               	movwf fsr1h	
  7026                           	
  7027  07D3  0801               	movf	indf1,w
  7028  07D4  00B2               	movwf	(??_setTemp_Main+0)+0
  7029  07D5  086F               	movf	(_Product),w
  7030  07D6  3E19               	addlw	019h
  7031  07D7  0086               	movwf	fsr1l
  7032  07D8  3001               	movlw 1	; select bank2/3
  7033  07D9  0087               	movwf fsr1h	
  7034                           	
  7035  07DA  0832               	movf	(??_setTemp_Main+0)+0,w
  7036  07DB  0081               	movwf	indf1
  7037                           	line	136
  7038                           	
  7039  07DC                     l21956:	
  7040                           ;OverTemperature_B1.c: 136: Temp->ADH[0]=0;
  7041  07DC  086E               	movf	(_Temp),w
  7042  07DD  3E06               	addlw	06h
  7043  07DE  0086               	movwf	fsr1l
  7044  07DF  3001               	movlw 1	; select bank2/3
  7045  07E0  0087               	movwf fsr1h	
  7046                           	
  7047  07E1  3000               	movlw	low(0)
  7048  07E2  3FC0               	movwi	[0]fsr1
  7049  07E3  3000               	movlw	high(0)
  7050  07E4  3FC1               	movwi	[1]fsr1
  7051                           	line	137
  7052                           	
  7053  07E5                     l21958:	
  7054                           ;OverTemperature_B1.c: 137: Temp->ADH[1]=0;
  7055  07E5  086E               	movf	(_Temp),w
  7056  07E6  3E08               	addlw	08h
  7057  07E7  0086               	movwf	fsr1l
  7058  07E8  3001               	movlw 1	; select bank2/3
  7059  07E9  0087               	movwf fsr1h	
  7060                           	
  7061  07EA  3000               	movlw	low(0)
  7062  07EB  3FC0               	movwi	[0]fsr1
  7063  07EC  3000               	movlw	high(0)
  7064  07ED  3FC1               	movwi	[1]fsr1
  7065  07EE  2FF1               	goto	l10812
  7066                           	line	138
  7067                           	
  7068  07EF                     l10802:	
  7069  07EF  2FF1               	goto	l10812
  7070                           	line	139
  7071                           	
  7072  07F0                     l10801:	
  7073  07F0  2FF1               	goto	l10812
  7074                           	line	140
  7075                           	
  7076  07F1                     l10796:	
  7077                           	line	141
  7078                           	
  7079  07F1                     l10812:	
  7080  07F1  0008               	return
  7081                           	opt stack 0
  7082                           GLOBAL	__end_of_setTemp_Main
  7083  07F2                     	__end_of_setTemp_Main:
  7084 ;; =============== function _setTemp_Main ends ============
  7085                           
  7086                           	signat	_setTemp_Main,4216
  7087                           	global	_setLoad_Main
  7088                           psect	text4879,local,class=CODE,delta=2
  7089                           global __ptext4879
  7090  0018                     __ptext4879:
  7091                           
  7092 ;; *************** function _setLoad_Main *****************
  7093 ;; Defined at:
  7094 ;;		line 69 in file "G:\Program\PIC\Source_File\OverLoad_B1.c"
  7095 ;; Parameters:    Size  Location     Type
  7096 ;;  load            1    wreg     unsigned char 
  7097 ;; Auto vars:     Size  Location     Type
  7098 ;;  load            1   22[BANK0 ] unsigned char 
  7099 ;;  i               1    0        unsigned char 
  7100 ;; Return value:  Size  Location     Type
  7101 ;;		None               void
  7102 ;; Registers used:
  7103 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7104 ;; Tracked objects:
  7105 ;;		On entry : 0/0
  7106 ;;		On exit  : 0/0
  7107 ;;		Unchanged: 0/0
  7108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  7109 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  7110 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  7111 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
  7112 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
       0       0
  7113 ;;Total ram usage:        5 bytes
  7114 ;; Hardware stack levels used:    1
  7115 ;; Hardware stack levels required when called:    9
  7116 ;; This function calls:
  7117 ;;		_LoadPointSelect
  7118 ;;		_setLoad_ERROR
  7119 ;;		___lwdiv
  7120 ;;		___wmul
  7121 ;;		_setDimmerLights_Open
  7122 ;;		_setLoad_AH_AL_Restore
  7123 ;;		_getTemp_Safe
  7124 ;;		_getPF_Safe
  7125 ;; This function is called by:
  7126 ;;		_Load_Main
  7127 ;; This function uses a non-reentrant model
  7128 ;;
  7129                           psect	text4879
  7130                           	file	"G:\Program\PIC\Source_File\OverLoad_B1.c"
  7131                           	line	69
  7132                           	global	__size_of_setLoad_Main
  7133  0312                     	__size_of_setLoad_Main	equ	__end_of_setLoad_Main-_setLoad_Main
  7134                           	
  7135  0018                     _setLoad_Main:	
  7136                           	opt	stack 5
  7137                           ; Regs used in _setLoad_Main: [wreg-status,0+pclath+cstack]
  7138                           ;setLoad_Main@load stored from wreg
  7139                           	line	71
  7140  0018  0020               	movlb 0	; select bank0
  7141  0019  00B6               	movwf	(setLoad_Main@load)
  7142                           	
  7143  001A                     l21806:	
  7144                           ;OverLoad_B1.c: 70: char i;
  7145                           ;OverLoad_B1.c: 71: LoadPointSelect(load);
  7146  001A  0836               	movf	(setLoad_Main@load),w
  7147  001B  31AE  2692  3180   	fcall	_LoadPointSelect
  7148                           	line	72
  7149                           	
  7150  001E                     l21808:	
  7151                           ;OverLoad_B1.c: 72: if(Load->ERROR)
  7152  001E  0020               	movlb 0	; select bank0
  7153  001F  086B               	movf	(_Load),w
  7154  0020  0086               	movwf	fsr1l
  7155  0021  3002               	movlw 2	; select bank4/5
  7156  0022  0087               	movwf fsr1h	
  7157                           	
  7158  0023  1E81               	btfss	indf1,5
  7159  0024  2826               	goto	u10501
  7160  0025  2827               	goto	u10500
  7161  0026                     u10501:
  7162  0026  2853               	goto	l21818
  7163  0027                     u10500:
  7164                           	line	74
  7165                           	
  7166  0027                     l21810:	
  7167                           ;OverLoad_B1.c: 73: {
  7168                           ;OverLoad_B1.c: 74: Load->ErrorTime++;
  7169  0027  086B               	movf	(_Load),w
  7170  0028  3E03               	addlw	03h
  7171  0029  0086               	movwf	fsr1l
  7172  002A  3002               	movlw 2	; select bank4/5
  7173  002B  0087               	movwf fsr1h	
  7174                           	
  7175  002C  3001               	movlw	01h
  7176  002D  0781               	addwf	indf1,f
  7177  002E  3141               	addfsr	fsr1,1
  7178  002F  1803               	skipnc
  7179  0030  0A81               	incf	indf1,f
  7180                           	line	75
  7181                           	
  7182  0031                     l21812:	
  7183                           ;OverLoad_B1.c: 75: if(Load->ErrorTime >= 2000)
  7184  0031  086B               	movf	(_Load),w
  7185  0032  3E03               	addlw	03h
  7186  0033  0086               	movwf	fsr1l
  7187  0034  3002               	movlw 2	; select bank4/5
  7188  0035  0087               	movwf fsr1h	
  7189                           	
  7190  0036  3F40               	moviw	[0]fsr1
  7191  0037  00B2               	movwf	(??_setLoad_Main+0)+0
  7192  0038  3F41               	moviw	[1]fsr1
  7193  0039  00B3               	movwf	(??_setLoad_Main+0)+0+1
  7194  003A  3007               	movlw	high(07D0h)
  7195  003B  0233               	subwf	1+(??_setLoad_Main+0)+0,w
  7196  003C  30D0               	movlw	low(07D0h)
  7197  003D  1903               	skipnz
  7198  003E  0232               	subwf	0+(??_setLoad_Main+0)+0,w
  7199  003F  1C03               	skipc
  7200  0040  2842               	goto	u10511
  7201  0041  2843               	goto	u10510
  7202  0042                     u10511:
  7203  0042  2B29               	goto	l9598
  7204  0043                     u10510:
  7205                           	line	77
  7206                           	
  7207  0043                     l21814:	
  7208                           ;OverLoad_B1.c: 76: {
  7209                           ;OverLoad_B1.c: 77: Load->ErrorTime=0;
  7210  0043  086B               	movf	(_Load),w
  7211  0044  3E03               	addlw	03h
  7212  0045  0086               	movwf	fsr1l
  7213  0046  3002               	movlw 2	; select bank4/5
  7214  0047  0087               	movwf fsr1h	
  7215                           	
  7216  0048  3000               	movlw	low(0)
  7217  0049  3FC0               	movwi	[0]fsr1
  7218  004A  3000               	movlw	high(0)
  7219  004B  3FC1               	movwi	[1]fsr1
  7220                           	line	78
  7221                           	
  7222  004C                     l21816:	
  7223                           ;OverLoad_B1.c: 78: setLoad_ERROR(load,0);
  7224  004C  01AF               	clrf	(?_setLoad_ERROR)
  7225  004D  0836               	movf	(setLoad_Main@load),w
  7226  004E  319D  2594  3180   	fcall	_setLoad_ERROR
  7227  0051  2B29               	goto	l9598
  7228                           	line	79
  7229                           	
  7230  0052                     l9574:	
  7231                           	line	80
  7232                           ;OverLoad_B1.c: 79: }
  7233                           ;OverLoad_B1.c: 80: }
  7234  0052  2B29               	goto	l9598
  7235                           	line	81
  7236                           	
  7237  0053                     l9573:	
  7238                           	line	83
  7239                           	
  7240  0053                     l21818:	
  7241                           ;OverLoad_B1.c: 81: else
  7242                           ;OverLoad_B1.c: 82: {
  7243                           ;OverLoad_B1.c: 83: if(Load->ADtoGO)
  7244  0053  0020               	movlb 0	; select bank0
  7245  0054  086B               	movf	(_Load),w
  7246  0055  0086               	movwf	fsr1l
  7247  0056  3002               	movlw 2	; select bank4/5
  7248  0057  0087               	movwf fsr1h	
  7249                           	
  7250  0058  1E01               	btfss	indf1,4
  7251  0059  285B               	goto	u10521
  7252  005A  285C               	goto	u10520
  7253  005B                     u10521:
  7254  005B  2AAA               	goto	l21882
  7255  005C                     u10520:
  7256                           	line	85
  7257                           	
  7258  005C                     l21820:	
  7259                           ;OverLoad_B1.c: 84: {
  7260                           ;OverLoad_B1.c: 85: Load->LightsCount=Load->Lights1Status+Load->Lights2Status+Load->Ligh
                                 ts3Status;
  7261  005C  086B               	movf	(_Load),w
  7262  005D  3E45               	addlw	045h
  7263  005E  0086               	movwf	fsr1l
  7264  005F  3002               	movlw 2	; select bank4/5
  7265  0060  0087               	movwf fsr1h	
  7266                           	
  7267  0061  086B               	movf	(_Load),w
  7268  0062  3E44               	addlw	044h
  7269  0063  0084               	movwf	fsr0l
  7270  0064  3002               	movlw 2	; select bank4/5
  7271  0065  0085               	movwf fsr0h	
  7272                           	
  7273  0066  0800               	movf	indf0,w
  7274  0067  00B2               	movwf	(??_setLoad_Main+0)+0
  7275  0068  086B               	movf	(_Load),w
  7276  0069  3E43               	addlw	043h
  7277  006A  0084               	movwf	fsr0l
  7278  006B  3002               	movlw 2	; select bank4/5
  7279  006C  0085               	movwf fsr0h	
  7280                           	
  7281  006D  0800               	movf	indf0,w
  7282  006E  0732               	addwf	(??_setLoad_Main+0)+0,w
  7283  006F  0701               	addwf	indf1,w
  7284  0070  00B3               	movwf	(??_setLoad_Main+1)+0
  7285  0071  086B               	movf	(_Load),w
  7286  0072  3E3E               	addlw	03Eh
  7287  0073  0086               	movwf	fsr1l
  7288  0074  3002               	movlw 2	; select bank4/5
  7289  0075  0087               	movwf fsr1h	
  7290                           	
  7291  0076  0833               	movf	(??_setLoad_Main+1)+0,w
  7292  0077  0081               	movwf	indf1
  7293                           	line	86
  7294                           	
  7295  0078                     l21822:	
  7296                           ;OverLoad_B1.c: 86: Load->Time++;
  7297  0078  086B               	movf	(_Load),w
  7298  0079  3E01               	addlw	01h
  7299  007A  0086               	movwf	fsr1l
  7300  007B  3002               	movlw 2	; select bank4/5
  7301  007C  0087               	movwf fsr1h	
  7302                           	
  7303  007D  3001               	movlw	01h
  7304  007E  0781               	addwf	indf1,f
  7305  007F  3141               	addfsr	fsr1,1
  7306  0080  1803               	skipnc
  7307  0081  0A81               	incf	indf1,f
  7308                           	line	87
  7309                           	
  7310  0082                     l21824:	
  7311                           ;OverLoad_B1.c: 87: if(Load->Time >= 7)
  7312  0082  086B               	movf	(_Load),w
  7313  0083  3E01               	addlw	01h
  7314  0084  0086               	movwf	fsr1l
  7315  0085  3002               	movlw 2	; select bank4/5
  7316  0086  0087               	movwf fsr1h	
  7317                           	
  7318  0087  3F40               	moviw	[0]fsr1
  7319  0088  00B2               	movwf	(??_setLoad_Main+0)+0
  7320  0089  3F41               	moviw	[1]fsr1
  7321  008A  00B3               	movwf	(??_setLoad_Main+0)+0+1
  7322  008B  3000               	movlw	high(07h)
  7323  008C  0233               	subwf	1+(??_setLoad_Main+0)+0,w
  7324  008D  3007               	movlw	low(07h)
  7325  008E  1903               	skipnz
  7326  008F  0232               	subwf	0+(??_setLoad_Main+0)+0,w
  7327  0090  1C03               	skipc
  7328  0091  2893               	goto	u10531
  7329  0092  2894               	goto	u10530
  7330  0093                     u10531:
  7331  0093  2B29               	goto	l9598
  7332  0094                     u10530:
  7333                           	line	89
  7334                           	
  7335  0094                     l21826:	
  7336                           ;OverLoad_B1.c: 88: {
  7337                           ;OverLoad_B1.c: 89: Load->Time=0;
  7338  0094  086B               	movf	(_Load),w
  7339  0095  3E01               	addlw	01h
  7340  0096  0086               	movwf	fsr1l
  7341  0097  3002               	movlw 2	; select bank4/5
  7342  0098  0087               	movwf fsr1h	
  7343                           	
  7344  0099  3000               	movlw	low(0)
  7345  009A  3FC0               	movwi	[0]fsr1
  7346  009B  3000               	movlw	high(0)
  7347  009C  3FC1               	movwi	[1]fsr1
  7348                           	line	90
  7349                           ;OverLoad_B1.c: 90: Load->ADtoGO=0;
  7350  009D  086B               	movf	(_Load),w
  7351  009E  0086               	movwf	fsr1l
  7352  009F  3002               	movlw 2	; select bank4/5
  7353  00A0  0087               	movwf fsr1h	
  7354                           	
  7355  00A1  1201               	bcf	indf1,4
  7356                           	line	91
  7357                           	
  7358  00A2                     l21828:	
  7359                           ;OverLoad_B1.c: 91: Load->ADH=((Load->AH[2]+Load->AH[3]+Load->AH[4])/3);
  7360  00A2  3003               	movlw	low(03h)
  7361  00A3  00A0               	movwf	(?___lwdiv)
  7362  00A4  3000               	movlw	high(03h)
  7363  00A5  00A1               	movwf	((?___lwdiv))+1
  7364  00A6  086B               	movf	(_Load),w
  7365  00A7  3E10               	addlw	010h
  7366  00A8  0086               	movwf	fsr1l
  7367  00A9  3002               	movlw 2	; select bank4/5
  7368  00AA  0087               	movwf fsr1h	
  7369                           	
  7370  00AB  086B               	movf	(_Load),w
  7371  00AC  3E0C               	addlw	0Ch
  7372  00AD  0084               	movwf	fsr0l
  7373  00AE  3002               	movlw 2	; select bank4/5
  7374  00AF  0085               	movwf fsr0h	
  7375                           	
  7376  00B0  3F00               	moviw	[0]fsr0
  7377  00B1  00B2               	movwf	(??_setLoad_Main+0)+0
  7378  00B2  3F01               	moviw	[1]fsr0
  7379  00B3  00B3               	movwf	(??_setLoad_Main+0)+0+1
  7380  00B4  086B               	movf	(_Load),w
  7381  00B5  3E0E               	addlw	0Eh
  7382  00B6  0084               	movwf	fsr0l
  7383  00B7  3002               	movlw 2	; select bank4/5
  7384  00B8  0085               	movwf fsr0h	
  7385                           	
  7386  00B9  3F00               	moviw	[0]fsr0
  7387  00BA  0732               	addwf	0+(??_setLoad_Main+0)+0,w
  7388  00BB  00B4               	movwf	(??_setLoad_Main+2)+0
  7389  00BC  3F01               	moviw	[1]fsr0
  7390  00BD  3D33               	addwfc	1+(??_setLoad_Main+0)+0,w
  7391  00BE  00B5               	movwf	(??_setLoad_Main+2)+0+1
  7392  00BF  3F40               	moviw	[0]fsr1
  7393  00C0  0734               	addwf	0+(??_setLoad_Main+2)+0,w
  7394  00C1  00A2               	movwf	0+(?___lwdiv)+02h
  7395  00C2  3F41               	moviw	[1]fsr1
  7396  00C3  3D35               	addwfc	1+(??_setLoad_Main+2)+0,w
  7397  00C4  00A3               	movwf	0+(?___lwdiv)+02h+1
  7398  00C5  31A7  27B9  3180   	fcall	___lwdiv
  7399  00C8  0020               	movlb 0	; select bank0
  7400  00C9  086B               	movf	(_Load),w
  7401  00CA  3E2E               	addlw	02Eh
  7402  00CB  0086               	movwf	fsr1l
  7403  00CC  3002               	movlw 2	; select bank4/5
  7404  00CD  0087               	movwf fsr1h	
  7405                           	
  7406  00CE  0820               	movf	(0+(?___lwdiv)),w
  7407  00CF  3FC0               	movwi	[0]fsr1
  7408  00D0  0821               	movf	(1+(?___lwdiv)),w
  7409  00D1  3FC1               	movwi	[1]fsr1
  7410                           	line	92
  7411                           	
  7412  00D2                     l21830:	
  7413                           ;OverLoad_B1.c: 92: Load->ADL=((Load->AL[2]+Load->AL[3]+Load->AL[4])/3);
  7414  00D2  3003               	movlw	low(03h)
  7415  00D3  00A0               	movwf	(?___lwdiv)
  7416  00D4  3000               	movlw	high(03h)
  7417  00D5  00A1               	movwf	((?___lwdiv))+1
  7418  00D6  086B               	movf	(_Load),w
  7419  00D7  3E22               	addlw	022h
  7420  00D8  0086               	movwf	fsr1l
  7421  00D9  3002               	movlw 2	; select bank4/5
  7422  00DA  0087               	movwf fsr1h	
  7423                           	
  7424  00DB  086B               	movf	(_Load),w
  7425  00DC  3E1E               	addlw	01Eh
  7426  00DD  0084               	movwf	fsr0l
  7427  00DE  3002               	movlw 2	; select bank4/5
  7428  00DF  0085               	movwf fsr0h	
  7429                           	
  7430  00E0  3F00               	moviw	[0]fsr0
  7431  00E1  00B2               	movwf	(??_setLoad_Main+0)+0
  7432  00E2  3F01               	moviw	[1]fsr0
  7433  00E3  00B3               	movwf	(??_setLoad_Main+0)+0+1
  7434  00E4  086B               	movf	(_Load),w
  7435  00E5  3E20               	addlw	020h
  7436  00E6  0084               	movwf	fsr0l
  7437  00E7  3002               	movlw 2	; select bank4/5
  7438  00E8  0085               	movwf fsr0h	
  7439                           	
  7440  00E9  3F00               	moviw	[0]fsr0
  7441  00EA  0732               	addwf	0+(??_setLoad_Main+0)+0,w
  7442  00EB  00B4               	movwf	(??_setLoad_Main+2)+0
  7443  00EC  3F01               	moviw	[1]fsr0
  7444  00ED  3D33               	addwfc	1+(??_setLoad_Main+0)+0,w
  7445  00EE  00B5               	movwf	(??_setLoad_Main+2)+0+1
  7446  00EF  3F40               	moviw	[0]fsr1
  7447  00F0  0734               	addwf	0+(??_setLoad_Main+2)+0,w
  7448  00F1  00A2               	movwf	0+(?___lwdiv)+02h
  7449  00F2  3F41               	moviw	[1]fsr1
  7450  00F3  3D35               	addwfc	1+(??_setLoad_Main+2)+0,w
  7451  00F4  00A3               	movwf	0+(?___lwdiv)+02h+1
  7452  00F5  31A7  27B9  3180   	fcall	___lwdiv
  7453  00F8  0020               	movlb 0	; select bank0
  7454  00F9  086B               	movf	(_Load),w
  7455  00FA  3E30               	addlw	030h
  7456  00FB  0086               	movwf	fsr1l
  7457  00FC  3002               	movlw 2	; select bank4/5
  7458  00FD  0087               	movwf fsr1h	
  7459                           	
  7460  00FE  0820               	movf	(0+(?___lwdiv)),w
  7461  00FF  3FC0               	movwi	[0]fsr1
  7462  0100  0821               	movf	(1+(?___lwdiv)),w
  7463  0101  3FC1               	movwi	[1]fsr1
  7464                           	line	93
  7465                           ;OverLoad_B1.c: 93: if(Load->ADH > Load->ADL)
  7466  0102  086B               	movf	(_Load),w
  7467  0103  3E2E               	addlw	02Eh
  7468  0104  0086               	movwf	fsr1l
  7469  0105  3002               	movlw 2	; select bank4/5
  7470  0106  0087               	movwf fsr1h	
  7471                           	
  7472  0107  3F40               	moviw	[0]fsr1
  7473  0108  00B2               	movwf	(??_setLoad_Main+0)+0
  7474  0109  3F41               	moviw	[1]fsr1
  7475  010A  00B3               	movwf	(??_setLoad_Main+0)+0+1
  7476  010B  086B               	movf	(_Load),w
  7477  010C  3E30               	addlw	030h
  7478  010D  0086               	movwf	fsr1l
  7479  010E  3002               	movlw 2	; select bank4/5
  7480  010F  0087               	movwf fsr1h	
  7481                           	
  7482  0110  3F40               	moviw	[0]fsr1
  7483  0111  00B4               	movwf	(??_setLoad_Main+2)+0
  7484  0112  3F41               	moviw	[1]fsr1
  7485  0113  00B5               	movwf	(??_setLoad_Main+2)+0+1
  7486  0114  0833               	movf	1+(??_setLoad_Main+0)+0,w
  7487  0115  0235               	subwf	1+(??_setLoad_Main+2)+0,w
  7488  0116  1D03               	skipz
  7489  0117  291A               	goto	u10545
  7490  0118  0832               	movf	0+(??_setLoad_Main+0)+0,w
  7491  0119  0234               	subwf	0+(??_setLoad_Main+2)+0,w
  7492  011A                     u10545:
  7493  011A  1803               	skipnc
  7494  011B  291D               	goto	u10541
  7495  011C  291E               	goto	u10540
  7496  011D                     u10541:
  7497  011D  2AA3               	goto	l21880
  7498  011E                     u10540:
  7499                           	line	95
  7500                           	
  7501  011E                     l21832:	
  7502                           ;OverLoad_B1.c: 94: {
  7503                           ;OverLoad_B1.c: 95: Load->AD=(Load->ADH-Load->ADL);
  7504  011E  086B               	movf	(_Load),w
  7505  011F  3E2E               	addlw	02Eh
  7506  0120  0086               	movwf	fsr1l
  7507  0121  3002               	movlw 2	; select bank4/5
  7508  0122  0087               	movwf fsr1h	
  7509                           	
  7510  0123  086B               	movf	(_Load),w
  7511  0124  3E30               	addlw	030h
  7512  0125  0084               	movwf	fsr0l
  7513  0126  3002               	movlw 2	; select bank4/5
  7514  0127  0085               	movwf fsr0h	
  7515                           	
  7516  0128  3F00               	moviw	[0]fsr0
  7517  0129  00B2               	movwf	(??_setLoad_Main+0)+0
  7518  012A  3F01               	moviw	[1]fsr0
  7519  012B  00B3               	movwf	(??_setLoad_Main+0)+0+1
  7520  012C  09B2               	comf	(??_setLoad_Main+0)+0,f
  7521  012D  09B3               	comf	(??_setLoad_Main+0)+1,f
  7522  012E  0AB2               	incf	(??_setLoad_Main+0)+0,f
  7523  012F  1903               	skipnz
  7524  0130  0AB3               	incf	(??_setLoad_Main+0)+1,f
  7525  0131  3F40               	moviw	[0]fsr1
  7526  0132  0732               	addwf	0+(??_setLoad_Main+0)+0,w
  7527  0133  00B4               	movwf	(??_setLoad_Main+2)+0
  7528  0134  3F41               	moviw	[1]fsr1
  7529  0135  3D33               	addwfc	1+(??_setLoad_Main+0)+0,w
  7530  0136  00B5               	movwf	(??_setLoad_Main+2)+0+1
  7531  0137  086B               	movf	(_Load),w
  7532  0138  3E2C               	addlw	02Ch
  7533  0139  0086               	movwf	fsr1l
  7534  013A  3002               	movlw 2	; select bank4/5
  7535  013B  0087               	movwf fsr1h	
  7536                           	
  7537  013C  0834               	movf	0+(??_setLoad_Main+2)+0,w
  7538  013D  3FC0               	movwi	[0]fsr1
  7539  013E  0835               	movf	1+(??_setLoad_Main+2)+0,w
  7540  013F  3FC1               	movwi	[1]fsr1
  7541                           	line	96
  7542                           	
  7543  0140                     l21834:	
  7544                           ;OverLoad_B1.c: 96: if(Load->Count < 10)
  7545  0140  086B               	movf	(_Load),w
  7546  0141  3E3A               	addlw	03Ah
  7547  0142  0086               	movwf	fsr1l
  7548  0143  3002               	movlw 2	; select bank4/5
  7549  0144  0087               	movwf fsr1h	
  7550                           	
  7551  0145  300A               	movlw	(0Ah)
  7552  0146  0201               	subwf	indf1,w
  7553  0147  1803               	skipnc
  7554  0148  294A               	goto	u10551
  7555  0149  294B               	goto	u10550
  7556  014A                     u10551:
  7557  014A  29A3               	goto	l21848
  7558  014B                     u10550:
  7559                           	line	98
  7560                           	
  7561  014B                     l21836:	
  7562                           ;OverLoad_B1.c: 97: {
  7563                           ;OverLoad_B1.c: 98: Load->Count++;
  7564  014B  3001               	movlw	(01h)
  7565  014C  00B2               	movwf	(??_setLoad_Main+0)+0
  7566  014D  086B               	movf	(_Load),w
  7567  014E  3E3A               	addlw	03Ah
  7568  014F  0086               	movwf	fsr1l
  7569  0150  3002               	movlw 2	; select bank4/5
  7570  0151  0087               	movwf fsr1h	
  7571                           	
  7572  0152  0832               	movf	(??_setLoad_Main+0)+0,w
  7573  0153  0781               	addwf	indf1,f
  7574                           	line	99
  7575                           	
  7576  0154                     l21838:	
  7577                           ;OverLoad_B1.c: 99: if(Load->Count == 1)
  7578  0154  086B               	movf	(_Load),w
  7579  0155  3E3A               	addlw	03Ah
  7580  0156  0086               	movwf	fsr1l
  7581  0157  3002               	movlw 2	; select bank4/5
  7582  0158  0087               	movwf fsr1h	
  7583                           	
  7584  0159  0801               	movf	indf1,w
  7585  015A  3A01               	xorlw	01h&0ffh
  7586  015B  1D03               	skipz
  7587  015C  295E               	goto	u10561
  7588  015D  295F               	goto	u10560
  7589  015E                     u10561:
  7590  015E  2968               	goto	l9580
  7591  015F                     u10560:
  7592                           	line	101
  7593                           	
  7594  015F                     l21840:	
  7595                           ;OverLoad_B1.c: 100: {
  7596                           ;OverLoad_B1.c: 101: Load->JudgeValue=255;
  7597  015F  086B               	movf	(_Load),w
  7598  0160  3E36               	addlw	036h
  7599  0161  0086               	movwf	fsr1l
  7600  0162  3002               	movlw 2	; select bank4/5
  7601  0163  0087               	movwf fsr1h	
  7602                           	
  7603  0164  30FF               	movlw	low(0FFh)
  7604  0165  3FC0               	movwi	[0]fsr1
  7605  0166  3000               	movlw	high(0FFh)
  7606  0167  3FC1               	movwi	[1]fsr1
  7607                           	line	102
  7608                           	
  7609  0168                     l9580:	
  7610                           	line	103
  7611                           ;OverLoad_B1.c: 102: }
  7612                           ;OverLoad_B1.c: 103: if(Load->Count == 3)
  7613  0168  086B               	movf	(_Load),w
  7614  0169  3E3A               	addlw	03Ah
  7615  016A  0086               	movwf	fsr1l
  7616  016B  3002               	movlw 2	; select bank4/5
  7617  016C  0087               	movwf fsr1h	
  7618                           	
  7619  016D  0801               	movf	indf1,w
  7620  016E  3A03               	xorlw	03h&0ffh
  7621  016F  1D03               	skipz
  7622  0170  2972               	goto	u10571
  7623  0171  2973               	goto	u10570
  7624  0172                     u10571:
  7625  0172  29A3               	goto	l21848
  7626  0173                     u10570:
  7627                           	line	105
  7628                           	
  7629  0173                     l21842:	
  7630                           ;OverLoad_B1.c: 104: {
  7631                           ;OverLoad_B1.c: 105: if(Load->LightsCount == 1)
  7632  0173  086B               	movf	(_Load),w
  7633  0174  3E3E               	addlw	03Eh
  7634  0175  0086               	movwf	fsr1l
  7635  0176  3002               	movlw 2	; select bank4/5
  7636  0177  0087               	movwf fsr1h	
  7637                           	
  7638  0178  0801               	movf	indf1,w
  7639  0179  3A01               	xorlw	01h&0ffh
  7640  017A  1D03               	skipz
  7641  017B  297D               	goto	u10581
  7642  017C  297E               	goto	u10580
  7643  017D                     u10581:
  7644  017D  2988               	goto	l21846
  7645  017E                     u10580:
  7646                           	line	107
  7647                           	
  7648  017E                     l21844:	
  7649                           ;OverLoad_B1.c: 106: {
  7650                           ;OverLoad_B1.c: 107: Load->JudgeValue=0x1a;
  7651  017E  086B               	movf	(_Load),w
  7652  017F  3E36               	addlw	036h
  7653  0180  0086               	movwf	fsr1l
  7654  0181  3002               	movlw 2	; select bank4/5
  7655  0182  0087               	movwf fsr1h	
  7656                           	
  7657  0183  301A               	movlw	low(01Ah)
  7658  0184  3FC0               	movwi	[0]fsr1
  7659  0185  3000               	movlw	high(01Ah)
  7660  0186  3FC1               	movwi	[1]fsr1
  7661                           	line	108
  7662                           ;OverLoad_B1.c: 108: }
  7663  0187  29A3               	goto	l21848
  7664                           	line	109
  7665                           	
  7666  0188                     l9582:	
  7667                           	line	111
  7668                           	
  7669  0188                     l21846:	
  7670                           ;OverLoad_B1.c: 109: else
  7671                           ;OverLoad_B1.c: 110: {
  7672                           ;OverLoad_B1.c: 111: Load->JudgeValue=0x1a+Load->TotalLoad;
  7673  0188  086B               	movf	(_Load),w
  7674  0189  3E06               	addlw	06h
  7675  018A  0086               	movwf	fsr1l
  7676  018B  3002               	movlw 2	; select bank4/5
  7677  018C  0087               	movwf fsr1h	
  7678                           	
  7679  018D  3F40               	moviw	[0]fsr1
  7680  018E  00B2               	movwf	(??_setLoad_Main+0)+0
  7681  018F  3F41               	moviw	[1]fsr1
  7682  0190  00B3               	movwf	(??_setLoad_Main+0)+0+1
  7683  0191  0832               	movf	0+(??_setLoad_Main+0)+0,w
  7684  0192  3E1A               	addlw	low(01Ah)
  7685  0193  00B4               	movwf	(??_setLoad_Main+2)+0
  7686  0194  3000               	movlw	high(01Ah)
  7687  0195  3D33               	addwfc	1+(??_setLoad_Main+0)+0,w
  7688  0196  00B5               	movwf	1+(??_setLoad_Main+2)+0
  7689  0197  086B               	movf	(_Load),w
  7690  0198  3E36               	addlw	036h
  7691  0199  0086               	movwf	fsr1l
  7692  019A  3002               	movlw 2	; select bank4/5
  7693  019B  0087               	movwf fsr1h	
  7694                           	
  7695  019C  0834               	movf	0+(??_setLoad_Main+2)+0,w
  7696  019D  3FC0               	movwi	[0]fsr1
  7697  019E  0835               	movf	1+(??_setLoad_Main+2)+0,w
  7698  019F  3FC1               	movwi	[1]fsr1
  7699  01A0  29A3               	goto	l21848
  7700                           	line	112
  7701                           	
  7702  01A1                     l9583:	
  7703  01A1  29A3               	goto	l21848
  7704                           	line	113
  7705                           	
  7706  01A2                     l9581:	
  7707  01A2  29A3               	goto	l21848
  7708                           	line	114
  7709                           	
  7710  01A3                     l9579:	
  7711                           	line	115
  7712                           	
  7713  01A3                     l21848:	
  7714                           ;OverLoad_B1.c: 112: }
  7715                           ;OverLoad_B1.c: 113: }
  7716                           ;OverLoad_B1.c: 114: }
  7717                           ;OverLoad_B1.c: 115: if(Load->AD >= Load->JudgeValue)
  7718  01A3  086B               	movf	(_Load),w
  7719  01A4  3E36               	addlw	036h
  7720  01A5  0086               	movwf	fsr1l
  7721  01A6  3002               	movlw 2	; select bank4/5
  7722  01A7  0087               	movwf fsr1h	
  7723                           	
  7724  01A8  3F40               	moviw	[0]fsr1
  7725  01A9  00B2               	movwf	(??_setLoad_Main+0)+0
  7726  01AA  3F41               	moviw	[1]fsr1
  7727  01AB  00B3               	movwf	(??_setLoad_Main+0)+0+1
  7728  01AC  086B               	movf	(_Load),w
  7729  01AD  3E2C               	addlw	02Ch
  7730  01AE  0086               	movwf	fsr1l
  7731  01AF  3002               	movlw 2	; select bank4/5
  7732  01B0  0087               	movwf fsr1h	
  7733                           	
  7734  01B1  3F40               	moviw	[0]fsr1
  7735  01B2  00B4               	movwf	(??_setLoad_Main+2)+0
  7736  01B3  3F41               	moviw	[1]fsr1
  7737  01B4  00B5               	movwf	(??_setLoad_Main+2)+0+1
  7738  01B5  0833               	movf	1+(??_setLoad_Main+0)+0,w
  7739  01B6  0235               	subwf	1+(??_setLoad_Main+2)+0,w
  7740  01B7  1D03               	skipz
  7741  01B8  29BB               	goto	u10595
  7742  01B9  0832               	movf	0+(??_setLoad_Main+0)+0,w
  7743  01BA  0234               	subwf	0+(??_setLoad_Main+2)+0,w
  7744  01BB                     u10595:
  7745  01BB  1C03               	skipc
  7746  01BC  29BE               	goto	u10591
  7747  01BD  29BF               	goto	u10590
  7748  01BE                     u10591:
  7749  01BE  29E2               	goto	l21858
  7750  01BF                     u10590:
  7751                           	line	117
  7752                           	
  7753  01BF                     l21850:	
  7754                           ;OverLoad_B1.c: 116: {
  7755                           ;OverLoad_B1.c: 117: Load->ErrorCount++;
  7756  01BF  3001               	movlw	(01h)
  7757  01C0  00B2               	movwf	(??_setLoad_Main+0)+0
  7758  01C1  086B               	movf	(_Load),w
  7759  01C2  3E3C               	addlw	03Ch
  7760  01C3  0086               	movwf	fsr1l
  7761  01C4  3002               	movlw 2	; select bank4/5
  7762  01C5  0087               	movwf fsr1h	
  7763                           	
  7764  01C6  0832               	movf	(??_setLoad_Main+0)+0,w
  7765  01C7  0781               	addwf	indf1,f
  7766                           	line	118
  7767                           	
  7768  01C8                     l21852:	
  7769                           ;OverLoad_B1.c: 118: if(Load->ErrorCount >2)
  7770  01C8  086B               	movf	(_Load),w
  7771  01C9  3E3C               	addlw	03Ch
  7772  01CA  0086               	movwf	fsr1l
  7773  01CB  3002               	movlw 2	; select bank4/5
  7774  01CC  0087               	movwf fsr1h	
  7775                           	
  7776  01CD  3003               	movlw	(03h)
  7777  01CE  0201               	subwf	indf1,w
  7778  01CF  1C03               	skipc
  7779  01D0  29D2               	goto	u10601
  7780  01D1  29D3               	goto	u10600
  7781  01D2                     u10601:
  7782  01D2  2AA3               	goto	l21880
  7783  01D3                     u10600:
  7784                           	line	120
  7785                           	
  7786  01D3                     l21854:	
  7787                           ;OverLoad_B1.c: 119: {
  7788                           ;OverLoad_B1.c: 120: Load->ErrorCount=0;
  7789  01D3  086B               	movf	(_Load),w
  7790  01D4  3E3C               	addlw	03Ch
  7791  01D5  0086               	movwf	fsr1l
  7792  01D6  3002               	movlw 2	; select bank4/5
  7793  01D7  0087               	movwf fsr1h	
  7794                           	
  7795  01D8  0181               	clrf	indf1
  7796                           	line	121
  7797                           	
  7798  01D9                     l21856:	
  7799                           ;OverLoad_B1.c: 121: setLoad_ERROR(load,1);
  7800  01D9  01AF               	clrf	(?_setLoad_ERROR)
  7801  01DA  1403               	bsf	status,0
  7802  01DB  0DAF               	rlf	(?_setLoad_ERROR),f
  7803  01DC  0836               	movf	(setLoad_Main@load),w
  7804  01DD  319D  2594  3180   	fcall	_setLoad_ERROR
  7805  01E0  2AA3               	goto	l21880
  7806                           	line	128
  7807                           	
  7808  01E1                     l9585:	
  7809                           	line	129
  7810                           ;OverLoad_B1.c: 128: }
  7811                           ;OverLoad_B1.c: 129: }
  7812  01E1  2AA3               	goto	l21880
  7813                           	line	130
  7814                           	
  7815  01E2                     l9584:	
  7816                           	line	132
  7817                           	
  7818  01E2                     l21858:	
  7819                           ;OverLoad_B1.c: 130: else
  7820                           ;OverLoad_B1.c: 131: {
  7821                           ;OverLoad_B1.c: 132: Load->ErrorCount=0;
  7822  01E2  0020               	movlb 0	; select bank0
  7823  01E3  086B               	movf	(_Load),w
  7824  01E4  3E3C               	addlw	03Ch
  7825  01E5  0086               	movwf	fsr1l
  7826  01E6  3002               	movlw 2	; select bank4/5
  7827  01E7  0087               	movwf fsr1h	
  7828                           	
  7829  01E8  0181               	clrf	indf1
  7830                           	line	133
  7831                           ;OverLoad_B1.c: 133: if(Load->Count > 5)
  7832  01E9  086B               	movf	(_Load),w
  7833  01EA  3E3A               	addlw	03Ah
  7834  01EB  0086               	movwf	fsr1l
  7835  01EC  3002               	movlw 2	; select bank4/5
  7836  01ED  0087               	movwf fsr1h	
  7837                           	
  7838  01EE  3006               	movlw	(06h)
  7839  01EF  0201               	subwf	indf1,w
  7840  01F0  1C03               	skipc
  7841  01F1  29F3               	goto	u10611
  7842  01F2  29F4               	goto	u10610
  7843  01F3                     u10611:
  7844  01F3  2AA3               	goto	l21880
  7845  01F4                     u10610:
  7846                           	line	135
  7847                           	
  7848  01F4                     l21860:	
  7849                           ;OverLoad_B1.c: 134: {
  7850                           ;OverLoad_B1.c: 135: if(Load->SafeCount < 30)
  7851  01F4  086B               	movf	(_Load),w
  7852  01F5  3E42               	addlw	042h
  7853  01F6  0086               	movwf	fsr1l
  7854  01F7  3002               	movlw 2	; select bank4/5
  7855  01F8  0087               	movwf fsr1h	
  7856                           	
  7857  01F9  301E               	movlw	(01Eh)
  7858  01FA  0201               	subwf	indf1,w
  7859  01FB  1803               	skipnc
  7860  01FC  29FE               	goto	u10621
  7861  01FD  29FF               	goto	u10620
  7862  01FE                     u10621:
  7863  01FE  2A09               	goto	l21864
  7864  01FF                     u10620:
  7865                           	line	137
  7866                           	
  7867  01FF                     l21862:	
  7868                           ;OverLoad_B1.c: 136: {
  7869                           ;OverLoad_B1.c: 137: Load->SafeCount++;
  7870  01FF  3001               	movlw	(01h)
  7871  0200  00B2               	movwf	(??_setLoad_Main+0)+0
  7872  0201  086B               	movf	(_Load),w
  7873  0202  3E42               	addlw	042h
  7874  0203  0086               	movwf	fsr1l
  7875  0204  3002               	movlw 2	; select bank4/5
  7876  0205  0087               	movwf fsr1h	
  7877                           	
  7878  0206  0832               	movf	(??_setLoad_Main+0)+0,w
  7879  0207  0781               	addwf	indf1,f
  7880  0208  2A09               	goto	l21864
  7881                           	line	138
  7882                           	
  7883  0209                     l9588:	
  7884                           	line	139
  7885                           	
  7886  0209                     l21864:	
  7887                           ;OverLoad_B1.c: 138: }
  7888                           ;OverLoad_B1.c: 139: if(Load->SafeCount > 25)
  7889  0209  086B               	movf	(_Load),w
  7890  020A  3E42               	addlw	042h
  7891  020B  0086               	movwf	fsr1l
  7892  020C  3002               	movlw 2	; select bank4/5
  7893  020D  0087               	movwf fsr1h	
  7894                           	
  7895  020E  301A               	movlw	(01Ah)
  7896  020F  0201               	subwf	indf1,w
  7897  0210  1C03               	skipc
  7898  0211  2A13               	goto	u10631
  7899  0212  2A14               	goto	u10630
  7900  0213                     u10631:
  7901  0213  2A60               	goto	l21874
  7902  0214                     u10630:
  7903                           	line	141
  7904                           	
  7905  0214                     l21866:	
  7906                           ;OverLoad_B1.c: 140: {
  7907                           ;OverLoad_B1.c: 141: if(Load->StatusOn)
  7908  0214  086B               	movf	(_Load),w
  7909  0215  3E46               	addlw	046h
  7910  0216  0086               	movwf	fsr1l
  7911  0217  3002               	movlw 2	; select bank4/5
  7912  0218  0087               	movwf fsr1h	
  7913                           	
  7914  0219  1C01               	btfss	indf1,0
  7915  021A  2A1C               	goto	u10641
  7916  021B  2A1D               	goto	u10640
  7917  021C                     u10641:
  7918  021C  2A53               	goto	l21872
  7919  021D                     u10640:
  7920                           	line	143
  7921                           	
  7922  021D                     l21868:	
  7923                           ;OverLoad_B1.c: 142: {
  7924                           ;OverLoad_B1.c: 143: Load->StatusOn=0;
  7925  021D  086B               	movf	(_Load),w
  7926  021E  3E46               	addlw	046h
  7927  021F  0086               	movwf	fsr1l
  7928  0220  3002               	movlw 2	; select bank4/5
  7929  0221  0087               	movwf fsr1h	
  7930                           	
  7931  0222  1001               	bcf	indf1,0
  7932                           	line	144
  7933                           ;OverLoad_B1.c: 144: Load->TotalLoad=Load->AD;
  7934  0223  086B               	movf	(_Load),w
  7935  0224  3E2C               	addlw	02Ch
  7936  0225  0086               	movwf	fsr1l
  7937  0226  3002               	movlw 2	; select bank4/5
  7938  0227  0087               	movwf fsr1h	
  7939                           	
  7940  0228  3F40               	moviw	[0]fsr1
  7941  0229  00B2               	movwf	(??_setLoad_Main+0)+0
  7942  022A  3F41               	moviw	[1]fsr1
  7943  022B  00B3               	movwf	(??_setLoad_Main+0)+0+1
  7944  022C  086B               	movf	(_Load),w
  7945  022D  3E06               	addlw	06h
  7946  022E  0086               	movwf	fsr1l
  7947  022F  3002               	movlw 2	; select bank4/5
  7948  0230  0087               	movwf fsr1h	
  7949                           	
  7950  0231  0832               	movf	0+(??_setLoad_Main+0)+0,w
  7951  0232  3FC0               	movwi	[0]fsr1
  7952  0233  0833               	movf	1+(??_setLoad_Main+0)+0,w
  7953  0234  3FC1               	movwi	[1]fsr1
  7954                           	line	145
  7955                           	
  7956  0235                     l21870:	
  7957                           ;OverLoad_B1.c: 145: Load->JudgeValue=0x1a*Load->LightsCount;
  7958  0235  086B               	movf	(_Load),w
  7959  0236  3E3E               	addlw	03Eh
  7960  0237  0086               	movwf	fsr1l
  7961  0238  3002               	movlw 2	; select bank4/5
  7962  0239  0087               	movwf fsr1h	
  7963                           	
  7964  023A  0801               	movf	indf1,w
  7965  023B  00B2               	movwf	(??_setLoad_Main+0)+0
  7966  023C  01B3               	clrf	(??_setLoad_Main+0)+0+1
  7967  023D  0832               	movf	0+(??_setLoad_Main+0)+0,w
  7968  023E  00A0               	movwf	(?___wmul)
  7969  023F  0833               	movf	1+(??_setLoad_Main+0)+0,w
  7970  0240  00A1               	movwf	(?___wmul+1)
  7971  0241  301A               	movlw	low(01Ah)
  7972  0242  00A2               	movwf	0+(?___wmul)+02h
  7973  0243  3000               	movlw	high(01Ah)
  7974  0244  00A3               	movwf	(0+(?___wmul)+02h)+1
  7975  0245  31A2  2232  3180   	fcall	___wmul
  7976  0248  0020               	movlb 0	; select bank0
  7977  0249  086B               	movf	(_Load),w
  7978  024A  3E36               	addlw	036h
  7979  024B  0086               	movwf	fsr1l
  7980  024C  3002               	movlw 2	; select bank4/5
  7981  024D  0087               	movwf fsr1h	
  7982                           	
  7983  024E  0820               	movf	(0+(?___wmul)),w
  7984  024F  3FC0               	movwi	[0]fsr1
  7985  0250  0821               	movf	(1+(?___wmul)),w
  7986  0251  3FC1               	movwi	[1]fsr1
  7987  0252  2A53               	goto	l21872
  7988                           	line	146
  7989                           	
  7990  0253                     l9590:	
  7991                           	line	147
  7992                           	
  7993  0253                     l21872:	
  7994                           ;OverLoad_B1.c: 146: }
  7995                           ;OverLoad_B1.c: 147: Load->Safe=1;
  7996  0253  086B               	movf	(_Load),w
  7997  0254  0086               	movwf	fsr1l
  7998  0255  3002               	movlw 2	; select bank4/5
  7999  0256  0087               	movwf fsr1h	
  8000                           	
  8001  0257  1581               	bsf	indf1,3
  8002                           	line	149
  8003                           ;OverLoad_B1.c: 149: setDimmerLights_Open(1,1);
  8004  0258  01A2               	clrf	(?_setDimmerLights_Open)
  8005  0259  1403               	bsf	status,0
  8006  025A  0DA2               	rlf	(?_setDimmerLights_Open),f
  8007  025B  3001               	movlw	(01h)
  8008  025C  31A0  2038  3180   	fcall	_setDimmerLights_Open
  8009  025F  2A60               	goto	l21874
  8010                           	line	159
  8011                           	
  8012  0260                     l9589:	
  8013                           	line	160
  8014                           	
  8015  0260                     l21874:	
  8016                           ;OverLoad_B1.c: 159: }
  8017                           ;OverLoad_B1.c: 160: if(Load->StatusOff)
  8018  0260  0020               	movlb 0	; select bank0
  8019  0261  086B               	movf	(_Load),w
  8020  0262  3E46               	addlw	046h
  8021  0263  0086               	movwf	fsr1l
  8022  0264  3002               	movlw 2	; select bank4/5
  8023  0265  0087               	movwf fsr1h	
  8024                           	
  8025  0266  1C81               	btfss	indf1,1
  8026  0267  2A69               	goto	u10651
  8027  0268  2A6A               	goto	u10650
  8028  0269                     u10651:
  8029  0269  2AA3               	goto	l21880
  8030  026A                     u10650:
  8031                           	line	162
  8032                           	
  8033  026A                     l21876:	
  8034                           ;OverLoad_B1.c: 161: {
  8035                           ;OverLoad_B1.c: 162: Load->StatusOff=0;
  8036  026A  086B               	movf	(_Load),w
  8037  026B  3E46               	addlw	046h
  8038  026C  0086               	movwf	fsr1l
  8039  026D  3002               	movlw 2	; select bank4/5
  8040  026E  0087               	movwf fsr1h	
  8041                           	
  8042  026F  1081               	bcf	indf1,1
  8043                           	line	163
  8044                           ;OverLoad_B1.c: 163: Load->TotalLoad=Load->AD;
  8045  0270  086B               	movf	(_Load),w
  8046  0271  3E2C               	addlw	02Ch
  8047  0272  0086               	movwf	fsr1l
  8048  0273  3002               	movlw 2	; select bank4/5
  8049  0274  0087               	movwf fsr1h	
  8050                           	
  8051  0275  3F40               	moviw	[0]fsr1
  8052  0276  00B2               	movwf	(??_setLoad_Main+0)+0
  8053  0277  3F41               	moviw	[1]fsr1
  8054  0278  00B3               	movwf	(??_setLoad_Main+0)+0+1
  8055  0279  086B               	movf	(_Load),w
  8056  027A  3E06               	addlw	06h
  8057  027B  0086               	movwf	fsr1l
  8058  027C  3002               	movlw 2	; select bank4/5
  8059  027D  0087               	movwf fsr1h	
  8060                           	
  8061  027E  0832               	movf	0+(??_setLoad_Main+0)+0,w
  8062  027F  3FC0               	movwi	[0]fsr1
  8063  0280  0833               	movf	1+(??_setLoad_Main+0)+0,w
  8064  0281  3FC1               	movwi	[1]fsr1
  8065                           	line	164
  8066                           	
  8067  0282                     l21878:	
  8068                           ;OverLoad_B1.c: 164: Load->JudgeValue=0x1a*Load->LightsCount;
  8069  0282  086B               	movf	(_Load),w
  8070  0283  3E3E               	addlw	03Eh
  8071  0284  0086               	movwf	fsr1l
  8072  0285  3002               	movlw 2	; select bank4/5
  8073  0286  0087               	movwf fsr1h	
  8074                           	
  8075  0287  0801               	movf	indf1,w
  8076  0288  00B2               	movwf	(??_setLoad_Main+0)+0
  8077  0289  01B3               	clrf	(??_setLoad_Main+0)+0+1
  8078  028A  0832               	movf	0+(??_setLoad_Main+0)+0,w
  8079  028B  00A0               	movwf	(?___wmul)
  8080  028C  0833               	movf	1+(??_setLoad_Main+0)+0,w
  8081  028D  00A1               	movwf	(?___wmul+1)
  8082  028E  301A               	movlw	low(01Ah)
  8083  028F  00A2               	movwf	0+(?___wmul)+02h
  8084  0290  3000               	movlw	high(01Ah)
  8085  0291  00A3               	movwf	(0+(?___wmul)+02h)+1
  8086  0292  31A2  2232  3180   	fcall	___wmul
  8087  0295  0020               	movlb 0	; select bank0
  8088  0296  086B               	movf	(_Load),w
  8089  0297  3E36               	addlw	036h
  8090  0298  0086               	movwf	fsr1l
  8091  0299  3002               	movlw 2	; select bank4/5
  8092  029A  0087               	movwf fsr1h	
  8093                           	
  8094  029B  0820               	movf	(0+(?___wmul)),w
  8095  029C  3FC0               	movwi	[0]fsr1
  8096  029D  0821               	movf	(1+(?___wmul)),w
  8097  029E  3FC1               	movwi	[1]fsr1
  8098  029F  2AA3               	goto	l21880
  8099                           	line	165
  8100                           	
  8101  02A0                     l9591:	
  8102  02A0  2AA3               	goto	l21880
  8103                           	line	166
  8104                           	
  8105  02A1                     l9587:	
  8106  02A1  2AA3               	goto	l21880
  8107                           	line	167
  8108                           	
  8109  02A2                     l9586:	
  8110  02A2  2AA3               	goto	l21880
  8111                           	line	168
  8112                           	
  8113  02A3                     l9578:	
  8114                           	line	169
  8115                           	
  8116  02A3                     l21880:	
  8117                           ;OverLoad_B1.c: 165: }
  8118                           ;OverLoad_B1.c: 166: }
  8119                           ;OverLoad_B1.c: 167: }
  8120                           ;OverLoad_B1.c: 168: }
  8121                           ;OverLoad_B1.c: 169: setLoad_AH_AL_Restore(load);
  8122  02A3  0020               	movlb 0	; select bank0
  8123  02A4  0836               	movf	(setLoad_Main@load),w
  8124  02A5  31A4  241C  3180   	fcall	_setLoad_AH_AL_Restore
  8125  02A8  2B29               	goto	l9598
  8126                           	line	180
  8127                           	
  8128  02A9                     l9577:	
  8129                           	line	181
  8130                           ;OverLoad_B1.c: 180: }
  8131                           ;OverLoad_B1.c: 181: }
  8132  02A9  2B29               	goto	l9598
  8133                           	line	182
  8134                           	
  8135  02AA                     l9576:	
  8136                           	line	184
  8137                           	
  8138  02AA                     l21882:	
  8139                           ;OverLoad_B1.c: 182: else
  8140                           ;OverLoad_B1.c: 183: {
  8141                           ;OverLoad_B1.c: 184: if(Load->GO)
  8142  02AA  0020               	movlb 0	; select bank0
  8143  02AB  086B               	movf	(_Load),w
  8144  02AC  0086               	movwf	fsr1l
  8145  02AD  3002               	movlw 2	; select bank4/5
  8146  02AE  0087               	movwf fsr1h	
  8147                           	
  8148  02AF  1C81               	btfss	indf1,1
  8149  02B0  2AB2               	goto	u10661
  8150  02B1  2AB3               	goto	u10660
  8151  02B2                     u10661:
  8152  02B2  2AE0               	goto	l21894
  8153  02B3                     u10660:
  8154                           	line	186
  8155                           	
  8156  02B3                     l21884:	
  8157                           ;OverLoad_B1.c: 185: {
  8158                           ;OverLoad_B1.c: 186: if(Load->LightsON == 0)
  8159  02B3  086B               	movf	(_Load),w
  8160  02B4  0086               	movwf	fsr1l
  8161  02B5  3002               	movlw 2	; select bank4/5
  8162  02B6  0087               	movwf fsr1h	
  8163                           	
  8164  02B7  1901               	btfsc	indf1,2
  8165  02B8  2ABA               	goto	u10671
  8166  02B9  2ABB               	goto	u10670
  8167  02BA                     u10671:
  8168  02BA  2AC6               	goto	l21888
  8169  02BB                     u10670:
  8170                           	line	188
  8171                           	
  8172  02BB                     l21886:	
  8173                           ;OverLoad_B1.c: 187: {
  8174                           ;OverLoad_B1.c: 188: Load->LightsON=1;
  8175  02BB  086B               	movf	(_Load),w
  8176  02BC  0086               	movwf	fsr1l
  8177  02BD  3002               	movlw 2	; select bank4/5
  8178  02BE  0087               	movwf fsr1h	
  8179                           	
  8180  02BF  1501               	bsf	indf1,2
  8181                           	line	189
  8182                           ;OverLoad_B1.c: 189: Load->Safe=0;
  8183  02C0  086B               	movf	(_Load),w
  8184  02C1  0086               	movwf	fsr1l
  8185  02C2  3002               	movlw 2	; select bank4/5
  8186  02C3  0087               	movwf fsr1h	
  8187                           	
  8188  02C4  1181               	bcf	indf1,3
  8189  02C5  2AC6               	goto	l21888
  8190                           	line	190
  8191                           	
  8192  02C6                     l9594:	
  8193                           	line	191
  8194                           	
  8195  02C6                     l21888:	
  8196                           ;OverLoad_B1.c: 190: }
  8197                           ;OverLoad_B1.c: 191: if(getTemp_Safe(1) && getPF_Safe(1))
  8198  02C6  3001               	movlw	(01h)
  8199  02C7  31AF  2723  3180   	fcall	_getTemp_Safe
  8200  02CA  3A00               	xorlw	0&0ffh
  8201  02CB  1903               	skipnz
  8202  02CC  2ACE               	goto	u10681
  8203  02CD  2ACF               	goto	u10680
  8204  02CE                     u10681:
  8205  02CE  2B29               	goto	l9598
  8206  02CF                     u10680:
  8207                           	
  8208  02CF                     l21890:	
  8209  02CF  3001               	movlw	(01h)
  8210  02D0  31AF  2732  3180   	fcall	_getPF_Safe
  8211  02D3  3A00               	xorlw	0&0ffh
  8212  02D4  1903               	skipnz
  8213  02D5  2AD7               	goto	u10691
  8214  02D6  2AD8               	goto	u10690
  8215  02D7                     u10691:
  8216  02D7  2B29               	goto	l9598
  8217  02D8                     u10690:
  8218                           	line	193
  8219                           	
  8220  02D8                     l21892:	
  8221                           ;OverLoad_B1.c: 192: {
  8222                           ;OverLoad_B1.c: 193: Load->ADtoGO=1;
  8223  02D8  0020               	movlb 0	; select bank0
  8224  02D9  086B               	movf	(_Load),w
  8225  02DA  0086               	movwf	fsr1l
  8226  02DB  3002               	movlw 2	; select bank4/5
  8227  02DC  0087               	movwf fsr1h	
  8228                           	
  8229  02DD  1601               	bsf	indf1,4
  8230  02DE  2B29               	goto	l9598
  8231                           	line	194
  8232                           	
  8233  02DF                     l9595:	
  8234                           	line	195
  8235                           ;OverLoad_B1.c: 194: }
  8236                           ;OverLoad_B1.c: 195: }
  8237  02DF  2B29               	goto	l9598
  8238                           	line	196
  8239                           	
  8240  02E0                     l9593:	
  8241                           	line	198
  8242                           	
  8243  02E0                     l21894:	
  8244                           ;OverLoad_B1.c: 196: else
  8245                           ;OverLoad_B1.c: 197: {
  8246                           ;OverLoad_B1.c: 198: if(Load->LightsON)
  8247  02E0  086B               	movf	(_Load),w
  8248  02E1  0086               	movwf	fsr1l
  8249  02E2  3002               	movlw 2	; select bank4/5
  8250  02E3  0087               	movwf fsr1h	
  8251                           	
  8252  02E4  1D01               	btfss	indf1,2
  8253  02E5  2AE7               	goto	u10701
  8254  02E6  2AE8               	goto	u10700
  8255  02E7                     u10701:
  8256  02E7  2B29               	goto	l9598
  8257  02E8                     u10700:
  8258                           	line	200
  8259                           	
  8260  02E8                     l21896:	
  8261                           ;OverLoad_B1.c: 199: {
  8262                           ;OverLoad_B1.c: 200: Load->LightsON=0;
  8263  02E8  086B               	movf	(_Load),w
  8264  02E9  0086               	movwf	fsr1l
  8265  02EA  3002               	movlw 2	; select bank4/5
  8266  02EB  0087               	movwf fsr1h	
  8267                           	
  8268  02EC  1101               	bcf	indf1,2
  8269                           	line	201
  8270                           ;OverLoad_B1.c: 201: Load->Safe=1;
  8271  02ED  086B               	movf	(_Load),w
  8272  02EE  0086               	movwf	fsr1l
  8273  02EF  3002               	movlw 2	; select bank4/5
  8274  02F0  0087               	movwf fsr1h	
  8275                           	
  8276  02F1  1581               	bsf	indf1,3
  8277                           	line	202
  8278                           ;OverLoad_B1.c: 202: Load->ErrorCount=0;
  8279  02F2  086B               	movf	(_Load),w
  8280  02F3  3E3C               	addlw	03Ch
  8281  02F4  0086               	movwf	fsr1l
  8282  02F5  3002               	movlw 2	; select bank4/5
  8283  02F6  0087               	movwf fsr1h	
  8284                           	
  8285  02F7  0181               	clrf	indf1
  8286                           	line	203
  8287                           ;OverLoad_B1.c: 203: Load->Count=0;
  8288  02F8  086B               	movf	(_Load),w
  8289  02F9  3E3A               	addlw	03Ah
  8290  02FA  0086               	movwf	fsr1l
  8291  02FB  3002               	movlw 2	; select bank4/5
  8292  02FC  0087               	movwf fsr1h	
  8293                           	
  8294  02FD  0181               	clrf	indf1
  8295                           	line	204
  8296                           ;OverLoad_B1.c: 204: Load->TotalLoad=0;
  8297  02FE  086B               	movf	(_Load),w
  8298  02FF  3E06               	addlw	06h
  8299  0300  0086               	movwf	fsr1l
  8300  0301  3002               	movlw 2	; select bank4/5
  8301  0302  0087               	movwf fsr1h	
  8302                           	
  8303  0303  3000               	movlw	low(0)
  8304  0304  3FC0               	movwi	[0]fsr1
  8305  0305  3000               	movlw	high(0)
  8306  0306  3FC1               	movwi	[1]fsr1
  8307                           	line	205
  8308                           ;OverLoad_B1.c: 205: Load->NumberCount=0;
  8309  0307  086B               	movf	(_Load),w
  8310  0308  3E3F               	addlw	03Fh
  8311  0309  0086               	movwf	fsr1l
  8312  030A  3002               	movlw 2	; select bank4/5
  8313  030B  0087               	movwf fsr1h	
  8314                           	
  8315  030C  0181               	clrf	indf1
  8316                           	line	206
  8317                           ;OverLoad_B1.c: 206: Load->StatusOn=0;
  8318  030D  086B               	movf	(_Load),w
  8319  030E  3E46               	addlw	046h
  8320  030F  0086               	movwf	fsr1l
  8321  0310  3002               	movlw 2	; select bank4/5
  8322  0311  0087               	movwf fsr1h	
  8323                           	
  8324  0312  1001               	bcf	indf1,0
  8325                           	line	207
  8326                           ;OverLoad_B1.c: 207: Load->StatusOff=0;
  8327  0313  086B               	movf	(_Load),w
  8328  0314  3E46               	addlw	046h
  8329  0315  0086               	movwf	fsr1l
  8330  0316  3002               	movlw 2	; select bank4/5
  8331  0317  0087               	movwf fsr1h	
  8332                           	
  8333  0318  1081               	bcf	indf1,1
  8334                           	line	208
  8335                           	
  8336  0319                     l21898:	
  8337                           ;OverLoad_B1.c: 208: setLoad_AH_AL_Restore(1);
  8338  0319  3001               	movlw	(01h)
  8339  031A  31A4  241C  3180   	fcall	_setLoad_AH_AL_Restore
  8340                           	line	211
  8341                           	
  8342  031D                     l21900:	
  8343                           ;OverLoad_B1.c: 211: setDimmerLights_Open(1,1);
  8344  031D  0020               	movlb 0	; select bank0
  8345  031E  01A2               	clrf	(?_setDimmerLights_Open)
  8346  031F  1403               	bsf	status,0
  8347  0320  0DA2               	rlf	(?_setDimmerLights_Open),f
  8348  0321  3001               	movlw	(01h)
  8349  0322  31A0  2038  3180   	fcall	_setDimmerLights_Open
  8350  0325  2B29               	goto	l9598
  8351                           	line	235
  8352                           	
  8353  0326                     l9597:	
  8354  0326  2B29               	goto	l9598
  8355                           	line	236
  8356                           	
  8357  0327                     l9596:	
  8358  0327  2B29               	goto	l9598
  8359                           	line	237
  8360                           	
  8361  0328                     l9592:	
  8362  0328  2B29               	goto	l9598
  8363                           	line	238
  8364                           	
  8365  0329                     l9575:	
  8366                           	line	239
  8367                           	
  8368  0329                     l9598:	
  8369  0329  0008               	return
  8370                           	opt stack 0
  8371                           GLOBAL	__end_of_setLoad_Main
  8372  032A                     	__end_of_setLoad_Main:
  8373 ;; =============== function _setLoad_Main ends ============
  8374                           
  8375                           	signat	_setLoad_Main,4216
  8376                           	global	_DimmerLights_Main
  8377                           psect	text4880,local,class=CODE,delta=2
  8378                           global __ptext4880
  8379  2D9E                     __ptext4880:
  8380                           
  8381 ;; *************** function _DimmerLights_Main *****************
  8382 ;; Defined at:
  8383 ;;		line 84 in file "G:\Program\PIC\Source_File\Dimmer_B1.c"
  8384 ;; Parameters:    Size  Location     Type
  8385 ;;		None
  8386 ;; Auto vars:     Size  Location     Type
  8387 ;;		None
  8388 ;; Return value:  Size  Location     Type
  8389 ;;		None               void
  8390 ;; Registers used:
  8391 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8392 ;; Tracked objects:
  8393 ;;		On entry : 0/0
  8394 ;;		On exit  : 0/0
  8395 ;;		Unchanged: 0/0
  8396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  8397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  8398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  8399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  8400 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  8401 ;;Total ram usage:        0 bytes
  8402 ;; Hardware stack levels used:    1
  8403 ;; Hardware stack levels required when called:    9
  8404 ;; This function calls:
  8405 ;;		_setDimmerLights_Main
  8406 ;;		_DimmerLights_Close
  8407 ;; This function is called by:
  8408 ;;		_main
  8409 ;; This function uses a non-reentrant model
  8410 ;;
  8411                           psect	text4880
  8412                           	file	"G:\Program\PIC\Source_File\Dimmer_B1.c"
  8413                           	line	84
  8414                           	global	__size_of_DimmerLights_Main
  8415  0008                     	__size_of_DimmerLights_Main	equ	__end_of_DimmerLights_Main-_DimmerLights_Main
  8416                           	
  8417  2D9E                     _DimmerLights_Main:	
  8418                           	opt	stack 6
  8419                           ; Regs used in _DimmerLights_Main: [wreg+fsr1l-status,0+pclath+cstack]
  8420                           	line	86
  8421                           	
  8422  2D9E                     l21804:	
  8423                           ;Dimmer_B1.c: 86: setDimmerLights_Main(1);
  8424  2D9E  3001               	movlw	(01h)
  8425  2D9F  3193  23F4  31AD   	fcall	_setDimmerLights_Main
  8426                           	line	95
  8427                           ;Dimmer_B1.c: 95: DimmerLights_Close();
  8428  2DA2  31A2  227D  31AD   	fcall	_DimmerLights_Close
  8429                           	line	96
  8430                           	
  8431  2DA5                     l4701:	
  8432  2DA5  0008               	return
  8433                           	opt stack 0
  8434                           GLOBAL	__end_of_DimmerLights_Main
  8435  2DA6                     	__end_of_DimmerLights_Main:
  8436 ;; =============== function _DimmerLights_Main ends ============
  8437                           
  8438                           	signat	_DimmerLights_Main,88
  8439                           	global	_setRF_DimmerValue
  8440                           psect	text4881,local,class=CODE,delta=2
  8441                           global __ptext4881
  8442  25F6                     __ptext4881:
  8443                           
  8444 ;; *************** function _setRF_DimmerValue *****************
  8445 ;; Defined at:
  8446 ;;		line 404 in file "G:\Program\PIC\Source_File\RF_Control_B1.c"
  8447 ;; Parameters:    Size  Location     Type
  8448 ;;  lights          1    wreg     unsigned char 
  8449 ;; Auto vars:     Size  Location     Type
  8450 ;;  lights          1   64[BANK0 ] unsigned char 
  8451 ;; Return value:  Size  Location     Type
  8452 ;;		None               void
  8453 ;; Registers used:
  8454 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8455 ;; Tracked objects:
  8456 ;;		On entry : 0/0
  8457 ;;		On exit  : 0/0
  8458 ;;		Unchanged: 0/0
  8459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  8460 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  8461 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  8462 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  8463 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
  8464 ;;Total ram usage:        3 bytes
  8465 ;; Hardware stack levels used:    1
  8466 ;; Hardware stack levels required when called:    8
  8467 ;; This function calls:
  8468 ;;		_setDimmerLights_AdjRF
  8469 ;; This function is called by:
  8470 ;;		_setRFSW_AdjControl
  8471 ;; This function uses a non-reentrant model
  8472 ;;
  8473                           psect	text4881
  8474                           	file	"G:\Program\PIC\Source_File\RF_Control_B1.c"
  8475                           	line	404
  8476                           	global	__size_of_setRF_DimmerValue
  8477  0039                     	__size_of_setRF_DimmerValue	equ	__end_of_setRF_DimmerValue-_setRF_DimmerValue
  8478                           	
  8479  25F6                     _setRF_DimmerValue:	
  8480                           	opt	stack 2
  8481                           ; Regs used in _setRF_DimmerValue: [wreg+fsr1l-status,0+pclath+cstack]
  8482                           ;setRF_DimmerValue@lights stored from wreg
  8483  25F6  0020               	movlb 0	; select bank0
  8484  25F7  00E0               	movwf	(setRF_DimmerValue@lights)
  8485                           	line	405
  8486                           	
  8487  25F8                     l20296:	
  8488                           ;RF_Control_B1.c: 405: if(RF_Data[9] > 0x64)
  8489  25F8  3065               	movlw	(065h)
  8490  25F9  0021               	movlb 1	; select bank1
  8491  25FA  0229               	subwf	0+(_RF_Data)^080h+09h,w
  8492  25FB  1C03               	skipc
  8493  25FC  2DFE               	goto	u8491
  8494  25FD  2DFF               	goto	u8490
  8495  25FE                     u8491:
  8496  25FE  2E06               	goto	l20300
  8497  25FF                     u8490:
  8498                           	line	407
  8499                           	
  8500  25FF                     l20298:	
  8501                           ;RF_Control_B1.c: 406: {
  8502                           ;RF_Control_B1.c: 407: RF_Data[9]=0x64;
  8503  25FF  3064               	movlw	(064h)
  8504  2600  0020               	movlb 0	; select bank0
  8505  2601  00DE               	movwf	(??_setRF_DimmerValue+0)+0
  8506  2602  085E               	movf	(??_setRF_DimmerValue+0)+0,w
  8507  2603  0021               	movlb 1	; select bank1
  8508  2604  00A9               	movwf	0+(_RF_Data)^080h+09h
  8509  2605  2E06               	goto	l20300
  8510                           	line	408
  8511                           	
  8512  2606                     l13237:	
  8513                           	line	409
  8514                           	
  8515  2606                     l20300:	
  8516                           ;RF_Control_B1.c: 408: }
  8517                           ;RF_Control_B1.c: 409: Product->Data[9]=RF_Data[9];
  8518  2606  0829               	movf	0+(_RF_Data)^080h+09h,w
  8519  2607  0020               	movlb 0	; select bank0
  8520  2608  00DE               	movwf	(??_setRF_DimmerValue+0)+0
  8521  2609  086F               	movf	(_Product),w
  8522  260A  3E09               	addlw	09h
  8523  260B  0086               	movwf	fsr1l
  8524  260C  3001               	movlw 1	; select bank2/3
  8525  260D  0087               	movwf fsr1h	
  8526                           	
  8527  260E  085E               	movf	(??_setRF_DimmerValue+0)+0,w
  8528  260F  0081               	movwf	indf1
  8529                           	line	410
  8530                           	
  8531  2610                     l20302:	
  8532                           ;RF_Control_B1.c: 410: Product->Data[11]=lights;
  8533  2610  0860               	movf	(setRF_DimmerValue@lights),w
  8534  2611  00DE               	movwf	(??_setRF_DimmerValue+0)+0
  8535  2612  086F               	movf	(_Product),w
  8536  2613  3E0B               	addlw	0Bh
  8537  2614  0086               	movwf	fsr1l
  8538  2615  3001               	movlw 1	; select bank2/3
  8539  2616  0087               	movwf fsr1h	
  8540                           	
  8541  2617  085E               	movf	(??_setRF_DimmerValue+0)+0,w
  8542  2618  0081               	movwf	indf1
  8543                           	line	411
  8544                           	
  8545  2619                     l20304:	
  8546                           ;RF_Control_B1.c: 411: Product->Data[(20+lights)]=Product->Data[9];
  8547  2619  086F               	movf	(_Product),w
  8548  261A  3E09               	addlw	09h
  8549  261B  0086               	movwf	fsr1l
  8550  261C  3001               	movlw 1	; select bank2/3
  8551  261D  0087               	movwf fsr1h	
  8552                           	
  8553  261E  0801               	movf	indf1,w
  8554  261F  00DE               	movwf	(??_setRF_DimmerValue+0)+0
  8555  2620  0860               	movf	(setRF_DimmerValue@lights),w
  8556  2621  3E14               	addlw	014h
  8557  2622  076F               	addwf	(_Product),w
  8558  2623  00DF               	movwf	(??_setRF_DimmerValue+1)+0
  8559  2624  085F               	movf	0+(??_setRF_DimmerValue+1)+0,w
  8560  2625  0086               	movwf	fsr1l
  8561  2626  3001               	movlw 1	; select bank2/3
  8562  2627  0087               	movwf fsr1h	
  8563                           	
  8564  2628  085E               	movf	(??_setRF_DimmerValue+0)+0,w
  8565  2629  0081               	movwf	indf1
  8566                           	line	412
  8567                           	
  8568  262A                     l20306:	
  8569                           ;RF_Control_B1.c: 412: setDimmerLights_AdjRF(lights);
  8570  262A  0860               	movf	(setRF_DimmerValue@lights),w
  8571  262B  31A2  220E  31A5   	fcall	_setDimmerLights_AdjRF
  8572                           	line	413
  8573                           	
  8574  262E                     l13238:	
  8575  262E  0008               	return
  8576                           	opt stack 0
  8577                           GLOBAL	__end_of_setRF_DimmerValue
  8578  262F                     	__end_of_setRF_DimmerValue:
  8579 ;; =============== function _setRF_DimmerValue ends ============
  8580                           
  8581                           	signat	_setRF_DimmerValue,4216
  8582                           	global	_setPowerFault_ERROR
  8583                           psect	text4882,local,class=CODE,delta=2
  8584                           global __ptext4882
  8585  1B21                     __ptext4882:
  8586                           
  8587 ;; *************** function _setPowerFault_ERROR *****************
  8588 ;; Defined at:
  8589 ;;		line 139 in file "G:\Program\PIC\Source_File\PowerFault_B1.c"
  8590 ;; Parameters:    Size  Location     Type
  8591 ;;  pf              1    wreg     unsigned char 
  8592 ;;  command         1   15[BANK0 ] unsigned char 
  8593 ;; Auto vars:     Size  Location     Type
  8594 ;;  pf              1   17[BANK0 ] unsigned char 
  8595 ;; Return value:  Size  Location     Type
  8596 ;;		None               void
  8597 ;; Registers used:
  8598 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8599 ;; Tracked objects:
  8600 ;;		On entry : 0/0
  8601 ;;		On exit  : 0/0
  8602 ;;		Unchanged: 0/0
  8603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  8604 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  8605 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  8606 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  8607 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
  8608 ;;Total ram usage:        3 bytes
  8609 ;; Hardware stack levels used:    1
  8610 ;; Hardware stack levels required when called:    8
  8611 ;; This function calls:
  8612 ;;		_PowerFaultPointSelect
  8613 ;;		_setDimmer_PFERROR
  8614 ;;		_DimmerLights_ERROR
  8615 ;;		_setLED
  8616 ;;		_setSw_Enable
  8617 ;;		_setRF_Enable
  8618 ;; This function is called by:
  8619 ;;		_setPowerFault_Main
  8620 ;; This function uses a non-reentrant model
  8621 ;;
  8622                           psect	text4882
  8623                           	file	"G:\Program\PIC\Source_File\PowerFault_B1.c"
  8624                           	line	139
  8625                           	global	__size_of_setPowerFault_ERROR
  8626  005D                     	__size_of_setPowerFault_ERROR	equ	__end_of_setPowerFault_ERROR-_setPowerFault_ERROR
  8627                           	
  8628  1B21                     _setPowerFault_ERROR:	
  8629                           	opt	stack 5
  8630                           ; Regs used in _setPowerFault_ERROR: [wreg+fsr1l-status,0+pclath+cstack]
  8631                           ;setPowerFault_ERROR@pf stored from wreg
  8632  1B21  0020               	movlb 0	; select bank0
  8633  1B22  00B1               	movwf	(setPowerFault_ERROR@pf)
  8634                           	line	140
  8635                           	
  8636  1B23                     l21776:	
  8637                           ;PowerFault_B1.c: 140: PowerFaultPointSelect(pf);
  8638  1B23  0831               	movf	(setPowerFault_ERROR@pf),w
  8639  1B24  31AD  2584  319B   	fcall	_PowerFaultPointSelect
  8640                           	line	141
  8641                           	
  8642  1B27                     l21778:	
  8643                           ;PowerFault_B1.c: 141: if(command == 1)
  8644  1B27  0020               	movlb 0	; select bank0
  8645  1B28  082F               	movf	(setPowerFault_ERROR@command),w
  8646  1B29  3A01               	xorlw	01h&0ffh
  8647  1B2A  1D03               	skipz
  8648  1B2B  2B2D               	goto	u10491
  8649  1B2C  2B2E               	goto	u10490
  8650  1B2D                     u10491:
  8651  1B2D  2B52               	goto	l21792
  8652  1B2E                     u10490:
  8653                           	line	143
  8654                           	
  8655  1B2E                     l21780:	
  8656                           ;PowerFault_B1.c: 142: {
  8657                           ;PowerFault_B1.c: 143: PF->ERROR=1;
  8658  1B2E  086C               	movf	(_PF),w
  8659  1B2F  0086               	movwf	fsr1l
  8660  1B30  0187               	clrf fsr1h	
  8661                           	
  8662  1B31  1481               	bsf	indf1,1
  8663                           	line	144
  8664                           	
  8665  1B32                     l21782:	
  8666                           ;PowerFault_B1.c: 144: setDimmer_PFERROR(1,1);
  8667  1B32  01A2               	clrf	(?_setDimmer_PFERROR)
  8668  1B33  1403               	bsf	status,0
  8669  1B34  0DA2               	rlf	(?_setDimmer_PFERROR),f
  8670  1B35  3001               	movlw	(01h)
  8671  1B36  31AF  27C0  319B   	fcall	_setDimmer_PFERROR
  8672                           	line	145
  8673                           	
  8674  1B39                     l21784:	
  8675                           ;PowerFault_B1.c: 145: DimmerLights_ERROR();
  8676  1B39  319F  2702  319B   	fcall	_DimmerLights_ERROR
  8677                           	line	146
  8678                           	
  8679  1B3C                     l21786:	
  8680                           ;PowerFault_B1.c: 146: setLED(99,11);
  8681  1B3C  300B               	movlw	(0Bh)
  8682  1B3D  0020               	movlb 0	; select bank0
  8683  1B3E  00B0               	movwf	(??_setPowerFault_ERROR+0)+0
  8684  1B3F  0830               	movf	(??_setPowerFault_ERROR+0)+0,w
  8685  1B40  00A2               	movwf	(?_setLED)
  8686  1B41  3063               	movlw	(063h)
  8687  1B42  3191  21A4  319B   	fcall	_setLED
  8688                           	line	149
  8689                           	
  8690  1B45                     l21788:	
  8691                           ;PowerFault_B1.c: 149: setSw_Enable(1,0);
  8692  1B45  0020               	movlb 0	; select bank0
  8693  1B46  01A2               	clrf	(?_setSw_Enable)
  8694  1B47  3001               	movlw	(01h)
  8695  1B48  31AF  27F0  319B   	fcall	_setSw_Enable
  8696                           	line	159
  8697                           	
  8698  1B4B                     l21790:	
  8699                           ;PowerFault_B1.c: 159: setRF_Enable(1,0);
  8700  1B4B  0020               	movlb 0	; select bank0
  8701  1B4C  01A5               	clrf	(?_setRF_Enable)
  8702  1B4D  3001               	movlw	(01h)
  8703  1B4E  31A2  22F1  319B   	fcall	_setRF_Enable
  8704                           	line	161
  8705                           ;PowerFault_B1.c: 161: }
  8706  1B51  2B7D               	goto	l11988
  8707                           	line	162
  8708                           	
  8709  1B52                     l11986:	
  8710                           	line	164
  8711                           	
  8712  1B52                     l21792:	
  8713                           ;PowerFault_B1.c: 162: else
  8714                           ;PowerFault_B1.c: 163: {
  8715                           ;PowerFault_B1.c: 164: PF->ERROR=0;
  8716  1B52  0020               	movlb 0	; select bank0
  8717  1B53  086C               	movf	(_PF),w
  8718  1B54  0086               	movwf	fsr1l
  8719  1B55  0187               	clrf fsr1h	
  8720                           	
  8721  1B56  1081               	bcf	indf1,1
  8722                           	line	165
  8723                           ;PowerFault_B1.c: 165: PF->Safe=1;
  8724  1B57  086C               	movf	(_PF),w
  8725  1B58  0086               	movwf	fsr1l
  8726  1B59  0187               	clrf fsr1h	
  8727                           	
  8728  1B5A  1501               	bsf	indf1,2
  8729                           	line	166
  8730                           	
  8731  1B5B                     l21794:	
  8732                           ;PowerFault_B1.c: 166: setDimmer_PFERROR(1,0);
  8733  1B5B  01A2               	clrf	(?_setDimmer_PFERROR)
  8734  1B5C  3001               	movlw	(01h)
  8735  1B5D  31AF  27C0  319B   	fcall	_setDimmer_PFERROR
  8736                           	line	167
  8737                           	
  8738  1B60                     l21796:	
  8739                           ;PowerFault_B1.c: 167: DimmerLights_ERROR();
  8740  1B60  319F  2702  319B   	fcall	_DimmerLights_ERROR
  8741                           	line	168
  8742                           	
  8743  1B63                     l21798:	
  8744                           ;PowerFault_B1.c: 168: setLED(99,10);
  8745  1B63  300A               	movlw	(0Ah)
  8746  1B64  0020               	movlb 0	; select bank0
  8747  1B65  00B0               	movwf	(??_setPowerFault_ERROR+0)+0
  8748  1B66  0830               	movf	(??_setPowerFault_ERROR+0)+0,w
  8749  1B67  00A2               	movwf	(?_setLED)
  8750  1B68  3063               	movlw	(063h)
  8751  1B69  3191  21A4  319B   	fcall	_setLED
  8752                           	line	171
  8753                           	
  8754  1B6C                     l21800:	
  8755                           ;PowerFault_B1.c: 171: setSw_Enable(1,1);
  8756  1B6C  0020               	movlb 0	; select bank0
  8757  1B6D  01A2               	clrf	(?_setSw_Enable)
  8758  1B6E  1403               	bsf	status,0
  8759  1B6F  0DA2               	rlf	(?_setSw_Enable),f
  8760  1B70  3001               	movlw	(01h)
  8761  1B71  31AF  27F0  319B   	fcall	_setSw_Enable
  8762                           	line	182
  8763                           	
  8764  1B74                     l21802:	
  8765                           ;PowerFault_B1.c: 182: setRF_Enable(1,1);
  8766  1B74  0020               	movlb 0	; select bank0
  8767  1B75  01A5               	clrf	(?_setRF_Enable)
  8768  1B76  1403               	bsf	status,0
  8769  1B77  0DA5               	rlf	(?_setRF_Enable),f
  8770  1B78  3001               	movlw	(01h)
  8771  1B79  31A2  22F1  319B   	fcall	_setRF_Enable
  8772  1B7C  2B7D               	goto	l11988
  8773                           	line	184
  8774                           	
  8775  1B7D                     l11987:	
  8776                           	line	185
  8777                           	
  8778  1B7D                     l11988:	
  8779  1B7D  0008               	return
  8780                           	opt stack 0
  8781                           GLOBAL	__end_of_setPowerFault_ERROR
  8782  1B7E                     	__end_of_setPowerFault_ERROR:
  8783 ;; =============== function _setPowerFault_ERROR ends ============
  8784                           
  8785                           	signat	_setPowerFault_ERROR,8312
  8786                           	global	_setOverTemp_ERROR
  8787                           psect	text4883,local,class=CODE,delta=2
  8788                           global __ptext4883
  8789  1CB2                     __ptext4883:
  8790                           
  8791 ;; *************** function _setOverTemp_ERROR *****************
  8792 ;; Defined at:
  8793 ;;		line 144 in file "G:\Program\PIC\Source_File\OverTemperature_B1.c"
  8794 ;; Parameters:    Size  Location     Type
  8795 ;;  temp            1    wreg     unsigned char 
  8796 ;;  command         1   15[BANK0 ] unsigned char 
  8797 ;; Auto vars:     Size  Location     Type
  8798 ;;  temp            1   17[BANK0 ] unsigned char 
  8799 ;; Return value:  Size  Location     Type
  8800 ;;		None               void
  8801 ;; Registers used:
  8802 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8803 ;; Tracked objects:
  8804 ;;		On entry : 0/0
  8805 ;;		On exit  : 0/0
  8806 ;;		Unchanged: 0/0
  8807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  8808 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  8809 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  8810 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  8811 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
  8812 ;;Total ram usage:        3 bytes
  8813 ;; Hardware stack levels used:    1
  8814 ;; Hardware stack levels required when called:    8
  8815 ;; This function calls:
  8816 ;;		_TempPointSelect
  8817 ;;		_setDimmer_TempERROR
  8818 ;;		_DimmerLights_ERROR
  8819 ;;		_setLED
  8820 ;;		_setSw_Enable
  8821 ;;		_setRF_Enable
  8822 ;;		_setBuz
  8823 ;; This function is called by:
  8824 ;;		_setTemp_Main
  8825 ;; This function uses a non-reentrant model
  8826 ;;
  8827                           psect	text4883
  8828                           	file	"G:\Program\PIC\Source_File\OverTemperature_B1.c"
  8829                           	line	144
  8830                           	global	__size_of_setOverTemp_ERROR
  8831  006E                     	__size_of_setOverTemp_ERROR	equ	__end_of_setOverTemp_ERROR-_setOverTemp_ERROR
  8832                           	
  8833  1CB2                     _setOverTemp_ERROR:	
  8834                           	opt	stack 5
  8835                           ; Regs used in _setOverTemp_ERROR: [wreg+fsr1l-status,0+pclath+cstack]
  8836                           ;setOverTemp_ERROR@temp stored from wreg
  8837  1CB2  0020               	movlb 0	; select bank0
  8838  1CB3  00B1               	movwf	(setOverTemp_ERROR@temp)
  8839                           	line	145
  8840                           	
  8841  1CB4                     l21752:	
  8842                           ;OverTemperature_B1.c: 145: TempPointSelect(temp);
  8843  1CB4  0831               	movf	(setOverTemp_ERROR@temp),w
  8844  1CB5  31AD  257E  319C   	fcall	_TempPointSelect
  8845                           	line	146
  8846                           	
  8847  1CB8                     l21754:	
  8848                           ;OverTemperature_B1.c: 146: if(command)
  8849  1CB8  0020               	movlb 0	; select bank0
  8850  1CB9  082F               	movf	(setOverTemp_ERROR@command),w
  8851  1CBA  1D03               	skipz
  8852  1CBB  2CBD               	goto	u10470
  8853  1CBC  2CE2               	goto	l21768
  8854  1CBD                     u10470:
  8855                           	line	148
  8856                           	
  8857  1CBD                     l21756:	
  8858                           ;OverTemperature_B1.c: 147: {
  8859                           ;OverTemperature_B1.c: 148: Temp->ERROR=1;
  8860  1CBD  086E               	movf	(_Temp),w
  8861  1CBE  0086               	movwf	fsr1l
  8862  1CBF  3001               	movlw 1	; select bank2/3
  8863  1CC0  0087               	movwf fsr1h	
  8864                           	
  8865  1CC1  1481               	bsf	indf1,1
  8866                           	line	149
  8867                           	
  8868  1CC2                     l21758:	
  8869                           ;OverTemperature_B1.c: 149: setDimmer_TempERROR(1,1);
  8870  1CC2  01A2               	clrf	(?_setDimmer_TempERROR)
  8871  1CC3  1403               	bsf	status,0
  8872  1CC4  0DA2               	rlf	(?_setDimmer_TempERROR),f
  8873  1CC5  3001               	movlw	(01h)
  8874  1CC6  31AF  27A0  319C   	fcall	_setDimmer_TempERROR
  8875                           	line	150
  8876                           	
  8877  1CC9                     l21760:	
  8878                           ;OverTemperature_B1.c: 150: DimmerLights_ERROR();
  8879  1CC9  319F  2702  319C   	fcall	_DimmerLights_ERROR
  8880                           	line	152
  8881                           	
  8882  1CCC                     l21762:	
  8883                           ;OverTemperature_B1.c: 152: setLED(99,11);
  8884  1CCC  300B               	movlw	(0Bh)
  8885  1CCD  0020               	movlb 0	; select bank0
  8886  1CCE  00B0               	movwf	(??_setOverTemp_ERROR+0)+0
  8887  1CCF  0830               	movf	(??_setOverTemp_ERROR+0)+0,w
  8888  1CD0  00A2               	movwf	(?_setLED)
  8889  1CD1  3063               	movlw	(063h)
  8890  1CD2  3191  21A4  319C   	fcall	_setLED
  8891                           	line	155
  8892                           	
  8893  1CD5                     l21764:	
  8894                           ;OverTemperature_B1.c: 155: setSw_Enable(1,0);
  8895  1CD5  0020               	movlb 0	; select bank0
  8896  1CD6  01A2               	clrf	(?_setSw_Enable)
  8897  1CD7  3001               	movlw	(01h)
  8898  1CD8  31AF  27F0  319C   	fcall	_setSw_Enable
  8899                           	line	165
  8900                           	
  8901  1CDB                     l21766:	
  8902                           ;OverTemperature_B1.c: 165: setRF_Enable(1,0);
  8903  1CDB  0020               	movlb 0	; select bank0
  8904  1CDC  01A5               	clrf	(?_setRF_Enable)
  8905  1CDD  3001               	movlw	(01h)
  8906  1CDE  31A2  22F1  319C   	fcall	_setRF_Enable
  8907                           	line	167
  8908                           ;OverTemperature_B1.c: 167: }
  8909  1CE1  2D1F               	goto	l10818
  8910                           	line	168
  8911                           	
  8912  1CE2                     l10815:	
  8913                           	
  8914  1CE2                     l21768:	
  8915                           ;OverTemperature_B1.c: 168: else if(command == 0)
  8916  1CE2  0020               	movlb 0	; select bank0
  8917  1CE3  08AF               	movf	(setOverTemp_ERROR@command),f
  8918  1CE4  1D03               	skipz
  8919  1CE5  2CE7               	goto	u10481
  8920  1CE6  2CE8               	goto	u10480
  8921  1CE7                     u10481:
  8922  1CE7  2D1F               	goto	l10818
  8923  1CE8                     u10480:
  8924                           	line	170
  8925                           	
  8926  1CE8                     l21770:	
  8927                           ;OverTemperature_B1.c: 169: {
  8928                           ;OverTemperature_B1.c: 170: Temp->ERROR=0;
  8929  1CE8  086E               	movf	(_Temp),w
  8930  1CE9  0086               	movwf	fsr1l
  8931  1CEA  3001               	movlw 1	; select bank2/3
  8932  1CEB  0087               	movwf fsr1h	
  8933                           	
  8934  1CEC  1081               	bcf	indf1,1
  8935                           	line	171
  8936                           	
  8937  1CED                     l21772:	
  8938                           ;OverTemperature_B1.c: 171: setDimmer_TempERROR(1,0);
  8939  1CED  01A2               	clrf	(?_setDimmer_TempERROR)
  8940  1CEE  3001               	movlw	(01h)
  8941  1CEF  31AF  27A0  319C   	fcall	_setDimmer_TempERROR
  8942                           	line	172
  8943                           	
  8944  1CF2                     l21774:	
  8945                           ;OverTemperature_B1.c: 172: Temp->Safe=1;
  8946  1CF2  0020               	movlb 0	; select bank0
  8947  1CF3  086E               	movf	(_Temp),w
  8948  1CF4  0086               	movwf	fsr1l
  8949  1CF5  3001               	movlw 1	; select bank2/3
  8950  1CF6  0087               	movwf fsr1h	
  8951                           	
  8952  1CF7  1601               	bsf	indf1,4
  8953                           	line	173
  8954                           ;OverTemperature_B1.c: 173: setLED(99,10);
  8955  1CF8  300A               	movlw	(0Ah)
  8956  1CF9  00B0               	movwf	(??_setOverTemp_ERROR+0)+0
  8957  1CFA  0830               	movf	(??_setOverTemp_ERROR+0)+0,w
  8958  1CFB  00A2               	movwf	(?_setLED)
  8959  1CFC  3063               	movlw	(063h)
  8960  1CFD  3191  21A4  319C   	fcall	_setLED
  8961                           	line	174
  8962                           ;OverTemperature_B1.c: 174: setBuz(1,2,100);
  8963  1D00  3002               	movlw	(02h)
  8964  1D01  0020               	movlb 0	; select bank0
  8965  1D02  00B0               	movwf	(??_setOverTemp_ERROR+0)+0
  8966  1D03  0830               	movf	(??_setOverTemp_ERROR+0)+0,w
  8967  1D04  00A9               	movwf	(?_setBuz)
  8968  1D05  3064               	movlw	low(064h)
  8969  1D06  00AA               	movwf	0+(?_setBuz)+01h
  8970  1D07  3000               	movlw	high(064h)
  8971  1D08  00AB               	movwf	(0+(?_setBuz)+01h)+1
  8972  1D09  3001               	movlw	(01h)
  8973  1D0A  3194  2499  319C   	fcall	_setBuz
  8974                           	line	177
  8975                           ;OverTemperature_B1.c: 177: setSw_Enable(1,1);
  8976  1D0D  0020               	movlb 0	; select bank0
  8977  1D0E  01A2               	clrf	(?_setSw_Enable)
  8978  1D0F  1403               	bsf	status,0
  8979  1D10  0DA2               	rlf	(?_setSw_Enable),f
  8980  1D11  3001               	movlw	(01h)
  8981  1D12  31AF  27F0  319C   	fcall	_setSw_Enable
  8982                           	line	189
  8983                           ;OverTemperature_B1.c: 189: setRF_Enable(1,1);
  8984  1D15  0020               	movlb 0	; select bank0
  8985  1D16  01A5               	clrf	(?_setRF_Enable)
  8986  1D17  1403               	bsf	status,0
  8987  1D18  0DA5               	rlf	(?_setRF_Enable),f
  8988  1D19  3001               	movlw	(01h)
  8989  1D1A  31A2  22F1  319C   	fcall	_setRF_Enable
  8990  1D1D  2D1F               	goto	l10818
  8991                           	line	191
  8992                           	
  8993  1D1E                     l10817:	
  8994  1D1E  2D1F               	goto	l10818
  8995                           	line	192
  8996                           	
  8997  1D1F                     l10816:	
  8998                           	
  8999  1D1F                     l10818:	
  9000  1D1F  0008               	return
  9001                           	opt stack 0
  9002                           GLOBAL	__end_of_setOverTemp_ERROR
  9003  1D20                     	__end_of_setOverTemp_ERROR:
  9004 ;; =============== function _setOverTemp_ERROR ends ============
  9005                           
  9006                           	signat	_setOverTemp_ERROR,8312
  9007                           	global	_setLoad_ERROR
  9008                           psect	text4884,local,class=CODE,delta=2
  9009                           global __ptext4884
  9010  1D94                     __ptext4884:
  9011                           
  9012 ;; *************** function _setLoad_ERROR *****************
  9013 ;; Defined at:
  9014 ;;		line 242 in file "G:\Program\PIC\Source_File\OverLoad_B1.c"
  9015 ;; Parameters:    Size  Location     Type
  9016 ;;  load            1    wreg     unsigned char 
  9017 ;;  command         1   15[BANK0 ] unsigned char 
  9018 ;; Auto vars:     Size  Location     Type
  9019 ;;  load            1   17[BANK0 ] unsigned char 
  9020 ;; Return value:  Size  Location     Type
  9021 ;;		None               void
  9022 ;; Registers used:
  9023 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9024 ;; Tracked objects:
  9025 ;;		On entry : 0/0
  9026 ;;		On exit  : 0/0
  9027 ;;		Unchanged: 0/0
  9028 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  9029 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  9030 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  9031 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  9032 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
  9033 ;;Total ram usage:        3 bytes
  9034 ;; Hardware stack levels used:    1
  9035 ;; Hardware stack levels required when called:    8
  9036 ;; This function calls:
  9037 ;;		_LoadPointSelect
  9038 ;;		_setDimmer_LoadERROR
  9039 ;;		_DimmerLights_ERROR
  9040 ;;		_setLED
  9041 ;;		_setSw_Enable
  9042 ;;		_setRF_Enable
  9043 ;; This function is called by:
  9044 ;;		_setLoad_Main
  9045 ;; This function uses a non-reentrant model
  9046 ;;
  9047                           psect	text4884
  9048                           	file	"G:\Program\PIC\Source_File\OverLoad_B1.c"
  9049                           	line	242
  9050                           	global	__size_of_setLoad_ERROR
  9051  0075                     	__size_of_setLoad_ERROR	equ	__end_of_setLoad_ERROR-_setLoad_ERROR
  9052                           	
  9053  1D94                     _setLoad_ERROR:	
  9054                           	opt	stack 5
  9055                           ; Regs used in _setLoad_ERROR: [wreg+fsr1l-status,0+pclath+cstack]
  9056                           ;setLoad_ERROR@load stored from wreg
  9057  1D94  0020               	movlb 0	; select bank0
  9058  1D95  00B1               	movwf	(setLoad_ERROR@load)
  9059                           	line	243
  9060                           	
  9061  1D96                     l21716:	
  9062                           ;OverLoad_B1.c: 243: LoadPointSelect(load);
  9063  1D96  0831               	movf	(setLoad_ERROR@load),w
  9064  1D97  31AE  2692  319D   	fcall	_LoadPointSelect
  9065                           	line	244
  9066                           	
  9067  1D9A                     l21718:	
  9068                           ;OverLoad_B1.c: 244: if(command)
  9069  1D9A  0020               	movlb 0	; select bank0
  9070  1D9B  082F               	movf	(setLoad_ERROR@command),w
  9071  1D9C  1D03               	skipz
  9072  1D9D  2D9F               	goto	u10450
  9073  1D9E  2DD2               	goto	l21736
  9074  1D9F                     u10450:
  9075                           	line	246
  9076                           	
  9077  1D9F                     l21720:	
  9078                           ;OverLoad_B1.c: 245: {
  9079                           ;OverLoad_B1.c: 246: setDimmer_LoadERROR(1,1);
  9080  1D9F  01A2               	clrf	(?_setDimmer_LoadERROR)
  9081  1DA0  1403               	bsf	status,0
  9082  1DA1  0DA2               	rlf	(?_setDimmer_LoadERROR),f
  9083  1DA2  3001               	movlw	(01h)
  9084  1DA3  31AF  27B0  319D   	fcall	_setDimmer_LoadERROR
  9085                           	line	247
  9086                           	
  9087  1DA6                     l21722:	
  9088                           ;OverLoad_B1.c: 247: Load->ERROR=1;
  9089  1DA6  0020               	movlb 0	; select bank0
  9090  1DA7  086B               	movf	(_Load),w
  9091  1DA8  0086               	movwf	fsr1l
  9092  1DA9  3002               	movlw 2	; select bank4/5
  9093  1DAA  0087               	movwf fsr1h	
  9094                           	
  9095  1DAB  1681               	bsf	indf1,5
  9096                           	line	248
  9097                           	
  9098  1DAC                     l21724:	
  9099                           ;OverLoad_B1.c: 248: Load->ErrorStatus=1;
  9100  1DAC  086B               	movf	(_Load),w
  9101  1DAD  3E05               	addlw	05h
  9102  1DAE  0086               	movwf	fsr1l
  9103  1DAF  3002               	movlw 2	; select bank4/5
  9104  1DB0  0087               	movwf fsr1h	
  9105                           	
  9106  1DB1  0181               	clrf	indf1
  9107  1DB2  1403               	bsf	status,0
  9108  1DB3  0D81               	rlf	indf1,f
  9109                           	line	249
  9110                           	
  9111  1DB4                     l21726:	
  9112                           ;OverLoad_B1.c: 249: Load->Safe=0;
  9113  1DB4  086B               	movf	(_Load),w
  9114  1DB5  0086               	movwf	fsr1l
  9115  1DB6  3002               	movlw 2	; select bank4/5
  9116  1DB7  0087               	movwf fsr1h	
  9117                           	
  9118  1DB8  1181               	bcf	indf1,3
  9119                           	line	250
  9120                           	
  9121  1DB9                     l21728:	
  9122                           ;OverLoad_B1.c: 250: DimmerLights_ERROR();
  9123  1DB9  319F  2702  319D   	fcall	_DimmerLights_ERROR
  9124                           	line	251
  9125                           	
  9126  1DBC                     l21730:	
  9127                           ;OverLoad_B1.c: 251: setLED(99,11);
  9128  1DBC  300B               	movlw	(0Bh)
  9129  1DBD  0020               	movlb 0	; select bank0
  9130  1DBE  00B0               	movwf	(??_setLoad_ERROR+0)+0
  9131  1DBF  0830               	movf	(??_setLoad_ERROR+0)+0,w
  9132  1DC0  00A2               	movwf	(?_setLED)
  9133  1DC1  3063               	movlw	(063h)
  9134  1DC2  3191  21A4  319D   	fcall	_setLED
  9135                           	line	254
  9136                           	
  9137  1DC5                     l21732:	
  9138                           ;OverLoad_B1.c: 254: setSw_Enable(1,0);
  9139  1DC5  0020               	movlb 0	; select bank0
  9140  1DC6  01A2               	clrf	(?_setSw_Enable)
  9141  1DC7  3001               	movlw	(01h)
  9142  1DC8  31AF  27F0  319D   	fcall	_setSw_Enable
  9143                           	line	266
  9144                           	
  9145  1DCB                     l21734:	
  9146                           ;OverLoad_B1.c: 266: setRF_Enable(1,0);
  9147  1DCB  0020               	movlb 0	; select bank0
  9148  1DCC  01A5               	clrf	(?_setRF_Enable)
  9149  1DCD  3001               	movlw	(01h)
  9150  1DCE  31A2  22F1  319D   	fcall	_setRF_Enable
  9151                           	line	268
  9152                           ;OverLoad_B1.c: 268: }
  9153  1DD1  2E08               	goto	l9604
  9154                           	line	269
  9155                           	
  9156  1DD2                     l9601:	
  9157                           	
  9158  1DD2                     l21736:	
  9159                           ;OverLoad_B1.c: 269: else if(command == 0)
  9160  1DD2  0020               	movlb 0	; select bank0
  9161  1DD3  08AF               	movf	(setLoad_ERROR@command),f
  9162  1DD4  1D03               	skipz
  9163  1DD5  2DD7               	goto	u10461
  9164  1DD6  2DD8               	goto	u10460
  9165  1DD7                     u10461:
  9166  1DD7  2E08               	goto	l9604
  9167  1DD8                     u10460:
  9168                           	line	271
  9169                           	
  9170  1DD8                     l21738:	
  9171                           ;OverLoad_B1.c: 270: {
  9172                           ;OverLoad_B1.c: 271: setDimmer_LoadERROR(1,0);
  9173  1DD8  01A2               	clrf	(?_setDimmer_LoadERROR)
  9174  1DD9  3001               	movlw	(01h)
  9175  1DDA  31AF  27B0  319D   	fcall	_setDimmer_LoadERROR
  9176                           	line	272
  9177                           	
  9178  1DDD                     l21740:	
  9179                           ;OverLoad_B1.c: 272: Load->ERROR=0;
  9180  1DDD  0020               	movlb 0	; select bank0
  9181  1DDE  086B               	movf	(_Load),w
  9182  1DDF  0086               	movwf	fsr1l
  9183  1DE0  3002               	movlw 2	; select bank4/5
  9184  1DE1  0087               	movwf fsr1h	
  9185                           	
  9186  1DE2  1281               	bcf	indf1,5
  9187                           	line	273
  9188                           	
  9189  1DE3                     l21742:	
  9190                           ;OverLoad_B1.c: 273: Load->ErrorStatus=0;
  9191  1DE3  086B               	movf	(_Load),w
  9192  1DE4  3E05               	addlw	05h
  9193  1DE5  0086               	movwf	fsr1l
  9194  1DE6  3002               	movlw 2	; select bank4/5
  9195  1DE7  0087               	movwf fsr1h	
  9196                           	
  9197  1DE8  0181               	clrf	indf1
  9198                           	line	274
  9199                           	
  9200  1DE9                     l21744:	
  9201                           ;OverLoad_B1.c: 274: Load->Safe=1;
  9202  1DE9  086B               	movf	(_Load),w
  9203  1DEA  0086               	movwf	fsr1l
  9204  1DEB  3002               	movlw 2	; select bank4/5
  9205  1DEC  0087               	movwf fsr1h	
  9206                           	
  9207  1DED  1581               	bsf	indf1,3
  9208                           	line	275
  9209                           	
  9210  1DEE                     l21746:	
  9211                           ;OverLoad_B1.c: 275: setLED(99,10);
  9212  1DEE  300A               	movlw	(0Ah)
  9213  1DEF  00B0               	movwf	(??_setLoad_ERROR+0)+0
  9214  1DF0  0830               	movf	(??_setLoad_ERROR+0)+0,w
  9215  1DF1  00A2               	movwf	(?_setLED)
  9216  1DF2  3063               	movlw	(063h)
  9217  1DF3  3191  21A4  319D   	fcall	_setLED
  9218                           	line	278
  9219                           	
  9220  1DF6                     l21748:	
  9221                           ;OverLoad_B1.c: 278: setSw_Enable(1,1);
  9222  1DF6  0020               	movlb 0	; select bank0
  9223  1DF7  01A2               	clrf	(?_setSw_Enable)
  9224  1DF8  1403               	bsf	status,0
  9225  1DF9  0DA2               	rlf	(?_setSw_Enable),f
  9226  1DFA  3001               	movlw	(01h)
  9227  1DFB  31AF  27F0  319D   	fcall	_setSw_Enable
  9228                           	line	290
  9229                           	
  9230  1DFE                     l21750:	
  9231                           ;OverLoad_B1.c: 290: setRF_Enable(1,1);
  9232  1DFE  0020               	movlb 0	; select bank0
  9233  1DFF  01A5               	clrf	(?_setRF_Enable)
  9234  1E00  1403               	bsf	status,0
  9235  1E01  0DA5               	rlf	(?_setRF_Enable),f
  9236  1E02  3001               	movlw	(01h)
  9237  1E03  31A2  22F1  319D   	fcall	_setRF_Enable
  9238  1E06  2E08               	goto	l9604
  9239                           	line	292
  9240                           	
  9241  1E07                     l9603:	
  9242  1E07  2E08               	goto	l9604
  9243                           	line	293
  9244                           	
  9245  1E08                     l9602:	
  9246                           	
  9247  1E08                     l9604:	
  9248  1E08  0008               	return
  9249                           	opt stack 0
  9250                           GLOBAL	__end_of_setLoad_ERROR
  9251  1E09                     	__end_of_setLoad_ERROR:
  9252 ;; =============== function _setLoad_ERROR ends ============
  9253                           
  9254                           	signat	_setLoad_ERROR,8312
  9255                           	global	_Switch_Main
  9256                           psect	text4885,local,class=CODE,delta=2
  9257                           global __ptext4885
  9258  2D65                     __ptext4885:
  9259                           
  9260 ;; *************** function _Switch_Main *****************
  9261 ;; Defined at:
  9262 ;;		line 60 in file "G:\Program\PIC\Source_File\Switch_B1.c"
  9263 ;; Parameters:    Size  Location     Type
  9264 ;;		None
  9265 ;; Auto vars:     Size  Location     Type
  9266 ;;		None
  9267 ;; Return value:  Size  Location     Type
  9268 ;;		None               void
  9269 ;; Registers used:
  9270 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9271 ;; Tracked objects:
  9272 ;;		On entry : 0/0
  9273 ;;		On exit  : 0/0
  9274 ;;		Unchanged: 0/0
  9275 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  9276 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  9277 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  9278 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  9279 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  9280 ;;Total ram usage:        0 bytes
  9281 ;; Hardware stack levels used:    1
  9282 ;; Hardware stack levels required when called:    8
  9283 ;; This function calls:
  9284 ;;		_setSw_Main
  9285 ;; This function is called by:
  9286 ;;		_main
  9287 ;; This function uses a non-reentrant model
  9288 ;;
  9289                           psect	text4885
  9290                           	file	"G:\Program\PIC\Source_File\Switch_B1.c"
  9291                           	line	60
  9292                           	global	__size_of_Switch_Main
  9293  0005                     	__size_of_Switch_Main	equ	__end_of_Switch_Main-_Switch_Main
  9294                           	
  9295  2D65                     _Switch_Main:	
  9296                           	opt	stack 7
  9297                           ; Regs used in _Switch_Main: [wreg+fsr1l-status,0+pclath+cstack]
  9298                           	line	62
  9299                           	
  9300  2D65                     l21714:	
  9301                           ;Switch_B1.c: 62: setSw_Main(1);
  9302  2D65  3001               	movlw	(01h)
  9303  2D66  3184  24FD  31AD   	fcall	_setSw_Main
  9304                           	line	71
  9305                           	
  9306  2D69                     l14393:	
  9307  2D69  0008               	return
  9308                           	opt stack 0
  9309                           GLOBAL	__end_of_Switch_Main
  9310  2D6A                     	__end_of_Switch_Main:
  9311 ;; =============== function _Switch_Main ends ============
  9312                           
  9313                           	signat	_Switch_Main,88
  9314                           	global	_Flash_Memory_Main
  9315                           psect	text4886,local,class=CODE,delta=2
  9316                           global __ptext4886
  9317  1978                     __ptext4886:
  9318                           
  9319 ;; *************** function _Flash_Memory_Main *****************
  9320 ;; Defined at:
  9321 ;;		line 390 in file "G:\Program\PIC\Source_File\MCU_16f1518_B1.c"
  9322 ;; Parameters:    Size  Location     Type
  9323 ;;		None
  9324 ;; Auto vars:     Size  Location     Type
  9325 ;;		None
  9326 ;; Return value:  Size  Location     Type
  9327 ;;		None               void
  9328 ;; Registers used:
  9329 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9330 ;; Tracked objects:
  9331 ;;		On entry : 0/0
  9332 ;;		On exit  : 0/0
  9333 ;;		Unchanged: 0/0
  9334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  9335 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  9336 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  9337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  9338 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  9339 ;;Total ram usage:        0 bytes
  9340 ;; Hardware stack levels used:    1
  9341 ;; Hardware stack levels required when called:    7
  9342 ;; This function calls:
  9343 ;;		_Flash_Memory_Modify
  9344 ;; This function is called by:
  9345 ;;		_main
  9346 ;; This function uses a non-reentrant model
  9347 ;;
  9348                           psect	text4886
  9349                           	file	"G:\Program\PIC\Source_File\MCU_16f1518_B1.c"
  9350                           	line	390
  9351                           	global	__size_of_Flash_Memory_Main
  9352  004E                     	__size_of_Flash_Memory_Main	equ	__end_of_Flash_Memory_Main-_Flash_Memory_Main
  9353                           	
  9354  1978                     _Flash_Memory_Main:	
  9355                           	opt	stack 8
  9356                           ; Regs used in _Flash_Memory_Main: [wreg+fsr1l-status,0+pclath+cstack]
  9357                           	line	391
  9358                           	
  9359  1978                     l21700:	
  9360                           ;MCU_16f1518_B1.c: 391: if(Memory->GO)
  9361  1978  087C               	movf	(_Memory),w
  9362  1979  3E22               	addlw	022h
  9363  197A  0086               	movwf	fsr1l
  9364  197B  3001               	movlw 1	; select bank2/3
  9365  197C  0087               	movwf fsr1h	
  9366                           	
  9367  197D  1C81               	btfss	indf1,1
  9368  197E  2980               	goto	u10421
  9369  197F  2981               	goto	u10420
  9370  1980                     u10421:
  9371  1980  29C5               	goto	l8404
  9372  1981                     u10420:
  9373                           	line	393
  9374                           	
  9375  1981                     l21702:	
  9376                           ;MCU_16f1518_B1.c: 392: {
  9377                           ;MCU_16f1518_B1.c: 393: if(Memory->Modify)
  9378  1981  087C               	movf	(_Memory),w
  9379  1982  3E22               	addlw	022h
  9380  1983  0086               	movwf	fsr1l
  9381  1984  3001               	movlw 1	; select bank2/3
  9382  1985  0087               	movwf fsr1h	
  9383                           	
  9384  1986  1C01               	btfss	indf1,0
  9385  1987  2989               	goto	u10431
  9386  1988  298A               	goto	u10430
  9387  1989                     u10431:
  9388  1989  29BD               	goto	l21712
  9389  198A                     u10430:
  9390                           	line	395
  9391                           	
  9392  198A                     l21704:	
  9393                           ;MCU_16f1518_B1.c: 394: {
  9394                           ;MCU_16f1518_B1.c: 395: Memory->Time++;
  9395  198A  087C               	movf	(_Memory),w
  9396  198B  3E23               	addlw	023h
  9397  198C  0086               	movwf	fsr1l
  9398  198D  3001               	movlw 1	; select bank2/3
  9399  198E  0087               	movwf fsr1h	
  9400                           	
  9401  198F  3001               	movlw	01h
  9402  1990  0781               	addwf	indf1,f
  9403  1991  3141               	addfsr	fsr1,1
  9404  1992  1803               	skipnc
  9405  1993  0A81               	incf	indf1,f
  9406                           	line	396
  9407                           	
  9408  1994                     l21706:	
  9409                           ;MCU_16f1518_B1.c: 396: if(Memory->Time == 100)
  9410  1994  087C               	movf	(_Memory),w
  9411  1995  3E23               	addlw	023h
  9412  1996  0086               	movwf	fsr1l
  9413  1997  3001               	movlw 1	; select bank2/3
  9414  1998  0087               	movwf fsr1h	
  9415                           	
  9416  1999  3F40               	moviw	[0]fsr1
  9417  199A  3A64               	xorlw	low(064h)
  9418  199B  1D03               	skipz
  9419  199C  299F               	goto	u10445
  9420  199D  3F41               	moviw	[1]fsr1
  9421  199E  3A00               	xorlw	high(064h)
  9422  199F                     u10445:
  9423  199F  1D03               	skipz
  9424  19A0  29A2               	goto	u10441
  9425  19A1  29A3               	goto	u10440
  9426  19A2                     u10441:
  9427  19A2  29C5               	goto	l8404
  9428  19A3                     u10440:
  9429                           	line	398
  9430                           	
  9431  19A3                     l21708:	
  9432                           ;MCU_16f1518_B1.c: 397: {
  9433                           ;MCU_16f1518_B1.c: 398: Memory->Time=0;
  9434  19A3  087C               	movf	(_Memory),w
  9435  19A4  3E23               	addlw	023h
  9436  19A5  0086               	movwf	fsr1l
  9437  19A6  3001               	movlw 1	; select bank2/3
  9438  19A7  0087               	movwf fsr1h	
  9439                           	
  9440  19A8  3000               	movlw	low(0)
  9441  19A9  3FC0               	movwi	[0]fsr1
  9442  19AA  3000               	movlw	high(0)
  9443  19AB  3FC1               	movwi	[1]fsr1
  9444                           	line	399
  9445                           ;MCU_16f1518_B1.c: 399: Memory->Modify=0;
  9446  19AC  087C               	movf	(_Memory),w
  9447  19AD  3E22               	addlw	022h
  9448  19AE  0086               	movwf	fsr1l
  9449  19AF  3001               	movlw 1	; select bank2/3
  9450  19B0  0087               	movwf fsr1h	
  9451                           	
  9452  19B1  1001               	bcf	indf1,0
  9453                           	line	400
  9454                           ;MCU_16f1518_B1.c: 400: Memory->GO=0;
  9455  19B2  087C               	movf	(_Memory),w
  9456  19B3  3E22               	addlw	022h
  9457  19B4  0086               	movwf	fsr1l
  9458  19B5  3001               	movlw 1	; select bank2/3
  9459  19B6  0087               	movwf fsr1h	
  9460                           	
  9461  19B7  1081               	bcf	indf1,1
  9462                           	line	401
  9463                           	
  9464  19B8                     l21710:	
  9465                           ;MCU_16f1518_B1.c: 401: Flash_Memory_Modify();
  9466  19B8  3193  2351  3199   	fcall	_Flash_Memory_Modify
  9467  19BB  29C5               	goto	l8404
  9468                           	line	402
  9469                           	
  9470  19BC                     l8402:	
  9471                           	line	403
  9472                           ;MCU_16f1518_B1.c: 402: }
  9473                           ;MCU_16f1518_B1.c: 403: }
  9474  19BC  29C5               	goto	l8404
  9475                           	line	404
  9476                           	
  9477  19BD                     l8401:	
  9478                           	line	406
  9479                           	
  9480  19BD                     l21712:	
  9481                           ;MCU_16f1518_B1.c: 404: else
  9482                           ;MCU_16f1518_B1.c: 405: {
  9483                           ;MCU_16f1518_B1.c: 406: Memory->GO=0;
  9484  19BD  087C               	movf	(_Memory),w
  9485  19BE  3E22               	addlw	022h
  9486  19BF  0086               	movwf	fsr1l
  9487  19C0  3001               	movlw 1	; select bank2/3
  9488  19C1  0087               	movwf fsr1h	
  9489                           	
  9490  19C2  1081               	bcf	indf1,1
  9491  19C3  29C5               	goto	l8404
  9492                           	line	407
  9493                           	
  9494  19C4                     l8403:	
  9495  19C4  29C5               	goto	l8404
  9496                           	line	408
  9497                           	
  9498  19C5                     l8400:	
  9499                           	line	409
  9500                           	
  9501  19C5                     l8404:	
  9502  19C5  0008               	return
  9503                           	opt stack 0
  9504                           GLOBAL	__end_of_Flash_Memory_Main
  9505  19C6                     	__end_of_Flash_Memory_Main:
  9506 ;; =============== function _Flash_Memory_Main ends ============
  9507                           
  9508                           	signat	_Flash_Memory_Main,88
  9509                           	global	_MainT
  9510                           psect	text4887,local,class=CODE,delta=2
  9511                           global __ptext4887
  9512  0E75                     __ptext4887:
  9513                           
  9514 ;; *************** function _MainT *****************
  9515 ;; Defined at:
  9516 ;;		line 78 in file "G:\Program\PIC\Source_File\main.c"
  9517 ;; Parameters:    Size  Location     Type
  9518 ;;		None
  9519 ;; Auto vars:     Size  Location     Type
  9520 ;;		None
  9521 ;; Return value:  Size  Location     Type
  9522 ;;		None               void
  9523 ;; Registers used:
  9524 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9525 ;; Tracked objects:
  9526 ;;		On entry : 0/0
  9527 ;;		On exit  : 0/0
  9528 ;;		Unchanged: 0/0
  9529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  9530 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  9531 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  9532 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  9533 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  9534 ;;Total ram usage:        1 bytes
  9535 ;; Hardware stack levels used:    1
  9536 ;; Hardware stack levels required when called:    8
  9537 ;; This function calls:
  9538 ;;		_setTemp_Enable
  9539 ;;		_setLoad_Enable
  9540 ;;		_getTemp_ERROR
  9541 ;;		_getPF_ERROR
  9542 ;;		_getLoad_ERROR
  9543 ;;		_DimmerLightsPointSelect
  9544 ;;		_setDimmerLights_Trigger
  9545 ;;		_setDimmerLights_Switch
  9546 ;;		_setBuz
  9547 ;;		_getTemp_Safe
  9548 ;;		_getPF_Safe
  9549 ;;		_getLoad_Safe
  9550 ;;		_getPercentValue
  9551 ;;		_setSw_Enable
  9552 ;;		_setRF_Enable
  9553 ;; This function is called by:
  9554 ;;		_main
  9555 ;; This function uses a non-reentrant model
  9556 ;;
  9557                           psect	text4887
  9558                           	file	"G:\Program\PIC\Source_File\main.c"
  9559                           	line	78
  9560                           	global	__size_of_MainT
  9561  018B                     	__size_of_MainT	equ	__end_of_MainT-_MainT
  9562                           	
  9563  0E75                     _MainT:	
  9564                           	opt	stack 7
  9565                           ; Regs used in _MainT: [wreg+fsr1l-status,0+pclath+cstack]
  9566                           	line	80
  9567                           	
  9568  0E75                     l21620:	
  9569                           ;main.c: 80: if(TMain->PowerON == 0)
  9570  0E75  087D               	movf	(_TMain),w
  9571  0E76  0086               	movwf	fsr1l
  9572  0E77  3001               	movlw 1	; select bank2/3
  9573  0E78  0087               	movwf fsr1h	
  9574                           	
  9575  0E79  1801               	btfsc	indf1,0
  9576  0E7A  2E7C               	goto	u10291
  9577  0E7B  2E7D               	goto	u10290
  9578  0E7C                     u10291:
  9579  0E7C  2EBC               	goto	l21632
  9580  0E7D                     u10290:
  9581                           	line	82
  9582                           	
  9583  0E7D                     l21622:	
  9584                           ;main.c: 81: {
  9585                           ;main.c: 82: TMain->PowerCount++;
  9586  0E7D  087D               	movf	(_TMain),w
  9587  0E7E  3E01               	addlw	01h
  9588  0E7F  0086               	movwf	fsr1l
  9589  0E80  3001               	movlw 1	; select bank2/3
  9590  0E81  0087               	movwf fsr1h	
  9591                           	
  9592  0E82  3001               	movlw	01h
  9593  0E83  0781               	addwf	indf1,f
  9594  0E84  3141               	addfsr	fsr1,1
  9595  0E85  1803               	skipnc
  9596  0E86  0A81               	incf	indf1,f
  9597                           	line	83
  9598                           	
  9599  0E87                     l21624:	
  9600                           ;main.c: 83: if(TMain->PowerCount == 300)
  9601  0E87  087D               	movf	(_TMain),w
  9602  0E88  3E01               	addlw	01h
  9603  0E89  0086               	movwf	fsr1l
  9604  0E8A  3001               	movlw 1	; select bank2/3
  9605  0E8B  0087               	movwf fsr1h	
  9606                           	
  9607  0E8C  3F40               	moviw	[0]fsr1
  9608  0E8D  3A2C               	xorlw	low(012Ch)
  9609  0E8E  1D03               	skipz
  9610  0E8F  2E92               	goto	u10305
  9611  0E90  3F41               	moviw	[1]fsr1
  9612  0E91  3A01               	xorlw	high(012Ch)
  9613  0E92                     u10305:
  9614  0E92  1D03               	skipz
  9615  0E93  2E95               	goto	u10301
  9616  0E94  2E96               	goto	u10300
  9617  0E95                     u10301:
  9618  0E95  2FFF               	goto	l7185
  9619  0E96                     u10300:
  9620                           	line	85
  9621                           	
  9622  0E96                     l21626:	
  9623                           ;main.c: 84: {
  9624                           ;main.c: 85: TMain->PowerCount=0;
  9625  0E96  087D               	movf	(_TMain),w
  9626  0E97  3E01               	addlw	01h
  9627  0E98  0086               	movwf	fsr1l
  9628  0E99  3001               	movlw 1	; select bank2/3
  9629  0E9A  0087               	movwf fsr1h	
  9630                           	
  9631  0E9B  3000               	movlw	low(0)
  9632  0E9C  3FC0               	movwi	[0]fsr1
  9633  0E9D  3000               	movlw	high(0)
  9634  0E9E  3FC1               	movwi	[1]fsr1
  9635                           	line	86
  9636                           ;main.c: 86: TMain->PowerON=1;
  9637  0E9F  087D               	movf	(_TMain),w
  9638  0EA0  0086               	movwf	fsr1l
  9639  0EA1  3001               	movlw 1	; select bank2/3
  9640  0EA2  0087               	movwf fsr1h	
  9641                           	
  9642  0EA3  1401               	bsf	indf1,0
  9643                           	line	89
  9644                           	
  9645  0EA4                     l21628:	
  9646                           ;main.c: 89: setTemp_Enable(1,1);
  9647  0EA4  0020               	movlb 0	; select bank0
  9648  0EA5  01A1               	clrf	(?_setTemp_Enable)
  9649  0EA6  1403               	bsf	status,0
  9650  0EA7  0DA1               	rlf	(?_setTemp_Enable),f
  9651  0EA8  3001               	movlw	(01h)
  9652  0EA9  31AF  27D0  318E   	fcall	_setTemp_Enable
  9653                           	line	93
  9654                           	
  9655  0EAC                     l21630:	
  9656                           ;main.c: 93: setLoad_Enable(1,1);
  9657  0EAC  0020               	movlb 0	; select bank0
  9658  0EAD  01A2               	clrf	(?_setLoad_Enable)
  9659  0EAE  1403               	bsf	status,0
  9660  0EAF  0DA2               	rlf	(?_setLoad_Enable),f
  9661  0EB0  3001               	movlw	(01h)
  9662  0EB1  3188  2000  318E   	fcall	_setLoad_Enable
  9663                           	line	97
  9664                           ;main.c: 97: TMain->k=1;
  9665  0EB4  087D               	movf	(_TMain),w
  9666  0EB5  3E0E               	addlw	0Eh
  9667  0EB6  0086               	movwf	fsr1l
  9668  0EB7  3001               	movlw 1	; select bank2/3
  9669  0EB8  0087               	movwf fsr1h	
  9670                           	
  9671  0EB9  1501               	bsf	indf1,2
  9672  0EBA  2FFF               	goto	l7185
  9673                           	line	117
  9674                           	
  9675  0EBB                     l7174:	
  9676                           	line	118
  9677                           ;main.c: 117: }
  9678                           ;main.c: 118: }
  9679  0EBB  2FFF               	goto	l7185
  9680                           	line	119
  9681                           	
  9682  0EBC                     l7173:	
  9683                           	line	122
  9684                           	
  9685  0EBC                     l21632:	
  9686                           ;main.c: 119: else
  9687                           ;main.c: 120: {
  9688                           ;main.c: 122: if(!getTemp_ERROR(1) && !getPF_ERROR(1) && !getLoad_ERROR(1))
  9689  0EBC  3001               	movlw	(01h)
  9690  0EBD  31AF  2714  318E   	fcall	_getTemp_ERROR
  9691  0EC0  3800               	iorlw	0
  9692  0EC1  1D03               	skipz
  9693  0EC2  2EC4               	goto	u10311
  9694  0EC3  2EC5               	goto	u10310
  9695  0EC4                     u10311:
  9696  0EC4  2FFF               	goto	l7185
  9697  0EC5                     u10310:
  9698                           	
  9699  0EC5                     l21634:	
  9700  0EC5  3001               	movlw	(01h)
  9701  0EC6  3187  27F2  318E   	fcall	_getPF_ERROR
  9702  0EC9  3800               	iorlw	0
  9703  0ECA  1D03               	skipz
  9704  0ECB  2ECD               	goto	u10321
  9705  0ECC  2ECE               	goto	u10320
  9706  0ECD                     u10321:
  9707  0ECD  2FFF               	goto	l7185
  9708  0ECE                     u10320:
  9709                           	
  9710  0ECE                     l21636:	
  9711  0ECE  3001               	movlw	(01h)
  9712  0ECF  31AF  27E0  318E   	fcall	_getLoad_ERROR
  9713  0ED2  3800               	iorlw	0
  9714  0ED3  1D03               	skipz
  9715  0ED4  2ED6               	goto	u10331
  9716  0ED5  2ED7               	goto	u10330
  9717  0ED6                     u10331:
  9718  0ED6  2FFF               	goto	l7185
  9719  0ED7                     u10330:
  9720                           	line	124
  9721                           	
  9722  0ED7                     l21638:	
  9723                           ;main.c: 123: {
  9724                           ;main.c: 124: if(!TMain->r)
  9725  0ED7  087D               	movf	(_TMain),w
  9726  0ED8  3E0F               	addlw	0Fh
  9727  0ED9  0086               	movwf	fsr1l
  9728  0EDA  3001               	movlw 1	; select bank2/3
  9729  0EDB  0087               	movwf fsr1h	
  9730                           	
  9731  0EDC  1881               	btfsc	indf1,1
  9732  0EDD  2EDF               	goto	u10341
  9733  0EDE  2EE0               	goto	u10340
  9734  0EDF                     u10341:
  9735  0EDF  2FFF               	goto	l7185
  9736  0EE0                     u10340:
  9737                           	line	126
  9738                           	
  9739  0EE0                     l21640:	
  9740                           ;main.c: 125: {
  9741                           ;main.c: 126: if(TMain->k)
  9742  0EE0  087D               	movf	(_TMain),w
  9743  0EE1  3E0E               	addlw	0Eh
  9744  0EE2  0086               	movwf	fsr1l
  9745  0EE3  3001               	movlw 1	; select bank2/3
  9746  0EE4  0087               	movwf fsr1h	
  9747                           	
  9748  0EE5  1D01               	btfss	indf1,2
  9749  0EE6  2EE8               	goto	u10351
  9750  0EE7  2EE9               	goto	u10350
  9751  0EE8                     u10351:
  9752  0EE8  2F22               	goto	l21656
  9753  0EE9                     u10350:
  9754                           	line	128
  9755                           	
  9756  0EE9                     l21642:	
  9757                           ;main.c: 127: {
  9758                           ;main.c: 128: TMain->k=0;
  9759  0EE9  087D               	movf	(_TMain),w
  9760  0EEA  3E0E               	addlw	0Eh
  9761  0EEB  0086               	movwf	fsr1l
  9762  0EEC  3001               	movlw 1	; select bank2/3
  9763  0EED  0087               	movwf fsr1h	
  9764                           	
  9765  0EEE  1101               	bcf	indf1,2
  9766                           	line	130
  9767                           	
  9768  0EEF                     l21644:	
  9769                           ;main.c: 130: DimmerLightsPointSelect(1);
  9770  0EEF  3001               	movlw	(01h)
  9771  0EF0  31AE  2684  318E   	fcall	_DimmerLightsPointSelect
  9772                           	line	131
  9773                           	
  9774  0EF3                     l21646:	
  9775                           ;main.c: 131: DimmerLights->MaxmumValue=((char)((100-75)*1.5));
  9776  0EF3  3025               	movlw	(025h)
  9777  0EF4  0020               	movlb 0	; select bank0
  9778  0EF5  00DC               	movwf	(??_MainT+0)+0
  9779  0EF6  086A               	movf	(_DimmerLights),w
  9780  0EF7  3E05               	addlw	05h
  9781  0EF8  0086               	movwf	fsr1l
  9782  0EF9  3001               	movlw 1	; select bank2/3
  9783  0EFA  0087               	movwf fsr1h	
  9784                           	
  9785  0EFB  085C               	movf	(??_MainT+0)+0,w
  9786  0EFC  0081               	movwf	indf1
  9787                           	line	132
  9788                           	
  9789  0EFD                     l21648:	
  9790                           ;main.c: 132: DimmerLights->DimmingValue=((char)((100-75)*1.5));
  9791  0EFD  3025               	movlw	(025h)
  9792  0EFE  00DC               	movwf	(??_MainT+0)+0
  9793  0EFF  086A               	movf	(_DimmerLights),w
  9794  0F00  3E04               	addlw	04h
  9795  0F01  0086               	movwf	fsr1l
  9796  0F02  3001               	movlw 1	; select bank2/3
  9797  0F03  0087               	movwf fsr1h	
  9798                           	
  9799  0F04  085C               	movf	(??_MainT+0)+0,w
  9800  0F05  0081               	movwf	indf1
  9801                           	line	133
  9802                           	
  9803  0F06                     l21650:	
  9804                           ;main.c: 133: setDimmerLights_Trigger(1,1);
  9805  0F06  01A2               	clrf	(?_setDimmerLights_Trigger)
  9806  0F07  1403               	bsf	status,0
  9807  0F08  0DA2               	rlf	(?_setDimmerLights_Trigger),f
  9808  0F09  3001               	movlw	(01h)
  9809  0F0A  31A0  2016  318E   	fcall	_setDimmerLights_Trigger
  9810                           	line	134
  9811                           	
  9812  0F0D                     l21652:	
  9813                           ;main.c: 134: setDimmerLights_Switch(1,1);
  9814  0F0D  0020               	movlb 0	; select bank0
  9815  0F0E  01A2               	clrf	(?_setDimmerLights_Switch)
  9816  0F0F  1403               	bsf	status,0
  9817  0F10  0DA2               	rlf	(?_setDimmerLights_Switch),f
  9818  0F11  3001               	movlw	(01h)
  9819  0F12  31A0  2027  318E   	fcall	_setDimmerLights_Switch
  9820                           	line	136
  9821                           	
  9822  0F15                     l21654:	
  9823                           ;main.c: 136: setBuz(1,1,100);
  9824  0F15  0020               	movlb 0	; select bank0
  9825  0F16  01A9               	clrf	(?_setBuz)
  9826  0F17  1403               	bsf	status,0
  9827  0F18  0DA9               	rlf	(?_setBuz),f
  9828  0F19  3064               	movlw	low(064h)
  9829  0F1A  00AA               	movwf	0+(?_setBuz)+01h
  9830  0F1B  3000               	movlw	high(064h)
  9831  0F1C  00AB               	movwf	(0+(?_setBuz)+01h)+1
  9832  0F1D  3001               	movlw	(01h)
  9833  0F1E  3194  2499  318E   	fcall	_setBuz
  9834  0F21  2F22               	goto	l21656
  9835                           	line	137
  9836                           	
  9837  0F22                     l7178:	
  9838                           	line	138
  9839                           	
  9840  0F22                     l21656:	
  9841                           ;main.c: 137: }
  9842                           ;main.c: 138: TMain->Count2++;
  9843  0F22  087D               	movf	(_TMain),w
  9844  0F23  3E08               	addlw	08h
  9845  0F24  0086               	movwf	fsr1l
  9846  0F25  3001               	movlw 1	; select bank2/3
  9847  0F26  0087               	movwf fsr1h	
  9848                           	
  9849  0F27  3001               	movlw	01h
  9850  0F28  0781               	addwf	indf1,f
  9851  0F29  3141               	addfsr	fsr1,1
  9852  0F2A  1803               	skipnc
  9853  0F2B  0A81               	incf	indf1,f
  9854                           	line	139
  9855                           	
  9856  0F2C                     l21658:	
  9857                           ;main.c: 139: if(TMain->Count2 == 300)
  9858  0F2C  087D               	movf	(_TMain),w
  9859  0F2D  3E08               	addlw	08h
  9860  0F2E  0086               	movwf	fsr1l
  9861  0F2F  3001               	movlw 1	; select bank2/3
  9862  0F30  0087               	movwf fsr1h	
  9863                           	
  9864  0F31  3F40               	moviw	[0]fsr1
  9865  0F32  3A2C               	xorlw	low(012Ch)
  9866  0F33  1D03               	skipz
  9867  0F34  2F37               	goto	u10365
  9868  0F35  3F41               	moviw	[1]fsr1
  9869  0F36  3A01               	xorlw	high(012Ch)
  9870  0F37                     u10365:
  9871  0F37  1D03               	skipz
  9872  0F38  2F3A               	goto	u10361
  9873  0F39  2F3B               	goto	u10360
  9874  0F3A                     u10361:
  9875  0F3A  2FFF               	goto	l7185
  9876  0F3B                     u10360:
  9877                           	line	141
  9878                           	
  9879  0F3B                     l21660:	
  9880                           ;main.c: 140: {
  9881                           ;main.c: 141: TMain->Count2=0;
  9882  0F3B  087D               	movf	(_TMain),w
  9883  0F3C  3E08               	addlw	08h
  9884  0F3D  0086               	movwf	fsr1l
  9885  0F3E  3001               	movlw 1	; select bank2/3
  9886  0F3F  0087               	movwf fsr1h	
  9887                           	
  9888  0F40  3000               	movlw	low(0)
  9889  0F41  3FC0               	movwi	[0]fsr1
  9890  0F42  3000               	movlw	high(0)
  9891  0F43  3FC1               	movwi	[1]fsr1
  9892                           	line	143
  9893                           ;main.c: 143: if(!TMain->i)
  9894  0F44  087D               	movf	(_TMain),w
  9895  0F45  3E0E               	addlw	0Eh
  9896  0F46  0086               	movwf	fsr1l
  9897  0F47  3001               	movlw 1	; select bank2/3
  9898  0F48  0087               	movwf fsr1h	
  9899                           	
  9900  0F49  1801               	btfsc	indf1,0
  9901  0F4A  2F4C               	goto	u10371
  9902  0F4B  2F4D               	goto	u10370
  9903  0F4C                     u10371:
  9904  0F4C  2F9D               	goto	l21682
  9905  0F4D                     u10370:
  9906                           	line	146
  9907                           	
  9908  0F4D                     l21662:	
  9909                           ;main.c: 144: {
  9910                           ;main.c: 146: if(getTemp_Safe(1) && getPF_Safe(1) && getLoad_Safe(1))
  9911  0F4D  3001               	movlw	(01h)
  9912  0F4E  31AF  2723  318E   	fcall	_getTemp_Safe
  9913  0F51  3A00               	xorlw	0&0ffh
  9914  0F52  1903               	skipnz
  9915  0F53  2F55               	goto	u10381
  9916  0F54  2F56               	goto	u10380
  9917  0F55                     u10381:
  9918  0F55  2F92               	goto	l21680
  9919  0F56                     u10380:
  9920                           	
  9921  0F56                     l21664:	
  9922  0F56  3001               	movlw	(01h)
  9923  0F57  31AF  2732  318E   	fcall	_getPF_Safe
  9924  0F5A  3A00               	xorlw	0&0ffh
  9925  0F5B  1903               	skipnz
  9926  0F5C  2F5E               	goto	u10391
  9927  0F5D  2F5F               	goto	u10390
  9928  0F5E                     u10391:
  9929  0F5E  2F92               	goto	l21680
  9930  0F5F                     u10390:
  9931                           	
  9932  0F5F                     l21666:	
  9933  0F5F  3001               	movlw	(01h)
  9934  0F60  31A0  20B0  318E   	fcall	_getLoad_Safe
  9935  0F63  3A00               	xorlw	0&0ffh
  9936  0F64  1903               	skipnz
  9937  0F65  2F67               	goto	u10401
  9938  0F66  2F68               	goto	u10400
  9939  0F67                     u10401:
  9940  0F67  2F92               	goto	l21680
  9941  0F68                     u10400:
  9942                           	line	148
  9943                           	
  9944  0F68                     l21668:	
  9945                           ;main.c: 147: {
  9946                           ;main.c: 148: TMain->i=1;
  9947  0F68  087D               	movf	(_TMain),w
  9948  0F69  3E0E               	addlw	0Eh
  9949  0F6A  0086               	movwf	fsr1l
  9950  0F6B  3001               	movlw 1	; select bank2/3
  9951  0F6C  0087               	movwf fsr1h	
  9952                           	
  9953  0F6D  1401               	bsf	indf1,0
  9954                           	line	150
  9955                           	
  9956  0F6E                     l21670:	
  9957                           ;main.c: 150: DimmerLightsPointSelect(1);
  9958  0F6E  3001               	movlw	(01h)
  9959  0F6F  31AE  2684  318E   	fcall	_DimmerLightsPointSelect
  9960                           	line	151
  9961                           	
  9962  0F72                     l21672:	
  9963                           ;main.c: 151: DimmerLights->AdjRF=1;
  9964  0F72  0020               	movlb 0	; select bank0
  9965  0F73  086A               	movf	(_DimmerLights),w
  9966  0F74  0086               	movwf	fsr1l
  9967  0F75  3001               	movlw 1	; select bank2/3
  9968  0F76  0087               	movwf fsr1h	
  9969                           	
  9970  0F77  1501               	bsf	indf1,2
  9971                           	line	152
  9972                           	
  9973  0F78                     l21674:	
  9974                           ;main.c: 152: DimmerLights->Signal=1;
  9975  0F78  086A               	movf	(_DimmerLights),w
  9976  0F79  0086               	movwf	fsr1l
  9977  0F7A  3001               	movlw 1	; select bank2/3
  9978  0F7B  0087               	movwf fsr1h	
  9979                           	
  9980  0F7C  1481               	bsf	indf1,1
  9981                           	line	153
  9982                           	
  9983  0F7D                     l21676:	
  9984                           ;main.c: 153: DimmerLights->MaxmumValue=((char)((100-75)*1.5))+50;
  9985  0F7D  3057               	movlw	(057h)
  9986  0F7E  00DC               	movwf	(??_MainT+0)+0
  9987  0F7F  086A               	movf	(_DimmerLights),w
  9988  0F80  3E05               	addlw	05h
  9989  0F81  0086               	movwf	fsr1l
  9990  0F82  3001               	movlw 1	; select bank2/3
  9991  0F83  0087               	movwf fsr1h	
  9992                           	
  9993  0F84  085C               	movf	(??_MainT+0)+0,w
  9994  0F85  0081               	movwf	indf1
  9995                           	line	156
  9996                           	
  9997  0F86                     l21678:	
  9998                           ;main.c: 156: setBuz(1,1,100);
  9999  0F86  01A9               	clrf	(?_setBuz)
 10000  0F87  1403               	bsf	status,0
 10001  0F88  0DA9               	rlf	(?_setBuz),f
 10002  0F89  3064               	movlw	low(064h)
 10003  0F8A  00AA               	movwf	0+(?_setBuz)+01h
 10004  0F8B  3000               	movlw	high(064h)
 10005  0F8C  00AB               	movwf	(0+(?_setBuz)+01h)+1
 10006  0F8D  3001               	movlw	(01h)
 10007  0F8E  3194  2499  318E   	fcall	_setBuz
 10008                           	line	157
 10009                           ;main.c: 157: }
 10010  0F91  2FFF               	goto	l7185
 10011                           	line	158
 10012                           	
 10013  0F92                     l7181:	
 10014                           	line	160
 10015                           	
 10016  0F92                     l21680:	
 10017                           ;main.c: 158: else
 10018                           ;main.c: 159: {
 10019                           ;main.c: 160: TMain->Count2=300;
 10020  0F92  087D               	movf	(_TMain),w
 10021  0F93  3E08               	addlw	08h
 10022  0F94  0086               	movwf	fsr1l
 10023  0F95  3001               	movlw 1	; select bank2/3
 10024  0F96  0087               	movwf fsr1h	
 10025                           	
 10026  0F97  302C               	movlw	low(012Ch)
 10027  0F98  3FC0               	movwi	[0]fsr1
 10028  0F99  3001               	movlw	high(012Ch)
 10029  0F9A  3FC1               	movwi	[1]fsr1
 10030  0F9B  2FFF               	goto	l7185
 10031                           	line	161
 10032                           	
 10033  0F9C                     l7182:	
 10034                           	line	162
 10035                           ;main.c: 161: }
 10036                           ;main.c: 162: }
 10037  0F9C  2FFF               	goto	l7185
 10038                           	line	163
 10039                           	
 10040  0F9D                     l7180:	
 10041                           	line	165
 10042                           	
 10043  0F9D                     l21682:	
 10044                           ;main.c: 163: else
 10045                           ;main.c: 164: {
 10046                           ;main.c: 165: if(!TMain->j)
 10047  0F9D  087D               	movf	(_TMain),w
 10048  0F9E  3E0E               	addlw	0Eh
 10049  0F9F  0086               	movwf	fsr1l
 10050  0FA0  3001               	movlw 1	; select bank2/3
 10051  0FA1  0087               	movwf fsr1h	
 10052                           	
 10053  0FA2  1881               	btfsc	indf1,1
 10054  0FA3  2FA5               	goto	u10411
 10055  0FA4  2FA6               	goto	u10410
 10056  0FA5                     u10411:
 10057  0FA5  2FFF               	goto	l7185
 10058  0FA6                     u10410:
 10059                           	line	167
 10060                           	
 10061  0FA6                     l21684:	
 10062                           ;main.c: 166: {
 10063                           ;main.c: 167: TMain->j=1;
 10064  0FA6  087D               	movf	(_TMain),w
 10065  0FA7  3E0E               	addlw	0Eh
 10066  0FA8  0086               	movwf	fsr1l
 10067  0FA9  3001               	movlw 1	; select bank2/3
 10068  0FAA  0087               	movwf fsr1h	
 10069                           	
 10070  0FAB  1481               	bsf	indf1,1
 10071                           	line	168
 10072                           ;main.c: 168: TMain->r=1;
 10073  0FAC  087D               	movf	(_TMain),w
 10074  0FAD  3E0F               	addlw	0Fh
 10075  0FAE  0086               	movwf	fsr1l
 10076  0FAF  3001               	movlw 1	; select bank2/3
 10077  0FB0  0087               	movwf fsr1h	
 10078                           	
 10079  0FB1  1481               	bsf	indf1,1
 10080                           	line	169
 10081                           ;main.c: 169: TMain->SelfTest=1;
 10082  0FB2  087D               	movf	(_TMain),w
 10083  0FB3  3E03               	addlw	03h
 10084  0FB4  0086               	movwf	fsr1l
 10085  0FB5  3001               	movlw 1	; select bank2/3
 10086  0FB6  0087               	movwf fsr1h	
 10087                           	
 10088  0FB7  1401               	bsf	indf1,0
 10089                           	line	171
 10090                           	
 10091  0FB8                     l21686:	
 10092                           ;main.c: 171: DimmerLightsPointSelect(1);
 10093  0FB8  3001               	movlw	(01h)
 10094  0FB9  31AE  2684  318E   	fcall	_DimmerLightsPointSelect
 10095                           	line	172
 10096                           	
 10097  0FBC                     l21688:	
 10098                           ;main.c: 172: setDimmerLights_Trigger(1,1);
 10099  0FBC  0020               	movlb 0	; select bank0
 10100  0FBD  01A2               	clrf	(?_setDimmerLights_Trigger)
 10101  0FBE  1403               	bsf	status,0
 10102  0FBF  0DA2               	rlf	(?_setDimmerLights_Trigger),f
 10103  0FC0  3001               	movlw	(01h)
 10104  0FC1  31A0  2016  318E   	fcall	_setDimmerLights_Trigger
 10105                           	line	173
 10106                           	
 10107  0FC4                     l21690:	
 10108                           ;main.c: 173: setDimmerLights_Switch(1,0);
 10109  0FC4  0020               	movlb 0	; select bank0
 10110  0FC5  01A2               	clrf	(?_setDimmerLights_Switch)
 10111  0FC6  3001               	movlw	(01h)
 10112  0FC7  31A0  2027  318E   	fcall	_setDimmerLights_Switch
 10113                           	line	174
 10114                           	
 10115  0FCA                     l21692:	
 10116                           ;main.c: 174: DimmerLights->MaxmumValue=getPercentValue(Product->Data[(20+1)]);
 10117  0FCA  0020               	movlb 0	; select bank0
 10118  0FCB  086F               	movf	(_Product),w
 10119  0FCC  3E15               	addlw	015h
 10120  0FCD  0086               	movwf	fsr1l
 10121  0FCE  3001               	movlw 1	; select bank2/3
 10122  0FCF  0087               	movwf fsr1h	
 10123                           	
 10124  0FD0  0801               	movf	indf1,w
 10125  0FD1  31A6  26AD  318E   	fcall	_getPercentValue
 10126  0FD4  0020               	movlb 0	; select bank0
 10127  0FD5  00DC               	movwf	(??_MainT+0)+0
 10128  0FD6  086A               	movf	(_DimmerLights),w
 10129  0FD7  3E05               	addlw	05h
 10130  0FD8  0086               	movwf	fsr1l
 10131  0FD9  3001               	movlw 1	; select bank2/3
 10132  0FDA  0087               	movwf fsr1h	
 10133                           	
 10134  0FDB  085C               	movf	(??_MainT+0)+0,w
 10135  0FDC  0081               	movwf	indf1
 10136                           	line	176
 10137                           	
 10138  0FDD                     l21694:	
 10139                           ;main.c: 176: setBuz(1,3,50);
 10140  0FDD  3003               	movlw	(03h)
 10141  0FDE  00DC               	movwf	(??_MainT+0)+0
 10142  0FDF  085C               	movf	(??_MainT+0)+0,w
 10143  0FE0  00A9               	movwf	(?_setBuz)
 10144  0FE1  3032               	movlw	low(032h)
 10145  0FE2  00AA               	movwf	0+(?_setBuz)+01h
 10146  0FE3  3000               	movlw	high(032h)
 10147  0FE4  00AB               	movwf	(0+(?_setBuz)+01h)+1
 10148  0FE5  3001               	movlw	(01h)
 10149  0FE6  3194  2499  318E   	fcall	_setBuz
 10150                           	line	179
 10151                           	
 10152  0FE9                     l21696:	
 10153                           ;main.c: 179: setSw_Enable(1,1);
 10154  0FE9  0020               	movlb 0	; select bank0
 10155  0FEA  01A2               	clrf	(?_setSw_Enable)
 10156  0FEB  1403               	bsf	status,0
 10157  0FEC  0DA2               	rlf	(?_setSw_Enable),f
 10158  0FED  3001               	movlw	(01h)
 10159  0FEE  31AF  27F0  318E   	fcall	_setSw_Enable
 10160                           	line	190
 10161                           	
 10162  0FF1                     l21698:	
 10163                           ;main.c: 190: setRF_Enable(1,1);
 10164  0FF1  0020               	movlb 0	; select bank0
 10165  0FF2  01A5               	clrf	(?_setRF_Enable)
 10166  0FF3  1403               	bsf	status,0
 10167  0FF4  0DA5               	rlf	(?_setRF_Enable),f
 10168  0FF5  3001               	movlw	(01h)
 10169  0FF6  31A2  22F1  318E   	fcall	_setRF_Enable
 10170  0FF9  2FFF               	goto	l7185
 10171                           	line	193
 10172                           	
 10173  0FFA                     l7184:	
 10174  0FFA  2FFF               	goto	l7185
 10175                           	line	194
 10176                           	
 10177  0FFB                     l7183:	
 10178  0FFB  2FFF               	goto	l7185
 10179                           	line	195
 10180                           	
 10181  0FFC                     l7179:	
 10182  0FFC  2FFF               	goto	l7185
 10183                           	line	196
 10184                           	
 10185  0FFD                     l7177:	
 10186  0FFD  2FFF               	goto	l7185
 10187                           	line	197
 10188                           	
 10189  0FFE                     l7176:	
 10190  0FFE  2FFF               	goto	l7185
 10191                           	line	199
 10192                           	
 10193  0FFF                     l7175:	
 10194                           	line	234
 10195                           	
 10196  0FFF                     l7185:	
 10197  0FFF  0008               	return
 10198                           	opt stack 0
 10199                           GLOBAL	__end_of_MainT
 10200  1000                     	__end_of_MainT:
 10201 ;; =============== function _MainT ends ============
 10202                           
 10203                           	signat	_MainT,88
 10204                           	global	_setDimmerLights_Main
 10205                           psect	text4888,local,class=CODE,delta=2
 10206                           global __ptext4888
 10207  13F4                     __ptext4888:
 10208                           
 10209 ;; *************** function _setDimmerLights_Main *****************
 10210 ;; Defined at:
 10211 ;;		line 99 in file "G:\Program\PIC\Source_File\Dimmer_B1.c"
 10212 ;; Parameters:    Size  Location     Type
 10213 ;;  lights          1    wreg     unsigned char 
 10214 ;; Auto vars:     Size  Location     Type
 10215 ;;  lights          1   51[BANK0 ] unsigned char 
 10216 ;;  close           1   50[BANK0 ] unsigned char 
 10217 ;;  open            1   49[BANK0 ] unsigned char 
 10218 ;; Return value:  Size  Location     Type
 10219 ;;		None               void
 10220 ;; Registers used:
 10221 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10222 ;; Tracked objects:
 10223 ;;		On entry : 0/0
 10224 ;;		On exit  : 0/0
 10225 ;;		Unchanged: 0/0
 10226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 10227 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 10228 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 10229 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 10230 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 10231 ;;Total ram usage:        3 bytes
 10232 ;; Hardware stack levels used:    1
 10233 ;; Hardware stack levels required when called:    8
 10234 ;; This function calls:
 10235 ;;		_DimmerLightsPointSelect
 10236 ;;		_setDimmerLights_Open
 10237 ;;		_setDimmerLights_Close
 10238 ;;		_setDimmerLights
 10239 ;;		_getDimmerLights_Trigger
 10240 ;;		_setDimmerLights_Adj
 10241 ;;		_setBuz
 10242 ;; This function is called by:
 10243 ;;		_DimmerLights_Main
 10244 ;; This function uses a non-reentrant model
 10245 ;;
 10246                           psect	text4888
 10247                           	file	"G:\Program\PIC\Source_File\Dimmer_B1.c"
 10248                           	line	99
 10249                           	global	__size_of_setDimmerLights_Main
 10250  00A5                     	__size_of_setDimmerLights_Main	equ	__end_of_setDimmerLights_Main-_setDimmerLights_Main
 10251                           	
 10252  13F4                     _setDimmerLights_Main:	
 10253                           	opt	stack 6
 10254                           ; Regs used in _setDimmerLights_Main: [wreg+fsr1l-status,0+pclath+cstack]
 10255                           ;setDimmerLights_Main@lights stored from wreg
 10256  13F4  0020               	movlb 0	; select bank0
 10257  13F5  00D3               	movwf	(setDimmerLights_Main@lights)
 10258                           	line	100
 10259                           	
 10260  13F6                     l21578:	
 10261                           ;Dimmer_B1.c: 100: char open=1,close=1;
 10262  13F6  01D1               	clrf	(setDimmerLights_Main@open)
 10263  13F7  1403               	bsf	status,0
 10264  13F8  0DD1               	rlf	(setDimmerLights_Main@open),f
 10265  13F9  01D2               	clrf	(setDimmerLights_Main@close)
 10266  13FA  1403               	bsf	status,0
 10267  13FB  0DD2               	rlf	(setDimmerLights_Main@close),f
 10268                           	line	101
 10269                           	
 10270  13FC                     l21580:	
 10271                           ;Dimmer_B1.c: 101: DimmerLightsPointSelect(lights);
 10272  13FC  0853               	movf	(setDimmerLights_Main@lights),w
 10273  13FD  31AE  2684  3193   	fcall	_DimmerLightsPointSelect
 10274                           	line	102
 10275                           	
 10276  1400                     l21582:	
 10277                           ;Dimmer_B1.c: 102: if(DimmerLights->Trigger)
 10278  1400  0020               	movlb 0	; select bank0
 10279  1401  086A               	movf	(_DimmerLights),w
 10280  1402  3E09               	addlw	09h
 10281  1403  0086               	movwf	fsr1l
 10282  1404  3001               	movlw 1	; select bank2/3
 10283  1405  0087               	movwf fsr1h	
 10284                           	
 10285  1406  1C81               	btfss	indf1,1
 10286  1407  2C09               	goto	u10221
 10287  1408  2C0A               	goto	u10220
 10288  1409                     u10221:
 10289  1409  2C53               	goto	l21606
 10290  140A                     u10220:
 10291                           	line	145
 10292                           	
 10293  140A                     l21584:	
 10294                           ;Dimmer_B1.c: 103: {
 10295                           ;Dimmer_B1.c: 145: if(open)
 10296  140A  0851               	movf	(setDimmerLights_Main@open),w
 10297  140B  1D03               	skipz
 10298  140C  2C0E               	goto	u10230
 10299  140D  2C98               	goto	l4714
 10300  140E                     u10230:
 10301                           	line	147
 10302                           	
 10303  140E                     l21586:	
 10304                           ;Dimmer_B1.c: 146: {
 10305                           ;Dimmer_B1.c: 147: if(DimmerLights->Switch)
 10306  140E  086A               	movf	(_DimmerLights),w
 10307  140F  3E09               	addlw	09h
 10308  1410  0086               	movwf	fsr1l
 10309  1411  3001               	movlw 1	; select bank2/3
 10310  1412  0087               	movwf fsr1h	
 10311                           	
 10312  1413  1C01               	btfss	indf1,0
 10313  1414  2C16               	goto	u10241
 10314  1415  2C17               	goto	u10240
 10315  1416                     u10241:
 10316  1416  2C38               	goto	l21598
 10317  1417                     u10240:
 10318                           	line	189
 10319                           	
 10320  1417                     l21588:	
 10321                           ;Dimmer_B1.c: 148: {
 10322                           ;Dimmer_B1.c: 189: if(close)
 10323  1417  0852               	movf	(setDimmerLights_Main@close),w
 10324  1418  1D03               	skipz
 10325  1419  2C1B               	goto	u10250
 10326  141A  2C98               	goto	l4714
 10327  141B                     u10250:
 10328                           	line	191
 10329                           	
 10330  141B                     l21590:	
 10331                           ;Dimmer_B1.c: 190: {
 10332                           ;Dimmer_B1.c: 191: DimmerLights->Trigger=0;
 10333  141B  086A               	movf	(_DimmerLights),w
 10334  141C  3E09               	addlw	09h
 10335  141D  0086               	movwf	fsr1l
 10336  141E  3001               	movlw 1	; select bank2/3
 10337  141F  0087               	movwf fsr1h	
 10338                           	
 10339  1420  1081               	bcf	indf1,1
 10340                           	line	192
 10341                           	
 10342  1421                     l21592:	
 10343                           ;Dimmer_B1.c: 192: setDimmerLights_Open(lights,0);
 10344  1421  01A2               	clrf	(?_setDimmerLights_Open)
 10345  1422  0853               	movf	(setDimmerLights_Main@lights),w
 10346  1423  31A0  2038  3193   	fcall	_setDimmerLights_Open
 10347                           	line	193
 10348                           	
 10349  1426                     l21594:	
 10350                           ;Dimmer_B1.c: 193: setDimmerLights_Close(lights,1);
 10351  1426  0020               	movlb 0	; select bank0
 10352  1427  01A2               	clrf	(?_setDimmerLights_Close)
 10353  1428  1403               	bsf	status,0
 10354  1429  0DA2               	rlf	(?_setDimmerLights_Close),f
 10355  142A  0853               	movf	(setDimmerLights_Main@lights),w
 10356  142B  31A0  2049  3193   	fcall	_setDimmerLights_Close
 10357                           	line	194
 10358                           	
 10359  142E                     l21596:	
 10360                           ;Dimmer_B1.c: 194: setDimmerLights(lights,1);
 10361  142E  0020               	movlb 0	; select bank0
 10362  142F  01A6               	clrf	(?_setDimmerLights)
 10363  1430  1403               	bsf	status,0
 10364  1431  0DA6               	rlf	(?_setDimmerLights),f
 10365  1432  0853               	movf	(setDimmerLights_Main@lights),w
 10366  1433  3192  222B  3193   	fcall	_setDimmerLights
 10367  1436  2C98               	goto	l4714
 10368                           	line	195
 10369                           	
 10370  1437                     l4707:	
 10371                           	line	196
 10372                           ;Dimmer_B1.c: 195: }
 10373                           ;Dimmer_B1.c: 196: }
 10374  1437  2C98               	goto	l4714
 10375                           	line	197
 10376                           	
 10377  1438                     l4706:	
 10378                           	line	199
 10379                           	
 10380  1438                     l21598:	
 10381                           ;Dimmer_B1.c: 197: else
 10382                           ;Dimmer_B1.c: 198: {
 10383                           ;Dimmer_B1.c: 199: DimmerLights->Trigger=0;
 10384  1438  0020               	movlb 0	; select bank0
 10385  1439  086A               	movf	(_DimmerLights),w
 10386  143A  3E09               	addlw	09h
 10387  143B  0086               	movwf	fsr1l
 10388  143C  3001               	movlw 1	; select bank2/3
 10389  143D  0087               	movwf fsr1h	
 10390                           	
 10391  143E  1081               	bcf	indf1,1
 10392                           	line	200
 10393                           	
 10394  143F                     l21600:	
 10395                           ;Dimmer_B1.c: 200: setDimmerLights_Open(lights,0);
 10396  143F  01A2               	clrf	(?_setDimmerLights_Open)
 10397  1440  0853               	movf	(setDimmerLights_Main@lights),w
 10398  1441  31A0  2038  3193   	fcall	_setDimmerLights_Open
 10399                           	line	201
 10400                           	
 10401  1444                     l21602:	
 10402                           ;Dimmer_B1.c: 201: setDimmerLights_Close(lights,0);
 10403  1444  0020               	movlb 0	; select bank0
 10404  1445  01A2               	clrf	(?_setDimmerLights_Close)
 10405  1446  0853               	movf	(setDimmerLights_Main@lights),w
 10406  1447  31A0  2049  3193   	fcall	_setDimmerLights_Close
 10407                           	line	202
 10408                           	
 10409  144A                     l21604:	
 10410                           ;Dimmer_B1.c: 202: setDimmerLights(lights,0);
 10411  144A  0020               	movlb 0	; select bank0
 10412  144B  01A6               	clrf	(?_setDimmerLights)
 10413  144C  0853               	movf	(setDimmerLights_Main@lights),w
 10414  144D  3192  222B  3193   	fcall	_setDimmerLights
 10415  1450  2C98               	goto	l4714
 10416                           	line	203
 10417                           	
 10418  1451                     l4708:	
 10419  1451  2C98               	goto	l4714
 10420                           	line	204
 10421                           	
 10422  1452                     l4705:	
 10423                           	line	205
 10424                           ;Dimmer_B1.c: 203: }
 10425                           ;Dimmer_B1.c: 204: }
 10426                           ;Dimmer_B1.c: 205: }
 10427  1452  2C98               	goto	l4714
 10428                           	line	206
 10429                           	
 10430  1453                     l4704:	
 10431                           	line	208
 10432                           	
 10433  1453                     l21606:	
 10434                           ;Dimmer_B1.c: 206: else
 10435                           ;Dimmer_B1.c: 207: {
 10436                           ;Dimmer_B1.c: 208: if(DimmerLights->TriggerAdj)
 10437  1453  0020               	movlb 0	; select bank0
 10438  1454  086A               	movf	(_DimmerLights),w
 10439  1455  3E09               	addlw	09h
 10440  1456  0086               	movwf	fsr1l
 10441  1457  3001               	movlw 1	; select bank2/3
 10442  1458  0087               	movwf fsr1h	
 10443                           	
 10444  1459  1D81               	btfss	indf1,3
 10445  145A  2C5C               	goto	u10261
 10446  145B  2C5D               	goto	u10260
 10447  145C                     u10261:
 10448  145C  2C98               	goto	l4714
 10449  145D                     u10260:
 10450                           	line	210
 10451                           	
 10452  145D                     l21608:	
 10453                           ;Dimmer_B1.c: 209: {
 10454                           ;Dimmer_B1.c: 210: if(!getDimmerLights_Trigger())
 10455  145D  31A3  2318  3193   	fcall	_getDimmerLights_Trigger
 10456  1460  3800               	iorlw	0
 10457  1461  1D03               	skipz
 10458  1462  2C64               	goto	u10271
 10459  1463  2C65               	goto	u10270
 10460  1464                     u10271:
 10461  1464  2C98               	goto	l4714
 10462  1465                     u10270:
 10463                           	line	212
 10464                           	
 10465  1465                     l21610:	
 10466                           ;Dimmer_B1.c: 211: {
 10467                           ;Dimmer_B1.c: 212: DimmerLightsPointSelect(lights);
 10468  1465  0020               	movlb 0	; select bank0
 10469  1466  0853               	movf	(setDimmerLights_Main@lights),w
 10470  1467  31AE  2684  3193   	fcall	_DimmerLightsPointSelect
 10471                           	line	213
 10472                           	
 10473  146A                     l21612:	
 10474                           ;Dimmer_B1.c: 213: DimmerLights->TriggerAdj=0;
 10475  146A  0020               	movlb 0	; select bank0
 10476  146B  086A               	movf	(_DimmerLights),w
 10477  146C  3E09               	addlw	09h
 10478  146D  0086               	movwf	fsr1l
 10479  146E  3001               	movlw 1	; select bank2/3
 10480  146F  0087               	movwf fsr1h	
 10481                           	
 10482  1470  1181               	bcf	indf1,3
 10483                           	line	214
 10484                           	
 10485  1471                     l21614:	
 10486                           ;Dimmer_B1.c: 214: if(DimmerLights->AdjGo)
 10487  1471  086A               	movf	(_DimmerLights),w
 10488  1472  3E09               	addlw	09h
 10489  1473  0086               	movwf	fsr1l
 10490  1474  3001               	movlw 1	; select bank2/3
 10491  1475  0087               	movwf fsr1h	
 10492                           	
 10493  1476  1D01               	btfss	indf1,2
 10494  1477  2C79               	goto	u10281
 10495  1478  2C7A               	goto	u10280
 10496  1479                     u10281:
 10497  1479  2C8E               	goto	l21618
 10498  147A                     u10280:
 10499                           	line	216
 10500                           	
 10501  147A                     l21616:	
 10502                           ;Dimmer_B1.c: 215: {
 10503                           ;Dimmer_B1.c: 216: setDimmerLights_Adj(lights,1);
 10504  147A  01CD               	clrf	(?_setDimmerLights_Adj)
 10505  147B  1403               	bsf	status,0
 10506  147C  0DCD               	rlf	(?_setDimmerLights_Adj),f
 10507  147D  0853               	movf	(setDimmerLights_Main@lights),w
 10508  147E  319B  23DC  3193   	fcall	_setDimmerLights_Adj
 10509                           	line	217
 10510                           ;Dimmer_B1.c: 217: setBuz(1,1,100);
 10511  1481  0020               	movlb 0	; select bank0
 10512  1482  01A9               	clrf	(?_setBuz)
 10513  1483  1403               	bsf	status,0
 10514  1484  0DA9               	rlf	(?_setBuz),f
 10515  1485  3064               	movlw	low(064h)
 10516  1486  00AA               	movwf	0+(?_setBuz)+01h
 10517  1487  3000               	movlw	high(064h)
 10518  1488  00AB               	movwf	(0+(?_setBuz)+01h)+1
 10519  1489  3001               	movlw	(01h)
 10520  148A  3194  2499  3193   	fcall	_setBuz
 10521                           	line	218
 10522                           ;Dimmer_B1.c: 218: }
 10523  148D  2C98               	goto	l4714
 10524                           	line	219
 10525                           	
 10526  148E                     l4712:	
 10527                           	line	221
 10528                           	
 10529  148E                     l21618:	
 10530                           ;Dimmer_B1.c: 219: else
 10531                           ;Dimmer_B1.c: 220: {
 10532                           ;Dimmer_B1.c: 221: setDimmerLights_Adj(lights,0);
 10533  148E  0020               	movlb 0	; select bank0
 10534  148F  01CD               	clrf	(?_setDimmerLights_Adj)
 10535  1490  0853               	movf	(setDimmerLights_Main@lights),w
 10536  1491  319B  23DC  3193   	fcall	_setDimmerLights_Adj
 10537  1494  2C98               	goto	l4714
 10538                           	line	222
 10539                           	
 10540  1495                     l4713:	
 10541  1495  2C98               	goto	l4714
 10542                           	line	223
 10543                           	
 10544  1496                     l4711:	
 10545  1496  2C98               	goto	l4714
 10546                           	line	224
 10547                           	
 10548  1497                     l4710:	
 10549  1497  2C98               	goto	l4714
 10550                           	line	225
 10551                           	
 10552  1498                     l4709:	
 10553                           	line	226
 10554                           	
 10555  1498                     l4714:	
 10556  1498  0008               	return
 10557                           	opt stack 0
 10558                           GLOBAL	__end_of_setDimmerLights_Main
 10559  1499                     	__end_of_setDimmerLights_Main:
 10560 ;; =============== function _setDimmerLights_Main ends ============
 10561                           
 10562                           	signat	_setDimmerLights_Main,4216
 10563                           	global	_DimmerLights_Initialization
 10564                           psect	text4889,local,class=CODE,delta=2
 10565                           global __ptext4889
 10566  2DDE                     __ptext4889:
 10567                           
 10568 ;; *************** function _DimmerLights_Initialization *****************
 10569 ;; Defined at:
 10570 ;;		line 33 in file "G:\Program\PIC\Source_File\Dimmer_B1.c"
 10571 ;; Parameters:    Size  Location     Type
 10572 ;;		None
 10573 ;; Auto vars:     Size  Location     Type
 10574 ;;		None
 10575 ;; Return value:  Size  Location     Type
 10576 ;;		None               void
 10577 ;; Registers used:
 10578 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10579 ;; Tracked objects:
 10580 ;;		On entry : 0/0
 10581 ;;		On exit  : 0/0
 10582 ;;		Unchanged: 0/0
 10583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 10584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 10585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 10586 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 10587 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 10588 ;;Total ram usage:        1 bytes
 10589 ;; Hardware stack levels used:    1
 10590 ;; Hardware stack levels required when called:    8
 10591 ;; This function calls:
 10592 ;;		_setDimmerLights_Initialization
 10593 ;; This function is called by:
 10594 ;;		_main
 10595 ;; This function uses a non-reentrant model
 10596 ;;
 10597                           psect	text4889
 10598                           	file	"G:\Program\PIC\Source_File\Dimmer_B1.c"
 10599                           	line	33
 10600                           	global	__size_of_DimmerLights_Initialization
 10601  000A                     	__size_of_DimmerLights_Initialization	equ	__end_of_DimmerLights_Initialization-_DimmerL
                                 ights_Initialization
 10602                           	
 10603  2DDE                     _DimmerLights_Initialization:	
 10604                           	opt	stack 7
 10605                           ; Regs used in _DimmerLights_Initialization: [wreg+fsr1l-status,0+pclath+cstack]
 10606                           	line	35
 10607                           	
 10608  2DDE                     l20066:	
 10609                           ;Dimmer_B1.c: 35: DimmerLights11=&DimmerLights1;
 10610  2DDE  304A               	movlw	(_DimmerLights1)&0ffh
 10611  2DDF  0020               	movlb 0	; select bank0
 10612  2DE0  00DF               	movwf	(??_DimmerLights_Initialization+0)+0
 10613  2DE1  085F               	movf	(??_DimmerLights_Initialization+0)+0,w
 10614  2DE2  00FA               	movwf	(_DimmerLights11)
 10615                           	line	36
 10616                           	
 10617  2DE3                     l20068:	
 10618                           ;Dimmer_B1.c: 36: setDimmerLights_Initialization(1);
 10619  2DE3  3001               	movlw	(01h)
 10620  2DE4  31A6  266D  31AD   	fcall	_setDimmerLights_Initialization
 10621                           	line	48
 10622                           	
 10623  2DE7                     l4690:	
 10624  2DE7  0008               	return
 10625                           	opt stack 0
 10626                           GLOBAL	__end_of_DimmerLights_Initialization
 10627  2DE8                     	__end_of_DimmerLights_Initialization:
 10628 ;; =============== function _DimmerLights_Initialization ends ============
 10629                           
 10630                           	signat	_DimmerLights_Initialization,88
 10631                           	global	_setSw_Main
 10632                           psect	text4890,local,class=CODE,delta=2
 10633                           global __ptext4890
 10634  04FD                     __ptext4890:
 10635                           
 10636 ;; *************** function _setSw_Main *****************
 10637 ;; Defined at:
 10638 ;;		line 91 in file "G:\Program\PIC\Source_File\Switch_B1.c"
 10639 ;; Parameters:    Size  Location     Type
 10640 ;;  sw              1    wreg     unsigned char 
 10641 ;; Auto vars:     Size  Location     Type
 10642 ;;  sw              1   18[BANK0 ] unsigned char 
 10643 ;; Return value:  Size  Location     Type
 10644 ;;		None               void
 10645 ;; Registers used:
 10646 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10647 ;; Tracked objects:
 10648 ;;		On entry : 0/0
 10649 ;;		On exit  : 0/0
 10650 ;;		Unchanged: 0/0
 10651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 10652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 10653 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 10654 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 10655 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 10656 ;;Total ram usage:        4 bytes
 10657 ;; Hardware stack levels used:    1
 10658 ;; Hardware stack levels required when called:    7
 10659 ;; This function calls:
 10660 ;;		_SwPointSelect
 10661 ;;		_Sw_OnFunc
 10662 ;;		_Sw_AdjFunc
 10663 ;;		_setRF_Learn
 10664 ;;		_setBuz
 10665 ;;		_Sw_OffFunc
 10666 ;; This function is called by:
 10667 ;;		_Switch_Main
 10668 ;; This function uses a non-reentrant model
 10669 ;;
 10670                           psect	text4890
 10671                           	file	"G:\Program\PIC\Source_File\Switch_B1.c"
 10672                           	line	91
 10673                           	global	__size_of_setSw_Main
 10674  018C                     	__size_of_setSw_Main	equ	__end_of_setSw_Main-_setSw_Main
 10675                           	
 10676  04FD                     _setSw_Main:	
 10677                           	opt	stack 7
 10678                           ; Regs used in _setSw_Main: [wreg+fsr1l-status,0+pclath+cstack]
 10679                           ;setSw_Main@sw stored from wreg
 10680  04FD  0020               	movlb 0	; select bank0
 10681  04FE  00B2               	movwf	(setSw_Main@sw)
 10682                           	line	92
 10683                           	
 10684  04FF                     l21504:	
 10685                           ;Switch_B1.c: 92: SwPointSelect(sw);
 10686  04FF  0832               	movf	(setSw_Main@sw),w
 10687  0500  31AE  26AE  3184   	fcall	_SwPointSelect
 10688                           	line	120
 10689                           	
 10690  0503                     l21506:	
 10691                           ;Switch_B1.c: 120: Sw->Touch=(RA0 || RB1 || RA6 || RA4)?1:0;
 10692  0503  0020               	movlb 0	; select bank0
 10693  0504  01B1               	clrf	(_setSw_Main$18099)
 10694  0505  1403               	bsf	status,0
 10695  0506  0DB1               	rlf	(_setSw_Main$18099),f
 10696                           	
 10697  0507                     l21508:	
 10698  0507  180C               	btfsc	(96/8),(96)&7
 10699  0508  2D0A               	goto	u10051
 10700  0509  2D0B               	goto	u10050
 10701  050A                     u10051:
 10702  050A  2D19               	goto	l21518
 10703  050B                     u10050:
 10704                           	
 10705  050B                     l21510:	
 10706  050B  188D               	btfsc	(105/8),(105)&7
 10707  050C  2D0E               	goto	u10061
 10708  050D  2D0F               	goto	u10060
 10709  050E                     u10061:
 10710  050E  2D19               	goto	l21518
 10711  050F                     u10060:
 10712                           	
 10713  050F                     l21512:	
 10714  050F  1B0C               	btfsc	(102/8),(102)&7
 10715  0510  2D12               	goto	u10071
 10716  0511  2D13               	goto	u10070
 10717  0512                     u10071:
 10718  0512  2D19               	goto	l21518
 10719  0513                     u10070:
 10720                           	
 10721  0513                     l21514:	
 10722  0513  1A0C               	btfsc	(100/8),(100)&7
 10723  0514  2D16               	goto	u10081
 10724  0515  2D17               	goto	u10080
 10725  0516                     u10081:
 10726  0516  2D19               	goto	l21518
 10727  0517                     u10080:
 10728                           	
 10729  0517                     l21516:	
 10730  0517  01B1               	clrf	(_setSw_Main$18099)
 10731  0518  2D19               	goto	l21518
 10732                           	
 10733  0519                     l14406:	
 10734                           	
 10735  0519                     l21518:	
 10736  0519  086D               	movf	(_Sw),w
 10737  051A  0086               	movwf	fsr1l
 10738  051B  3001               	movlw 1	; select bank2/3
 10739  051C  0087               	movwf fsr1h	
 10740                           	
 10741  051D  0831               	movf	(_setSw_Main$18099),w
 10742  051E  1081               	bcf	indf1,1
 10743  051F  1D03               	skipz
 10744  0520  1481               	bsf	indf1,1
 10745                           	line	123
 10746                           ;Switch_B1.c: 123: if(Sw->Enable)
 10747  0521  086D               	movf	(_Sw),w
 10748  0522  0086               	movwf	fsr1l
 10749  0523  3001               	movlw 1	; select bank2/3
 10750  0524  0087               	movwf fsr1h	
 10751                           	
 10752  0525  1C01               	btfss	indf1,0
 10753  0526  2D28               	goto	u10091
 10754  0527  2D29               	goto	u10090
 10755  0528                     u10091:
 10756  0528  2E88               	goto	l14424
 10757  0529                     u10090:
 10758                           	line	125
 10759                           	
 10760  0529                     l21520:	
 10761                           ;Switch_B1.c: 124: {
 10762                           ;Switch_B1.c: 125: if(Sw->Touch)
 10763  0529  086D               	movf	(_Sw),w
 10764  052A  0086               	movwf	fsr1l
 10765  052B  3001               	movlw 1	; select bank2/3
 10766  052C  0087               	movwf fsr1h	
 10767                           	
 10768  052D  1C81               	btfss	indf1,1
 10769  052E  2D30               	goto	u10101
 10770  052F  2D31               	goto	u10100
 10771  0530                     u10101:
 10772  0530  2E28               	goto	l21566
 10773  0531                     u10100:
 10774                           	line	127
 10775                           	
 10776  0531                     l21522:	
 10777                           ;Switch_B1.c: 126: {
 10778                           ;Switch_B1.c: 127: if(!Sw->Debounce)
 10779  0531  086D               	movf	(_Sw),w
 10780  0532  0086               	movwf	fsr1l
 10781  0533  3001               	movlw 1	; select bank2/3
 10782  0534  0087               	movwf fsr1h	
 10783                           	
 10784  0535  1901               	btfsc	indf1,2
 10785  0536  2D38               	goto	u10111
 10786  0537  2D39               	goto	u10110
 10787  0538                     u10111:
 10788  0538  2D5E               	goto	l21532
 10789  0539                     u10110:
 10790                           	line	129
 10791                           	
 10792  0539                     l21524:	
 10793                           ;Switch_B1.c: 128: {
 10794                           ;Switch_B1.c: 129: Sw->DebounceTime++;
 10795  0539  3001               	movlw	(01h)
 10796  053A  00AF               	movwf	(??_setSw_Main+0)+0
 10797  053B  086D               	movf	(_Sw),w
 10798  053C  3E02               	addlw	02h
 10799  053D  0086               	movwf	fsr1l
 10800  053E  3001               	movlw 1	; select bank2/3
 10801  053F  0087               	movwf fsr1h	
 10802                           	
 10803  0540  082F               	movf	(??_setSw_Main+0)+0,w
 10804  0541  0781               	addwf	indf1,f
 10805                           	line	130
 10806                           	
 10807  0542                     l21526:	
 10808                           ;Switch_B1.c: 130: if(Sw->DebounceTime >= 100/5)
 10809  0542  086D               	movf	(_Sw),w
 10810  0543  3E02               	addlw	02h
 10811  0544  0086               	movwf	fsr1l
 10812  0545  3001               	movlw 1	; select bank2/3
 10813  0546  0087               	movwf fsr1h	
 10814                           	
 10815  0547  3014               	movlw	(014h)
 10816  0548  0201               	subwf	indf1,w
 10817  0549  1C03               	skipc
 10818  054A  2D4C               	goto	u10121
 10819  054B  2D4D               	goto	u10120
 10820  054C                     u10121:
 10821  054C  2E88               	goto	l14424
 10822  054D                     u10120:
 10823                           	line	132
 10824                           	
 10825  054D                     l21528:	
 10826                           ;Switch_B1.c: 131: {
 10827                           ;Switch_B1.c: 132: Sw->DebounceTime=0;
 10828  054D  086D               	movf	(_Sw),w
 10829  054E  3E02               	addlw	02h
 10830  054F  0086               	movwf	fsr1l
 10831  0550  3001               	movlw 1	; select bank2/3
 10832  0551  0087               	movwf fsr1h	
 10833                           	
 10834  0552  0181               	clrf	indf1
 10835                           	line	133
 10836                           ;Switch_B1.c: 133: Sw->Debounce=1;
 10837  0553  086D               	movf	(_Sw),w
 10838  0554  0086               	movwf	fsr1l
 10839  0555  3001               	movlw 1	; select bank2/3
 10840  0556  0087               	movwf fsr1h	
 10841                           	
 10842  0557  1501               	bsf	indf1,2
 10843                           	line	134
 10844                           	
 10845  0558                     l21530:	
 10846                           ;Switch_B1.c: 134: Sw_OnFunc(sw);
 10847  0558  0832               	movf	(setSw_Main@sw),w
 10848  0559  319A  22C4  3184   	fcall	_Sw_OnFunc
 10849  055C  2E88               	goto	l14424
 10850                           	line	135
 10851                           	
 10852  055D                     l14410:	
 10853                           	line	136
 10854                           ;Switch_B1.c: 135: }
 10855                           ;Switch_B1.c: 136: }
 10856  055D  2E88               	goto	l14424
 10857                           	line	137
 10858                           	
 10859  055E                     l14409:	
 10860                           	line	139
 10861                           	
 10862  055E                     l21532:	
 10863                           ;Switch_B1.c: 137: else
 10864                           ;Switch_B1.c: 138: {
 10865                           ;Switch_B1.c: 139: if(!Sw->Hold1)
 10866  055E  0020               	movlb 0	; select bank0
 10867  055F  086D               	movf	(_Sw),w
 10868  0560  0086               	movwf	fsr1l
 10869  0561  3001               	movlw 1	; select bank2/3
 10870  0562  0087               	movwf fsr1h	
 10871                           	
 10872  0563  1981               	btfsc	indf1,3
 10873  0564  2D66               	goto	u10131
 10874  0565  2D67               	goto	u10130
 10875  0566                     u10131:
 10876  0566  2D97               	goto	l21542
 10877  0567                     u10130:
 10878                           	line	141
 10879                           	
 10880  0567                     l21534:	
 10881                           ;Switch_B1.c: 140: {
 10882                           ;Switch_B1.c: 141: Sw->Hold1Time++;
 10883  0567  086D               	movf	(_Sw),w
 10884  0568  3E03               	addlw	03h
 10885  0569  0086               	movwf	fsr1l
 10886  056A  3001               	movlw 1	; select bank2/3
 10887  056B  0087               	movwf fsr1h	
 10888                           	
 10889  056C  3001               	movlw	01h
 10890  056D  0781               	addwf	indf1,f
 10891  056E  3141               	addfsr	fsr1,1
 10892  056F  1803               	skipnc
 10893  0570  0A81               	incf	indf1,f
 10894                           	line	142
 10895                           	
 10896  0571                     l21536:	
 10897                           ;Switch_B1.c: 142: if(Sw->Hold1Time >= 1500/5)
 10898  0571  086D               	movf	(_Sw),w
 10899  0572  3E03               	addlw	03h
 10900  0573  0086               	movwf	fsr1l
 10901  0574  3001               	movlw 1	; select bank2/3
 10902  0575  0087               	movwf fsr1h	
 10903                           	
 10904  0576  3F40               	moviw	[0]fsr1
 10905  0577  00AF               	movwf	(??_setSw_Main+0)+0
 10906  0578  3F41               	moviw	[1]fsr1
 10907  0579  00B0               	movwf	(??_setSw_Main+0)+0+1
 10908  057A  3001               	movlw	high(012Ch)
 10909  057B  0230               	subwf	1+(??_setSw_Main+0)+0,w
 10910  057C  302C               	movlw	low(012Ch)
 10911  057D  1903               	skipnz
 10912  057E  022F               	subwf	0+(??_setSw_Main+0)+0,w
 10913  057F  1C03               	skipc
 10914  0580  2D82               	goto	u10141
 10915  0581  2D83               	goto	u10140
 10916  0582                     u10141:
 10917  0582  2E88               	goto	l14424
 10918  0583                     u10140:
 10919                           	line	144
 10920                           	
 10921  0583                     l21538:	
 10922                           ;Switch_B1.c: 143: {
 10923                           ;Switch_B1.c: 144: Sw->Hold1Time=0;
 10924  0583  086D               	movf	(_Sw),w
 10925  0584  3E03               	addlw	03h
 10926  0585  0086               	movwf	fsr1l
 10927  0586  3001               	movlw 1	; select bank2/3
 10928  0587  0087               	movwf fsr1h	
 10929                           	
 10930  0588  3000               	movlw	low(0)
 10931  0589  3FC0               	movwi	[0]fsr1
 10932  058A  3000               	movlw	high(0)
 10933  058B  3FC1               	movwi	[1]fsr1
 10934                           	line	145
 10935                           ;Switch_B1.c: 145: Sw->Hold1=1;
 10936  058C  086D               	movf	(_Sw),w
 10937  058D  0086               	movwf	fsr1l
 10938  058E  3001               	movlw 1	; select bank2/3
 10939  058F  0087               	movwf fsr1h	
 10940                           	
 10941  0590  1581               	bsf	indf1,3
 10942                           	line	147
 10943                           	
 10944  0591                     l21540:	
 10945                           ;Switch_B1.c: 147: Sw_AdjFunc(sw);
 10946  0591  0832               	movf	(setSw_Main@sw),w
 10947  0592  31A3  23BF  3184   	fcall	_Sw_AdjFunc
 10948  0595  2E88               	goto	l14424
 10949                           	line	149
 10950                           	
 10951  0596                     l14413:	
 10952                           	line	150
 10953                           ;Switch_B1.c: 149: }
 10954                           ;Switch_B1.c: 150: }
 10955  0596  2E88               	goto	l14424
 10956                           	line	151
 10957                           	
 10958  0597                     l14412:	
 10959                           	line	153
 10960                           	
 10961  0597                     l21542:	
 10962                           ;Switch_B1.c: 151: else
 10963                           ;Switch_B1.c: 152: {
 10964                           ;Switch_B1.c: 153: if(!Sw->Hold2)
 10965  0597  0020               	movlb 0	; select bank0
 10966  0598  086D               	movf	(_Sw),w
 10967  0599  0086               	movwf	fsr1l
 10968  059A  3001               	movlw 1	; select bank2/3
 10969  059B  0087               	movwf fsr1h	
 10970                           	
 10971  059C  1A01               	btfsc	indf1,4
 10972  059D  2D9F               	goto	u10151
 10973  059E  2DA0               	goto	u10150
 10974  059F                     u10151:
 10975  059F  2DEA               	goto	l21556
 10976  05A0                     u10150:
 10977                           	line	155
 10978                           	
 10979  05A0                     l21544:	
 10980                           ;Switch_B1.c: 154: {
 10981                           ;Switch_B1.c: 155: Sw->Hold2Time++;
 10982  05A0  086D               	movf	(_Sw),w
 10983  05A1  3E05               	addlw	05h
 10984  05A2  0086               	movwf	fsr1l
 10985  05A3  3001               	movlw 1	; select bank2/3
 10986  05A4  0087               	movwf fsr1h	
 10987                           	
 10988  05A5  3001               	movlw	01h
 10989  05A6  0781               	addwf	indf1,f
 10990  05A7  3141               	addfsr	fsr1,1
 10991  05A8  1803               	skipnc
 10992  05A9  0A81               	incf	indf1,f
 10993                           	line	156
 10994                           	
 10995  05AA                     l21546:	
 10996                           ;Switch_B1.c: 156: if(Sw->Hold2Time >= 1500/5)
 10997  05AA  086D               	movf	(_Sw),w
 10998  05AB  3E05               	addlw	05h
 10999  05AC  0086               	movwf	fsr1l
 11000  05AD  3001               	movlw 1	; select bank2/3
 11001  05AE  0087               	movwf fsr1h	
 11002                           	
 11003  05AF  3F40               	moviw	[0]fsr1
 11004  05B0  00AF               	movwf	(??_setSw_Main+0)+0
 11005  05B1  3F41               	moviw	[1]fsr1
 11006  05B2  00B0               	movwf	(??_setSw_Main+0)+0+1
 11007  05B3  3001               	movlw	high(012Ch)
 11008  05B4  0230               	subwf	1+(??_setSw_Main+0)+0,w
 11009  05B5  302C               	movlw	low(012Ch)
 11010  05B6  1903               	skipnz
 11011  05B7  022F               	subwf	0+(??_setSw_Main+0)+0,w
 11012  05B8  1C03               	skipc
 11013  05B9  2DBB               	goto	u10161
 11014  05BA  2DBC               	goto	u10160
 11015  05BB                     u10161:
 11016  05BB  2E88               	goto	l14424
 11017  05BC                     u10160:
 11018                           	line	158
 11019                           	
 11020  05BC                     l21548:	
 11021                           ;Switch_B1.c: 157: {
 11022                           ;Switch_B1.c: 158: Sw->Hold2Time=0;
 11023  05BC  086D               	movf	(_Sw),w
 11024  05BD  3E05               	addlw	05h
 11025  05BE  0086               	movwf	fsr1l
 11026  05BF  3001               	movlw 1	; select bank2/3
 11027  05C0  0087               	movwf fsr1h	
 11028                           	
 11029  05C1  3000               	movlw	low(0)
 11030  05C2  3FC0               	movwi	[0]fsr1
 11031  05C3  3000               	movlw	high(0)
 11032  05C4  3FC1               	movwi	[1]fsr1
 11033                           	line	159
 11034                           ;Switch_B1.c: 159: Sw->Hold2=1;
 11035  05C5  086D               	movf	(_Sw),w
 11036  05C6  0086               	movwf	fsr1l
 11037  05C7  3001               	movlw 1	; select bank2/3
 11038  05C8  0087               	movwf fsr1h	
 11039                           	
 11040  05C9  1601               	bsf	indf1,4
 11041                           	line	161
 11042                           	
 11043  05CA                     l21550:	
 11044                           ;Switch_B1.c: 161: setRF_Learn(1,1);
 11045  05CA  01A2               	clrf	(?_setRF_Learn)
 11046  05CB  1403               	bsf	status,0
 11047  05CC  0DA2               	rlf	(?_setRF_Learn),f
 11048  05CD  3001               	movlw	(01h)
 11049  05CE  31AF  2741  3184   	fcall	_setRF_Learn
 11050                           	line	162
 11051                           	
 11052  05D1                     l21552:	
 11053                           ;Switch_B1.c: 162: if(TMain->First)
 11054  05D1  087D               	movf	(_TMain),w
 11055  05D2  3E03               	addlw	03h
 11056  05D3  0086               	movwf	fsr1l
 11057  05D4  3001               	movlw 1	; select bank2/3
 11058  05D5  0087               	movwf fsr1h	
 11059                           	
 11060  05D6  1C81               	btfss	indf1,1
 11061  05D7  2DD9               	goto	u10171
 11062  05D8  2DDA               	goto	u10170
 11063  05D9                     u10171:
 11064  05D9  2E88               	goto	l14424
 11065  05DA                     u10170:
 11066                           	line	164
 11067                           	
 11068  05DA                     l21554:	
 11069                           ;Switch_B1.c: 163: {
 11070                           ;Switch_B1.c: 164: setBuz(1,2,50);
 11071  05DA  3002               	movlw	(02h)
 11072  05DB  0020               	movlb 0	; select bank0
 11073  05DC  00AF               	movwf	(??_setSw_Main+0)+0
 11074  05DD  082F               	movf	(??_setSw_Main+0)+0,w
 11075  05DE  00A9               	movwf	(?_setBuz)
 11076  05DF  3032               	movlw	low(032h)
 11077  05E0  00AA               	movwf	0+(?_setBuz)+01h
 11078  05E1  3000               	movlw	high(032h)
 11079  05E2  00AB               	movwf	(0+(?_setBuz)+01h)+1
 11080  05E3  3001               	movlw	(01h)
 11081  05E4  3194  2499  3184   	fcall	_setBuz
 11082  05E7  2E88               	goto	l14424
 11083                           	line	165
 11084                           	
 11085  05E8                     l14417:	
 11086  05E8  2E88               	goto	l14424
 11087                           	line	167
 11088                           	
 11089  05E9                     l14416:	
 11090                           	line	168
 11091                           ;Switch_B1.c: 165: }
 11092                           ;Switch_B1.c: 167: }
 11093                           ;Switch_B1.c: 168: }
 11094  05E9  2E88               	goto	l14424
 11095                           	line	169
 11096                           	
 11097  05EA                     l14415:	
 11098                           	line	171
 11099                           	
 11100  05EA                     l21556:	
 11101                           ;Switch_B1.c: 169: else
 11102                           ;Switch_B1.c: 170: {
 11103                           ;Switch_B1.c: 171: if(!Sw->Hold3)
 11104  05EA  0020               	movlb 0	; select bank0
 11105  05EB  086D               	movf	(_Sw),w
 11106  05EC  0086               	movwf	fsr1l
 11107  05ED  3001               	movlw 1	; select bank2/3
 11108  05EE  0087               	movwf fsr1h	
 11109                           	
 11110  05EF  1A81               	btfsc	indf1,5
 11111  05F0  2DF2               	goto	u10181
 11112  05F1  2DF3               	goto	u10180
 11113  05F2                     u10181:
 11114  05F2  2E88               	goto	l14424
 11115  05F3                     u10180:
 11116                           	line	173
 11117                           	
 11118  05F3                     l21558:	
 11119                           ;Switch_B1.c: 172: {
 11120                           ;Switch_B1.c: 173: Sw->Hold3Time++;
 11121  05F3  086D               	movf	(_Sw),w
 11122  05F4  3E07               	addlw	07h
 11123  05F5  0086               	movwf	fsr1l
 11124  05F6  3001               	movlw 1	; select bank2/3
 11125  05F7  0087               	movwf fsr1h	
 11126                           	
 11127  05F8  3001               	movlw	01h
 11128  05F9  0781               	addwf	indf1,f
 11129  05FA  3141               	addfsr	fsr1,1
 11130  05FB  1803               	skipnc
 11131  05FC  0A81               	incf	indf1,f
 11132                           	line	174
 11133                           	
 11134  05FD                     l21560:	
 11135                           ;Switch_B1.c: 174: if(Sw->Hold3Time >= 3000/5)
 11136  05FD  086D               	movf	(_Sw),w
 11137  05FE  3E07               	addlw	07h
 11138  05FF  0086               	movwf	fsr1l
 11139  0600  3001               	movlw 1	; select bank2/3
 11140  0601  0087               	movwf fsr1h	
 11141                           	
 11142  0602  3F40               	moviw	[0]fsr1
 11143  0603  00AF               	movwf	(??_setSw_Main+0)+0
 11144  0604  3F41               	moviw	[1]fsr1
 11145  0605  00B0               	movwf	(??_setSw_Main+0)+0+1
 11146  0606  3002               	movlw	high(0258h)
 11147  0607  0230               	subwf	1+(??_setSw_Main+0)+0,w
 11148  0608  3058               	movlw	low(0258h)
 11149  0609  1903               	skipnz
 11150  060A  022F               	subwf	0+(??_setSw_Main+0)+0,w
 11151  060B  1C03               	skipc
 11152  060C  2E0E               	goto	u10191
 11153  060D  2E0F               	goto	u10190
 11154  060E                     u10191:
 11155  060E  2E88               	goto	l14424
 11156  060F                     u10190:
 11157                           	line	176
 11158                           	
 11159  060F                     l21562:	
 11160                           ;Switch_B1.c: 175: {
 11161                           ;Switch_B1.c: 176: Sw->Hold3Time=0;
 11162  060F  086D               	movf	(_Sw),w
 11163  0610  3E07               	addlw	07h
 11164  0611  0086               	movwf	fsr1l
 11165  0612  3001               	movlw 1	; select bank2/3
 11166  0613  0087               	movwf fsr1h	
 11167                           	
 11168  0614  3000               	movlw	low(0)
 11169  0615  3FC0               	movwi	[0]fsr1
 11170  0616  3000               	movlw	high(0)
 11171  0617  3FC1               	movwi	[1]fsr1
 11172                           	line	177
 11173                           ;Switch_B1.c: 177: Sw->Hold3=1;
 11174  0618  086D               	movf	(_Sw),w
 11175  0619  0086               	movwf	fsr1l
 11176  061A  3001               	movlw 1	; select bank2/3
 11177  061B  0087               	movwf fsr1h	
 11178                           	
 11179  061C  1681               	bsf	indf1,5
 11180                           	line	178
 11181                           	
 11182  061D                     l21564:	
 11183                           ;Switch_B1.c: 178: setRF_Learn(1,0);
 11184  061D  01A2               	clrf	(?_setRF_Learn)
 11185  061E  3001               	movlw	(01h)
 11186  061F  31AF  2741  3184   	fcall	_setRF_Learn
 11187  0622  2E88               	goto	l14424
 11188                           	line	179
 11189                           	
 11190  0623                     l14420:	
 11191  0623  2E88               	goto	l14424
 11192                           	line	180
 11193                           	
 11194  0624                     l14419:	
 11195  0624  2E88               	goto	l14424
 11196                           	line	181
 11197                           	
 11198  0625                     l14418:	
 11199  0625  2E88               	goto	l14424
 11200                           	line	182
 11201                           	
 11202  0626                     l14414:	
 11203  0626  2E88               	goto	l14424
 11204                           	line	183
 11205                           	
 11206  0627                     l14411:	
 11207                           	line	184
 11208                           ;Switch_B1.c: 179: }
 11209                           ;Switch_B1.c: 180: }
 11210                           ;Switch_B1.c: 181: }
 11211                           ;Switch_B1.c: 182: }
 11212                           ;Switch_B1.c: 183: }
 11213                           ;Switch_B1.c: 184: }
 11214  0627  2E88               	goto	l14424
 11215                           	line	185
 11216                           	
 11217  0628                     l14408:	
 11218                           	line	187
 11219                           	
 11220  0628                     l21566:	
 11221                           ;Switch_B1.c: 185: else
 11222                           ;Switch_B1.c: 186: {
 11223                           ;Switch_B1.c: 187: if(Sw->Debounce)
 11224  0628  0020               	movlb 0	; select bank0
 11225  0629  086D               	movf	(_Sw),w
 11226  062A  0086               	movwf	fsr1l
 11227  062B  3001               	movlw 1	; select bank2/3
 11228  062C  0087               	movwf fsr1h	
 11229                           	
 11230  062D  1D01               	btfss	indf1,2
 11231  062E  2E30               	goto	u10201
 11232  062F  2E31               	goto	u10200
 11233  0630                     u10201:
 11234  0630  2E88               	goto	l14424
 11235  0631                     u10200:
 11236                           	line	189
 11237                           	
 11238  0631                     l21568:	
 11239                           ;Switch_B1.c: 188: {
 11240                           ;Switch_B1.c: 189: Sw->DebounceTime++;
 11241  0631  3001               	movlw	(01h)
 11242  0632  00AF               	movwf	(??_setSw_Main+0)+0
 11243  0633  086D               	movf	(_Sw),w
 11244  0634  3E02               	addlw	02h
 11245  0635  0086               	movwf	fsr1l
 11246  0636  3001               	movlw 1	; select bank2/3
 11247  0637  0087               	movwf fsr1h	
 11248                           	
 11249  0638  082F               	movf	(??_setSw_Main+0)+0,w
 11250  0639  0781               	addwf	indf1,f
 11251                           	line	190
 11252                           	
 11253  063A                     l21570:	
 11254                           ;Switch_B1.c: 190: if(Sw->DebounceTime >= 100/5)
 11255  063A  086D               	movf	(_Sw),w
 11256  063B  3E02               	addlw	02h
 11257  063C  0086               	movwf	fsr1l
 11258  063D  3001               	movlw 1	; select bank2/3
 11259  063E  0087               	movwf fsr1h	
 11260                           	
 11261  063F  3014               	movlw	(014h)
 11262  0640  0201               	subwf	indf1,w
 11263  0641  1C03               	skipc
 11264  0642  2E44               	goto	u10211
 11265  0643  2E45               	goto	u10210
 11266  0644                     u10211:
 11267  0644  2E88               	goto	l14424
 11268  0645                     u10210:
 11269                           	line	192
 11270                           	
 11271  0645                     l21572:	
 11272                           ;Switch_B1.c: 191: {
 11273                           ;Switch_B1.c: 192: Sw->DebounceTime=0;
 11274  0645  086D               	movf	(_Sw),w
 11275  0646  3E02               	addlw	02h
 11276  0647  0086               	movwf	fsr1l
 11277  0648  3001               	movlw 1	; select bank2/3
 11278  0649  0087               	movwf fsr1h	
 11279                           	
 11280  064A  0181               	clrf	indf1
 11281                           	line	193
 11282                           ;Switch_B1.c: 193: Sw->Debounce=0;
 11283  064B  086D               	movf	(_Sw),w
 11284  064C  0086               	movwf	fsr1l
 11285  064D  3001               	movlw 1	; select bank2/3
 11286  064E  0087               	movwf fsr1h	
 11287                           	
 11288  064F  1101               	bcf	indf1,2
 11289                           	line	194
 11290                           ;Switch_B1.c: 194: Sw->Hold1Time=0;
 11291  0650  086D               	movf	(_Sw),w
 11292  0651  3E03               	addlw	03h
 11293  0652  0086               	movwf	fsr1l
 11294  0653  3001               	movlw 1	; select bank2/3
 11295  0654  0087               	movwf fsr1h	
 11296                           	
 11297  0655  3000               	movlw	low(0)
 11298  0656  3FC0               	movwi	[0]fsr1
 11299  0657  3000               	movlw	high(0)
 11300  0658  3FC1               	movwi	[1]fsr1
 11301                           	line	195
 11302                           ;Switch_B1.c: 195: Sw->Hold1=0;
 11303  0659  086D               	movf	(_Sw),w
 11304  065A  0086               	movwf	fsr1l
 11305  065B  3001               	movlw 1	; select bank2/3
 11306  065C  0087               	movwf fsr1h	
 11307                           	
 11308  065D  1181               	bcf	indf1,3
 11309                           	line	196
 11310                           ;Switch_B1.c: 196: Sw->Hold2Time=0;
 11311  065E  086D               	movf	(_Sw),w
 11312  065F  3E05               	addlw	05h
 11313  0660  0086               	movwf	fsr1l
 11314  0661  3001               	movlw 1	; select bank2/3
 11315  0662  0087               	movwf fsr1h	
 11316                           	
 11317  0663  3000               	movlw	low(0)
 11318  0664  3FC0               	movwi	[0]fsr1
 11319  0665  3000               	movlw	high(0)
 11320  0666  3FC1               	movwi	[1]fsr1
 11321                           	line	197
 11322                           ;Switch_B1.c: 197: Sw->Hold2=0;
 11323  0667  086D               	movf	(_Sw),w
 11324  0668  0086               	movwf	fsr1l
 11325  0669  3001               	movlw 1	; select bank2/3
 11326  066A  0087               	movwf fsr1h	
 11327                           	
 11328  066B  1201               	bcf	indf1,4
 11329                           	line	198
 11330                           ;Switch_B1.c: 198: Sw->Hold3Time=0;
 11331  066C  086D               	movf	(_Sw),w
 11332  066D  3E07               	addlw	07h
 11333  066E  0086               	movwf	fsr1l
 11334  066F  3001               	movlw 1	; select bank2/3
 11335  0670  0087               	movwf fsr1h	
 11336                           	
 11337  0671  3000               	movlw	low(0)
 11338  0672  3FC0               	movwi	[0]fsr1
 11339  0673  3000               	movlw	high(0)
 11340  0674  3FC1               	movwi	[1]fsr1
 11341                           	line	199
 11342                           ;Switch_B1.c: 199: Sw->Hold3=0;
 11343  0675  086D               	movf	(_Sw),w
 11344  0676  0086               	movwf	fsr1l
 11345  0677  3001               	movlw 1	; select bank2/3
 11346  0678  0087               	movwf fsr1h	
 11347                           	
 11348  0679  1281               	bcf	indf1,5
 11349                           	line	200
 11350                           	
 11351  067A                     l21574:	
 11352                           ;Switch_B1.c: 200: setRF_Learn(1,0);
 11353  067A  01A2               	clrf	(?_setRF_Learn)
 11354  067B  3001               	movlw	(01h)
 11355  067C  31AF  2741  3184   	fcall	_setRF_Learn
 11356                           	line	201
 11357                           	
 11358  067F                     l21576:	
 11359                           ;Switch_B1.c: 201: Sw_OffFunc(sw);
 11360  067F  0020               	movlb 0	; select bank0
 11361  0680  0832               	movf	(setSw_Main@sw),w
 11362  0681  319F  2780  3184   	fcall	_Sw_OffFunc
 11363  0684  2E88               	goto	l14424
 11364                           	line	202
 11365                           	
 11366  0685                     l14423:	
 11367  0685  2E88               	goto	l14424
 11368                           	line	203
 11369                           	
 11370  0686                     l14422:	
 11371  0686  2E88               	goto	l14424
 11372                           	line	204
 11373                           	
 11374  0687                     l14421:	
 11375  0687  2E88               	goto	l14424
 11376                           	line	205
 11377                           	
 11378  0688                     l14407:	
 11379                           	line	206
 11380                           	
 11381  0688                     l14424:	
 11382  0688  0008               	return
 11383                           	opt stack 0
 11384                           GLOBAL	__end_of_setSw_Main
 11385  0689                     	__end_of_setSw_Main:
 11386 ;; =============== function _setSw_Main ends ============
 11387                           
 11388                           	signat	_setSw_Main,4216
 11389                           	global	_Flash_Memory_Modify
 11390                           psect	text4891,local,class=CODE,delta=2
 11391                           global __ptext4891
 11392  1351                     __ptext4891:
 11393                           
 11394 ;; *************** function _Flash_Memory_Modify *****************
 11395 ;; Defined at:
 11396 ;;		line 464 in file "G:\Program\PIC\Source_File\MCU_16f1518_B1.c"
 11397 ;; Parameters:    Size  Location     Type
 11398 ;;		None
 11399 ;; Auto vars:     Size  Location     Type
 11400 ;;  i               1    6[BANK0 ] unsigned char 
 11401 ;; Return value:  Size  Location     Type
 11402 ;;		None               void
 11403 ;; Registers used:
 11404 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11405 ;; Tracked objects:
 11406 ;;		On entry : 0/0
 11407 ;;		On exit  : 0/0
 11408 ;;		Unchanged: 0/0
 11409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 11410 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11411 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 11412 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 11413 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 11414 ;;Total ram usage:        3 bytes
 11415 ;; Hardware stack levels used:    1
 11416 ;; Hardware stack levels required when called:    6
 11417 ;; This function calls:
 11418 ;;		_Flash_Memory_Read
 11419 ;;		_Flash_Memory_Erasing
 11420 ;;		_Flash_Memory_Write
 11421 ;; This function is called by:
 11422 ;;		_Flash_Memory_Main
 11423 ;; This function uses a non-reentrant model
 11424 ;;
 11425                           psect	text4891
 11426                           	file	"G:\Program\PIC\Source_File\MCU_16f1518_B1.c"
 11427                           	line	464
 11428                           	global	__size_of_Flash_Memory_Modify
 11429  00A3                     	__size_of_Flash_Memory_Modify	equ	__end_of_Flash_Memory_Modify-_Flash_Memory_Modify
 11430                           	
 11431  1351                     _Flash_Memory_Modify:	
 11432                           	opt	stack 8
 11433                           ; Regs used in _Flash_Memory_Modify: [wreg+fsr1l-status,0+pclath+cstack]
 11434                           	line	466
 11435                           	
 11436  1351                     l21478:	
 11437                           ;MCU_16f1518_B1.c: 465: char i;
 11438                           ;MCU_16f1518_B1.c: 466: for(i=0;i<32;i++)
 11439  1351  0020               	movlb 0	; select bank0
 11440  1352  01A6               	clrf	(Flash_Memory_Modify@i)
 11441                           	
 11442  1353                     l21480:	
 11443  1353  3020               	movlw	(020h)
 11444  1354  0226               	subwf	(Flash_Memory_Modify@i),w
 11445  1355  1C03               	skipc
 11446  1356  2B58               	goto	u10021
 11447  1357  2B59               	goto	u10020
 11448  1358                     u10021:
 11449  1358  2B5B               	goto	l21484
 11450  1359                     u10020:
 11451  1359  2B75               	goto	l21490
 11452                           	
 11453  135A                     l21482:	
 11454  135A  2B75               	goto	l21490
 11455                           	line	467
 11456                           	
 11457  135B                     l8421:	
 11458                           	line	468
 11459                           	
 11460  135B                     l21484:	
 11461                           ;MCU_16f1518_B1.c: 467: {
 11462                           ;MCU_16f1518_B1.c: 468: Memory->Data[i]=Flash_Memory_Read(i);
 11463  135B  0826               	movf	(Flash_Memory_Modify@i),w
 11464  135C  31A1  2193  3193   	fcall	_Flash_Memory_Read
 11465  135F  0020               	movlb 0	; select bank0
 11466  1360  00A4               	movwf	(??_Flash_Memory_Modify+0)+0
 11467  1361  0826               	movf	(Flash_Memory_Modify@i),w
 11468  1362  077C               	addwf	(_Memory),w
 11469  1363  00A5               	movwf	(??_Flash_Memory_Modify+1)+0
 11470  1364  0825               	movf	0+(??_Flash_Memory_Modify+1)+0,w
 11471  1365  0086               	movwf	fsr1l
 11472  1366  3001               	movlw 1	; select bank2/3
 11473  1367  0087               	movwf fsr1h	
 11474                           	
 11475  1368  0824               	movf	(??_Flash_Memory_Modify+0)+0,w
 11476  1369  0081               	movwf	indf1
 11477                           	line	466
 11478                           	
 11479  136A                     l21486:	
 11480  136A  3001               	movlw	(01h)
 11481  136B  00A4               	movwf	(??_Flash_Memory_Modify+0)+0
 11482  136C  0824               	movf	(??_Flash_Memory_Modify+0)+0,w
 11483  136D  07A6               	addwf	(Flash_Memory_Modify@i),f
 11484                           	
 11485  136E                     l21488:	
 11486  136E  3020               	movlw	(020h)
 11487  136F  0226               	subwf	(Flash_Memory_Modify@i),w
 11488  1370  1C03               	skipc
 11489  1371  2B73               	goto	u10031
 11490  1372  2B74               	goto	u10030
 11491  1373                     u10031:
 11492  1373  2B5B               	goto	l21484
 11493  1374                     u10030:
 11494  1374  2B75               	goto	l21490
 11495                           	
 11496  1375                     l8422:	
 11497                           	line	470
 11498                           	
 11499  1375                     l21490:	
 11500                           ;MCU_16f1518_B1.c: 469: }
 11501                           ;MCU_16f1518_B1.c: 470: Memory->Data[0]=Product->Data[12];
 11502  1375  086F               	movf	(_Product),w
 11503  1376  3E0C               	addlw	0Ch
 11504  1377  0086               	movwf	fsr1l
 11505  1378  3001               	movlw 1	; select bank2/3
 11506  1379  0087               	movwf fsr1h	
 11507                           	
 11508  137A  0801               	movf	indf1,w
 11509  137B  00A4               	movwf	(??_Flash_Memory_Modify+0)+0
 11510  137C  087C               	movf	(_Memory),w
 11511  137D  0086               	movwf	fsr1l
 11512  137E  3001               	movlw 1	; select bank2/3
 11513  137F  0087               	movwf fsr1h	
 11514                           	
 11515  1380  0824               	movf	(??_Flash_Memory_Modify+0)+0,w
 11516  1381  0081               	movwf	indf1
 11517                           	line	471
 11518                           ;MCU_16f1518_B1.c: 471: Memory->Data[1]=Product->Data[13];
 11519  1382  086F               	movf	(_Product),w
 11520  1383  3E0D               	addlw	0Dh
 11521  1384  0086               	movwf	fsr1l
 11522  1385  3001               	movlw 1	; select bank2/3
 11523  1386  0087               	movwf fsr1h	
 11524                           	
 11525  1387  0801               	movf	indf1,w
 11526  1388  00A4               	movwf	(??_Flash_Memory_Modify+0)+0
 11527  1389  087C               	movf	(_Memory),w
 11528  138A  3E01               	addlw	01h
 11529  138B  0086               	movwf	fsr1l
 11530  138C  3001               	movlw 1	; select bank2/3
 11531  138D  0087               	movwf fsr1h	
 11532                           	
 11533  138E  0824               	movf	(??_Flash_Memory_Modify+0)+0,w
 11534  138F  0081               	movwf	indf1
 11535                           	line	472
 11536                           ;MCU_16f1518_B1.c: 472: Memory->Data[2]=Product->Data[14];
 11537  1390  086F               	movf	(_Product),w
 11538  1391  3E0E               	addlw	0Eh
 11539  1392  0086               	movwf	fsr1l
 11540  1393  3001               	movlw 1	; select bank2/3
 11541  1394  0087               	movwf fsr1h	
 11542                           	
 11543  1395  0801               	movf	indf1,w
 11544  1396  00A4               	movwf	(??_Flash_Memory_Modify+0)+0
 11545  1397  087C               	movf	(_Memory),w
 11546  1398  3E02               	addlw	02h
 11547  1399  0086               	movwf	fsr1l
 11548  139A  3001               	movlw 1	; select bank2/3
 11549  139B  0087               	movwf fsr1h	
 11550                           	
 11551  139C  0824               	movf	(??_Flash_Memory_Modify+0)+0,w
 11552  139D  0081               	movwf	indf1
 11553                           	line	473
 11554                           ;MCU_16f1518_B1.c: 473: Memory->Data[3]=Product->Data[21];
 11555  139E  086F               	movf	(_Product),w
 11556  139F  3E15               	addlw	015h
 11557  13A0  0086               	movwf	fsr1l
 11558  13A1  3001               	movlw 1	; select bank2/3
 11559  13A2  0087               	movwf fsr1h	
 11560                           	
 11561  13A3  0801               	movf	indf1,w
 11562  13A4  00A4               	movwf	(??_Flash_Memory_Modify+0)+0
 11563  13A5  087C               	movf	(_Memory),w
 11564  13A6  3E03               	addlw	03h
 11565  13A7  0086               	movwf	fsr1l
 11566  13A8  3001               	movlw 1	; select bank2/3
 11567  13A9  0087               	movwf fsr1h	
 11568                           	
 11569  13AA  0824               	movf	(??_Flash_Memory_Modify+0)+0,w
 11570  13AB  0081               	movwf	indf1
 11571                           	line	474
 11572                           ;MCU_16f1518_B1.c: 474: Memory->Data[4]=Product->Data[22];
 11573  13AC  086F               	movf	(_Product),w
 11574  13AD  3E16               	addlw	016h
 11575  13AE  0086               	movwf	fsr1l
 11576  13AF  3001               	movlw 1	; select bank2/3
 11577  13B0  0087               	movwf fsr1h	
 11578                           	
 11579  13B1  0801               	movf	indf1,w
 11580  13B2  00A4               	movwf	(??_Flash_Memory_Modify+0)+0
 11581  13B3  087C               	movf	(_Memory),w
 11582  13B4  3E04               	addlw	04h
 11583  13B5  0086               	movwf	fsr1l
 11584  13B6  3001               	movlw 1	; select bank2/3
 11585  13B7  0087               	movwf fsr1h	
 11586                           	
 11587  13B8  0824               	movf	(??_Flash_Memory_Modify+0)+0,w
 11588  13B9  0081               	movwf	indf1
 11589                           	line	475
 11590                           ;MCU_16f1518_B1.c: 475: Memory->Data[5]=Product->Data[23];
 11591  13BA  086F               	movf	(_Product),w
 11592  13BB  3E17               	addlw	017h
 11593  13BC  0086               	movwf	fsr1l
 11594  13BD  3001               	movlw 1	; select bank2/3
 11595  13BE  0087               	movwf fsr1h	
 11596                           	
 11597  13BF  0801               	movf	indf1,w
 11598  13C0  00A4               	movwf	(??_Flash_Memory_Modify+0)+0
 11599  13C1  087C               	movf	(_Memory),w
 11600  13C2  3E05               	addlw	05h
 11601  13C3  0086               	movwf	fsr1l
 11602  13C4  3001               	movlw 1	; select bank2/3
 11603  13C5  0087               	movwf fsr1h	
 11604                           	
 11605  13C6  0824               	movf	(??_Flash_Memory_Modify+0)+0,w
 11606  13C7  0081               	movwf	indf1
 11607                           	line	476
 11608                           ;MCU_16f1518_B1.c: 476: if(Memory->LoopSave)
 11609  13C8  087C               	movf	(_Memory),w
 11610  13C9  3E22               	addlw	022h
 11611  13CA  0086               	movwf	fsr1l
 11612  13CB  3001               	movlw 1	; select bank2/3
 11613  13CC  0087               	movwf fsr1h	
 11614                           	
 11615  13CD  1D01               	btfss	indf1,2
 11616  13CE  2BD0               	goto	u10041
 11617  13CF  2BD1               	goto	u10040
 11618  13D0                     u10041:
 11619  13D0  2BEB               	goto	l21496
 11620  13D1                     u10040:
 11621                           	line	478
 11622                           	
 11623  13D1                     l21492:	
 11624                           ;MCU_16f1518_B1.c: 477: {
 11625                           ;MCU_16f1518_B1.c: 478: Memory->LoopSave=0;
 11626  13D1  087C               	movf	(_Memory),w
 11627  13D2  3E22               	addlw	022h
 11628  13D3  0086               	movwf	fsr1l
 11629  13D4  3001               	movlw 1	; select bank2/3
 11630  13D5  0087               	movwf fsr1h	
 11631                           	
 11632  13D6  1101               	bcf	indf1,2
 11633                           	line	479
 11634                           ;MCU_16f1518_B1.c: 479: TMain->FirstOpen=0;
 11635  13D7  087D               	movf	(_TMain),w
 11636  13D8  0086               	movwf	fsr1l
 11637  13D9  3001               	movlw 1	; select bank2/3
 11638  13DA  0087               	movwf fsr1h	
 11639                           	
 11640  13DB  1281               	bcf	indf1,5
 11641                           	line	480
 11642                           ;MCU_16f1518_B1.c: 480: TMain->First=0;
 11643  13DC  087D               	movf	(_TMain),w
 11644  13DD  3E03               	addlw	03h
 11645  13DE  0086               	movwf	fsr1l
 11646  13DF  3001               	movlw 1	; select bank2/3
 11647  13E0  0087               	movwf fsr1h	
 11648                           	
 11649  13E1  1081               	bcf	indf1,1
 11650                           	line	481
 11651                           	
 11652  13E2                     l21494:	
 11653                           ;MCU_16f1518_B1.c: 481: Memory->Data[30]=1;
 11654  13E2  087C               	movf	(_Memory),w
 11655  13E3  3E1E               	addlw	01Eh
 11656  13E4  0086               	movwf	fsr1l
 11657  13E5  3001               	movlw 1	; select bank2/3
 11658  13E6  0087               	movwf fsr1h	
 11659                           	
 11660  13E7  0181               	clrf	indf1
 11661  13E8  1403               	bsf	status,0
 11662  13E9  0D81               	rlf	indf1,f
 11663  13EA  2BEB               	goto	l21496
 11664                           	line	482
 11665                           	
 11666  13EB                     l8423:	
 11667                           	line	483
 11668                           	
 11669  13EB                     l21496:	
 11670                           ;MCU_16f1518_B1.c: 482: }
 11671                           ;MCU_16f1518_B1.c: 483: GIE=0;
 11672  13EB  138B               	bcf	(95/8),(95)&7
 11673                           	line	484
 11674                           	
 11675  13EC                     l21498:	
 11676                           ;MCU_16f1518_B1.c: 484: Flash_Memory_Erasing();
 11677  13EC  31AE  2640  3193   	fcall	_Flash_Memory_Erasing
 11678                           	line	485
 11679                           	
 11680  13EF                     l21500:	
 11681                           ;MCU_16f1518_B1.c: 485: Flash_Memory_Write();
 11682  13EF  31A4  24E2  3193   	fcall	_Flash_Memory_Write
 11683                           	line	486
 11684                           	
 11685  13F2                     l21502:	
 11686                           ;MCU_16f1518_B1.c: 486: GIE=1;
 11687  13F2  178B               	bsf	(95/8),(95)&7
 11688                           	line	487
 11689                           	
 11690  13F3                     l8424:	
 11691  13F3  0008               	return
 11692                           	opt stack 0
 11693                           GLOBAL	__end_of_Flash_Memory_Modify
 11694  13F4                     	__end_of_Flash_Memory_Modify:
 11695 ;; =============== function _Flash_Memory_Modify ends ============
 11696                           
 11697                           	signat	_Flash_Memory_Modify,88
 11698                           	global	_setRF_Enable
 11699                           psect	text4892,local,class=CODE,delta=2
 11700                           global __ptext4892
 11701  22F1                     __ptext4892:
 11702                           
 11703 ;; *************** function _setRF_Enable *****************
 11704 ;; Defined at:
 11705 ;;		line 288 in file "G:\Program\PIC\Source_File\RF_Control_B1.c"
 11706 ;; Parameters:    Size  Location     Type
 11707 ;;  rf              1    wreg     unsigned char 
 11708 ;;  command         1    5[BANK0 ] unsigned char 
 11709 ;; Auto vars:     Size  Location     Type
 11710 ;;  rf              1    6[BANK0 ] unsigned char 
 11711 ;; Return value:  Size  Location     Type
 11712 ;;		None               void
 11713 ;; Registers used:
 11714 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11715 ;; Tracked objects:
 11716 ;;		On entry : 0/0
 11717 ;;		On exit  : 0/0
 11718 ;;		Unchanged: 0/0
 11719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 11720 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 11721 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 11722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11723 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 11724 ;;Total ram usage:        2 bytes
 11725 ;; Hardware stack levels used:    1
 11726 ;; Hardware stack levels required when called:    7
 11727 ;; This function calls:
 11728 ;;		_RfPointSelect
 11729 ;;		_CC2500_WriteCommand
 11730 ;;		_RF_RxDisable
 11731 ;; This function is called by:
 11732 ;;		_MainT
 11733 ;;		_setLoad_ERROR
 11734 ;;		_setOverTemp_ERROR
 11735 ;;		_setPowerFault_ERROR
 11736 ;; This function uses a non-reentrant model
 11737 ;;
 11738                           psect	text4892
 11739                           	file	"G:\Program\PIC\Source_File\RF_Control_B1.c"
 11740                           	line	288
 11741                           	global	__size_of_setRF_Enable
 11742  0027                     	__size_of_setRF_Enable	equ	__end_of_setRF_Enable-_setRF_Enable
 11743                           	
 11744  22F1                     _setRF_Enable:	
 11745                           	opt	stack 5
 11746                           ; Regs used in _setRF_Enable: [wreg+fsr1l-status,0+pclath+cstack]
 11747                           ;setRF_Enable@rf stored from wreg
 11748  22F1  0020               	movlb 0	; select bank0
 11749  22F2  00A6               	movwf	(setRF_Enable@rf)
 11750                           	line	289
 11751                           	
 11752  22F3                     l21462:	
 11753                           ;RF_Control_B1.c: 289: RfPointSelect(rf);
 11754  22F3  0826               	movf	(setRF_Enable@rf),w
 11755  22F4  31AE  26A0  31A2   	fcall	_RfPointSelect
 11756                           	line	290
 11757                           	
 11758  22F7                     l21464:	
 11759                           ;RF_Control_B1.c: 290: if(command)
 11760  22F7  0020               	movlb 0	; select bank0
 11761  22F8  0825               	movf	(setRF_Enable@command),w
 11762  22F9  1D03               	skipz
 11763  22FA  2AFC               	goto	u10010
 11764  22FB  2B01               	goto	l21468
 11765  22FC                     u10010:
 11766                           	line	292
 11767                           	
 11768  22FC                     l21466:	
 11769                           ;RF_Control_B1.c: 291: {
 11770                           ;RF_Control_B1.c: 292: RF->Enable=1;
 11771  22FC  087B               	movf	(_RF),w
 11772  22FD  0086               	movwf	fsr1l
 11773  22FE  0187               	clrf fsr1h	
 11774                           	
 11775  22FF  1401               	bsf	indf1,0
 11776                           	line	293
 11777                           ;RF_Control_B1.c: 293: }
 11778  2300  2B17               	goto	l13208
 11779                           	line	294
 11780                           	
 11781  2301                     l13206:	
 11782                           	line	296
 11783                           	
 11784  2301                     l21468:	
 11785                           ;RF_Control_B1.c: 294: else
 11786                           ;RF_Control_B1.c: 295: {
 11787                           ;RF_Control_B1.c: 296: RF->Enable=0;
 11788  2301  087B               	movf	(_RF),w
 11789  2302  0086               	movwf	fsr1l
 11790  2303  0187               	clrf fsr1h	
 11791                           	
 11792  2304  1001               	bcf	indf1,0
 11793                           	line	297
 11794                           ;RF_Control_B1.c: 297: RF->Learn=0;
 11795  2305  087B               	movf	(_RF),w
 11796  2306  0086               	movwf	fsr1l
 11797  2307  0187               	clrf fsr1h	
 11798                           	
 11799  2308  1301               	bcf	indf1,6
 11800                           	line	298
 11801                           	
 11802  2309                     l21470:	
 11803                           ;RF_Control_B1.c: 298: Transceive_GO=0;
 11804  2309  1270               	bcf	(_Transceive_GO/8),(_Transceive_GO)&7
 11805                           	line	299
 11806                           	
 11807  230A                     l21472:	
 11808                           ;RF_Control_B1.c: 299: CC2500_WriteCommand(0x36);
 11809  230A  3036               	movlw	(036h)
 11810  230B  31A1  2137  31A2   	fcall	_CC2500_WriteCommand
 11811                           	line	300
 11812                           	
 11813  230E                     l21474:	
 11814                           ;RF_Control_B1.c: 300: CC2500_WriteCommand(0x3B);
 11815  230E  303B               	movlw	(03Bh)
 11816  230F  31A1  2137  31A2   	fcall	_CC2500_WriteCommand
 11817                           	line	301
 11818                           	
 11819  2312                     l21476:	
 11820                           ;RF_Control_B1.c: 301: RF_RxDisable(1);
 11821  2312  3001               	movlw	(01h)
 11822  2313  31A4  24AE  31A2   	fcall	_RF_RxDisable
 11823  2316  2B17               	goto	l13208
 11824                           	line	302
 11825                           	
 11826  2317                     l13207:	
 11827                           	line	303
 11828                           	
 11829  2317                     l13208:	
 11830  2317  0008               	return
 11831                           	opt stack 0
 11832                           GLOBAL	__end_of_setRF_Enable
 11833  2318                     	__end_of_setRF_Enable:
 11834 ;; =============== function _setRF_Enable ends ============
 11835                           
 11836                           	signat	_setRF_Enable,8312
 11837                           	global	_Switch_Initialization
 11838                           psect	text4893,local,class=CODE,delta=2
 11839                           global __ptext4893
 11840  20D4                     __ptext4893:
 11841                           
 11842 ;; *************** function _Switch_Initialization *****************
 11843 ;; Defined at:
 11844 ;;		line 39 in file "G:\Program\PIC\Source_File\Switch_B1.c"
 11845 ;; Parameters:    Size  Location     Type
 11846 ;;		None
 11847 ;; Auto vars:     Size  Location     Type
 11848 ;;		None
 11849 ;; Return value:  Size  Location     Type
 11850 ;;		None               void
 11851 ;; Registers used:
 11852 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11853 ;; Tracked objects:
 11854 ;;		On entry : 0/0
 11855 ;;		On exit  : 0/0
 11856 ;;		Unchanged: 0/0
 11857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 11858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11861 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11862 ;;Total ram usage:        0 bytes
 11863 ;; Hardware stack levels used:    1
 11864 ;; Hardware stack levels required when called:    7
 11865 ;; This function calls:
 11866 ;;		_TouchPower
 11867 ;;		_setSw_Initialization
 11868 ;;		_setLED
 11869 ;; This function is called by:
 11870 ;;		_main
 11871 ;; This function uses a non-reentrant model
 11872 ;;
 11873                           psect	text4893
 11874                           	file	"G:\Program\PIC\Source_File\Switch_B1.c"
 11875                           	line	39
 11876                           	global	__size_of_Switch_Initialization
 11877  0012                     	__size_of_Switch_Initialization	equ	__end_of_Switch_Initialization-_Switch_Initializati
                                 on
 11878                           	
 11879  20D4                     _Switch_Initialization:	
 11880                           	opt	stack 8
 11881                           ; Regs used in _Switch_Initialization: [wreg+fsr1l-status,0+pclath+cstack]
 11882                           	line	40
 11883                           	
 11884  20D4                     l21454:	
 11885                           ;Switch_B1.c: 40: TouchPower();
 11886  20D4  31AD  25AF  31A0   	fcall	_TouchPower
 11887                           	line	42
 11888                           	
 11889  20D7                     l21456:	
 11890                           ;Switch_B1.c: 42: WPUB1=0;
 11891  20D7  0024               	movlb 4	; select bank4
 11892  20D8  108D               	bcf	(4201/8)^0200h,(4201)&7
 11893                           	line	46
 11894                           	
 11895  20D9                     l21458:	
 11896                           ;Switch_B1.c: 46: setSw_Initialization(1);
 11897  20D9  3001               	movlw	(01h)
 11898  20DA  31AD  25D4  31A0   	fcall	_setSw_Initialization
 11899                           	line	48
 11900                           	
 11901  20DD                     l21460:	
 11902                           ;Switch_B1.c: 48: setLED(2,1);
 11903  20DD  0020               	movlb 0	; select bank0
 11904  20DE  01A2               	clrf	(?_setLED)
 11905  20DF  1403               	bsf	status,0
 11906  20E0  0DA2               	rlf	(?_setLED),f
 11907  20E1  3002               	movlw	(02h)
 11908  20E2  3191  21A4  31A0   	fcall	_setLED
 11909                           	line	57
 11910                           	
 11911  20E5                     l14390:	
 11912  20E5  0008               	return
 11913                           	opt stack 0
 11914                           GLOBAL	__end_of_Switch_Initialization
 11915  20E6                     	__end_of_Switch_Initialization:
 11916 ;; =============== function _Switch_Initialization ends ============
 11917                           
 11918                           	signat	_Switch_Initialization,88
 11919                           	global	_Flash_Memory_Initialization
 11920                           psect	text4894,local,class=CODE,delta=2
 11921                           global __ptext4894
 11922  1696                     __ptext4894:
 11923                           
 11924 ;; *************** function _Flash_Memory_Initialization *****************
 11925 ;; Defined at:
 11926 ;;		line 358 in file "G:\Program\PIC\Source_File\MCU_16f1518_B1.c"
 11927 ;; Parameters:    Size  Location     Type
 11928 ;;		None
 11929 ;; Auto vars:     Size  Location     Type
 11930 ;;  i               1   46[BANK0 ] unsigned char 
 11931 ;; Return value:  Size  Location     Type
 11932 ;;		None               void
 11933 ;; Registers used:
 11934 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11935 ;; Tracked objects:
 11936 ;;		On entry : 0/0
 11937 ;;		On exit  : 0/0
 11938 ;;		Unchanged: 0/0
 11939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 11940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11941 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 11942 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 11943 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 11944 ;;Total ram usage:        2 bytes
 11945 ;; Hardware stack levels used:    1
 11946 ;; Hardware stack levels required when called:    7
 11947 ;; This function calls:
 11948 ;;		_Flash_Memory_Read
 11949 ;;		_setPercentValue
 11950 ;;		_Flash_Memory_Write
 11951 ;; This function is called by:
 11952 ;;		_main
 11953 ;; This function uses a non-reentrant model
 11954 ;;
 11955                           psect	text4894
 11956                           	file	"G:\Program\PIC\Source_File\MCU_16f1518_B1.c"
 11957                           	line	358
 11958                           	global	__size_of_Flash_Memory_Initialization
 11959  00B2                     	__size_of_Flash_Memory_Initialization	equ	__end_of_Flash_Memory_Initialization-_Flash_M
                                 emory_Initialization
 11960                           	
 11961  1696                     _Flash_Memory_Initialization:	
 11962                           	opt	stack 8
 11963                           ; Regs used in _Flash_Memory_Initialization: [wreg+fsr1l-status,0+pclath+cstack]
 11964                           	line	360
 11965                           	
 11966  1696                     l21426:	
 11967                           ;MCU_16f1518_B1.c: 359: char i;
 11968                           ;MCU_16f1518_B1.c: 360: if(Flash_Memory_Read(31) == 0xaa)
 11969  1696  301F               	movlw	(01Fh)
 11970  1697  31A1  2193  3196   	fcall	_Flash_Memory_Read
 11971  169A  3AAA               	xorlw	0AAh&0ffh
 11972  169B  1D03               	skipz
 11973  169C  2E9E               	goto	u9991
 11974  169D  2E9F               	goto	u9990
 11975  169E                     u9991:
 11976  169E  2F03               	goto	l21434
 11977  169F                     u9990:
 11978                           	line	362
 11979                           	
 11980  169F                     l21428:	
 11981                           ;MCU_16f1518_B1.c: 361: {
 11982                           ;MCU_16f1518_B1.c: 362: Product->Data[12]=Flash_Memory_Read(0);
 11983  169F  3000               	movlw	(0)
 11984  16A0  31A1  2193  3196   	fcall	_Flash_Memory_Read
 11985  16A3  0020               	movlb 0	; select bank0
 11986  16A4  00CD               	movwf	(??_Flash_Memory_Initialization+0)+0
 11987  16A5  086F               	movf	(_Product),w
 11988  16A6  3E0C               	addlw	0Ch
 11989  16A7  0086               	movwf	fsr1l
 11990  16A8  3001               	movlw 1	; select bank2/3
 11991  16A9  0087               	movwf fsr1h	
 11992                           	
 11993  16AA  084D               	movf	(??_Flash_Memory_Initialization+0)+0,w
 11994  16AB  0081               	movwf	indf1
 11995                           	line	363
 11996                           ;MCU_16f1518_B1.c: 363: Product->Data[13]=Flash_Memory_Read(1);
 11997  16AC  3001               	movlw	(01h)
 11998  16AD  31A1  2193  3196   	fcall	_Flash_Memory_Read
 11999  16B0  0020               	movlb 0	; select bank0
 12000  16B1  00CD               	movwf	(??_Flash_Memory_Initialization+0)+0
 12001  16B2  086F               	movf	(_Product),w
 12002  16B3  3E0D               	addlw	0Dh
 12003  16B4  0086               	movwf	fsr1l
 12004  16B5  3001               	movlw 1	; select bank2/3
 12005  16B6  0087               	movwf fsr1h	
 12006                           	
 12007  16B7  084D               	movf	(??_Flash_Memory_Initialization+0)+0,w
 12008  16B8  0081               	movwf	indf1
 12009                           	line	364
 12010                           ;MCU_16f1518_B1.c: 364: Product->Data[14]=Flash_Memory_Read(2);
 12011  16B9  3002               	movlw	(02h)
 12012  16BA  31A1  2193  3196   	fcall	_Flash_Memory_Read
 12013  16BD  0020               	movlb 0	; select bank0
 12014  16BE  00CD               	movwf	(??_Flash_Memory_Initialization+0)+0
 12015  16BF  086F               	movf	(_Product),w
 12016  16C0  3E0E               	addlw	0Eh
 12017  16C1  0086               	movwf	fsr1l
 12018  16C2  3001               	movlw 1	; select bank2/3
 12019  16C3  0087               	movwf fsr1h	
 12020                           	
 12021  16C4  084D               	movf	(??_Flash_Memory_Initialization+0)+0,w
 12022  16C5  0081               	movwf	indf1
 12023                           	line	365
 12024                           ;MCU_16f1518_B1.c: 365: Product->Data[21]=Flash_Memory_Read(3);
 12025  16C6  3003               	movlw	(03h)
 12026  16C7  31A1  2193  3196   	fcall	_Flash_Memory_Read
 12027  16CA  0020               	movlb 0	; select bank0
 12028  16CB  00CD               	movwf	(??_Flash_Memory_Initialization+0)+0
 12029  16CC  086F               	movf	(_Product),w
 12030  16CD  3E15               	addlw	015h
 12031  16CE  0086               	movwf	fsr1l
 12032  16CF  3001               	movlw 1	; select bank2/3
 12033  16D0  0087               	movwf fsr1h	
 12034                           	
 12035  16D1  084D               	movf	(??_Flash_Memory_Initialization+0)+0,w
 12036  16D2  0081               	movwf	indf1
 12037                           	line	366
 12038                           ;MCU_16f1518_B1.c: 366: Product->Data[22]=Flash_Memory_Read(4);
 12039  16D3  3004               	movlw	(04h)
 12040  16D4  31A1  2193  3196   	fcall	_Flash_Memory_Read
 12041  16D7  0020               	movlb 0	; select bank0
 12042  16D8  00CD               	movwf	(??_Flash_Memory_Initialization+0)+0
 12043  16D9  086F               	movf	(_Product),w
 12044  16DA  3E16               	addlw	016h
 12045  16DB  0086               	movwf	fsr1l
 12046  16DC  3001               	movlw 1	; select bank2/3
 12047  16DD  0087               	movwf fsr1h	
 12048                           	
 12049  16DE  084D               	movf	(??_Flash_Memory_Initialization+0)+0,w
 12050  16DF  0081               	movwf	indf1
 12051                           	line	367
 12052                           ;MCU_16f1518_B1.c: 367: Product->Data[23]=Flash_Memory_Read(5);
 12053  16E0  3005               	movlw	(05h)
 12054  16E1  31A1  2193  3196   	fcall	_Flash_Memory_Read
 12055  16E4  0020               	movlb 0	; select bank0
 12056  16E5  00CD               	movwf	(??_Flash_Memory_Initialization+0)+0
 12057  16E6  086F               	movf	(_Product),w
 12058  16E7  3E17               	addlw	017h
 12059  16E8  0086               	movwf	fsr1l
 12060  16E9  3001               	movlw 1	; select bank2/3
 12061  16EA  0087               	movwf fsr1h	
 12062                           	
 12063  16EB  084D               	movf	(??_Flash_Memory_Initialization+0)+0,w
 12064  16EC  0081               	movwf	indf1
 12065                           	line	368
 12066                           	
 12067  16ED                     l21430:	
 12068                           ;MCU_16f1518_B1.c: 368: if(Flash_Memory_Read(30) == 1)
 12069  16ED  301E               	movlw	(01Eh)
 12070  16EE  31A1  2193  3196   	fcall	_Flash_Memory_Read
 12071  16F1  3A01               	xorlw	01h&0ffh
 12072  16F2  1D03               	skipz
 12073  16F3  2EF5               	goto	u10001
 12074  16F4  2EF6               	goto	u10000
 12075  16F5                     u10001:
 12076  16F5  2F47               	goto	l8397
 12077  16F6                     u10000:
 12078                           	line	370
 12079                           	
 12080  16F6                     l21432:	
 12081                           ;MCU_16f1518_B1.c: 369: {
 12082                           ;MCU_16f1518_B1.c: 370: TMain->FirstOpen=0;
 12083  16F6  087D               	movf	(_TMain),w
 12084  16F7  0086               	movwf	fsr1l
 12085  16F8  3001               	movlw 1	; select bank2/3
 12086  16F9  0087               	movwf fsr1h	
 12087                           	
 12088  16FA  1281               	bcf	indf1,5
 12089                           	line	371
 12090                           ;MCU_16f1518_B1.c: 371: TMain->First=0;
 12091  16FB  087D               	movf	(_TMain),w
 12092  16FC  3E03               	addlw	03h
 12093  16FD  0086               	movwf	fsr1l
 12094  16FE  3001               	movlw 1	; select bank2/3
 12095  16FF  0087               	movwf fsr1h	
 12096                           	
 12097  1700  1081               	bcf	indf1,1
 12098  1701  2F47               	goto	l8397
 12099                           	line	372
 12100                           	
 12101  1702                     l8395:	
 12102                           	line	373
 12103                           ;MCU_16f1518_B1.c: 372: }
 12104                           ;MCU_16f1518_B1.c: 373: }
 12105  1702  2F47               	goto	l8397
 12106                           	line	374
 12107                           	
 12108  1703                     l8394:	
 12109                           	line	376
 12110                           	
 12111  1703                     l21434:	
 12112                           ;MCU_16f1518_B1.c: 374: else
 12113                           ;MCU_16f1518_B1.c: 375: {
 12114                           ;MCU_16f1518_B1.c: 376: i=setPercentValue(((char)((100-75)*1.5)));
 12115  1703  3025               	movlw	(025h)
 12116  1704  31A3  2393  3196   	fcall	_setPercentValue
 12117  1707  0020               	movlb 0	; select bank0
 12118  1708  00CD               	movwf	(??_Flash_Memory_Initialization+0)+0
 12119  1709  084D               	movf	(??_Flash_Memory_Initialization+0)+0,w
 12120  170A  00CE               	movwf	(Flash_Memory_Initialization@i)
 12121                           	line	377
 12122                           	
 12123  170B                     l21436:	
 12124                           ;MCU_16f1518_B1.c: 377: Memory->Data[3]=i;
 12125  170B  084E               	movf	(Flash_Memory_Initialization@i),w
 12126  170C  00CD               	movwf	(??_Flash_Memory_Initialization+0)+0
 12127  170D  087C               	movf	(_Memory),w
 12128  170E  3E03               	addlw	03h
 12129  170F  0086               	movwf	fsr1l
 12130  1710  3001               	movlw 1	; select bank2/3
 12131  1711  0087               	movwf fsr1h	
 12132                           	
 12133  1712  084D               	movf	(??_Flash_Memory_Initialization+0)+0,w
 12134  1713  0081               	movwf	indf1
 12135                           	line	378
 12136                           	
 12137  1714                     l21438:	
 12138                           ;MCU_16f1518_B1.c: 378: Memory->Data[4]=i;
 12139  1714  084E               	movf	(Flash_Memory_Initialization@i),w
 12140  1715  00CD               	movwf	(??_Flash_Memory_Initialization+0)+0
 12141  1716  087C               	movf	(_Memory),w
 12142  1717  3E04               	addlw	04h
 12143  1718  0086               	movwf	fsr1l
 12144  1719  3001               	movlw 1	; select bank2/3
 12145  171A  0087               	movwf fsr1h	
 12146                           	
 12147  171B  084D               	movf	(??_Flash_Memory_Initialization+0)+0,w
 12148  171C  0081               	movwf	indf1
 12149                           	line	379
 12150                           	
 12151  171D                     l21440:	
 12152                           ;MCU_16f1518_B1.c: 379: Memory->Data[5]=i;
 12153  171D  084E               	movf	(Flash_Memory_Initialization@i),w
 12154  171E  00CD               	movwf	(??_Flash_Memory_Initialization+0)+0
 12155  171F  087C               	movf	(_Memory),w
 12156  1720  3E05               	addlw	05h
 12157  1721  0086               	movwf	fsr1l
 12158  1722  3001               	movlw 1	; select bank2/3
 12159  1723  0087               	movwf fsr1h	
 12160                           	
 12161  1724  084D               	movf	(??_Flash_Memory_Initialization+0)+0,w
 12162  1725  0081               	movwf	indf1
 12163                           	line	380
 12164                           	
 12165  1726                     l21442:	
 12166                           ;MCU_16f1518_B1.c: 380: Product->Data[21]=i;
 12167  1726  084E               	movf	(Flash_Memory_Initialization@i),w
 12168  1727  00CD               	movwf	(??_Flash_Memory_Initialization+0)+0
 12169  1728  086F               	movf	(_Product),w
 12170  1729  3E15               	addlw	015h
 12171  172A  0086               	movwf	fsr1l
 12172  172B  3001               	movlw 1	; select bank2/3
 12173  172C  0087               	movwf fsr1h	
 12174                           	
 12175  172D  084D               	movf	(??_Flash_Memory_Initialization+0)+0,w
 12176  172E  0081               	movwf	indf1
 12177                           	line	381
 12178                           	
 12179  172F                     l21444:	
 12180                           ;MCU_16f1518_B1.c: 381: Product->Data[22]=i;
 12181  172F  084E               	movf	(Flash_Memory_Initialization@i),w
 12182  1730  00CD               	movwf	(??_Flash_Memory_Initialization+0)+0
 12183  1731  086F               	movf	(_Product),w
 12184  1732  3E16               	addlw	016h
 12185  1733  0086               	movwf	fsr1l
 12186  1734  3001               	movlw 1	; select bank2/3
 12187  1735  0087               	movwf fsr1h	
 12188                           	
 12189  1736  084D               	movf	(??_Flash_Memory_Initialization+0)+0,w
 12190  1737  0081               	movwf	indf1
 12191                           	line	382
 12192                           	
 12193  1738                     l21446:	
 12194                           ;MCU_16f1518_B1.c: 382: Product->Data[23]=i;
 12195  1738  084E               	movf	(Flash_Memory_Initialization@i),w
 12196  1739  00CD               	movwf	(??_Flash_Memory_Initialization+0)+0
 12197  173A  086F               	movf	(_Product),w
 12198  173B  3E17               	addlw	017h
 12199  173C  0086               	movwf	fsr1l
 12200  173D  3001               	movlw 1	; select bank2/3
 12201  173E  0087               	movwf fsr1h	
 12202                           	
 12203  173F  084D               	movf	(??_Flash_Memory_Initialization+0)+0,w
 12204  1740  0081               	movwf	indf1
 12205                           	line	383
 12206                           	
 12207  1741                     l21448:	
 12208                           ;MCU_16f1518_B1.c: 383: GIE=0;
 12209  1741  138B               	bcf	(95/8),(95)&7
 12210                           	line	384
 12211                           	
 12212  1742                     l21450:	
 12213                           ;MCU_16f1518_B1.c: 384: Flash_Memory_Write();
 12214  1742  31A4  24E2  3196   	fcall	_Flash_Memory_Write
 12215                           	line	385
 12216                           	
 12217  1745                     l21452:	
 12218                           ;MCU_16f1518_B1.c: 385: GIE=1;
 12219  1745  178B               	bsf	(95/8),(95)&7
 12220  1746  2F47               	goto	l8397
 12221                           	line	386
 12222                           	
 12223  1747                     l8396:	
 12224                           	line	387
 12225                           	
 12226  1747                     l8397:	
 12227  1747  0008               	return
 12228                           	opt stack 0
 12229                           GLOBAL	__end_of_Flash_Memory_Initialization
 12230  1748                     	__end_of_Flash_Memory_Initialization:
 12231 ;; =============== function _Flash_Memory_Initialization ends ============
 12232                           
 12233                           	signat	_Flash_Memory_Initialization,88
 12234                           	global	_LED_Initialization
 12235                           psect	text4895,local,class=CODE,delta=2
 12236                           global __ptext4895
 12237  2E4D                     __ptext4895:
 12238                           
 12239 ;; *************** function _LED_Initialization *****************
 12240 ;; Defined at:
 12241 ;;		line 36 in file "G:\Program\PIC\Source_File\LED_B1.c"
 12242 ;; Parameters:    Size  Location     Type
 12243 ;;		None
 12244 ;; Auto vars:     Size  Location     Type
 12245 ;;		None
 12246 ;; Return value:  Size  Location     Type
 12247 ;;		None               void
 12248 ;; Registers used:
 12249 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12250 ;; Tracked objects:
 12251 ;;		On entry : 0/0
 12252 ;;		On exit  : 0/0
 12253 ;;		Unchanged: 0/0
 12254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 12255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 12256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 12257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 12258 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 12259 ;;Total ram usage:        0 bytes
 12260 ;; Hardware stack levels used:    1
 12261 ;; Hardware stack levels required when called:    7
 12262 ;; This function calls:
 12263 ;;		_setLED_Initialization
 12264 ;; This function is called by:
 12265 ;;		_main
 12266 ;; This function uses a non-reentrant model
 12267 ;;
 12268                           psect	text4895
 12269                           	file	"G:\Program\PIC\Source_File\LED_B1.c"
 12270                           	line	36
 12271                           	global	__size_of_LED_Initialization
 12272  000D                     	__size_of_LED_Initialization	equ	__end_of_LED_Initialization-_LED_Initialization
 12273                           	
 12274  2E4D                     _LED_Initialization:	
 12275                           	opt	stack 8
 12276                           ; Regs used in _LED_Initialization: [wreg+fsr1l-status,0+pclath+cstack]
 12277                           	line	38
 12278                           	
 12279  2E4D                     l21424:	
 12280                           ;LED_B1.c: 38: setLED_Initialization(1);
 12281  2E4D  3001               	movlw	(01h)
 12282  2E4E  31A0  20C2  31AE   	fcall	_setLED_Initialization
 12283                           	line	41
 12284                           ;LED_B1.c: 41: setLED_Initialization(2);
 12285  2E51  3002               	movlw	(02h)
 12286  2E52  31A0  20C2  31AE   	fcall	_setLED_Initialization
 12287                           	line	47
 12288                           ;LED_B1.c: 47: setLED_Initialization(99);
 12289  2E55  3063               	movlw	(063h)
 12290  2E56  31A0  20C2  31AE   	fcall	_setLED_Initialization
 12291                           	line	49
 12292                           	
 12293  2E59                     l5937:	
 12294  2E59  0008               	return
 12295                           	opt stack 0
 12296                           GLOBAL	__end_of_LED_Initialization
 12297  2E5A                     	__end_of_LED_Initialization:
 12298 ;; =============== function _LED_Initialization ends ============
 12299                           
 12300                           	signat	_LED_Initialization,88
 12301                           	global	_setDimmerLights_AdjRF
 12302                           psect	text4896,local,class=CODE,delta=2
 12303                           global __ptext4896
 12304  220E                     __ptext4896:
 12305                           
 12306 ;; *************** function _setDimmerLights_AdjRF *****************
 12307 ;; Defined at:
 12308 ;;		line 433 in file "G:\Program\PIC\Source_File\Dimmer_B1.c"
 12309 ;; Parameters:    Size  Location     Type
 12310 ;;  lights          1    wreg     unsigned char 
 12311 ;; Auto vars:     Size  Location     Type
 12312 ;;  lights          1   61[BANK0 ] unsigned char 
 12313 ;; Return value:  Size  Location     Type
 12314 ;;		None               void
 12315 ;; Registers used:
 12316 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12317 ;; Tracked objects:
 12318 ;;		On entry : 0/0
 12319 ;;		On exit  : 0/0
 12320 ;;		Unchanged: 0/0
 12321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 12322 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 12323 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 12324 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 12325 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 12326 ;;Total ram usage:        2 bytes
 12327 ;; Hardware stack levels used:    1
 12328 ;; Hardware stack levels required when called:    7
 12329 ;; This function calls:
 12330 ;;		_DimmerLightsPointSelect
 12331 ;;		_getPercentValue
 12332 ;; This function is called by:
 12333 ;;		_setRF_DimmerValue
 12334 ;; This function uses a non-reentrant model
 12335 ;;
 12336                           psect	text4896
 12337                           	file	"G:\Program\PIC\Source_File\Dimmer_B1.c"
 12338                           	line	433
 12339                           	global	__size_of_setDimmerLights_AdjRF
 12340  0024                     	__size_of_setDimmerLights_AdjRF	equ	__end_of_setDimmerLights_AdjRF-_setDimmerLights_Adj
                                 RF
 12341                           	
 12342  220E                     _setDimmerLights_AdjRF:	
 12343                           	opt	stack 2
 12344                           ; Regs used in _setDimmerLights_AdjRF: [wreg+fsr1l-status,0+pclath+cstack]
 12345                           ;setDimmerLights_AdjRF@lights stored from wreg
 12346  220E  0020               	movlb 0	; select bank0
 12347  220F  00DD               	movwf	(setDimmerLights_AdjRF@lights)
 12348                           	line	434
 12349                           	
 12350  2210                     l19904:	
 12351                           ;Dimmer_B1.c: 434: DimmerLightsPointSelect(lights);
 12352  2210  085D               	movf	(setDimmerLights_AdjRF@lights),w
 12353  2211  31AE  2684  31A2   	fcall	_DimmerLightsPointSelect
 12354                           	line	435
 12355                           	
 12356  2214                     l19906:	
 12357                           ;Dimmer_B1.c: 435: DimmerLights->AdjRF=1;
 12358  2214  0020               	movlb 0	; select bank0
 12359  2215  086A               	movf	(_DimmerLights),w
 12360  2216  0086               	movwf	fsr1l
 12361  2217  3001               	movlw 1	; select bank2/3
 12362  2218  0087               	movwf fsr1h	
 12363                           	
 12364  2219  1501               	bsf	indf1,2
 12365                           	line	436
 12366                           	
 12367  221A                     l19908:	
 12368                           ;Dimmer_B1.c: 436: DimmerLights->Signal=1;
 12369  221A  086A               	movf	(_DimmerLights),w
 12370  221B  0086               	movwf	fsr1l
 12371  221C  3001               	movlw 1	; select bank2/3
 12372  221D  0087               	movwf fsr1h	
 12373                           	
 12374  221E  1481               	bsf	indf1,1
 12375                           	line	437
 12376                           	
 12377  221F                     l19910:	
 12378                           ;Dimmer_B1.c: 437: DimmerLights->MaxmumValue=getPercentValue(Product->Data[9]);
 12379  221F  086F               	movf	(_Product),w
 12380  2220  3E09               	addlw	09h
 12381  2221  0086               	movwf	fsr1l
 12382  2222  3001               	movlw 1	; select bank2/3
 12383  2223  0087               	movwf fsr1h	
 12384                           	
 12385  2224  0801               	movf	indf1,w
 12386  2225  31A6  26AD  31A2   	fcall	_getPercentValue
 12387  2228  0020               	movlb 0	; select bank0
 12388  2229  00DC               	movwf	(??_setDimmerLights_AdjRF+0)+0
 12389  222A  086A               	movf	(_DimmerLights),w
 12390  222B  3E05               	addlw	05h
 12391  222C  0086               	movwf	fsr1l
 12392  222D  3001               	movlw 1	; select bank2/3
 12393  222E  0087               	movwf fsr1h	
 12394                           	
 12395  222F  085C               	movf	(??_setDimmerLights_AdjRF+0)+0,w
 12396  2230  0081               	movwf	indf1
 12397                           	line	438
 12398                           	
 12399  2231                     l4763:	
 12400  2231  0008               	return
 12401                           	opt stack 0
 12402                           GLOBAL	__end_of_setDimmerLights_AdjRF
 12403  2232                     	__end_of_setDimmerLights_AdjRF:
 12404 ;; =============== function _setDimmerLights_AdjRF ends ============
 12405                           
 12406                           	signat	_setDimmerLights_AdjRF,4216
 12407                           	global	_DimmerLights_ERROR
 12408                           psect	text4897,local,class=CODE,delta=2
 12409                           global __ptext4897
 12410  1F02                     __ptext4897:
 12411                           
 12412 ;; *************** function _DimmerLights_ERROR *****************
 12413 ;; Defined at:
 12414 ;;		line 278 in file "G:\Program\PIC\Source_File\Dimmer_B1.c"
 12415 ;; Parameters:    Size  Location     Type
 12416 ;;		None
 12417 ;; Auto vars:     Size  Location     Type
 12418 ;;		None
 12419 ;; Return value:  Size  Location     Type
 12420 ;;		None               void
 12421 ;; Registers used:
 12422 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12423 ;; Tracked objects:
 12424 ;;		On entry : 0/0
 12425 ;;		On exit  : 0/0
 12426 ;;		Unchanged: 0/0
 12427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 12428 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 12429 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 12430 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 12431 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 12432 ;;Total ram usage:        1 bytes
 12433 ;; Hardware stack levels used:    1
 12434 ;; Hardware stack levels required when called:    7
 12435 ;; This function calls:
 12436 ;;		_getDimmer_TempERROR
 12437 ;;		_getDimmerLights_StatusFlag
 12438 ;;		_setBuz
 12439 ;;		_setDimmerLights_ERROR
 12440 ;;		_getDimmer_LoadERROR
 12441 ;;		_getDimmer_PFERROR
 12442 ;;		_setDimmerLights_TriggerERROR
 12443 ;; This function is called by:
 12444 ;;		_setLoad_ERROR
 12445 ;;		_setOverTemp_ERROR
 12446 ;;		_setPowerFault_ERROR
 12447 ;; This function uses a non-reentrant model
 12448 ;;
 12449                           psect	text4897
 12450                           	file	"G:\Program\PIC\Source_File\Dimmer_B1.c"
 12451                           	line	278
 12452                           	global	__size_of_DimmerLights_ERROR
 12453  007E                     	__size_of_DimmerLights_ERROR	equ	__end_of_DimmerLights_ERROR-_DimmerLights_ERROR
 12454                           	
 12455  1F02                     _DimmerLights_ERROR:	
 12456                           	opt	stack 5
 12457                           ; Regs used in _DimmerLights_ERROR: [wreg+fsr1l-status,0+pclath+cstack]
 12458                           	line	279
 12459                           	
 12460  1F02                     l21406:	
 12461                           ;Dimmer_B1.c: 279: if(getDimmer_TempERROR(1))
 12462  1F02  3001               	movlw	(01h)
 12463  1F03  31AE  26BC  319F   	fcall	_getDimmer_TempERROR
 12464  1F06  3A00               	xorlw	0&0ffh
 12465  1F07  1903               	skipnz
 12466  1F08  2F0A               	goto	u9941
 12467  1F09  2F0B               	goto	u9940
 12468  1F0A                     u9941:
 12469  1F0A  2F25               	goto	l21412
 12470  1F0B                     u9940:
 12471                           	line	281
 12472                           	
 12473  1F0B                     l21408:	
 12474                           ;Dimmer_B1.c: 280: {
 12475                           ;Dimmer_B1.c: 281: if(getDimmerLights_StatusFlag())
 12476  1F0B  31A2  22A3  319F   	fcall	_getDimmerLights_StatusFlag
 12477  1F0E  3A00               	xorlw	0&0ffh
 12478  1F0F  1903               	skipnz
 12479  1F10  2F12               	goto	u9951
 12480  1F11  2F13               	goto	u9950
 12481  1F12                     u9951:
 12482  1F12  2F20               	goto	l4732
 12483  1F13                     u9950:
 12484                           	line	283
 12485                           	
 12486  1F13                     l21410:	
 12487                           ;Dimmer_B1.c: 282: {
 12488                           ;Dimmer_B1.c: 283: setBuz(1,10,300);
 12489  1F13  300A               	movlw	(0Ah)
 12490  1F14  0020               	movlb 0	; select bank0
 12491  1F15  00AE               	movwf	(??_DimmerLights_ERROR+0)+0
 12492  1F16  082E               	movf	(??_DimmerLights_ERROR+0)+0,w
 12493  1F17  00A9               	movwf	(?_setBuz)
 12494  1F18  302C               	movlw	low(012Ch)
 12495  1F19  00AA               	movwf	0+(?_setBuz)+01h
 12496  1F1A  3001               	movlw	high(012Ch)
 12497  1F1B  00AB               	movwf	(0+(?_setBuz)+01h)+1
 12498  1F1C  3001               	movlw	(01h)
 12499  1F1D  3194  2499  319F   	fcall	_setBuz
 12500                           	line	284
 12501                           	
 12502  1F20                     l4732:	
 12503                           	line	287
 12504                           ;Dimmer_B1.c: 284: }
 12505                           ;Dimmer_B1.c: 287: setDimmerLights_ERROR(1);
 12506  1F20  3001               	movlw	(01h)
 12507  1F21  319A  2269  319F   	fcall	_setDimmerLights_ERROR
 12508                           	line	295
 12509                           ;Dimmer_B1.c: 295: }
 12510  1F24  2F54               	goto	l4733
 12511                           	line	296
 12512                           	
 12513  1F25                     l4731:	
 12514                           	
 12515  1F25                     l21412:	
 12516                           ;Dimmer_B1.c: 296: else if(getDimmer_LoadERROR(1))
 12517  1F25  3001               	movlw	(01h)
 12518  1F26  31AE  26CA  319F   	fcall	_getDimmer_LoadERROR
 12519  1F29  3A00               	xorlw	0&0ffh
 12520  1F2A  1903               	skipnz
 12521  1F2B  2F2D               	goto	u9961
 12522  1F2C  2F2E               	goto	u9960
 12523  1F2D                     u9961:
 12524  1F2D  2F45               	goto	l21416
 12525  1F2E                     u9960:
 12526                           	line	298
 12527                           	
 12528  1F2E                     l21414:	
 12529                           ;Dimmer_B1.c: 297: {
 12530                           ;Dimmer_B1.c: 298: setBuz(1,5,300);
 12531  1F2E  3005               	movlw	(05h)
 12532  1F2F  0020               	movlb 0	; select bank0
 12533  1F30  00AE               	movwf	(??_DimmerLights_ERROR+0)+0
 12534  1F31  082E               	movf	(??_DimmerLights_ERROR+0)+0,w
 12535  1F32  00A9               	movwf	(?_setBuz)
 12536  1F33  302C               	movlw	low(012Ch)
 12537  1F34  00AA               	movwf	0+(?_setBuz)+01h
 12538  1F35  3001               	movlw	high(012Ch)
 12539  1F36  00AB               	movwf	(0+(?_setBuz)+01h)+1
 12540  1F37  3001               	movlw	(01h)
 12541  1F38  3194  2499  319F   	fcall	_setBuz
 12542                           	line	299
 12543                           ;Dimmer_B1.c: 299: setDimmerLights_ERROR(Dimmer->Load);
 12544  1F3B  0021               	movlb 1	; select bank1
 12545  1F3C  0838               	movf	(_Dimmer)^080h,w
 12546  1F3D  3E01               	addlw	01h
 12547  1F3E  0086               	movwf	fsr1l
 12548  1F3F  0187               	clrf fsr1h	
 12549                           	
 12550  1F40  0801               	movf	indf1,w
 12551  1F41  319A  2269  319F   	fcall	_setDimmerLights_ERROR
 12552                           	line	300
 12553                           ;Dimmer_B1.c: 300: }
 12554  1F44  2F54               	goto	l4733
 12555                           	line	301
 12556                           	
 12557  1F45                     l4734:	
 12558                           	
 12559  1F45                     l21416:	
 12560                           ;Dimmer_B1.c: 301: else if(getDimmer_PFERROR(1))
 12561  1F45  3001               	movlw	(01h)
 12562  1F46  31AF  2705  319F   	fcall	_getDimmer_PFERROR
 12563  1F49  3A00               	xorlw	0&0ffh
 12564  1F4A  1903               	skipnz
 12565  1F4B  2F4D               	goto	u9971
 12566  1F4C  2F4E               	goto	u9970
 12567  1F4D                     u9971:
 12568  1F4D  2F54               	goto	l4733
 12569  1F4E                     u9970:
 12570                           	line	304
 12571                           	
 12572  1F4E                     l21418:	
 12573                           ;Dimmer_B1.c: 302: {
 12574                           ;Dimmer_B1.c: 304: setDimmerLights_ERROR(1);
 12575  1F4E  3001               	movlw	(01h)
 12576  1F4F  319A  2269  319F   	fcall	_setDimmerLights_ERROR
 12577  1F52  2F54               	goto	l4733
 12578                           	line	312
 12579                           	
 12580  1F53                     l4736:	
 12581  1F53  2F54               	goto	l4733
 12582                           	line	314
 12583                           	
 12584  1F54                     l4735:	
 12585                           	
 12586  1F54                     l4733:	
 12587                           ;Dimmer_B1.c: 312: }
 12588                           ;Dimmer_B1.c: 314: setDimmerLights_TriggerERROR(1,0);
 12589  1F54  0020               	movlb 0	; select bank0
 12590  1F55  01A2               	clrf	(?_setDimmerLights_TriggerERROR)
 12591  1F56  3001               	movlw	(01h)
 12592  1F57  31A6  262F  319F   	fcall	_setDimmerLights_TriggerERROR
 12593                           	line	323
 12594                           	
 12595  1F5A                     l21420:	
 12596                           ;Dimmer_B1.c: 323: if(TMain->SelfTest == 0)
 12597  1F5A  087D               	movf	(_TMain),w
 12598  1F5B  3E03               	addlw	03h
 12599  1F5C  0086               	movwf	fsr1l
 12600  1F5D  3001               	movlw 1	; select bank2/3
 12601  1F5E  0087               	movwf fsr1h	
 12602                           	
 12603  1F5F  1801               	btfsc	indf1,0
 12604  1F60  2F62               	goto	u9981
 12605  1F61  2F63               	goto	u9980
 12606  1F62                     u9981:
 12607  1F62  2F7F               	goto	l4738
 12608  1F63                     u9980:
 12609                           	line	325
 12610                           	
 12611  1F63                     l21422:	
 12612                           ;Dimmer_B1.c: 324: {
 12613                           ;Dimmer_B1.c: 325: TMain->i=0;
 12614  1F63  087D               	movf	(_TMain),w
 12615  1F64  3E0E               	addlw	0Eh
 12616  1F65  0086               	movwf	fsr1l
 12617  1F66  3001               	movlw 1	; select bank2/3
 12618  1F67  0087               	movwf fsr1h	
 12619                           	
 12620  1F68  1001               	bcf	indf1,0
 12621                           	line	326
 12622                           ;Dimmer_B1.c: 326: TMain->j=0;
 12623  1F69  087D               	movf	(_TMain),w
 12624  1F6A  3E0E               	addlw	0Eh
 12625  1F6B  0086               	movwf	fsr1l
 12626  1F6C  3001               	movlw 1	; select bank2/3
 12627  1F6D  0087               	movwf fsr1h	
 12628                           	
 12629  1F6E  1081               	bcf	indf1,1
 12630                           	line	327
 12631                           ;Dimmer_B1.c: 327: TMain->k=1;
 12632  1F6F  087D               	movf	(_TMain),w
 12633  1F70  3E0E               	addlw	0Eh
 12634  1F71  0086               	movwf	fsr1l
 12635  1F72  3001               	movlw 1	; select bank2/3
 12636  1F73  0087               	movwf fsr1h	
 12637                           	
 12638  1F74  1501               	bsf	indf1,2
 12639                           	line	328
 12640                           ;Dimmer_B1.c: 328: TMain->Count2=0;
 12641  1F75  087D               	movf	(_TMain),w
 12642  1F76  3E08               	addlw	08h
 12643  1F77  0086               	movwf	fsr1l
 12644  1F78  3001               	movlw 1	; select bank2/3
 12645  1F79  0087               	movwf fsr1h	
 12646                           	
 12647  1F7A  3000               	movlw	low(0)
 12648  1F7B  3FC0               	movwi	[0]fsr1
 12649  1F7C  3000               	movlw	high(0)
 12650  1F7D  3FC1               	movwi	[1]fsr1
 12651  1F7E  2F7F               	goto	l4738
 12652                           	line	329
 12653                           	
 12654  1F7F                     l4737:	
 12655                           	line	330
 12656                           	
 12657  1F7F                     l4738:	
 12658  1F7F  0008               	return
 12659                           	opt stack 0
 12660                           GLOBAL	__end_of_DimmerLights_ERROR
 12661  1F80                     	__end_of_DimmerLights_ERROR:
 12662 ;; =============== function _DimmerLights_ERROR ends ============
 12663                           
 12664                           	signat	_DimmerLights_ERROR,88
 12665                           	global	_setDimmerLights_Adj
 12666                           psect	text4898,local,class=CODE,delta=2
 12667                           global __ptext4898
 12668  1BDC                     __ptext4898:
 12669                           
 12670 ;; *************** function _setDimmerLights_Adj *****************
 12671 ;; Defined at:
 12672 ;;		line 403 in file "G:\Program\PIC\Source_File\Dimmer_B1.c"
 12673 ;; Parameters:    Size  Location     Type
 12674 ;;  lights          1    wreg     unsigned char 
 12675 ;;  status          1   45[BANK0 ] unsigned char 
 12676 ;; Auto vars:     Size  Location     Type
 12677 ;;  lights          1   48[BANK0 ] unsigned char 
 12678 ;; Return value:  Size  Location     Type
 12679 ;;		None               void
 12680 ;; Registers used:
 12681 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12682 ;; Tracked objects:
 12683 ;;		On entry : 0/0
 12684 ;;		On exit  : 0/0
 12685 ;;		Unchanged: 0/0
 12686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 12687 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 12688 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 12689 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 12690 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 12691 ;;Total ram usage:        4 bytes
 12692 ;; Hardware stack levels used:    1
 12693 ;; Hardware stack levels required when called:    7
 12694 ;; This function calls:
 12695 ;;		_DimmerLightsPointSelect
 12696 ;;		_setLoad_StatusOff
 12697 ;;		_setRF_DimmerLights
 12698 ;;		_setTxData
 12699 ;;		_setPercentValue
 12700 ;; This function is called by:
 12701 ;;		_setDimmerLights_Main
 12702 ;; This function uses a non-reentrant model
 12703 ;;
 12704                           psect	text4898
 12705                           	file	"G:\Program\PIC\Source_File\Dimmer_B1.c"
 12706                           	line	403
 12707                           	global	__size_of_setDimmerLights_Adj
 12708  0069                     	__size_of_setDimmerLights_Adj	equ	__end_of_setDimmerLights_Adj-_setDimmerLights_Adj
 12709                           	
 12710  1BDC                     _setDimmerLights_Adj:	
 12711                           	opt	stack 6
 12712                           ; Regs used in _setDimmerLights_Adj: [wreg+fsr1l-status,0+pclath+cstack]
 12713                           ;setDimmerLights_Adj@lights stored from wreg
 12714  1BDC  0020               	movlb 0	; select bank0
 12715  1BDD  00D0               	movwf	(setDimmerLights_Adj@lights)
 12716                           	line	404
 12717                           	
 12718  1BDE                     l21388:	
 12719                           ;Dimmer_B1.c: 404: DimmerLightsPointSelect(lights);
 12720  1BDE  0850               	movf	(setDimmerLights_Adj@lights),w
 12721  1BDF  31AE  2684  319B   	fcall	_DimmerLightsPointSelect
 12722                           	line	405
 12723                           	
 12724  1BE2                     l21390:	
 12725                           ;Dimmer_B1.c: 405: if(status)
 12726  1BE2  0020               	movlb 0	; select bank0
 12727  1BE3  084D               	movf	(setDimmerLights_Adj@status),w
 12728  1BE4  1D03               	skipz
 12729  1BE5  2BE7               	goto	u9920
 12730  1BE6  2BF2               	goto	l21394
 12731  1BE7                     u9920:
 12732                           	line	407
 12733                           	
 12734  1BE7                     l21392:	
 12735                           ;Dimmer_B1.c: 406: {
 12736                           ;Dimmer_B1.c: 407: DimmerLights->AdjFlag=1;
 12737  1BE7  086A               	movf	(_DimmerLights),w
 12738  1BE8  0086               	movwf	fsr1l
 12739  1BE9  3001               	movlw 1	; select bank2/3
 12740  1BEA  0087               	movwf fsr1h	
 12741                           	
 12742  1BEB  1581               	bsf	indf1,3
 12743                           	line	408
 12744                           ;Dimmer_B1.c: 408: DimmerLights->Signal=1;
 12745  1BEC  086A               	movf	(_DimmerLights),w
 12746  1BED  0086               	movwf	fsr1l
 12747  1BEE  3001               	movlw 1	; select bank2/3
 12748  1BEF  0087               	movwf fsr1h	
 12749                           	
 12750  1BF0  1481               	bsf	indf1,1
 12751                           	line	409
 12752                           ;Dimmer_B1.c: 409: }
 12753  1BF1  2C44               	goto	l4757
 12754                           	line	410
 12755                           	
 12756  1BF2                     l4754:	
 12757                           	line	412
 12758                           	
 12759  1BF2                     l21394:	
 12760                           ;Dimmer_B1.c: 410: else
 12761                           ;Dimmer_B1.c: 411: {
 12762                           ;Dimmer_B1.c: 412: if(DimmerLights->AdjFlag)
 12763  1BF2  086A               	movf	(_DimmerLights),w
 12764  1BF3  0086               	movwf	fsr1l
 12765  1BF4  3001               	movlw 1	; select bank2/3
 12766  1BF5  0087               	movwf fsr1h	
 12767                           	
 12768  1BF6  1D81               	btfss	indf1,3
 12769  1BF7  2BF9               	goto	u9931
 12770  1BF8  2BFA               	goto	u9930
 12771  1BF9                     u9931:
 12772  1BF9  2C44               	goto	l4757
 12773  1BFA                     u9930:
 12774                           	line	414
 12775                           	
 12776  1BFA                     l21396:	
 12777                           ;Dimmer_B1.c: 413: {
 12778                           ;Dimmer_B1.c: 414: DimmerLights->Signal=0;
 12779  1BFA  086A               	movf	(_DimmerLights),w
 12780  1BFB  0086               	movwf	fsr1l
 12781  1BFC  3001               	movlw 1	; select bank2/3
 12782  1BFD  0087               	movwf fsr1h	
 12783                           	
 12784  1BFE  1081               	bcf	indf1,1
 12785                           	line	415
 12786                           ;Dimmer_B1.c: 415: DimmerLights->AdjFlag=0;
 12787  1BFF  086A               	movf	(_DimmerLights),w
 12788  1C00  0086               	movwf	fsr1l
 12789  1C01  3001               	movlw 1	; select bank2/3
 12790  1C02  0087               	movwf fsr1h	
 12791                           	
 12792  1C03  1181               	bcf	indf1,3
 12793                           	line	416
 12794                           	
 12795  1C04                     l21398:	
 12796                           ;Dimmer_B1.c: 416: setLoad_StatusOff(1,0,1);
 12797  1C04  01A2               	clrf	(?_setLoad_StatusOff)
 12798  1C05  01A3               	clrf	0+(?_setLoad_StatusOff)+01h
 12799  1C06  1403               	bsf	status,0
 12800  1C07  0DA3               	rlf	0+(?_setLoad_StatusOff)+01h,f
 12801  1C08  3001               	movlw	(01h)
 12802  1C09  31A5  2586  319B   	fcall	_setLoad_StatusOff
 12803                           	line	417
 12804                           	
 12805  1C0C                     l21400:	
 12806                           ;Dimmer_B1.c: 417: DimmerLights->MaxmumValue=DimmerLights->DimmingValue;
 12807  1C0C  0020               	movlb 0	; select bank0
 12808  1C0D  086A               	movf	(_DimmerLights),w
 12809  1C0E  3E04               	addlw	04h
 12810  1C0F  0086               	movwf	fsr1l
 12811  1C10  3001               	movlw 1	; select bank2/3
 12812  1C11  0087               	movwf fsr1h	
 12813                           	
 12814  1C12  0801               	movf	indf1,w
 12815  1C13  00CE               	movwf	(??_setDimmerLights_Adj+0)+0
 12816  1C14  086A               	movf	(_DimmerLights),w
 12817  1C15  3E05               	addlw	05h
 12818  1C16  0086               	movwf	fsr1l
 12819  1C17  3001               	movlw 1	; select bank2/3
 12820  1C18  0087               	movwf fsr1h	
 12821                           	
 12822  1C19  084E               	movf	(??_setDimmerLights_Adj+0)+0,w
 12823  1C1A  0081               	movwf	indf1
 12824                           	line	418
 12825                           ;Dimmer_B1.c: 418: setRF_DimmerLights(lights,1);
 12826  1C1B  01A0               	clrf	(?_setRF_DimmerLights)
 12827  1C1C  1403               	bsf	status,0
 12828  1C1D  0DA0               	rlf	(?_setRF_DimmerLights),f
 12829  1C1E  0850               	movf	(setDimmerLights_Adj@lights),w
 12830  1C1F  319B  237E  319B   	fcall	_setRF_DimmerLights
 12831                           	line	419
 12832                           ;Dimmer_B1.c: 419: setTxData(1);
 12833  1C22  3001               	movlw	(01h)
 12834  1C23  318B  230E  319B   	fcall	_setTxData
 12835                           	line	420
 12836                           	
 12837  1C26                     l21402:	
 12838                           ;Dimmer_B1.c: 420: Memory->Modify=1;
 12839  1C26  087C               	movf	(_Memory),w
 12840  1C27  3E22               	addlw	022h
 12841  1C28  0086               	movwf	fsr1l
 12842  1C29  3001               	movlw 1	; select bank2/3
 12843  1C2A  0087               	movwf fsr1h	
 12844                           	
 12845  1C2B  1401               	bsf	indf1,0
 12846                           	line	421
 12847                           	
 12848  1C2C                     l21404:	
 12849                           ;Dimmer_B1.c: 421: Product->Data[(20+lights)]=setPercentValue(DimmerLights->MaxmumValue)
                                 ;
 12850  1C2C  0020               	movlb 0	; select bank0
 12851  1C2D  086A               	movf	(_DimmerLights),w
 12852  1C2E  3E05               	addlw	05h
 12853  1C2F  0086               	movwf	fsr1l
 12854  1C30  3001               	movlw 1	; select bank2/3
 12855  1C31  0087               	movwf fsr1h	
 12856                           	
 12857  1C32  0801               	movf	indf1,w
 12858  1C33  31A3  2393  319B   	fcall	_setPercentValue
 12859  1C36  0020               	movlb 0	; select bank0
 12860  1C37  00CE               	movwf	(??_setDimmerLights_Adj+0)+0
 12861  1C38  0850               	movf	(setDimmerLights_Adj@lights),w
 12862  1C39  3E14               	addlw	014h
 12863  1C3A  076F               	addwf	(_Product),w
 12864  1C3B  00CF               	movwf	(??_setDimmerLights_Adj+1)+0
 12865  1C3C  084F               	movf	0+(??_setDimmerLights_Adj+1)+0,w
 12866  1C3D  0086               	movwf	fsr1l
 12867  1C3E  3001               	movlw 1	; select bank2/3
 12868  1C3F  0087               	movwf fsr1h	
 12869                           	
 12870  1C40  084E               	movf	(??_setDimmerLights_Adj+0)+0,w
 12871  1C41  0081               	movwf	indf1
 12872  1C42  2C44               	goto	l4757
 12873                           	line	422
 12874                           	
 12875  1C43                     l4756:	
 12876  1C43  2C44               	goto	l4757
 12877                           	line	423
 12878                           	
 12879  1C44                     l4755:	
 12880                           	line	424
 12881                           	
 12882  1C44                     l4757:	
 12883  1C44  0008               	return
 12884                           	opt stack 0
 12885                           GLOBAL	__end_of_setDimmerLights_Adj
 12886  1C45                     	__end_of_setDimmerLights_Adj:
 12887 ;; =============== function _setDimmerLights_Adj ends ============
 12888                           
 12889                           	signat	_setDimmerLights_Adj,8312
 12890                           	global	_setDimmerLights_Initialization
 12891                           psect	text4899,local,class=CODE,delta=2
 12892                           global __ptext4899
 12893  266D                     __ptext4899:
 12894                           
 12895 ;; *************** function _setDimmerLights_Initialization *****************
 12896 ;; Defined at:
 12897 ;;		line 50 in file "G:\Program\PIC\Source_File\Dimmer_B1.c"
 12898 ;; Parameters:    Size  Location     Type
 12899 ;;  lights          1    wreg     unsigned char 
 12900 ;; Auto vars:     Size  Location     Type
 12901 ;;  lights          1   62[BANK0 ] unsigned char 
 12902 ;; Return value:  Size  Location     Type
 12903 ;;		None               void
 12904 ;; Registers used:
 12905 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12906 ;; Tracked objects:
 12907 ;;		On entry : 0/0
 12908 ;;		On exit  : 0/0
 12909 ;;		Unchanged: 0/0
 12910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 12911 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 12912 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 12913 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 12914 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 12915 ;;Total ram usage:        3 bytes
 12916 ;; Hardware stack levels used:    1
 12917 ;; Hardware stack levels required when called:    7
 12918 ;; This function calls:
 12919 ;;		_DimmerLightsPointSelect
 12920 ;;		_getPercentValue
 12921 ;; This function is called by:
 12922 ;;		_DimmerLights_Initialization
 12923 ;; This function uses a non-reentrant model
 12924 ;;
 12925                           psect	text4899
 12926                           	file	"G:\Program\PIC\Source_File\Dimmer_B1.c"
 12927                           	line	50
 12928                           	global	__size_of_setDimmerLights_Initialization
 12929  0040                     	__size_of_setDimmerLights_Initialization	equ	__end_of_setDimmerLights_Initialization-_s
                                 etDimmerLights_Initialization
 12930                           	
 12931  266D                     _setDimmerLights_Initialization:	
 12932                           	opt	stack 7
 12933                           ; Regs used in _setDimmerLights_Initialization: [wreg+fsr1l-status,0+pclath+cstack]
 12934                           ;setDimmerLights_Initialization@lights stored from wreg
 12935  266D  0020               	movlb 0	; select bank0
 12936  266E  00DE               	movwf	(setDimmerLights_Initialization@lights)
 12937                           	line	51
 12938                           	
 12939  266F                     l19856:	
 12940                           ;Dimmer_B1.c: 51: DimmerLightsPointSelect(lights);
 12941  266F  085E               	movf	(setDimmerLights_Initialization@lights),w
 12942  2670  31AE  2684  31A6   	fcall	_DimmerLightsPointSelect
 12943                           	line	53
 12944                           	
 12945  2673                     l19858:	
 12946                           ;Dimmer_B1.c: 53: DimmerLights->MinimumValue=((char)((100-20)*1.5));
 12947  2673  3078               	movlw	(078h)
 12948  2674  0020               	movlb 0	; select bank0
 12949  2675  00DC               	movwf	(??_setDimmerLights_Initialization+0)+0
 12950  2676  086A               	movf	(_DimmerLights),w
 12951  2677  3E06               	addlw	06h
 12952  2678  0086               	movwf	fsr1l
 12953  2679  3001               	movlw 1	; select bank2/3
 12954  267A  0087               	movwf fsr1h	
 12955                           	
 12956  267B  085C               	movf	(??_setDimmerLights_Initialization+0)+0,w
 12957  267C  0081               	movwf	indf1
 12958                           	line	54
 12959                           	
 12960  267D                     l19860:	
 12961                           ;Dimmer_B1.c: 54: DimmerLights->Open=1;
 12962  267D  086A               	movf	(_DimmerLights),w
 12963  267E  3E09               	addlw	09h
 12964  267F  0086               	movwf	fsr1l
 12965  2680  3001               	movlw 1	; select bank2/3
 12966  2681  0087               	movwf fsr1h	
 12967                           	
 12968  2682  1681               	bsf	indf1,5
 12969                           	line	55
 12970                           	
 12971  2683                     l19862:	
 12972                           ;Dimmer_B1.c: 55: DimmerLights->Close=1;
 12973  2683  086A               	movf	(_DimmerLights),w
 12974  2684  3E09               	addlw	09h
 12975  2685  0086               	movwf	fsr1l
 12976  2686  3001               	movlw 1	; select bank2/3
 12977  2687  0087               	movwf fsr1h	
 12978                           	
 12979  2688  1701               	bsf	indf1,6
 12980                           	line	58
 12981                           	
 12982  2689                     l19864:	
 12983                           ;Dimmer_B1.c: 58: DimmerLights->DimmingValue=DimmerLights->MinimumValue;
 12984  2689  086A               	movf	(_DimmerLights),w
 12985  268A  3E06               	addlw	06h
 12986  268B  0086               	movwf	fsr1l
 12987  268C  3001               	movlw 1	; select bank2/3
 12988  268D  0087               	movwf fsr1h	
 12989                           	
 12990  268E  0801               	movf	indf1,w
 12991  268F  00DC               	movwf	(??_setDimmerLights_Initialization+0)+0
 12992  2690  086A               	movf	(_DimmerLights),w
 12993  2691  3E04               	addlw	04h
 12994  2692  0086               	movwf	fsr1l
 12995  2693  3001               	movlw 1	; select bank2/3
 12996  2694  0087               	movwf fsr1h	
 12997                           	
 12998  2695  085C               	movf	(??_setDimmerLights_Initialization+0)+0,w
 12999  2696  0081               	movwf	indf1
 13000                           	line	64
 13001                           	
 13002  2697                     l19866:	
 13003                           ;Dimmer_B1.c: 64: DimmerLights->MaxmumValue=getPercentValue(Product->Data[(20+lights)]);
 13004  2697  085E               	movf	(setDimmerLights_Initialization@lights),w
 13005  2698  3E14               	addlw	014h
 13006  2699  076F               	addwf	(_Product),w
 13007  269A  00DC               	movwf	(??_setDimmerLights_Initialization+0)+0
 13008  269B  085C               	movf	0+(??_setDimmerLights_Initialization+0)+0,w
 13009  269C  0086               	movwf	fsr1l
 13010  269D  3001               	movlw 1	; select bank2/3
 13011  269E  0087               	movwf fsr1h	
 13012                           	
 13013  269F  0801               	movf	indf1,w
 13014  26A0  31A6  26AD  31A6   	fcall	_getPercentValue
 13015  26A3  0020               	movlb 0	; select bank0
 13016  26A4  00DD               	movwf	(??_setDimmerLights_Initialization+1)+0
 13017  26A5  086A               	movf	(_DimmerLights),w
 13018  26A6  3E05               	addlw	05h
 13019  26A7  0086               	movwf	fsr1l
 13020  26A8  3001               	movlw 1	; select bank2/3
 13021  26A9  0087               	movwf fsr1h	
 13022                           	
 13023  26AA  085D               	movf	(??_setDimmerLights_Initialization+1)+0,w
 13024  26AB  0081               	movwf	indf1
 13025                           	line	68
 13026                           	
 13027  26AC                     l4693:	
 13028  26AC  0008               	return
 13029                           	opt stack 0
 13030                           GLOBAL	__end_of_setDimmerLights_Initialization
 13031  26AD                     	__end_of_setDimmerLights_Initialization:
 13032 ;; =============== function _setDimmerLights_Initialization ends ============
 13033                           
 13034                           	signat	_setDimmerLights_Initialization,4216
 13035                           	global	_DelayOff_Main
 13036                           psect	text4900,local,class=CODE,delta=2
 13037                           global __ptext4900
 13038  2D60                     __ptext4900:
 13039                           
 13040 ;; *************** function _DelayOff_Main *****************
 13041 ;; Defined at:
 13042 ;;		line 44 in file "G:\Program\PIC\Source_File\DelayOff_B1.c"
 13043 ;; Parameters:    Size  Location     Type
 13044 ;;		None
 13045 ;; Auto vars:     Size  Location     Type
 13046 ;;		None
 13047 ;; Return value:  Size  Location     Type
 13048 ;;		None               void
 13049 ;; Registers used:
 13050 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13051 ;; Tracked objects:
 13052 ;;		On entry : 0/0
 13053 ;;		On exit  : 0/0
 13054 ;;		Unchanged: 0/0
 13055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 13056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 13057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 13058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 13059 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 13060 ;;Total ram usage:        0 bytes
 13061 ;; Hardware stack levels used:    1
 13062 ;; Hardware stack levels required when called:    7
 13063 ;; This function calls:
 13064 ;;		_DlyOff_Main
 13065 ;; This function is called by:
 13066 ;;		_main
 13067 ;; This function uses a non-reentrant model
 13068 ;;
 13069                           psect	text4900
 13070                           	file	"G:\Program\PIC\Source_File\DelayOff_B1.c"
 13071                           	line	44
 13072                           	global	__size_of_DelayOff_Main
 13073  0005                     	__size_of_DelayOff_Main	equ	__end_of_DelayOff_Main-_DelayOff_Main
 13074                           	
 13075  2D60                     _DelayOff_Main:	
 13076                           	opt	stack 8
 13077                           ; Regs used in _DelayOff_Main: [wreg-status,0+pclath+cstack]
 13078                           	line	46
 13079                           	
 13080  2D60                     l21386:	
 13081                           ;DelayOff_B1.c: 46: DlyOff_Main(1);
 13082  2D60  3001               	movlw	(01h)
 13083  2D61  3190  20A0  31AD   	fcall	_DlyOff_Main
 13084                           	line	54
 13085                           	
 13086  2D64                     l3501:	
 13087  2D64  0008               	return
 13088                           	opt stack 0
 13089                           GLOBAL	__end_of_DelayOff_Main
 13090  2D65                     	__end_of_DelayOff_Main:
 13091 ;; =============== function _DelayOff_Main ends ============
 13092                           
 13093                           	signat	_DelayOff_Main,88
 13094                           	global	_CC2500_PowerOnInitial
 13095                           psect	text4901,local,class=CODE,delta=2
 13096                           global __ptext4901
 13097  214C                     __ptext4901:
 13098                           
 13099 ;; *************** function _CC2500_PowerOnInitial *****************
 13100 ;; Defined at:
 13101 ;;		line 98 in file "G:\Program\PIC\Source_File\CC2500_B1.c"
 13102 ;; Parameters:    Size  Location     Type
 13103 ;;		None
 13104 ;; Auto vars:     Size  Location     Type
 13105 ;;		None
 13106 ;; Return value:  Size  Location     Type
 13107 ;;		None               void
 13108 ;; Registers used:
 13109 ;;		wreg, status,2, status,0, pclath, cstack
 13110 ;; Tracked objects:
 13111 ;;		On entry : 0/0
 13112 ;;		On exit  : 0/0
 13113 ;;		Unchanged: 0/0
 13114 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 13115 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 13116 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 13117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 13118 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 13119 ;;Total ram usage:        0 bytes
 13120 ;; Hardware stack levels used:    1
 13121 ;; Hardware stack levels required when called:    7
 13122 ;; This function calls:
 13123 ;;		_CC2500_PowerRST
 13124 ;;		_CC2500_InitSetREG
 13125 ;;		_CC2500_InitPATable
 13126 ;;		_CC2500_ClearTXFIFO
 13127 ;;		_CC2500_ClearRXFIFO
 13128 ;;		_CC2500_FrequencyCabr
 13129 ;;		_CC2500_SIDLEMode
 13130 ;; This function is called by:
 13131 ;;		_main
 13132 ;; This function uses a non-reentrant model
 13133 ;;
 13134                           psect	text4901
 13135                           	file	"G:\Program\PIC\Source_File\CC2500_B1.c"
 13136                           	line	98
 13137                           	global	__size_of_CC2500_PowerOnInitial
 13138  0016                     	__size_of_CC2500_PowerOnInitial	equ	__end_of_CC2500_PowerOnInitial-_CC2500_PowerOnIniti
                                 al
 13139                           	
 13140  214C                     _CC2500_PowerOnInitial:	
 13141                           	opt	stack 8
 13142                           ; Regs used in _CC2500_PowerOnInitial: [wreg+status,2+status,0+pclath+cstack]
 13143                           	line	99
 13144                           	
 13145  214C                     l21384:	
 13146                           ;CC2500_B1.c: 99: CC2500_PowerRST();
 13147  214C  31A5  254F  31A1   	fcall	_CC2500_PowerRST
 13148                           	line	100
 13149                           ;CC2500_B1.c: 100: CC2500_InitSetREG();
 13150  214F  31A3  23ED  31A1   	fcall	_CC2500_InitSetREG
 13151                           	line	101
 13152                           ;CC2500_B1.c: 101: CC2500_InitPATable();
 13153  2152  31A2  22CA  31A1   	fcall	_CC2500_InitPATable
 13154                           	line	102
 13155                           ;CC2500_B1.c: 102: CC2500_ClearTXFIFO();
 13156  2155  31AD  2538  31A1   	fcall	_CC2500_ClearTXFIFO
 13157                           	line	103
 13158                           ;CC2500_B1.c: 103: CC2500_ClearRXFIFO();
 13159  2158  31AD  253D  31A1   	fcall	_CC2500_ClearRXFIFO
 13160                           	line	104
 13161                           ;CC2500_B1.c: 104: CC2500_FrequencyCabr();
 13162  215B  31AE  2626  31A1   	fcall	_CC2500_FrequencyCabr
 13163                           	line	105
 13164                           ;CC2500_B1.c: 105: CC2500_SIDLEMode();
 13165  215E  31AD  2542  31A1   	fcall	_CC2500_SIDLEMode
 13166                           	line	106
 13167                           	
 13168  2161                     l2298:	
 13169  2161  0008               	return
 13170                           	opt stack 0
 13171                           GLOBAL	__end_of_CC2500_PowerOnInitial
 13172  2162                     	__end_of_CC2500_PowerOnInitial:
 13173 ;; =============== function _CC2500_PowerOnInitial ends ============
 13174                           
 13175                           	signat	_CC2500_PowerOnInitial,88
 13176                           	global	_Buzzer_Initialization
 13177                           psect	text4902,local,class=CODE,delta=2
 13178                           global __ptext4902
 13179  2D5B                     __ptext4902:
 13180                           
 13181 ;; *************** function _Buzzer_Initialization *****************
 13182 ;; Defined at:
 13183 ;;		line 20 in file "G:\Program\PIC\Source_File\Buzzer_B1.c"
 13184 ;; Parameters:    Size  Location     Type
 13185 ;;		None
 13186 ;; Auto vars:     Size  Location     Type
 13187 ;;		None
 13188 ;; Return value:  Size  Location     Type
 13189 ;;		None               void
 13190 ;; Registers used:
 13191 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13192 ;; Tracked objects:
 13193 ;;		On entry : 0/0
 13194 ;;		On exit  : 0/0
 13195 ;;		Unchanged: 0/0
 13196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 13197 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 13198 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 13199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 13200 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 13201 ;;Total ram usage:        0 bytes
 13202 ;; Hardware stack levels used:    1
 13203 ;; Hardware stack levels required when called:    7
 13204 ;; This function calls:
 13205 ;;		_setBuz_Initialization
 13206 ;; This function is called by:
 13207 ;;		_main
 13208 ;; This function uses a non-reentrant model
 13209 ;;
 13210                           psect	text4902
 13211                           	file	"G:\Program\PIC\Source_File\Buzzer_B1.c"
 13212                           	line	20
 13213                           	global	__size_of_Buzzer_Initialization
 13214  0005                     	__size_of_Buzzer_Initialization	equ	__end_of_Buzzer_Initialization-_Buzzer_Initializati
                                 on
 13215                           	
 13216  2D5B                     _Buzzer_Initialization:	
 13217                           	opt	stack 8
 13218                           ; Regs used in _Buzzer_Initialization: [wreg+fsr1l-status,0+pclath+cstack]
 13219                           	line	22
 13220                           	
 13221  2D5B                     l21382:	
 13222                           ;Buzzer_B1.c: 22: setBuz_Initialization(1);
 13223  2D5B  3001               	movlw	(01h)
 13224  2D5C  31AD  25C1  31AD   	fcall	_setBuz_Initialization
 13225                           	line	24
 13226                           	
 13227  2D5F                     l1107:	
 13228  2D5F  0008               	return
 13229                           	opt stack 0
 13230                           GLOBAL	__end_of_Buzzer_Initialization
 13231  2D60                     	__end_of_Buzzer_Initialization:
 13232 ;; =============== function _Buzzer_Initialization ends ============
 13233                           
 13234                           	signat	_Buzzer_Initialization,88
 13235                           	global	_Sw_OffFunc
 13236                           psect	text4903,local,class=CODE,delta=2
 13237                           global __ptext4903
 13238  1F80                     __ptext4903:
 13239                           
 13240 ;; *************** function _Sw_OffFunc *****************
 13241 ;; Defined at:
 13242 ;;		line 231 in file "G:\Program\PIC\Source_File\Switch_B1.c"
 13243 ;; Parameters:    Size  Location     Type
 13244 ;;  sw              1    wreg     unsigned char 
 13245 ;; Auto vars:     Size  Location     Type
 13246 ;;  sw              1    9[BANK0 ] unsigned char 
 13247 ;; Return value:  Size  Location     Type
 13248 ;;		None               void
 13249 ;; Registers used:
 13250 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13251 ;; Tracked objects:
 13252 ;;		On entry : 0/0
 13253 ;;		On exit  : 0/0
 13254 ;;		Unchanged: 0/0
 13255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 13256 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 13257 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 13258 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 13259 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 13260 ;;Total ram usage:        3 bytes
 13261 ;; Hardware stack levels used:    1
 13262 ;; Hardware stack levels required when called:    6
 13263 ;; This function calls:
 13264 ;;		_setDimmerLights_TriggerAdj
 13265 ;;		_setDimmerLights_AdjGo
 13266 ;;		_setRF_DimmerLights
 13267 ;;		_setTxData
 13268 ;;		_setDelayOff_GO
 13269 ;;		_setDimmerLights_Trigger
 13270 ;;		_setDimmerLights_Switch
 13271 ;; This function is called by:
 13272 ;;		_setSw_Main
 13273 ;; This function uses a non-reentrant model
 13274 ;;
 13275                           psect	text4903
 13276                           	file	"G:\Program\PIC\Source_File\Switch_B1.c"
 13277                           	line	231
 13278                           	global	__size_of_Sw_OffFunc
 13279  0080                     	__size_of_Sw_OffFunc	equ	__end_of_Sw_OffFunc-_Sw_OffFunc
 13280                           	
 13281  1F80                     _Sw_OffFunc:	
 13282                           	opt	stack 7
 13283                           ; Regs used in _Sw_OffFunc: [wreg+fsr1l-status,0+pclath+cstack]
 13284                           ;Sw_OffFunc@sw stored from wreg
 13285  1F80  0020               	movlb 0	; select bank0
 13286  1F81  00A9               	movwf	(Sw_OffFunc@sw)
 13287                           	line	232
 13288                           	
 13289  1F82                     l21362:	
 13290                           ;Switch_B1.c: 232: if(Sw->Flag)
 13291  1F82  086D               	movf	(_Sw),w
 13292  1F83  0086               	movwf	fsr1l
 13293  1F84  3001               	movlw 1	; select bank2/3
 13294  1F85  0087               	movwf fsr1h	
 13295                           	
 13296  1F86  1F81               	btfss	indf1,7
 13297  1F87  2F89               	goto	u9891
 13298  1F88  2F8A               	goto	u9890
 13299  1F89                     u9891:
 13300  1F89  2FFF               	goto	l14436
 13301  1F8A                     u9890:
 13302                           	line	234
 13303                           	
 13304  1F8A                     l21364:	
 13305                           ;Switch_B1.c: 233: {
 13306                           ;Switch_B1.c: 234: Sw->Flag=0;
 13307  1F8A  086D               	movf	(_Sw),w
 13308  1F8B  0086               	movwf	fsr1l
 13309  1F8C  3001               	movlw 1	; select bank2/3
 13310  1F8D  0087               	movwf fsr1h	
 13311                           	
 13312  1F8E  1381               	bcf	indf1,7
 13313                           	line	235
 13314                           ;Switch_B1.c: 235: if(Sw->Status)
 13315  1F8F  086D               	movf	(_Sw),w
 13316  1F90  0086               	movwf	fsr1l
 13317  1F91  3001               	movlw 1	; select bank2/3
 13318  1F92  0087               	movwf fsr1h	
 13319                           	
 13320  1F93  1F01               	btfss	indf1,6
 13321  1F94  2F96               	goto	u9901
 13322  1F95  2F97               	goto	u9900
 13323  1F96                     u9901:
 13324  1F96  2FD7               	goto	l21380
 13325  1F97                     u9900:
 13326                           	line	237
 13327                           	
 13328  1F97                     l21366:	
 13329                           ;Switch_B1.c: 236: {
 13330                           ;Switch_B1.c: 237: if(Sw->Adj)
 13331  1F97  086D               	movf	(_Sw),w
 13332  1F98  3E01               	addlw	01h
 13333  1F99  0086               	movwf	fsr1l
 13334  1F9A  3001               	movlw 1	; select bank2/3
 13335  1F9B  0087               	movwf fsr1h	
 13336                           	
 13337  1F9C  1C01               	btfss	indf1,0
 13338  1F9D  2F9F               	goto	u9911
 13339  1F9E  2FA0               	goto	u9910
 13340  1F9F                     u9911:
 13341  1F9F  2FFF               	goto	l14436
 13342  1FA0                     u9910:
 13343                           	line	239
 13344                           	
 13345  1FA0                     l21368:	
 13346                           ;Switch_B1.c: 238: {
 13347                           ;Switch_B1.c: 239: Sw->Adj=0;
 13348  1FA0  086D               	movf	(_Sw),w
 13349  1FA1  3E01               	addlw	01h
 13350  1FA2  0086               	movwf	fsr1l
 13351  1FA3  3001               	movlw 1	; select bank2/3
 13352  1FA4  0087               	movwf fsr1h	
 13353                           	
 13354  1FA5  1001               	bcf	indf1,0
 13355                           	line	240
 13356                           	
 13357  1FA6                     l21370:	
 13358                           ;Switch_B1.c: 240: setDimmerLights_TriggerAdj(sw,1);
 13359  1FA6  01A2               	clrf	(?_setDimmerLights_TriggerAdj)
 13360  1FA7  1403               	bsf	status,0
 13361  1FA8  0DA2               	rlf	(?_setDimmerLights_TriggerAdj),f
 13362  1FA9  0829               	movf	(Sw_OffFunc@sw),w
 13363  1FAA  31A0  207C  319F   	fcall	_setDimmerLights_TriggerAdj
 13364                           	line	241
 13365                           	
 13366  1FAD                     l21372:	
 13367                           ;Switch_B1.c: 241: setDimmerLights_AdjGo(sw,0);
 13368  1FAD  0020               	movlb 0	; select bank0
 13369  1FAE  01A2               	clrf	(?_setDimmerLights_AdjGo)
 13370  1FAF  0829               	movf	(Sw_OffFunc@sw),w
 13371  1FB0  31A0  206B  319F   	fcall	_setDimmerLights_AdjGo
 13372                           	line	243
 13373                           	
 13374  1FB3                     l21374:	
 13375                           ;Switch_B1.c: 243: Product->Data[17]=Product->Data[26+sw];
 13376  1FB3  0020               	movlb 0	; select bank0
 13377  1FB4  0829               	movf	(Sw_OffFunc@sw),w
 13378  1FB5  3E1A               	addlw	01Ah
 13379  1FB6  076F               	addwf	(_Product),w
 13380  1FB7  00A7               	movwf	(??_Sw_OffFunc+0)+0
 13381  1FB8  0827               	movf	0+(??_Sw_OffFunc+0)+0,w
 13382  1FB9  0086               	movwf	fsr1l
 13383  1FBA  3001               	movlw 1	; select bank2/3
 13384  1FBB  0087               	movwf fsr1h	
 13385                           	
 13386  1FBC  0801               	movf	indf1,w
 13387  1FBD  00A8               	movwf	(??_Sw_OffFunc+1)+0
 13388  1FBE  086F               	movf	(_Product),w
 13389  1FBF  3E11               	addlw	011h
 13390  1FC0  0086               	movwf	fsr1l
 13391  1FC1  3001               	movlw 1	; select bank2/3
 13392  1FC2  0087               	movwf fsr1h	
 13393                           	
 13394  1FC3  0828               	movf	(??_Sw_OffFunc+1)+0,w
 13395  1FC4  0081               	movwf	indf1
 13396                           	line	244
 13397                           	
 13398  1FC5                     l21376:	
 13399                           ;Switch_B1.c: 244: setRF_DimmerLights(sw,Sw->Status);
 13400  1FC5  086D               	movf	(_Sw),w
 13401  1FC6  0086               	movwf	fsr1l
 13402  1FC7  3001               	movlw 1	; select bank2/3
 13403  1FC8  0087               	movwf fsr1h	
 13404                           	
 13405  1FC9  3000               	movlw	0
 13406  1FCA  1B01               	btfsc	indf1,6
 13407  1FCB  3001               	movlw	1
 13408  1FCC  00A0               	movwf	(?_setRF_DimmerLights)
 13409  1FCD  0829               	movf	(Sw_OffFunc@sw),w
 13410  1FCE  319B  237E  319F   	fcall	_setRF_DimmerLights
 13411                           	line	245
 13412                           	
 13413  1FD1                     l21378:	
 13414                           ;Switch_B1.c: 245: setTxData(1);
 13415  1FD1  3001               	movlw	(01h)
 13416  1FD2  318B  230E  319F   	fcall	_setTxData
 13417  1FD5  2FFF               	goto	l14436
 13418                           	line	246
 13419                           	
 13420  1FD6                     l14434:	
 13421                           	line	247
 13422                           ;Switch_B1.c: 246: }
 13423                           ;Switch_B1.c: 247: }
 13424  1FD6  2FFF               	goto	l14436
 13425                           	line	248
 13426                           	
 13427  1FD7                     l14433:	
 13428                           	line	250
 13429                           	
 13430  1FD7                     l21380:	
 13431                           ;Switch_B1.c: 248: else
 13432                           ;Switch_B1.c: 249: {
 13433                           ;Switch_B1.c: 250: setDelayOff_GO(sw,0,0);
 13434  1FD7  0020               	movlb 0	; select bank0
 13435  1FD8  01A3               	clrf	(?_setDelayOff_GO)
 13436  1FD9  01A4               	clrf	0+(?_setDelayOff_GO)+01h
 13437  1FDA  0829               	movf	(Sw_OffFunc@sw),w
 13438  1FDB  31A7  2774  319F   	fcall	_setDelayOff_GO
 13439                           	line	252
 13440                           ;Switch_B1.c: 252: setDimmerLights_Trigger(sw,1);
 13441  1FDE  0020               	movlb 0	; select bank0
 13442  1FDF  01A2               	clrf	(?_setDimmerLights_Trigger)
 13443  1FE0  1403               	bsf	status,0
 13444  1FE1  0DA2               	rlf	(?_setDimmerLights_Trigger),f
 13445  1FE2  0829               	movf	(Sw_OffFunc@sw),w
 13446  1FE3  31A0  2016  319F   	fcall	_setDimmerLights_Trigger
 13447                           	line	253
 13448                           ;Switch_B1.c: 253: setDimmerLights_Switch(sw,0);
 13449  1FE6  0020               	movlb 0	; select bank0
 13450  1FE7  01A2               	clrf	(?_setDimmerLights_Switch)
 13451  1FE8  0829               	movf	(Sw_OffFunc@sw),w
 13452  1FE9  31A0  2027  319F   	fcall	_setDimmerLights_Switch
 13453                           	line	255
 13454                           ;Switch_B1.c: 255: setRF_DimmerLights(sw,Sw->Status);
 13455  1FEC  0020               	movlb 0	; select bank0
 13456  1FED  086D               	movf	(_Sw),w
 13457  1FEE  0086               	movwf	fsr1l
 13458  1FEF  3001               	movlw 1	; select bank2/3
 13459  1FF0  0087               	movwf fsr1h	
 13460                           	
 13461  1FF1  3000               	movlw	0
 13462  1FF2  1B01               	btfsc	indf1,6
 13463  1FF3  3001               	movlw	1
 13464  1FF4  00A0               	movwf	(?_setRF_DimmerLights)
 13465  1FF5  0829               	movf	(Sw_OffFunc@sw),w
 13466  1FF6  319B  237E  319F   	fcall	_setRF_DimmerLights
 13467                           	line	256
 13468                           ;Switch_B1.c: 256: setTxData(1);
 13469  1FF9  3001               	movlw	(01h)
 13470  1FFA  318B  230E  319F   	fcall	_setTxData
 13471  1FFD  2FFF               	goto	l14436
 13472                           	line	257
 13473                           	
 13474  1FFE                     l14435:	
 13475  1FFE  2FFF               	goto	l14436
 13476                           	line	258
 13477                           	
 13478  1FFF                     l14432:	
 13479                           	line	259
 13480                           	
 13481  1FFF                     l14436:	
 13482  1FFF  0008               	return
 13483                           	opt stack 0
 13484                           GLOBAL	__end_of_Sw_OffFunc
 13485  2000                     	__end_of_Sw_OffFunc:
 13486 ;; =============== function _Sw_OffFunc ends ============
 13487                           
 13488                           	signat	_Sw_OffFunc,4216
 13489                           	global	_Sw_AdjFunc
 13490                           psect	text4904,local,class=CODE,delta=2
 13491                           global __ptext4904
 13492  23BF                     __ptext4904:
 13493                           
 13494 ;; *************** function _Sw_AdjFunc *****************
 13495 ;; Defined at:
 13496 ;;		line 262 in file "G:\Program\PIC\Source_File\Switch_B1.c"
 13497 ;; Parameters:    Size  Location     Type
 13498 ;;  sw              1    wreg     unsigned char 
 13499 ;; Auto vars:     Size  Location     Type
 13500 ;;  sw              1    4[BANK0 ] unsigned char 
 13501 ;; Return value:  Size  Location     Type
 13502 ;;		None               void
 13503 ;; Registers used:
 13504 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13505 ;; Tracked objects:
 13506 ;;		On entry : 0/0
 13507 ;;		On exit  : 0/0
 13508 ;;		Unchanged: 0/0
 13509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 13510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 13511 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 13512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 13513 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 13514 ;;Total ram usage:        1 bytes
 13515 ;; Hardware stack levels used:    1
 13516 ;; Hardware stack levels required when called:    6
 13517 ;; This function calls:
 13518 ;;		_setRFSW_Status
 13519 ;;		_setDimmerLights_TriggerAdj
 13520 ;;		_setDimmerLights_AdjGo
 13521 ;; This function is called by:
 13522 ;;		_setSw_Main
 13523 ;; This function uses a non-reentrant model
 13524 ;;
 13525                           psect	text4904
 13526                           	file	"G:\Program\PIC\Source_File\Switch_B1.c"
 13527                           	line	262
 13528                           	global	__size_of_Sw_AdjFunc
 13529  002E                     	__size_of_Sw_AdjFunc	equ	__end_of_Sw_AdjFunc-_Sw_AdjFunc
 13530                           	
 13531  23BF                     _Sw_AdjFunc:	
 13532                           	opt	stack 7
 13533                           ; Regs used in _Sw_AdjFunc: [wreg+fsr1l-status,0+pclath+cstack]
 13534                           ;Sw_AdjFunc@sw stored from wreg
 13535  23BF  0020               	movlb 0	; select bank0
 13536  23C0  00A4               	movwf	(Sw_AdjFunc@sw)
 13537                           	line	263
 13538                           	
 13539  23C1                     l21352:	
 13540                           ;Switch_B1.c: 263: if(Sw->Flag)
 13541  23C1  086D               	movf	(_Sw),w
 13542  23C2  0086               	movwf	fsr1l
 13543  23C3  3001               	movlw 1	; select bank2/3
 13544  23C4  0087               	movwf fsr1h	
 13545                           	
 13546  23C5  1F81               	btfss	indf1,7
 13547  23C6  2BC8               	goto	u9881
 13548  23C7  2BC9               	goto	u9880
 13549  23C8                     u9881:
 13550  23C8  2BEC               	goto	l14440
 13551  23C9                     u9880:
 13552                           	line	265
 13553                           	
 13554  23C9                     l21354:	
 13555                           ;Switch_B1.c: 264: {
 13556                           ;Switch_B1.c: 265: Sw->Adj=1;
 13557  23C9  086D               	movf	(_Sw),w
 13558  23CA  3E01               	addlw	01h
 13559  23CB  0086               	movwf	fsr1l
 13560  23CC  3001               	movlw 1	; select bank2/3
 13561  23CD  0087               	movwf fsr1h	
 13562                           	
 13563  23CE  1401               	bsf	indf1,0
 13564                           	line	266
 13565                           ;Switch_B1.c: 266: Sw->Status=1;
 13566  23CF  086D               	movf	(_Sw),w
 13567  23D0  0086               	movwf	fsr1l
 13568  23D1  3001               	movlw 1	; select bank2/3
 13569  23D2  0087               	movwf fsr1h	
 13570                           	
 13571  23D3  1701               	bsf	indf1,6
 13572                           	line	267
 13573                           	
 13574  23D4                     l21356:	
 13575                           ;Switch_B1.c: 267: setRFSW_Status(sw,1);
 13576  23D4  01A2               	clrf	(?_setRFSW_Status)
 13577  23D5  1403               	bsf	status,0
 13578  23D6  0DA2               	rlf	(?_setRFSW_Status),f
 13579  23D7  0824               	movf	(Sw_AdjFunc@sw),w
 13580  23D8  31AF  2770  31A3   	fcall	_setRFSW_Status
 13581                           	line	269
 13582                           	
 13583  23DB                     l21358:	
 13584                           ;Switch_B1.c: 269: setDimmerLights_TriggerAdj(sw,1);
 13585  23DB  0020               	movlb 0	; select bank0
 13586  23DC  01A2               	clrf	(?_setDimmerLights_TriggerAdj)
 13587  23DD  1403               	bsf	status,0
 13588  23DE  0DA2               	rlf	(?_setDimmerLights_TriggerAdj),f
 13589  23DF  0824               	movf	(Sw_AdjFunc@sw),w
 13590  23E0  31A0  207C  31A3   	fcall	_setDimmerLights_TriggerAdj
 13591                           	line	270
 13592                           	
 13593  23E3                     l21360:	
 13594                           ;Switch_B1.c: 270: setDimmerLights_AdjGo(sw,1);
 13595  23E3  0020               	movlb 0	; select bank0
 13596  23E4  01A2               	clrf	(?_setDimmerLights_AdjGo)
 13597  23E5  1403               	bsf	status,0
 13598  23E6  0DA2               	rlf	(?_setDimmerLights_AdjGo),f
 13599  23E7  0824               	movf	(Sw_AdjFunc@sw),w
 13600  23E8  31A0  206B  31A3   	fcall	_setDimmerLights_AdjGo
 13601  23EB  2BEC               	goto	l14440
 13602                           	line	271
 13603                           	
 13604  23EC                     l14439:	
 13605                           	line	272
 13606                           	
 13607  23EC                     l14440:	
 13608  23EC  0008               	return
 13609                           	opt stack 0
 13610                           GLOBAL	__end_of_Sw_AdjFunc
 13611  23ED                     	__end_of_Sw_AdjFunc:
 13612 ;; =============== function _Sw_AdjFunc ends ============
 13613                           
 13614                           	signat	_Sw_AdjFunc,4216
 13615                           	global	_Sw_OnFunc
 13616                           psect	text4905,local,class=CODE,delta=2
 13617                           global __ptext4905
 13618  1AC4                     __ptext4905:
 13619                           
 13620 ;; *************** function _Sw_OnFunc *****************
 13621 ;; Defined at:
 13622 ;;		line 209 in file "G:\Program\PIC\Source_File\Switch_B1.c"
 13623 ;; Parameters:    Size  Location     Type
 13624 ;;  sw              1    wreg     unsigned char 
 13625 ;; Auto vars:     Size  Location     Type
 13626 ;;  sw              1   14[BANK0 ] unsigned char 
 13627 ;; Return value:  Size  Location     Type
 13628 ;;		None               void
 13629 ;; Registers used:
 13630 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13631 ;; Tracked objects:
 13632 ;;		On entry : 0/0
 13633 ;;		On exit  : 0/0
 13634 ;;		Unchanged: 0/0
 13635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 13636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 13637 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 13638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 13639 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 13640 ;;Total ram usage:        1 bytes
 13641 ;; Hardware stack levels used:    1
 13642 ;; Hardware stack levels required when called:    6
 13643 ;; This function calls:
 13644 ;;		_setBuz
 13645 ;;		_setRFSW_Status
 13646 ;;		_setDimmerLights_Trigger
 13647 ;;		_setDimmerLights_Switch
 13648 ;;		_setRF_DimmerLights
 13649 ;;		_setTxData
 13650 ;; This function is called by:
 13651 ;;		_setSw_Main
 13652 ;; This function uses a non-reentrant model
 13653 ;;
 13654                           psect	text4905
 13655                           	file	"G:\Program\PIC\Source_File\Switch_B1.c"
 13656                           	line	209
 13657                           	global	__size_of_Sw_OnFunc
 13658  005D                     	__size_of_Sw_OnFunc	equ	__end_of_Sw_OnFunc-_Sw_OnFunc
 13659                           	
 13660  1AC4                     _Sw_OnFunc:	
 13661                           	opt	stack 7
 13662                           ; Regs used in _Sw_OnFunc: [wreg+fsr1l-status,0+pclath+cstack]
 13663                           ;Sw_OnFunc@sw stored from wreg
 13664  1AC4  0020               	movlb 0	; select bank0
 13665  1AC5  00AE               	movwf	(Sw_OnFunc@sw)
 13666                           	line	210
 13667                           	
 13668  1AC6                     l21330:	
 13669                           ;Switch_B1.c: 210: Sw->Flag=1;
 13670  1AC6  086D               	movf	(_Sw),w
 13671  1AC7  0086               	movwf	fsr1l
 13672  1AC8  3001               	movlw 1	; select bank2/3
 13673  1AC9  0087               	movwf fsr1h	
 13674                           	
 13675  1ACA  1781               	bsf	indf1,7
 13676                           	line	211
 13677                           	
 13678  1ACB                     l21332:	
 13679                           ;Switch_B1.c: 211: setBuz(1,1,100);
 13680  1ACB  01A9               	clrf	(?_setBuz)
 13681  1ACC  1403               	bsf	status,0
 13682  1ACD  0DA9               	rlf	(?_setBuz),f
 13683  1ACE  3064               	movlw	low(064h)
 13684  1ACF  00AA               	movwf	0+(?_setBuz)+01h
 13685  1AD0  3000               	movlw	high(064h)
 13686  1AD1  00AB               	movwf	(0+(?_setBuz)+01h)+1
 13687  1AD2  3001               	movlw	(01h)
 13688  1AD3  3194  2499  319A   	fcall	_setBuz
 13689                           	line	212
 13690                           	
 13691  1AD6                     l21334:	
 13692                           ;Switch_B1.c: 212: if(!Sw->Status)
 13693  1AD6  0020               	movlb 0	; select bank0
 13694  1AD7  086D               	movf	(_Sw),w
 13695  1AD8  0086               	movwf	fsr1l
 13696  1AD9  3001               	movlw 1	; select bank2/3
 13697  1ADA  0087               	movwf fsr1h	
 13698                           	
 13699  1ADB  1B01               	btfsc	indf1,6
 13700  1ADC  2ADE               	goto	u9871
 13701  1ADD  2ADF               	goto	u9870
 13702  1ADE                     u9871:
 13703  1ADE  2B0D               	goto	l21348
 13704  1ADF                     u9870:
 13705                           	line	214
 13706                           	
 13707  1ADF                     l21336:	
 13708                           ;Switch_B1.c: 213: {
 13709                           ;Switch_B1.c: 214: Sw->Status=1;
 13710  1ADF  086D               	movf	(_Sw),w
 13711  1AE0  0086               	movwf	fsr1l
 13712  1AE1  3001               	movlw 1	; select bank2/3
 13713  1AE2  0087               	movwf fsr1h	
 13714                           	
 13715  1AE3  1701               	bsf	indf1,6
 13716                           	line	215
 13717                           	
 13718  1AE4                     l21338:	
 13719                           ;Switch_B1.c: 215: setRFSW_Status(sw,1);
 13720  1AE4  01A2               	clrf	(?_setRFSW_Status)
 13721  1AE5  1403               	bsf	status,0
 13722  1AE6  0DA2               	rlf	(?_setRFSW_Status),f
 13723  1AE7  082E               	movf	(Sw_OnFunc@sw),w
 13724  1AE8  31AF  2770  319A   	fcall	_setRFSW_Status
 13725                           	line	217
 13726                           	
 13727  1AEB                     l21340:	
 13728                           ;Switch_B1.c: 217: setDimmerLights_Trigger(sw,1);
 13729  1AEB  0020               	movlb 0	; select bank0
 13730  1AEC  01A2               	clrf	(?_setDimmerLights_Trigger)
 13731  1AED  1403               	bsf	status,0
 13732  1AEE  0DA2               	rlf	(?_setDimmerLights_Trigger),f
 13733  1AEF  082E               	movf	(Sw_OnFunc@sw),w
 13734  1AF0  31A0  2016  319A   	fcall	_setDimmerLights_Trigger
 13735                           	line	218
 13736                           	
 13737  1AF3                     l21342:	
 13738                           ;Switch_B1.c: 218: setDimmerLights_Switch(sw,1);
 13739  1AF3  0020               	movlb 0	; select bank0
 13740  1AF4  01A2               	clrf	(?_setDimmerLights_Switch)
 13741  1AF5  1403               	bsf	status,0
 13742  1AF6  0DA2               	rlf	(?_setDimmerLights_Switch),f
 13743  1AF7  082E               	movf	(Sw_OnFunc@sw),w
 13744  1AF8  31A0  2027  319A   	fcall	_setDimmerLights_Switch
 13745                           	line	220
 13746                           	
 13747  1AFB                     l21344:	
 13748                           ;Switch_B1.c: 220: setRF_DimmerLights(sw,Sw->Status);
 13749  1AFB  0020               	movlb 0	; select bank0
 13750  1AFC  086D               	movf	(_Sw),w
 13751  1AFD  0086               	movwf	fsr1l
 13752  1AFE  3001               	movlw 1	; select bank2/3
 13753  1AFF  0087               	movwf fsr1h	
 13754                           	
 13755  1B00  3000               	movlw	0
 13756  1B01  1B01               	btfsc	indf1,6
 13757  1B02  3001               	movlw	1
 13758  1B03  00A0               	movwf	(?_setRF_DimmerLights)
 13759  1B04  082E               	movf	(Sw_OnFunc@sw),w
 13760  1B05  319B  237E  319A   	fcall	_setRF_DimmerLights
 13761                           	line	221
 13762                           	
 13763  1B08                     l21346:	
 13764                           ;Switch_B1.c: 221: setTxData(1);
 13765  1B08  3001               	movlw	(01h)
 13766  1B09  318B  230E  319A   	fcall	_setTxData
 13767                           	line	222
 13768                           ;Switch_B1.c: 222: }
 13769  1B0C  2B20               	goto	l14429
 13770                           	line	223
 13771                           	
 13772  1B0D                     l14427:	
 13773                           	line	225
 13774                           	
 13775  1B0D                     l21348:	
 13776                           ;Switch_B1.c: 223: else
 13777                           ;Switch_B1.c: 224: {
 13778                           ;Switch_B1.c: 225: Sw->Status=0;
 13779  1B0D  0020               	movlb 0	; select bank0
 13780  1B0E  086D               	movf	(_Sw),w
 13781  1B0F  0086               	movwf	fsr1l
 13782  1B10  3001               	movlw 1	; select bank2/3
 13783  1B11  0087               	movwf fsr1h	
 13784                           	
 13785  1B12  1301               	bcf	indf1,6
 13786                           	line	226
 13787                           	
 13788  1B13                     l21350:	
 13789                           ;Switch_B1.c: 226: setRFSW_Status(sw,Sw->Status);
 13790  1B13  086D               	movf	(_Sw),w
 13791  1B14  0086               	movwf	fsr1l
 13792  1B15  3001               	movlw 1	; select bank2/3
 13793  1B16  0087               	movwf fsr1h	
 13794                           	
 13795  1B17  3000               	movlw	0
 13796  1B18  1B01               	btfsc	indf1,6
 13797  1B19  3001               	movlw	1
 13798  1B1A  00A2               	movwf	(?_setRFSW_Status)
 13799  1B1B  082E               	movf	(Sw_OnFunc@sw),w
 13800  1B1C  31AF  2770  319A   	fcall	_setRFSW_Status
 13801  1B1F  2B20               	goto	l14429
 13802                           	line	227
 13803                           	
 13804  1B20                     l14428:	
 13805                           	line	228
 13806                           	
 13807  1B20                     l14429:	
 13808  1B20  0008               	return
 13809                           	opt stack 0
 13810                           GLOBAL	__end_of_Sw_OnFunc
 13811  1B21                     	__end_of_Sw_OnFunc:
 13812 ;; =============== function _Sw_OnFunc ends ============
 13813                           
 13814                           	signat	_Sw_OnFunc,4216
 13815                           	global	_setSw_Initialization
 13816                           psect	text4906,local,class=CODE,delta=2
 13817                           global __ptext4906
 13818  2DD4                     __ptext4906:
 13819                           
 13820 ;; *************** function _setSw_Initialization *****************
 13821 ;; Defined at:
 13822 ;;		line 74 in file "G:\Program\PIC\Source_File\Switch_B1.c"
 13823 ;; Parameters:    Size  Location     Type
 13824 ;;  sw              1    wreg     unsigned char 
 13825 ;; Auto vars:     Size  Location     Type
 13826 ;;  sw              1    4[BANK0 ] unsigned char 
 13827 ;; Return value:  Size  Location     Type
 13828 ;;		None               void
 13829 ;; Registers used:
 13830 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13831 ;; Tracked objects:
 13832 ;;		On entry : 0/0
 13833 ;;		On exit  : 0/0
 13834 ;;		Unchanged: 0/0
 13835 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 13836 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 13837 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 13838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 13839 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 13840 ;;Total ram usage:        1 bytes
 13841 ;; Hardware stack levels used:    1
 13842 ;; Hardware stack levels required when called:    6
 13843 ;; This function calls:
 13844 ;;		_setLED
 13845 ;; This function is called by:
 13846 ;;		_Switch_Initialization
 13847 ;; This function uses a non-reentrant model
 13848 ;;
 13849                           psect	text4906
 13850                           	file	"G:\Program\PIC\Source_File\Switch_B1.c"
 13851                           	line	74
 13852                           	global	__size_of_setSw_Initialization
 13853  000A                     	__size_of_setSw_Initialization	equ	__end_of_setSw_Initialization-_setSw_Initialization
 13854                           	
 13855  2DD4                     _setSw_Initialization:	
 13856                           	opt	stack 8
 13857                           ; Regs used in _setSw_Initialization: [wreg+fsr1l-status,0+pclath+cstack]
 13858                           ;setSw_Initialization@sw stored from wreg
 13859  2DD4  0020               	movlb 0	; select bank0
 13860  2DD5  00A4               	movwf	(setSw_Initialization@sw)
 13861                           	line	75
 13862                           	
 13863  2DD6                     l21328:	
 13864                           ;Switch_B1.c: 75: setLED(sw,1);
 13865  2DD6  01A2               	clrf	(?_setLED)
 13866  2DD7  1403               	bsf	status,0
 13867  2DD8  0DA2               	rlf	(?_setLED),f
 13868  2DD9  0824               	movf	(setSw_Initialization@sw),w
 13869  2DDA  3191  21A4  31AD   	fcall	_setLED
 13870                           	line	76
 13871                           	
 13872  2DDD                     l14396:	
 13873  2DDD  0008               	return
 13874                           	opt stack 0
 13875                           GLOBAL	__end_of_setSw_Initialization
 13876  2DDE                     	__end_of_setSw_Initialization:
 13877 ;; =============== function _setSw_Initialization ends ============
 13878                           
 13879                           	signat	_setSw_Initialization,4216
 13880                           	global	_setRFSW_Control
 13881                           psect	text4907,local,class=CODE,delta=2
 13882                           global __ptext4907
 13883  15EA                     __ptext4907:
 13884                           
 13885 ;; *************** function _setRFSW_Control *****************
 13886 ;; Defined at:
 13887 ;;		line 343 in file "G:\Program\PIC\Source_File\RF_Control_B1.c"
 13888 ;; Parameters:    Size  Location     Type
 13889 ;;  sw              1    wreg     unsigned char 
 13890 ;; Auto vars:     Size  Location     Type
 13891 ;;  sw              1   16[BANK0 ] unsigned char 
 13892 ;; Return value:  Size  Location     Type
 13893 ;;		None               void
 13894 ;; Registers used:
 13895 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13896 ;; Tracked objects:
 13897 ;;		On entry : 0/0
 13898 ;;		On exit  : 0/0
 13899 ;;		Unchanged: 0/0
 13900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 13901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 13902 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 13903 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 13904 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 13905 ;;Total ram usage:        3 bytes
 13906 ;; Hardware stack levels used:    1
 13907 ;; Hardware stack levels required when called:    6
 13908 ;; This function calls:
 13909 ;;		_RfSWPointSelect
 13910 ;;		_setDelayOff_GO
 13911 ;;		_setSw_Status
 13912 ;;		_setRF_DimmerLights
 13913 ;;		_setDimmerLights_Trigger
 13914 ;;		_setDimmerLights_Switch
 13915 ;;		_setBuz
 13916 ;;		_setTxData
 13917 ;; This function is called by:
 13918 ;;		_setControl_Lights_Table
 13919 ;; This function uses a non-reentrant model
 13920 ;;
 13921                           psect	text4907
 13922                           	file	"G:\Program\PIC\Source_File\RF_Control_B1.c"
 13923                           	line	343
 13924                           	global	__size_of_setRFSW_Control
 13925  00AC                     	__size_of_setRFSW_Control	equ	__end_of_setRFSW_Control-_setRFSW_Control
 13926                           	
 13927  15EA                     _setRFSW_Control:	
 13928                           	opt	stack 5
 13929                           ; Regs used in _setRFSW_Control: [wreg+fsr1l-status,0+pclath+cstack]
 13930                           ;setRFSW_Control@sw stored from wreg
 13931  15EA  0020               	movlb 0	; select bank0
 13932  15EB  00B0               	movwf	(setRFSW_Control@sw)
 13933                           	line	344
 13934                           	
 13935  15EC                     l21288:	
 13936                           ;RF_Control_B1.c: 344: RfSWPointSelect(sw);
 13937  15EC  0830               	movf	(setRFSW_Control@sw),w
 13938  15ED  31AE  26E7  3195   	fcall	_RfSWPointSelect
 13939                           	line	345
 13940                           	
 13941  15F0                     l21290:	
 13942                           ;RF_Control_B1.c: 345: if(RF_Data[16] == 0x80)
 13943  15F0  0021               	movlb 1	; select bank1
 13944  15F1  0830               	movf	0+(_RF_Data)^080h+010h,w
 13945  15F2  3A80               	xorlw	080h&0ffh
 13946  15F3  1D03               	skipz
 13947  15F4  2DF6               	goto	u9841
 13948  15F5  2DF7               	goto	u9840
 13949  15F6                     u9841:
 13950  15F6  2E14               	goto	l21296
 13951  15F7                     u9840:
 13952                           	line	347
 13953                           	
 13954  15F7                     l21292:	
 13955                           ;RF_Control_B1.c: 346: {
 13956                           ;RF_Control_B1.c: 347: setDelayOff_GO(sw,1,RF_Data[17]);
 13957  15F7  0020               	movlb 0	; select bank0
 13958  15F8  01A3               	clrf	(?_setDelayOff_GO)
 13959  15F9  1403               	bsf	status,0
 13960  15FA  0DA3               	rlf	(?_setDelayOff_GO),f
 13961  15FB  0021               	movlb 1	; select bank1
 13962  15FC  0831               	movf	0+(_RF_Data)^080h+011h,w
 13963  15FD  0020               	movlb 0	; select bank0
 13964  15FE  00AE               	movwf	(??_setRFSW_Control+0)+0
 13965  15FF  082E               	movf	(??_setRFSW_Control+0)+0,w
 13966  1600  00A4               	movwf	0+(?_setDelayOff_GO)+01h
 13967  1601  0830               	movf	(setRFSW_Control@sw),w
 13968  1602  31A7  2774  3195   	fcall	_setDelayOff_GO
 13969                           	line	348
 13970                           	
 13971  1605                     l21294:	
 13972                           ;RF_Control_B1.c: 348: Product->Data[26+sw]=RF_Data[17];
 13973  1605  0021               	movlb 1	; select bank1
 13974  1606  0831               	movf	0+(_RF_Data)^080h+011h,w
 13975  1607  0020               	movlb 0	; select bank0
 13976  1608  00AE               	movwf	(??_setRFSW_Control+0)+0
 13977  1609  0830               	movf	(setRFSW_Control@sw),w
 13978  160A  3E1A               	addlw	01Ah
 13979  160B  076F               	addwf	(_Product),w
 13980  160C  00AF               	movwf	(??_setRFSW_Control+1)+0
 13981  160D  082F               	movf	0+(??_setRFSW_Control+1)+0,w
 13982  160E  0086               	movwf	fsr1l
 13983  160F  3001               	movlw 1	; select bank2/3
 13984  1610  0087               	movwf fsr1h	
 13985                           	
 13986  1611  082E               	movf	(??_setRFSW_Control+0)+0,w
 13987  1612  0081               	movwf	indf1
 13988  1613  2E14               	goto	l21296
 13989                           	line	349
 13990                           	
 13991  1614                     l13221:	
 13992                           	line	350
 13993                           	
 13994  1614                     l21296:	
 13995                           ;RF_Control_B1.c: 349: }
 13996                           ;RF_Control_B1.c: 350: if(RFSW->Status == 0)
 13997  1614  0021               	movlb 1	; select bank1
 13998  1615  083B               	movf	(_RFSW)^080h,w
 13999  1616  0086               	movwf	fsr1l
 14000  1617  0187               	clrf fsr1h	
 14001                           	
 14002  1618  1801               	btfsc	indf1,0
 14003  1619  2E1B               	goto	u9851
 14004  161A  2E1C               	goto	u9850
 14005  161B                     u9851:
 14006  161B  2E46               	goto	l21308
 14007  161C                     u9850:
 14008                           	line	352
 14009                           	
 14010  161C                     l21298:	
 14011                           ;RF_Control_B1.c: 351: {
 14012                           ;RF_Control_B1.c: 352: RFSW->Status=1;
 14013  161C  083B               	movf	(_RFSW)^080h,w
 14014  161D  0086               	movwf	fsr1l
 14015  161E  0187               	clrf fsr1h	
 14016                           	
 14017  161F  1401               	bsf	indf1,0
 14018                           	line	353
 14019                           	
 14020  1620                     l21300:	
 14021                           ;RF_Control_B1.c: 353: setSw_Status(sw,1);
 14022  1620  0020               	movlb 0	; select bank0
 14023  1621  01A2               	clrf	(?_setSw_Status)
 14024  1622  1403               	bsf	status,0
 14025  1623  0DA2               	rlf	(?_setSw_Status),f
 14026  1624  0830               	movf	(setRFSW_Control@sw),w
 14027  1625  31AF  2760  3195   	fcall	_setSw_Status
 14028                           	line	355
 14029                           	
 14030  1628                     l21302:	
 14031                           ;RF_Control_B1.c: 355: setRF_DimmerLights(sw,1);
 14032  1628  0020               	movlb 0	; select bank0
 14033  1629  01A0               	clrf	(?_setRF_DimmerLights)
 14034  162A  1403               	bsf	status,0
 14035  162B  0DA0               	rlf	(?_setRF_DimmerLights),f
 14036  162C  0830               	movf	(setRFSW_Control@sw),w
 14037  162D  319B  237E  3195   	fcall	_setRF_DimmerLights
 14038                           	line	356
 14039                           	
 14040  1630                     l21304:	
 14041                           ;RF_Control_B1.c: 356: setDimmerLights_Trigger(sw,1);
 14042  1630  0020               	movlb 0	; select bank0
 14043  1631  01A2               	clrf	(?_setDimmerLights_Trigger)
 14044  1632  1403               	bsf	status,0
 14045  1633  0DA2               	rlf	(?_setDimmerLights_Trigger),f
 14046  1634  0830               	movf	(setRFSW_Control@sw),w
 14047  1635  31A0  2016  3195   	fcall	_setDimmerLights_Trigger
 14048                           	line	357
 14049                           	
 14050  1638                     l21306:	
 14051                           ;RF_Control_B1.c: 357: setDimmerLights_Switch(sw,RFSW->Status);
 14052  1638  0021               	movlb 1	; select bank1
 14053  1639  083B               	movf	(_RFSW)^080h,w
 14054  163A  0086               	movwf	fsr1l
 14055  163B  0187               	clrf fsr1h	
 14056                           	
 14057  163C  3000               	movlw	0
 14058  163D  1801               	btfsc	indf1,0
 14059  163E  3001               	movlw	1
 14060  163F  0020               	movlb 0	; select bank0
 14061  1640  00A2               	movwf	(?_setDimmerLights_Switch)
 14062  1641  0830               	movf	(setRFSW_Control@sw),w
 14063  1642  31A0  2027  3195   	fcall	_setDimmerLights_Switch
 14064                           	line	358
 14065                           ;RF_Control_B1.c: 358: }
 14066  1645  2E85               	goto	l21324
 14067                           	line	359
 14068                           	
 14069  1646                     l13222:	
 14070                           	line	361
 14071                           	
 14072  1646                     l21308:	
 14073                           ;RF_Control_B1.c: 359: else
 14074                           ;RF_Control_B1.c: 360: {
 14075                           ;RF_Control_B1.c: 361: if(RF_Data[16] == 0x80)
 14076  1646  0021               	movlb 1	; select bank1
 14077  1647  0830               	movf	0+(_RF_Data)^080h+010h,w
 14078  1648  3A80               	xorlw	080h&0ffh
 14079  1649  1D03               	skipz
 14080  164A  2E4C               	goto	u9861
 14081  164B  2E4D               	goto	u9860
 14082  164C                     u9861:
 14083  164C  2E56               	goto	l21312
 14084  164D                     u9860:
 14085                           	line	363
 14086                           	
 14087  164D                     l21310:	
 14088                           ;RF_Control_B1.c: 362: {
 14089                           ;RF_Control_B1.c: 363: setRF_DimmerLights(sw,1);
 14090  164D  0020               	movlb 0	; select bank0
 14091  164E  01A0               	clrf	(?_setRF_DimmerLights)
 14092  164F  1403               	bsf	status,0
 14093  1650  0DA0               	rlf	(?_setRF_DimmerLights),f
 14094  1651  0830               	movf	(setRFSW_Control@sw),w
 14095  1652  319B  237E  3195   	fcall	_setRF_DimmerLights
 14096                           	line	364
 14097                           ;RF_Control_B1.c: 364: }
 14098  1655  2E85               	goto	l21324
 14099                           	line	365
 14100                           	
 14101  1656                     l13224:	
 14102                           	line	367
 14103                           	
 14104  1656                     l21312:	
 14105                           ;RF_Control_B1.c: 365: else
 14106                           ;RF_Control_B1.c: 366: {
 14107                           ;RF_Control_B1.c: 367: RFSW->Status=0;
 14108  1656  0021               	movlb 1	; select bank1
 14109  1657  083B               	movf	(_RFSW)^080h,w
 14110  1658  0086               	movwf	fsr1l
 14111  1659  0187               	clrf fsr1h	
 14112                           	
 14113  165A  1001               	bcf	indf1,0
 14114                           	line	368
 14115                           	
 14116  165B                     l21314:	
 14117                           ;RF_Control_B1.c: 368: setDelayOff_GO(sw,0,0);
 14118  165B  0020               	movlb 0	; select bank0
 14119  165C  01A3               	clrf	(?_setDelayOff_GO)
 14120  165D  01A4               	clrf	0+(?_setDelayOff_GO)+01h
 14121  165E  0830               	movf	(setRFSW_Control@sw),w
 14122  165F  31A7  2774  3195   	fcall	_setDelayOff_GO
 14123                           	line	369
 14124                           	
 14125  1662                     l21316:	
 14126                           ;RF_Control_B1.c: 369: setSw_Status(sw,0);
 14127  1662  0020               	movlb 0	; select bank0
 14128  1663  01A2               	clrf	(?_setSw_Status)
 14129  1664  0830               	movf	(setRFSW_Control@sw),w
 14130  1665  31AF  2760  3195   	fcall	_setSw_Status
 14131                           	line	370
 14132                           	
 14133  1668                     l21318:	
 14134                           ;RF_Control_B1.c: 370: setRF_DimmerLights(sw,0);
 14135  1668  0020               	movlb 0	; select bank0
 14136  1669  01A0               	clrf	(?_setRF_DimmerLights)
 14137  166A  0830               	movf	(setRFSW_Control@sw),w
 14138  166B  319B  237E  3195   	fcall	_setRF_DimmerLights
 14139                           	line	371
 14140                           	
 14141  166E                     l21320:	
 14142                           ;RF_Control_B1.c: 371: setDimmerLights_Trigger(sw,1);
 14143  166E  0020               	movlb 0	; select bank0
 14144  166F  01A2               	clrf	(?_setDimmerLights_Trigger)
 14145  1670  1403               	bsf	status,0
 14146  1671  0DA2               	rlf	(?_setDimmerLights_Trigger),f
 14147  1672  0830               	movf	(setRFSW_Control@sw),w
 14148  1673  31A0  2016  3195   	fcall	_setDimmerLights_Trigger
 14149                           	line	372
 14150                           	
 14151  1676                     l21322:	
 14152                           ;RF_Control_B1.c: 372: setDimmerLights_Switch(sw,RFSW->Status);
 14153  1676  0021               	movlb 1	; select bank1
 14154  1677  083B               	movf	(_RFSW)^080h,w
 14155  1678  0086               	movwf	fsr1l
 14156  1679  0187               	clrf fsr1h	
 14157                           	
 14158  167A  3000               	movlw	0
 14159  167B  1801               	btfsc	indf1,0
 14160  167C  3001               	movlw	1
 14161  167D  0020               	movlb 0	; select bank0
 14162  167E  00A2               	movwf	(?_setDimmerLights_Switch)
 14163  167F  0830               	movf	(setRFSW_Control@sw),w
 14164  1680  31A0  2027  3195   	fcall	_setDimmerLights_Switch
 14165  1683  2E85               	goto	l21324
 14166                           	line	373
 14167                           	
 14168  1684                     l13225:	
 14169  1684  2E85               	goto	l21324
 14170                           	line	374
 14171                           	
 14172  1685                     l13223:	
 14173                           	line	375
 14174                           	
 14175  1685                     l21324:	
 14176                           ;RF_Control_B1.c: 373: }
 14177                           ;RF_Control_B1.c: 374: }
 14178                           ;RF_Control_B1.c: 375: setBuz(1,1,100);
 14179  1685  0020               	movlb 0	; select bank0
 14180  1686  01A9               	clrf	(?_setBuz)
 14181  1687  1403               	bsf	status,0
 14182  1688  0DA9               	rlf	(?_setBuz),f
 14183  1689  3064               	movlw	low(064h)
 14184  168A  00AA               	movwf	0+(?_setBuz)+01h
 14185  168B  3000               	movlw	high(064h)
 14186  168C  00AB               	movwf	(0+(?_setBuz)+01h)+1
 14187  168D  3001               	movlw	(01h)
 14188  168E  3194  2499  3195   	fcall	_setBuz
 14189                           	line	376
 14190                           	
 14191  1691                     l21326:	
 14192                           ;RF_Control_B1.c: 376: setTxData(1);
 14193  1691  3001               	movlw	(01h)
 14194  1692  318B  230E  3195   	fcall	_setTxData
 14195                           	line	377
 14196                           	
 14197  1695                     l13226:	
 14198  1695  0008               	return
 14199                           	opt stack 0
 14200                           GLOBAL	__end_of_setRFSW_Control
 14201  1696                     	__end_of_setRFSW_Control:
 14202 ;; =============== function _setRFSW_Control ends ============
 14203                           
 14204                           	signat	_setRFSW_Control,4216
 14205                           	global	_setLog_Code
 14206                           psect	text4908,local,class=CODE,delta=2
 14207                           global __ptext4908
 14208  18DE                     __ptext4908:
 14209                           
 14210 ;; *************** function _setLog_Code *****************
 14211 ;; Defined at:
 14212 ;;		line 200 in file "G:\Program\PIC\Source_File\RF_Control_B1.c"
 14213 ;; Parameters:    Size  Location     Type
 14214 ;;  rf              1    wreg     unsigned char 
 14215 ;; Auto vars:     Size  Location     Type
 14216 ;;  rf              1   15[BANK0 ] unsigned char 
 14217 ;; Return value:  Size  Location     Type
 14218 ;;		None               void
 14219 ;; Registers used:
 14220 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14221 ;; Tracked objects:
 14222 ;;		On entry : 0/0
 14223 ;;		On exit  : 0/0
 14224 ;;		Unchanged: 0/0
 14225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 14226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 14227 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 14228 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 14229 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 14230 ;;Total ram usage:        2 bytes
 14231 ;; Hardware stack levels used:    1
 14232 ;; Hardware stack levels required when called:    6
 14233 ;; This function calls:
 14234 ;;		_RfPointSelect
 14235 ;;		_setBuz
 14236 ;; This function is called by:
 14237 ;;		_getRxData
 14238 ;; This function uses a non-reentrant model
 14239 ;;
 14240                           psect	text4908
 14241                           	file	"G:\Program\PIC\Source_File\RF_Control_B1.c"
 14242                           	line	200
 14243                           	global	__size_of_setLog_Code
 14244  004C                     	__size_of_setLog_Code	equ	__end_of_setLog_Code-_setLog_Code
 14245                           	
 14246  18DE                     _setLog_Code:	
 14247                           	opt	stack 6
 14248                           ; Regs used in _setLog_Code: [wreg+fsr1l-status,0+pclath+cstack]
 14249                           ;setLog_Code@rf stored from wreg
 14250  18DE  0020               	movlb 0	; select bank0
 14251  18DF  00AF               	movwf	(setLog_Code@rf)
 14252                           	line	201
 14253                           	
 14254  18E0                     l19740:	
 14255                           ;RF_Control_B1.c: 201: RfPointSelect(rf);
 14256  18E0  082F               	movf	(setLog_Code@rf),w
 14257  18E1  31AE  26A0  3198   	fcall	_RfPointSelect
 14258                           	line	202
 14259                           	
 14260  18E4                     l19742:	
 14261                           ;RF_Control_B1.c: 202: Product->Data[12]=RF_Data[12];
 14262  18E4  0021               	movlb 1	; select bank1
 14263  18E5  082C               	movf	0+(_RF_Data)^080h+0Ch,w
 14264  18E6  0020               	movlb 0	; select bank0
 14265  18E7  00AE               	movwf	(??_setLog_Code+0)+0
 14266  18E8  086F               	movf	(_Product),w
 14267  18E9  3E0C               	addlw	0Ch
 14268  18EA  0086               	movwf	fsr1l
 14269  18EB  3001               	movlw 1	; select bank2/3
 14270  18EC  0087               	movwf fsr1h	
 14271                           	
 14272  18ED  082E               	movf	(??_setLog_Code+0)+0,w
 14273  18EE  0081               	movwf	indf1
 14274                           	line	203
 14275                           	
 14276  18EF                     l19744:	
 14277                           ;RF_Control_B1.c: 203: Product->Data[13]=RF_Data[13];
 14278  18EF  0021               	movlb 1	; select bank1
 14279  18F0  082D               	movf	0+(_RF_Data)^080h+0Dh,w
 14280  18F1  0020               	movlb 0	; select bank0
 14281  18F2  00AE               	movwf	(??_setLog_Code+0)+0
 14282  18F3  086F               	movf	(_Product),w
 14283  18F4  3E0D               	addlw	0Dh
 14284  18F5  0086               	movwf	fsr1l
 14285  18F6  3001               	movlw 1	; select bank2/3
 14286  18F7  0087               	movwf fsr1h	
 14287                           	
 14288  18F8  082E               	movf	(??_setLog_Code+0)+0,w
 14289  18F9  0081               	movwf	indf1
 14290                           	line	204
 14291                           	
 14292  18FA                     l19746:	
 14293                           ;RF_Control_B1.c: 204: Product->Data[14]=RF_Data[14];
 14294  18FA  0021               	movlb 1	; select bank1
 14295  18FB  082E               	movf	0+(_RF_Data)^080h+0Eh,w
 14296  18FC  0020               	movlb 0	; select bank0
 14297  18FD  00AE               	movwf	(??_setLog_Code+0)+0
 14298  18FE  086F               	movf	(_Product),w
 14299  18FF  3E0E               	addlw	0Eh
 14300  1900  0086               	movwf	fsr1l
 14301  1901  3001               	movlw 1	; select bank2/3
 14302  1902  0087               	movwf fsr1h	
 14303                           	
 14304  1903  082E               	movf	(??_setLog_Code+0)+0,w
 14305  1904  0081               	movwf	indf1
 14306                           	line	205
 14307                           	
 14308  1905                     l19748:	
 14309                           ;RF_Control_B1.c: 205: setBuz(1,1,100);
 14310  1905  01A9               	clrf	(?_setBuz)
 14311  1906  1403               	bsf	status,0
 14312  1907  0DA9               	rlf	(?_setBuz),f
 14313  1908  3064               	movlw	low(064h)
 14314  1909  00AA               	movwf	0+(?_setBuz)+01h
 14315  190A  3000               	movlw	high(064h)
 14316  190B  00AB               	movwf	(0+(?_setBuz)+01h)+1
 14317  190C  3001               	movlw	(01h)
 14318  190D  3194  2499  3198   	fcall	_setBuz
 14319                           	line	206
 14320                           	
 14321  1910                     l19750:	
 14322                           ;RF_Control_B1.c: 206: RF->Learn=0;
 14323  1910  087B               	movf	(_RF),w
 14324  1911  0086               	movwf	fsr1l
 14325  1912  0187               	clrf fsr1h	
 14326                           	
 14327  1913  1301               	bcf	indf1,6
 14328                           	line	207
 14329                           	
 14330  1914                     l19752:	
 14331                           ;RF_Control_B1.c: 207: if(TMain->First)
 14332  1914  087D               	movf	(_TMain),w
 14333  1915  3E03               	addlw	03h
 14334  1916  0086               	movwf	fsr1l
 14335  1917  3001               	movlw 1	; select bank2/3
 14336  1918  0087               	movwf fsr1h	
 14337                           	
 14338  1919  1C81               	btfss	indf1,1
 14339  191A  291C               	goto	u7821
 14340  191B  291D               	goto	u7820
 14341  191C                     u7821:
 14342  191C  2923               	goto	l13192
 14343  191D                     u7820:
 14344                           	line	209
 14345                           	
 14346  191D                     l19754:	
 14347                           ;RF_Control_B1.c: 208: {
 14348                           ;RF_Control_B1.c: 209: Memory->LoopSave=1;
 14349  191D  087C               	movf	(_Memory),w
 14350  191E  3E22               	addlw	022h
 14351  191F  0086               	movwf	fsr1l
 14352  1920  3001               	movlw 1	; select bank2/3
 14353  1921  0087               	movwf fsr1h	
 14354                           	
 14355  1922  1501               	bsf	indf1,2
 14356                           	line	210
 14357                           	
 14358  1923                     l13192:	
 14359                           	line	211
 14360                           ;RF_Control_B1.c: 210: }
 14361                           ;RF_Control_B1.c: 211: Memory->Modify=1;
 14362  1923  087C               	movf	(_Memory),w
 14363  1924  3E22               	addlw	022h
 14364  1925  0086               	movwf	fsr1l
 14365  1926  3001               	movlw 1	; select bank2/3
 14366  1927  0087               	movwf fsr1h	
 14367                           	
 14368  1928  1401               	bsf	indf1,0
 14369                           	line	212
 14370                           	
 14371  1929                     l13193:	
 14372  1929  0008               	return
 14373                           	opt stack 0
 14374                           GLOBAL	__end_of_setLog_Code
 14375  192A                     	__end_of_setLog_Code:
 14376 ;; =============== function _setLog_Code ends ============
 14377                           
 14378                           	signat	_setLog_Code,4216
 14379                           	global	_RF_RxDisable
 14380                           psect	text4909,local,class=CODE,delta=2
 14381                           global __ptext4909
 14382  24AE                     __ptext4909:
 14383                           
 14384 ;; *************** function _RF_RxDisable *****************
 14385 ;; Defined at:
 14386 ;;		line 306 in file "G:\Program\PIC\Source_File\RF_Control_B1.c"
 14387 ;; Parameters:    Size  Location     Type
 14388 ;;  rf              1    wreg     unsigned char 
 14389 ;; Auto vars:     Size  Location     Type
 14390 ;;  rf              1    4[BANK0 ] unsigned char 
 14391 ;; Return value:  Size  Location     Type
 14392 ;;		None               void
 14393 ;; Registers used:
 14394 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14395 ;; Tracked objects:
 14396 ;;		On entry : 0/0
 14397 ;;		On exit  : 0/0
 14398 ;;		Unchanged: 0/0
 14399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 14400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 14401 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 14402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 14403 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 14404 ;;Total ram usage:        1 bytes
 14405 ;; Hardware stack levels used:    1
 14406 ;; Hardware stack levels required when called:    6
 14407 ;; This function calls:
 14408 ;;		_RfPointSelect
 14409 ;;		_CC2500_WriteCommand
 14410 ;;		_setINT_GO
 14411 ;; This function is called by:
 14412 ;;		_setRF_Main
 14413 ;;		_setRF_Enable
 14414 ;; This function uses a non-reentrant model
 14415 ;;
 14416                           psect	text4909
 14417                           	file	"G:\Program\PIC\Source_File\RF_Control_B1.c"
 14418                           	line	306
 14419                           	global	__size_of_RF_RxDisable
 14420  0034                     	__size_of_RF_RxDisable	equ	__end_of_RF_RxDisable-_RF_RxDisable
 14421                           	
 14422  24AE                     _RF_RxDisable:	
 14423                           	opt	stack 7
 14424                           ; Regs used in _RF_RxDisable: [wreg+fsr1l-status,0+pclath+cstack]
 14425                           ;RF_RxDisable@rf stored from wreg
 14426  24AE  0020               	movlb 0	; select bank0
 14427  24AF  00A4               	movwf	(RF_RxDisable@rf)
 14428                           	line	307
 14429                           	
 14430  24B0                     l21274:	
 14431                           ;RF_Control_B1.c: 307: RfPointSelect(rf);
 14432  24B0  0824               	movf	(RF_RxDisable@rf),w
 14433  24B1  31AE  26A0  31A4   	fcall	_RfPointSelect
 14434                           	line	308
 14435                           	
 14436  24B4                     l21276:	
 14437                           ;RF_Control_B1.c: 308: if(RF->RxStatus || RF->ReceiveGO)
 14438  24B4  087B               	movf	(_RF),w
 14439  24B5  0086               	movwf	fsr1l
 14440  24B6  0187               	clrf fsr1h	
 14441                           	
 14442  24B7  1981               	btfsc	indf1,3
 14443  24B8  2CBA               	goto	u9821
 14444  24B9  2CBB               	goto	u9820
 14445  24BA                     u9821:
 14446  24BA  2CC3               	goto	l21280
 14447  24BB                     u9820:
 14448                           	
 14449  24BB                     l21278:	
 14450  24BB  087B               	movf	(_RF),w
 14451  24BC  0086               	movwf	fsr1l
 14452  24BD  0187               	clrf fsr1h	
 14453                           	
 14454  24BE  1C81               	btfss	indf1,1
 14455  24BF  2CC1               	goto	u9831
 14456  24C0  2CC2               	goto	u9830
 14457  24C1                     u9831:
 14458  24C1  2CE1               	goto	l13214
 14459  24C2                     u9830:
 14460  24C2  2CC3               	goto	l21280
 14461                           	
 14462  24C3                     l13213:	
 14463                           	line	310
 14464                           	
 14465  24C3                     l21280:	
 14466                           ;RF_Control_B1.c: 309: {
 14467                           ;RF_Control_B1.c: 310: RF->RxStatus=0;
 14468  24C3  087B               	movf	(_RF),w
 14469  24C4  0086               	movwf	fsr1l
 14470  24C5  0187               	clrf fsr1h	
 14471                           	
 14472  24C6  1181               	bcf	indf1,3
 14473                           	line	311
 14474                           ;RF_Control_B1.c: 311: RF->ReceiveGO=0;
 14475  24C7  087B               	movf	(_RF),w
 14476  24C8  0086               	movwf	fsr1l
 14477  24C9  0187               	clrf fsr1h	
 14478                           	
 14479  24CA  1081               	bcf	indf1,1
 14480                           	line	312
 14481                           ;RF_Control_B1.c: 312: RF->DebounceTime=0;
 14482  24CB  087B               	movf	(_RF),w
 14483  24CC  3E01               	addlw	01h
 14484  24CD  0086               	movwf	fsr1l
 14485  24CE  0187               	clrf fsr1h	
 14486                           	
 14487  24CF  0181               	clrf	indf1
 14488                           	line	313
 14489                           ;RF_Control_B1.c: 313: RF->Debounce=0;
 14490  24D0  087B               	movf	(_RF),w
 14491  24D1  0086               	movwf	fsr1l
 14492  24D2  0187               	clrf fsr1h	
 14493                           	
 14494  24D3  1281               	bcf	indf1,5
 14495                           	line	314
 14496                           	
 14497  24D4                     l21282:	
 14498                           ;RF_Control_B1.c: 314: CC2500_WriteCommand(0x36);
 14499  24D4  3036               	movlw	(036h)
 14500  24D5  31A1  2137  31A4   	fcall	_CC2500_WriteCommand
 14501                           	line	315
 14502                           	
 14503  24D8                     l21284:	
 14504                           ;RF_Control_B1.c: 315: CC2500_WriteCommand(0x3A);
 14505  24D8  303A               	movlw	(03Ah)
 14506  24D9  31A1  2137  31A4   	fcall	_CC2500_WriteCommand
 14507                           	line	316
 14508                           	
 14509  24DC                     l21286:	
 14510                           ;RF_Control_B1.c: 316: setINT_GO(0);
 14511  24DC  3000               	movlw	(0)
 14512  24DD  31AD  25CA  31A4   	fcall	_setINT_GO
 14513  24E0  2CE1               	goto	l13214
 14514                           	line	317
 14515                           	
 14516  24E1                     l13211:	
 14517                           	line	318
 14518                           	
 14519  24E1                     l13214:	
 14520  24E1  0008               	return
 14521                           	opt stack 0
 14522                           GLOBAL	__end_of_RF_RxDisable
 14523  24E2                     	__end_of_RF_RxDisable:
 14524 ;; =============== function _RF_RxDisable ends ============
 14525                           
 14526                           	signat	_RF_RxDisable,4216
 14527                           	global	_Flash_Memory_Erasing
 14528                           psect	text4910,local,class=CODE,delta=2
 14529                           global __ptext4910
 14530  2E40                     __ptext4910:
 14531                           
 14532 ;; *************** function _Flash_Memory_Erasing *****************
 14533 ;; Defined at:
 14534 ;;		line 453 in file "G:\Program\PIC\Source_File\MCU_16f1518_B1.c"
 14535 ;; Parameters:    Size  Location     Type
 14536 ;;		None
 14537 ;; Auto vars:     Size  Location     Type
 14538 ;;		None
 14539 ;; Return value:  Size  Location     Type
 14540 ;;		None               void
 14541 ;; Registers used:
 14542 ;;		wreg, status,2, status,0, pclath, cstack
 14543 ;; Tracked objects:
 14544 ;;		On entry : 0/0
 14545 ;;		On exit  : 0/0
 14546 ;;		Unchanged: 0/0
 14547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 14548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 14549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 14550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 14551 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 14552 ;;Total ram usage:        0 bytes
 14553 ;; Hardware stack levels used:    1
 14554 ;; Hardware stack levels required when called:    5
 14555 ;; This function calls:
 14556 ;;		_Flash_Memory_Unlock
 14557 ;; This function is called by:
 14558 ;;		_Flash_Memory_Modify
 14559 ;; This function uses a non-reentrant model
 14560 ;;
 14561                           psect	text4910
 14562                           	file	"G:\Program\PIC\Source_File\MCU_16f1518_B1.c"
 14563                           	line	453
 14564                           	global	__size_of_Flash_Memory_Erasing
 14565  000D                     	__size_of_Flash_Memory_Erasing	equ	__end_of_Flash_Memory_Erasing-_Flash_Memory_Erasing
 14566                           	
 14567  2E40                     _Flash_Memory_Erasing:	
 14568                           	opt	stack 8
 14569                           ; Regs used in _Flash_Memory_Erasing: [wreg+status,2+status,0+pclath+cstack]
 14570                           	line	454
 14571                           	
 14572  2E40                     l21260:	
 14573                           ;MCU_16f1518_B1.c: 454: CFGS=0;
 14574  2E40  0023               	movlb 3	; select bank3
 14575  2E41  1315               	bcf	(3246/8)^0180h,(3246)&7
 14576                           	line	455
 14577                           	
 14578  2E42                     l21262:	
 14579                           ;MCU_16f1518_B1.c: 455: PMADRH=0x30;
 14580  2E42  3030               	movlw	(030h)
 14581  2E43  0092               	movwf	(402)^0180h	;volatile
 14582                           	line	456
 14583                           	
 14584  2E44                     l21264:	
 14585                           ;MCU_16f1518_B1.c: 456: PMADRL=0x00;
 14586  2E44  0191               	clrf	(401)^0180h	;volatile
 14587                           	line	457
 14588                           	
 14589  2E45                     l21266:	
 14590                           ;MCU_16f1518_B1.c: 457: FREE=1;
 14591  2E45  1615               	bsf	(3244/8)^0180h,(3244)&7
 14592                           	line	458
 14593                           	
 14594  2E46                     l21268:	
 14595                           ;MCU_16f1518_B1.c: 458: WREN=1;
 14596  2E46  1515               	bsf	(3242/8)^0180h,(3242)&7
 14597                           	line	459
 14598                           	
 14599  2E47                     l21270:	
 14600                           ;MCU_16f1518_B1.c: 459: Flash_Memory_Unlock();
 14601  2E47  31AD  25B8  31AE   	fcall	_Flash_Memory_Unlock
 14602                           	line	460
 14603                           	
 14604  2E4A                     l21272:	
 14605                           ;MCU_16f1518_B1.c: 460: WREN=0;
 14606  2E4A  0023               	movlb 3	; select bank3
 14607  2E4B  1115               	bcf	(3242/8)^0180h,(3242)&7
 14608                           	line	461
 14609                           	
 14610  2E4C                     l8418:	
 14611  2E4C  0008               	return
 14612                           	opt stack 0
 14613                           GLOBAL	__end_of_Flash_Memory_Erasing
 14614  2E4D                     	__end_of_Flash_Memory_Erasing:
 14615 ;; =============== function _Flash_Memory_Erasing ends ============
 14616                           
 14617                           	signat	_Flash_Memory_Erasing,88
 14618                           	global	_Flash_Memory_Write
 14619                           psect	text4911,local,class=CODE,delta=2
 14620                           global __ptext4911
 14621  24E2                     __ptext4911:
 14622                           
 14623 ;; *************** function _Flash_Memory_Write *****************
 14624 ;; Defined at:
 14625 ;;		line 433 in file "G:\Program\PIC\Source_File\MCU_16f1518_B1.c"
 14626 ;; Parameters:    Size  Location     Type
 14627 ;;		None
 14628 ;; Auto vars:     Size  Location     Type
 14629 ;;  i               1    1[BANK0 ] unsigned char 
 14630 ;; Return value:  Size  Location     Type
 14631 ;;		None               void
 14632 ;; Registers used:
 14633 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14634 ;; Tracked objects:
 14635 ;;		On entry : 0/0
 14636 ;;		On exit  : 0/0
 14637 ;;		Unchanged: 0/0
 14638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 14639 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 14640 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 14641 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 14642 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 14643 ;;Total ram usage:        2 bytes
 14644 ;; Hardware stack levels used:    1
 14645 ;; Hardware stack levels required when called:    5
 14646 ;; This function calls:
 14647 ;;		_Flash_Memory_Unlock
 14648 ;; This function is called by:
 14649 ;;		_Flash_Memory_Initialization
 14650 ;;		_Flash_Memory_Modify
 14651 ;; This function uses a non-reentrant model
 14652 ;;
 14653                           psect	text4911
 14654                           	file	"G:\Program\PIC\Source_File\MCU_16f1518_B1.c"
 14655                           	line	433
 14656                           	global	__size_of_Flash_Memory_Write
 14657  0036                     	__size_of_Flash_Memory_Write	equ	__end_of_Flash_Memory_Write-_Flash_Memory_Write
 14658                           	
 14659  24E2                     _Flash_Memory_Write:	
 14660                           	opt	stack 8
 14661                           ; Regs used in _Flash_Memory_Write: [wreg+fsr1l-status,0+pclath+cstack]
 14662                           	line	435
 14663                           	
 14664  24E2                     l21228:	
 14665                           ;MCU_16f1518_B1.c: 434: char i;
 14666                           ;MCU_16f1518_B1.c: 435: CFGS=0;
 14667  24E2  0023               	movlb 3	; select bank3
 14668  24E3  1315               	bcf	(3246/8)^0180h,(3246)&7
 14669                           	line	436
 14670                           	
 14671  24E4                     l21230:	
 14672                           ;MCU_16f1518_B1.c: 436: PMADRH=0x30;
 14673  24E4  3030               	movlw	(030h)
 14674  24E5  0092               	movwf	(402)^0180h	;volatile
 14675                           	line	437
 14676                           	
 14677  24E6                     l21232:	
 14678                           ;MCU_16f1518_B1.c: 437: PMDATH=0;
 14679  24E6  0194               	clrf	(404)^0180h	;volatile
 14680                           	line	438
 14681                           	
 14682  24E7                     l21234:	
 14683                           ;MCU_16f1518_B1.c: 438: FREE=0;
 14684  24E7  1215               	bcf	(3244/8)^0180h,(3244)&7
 14685                           	line	439
 14686                           	
 14687  24E8                     l21236:	
 14688                           ;MCU_16f1518_B1.c: 439: LWLO=1;
 14689  24E8  1695               	bsf	(3245/8)^0180h,(3245)&7
 14690                           	line	440
 14691                           	
 14692  24E9                     l21238:	
 14693                           ;MCU_16f1518_B1.c: 440: WREN=1;
 14694  24E9  1515               	bsf	(3242/8)^0180h,(3242)&7
 14695                           	line	441
 14696                           	
 14697  24EA                     l21240:	
 14698                           ;MCU_16f1518_B1.c: 441: for(i=0 ; i<32 ; i++)
 14699  24EA  0020               	movlb 0	; select bank0
 14700  24EB  01A1               	clrf	(Flash_Memory_Write@i)
 14701                           	
 14702  24EC                     l21242:	
 14703  24EC  3020               	movlw	(020h)
 14704  24ED  0221               	subwf	(Flash_Memory_Write@i),w
 14705  24EE  1C03               	skipc
 14706  24EF  2CF1               	goto	u9801
 14707  24F0  2CF2               	goto	u9800
 14708  24F1                     u9801:
 14709  24F1  2CF4               	goto	l21246
 14710  24F2                     u9800:
 14711  24F2  2D10               	goto	l8414
 14712                           	
 14713  24F3                     l21244:	
 14714  24F3  2D10               	goto	l8414
 14715                           	line	442
 14716                           	
 14717  24F4                     l8413:	
 14718                           	line	443
 14719                           	
 14720  24F4                     l21246:	
 14721                           ;MCU_16f1518_B1.c: 442: {
 14722                           ;MCU_16f1518_B1.c: 443: PMADRL=i;
 14723  24F4  0821               	movf	(Flash_Memory_Write@i),w
 14724  24F5  0023               	movlb 3	; select bank3
 14725  24F6  0091               	movwf	(401)^0180h	;volatile
 14726                           	line	444
 14727                           	
 14728  24F7                     l21248:	
 14729                           ;MCU_16f1518_B1.c: 444: PMDATL=Memory->Data[i];
 14730  24F7  0020               	movlb 0	; select bank0
 14731  24F8  0821               	movf	(Flash_Memory_Write@i),w
 14732  24F9  077C               	addwf	(_Memory),w
 14733  24FA  00A0               	movwf	(??_Flash_Memory_Write+0)+0
 14734  24FB  0820               	movf	0+(??_Flash_Memory_Write+0)+0,w
 14735  24FC  0086               	movwf	fsr1l
 14736  24FD  3001               	movlw 1	; select bank2/3
 14737  24FE  0087               	movwf fsr1h	
 14738                           	
 14739  24FF  0801               	movf	indf1,w
 14740  2500  0023               	movlb 3	; select bank3
 14741  2501  0093               	movwf	(403)^0180h	;volatile
 14742                           	line	445
 14743                           	
 14744  2502                     l21250:	
 14745                           ;MCU_16f1518_B1.c: 445: Flash_Memory_Unlock();
 14746  2502  31AD  25B8  31A4   	fcall	_Flash_Memory_Unlock
 14747                           	line	441
 14748                           	
 14749  2505                     l21252:	
 14750  2505  3001               	movlw	(01h)
 14751  2506  0020               	movlb 0	; select bank0
 14752  2507  00A0               	movwf	(??_Flash_Memory_Write+0)+0
 14753  2508  0820               	movf	(??_Flash_Memory_Write+0)+0,w
 14754  2509  07A1               	addwf	(Flash_Memory_Write@i),f
 14755                           	
 14756  250A                     l21254:	
 14757  250A  3020               	movlw	(020h)
 14758  250B  0221               	subwf	(Flash_Memory_Write@i),w
 14759  250C  1C03               	skipc
 14760  250D  2D0F               	goto	u9811
 14761  250E  2D10               	goto	u9810
 14762  250F                     u9811:
 14763  250F  2CF4               	goto	l21246
 14764  2510                     u9810:
 14765                           	
 14766  2510                     l8414:	
 14767                           	line	447
 14768                           ;MCU_16f1518_B1.c: 446: }
 14769                           ;MCU_16f1518_B1.c: 447: LWLO=0;
 14770  2510  0023               	movlb 3	; select bank3
 14771  2511  1295               	bcf	(3245/8)^0180h,(3245)&7
 14772                           	line	448
 14773                           	
 14774  2512                     l21256:	
 14775                           ;MCU_16f1518_B1.c: 448: Flash_Memory_Unlock();
 14776  2512  31AD  25B8  31A4   	fcall	_Flash_Memory_Unlock
 14777                           	line	449
 14778                           	
 14779  2515                     l21258:	
 14780                           ;MCU_16f1518_B1.c: 449: WREN=0;
 14781  2515  0023               	movlb 3	; select bank3
 14782  2516  1115               	bcf	(3242/8)^0180h,(3242)&7
 14783                           	line	450
 14784                           	
 14785  2517                     l8415:	
 14786  2517  0008               	return
 14787                           	opt stack 0
 14788                           GLOBAL	__end_of_Flash_Memory_Write
 14789  2518                     	__end_of_Flash_Memory_Write:
 14790 ;; =============== function _Flash_Memory_Write ends ============
 14791                           
 14792                           	signat	_Flash_Memory_Write,88
 14793                           	global	_PowerFault_Initialization
 14794                           psect	text4912,local,class=CODE,delta=2
 14795                           global __ptext4912
 14796  2D56                     __ptext4912:
 14797                           
 14798 ;; *************** function _PowerFault_Initialization *****************
 14799 ;; Defined at:
 14800 ;;		line 16 in file "G:\Program\PIC\Source_File\PowerFault_B1.c"
 14801 ;; Parameters:    Size  Location     Type
 14802 ;;		None
 14803 ;; Auto vars:     Size  Location     Type
 14804 ;;		None
 14805 ;; Return value:  Size  Location     Type
 14806 ;;		None               void
 14807 ;; Registers used:
 14808 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14809 ;; Tracked objects:
 14810 ;;		On entry : 0/0
 14811 ;;		On exit  : 0/0
 14812 ;;		Unchanged: 0/0
 14813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 14814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 14815 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 14816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 14817 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 14818 ;;Total ram usage:        0 bytes
 14819 ;; Hardware stack levels used:    1
 14820 ;; Hardware stack levels required when called:    6
 14821 ;; This function calls:
 14822 ;;		_setPowerFault_Initialization
 14823 ;; This function is called by:
 14824 ;;		_main
 14825 ;; This function uses a non-reentrant model
 14826 ;;
 14827                           psect	text4912
 14828                           	file	"G:\Program\PIC\Source_File\PowerFault_B1.c"
 14829                           	line	16
 14830                           	global	__size_of_PowerFault_Initialization
 14831  0005                     	__size_of_PowerFault_Initialization	equ	__end_of_PowerFault_Initialization-_PowerFault_
                                 Initialization
 14832                           	
 14833  2D56                     _PowerFault_Initialization:	
 14834                           	opt	stack 9
 14835                           ; Regs used in _PowerFault_Initialization: [wreg+fsr1l-status,0+pclath+cstack]
 14836                           	line	18
 14837                           	
 14838  2D56                     l21226:	
 14839                           ;PowerFault_B1.c: 18: setPowerFault_Initialization(1);
 14840  2D56  3001               	movlw	(01h)
 14841  2D57  31A0  2006  31AD   	fcall	_setPowerFault_Initialization
 14842                           	line	20
 14843                           	
 14844  2D5A                     l11942:	
 14845  2D5A  0008               	return
 14846                           	opt stack 0
 14847                           GLOBAL	__end_of_PowerFault_Initialization
 14848  2D5B                     	__end_of_PowerFault_Initialization:
 14849 ;; =============== function _PowerFault_Initialization ends ============
 14850                           
 14851                           	signat	_PowerFault_Initialization,88
 14852                           	global	_Load_Initialization
 14853                           psect	text4913,local,class=CODE,delta=2
 14854                           global __ptext4913
 14855  2D51                     __ptext4913:
 14856                           
 14857 ;; *************** function _Load_Initialization *****************
 14858 ;; Defined at:
 14859 ;;		line 18 in file "G:\Program\PIC\Source_File\OverLoad_B1.c"
 14860 ;; Parameters:    Size  Location     Type
 14861 ;;		None
 14862 ;; Auto vars:     Size  Location     Type
 14863 ;;		None
 14864 ;; Return value:  Size  Location     Type
 14865 ;;		None               void
 14866 ;; Registers used:
 14867 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14868 ;; Tracked objects:
 14869 ;;		On entry : 0/0
 14870 ;;		On exit  : 0/0
 14871 ;;		Unchanged: 0/0
 14872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 14873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 14874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 14875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 14876 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 14877 ;;Total ram usage:        0 bytes
 14878 ;; Hardware stack levels used:    1
 14879 ;; Hardware stack levels required when called:    6
 14880 ;; This function calls:
 14881 ;;		_setLoad_Initialization
 14882 ;; This function is called by:
 14883 ;;		_main
 14884 ;; This function uses a non-reentrant model
 14885 ;;
 14886                           psect	text4913
 14887                           	file	"G:\Program\PIC\Source_File\OverLoad_B1.c"
 14888                           	line	18
 14889                           	global	__size_of_Load_Initialization
 14890  0005                     	__size_of_Load_Initialization	equ	__end_of_Load_Initialization-_Load_Initialization
 14891                           	
 14892  2D51                     _Load_Initialization:	
 14893                           	opt	stack 9
 14894                           ; Regs used in _Load_Initialization: [wreg+fsr1l-status,0+pclath+cstack]
 14895                           	line	20
 14896                           	
 14897  2D51                     l21224:	
 14898                           ;OverLoad_B1.c: 20: setLoad_Initialization(1);
 14899  2D51  3001               	movlw	(01h)
 14900  2D52  31A0  208D  31AD   	fcall	_setLoad_Initialization
 14901                           	line	22
 14902                           	
 14903  2D55                     l9553:	
 14904  2D55  0008               	return
 14905                           	opt stack 0
 14906                           GLOBAL	__end_of_Load_Initialization
 14907  2D56                     	__end_of_Load_Initialization:
 14908 ;; =============== function _Load_Initialization ends ============
 14909                           
 14910                           	signat	_Load_Initialization,88
 14911                           	global	_Temp_Initialization
 14912                           psect	text4914,local,class=CODE,delta=2
 14913                           global __ptext4914
 14914  2D4C                     __ptext4914:
 14915                           
 14916 ;; *************** function _Temp_Initialization *****************
 14917 ;; Defined at:
 14918 ;;		line 23 in file "G:\Program\PIC\Source_File\OverTemperature_B1.c"
 14919 ;; Parameters:    Size  Location     Type
 14920 ;;		None
 14921 ;; Auto vars:     Size  Location     Type
 14922 ;;		None
 14923 ;; Return value:  Size  Location     Type
 14924 ;;		None               void
 14925 ;; Registers used:
 14926 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14927 ;; Tracked objects:
 14928 ;;		On entry : 0/0
 14929 ;;		On exit  : 0/0
 14930 ;;		Unchanged: 0/0
 14931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 14932 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 14933 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 14934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 14935 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 14936 ;;Total ram usage:        0 bytes
 14937 ;; Hardware stack levels used:    1
 14938 ;; Hardware stack levels required when called:    6
 14939 ;; This function calls:
 14940 ;;		_setTemp_Initialization
 14941 ;; This function is called by:
 14942 ;;		_main
 14943 ;; This function uses a non-reentrant model
 14944 ;;
 14945                           psect	text4914
 14946                           	file	"G:\Program\PIC\Source_File\OverTemperature_B1.c"
 14947                           	line	23
 14948                           	global	__size_of_Temp_Initialization
 14949  0005                     	__size_of_Temp_Initialization	equ	__end_of_Temp_Initialization-_Temp_Initialization
 14950                           	
 14951  2D4C                     _Temp_Initialization:	
 14952                           	opt	stack 9
 14953                           ; Regs used in _Temp_Initialization: [wreg+fsr1l-status,0+pclath+cstack]
 14954                           	line	25
 14955                           	
 14956  2D4C                     l21222:	
 14957                           ;OverTemperature_B1.c: 25: setTemp_Initialization(1);
 14958  2D4C  3001               	movlw	(01h)
 14959  2D4D  31AE  2619  31AD   	fcall	_setTemp_Initialization
 14960                           	line	27
 14961                           	
 14962  2D50                     l10774:	
 14963  2D50  0008               	return
 14964                           	opt stack 0
 14965                           GLOBAL	__end_of_Temp_Initialization
 14966  2D51                     	__end_of_Temp_Initialization:
 14967 ;; =============== function _Temp_Initialization ends ============
 14968                           
 14969                           	signat	_Temp_Initialization,88
 14970                           	global	_LED_Main
 14971                           psect	text4915,local,class=CODE,delta=2
 14972                           global __ptext4915
 14973  2E33                     __ptext4915:
 14974                           
 14975 ;; *************** function _LED_Main *****************
 14976 ;; Defined at:
 14977 ;;		line 52 in file "G:\Program\PIC\Source_File\LED_B1.c"
 14978 ;; Parameters:    Size  Location     Type
 14979 ;;		None
 14980 ;; Auto vars:     Size  Location     Type
 14981 ;;		None
 14982 ;; Return value:  Size  Location     Type
 14983 ;;		None               void
 14984 ;; Registers used:
 14985 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14986 ;; Tracked objects:
 14987 ;;		On entry : 0/0
 14988 ;;		On exit  : 0/0
 14989 ;;		Unchanged: 0/0
 14990 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 14991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 14992 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 14993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 14994 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 14995 ;;Total ram usage:        0 bytes
 14996 ;; Hardware stack levels used:    1
 14997 ;; Hardware stack levels required when called:    6
 14998 ;; This function calls:
 14999 ;;		_setLED_Main
 15000 ;; This function is called by:
 15001 ;;		_main
 15002 ;; This function uses a non-reentrant model
 15003 ;;
 15004                           psect	text4915
 15005                           	file	"G:\Program\PIC\Source_File\LED_B1.c"
 15006                           	line	52
 15007                           	global	__size_of_LED_Main
 15008  000D                     	__size_of_LED_Main	equ	__end_of_LED_Main-_LED_Main
 15009                           	
 15010  2E33                     _LED_Main:	
 15011                           	opt	stack 9
 15012                           ; Regs used in _LED_Main: [wreg+fsr1l-status,0+pclath+cstack]
 15013                           	line	54
 15014                           	
 15015  2E33                     l21220:	
 15016                           ;LED_B1.c: 54: setLED_Main(1);
 15017  2E33  3001               	movlw	(01h)
 15018  2E34  3199  212A  31AE   	fcall	_setLED_Main
 15019                           	line	57
 15020                           ;LED_B1.c: 57: setLED_Main(2);
 15021  2E37  3002               	movlw	(02h)
 15022  2E38  3199  212A  31AE   	fcall	_setLED_Main
 15023                           	line	63
 15024                           ;LED_B1.c: 63: setLED_Main(99);
 15025  2E3B  3063               	movlw	(063h)
 15026  2E3C  3199  212A  31AE   	fcall	_setLED_Main
 15027                           	line	65
 15028                           	
 15029  2E3F                     l5940:	
 15030  2E3F  0008               	return
 15031                           	opt stack 0
 15032                           GLOBAL	__end_of_LED_Main
 15033  2E40                     	__end_of_LED_Main:
 15034 ;; =============== function _LED_Main ends ============
 15035                           
 15036                           	signat	_LED_Main,88
 15037                           	global	_setLED_Initialization
 15038                           psect	text4916,local,class=CODE,delta=2
 15039                           global __ptext4916
 15040  20C2                     __ptext4916:
 15041                           
 15042 ;; *************** function _setLED_Initialization *****************
 15043 ;; Defined at:
 15044 ;;		line 68 in file "G:\Program\PIC\Source_File\LED_B1.c"
 15045 ;; Parameters:    Size  Location     Type
 15046 ;;  led             1    wreg     unsigned char 
 15047 ;; Auto vars:     Size  Location     Type
 15048 ;;  led             1    4[BANK0 ] unsigned char 
 15049 ;; Return value:  Size  Location     Type
 15050 ;;		None               void
 15051 ;; Registers used:
 15052 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15053 ;; Tracked objects:
 15054 ;;		On entry : 0/0
 15055 ;;		On exit  : 0/0
 15056 ;;		Unchanged: 0/0
 15057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 15058 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 15059 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 15060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 15061 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 15062 ;;Total ram usage:        1 bytes
 15063 ;; Hardware stack levels used:    1
 15064 ;; Hardware stack levels required when called:    6
 15065 ;; This function calls:
 15066 ;;		_LedPointSelect
 15067 ;;		_setLED
 15068 ;; This function is called by:
 15069 ;;		_LED_Initialization
 15070 ;; This function uses a non-reentrant model
 15071 ;;
 15072                           psect	text4916
 15073                           	file	"G:\Program\PIC\Source_File\LED_B1.c"
 15074                           	line	68
 15075                           	global	__size_of_setLED_Initialization
 15076  0012                     	__size_of_setLED_Initialization	equ	__end_of_setLED_Initialization-_setLED_Initializati
                                 on
 15077                           	
 15078  20C2                     _setLED_Initialization:	
 15079                           	opt	stack 8
 15080                           ; Regs used in _setLED_Initialization: [wreg+fsr1l-status,0+pclath+cstack]
 15081                           ;setLED_Initialization@led stored from wreg
 15082  20C2  0020               	movlb 0	; select bank0
 15083  20C3  00A4               	movwf	(setLED_Initialization@led)
 15084                           	line	69
 15085                           	
 15086  20C4                     l21214:	
 15087                           ;LED_B1.c: 69: LedPointSelect(led);
 15088  20C4  0824               	movf	(setLED_Initialization@led),w
 15089  20C5  3198  2067  31A0   	fcall	_LedPointSelect
 15090                           	line	70
 15091                           	
 15092  20C8                     l21216:	
 15093                           ;LED_B1.c: 70: LED->Enable=1;
 15094  20C8  0021               	movlb 1	; select bank1
 15095  20C9  083A               	movf	(_LED)^080h,w
 15096  20CA  0086               	movwf	fsr1l
 15097  20CB  0187               	clrf fsr1h	
 15098                           	
 15099  20CC  1401               	bsf	indf1,0
 15100                           	line	71
 15101                           	
 15102  20CD                     l21218:	
 15103                           ;LED_B1.c: 71: setLED(led,0);
 15104  20CD  0020               	movlb 0	; select bank0
 15105  20CE  01A2               	clrf	(?_setLED)
 15106  20CF  0824               	movf	(setLED_Initialization@led),w
 15107  20D0  3191  21A4  31A0   	fcall	_setLED
 15108                           	line	72
 15109                           	
 15110  20D3                     l5943:	
 15111  20D3  0008               	return
 15112                           	opt stack 0
 15113                           GLOBAL	__end_of_setLED_Initialization
 15114  20D4                     	__end_of_setLED_Initialization:
 15115 ;; =============== function _setLED_Initialization ends ============
 15116                           
 15117                           	signat	_setLED_Initialization,4216
 15118                           	global	_setPercentValue
 15119                           psect	text4917,local,class=CODE,delta=2
 15120                           global __ptext4917
 15121  2393                     __ptext4917:
 15122                           
 15123 ;; *************** function _setPercentValue *****************
 15124 ;; Defined at:
 15125 ;;		line 491 in file "G:\Program\PIC\Source_File\Dimmer_B1.c"
 15126 ;; Parameters:    Size  Location     Type
 15127 ;;  value           1    wreg     unsigned char 
 15128 ;; Auto vars:     Size  Location     Type
 15129 ;;  value           1   44[BANK0 ] unsigned char 
 15130 ;; Return value:  Size  Location     Type
 15131 ;;                  1    wreg      unsigned char 
 15132 ;; Registers used:
 15133 ;;		wreg, status,2, status,0, pclath, cstack
 15134 ;; Tracked objects:
 15135 ;;		On entry : 0/0
 15136 ;;		On exit  : 0/0
 15137 ;;		Unchanged: 0/0
 15138 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 15139 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 15140 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 15141 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 15142 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 15143 ;;Total ram usage:        1 bytes
 15144 ;; Hardware stack levels used:    1
 15145 ;; Hardware stack levels required when called:    6
 15146 ;; This function calls:
 15147 ;;		___awtoft
 15148 ;;		___ftdiv
 15149 ;;		___fttol
 15150 ;; This function is called by:
 15151 ;;		_setDimmerLights_Adj
 15152 ;;		_Flash_Memory_Initialization
 15153 ;; This function uses a non-reentrant model
 15154 ;;
 15155                           psect	text4917
 15156                           	file	"G:\Program\PIC\Source_File\Dimmer_B1.c"
 15157                           	line	491
 15158                           	global	__size_of_setPercentValue
 15159  002C                     	__size_of_setPercentValue	equ	__end_of_setPercentValue-_setPercentValue
 15160                           	
 15161  2393                     _setPercentValue:	
 15162                           	opt	stack 6
 15163                           ; Regs used in _setPercentValue: [wreg+status,2+status,0+pclath+cstack]
 15164                           ;setPercentValue@value stored from wreg
 15165  2393  0020               	movlb 0	; select bank0
 15166  2394  00CC               	movwf	(setPercentValue@value)
 15167                           	line	492
 15168                           	
 15169  2395                     l21210:	
 15170                           ;Dimmer_B1.c: 492: return (100-(char)((value-37)/0.83));
 15171  2395  084C               	movf	(setPercentValue@value),w
 15172  2396  3EDB               	addlw	low(-37)
 15173  2397  00B6               	movwf	(?___awtoft)
 15174  2398  30FF               	movlw	high(-37)
 15175  2399  1803               	skipnc
 15176  239A  3000               	movlw	(high(-37)+1)&0ffh
 15177  239B  00B7               	movwf	((?___awtoft))+1
 15178  239C  31A3  2340  31A3   	fcall	___awtoft
 15179  239F  0020               	movlb 0	; select bank0
 15180  23A0  0836               	movf	(0+(?___awtoft)),w
 15181  23A1  00BF               	movwf	0+(?___ftdiv)+03h
 15182  23A2  0837               	movf	(1+(?___awtoft)),w
 15183  23A3  00C0               	movwf	1+(?___ftdiv)+03h
 15184  23A4  0838               	movf	(2+(?___awtoft)),w
 15185  23A5  00C1               	movwf	2+(?___ftdiv)+03h
 15186  23A6  307B               	movlw	0x7b
 15187  23A7  00BC               	movwf	(?___ftdiv)
 15188  23A8  3054               	movlw	0x54
 15189  23A9  00BD               	movwf	(?___ftdiv+1)
 15190  23AA  303F               	movlw	0x3f
 15191  23AB  00BE               	movwf	(?___ftdiv+2)
 15192  23AC  3197  2748  31A3   	fcall	___ftdiv
 15193  23AF  0020               	movlb 0	; select bank0
 15194  23B0  083C               	movf	(0+(?___ftdiv)),w
 15195  23B1  00A8               	movwf	(?___fttol)
 15196  23B2  083D               	movf	(1+(?___ftdiv)),w
 15197  23B3  00A9               	movwf	(?___fttol+1)
 15198  23B4  083E               	movf	(2+(?___ftdiv)),w
 15199  23B5  00AA               	movwf	(?___fttol+2)
 15200  23B6  3192  22B2  31A3   	fcall	___fttol
 15201  23B9  0020               	movlb 0	; select bank0
 15202  23BA  0328               	decf	0+(((0+(?___fttol)))),w
 15203  23BB  3AFF               	xorlw	0ffh
 15204  23BC  3E64               	addlw	064h
 15205  23BD  2BBE               	goto	l4796
 15206                           	
 15207  23BE                     l21212:	
 15208                           	line	493
 15209                           	
 15210  23BE                     l4796:	
 15211  23BE  0008               	return
 15212                           	opt stack 0
 15213                           GLOBAL	__end_of_setPercentValue
 15214  23BF                     	__end_of_setPercentValue:
 15215 ;; =============== function _setPercentValue ends ============
 15216                           
 15217                           	signat	_setPercentValue,4217
 15218                           	global	_setDimmerLights_ERROR
 15219                           psect	text4918,local,class=CODE,delta=2
 15220                           global __ptext4918
 15221  1A69                     __ptext4918:
 15222                           
 15223 ;; *************** function _setDimmerLights_ERROR *****************
 15224 ;; Defined at:
 15225 ;;		line 333 in file "G:\Program\PIC\Source_File\Dimmer_B1.c"
 15226 ;; Parameters:    Size  Location     Type
 15227 ;;  lights          1    wreg     unsigned char 
 15228 ;; Auto vars:     Size  Location     Type
 15229 ;;  lights          1    6[BANK0 ] unsigned char 
 15230 ;; Return value:  Size  Location     Type
 15231 ;;		None               void
 15232 ;; Registers used:
 15233 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15234 ;; Tracked objects:
 15235 ;;		On entry : 0/0
 15236 ;;		On exit  : 0/0
 15237 ;;		Unchanged: 0/0
 15238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 15239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 15240 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 15241 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 15242 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 15243 ;;Total ram usage:        2 bytes
 15244 ;; Hardware stack levels used:    1
 15245 ;; Hardware stack levels required when called:    6
 15246 ;; This function calls:
 15247 ;;		_DimmerLightsPointSelect
 15248 ;;		_setLoad_StatusOff
 15249 ;;		_setLED
 15250 ;;		_setSw_Status
 15251 ;;		_setRFSW_Status
 15252 ;; This function is called by:
 15253 ;;		_DimmerLights_ERROR
 15254 ;; This function uses a non-reentrant model
 15255 ;;
 15256                           psect	text4918
 15257                           	file	"G:\Program\PIC\Source_File\Dimmer_B1.c"
 15258                           	line	333
 15259                           	global	__size_of_setDimmerLights_ERROR
 15260  005B                     	__size_of_setDimmerLights_ERROR	equ	__end_of_setDimmerLights_ERROR-_setDimmerLights_ERR
                                 OR
 15261                           	
 15262  1A69                     _setDimmerLights_ERROR:	
 15263                           	opt	stack 5
 15264                           ; Regs used in _setDimmerLights_ERROR: [wreg+fsr1l-status,0+pclath+cstack]
 15265                           ;setDimmerLights_ERROR@lights stored from wreg
 15266  1A69  0020               	movlb 0	; select bank0
 15267  1A6A  00A6               	movwf	(setDimmerLights_ERROR@lights)
 15268                           	line	334
 15269                           	
 15270  1A6B                     l21196:	
 15271                           ;Dimmer_B1.c: 334: DimmerLightsPointSelect(lights);
 15272  1A6B  0826               	movf	(setDimmerLights_ERROR@lights),w
 15273  1A6C  31AE  2684  319A   	fcall	_DimmerLightsPointSelect
 15274                           	line	335
 15275                           	
 15276  1A6F                     l21198:	
 15277                           ;Dimmer_B1.c: 335: if(DimmerLights->Status)
 15278  1A6F  0020               	movlb 0	; select bank0
 15279  1A70  086A               	movf	(_DimmerLights),w
 15280  1A71  0086               	movwf	fsr1l
 15281  1A72  3001               	movlw 1	; select bank2/3
 15282  1A73  0087               	movwf fsr1h	
 15283                           	
 15284  1A74  1E81               	btfss	indf1,5
 15285  1A75  2A77               	goto	u9791
 15286  1A76  2A78               	goto	u9790
 15287  1A77                     u9791:
 15288  1A77  2AC3               	goto	l4742
 15289  1A78                     u9790:
 15290                           	line	337
 15291                           	
 15292  1A78                     l21200:	
 15293                           ;Dimmer_B1.c: 336: {
 15294                           ;Dimmer_B1.c: 337: DimmerLights->Signal=0;
 15295  1A78  086A               	movf	(_DimmerLights),w
 15296  1A79  0086               	movwf	fsr1l
 15297  1A7A  3001               	movlw 1	; select bank2/3
 15298  1A7B  0087               	movwf fsr1h	
 15299                           	
 15300  1A7C  1081               	bcf	indf1,1
 15301                           	line	338
 15302                           ;Dimmer_B1.c: 338: DimmerLights->AdjFlag=0;
 15303  1A7D  086A               	movf	(_DimmerLights),w
 15304  1A7E  0086               	movwf	fsr1l
 15305  1A7F  3001               	movlw 1	; select bank2/3
 15306  1A80  0087               	movwf fsr1h	
 15307                           	
 15308  1A81  1181               	bcf	indf1,3
 15309                           	line	339
 15310                           ;Dimmer_B1.c: 339: DimmerLights->AdjStatus=0;
 15311  1A82  086A               	movf	(_DimmerLights),w
 15312  1A83  0086               	movwf	fsr1l
 15313  1A84  3001               	movlw 1	; select bank2/3
 15314  1A85  0087               	movwf fsr1h	
 15315                           	
 15316  1A86  1201               	bcf	indf1,4
 15317                           	line	340
 15318                           ;Dimmer_B1.c: 340: DimmerLights->StatusFlag=0;
 15319  1A87  086A               	movf	(_DimmerLights),w
 15320  1A88  0086               	movwf	fsr1l
 15321  1A89  3001               	movlw 1	; select bank2/3
 15322  1A8A  0087               	movwf fsr1h	
 15323                           	
 15324  1A8B  1301               	bcf	indf1,6
 15325                           	line	341
 15326                           ;Dimmer_B1.c: 341: DimmerLights->DimmingTimeValue=3;
 15327  1A8C  3003               	movlw	(03h)
 15328  1A8D  00A5               	movwf	(??_setDimmerLights_ERROR+0)+0
 15329  1A8E  086A               	movf	(_DimmerLights),w
 15330  1A8F  3E02               	addlw	02h
 15331  1A90  0086               	movwf	fsr1l
 15332  1A91  3001               	movlw 1	; select bank2/3
 15333  1A92  0087               	movwf fsr1h	
 15334                           	
 15335  1A93  0825               	movf	(??_setDimmerLights_ERROR+0)+0,w
 15336  1A94  0081               	movwf	indf1
 15337                           	line	342
 15338                           ;Dimmer_B1.c: 342: DimmerLights->DimmingValue=DimmerLights->MinimumValue;
 15339  1A95  086A               	movf	(_DimmerLights),w
 15340  1A96  3E06               	addlw	06h
 15341  1A97  0086               	movwf	fsr1l
 15342  1A98  3001               	movlw 1	; select bank2/3
 15343  1A99  0087               	movwf fsr1h	
 15344                           	
 15345  1A9A  0801               	movf	indf1,w
 15346  1A9B  00A5               	movwf	(??_setDimmerLights_ERROR+0)+0
 15347  1A9C  086A               	movf	(_DimmerLights),w
 15348  1A9D  3E04               	addlw	04h
 15349  1A9E  0086               	movwf	fsr1l
 15350  1A9F  3001               	movlw 1	; select bank2/3
 15351  1AA0  0087               	movwf fsr1h	
 15352                           	
 15353  1AA1  0825               	movf	(??_setDimmerLights_ERROR+0)+0,w
 15354  1AA2  0081               	movwf	indf1
 15355                           	line	343
 15356                           	
 15357  1AA3                     l21202:	
 15358                           ;Dimmer_B1.c: 343: setLoad_StatusOff(1,lights,1);
 15359  1AA3  0826               	movf	(setDimmerLights_ERROR@lights),w
 15360  1AA4  00A5               	movwf	(??_setDimmerLights_ERROR+0)+0
 15361  1AA5  0825               	movf	(??_setDimmerLights_ERROR+0)+0,w
 15362  1AA6  00A2               	movwf	(?_setLoad_StatusOff)
 15363  1AA7  01A3               	clrf	0+(?_setLoad_StatusOff)+01h
 15364  1AA8  1403               	bsf	status,0
 15365  1AA9  0DA3               	rlf	0+(?_setLoad_StatusOff)+01h,f
 15366  1AAA  3001               	movlw	(01h)
 15367  1AAB  31A5  2586  319A   	fcall	_setLoad_StatusOff
 15368                           	line	344
 15369                           	
 15370  1AAE                     l21204:	
 15371                           ;Dimmer_B1.c: 344: setLED(lights,1);
 15372  1AAE  0020               	movlb 0	; select bank0
 15373  1AAF  01A2               	clrf	(?_setLED)
 15374  1AB0  1403               	bsf	status,0
 15375  1AB1  0DA2               	rlf	(?_setLED),f
 15376  1AB2  0826               	movf	(setDimmerLights_ERROR@lights),w
 15377  1AB3  3191  21A4  319A   	fcall	_setLED
 15378                           	line	345
 15379                           	
 15380  1AB6                     l21206:	
 15381                           ;Dimmer_B1.c: 345: setSw_Status(lights,0);
 15382  1AB6  0020               	movlb 0	; select bank0
 15383  1AB7  01A2               	clrf	(?_setSw_Status)
 15384  1AB8  0826               	movf	(setDimmerLights_ERROR@lights),w
 15385  1AB9  31AF  2760  319A   	fcall	_setSw_Status
 15386                           	line	346
 15387                           	
 15388  1ABC                     l21208:	
 15389                           ;Dimmer_B1.c: 346: setRFSW_Status(lights,0);
 15390  1ABC  0020               	movlb 0	; select bank0
 15391  1ABD  01A2               	clrf	(?_setRFSW_Status)
 15392  1ABE  0826               	movf	(setDimmerLights_ERROR@lights),w
 15393  1ABF  31AF  2770  319A   	fcall	_setRFSW_Status
 15394  1AC2  2AC3               	goto	l4742
 15395                           	line	347
 15396                           	
 15397  1AC3                     l4741:	
 15398                           	line	348
 15399                           	
 15400  1AC3                     l4742:	
 15401  1AC3  0008               	return
 15402                           	opt stack 0
 15403                           GLOBAL	__end_of_setDimmerLights_ERROR
 15404  1AC4                     	__end_of_setDimmerLights_ERROR:
 15405 ;; =============== function _setDimmerLights_ERROR ends ============
 15406                           
 15407                           	signat	_setDimmerLights_ERROR,4216
 15408                           	global	_setDimmerLights
 15409                           psect	text4919,local,class=CODE,delta=2
 15410                           global __ptext4919
 15411  122B                     __ptext4919:
 15412                           
 15413 ;; *************** function _setDimmerLights *****************
 15414 ;; Defined at:
 15415 ;;		line 361 in file "G:\Program\PIC\Source_File\Dimmer_B1.c"
 15416 ;; Parameters:    Size  Location     Type
 15417 ;;  lights          1    wreg     unsigned char 
 15418 ;;  status          1    6[BANK0 ] unsigned char 
 15419 ;; Auto vars:     Size  Location     Type
 15420 ;;  lights          1    8[BANK0 ] unsigned char 
 15421 ;; Return value:  Size  Location     Type
 15422 ;;		None               void
 15423 ;; Registers used:
 15424 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15425 ;; Tracked objects:
 15426 ;;		On entry : 0/0
 15427 ;;		On exit  : 0/0
 15428 ;;		Unchanged: 0/0
 15429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 15430 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 15431 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 15432 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 15433 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 15434 ;;Total ram usage:        3 bytes
 15435 ;; Hardware stack levels used:    1
 15436 ;; Hardware stack levels required when called:    6
 15437 ;; This function calls:
 15438 ;;		_DimmerLightsPointSelect
 15439 ;;		_setLED
 15440 ;;		_setLoad_StatusOn
 15441 ;;		_setLoad_Count
 15442 ;;		_setDimmer_Detect
 15443 ;;		_setLoad_GO
 15444 ;;		_setLoad_LightsStatus
 15445 ;; This function is called by:
 15446 ;;		_setDimmerLights_Main
 15447 ;;		_setControl_Lights_Table
 15448 ;; This function uses a non-reentrant model
 15449 ;;
 15450                           psect	text4919
 15451                           	file	"G:\Program\PIC\Source_File\Dimmer_B1.c"
 15452                           	line	361
 15453                           	global	__size_of_setDimmerLights
 15454  0087                     	__size_of_setDimmerLights	equ	__end_of_setDimmerLights-_setDimmerLights
 15455                           	
 15456  122B                     _setDimmerLights:	
 15457                           	opt	stack 5
 15458                           ; Regs used in _setDimmerLights: [wreg+fsr1l-status,0+pclath+cstack]
 15459                           ;setDimmerLights@lights stored from wreg
 15460  122B  0020               	movlb 0	; select bank0
 15461  122C  00A8               	movwf	(setDimmerLights@lights)
 15462                           	line	362
 15463                           	
 15464  122D                     l21164:	
 15465                           ;Dimmer_B1.c: 362: DimmerLightsPointSelect(lights);
 15466  122D  0828               	movf	(setDimmerLights@lights),w
 15467  122E  31AE  2684  3192   	fcall	_DimmerLightsPointSelect
 15468                           	line	363
 15469                           	
 15470  1231                     l21166:	
 15471                           ;Dimmer_B1.c: 363: Dimmer->Load=lights;
 15472  1231  0020               	movlb 0	; select bank0
 15473  1232  0828               	movf	(setDimmerLights@lights),w
 15474  1233  00A7               	movwf	(??_setDimmerLights+0)+0
 15475  1234  0021               	movlb 1	; select bank1
 15476  1235  0838               	movf	(_Dimmer)^080h,w
 15477  1236  3E01               	addlw	01h
 15478  1237  0086               	movwf	fsr1l
 15479  1238  0187               	clrf fsr1h	
 15480                           	
 15481  1239  0020               	movlb 0	; select bank0
 15482  123A  0827               	movf	(??_setDimmerLights+0)+0,w
 15483  123B  0081               	movwf	indf1
 15484                           	line	364
 15485                           	
 15486  123C                     l21168:	
 15487                           ;Dimmer_B1.c: 364: if(status)
 15488  123C  0826               	movf	(setDimmerLights@status),w
 15489  123D  1D03               	skipz
 15490  123E  2A40               	goto	u9770
 15491  123F  2A92               	goto	l21194
 15492  1240                     u9770:
 15493                           	line	366
 15494                           	
 15495  1240                     l21170:	
 15496                           ;Dimmer_B1.c: 365: {
 15497                           ;Dimmer_B1.c: 366: DimmerLights->Status=1;
 15498  1240  086A               	movf	(_DimmerLights),w
 15499  1241  0086               	movwf	fsr1l
 15500  1242  3001               	movlw 1	; select bank2/3
 15501  1243  0087               	movwf fsr1h	
 15502                           	
 15503  1244  1681               	bsf	indf1,5
 15504                           	line	367
 15505                           	
 15506  1245                     l21172:	
 15507                           ;Dimmer_B1.c: 367: setLED(lights,0);
 15508  1245  01A2               	clrf	(?_setLED)
 15509  1246  0828               	movf	(setDimmerLights@lights),w
 15510  1247  3191  21A4  3192   	fcall	_setLED
 15511                           	line	368
 15512                           	
 15513  124A                     l21174:	
 15514                           ;Dimmer_B1.c: 368: RA3=!0;
 15515  124A  0020               	movlb 0	; select bank0
 15516  124B  158C               	bsf	(99/8),(99)&7
 15517                           	line	369
 15518                           	
 15519  124C                     l21176:	
 15520                           ;Dimmer_B1.c: 369: setLoad_StatusOn(1,1);
 15521  124C  01A2               	clrf	(?_setLoad_StatusOn)
 15522  124D  1403               	bsf	status,0
 15523  124E  0DA2               	rlf	(?_setLoad_StatusOn),f
 15524  124F  3001               	movlw	(01h)
 15525  1250  31A0  205A  3192   	fcall	_setLoad_StatusOn
 15526                           	line	370
 15527                           	
 15528  1253                     l21178:	
 15529                           ;Dimmer_B1.c: 370: setLoad_Count(1,0);
 15530  1253  0020               	movlb 0	; select bank0
 15531  1254  01A0               	clrf	(?_setLoad_Count)
 15532  1255  3001               	movlw	(01h)
 15533  1256  31A0  20F9  3192   	fcall	_setLoad_Count
 15534                           	line	372
 15535                           	
 15536  1259                     l21180:	
 15537                           ;Dimmer_B1.c: 372: DimmerLights->Signal=1;
 15538  1259  0020               	movlb 0	; select bank0
 15539  125A  086A               	movf	(_DimmerLights),w
 15540  125B  0086               	movwf	fsr1l
 15541  125C  3001               	movlw 1	; select bank2/3
 15542  125D  0087               	movwf fsr1h	
 15543                           	
 15544  125E  1481               	bsf	indf1,1
 15545                           	line	373
 15546                           	
 15547  125F                     l21182:	
 15548                           ;Dimmer_B1.c: 373: DimmerLights->DimmingTimeValue=3;
 15549  125F  3003               	movlw	(03h)
 15550  1260  00A7               	movwf	(??_setDimmerLights+0)+0
 15551  1261  086A               	movf	(_DimmerLights),w
 15552  1262  3E02               	addlw	02h
 15553  1263  0086               	movwf	fsr1l
 15554  1264  3001               	movlw 1	; select bank2/3
 15555  1265  0087               	movwf fsr1h	
 15556                           	
 15557  1266  0827               	movf	(??_setDimmerLights+0)+0,w
 15558  1267  0081               	movwf	indf1
 15559                           	line	375
 15560                           	
 15561  1268                     l21184:	
 15562                           ;Dimmer_B1.c: 375: if(DimmerLights->StatusFlag == 0)
 15563  1268  086A               	movf	(_DimmerLights),w
 15564  1269  0086               	movwf	fsr1l
 15565  126A  3001               	movlw 1	; select bank2/3
 15566  126B  0087               	movwf fsr1h	
 15567                           	
 15568  126C  1B01               	btfsc	indf1,6
 15569  126D  2A6F               	goto	u9781
 15570  126E  2A70               	goto	u9780
 15571  126F                     u9781:
 15572  126F  2AB1               	goto	l4751
 15573  1270                     u9780:
 15574                           	line	377
 15575                           	
 15576  1270                     l21186:	
 15577                           ;Dimmer_B1.c: 376: {
 15578                           ;Dimmer_B1.c: 377: DimmerLights->StatusFlag=1;
 15579  1270  086A               	movf	(_DimmerLights),w
 15580  1271  0086               	movwf	fsr1l
 15581  1272  3001               	movlw 1	; select bank2/3
 15582  1273  0087               	movwf fsr1h	
 15583                           	
 15584  1274  1701               	bsf	indf1,6
 15585                           	line	378
 15586                           	
 15587  1275                     l21188:	
 15588                           ;Dimmer_B1.c: 378: setDimmer_Detect(1,1);
 15589  1275  01A2               	clrf	(?_setDimmer_Detect)
 15590  1276  1403               	bsf	status,0
 15591  1277  0DA2               	rlf	(?_setDimmer_Detect),f
 15592  1278  3001               	movlw	(01h)
 15593  1279  31AF  2780  3192   	fcall	_setDimmer_Detect
 15594                           	line	379
 15595                           	
 15596  127C                     l21190:	
 15597                           ;Dimmer_B1.c: 379: setLoad_GO(1,1);
 15598  127C  0020               	movlb 0	; select bank0
 15599  127D  01A2               	clrf	(?_setLoad_GO)
 15600  127E  1403               	bsf	status,0
 15601  127F  0DA2               	rlf	(?_setLoad_GO),f
 15602  1280  3001               	movlw	(01h)
 15603  1281  31AF  2790  3192   	fcall	_setLoad_GO
 15604                           	line	380
 15605                           	
 15606  1284                     l21192:	
 15607                           ;Dimmer_B1.c: 380: setLoad_LightsStatus(1,lights,1);
 15608  1284  0020               	movlb 0	; select bank0
 15609  1285  0828               	movf	(setDimmerLights@lights),w
 15610  1286  00A7               	movwf	(??_setDimmerLights+0)+0
 15611  1287  0827               	movf	(??_setDimmerLights+0)+0,w
 15612  1288  00A2               	movwf	(?_setLoad_LightsStatus)
 15613  1289  01A3               	clrf	0+(?_setLoad_LightsStatus)+01h
 15614  128A  1403               	bsf	status,0
 15615  128B  0DA3               	rlf	0+(?_setLoad_LightsStatus)+01h,f
 15616  128C  3001               	movlw	(01h)
 15617  128D  31A5  25BE  3192   	fcall	_setLoad_LightsStatus
 15618  1290  2AB1               	goto	l4751
 15619                           	line	381
 15620                           	
 15621  1291                     l4749:	
 15622                           	line	382
 15623                           ;Dimmer_B1.c: 381: }
 15624                           ;Dimmer_B1.c: 382: }
 15625  1291  2AB1               	goto	l4751
 15626                           	line	383
 15627                           	
 15628  1292                     l4748:	
 15629                           	line	385
 15630                           	
 15631  1292                     l21194:	
 15632                           ;Dimmer_B1.c: 383: else
 15633                           ;Dimmer_B1.c: 384: {
 15634                           ;Dimmer_B1.c: 385: DimmerLights->Status=0;
 15635  1292  0020               	movlb 0	; select bank0
 15636  1293  086A               	movf	(_DimmerLights),w
 15637  1294  0086               	movwf	fsr1l
 15638  1295  3001               	movlw 1	; select bank2/3
 15639  1296  0087               	movwf fsr1h	
 15640                           	
 15641  1297  1281               	bcf	indf1,5
 15642                           	line	387
 15643                           ;Dimmer_B1.c: 387: DimmerLights->Signal=1;
 15644  1298  086A               	movf	(_DimmerLights),w
 15645  1299  0086               	movwf	fsr1l
 15646  129A  3001               	movlw 1	; select bank2/3
 15647  129B  0087               	movwf fsr1h	
 15648                           	
 15649  129C  1481               	bsf	indf1,1
 15650                           	line	388
 15651                           ;Dimmer_B1.c: 388: DimmerLights->AdjFlag=0;
 15652  129D  086A               	movf	(_DimmerLights),w
 15653  129E  0086               	movwf	fsr1l
 15654  129F  3001               	movlw 1	; select bank2/3
 15655  12A0  0087               	movwf fsr1h	
 15656                           	
 15657  12A1  1181               	bcf	indf1,3
 15658                           	line	389
 15659                           ;Dimmer_B1.c: 389: DimmerLights->AdjStatus=0;
 15660  12A2  086A               	movf	(_DimmerLights),w
 15661  12A3  0086               	movwf	fsr1l
 15662  12A4  3001               	movlw 1	; select bank2/3
 15663  12A5  0087               	movwf fsr1h	
 15664                           	
 15665  12A6  1201               	bcf	indf1,4
 15666                           	line	390
 15667                           ;Dimmer_B1.c: 390: DimmerLights->DimmingTimeValue=3;
 15668  12A7  3003               	movlw	(03h)
 15669  12A8  00A7               	movwf	(??_setDimmerLights+0)+0
 15670  12A9  086A               	movf	(_DimmerLights),w
 15671  12AA  3E02               	addlw	02h
 15672  12AB  0086               	movwf	fsr1l
 15673  12AC  3001               	movlw 1	; select bank2/3
 15674  12AD  0087               	movwf fsr1h	
 15675                           	
 15676  12AE  0827               	movf	(??_setDimmerLights+0)+0,w
 15677  12AF  0081               	movwf	indf1
 15678  12B0  2AB1               	goto	l4751
 15679                           	line	399
 15680                           	
 15681  12B1                     l4750:	
 15682                           	line	400
 15683                           	
 15684  12B1                     l4751:	
 15685  12B1  0008               	return
 15686                           	opt stack 0
 15687                           GLOBAL	__end_of_setDimmerLights
 15688  12B2                     	__end_of_setDimmerLights:
 15689 ;; =============== function _setDimmerLights ends ============
 15690                           
 15691                           	signat	_setDimmerLights,8312
 15692                           	global	_DimmerLights_Close
 15693                           psect	text4920,local,class=CODE,delta=2
 15694                           global __ptext4920
 15695  227D                     __ptext4920:
 15696                           
 15697 ;; *************** function _DimmerLights_Close *****************
 15698 ;; Defined at:
 15699 ;;		line 71 in file "G:\Program\PIC\Source_File\Dimmer_B1.c"
 15700 ;; Parameters:    Size  Location     Type
 15701 ;;		None
 15702 ;; Auto vars:     Size  Location     Type
 15703 ;;		None
 15704 ;; Return value:  Size  Location     Type
 15705 ;;		None               void
 15706 ;; Registers used:
 15707 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15708 ;; Tracked objects:
 15709 ;;		On entry : 0/0
 15710 ;;		On exit  : 0/0
 15711 ;;		Unchanged: 0/0
 15712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 15713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 15714 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 15715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 15716 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 15717 ;;Total ram usage:        0 bytes
 15718 ;; Hardware stack levels used:    1
 15719 ;; Hardware stack levels required when called:    6
 15720 ;; This function calls:
 15721 ;;		_getDimmer_Detect
 15722 ;;		_setDimmer_Detect
 15723 ;;		_getDimmerLights_StatusFlag
 15724 ;;		_setLoad_GO
 15725 ;; This function is called by:
 15726 ;;		_DimmerLights_Main
 15727 ;; This function uses a non-reentrant model
 15728 ;;
 15729                           psect	text4920
 15730                           	file	"G:\Program\PIC\Source_File\Dimmer_B1.c"
 15731                           	line	71
 15732                           	global	__size_of_DimmerLights_Close
 15733  0026                     	__size_of_DimmerLights_Close	equ	__end_of_DimmerLights_Close-_DimmerLights_Close
 15734                           	
 15735  227D                     _DimmerLights_Close:	
 15736                           	opt	stack 8
 15737                           ; Regs used in _DimmerLights_Close: [wreg+fsr1l-status,0+pclath+cstack]
 15738                           	line	72
 15739                           	
 15740  227D                     l21156:	
 15741                           ;Dimmer_B1.c: 72: if(getDimmer_Detect(1))
 15742  227D  3001               	movlw	(01h)
 15743  227E  31A0  209E  31A2   	fcall	_getDimmer_Detect
 15744  2281  3A00               	xorlw	0&0ffh
 15745  2282  1903               	skipnz
 15746  2283  2A85               	goto	u9751
 15747  2284  2A86               	goto	u9750
 15748  2285                     u9751:
 15749  2285  2AA2               	goto	l4698
 15750  2286                     u9750:
 15751                           	line	74
 15752                           	
 15753  2286                     l21158:	
 15754                           ;Dimmer_B1.c: 73: {
 15755                           ;Dimmer_B1.c: 74: setDimmer_Detect(1,0);
 15756  2286  0020               	movlb 0	; select bank0
 15757  2287  01A2               	clrf	(?_setDimmer_Detect)
 15758  2288  3001               	movlw	(01h)
 15759  2289  31AF  2780  31A2   	fcall	_setDimmer_Detect
 15760                           	line	75
 15761                           ;Dimmer_B1.c: 75: if(!getDimmerLights_StatusFlag())
 15762  228C  31A2  22A3  31A2   	fcall	_getDimmerLights_StatusFlag
 15763  228F  3800               	iorlw	0
 15764  2290  1D03               	skipz
 15765  2291  2A93               	goto	u9761
 15766  2292  2A94               	goto	u9760
 15767  2293                     u9761:
 15768  2293  2AA2               	goto	l4698
 15769  2294                     u9760:
 15770                           	line	77
 15771                           	
 15772  2294                     l21160:	
 15773                           ;Dimmer_B1.c: 76: {
 15774                           ;Dimmer_B1.c: 77: setLoad_GO(1,0);
 15775  2294  0020               	movlb 0	; select bank0
 15776  2295  01A2               	clrf	(?_setLoad_GO)
 15777  2296  3001               	movlw	(01h)
 15778  2297  31AF  2790  31A2   	fcall	_setLoad_GO
 15779                           	line	78
 15780                           	
 15781  229A                     l21162:	
 15782                           ;Dimmer_B1.c: 78: Memory->GO=1;
 15783  229A  087C               	movf	(_Memory),w
 15784  229B  3E22               	addlw	022h
 15785  229C  0086               	movwf	fsr1l
 15786  229D  3001               	movlw 1	; select bank2/3
 15787  229E  0087               	movwf fsr1h	
 15788                           	
 15789  229F  1481               	bsf	indf1,1
 15790  22A0  2AA2               	goto	l4698
 15791                           	line	79
 15792                           	
 15793  22A1                     l4697:	
 15794  22A1  2AA2               	goto	l4698
 15795                           	line	80
 15796                           	
 15797  22A2                     l4696:	
 15798                           	line	81
 15799                           	
 15800  22A2                     l4698:	
 15801  22A2  0008               	return
 15802                           	opt stack 0
 15803                           GLOBAL	__end_of_DimmerLights_Close
 15804  22A3                     	__end_of_DimmerLights_Close:
 15805 ;; =============== function _DimmerLights_Close ends ============
 15806                           
 15807                           	signat	_DimmerLights_Close,88
 15808                           	global	_getPercentValue
 15809                           psect	text4921,local,class=CODE,delta=2
 15810                           global __ptext4921
 15811  26AD                     __ptext4921:
 15812                           
 15813 ;; *************** function _getPercentValue *****************
 15814 ;; Defined at:
 15815 ;;		line 486 in file "G:\Program\PIC\Source_File\Dimmer_B1.c"
 15816 ;; Parameters:    Size  Location     Type
 15817 ;;  value           1    wreg     unsigned char 
 15818 ;; Auto vars:     Size  Location     Type
 15819 ;;  value           1   59[BANK0 ] unsigned char 
 15820 ;; Return value:  Size  Location     Type
 15821 ;;                  1    wreg      unsigned char 
 15822 ;; Registers used:
 15823 ;;		wreg, status,2, status,0, pclath, cstack
 15824 ;; Tracked objects:
 15825 ;;		On entry : 0/0
 15826 ;;		On exit  : 0/0
 15827 ;;		Unchanged: 0/0
 15828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 15829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 15830 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 15831 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 15832 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 15833 ;;Total ram usage:        3 bytes
 15834 ;; Hardware stack levels used:    1
 15835 ;; Hardware stack levels required when called:    6
 15836 ;; This function calls:
 15837 ;;		___awtoft
 15838 ;;		___ftmul
 15839 ;;		___ftadd
 15840 ;;		___fttol
 15841 ;; This function is called by:
 15842 ;;		_setDimmerLights_Initialization
 15843 ;;		_setDimmerLights_AdjRF
 15844 ;;		_MainT
 15845 ;; This function uses a non-reentrant model
 15846 ;;
 15847                           psect	text4921
 15848                           	file	"G:\Program\PIC\Source_File\Dimmer_B1.c"
 15849                           	line	486
 15850                           	global	__size_of_getPercentValue
 15851  0041                     	__size_of_getPercentValue	equ	__end_of_getPercentValue-_getPercentValue
 15852                           	
 15853  26AD                     _getPercentValue:	
 15854                           	opt	stack 2
 15855                           ; Regs used in _getPercentValue: [wreg+status,2+status,0+pclath+cstack]
 15856                           ;getPercentValue@value stored from wreg
 15857  26AD  0020               	movlb 0	; select bank0
 15858  26AE  00DB               	movwf	(getPercentValue@value)
 15859                           	line	487
 15860                           	
 15861  26AF                     l19604:	
 15862                           ;Dimmer_B1.c: 487: return (char)(((100-value)*0.83)+37);
 15863  26AF  085B               	movf	(getPercentValue@value),w
 15864  26B0  00D9               	movwf	(??_getPercentValue+0)+0
 15865  26B1  01DA               	clrf	(??_getPercentValue+0)+0+1
 15866  26B2  09D9               	comf	(??_getPercentValue+0)+0,f
 15867  26B3  09DA               	comf	(??_getPercentValue+0)+1,f
 15868  26B4  0AD9               	incf	(??_getPercentValue+0)+0,f
 15869  26B5  1903               	skipnz
 15870  26B6  0ADA               	incf	(??_getPercentValue+0)+1,f
 15871  26B7  0859               	movf	0+(??_getPercentValue+0)+0,w
 15872  26B8  3E64               	addlw	low(064h)
 15873  26B9  00B6               	movwf	(?___awtoft)
 15874  26BA  3000               	movlw	high(064h)
 15875  26BB  3D5A               	addwfc	1+(??_getPercentValue+0)+0,w
 15876  26BC  00B7               	movwf	1+(?___awtoft)
 15877  26BD  31A3  2340  31A6   	fcall	___awtoft
 15878  26C0  0020               	movlb 0	; select bank0
 15879  26C1  0836               	movf	(0+(?___awtoft)),w
 15880  26C2  00BF               	movwf	0+(?___ftmul)+03h
 15881  26C3  0837               	movf	(1+(?___awtoft)),w
 15882  26C4  00C0               	movwf	1+(?___ftmul)+03h
 15883  26C5  0838               	movf	(2+(?___awtoft)),w
 15884  26C6  00C1               	movwf	2+(?___ftmul)+03h
 15885  26C7  307B               	movlw	0x7b
 15886  26C8  00BC               	movwf	(?___ftmul)
 15887  26C9  3054               	movlw	0x54
 15888  26CA  00BD               	movwf	(?___ftmul+1)
 15889  26CB  303F               	movlw	0x3f
 15890  26CC  00BE               	movwf	(?___ftmul+2)
 15891  26CD  3189  2161  31A6   	fcall	___ftmul
 15892  26D0  0020               	movlb 0	; select bank0
 15893  26D1  083C               	movf	(0+(?___ftmul)),w
 15894  26D2  00CF               	movwf	0+(?___ftadd)+03h
 15895  26D3  083D               	movf	(1+(?___ftmul)),w
 15896  26D4  00D0               	movwf	1+(?___ftadd)+03h
 15897  26D5  083E               	movf	(2+(?___ftmul)),w
 15898  26D6  00D1               	movwf	2+(?___ftadd)+03h
 15899  26D7  3000               	movlw	0x0
 15900  26D8  00CC               	movwf	(?___ftadd)
 15901  26D9  3014               	movlw	0x14
 15902  26DA  00CD               	movwf	(?___ftadd+1)
 15903  26DB  3042               	movlw	0x42
 15904  26DC  00CE               	movwf	(?___ftadd+2)
 15905  26DD  318C  240F  31A6   	fcall	___ftadd
 15906  26E0  0020               	movlb 0	; select bank0
 15907  26E1  084C               	movf	(0+(?___ftadd)),w
 15908  26E2  00A8               	movwf	(?___fttol)
 15909  26E3  084D               	movf	(1+(?___ftadd)),w
 15910  26E4  00A9               	movwf	(?___fttol+1)
 15911  26E5  084E               	movf	(2+(?___ftadd)),w
 15912  26E6  00AA               	movwf	(?___fttol+2)
 15913  26E7  3192  22B2  31A6   	fcall	___fttol
 15914  26EA  0020               	movlb 0	; select bank0
 15915  26EB  0828               	movf	0+(((0+(?___fttol)))),w
 15916  26EC  2EED               	goto	l4793
 15917                           	
 15918  26ED                     l19606:	
 15919                           	line	488
 15920                           	
 15921  26ED                     l4793:	
 15922  26ED  0008               	return
 15923                           	opt stack 0
 15924                           GLOBAL	__end_of_getPercentValue
 15925  26EE                     	__end_of_getPercentValue:
 15926 ;; =============== function _getPercentValue ends ============
 15927                           
 15928                           	signat	_getPercentValue,4217
 15929                           	global	_DlyOff_Main
 15930                           psect	text4922,local,class=CODE,delta=2
 15931                           global __ptext4922
 15932  10A0                     __ptext4922:
 15933                           
 15934 ;; *************** function _DlyOff_Main *****************
 15935 ;; Defined at:
 15936 ;;		line 63 in file "G:\Program\PIC\Source_File\DelayOff_B1.c"
 15937 ;; Parameters:    Size  Location     Type
 15938 ;;  sw              1    wreg     unsigned char 
 15939 ;; Auto vars:     Size  Location     Type
 15940 ;;  sw              1   16[BANK0 ] unsigned char 
 15941 ;; Return value:  Size  Location     Type
 15942 ;;		None               void
 15943 ;; Registers used:
 15944 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15945 ;; Tracked objects:
 15946 ;;		On entry : 0/0
 15947 ;;		On exit  : 0/0
 15948 ;;		Unchanged: 0/0
 15949 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 15950 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 15951 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 15952 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 15953 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 15954 ;;Total ram usage:        3 bytes
 15955 ;; Hardware stack levels used:    1
 15956 ;; Hardware stack levels required when called:    6
 15957 ;; This function calls:
 15958 ;;		_DelayOffPointSelect
 15959 ;;		_setSw_Status
 15960 ;;		_setRFSW_Status
 15961 ;;		_setRF_DimmerLights
 15962 ;;		_setDimmerLights_Trigger
 15963 ;;		_setDimmerLights_Switch
 15964 ;;		_setTxData
 15965 ;;		_setBuz
 15966 ;; This function is called by:
 15967 ;;		_DelayOff_Main
 15968 ;; This function uses a non-reentrant model
 15969 ;;
 15970                           psect	text4922
 15971                           	file	"G:\Program\PIC\Source_File\DelayOff_B1.c"
 15972                           	line	63
 15973                           	global	__size_of_DlyOff_Main
 15974  0082                     	__size_of_DlyOff_Main	equ	__end_of_DlyOff_Main-_DlyOff_Main
 15975                           	
 15976  10A0                     _DlyOff_Main:	
 15977                           	opt	stack 8
 15978                           ; Regs used in _DlyOff_Main: [wreg-status,0+pclath+cstack]
 15979                           ;DlyOff_Main@sw stored from wreg
 15980  10A0  0020               	movlb 0	; select bank0
 15981  10A1  00B0               	movwf	(DlyOff_Main@sw)
 15982                           	line	64
 15983                           	
 15984  10A2                     l21126:	
 15985                           ;DelayOff_B1.c: 64: DelayOffPointSelect(sw);
 15986  10A2  0830               	movf	(DlyOff_Main@sw),w
 15987  10A3  31AE  2676  3190   	fcall	_DelayOffPointSelect
 15988                           	line	65
 15989                           	
 15990  10A6                     l21128:	
 15991                           ;DelayOff_B1.c: 65: if(DelayOff->GO)
 15992  10A6  0879               	movf	(_DelayOff),w
 15993  10A7  0086               	movwf	fsr1l
 15994  10A8  0187               	clrf fsr1h	
 15995                           	
 15996  10A9  1C81               	btfss	indf1,1
 15997  10AA  28AC               	goto	u9721
 15998  10AB  28AD               	goto	u9720
 15999  10AC                     u9721:
 16000  10AC  2921               	goto	l3510
 16001  10AD                     u9720:
 16002                           	line	67
 16003                           	
 16004  10AD                     l21130:	
 16005                           ;DelayOff_B1.c: 66: {
 16006                           ;DelayOff_B1.c: 67: DelayOff->SecondTime++;
 16007  10AD  0879               	movf	(_DelayOff),w
 16008  10AE  3E02               	addlw	02h
 16009  10AF  0086               	movwf	fsr1l
 16010  10B0  0187               	clrf fsr1h	
 16011                           	
 16012  10B1  3001               	movlw	01h
 16013  10B2  0781               	addwf	indf1,f
 16014  10B3  3141               	addfsr	fsr1,1
 16015  10B4  1803               	skipnc
 16016  10B5  0A81               	incf	indf1,f
 16017                           	line	68
 16018                           	
 16019  10B6                     l21132:	
 16020                           ;DelayOff_B1.c: 68: if(DelayOff->SecondTime >= 11200)
 16021  10B6  0879               	movf	(_DelayOff),w
 16022  10B7  3E02               	addlw	02h
 16023  10B8  0086               	movwf	fsr1l
 16024  10B9  0187               	clrf fsr1h	
 16025                           	
 16026  10BA  3F40               	moviw	[0]fsr1
 16027  10BB  0020               	movlb 0	; select bank0
 16028  10BC  00AE               	movwf	(??_DlyOff_Main+0)+0
 16029  10BD  3F41               	moviw	[1]fsr1
 16030  10BE  00AF               	movwf	(??_DlyOff_Main+0)+0+1
 16031  10BF  302B               	movlw	high(02BC0h)
 16032  10C0  022F               	subwf	1+(??_DlyOff_Main+0)+0,w
 16033  10C1  30C0               	movlw	low(02BC0h)
 16034  10C2  1903               	skipnz
 16035  10C3  022E               	subwf	0+(??_DlyOff_Main+0)+0,w
 16036  10C4  1C03               	skipc
 16037  10C5  28C7               	goto	u9731
 16038  10C6  28C8               	goto	u9730
 16039  10C7                     u9731:
 16040  10C7  2921               	goto	l3510
 16041  10C8                     u9730:
 16042                           	line	70
 16043                           	
 16044  10C8                     l21134:	
 16045                           ;DelayOff_B1.c: 69: {
 16046                           ;DelayOff_B1.c: 70: DelayOff->SecondTime=0;
 16047  10C8  0879               	movf	(_DelayOff),w
 16048  10C9  3E02               	addlw	02h
 16049  10CA  0086               	movwf	fsr1l
 16050  10CB  0187               	clrf fsr1h	
 16051                           	
 16052  10CC  3000               	movlw	low(0)
 16053  10CD  3FC0               	movwi	[0]fsr1
 16054  10CE  3000               	movlw	high(0)
 16055  10CF  3FC1               	movwi	[1]fsr1
 16056                           	line	71
 16057                           	
 16058  10D0                     l21136:	
 16059                           ;DelayOff_B1.c: 71: DelayOff->MinuteTime++;
 16060  10D0  3001               	movlw	(01h)
 16061  10D1  00AE               	movwf	(??_DlyOff_Main+0)+0
 16062  10D2  0879               	movf	(_DelayOff),w
 16063  10D3  3E04               	addlw	04h
 16064  10D4  0086               	movwf	fsr1l
 16065  10D5  0187               	clrf fsr1h	
 16066                           	
 16067  10D6  082E               	movf	(??_DlyOff_Main+0)+0,w
 16068  10D7  0781               	addwf	indf1,f
 16069                           	line	72
 16070                           	
 16071  10D8                     l21138:	
 16072                           ;DelayOff_B1.c: 72: if(DelayOff->MinuteTime >= DelayOff->Value)
 16073  10D8  0879               	movf	(_DelayOff),w
 16074  10D9  3E04               	addlw	04h
 16075  10DA  0086               	movwf	fsr1l
 16076  10DB  0187               	clrf fsr1h	
 16077                           	
 16078  10DC  0879               	movf	(_DelayOff),w
 16079  10DD  3E01               	addlw	01h
 16080  10DE  0084               	movwf	fsr0l
 16081  10DF  0185               	clrf fsr0h	
 16082                           	
 16083  10E0  0800               	movf	indf0,w
 16084  10E1  0201               	subwf	indf1,w
 16085  10E2  1C03               	skipc
 16086  10E3  28E5               	goto	u9741
 16087  10E4  28E6               	goto	u9740
 16088  10E5                     u9741:
 16089  10E5  2921               	goto	l3510
 16090  10E6                     u9740:
 16091                           	line	74
 16092                           	
 16093  10E6                     l21140:	
 16094                           ;DelayOff_B1.c: 73: {
 16095                           ;DelayOff_B1.c: 74: DelayOff->MinuteTime=0;
 16096  10E6  0879               	movf	(_DelayOff),w
 16097  10E7  3E04               	addlw	04h
 16098  10E8  0086               	movwf	fsr1l
 16099  10E9  0187               	clrf fsr1h	
 16100                           	
 16101  10EA  0181               	clrf	indf1
 16102                           	line	75
 16103                           ;DelayOff_B1.c: 75: DelayOff->GO=0;
 16104  10EB  0879               	movf	(_DelayOff),w
 16105  10EC  0086               	movwf	fsr1l
 16106  10ED  0187               	clrf fsr1h	
 16107                           	
 16108  10EE  1081               	bcf	indf1,1
 16109                           	line	76
 16110                           	
 16111  10EF                     l21142:	
 16112                           ;DelayOff_B1.c: 76: setSw_Status(sw,0);
 16113  10EF  01A2               	clrf	(?_setSw_Status)
 16114  10F0  0830               	movf	(DlyOff_Main@sw),w
 16115  10F1  31AF  2760  3190   	fcall	_setSw_Status
 16116                           	line	77
 16117                           	
 16118  10F4                     l21144:	
 16119                           ;DelayOff_B1.c: 77: setRFSW_Status(sw,0);
 16120  10F4  0020               	movlb 0	; select bank0
 16121  10F5  01A2               	clrf	(?_setRFSW_Status)
 16122  10F6  0830               	movf	(DlyOff_Main@sw),w
 16123  10F7  31AF  2770  3190   	fcall	_setRFSW_Status
 16124                           	line	78
 16125                           	
 16126  10FA                     l21146:	
 16127                           ;DelayOff_B1.c: 78: setRF_DimmerLights(sw,0);
 16128  10FA  0020               	movlb 0	; select bank0
 16129  10FB  01A0               	clrf	(?_setRF_DimmerLights)
 16130  10FC  0830               	movf	(DlyOff_Main@sw),w
 16131  10FD  319B  237E  3190   	fcall	_setRF_DimmerLights
 16132                           	line	79
 16133                           	
 16134  1100                     l21148:	
 16135                           ;DelayOff_B1.c: 79: setDimmerLights_Trigger(sw,1);
 16136  1100  0020               	movlb 0	; select bank0
 16137  1101  01A2               	clrf	(?_setDimmerLights_Trigger)
 16138  1102  1403               	bsf	status,0
 16139  1103  0DA2               	rlf	(?_setDimmerLights_Trigger),f
 16140  1104  0830               	movf	(DlyOff_Main@sw),w
 16141  1105  31A0  2016  3190   	fcall	_setDimmerLights_Trigger
 16142                           	line	80
 16143                           	
 16144  1108                     l21150:	
 16145                           ;DelayOff_B1.c: 80: setDimmerLights_Switch(sw,0);
 16146  1108  0020               	movlb 0	; select bank0
 16147  1109  01A2               	clrf	(?_setDimmerLights_Switch)
 16148  110A  0830               	movf	(DlyOff_Main@sw),w
 16149  110B  31A0  2027  3190   	fcall	_setDimmerLights_Switch
 16150                           	line	81
 16151                           	
 16152  110E                     l21152:	
 16153                           ;DelayOff_B1.c: 81: setTxData(1);
 16154  110E  3001               	movlw	(01h)
 16155  110F  318B  230E  3190   	fcall	_setTxData
 16156                           	line	82
 16157                           	
 16158  1112                     l21154:	
 16159                           ;DelayOff_B1.c: 82: setBuz(1,1,100);
 16160  1112  0020               	movlb 0	; select bank0
 16161  1113  01A9               	clrf	(?_setBuz)
 16162  1114  1403               	bsf	status,0
 16163  1115  0DA9               	rlf	(?_setBuz),f
 16164  1116  3064               	movlw	low(064h)
 16165  1117  00AA               	movwf	0+(?_setBuz)+01h
 16166  1118  3000               	movlw	high(064h)
 16167  1119  00AB               	movwf	(0+(?_setBuz)+01h)+1
 16168  111A  3001               	movlw	(01h)
 16169  111B  3194  2499  3190   	fcall	_setBuz
 16170  111E  2921               	goto	l3510
 16171                           	line	83
 16172                           	
 16173  111F                     l3509:	
 16174  111F  2921               	goto	l3510
 16175                           	line	84
 16176                           	
 16177  1120                     l3508:	
 16178  1120  2921               	goto	l3510
 16179                           	line	85
 16180                           	
 16181  1121                     l3507:	
 16182                           	line	86
 16183                           	
 16184  1121                     l3510:	
 16185  1121  0008               	return
 16186                           	opt stack 0
 16187                           GLOBAL	__end_of_DlyOff_Main
 16188  1122                     	__end_of_DlyOff_Main:
 16189 ;; =============== function _DlyOff_Main ends ============
 16190                           
 16191                           	signat	_DlyOff_Main,4216
 16192                           	global	_DelayOff_Initialization
 16193                           psect	text4923,local,class=CODE,delta=2
 16194                           global __ptext4923
 16195  2D47                     __ptext4923:
 16196                           
 16197 ;; *************** function _DelayOff_Initialization *****************
 16198 ;; Defined at:
 16199 ;;		line 31 in file "G:\Program\PIC\Source_File\DelayOff_B1.c"
 16200 ;; Parameters:    Size  Location     Type
 16201 ;;		None
 16202 ;; Auto vars:     Size  Location     Type
 16203 ;;		None
 16204 ;; Return value:  Size  Location     Type
 16205 ;;		None               void
 16206 ;; Registers used:
 16207 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16208 ;; Tracked objects:
 16209 ;;		On entry : 0/0
 16210 ;;		On exit  : 0/0
 16211 ;;		Unchanged: 0/0
 16212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 16213 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 16214 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 16215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 16216 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 16217 ;;Total ram usage:        0 bytes
 16218 ;; Hardware stack levels used:    1
 16219 ;; Hardware stack levels required when called:    6
 16220 ;; This function calls:
 16221 ;;		_DlyOff_Initialization
 16222 ;; This function is called by:
 16223 ;;		_main
 16224 ;; This function uses a non-reentrant model
 16225 ;;
 16226                           psect	text4923
 16227                           	file	"G:\Program\PIC\Source_File\DelayOff_B1.c"
 16228                           	line	31
 16229                           	global	__size_of_DelayOff_Initialization
 16230  0005                     	__size_of_DelayOff_Initialization	equ	__end_of_DelayOff_Initialization-_DelayOff_Initia
                                 lization
 16231                           	
 16232  2D47                     _DelayOff_Initialization:	
 16233                           	opt	stack 9
 16234                           ; Regs used in _DelayOff_Initialization: [wreg+fsr1l-status,0+pclath+cstack]
 16235                           	line	33
 16236                           	
 16237  2D47                     l21124:	
 16238                           ;DelayOff_B1.c: 33: DlyOff_Initialization(1);
 16239  2D47  3001               	movlw	(01h)
 16240  2D48  31AD  25E8  31AD   	fcall	_DlyOff_Initialization
 16241                           	line	41
 16242                           	
 16243  2D4B                     l3498:	
 16244  2D4B  0008               	return
 16245                           	opt stack 0
 16246                           GLOBAL	__end_of_DelayOff_Initialization
 16247  2D4C                     	__end_of_DelayOff_Initialization:
 16248 ;; =============== function _DelayOff_Initialization ends ============
 16249                           
 16250                           	signat	_DelayOff_Initialization,88
 16251                           	global	_CC2500_SIDLEMode
 16252                           psect	text4924,local,class=CODE,delta=2
 16253                           global __ptext4924
 16254  2D42                     __ptext4924:
 16255                           
 16256 ;; *************** function _CC2500_SIDLEMode *****************
 16257 ;; Defined at:
 16258 ;;		line 184 in file "G:\Program\PIC\Source_File\CC2500_B1.c"
 16259 ;; Parameters:    Size  Location     Type
 16260 ;;		None
 16261 ;; Auto vars:     Size  Location     Type
 16262 ;;		None
 16263 ;; Return value:  Size  Location     Type
 16264 ;;		None               void
 16265 ;; Registers used:
 16266 ;;		wreg, status,2, status,0, pclath, cstack
 16267 ;; Tracked objects:
 16268 ;;		On entry : 0/0
 16269 ;;		On exit  : 0/0
 16270 ;;		Unchanged: 0/0
 16271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 16272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 16273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 16274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 16275 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 16276 ;;Total ram usage:        0 bytes
 16277 ;; Hardware stack levels used:    1
 16278 ;; Hardware stack levels required when called:    6
 16279 ;; This function calls:
 16280 ;;		_CC2500_WriteCommand
 16281 ;; This function is called by:
 16282 ;;		_CC2500_PowerOnInitial
 16283 ;; This function uses a non-reentrant model
 16284 ;;
 16285                           psect	text4924
 16286                           	file	"G:\Program\PIC\Source_File\CC2500_B1.c"
 16287                           	line	184
 16288                           	global	__size_of_CC2500_SIDLEMode
 16289  0005                     	__size_of_CC2500_SIDLEMode	equ	__end_of_CC2500_SIDLEMode-_CC2500_SIDLEMode
 16290                           	
 16291  2D42                     _CC2500_SIDLEMode:	
 16292                           	opt	stack 8
 16293                           ; Regs used in _CC2500_SIDLEMode: [wreg+status,2+status,0+pclath+cstack]
 16294                           	line	185
 16295                           	
 16296  2D42                     l21122:	
 16297                           ;CC2500_B1.c: 185: CC2500_WriteCommand(0x36);
 16298  2D42  3036               	movlw	(036h)
 16299  2D43  31A1  2137  31AD   	fcall	_CC2500_WriteCommand
 16300                           	line	186
 16301                           	
 16302  2D46                     l2329:	
 16303  2D46  0008               	return
 16304                           	opt stack 0
 16305                           GLOBAL	__end_of_CC2500_SIDLEMode
 16306  2D47                     	__end_of_CC2500_SIDLEMode:
 16307 ;; =============== function _CC2500_SIDLEMode ends ============
 16308                           
 16309                           	signat	_CC2500_SIDLEMode,88
 16310                           	global	_CC2500_FrequencyCabr
 16311                           psect	text4925,local,class=CODE,delta=2
 16312                           global __ptext4925
 16313  2E26                     __ptext4925:
 16314                           
 16315 ;; *************** function _CC2500_FrequencyCabr *****************
 16316 ;; Defined at:
 16317 ;;		line 176 in file "G:\Program\PIC\Source_File\CC2500_B1.c"
 16318 ;; Parameters:    Size  Location     Type
 16319 ;;		None
 16320 ;; Auto vars:     Size  Location     Type
 16321 ;;		None
 16322 ;; Return value:  Size  Location     Type
 16323 ;;		None               void
 16324 ;; Registers used:
 16325 ;;		wreg, status,2, status,0, pclath, cstack
 16326 ;; Tracked objects:
 16327 ;;		On entry : 0/0
 16328 ;;		On exit  : 0/0
 16329 ;;		Unchanged: 0/0
 16330 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 16331 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 16332 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 16333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 16334 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 16335 ;;Total ram usage:        0 bytes
 16336 ;; Hardware stack levels used:    1
 16337 ;; Hardware stack levels required when called:    6
 16338 ;; This function calls:
 16339 ;;		_CC2500_WriteCommand
 16340 ;;		_DelayTime_1us
 16341 ;; This function is called by:
 16342 ;;		_CC2500_PowerOnInitial
 16343 ;; This function uses a non-reentrant model
 16344 ;;
 16345                           psect	text4925
 16346                           	file	"G:\Program\PIC\Source_File\CC2500_B1.c"
 16347                           	line	176
 16348                           	global	__size_of_CC2500_FrequencyCabr
 16349  000D                     	__size_of_CC2500_FrequencyCabr	equ	__end_of_CC2500_FrequencyCabr-_CC2500_FrequencyCabr
 16350                           	
 16351  2E26                     _CC2500_FrequencyCabr:	
 16352                           	opt	stack 8
 16353                           ; Regs used in _CC2500_FrequencyCabr: [wreg+status,2+status,0+pclath+cstack]
 16354                           	line	177
 16355                           	
 16356  2E26                     l21120:	
 16357                           ;CC2500_B1.c: 177: CC2500_WriteCommand(0x33);
 16358  2E26  3033               	movlw	(033h)
 16359  2E27  31A1  2137  31AE   	fcall	_CC2500_WriteCommand
 16360                           	line	178
 16361                           ;CC2500_B1.c: 178: DelayTime_1us(1000);
 16362  2E2A  30E8               	movlw	low(03E8h)
 16363  2E2B  0020               	movlb 0	; select bank0
 16364  2E2C  00A0               	movwf	(?_DelayTime_1us)
 16365  2E2D  3003               	movlw	high(03E8h)
 16366  2E2E  00A1               	movwf	((?_DelayTime_1us))+1
 16367  2E2F  31A4  244C  31AE   	fcall	_DelayTime_1us
 16368                           	line	179
 16369                           	
 16370  2E32                     l2326:	
 16371  2E32  0008               	return
 16372                           	opt stack 0
 16373                           GLOBAL	__end_of_CC2500_FrequencyCabr
 16374  2E33                     	__end_of_CC2500_FrequencyCabr:
 16375 ;; =============== function _CC2500_FrequencyCabr ends ============
 16376                           
 16377                           	signat	_CC2500_FrequencyCabr,88
 16378                           	global	_CC2500_ClearRXFIFO
 16379                           psect	text4926,local,class=CODE,delta=2
 16380                           global __ptext4926
 16381  2D3D                     __ptext4926:
 16382                           
 16383 ;; *************** function _CC2500_ClearRXFIFO *****************
 16384 ;; Defined at:
 16385 ;;		line 169 in file "G:\Program\PIC\Source_File\CC2500_B1.c"
 16386 ;; Parameters:    Size  Location     Type
 16387 ;;		None
 16388 ;; Auto vars:     Size  Location     Type
 16389 ;;		None
 16390 ;; Return value:  Size  Location     Type
 16391 ;;		None               void
 16392 ;; Registers used:
 16393 ;;		wreg, status,2, status,0, pclath, cstack
 16394 ;; Tracked objects:
 16395 ;;		On entry : 0/0
 16396 ;;		On exit  : 0/0
 16397 ;;		Unchanged: 0/0
 16398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 16399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 16400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 16401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 16402 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 16403 ;;Total ram usage:        0 bytes
 16404 ;; Hardware stack levels used:    1
 16405 ;; Hardware stack levels required when called:    6
 16406 ;; This function calls:
 16407 ;;		_CC2500_WriteCommand
 16408 ;; This function is called by:
 16409 ;;		_CC2500_PowerOnInitial
 16410 ;; This function uses a non-reentrant model
 16411 ;;
 16412                           psect	text4926
 16413                           	file	"G:\Program\PIC\Source_File\CC2500_B1.c"
 16414                           	line	169
 16415                           	global	__size_of_CC2500_ClearRXFIFO
 16416  0005                     	__size_of_CC2500_ClearRXFIFO	equ	__end_of_CC2500_ClearRXFIFO-_CC2500_ClearRXFIFO
 16417                           	
 16418  2D3D                     _CC2500_ClearRXFIFO:	
 16419                           	opt	stack 8
 16420                           ; Regs used in _CC2500_ClearRXFIFO: [wreg+status,2+status,0+pclath+cstack]
 16421                           	line	170
 16422                           	
 16423  2D3D                     l21118:	
 16424                           ;CC2500_B1.c: 170: CC2500_WriteCommand(0x3A);
 16425  2D3D  303A               	movlw	(03Ah)
 16426  2D3E  31A1  2137  31AD   	fcall	_CC2500_WriteCommand
 16427                           	line	171
 16428                           	
 16429  2D41                     l2323:	
 16430  2D41  0008               	return
 16431                           	opt stack 0
 16432                           GLOBAL	__end_of_CC2500_ClearRXFIFO
 16433  2D42                     	__end_of_CC2500_ClearRXFIFO:
 16434 ;; =============== function _CC2500_ClearRXFIFO ends ============
 16435                           
 16436                           	signat	_CC2500_ClearRXFIFO,88
 16437                           	global	_CC2500_ClearTXFIFO
 16438                           psect	text4927,local,class=CODE,delta=2
 16439                           global __ptext4927
 16440  2D38                     __ptext4927:
 16441                           
 16442 ;; *************** function _CC2500_ClearTXFIFO *****************
 16443 ;; Defined at:
 16444 ;;		line 162 in file "G:\Program\PIC\Source_File\CC2500_B1.c"
 16445 ;; Parameters:    Size  Location     Type
 16446 ;;		None
 16447 ;; Auto vars:     Size  Location     Type
 16448 ;;		None
 16449 ;; Return value:  Size  Location     Type
 16450 ;;		None               void
 16451 ;; Registers used:
 16452 ;;		wreg, status,2, status,0, pclath, cstack
 16453 ;; Tracked objects:
 16454 ;;		On entry : 0/0
 16455 ;;		On exit  : 0/0
 16456 ;;		Unchanged: 0/0
 16457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 16458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 16459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 16460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 16461 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 16462 ;;Total ram usage:        0 bytes
 16463 ;; Hardware stack levels used:    1
 16464 ;; Hardware stack levels required when called:    6
 16465 ;; This function calls:
 16466 ;;		_CC2500_WriteCommand
 16467 ;; This function is called by:
 16468 ;;		_CC2500_PowerOnInitial
 16469 ;; This function uses a non-reentrant model
 16470 ;;
 16471                           psect	text4927
 16472                           	file	"G:\Program\PIC\Source_File\CC2500_B1.c"
 16473                           	line	162
 16474                           	global	__size_of_CC2500_ClearTXFIFO
 16475  0005                     	__size_of_CC2500_ClearTXFIFO	equ	__end_of_CC2500_ClearTXFIFO-_CC2500_ClearTXFIFO
 16476                           	
 16477  2D38                     _CC2500_ClearTXFIFO:	
 16478                           	opt	stack 8
 16479                           ; Regs used in _CC2500_ClearTXFIFO: [wreg+status,2+status,0+pclath+cstack]
 16480                           	line	163
 16481                           	
 16482  2D38                     l21116:	
 16483                           ;CC2500_B1.c: 163: CC2500_WriteCommand(0x3B);
 16484  2D38  303B               	movlw	(03Bh)
 16485  2D39  31A1  2137  31AD   	fcall	_CC2500_WriteCommand
 16486                           	line	164
 16487                           	
 16488  2D3C                     l2320:	
 16489  2D3C  0008               	return
 16490                           	opt stack 0
 16491                           GLOBAL	__end_of_CC2500_ClearTXFIFO
 16492  2D3D                     	__end_of_CC2500_ClearTXFIFO:
 16493 ;; =============== function _CC2500_ClearTXFIFO ends ============
 16494                           
 16495                           	signat	_CC2500_ClearTXFIFO,88
 16496                           	global	_CC2500_InitPATable
 16497                           psect	text4928,local,class=CODE,delta=2
 16498                           global __ptext4928
 16499  22CA                     __ptext4928:
 16500                           
 16501 ;; *************** function _CC2500_InitPATable *****************
 16502 ;; Defined at:
 16503 ;;		line 148 in file "G:\Program\PIC\Source_File\CC2500_B1.c"
 16504 ;; Parameters:    Size  Location     Type
 16505 ;;		None
 16506 ;; Auto vars:     Size  Location     Type
 16507 ;;  loop_d          1    7[BANK0 ] unsigned char 
 16508 ;;  temp            1    6[BANK0 ] unsigned char 
 16509 ;; Return value:  Size  Location     Type
 16510 ;;		None               void
 16511 ;; Registers used:
 16512 ;;		wreg, status,2, status,0, pclath, cstack
 16513 ;; Tracked objects:
 16514 ;;		On entry : 0/0
 16515 ;;		On exit  : 0/0
 16516 ;;		Unchanged: 0/0
 16517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 16518 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 16519 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 16520 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 16521 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 16522 ;;Total ram usage:        3 bytes
 16523 ;; Hardware stack levels used:    1
 16524 ;; Hardware stack levels required when called:    6
 16525 ;; This function calls:
 16526 ;;		_CC2500_WriteREG
 16527 ;; This function is called by:
 16528 ;;		_CC2500_PowerOnInitial
 16529 ;; This function uses a non-reentrant model
 16530 ;;
 16531                           psect	text4928
 16532                           	file	"G:\Program\PIC\Source_File\CC2500_B1.c"
 16533                           	line	148
 16534                           	global	__size_of_CC2500_InitPATable
 16535  0027                     	__size_of_CC2500_InitPATable	equ	__end_of_CC2500_InitPATable-_CC2500_InitPATable
 16536                           	
 16537  22CA                     _CC2500_InitPATable:	
 16538                           	opt	stack 8
 16539                           ; Regs used in _CC2500_InitPATable: [wreg+status,2+status,0+pclath+cstack]
 16540                           	line	152
 16541                           	
 16542  22CA                     l19550:	
 16543                           ;CC2500_B1.c: 149: unsigned char loop_d;
 16544                           ;CC2500_B1.c: 150: unsigned char temp;
 16545                           ;CC2500_B1.c: 152: for(loop_d=0;loop_d<8;loop_d++)
 16546  22CA  0020               	movlb 0	; select bank0
 16547  22CB  01A7               	clrf	(CC2500_InitPATable@loop_d)
 16548                           	
 16549  22CC                     l19552:	
 16550  22CC  3008               	movlw	(08h)
 16551  22CD  0227               	subwf	(CC2500_InitPATable@loop_d),w
 16552  22CE  1C03               	skipc
 16553  22CF  2AD1               	goto	u7681
 16554  22D0  2AD2               	goto	u7680
 16555  22D1                     u7681:
 16556  22D1  2AD4               	goto	l19556
 16557  22D2                     u7680:
 16558  22D2  2AF0               	goto	l2317
 16559                           	
 16560  22D3                     l19554:	
 16561  22D3  2AF0               	goto	l2317
 16562                           	line	153
 16563                           	
 16564  22D4                     l2315:	
 16565                           	line	154
 16566                           	
 16567  22D4                     l19556:	
 16568                           ;CC2500_B1.c: 153: {
 16569                           ;CC2500_B1.c: 154: temp=CC2500_patable_vaule[loop_d];
 16570  22D4  0827               	movf	(CC2500_InitPATable@loop_d),w
 16571  22D5  3E5F               	addlw	low(_CC2500_patable_vaule|8000h)
 16572  22D6  3198               	movlp	high __stringtab
 16573  22D7  000A               	callw
 16574  22D8  31A2               	pagesel	$
 16575  22D9  00A5               	movwf	(??_CC2500_InitPATable+0)+0
 16576  22DA  0825               	movf	(??_CC2500_InitPATable+0)+0,w
 16577  22DB  00A6               	movwf	(CC2500_InitPATable@temp)
 16578                           	line	155
 16579                           	
 16580  22DC                     l19558:	
 16581                           ;CC2500_B1.c: 155: CC2500_WriteREG(0x3E,temp);
 16582  22DC  0826               	movf	(CC2500_InitPATable@temp),w
 16583  22DD  00A5               	movwf	(??_CC2500_InitPATable+0)+0
 16584  22DE  0825               	movf	(??_CC2500_InitPATable+0)+0,w
 16585  22DF  00A2               	movwf	(?_CC2500_WriteREG)
 16586  22E0  303E               	movlw	(03Eh)
 16587  22E1  3190  2000  31A2   	fcall	_CC2500_WriteREG
 16588                           	line	152
 16589                           	
 16590  22E4                     l19560:	
 16591  22E4  3001               	movlw	(01h)
 16592  22E5  0020               	movlb 0	; select bank0
 16593  22E6  00A5               	movwf	(??_CC2500_InitPATable+0)+0
 16594  22E7  0825               	movf	(??_CC2500_InitPATable+0)+0,w
 16595  22E8  07A7               	addwf	(CC2500_InitPATable@loop_d),f
 16596                           	
 16597  22E9                     l19562:	
 16598  22E9  3008               	movlw	(08h)
 16599  22EA  0227               	subwf	(CC2500_InitPATable@loop_d),w
 16600  22EB  1C03               	skipc
 16601  22EC  2AEE               	goto	u7691
 16602  22ED  2AEF               	goto	u7690
 16603  22EE                     u7691:
 16604  22EE  2AD4               	goto	l19556
 16605  22EF                     u7690:
 16606  22EF  2AF0               	goto	l2317
 16607                           	
 16608  22F0                     l2316:	
 16609                           	line	157
 16610                           	
 16611  22F0                     l2317:	
 16612  22F0  0008               	return
 16613                           	opt stack 0
 16614                           GLOBAL	__end_of_CC2500_InitPATable
 16615  22F1                     	__end_of_CC2500_InitPATable:
 16616 ;; =============== function _CC2500_InitPATable ends ============
 16617                           
 16618                           	signat	_CC2500_InitPATable,88
 16619                           	global	_CC2500_InitSetREG
 16620                           psect	text4929,local,class=CODE,delta=2
 16621                           global __ptext4929
 16622  23ED                     __ptext4929:
 16623                           
 16624 ;; *************** function _CC2500_InitSetREG *****************
 16625 ;; Defined at:
 16626 ;;		line 132 in file "G:\Program\PIC\Source_File\CC2500_B1.c"
 16627 ;; Parameters:    Size  Location     Type
 16628 ;;		None
 16629 ;; Auto vars:     Size  Location     Type
 16630 ;;  loop_c          1    8[BANK0 ] unsigned char 
 16631 ;;  temp2           1    7[BANK0 ] unsigned char 
 16632 ;;  temp1           1    6[BANK0 ] unsigned char 
 16633 ;; Return value:  Size  Location     Type
 16634 ;;		None               void
 16635 ;; Registers used:
 16636 ;;		wreg, status,2, status,0, pclath, cstack
 16637 ;; Tracked objects:
 16638 ;;		On entry : 0/0
 16639 ;;		On exit  : 0/0
 16640 ;;		Unchanged: 0/0
 16641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 16642 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 16643 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 16644 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 16645 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 16646 ;;Total ram usage:        4 bytes
 16647 ;; Hardware stack levels used:    1
 16648 ;; Hardware stack levels required when called:    6
 16649 ;; This function calls:
 16650 ;;		_CC2500_WriteREG
 16651 ;; This function is called by:
 16652 ;;		_CC2500_PowerOnInitial
 16653 ;; This function uses a non-reentrant model
 16654 ;;
 16655                           psect	text4929
 16656                           	file	"G:\Program\PIC\Source_File\CC2500_B1.c"
 16657                           	line	132
 16658                           	global	__size_of_CC2500_InitSetREG
 16659  002F                     	__size_of_CC2500_InitSetREG	equ	__end_of_CC2500_InitSetREG-_CC2500_InitSetREG
 16660                           	
 16661  23ED                     _CC2500_InitSetREG:	
 16662                           	opt	stack 8
 16663                           ; Regs used in _CC2500_InitSetREG: [wreg+status,2+status,0+pclath+cstack]
 16664                           	line	136
 16665                           	
 16666  23ED                     l19536:	
 16667                           ;CC2500_B1.c: 133: unsigned char loop_c;
 16668                           ;CC2500_B1.c: 134: unsigned char temp1,temp2;
 16669                           ;CC2500_B1.c: 136: for(loop_c=0;loop_c<47;loop_c++)
 16670  23ED  0020               	movlb 0	; select bank0
 16671  23EE  01A8               	clrf	(CC2500_InitSetREG@loop_c)
 16672                           	
 16673  23EF                     l19538:	
 16674  23EF  302F               	movlw	(02Fh)
 16675  23F0  0228               	subwf	(CC2500_InitSetREG@loop_c),w
 16676  23F1  1C03               	skipc
 16677  23F2  2BF4               	goto	u7661
 16678  23F3  2BF5               	goto	u7660
 16679  23F4                     u7661:
 16680  23F4  2BF7               	goto	l19542
 16681  23F5                     u7660:
 16682  23F5  2C1B               	goto	l2312
 16683                           	
 16684  23F6                     l19540:	
 16685  23F6  2C1B               	goto	l2312
 16686                           	line	137
 16687                           	
 16688  23F7                     l2310:	
 16689                           	line	138
 16690                           	
 16691  23F7                     l19542:	
 16692                           ;CC2500_B1.c: 137: {
 16693                           ;CC2500_B1.c: 138: temp1 = CC2500_registers_address[loop_c];
 16694  23F7  0828               	movf	(CC2500_InitSetREG@loop_c),w
 16695  23F8  3E01               	addlw	low(_CC2500_registers_address|8000h)
 16696  23F9  3198               	movlp	high __stringtab
 16697  23FA  000A               	callw
 16698  23FB  31A3               	pagesel	$
 16699  23FC  00A5               	movwf	(??_CC2500_InitSetREG+0)+0
 16700  23FD  0825               	movf	(??_CC2500_InitSetREG+0)+0,w
 16701  23FE  00A6               	movwf	(CC2500_InitSetREG@temp1)
 16702                           	line	139
 16703                           ;CC2500_B1.c: 139: temp2 = CC2500_rfSettings[loop_c];
 16704  23FF  0828               	movf	(CC2500_InitSetREG@loop_c),w
 16705  2400  3E30               	addlw	low(_CC2500_rfSettings|8000h)
 16706  2401  3198               	movlp	high __stringtab
 16707  2402  000A               	callw
 16708  2403  31A4               	pagesel	$
 16709  2404  00A5               	movwf	(??_CC2500_InitSetREG+0)+0
 16710  2405  0825               	movf	(??_CC2500_InitSetREG+0)+0,w
 16711  2406  00A7               	movwf	(CC2500_InitSetREG@temp2)
 16712                           	line	141
 16713                           	
 16714  2407                     l19544:	
 16715                           ;CC2500_B1.c: 141: CC2500_WriteREG(temp1,temp2);
 16716  2407  0827               	movf	(CC2500_InitSetREG@temp2),w
 16717  2408  00A5               	movwf	(??_CC2500_InitSetREG+0)+0
 16718  2409  0825               	movf	(??_CC2500_InitSetREG+0)+0,w
 16719  240A  00A2               	movwf	(?_CC2500_WriteREG)
 16720  240B  0826               	movf	(CC2500_InitSetREG@temp1),w
 16721  240C  3190  2000  31A3   	fcall	_CC2500_WriteREG
 16722                           	line	136
 16723                           	
 16724  240F                     l19546:	
 16725  240F  3001               	movlw	(01h)
 16726  2410  0020               	movlb 0	; select bank0
 16727  2411  00A5               	movwf	(??_CC2500_InitSetREG+0)+0
 16728  2412  0825               	movf	(??_CC2500_InitSetREG+0)+0,w
 16729  2413  07A8               	addwf	(CC2500_InitSetREG@loop_c),f
 16730                           	
 16731  2414                     l19548:	
 16732  2414  302F               	movlw	(02Fh)
 16733  2415  0228               	subwf	(CC2500_InitSetREG@loop_c),w
 16734  2416  1C03               	skipc
 16735  2417  2C19               	goto	u7671
 16736  2418  2C1A               	goto	u7670
 16737  2419                     u7671:
 16738  2419  2BF7               	goto	l19542
 16739  241A                     u7670:
 16740  241A  2C1B               	goto	l2312
 16741                           	
 16742  241B                     l2311:	
 16743                           	line	143
 16744                           	
 16745  241B                     l2312:	
 16746  241B  0008               	return
 16747                           	opt stack 0
 16748                           GLOBAL	__end_of_CC2500_InitSetREG
 16749  241C                     	__end_of_CC2500_InitSetREG:
 16750 ;; =============== function _CC2500_InitSetREG ends ============
 16751                           
 16752                           	signat	_CC2500_InitSetREG,88
 16753                           	global	_CC2500_RxData
 16754                           psect	text4930,local,class=CODE,delta=2
 16755                           global __ptext4930
 16756  1E09                     __ptext4930:
 16757                           
 16758 ;; *************** function _CC2500_RxData *****************
 16759 ;; Defined at:
 16760 ;;		line 57 in file "G:\Program\PIC\Source_File\CC2500_B1.c"
 16761 ;; Parameters:    Size  Location     Type
 16762 ;;		None
 16763 ;; Auto vars:     Size  Location     Type
 16764 ;;  loop_f          1    5[BANK0 ] unsigned char 
 16765 ;; Return value:  Size  Location     Type
 16766 ;;		None               void
 16767 ;; Registers used:
 16768 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16769 ;; Tracked objects:
 16770 ;;		On entry : 0/0
 16771 ;;		On exit  : 0/0
 16772 ;;		Unchanged: 0/0
 16773 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 16774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 16775 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 16776 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 16777 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 16778 ;;Total ram usage:        2 bytes
 16779 ;; Hardware stack levels used:    1
 16780 ;; Hardware stack levels required when called:    6
 16781 ;; This function calls:
 16782 ;;		_CC2500_ReadStatus
 16783 ;;		_CC2500_WriteByte
 16784 ;;		_CC2500_ReadByte
 16785 ;;		_CC2500_WriteCommand
 16786 ;;		_setRF_RxStatus
 16787 ;; This function is called by:
 16788 ;;		_setRF_Main
 16789 ;; This function uses a non-reentrant model
 16790 ;;
 16791                           psect	text4930
 16792                           	file	"G:\Program\PIC\Source_File\CC2500_B1.c"
 16793                           	line	57
 16794                           	global	__size_of_CC2500_RxData
 16795  007C                     	__size_of_CC2500_RxData	equ	__end_of_CC2500_RxData-_CC2500_RxData
 16796                           	
 16797  1E09                     _CC2500_RxData:	
 16798                           	opt	stack 7
 16799                           ; Regs used in _CC2500_RxData: [wreg+fsr1l-status,0+pclath+cstack]
 16800                           	line	62
 16801                           	
 16802  1E09                     l21074:	
 16803                           ;CC2500_B1.c: 58: unsigned char loop_f;
 16804                           ;CC2500_B1.c: 62: if(RB0 == 1)
 16805  1E09  0020               	movlb 0	; select bank0
 16806  1E0A  1C0D               	btfss	(104/8),(104)&7
 16807  1E0B  2E0D               	goto	u9661
 16808  1E0C  2E0E               	goto	u9660
 16809  1E0D                     u9661:
 16810  1E0D  2E16               	goto	l21078
 16811  1E0E                     u9660:
 16812  1E0E  2E10               	goto	l2284
 16813                           	line	64
 16814                           	
 16815  1E0F                     l21076:	
 16816                           ;CC2500_B1.c: 63: {
 16817                           ;CC2500_B1.c: 64: while(RB0 == 1);
 16818  1E0F  2E10               	goto	l2284
 16819                           	
 16820  1E10                     l2285:	
 16821                           	
 16822  1E10                     l2284:	
 16823  1E10  180D               	btfsc	(104/8),(104)&7
 16824  1E11  2E13               	goto	u9671
 16825  1E12  2E14               	goto	u9670
 16826  1E13                     u9671:
 16827  1E13  2E10               	goto	l2284
 16828  1E14                     u9670:
 16829  1E14  2E16               	goto	l21078
 16830                           	
 16831  1E15                     l2286:	
 16832  1E15  2E16               	goto	l21078
 16833                           	line	65
 16834                           	
 16835  1E16                     l2283:	
 16836                           	line	66
 16837                           	
 16838  1E16                     l21078:	
 16839                           ;CC2500_B1.c: 65: }
 16840                           ;CC2500_B1.c: 66: CC2500_ReadStatus(0x3B);
 16841  1E16  303B               	movlw	(03Bh)
 16842  1E17  31A1  21CA  319E   	fcall	_CC2500_ReadStatus
 16843                           	line	67
 16844                           	
 16845  1E1A                     l21080:	
 16846                           ;CC2500_B1.c: 67: if(s_data != 0)
 16847  1E1A  0021               	movlb 1	; select bank1
 16848  1E1B  0842               	movf	(_s_data)^080h,w
 16849  1E1C  1D03               	skipz
 16850  1E1D  2E1F               	goto	u9680
 16851  1E1E  2E76               	goto	l21112
 16852  1E1F                     u9680:
 16853                           	line	70
 16854                           	
 16855  1E1F                     l21082:	
 16856                           ;CC2500_B1.c: 69: {
 16857                           ;CC2500_B1.c: 70: RC4=0;
 16858  1E1F  0020               	movlb 0	; select bank0
 16859  1E20  120E               	bcf	(116/8),(116)&7
 16860                           	line	71
 16861                           	
 16862  1E21                     l21084:	
 16863                           ;CC2500_B1.c: 71: SPI0Buffer=0x3F+0xC0;
 16864  1E21  30FF               	movlw	(0FFh)
 16865  1E22  00A4               	movwf	(??_CC2500_RxData+0)+0
 16866  1E23  0824               	movf	(??_CC2500_RxData+0)+0,w
 16867  1E24  0021               	movlb 1	; select bank1
 16868  1E25  00BE               	movwf	(_SPI0Buffer)^080h
 16869                           	line	72
 16870                           ;CC2500_B1.c: 72: while(RC2==1);
 16871  1E26  2E27               	goto	l2288
 16872                           	
 16873  1E27                     l2289:	
 16874                           	
 16875  1E27                     l2288:	
 16876  1E27  0020               	movlb 0	; select bank0
 16877  1E28  190E               	btfsc	(114/8),(114)&7
 16878  1E29  2E2B               	goto	u9691
 16879  1E2A  2E2C               	goto	u9690
 16880  1E2B                     u9691:
 16881  1E2B  2E27               	goto	l2288
 16882  1E2C                     u9690:
 16883  1E2C  2E2D               	goto	l21086
 16884                           	
 16885  1E2D                     l2290:	
 16886                           	line	73
 16887                           	
 16888  1E2D                     l21086:	
 16889                           ;CC2500_B1.c: 73: CC2500_WriteByte();
 16890  1E2D  31A2  2257  319E   	fcall	_CC2500_WriteByte
 16891                           	line	75
 16892                           ;CC2500_B1.c: 75: CC2500_ReadByte();
 16893  1E30  31A3  2368  319E   	fcall	_CC2500_ReadByte
 16894                           	line	76
 16895                           	
 16896  1E33                     l21088:	
 16897                           ;CC2500_B1.c: 76: Rx_Length=SPI0Buffer;
 16898  1E33  0021               	movlb 1	; select bank1
 16899  1E34  083E               	movf	(_SPI0Buffer)^080h,w
 16900  1E35  0020               	movlb 0	; select bank0
 16901  1E36  00A4               	movwf	(??_CC2500_RxData+0)+0
 16902  1E37  0824               	movf	(??_CC2500_RxData+0)+0,w
 16903  1E38  0021               	movlb 1	; select bank1
 16904  1E39  00BD               	movwf	(_Rx_Length)^080h
 16905                           	line	77
 16906                           	
 16907  1E3A                     l21090:	
 16908                           ;CC2500_B1.c: 77: for(loop_f=0;loop_f<Rx_Length;loop_f++)
 16909  1E3A  0020               	movlb 0	; select bank0
 16910  1E3B  01A5               	clrf	(CC2500_RxData@loop_f)
 16911  1E3C  2E4F               	goto	l21098
 16912                           	line	78
 16913                           	
 16914  1E3D                     l2292:	
 16915                           	line	79
 16916                           	
 16917  1E3D                     l21092:	
 16918                           ;CC2500_B1.c: 78: {
 16919                           ;CC2500_B1.c: 79: CC2500_ReadByte();
 16920  1E3D  31A3  2368  319E   	fcall	_CC2500_ReadByte
 16921                           	line	80
 16922                           	
 16923  1E40                     l21094:	
 16924                           ;CC2500_B1.c: 80: RF_Data[loop_f]=SPI0Buffer;
 16925  1E40  0021               	movlb 1	; select bank1
 16926  1E41  083E               	movf	(_SPI0Buffer)^080h,w
 16927  1E42  0020               	movlb 0	; select bank0
 16928  1E43  00A4               	movwf	(??_CC2500_RxData+0)+0
 16929  1E44  0825               	movf	(CC2500_RxData@loop_f),w
 16930  1E45  3EA0               	addlw	_RF_Data&0ffh
 16931  1E46  0086               	movwf	fsr1l
 16932  1E47  0187               	clrf fsr1h	
 16933                           	
 16934  1E48  0824               	movf	(??_CC2500_RxData+0)+0,w
 16935  1E49  0081               	movwf	indf1
 16936                           	line	77
 16937                           	
 16938  1E4A                     l21096:	
 16939  1E4A  3001               	movlw	(01h)
 16940  1E4B  00A4               	movwf	(??_CC2500_RxData+0)+0
 16941  1E4C  0824               	movf	(??_CC2500_RxData+0)+0,w
 16942  1E4D  07A5               	addwf	(CC2500_RxData@loop_f),f
 16943  1E4E  2E4F               	goto	l21098
 16944                           	
 16945  1E4F                     l2291:	
 16946                           	
 16947  1E4F                     l21098:	
 16948  1E4F  0021               	movlb 1	; select bank1
 16949  1E50  083D               	movf	(_Rx_Length)^080h,w
 16950  1E51  0020               	movlb 0	; select bank0
 16951  1E52  0225               	subwf	(CC2500_RxData@loop_f),w
 16952  1E53  1C03               	skipc
 16953  1E54  2E56               	goto	u9701
 16954  1E55  2E57               	goto	u9700
 16955  1E56                     u9701:
 16956  1E56  2E3D               	goto	l21092
 16957  1E57                     u9700:
 16958  1E57  2E58               	goto	l21100
 16959                           	
 16960  1E58                     l2293:	
 16961                           	line	82
 16962                           	
 16963  1E58                     l21100:	
 16964                           ;CC2500_B1.c: 81: }
 16965                           ;CC2500_B1.c: 82: CC2500_ReadByte();
 16966  1E58  31A3  2368  319E   	fcall	_CC2500_ReadByte
 16967                           	line	83
 16968                           	
 16969  1E5B                     l21102:	
 16970                           ;CC2500_B1.c: 83: RSSI=SPI0Buffer;
 16971  1E5B  0021               	movlb 1	; select bank1
 16972  1E5C  083E               	movf	(_SPI0Buffer)^080h,w
 16973  1E5D  0020               	movlb 0	; select bank0
 16974  1E5E  00A4               	movwf	(??_CC2500_RxData+0)+0
 16975  1E5F  0824               	movf	(??_CC2500_RxData+0)+0,w
 16976  1E60  0021               	movlb 1	; select bank1
 16977  1E61  00BC               	movwf	(_RSSI)^080h
 16978                           	line	84
 16979                           	
 16980  1E62                     l21104:	
 16981                           ;CC2500_B1.c: 84: CC2500_ReadByte();
 16982  1E62  31A3  2368  319E   	fcall	_CC2500_ReadByte
 16983                           	line	85
 16984                           ;CC2500_B1.c: 85: CRC=SPI0Buffer;
 16985  1E65  0021               	movlb 1	; select bank1
 16986  1E66  083E               	movf	(_SPI0Buffer)^080h,w
 16987  1E67  0020               	movlb 0	; select bank0
 16988  1E68  00A4               	movwf	(??_CC2500_RxData+0)+0
 16989  1E69  0824               	movf	(??_CC2500_RxData+0)+0,w
 16990  1E6A  0021               	movlb 1	; select bank1
 16991  1E6B  00B7               	movwf	(_CRC)^080h
 16992                           	line	86
 16993                           	
 16994  1E6C                     l21106:	
 16995                           ;CC2500_B1.c: 86: RC4=1;
 16996  1E6C  0020               	movlb 0	; select bank0
 16997  1E6D  160E               	bsf	(116/8),(116)&7
 16998                           	line	87
 16999                           	
 17000  1E6E                     l21108:	
 17001                           ;CC2500_B1.c: 87: if(CRC & 0x80)
 17002  1E6E  0021               	movlb 1	; select bank1
 17003  1E6F  1FB7               	btfss	(_CRC)^080h,(7)&7
 17004  1E70  2E72               	goto	u9711
 17005  1E71  2E73               	goto	u9710
 17006  1E72                     u9711:
 17007  1E72  2E76               	goto	l21112
 17008  1E73                     u9710:
 17009                           	line	88
 17010                           	
 17011  1E73                     l21110:	
 17012                           ;CC2500_B1.c: 88: Receive_OK=1;
 17013  1E73  1570               	bsf	(_Receive_OK/8),(_Receive_OK)&7
 17014  1E74  2E76               	goto	l21112
 17015                           	
 17016  1E75                     l2294:	
 17017  1E75  2E76               	goto	l21112
 17018                           	line	89
 17019                           	
 17020  1E76                     l2287:	
 17021                           	line	90
 17022                           	
 17023  1E76                     l21112:	
 17024                           ;CC2500_B1.c: 89: }
 17025                           ;CC2500_B1.c: 90: CC2500_WriteCommand(0x36);
 17026  1E76  3036               	movlw	(036h)
 17027  1E77  31A1  2137  319E   	fcall	_CC2500_WriteCommand
 17028                           	line	91
 17029                           ;CC2500_B1.c: 91: CC2500_WriteCommand(0x3A);
 17030  1E7A  303A               	movlw	(03Ah)
 17031  1E7B  31A1  2137  319E   	fcall	_CC2500_WriteCommand
 17032                           	line	92
 17033                           	
 17034  1E7E                     l21114:	
 17035                           ;CC2500_B1.c: 92: setRF_RxStatus(1,0);
 17036  1E7E  0020               	movlb 0	; select bank0
 17037  1E7F  01A2               	clrf	(?_setRF_RxStatus)
 17038  1E80  3001               	movlw	(01h)
 17039  1E81  31AE  26F6  319E   	fcall	_setRF_RxStatus
 17040                           	line	93
 17041                           	
 17042  1E84                     l2295:	
 17043  1E84  0008               	return
 17044                           	opt stack 0
 17045                           GLOBAL	__end_of_CC2500_RxData
 17046  1E85                     	__end_of_CC2500_RxData:
 17047 ;; =============== function _CC2500_RxData ends ============
 17048                           
 17049                           	signat	_CC2500_RxData,88
 17050                           	global	_CC2500_TxData
 17051                           psect	text4931,local,class=CODE,delta=2
 17052                           global __ptext4931
 17053  1A15                     __ptext4931:
 17054                           
 17055 ;; *************** function _CC2500_TxData *****************
 17056 ;; Defined at:
 17057 ;;		line 31 in file "G:\Program\PIC\Source_File\CC2500_B1.c"
 17058 ;; Parameters:    Size  Location     Type
 17059 ;;		None
 17060 ;; Auto vars:     Size  Location     Type
 17061 ;;  loop_e          1    5[BANK0 ] unsigned char 
 17062 ;; Return value:  Size  Location     Type
 17063 ;;		None               void
 17064 ;; Registers used:
 17065 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17066 ;; Tracked objects:
 17067 ;;		On entry : 0/0
 17068 ;;		On exit  : 0/0
 17069 ;;		Unchanged: 0/0
 17070 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 17071 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 17072 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 17073 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 17074 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 17075 ;;Total ram usage:        2 bytes
 17076 ;; Hardware stack levels used:    1
 17077 ;; Hardware stack levels required when called:    6
 17078 ;; This function calls:
 17079 ;;		_CC2500_WriteByte
 17080 ;;		_CC2500_WriteCommand
 17081 ;; This function is called by:
 17082 ;;		_setRF_Main
 17083 ;; This function uses a non-reentrant model
 17084 ;;
 17085                           psect	text4931
 17086                           	file	"G:\Program\PIC\Source_File\CC2500_B1.c"
 17087                           	line	31
 17088                           	global	__size_of_CC2500_TxData
 17089  0054                     	__size_of_CC2500_TxData	equ	__end_of_CC2500_TxData-_CC2500_TxData
 17090                           	
 17091  1A15                     _CC2500_TxData:	
 17092                           	opt	stack 7
 17093                           ; Regs used in _CC2500_TxData: [wreg+fsr1l-status,0+pclath+cstack]
 17094                           	line	34
 17095                           	
 17096  1A15                     l19468:	
 17097                           ;CC2500_B1.c: 32: unsigned char loop_e;
 17098                           ;CC2500_B1.c: 34: RC4=0;
 17099  1A15  0020               	movlb 0	; select bank0
 17100  1A16  120E               	bcf	(116/8),(116)&7
 17101                           	line	35
 17102                           	
 17103  1A17                     l19470:	
 17104                           ;CC2500_B1.c: 35: SPI0Buffer=0x3F+0x40;
 17105  1A17  307F               	movlw	(07Fh)
 17106  1A18  00A4               	movwf	(??_CC2500_TxData+0)+0
 17107  1A19  0824               	movf	(??_CC2500_TxData+0)+0,w
 17108  1A1A  0021               	movlb 1	; select bank1
 17109  1A1B  00BE               	movwf	(_SPI0Buffer)^080h
 17110                           	line	36
 17111                           ;CC2500_B1.c: 36: while(RC2==1);
 17112  1A1C  2A1D               	goto	l2268
 17113                           	
 17114  1A1D                     l2269:	
 17115                           	
 17116  1A1D                     l2268:	
 17117  1A1D  0020               	movlb 0	; select bank0
 17118  1A1E  190E               	btfsc	(114/8),(114)&7
 17119  1A1F  2A21               	goto	u7561
 17120  1A20  2A22               	goto	u7560
 17121  1A21                     u7561:
 17122  1A21  2A1D               	goto	l2268
 17123  1A22                     u7560:
 17124  1A22  2A23               	goto	l19472
 17125                           	
 17126  1A23                     l2270:	
 17127                           	line	37
 17128                           	
 17129  1A23                     l19472:	
 17130                           ;CC2500_B1.c: 37: CC2500_WriteByte();
 17131  1A23  31A2  2257  319A   	fcall	_CC2500_WriteByte
 17132                           	line	38
 17133                           	
 17134  1A26                     l19474:	
 17135                           ;CC2500_B1.c: 38: SPI0Buffer=Tx_Length;
 17136  1A26  0021               	movlb 1	; select bank1
 17137  1A27  083F               	movf	(_Tx_Length)^080h,w
 17138  1A28  0020               	movlb 0	; select bank0
 17139  1A29  00A4               	movwf	(??_CC2500_TxData+0)+0
 17140  1A2A  0824               	movf	(??_CC2500_TxData+0)+0,w
 17141  1A2B  0021               	movlb 1	; select bank1
 17142  1A2C  00BE               	movwf	(_SPI0Buffer)^080h
 17143                           	line	39
 17144                           	
 17145  1A2D                     l19476:	
 17146                           ;CC2500_B1.c: 39: CC2500_WriteByte();
 17147  1A2D  31A2  2257  319A   	fcall	_CC2500_WriteByte
 17148                           	line	40
 17149                           	
 17150  1A30                     l19478:	
 17151                           ;CC2500_B1.c: 40: for(loop_e=0;loop_e<Tx_Length;loop_e++)
 17152  1A30  0020               	movlb 0	; select bank0
 17153  1A31  01A5               	clrf	(CC2500_TxData@loop_e)
 17154  1A32  2A45               	goto	l19486
 17155                           	line	41
 17156                           	
 17157  1A33                     l2272:	
 17158                           	line	42
 17159                           	
 17160  1A33                     l19480:	
 17161                           ;CC2500_B1.c: 41: {
 17162                           ;CC2500_B1.c: 42: SPI0Buffer=RF_Data[loop_e];
 17163  1A33  0825               	movf	(CC2500_TxData@loop_e),w
 17164  1A34  3EA0               	addlw	_RF_Data&0ffh
 17165  1A35  0086               	movwf	fsr1l
 17166  1A36  0187               	clrf fsr1h	
 17167                           	
 17168  1A37  0801               	movf	indf1,w
 17169  1A38  00A4               	movwf	(??_CC2500_TxData+0)+0
 17170  1A39  0824               	movf	(??_CC2500_TxData+0)+0,w
 17171  1A3A  0021               	movlb 1	; select bank1
 17172  1A3B  00BE               	movwf	(_SPI0Buffer)^080h
 17173                           	line	43
 17174                           	
 17175  1A3C                     l19482:	
 17176                           ;CC2500_B1.c: 43: CC2500_WriteByte();
 17177  1A3C  31A2  2257  319A   	fcall	_CC2500_WriteByte
 17178                           	line	40
 17179                           	
 17180  1A3F                     l19484:	
 17181  1A3F  3001               	movlw	(01h)
 17182  1A40  0020               	movlb 0	; select bank0
 17183  1A41  00A4               	movwf	(??_CC2500_TxData+0)+0
 17184  1A42  0824               	movf	(??_CC2500_TxData+0)+0,w
 17185  1A43  07A5               	addwf	(CC2500_TxData@loop_e),f
 17186  1A44  2A45               	goto	l19486
 17187                           	
 17188  1A45                     l2271:	
 17189                           	
 17190  1A45                     l19486:	
 17191  1A45  0021               	movlb 1	; select bank1
 17192  1A46  083F               	movf	(_Tx_Length)^080h,w
 17193  1A47  0020               	movlb 0	; select bank0
 17194  1A48  0225               	subwf	(CC2500_TxData@loop_e),w
 17195  1A49  1C03               	skipc
 17196  1A4A  2A4C               	goto	u7571
 17197  1A4B  2A4D               	goto	u7570
 17198  1A4C                     u7571:
 17199  1A4C  2A33               	goto	l19480
 17200  1A4D                     u7570:
 17201                           	
 17202  1A4D                     l2273:	
 17203                           	line	45
 17204                           ;CC2500_B1.c: 44: }
 17205                           ;CC2500_B1.c: 45: RC4=1;
 17206  1A4D  160E               	bsf	(116/8),(116)&7
 17207                           	line	46
 17208                           	
 17209  1A4E                     l19488:	
 17210                           ;CC2500_B1.c: 46: CC2500_WriteCommand(0x35);
 17211  1A4E  3035               	movlw	(035h)
 17212  1A4F  31A1  2137  319A   	fcall	_CC2500_WriteCommand
 17213                           	line	47
 17214                           ;CC2500_B1.c: 47: while(RB0==0);
 17215  1A52  2A53               	goto	l2274
 17216                           	
 17217  1A53                     l2275:	
 17218                           	
 17219  1A53                     l2274:	
 17220  1A53  0020               	movlb 0	; select bank0
 17221  1A54  1C0D               	btfss	(104/8),(104)&7
 17222  1A55  2A57               	goto	u7581
 17223  1A56  2A58               	goto	u7580
 17224  1A57                     u7581:
 17225  1A57  2A53               	goto	l2274
 17226  1A58                     u7580:
 17227  1A58  2A5A               	goto	l2277
 17228                           	
 17229  1A59                     l2276:	
 17230                           	line	48
 17231                           ;CC2500_B1.c: 48: while(RB0==1);
 17232  1A59  2A5A               	goto	l2277
 17233                           	
 17234  1A5A                     l2278:	
 17235                           	
 17236  1A5A                     l2277:	
 17237  1A5A  180D               	btfsc	(104/8),(104)&7
 17238  1A5B  2A5D               	goto	u7591
 17239  1A5C  2A5E               	goto	u7590
 17240  1A5D                     u7591:
 17241  1A5D  2A5A               	goto	l2277
 17242  1A5E                     u7590:
 17243  1A5E  2A5F               	goto	l19490
 17244                           	
 17245  1A5F                     l2279:	
 17246                           	line	49
 17247                           	
 17248  1A5F                     l19490:	
 17249                           ;CC2500_B1.c: 49: CC2500_WriteCommand(0x36);
 17250  1A5F  3036               	movlw	(036h)
 17251  1A60  31A1  2137  319A   	fcall	_CC2500_WriteCommand
 17252                           	line	50
 17253                           ;CC2500_B1.c: 50: CC2500_WriteCommand(0x3B);
 17254  1A63  303B               	movlw	(03Bh)
 17255  1A64  31A1  2137  319A   	fcall	_CC2500_WriteCommand
 17256                           	line	51
 17257                           	
 17258  1A67                     l19492:	
 17259                           ;CC2500_B1.c: 51: Transceive_OK=1;
 17260  1A67  16F0               	bsf	(_Transceive_OK/8),(_Transceive_OK)&7
 17261                           	line	52
 17262                           	
 17263  1A68                     l2280:	
 17264  1A68  0008               	return
 17265                           	opt stack 0
 17266                           GLOBAL	__end_of_CC2500_TxData
 17267  1A69                     	__end_of_CC2500_TxData:
 17268 ;; =============== function _CC2500_TxData ends ============
 17269                           
 17270                           	signat	_CC2500_TxData,88
 17271                           	global	_Buzzer_Main
 17272                           psect	text4932,local,class=CODE,delta=2
 17273                           global __ptext4932
 17274  2D33                     __ptext4932:
 17275                           
 17276 ;; *************** function _Buzzer_Main *****************
 17277 ;; Defined at:
 17278 ;;		line 27 in file "G:\Program\PIC\Source_File\Buzzer_B1.c"
 17279 ;; Parameters:    Size  Location     Type
 17280 ;;		None
 17281 ;; Auto vars:     Size  Location     Type
 17282 ;;		None
 17283 ;; Return value:  Size  Location     Type
 17284 ;;		None               void
 17285 ;; Registers used:
 17286 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17287 ;; Tracked objects:
 17288 ;;		On entry : 0/0
 17289 ;;		On exit  : 0/0
 17290 ;;		Unchanged: 0/0
 17291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 17292 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 17293 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 17294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 17295 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 17296 ;;Total ram usage:        0 bytes
 17297 ;; Hardware stack levels used:    1
 17298 ;; Hardware stack levels required when called:    6
 17299 ;; This function calls:
 17300 ;;		_setBuz_Main
 17301 ;; This function is called by:
 17302 ;;		_main
 17303 ;; This function uses a non-reentrant model
 17304 ;;
 17305                           psect	text4932
 17306                           	file	"G:\Program\PIC\Source_File\Buzzer_B1.c"
 17307                           	line	27
 17308                           	global	__size_of_Buzzer_Main
 17309  0005                     	__size_of_Buzzer_Main	equ	__end_of_Buzzer_Main-_Buzzer_Main
 17310                           	
 17311  2D33                     _Buzzer_Main:	
 17312                           	opt	stack 9
 17313                           ; Regs used in _Buzzer_Main: [wreg+fsr1l-status,0+pclath+cstack]
 17314                           	line	29
 17315                           	
 17316  2D33                     l21072:	
 17317                           ;Buzzer_B1.c: 29: setBuz_Main(1);
 17318  2D33  3001               	movlw	(01h)
 17319  2D34  318A  222B  31AD   	fcall	_setBuz_Main
 17320                           	line	31
 17321                           	
 17322  2D37                     l1110:	
 17323  2D37  0008               	return
 17324                           	opt stack 0
 17325                           GLOBAL	__end_of_Buzzer_Main
 17326  2D38                     	__end_of_Buzzer_Main:
 17327 ;; =============== function _Buzzer_Main ends ============
 17328                           
 17329                           	signat	_Buzzer_Main,88
 17330                           	global	_setBuz_Initialization
 17331                           psect	text4933,local,class=CODE,delta=2
 17332                           global __ptext4933
 17333  2DC1                     __ptext4933:
 17334                           
 17335 ;; *************** function _setBuz_Initialization *****************
 17336 ;; Defined at:
 17337 ;;		line 40 in file "G:\Program\PIC\Source_File\Buzzer_B1.c"
 17338 ;; Parameters:    Size  Location     Type
 17339 ;;  buz             1    wreg     unsigned char 
 17340 ;; Auto vars:     Size  Location     Type
 17341 ;;  buz             1    0[COMMON] unsigned char 
 17342 ;; Return value:  Size  Location     Type
 17343 ;;		None               void
 17344 ;; Registers used:
 17345 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17346 ;; Tracked objects:
 17347 ;;		On entry : 0/0
 17348 ;;		On exit  : 0/0
 17349 ;;		Unchanged: 0/0
 17350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 17351 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 17352 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 17353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 17354 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 17355 ;;Total ram usage:        0 bytes
 17356 ;; Hardware stack levels used:    1
 17357 ;; Hardware stack levels required when called:    6
 17358 ;; This function calls:
 17359 ;;		_setBuz_Enable
 17360 ;; This function is called by:
 17361 ;;		_Buzzer_Initialization
 17362 ;; This function uses a non-reentrant model
 17363 ;;
 17364                           psect	text4933
 17365                           	file	"G:\Program\PIC\Source_File\Buzzer_B1.c"
 17366                           	line	40
 17367                           	global	__size_of_setBuz_Initialization
 17368  0009                     	__size_of_setBuz_Initialization	equ	__end_of_setBuz_Initialization-_setBuz_Initializati
                                 on
 17369                           	
 17370  2DC1                     _setBuz_Initialization:	
 17371                           	opt	stack 8
 17372                           ; Regs used in _setBuz_Initialization: [wreg+fsr1l-status,0+pclath+cstack]
 17373                           	line	41
 17374                           	
 17375  2DC1                     l21070:	
 17376                           ;Buzzer_B1.c: 41: setBuz_Enable(1,1);
 17377  2DC1  0020               	movlb 0	; select bank0
 17378  2DC2  01A2               	clrf	(?_setBuz_Enable)
 17379  2DC3  1403               	bsf	status,0
 17380  2DC4  0DA2               	rlf	(?_setBuz_Enable),f
 17381  2DC5  3001               	movlw	(01h)
 17382  2DC6  31AF  2750  31AD   	fcall	_setBuz_Enable
 17383                           	line	42
 17384                           	
 17385  2DC9                     l1116:	
 17386  2DC9  0008               	return
 17387                           	opt stack 0
 17388                           GLOBAL	__end_of_setBuz_Initialization
 17389  2DCA                     	__end_of_setBuz_Initialization:
 17390 ;; =============== function _setBuz_Initialization ends ============
 17391                           
 17392                           	signat	_setBuz_Initialization,4216
 17393                           	global	___awtoft
 17394                           psect	text4934,local,class=CODE,delta=2
 17395                           global __ptext4934
 17396  2340                     __ptext4934:
 17397                           
 17398 ;; *************** function ___awtoft *****************
 17399 ;; Defined at:
 17400 ;;		line 33 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awtoft.c"
 17401 ;; Parameters:    Size  Location     Type
 17402 ;;  c               2   22[BANK0 ] int 
 17403 ;; Auto vars:     Size  Location     Type
 17404 ;;  sign            1   27[BANK0 ] unsigned char 
 17405 ;; Return value:  Size  Location     Type
 17406 ;;                  3   22[BANK0 ] float 
 17407 ;; Registers used:
 17408 ;;		wreg, status,2, status,0, pclath, cstack
 17409 ;; Tracked objects:
 17410 ;;		On entry : 0/0
 17411 ;;		On exit  : 0/0
 17412 ;;		Unchanged: 0/0
 17413 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 17414 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 17415 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 17416 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 17417 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0
 17418 ;;Total ram usage:        6 bytes
 17419 ;; Hardware stack levels used:    1
 17420 ;; Hardware stack levels required when called:    5
 17421 ;; This function calls:
 17422 ;;		___ftpack
 17423 ;; This function is called by:
 17424 ;;		_getPercentValue
 17425 ;;		_setPercentValue
 17426 ;; This function uses a non-reentrant model
 17427 ;;
 17428                           psect	text4934
 17429                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awtoft.c"
 17430                           	line	33
 17431                           	global	__size_of___awtoft
 17432  0028                     	__size_of___awtoft	equ	__end_of___awtoft-___awtoft
 17433                           	
 17434  2340                     ___awtoft:	
 17435                           	opt	stack 2
 17436                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
 17437                           	line	36
 17438                           	
 17439  2340                     l19456:	
 17440  2340  0020               	movlb 0	; select bank0
 17441  2341  01BB               	clrf	(___awtoft@sign)
 17442                           	line	37
 17443  2342  1FB7               	btfss	(___awtoft@c+1),7
 17444  2343  2B45               	goto	u7551
 17445  2344  2B46               	goto	u7550
 17446  2345                     u7551:
 17447  2345  2B4F               	goto	l19460
 17448  2346                     u7550:
 17449                           	line	38
 17450                           	
 17451  2346                     l19458:	
 17452  2346  09B6               	comf	(___awtoft@c),f
 17453  2347  09B7               	comf	(___awtoft@c+1),f
 17454  2348  0AB6               	incf	(___awtoft@c),f
 17455  2349  1903               	skipnz
 17456  234A  0AB7               	incf	(___awtoft@c+1),f
 17457                           	line	39
 17458  234B  01BB               	clrf	(___awtoft@sign)
 17459  234C  1403               	bsf	status,0
 17460  234D  0DBB               	rlf	(___awtoft@sign),f
 17461  234E  2B4F               	goto	l19460
 17462                           	line	40
 17463                           	
 17464  234F                     l14590:	
 17465                           	line	41
 17466                           	
 17467  234F                     l19460:	
 17468  234F  0836               	movf	(___awtoft@c),w
 17469  2350  00A0               	movwf	(?___ftpack)
 17470  2351  0837               	movf	(___awtoft@c+1),w
 17471  2352  00A1               	movwf	(?___ftpack+1)
 17472  2353  01A2               	clrf	(?___ftpack+2)
 17473  2354  308E               	movlw	(08Eh)
 17474  2355  00B9               	movwf	(??___awtoft+0)+0
 17475  2356  0839               	movf	(??___awtoft+0)+0,w
 17476  2357  00A3               	movwf	0+(?___ftpack)+03h
 17477  2358  083B               	movf	(___awtoft@sign),w
 17478  2359  00BA               	movwf	(??___awtoft+1)+0
 17479  235A  083A               	movf	(??___awtoft+1)+0,w
 17480  235B  00A4               	movwf	0+(?___ftpack)+04h
 17481  235C  319D  2520  31A3   	fcall	___ftpack
 17482  235F  0020               	movlb 0	; select bank0
 17483  2360  0820               	movf	(0+(?___ftpack)),w
 17484  2361  00B6               	movwf	(?___awtoft)
 17485  2362  0821               	movf	(1+(?___ftpack)),w
 17486  2363  00B7               	movwf	(?___awtoft+1)
 17487  2364  0822               	movf	(2+(?___ftpack)),w
 17488  2365  00B8               	movwf	(?___awtoft+2)
 17489  2366  2B67               	goto	l14591
 17490                           	
 17491  2367                     l19462:	
 17492                           	line	42
 17493                           	
 17494  2367                     l14591:	
 17495  2367  0008               	return
 17496                           	opt stack 0
 17497                           GLOBAL	__end_of___awtoft
 17498  2368                     	__end_of___awtoft:
 17499 ;; =============== function ___awtoft ends ============
 17500                           
 17501                           	signat	___awtoft,4219
 17502                           	global	___ftmul
 17503                           psect	text4935,local,class=CODE,delta=2
 17504                           global __ptext4935
 17505  0961                     __ptext4935:
 17506                           
 17507 ;; *************** function ___ftmul *****************
 17508 ;; Defined at:
 17509 ;;		line 52 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftmul.c"
 17510 ;; Parameters:    Size  Location     Type
 17511 ;;  f1              3   28[BANK0 ] float 
 17512 ;;  f2              3   31[BANK0 ] float 
 17513 ;; Auto vars:     Size  Location     Type
 17514 ;;  f3_as_produc    3   39[BANK0 ] unsigned um
 17515 ;;  sign            1   43[BANK0 ] unsigned char 
 17516 ;;  cntr            1   42[BANK0 ] unsigned char 
 17517 ;;  exp             1   38[BANK0 ] unsigned char 
 17518 ;; Return value:  Size  Location     Type
 17519 ;;                  3   28[BANK0 ] float 
 17520 ;; Registers used:
 17521 ;;		wreg, status,2, status,0, pclath, cstack
 17522 ;; Tracked objects:
 17523 ;;		On entry : 0/0
 17524 ;;		On exit  : 0/0
 17525 ;;		Unchanged: 0/0
 17526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 17527 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0
 17528 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0
 17529 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 17530 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
       0       0
 17531 ;;Total ram usage:       16 bytes
 17532 ;; Hardware stack levels used:    1
 17533 ;; Hardware stack levels required when called:    5
 17534 ;; This function calls:
 17535 ;;		___ftpack
 17536 ;; This function is called by:
 17537 ;;		_getPercentValue
 17538 ;; This function uses a non-reentrant model
 17539 ;;
 17540                           psect	text4935
 17541                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftmul.c"
 17542                           	line	52
 17543                           	global	__size_of___ftmul
 17544  00CA                     	__size_of___ftmul	equ	__end_of___ftmul-___ftmul
 17545                           	
 17546  0961                     ___ftmul:	
 17547                           	opt	stack 2
 17548                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
 17549                           	line	56
 17550                           	
 17551  0961                     l19406:	
 17552  0961  0020               	movlb 0	; select bank0
 17553  0962  083C               	movf	(___ftmul@f1),w
 17554  0963  00C2               	movwf	((??___ftmul+0)+0)
 17555  0964  083D               	movf	(___ftmul@f1+1),w
 17556  0965  00C3               	movwf	((??___ftmul+0)+0+1)
 17557  0966  083E               	movf	(___ftmul@f1+2),w
 17558  0967  00C4               	movwf	((??___ftmul+0)+0+2)
 17559  0968  1003               	clrc
 17560  0969  0D43               	rlf	(??___ftmul+0)+1,w
 17561  096A  0D44               	rlf	(??___ftmul+0)+2,w
 17562  096B  00C5               	movwf	(??___ftmul+3)+0
 17563  096C  0845               	movf	(??___ftmul+3)+0,w
 17564  096D  00C6               	movwf	(___ftmul@exp)
 17565  096E  08C6               	movf	((___ftmul@exp)),f
 17566  096F  1D03               	skipz
 17567  0970  2972               	goto	u7431
 17568  0971  2973               	goto	u7430
 17569  0972                     u7431:
 17570  0972  297B               	goto	l19412
 17571  0973                     u7430:
 17572                           	line	57
 17573                           	
 17574  0973                     l19408:	
 17575  0973  3000               	movlw	0x0
 17576  0974  00BC               	movwf	(?___ftmul)
 17577  0975  3000               	movlw	0x0
 17578  0976  00BD               	movwf	(?___ftmul+1)
 17579  0977  3000               	movlw	0x0
 17580  0978  00BE               	movwf	(?___ftmul+2)
 17581  0979  2A2A               	goto	l14553
 17582                           	
 17583  097A                     l19410:	
 17584  097A  2A2A               	goto	l14553
 17585                           	
 17586  097B                     l14552:	
 17587                           	line	58
 17588                           	
 17589  097B                     l19412:	
 17590  097B  083F               	movf	(___ftmul@f2),w
 17591  097C  00C2               	movwf	((??___ftmul+0)+0)
 17592  097D  0840               	movf	(___ftmul@f2+1),w
 17593  097E  00C3               	movwf	((??___ftmul+0)+0+1)
 17594  097F  0841               	movf	(___ftmul@f2+2),w
 17595  0980  00C4               	movwf	((??___ftmul+0)+0+2)
 17596  0981  1003               	clrc
 17597  0982  0D43               	rlf	(??___ftmul+0)+1,w
 17598  0983  0D44               	rlf	(??___ftmul+0)+2,w
 17599  0984  00C5               	movwf	(??___ftmul+3)+0
 17600  0985  0845               	movf	(??___ftmul+3)+0,w
 17601  0986  00CB               	movwf	(___ftmul@sign)
 17602  0987  08CB               	movf	((___ftmul@sign)),f
 17603  0988  1D03               	skipz
 17604  0989  298B               	goto	u7441
 17605  098A  298C               	goto	u7440
 17606  098B                     u7441:
 17607  098B  2994               	goto	l19418
 17608  098C                     u7440:
 17609                           	line	59
 17610                           	
 17611  098C                     l19414:	
 17612  098C  3000               	movlw	0x0
 17613  098D  00BC               	movwf	(?___ftmul)
 17614  098E  3000               	movlw	0x0
 17615  098F  00BD               	movwf	(?___ftmul+1)
 17616  0990  3000               	movlw	0x0
 17617  0991  00BE               	movwf	(?___ftmul+2)
 17618  0992  2A2A               	goto	l14553
 17619                           	
 17620  0993                     l19416:	
 17621  0993  2A2A               	goto	l14553
 17622                           	
 17623  0994                     l14554:	
 17624                           	line	60
 17625                           	
 17626  0994                     l19418:	
 17627  0994  084B               	movf	(___ftmul@sign),w
 17628  0995  3E7B               	addlw	07Bh
 17629  0996  00C2               	movwf	(??___ftmul+0)+0
 17630  0997  0842               	movf	(??___ftmul+0)+0,w
 17631  0998  07C6               	addwf	(___ftmul@exp),f
 17632                           	line	61
 17633  0999  083C               	movf	(___ftmul@f1),w
 17634  099A  00C2               	movwf	((??___ftmul+0)+0)
 17635  099B  083D               	movf	(___ftmul@f1+1),w
 17636  099C  00C3               	movwf	((??___ftmul+0)+0+1)
 17637  099D  083E               	movf	(___ftmul@f1+2),w
 17638  099E  00C4               	movwf	((??___ftmul+0)+0+2)
 17639  099F  3010               	movlw	010h
 17640  09A0                     u7455:
 17641  09A0  36C4               	lsrf	(??___ftmul+0)+2,f
 17642  09A1  0CC3               	rrf	(??___ftmul+0)+1,f
 17643  09A2  0CC2               	rrf	(??___ftmul+0)+0,f
 17644  09A3                     u7450:
 17645  09A3  0B89               	decfsz	wreg,f
 17646  09A4  29A0               	goto	u7455
 17647  09A5  0842               	movf	0+(??___ftmul+0)+0,w
 17648  09A6  00C5               	movwf	(??___ftmul+3)+0
 17649  09A7  0845               	movf	(??___ftmul+3)+0,w
 17650  09A8  00CB               	movwf	(___ftmul@sign)
 17651                           	line	62
 17652  09A9  083F               	movf	(___ftmul@f2),w
 17653  09AA  00C2               	movwf	((??___ftmul+0)+0)
 17654  09AB  0840               	movf	(___ftmul@f2+1),w
 17655  09AC  00C3               	movwf	((??___ftmul+0)+0+1)
 17656  09AD  0841               	movf	(___ftmul@f2+2),w
 17657  09AE  00C4               	movwf	((??___ftmul+0)+0+2)
 17658  09AF  3010               	movlw	010h
 17659  09B0                     u7465:
 17660  09B0  36C4               	lsrf	(??___ftmul+0)+2,f
 17661  09B1  0CC3               	rrf	(??___ftmul+0)+1,f
 17662  09B2  0CC2               	rrf	(??___ftmul+0)+0,f
 17663  09B3                     u7460:
 17664  09B3  0B89               	decfsz	wreg,f
 17665  09B4  29B0               	goto	u7465
 17666  09B5  0842               	movf	0+(??___ftmul+0)+0,w
 17667  09B6  00C5               	movwf	(??___ftmul+3)+0
 17668  09B7  0845               	movf	(??___ftmul+3)+0,w
 17669  09B8  06CB               	xorwf	(___ftmul@sign),f
 17670                           	line	63
 17671  09B9  3080               	movlw	(080h)
 17672  09BA  00C2               	movwf	(??___ftmul+0)+0
 17673  09BB  0842               	movf	(??___ftmul+0)+0,w
 17674  09BC  05CB               	andwf	(___ftmul@sign),f
 17675                           	line	64
 17676                           	
 17677  09BD                     l19420:	
 17678  09BD  17BD               	bsf	(___ftmul@f1)+(15/8),(15)&7
 17679                           	line	66
 17680                           	
 17681  09BE                     l19422:	
 17682  09BE  17C0               	bsf	(___ftmul@f2)+(15/8),(15)&7
 17683                           	line	67
 17684                           	
 17685  09BF                     l19424:	
 17686  09BF  30FF               	movlw	0FFh
 17687  09C0  05BF               	andwf	(___ftmul@f2),f
 17688  09C1  30FF               	movlw	0FFh
 17689  09C2  05C0               	andwf	(___ftmul@f2+1),f
 17690  09C3  3000               	movlw	0
 17691  09C4  05C1               	andwf	(___ftmul@f2+2),f
 17692                           	line	68
 17693                           	
 17694  09C5                     l19426:	
 17695  09C5  3000               	movlw	0
 17696  09C6  00C7               	movwf	(___ftmul@f3_as_product)
 17697  09C7  3000               	movlw	0
 17698  09C8  00C8               	movwf	(___ftmul@f3_as_product+1)
 17699  09C9  3000               	movlw	0
 17700  09CA  00C9               	movwf	(___ftmul@f3_as_product+2)
 17701                           	line	69
 17702                           	
 17703  09CB                     l19428:	
 17704  09CB  3007               	movlw	(07h)
 17705  09CC  00C2               	movwf	(??___ftmul+0)+0
 17706  09CD  0842               	movf	(??___ftmul+0)+0,w
 17707  09CE  00CA               	movwf	(___ftmul@cntr)
 17708  09CF  29D0               	goto	l19430
 17709                           	line	70
 17710                           	
 17711  09D0                     l14555:	
 17712                           	line	71
 17713                           	
 17714  09D0                     l19430:	
 17715  09D0  1C3C               	btfss	(___ftmul@f1),(0)&7
 17716  09D1  29D3               	goto	u7471
 17717  09D2  29D4               	goto	u7470
 17718  09D3                     u7471:
 17719  09D3  29DB               	goto	l19434
 17720  09D4                     u7470:
 17721                           	line	72
 17722                           	
 17723  09D4                     l19432:	
 17724  09D4  083F               	movf	(___ftmul@f2),w
 17725  09D5  07C7               	addwf	(___ftmul@f3_as_product),f
 17726  09D6  0840               	movf	(___ftmul@f2+1),w
 17727  09D7  3DC8               	addwfc	(___ftmul@f3_as_product+1),f
 17728  09D8  0841               	movf	(___ftmul@f2+2),w
 17729  09D9  3DC9               	addwfc	(___ftmul@f3_as_product+2),f
 17730  09DA  29DB               	goto	l19434
 17731                           	
 17732  09DB                     l14556:	
 17733                           	line	73
 17734                           	
 17735  09DB                     l19434:	
 17736  09DB  3001               	movlw	01h
 17737  09DC                     u7485:
 17738  09DC  36BE               	lsrf	(___ftmul@f1+2),f
 17739  09DD  0CBD               	rrf	(___ftmul@f1+1),f
 17740  09DE  0CBC               	rrf	(___ftmul@f1),f
 17741  09DF  0B89               	decfsz	wreg,f
 17742  09E0  29DC               	goto	u7485
 17743                           
 17744                           	line	74
 17745                           	
 17746  09E1                     l19436:	
 17747  09E1  3001               	movlw	01h
 17748  09E2                     u7495:
 17749  09E2  35BF               	lslf	(___ftmul@f2),f
 17750  09E3  0DC0               	rlf	(___ftmul@f2+1),f
 17751  09E4  0DC1               	rlf	(___ftmul@f2+2),f
 17752  09E5  0B89               	decfsz	wreg,f
 17753  09E6  29E2               	goto	u7495
 17754                           	line	75
 17755                           	
 17756  09E7                     l19438:	
 17757  09E7  3001               	movlw	low(01h)
 17758  09E8  02CA               	subwf	(___ftmul@cntr),f
 17759  09E9  1D03               	btfss	status,2
 17760  09EA  29EC               	goto	u7501
 17761  09EB  29ED               	goto	u7500
 17762  09EC                     u7501:
 17763  09EC  29D0               	goto	l19430
 17764  09ED                     u7500:
 17765  09ED  29EE               	goto	l19440
 17766                           	
 17767  09EE                     l14557:	
 17768                           	line	76
 17769                           	
 17770  09EE                     l19440:	
 17771  09EE  3009               	movlw	(09h)
 17772  09EF  00C2               	movwf	(??___ftmul+0)+0
 17773  09F0  0842               	movf	(??___ftmul+0)+0,w
 17774  09F1  00CA               	movwf	(___ftmul@cntr)
 17775  09F2  29F3               	goto	l19442
 17776                           	line	77
 17777                           	
 17778  09F3                     l14558:	
 17779                           	line	78
 17780                           	
 17781  09F3                     l19442:	
 17782  09F3  1C3C               	btfss	(___ftmul@f1),(0)&7
 17783  09F4  29F6               	goto	u7511
 17784  09F5  29F7               	goto	u7510
 17785  09F6                     u7511:
 17786  09F6  29FE               	goto	l19446
 17787  09F7                     u7510:
 17788                           	line	79
 17789                           	
 17790  09F7                     l19444:	
 17791  09F7  083F               	movf	(___ftmul@f2),w
 17792  09F8  07C7               	addwf	(___ftmul@f3_as_product),f
 17793  09F9  0840               	movf	(___ftmul@f2+1),w
 17794  09FA  3DC8               	addwfc	(___ftmul@f3_as_product+1),f
 17795  09FB  0841               	movf	(___ftmul@f2+2),w
 17796  09FC  3DC9               	addwfc	(___ftmul@f3_as_product+2),f
 17797  09FD  29FE               	goto	l19446
 17798                           	
 17799  09FE                     l14559:	
 17800                           	line	80
 17801                           	
 17802  09FE                     l19446:	
 17803  09FE  3001               	movlw	01h
 17804  09FF                     u7525:
 17805  09FF  36BE               	lsrf	(___ftmul@f1+2),f
 17806  0A00  0CBD               	rrf	(___ftmul@f1+1),f
 17807  0A01  0CBC               	rrf	(___ftmul@f1),f
 17808  0A02  0B89               	decfsz	wreg,f
 17809  0A03  29FF               	goto	u7525
 17810                           
 17811                           	line	81
 17812                           	
 17813  0A04                     l19448:	
 17814  0A04  3001               	movlw	01h
 17815  0A05                     u7535:
 17816  0A05  36C9               	lsrf	(___ftmul@f3_as_product+2),f
 17817  0A06  0CC8               	rrf	(___ftmul@f3_as_product+1),f
 17818  0A07  0CC7               	rrf	(___ftmul@f3_as_product),f
 17819  0A08  0B89               	decfsz	wreg,f
 17820  0A09  2A05               	goto	u7535
 17821                           
 17822                           	line	82
 17823                           	
 17824  0A0A                     l19450:	
 17825  0A0A  3001               	movlw	low(01h)
 17826  0A0B  02CA               	subwf	(___ftmul@cntr),f
 17827  0A0C  1D03               	btfss	status,2
 17828  0A0D  2A0F               	goto	u7541
 17829  0A0E  2A10               	goto	u7540
 17830  0A0F                     u7541:
 17831  0A0F  29F3               	goto	l19442
 17832  0A10                     u7540:
 17833  0A10  2A11               	goto	l19452
 17834                           	
 17835  0A11                     l14560:	
 17836                           	line	83
 17837                           	
 17838  0A11                     l19452:	
 17839  0A11  0847               	movf	(___ftmul@f3_as_product),w
 17840  0A12  00A0               	movwf	(?___ftpack)
 17841  0A13  0848               	movf	(___ftmul@f3_as_product+1),w
 17842  0A14  00A1               	movwf	(?___ftpack+1)
 17843  0A15  0849               	movf	(___ftmul@f3_as_product+2),w
 17844  0A16  00A2               	movwf	(?___ftpack+2)
 17845  0A17  0846               	movf	(___ftmul@exp),w
 17846  0A18  00C2               	movwf	(??___ftmul+0)+0
 17847  0A19  0842               	movf	(??___ftmul+0)+0,w
 17848  0A1A  00A3               	movwf	0+(?___ftpack)+03h
 17849  0A1B  084B               	movf	(___ftmul@sign),w
 17850  0A1C  00C3               	movwf	(??___ftmul+1)+0
 17851  0A1D  0843               	movf	(??___ftmul+1)+0,w
 17852  0A1E  00A4               	movwf	0+(?___ftpack)+04h
 17853  0A1F  319D  2520  3189   	fcall	___ftpack
 17854  0A22  0020               	movlb 0	; select bank0
 17855  0A23  0820               	movf	(0+(?___ftpack)),w
 17856  0A24  00BC               	movwf	(?___ftmul)
 17857  0A25  0821               	movf	(1+(?___ftpack)),w
 17858  0A26  00BD               	movwf	(?___ftmul+1)
 17859  0A27  0822               	movf	(2+(?___ftpack)),w
 17860  0A28  00BE               	movwf	(?___ftmul+2)
 17861  0A29  2A2A               	goto	l14553
 17862                           	
 17863  0A2A                     l19454:	
 17864                           	line	84
 17865                           	
 17866  0A2A                     l14553:	
 17867  0A2A  0008               	return
 17868                           	opt stack 0
 17869                           GLOBAL	__end_of___ftmul
 17870  0A2B                     	__end_of___ftmul:
 17871 ;; =============== function ___ftmul ends ============
 17872                           
 17873                           	signat	___ftmul,8315
 17874                           	global	___ftdiv
 17875                           psect	text4936,local,class=CODE,delta=2
 17876                           global __ptext4936
 17877  1748                     __ptext4936:
 17878                           
 17879 ;; *************** function ___ftdiv *****************
 17880 ;; Defined at:
 17881 ;;		line 50 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftdiv.c"
 17882 ;; Parameters:    Size  Location     Type
 17883 ;;  f2              3   28[BANK0 ] float 
 17884 ;;  f1              3   31[BANK0 ] float 
 17885 ;; Auto vars:     Size  Location     Type
 17886 ;;  f3              3   39[BANK0 ] float 
 17887 ;;  sign            1   43[BANK0 ] unsigned char 
 17888 ;;  exp             1   42[BANK0 ] unsigned char 
 17889 ;;  cntr            1   38[BANK0 ] unsigned char 
 17890 ;; Return value:  Size  Location     Type
 17891 ;;                  3   28[BANK0 ] float 
 17892 ;; Registers used:
 17893 ;;		wreg, status,2, status,0, pclath, cstack
 17894 ;; Tracked objects:
 17895 ;;		On entry : 0/0
 17896 ;;		On exit  : 0/0
 17897 ;;		Unchanged: 0/0
 17898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 17899 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0
 17900 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0
 17901 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 17902 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
       0       0
 17903 ;;Total ram usage:       16 bytes
 17904 ;; Hardware stack levels used:    1
 17905 ;; Hardware stack levels required when called:    5
 17906 ;; This function calls:
 17907 ;;		___ftpack
 17908 ;; This function is called by:
 17909 ;;		_setPercentValue
 17910 ;; This function uses a non-reentrant model
 17911 ;;
 17912                           psect	text4936
 17913                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftdiv.c"
 17914                           	line	50
 17915                           	global	__size_of___ftdiv
 17916  00B8                     	__size_of___ftdiv	equ	__end_of___ftdiv-___ftdiv
 17917                           	
 17918  1748                     ___ftdiv:	
 17919                           	opt	stack 6
 17920                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
 17921                           	line	55
 17922                           	
 17923  1748                     l19364:	
 17924  1748  0020               	movlb 0	; select bank0
 17925  1749  083F               	movf	(___ftdiv@f1),w
 17926  174A  00C2               	movwf	((??___ftdiv+0)+0)
 17927  174B  0840               	movf	(___ftdiv@f1+1),w
 17928  174C  00C3               	movwf	((??___ftdiv+0)+0+1)
 17929  174D  0841               	movf	(___ftdiv@f1+2),w
 17930  174E  00C4               	movwf	((??___ftdiv+0)+0+2)
 17931  174F  1003               	clrc
 17932  1750  0D43               	rlf	(??___ftdiv+0)+1,w
 17933  1751  0D44               	rlf	(??___ftdiv+0)+2,w
 17934  1752  00C5               	movwf	(??___ftdiv+3)+0
 17935  1753  0845               	movf	(??___ftdiv+3)+0,w
 17936  1754  00CA               	movwf	(___ftdiv@exp)
 17937  1755  08CA               	movf	((___ftdiv@exp)),f
 17938  1756  1D03               	skipz
 17939  1757  2F59               	goto	u7351
 17940  1758  2F5A               	goto	u7350
 17941  1759                     u7351:
 17942  1759  2F62               	goto	l19370
 17943  175A                     u7350:
 17944                           	line	56
 17945                           	
 17946  175A                     l19366:	
 17947  175A  3000               	movlw	0x0
 17948  175B  00BC               	movwf	(?___ftdiv)
 17949  175C  3000               	movlw	0x0
 17950  175D  00BD               	movwf	(?___ftdiv+1)
 17951  175E  3000               	movlw	0x0
 17952  175F  00BE               	movwf	(?___ftdiv+2)
 17953  1760  2FFF               	goto	l14543
 17954                           	
 17955  1761                     l19368:	
 17956  1761  2FFF               	goto	l14543
 17957                           	
 17958  1762                     l14542:	
 17959                           	line	57
 17960                           	
 17961  1762                     l19370:	
 17962  1762  083C               	movf	(___ftdiv@f2),w
 17963  1763  00C2               	movwf	((??___ftdiv+0)+0)
 17964  1764  083D               	movf	(___ftdiv@f2+1),w
 17965  1765  00C3               	movwf	((??___ftdiv+0)+0+1)
 17966  1766  083E               	movf	(___ftdiv@f2+2),w
 17967  1767  00C4               	movwf	((??___ftdiv+0)+0+2)
 17968  1768  1003               	clrc
 17969  1769  0D43               	rlf	(??___ftdiv+0)+1,w
 17970  176A  0D44               	rlf	(??___ftdiv+0)+2,w
 17971  176B  00C5               	movwf	(??___ftdiv+3)+0
 17972  176C  0845               	movf	(??___ftdiv+3)+0,w
 17973  176D  00CB               	movwf	(___ftdiv@sign)
 17974  176E  08CB               	movf	((___ftdiv@sign)),f
 17975  176F  1D03               	skipz
 17976  1770  2F72               	goto	u7361
 17977  1771  2F73               	goto	u7360
 17978  1772                     u7361:
 17979  1772  2F7B               	goto	l19376
 17980  1773                     u7360:
 17981                           	line	58
 17982                           	
 17983  1773                     l19372:	
 17984  1773  3000               	movlw	0x0
 17985  1774  00BC               	movwf	(?___ftdiv)
 17986  1775  3000               	movlw	0x0
 17987  1776  00BD               	movwf	(?___ftdiv+1)
 17988  1777  3000               	movlw	0x0
 17989  1778  00BE               	movwf	(?___ftdiv+2)
 17990  1779  2FFF               	goto	l14543
 17991                           	
 17992  177A                     l19374:	
 17993  177A  2FFF               	goto	l14543
 17994                           	
 17995  177B                     l14544:	
 17996                           	line	59
 17997                           	
 17998  177B                     l19376:	
 17999  177B  3000               	movlw	0
 18000  177C  00C7               	movwf	(___ftdiv@f3)
 18001  177D  3000               	movlw	0
 18002  177E  00C8               	movwf	(___ftdiv@f3+1)
 18003  177F  3000               	movlw	0
 18004  1780  00C9               	movwf	(___ftdiv@f3+2)
 18005                           	line	60
 18006                           	
 18007  1781                     l19378:	
 18008  1781  3089               	movlw	(089h)
 18009  1782  074B               	addwf	(___ftdiv@sign),w
 18010  1783  00C2               	movwf	(??___ftdiv+0)+0
 18011  1784  0842               	movf	0+(??___ftdiv+0)+0,w
 18012  1785  02CA               	subwf	(___ftdiv@exp),f
 18013                           	line	61
 18014                           	
 18015  1786                     l19380:	
 18016  1786  083F               	movf	(___ftdiv@f1),w
 18017  1787  00C2               	movwf	((??___ftdiv+0)+0)
 18018  1788  0840               	movf	(___ftdiv@f1+1),w
 18019  1789  00C3               	movwf	((??___ftdiv+0)+0+1)
 18020  178A  0841               	movf	(___ftdiv@f1+2),w
 18021  178B  00C4               	movwf	((??___ftdiv+0)+0+2)
 18022  178C  3010               	movlw	010h
 18023  178D                     u7375:
 18024  178D  36C4               	lsrf	(??___ftdiv+0)+2,f
 18025  178E  0CC3               	rrf	(??___ftdiv+0)+1,f
 18026  178F  0CC2               	rrf	(??___ftdiv+0)+0,f
 18027  1790                     u7370:
 18028  1790  0B89               	decfsz	wreg,f
 18029  1791  2F8D               	goto	u7375
 18030  1792  0842               	movf	0+(??___ftdiv+0)+0,w
 18031  1793  00C5               	movwf	(??___ftdiv+3)+0
 18032  1794  0845               	movf	(??___ftdiv+3)+0,w
 18033  1795  00CB               	movwf	(___ftdiv@sign)
 18034                           	line	62
 18035                           	
 18036  1796                     l19382:	
 18037  1796  083C               	movf	(___ftdiv@f2),w
 18038  1797  00C2               	movwf	((??___ftdiv+0)+0)
 18039  1798  083D               	movf	(___ftdiv@f2+1),w
 18040  1799  00C3               	movwf	((??___ftdiv+0)+0+1)
 18041  179A  083E               	movf	(___ftdiv@f2+2),w
 18042  179B  00C4               	movwf	((??___ftdiv+0)+0+2)
 18043  179C  3010               	movlw	010h
 18044  179D                     u7385:
 18045  179D  36C4               	lsrf	(??___ftdiv+0)+2,f
 18046  179E  0CC3               	rrf	(??___ftdiv+0)+1,f
 18047  179F  0CC2               	rrf	(??___ftdiv+0)+0,f
 18048  17A0                     u7380:
 18049  17A0  0B89               	decfsz	wreg,f
 18050  17A1  2F9D               	goto	u7385
 18051  17A2  0842               	movf	0+(??___ftdiv+0)+0,w
 18052  17A3  00C5               	movwf	(??___ftdiv+3)+0
 18053  17A4  0845               	movf	(??___ftdiv+3)+0,w
 18054  17A5  06CB               	xorwf	(___ftdiv@sign),f
 18055                           	line	63
 18056                           	
 18057  17A6                     l19384:	
 18058  17A6  3080               	movlw	(080h)
 18059  17A7  00C2               	movwf	(??___ftdiv+0)+0
 18060  17A8  0842               	movf	(??___ftdiv+0)+0,w
 18061  17A9  05CB               	andwf	(___ftdiv@sign),f
 18062                           	line	64
 18063                           	
 18064  17AA                     l19386:	
 18065  17AA  17C0               	bsf	(___ftdiv@f1)+(15/8),(15)&7
 18066                           	line	65
 18067  17AB  30FF               	movlw	0FFh
 18068  17AC  05BF               	andwf	(___ftdiv@f1),f
 18069  17AD  30FF               	movlw	0FFh
 18070  17AE  05C0               	andwf	(___ftdiv@f1+1),f
 18071  17AF  3000               	movlw	0
 18072  17B0  05C1               	andwf	(___ftdiv@f1+2),f
 18073                           	line	66
 18074                           	
 18075  17B1                     l19388:	
 18076  17B1  17BD               	bsf	(___ftdiv@f2)+(15/8),(15)&7
 18077                           	line	67
 18078  17B2  30FF               	movlw	0FFh
 18079  17B3  05BC               	andwf	(___ftdiv@f2),f
 18080  17B4  30FF               	movlw	0FFh
 18081  17B5  05BD               	andwf	(___ftdiv@f2+1),f
 18082  17B6  3000               	movlw	0
 18083  17B7  05BE               	andwf	(___ftdiv@f2+2),f
 18084                           	line	68
 18085  17B8  3018               	movlw	(018h)
 18086  17B9  00C2               	movwf	(??___ftdiv+0)+0
 18087  17BA  0842               	movf	(??___ftdiv+0)+0,w
 18088  17BB  00C6               	movwf	(___ftdiv@cntr)
 18089  17BC  2FBD               	goto	l19390
 18090                           	line	69
 18091                           	
 18092  17BD                     l14545:	
 18093                           	line	70
 18094                           	
 18095  17BD                     l19390:	
 18096  17BD  3001               	movlw	01h
 18097  17BE                     u7395:
 18098  17BE  35C7               	lslf	(___ftdiv@f3),f
 18099  17BF  0DC8               	rlf	(___ftdiv@f3+1),f
 18100  17C0  0DC9               	rlf	(___ftdiv@f3+2),f
 18101  17C1  0B89               	decfsz	wreg,f
 18102  17C2  2FBE               	goto	u7395
 18103                           	line	71
 18104                           	
 18105  17C3                     l19392:	
 18106  17C3  083E               	movf	(___ftdiv@f2+2),w
 18107  17C4  0241               	subwf	(___ftdiv@f1+2),w
 18108  17C5  1D03               	skipz
 18109  17C6  2FCD               	goto	u7405
 18110  17C7  083D               	movf	(___ftdiv@f2+1),w
 18111  17C8  0240               	subwf	(___ftdiv@f1+1),w
 18112  17C9  1D03               	skipz
 18113  17CA  2FCD               	goto	u7405
 18114  17CB  083C               	movf	(___ftdiv@f2),w
 18115  17CC  023F               	subwf	(___ftdiv@f1),w
 18116  17CD                     u7405:
 18117  17CD  1C03               	skipc
 18118  17CE  2FD0               	goto	u7401
 18119  17CF  2FD1               	goto	u7400
 18120  17D0                     u7401:
 18121  17D0  2FD9               	goto	l19398
 18122  17D1                     u7400:
 18123                           	line	72
 18124                           	
 18125  17D1                     l19394:	
 18126  17D1  083C               	movf	(___ftdiv@f2),w
 18127  17D2  02BF               	subwf	(___ftdiv@f1),f
 18128  17D3  083D               	movf	(___ftdiv@f2+1),w
 18129  17D4  3BC0               	subwfb	(___ftdiv@f1+1),f
 18130  17D5  083E               	movf	(___ftdiv@f2+2),w
 18131  17D6  3BC1               	subwfb	(___ftdiv@f1+2),f
 18132                           	line	73
 18133                           	
 18134  17D7                     l19396:	
 18135  17D7  1447               	bsf	(___ftdiv@f3)+(0/8),(0)&7
 18136  17D8  2FD9               	goto	l19398
 18137                           	line	74
 18138                           	
 18139  17D9                     l14546:	
 18140                           	line	75
 18141                           	
 18142  17D9                     l19398:	
 18143  17D9  3001               	movlw	01h
 18144  17DA                     u7415:
 18145  17DA  35BF               	lslf	(___ftdiv@f1),f
 18146  17DB  0DC0               	rlf	(___ftdiv@f1+1),f
 18147  17DC  0DC1               	rlf	(___ftdiv@f1+2),f
 18148  17DD  0B89               	decfsz	wreg,f
 18149  17DE  2FDA               	goto	u7415
 18150                           	line	76
 18151                           	
 18152  17DF                     l19400:	
 18153  17DF  3001               	movlw	low(01h)
 18154  17E0  02C6               	subwf	(___ftdiv@cntr),f
 18155  17E1  1D03               	btfss	status,2
 18156  17E2  2FE4               	goto	u7421
 18157  17E3  2FE5               	goto	u7420
 18158  17E4                     u7421:
 18159  17E4  2FBD               	goto	l19390
 18160  17E5                     u7420:
 18161  17E5  2FE6               	goto	l19402
 18162                           	
 18163  17E6                     l14547:	
 18164                           	line	77
 18165                           	
 18166  17E6                     l19402:	
 18167  17E6  0847               	movf	(___ftdiv@f3),w
 18168  17E7  00A0               	movwf	(?___ftpack)
 18169  17E8  0848               	movf	(___ftdiv@f3+1),w
 18170  17E9  00A1               	movwf	(?___ftpack+1)
 18171  17EA  0849               	movf	(___ftdiv@f3+2),w
 18172  17EB  00A2               	movwf	(?___ftpack+2)
 18173  17EC  084A               	movf	(___ftdiv@exp),w
 18174  17ED  00C2               	movwf	(??___ftdiv+0)+0
 18175  17EE  0842               	movf	(??___ftdiv+0)+0,w
 18176  17EF  00A3               	movwf	0+(?___ftpack)+03h
 18177  17F0  084B               	movf	(___ftdiv@sign),w
 18178  17F1  00C3               	movwf	(??___ftdiv+1)+0
 18179  17F2  0843               	movf	(??___ftdiv+1)+0,w
 18180  17F3  00A4               	movwf	0+(?___ftpack)+04h
 18181  17F4  319D  2520  3197   	fcall	___ftpack
 18182  17F7  0020               	movlb 0	; select bank0
 18183  17F8  0820               	movf	(0+(?___ftpack)),w
 18184  17F9  00BC               	movwf	(?___ftdiv)
 18185  17FA  0821               	movf	(1+(?___ftpack)),w
 18186  17FB  00BD               	movwf	(?___ftdiv+1)
 18187  17FC  0822               	movf	(2+(?___ftpack)),w
 18188  17FD  00BE               	movwf	(?___ftdiv+2)
 18189  17FE  2FFF               	goto	l14543
 18190                           	
 18191  17FF                     l19404:	
 18192                           	line	78
 18193                           	
 18194  17FF                     l14543:	
 18195  17FF  0008               	return
 18196                           	opt stack 0
 18197                           GLOBAL	__end_of___ftdiv
 18198  1800                     	__end_of___ftdiv:
 18199 ;; =============== function ___ftdiv ends ============
 18200                           
 18201                           	signat	___ftdiv,8315
 18202                           	global	___ftadd
 18203                           psect	text4937,local,class=CODE,delta=2
 18204                           global __ptext4937
 18205  0C0F                     __ptext4937:
 18206                           
 18207 ;; *************** function ___ftadd *****************
 18208 ;; Defined at:
 18209 ;;		line 87 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftadd.c"
 18210 ;; Parameters:    Size  Location     Type
 18211 ;;  f1              3   44[BANK0 ] float 
 18212 ;;  f2              3   47[BANK0 ] float 
 18213 ;; Auto vars:     Size  Location     Type
 18214 ;;  exp1            1   56[BANK0 ] unsigned char 
 18215 ;;  exp2            1   55[BANK0 ] unsigned char 
 18216 ;;  sign            1   54[BANK0 ] unsigned char 
 18217 ;; Return value:  Size  Location     Type
 18218 ;;                  3   44[BANK0 ] float 
 18219 ;; Registers used:
 18220 ;;		wreg, status,2, status,0, pclath, cstack
 18221 ;; Tracked objects:
 18222 ;;		On entry : 0/0
 18223 ;;		On exit  : 0/0
 18224 ;;		Unchanged: 0/0
 18225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 18226 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0
 18227 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 18228 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 18229 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
       0       0
 18230 ;;Total ram usage:       13 bytes
 18231 ;; Hardware stack levels used:    1
 18232 ;; Hardware stack levels required when called:    5
 18233 ;; This function calls:
 18234 ;;		___ftpack
 18235 ;; This function is called by:
 18236 ;;		_getPercentValue
 18237 ;;		___ftsub
 18238 ;; This function uses a non-reentrant model
 18239 ;;
 18240                           psect	text4937
 18241                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftadd.c"
 18242                           	line	87
 18243                           	global	__size_of___ftadd
 18244  0130                     	__size_of___ftadd	equ	__end_of___ftadd-___ftadd
 18245                           	
 18246  0C0F                     ___ftadd:	
 18247                           	opt	stack 2
 18248                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
 18249                           	line	90
 18250                           	
 18251  0C0F                     l19294:	
 18252  0C0F  0020               	movlb 0	; select bank0
 18253  0C10  084C               	movf	(___ftadd@f1),w
 18254  0C11  00D2               	movwf	((??___ftadd+0)+0)
 18255  0C12  084D               	movf	(___ftadd@f1+1),w
 18256  0C13  00D3               	movwf	((??___ftadd+0)+0+1)
 18257  0C14  084E               	movf	(___ftadd@f1+2),w
 18258  0C15  00D4               	movwf	((??___ftadd+0)+0+2)
 18259  0C16  1003               	clrc
 18260  0C17  0D53               	rlf	(??___ftadd+0)+1,w
 18261  0C18  0D54               	rlf	(??___ftadd+0)+2,w
 18262  0C19  00D5               	movwf	(??___ftadd+3)+0
 18263  0C1A  0855               	movf	(??___ftadd+3)+0,w
 18264  0C1B  00D8               	movwf	(___ftadd@exp1)
 18265                           	line	91
 18266  0C1C  084F               	movf	(___ftadd@f2),w
 18267  0C1D  00D2               	movwf	((??___ftadd+0)+0)
 18268  0C1E  0850               	movf	(___ftadd@f2+1),w
 18269  0C1F  00D3               	movwf	((??___ftadd+0)+0+1)
 18270  0C20  0851               	movf	(___ftadd@f2+2),w
 18271  0C21  00D4               	movwf	((??___ftadd+0)+0+2)
 18272  0C22  1003               	clrc
 18273  0C23  0D53               	rlf	(??___ftadd+0)+1,w
 18274  0C24  0D54               	rlf	(??___ftadd+0)+2,w
 18275  0C25  00D5               	movwf	(??___ftadd+3)+0
 18276  0C26  0855               	movf	(??___ftadd+3)+0,w
 18277  0C27  00D7               	movwf	(___ftadd@exp2)
 18278                           	line	92
 18279                           	
 18280  0C28                     l19296:	
 18281  0C28  0858               	movf	(___ftadd@exp1),w
 18282  0C29  1D03               	skipz
 18283  0C2A  2C2C               	goto	u7120
 18284  0C2B  2C3D               	goto	l19302
 18285  0C2C                     u7120:
 18286                           	
 18287  0C2C                     l19298:	
 18288  0C2C  0857               	movf	(___ftadd@exp2),w
 18289  0C2D  0258               	subwf	(___ftadd@exp1),w
 18290  0C2E  1803               	skipnc
 18291  0C2F  2C31               	goto	u7131
 18292  0C30  2C32               	goto	u7130
 18293  0C31                     u7131:
 18294  0C31  2C45               	goto	l19306
 18295  0C32                     u7130:
 18296                           	
 18297  0C32                     l19300:	
 18298  0C32  0358               	decf	(___ftadd@exp1),w
 18299  0C33  3AFF               	xorlw	0ffh
 18300  0C34  0757               	addwf	(___ftadd@exp2),w
 18301  0C35  00D2               	movwf	(??___ftadd+0)+0
 18302  0C36  3019               	movlw	(019h)
 18303  0C37  0252               	subwf	0+(??___ftadd+0)+0,w
 18304  0C38  1C03               	skipc
 18305  0C39  2C3B               	goto	u7141
 18306  0C3A  2C3C               	goto	u7140
 18307  0C3B                     u7141:
 18308  0C3B  2C45               	goto	l19306
 18309  0C3C                     u7140:
 18310  0C3C  2C3D               	goto	l19302
 18311                           	
 18312  0C3D                     l14500:	
 18313                           	line	93
 18314                           	
 18315  0C3D                     l19302:	
 18316  0C3D  084F               	movf	(___ftadd@f2),w
 18317  0C3E  00CC               	movwf	(?___ftadd)
 18318  0C3F  0850               	movf	(___ftadd@f2+1),w
 18319  0C40  00CD               	movwf	(?___ftadd+1)
 18320  0C41  0851               	movf	(___ftadd@f2+2),w
 18321  0C42  00CE               	movwf	(?___ftadd+2)
 18322  0C43  2D3E               	goto	l14501
 18323                           	
 18324  0C44                     l19304:	
 18325  0C44  2D3E               	goto	l14501
 18326                           	
 18327  0C45                     l14498:	
 18328                           	line	94
 18329                           	
 18330  0C45                     l19306:	
 18331  0C45  0857               	movf	(___ftadd@exp2),w
 18332  0C46  1D03               	skipz
 18333  0C47  2C49               	goto	u7150
 18334  0C48  2C59               	goto	l14504
 18335  0C49                     u7150:
 18336                           	
 18337  0C49                     l19308:	
 18338  0C49  0858               	movf	(___ftadd@exp1),w
 18339  0C4A  0257               	subwf	(___ftadd@exp2),w
 18340  0C4B  1803               	skipnc
 18341  0C4C  2C4E               	goto	u7161
 18342  0C4D  2C4F               	goto	u7160
 18343  0C4E                     u7161:
 18344  0C4E  2C5A               	goto	l19312
 18345  0C4F                     u7160:
 18346                           	
 18347  0C4F                     l19310:	
 18348  0C4F  0357               	decf	(___ftadd@exp2),w
 18349  0C50  3AFF               	xorlw	0ffh
 18350  0C51  0758               	addwf	(___ftadd@exp1),w
 18351  0C52  00D2               	movwf	(??___ftadd+0)+0
 18352  0C53  3019               	movlw	(019h)
 18353  0C54  0252               	subwf	0+(??___ftadd+0)+0,w
 18354  0C55  1C03               	skipc
 18355  0C56  2C58               	goto	u7171
 18356  0C57  2C59               	goto	u7170
 18357  0C58                     u7171:
 18358  0C58  2C5A               	goto	l19312
 18359  0C59                     u7170:
 18360                           	
 18361  0C59                     l14504:	
 18362                           	line	95
 18363  0C59  2D3E               	goto	l14501
 18364                           	
 18365  0C5A                     l14502:	
 18366                           	line	96
 18367                           	
 18368  0C5A                     l19312:	
 18369  0C5A  3006               	movlw	(06h)
 18370  0C5B  00D2               	movwf	(??___ftadd+0)+0
 18371  0C5C  0852               	movf	(??___ftadd+0)+0,w
 18372  0C5D  00D6               	movwf	(___ftadd@sign)
 18373                           	line	97
 18374                           	
 18375  0C5E                     l19314:	
 18376  0C5E  1FCE               	btfss	(___ftadd@f1+2),(23)&7
 18377  0C5F  2C61               	goto	u7181
 18378  0C60  2C62               	goto	u7180
 18379  0C61                     u7181:
 18380  0C61  2C63               	goto	l14505
 18381  0C62                     u7180:
 18382                           	line	98
 18383                           	
 18384  0C62                     l19316:	
 18385  0C62  17D6               	bsf	(___ftadd@sign)+(7/8),(7)&7
 18386                           	
 18387  0C63                     l14505:	
 18388                           	line	99
 18389  0C63  1FD1               	btfss	(___ftadd@f2+2),(23)&7
 18390  0C64  2C66               	goto	u7191
 18391  0C65  2C67               	goto	u7190
 18392  0C66                     u7191:
 18393  0C66  2C68               	goto	l14506
 18394  0C67                     u7190:
 18395                           	line	100
 18396                           	
 18397  0C67                     l19318:	
 18398  0C67  1756               	bsf	(___ftadd@sign)+(6/8),(6)&7
 18399                           	
 18400  0C68                     l14506:	
 18401                           	line	101
 18402  0C68  17CD               	bsf	(___ftadd@f1)+(15/8),(15)&7
 18403                           	line	102
 18404                           	
 18405  0C69                     l19320:	
 18406  0C69  30FF               	movlw	0FFh
 18407  0C6A  05CC               	andwf	(___ftadd@f1),f
 18408  0C6B  30FF               	movlw	0FFh
 18409  0C6C  05CD               	andwf	(___ftadd@f1+1),f
 18410  0C6D  3000               	movlw	0
 18411  0C6E  05CE               	andwf	(___ftadd@f1+2),f
 18412                           	line	103
 18413                           	
 18414  0C6F                     l19322:	
 18415  0C6F  17D0               	bsf	(___ftadd@f2)+(15/8),(15)&7
 18416                           	line	104
 18417  0C70  30FF               	movlw	0FFh
 18418  0C71  05CF               	andwf	(___ftadd@f2),f
 18419  0C72  30FF               	movlw	0FFh
 18420  0C73  05D0               	andwf	(___ftadd@f2+1),f
 18421  0C74  3000               	movlw	0
 18422  0C75  05D1               	andwf	(___ftadd@f2+2),f
 18423                           	line	106
 18424  0C76  0857               	movf	(___ftadd@exp2),w
 18425  0C77  0258               	subwf	(___ftadd@exp1),w
 18426  0C78  1803               	skipnc
 18427  0C79  2C7B               	goto	u7201
 18428  0C7A  2C7C               	goto	u7200
 18429  0C7B                     u7201:
 18430  0C7B  2CA9               	goto	l19334
 18431  0C7C                     u7200:
 18432  0C7C  2C7D               	goto	l19324
 18433                           	line	109
 18434                           	
 18435  0C7D                     l14508:	
 18436                           	line	110
 18437                           	
 18438  0C7D                     l19324:	
 18439  0C7D  3001               	movlw	01h
 18440  0C7E                     u7215:
 18441  0C7E  35CF               	lslf	(___ftadd@f2),f
 18442  0C7F  0DD0               	rlf	(___ftadd@f2+1),f
 18443  0C80  0DD1               	rlf	(___ftadd@f2+2),f
 18444  0C81  0B89               	decfsz	wreg,f
 18445  0C82  2C7E               	goto	u7215
 18446                           	line	111
 18447  0C83  3001               	movlw	low(01h)
 18448  0C84  02D7               	subwf	(___ftadd@exp2),f
 18449                           	line	112
 18450                           	
 18451  0C85                     l19326:	
 18452  0C85  0857               	movf	(___ftadd@exp2),w
 18453  0C86  0658               	xorwf	(___ftadd@exp1),w
 18454  0C87  1903               	skipnz
 18455  0C88  2C8A               	goto	u7221
 18456  0C89  2C8B               	goto	u7220
 18457  0C8A                     u7221:
 18458  0C8A  2CA1               	goto	l19332
 18459  0C8B                     u7220:
 18460                           	
 18461  0C8B                     l19328:	
 18462  0C8B  3001               	movlw	low(01h)
 18463  0C8C  02D6               	subwf	(___ftadd@sign),f
 18464  0C8D  0856               	movf	((___ftadd@sign)),w
 18465  0C8E  3907               	andlw	07h
 18466  0C8F  1D03               	btfss	status,2
 18467  0C90  2C92               	goto	u7231
 18468  0C91  2C93               	goto	u7230
 18469  0C92                     u7231:
 18470  0C92  2C7D               	goto	l19324
 18471  0C93                     u7230:
 18472  0C93  2CA1               	goto	l19332
 18473                           	
 18474  0C94                     l14510:	
 18475  0C94  2CA1               	goto	l19332
 18476                           	
 18477  0C95                     l14511:	
 18478                           	line	113
 18479  0C95  2CA1               	goto	l19332
 18480                           	
 18481  0C96                     l14513:	
 18482                           	line	114
 18483                           	
 18484  0C96                     l19330:	
 18485  0C96  3001               	movlw	01h
 18486  0C97                     u7245:
 18487  0C97  36CE               	lsrf	(___ftadd@f1+2),f
 18488  0C98  0CCD               	rrf	(___ftadd@f1+1),f
 18489  0C99  0CCC               	rrf	(___ftadd@f1),f
 18490  0C9A  0B89               	decfsz	wreg,f
 18491  0C9B  2C97               	goto	u7245
 18492                           
 18493                           	line	115
 18494  0C9C  3001               	movlw	(01h)
 18495  0C9D  00D2               	movwf	(??___ftadd+0)+0
 18496  0C9E  0852               	movf	(??___ftadd+0)+0,w
 18497  0C9F  07D8               	addwf	(___ftadd@exp1),f
 18498  0CA0  2CA1               	goto	l19332
 18499                           	line	116
 18500                           	
 18501  0CA1                     l14512:	
 18502                           	line	113
 18503                           	
 18504  0CA1                     l19332:	
 18505  0CA1  0858               	movf	(___ftadd@exp1),w
 18506  0CA2  0657               	xorwf	(___ftadd@exp2),w
 18507  0CA3  1D03               	skipz
 18508  0CA4  2CA6               	goto	u7251
 18509  0CA5  2CA7               	goto	u7250
 18510  0CA6                     u7251:
 18511  0CA6  2C96               	goto	l19330
 18512  0CA7                     u7250:
 18513  0CA7  2CDC               	goto	l14515
 18514                           	
 18515  0CA8                     l14514:	
 18516                           	line	117
 18517  0CA8  2CDC               	goto	l14515
 18518                           	
 18519  0CA9                     l14507:	
 18520                           	
 18521  0CA9                     l19334:	
 18522  0CA9  0858               	movf	(___ftadd@exp1),w
 18523  0CAA  0257               	subwf	(___ftadd@exp2),w
 18524  0CAB  1803               	skipnc
 18525  0CAC  2CAE               	goto	u7261
 18526  0CAD  2CAF               	goto	u7260
 18527  0CAE                     u7261:
 18528  0CAE  2CDC               	goto	l14515
 18529  0CAF                     u7260:
 18530  0CAF  2CB0               	goto	l19336
 18531                           	line	120
 18532                           	
 18533  0CB0                     l14517:	
 18534                           	line	121
 18535                           	
 18536  0CB0                     l19336:	
 18537  0CB0  3001               	movlw	01h
 18538  0CB1                     u7275:
 18539  0CB1  35CC               	lslf	(___ftadd@f1),f
 18540  0CB2  0DCD               	rlf	(___ftadd@f1+1),f
 18541  0CB3  0DCE               	rlf	(___ftadd@f1+2),f
 18542  0CB4  0B89               	decfsz	wreg,f
 18543  0CB5  2CB1               	goto	u7275
 18544                           	line	122
 18545  0CB6  3001               	movlw	low(01h)
 18546  0CB7  02D8               	subwf	(___ftadd@exp1),f
 18547                           	line	123
 18548                           	
 18549  0CB8                     l19338:	
 18550  0CB8  0857               	movf	(___ftadd@exp2),w
 18551  0CB9  0658               	xorwf	(___ftadd@exp1),w
 18552  0CBA  1903               	skipnz
 18553  0CBB  2CBD               	goto	u7281
 18554  0CBC  2CBE               	goto	u7280
 18555  0CBD                     u7281:
 18556  0CBD  2CD4               	goto	l19344
 18557  0CBE                     u7280:
 18558                           	
 18559  0CBE                     l19340:	
 18560  0CBE  3001               	movlw	low(01h)
 18561  0CBF  02D6               	subwf	(___ftadd@sign),f
 18562  0CC0  0856               	movf	((___ftadd@sign)),w
 18563  0CC1  3907               	andlw	07h
 18564  0CC2  1D03               	btfss	status,2
 18565  0CC3  2CC5               	goto	u7291
 18566  0CC4  2CC6               	goto	u7290
 18567  0CC5                     u7291:
 18568  0CC5  2CB0               	goto	l19336
 18569  0CC6                     u7290:
 18570  0CC6  2CD4               	goto	l19344
 18571                           	
 18572  0CC7                     l14519:	
 18573  0CC7  2CD4               	goto	l19344
 18574                           	
 18575  0CC8                     l14520:	
 18576                           	line	124
 18577  0CC8  2CD4               	goto	l19344
 18578                           	
 18579  0CC9                     l14522:	
 18580                           	line	125
 18581                           	
 18582  0CC9                     l19342:	
 18583  0CC9  3001               	movlw	01h
 18584  0CCA                     u7305:
 18585  0CCA  36D1               	lsrf	(___ftadd@f2+2),f
 18586  0CCB  0CD0               	rrf	(___ftadd@f2+1),f
 18587  0CCC  0CCF               	rrf	(___ftadd@f2),f
 18588  0CCD  0B89               	decfsz	wreg,f
 18589  0CCE  2CCA               	goto	u7305
 18590                           
 18591                           	line	126
 18592  0CCF  3001               	movlw	(01h)
 18593  0CD0  00D2               	movwf	(??___ftadd+0)+0
 18594  0CD1  0852               	movf	(??___ftadd+0)+0,w
 18595  0CD2  07D7               	addwf	(___ftadd@exp2),f
 18596  0CD3  2CD4               	goto	l19344
 18597                           	line	127
 18598                           	
 18599  0CD4                     l14521:	
 18600                           	line	124
 18601                           	
 18602  0CD4                     l19344:	
 18603  0CD4  0858               	movf	(___ftadd@exp1),w
 18604  0CD5  0657               	xorwf	(___ftadd@exp2),w
 18605  0CD6  1D03               	skipz
 18606  0CD7  2CD9               	goto	u7311
 18607  0CD8  2CDA               	goto	u7310
 18608  0CD9                     u7311:
 18609  0CD9  2CC9               	goto	l19342
 18610  0CDA                     u7310:
 18611  0CDA  2CDC               	goto	l14515
 18612                           	
 18613  0CDB                     l14523:	
 18614  0CDB  2CDC               	goto	l14515
 18615                           	line	128
 18616                           	
 18617  0CDC                     l14516:	
 18618                           	line	129
 18619                           	
 18620  0CDC                     l14515:	
 18621  0CDC  1FD6               	btfss	(___ftadd@sign),(7)&7
 18622  0CDD  2CDF               	goto	u7321
 18623  0CDE  2CE0               	goto	u7320
 18624  0CDF                     u7321:
 18625  0CDF  2CF1               	goto	l19348
 18626  0CE0                     u7320:
 18627                           	line	131
 18628                           	
 18629  0CE0                     l19346:	
 18630  0CE0  30FF               	movlw	0FFh
 18631  0CE1  06CC               	xorwf	(___ftadd@f1),f
 18632  0CE2  30FF               	movlw	0FFh
 18633  0CE3  06CD               	xorwf	(___ftadd@f1+1),f
 18634  0CE4  30FF               	movlw	0FFh
 18635  0CE5  06CE               	xorwf	(___ftadd@f1+2),f
 18636                           	line	132
 18637  0CE6  3001               	movlw	01h
 18638  0CE7  07CC               	addwf	(___ftadd@f1),f
 18639  0CE8  3000               	movlw	0
 18640  0CE9  1803               	skipnc
 18641  0CEA  3001               movlw 1
 18642  0CEB  07CD               	addwf	(___ftadd@f1+1),f
 18643  0CEC  3000               	movlw	0
 18644  0CED  1803               	skipnc
 18645  0CEE  3001               movlw 1
 18646  0CEF  07CE               	addwf	(___ftadd@f1+2),f
 18647  0CF0  2CF1               	goto	l19348
 18648                           	line	133
 18649                           	
 18650  0CF1                     l14524:	
 18651                           	line	134
 18652                           	
 18653  0CF1                     l19348:	
 18654  0CF1  1F56               	btfss	(___ftadd@sign),(6)&7
 18655  0CF2  2CF4               	goto	u7331
 18656  0CF3  2CF5               	goto	u7330
 18657  0CF4                     u7331:
 18658  0CF4  2D06               	goto	l19352
 18659  0CF5                     u7330:
 18660                           	line	136
 18661                           	
 18662  0CF5                     l19350:	
 18663  0CF5  30FF               	movlw	0FFh
 18664  0CF6  06CF               	xorwf	(___ftadd@f2),f
 18665  0CF7  30FF               	movlw	0FFh
 18666  0CF8  06D0               	xorwf	(___ftadd@f2+1),f
 18667  0CF9  30FF               	movlw	0FFh
 18668  0CFA  06D1               	xorwf	(___ftadd@f2+2),f
 18669                           	line	137
 18670  0CFB  3001               	movlw	01h
 18671  0CFC  07CF               	addwf	(___ftadd@f2),f
 18672  0CFD  3000               	movlw	0
 18673  0CFE  1803               	skipnc
 18674  0CFF  3001               movlw 1
 18675  0D00  07D0               	addwf	(___ftadd@f2+1),f
 18676  0D01  3000               	movlw	0
 18677  0D02  1803               	skipnc
 18678  0D03  3001               movlw 1
 18679  0D04  07D1               	addwf	(___ftadd@f2+2),f
 18680  0D05  2D06               	goto	l19352
 18681                           	line	138
 18682                           	
 18683  0D06                     l14525:	
 18684                           	line	139
 18685                           	
 18686  0D06                     l19352:	
 18687  0D06  01D6               	clrf	(___ftadd@sign)
 18688                           	line	140
 18689  0D07  084C               	movf	(___ftadd@f1),w
 18690  0D08  07CF               	addwf	(___ftadd@f2),f
 18691  0D09  084D               	movf	(___ftadd@f1+1),w
 18692  0D0A  3DD0               	addwfc	(___ftadd@f2+1),f
 18693  0D0B  084E               	movf	(___ftadd@f1+2),w
 18694  0D0C  3DD1               	addwfc	(___ftadd@f2+2),f
 18695                           	line	141
 18696                           	
 18697  0D0D                     l19354:	
 18698  0D0D  1FD1               	btfss	(___ftadd@f2+2),(23)&7
 18699  0D0E  2D10               	goto	u7341
 18700  0D0F  2D11               	goto	u7340
 18701  0D10                     u7341:
 18702  0D10  2D25               	goto	l19360
 18703  0D11                     u7340:
 18704                           	line	142
 18705                           	
 18706  0D11                     l19356:	
 18707  0D11  30FF               	movlw	0FFh
 18708  0D12  06CF               	xorwf	(___ftadd@f2),f
 18709  0D13  30FF               	movlw	0FFh
 18710  0D14  06D0               	xorwf	(___ftadd@f2+1),f
 18711  0D15  30FF               	movlw	0FFh
 18712  0D16  06D1               	xorwf	(___ftadd@f2+2),f
 18713                           	line	143
 18714  0D17  3001               	movlw	01h
 18715  0D18  07CF               	addwf	(___ftadd@f2),f
 18716  0D19  3000               	movlw	0
 18717  0D1A  1803               	skipnc
 18718  0D1B  3001               movlw 1
 18719  0D1C  07D0               	addwf	(___ftadd@f2+1),f
 18720  0D1D  3000               	movlw	0
 18721  0D1E  1803               	skipnc
 18722  0D1F  3001               movlw 1
 18723  0D20  07D1               	addwf	(___ftadd@f2+2),f
 18724                           	line	144
 18725                           	
 18726  0D21                     l19358:	
 18727  0D21  01D6               	clrf	(___ftadd@sign)
 18728  0D22  1403               	bsf	status,0
 18729  0D23  0DD6               	rlf	(___ftadd@sign),f
 18730  0D24  2D25               	goto	l19360
 18731                           	line	145
 18732                           	
 18733  0D25                     l14526:	
 18734                           	line	146
 18735                           	
 18736  0D25                     l19360:	
 18737  0D25  084F               	movf	(___ftadd@f2),w
 18738  0D26  00A0               	movwf	(?___ftpack)
 18739  0D27  0850               	movf	(___ftadd@f2+1),w
 18740  0D28  00A1               	movwf	(?___ftpack+1)
 18741  0D29  0851               	movf	(___ftadd@f2+2),w
 18742  0D2A  00A2               	movwf	(?___ftpack+2)
 18743  0D2B  0858               	movf	(___ftadd@exp1),w
 18744  0D2C  00D2               	movwf	(??___ftadd+0)+0
 18745  0D2D  0852               	movf	(??___ftadd+0)+0,w
 18746  0D2E  00A3               	movwf	0+(?___ftpack)+03h
 18747  0D2F  0856               	movf	(___ftadd@sign),w
 18748  0D30  00D3               	movwf	(??___ftadd+1)+0
 18749  0D31  0853               	movf	(??___ftadd+1)+0,w
 18750  0D32  00A4               	movwf	0+(?___ftpack)+04h
 18751  0D33  319D  2520  318C   	fcall	___ftpack
 18752  0D36  0020               	movlb 0	; select bank0
 18753  0D37  0820               	movf	(0+(?___ftpack)),w
 18754  0D38  00CC               	movwf	(?___ftadd)
 18755  0D39  0821               	movf	(1+(?___ftpack)),w
 18756  0D3A  00CD               	movwf	(?___ftadd+1)
 18757  0D3B  0822               	movf	(2+(?___ftpack)),w
 18758  0D3C  00CE               	movwf	(?___ftadd+2)
 18759  0D3D  2D3E               	goto	l14501
 18760                           	
 18761  0D3E                     l19362:	
 18762                           	line	148
 18763                           	
 18764  0D3E                     l14501:	
 18765  0D3E  0008               	return
 18766                           	opt stack 0
 18767                           GLOBAL	__end_of___ftadd
 18768  0D3F                     	__end_of___ftadd:
 18769 ;; =============== function ___ftadd ends ============
 18770                           
 18771                           	signat	___ftadd,8315
 18772                           	global	_setRF_Learn
 18773                           psect	text4938,local,class=CODE,delta=2
 18774                           global __ptext4938
 18775  2F41                     __ptext4938:
 18776                           
 18777 ;; *************** function _setRF_Learn *****************
 18778 ;; Defined at:
 18779 ;;		line 32 in file "G:\Program\PIC\Source_File\RF_Control_B1.c"
 18780 ;; Parameters:    Size  Location     Type
 18781 ;;  rf              1    wreg     unsigned char 
 18782 ;;  command         1    2[BANK0 ] unsigned char 
 18783 ;; Auto vars:     Size  Location     Type
 18784 ;;  rf              1    3[BANK0 ] unsigned char 
 18785 ;; Return value:  Size  Location     Type
 18786 ;;		None               void
 18787 ;; Registers used:
 18788 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18789 ;; Tracked objects:
 18790 ;;		On entry : 0/0
 18791 ;;		On exit  : 0/0
 18792 ;;		Unchanged: 0/0
 18793 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 18794 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 18795 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 18796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 18797 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 18798 ;;Total ram usage:        2 bytes
 18799 ;; Hardware stack levels used:    1
 18800 ;; Hardware stack levels required when called:    5
 18801 ;; This function calls:
 18802 ;;		_RfPointSelect
 18803 ;; This function is called by:
 18804 ;;		_setSw_Main
 18805 ;; This function uses a non-reentrant model
 18806 ;;
 18807                           psect	text4938
 18808                           	file	"G:\Program\PIC\Source_File\RF_Control_B1.c"
 18809                           	line	32
 18810                           	global	__size_of_setRF_Learn
 18811  000F                     	__size_of_setRF_Learn	equ	__end_of_setRF_Learn-_setRF_Learn
 18812                           	
 18813  2F41                     _setRF_Learn:	
 18814                           	opt	stack 8
 18815                           ; Regs used in _setRF_Learn: [wreg+fsr1l-status,0+pclath+cstack]
 18816                           ;setRF_Learn@rf stored from wreg
 18817  2F41  0020               	movlb 0	; select bank0
 18818  2F42  00A3               	movwf	(setRF_Learn@rf)
 18819                           	line	33
 18820                           	
 18821  2F43                     l21066:	
 18822                           ;RF_Control_B1.c: 33: RfPointSelect(rf);
 18823  2F43  0823               	movf	(setRF_Learn@rf),w
 18824  2F44  31AE  26A0  31AF   	fcall	_RfPointSelect
 18825                           	line	34
 18826                           	
 18827  2F47                     l21068:	
 18828                           ;RF_Control_B1.c: 34: RF->Learn=command;
 18829  2F47  087B               	movf	(_RF),w
 18830  2F48  0086               	movwf	fsr1l
 18831  2F49  0187               	clrf fsr1h	
 18832                           	
 18833  2F4A  0020               	movlb 0	; select bank0
 18834  2F4B  0822               	movf	(setRF_Learn@command),w
 18835  2F4C  1301               	bcf	indf1,6
 18836  2F4D  1D03               	skipz
 18837  2F4E  1701               	bsf	indf1,6
 18838                           	line	35
 18839                           	
 18840  2F4F                     l13143:	
 18841  2F4F  0008               	return
 18842                           	opt stack 0
 18843                           GLOBAL	__end_of_setRF_Learn
 18844  2F50                     	__end_of_setRF_Learn:
 18845 ;; =============== function _setRF_Learn ends ============
 18846                           
 18847                           	signat	_setRF_Learn,8312
 18848                           	global	_setPowerFault_Initialization
 18849                           psect	text4939,local,class=CODE,delta=2
 18850                           global __ptext4939
 18851  2006                     __ptext4939:
 18852                           
 18853 ;; *************** function _setPowerFault_Initialization *****************
 18854 ;; Defined at:
 18855 ;;		line 30 in file "G:\Program\PIC\Source_File\PowerFault_B1.c"
 18856 ;; Parameters:    Size  Location     Type
 18857 ;;  pf              1    wreg     unsigned char 
 18858 ;; Auto vars:     Size  Location     Type
 18859 ;;  pf              1    1[BANK0 ] unsigned char 
 18860 ;; Return value:  Size  Location     Type
 18861 ;;		None               void
 18862 ;; Registers used:
 18863 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18864 ;; Tracked objects:
 18865 ;;		On entry : 0/0
 18866 ;;		On exit  : 0/0
 18867 ;;		Unchanged: 0/0
 18868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 18869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 18870 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 18871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 18872 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 18873 ;;Total ram usage:        1 bytes
 18874 ;; Hardware stack levels used:    1
 18875 ;; Hardware stack levels required when called:    5
 18876 ;; This function calls:
 18877 ;;		_PowerFaultPointSelect
 18878 ;; This function is called by:
 18879 ;;		_PowerFault_Initialization
 18880 ;; This function uses a non-reentrant model
 18881 ;;
 18882                           psect	text4939
 18883                           	file	"G:\Program\PIC\Source_File\PowerFault_B1.c"
 18884                           	line	30
 18885                           	global	__size_of_setPowerFault_Initialization
 18886  0010                     	__size_of_setPowerFault_Initialization	equ	__end_of_setPowerFault_Initialization-_setPo
                                 werFault_Initialization
 18887                           	
 18888  2006                     _setPowerFault_Initialization:	
 18889                           	opt	stack 9
 18890                           ; Regs used in _setPowerFault_Initialization: [wreg+fsr1l-status,0+pclath+cstack]
 18891                           ;setPowerFault_Initialization@pf stored from wreg
 18892  2006  0020               	movlb 0	; select bank0
 18893  2007  00A1               	movwf	(setPowerFault_Initialization@pf)
 18894                           	line	31
 18895                           	
 18896  2008                     l21060:	
 18897                           ;PowerFault_B1.c: 31: PowerFaultPointSelect(pf);
 18898  2008  0821               	movf	(setPowerFault_Initialization@pf),w
 18899  2009  31AD  2584  31A0   	fcall	_PowerFaultPointSelect
 18900                           	line	32
 18901                           	
 18902  200C                     l21062:	
 18903                           ;PowerFault_B1.c: 32: PF->Enable=1;
 18904  200C  0020               	movlb 0	; select bank0
 18905  200D  086C               	movf	(_PF),w
 18906  200E  0086               	movwf	fsr1l
 18907  200F  0187               	clrf fsr1h	
 18908                           	
 18909  2010  1401               	bsf	indf1,0
 18910                           	line	33
 18911                           	
 18912  2011                     l21064:	
 18913                           ;PowerFault_B1.c: 33: PF->Safe=1;
 18914  2011  086C               	movf	(_PF),w
 18915  2012  0086               	movwf	fsr1l
 18916  2013  0187               	clrf fsr1h	
 18917                           	
 18918  2014  1501               	bsf	indf1,2
 18919                           	line	34
 18920                           	
 18921  2015                     l11948:	
 18922  2015  0008               	return
 18923                           	opt stack 0
 18924                           GLOBAL	__end_of_setPowerFault_Initialization
 18925  2016                     	__end_of_setPowerFault_Initialization:
 18926 ;; =============== function _setPowerFault_Initialization ends ============
 18927                           
 18928                           	signat	_setPowerFault_Initialization,4216
 18929                           	global	_setTemp_Initialization
 18930                           psect	text4940,local,class=CODE,delta=2
 18931                           global __ptext4940
 18932  2E19                     __ptext4940:
 18933                           
 18934 ;; *************** function _setTemp_Initialization *****************
 18935 ;; Defined at:
 18936 ;;		line 63 in file "G:\Program\PIC\Source_File\OverTemperature_B1.c"
 18937 ;; Parameters:    Size  Location     Type
 18938 ;;  temp            1    wreg     unsigned char 
 18939 ;; Auto vars:     Size  Location     Type
 18940 ;;  temp            1    1[BANK0 ] unsigned char 
 18941 ;; Return value:  Size  Location     Type
 18942 ;;		None               void
 18943 ;; Registers used:
 18944 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18945 ;; Tracked objects:
 18946 ;;		On entry : 0/0
 18947 ;;		On exit  : 0/0
 18948 ;;		Unchanged: 0/0
 18949 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 18950 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 18951 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 18952 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 18953 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 18954 ;;Total ram usage:        1 bytes
 18955 ;; Hardware stack levels used:    1
 18956 ;; Hardware stack levels required when called:    5
 18957 ;; This function calls:
 18958 ;;		_TempPointSelect
 18959 ;; This function is called by:
 18960 ;;		_Temp_Initialization
 18961 ;; This function uses a non-reentrant model
 18962 ;;
 18963                           psect	text4940
 18964                           	file	"G:\Program\PIC\Source_File\OverTemperature_B1.c"
 18965                           	line	63
 18966                           	global	__size_of_setTemp_Initialization
 18967  000D                     	__size_of_setTemp_Initialization	equ	__end_of_setTemp_Initialization-_setTemp_Initializ
                                 ation
 18968                           	
 18969  2E19                     _setTemp_Initialization:	
 18970                           	opt	stack 9
 18971                           ; Regs used in _setTemp_Initialization: [wreg+fsr1l-status,0+pclath+cstack]
 18972                           ;setTemp_Initialization@temp stored from wreg
 18973  2E19  0020               	movlb 0	; select bank0
 18974  2E1A  00A1               	movwf	(setTemp_Initialization@temp)
 18975                           	line	64
 18976                           	
 18977  2E1B                     l21056:	
 18978                           ;OverTemperature_B1.c: 64: TempPointSelect(temp);
 18979  2E1B  0821               	movf	(setTemp_Initialization@temp),w
 18980  2E1C  31AD  257E  31AE   	fcall	_TempPointSelect
 18981                           	line	65
 18982                           	
 18983  2E1F                     l21058:	
 18984                           ;OverTemperature_B1.c: 65: Temp->Safe=1;
 18985  2E1F  0020               	movlb 0	; select bank0
 18986  2E20  086E               	movf	(_Temp),w
 18987  2E21  0086               	movwf	fsr1l
 18988  2E22  3001               	movlw 1	; select bank2/3
 18989  2E23  0087               	movwf fsr1h	
 18990                           	
 18991  2E24  1601               	bsf	indf1,4
 18992                           	line	66
 18993                           	
 18994  2E25                     l10793:	
 18995  2E25  0008               	return
 18996                           	opt stack 0
 18997                           GLOBAL	__end_of_setTemp_Initialization
 18998  2E26                     	__end_of_setTemp_Initialization:
 18999 ;; =============== function _setTemp_Initialization ends ============
 19000                           
 19001                           	signat	_setTemp_Initialization,4216
 19002                           	global	_setLoad_Initialization
 19003                           psect	text4941,local,class=CODE,delta=2
 19004                           global __ptext4941
 19005  208D                     __ptext4941:
 19006                           
 19007 ;; *************** function _setLoad_Initialization *****************
 19008 ;; Defined at:
 19009 ;;		line 32 in file "G:\Program\PIC\Source_File\OverLoad_B1.c"
 19010 ;; Parameters:    Size  Location     Type
 19011 ;;  load            1    wreg     unsigned char 
 19012 ;; Auto vars:     Size  Location     Type
 19013 ;;  load            1    2[BANK0 ] unsigned char 
 19014 ;; Return value:  Size  Location     Type
 19015 ;;		None               void
 19016 ;; Registers used:
 19017 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19018 ;; Tracked objects:
 19019 ;;		On entry : 0/0
 19020 ;;		On exit  : 0/0
 19021 ;;		Unchanged: 0/0
 19022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 19023 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 19024 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 19025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 19026 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 19027 ;;Total ram usage:        1 bytes
 19028 ;; Hardware stack levels used:    1
 19029 ;; Hardware stack levels required when called:    5
 19030 ;; This function calls:
 19031 ;;		_LoadPointSelect
 19032 ;;		_setLoad_AH_AL_Restore
 19033 ;; This function is called by:
 19034 ;;		_Load_Initialization
 19035 ;; This function uses a non-reentrant model
 19036 ;;
 19037                           psect	text4941
 19038                           	file	"G:\Program\PIC\Source_File\OverLoad_B1.c"
 19039                           	line	32
 19040                           	global	__size_of_setLoad_Initialization
 19041  0011                     	__size_of_setLoad_Initialization	equ	__end_of_setLoad_Initialization-_setLoad_Initializ
                                 ation
 19042                           	
 19043  208D                     _setLoad_Initialization:	
 19044                           	opt	stack 9
 19045                           ; Regs used in _setLoad_Initialization: [wreg+fsr1l-status,0+pclath+cstack]
 19046                           ;setLoad_Initialization@load stored from wreg
 19047  208D  0020               	movlb 0	; select bank0
 19048  208E  00A2               	movwf	(setLoad_Initialization@load)
 19049                           	line	33
 19050                           	
 19051  208F                     l21050:	
 19052                           ;OverLoad_B1.c: 33: LoadPointSelect(load);
 19053  208F  0822               	movf	(setLoad_Initialization@load),w
 19054  2090  31AE  2692  31A0   	fcall	_LoadPointSelect
 19055                           	line	34
 19056                           	
 19057  2093                     l21052:	
 19058                           ;OverLoad_B1.c: 34: Load->Safe=1;
 19059  2093  0020               	movlb 0	; select bank0
 19060  2094  086B               	movf	(_Load),w
 19061  2095  0086               	movwf	fsr1l
 19062  2096  3002               	movlw 2	; select bank4/5
 19063  2097  0087               	movwf fsr1h	
 19064                           	
 19065  2098  1581               	bsf	indf1,3
 19066                           	line	35
 19067                           	
 19068  2099                     l21054:	
 19069                           ;OverLoad_B1.c: 35: setLoad_AH_AL_Restore(load);
 19070  2099  0822               	movf	(setLoad_Initialization@load),w
 19071  209A  31A4  241C  31A0   	fcall	_setLoad_AH_AL_Restore
 19072                           	line	36
 19073                           	
 19074  209D                     l9559:	
 19075  209D  0008               	return
 19076                           	opt stack 0
 19077                           GLOBAL	__end_of_setLoad_Initialization
 19078  209E                     	__end_of_setLoad_Initialization:
 19079 ;; =============== function _setLoad_Initialization ends ============
 19080                           
 19081                           	signat	_setLoad_Initialization,4216
 19082                           	global	_Flash_Memory_Unlock
 19083                           psect	text4942,local,class=CODE,delta=2
 19084                           global __ptext4942
 19085  2DB8                     __ptext4942:
 19086                           
 19087 ;; *************** function _Flash_Memory_Unlock *****************
 19088 ;; Defined at:
 19089 ;;		line 412 in file "G:\Program\PIC\Source_File\MCU_16f1518_B1.c"
 19090 ;; Parameters:    Size  Location     Type
 19091 ;;		None
 19092 ;; Auto vars:     Size  Location     Type
 19093 ;;		None
 19094 ;; Return value:  Size  Location     Type
 19095 ;;		None               void
 19096 ;; Registers used:
 19097 ;;		wreg
 19098 ;; Tracked objects:
 19099 ;;		On entry : 0/0
 19100 ;;		On exit  : 0/0
 19101 ;;		Unchanged: 0/0
 19102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 19103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 19104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 19105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 19106 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 19107 ;;Total ram usage:        0 bytes
 19108 ;; Hardware stack levels used:    1
 19109 ;; Hardware stack levels required when called:    4
 19110 ;; This function calls:
 19111 ;;		Nothing
 19112 ;; This function is called by:
 19113 ;;		_Flash_Memory_Write
 19114 ;;		_Flash_Memory_Erasing
 19115 ;; This function uses a non-reentrant model
 19116 ;;
 19117                           psect	text4942
 19118                           	file	"G:\Program\PIC\Source_File\MCU_16f1518_B1.c"
 19119                           	line	412
 19120                           	global	__size_of_Flash_Memory_Unlock
 19121  0009                     	__size_of_Flash_Memory_Unlock	equ	__end_of_Flash_Memory_Unlock-_Flash_Memory_Unlock
 19122                           	
 19123  2DB8                     _Flash_Memory_Unlock:	
 19124                           	opt	stack 8
 19125                           ; Regs used in _Flash_Memory_Unlock: [wreg]
 19126                           	line	413
 19127                           	
 19128  2DB8                     l21042:	
 19129                           ;MCU_16f1518_B1.c: 413: PMCON2=0x55;
 19130  2DB8  3055               	movlw	(055h)
 19131  2DB9  0023               	movlb 3	; select bank3
 19132  2DBA  0096               	movwf	(406)^0180h	;volatile
 19133                           	line	414
 19134                           ;MCU_16f1518_B1.c: 414: PMCON2=0xaa;
 19135  2DBB  30AA               	movlw	(0AAh)
 19136  2DBC  0096               	movwf	(406)^0180h	;volatile
 19137                           	line	415
 19138                           	
 19139  2DBD                     l21044:	
 19140                           ;MCU_16f1518_B1.c: 415: WR=1;
 19141  2DBD  1495               	bsf	(3241/8)^0180h,(3241)&7
 19142                           	line	416
 19143                           	
 19144  2DBE                     l21046:	
 19145                           ;MCU_16f1518_B1.c: 416: _nop();
 19146  2DBE  0000               	nop
 19147                           	line	417
 19148                           	
 19149  2DBF                     l21048:	
 19150                           ;MCU_16f1518_B1.c: 417: _nop();
 19151  2DBF  0000               	nop
 19152                           	line	418
 19153                           	
 19154  2DC0                     l8407:	
 19155  2DC0  0008               	return
 19156                           	opt stack 0
 19157                           GLOBAL	__end_of_Flash_Memory_Unlock
 19158  2DC1                     	__end_of_Flash_Memory_Unlock:
 19159 ;; =============== function _Flash_Memory_Unlock ends ============
 19160                           
 19161                           	signat	_Flash_Memory_Unlock,88
 19162                           	global	_setSw_Enable
 19163                           psect	text4943,local,class=CODE,delta=2
 19164                           global __ptext4943
 19165  2FF0                     __ptext4943:
 19166                           
 19167 ;; *************** function _setSw_Enable *****************
 19168 ;; Defined at:
 19169 ;;		line 79 in file "G:\Program\PIC\Source_File\Switch_B1.c"
 19170 ;; Parameters:    Size  Location     Type
 19171 ;;  sw              1    wreg     unsigned char 
 19172 ;;  command         1    2[BANK0 ] unsigned char 
 19173 ;; Auto vars:     Size  Location     Type
 19174 ;;  sw              1    3[BANK0 ] unsigned char 
 19175 ;; Return value:  Size  Location     Type
 19176 ;;		None               void
 19177 ;; Registers used:
 19178 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19179 ;; Tracked objects:
 19180 ;;		On entry : 0/0
 19181 ;;		On exit  : 0/0
 19182 ;;		Unchanged: 0/0
 19183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 19184 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 19185 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 19186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 19187 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 19188 ;;Total ram usage:        2 bytes
 19189 ;; Hardware stack levels used:    1
 19190 ;; Hardware stack levels required when called:    5
 19191 ;; This function calls:
 19192 ;;		_SwPointSelect
 19193 ;; This function is called by:
 19194 ;;		_MainT
 19195 ;;		_setLoad_ERROR
 19196 ;;		_setOverTemp_ERROR
 19197 ;;		_setPowerFault_ERROR
 19198 ;; This function uses a non-reentrant model
 19199 ;;
 19200                           psect	text4943
 19201                           	file	"G:\Program\PIC\Source_File\Switch_B1.c"
 19202                           	line	79
 19203                           	global	__size_of_setSw_Enable
 19204  0010                     	__size_of_setSw_Enable	equ	__end_of_setSw_Enable-_setSw_Enable
 19205                           	
 19206  2FF0                     _setSw_Enable:	
 19207                           	opt	stack 7
 19208                           ; Regs used in _setSw_Enable: [wreg+fsr1l-status,0+pclath+cstack]
 19209                           ;setSw_Enable@sw stored from wreg
 19210  2FF0  0020               	movlb 0	; select bank0
 19211  2FF1  00A3               	movwf	(setSw_Enable@sw)
 19212                           	line	80
 19213                           	
 19214  2FF2                     l21038:	
 19215                           ;Switch_B1.c: 80: SwPointSelect(sw);
 19216  2FF2  0823               	movf	(setSw_Enable@sw),w
 19217  2FF3  31AE  26AE  31AF   	fcall	_SwPointSelect
 19218                           	line	81
 19219                           	
 19220  2FF6                     l21040:	
 19221                           ;Switch_B1.c: 81: Sw->Enable=command;
 19222  2FF6  0020               	movlb 0	; select bank0
 19223  2FF7  086D               	movf	(_Sw),w
 19224  2FF8  0086               	movwf	fsr1l
 19225  2FF9  3001               	movlw 1	; select bank2/3
 19226  2FFA  0087               	movwf fsr1h	
 19227                           	
 19228  2FFB  0822               	movf	(setSw_Enable@command),w
 19229  2FFC  1001               	bcf	indf1,0
 19230  2FFD  1D03               	skipz
 19231  2FFE  1401               	bsf	indf1,0
 19232                           	line	82
 19233                           	
 19234  2FFF                     l14399:	
 19235  2FFF  0008               	return
 19236                           	opt stack 0
 19237                           GLOBAL	__end_of_setSw_Enable
 19238  3000                     	__end_of_setSw_Enable:
 19239 ;; =============== function _setSw_Enable ends ============
 19240                           
 19241                           	signat	_setSw_Enable,8312
 19242                           	global	_getLoad_Safe
 19243                           psect	text4944,local,class=CODE,delta=2
 19244                           global __ptext4944
 19245  20B0                     __ptext4944:
 19246                           
 19247 ;; *************** function _getLoad_Safe *****************
 19248 ;; Defined at:
 19249 ;;		line 365 in file "G:\Program\PIC\Source_File\OverLoad_B1.c"
 19250 ;; Parameters:    Size  Location     Type
 19251 ;;  load            1    wreg     unsigned char 
 19252 ;; Auto vars:     Size  Location     Type
 19253 ;;  load            1    3[BANK0 ] unsigned char 
 19254 ;; Return value:  Size  Location     Type
 19255 ;;                  1    wreg      unsigned char 
 19256 ;; Registers used:
 19257 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19258 ;; Tracked objects:
 19259 ;;		On entry : 0/0
 19260 ;;		On exit  : 0/0
 19261 ;;		Unchanged: 0/0
 19262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 19263 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 19264 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 19265 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 19266 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 19267 ;;Total ram usage:        2 bytes
 19268 ;; Hardware stack levels used:    1
 19269 ;; Hardware stack levels required when called:    5
 19270 ;; This function calls:
 19271 ;;		_LoadPointSelect
 19272 ;; This function is called by:
 19273 ;;		_MainT
 19274 ;;		_setTemp_Main
 19275 ;;		_setPowerFault_Main
 19276 ;; This function uses a non-reentrant model
 19277 ;;
 19278                           psect	text4944
 19279                           	file	"G:\Program\PIC\Source_File\OverLoad_B1.c"
 19280                           	line	365
 19281                           	global	__size_of_getLoad_Safe
 19282  0012                     	__size_of_getLoad_Safe	equ	__end_of_getLoad_Safe-_getLoad_Safe
 19283                           	
 19284  20B0                     _getLoad_Safe:	
 19285                           	opt	stack 8
 19286                           ; Regs used in _getLoad_Safe: [wreg+fsr1l-status,0+pclath+cstack]
 19287                           ;getLoad_Safe@load stored from wreg
 19288  20B0  0020               	movlb 0	; select bank0
 19289  20B1  00A3               	movwf	(getLoad_Safe@load)
 19290                           	line	366
 19291                           	
 19292  20B2                     l19256:	
 19293                           ;OverLoad_B1.c: 366: LoadPointSelect(load);
 19294  20B2  0823               	movf	(getLoad_Safe@load),w
 19295  20B3  31AE  2692  31A0   	fcall	_LoadPointSelect
 19296                           	line	367
 19297                           	
 19298  20B6                     l19258:	
 19299                           ;OverLoad_B1.c: 367: return Load->Safe;
 19300  20B6  0020               	movlb 0	; select bank0
 19301  20B7  086B               	movf	(_Load),w
 19302  20B8  0086               	movwf	fsr1l
 19303  20B9  3002               	movlw 2	; select bank4/5
 19304  20BA  0087               	movwf fsr1h	
 19305                           	
 19306  20BB  0C01               	rrf	indf1,w
 19307  20BC  00A2               	movwf	(??_getLoad_Safe+0)+0
 19308  20BD  0CA2               	rrf	(??_getLoad_Safe+0)+0,f
 19309  20BE  0C22               	rrf	(??_getLoad_Safe+0)+0,w
 19310  20BF  3901               	andlw	(1<<1)-1
 19311  20C0  28C1               	goto	l9637
 19312                           	
 19313  20C1                     l19260:	
 19314                           	line	368
 19315                           	
 19316  20C1                     l9637:	
 19317  20C1  0008               	return
 19318                           	opt stack 0
 19319                           GLOBAL	__end_of_getLoad_Safe
 19320  20C2                     	__end_of_getLoad_Safe:
 19321 ;; =============== function _getLoad_Safe ends ============
 19322                           
 19323                           	signat	_getLoad_Safe,4217
 19324                           	global	_getPF_Safe
 19325                           psect	text4945,local,class=CODE,delta=2
 19326                           global __ptext4945
 19327  2F32                     __ptext4945:
 19328                           
 19329 ;; *************** function _getPF_Safe *****************
 19330 ;; Defined at:
 19331 ;;		line 42 in file "G:\Program\PIC\Source_File\PowerFault_B1.c"
 19332 ;; Parameters:    Size  Location     Type
 19333 ;;  pf              1    wreg     unsigned char 
 19334 ;; Auto vars:     Size  Location     Type
 19335 ;;  pf              1    1[BANK0 ] unsigned char 
 19336 ;; Return value:  Size  Location     Type
 19337 ;;                  1    wreg      unsigned char 
 19338 ;; Registers used:
 19339 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19340 ;; Tracked objects:
 19341 ;;		On entry : 0/0
 19342 ;;		On exit  : 0/0
 19343 ;;		Unchanged: 0/0
 19344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 19345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 19346 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 19347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 19348 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 19349 ;;Total ram usage:        1 bytes
 19350 ;; Hardware stack levels used:    1
 19351 ;; Hardware stack levels required when called:    5
 19352 ;; This function calls:
 19353 ;;		_PowerFaultPointSelect
 19354 ;; This function is called by:
 19355 ;;		_MainT
 19356 ;;		_setLoad_Main
 19357 ;;		_setTemp_Main
 19358 ;; This function uses a non-reentrant model
 19359 ;;
 19360                           psect	text4945
 19361                           	file	"G:\Program\PIC\Source_File\PowerFault_B1.c"
 19362                           	line	42
 19363                           	global	__size_of_getPF_Safe
 19364  000F                     	__size_of_getPF_Safe	equ	__end_of_getPF_Safe-_getPF_Safe
 19365                           	
 19366  2F32                     _getPF_Safe:	
 19367                           	opt	stack 8
 19368                           ; Regs used in _getPF_Safe: [wreg+fsr1l-status,0+pclath+cstack]
 19369                           ;getPF_Safe@pf stored from wreg
 19370  2F32  0020               	movlb 0	; select bank0
 19371  2F33  00A1               	movwf	(getPF_Safe@pf)
 19372                           	line	43
 19373                           	
 19374  2F34                     l21032:	
 19375                           ;PowerFault_B1.c: 43: PowerFaultPointSelect(pf);
 19376  2F34  0821               	movf	(getPF_Safe@pf),w
 19377  2F35  31AD  2584  31AF   	fcall	_PowerFaultPointSelect
 19378                           	line	44
 19379                           	
 19380  2F38                     l21034:	
 19381                           ;PowerFault_B1.c: 44: return PF->Safe;
 19382  2F38  0020               	movlb 0	; select bank0
 19383  2F39  086C               	movf	(_PF),w
 19384  2F3A  0086               	movwf	fsr1l
 19385  2F3B  0187               	clrf fsr1h	
 19386                           	
 19387  2F3C  0C01               	rrf	indf1,w
 19388  2F3D  0C89               	rrf	wreg,f
 19389  2F3E  3901               	andlw	(1<<1)-1
 19390  2F3F  2F40               	goto	l11954
 19391                           	
 19392  2F40                     l21036:	
 19393                           	line	45
 19394                           	
 19395  2F40                     l11954:	
 19396  2F40  0008               	return
 19397                           	opt stack 0
 19398                           GLOBAL	__end_of_getPF_Safe
 19399  2F41                     	__end_of_getPF_Safe:
 19400 ;; =============== function _getPF_Safe ends ============
 19401                           
 19402                           	signat	_getPF_Safe,4217
 19403                           	global	_getTemp_Safe
 19404                           psect	text4946,local,class=CODE,delta=2
 19405                           global __ptext4946
 19406  2F23                     __ptext4946:
 19407                           
 19408 ;; *************** function _getTemp_Safe *****************
 19409 ;; Defined at:
 19410 ;;		line 35 in file "G:\Program\PIC\Source_File\OverTemperature_B1.c"
 19411 ;; Parameters:    Size  Location     Type
 19412 ;;  temp            1    wreg     unsigned char 
 19413 ;; Auto vars:     Size  Location     Type
 19414 ;;  temp            1    1[BANK0 ] unsigned char 
 19415 ;; Return value:  Size  Location     Type
 19416 ;;                  1    wreg      unsigned char 
 19417 ;; Registers used:
 19418 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19419 ;; Tracked objects:
 19420 ;;		On entry : 0/0
 19421 ;;		On exit  : 0/0
 19422 ;;		Unchanged: 0/0
 19423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 19424 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 19425 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 19426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 19427 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 19428 ;;Total ram usage:        1 bytes
 19429 ;; Hardware stack levels used:    1
 19430 ;; Hardware stack levels required when called:    5
 19431 ;; This function calls:
 19432 ;;		_TempPointSelect
 19433 ;; This function is called by:
 19434 ;;		_MainT
 19435 ;;		_setLoad_Main
 19436 ;;		_setPowerFault_Main
 19437 ;; This function uses a non-reentrant model
 19438 ;;
 19439                           psect	text4946
 19440                           	file	"G:\Program\PIC\Source_File\OverTemperature_B1.c"
 19441                           	line	35
 19442                           	global	__size_of_getTemp_Safe
 19443  000F                     	__size_of_getTemp_Safe	equ	__end_of_getTemp_Safe-_getTemp_Safe
 19444                           	
 19445  2F23                     _getTemp_Safe:	
 19446                           	opt	stack 8
 19447                           ; Regs used in _getTemp_Safe: [wreg+fsr1l-status,0+pclath+cstack]
 19448                           ;getTemp_Safe@temp stored from wreg
 19449  2F23  0020               	movlb 0	; select bank0
 19450  2F24  00A1               	movwf	(getTemp_Safe@temp)
 19451                           	line	36
 19452                           	
 19453  2F25                     l21026:	
 19454                           ;OverTemperature_B1.c: 36: TempPointSelect(temp);
 19455  2F25  0821               	movf	(getTemp_Safe@temp),w
 19456  2F26  31AD  257E  31AF   	fcall	_TempPointSelect
 19457                           	line	37
 19458                           	
 19459  2F29                     l21028:	
 19460                           ;OverTemperature_B1.c: 37: return Temp->Safe;
 19461  2F29  0020               	movlb 0	; select bank0
 19462  2F2A  086E               	movf	(_Temp),w
 19463  2F2B  0086               	movwf	fsr1l
 19464  2F2C  3001               	movlw 1	; select bank2/3
 19465  2F2D  0087               	movwf fsr1h	
 19466                           	
 19467  2F2E  0E01               	swapf	indf1,w
 19468  2F2F  3901               	andlw	(1<<1)-1
 19469  2F30  2F31               	goto	l10780
 19470                           	
 19471  2F31                     l21030:	
 19472                           	line	38
 19473                           	
 19474  2F31                     l10780:	
 19475  2F31  0008               	return
 19476                           	opt stack 0
 19477                           GLOBAL	__end_of_getTemp_Safe
 19478  2F32                     	__end_of_getTemp_Safe:
 19479 ;; =============== function _getTemp_Safe ends ============
 19480                           
 19481                           	signat	_getTemp_Safe,4217
 19482                           	global	_getLoad_ERROR
 19483                           psect	text4947,local,class=CODE,delta=2
 19484                           global __ptext4947
 19485  2FE0                     __ptext4947:
 19486                           
 19487 ;; *************** function _getLoad_ERROR *****************
 19488 ;; Defined at:
 19489 ;;		line 370 in file "G:\Program\PIC\Source_File\OverLoad_B1.c"
 19490 ;; Parameters:    Size  Location     Type
 19491 ;;  load            1    wreg     unsigned char 
 19492 ;; Auto vars:     Size  Location     Type
 19493 ;;  load            1    2[BANK0 ] unsigned char 
 19494 ;; Return value:  Size  Location     Type
 19495 ;;                  1    wreg      unsigned char 
 19496 ;; Registers used:
 19497 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19498 ;; Tracked objects:
 19499 ;;		On entry : 0/0
 19500 ;;		On exit  : 0/0
 19501 ;;		Unchanged: 0/0
 19502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 19503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 19504 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 19505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 19506 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 19507 ;;Total ram usage:        1 bytes
 19508 ;; Hardware stack levels used:    1
 19509 ;; Hardware stack levels required when called:    5
 19510 ;; This function calls:
 19511 ;;		_LoadPointSelect
 19512 ;; This function is called by:
 19513 ;;		_MainT
 19514 ;;		_Sw_Detect
 19515 ;; This function uses a non-reentrant model
 19516 ;;
 19517                           psect	text4947
 19518                           	file	"G:\Program\PIC\Source_File\OverLoad_B1.c"
 19519                           	line	370
 19520                           	global	__size_of_getLoad_ERROR
 19521  0010                     	__size_of_getLoad_ERROR	equ	__end_of_getLoad_ERROR-_getLoad_ERROR
 19522                           	
 19523  2FE0                     _getLoad_ERROR:	
 19524                           	opt	stack 9
 19525                           ; Regs used in _getLoad_ERROR: [wreg+fsr1l-status,0+pclath+cstack]
 19526                           ;getLoad_ERROR@load stored from wreg
 19527  2FE0  0020               	movlb 0	; select bank0
 19528  2FE1  00A2               	movwf	(getLoad_ERROR@load)
 19529                           	line	371
 19530                           	
 19531  2FE2                     l21020:	
 19532                           ;OverLoad_B1.c: 371: LoadPointSelect(load);
 19533  2FE2  0822               	movf	(getLoad_ERROR@load),w
 19534  2FE3  31AE  2692  31AF   	fcall	_LoadPointSelect
 19535                           	line	372
 19536                           	
 19537  2FE6                     l21022:	
 19538                           ;OverLoad_B1.c: 372: return Load->ERROR;
 19539  2FE6  0020               	movlb 0	; select bank0
 19540  2FE7  086B               	movf	(_Load),w
 19541  2FE8  0086               	movwf	fsr1l
 19542  2FE9  3002               	movlw 2	; select bank4/5
 19543  2FEA  0087               	movwf fsr1h	
 19544                           	
 19545  2FEB  0E01               	swapf	indf1,w
 19546  2FEC  0C89               	rrf	wreg,f
 19547  2FED  3901               	andlw	(1<<1)-1
 19548  2FEE  2FEF               	goto	l9640
 19549                           	
 19550  2FEF                     l21024:	
 19551                           	line	373
 19552                           	
 19553  2FEF                     l9640:	
 19554  2FEF  0008               	return
 19555                           	opt stack 0
 19556                           GLOBAL	__end_of_getLoad_ERROR
 19557  2FF0                     	__end_of_getLoad_ERROR:
 19558 ;; =============== function _getLoad_ERROR ends ============
 19559                           
 19560                           	signat	_getLoad_ERROR,4217
 19561                           	global	_getPF_ERROR
 19562                           psect	text4948,local,class=CODE,delta=2
 19563                           global __ptext4948
 19564  07F2                     __ptext4948:
 19565                           
 19566 ;; *************** function _getPF_ERROR *****************
 19567 ;; Defined at:
 19568 ;;		line 47 in file "G:\Program\PIC\Source_File\PowerFault_B1.c"
 19569 ;; Parameters:    Size  Location     Type
 19570 ;;  pf              1    wreg     unsigned char 
 19571 ;; Auto vars:     Size  Location     Type
 19572 ;;  pf              1    1[BANK0 ] unsigned char 
 19573 ;; Return value:  Size  Location     Type
 19574 ;;                  1    wreg      unsigned char 
 19575 ;; Registers used:
 19576 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19577 ;; Tracked objects:
 19578 ;;		On entry : 0/0
 19579 ;;		On exit  : 0/0
 19580 ;;		Unchanged: 0/0
 19581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 19582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 19583 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 19584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 19585 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 19586 ;;Total ram usage:        1 bytes
 19587 ;; Hardware stack levels used:    1
 19588 ;; Hardware stack levels required when called:    5
 19589 ;; This function calls:
 19590 ;;		_PowerFaultPointSelect
 19591 ;; This function is called by:
 19592 ;;		_MainT
 19593 ;;		_Sw_Detect
 19594 ;; This function uses a non-reentrant model
 19595 ;;
 19596                           psect	text4948
 19597                           	file	"G:\Program\PIC\Source_File\PowerFault_B1.c"
 19598                           	line	47
 19599                           	global	__size_of_getPF_ERROR
 19600  000E                     	__size_of_getPF_ERROR	equ	__end_of_getPF_ERROR-_getPF_ERROR
 19601                           	
 19602  07F2                     _getPF_ERROR:	
 19603                           	opt	stack 9
 19604                           ; Regs used in _getPF_ERROR: [wreg+fsr1l-status,0+pclath+cstack]
 19605                           ;getPF_ERROR@pf stored from wreg
 19606  07F2  0020               	movlb 0	; select bank0
 19607  07F3  00A1               	movwf	(getPF_ERROR@pf)
 19608                           	line	48
 19609                           	
 19610  07F4                     l21014:	
 19611                           ;PowerFault_B1.c: 48: PowerFaultPointSelect(pf);
 19612  07F4  0821               	movf	(getPF_ERROR@pf),w
 19613  07F5  31AD  2584  3187   	fcall	_PowerFaultPointSelect
 19614                           	line	49
 19615                           	
 19616  07F8                     l21016:	
 19617                           ;PowerFault_B1.c: 49: return PF->ERROR;
 19618  07F8  0020               	movlb 0	; select bank0
 19619  07F9  086C               	movf	(_PF),w
 19620  07FA  0086               	movwf	fsr1l
 19621  07FB  0187               	clrf fsr1h	
 19622                           	
 19623  07FC  0C01               	rrf	indf1,w
 19624  07FD  3901               	andlw	(1<<1)-1
 19625  07FE  2FFF               	goto	l11957
 19626                           	
 19627  07FF                     l21018:	
 19628                           	line	50
 19629                           	
 19630  07FF                     l11957:	
 19631  07FF  0008               	return
 19632                           	opt stack 0
 19633                           GLOBAL	__end_of_getPF_ERROR
 19634  0800                     	__end_of_getPF_ERROR:
 19635 ;; =============== function _getPF_ERROR ends ============
 19636                           
 19637                           	signat	_getPF_ERROR,4217
 19638                           	global	_getTemp_ERROR
 19639                           psect	text4949,local,class=CODE,delta=2
 19640                           global __ptext4949
 19641  2F14                     __ptext4949:
 19642                           
 19643 ;; *************** function _getTemp_ERROR *****************
 19644 ;; Defined at:
 19645 ;;		line 40 in file "G:\Program\PIC\Source_File\OverTemperature_B1.c"
 19646 ;; Parameters:    Size  Location     Type
 19647 ;;  temp            1    wreg     unsigned char 
 19648 ;; Auto vars:     Size  Location     Type
 19649 ;;  temp            1    1[BANK0 ] unsigned char 
 19650 ;; Return value:  Size  Location     Type
 19651 ;;                  1    wreg      unsigned char 
 19652 ;; Registers used:
 19653 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19654 ;; Tracked objects:
 19655 ;;		On entry : 0/0
 19656 ;;		On exit  : 0/0
 19657 ;;		Unchanged: 0/0
 19658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 19659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 19660 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 19661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 19662 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 19663 ;;Total ram usage:        1 bytes
 19664 ;; Hardware stack levels used:    1
 19665 ;; Hardware stack levels required when called:    5
 19666 ;; This function calls:
 19667 ;;		_TempPointSelect
 19668 ;; This function is called by:
 19669 ;;		_MainT
 19670 ;;		_Sw_Detect
 19671 ;; This function uses a non-reentrant model
 19672 ;;
 19673                           psect	text4949
 19674                           	file	"G:\Program\PIC\Source_File\OverTemperature_B1.c"
 19675                           	line	40
 19676                           	global	__size_of_getTemp_ERROR
 19677  000F                     	__size_of_getTemp_ERROR	equ	__end_of_getTemp_ERROR-_getTemp_ERROR
 19678                           	
 19679  2F14                     _getTemp_ERROR:	
 19680                           	opt	stack 9
 19681                           ; Regs used in _getTemp_ERROR: [wreg+fsr1l-status,0+pclath+cstack]
 19682                           ;getTemp_ERROR@temp stored from wreg
 19683  2F14  0020               	movlb 0	; select bank0
 19684  2F15  00A1               	movwf	(getTemp_ERROR@temp)
 19685                           	line	41
 19686                           	
 19687  2F16                     l21008:	
 19688                           ;OverTemperature_B1.c: 41: TempPointSelect(temp);
 19689  2F16  0821               	movf	(getTemp_ERROR@temp),w
 19690  2F17  31AD  257E  31AF   	fcall	_TempPointSelect
 19691                           	line	42
 19692                           	
 19693  2F1A                     l21010:	
 19694                           ;OverTemperature_B1.c: 42: return Temp->ERROR;
 19695  2F1A  0020               	movlb 0	; select bank0
 19696  2F1B  086E               	movf	(_Temp),w
 19697  2F1C  0086               	movwf	fsr1l
 19698  2F1D  3001               	movlw 1	; select bank2/3
 19699  2F1E  0087               	movwf fsr1h	
 19700                           	
 19701  2F1F  0C01               	rrf	indf1,w
 19702  2F20  3901               	andlw	(1<<1)-1
 19703  2F21  2F22               	goto	l10783
 19704                           	
 19705  2F22                     l21012:	
 19706                           	line	43
 19707                           	
 19708  2F22                     l10783:	
 19709  2F22  0008               	return
 19710                           	opt stack 0
 19711                           GLOBAL	__end_of_getTemp_ERROR
 19712  2F23                     	__end_of_getTemp_ERROR:
 19713 ;; =============== function _getTemp_ERROR ends ============
 19714                           
 19715                           	signat	_getTemp_ERROR,4217
 19716                           	global	_setLoad_Enable
 19717                           psect	text4950,local,class=CODE,delta=2
 19718                           global __ptext4950
 19719  0800                     __ptext4950:
 19720                           
 19721 ;; *************** function _setLoad_Enable *****************
 19722 ;; Defined at:
 19723 ;;		line 331 in file "G:\Program\PIC\Source_File\OverLoad_B1.c"
 19724 ;; Parameters:    Size  Location     Type
 19725 ;;  load            1    wreg     unsigned char 
 19726 ;;  command         1    2[BANK0 ] unsigned char 
 19727 ;; Auto vars:     Size  Location     Type
 19728 ;;  load            1    3[BANK0 ] unsigned char 
 19729 ;; Return value:  Size  Location     Type
 19730 ;;		None               void
 19731 ;; Registers used:
 19732 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19733 ;; Tracked objects:
 19734 ;;		On entry : 0/0
 19735 ;;		On exit  : 0/0
 19736 ;;		Unchanged: 0/0
 19737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 19738 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 19739 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 19740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 19741 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 19742 ;;Total ram usage:        2 bytes
 19743 ;; Hardware stack levels used:    1
 19744 ;; Hardware stack levels required when called:    5
 19745 ;; This function calls:
 19746 ;;		_LoadPointSelect
 19747 ;; This function is called by:
 19748 ;;		_MainT
 19749 ;; This function uses a non-reentrant model
 19750 ;;
 19751                           psect	text4950
 19752                           	file	"G:\Program\PIC\Source_File\OverLoad_B1.c"
 19753                           	line	331
 19754                           	global	__size_of_setLoad_Enable
 19755  0015                     	__size_of_setLoad_Enable	equ	__end_of_setLoad_Enable-_setLoad_Enable
 19756                           	
 19757  0800                     _setLoad_Enable:	
 19758                           	opt	stack 9
 19759                           ; Regs used in _setLoad_Enable: [wreg+fsr1l-status,0+pclath+cstack]
 19760                           ;setLoad_Enable@load stored from wreg
 19761  0800  0020               	movlb 0	; select bank0
 19762  0801  00A3               	movwf	(setLoad_Enable@load)
 19763                           	line	332
 19764                           	
 19765  0802                     l21002:	
 19766                           ;OverLoad_B1.c: 332: LoadPointSelect(load);
 19767  0802  0823               	movf	(setLoad_Enable@load),w
 19768  0803  31AE  2692  3188   	fcall	_LoadPointSelect
 19769                           	line	333
 19770                           	
 19771  0806                     l21004:	
 19772                           ;OverLoad_B1.c: 333: Load->Enable=command;
 19773  0806  0020               	movlb 0	; select bank0
 19774  0807  086B               	movf	(_Load),w
 19775  0808  0086               	movwf	fsr1l
 19776  0809  3002               	movlw 2	; select bank4/5
 19777  080A  0087               	movwf fsr1h	
 19778                           	
 19779  080B  0822               	movf	(setLoad_Enable@command),w
 19780  080C  1001               	bcf	indf1,0
 19781  080D  1D03               	skipz
 19782  080E  1401               	bsf	indf1,0
 19783                           	line	334
 19784                           	
 19785  080F                     l21006:	
 19786                           ;OverLoad_B1.c: 334: Load->GO=0;
 19787  080F  086B               	movf	(_Load),w
 19788  0810  0086               	movwf	fsr1l
 19789  0811  3002               	movlw 2	; select bank4/5
 19790  0812  0087               	movwf fsr1h	
 19791                           	
 19792  0813  1081               	bcf	indf1,1
 19793                           	line	335
 19794                           	
 19795  0814                     l9622:	
 19796  0814  0008               	return
 19797                           	opt stack 0
 19798                           GLOBAL	__end_of_setLoad_Enable
 19799  0815                     	__end_of_setLoad_Enable:
 19800 ;; =============== function _setLoad_Enable ends ============
 19801                           
 19802                           	signat	_setLoad_Enable,8312
 19803                           	global	_setTemp_Enable
 19804                           psect	text4951,local,class=CODE,delta=2
 19805                           global __ptext4951
 19806  2FD0                     __ptext4951:
 19807                           
 19808 ;; *************** function _setTemp_Enable *****************
 19809 ;; Defined at:
 19810 ;;		line 30 in file "G:\Program\PIC\Source_File\OverTemperature_B1.c"
 19811 ;; Parameters:    Size  Location     Type
 19812 ;;  temp            1    wreg     unsigned char 
 19813 ;;  command         1    1[BANK0 ] unsigned char 
 19814 ;; Auto vars:     Size  Location     Type
 19815 ;;  temp            1    2[BANK0 ] unsigned char 
 19816 ;; Return value:  Size  Location     Type
 19817 ;;		None               void
 19818 ;; Registers used:
 19819 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19820 ;; Tracked objects:
 19821 ;;		On entry : 0/0
 19822 ;;		On exit  : 0/0
 19823 ;;		Unchanged: 0/0
 19824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 19825 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 19826 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 19827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 19828 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 19829 ;;Total ram usage:        2 bytes
 19830 ;; Hardware stack levels used:    1
 19831 ;; Hardware stack levels required when called:    5
 19832 ;; This function calls:
 19833 ;;		_TempPointSelect
 19834 ;; This function is called by:
 19835 ;;		_MainT
 19836 ;; This function uses a non-reentrant model
 19837 ;;
 19838                           psect	text4951
 19839                           	file	"G:\Program\PIC\Source_File\OverTemperature_B1.c"
 19840                           	line	30
 19841                           	global	__size_of_setTemp_Enable
 19842  0010                     	__size_of_setTemp_Enable	equ	__end_of_setTemp_Enable-_setTemp_Enable
 19843                           	
 19844  2FD0                     _setTemp_Enable:	
 19845                           	opt	stack 9
 19846                           ; Regs used in _setTemp_Enable: [wreg+fsr1l-status,0+pclath+cstack]
 19847                           ;setTemp_Enable@temp stored from wreg
 19848  2FD0  0020               	movlb 0	; select bank0
 19849  2FD1  00A2               	movwf	(setTemp_Enable@temp)
 19850                           	line	31
 19851                           	
 19852  2FD2                     l20998:	
 19853                           ;OverTemperature_B1.c: 31: TempPointSelect(temp);
 19854  2FD2  0822               	movf	(setTemp_Enable@temp),w
 19855  2FD3  31AD  257E  31AF   	fcall	_TempPointSelect
 19856                           	line	32
 19857                           	
 19858  2FD6                     l21000:	
 19859                           ;OverTemperature_B1.c: 32: Temp->Enable=command;
 19860  2FD6  0020               	movlb 0	; select bank0
 19861  2FD7  086E               	movf	(_Temp),w
 19862  2FD8  0086               	movwf	fsr1l
 19863  2FD9  3001               	movlw 1	; select bank2/3
 19864  2FDA  0087               	movwf fsr1h	
 19865                           	
 19866  2FDB  0821               	movf	(setTemp_Enable@command),w
 19867  2FDC  1001               	bcf	indf1,0
 19868  2FDD  1D03               	skipz
 19869  2FDE  1401               	bsf	indf1,0
 19870                           	line	33
 19871                           	
 19872  2FDF                     l10777:	
 19873  2FDF  0008               	return
 19874                           	opt stack 0
 19875                           GLOBAL	__end_of_setTemp_Enable
 19876  2FE0                     	__end_of_setTemp_Enable:
 19877 ;; =============== function _setTemp_Enable ends ============
 19878                           
 19879                           	signat	_setTemp_Enable,8312
 19880                           	global	_getPowerFault_AD
 19881                           psect	text4952,local,class=CODE,delta=2
 19882                           global __ptext4952
 19883  1892                     __ptext4952:
 19884                           
 19885 ;; *************** function _getPowerFault_AD *****************
 19886 ;; Defined at:
 19887 ;;		line 53 in file "G:\Program\PIC\Source_File\PowerFault_B1.c"
 19888 ;; Parameters:    Size  Location     Type
 19889 ;;  pf              1    wreg     unsigned char 
 19890 ;;  channel         1    7[BANK0 ] unsigned char 
 19891 ;; Auto vars:     Size  Location     Type
 19892 ;;  pf              1   12[BANK0 ] unsigned char 
 19893 ;; Return value:  Size  Location     Type
 19894 ;;		None               void
 19895 ;; Registers used:
 19896 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
 19897 ;; Tracked objects:
 19898 ;;		On entry : 0/0
 19899 ;;		On exit  : 0/0
 19900 ;;		Unchanged: 0/0
 19901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 19902 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 19903 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 19904 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 19905 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0
 19906 ;;Total ram usage:        6 bytes
 19907 ;; Hardware stack levels used:    1
 19908 ;; Hardware stack levels required when called:    5
 19909 ;; This function calls:
 19910 ;;		_PowerFaultPointSelect
 19911 ;;		_getAD
 19912 ;; This function is called by:
 19913 ;;		_main
 19914 ;; This function uses a non-reentrant model
 19915 ;;
 19916                           psect	text4952
 19917                           	file	"G:\Program\PIC\Source_File\PowerFault_B1.c"
 19918                           	line	53
 19919                           	global	__size_of_getPowerFault_AD
 19920  004C                     	__size_of_getPowerFault_AD	equ	__end_of_getPowerFault_AD-_getPowerFault_AD
 19921                           	
 19922  1892                     _getPowerFault_AD:	
 19923                           	opt	stack 10
 19924                           ; Regs used in _getPowerFault_AD: [wreg+fsr1l-status,0+btemp+1+pclath+cstack]
 19925                           ;getPowerFault_AD@pf stored from wreg
 19926  1892  0020               	movlb 0	; select bank0
 19927  1893  00AC               	movwf	(getPowerFault_AD@pf)
 19928                           	line	54
 19929                           	
 19930  1894                     l19206:	
 19931                           ;PowerFault_B1.c: 54: PowerFaultPointSelect(pf);
 19932  1894  082C               	movf	(getPowerFault_AD@pf),w
 19933  1895  31AD  2584  3198   	fcall	_PowerFaultPointSelect
 19934                           	line	55
 19935                           	
 19936  1898                     l19208:	
 19937                           ;PowerFault_B1.c: 55: if(PF->ADtoGO)
 19938  1898  0020               	movlb 0	; select bank0
 19939  1899  086C               	movf	(_PF),w
 19940  189A  0086               	movwf	fsr1l
 19941  189B  0187               	clrf fsr1h	
 19942                           	
 19943  189C  1D81               	btfss	indf1,3
 19944  189D  289F               	goto	u7101
 19945  189E  28A0               	goto	u7100
 19946  189F                     u7101:
 19947  189F  28DD               	goto	l11962
 19948  18A0                     u7100:
 19949                           	line	57
 19950                           	
 19951  18A0                     l19210:	
 19952                           ;PowerFault_B1.c: 56: {
 19953                           ;PowerFault_B1.c: 57: PF->ADRES=getAD(channel,0xf0);
 19954  18A0  30F0               	movlw	(0F0h)
 19955  18A1  00A8               	movwf	(??_getPowerFault_AD+0)+0
 19956  18A2  0828               	movf	(??_getPowerFault_AD+0)+0,w
 19957  18A3  00A0               	movwf	(?_getAD)
 19958  18A4  0827               	movf	(getPowerFault_AD@channel),w
 19959  18A5  31A1  21EA  3198   	fcall	_getAD
 19960  18A8  0020               	movlb 0	; select bank0
 19961  18A9  086C               	movf	(_PF),w
 19962  18AA  3E03               	addlw	03h
 19963  18AB  0086               	movwf	fsr1l
 19964  18AC  0187               	clrf fsr1h	
 19965                           	
 19966  18AD  0820               	movf	(0+(?_getAD)),w
 19967  18AE  3FC0               	movwi	[0]fsr1
 19968  18AF  0821               	movf	(1+(?_getAD)),w
 19969  18B0  3FC1               	movwi	[1]fsr1
 19970                           	line	58
 19971                           	
 19972  18B1                     l19212:	
 19973                           ;PowerFault_B1.c: 58: if(PF->AD < PF->ADRES)
 19974  18B1  086C               	movf	(_PF),w
 19975  18B2  3E03               	addlw	03h
 19976  18B3  0086               	movwf	fsr1l
 19977  18B4  0187               	clrf fsr1h	
 19978                           	
 19979  18B5  3F40               	moviw	[0]fsr1
 19980  18B6  00A8               	movwf	(??_getPowerFault_AD+0)+0
 19981  18B7  3F41               	moviw	[1]fsr1
 19982  18B8  00A9               	movwf	(??_getPowerFault_AD+0)+0+1
 19983  18B9  086C               	movf	(_PF),w
 19984  18BA  3E01               	addlw	01h
 19985  18BB  0086               	movwf	fsr1l
 19986  18BC  0187               	clrf fsr1h	
 19987                           	
 19988  18BD  3F40               	moviw	[0]fsr1
 19989  18BE  00AA               	movwf	(??_getPowerFault_AD+2)+0
 19990  18BF  3F41               	moviw	[1]fsr1
 19991  18C0  00AB               	movwf	(??_getPowerFault_AD+2)+0+1
 19992  18C1  0829               	movf	1+(??_getPowerFault_AD+0)+0,w
 19993  18C2  022B               	subwf	1+(??_getPowerFault_AD+2)+0,w
 19994  18C3  1D03               	skipz
 19995  18C4  28C7               	goto	u7115
 19996  18C5  0828               	movf	0+(??_getPowerFault_AD+0)+0,w
 19997  18C6  022A               	subwf	0+(??_getPowerFault_AD+2)+0,w
 19998  18C7                     u7115:
 19999  18C7  1803               	skipnc
 20000  18C8  28CA               	goto	u7111
 20001  18C9  28CB               	goto	u7110
 20002  18CA                     u7111:
 20003  18CA  28DD               	goto	l11962
 20004  18CB                     u7110:
 20005                           	line	60
 20006                           	
 20007  18CB                     l19214:	
 20008                           ;PowerFault_B1.c: 59: {
 20009                           ;PowerFault_B1.c: 60: PF->AD=PF->ADRES;
 20010  18CB  086C               	movf	(_PF),w
 20011  18CC  3E03               	addlw	03h
 20012  18CD  0086               	movwf	fsr1l
 20013  18CE  0187               	clrf fsr1h	
 20014                           	
 20015  18CF  3F40               	moviw	[0]fsr1
 20016  18D0  00A8               	movwf	(??_getPowerFault_AD+0)+0
 20017  18D1  3F41               	moviw	[1]fsr1
 20018  18D2  00A9               	movwf	(??_getPowerFault_AD+0)+0+1
 20019  18D3  086C               	movf	(_PF),w
 20020  18D4  3E01               	addlw	01h
 20021  18D5  0086               	movwf	fsr1l
 20022  18D6  0187               	clrf fsr1h	
 20023                           	
 20024  18D7  0828               	movf	0+(??_getPowerFault_AD+0)+0,w
 20025  18D8  3FC0               	movwi	[0]fsr1
 20026  18D9  0829               	movf	1+(??_getPowerFault_AD+0)+0,w
 20027  18DA  3FC1               	movwi	[1]fsr1
 20028  18DB  28DD               	goto	l11962
 20029                           	line	61
 20030                           	
 20031  18DC                     l11961:	
 20032  18DC  28DD               	goto	l11962
 20033                           	line	62
 20034                           	
 20035  18DD                     l11960:	
 20036                           	line	63
 20037                           	
 20038  18DD                     l11962:	
 20039  18DD  0008               	return
 20040                           	opt stack 0
 20041                           GLOBAL	__end_of_getPowerFault_AD
 20042  18DE                     	__end_of_getPowerFault_AD:
 20043 ;; =============== function _getPowerFault_AD ends ============
 20044                           
 20045                           	signat	_getPowerFault_AD,8312
 20046                           	global	_getTemp_AD
 20047                           psect	text4953,local,class=CODE,delta=2
 20048                           global __ptext4953
 20049  101E                     __ptext4953:
 20050                           
 20051 ;; *************** function _getTemp_AD *****************
 20052 ;; Defined at:
 20053 ;;		line 46 in file "G:\Program\PIC\Source_File\OverTemperature_B1.c"
 20054 ;; Parameters:    Size  Location     Type
 20055 ;;  temp            1    wreg     unsigned char 
 20056 ;;  channel         1    7[BANK0 ] unsigned char 
 20057 ;; Auto vars:     Size  Location     Type
 20058 ;;  temp            1   12[BANK0 ] unsigned char 
 20059 ;; Return value:  Size  Location     Type
 20060 ;;		None               void
 20061 ;; Registers used:
 20062 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
 20063 ;; Tracked objects:
 20064 ;;		On entry : 0/0
 20065 ;;		On exit  : 0/0
 20066 ;;		Unchanged: 0/0
 20067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 20068 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 20069 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 20070 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 20071 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0
 20072 ;;Total ram usage:        6 bytes
 20073 ;; Hardware stack levels used:    1
 20074 ;; Hardware stack levels required when called:    5
 20075 ;; This function calls:
 20076 ;;		_TempPointSelect
 20077 ;;		_getAD
 20078 ;; This function is called by:
 20079 ;;		_main
 20080 ;; This function uses a non-reentrant model
 20081 ;;
 20082                           psect	text4953
 20083                           	file	"G:\Program\PIC\Source_File\OverTemperature_B1.c"
 20084                           	line	46
 20085                           	global	__size_of_getTemp_AD
 20086  0082                     	__size_of_getTemp_AD	equ	__end_of_getTemp_AD-_getTemp_AD
 20087                           	
 20088  101E                     _getTemp_AD:	
 20089                           	opt	stack 10
 20090                           ; Regs used in _getTemp_AD: [wreg+fsr1l-status,0+btemp+1+pclath+cstack]
 20091                           ;getTemp_AD@temp stored from wreg
 20092  101E  0020               	movlb 0	; select bank0
 20093  101F  00AC               	movwf	(getTemp_AD@temp)
 20094                           	line	47
 20095                           	
 20096  1020                     l19192:	
 20097                           ;OverTemperature_B1.c: 47: TempPointSelect(temp);
 20098  1020  082C               	movf	(getTemp_AD@temp),w
 20099  1021  31AD  257E  3190   	fcall	_TempPointSelect
 20100                           	line	48
 20101                           	
 20102  1024                     l19194:	
 20103                           ;OverTemperature_B1.c: 48: if(Temp->ADtoGO)
 20104  1024  0020               	movlb 0	; select bank0
 20105  1025  086E               	movf	(_Temp),w
 20106  1026  0086               	movwf	fsr1l
 20107  1027  3001               	movlw 1	; select bank2/3
 20108  1028  0087               	movwf fsr1h	
 20109                           	
 20110  1029  1D01               	btfss	indf1,2
 20111  102A  282C               	goto	u7071
 20112  102B  282D               	goto	u7070
 20113  102C                     u7071:
 20114  102C  289F               	goto	l10790
 20115  102D                     u7070:
 20116                           	line	50
 20117                           	
 20118  102D                     l19196:	
 20119                           ;OverTemperature_B1.c: 49: {
 20120                           ;OverTemperature_B1.c: 50: Temp->ADRES=getAD(channel,0xf0);
 20121  102D  30F0               	movlw	(0F0h)
 20122  102E  00A8               	movwf	(??_getTemp_AD+0)+0
 20123  102F  0828               	movf	(??_getTemp_AD+0)+0,w
 20124  1030  00A0               	movwf	(?_getAD)
 20125  1031  0827               	movf	(getTemp_AD@channel),w
 20126  1032  31A1  21EA  3190   	fcall	_getAD
 20127  1035  0020               	movlb 0	; select bank0
 20128  1036  086E               	movf	(_Temp),w
 20129  1037  3E0A               	addlw	0Ah
 20130  1038  0086               	movwf	fsr1l
 20131  1039  3001               	movlw 1	; select bank2/3
 20132  103A  0087               	movwf fsr1h	
 20133                           	
 20134  103B  0820               	movf	(0+(?_getAD)),w
 20135  103C  3FC0               	movwi	[0]fsr1
 20136  103D  0821               	movf	(1+(?_getAD)),w
 20137  103E  3FC1               	movwi	[1]fsr1
 20138                           	line	51
 20139                           	
 20140  103F                     l19198:	
 20141                           ;OverTemperature_B1.c: 51: if(Temp->ADH[0] < Temp->ADRES)
 20142  103F  086E               	movf	(_Temp),w
 20143  1040  3E0A               	addlw	0Ah
 20144  1041  0086               	movwf	fsr1l
 20145  1042  3001               	movlw 1	; select bank2/3
 20146  1043  0087               	movwf fsr1h	
 20147                           	
 20148  1044  3F40               	moviw	[0]fsr1
 20149  1045  00A8               	movwf	(??_getTemp_AD+0)+0
 20150  1046  3F41               	moviw	[1]fsr1
 20151  1047  00A9               	movwf	(??_getTemp_AD+0)+0+1
 20152  1048  086E               	movf	(_Temp),w
 20153  1049  3E06               	addlw	06h
 20154  104A  0086               	movwf	fsr1l
 20155  104B  3001               	movlw 1	; select bank2/3
 20156  104C  0087               	movwf fsr1h	
 20157                           	
 20158  104D  3F40               	moviw	[0]fsr1
 20159  104E  00AA               	movwf	(??_getTemp_AD+2)+0
 20160  104F  3F41               	moviw	[1]fsr1
 20161  1050  00AB               	movwf	(??_getTemp_AD+2)+0+1
 20162  1051  0829               	movf	1+(??_getTemp_AD+0)+0,w
 20163  1052  022B               	subwf	1+(??_getTemp_AD+2)+0,w
 20164  1053  1D03               	skipz
 20165  1054  2857               	goto	u7085
 20166  1055  0828               	movf	0+(??_getTemp_AD+0)+0,w
 20167  1056  022A               	subwf	0+(??_getTemp_AD+2)+0,w
 20168  1057                     u7085:
 20169  1057  1803               	skipnc
 20170  1058  285A               	goto	u7081
 20171  1059  285B               	goto	u7080
 20172  105A                     u7081:
 20173  105A  286E               	goto	l19202
 20174  105B                     u7080:
 20175                           	line	53
 20176                           	
 20177  105B                     l19200:	
 20178                           ;OverTemperature_B1.c: 52: {
 20179                           ;OverTemperature_B1.c: 53: Temp->ADH[0]=Temp->ADRES;
 20180  105B  086E               	movf	(_Temp),w
 20181  105C  3E0A               	addlw	0Ah
 20182  105D  0086               	movwf	fsr1l
 20183  105E  3001               	movlw 1	; select bank2/3
 20184  105F  0087               	movwf fsr1h	
 20185                           	
 20186  1060  3F40               	moviw	[0]fsr1
 20187  1061  00A8               	movwf	(??_getTemp_AD+0)+0
 20188  1062  3F41               	moviw	[1]fsr1
 20189  1063  00A9               	movwf	(??_getTemp_AD+0)+0+1
 20190  1064  086E               	movf	(_Temp),w
 20191  1065  3E06               	addlw	06h
 20192  1066  0086               	movwf	fsr1l
 20193  1067  3001               	movlw 1	; select bank2/3
 20194  1068  0087               	movwf fsr1h	
 20195                           	
 20196  1069  0828               	movf	0+(??_getTemp_AD+0)+0,w
 20197  106A  3FC0               	movwi	[0]fsr1
 20198  106B  0829               	movf	1+(??_getTemp_AD+0)+0,w
 20199  106C  3FC1               	movwi	[1]fsr1
 20200                           	line	54
 20201                           ;OverTemperature_B1.c: 54: }
 20202  106D  289F               	goto	l10790
 20203                           	line	55
 20204                           	
 20205  106E                     l10787:	
 20206                           	
 20207  106E                     l19202:	
 20208                           ;OverTemperature_B1.c: 55: else if(Temp->ADH[1] < Temp->ADRES)
 20209  106E  086E               	movf	(_Temp),w
 20210  106F  3E0A               	addlw	0Ah
 20211  1070  0086               	movwf	fsr1l
 20212  1071  3001               	movlw 1	; select bank2/3
 20213  1072  0087               	movwf fsr1h	
 20214                           	
 20215  1073  3F40               	moviw	[0]fsr1
 20216  1074  00A8               	movwf	(??_getTemp_AD+0)+0
 20217  1075  3F41               	moviw	[1]fsr1
 20218  1076  00A9               	movwf	(??_getTemp_AD+0)+0+1
 20219  1077  086E               	movf	(_Temp),w
 20220  1078  3E08               	addlw	08h
 20221  1079  0086               	movwf	fsr1l
 20222  107A  3001               	movlw 1	; select bank2/3
 20223  107B  0087               	movwf fsr1h	
 20224                           	
 20225  107C  3F40               	moviw	[0]fsr1
 20226  107D  00AA               	movwf	(??_getTemp_AD+2)+0
 20227  107E  3F41               	moviw	[1]fsr1
 20228  107F  00AB               	movwf	(??_getTemp_AD+2)+0+1
 20229  1080  0829               	movf	1+(??_getTemp_AD+0)+0,w
 20230  1081  022B               	subwf	1+(??_getTemp_AD+2)+0,w
 20231  1082  1D03               	skipz
 20232  1083  2886               	goto	u7095
 20233  1084  0828               	movf	0+(??_getTemp_AD+0)+0,w
 20234  1085  022A               	subwf	0+(??_getTemp_AD+2)+0,w
 20235  1086                     u7095:
 20236  1086  1803               	skipnc
 20237  1087  2889               	goto	u7091
 20238  1088  288A               	goto	u7090
 20239  1089                     u7091:
 20240  1089  289F               	goto	l10790
 20241  108A                     u7090:
 20242                           	line	57
 20243                           	
 20244  108A                     l19204:	
 20245                           ;OverTemperature_B1.c: 56: {
 20246                           ;OverTemperature_B1.c: 57: Temp->ADH[1]=Temp->ADRES;
 20247  108A  086E               	movf	(_Temp),w
 20248  108B  3E0A               	addlw	0Ah
 20249  108C  0086               	movwf	fsr1l
 20250  108D  3001               	movlw 1	; select bank2/3
 20251  108E  0087               	movwf fsr1h	
 20252                           	
 20253  108F  3F40               	moviw	[0]fsr1
 20254  1090  00A8               	movwf	(??_getTemp_AD+0)+0
 20255  1091  3F41               	moviw	[1]fsr1
 20256  1092  00A9               	movwf	(??_getTemp_AD+0)+0+1
 20257  1093  086E               	movf	(_Temp),w
 20258  1094  3E08               	addlw	08h
 20259  1095  0086               	movwf	fsr1l
 20260  1096  3001               	movlw 1	; select bank2/3
 20261  1097  0087               	movwf fsr1h	
 20262                           	
 20263  1098  0828               	movf	0+(??_getTemp_AD+0)+0,w
 20264  1099  3FC0               	movwi	[0]fsr1
 20265  109A  0829               	movf	1+(??_getTemp_AD+0)+0,w
 20266  109B  3FC1               	movwi	[1]fsr1
 20267  109C  289F               	goto	l10790
 20268                           	line	58
 20269                           	
 20270  109D                     l10789:	
 20271  109D  289F               	goto	l10790
 20272                           	line	59
 20273                           	
 20274  109E                     l10788:	
 20275  109E  289F               	goto	l10790
 20276                           	
 20277  109F                     l10786:	
 20278                           	line	60
 20279                           	
 20280  109F                     l10790:	
 20281  109F  0008               	return
 20282                           	opt stack 0
 20283                           GLOBAL	__end_of_getTemp_AD
 20284  10A0                     	__end_of_getTemp_AD:
 20285 ;; =============== function _getTemp_AD ends ============
 20286                           
 20287                           	signat	_getTemp_AD,8312
 20288                           	global	_getLoad_AD
 20289                           psect	text4954,local,class=CODE,delta=2
 20290                           global __ptext4954
 20291  089D                     __ptext4954:
 20292                           
 20293 ;; *************** function _getLoad_AD *****************
 20294 ;; Defined at:
 20295 ;;		line 39 in file "G:\Program\PIC\Source_File\OverLoad_B1.c"
 20296 ;; Parameters:    Size  Location     Type
 20297 ;;  load            1    wreg     unsigned char 
 20298 ;;  channel         1    7[BANK0 ] unsigned char 
 20299 ;; Auto vars:     Size  Location     Type
 20300 ;;  load            1   13[BANK0 ] unsigned char 
 20301 ;;  i               1   15[BANK0 ] unsigned char 
 20302 ;;  j               1   14[BANK0 ] unsigned char 
 20303 ;; Return value:  Size  Location     Type
 20304 ;;		None               void
 20305 ;; Registers used:
 20306 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
 20307 ;; Tracked objects:
 20308 ;;		On entry : 0/0
 20309 ;;		On exit  : 0/0
 20310 ;;		Unchanged: 0/0
 20311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 20312 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 20313 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 20314 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
       0       0
 20315 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
       0       0
 20316 ;;Total ram usage:        9 bytes
 20317 ;; Hardware stack levels used:    1
 20318 ;; Hardware stack levels required when called:    5
 20319 ;; This function calls:
 20320 ;;		_LoadPointSelect
 20321 ;;		_getAD
 20322 ;; This function is called by:
 20323 ;;		_main
 20324 ;; This function uses a non-reentrant model
 20325 ;;
 20326                           psect	text4954
 20327                           	file	"G:\Program\PIC\Source_File\OverLoad_B1.c"
 20328                           	line	39
 20329                           	global	__size_of_getLoad_AD
 20330  00C4                     	__size_of_getLoad_AD	equ	__end_of_getLoad_AD-_getLoad_AD
 20331                           	
 20332  089D                     _getLoad_AD:	
 20333                           	opt	stack 10
 20334                           ; Regs used in _getLoad_AD: [wreg+fsr1l-status,0+btemp+1+pclath+cstack]
 20335                           ;getLoad_AD@load stored from wreg
 20336  089D  0020               	movlb 0	; select bank0
 20337  089E  00AD               	movwf	(getLoad_AD@load)
 20338                           	line	40
 20339                           	
 20340  089F                     l19152:	
 20341                           ;OverLoad_B1.c: 40: char i=0,j=0;
 20342  089F  01AF               	clrf	(getLoad_AD@i)
 20343  08A0  01AE               	clrf	(getLoad_AD@j)
 20344                           	line	41
 20345                           	
 20346  08A1                     l19154:	
 20347                           ;OverLoad_B1.c: 41: LoadPointSelect(load);
 20348  08A1  082D               	movf	(getLoad_AD@load),w
 20349  08A2  31AE  2692  3188   	fcall	_LoadPointSelect
 20350                           	line	42
 20351                           	
 20352  08A5                     l19156:	
 20353                           ;OverLoad_B1.c: 42: if(Load->ADtoGO)
 20354  08A5  0020               	movlb 0	; select bank0
 20355  08A6  086B               	movf	(_Load),w
 20356  08A7  0086               	movwf	fsr1l
 20357  08A8  3002               	movlw 2	; select bank4/5
 20358  08A9  0087               	movwf fsr1h	
 20359                           	
 20360  08AA  1E01               	btfss	indf1,4
 20361  08AB  28AD               	goto	u6991
 20362  08AC  28AE               	goto	u6990
 20363  08AD                     u6991:
 20364  08AD  2960               	goto	l9570
 20365  08AE                     u6990:
 20366                           	line	44
 20367                           	
 20368  08AE                     l19158:	
 20369                           ;OverLoad_B1.c: 43: {
 20370                           ;OverLoad_B1.c: 44: Load->ADRES=getAD(channel,0xc0);
 20371  08AE  30C0               	movlw	(0C0h)
 20372  08AF  00A8               	movwf	(??_getLoad_AD+0)+0
 20373  08B0  0828               	movf	(??_getLoad_AD+0)+0,w
 20374  08B1  00A0               	movwf	(?_getAD)
 20375  08B2  0827               	movf	(getLoad_AD@channel),w
 20376  08B3  31A1  21EA  3188   	fcall	_getAD
 20377  08B6  0020               	movlb 0	; select bank0
 20378  08B7  086B               	movf	(_Load),w
 20379  08B8  3E32               	addlw	032h
 20380  08B9  0086               	movwf	fsr1l
 20381  08BA  3002               	movlw 2	; select bank4/5
 20382  08BB  0087               	movwf fsr1h	
 20383                           	
 20384  08BC  0820               	movf	(0+(?_getAD)),w
 20385  08BD  3FC0               	movwi	[0]fsr1
 20386  08BE  0821               	movf	(1+(?_getAD)),w
 20387  08BF  3FC1               	movwi	[1]fsr1
 20388                           	line	45
 20389                           	
 20390  08C0                     l19160:	
 20391                           ;OverLoad_B1.c: 45: for(i=0 ; i<5 ;i++)
 20392  08C0  01AF               	clrf	(getLoad_AD@i)
 20393                           	
 20394  08C1                     l19162:	
 20395  08C1  3005               	movlw	(05h)
 20396  08C2  022F               	subwf	(getLoad_AD@i),w
 20397  08C3  1C03               	skipc
 20398  08C4  28C6               	goto	u7001
 20399  08C5  28C7               	goto	u7000
 20400  08C6                     u7001:
 20401  08C6  28C9               	goto	l19166
 20402  08C7                     u7000:
 20403  08C7  290E               	goto	l19176
 20404                           	
 20405  08C8                     l19164:	
 20406  08C8  290E               	goto	l19176
 20407                           	line	46
 20408                           	
 20409  08C9                     l9563:	
 20410                           	line	47
 20411                           	
 20412  08C9                     l19166:	
 20413                           ;OverLoad_B1.c: 46: {
 20414                           ;OverLoad_B1.c: 47: if(Load->AH[i] < Load->ADRES)
 20415  08C9  086B               	movf	(_Load),w
 20416  08CA  3E32               	addlw	032h
 20417  08CB  0086               	movwf	fsr1l
 20418  08CC  3002               	movlw 2	; select bank4/5
 20419  08CD  0087               	movwf fsr1h	
 20420                           	
 20421  08CE  3F40               	moviw	[0]fsr1
 20422  08CF  00A8               	movwf	(??_getLoad_AD+0)+0
 20423  08D0  3F41               	moviw	[1]fsr1
 20424  08D1  00A9               	movwf	(??_getLoad_AD+0)+0+1
 20425  08D2  082F               	movf	(getLoad_AD@i),w
 20426  08D3  0709               	addwf	wreg,w
 20427  08D4  3E08               	addlw	08h
 20428  08D5  076B               	addwf	(_Load),w
 20429  08D6  00AA               	movwf	(??_getLoad_AD+2)+0
 20430  08D7  082A               	movf	0+(??_getLoad_AD+2)+0,w
 20431  08D8  0086               	movwf	fsr1l
 20432  08D9  3002               	movlw 2	; select bank4/5
 20433  08DA  0087               	movwf fsr1h	
 20434                           	
 20435  08DB  3F40               	moviw	[0]fsr1
 20436  08DC  00AB               	movwf	(??_getLoad_AD+3)+0
 20437  08DD  3F41               	moviw	[1]fsr1
 20438  08DE  00AC               	movwf	(??_getLoad_AD+3)+0+1
 20439  08DF  0829               	movf	1+(??_getLoad_AD+0)+0,w
 20440  08E0  022C               	subwf	1+(??_getLoad_AD+3)+0,w
 20441  08E1  1D03               	skipz
 20442  08E2  28E5               	goto	u7015
 20443  08E3  0828               	movf	0+(??_getLoad_AD+0)+0,w
 20444  08E4  022B               	subwf	0+(??_getLoad_AD+3)+0,w
 20445  08E5                     u7015:
 20446  08E5  1803               	skipnc
 20447  08E6  28E8               	goto	u7011
 20448  08E7  28E9               	goto	u7010
 20449  08E8                     u7011:
 20450  08E8  2903               	goto	l19172
 20451  08E9                     u7010:
 20452                           	line	49
 20453                           	
 20454  08E9                     l19168:	
 20455                           ;OverLoad_B1.c: 48: {
 20456                           ;OverLoad_B1.c: 49: Load->AH[i]=Load->ADRES;
 20457  08E9  086B               	movf	(_Load),w
 20458  08EA  3E32               	addlw	032h
 20459  08EB  0086               	movwf	fsr1l
 20460  08EC  3002               	movlw 2	; select bank4/5
 20461  08ED  0087               	movwf fsr1h	
 20462                           	
 20463  08EE  3F40               	moviw	[0]fsr1
 20464  08EF  00A8               	movwf	(??_getLoad_AD+0)+0
 20465  08F0  3F41               	moviw	[1]fsr1
 20466  08F1  00A9               	movwf	(??_getLoad_AD+0)+0+1
 20467  08F2  082F               	movf	(getLoad_AD@i),w
 20468  08F3  0709               	addwf	wreg,w
 20469  08F4  3E08               	addlw	08h
 20470  08F5  076B               	addwf	(_Load),w
 20471  08F6  00AA               	movwf	(??_getLoad_AD+2)+0
 20472  08F7  082A               	movf	0+(??_getLoad_AD+2)+0,w
 20473  08F8  0086               	movwf	fsr1l
 20474  08F9  3002               	movlw 2	; select bank4/5
 20475  08FA  0087               	movwf fsr1h	
 20476                           	
 20477  08FB  0828               	movf	0+(??_getLoad_AD+0)+0,w
 20478  08FC  3FC0               	movwi	[0]fsr1
 20479  08FD  0829               	movf	1+(??_getLoad_AD+0)+0,w
 20480  08FE  3FC1               	movwi	[1]fsr1
 20481                           	line	50
 20482                           	
 20483  08FF                     l19170:	
 20484                           ;OverLoad_B1.c: 50: j=1;
 20485  08FF  01AE               	clrf	(getLoad_AD@j)
 20486  0900  1403               	bsf	status,0
 20487  0901  0DAE               	rlf	(getLoad_AD@j),f
 20488                           	line	51
 20489                           ;OverLoad_B1.c: 51: break;
 20490  0902  290E               	goto	l19176
 20491                           	line	52
 20492                           	
 20493  0903                     l9565:	
 20494                           	line	45
 20495                           	
 20496  0903                     l19172:	
 20497  0903  3001               	movlw	(01h)
 20498  0904  00A8               	movwf	(??_getLoad_AD+0)+0
 20499  0905  0828               	movf	(??_getLoad_AD+0)+0,w
 20500  0906  07AF               	addwf	(getLoad_AD@i),f
 20501                           	
 20502  0907                     l19174:	
 20503  0907  3005               	movlw	(05h)
 20504  0908  022F               	subwf	(getLoad_AD@i),w
 20505  0909  1C03               	skipc
 20506  090A  290C               	goto	u7021
 20507  090B  290D               	goto	u7020
 20508  090C                     u7021:
 20509  090C  28C9               	goto	l19166
 20510  090D                     u7020:
 20511  090D  290E               	goto	l19176
 20512                           	
 20513  090E                     l9564:	
 20514                           	line	54
 20515                           	
 20516  090E                     l19176:	
 20517                           ;OverLoad_B1.c: 52: }
 20518                           ;OverLoad_B1.c: 53: }
 20519                           ;OverLoad_B1.c: 54: if(j == 0)
 20520  090E  08AE               	movf	(getLoad_AD@j),f
 20521  090F  1D03               	skipz
 20522  0910  2912               	goto	u7031
 20523  0911  2913               	goto	u7030
 20524  0912                     u7031:
 20525  0912  2960               	goto	l9570
 20526  0913                     u7030:
 20527                           	line	56
 20528                           	
 20529  0913                     l19178:	
 20530                           ;OverLoad_B1.c: 55: {
 20531                           ;OverLoad_B1.c: 56: for(i=0 ; i<5 ;i++)
 20532  0913  01AF               	clrf	(getLoad_AD@i)
 20533                           	
 20534  0914                     l19180:	
 20535  0914  3005               	movlw	(05h)
 20536  0915  022F               	subwf	(getLoad_AD@i),w
 20537  0916  1C03               	skipc
 20538  0917  2919               	goto	u7041
 20539  0918  291A               	goto	u7040
 20540  0919                     u7041:
 20541  0919  291C               	goto	l19184
 20542  091A                     u7040:
 20543  091A  2960               	goto	l9570
 20544                           	
 20545  091B                     l19182:	
 20546  091B  2960               	goto	l9570
 20547                           	line	57
 20548                           	
 20549  091C                     l9567:	
 20550                           	line	58
 20551                           	
 20552  091C                     l19184:	
 20553                           ;OverLoad_B1.c: 57: {
 20554                           ;OverLoad_B1.c: 58: if(Load->AL[i] > Load->ADRES)
 20555  091C  082F               	movf	(getLoad_AD@i),w
 20556  091D  0709               	addwf	wreg,w
 20557  091E  3E1A               	addlw	01Ah
 20558  091F  076B               	addwf	(_Load),w
 20559  0920  00A8               	movwf	(??_getLoad_AD+0)+0
 20560  0921  0828               	movf	0+(??_getLoad_AD+0)+0,w
 20561  0922  0086               	movwf	fsr1l
 20562  0923  3002               	movlw 2	; select bank4/5
 20563  0924  0087               	movwf fsr1h	
 20564                           	
 20565  0925  3F40               	moviw	[0]fsr1
 20566  0926  00A9               	movwf	(??_getLoad_AD+1)+0
 20567  0927  3F41               	moviw	[1]fsr1
 20568  0928  00AA               	movwf	(??_getLoad_AD+1)+0+1
 20569  0929  086B               	movf	(_Load),w
 20570  092A  3E32               	addlw	032h
 20571  092B  0086               	movwf	fsr1l
 20572  092C  3002               	movlw 2	; select bank4/5
 20573  092D  0087               	movwf fsr1h	
 20574                           	
 20575  092E  3F40               	moviw	[0]fsr1
 20576  092F  00AB               	movwf	(??_getLoad_AD+3)+0
 20577  0930  3F41               	moviw	[1]fsr1
 20578  0931  00AC               	movwf	(??_getLoad_AD+3)+0+1
 20579  0932  082A               	movf	1+(??_getLoad_AD+1)+0,w
 20580  0933  022C               	subwf	1+(??_getLoad_AD+3)+0,w
 20581  0934  1D03               	skipz
 20582  0935  2938               	goto	u7055
 20583  0936  0829               	movf	0+(??_getLoad_AD+1)+0,w
 20584  0937  022B               	subwf	0+(??_getLoad_AD+3)+0,w
 20585  0938                     u7055:
 20586  0938  1803               	skipnc
 20587  0939  293B               	goto	u7051
 20588  093A  293C               	goto	u7050
 20589  093B                     u7051:
 20590  093B  2953               	goto	l19188
 20591  093C                     u7050:
 20592                           	line	60
 20593                           	
 20594  093C                     l19186:	
 20595                           ;OverLoad_B1.c: 59: {
 20596                           ;OverLoad_B1.c: 60: Load->AL[i]=Load->ADRES;
 20597  093C  086B               	movf	(_Load),w
 20598  093D  3E32               	addlw	032h
 20599  093E  0086               	movwf	fsr1l
 20600  093F  3002               	movlw 2	; select bank4/5
 20601  0940  0087               	movwf fsr1h	
 20602                           	
 20603  0941  3F40               	moviw	[0]fsr1
 20604  0942  00A8               	movwf	(??_getLoad_AD+0)+0
 20605  0943  3F41               	moviw	[1]fsr1
 20606  0944  00A9               	movwf	(??_getLoad_AD+0)+0+1
 20607  0945  082F               	movf	(getLoad_AD@i),w
 20608  0946  0709               	addwf	wreg,w
 20609  0947  3E1A               	addlw	01Ah
 20610  0948  076B               	addwf	(_Load),w
 20611  0949  00AA               	movwf	(??_getLoad_AD+2)+0
 20612  094A  082A               	movf	0+(??_getLoad_AD+2)+0,w
 20613  094B  0086               	movwf	fsr1l
 20614  094C  3002               	movlw 2	; select bank4/5
 20615  094D  0087               	movwf fsr1h	
 20616                           	
 20617  094E  0828               	movf	0+(??_getLoad_AD+0)+0,w
 20618  094F  3FC0               	movwi	[0]fsr1
 20619  0950  0829               	movf	1+(??_getLoad_AD+0)+0,w
 20620  0951  3FC1               	movwi	[1]fsr1
 20621                           	line	61
 20622                           ;OverLoad_B1.c: 61: break;
 20623  0952  2960               	goto	l9570
 20624                           	line	62
 20625                           	
 20626  0953                     l9569:	
 20627                           	line	56
 20628                           	
 20629  0953                     l19188:	
 20630  0953  3001               	movlw	(01h)
 20631  0954  00A8               	movwf	(??_getLoad_AD+0)+0
 20632  0955  0828               	movf	(??_getLoad_AD+0)+0,w
 20633  0956  07AF               	addwf	(getLoad_AD@i),f
 20634                           	
 20635  0957                     l19190:	
 20636  0957  3005               	movlw	(05h)
 20637  0958  022F               	subwf	(getLoad_AD@i),w
 20638  0959  1C03               	skipc
 20639  095A  295C               	goto	u7061
 20640  095B  295D               	goto	u7060
 20641  095C                     u7061:
 20642  095C  291C               	goto	l19184
 20643  095D                     u7060:
 20644  095D  2960               	goto	l9570
 20645                           	
 20646  095E                     l9568:	
 20647  095E  2960               	goto	l9570
 20648                           	line	64
 20649                           	
 20650  095F                     l9566:	
 20651  095F  2960               	goto	l9570
 20652                           	line	65
 20653                           	
 20654  0960                     l9562:	
 20655                           	line	66
 20656                           	
 20657  0960                     l9570:	
 20658  0960  0008               	return
 20659                           	opt stack 0
 20660                           GLOBAL	__end_of_getLoad_AD
 20661  0961                     	__end_of_getLoad_AD:
 20662 ;; =============== function _getLoad_AD ends ============
 20663                           
 20664                           	signat	_getLoad_AD,8312
 20665                           	global	_RF_Initialization
 20666                           psect	text4955,local,class=CODE,delta=2
 20667                           global __ptext4955
 20668  2D2E                     __ptext4955:
 20669                           
 20670 ;; *************** function _RF_Initialization *****************
 20671 ;; Defined at:
 20672 ;;		line 18 in file "G:\Program\PIC\Source_File\RF_Control_B1.c"
 20673 ;; Parameters:    Size  Location     Type
 20674 ;;		None
 20675 ;; Auto vars:     Size  Location     Type
 20676 ;;		None
 20677 ;; Return value:  Size  Location     Type
 20678 ;;		None               void
 20679 ;; Registers used:
 20680 ;;		wreg, status,2, status,0, pclath, cstack
 20681 ;; Tracked objects:
 20682 ;;		On entry : 0/0
 20683 ;;		On exit  : 0/0
 20684 ;;		Unchanged: 0/0
 20685 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 20686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 20687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 20688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 20689 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 20690 ;;Total ram usage:        0 bytes
 20691 ;; Hardware stack levels used:    1
 20692 ;; Hardware stack levels required when called:    5
 20693 ;; This function calls:
 20694 ;;		_setRF_Initialization
 20695 ;; This function is called by:
 20696 ;;		_main
 20697 ;; This function uses a non-reentrant model
 20698 ;;
 20699                           psect	text4955
 20700                           	file	"G:\Program\PIC\Source_File\RF_Control_B1.c"
 20701                           	line	18
 20702                           	global	__size_of_RF_Initialization
 20703  0005                     	__size_of_RF_Initialization	equ	__end_of_RF_Initialization-_RF_Initialization
 20704                           	
 20705  2D2E                     _RF_Initialization:	
 20706                           	opt	stack 10
 20707                           ; Regs used in _RF_Initialization: [wreg+status,2+status,0+pclath+cstack]
 20708                           	line	20
 20709                           	
 20710  2D2E                     l20996:	
 20711                           ;RF_Control_B1.c: 20: setRF_Initialization(1);
 20712  2D2E  3001               	movlw	(01h)
 20713  2D2F  31AD  2597  31AD   	fcall	_setRF_Initialization
 20714                           	line	22
 20715                           	
 20716  2D32                     l13137:	
 20717  2D32  0008               	return
 20718                           	opt stack 0
 20719                           GLOBAL	__end_of_RF_Initialization
 20720  2D33                     	__end_of_RF_Initialization:
 20721 ;; =============== function _RF_Initialization ends ============
 20722                           
 20723                           	signat	_RF_Initialization,88
 20724                           	global	_Mcu_Initialization
 20725                           psect	text4956,local,class=CODE,delta=2
 20726                           global __ptext4956
 20727  2162                     __ptext4956:
 20728                           
 20729 ;; *************** function _Mcu_Initialization *****************
 20730 ;; Defined at:
 20731 ;;		line 12 in file "G:\Program\PIC\Source_File\MCU_16f1518_B1.c"
 20732 ;; Parameters:    Size  Location     Type
 20733 ;;		None
 20734 ;; Auto vars:     Size  Location     Type
 20735 ;;		None
 20736 ;; Return value:  Size  Location     Type
 20737 ;;		None               void
 20738 ;; Registers used:
 20739 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20740 ;; Tracked objects:
 20741 ;;		On entry : 0/0
 20742 ;;		On exit  : 0/0
 20743 ;;		Unchanged: 0/0
 20744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 20745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 20746 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 20747 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 20748 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 20749 ;;Total ram usage:        1 bytes
 20750 ;; Hardware stack levels used:    1
 20751 ;; Hardware stack levels required when called:    5
 20752 ;; This function calls:
 20753 ;;		_IO_Set
 20754 ;;		_TMR0_Set
 20755 ;;		_ADC_Set
 20756 ;;		_INT_Set
 20757 ;;		_IOC_Set
 20758 ;; This function is called by:
 20759 ;;		_main
 20760 ;; This function uses a non-reentrant model
 20761 ;;
 20762                           psect	text4956
 20763                           	file	"G:\Program\PIC\Source_File\MCU_16f1518_B1.c"
 20764                           	line	12
 20765                           	global	__size_of_Mcu_Initialization
 20766  0018                     	__size_of_Mcu_Initialization	equ	__end_of_Mcu_Initialization-_Mcu_Initialization
 20767                           	
 20768  2162                     _Mcu_Initialization:	
 20769                           	opt	stack 10
 20770                           ; Regs used in _Mcu_Initialization: [wreg+fsr1l-status,0+pclath+cstack]
 20771                           	line	14
 20772                           	
 20773  2162                     l20982:	
 20774                           ;MCU_16f1518_B1.c: 14: OSCCON=0x78; ;;
 20775  2162  3078               	movlw	(078h)
 20776  2163  0021               	movlb 1	; select bank1
 20777  2164  0099               	movwf	(153)^080h	;volatile
 20778                           	line	16
 20779                           	
 20780  2165                     l20984:	
 20781                           ;MCU_16f1518_B1.c: 16: IO_Set();
 20782  2165  31A1  217A  31A1   	fcall	_IO_Set
 20783                           	line	18
 20784                           	
 20785  2168                     l20986:	
 20786                           ;MCU_16f1518_B1.c: 18: TMR0_Set();
 20787  2168  31A1  2122  31A1   	fcall	_TMR0_Set
 20788                           	line	22
 20789                           	
 20790  216B                     l20988:	
 20791                           ;MCU_16f1518_B1.c: 20: ;;
 20792                           ;MCU_16f1518_B1.c: 22: ADC_Set();
 20793  216B  31AD  2590  31A1   	fcall	_ADC_Set
 20794                           	line	26
 20795                           	
 20796  216E                     l20990:	
 20797                           ;MCU_16f1518_B1.c: 26: INT_Set();
 20798  216E  31AD  2529  31A1   	fcall	_INT_Set
 20799                           	line	28
 20800                           	
 20801  2171                     l20992:	
 20802                           ;MCU_16f1518_B1.c: 28: IOC_Set();
 20803  2171  31AD  25F3  31A1   	fcall	_IOC_Set
 20804                           	line	34
 20805                           	
 20806  2174                     l20994:	
 20807                           ;MCU_16f1518_B1.c: 30: ;;
 20808                           ;MCU_16f1518_B1.c: 32: ;;
 20809                           ;MCU_16f1518_B1.c: 34: Memory=&VarMemory;
 20810  2174  30A0               	movlw	(_VarMemory)&0ffh
 20811  2175  0020               	movlb 0	; select bank0
 20812  2176  00A1               	movwf	(??_Mcu_Initialization+0)+0
 20813  2177  0821               	movf	(??_Mcu_Initialization+0)+0,w
 20814  2178  00FC               	movwf	(_Memory)
 20815                           	line	35
 20816                           	
 20817  2179                     l8314:	
 20818  2179  0008               	return
 20819                           	opt stack 0
 20820                           GLOBAL	__end_of_Mcu_Initialization
 20821  217A                     	__end_of_Mcu_Initialization:
 20822 ;; =============== function _Mcu_Initialization ends ============
 20823                           
 20824                           	signat	_Mcu_Initialization,88
 20825                           	global	_setLED_Main
 20826                           psect	text4957,local,class=CODE,delta=2
 20827                           global __ptext4957
 20828  192A                     __ptext4957:
 20829                           
 20830 ;; *************** function _setLED_Main *****************
 20831 ;; Defined at:
 20832 ;;		line 215 in file "G:\Program\PIC\Source_File\LED_B1.c"
 20833 ;; Parameters:    Size  Location     Type
 20834 ;;  led             1    wreg     unsigned char 
 20835 ;; Auto vars:     Size  Location     Type
 20836 ;;  led             1    2[BANK0 ] unsigned char 
 20837 ;; Return value:  Size  Location     Type
 20838 ;;		None               void
 20839 ;; Registers used:
 20840 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20841 ;; Tracked objects:
 20842 ;;		On entry : 0/0
 20843 ;;		On exit  : 0/0
 20844 ;;		Unchanged: 0/0
 20845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 20846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 20847 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 20848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 20849 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 20850 ;;Total ram usage:        1 bytes
 20851 ;; Hardware stack levels used:    1
 20852 ;; Hardware stack levels required when called:    5
 20853 ;; This function calls:
 20854 ;;		_LedPointSelect
 20855 ;; This function is called by:
 20856 ;;		_LED_Main
 20857 ;; This function uses a non-reentrant model
 20858 ;;
 20859                           psect	text4957
 20860                           	file	"G:\Program\PIC\Source_File\LED_B1.c"
 20861                           	line	215
 20862                           	global	__size_of_setLED_Main
 20863  004E                     	__size_of_setLED_Main	equ	__end_of_setLED_Main-_setLED_Main
 20864                           	
 20865  192A                     _setLED_Main:	
 20866                           	opt	stack 9
 20867                           ; Regs used in _setLED_Main: [wreg+fsr1l-status,0+pclath+cstack]
 20868                           ;setLED_Main@led stored from wreg
 20869  192A  0020               	movlb 0	; select bank0
 20870  192B  00A2               	movwf	(setLED_Main@led)
 20871                           	line	216
 20872                           	
 20873  192C                     l20960:	
 20874                           ;LED_B1.c: 216: LedPointSelect(led);
 20875  192C  0822               	movf	(setLED_Main@led),w
 20876  192D  3198  2067  3199   	fcall	_LedPointSelect
 20877                           	line	217
 20878                           	
 20879  1930                     l20962:	
 20880                           ;LED_B1.c: 217: if(LED->GO)
 20881  1930  0021               	movlb 1	; select bank1
 20882  1931  083A               	movf	(_LED)^080h,w
 20883  1932  0086               	movwf	fsr1l
 20884  1933  0187               	clrf fsr1h	
 20885                           	
 20886  1934  1C81               	btfss	indf1,1
 20887  1935  2937               	goto	u9611
 20888  1936  2938               	goto	u9610
 20889  1937                     u9611:
 20890  1937  2977               	goto	l5978
 20891  1938                     u9610:
 20892                           	line	219
 20893                           	
 20894  1938                     l20964:	
 20895                           ;LED_B1.c: 218: {
 20896                           ;LED_B1.c: 219: LED->Time++;
 20897  1938  083A               	movf	(_LED)^080h,w
 20898  1939  3E01               	addlw	01h
 20899  193A  0086               	movwf	fsr1l
 20900  193B  0187               	clrf fsr1h	
 20901                           	
 20902  193C  3001               	movlw	01h
 20903  193D  0781               	addwf	indf1,f
 20904  193E  3141               	addfsr	fsr1,1
 20905  193F  1803               	skipnc
 20906  1940  0A81               	incf	indf1,f
 20907                           	line	220
 20908                           	
 20909  1941                     l20966:	
 20910                           ;LED_B1.c: 220: if(LED->Time == 500/5)
 20911  1941  083A               	movf	(_LED)^080h,w
 20912  1942  3E01               	addlw	01h
 20913  1943  0086               	movwf	fsr1l
 20914  1944  0187               	clrf fsr1h	
 20915                           	
 20916  1945  3F40               	moviw	[0]fsr1
 20917  1946  3A64               	xorlw	low(064h)
 20918  1947  1D03               	skipz
 20919  1948  294B               	goto	u9625
 20920  1949  3F41               	moviw	[1]fsr1
 20921  194A  3A00               	xorlw	high(064h)
 20922  194B                     u9625:
 20923  194B  1D03               	skipz
 20924  194C  294E               	goto	u9621
 20925  194D  294F               	goto	u9620
 20926  194E                     u9621:
 20927  194E  2977               	goto	l5978
 20928  194F                     u9620:
 20929                           	line	222
 20930                           	
 20931  194F                     l20968:	
 20932                           ;LED_B1.c: 221: {
 20933                           ;LED_B1.c: 222: LED->Time=0;
 20934  194F  083A               	movf	(_LED)^080h,w
 20935  1950  3E01               	addlw	01h
 20936  1951  0086               	movwf	fsr1l
 20937  1952  0187               	clrf fsr1h	
 20938                           	
 20939  1953  3000               	movlw	low(0)
 20940  1954  3FC0               	movwi	[0]fsr1
 20941  1955  3000               	movlw	high(0)
 20942  1956  3FC1               	movwi	[1]fsr1
 20943                           	line	224
 20944                           	
 20945  1957                     l20970:	
 20946                           ;LED_B1.c: 224: if(led == 1)
 20947  1957  0020               	movlb 0	; select bank0
 20948  1958  0822               	movf	(setLED_Main@led),w
 20949  1959  3A01               	xorlw	01h&0ffh
 20950  195A  1D03               	skipz
 20951  195B  295D               	goto	u9631
 20952  195C  295E               	goto	u9630
 20953  195D                     u9631:
 20954  195D  2961               	goto	l20974
 20955  195E                     u9630:
 20956                           	line	226
 20957                           	
 20958  195E                     l20972:	
 20959                           ;LED_B1.c: 225: {
 20960                           ;LED_B1.c: 226: RC7=~RC7;
 20961  195E  3080               	movlw	1<<((119)&7)
 20962  195F  068E               	xorwf	((119)/8),f
 20963                           	line	227
 20964                           ;LED_B1.c: 227: }
 20965  1960  2977               	goto	l5978
 20966                           	line	230
 20967                           	
 20968  1961                     l5973:	
 20969                           	
 20970  1961                     l20974:	
 20971                           ;LED_B1.c: 230: else if(led == 2)
 20972  1961  0822               	movf	(setLED_Main@led),w
 20973  1962  3A02               	xorlw	02h&0ffh
 20974  1963  1D03               	skipz
 20975  1964  2966               	goto	u9641
 20976  1965  2967               	goto	u9640
 20977  1966                     u9641:
 20978  1966  296A               	goto	l20978
 20979  1967                     u9640:
 20980                           	line	232
 20981                           	
 20982  1967                     l20976:	
 20983                           ;LED_B1.c: 231: {
 20984                           ;LED_B1.c: 232: RA3=~RA3;
 20985  1967  3008               	movlw	1<<((99)&7)
 20986  1968  068C               	xorwf	((99)/8),f
 20987                           	line	233
 20988                           ;LED_B1.c: 233: }
 20989  1969  2977               	goto	l5978
 20990                           	line	242
 20991                           	
 20992  196A                     l5975:	
 20993                           	
 20994  196A                     l20978:	
 20995                           ;LED_B1.c: 242: else if(led == 99)
 20996  196A  0822               	movf	(setLED_Main@led),w
 20997  196B  3A63               	xorlw	063h&0ffh
 20998  196C  1D03               	skipz
 20999  196D  296F               	goto	u9651
 21000  196E  2970               	goto	u9650
 21001  196F                     u9651:
 21002  196F  2977               	goto	l5978
 21003  1970                     u9650:
 21004                           	line	244
 21005                           	
 21006  1970                     l20980:	
 21007                           ;LED_B1.c: 243: {
 21008                           ;LED_B1.c: 244: RB5=~RB5;
 21009  1970  3020               	movlw	1<<((109)&7)
 21010  1971  068D               	xorwf	((109)/8),f
 21011  1972  2977               	goto	l5978
 21012                           	line	245
 21013                           	
 21014  1973                     l5977:	
 21015  1973  2977               	goto	l5978
 21016                           	line	247
 21017                           	
 21018  1974                     l5976:	
 21019  1974  2977               	goto	l5978
 21020                           	
 21021  1975                     l5974:	
 21022  1975  2977               	goto	l5978
 21023                           	
 21024  1976                     l5972:	
 21025  1976  2977               	goto	l5978
 21026                           	line	248
 21027                           	
 21028  1977                     l5971:	
 21029                           	line	249
 21030                           	
 21031  1977                     l5978:	
 21032  1977  0008               	return
 21033                           	opt stack 0
 21034                           GLOBAL	__end_of_setLED_Main
 21035  1978                     	__end_of_setLED_Main:
 21036 ;; =============== function _setLED_Main ends ============
 21037                           
 21038                           	signat	_setLED_Main,4216
 21039                           	global	_setDimmer_PFERROR
 21040                           psect	text4958,local,class=CODE,delta=2
 21041                           global __ptext4958
 21042  2FC0                     __ptext4958:
 21043                           
 21044 ;; *************** function _setDimmer_PFERROR *****************
 21045 ;; Defined at:
 21046 ;;		line 516 in file "G:\Program\PIC\Source_File\Dimmer_B1.c"
 21047 ;; Parameters:    Size  Location     Type
 21048 ;;  dimmer          1    wreg     unsigned char 
 21049 ;;  command         1    2[BANK0 ] unsigned char 
 21050 ;; Auto vars:     Size  Location     Type
 21051 ;;  dimmer          1    3[BANK0 ] unsigned char 
 21052 ;; Return value:  Size  Location     Type
 21053 ;;		None               void
 21054 ;; Registers used:
 21055 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21056 ;; Tracked objects:
 21057 ;;		On entry : 0/0
 21058 ;;		On exit  : 0/0
 21059 ;;		Unchanged: 0/0
 21060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 21061 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 21062 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 21063 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 21064 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 21065 ;;Total ram usage:        2 bytes
 21066 ;; Hardware stack levels used:    1
 21067 ;; Hardware stack levels required when called:    5
 21068 ;; This function calls:
 21069 ;;		_DimmerPointSelect
 21070 ;; This function is called by:
 21071 ;;		_setPowerFault_ERROR
 21072 ;; This function uses a non-reentrant model
 21073 ;;
 21074                           psect	text4958
 21075                           	file	"G:\Program\PIC\Source_File\Dimmer_B1.c"
 21076                           	line	516
 21077                           	global	__size_of_setDimmer_PFERROR
 21078  0010                     	__size_of_setDimmer_PFERROR	equ	__end_of_setDimmer_PFERROR-_setDimmer_PFERROR
 21079                           	
 21080  2FC0                     _setDimmer_PFERROR:	
 21081                           	opt	stack 7
 21082                           ; Regs used in _setDimmer_PFERROR: [wreg+fsr1l-status,0+pclath+cstack]
 21083                           ;setDimmer_PFERROR@dimmer stored from wreg
 21084  2FC0  0020               	movlb 0	; select bank0
 21085  2FC1  00A3               	movwf	(setDimmer_PFERROR@dimmer)
 21086                           	line	517
 21087                           	
 21088  2FC2                     l20956:	
 21089                           ;Dimmer_B1.c: 517: DimmerPointSelect(dimmer);
 21090  2FC2  0823               	movf	(setDimmer_PFERROR@dimmer),w
 21091  2FC3  31AE  26D8  31AF   	fcall	_DimmerPointSelect
 21092                           	line	518
 21093                           	
 21094  2FC6                     l20958:	
 21095                           ;Dimmer_B1.c: 518: Dimmer->PFERROR=command;
 21096  2FC6  0021               	movlb 1	; select bank1
 21097  2FC7  0838               	movf	(_Dimmer)^080h,w
 21098  2FC8  0086               	movwf	fsr1l
 21099  2FC9  0187               	clrf fsr1h	
 21100                           	
 21101  2FCA  0020               	movlb 0	; select bank0
 21102  2FCB  0822               	movf	(setDimmer_PFERROR@command),w
 21103  2FCC  1101               	bcf	indf1,2
 21104  2FCD  1D03               	skipz
 21105  2FCE  1501               	bsf	indf1,2
 21106                           	line	519
 21107                           	
 21108  2FCF                     l4809:	
 21109  2FCF  0008               	return
 21110                           	opt stack 0
 21111                           GLOBAL	__end_of_setDimmer_PFERROR
 21112  2FD0                     	__end_of_setDimmer_PFERROR:
 21113 ;; =============== function _setDimmer_PFERROR ends ============
 21114                           
 21115                           	signat	_setDimmer_PFERROR,8312
 21116                           	global	_setDimmer_LoadERROR
 21117                           psect	text4959,local,class=CODE,delta=2
 21118                           global __ptext4959
 21119  2FB0                     __ptext4959:
 21120                           
 21121 ;; *************** function _setDimmer_LoadERROR *****************
 21122 ;; Defined at:
 21123 ;;		line 511 in file "G:\Program\PIC\Source_File\Dimmer_B1.c"
 21124 ;; Parameters:    Size  Location     Type
 21125 ;;  dimmer          1    wreg     unsigned char 
 21126 ;;  command         1    2[BANK0 ] unsigned char 
 21127 ;; Auto vars:     Size  Location     Type
 21128 ;;  dimmer          1    3[BANK0 ] unsigned char 
 21129 ;; Return value:  Size  Location     Type
 21130 ;;		None               void
 21131 ;; Registers used:
 21132 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21133 ;; Tracked objects:
 21134 ;;		On entry : 0/0
 21135 ;;		On exit  : 0/0
 21136 ;;		Unchanged: 0/0
 21137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 21138 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 21139 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 21140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 21141 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 21142 ;;Total ram usage:        2 bytes
 21143 ;; Hardware stack levels used:    1
 21144 ;; Hardware stack levels required when called:    5
 21145 ;; This function calls:
 21146 ;;		_DimmerPointSelect
 21147 ;; This function is called by:
 21148 ;;		_setLoad_ERROR
 21149 ;; This function uses a non-reentrant model
 21150 ;;
 21151                           psect	text4959
 21152                           	file	"G:\Program\PIC\Source_File\Dimmer_B1.c"
 21153                           	line	511
 21154                           	global	__size_of_setDimmer_LoadERROR
 21155  0010                     	__size_of_setDimmer_LoadERROR	equ	__end_of_setDimmer_LoadERROR-_setDimmer_LoadERROR
 21156                           	
 21157  2FB0                     _setDimmer_LoadERROR:	
 21158                           	opt	stack 7
 21159                           ; Regs used in _setDimmer_LoadERROR: [wreg+fsr1l-status,0+pclath+cstack]
 21160                           ;setDimmer_LoadERROR@dimmer stored from wreg
 21161  2FB0  0020               	movlb 0	; select bank0
 21162  2FB1  00A3               	movwf	(setDimmer_LoadERROR@dimmer)
 21163                           	line	512
 21164                           	
 21165  2FB2                     l20952:	
 21166                           ;Dimmer_B1.c: 512: DimmerPointSelect(dimmer);
 21167  2FB2  0823               	movf	(setDimmer_LoadERROR@dimmer),w
 21168  2FB3  31AE  26D8  31AF   	fcall	_DimmerPointSelect
 21169                           	line	513
 21170                           	
 21171  2FB6                     l20954:	
 21172                           ;Dimmer_B1.c: 513: Dimmer->LoadERROR=command;
 21173  2FB6  0021               	movlb 1	; select bank1
 21174  2FB7  0838               	movf	(_Dimmer)^080h,w
 21175  2FB8  0086               	movwf	fsr1l
 21176  2FB9  0187               	clrf fsr1h	
 21177                           	
 21178  2FBA  0020               	movlb 0	; select bank0
 21179  2FBB  0822               	movf	(setDimmer_LoadERROR@command),w
 21180  2FBC  1001               	bcf	indf1,0
 21181  2FBD  1D03               	skipz
 21182  2FBE  1401               	bsf	indf1,0
 21183                           	line	514
 21184                           	
 21185  2FBF                     l4806:	
 21186  2FBF  0008               	return
 21187                           	opt stack 0
 21188                           GLOBAL	__end_of_setDimmer_LoadERROR
 21189  2FC0                     	__end_of_setDimmer_LoadERROR:
 21190 ;; =============== function _setDimmer_LoadERROR ends ============
 21191                           
 21192                           	signat	_setDimmer_LoadERROR,8312
 21193                           	global	_setDimmer_TempERROR
 21194                           psect	text4960,local,class=CODE,delta=2
 21195                           global __ptext4960
 21196  2FA0                     __ptext4960:
 21197                           
 21198 ;; *************** function _setDimmer_TempERROR *****************
 21199 ;; Defined at:
 21200 ;;		line 506 in file "G:\Program\PIC\Source_File\Dimmer_B1.c"
 21201 ;; Parameters:    Size  Location     Type
 21202 ;;  dimmer          1    wreg     unsigned char 
 21203 ;;  command         1    2[BANK0 ] unsigned char 
 21204 ;; Auto vars:     Size  Location     Type
 21205 ;;  dimmer          1    3[BANK0 ] unsigned char 
 21206 ;; Return value:  Size  Location     Type
 21207 ;;		None               void
 21208 ;; Registers used:
 21209 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21210 ;; Tracked objects:
 21211 ;;		On entry : 0/0
 21212 ;;		On exit  : 0/0
 21213 ;;		Unchanged: 0/0
 21214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 21215 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 21216 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 21217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 21218 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 21219 ;;Total ram usage:        2 bytes
 21220 ;; Hardware stack levels used:    1
 21221 ;; Hardware stack levels required when called:    5
 21222 ;; This function calls:
 21223 ;;		_DimmerPointSelect
 21224 ;; This function is called by:
 21225 ;;		_setOverTemp_ERROR
 21226 ;; This function uses a non-reentrant model
 21227 ;;
 21228                           psect	text4960
 21229                           	file	"G:\Program\PIC\Source_File\Dimmer_B1.c"
 21230                           	line	506
 21231                           	global	__size_of_setDimmer_TempERROR
 21232  0010                     	__size_of_setDimmer_TempERROR	equ	__end_of_setDimmer_TempERROR-_setDimmer_TempERROR
 21233                           	
 21234  2FA0                     _setDimmer_TempERROR:	
 21235                           	opt	stack 7
 21236                           ; Regs used in _setDimmer_TempERROR: [wreg+fsr1l-status,0+pclath+cstack]
 21237                           ;setDimmer_TempERROR@dimmer stored from wreg
 21238  2FA0  0020               	movlb 0	; select bank0
 21239  2FA1  00A3               	movwf	(setDimmer_TempERROR@dimmer)
 21240                           	line	507
 21241                           	
 21242  2FA2                     l20948:	
 21243                           ;Dimmer_B1.c: 507: DimmerPointSelect(dimmer);
 21244  2FA2  0823               	movf	(setDimmer_TempERROR@dimmer),w
 21245  2FA3  31AE  26D8  31AF   	fcall	_DimmerPointSelect
 21246                           	line	508
 21247                           	
 21248  2FA6                     l20950:	
 21249                           ;Dimmer_B1.c: 508: Dimmer->TempERROR=command;
 21250  2FA6  0021               	movlb 1	; select bank1
 21251  2FA7  0838               	movf	(_Dimmer)^080h,w
 21252  2FA8  0086               	movwf	fsr1l
 21253  2FA9  0187               	clrf fsr1h	
 21254                           	
 21255  2FAA  0020               	movlb 0	; select bank0
 21256  2FAB  0822               	movf	(setDimmer_TempERROR@command),w
 21257  2FAC  1081               	bcf	indf1,1
 21258  2FAD  1D03               	skipz
 21259  2FAE  1481               	bsf	indf1,1
 21260                           	line	509
 21261                           	
 21262  2FAF                     l4803:	
 21263  2FAF  0008               	return
 21264                           	opt stack 0
 21265                           GLOBAL	__end_of_setDimmer_TempERROR
 21266  2FB0                     	__end_of_setDimmer_TempERROR:
 21267 ;; =============== function _setDimmer_TempERROR ends ============
 21268                           
 21269                           	signat	_setDimmer_TempERROR,8312
 21270                           	global	_setDimmerLights_TriggerAdj
 21271                           psect	text4961,local,class=CODE,delta=2
 21272                           global __ptext4961
 21273  207C                     __ptext4961:
 21274                           
 21275 ;; *************** function _setDimmerLights_TriggerAdj *****************
 21276 ;; Defined at:
 21277 ;;		line 460 in file "G:\Program\PIC\Source_File\Dimmer_B1.c"
 21278 ;; Parameters:    Size  Location     Type
 21279 ;;  lights          1    wreg     unsigned char 
 21280 ;;  command         1    2[BANK0 ] unsigned char 
 21281 ;; Auto vars:     Size  Location     Type
 21282 ;;  lights          1    3[BANK0 ] unsigned char 
 21283 ;; Return value:  Size  Location     Type
 21284 ;;		None               void
 21285 ;; Registers used:
 21286 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21287 ;; Tracked objects:
 21288 ;;		On entry : 0/0
 21289 ;;		On exit  : 0/0
 21290 ;;		Unchanged: 0/0
 21291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 21292 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 21293 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 21294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 21295 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 21296 ;;Total ram usage:        2 bytes
 21297 ;; Hardware stack levels used:    1
 21298 ;; Hardware stack levels required when called:    5
 21299 ;; This function calls:
 21300 ;;		_DimmerLightsPointSelect
 21301 ;; This function is called by:
 21302 ;;		_Sw_OffFunc
 21303 ;;		_Sw_AdjFunc
 21304 ;; This function uses a non-reentrant model
 21305 ;;
 21306                           psect	text4961
 21307                           	file	"G:\Program\PIC\Source_File\Dimmer_B1.c"
 21308                           	line	460
 21309                           	global	__size_of_setDimmerLights_TriggerAdj
 21310  0011                     	__size_of_setDimmerLights_TriggerAdj	equ	__end_of_setDimmerLights_TriggerAdj-_setDimmer
                                 Lights_TriggerAdj
 21311                           	
 21312  207C                     _setDimmerLights_TriggerAdj:	
 21313                           	opt	stack 7
 21314                           ; Regs used in _setDimmerLights_TriggerAdj: [wreg+fsr1l-status,0+pclath+cstack]
 21315                           ;setDimmerLights_TriggerAdj@lights stored from wreg
 21316  207C  0020               	movlb 0	; select bank0
 21317  207D  00A3               	movwf	(setDimmerLights_TriggerAdj@lights)
 21318                           	line	461
 21319                           	
 21320  207E                     l20944:	
 21321                           ;Dimmer_B1.c: 461: DimmerLightsPointSelect(lights);
 21322  207E  0823               	movf	(setDimmerLights_TriggerAdj@lights),w
 21323  207F  31AE  2684  31A0   	fcall	_DimmerLightsPointSelect
 21324                           	line	462
 21325                           	
 21326  2082                     l20946:	
 21327                           ;Dimmer_B1.c: 462: DimmerLights->TriggerAdj=command;
 21328  2082  0020               	movlb 0	; select bank0
 21329  2083  086A               	movf	(_DimmerLights),w
 21330  2084  3E09               	addlw	09h
 21331  2085  0086               	movwf	fsr1l
 21332  2086  3001               	movlw 1	; select bank2/3
 21333  2087  0087               	movwf fsr1h	
 21334                           	
 21335  2088  0822               	movf	(setDimmerLights_TriggerAdj@command),w
 21336  2089  1181               	bcf	indf1,3
 21337  208A  1D03               	skipz
 21338  208B  1581               	bsf	indf1,3
 21339                           	line	463
 21340                           	
 21341  208C                     l4778:	
 21342  208C  0008               	return
 21343                           	opt stack 0
 21344                           GLOBAL	__end_of_setDimmerLights_TriggerAdj
 21345  208D                     	__end_of_setDimmerLights_TriggerAdj:
 21346 ;; =============== function _setDimmerLights_TriggerAdj ends ============
 21347                           
 21348                           	signat	_setDimmerLights_TriggerAdj,8312
 21349                           	global	_setDimmerLights_AdjGo
 21350                           psect	text4962,local,class=CODE,delta=2
 21351                           global __ptext4962
 21352  206B                     __ptext4962:
 21353                           
 21354 ;; *************** function _setDimmerLights_AdjGo *****************
 21355 ;; Defined at:
 21356 ;;		line 450 in file "G:\Program\PIC\Source_File\Dimmer_B1.c"
 21357 ;; Parameters:    Size  Location     Type
 21358 ;;  lights          1    wreg     unsigned char 
 21359 ;;  command         1    2[BANK0 ] unsigned char 
 21360 ;; Auto vars:     Size  Location     Type
 21361 ;;  lights          1    3[BANK0 ] unsigned char 
 21362 ;; Return value:  Size  Location     Type
 21363 ;;		None               void
 21364 ;; Registers used:
 21365 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21366 ;; Tracked objects:
 21367 ;;		On entry : 0/0
 21368 ;;		On exit  : 0/0
 21369 ;;		Unchanged: 0/0
 21370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 21371 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 21372 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 21373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 21374 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 21375 ;;Total ram usage:        2 bytes
 21376 ;; Hardware stack levels used:    1
 21377 ;; Hardware stack levels required when called:    5
 21378 ;; This function calls:
 21379 ;;		_DimmerLightsPointSelect
 21380 ;; This function is called by:
 21381 ;;		_Sw_OffFunc
 21382 ;;		_Sw_AdjFunc
 21383 ;; This function uses a non-reentrant model
 21384 ;;
 21385                           psect	text4962
 21386                           	file	"G:\Program\PIC\Source_File\Dimmer_B1.c"
 21387                           	line	450
 21388                           	global	__size_of_setDimmerLights_AdjGo
 21389  0011                     	__size_of_setDimmerLights_AdjGo	equ	__end_of_setDimmerLights_AdjGo-_setDimmerLights_Adj
                                 Go
 21390                           	
 21391  206B                     _setDimmerLights_AdjGo:	
 21392                           	opt	stack 7
 21393                           ; Regs used in _setDimmerLights_AdjGo: [wreg+fsr1l-status,0+pclath+cstack]
 21394                           ;setDimmerLights_AdjGo@lights stored from wreg
 21395  206B  0020               	movlb 0	; select bank0
 21396  206C  00A3               	movwf	(setDimmerLights_AdjGo@lights)
 21397                           	line	451
 21398                           	
 21399  206D                     l20940:	
 21400                           ;Dimmer_B1.c: 451: DimmerLightsPointSelect(lights);
 21401  206D  0823               	movf	(setDimmerLights_AdjGo@lights),w
 21402  206E  31AE  2684  31A0   	fcall	_DimmerLightsPointSelect
 21403                           	line	452
 21404                           	
 21405  2071                     l20942:	
 21406                           ;Dimmer_B1.c: 452: DimmerLights->AdjGo=command;
 21407  2071  0020               	movlb 0	; select bank0
 21408  2072  086A               	movf	(_DimmerLights),w
 21409  2073  3E09               	addlw	09h
 21410  2074  0086               	movwf	fsr1l
 21411  2075  3001               	movlw 1	; select bank2/3
 21412  2076  0087               	movwf fsr1h	
 21413                           	
 21414  2077  0822               	movf	(setDimmerLights_AdjGo@command),w
 21415  2078  1101               	bcf	indf1,2
 21416  2079  1D03               	skipz
 21417  207A  1501               	bsf	indf1,2
 21418                           	line	453
 21419                           	
 21420  207B                     l4772:	
 21421  207B  0008               	return
 21422                           	opt stack 0
 21423                           GLOBAL	__end_of_setDimmerLights_AdjGo
 21424  207C                     	__end_of_setDimmerLights_AdjGo:
 21425 ;; =============== function _setDimmerLights_AdjGo ends ============
 21426                           
 21427                           	signat	_setDimmerLights_AdjGo,8312
 21428                           	global	_setLoad_LightsStatus
 21429                           psect	text4963,local,class=CODE,delta=2
 21430                           global __ptext4963
 21431  25BE                     __ptext4963:
 21432                           
 21433 ;; *************** function _setLoad_LightsStatus *****************
 21434 ;; Defined at:
 21435 ;;		line 309 in file "G:\Program\PIC\Source_File\OverLoad_B1.c"
 21436 ;; Parameters:    Size  Location     Type
 21437 ;;  load            1    wreg     unsigned char 
 21438 ;;  lights          1    2[BANK0 ] unsigned char 
 21439 ;;  command         1    3[BANK0 ] unsigned char 
 21440 ;; Auto vars:     Size  Location     Type
 21441 ;;  load            1    5[BANK0 ] unsigned char 
 21442 ;; Return value:  Size  Location     Type
 21443 ;;		None               void
 21444 ;; Registers used:
 21445 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21446 ;; Tracked objects:
 21447 ;;		On entry : 0/0
 21448 ;;		On exit  : 0/0
 21449 ;;		Unchanged: 0/0
 21450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 21451 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 21452 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 21453 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 21454 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 21455 ;;Total ram usage:        4 bytes
 21456 ;; Hardware stack levels used:    1
 21457 ;; Hardware stack levels required when called:    5
 21458 ;; This function calls:
 21459 ;;		_LoadPointSelect
 21460 ;; This function is called by:
 21461 ;;		_setDimmerLights
 21462 ;; This function uses a non-reentrant model
 21463 ;;
 21464                           psect	text4963
 21465                           	file	"G:\Program\PIC\Source_File\OverLoad_B1.c"
 21466                           	line	309
 21467                           	global	__size_of_setLoad_LightsStatus
 21468  0038                     	__size_of_setLoad_LightsStatus	equ	__end_of_setLoad_LightsStatus-_setLoad_LightsStatus
 21469                           	
 21470  25BE                     _setLoad_LightsStatus:	
 21471                           	opt	stack 5
 21472                           ; Regs used in _setLoad_LightsStatus: [wreg+fsr1l-status,0+pclath+cstack]
 21473                           ;setLoad_LightsStatus@load stored from wreg
 21474  25BE  0020               	movlb 0	; select bank0
 21475  25BF  00A5               	movwf	(setLoad_LightsStatus@load)
 21476                           	line	310
 21477                           	
 21478  25C0                     l19080:	
 21479                           ;OverLoad_B1.c: 310: LoadPointSelect(load);
 21480  25C0  0825               	movf	(setLoad_LightsStatus@load),w
 21481  25C1  31AE  2692  31A5   	fcall	_LoadPointSelect
 21482                           	line	311
 21483                           	
 21484  25C4                     l19082:	
 21485                           ;OverLoad_B1.c: 311: if(lights == 1)
 21486  25C4  0020               	movlb 0	; select bank0
 21487  25C5  0822               	movf	(setLoad_LightsStatus@lights),w
 21488  25C6  3A01               	xorlw	01h&0ffh
 21489  25C7  1D03               	skipz
 21490  25C8  2DCA               	goto	u6911
 21491  25C9  2DCB               	goto	u6910
 21492  25CA                     u6911:
 21493  25CA  2DD5               	goto	l19086
 21494  25CB                     u6910:
 21495                           	line	313
 21496                           	
 21497  25CB                     l19084:	
 21498                           ;OverLoad_B1.c: 312: {
 21499                           ;OverLoad_B1.c: 313: Load->Lights1Status=command;
 21500  25CB  0823               	movf	(setLoad_LightsStatus@command),w
 21501  25CC  00A4               	movwf	(??_setLoad_LightsStatus+0)+0
 21502  25CD  086B               	movf	(_Load),w
 21503  25CE  3E43               	addlw	043h
 21504  25CF  0086               	movwf	fsr1l
 21505  25D0  3002               	movlw 2	; select bank4/5
 21506  25D1  0087               	movwf fsr1h	
 21507                           	
 21508  25D2  0824               	movf	(??_setLoad_LightsStatus+0)+0,w
 21509  25D3  0081               	movwf	indf1
 21510  25D4  2DD5               	goto	l19086
 21511                           	line	314
 21512                           	
 21513  25D5                     l9613:	
 21514                           	line	315
 21515                           	
 21516  25D5                     l19086:	
 21517                           ;OverLoad_B1.c: 314: }
 21518                           ;OverLoad_B1.c: 315: if(lights == 2)
 21519  25D5  0822               	movf	(setLoad_LightsStatus@lights),w
 21520  25D6  3A02               	xorlw	02h&0ffh
 21521  25D7  1D03               	skipz
 21522  25D8  2DDA               	goto	u6921
 21523  25D9  2DDB               	goto	u6920
 21524  25DA                     u6921:
 21525  25DA  2DE5               	goto	l19090
 21526  25DB                     u6920:
 21527                           	line	317
 21528                           	
 21529  25DB                     l19088:	
 21530                           ;OverLoad_B1.c: 316: {
 21531                           ;OverLoad_B1.c: 317: Load->Lights2Status=command;
 21532  25DB  0823               	movf	(setLoad_LightsStatus@command),w
 21533  25DC  00A4               	movwf	(??_setLoad_LightsStatus+0)+0
 21534  25DD  086B               	movf	(_Load),w
 21535  25DE  3E44               	addlw	044h
 21536  25DF  0086               	movwf	fsr1l
 21537  25E0  3002               	movlw 2	; select bank4/5
 21538  25E1  0087               	movwf fsr1h	
 21539                           	
 21540  25E2  0824               	movf	(??_setLoad_LightsStatus+0)+0,w
 21541  25E3  0081               	movwf	indf1
 21542  25E4  2DE5               	goto	l19090
 21543                           	line	318
 21544                           	
 21545  25E5                     l9614:	
 21546                           	line	319
 21547                           	
 21548  25E5                     l19090:	
 21549                           ;OverLoad_B1.c: 318: }
 21550                           ;OverLoad_B1.c: 319: if(lights == 3)
 21551  25E5  0822               	movf	(setLoad_LightsStatus@lights),w
 21552  25E6  3A03               	xorlw	03h&0ffh
 21553  25E7  1D03               	skipz
 21554  25E8  2DEA               	goto	u6931
 21555  25E9  2DEB               	goto	u6930
 21556  25EA                     u6931:
 21557  25EA  2DF5               	goto	l9616
 21558  25EB                     u6930:
 21559                           	line	321
 21560                           	
 21561  25EB                     l19092:	
 21562                           ;OverLoad_B1.c: 320: {
 21563                           ;OverLoad_B1.c: 321: Load->Lights3Status=command;
 21564  25EB  0823               	movf	(setLoad_LightsStatus@command),w
 21565  25EC  00A4               	movwf	(??_setLoad_LightsStatus+0)+0
 21566  25ED  086B               	movf	(_Load),w
 21567  25EE  3E45               	addlw	045h
 21568  25EF  0086               	movwf	fsr1l
 21569  25F0  3002               	movlw 2	; select bank4/5
 21570  25F1  0087               	movwf fsr1h	
 21571                           	
 21572  25F2  0824               	movf	(??_setLoad_LightsStatus+0)+0,w
 21573  25F3  0081               	movwf	indf1
 21574  25F4  2DF5               	goto	l9616
 21575                           	line	322
 21576                           	
 21577  25F5                     l9615:	
 21578                           	line	323
 21579                           	
 21580  25F5                     l9616:	
 21581  25F5  0008               	return
 21582                           	opt stack 0
 21583                           GLOBAL	__end_of_setLoad_LightsStatus
 21584  25F6                     	__end_of_setLoad_LightsStatus:
 21585 ;; =============== function _setLoad_LightsStatus ends ============
 21586                           
 21587                           	signat	_setLoad_LightsStatus,12408
 21588                           	global	_setLoad_StatusOn
 21589                           psect	text4964,local,class=CODE,delta=2
 21590                           global __ptext4964
 21591  205A                     __ptext4964:
 21592                           
 21593 ;; *************** function _setLoad_StatusOn *****************
 21594 ;; Defined at:
 21595 ;;		line 342 in file "G:\Program\PIC\Source_File\OverLoad_B1.c"
 21596 ;; Parameters:    Size  Location     Type
 21597 ;;  load            1    wreg     unsigned char 
 21598 ;;  command         1    2[BANK0 ] unsigned char 
 21599 ;; Auto vars:     Size  Location     Type
 21600 ;;  load            1    3[BANK0 ] unsigned char 
 21601 ;; Return value:  Size  Location     Type
 21602 ;;		None               void
 21603 ;; Registers used:
 21604 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21605 ;; Tracked objects:
 21606 ;;		On entry : 0/0
 21607 ;;		On exit  : 0/0
 21608 ;;		Unchanged: 0/0
 21609 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 21610 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 21611 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 21612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 21613 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 21614 ;;Total ram usage:        2 bytes
 21615 ;; Hardware stack levels used:    1
 21616 ;; Hardware stack levels required when called:    5
 21617 ;; This function calls:
 21618 ;;		_LoadPointSelect
 21619 ;; This function is called by:
 21620 ;;		_setDimmerLights
 21621 ;; This function uses a non-reentrant model
 21622 ;;
 21623                           psect	text4964
 21624                           	file	"G:\Program\PIC\Source_File\OverLoad_B1.c"
 21625                           	line	342
 21626                           	global	__size_of_setLoad_StatusOn
 21627  0011                     	__size_of_setLoad_StatusOn	equ	__end_of_setLoad_StatusOn-_setLoad_StatusOn
 21628                           	
 21629  205A                     _setLoad_StatusOn:	
 21630                           	opt	stack 5
 21631                           ; Regs used in _setLoad_StatusOn: [wreg+fsr1l-status,0+pclath+cstack]
 21632                           ;setLoad_StatusOn@load stored from wreg
 21633  205A  0020               	movlb 0	; select bank0
 21634  205B  00A3               	movwf	(setLoad_StatusOn@load)
 21635                           	line	343
 21636                           	
 21637  205C                     l20936:	
 21638                           ;OverLoad_B1.c: 343: LoadPointSelect(load);
 21639  205C  0823               	movf	(setLoad_StatusOn@load),w
 21640  205D  31AE  2692  31A0   	fcall	_LoadPointSelect
 21641                           	line	344
 21642                           	
 21643  2060                     l20938:	
 21644                           ;OverLoad_B1.c: 344: Load->StatusOn=command;
 21645  2060  0020               	movlb 0	; select bank0
 21646  2061  086B               	movf	(_Load),w
 21647  2062  3E46               	addlw	046h
 21648  2063  0086               	movwf	fsr1l
 21649  2064  3002               	movlw 2	; select bank4/5
 21650  2065  0087               	movwf fsr1h	
 21651                           	
 21652  2066  0822               	movf	(setLoad_StatusOn@command),w
 21653  2067  1001               	bcf	indf1,0
 21654  2068  1D03               	skipz
 21655  2069  1401               	bsf	indf1,0
 21656                           	line	345
 21657                           	
 21658  206A                     l9628:	
 21659  206A  0008               	return
 21660                           	opt stack 0
 21661                           GLOBAL	__end_of_setLoad_StatusOn
 21662  206B                     	__end_of_setLoad_StatusOn:
 21663 ;; =============== function _setLoad_StatusOn ends ============
 21664                           
 21665                           	signat	_setLoad_StatusOn,8312
 21666                           	global	_setLED
 21667                           psect	text4965,local,class=CODE,delta=2
 21668                           global __ptext4965
 21669  11A4                     __ptext4965:
 21670                           
 21671 ;; *************** function _setLED *****************
 21672 ;; Defined at:
 21673 ;;		line 75 in file "G:\Program\PIC\Source_File\LED_B1.c"
 21674 ;; Parameters:    Size  Location     Type
 21675 ;;  led             1    wreg     unsigned char 
 21676 ;;  command         1    2[BANK0 ] unsigned char 
 21677 ;; Auto vars:     Size  Location     Type
 21678 ;;  led             1    3[BANK0 ] unsigned char 
 21679 ;; Return value:  Size  Location     Type
 21680 ;;		None               void
 21681 ;; Registers used:
 21682 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21683 ;; Tracked objects:
 21684 ;;		On entry : 0/0
 21685 ;;		On exit  : 0/0
 21686 ;;		Unchanged: 0/0
 21687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 21688 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 21689 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 21690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 21691 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 21692 ;;Total ram usage:        2 bytes
 21693 ;; Hardware stack levels used:    1
 21694 ;; Hardware stack levels required when called:    5
 21695 ;; This function calls:
 21696 ;;		_LedPointSelect
 21697 ;; This function is called by:
 21698 ;;		_setDimmerLights_ERROR
 21699 ;;		_setDimmerLights
 21700 ;;		_setLED_Initialization
 21701 ;;		_setLoad_ERROR
 21702 ;;		_setOverTemp_ERROR
 21703 ;;		_setPowerFault_ERROR
 21704 ;;		_Switch_Initialization
 21705 ;;		_setSw_Initialization
 21706 ;; This function uses a non-reentrant model
 21707 ;;
 21708                           psect	text4965
 21709                           	file	"G:\Program\PIC\Source_File\LED_B1.c"
 21710                           	line	75
 21711                           	global	__size_of_setLED
 21712  0087                     	__size_of_setLED	equ	__end_of_setLED-_setLED
 21713                           	
 21714  11A4                     _setLED:	
 21715                           	opt	stack 5
 21716                           ; Regs used in _setLED: [wreg+fsr1l-status,0+pclath+cstack]
 21717                           ;setLED@led stored from wreg
 21718  11A4  0020               	movlb 0	; select bank0
 21719  11A5  00A3               	movwf	(setLED@led)
 21720                           	line	76
 21721                           	
 21722  11A6                     l20886:	
 21723                           ;LED_B1.c: 76: LedPointSelect(led);
 21724  11A6  0823               	movf	(setLED@led),w
 21725  11A7  3198  2067  3191   	fcall	_LedPointSelect
 21726                           	line	77
 21727                           	
 21728  11AA                     l20888:	
 21729                           ;LED_B1.c: 77: if(command == 0)
 21730  11AA  0020               	movlb 0	; select bank0
 21731  11AB  08A2               	movf	(setLED@command),f
 21732  11AC  1D03               	skipz
 21733  11AD  29AF               	goto	u9481
 21734  11AE  29B0               	goto	u9480
 21735  11AF                     u9481:
 21736  11AF  29CB               	goto	l20902
 21737  11B0                     u9480:
 21738                           	line	80
 21739                           	
 21740  11B0                     l20890:	
 21741                           ;LED_B1.c: 78: {
 21742                           ;LED_B1.c: 80: if(led == 1)
 21743  11B0  0823               	movf	(setLED@led),w
 21744  11B1  3A01               	xorlw	01h&0ffh
 21745  11B2  1D03               	skipz
 21746  11B3  29B5               	goto	u9491
 21747  11B4  29B6               	goto	u9490
 21748  11B5                     u9491:
 21749  11B5  29B8               	goto	l20894
 21750  11B6                     u9490:
 21751                           	line	85
 21752                           	
 21753  11B6                     l20892:	
 21754                           ;LED_B1.c: 81: {
 21755                           ;LED_B1.c: 85: RC7=1;
 21756  11B6  178E               	bsf	(119/8),(119)&7
 21757                           	line	87
 21758                           ;LED_B1.c: 87: }
 21759  11B7  2A2A               	goto	l5968
 21760                           	line	90
 21761                           	
 21762  11B8                     l5947:	
 21763                           	
 21764  11B8                     l20894:	
 21765                           ;LED_B1.c: 90: else if(led == 2)
 21766  11B8  0823               	movf	(setLED@led),w
 21767  11B9  3A02               	xorlw	02h&0ffh
 21768  11BA  1D03               	skipz
 21769  11BB  29BD               	goto	u9501
 21770  11BC  29BE               	goto	u9500
 21771  11BD                     u9501:
 21772  11BD  29C0               	goto	l20898
 21773  11BE                     u9500:
 21774                           	line	95
 21775                           	
 21776  11BE                     l20896:	
 21777                           ;LED_B1.c: 91: {
 21778                           ;LED_B1.c: 95: RA3=1;
 21779  11BE  158C               	bsf	(99/8),(99)&7
 21780                           	line	97
 21781                           ;LED_B1.c: 97: }
 21782  11BF  2A2A               	goto	l5968
 21783                           	line	110
 21784                           	
 21785  11C0                     l5949:	
 21786                           	
 21787  11C0                     l20898:	
 21788                           ;LED_B1.c: 110: else if(led == 99)
 21789  11C0  0823               	movf	(setLED@led),w
 21790  11C1  3A63               	xorlw	063h&0ffh
 21791  11C2  1D03               	skipz
 21792  11C3  29C5               	goto	u9511
 21793  11C4  29C6               	goto	u9510
 21794  11C5                     u9511:
 21795  11C5  2A2A               	goto	l5968
 21796  11C6                     u9510:
 21797                           	line	115
 21798                           	
 21799  11C6                     l20900:	
 21800                           ;LED_B1.c: 111: {
 21801                           ;LED_B1.c: 115: RB5=1;
 21802  11C6  168D               	bsf	(109/8),(109)&7
 21803  11C7  2A2A               	goto	l5968
 21804                           	line	117
 21805                           	
 21806  11C8                     l5951:	
 21807  11C8  2A2A               	goto	l5968
 21808                           	line	119
 21809                           	
 21810  11C9                     l5950:	
 21811  11C9  2A2A               	goto	l5968
 21812                           	
 21813  11CA                     l5948:	
 21814                           ;LED_B1.c: 117: }
 21815                           ;LED_B1.c: 119: }
 21816  11CA  2A2A               	goto	l5968
 21817                           	line	120
 21818                           	
 21819  11CB                     l5946:	
 21820                           	
 21821  11CB                     l20902:	
 21822                           ;LED_B1.c: 120: else if(command == 1)
 21823  11CB  0822               	movf	(setLED@command),w
 21824  11CC  3A01               	xorlw	01h&0ffh
 21825  11CD  1D03               	skipz
 21826  11CE  29D0               	goto	u9521
 21827  11CF  29D1               	goto	u9520
 21828  11D0                     u9521:
 21829  11D0  29EC               	goto	l20916
 21830  11D1                     u9520:
 21831                           	line	123
 21832                           	
 21833  11D1                     l20904:	
 21834                           ;LED_B1.c: 121: {
 21835                           ;LED_B1.c: 123: if(led == 1)
 21836  11D1  0823               	movf	(setLED@led),w
 21837  11D2  3A01               	xorlw	01h&0ffh
 21838  11D3  1D03               	skipz
 21839  11D4  29D6               	goto	u9531
 21840  11D5  29D7               	goto	u9530
 21841  11D6                     u9531:
 21842  11D6  29D9               	goto	l20908
 21843  11D7                     u9530:
 21844                           	line	128
 21845                           	
 21846  11D7                     l20906:	
 21847                           ;LED_B1.c: 124: {
 21848                           ;LED_B1.c: 128: RC7=0;
 21849  11D7  138E               	bcf	(119/8),(119)&7
 21850                           	line	130
 21851                           ;LED_B1.c: 130: }
 21852  11D8  2A2A               	goto	l5968
 21853                           	line	133
 21854                           	
 21855  11D9                     l5954:	
 21856                           	
 21857  11D9                     l20908:	
 21858                           ;LED_B1.c: 133: else if(led == 2)
 21859  11D9  0823               	movf	(setLED@led),w
 21860  11DA  3A02               	xorlw	02h&0ffh
 21861  11DB  1D03               	skipz
 21862  11DC  29DE               	goto	u9541
 21863  11DD  29DF               	goto	u9540
 21864  11DE                     u9541:
 21865  11DE  29E1               	goto	l20912
 21866  11DF                     u9540:
 21867                           	line	138
 21868                           	
 21869  11DF                     l20910:	
 21870                           ;LED_B1.c: 134: {
 21871                           ;LED_B1.c: 138: RA3=0;
 21872  11DF  118C               	bcf	(99/8),(99)&7
 21873                           	line	140
 21874                           ;LED_B1.c: 140: }
 21875  11E0  2A2A               	goto	l5968
 21876                           	line	153
 21877                           	
 21878  11E1                     l5956:	
 21879                           	
 21880  11E1                     l20912:	
 21881                           ;LED_B1.c: 153: else if(led == 99)
 21882  11E1  0823               	movf	(setLED@led),w
 21883  11E2  3A63               	xorlw	063h&0ffh
 21884  11E3  1D03               	skipz
 21885  11E4  29E6               	goto	u9551
 21886  11E5  29E7               	goto	u9550
 21887  11E6                     u9551:
 21888  11E6  2A2A               	goto	l5968
 21889  11E7                     u9550:
 21890                           	line	158
 21891                           	
 21892  11E7                     l20914:	
 21893                           ;LED_B1.c: 154: {
 21894                           ;LED_B1.c: 158: RB5=0;
 21895  11E7  128D               	bcf	(109/8),(109)&7
 21896  11E8  2A2A               	goto	l5968
 21897                           	line	160
 21898                           	
 21899  11E9                     l5958:	
 21900  11E9  2A2A               	goto	l5968
 21901                           	line	162
 21902                           	
 21903  11EA                     l5957:	
 21904  11EA  2A2A               	goto	l5968
 21905                           	
 21906  11EB                     l5955:	
 21907                           ;LED_B1.c: 160: }
 21908                           ;LED_B1.c: 162: }
 21909  11EB  2A2A               	goto	l5968
 21910                           	line	163
 21911                           	
 21912  11EC                     l5953:	
 21913                           	
 21914  11EC                     l20916:	
 21915                           ;LED_B1.c: 163: else if(command == 10)
 21916  11EC  0822               	movf	(setLED@command),w
 21917  11ED  3A0A               	xorlw	0Ah&0ffh
 21918  11EE  1D03               	skipz
 21919  11EF  29F1               	goto	u9561
 21920  11F0  29F2               	goto	u9560
 21921  11F1                     u9561:
 21922  11F1  2A1B               	goto	l20932
 21923  11F2                     u9560:
 21924                           	line	165
 21925                           	
 21926  11F2                     l20918:	
 21927                           ;LED_B1.c: 164: {
 21928                           ;LED_B1.c: 165: LED->GO=0;
 21929  11F2  0021               	movlb 1	; select bank1
 21930  11F3  083A               	movf	(_LED)^080h,w
 21931  11F4  0086               	movwf	fsr1l
 21932  11F5  0187               	clrf fsr1h	
 21933                           	
 21934  11F6  1081               	bcf	indf1,1
 21935                           	line	166
 21936                           ;LED_B1.c: 166: LED->Time=0;
 21937  11F7  083A               	movf	(_LED)^080h,w
 21938  11F8  3E01               	addlw	01h
 21939  11F9  0086               	movwf	fsr1l
 21940  11FA  0187               	clrf fsr1h	
 21941                           	
 21942  11FB  3000               	movlw	low(0)
 21943  11FC  3FC0               	movwi	[0]fsr1
 21944  11FD  3000               	movlw	high(0)
 21945  11FE  3FC1               	movwi	[1]fsr1
 21946                           	line	168
 21947                           	
 21948  11FF                     l20920:	
 21949                           ;LED_B1.c: 168: if(led == 1)
 21950  11FF  0020               	movlb 0	; select bank0
 21951  1200  0823               	movf	(setLED@led),w
 21952  1201  3A01               	xorlw	01h&0ffh
 21953  1202  1D03               	skipz
 21954  1203  2A05               	goto	u9571
 21955  1204  2A06               	goto	u9570
 21956  1205                     u9571:
 21957  1205  2A08               	goto	l20924
 21958  1206                     u9570:
 21959                           	line	173
 21960                           	
 21961  1206                     l20922:	
 21962                           ;LED_B1.c: 169: {
 21963                           ;LED_B1.c: 173: RC7=1;
 21964  1206  178E               	bsf	(119/8),(119)&7
 21965                           	line	175
 21966                           ;LED_B1.c: 175: }
 21967  1207  2A2A               	goto	l5968
 21968                           	line	178
 21969                           	
 21970  1208                     l5961:	
 21971                           	
 21972  1208                     l20924:	
 21973                           ;LED_B1.c: 178: else if(led == 2)
 21974  1208  0823               	movf	(setLED@led),w
 21975  1209  3A02               	xorlw	02h&0ffh
 21976  120A  1D03               	skipz
 21977  120B  2A0D               	goto	u9581
 21978  120C  2A0E               	goto	u9580
 21979  120D                     u9581:
 21980  120D  2A10               	goto	l20928
 21981  120E                     u9580:
 21982                           	line	183
 21983                           	
 21984  120E                     l20926:	
 21985                           ;LED_B1.c: 179: {
 21986                           ;LED_B1.c: 183: RA3=1;
 21987  120E  158C               	bsf	(99/8),(99)&7
 21988                           	line	185
 21989                           ;LED_B1.c: 185: }
 21990  120F  2A2A               	goto	l5968
 21991                           	line	198
 21992                           	
 21993  1210                     l5963:	
 21994                           	
 21995  1210                     l20928:	
 21996                           ;LED_B1.c: 198: else if(led == 99)
 21997  1210  0823               	movf	(setLED@led),w
 21998  1211  3A63               	xorlw	063h&0ffh
 21999  1212  1D03               	skipz
 22000  1213  2A15               	goto	u9591
 22001  1214  2A16               	goto	u9590
 22002  1215                     u9591:
 22003  1215  2A2A               	goto	l5968
 22004  1216                     u9590:
 22005                           	line	203
 22006                           	
 22007  1216                     l20930:	
 22008                           ;LED_B1.c: 199: {
 22009                           ;LED_B1.c: 203: RB5=1;
 22010  1216  168D               	bsf	(109/8),(109)&7
 22011  1217  2A2A               	goto	l5968
 22012                           	line	205
 22013                           	
 22014  1218                     l5965:	
 22015  1218  2A2A               	goto	l5968
 22016                           	line	207
 22017                           	
 22018  1219                     l5964:	
 22019  1219  2A2A               	goto	l5968
 22020                           	
 22021  121A                     l5962:	
 22022                           ;LED_B1.c: 205: }
 22023                           ;LED_B1.c: 207: }
 22024  121A  2A2A               	goto	l5968
 22025                           	line	208
 22026                           	
 22027  121B                     l5960:	
 22028                           	
 22029  121B                     l20932:	
 22030                           ;LED_B1.c: 208: else if(command == 11)
 22031  121B  0822               	movf	(setLED@command),w
 22032  121C  3A0B               	xorlw	0Bh&0ffh
 22033  121D  1D03               	skipz
 22034  121E  2A20               	goto	u9601
 22035  121F  2A21               	goto	u9600
 22036  1220                     u9601:
 22037  1220  2A2A               	goto	l5968
 22038  1221                     u9600:
 22039                           	line	210
 22040                           	
 22041  1221                     l20934:	
 22042                           ;LED_B1.c: 209: {
 22043                           ;LED_B1.c: 210: LED->GO=1;
 22044  1221  0021               	movlb 1	; select bank1
 22045  1222  083A               	movf	(_LED)^080h,w
 22046  1223  0086               	movwf	fsr1l
 22047  1224  0187               	clrf fsr1h	
 22048                           	
 22049  1225  1481               	bsf	indf1,1
 22050  1226  2A2A               	goto	l5968
 22051                           	line	211
 22052                           	
 22053  1227                     l5967:	
 22054  1227  2A2A               	goto	l5968
 22055                           	line	212
 22056                           	
 22057  1228                     l5966:	
 22058  1228  2A2A               	goto	l5968
 22059                           	
 22060  1229                     l5959:	
 22061  1229  2A2A               	goto	l5968
 22062                           	
 22063  122A                     l5952:	
 22064                           	
 22065  122A                     l5968:	
 22066  122A  0008               	return
 22067                           	opt stack 0
 22068                           GLOBAL	__end_of_setLED
 22069  122B                     	__end_of_setLED:
 22070 ;; =============== function _setLED ends ============
 22071                           
 22072                           	signat	_setLED,8312
 22073                           	global	_setLoad_StatusOff
 22074                           psect	text4966,local,class=CODE,delta=2
 22075                           global __ptext4966
 22076  2586                     __ptext4966:
 22077                           
 22078 ;; *************** function _setLoad_StatusOff *****************
 22079 ;; Defined at:
 22080 ;;		line 347 in file "G:\Program\PIC\Source_File\OverLoad_B1.c"
 22081 ;; Parameters:    Size  Location     Type
 22082 ;;  load            1    wreg     unsigned char 
 22083 ;;  lights          1    2[BANK0 ] unsigned char 
 22084 ;;  command         1    3[BANK0 ] unsigned char 
 22085 ;; Auto vars:     Size  Location     Type
 22086 ;;  load            1    4[BANK0 ] unsigned char 
 22087 ;; Return value:  Size  Location     Type
 22088 ;;		None               void
 22089 ;; Registers used:
 22090 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22091 ;; Tracked objects:
 22092 ;;		On entry : 0/0
 22093 ;;		On exit  : 0/0
 22094 ;;		Unchanged: 0/0
 22095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 22096 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 22097 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 22098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 22099 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 22100 ;;Total ram usage:        3 bytes
 22101 ;; Hardware stack levels used:    1
 22102 ;; Hardware stack levels required when called:    5
 22103 ;; This function calls:
 22104 ;;		_LoadPointSelect
 22105 ;; This function is called by:
 22106 ;;		_setDimmerLights_ERROR
 22107 ;;		_setDimmerLights_Adj
 22108 ;; This function uses a non-reentrant model
 22109 ;;
 22110                           psect	text4966
 22111                           	file	"G:\Program\PIC\Source_File\OverLoad_B1.c"
 22112                           	line	347
 22113                           	global	__size_of_setLoad_StatusOff
 22114  0038                     	__size_of_setLoad_StatusOff	equ	__end_of_setLoad_StatusOff-_setLoad_StatusOff
 22115                           	
 22116  2586                     _setLoad_StatusOff:	
 22117                           	opt	stack 7
 22118                           ; Regs used in _setLoad_StatusOff: [wreg+fsr1l-status,0+pclath+cstack]
 22119                           ;setLoad_StatusOff@load stored from wreg
 22120  2586  0020               	movlb 0	; select bank0
 22121  2587  00A4               	movwf	(setLoad_StatusOff@load)
 22122                           	line	348
 22123                           	
 22124  2588                     l20870:	
 22125                           ;OverLoad_B1.c: 348: LoadPointSelect(load);
 22126  2588  0824               	movf	(setLoad_StatusOff@load),w
 22127  2589  31AE  2692  31A5   	fcall	_LoadPointSelect
 22128                           	line	349
 22129                           	
 22130  258C                     l20872:	
 22131                           ;OverLoad_B1.c: 349: Load->StatusOff=command;
 22132  258C  0020               	movlb 0	; select bank0
 22133  258D  086B               	movf	(_Load),w
 22134  258E  3E46               	addlw	046h
 22135  258F  0086               	movwf	fsr1l
 22136  2590  3002               	movlw 2	; select bank4/5
 22137  2591  0087               	movwf fsr1h	
 22138                           	
 22139  2592  0823               	movf	(setLoad_StatusOff@command),w
 22140  2593  1081               	bcf	indf1,1
 22141  2594  1D03               	skipz
 22142  2595  1481               	bsf	indf1,1
 22143                           	line	351
 22144                           	
 22145  2596                     l20874:	
 22146                           ;OverLoad_B1.c: 351: if(lights == 1)
 22147  2596  0822               	movf	(setLoad_StatusOff@lights),w
 22148  2597  3A01               	xorlw	01h&0ffh
 22149  2598  1D03               	skipz
 22150  2599  2D9B               	goto	u9451
 22151  259A  2D9C               	goto	u9450
 22152  259B                     u9451:
 22153  259B  2DA3               	goto	l20878
 22154  259C                     u9450:
 22155                           	line	353
 22156                           	
 22157  259C                     l20876:	
 22158                           ;OverLoad_B1.c: 352: {
 22159                           ;OverLoad_B1.c: 353: Load->Lights1Status=0;
 22160  259C  086B               	movf	(_Load),w
 22161  259D  3E43               	addlw	043h
 22162  259E  0086               	movwf	fsr1l
 22163  259F  3002               	movlw 2	; select bank4/5
 22164  25A0  0087               	movwf fsr1h	
 22165                           	
 22166  25A1  0181               	clrf	indf1
 22167  25A2  2DA3               	goto	l20878
 22168                           	line	354
 22169                           	
 22170  25A3                     l9631:	
 22171                           	line	355
 22172                           	
 22173  25A3                     l20878:	
 22174                           ;OverLoad_B1.c: 354: }
 22175                           ;OverLoad_B1.c: 355: if(lights == 2)
 22176  25A3  0822               	movf	(setLoad_StatusOff@lights),w
 22177  25A4  3A02               	xorlw	02h&0ffh
 22178  25A5  1D03               	skipz
 22179  25A6  2DA8               	goto	u9461
 22180  25A7  2DA9               	goto	u9460
 22181  25A8                     u9461:
 22182  25A8  2DB0               	goto	l20882
 22183  25A9                     u9460:
 22184                           	line	357
 22185                           	
 22186  25A9                     l20880:	
 22187                           ;OverLoad_B1.c: 356: {
 22188                           ;OverLoad_B1.c: 357: Load->Lights2Status=0;
 22189  25A9  086B               	movf	(_Load),w
 22190  25AA  3E44               	addlw	044h
 22191  25AB  0086               	movwf	fsr1l
 22192  25AC  3002               	movlw 2	; select bank4/5
 22193  25AD  0087               	movwf fsr1h	
 22194                           	
 22195  25AE  0181               	clrf	indf1
 22196  25AF  2DB0               	goto	l20882
 22197                           	line	358
 22198                           	
 22199  25B0                     l9632:	
 22200                           	line	359
 22201                           	
 22202  25B0                     l20882:	
 22203                           ;OverLoad_B1.c: 358: }
 22204                           ;OverLoad_B1.c: 359: if(lights == 3)
 22205  25B0  0822               	movf	(setLoad_StatusOff@lights),w
 22206  25B1  3A03               	xorlw	03h&0ffh
 22207  25B2  1D03               	skipz
 22208  25B3  2DB5               	goto	u9471
 22209  25B4  2DB6               	goto	u9470
 22210  25B5                     u9471:
 22211  25B5  2DBD               	goto	l9634
 22212  25B6                     u9470:
 22213                           	line	361
 22214                           	
 22215  25B6                     l20884:	
 22216                           ;OverLoad_B1.c: 360: {
 22217                           ;OverLoad_B1.c: 361: Load->Lights3Status=0;
 22218  25B6  086B               	movf	(_Load),w
 22219  25B7  3E45               	addlw	045h
 22220  25B8  0086               	movwf	fsr1l
 22221  25B9  3002               	movlw 2	; select bank4/5
 22222  25BA  0087               	movwf fsr1h	
 22223                           	
 22224  25BB  0181               	clrf	indf1
 22225  25BC  2DBD               	goto	l9634
 22226                           	line	362
 22227                           	
 22228  25BD                     l9633:	
 22229                           	line	363
 22230                           	
 22231  25BD                     l9634:	
 22232  25BD  0008               	return
 22233                           	opt stack 0
 22234                           GLOBAL	__end_of_setLoad_StatusOff
 22235  25BE                     	__end_of_setLoad_StatusOff:
 22236 ;; =============== function _setLoad_StatusOff ends ============
 22237                           
 22238                           	signat	_setLoad_StatusOff,12408
 22239                           	global	_setDimmerLights_TriggerERROR
 22240                           psect	text4967,local,class=CODE,delta=2
 22241                           global __ptext4967
 22242  262F                     __ptext4967:
 22243                           
 22244 ;; *************** function _setDimmerLights_TriggerERROR *****************
 22245 ;; Defined at:
 22246 ;;		line 350 in file "G:\Program\PIC\Source_File\Dimmer_B1.c"
 22247 ;; Parameters:    Size  Location     Type
 22248 ;;  lights          1    wreg     unsigned char 
 22249 ;;  command         1    2[BANK0 ] unsigned char 
 22250 ;; Auto vars:     Size  Location     Type
 22251 ;;  lights          1    4[BANK0 ] unsigned char 
 22252 ;; Return value:  Size  Location     Type
 22253 ;;		None               void
 22254 ;; Registers used:
 22255 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22256 ;; Tracked objects:
 22257 ;;		On entry : 0/0
 22258 ;;		On exit  : 0/0
 22259 ;;		Unchanged: 0/0
 22260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 22261 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 22262 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 22263 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 22264 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 22265 ;;Total ram usage:        3 bytes
 22266 ;; Hardware stack levels used:    1
 22267 ;; Hardware stack levels required when called:    5
 22268 ;; This function calls:
 22269 ;;		_DimmerLightsPointSelect
 22270 ;; This function is called by:
 22271 ;;		_DimmerLights_ERROR
 22272 ;; This function uses a non-reentrant model
 22273 ;;
 22274                           psect	text4967
 22275                           	file	"G:\Program\PIC\Source_File\Dimmer_B1.c"
 22276                           	line	350
 22277                           	global	__size_of_setDimmerLights_TriggerERROR
 22278  003E                     	__size_of_setDimmerLights_TriggerERROR	equ	__end_of_setDimmerLights_TriggerERROR-_setDi
                                 mmerLights_TriggerERROR
 22279                           	
 22280  262F                     _setDimmerLights_TriggerERROR:	
 22281                           	opt	stack 6
 22282                           ; Regs used in _setDimmerLights_TriggerERROR: [wreg+fsr1l-status,0+pclath+cstack]
 22283                           ;setDimmerLights_TriggerERROR@lights stored from wreg
 22284  262F  0020               	movlb 0	; select bank0
 22285  2630  00A4               	movwf	(setDimmerLights_TriggerERROR@lights)
 22286                           	line	351
 22287                           	
 22288  2631                     l18998:	
 22289                           ;Dimmer_B1.c: 351: DimmerLightsPointSelect(lights);
 22290  2631  0824               	movf	(setDimmerLights_TriggerERROR@lights),w
 22291  2632  31AE  2684  31A6   	fcall	_DimmerLightsPointSelect
 22292                           	line	352
 22293                           	
 22294  2635                     l19000:	
 22295                           ;Dimmer_B1.c: 352: DimmerLights->Trigger=command;
 22296  2635  0020               	movlb 0	; select bank0
 22297  2636  086A               	movf	(_DimmerLights),w
 22298  2637  3E09               	addlw	09h
 22299  2638  0086               	movwf	fsr1l
 22300  2639  3001               	movlw 1	; select bank2/3
 22301  263A  0087               	movwf fsr1h	
 22302                           	
 22303  263B  0822               	movf	(setDimmerLights_TriggerERROR@command),w
 22304  263C  1081               	bcf	indf1,1
 22305  263D  1D03               	skipz
 22306  263E  1481               	bsf	indf1,1
 22307                           	line	353
 22308                           	
 22309  263F                     l19002:	
 22310                           ;Dimmer_B1.c: 353: DimmerLights->Switch=command;
 22311  263F  086A               	movf	(_DimmerLights),w
 22312  2640  3E09               	addlw	09h
 22313  2641  0086               	movwf	fsr1l
 22314  2642  3001               	movlw 1	; select bank2/3
 22315  2643  0087               	movwf fsr1h	
 22316                           	
 22317  2644  0822               	movf	(setDimmerLights_TriggerERROR@command),w
 22318  2645  1001               	bcf	indf1,0
 22319  2646  1D03               	skipz
 22320  2647  1401               	bsf	indf1,0
 22321                           	line	354
 22322                           	
 22323  2648                     l19004:	
 22324                           ;Dimmer_B1.c: 354: DimmerLights->TriggerAdj=command;
 22325  2648  086A               	movf	(_DimmerLights),w
 22326  2649  3E09               	addlw	09h
 22327  264A  0086               	movwf	fsr1l
 22328  264B  3001               	movlw 1	; select bank2/3
 22329  264C  0087               	movwf fsr1h	
 22330                           	
 22331  264D  0822               	movf	(setDimmerLights_TriggerERROR@command),w
 22332  264E  1181               	bcf	indf1,3
 22333  264F  1D03               	skipz
 22334  2650  1581               	bsf	indf1,3
 22335                           	line	355
 22336                           	
 22337  2651                     l19006:	
 22338                           ;Dimmer_B1.c: 355: DimmerLights->AdjGo=command;
 22339  2651  086A               	movf	(_DimmerLights),w
 22340  2652  3E09               	addlw	09h
 22341  2653  0086               	movwf	fsr1l
 22342  2654  3001               	movlw 1	; select bank2/3
 22343  2655  0087               	movwf fsr1h	
 22344                           	
 22345  2656  0822               	movf	(setDimmerLights_TriggerERROR@command),w
 22346  2657  1101               	bcf	indf1,2
 22347  2658  1D03               	skipz
 22348  2659  1501               	bsf	indf1,2
 22349                           	line	356
 22350                           	
 22351  265A                     l19008:	
 22352                           ;Dimmer_B1.c: 356: DimmerLights->Open=!command;
 22353  265A  0822               	movf	(setDimmerLights_TriggerERROR@command),w
 22354  265B  3A00               	xorlw	0&0ffh
 22355  265C  3000               	movlw	0
 22356  265D  1903               	skipnz
 22357  265E  3001               	movlw	1
 22358  265F  00A3               	movwf	(??_setDimmerLights_TriggerERROR+0)+0
 22359  2660  086A               	movf	(_DimmerLights),w
 22360  2661  3E09               	addlw	09h
 22361  2662  0086               	movwf	fsr1l
 22362  2663  3001               	movlw 1	; select bank2/3
 22363  2664  0087               	movwf fsr1h	
 22364                           	
 22365  2665  0EA3               	swapf	(??_setDimmerLights_TriggerERROR+0)+0,f
 22366  2666  0DA3               	rlf	(??_setDimmerLights_TriggerERROR+0)+0,f
 22367  2667  0801               	movf	indf1,w
 22368  2668  0623               	xorwf	(??_setDimmerLights_TriggerERROR+0)+0,w
 22369  2669  39DF               	andlw	not (((1<<1)-1)<<5)
 22370  266A  0623               	xorwf	(??_setDimmerLights_TriggerERROR+0)+0,w
 22371  266B  0081               	movwf	indf1
 22372                           	line	357
 22373                           	
 22374  266C                     l4745:	
 22375  266C  0008               	return
 22376                           	opt stack 0
 22377                           GLOBAL	__end_of_setDimmerLights_TriggerERROR
 22378  266D                     	__end_of_setDimmerLights_TriggerERROR:
 22379 ;; =============== function _setDimmerLights_TriggerERROR ends ============
 22380                           
 22381                           	signat	_setDimmerLights_TriggerERROR,8312
 22382                           	global	_getDimmer_PFERROR
 22383                           psect	text4968,local,class=CODE,delta=2
 22384                           global __ptext4968
 22385  2F05                     __ptext4968:
 22386                           
 22387 ;; *************** function _getDimmer_PFERROR *****************
 22388 ;; Defined at:
 22389 ;;		line 536 in file "G:\Program\PIC\Source_File\Dimmer_B1.c"
 22390 ;; Parameters:    Size  Location     Type
 22391 ;;  dimmer          1    wreg     unsigned char 
 22392 ;; Auto vars:     Size  Location     Type
 22393 ;;  dimmer          1    2[BANK0 ] unsigned char 
 22394 ;; Return value:  Size  Location     Type
 22395 ;;                  1    wreg      unsigned char 
 22396 ;; Registers used:
 22397 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22398 ;; Tracked objects:
 22399 ;;		On entry : 0/0
 22400 ;;		On exit  : 0/0
 22401 ;;		Unchanged: 0/0
 22402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 22403 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 22404 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 22405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 22406 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 22407 ;;Total ram usage:        1 bytes
 22408 ;; Hardware stack levels used:    1
 22409 ;; Hardware stack levels required when called:    5
 22410 ;; This function calls:
 22411 ;;		_DimmerPointSelect
 22412 ;; This function is called by:
 22413 ;;		_DimmerLights_ERROR
 22414 ;; This function uses a non-reentrant model
 22415 ;;
 22416                           psect	text4968
 22417                           	file	"G:\Program\PIC\Source_File\Dimmer_B1.c"
 22418                           	line	536
 22419                           	global	__size_of_getDimmer_PFERROR
 22420  000F                     	__size_of_getDimmer_PFERROR	equ	__end_of_getDimmer_PFERROR-_getDimmer_PFERROR
 22421                           	
 22422  2F05                     _getDimmer_PFERROR:	
 22423                           	opt	stack 6
 22424                           ; Regs used in _getDimmer_PFERROR: [wreg+fsr1l-status,0+pclath+cstack]
 22425                           ;getDimmer_PFERROR@dimmer stored from wreg
 22426  2F05  0020               	movlb 0	; select bank0
 22427  2F06  00A2               	movwf	(getDimmer_PFERROR@dimmer)
 22428                           	line	537
 22429                           	
 22430  2F07                     l20864:	
 22431                           ;Dimmer_B1.c: 537: DimmerPointSelect(dimmer);
 22432  2F07  0822               	movf	(getDimmer_PFERROR@dimmer),w
 22433  2F08  31AE  26D8  31AF   	fcall	_DimmerPointSelect
 22434                           	line	538
 22435                           	
 22436  2F0B                     l20866:	
 22437                           ;Dimmer_B1.c: 538: return Dimmer->PFERROR;
 22438  2F0B  0021               	movlb 1	; select bank1
 22439  2F0C  0838               	movf	(_Dimmer)^080h,w
 22440  2F0D  0086               	movwf	fsr1l
 22441  2F0E  0187               	clrf fsr1h	
 22442                           	
 22443  2F0F  0C01               	rrf	indf1,w
 22444  2F10  0C89               	rrf	wreg,f
 22445  2F11  3901               	andlw	(1<<1)-1
 22446  2F12  2F13               	goto	l4821
 22447                           	
 22448  2F13                     l20868:	
 22449                           	line	539
 22450                           	
 22451  2F13                     l4821:	
 22452  2F13  0008               	return
 22453                           	opt stack 0
 22454                           GLOBAL	__end_of_getDimmer_PFERROR
 22455  2F14                     	__end_of_getDimmer_PFERROR:
 22456 ;; =============== function _getDimmer_PFERROR ends ============
 22457                           
 22458                           	signat	_getDimmer_PFERROR,4217
 22459                           	global	_getDimmer_LoadERROR
 22460                           psect	text4969,local,class=CODE,delta=2
 22461                           global __ptext4969
 22462  2ECA                     __ptext4969:
 22463                           
 22464 ;; *************** function _getDimmer_LoadERROR *****************
 22465 ;; Defined at:
 22466 ;;		line 531 in file "G:\Program\PIC\Source_File\Dimmer_B1.c"
 22467 ;; Parameters:    Size  Location     Type
 22468 ;;  dimmer          1    wreg     unsigned char 
 22469 ;; Auto vars:     Size  Location     Type
 22470 ;;  dimmer          1    2[BANK0 ] unsigned char 
 22471 ;; Return value:  Size  Location     Type
 22472 ;;                  1    wreg      unsigned char 
 22473 ;; Registers used:
 22474 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22475 ;; Tracked objects:
 22476 ;;		On entry : 0/0
 22477 ;;		On exit  : 0/0
 22478 ;;		Unchanged: 0/0
 22479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 22480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 22481 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 22482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 22483 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 22484 ;;Total ram usage:        1 bytes
 22485 ;; Hardware stack levels used:    1
 22486 ;; Hardware stack levels required when called:    5
 22487 ;; This function calls:
 22488 ;;		_DimmerPointSelect
 22489 ;; This function is called by:
 22490 ;;		_DimmerLights_ERROR
 22491 ;; This function uses a non-reentrant model
 22492 ;;
 22493                           psect	text4969
 22494                           	file	"G:\Program\PIC\Source_File\Dimmer_B1.c"
 22495                           	line	531
 22496                           	global	__size_of_getDimmer_LoadERROR
 22497  000E                     	__size_of_getDimmer_LoadERROR	equ	__end_of_getDimmer_LoadERROR-_getDimmer_LoadERROR
 22498                           	
 22499  2ECA                     _getDimmer_LoadERROR:	
 22500                           	opt	stack 6
 22501                           ; Regs used in _getDimmer_LoadERROR: [wreg+fsr1l-status,0+pclath+cstack]
 22502                           ;getDimmer_LoadERROR@dimmer stored from wreg
 22503  2ECA  0020               	movlb 0	; select bank0
 22504  2ECB  00A2               	movwf	(getDimmer_LoadERROR@dimmer)
 22505                           	line	532
 22506                           	
 22507  2ECC                     l20858:	
 22508                           ;Dimmer_B1.c: 532: DimmerPointSelect(dimmer);
 22509  2ECC  0822               	movf	(getDimmer_LoadERROR@dimmer),w
 22510  2ECD  31AE  26D8  31AE   	fcall	_DimmerPointSelect
 22511                           	line	533
 22512                           	
 22513  2ED0                     l20860:	
 22514                           ;Dimmer_B1.c: 533: return Dimmer->LoadERROR;
 22515  2ED0  0021               	movlb 1	; select bank1
 22516  2ED1  0838               	movf	(_Dimmer)^080h,w
 22517  2ED2  0086               	movwf	fsr1l
 22518  2ED3  0187               	clrf fsr1h	
 22519                           	
 22520  2ED4  0801               	movf	indf1,w
 22521  2ED5  3901               	andlw	(1<<1)-1
 22522  2ED6  2ED7               	goto	l4818
 22523                           	
 22524  2ED7                     l20862:	
 22525                           	line	534
 22526                           	
 22527  2ED7                     l4818:	
 22528  2ED7  0008               	return
 22529                           	opt stack 0
 22530                           GLOBAL	__end_of_getDimmer_LoadERROR
 22531  2ED8                     	__end_of_getDimmer_LoadERROR:
 22532 ;; =============== function _getDimmer_LoadERROR ends ============
 22533                           
 22534                           	signat	_getDimmer_LoadERROR,4217
 22535                           	global	_getDimmer_TempERROR
 22536                           psect	text4970,local,class=CODE,delta=2
 22537                           global __ptext4970
 22538  2EBC                     __ptext4970:
 22539                           
 22540 ;; *************** function _getDimmer_TempERROR *****************
 22541 ;; Defined at:
 22542 ;;		line 526 in file "G:\Program\PIC\Source_File\Dimmer_B1.c"
 22543 ;; Parameters:    Size  Location     Type
 22544 ;;  dimmer          1    wreg     unsigned char 
 22545 ;; Auto vars:     Size  Location     Type
 22546 ;;  dimmer          1    2[BANK0 ] unsigned char 
 22547 ;; Return value:  Size  Location     Type
 22548 ;;                  1    wreg      unsigned char 
 22549 ;; Registers used:
 22550 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22551 ;; Tracked objects:
 22552 ;;		On entry : 0/0
 22553 ;;		On exit  : 0/0
 22554 ;;		Unchanged: 0/0
 22555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 22556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 22557 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 22558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 22559 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 22560 ;;Total ram usage:        1 bytes
 22561 ;; Hardware stack levels used:    1
 22562 ;; Hardware stack levels required when called:    5
 22563 ;; This function calls:
 22564 ;;		_DimmerPointSelect
 22565 ;; This function is called by:
 22566 ;;		_DimmerLights_ERROR
 22567 ;; This function uses a non-reentrant model
 22568 ;;
 22569                           psect	text4970
 22570                           	file	"G:\Program\PIC\Source_File\Dimmer_B1.c"
 22571                           	line	526
 22572                           	global	__size_of_getDimmer_TempERROR
 22573  000E                     	__size_of_getDimmer_TempERROR	equ	__end_of_getDimmer_TempERROR-_getDimmer_TempERROR
 22574                           	
 22575  2EBC                     _getDimmer_TempERROR:	
 22576                           	opt	stack 6
 22577                           ; Regs used in _getDimmer_TempERROR: [wreg+fsr1l-status,0+pclath+cstack]
 22578                           ;getDimmer_TempERROR@dimmer stored from wreg
 22579  2EBC  0020               	movlb 0	; select bank0
 22580  2EBD  00A2               	movwf	(getDimmer_TempERROR@dimmer)
 22581                           	line	527
 22582                           	
 22583  2EBE                     l20852:	
 22584                           ;Dimmer_B1.c: 527: DimmerPointSelect(dimmer);
 22585  2EBE  0822               	movf	(getDimmer_TempERROR@dimmer),w
 22586  2EBF  31AE  26D8  31AE   	fcall	_DimmerPointSelect
 22587                           	line	528
 22588                           	
 22589  2EC2                     l20854:	
 22590                           ;Dimmer_B1.c: 528: return Dimmer->TempERROR;
 22591  2EC2  0021               	movlb 1	; select bank1
 22592  2EC3  0838               	movf	(_Dimmer)^080h,w
 22593  2EC4  0086               	movwf	fsr1l
 22594  2EC5  0187               	clrf fsr1h	
 22595                           	
 22596  2EC6  0C01               	rrf	indf1,w
 22597  2EC7  3901               	andlw	(1<<1)-1
 22598  2EC8  2EC9               	goto	l4815
 22599                           	
 22600  2EC9                     l20856:	
 22601                           	line	529
 22602                           	
 22603  2EC9                     l4815:	
 22604  2EC9  0008               	return
 22605                           	opt stack 0
 22606                           GLOBAL	__end_of_getDimmer_TempERROR
 22607  2ECA                     	__end_of_getDimmer_TempERROR:
 22608 ;; =============== function _getDimmer_TempERROR ends ============
 22609                           
 22610                           	signat	_getDimmer_TempERROR,4217
 22611                           	global	_getDimmerLights_Trigger
 22612                           psect	text4971,local,class=CODE,delta=2
 22613                           global __ptext4971
 22614  2318                     __ptext4971:
 22615                           
 22616 ;; *************** function _getDimmerLights_Trigger *****************
 22617 ;; Defined at:
 22618 ;;		line 254 in file "G:\Program\PIC\Source_File\Dimmer_B1.c"
 22619 ;; Parameters:    Size  Location     Type
 22620 ;;		None
 22621 ;; Auto vars:     Size  Location     Type
 22622 ;;  i               1    5[BANK0 ] unsigned char 
 22623 ;;  Status          1    4[BANK0 ] unsigned char 
 22624 ;;  length          1    3[BANK0 ] unsigned char 
 22625 ;; Return value:  Size  Location     Type
 22626 ;;                  1    wreg      unsigned char 
 22627 ;; Registers used:
 22628 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22629 ;; Tracked objects:
 22630 ;;		On entry : 0/0
 22631 ;;		On exit  : 0/0
 22632 ;;		Unchanged: 0/0
 22633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 22634 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 22635 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 22636 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 22637 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 22638 ;;Total ram usage:        4 bytes
 22639 ;; Hardware stack levels used:    1
 22640 ;; Hardware stack levels required when called:    5
 22641 ;; This function calls:
 22642 ;;		_DimmerLightsPointSelect
 22643 ;; This function is called by:
 22644 ;;		_setDimmerLights_Main
 22645 ;; This function uses a non-reentrant model
 22646 ;;
 22647                           psect	text4971
 22648                           	file	"G:\Program\PIC\Source_File\Dimmer_B1.c"
 22649                           	line	254
 22650                           	global	__size_of_getDimmerLights_Trigger
 22651  0028                     	__size_of_getDimmerLights_Trigger	equ	__end_of_getDimmerLights_Trigger-_getDimmerLights
                                 _Trigger
 22652                           	
 22653  2318                     _getDimmerLights_Trigger:	
 22654                           	opt	stack 8
 22655                           ; Regs used in _getDimmerLights_Trigger: [wreg+fsr1l-status,0+pclath+cstack]
 22656                           	line	255
 22657                           	
 22658  2318                     l18962:	
 22659                           ;Dimmer_B1.c: 255: char Status=0,i,length;
 22660  2318  0020               	movlb 0	; select bank0
 22661  2319  01A4               	clrf	(getDimmerLights_Trigger@Status)
 22662                           	line	262
 22663                           	
 22664  231A                     l18964:	
 22665                           ;Dimmer_B1.c: 262: length=1;
 22666  231A  01A3               	clrf	(getDimmerLights_Trigger@length)
 22667  231B  1403               	bsf	status,0
 22668  231C  0DA3               	rlf	(getDimmerLights_Trigger@length),f
 22669                           	line	266
 22670                           	
 22671  231D                     l18966:	
 22672                           ;Dimmer_B1.c: 266: for(i=0 ; i<length ; i++)
 22673  231D  01A5               	clrf	(getDimmerLights_Trigger@i)
 22674  231E  2B36               	goto	l4724
 22675                           	line	267
 22676                           	
 22677  231F                     l4725:	
 22678                           	line	268
 22679                           	
 22680  231F                     l18968:	
 22681                           ;Dimmer_B1.c: 267: {
 22682                           ;Dimmer_B1.c: 268: DimmerLightsPointSelect(i+1);
 22683  231F  0825               	movf	(getDimmerLights_Trigger@i),w
 22684  2320  3E01               	addlw	01h
 22685  2321  31AE  2684  31A3   	fcall	_DimmerLightsPointSelect
 22686                           	line	269
 22687                           	
 22688  2324                     l18970:	
 22689                           ;Dimmer_B1.c: 269: if(DimmerLights->Trigger)
 22690  2324  0020               	movlb 0	; select bank0
 22691  2325  086A               	movf	(_DimmerLights),w
 22692  2326  3E09               	addlw	09h
 22693  2327  0086               	movwf	fsr1l
 22694  2328  3001               	movlw 1	; select bank2/3
 22695  2329  0087               	movwf fsr1h	
 22696                           	
 22697  232A  1C81               	btfss	indf1,1
 22698  232B  2B2D               	goto	u6731
 22699  232C  2B2E               	goto	u6730
 22700  232D                     u6731:
 22701  232D  2B32               	goto	l18974
 22702  232E                     u6730:
 22703                           	line	271
 22704                           	
 22705  232E                     l18972:	
 22706                           ;Dimmer_B1.c: 270: {
 22707                           ;Dimmer_B1.c: 271: Status=1;
 22708  232E  01A4               	clrf	(getDimmerLights_Trigger@Status)
 22709  232F  1403               	bsf	status,0
 22710  2330  0DA4               	rlf	(getDimmerLights_Trigger@Status),f
 22711  2331  2B32               	goto	l18974
 22712                           	line	272
 22713                           	
 22714  2332                     l4726:	
 22715                           	line	266
 22716                           	
 22717  2332                     l18974:	
 22718  2332  3001               	movlw	(01h)
 22719  2333  00A2               	movwf	(??_getDimmerLights_Trigger+0)+0
 22720  2334  0822               	movf	(??_getDimmerLights_Trigger+0)+0,w
 22721  2335  07A5               	addwf	(getDimmerLights_Trigger@i),f
 22722                           	
 22723  2336                     l4724:	
 22724  2336  0823               	movf	(getDimmerLights_Trigger@length),w
 22725  2337  0225               	subwf	(getDimmerLights_Trigger@i),w
 22726  2338  1C03               	skipc
 22727  2339  2B3B               	goto	u6741
 22728  233A  2B3C               	goto	u6740
 22729  233B                     u6741:
 22730  233B  2B1F               	goto	l18968
 22731  233C                     u6740:
 22732  233C  2B3D               	goto	l18976
 22733                           	
 22734  233D                     l4727:	
 22735                           	line	274
 22736                           	
 22737  233D                     l18976:	
 22738                           ;Dimmer_B1.c: 272: }
 22739                           ;Dimmer_B1.c: 273: }
 22740                           ;Dimmer_B1.c: 274: return Status;
 22741  233D  0824               	movf	(getDimmerLights_Trigger@Status),w
 22742  233E  2B3F               	goto	l4728
 22743                           	
 22744  233F                     l18978:	
 22745                           	line	275
 22746                           	
 22747  233F                     l4728:	
 22748  233F  0008               	return
 22749                           	opt stack 0
 22750                           GLOBAL	__end_of_getDimmerLights_Trigger
 22751  2340                     	__end_of_getDimmerLights_Trigger:
 22752 ;; =============== function _getDimmerLights_Trigger ends ============
 22753                           
 22754                           	signat	_getDimmerLights_Trigger,89
 22755                           	global	_setDimmerLights_Close
 22756                           psect	text4972,local,class=CODE,delta=2
 22757                           global __ptext4972
 22758  2049                     __ptext4972:
 22759                           
 22760 ;; *************** function _setDimmerLights_Close *****************
 22761 ;; Defined at:
 22762 ;;		line 475 in file "G:\Program\PIC\Source_File\Dimmer_B1.c"
 22763 ;; Parameters:    Size  Location     Type
 22764 ;;  lights          1    wreg     unsigned char 
 22765 ;;  command         1    2[BANK0 ] unsigned char 
 22766 ;; Auto vars:     Size  Location     Type
 22767 ;;  lights          1    3[BANK0 ] unsigned char 
 22768 ;; Return value:  Size  Location     Type
 22769 ;;		None               void
 22770 ;; Registers used:
 22771 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22772 ;; Tracked objects:
 22773 ;;		On entry : 0/0
 22774 ;;		On exit  : 0/0
 22775 ;;		Unchanged: 0/0
 22776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 22777 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 22778 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 22779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 22780 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 22781 ;;Total ram usage:        2 bytes
 22782 ;; Hardware stack levels used:    1
 22783 ;; Hardware stack levels required when called:    5
 22784 ;; This function calls:
 22785 ;;		_DimmerLightsPointSelect
 22786 ;; This function is called by:
 22787 ;;		_setDimmerLights_Main
 22788 ;; This function uses a non-reentrant model
 22789 ;;
 22790                           psect	text4972
 22791                           	file	"G:\Program\PIC\Source_File\Dimmer_B1.c"
 22792                           	line	475
 22793                           	global	__size_of_setDimmerLights_Close
 22794  0011                     	__size_of_setDimmerLights_Close	equ	__end_of_setDimmerLights_Close-_setDimmerLights_Clo
                                 se
 22795                           	
 22796  2049                     _setDimmerLights_Close:	
 22797                           	opt	stack 8
 22798                           ; Regs used in _setDimmerLights_Close: [wreg+fsr1l-status,0+pclath+cstack]
 22799                           ;setDimmerLights_Close@lights stored from wreg
 22800  2049  0020               	movlb 0	; select bank0
 22801  204A  00A3               	movwf	(setDimmerLights_Close@lights)
 22802                           	line	476
 22803                           	
 22804  204B                     l20848:	
 22805                           ;Dimmer_B1.c: 476: DimmerLightsPointSelect(lights);
 22806  204B  0823               	movf	(setDimmerLights_Close@lights),w
 22807  204C  31AE  2684  31A0   	fcall	_DimmerLightsPointSelect
 22808                           	line	477
 22809                           	
 22810  204F                     l20850:	
 22811                           ;Dimmer_B1.c: 477: DimmerLights->Close=command;
 22812  204F  0020               	movlb 0	; select bank0
 22813  2050  086A               	movf	(_DimmerLights),w
 22814  2051  3E09               	addlw	09h
 22815  2052  0086               	movwf	fsr1l
 22816  2053  3001               	movlw 1	; select bank2/3
 22817  2054  0087               	movwf fsr1h	
 22818                           	
 22819  2055  0822               	movf	(setDimmerLights_Close@command),w
 22820  2056  1301               	bcf	indf1,6
 22821  2057  1D03               	skipz
 22822  2058  1701               	bsf	indf1,6
 22823                           	line	478
 22824                           	
 22825  2059                     l4787:	
 22826  2059  0008               	return
 22827                           	opt stack 0
 22828                           GLOBAL	__end_of_setDimmerLights_Close
 22829  205A                     	__end_of_setDimmerLights_Close:
 22830 ;; =============== function _setDimmerLights_Close ends ============
 22831                           
 22832                           	signat	_setDimmerLights_Close,8312
 22833                           	global	_setDimmerLights_Open
 22834                           psect	text4973,local,class=CODE,delta=2
 22835                           global __ptext4973
 22836  2038                     __ptext4973:
 22837                           
 22838 ;; *************** function _setDimmerLights_Open *****************
 22839 ;; Defined at:
 22840 ;;		line 465 in file "G:\Program\PIC\Source_File\Dimmer_B1.c"
 22841 ;; Parameters:    Size  Location     Type
 22842 ;;  lights          1    wreg     unsigned char 
 22843 ;;  command         1    2[BANK0 ] unsigned char 
 22844 ;; Auto vars:     Size  Location     Type
 22845 ;;  lights          1    3[BANK0 ] unsigned char 
 22846 ;; Return value:  Size  Location     Type
 22847 ;;		None               void
 22848 ;; Registers used:
 22849 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22850 ;; Tracked objects:
 22851 ;;		On entry : 0/0
 22852 ;;		On exit  : 0/0
 22853 ;;		Unchanged: 0/0
 22854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 22855 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 22856 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 22857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 22858 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 22859 ;;Total ram usage:        2 bytes
 22860 ;; Hardware stack levels used:    1
 22861 ;; Hardware stack levels required when called:    5
 22862 ;; This function calls:
 22863 ;;		_DimmerLightsPointSelect
 22864 ;; This function is called by:
 22865 ;;		_setDimmerLights_Main
 22866 ;;		_setLoad_Main
 22867 ;; This function uses a non-reentrant model
 22868 ;;
 22869                           psect	text4973
 22870                           	file	"G:\Program\PIC\Source_File\Dimmer_B1.c"
 22871                           	line	465
 22872                           	global	__size_of_setDimmerLights_Open
 22873  0011                     	__size_of_setDimmerLights_Open	equ	__end_of_setDimmerLights_Open-_setDimmerLights_Open
 22874                           	
 22875  2038                     _setDimmerLights_Open:	
 22876                           	opt	stack 8
 22877                           ; Regs used in _setDimmerLights_Open: [wreg+fsr1l-status,0+pclath+cstack]
 22878                           ;setDimmerLights_Open@lights stored from wreg
 22879  2038  0020               	movlb 0	; select bank0
 22880  2039  00A3               	movwf	(setDimmerLights_Open@lights)
 22881                           	line	466
 22882                           	
 22883  203A                     l20844:	
 22884                           ;Dimmer_B1.c: 466: DimmerLightsPointSelect(lights);
 22885  203A  0823               	movf	(setDimmerLights_Open@lights),w
 22886  203B  31AE  2684  31A0   	fcall	_DimmerLightsPointSelect
 22887                           	line	467
 22888                           	
 22889  203E                     l20846:	
 22890                           ;Dimmer_B1.c: 467: DimmerLights->Open=command;
 22891  203E  0020               	movlb 0	; select bank0
 22892  203F  086A               	movf	(_DimmerLights),w
 22893  2040  3E09               	addlw	09h
 22894  2041  0086               	movwf	fsr1l
 22895  2042  3001               	movlw 1	; select bank2/3
 22896  2043  0087               	movwf fsr1h	
 22897                           	
 22898  2044  0822               	movf	(setDimmerLights_Open@command),w
 22899  2045  1281               	bcf	indf1,5
 22900  2046  1D03               	skipz
 22901  2047  1681               	bsf	indf1,5
 22902                           	line	468
 22903                           	
 22904  2048                     l4781:	
 22905  2048  0008               	return
 22906                           	opt stack 0
 22907                           GLOBAL	__end_of_setDimmerLights_Open
 22908  2049                     	__end_of_setDimmerLights_Open:
 22909 ;; =============== function _setDimmerLights_Open ends ============
 22910                           
 22911                           	signat	_setDimmerLights_Open,8312
 22912                           	global	_setLoad_GO
 22913                           psect	text4974,local,class=CODE,delta=2
 22914                           global __ptext4974
 22915  2F90                     __ptext4974:
 22916                           
 22917 ;; *************** function _setLoad_GO *****************
 22918 ;; Defined at:
 22919 ;;		line 337 in file "G:\Program\PIC\Source_File\OverLoad_B1.c"
 22920 ;; Parameters:    Size  Location     Type
 22921 ;;  load            1    wreg     unsigned char 
 22922 ;;  command         1    2[BANK0 ] unsigned char 
 22923 ;; Auto vars:     Size  Location     Type
 22924 ;;  load            1    3[BANK0 ] unsigned char 
 22925 ;; Return value:  Size  Location     Type
 22926 ;;		None               void
 22927 ;; Registers used:
 22928 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22929 ;; Tracked objects:
 22930 ;;		On entry : 0/0
 22931 ;;		On exit  : 0/0
 22932 ;;		Unchanged: 0/0
 22933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 22934 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 22935 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 22936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 22937 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 22938 ;;Total ram usage:        2 bytes
 22939 ;; Hardware stack levels used:    1
 22940 ;; Hardware stack levels required when called:    5
 22941 ;; This function calls:
 22942 ;;		_LoadPointSelect
 22943 ;; This function is called by:
 22944 ;;		_DimmerLights_Close
 22945 ;;		_setDimmerLights
 22946 ;; This function uses a non-reentrant model
 22947 ;;
 22948                           psect	text4974
 22949                           	file	"G:\Program\PIC\Source_File\OverLoad_B1.c"
 22950                           	line	337
 22951                           	global	__size_of_setLoad_GO
 22952  0010                     	__size_of_setLoad_GO	equ	__end_of_setLoad_GO-_setLoad_GO
 22953                           	
 22954  2F90                     _setLoad_GO:	
 22955                           	opt	stack 5
 22956                           ; Regs used in _setLoad_GO: [wreg+fsr1l-status,0+pclath+cstack]
 22957                           ;setLoad_GO@load stored from wreg
 22958  2F90  0020               	movlb 0	; select bank0
 22959  2F91  00A3               	movwf	(setLoad_GO@load)
 22960                           	line	338
 22961                           	
 22962  2F92                     l20840:	
 22963                           ;OverLoad_B1.c: 338: LoadPointSelect(load);
 22964  2F92  0823               	movf	(setLoad_GO@load),w
 22965  2F93  31AE  2692  31AF   	fcall	_LoadPointSelect
 22966                           	line	339
 22967                           	
 22968  2F96                     l20842:	
 22969                           ;OverLoad_B1.c: 339: Load->GO=command;
 22970  2F96  0020               	movlb 0	; select bank0
 22971  2F97  086B               	movf	(_Load),w
 22972  2F98  0086               	movwf	fsr1l
 22973  2F99  3002               	movlw 2	; select bank4/5
 22974  2F9A  0087               	movwf fsr1h	
 22975                           	
 22976  2F9B  0822               	movf	(setLoad_GO@command),w
 22977  2F9C  1081               	bcf	indf1,1
 22978  2F9D  1D03               	skipz
 22979  2F9E  1481               	bsf	indf1,1
 22980                           	line	340
 22981                           	
 22982  2F9F                     l9625:	
 22983  2F9F  0008               	return
 22984                           	opt stack 0
 22985                           GLOBAL	__end_of_setLoad_GO
 22986  2FA0                     	__end_of_setLoad_GO:
 22987 ;; =============== function _setLoad_GO ends ============
 22988                           
 22989                           	signat	_setLoad_GO,8312
 22990                           	global	_getDimmerLights_StatusFlag
 22991                           psect	text4975,local,class=CODE,delta=2
 22992                           global __ptext4975
 22993  22A3                     __ptext4975:
 22994                           
 22995 ;; *************** function _getDimmerLights_StatusFlag *****************
 22996 ;; Defined at:
 22997 ;;		line 229 in file "G:\Program\PIC\Source_File\Dimmer_B1.c"
 22998 ;; Parameters:    Size  Location     Type
 22999 ;;		None
 23000 ;; Auto vars:     Size  Location     Type
 23001 ;;  i               1    5[BANK0 ] unsigned char 
 23002 ;;  Status          1    4[BANK0 ] unsigned char 
 23003 ;;  length          1    3[BANK0 ] unsigned char 
 23004 ;; Return value:  Size  Location     Type
 23005 ;;                  1    wreg      unsigned char 
 23006 ;; Registers used:
 23007 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23008 ;; Tracked objects:
 23009 ;;		On entry : 0/0
 23010 ;;		On exit  : 0/0
 23011 ;;		Unchanged: 0/0
 23012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 23013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 23014 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 23015 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 23016 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 23017 ;;Total ram usage:        4 bytes
 23018 ;; Hardware stack levels used:    1
 23019 ;; Hardware stack levels required when called:    5
 23020 ;; This function calls:
 23021 ;;		_DimmerLightsPointSelect
 23022 ;; This function is called by:
 23023 ;;		_DimmerLights_Close
 23024 ;;		_DimmerLights_ERROR
 23025 ;; This function uses a non-reentrant model
 23026 ;;
 23027                           psect	text4975
 23028                           	file	"G:\Program\PIC\Source_File\Dimmer_B1.c"
 23029                           	line	229
 23030                           	global	__size_of_getDimmerLights_StatusFlag
 23031  0027                     	__size_of_getDimmerLights_StatusFlag	equ	__end_of_getDimmerLights_StatusFlag-_getDimmer
                                 Lights_StatusFlag
 23032                           	
 23033  22A3                     _getDimmerLights_StatusFlag:	
 23034                           	opt	stack 8
 23035                           ; Regs used in _getDimmerLights_StatusFlag: [wreg+fsr1l-status,0+pclath+cstack]
 23036                           	line	230
 23037                           	
 23038  22A3                     l18932:	
 23039                           ;Dimmer_B1.c: 230: char Status=0,i,length;
 23040  22A3  0020               	movlb 0	; select bank0
 23041  22A4  01A4               	clrf	(getDimmerLights_StatusFlag@Status)
 23042                           	line	237
 23043                           	
 23044  22A5                     l18934:	
 23045                           ;Dimmer_B1.c: 237: length=1;
 23046  22A5  01A3               	clrf	(getDimmerLights_StatusFlag@length)
 23047  22A6  1403               	bsf	status,0
 23048  22A7  0DA3               	rlf	(getDimmerLights_StatusFlag@length),f
 23049                           	line	242
 23050                           	
 23051  22A8                     l18936:	
 23052                           ;Dimmer_B1.c: 242: for(i=0 ; i<length ; i++)
 23053  22A8  01A5               	clrf	(getDimmerLights_StatusFlag@i)
 23054  22A9  2AC0               	goto	l4717
 23055                           	line	243
 23056                           	
 23057  22AA                     l4718:	
 23058                           	line	244
 23059                           	
 23060  22AA                     l18938:	
 23061                           ;Dimmer_B1.c: 243: {
 23062                           ;Dimmer_B1.c: 244: DimmerLightsPointSelect(i+1);
 23063  22AA  0825               	movf	(getDimmerLights_StatusFlag@i),w
 23064  22AB  3E01               	addlw	01h
 23065  22AC  31AE  2684  31A2   	fcall	_DimmerLightsPointSelect
 23066                           	line	245
 23067                           	
 23068  22AF                     l18940:	
 23069                           ;Dimmer_B1.c: 245: if(DimmerLights->StatusFlag)
 23070  22AF  0020               	movlb 0	; select bank0
 23071  22B0  086A               	movf	(_DimmerLights),w
 23072  22B1  0086               	movwf	fsr1l
 23073  22B2  3001               	movlw 1	; select bank2/3
 23074  22B3  0087               	movwf fsr1h	
 23075                           	
 23076  22B4  1F01               	btfss	indf1,6
 23077  22B5  2AB7               	goto	u6711
 23078  22B6  2AB8               	goto	u6710
 23079  22B7                     u6711:
 23080  22B7  2ABC               	goto	l18944
 23081  22B8                     u6710:
 23082                           	line	247
 23083                           	
 23084  22B8                     l18942:	
 23085                           ;Dimmer_B1.c: 246: {
 23086                           ;Dimmer_B1.c: 247: Status=1;
 23087  22B8  01A4               	clrf	(getDimmerLights_StatusFlag@Status)
 23088  22B9  1403               	bsf	status,0
 23089  22BA  0DA4               	rlf	(getDimmerLights_StatusFlag@Status),f
 23090  22BB  2ABC               	goto	l18944
 23091                           	line	248
 23092                           	
 23093  22BC                     l4719:	
 23094                           	line	242
 23095                           	
 23096  22BC                     l18944:	
 23097  22BC  3001               	movlw	(01h)
 23098  22BD  00A2               	movwf	(??_getDimmerLights_StatusFlag+0)+0
 23099  22BE  0822               	movf	(??_getDimmerLights_StatusFlag+0)+0,w
 23100  22BF  07A5               	addwf	(getDimmerLights_StatusFlag@i),f
 23101                           	
 23102  22C0                     l4717:	
 23103  22C0  0823               	movf	(getDimmerLights_StatusFlag@length),w
 23104  22C1  0225               	subwf	(getDimmerLights_StatusFlag@i),w
 23105  22C2  1C03               	skipc
 23106  22C3  2AC5               	goto	u6721
 23107  22C4  2AC6               	goto	u6720
 23108  22C5                     u6721:
 23109  22C5  2AAA               	goto	l18938
 23110  22C6                     u6720:
 23111  22C6  2AC7               	goto	l18946
 23112                           	
 23113  22C7                     l4720:	
 23114                           	line	250
 23115                           	
 23116  22C7                     l18946:	
 23117                           ;Dimmer_B1.c: 248: }
 23118                           ;Dimmer_B1.c: 249: }
 23119                           ;Dimmer_B1.c: 250: return Status;
 23120  22C7  0824               	movf	(getDimmerLights_StatusFlag@Status),w
 23121  22C8  2AC9               	goto	l4721
 23122                           	
 23123  22C9                     l18948:	
 23124                           	line	251
 23125                           	
 23126  22C9                     l4721:	
 23127  22C9  0008               	return
 23128                           	opt stack 0
 23129                           GLOBAL	__end_of_getDimmerLights_StatusFlag
 23130  22CA                     	__end_of_getDimmerLights_StatusFlag:
 23131 ;; =============== function _getDimmerLights_StatusFlag ends ============
 23132                           
 23133                           	signat	_getDimmerLights_StatusFlag,89
 23134                           	global	_setDimmer_Detect
 23135                           psect	text4976,local,class=CODE,delta=2
 23136                           global __ptext4976
 23137  2F80                     __ptext4976:
 23138                           
 23139 ;; *************** function _setDimmer_Detect *****************
 23140 ;; Defined at:
 23141 ;;		line 521 in file "G:\Program\PIC\Source_File\Dimmer_B1.c"
 23142 ;; Parameters:    Size  Location     Type
 23143 ;;  dimmer          1    wreg     unsigned char 
 23144 ;;  command         1    2[BANK0 ] unsigned char 
 23145 ;; Auto vars:     Size  Location     Type
 23146 ;;  dimmer          1    3[BANK0 ] unsigned char 
 23147 ;; Return value:  Size  Location     Type
 23148 ;;		None               void
 23149 ;; Registers used:
 23150 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23151 ;; Tracked objects:
 23152 ;;		On entry : 0/0
 23153 ;;		On exit  : 0/0
 23154 ;;		Unchanged: 0/0
 23155 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 23156 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 23157 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 23158 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 23159 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 23160 ;;Total ram usage:        2 bytes
 23161 ;; Hardware stack levels used:    1
 23162 ;; Hardware stack levels required when called:    5
 23163 ;; This function calls:
 23164 ;;		_DimmerPointSelect
 23165 ;; This function is called by:
 23166 ;;		_DimmerLights_Close
 23167 ;;		_setDimmerLights
 23168 ;; This function uses a non-reentrant model
 23169 ;;
 23170                           psect	text4976
 23171                           	file	"G:\Program\PIC\Source_File\Dimmer_B1.c"
 23172                           	line	521
 23173                           	global	__size_of_setDimmer_Detect
 23174  0010                     	__size_of_setDimmer_Detect	equ	__end_of_setDimmer_Detect-_setDimmer_Detect
 23175                           	
 23176  2F80                     _setDimmer_Detect:	
 23177                           	opt	stack 5
 23178                           ; Regs used in _setDimmer_Detect: [wreg+fsr1l-status,0+pclath+cstack]
 23179                           ;setDimmer_Detect@dimmer stored from wreg
 23180  2F80  0020               	movlb 0	; select bank0
 23181  2F81  00A3               	movwf	(setDimmer_Detect@dimmer)
 23182                           	line	522
 23183                           	
 23184  2F82                     l20836:	
 23185                           ;Dimmer_B1.c: 522: DimmerPointSelect(dimmer);
 23186  2F82  0823               	movf	(setDimmer_Detect@dimmer),w
 23187  2F83  31AE  26D8  31AF   	fcall	_DimmerPointSelect
 23188                           	line	523
 23189                           	
 23190  2F86                     l20838:	
 23191                           ;Dimmer_B1.c: 523: Dimmer->Detect=command;
 23192  2F86  0021               	movlb 1	; select bank1
 23193  2F87  0838               	movf	(_Dimmer)^080h,w
 23194  2F88  0086               	movwf	fsr1l
 23195  2F89  0187               	clrf fsr1h	
 23196                           	
 23197  2F8A  0020               	movlb 0	; select bank0
 23198  2F8B  0822               	movf	(setDimmer_Detect@command),w
 23199  2F8C  1181               	bcf	indf1,3
 23200  2F8D  1D03               	skipz
 23201  2F8E  1581               	bsf	indf1,3
 23202                           	line	524
 23203                           	
 23204  2F8F                     l4812:	
 23205  2F8F  0008               	return
 23206                           	opt stack 0
 23207                           GLOBAL	__end_of_setDimmer_Detect
 23208  2F90                     	__end_of_setDimmer_Detect:
 23209 ;; =============== function _setDimmer_Detect ends ============
 23210                           
 23211                           	signat	_setDimmer_Detect,8312
 23212                           	global	_getDimmer_Detect
 23213                           psect	text4977,local,class=CODE,delta=2
 23214                           global __ptext4977
 23215  209E                     __ptext4977:
 23216                           
 23217 ;; *************** function _getDimmer_Detect *****************
 23218 ;; Defined at:
 23219 ;;		line 541 in file "G:\Program\PIC\Source_File\Dimmer_B1.c"
 23220 ;; Parameters:    Size  Location     Type
 23221 ;;  dimmer          1    wreg     unsigned char 
 23222 ;; Auto vars:     Size  Location     Type
 23223 ;;  dimmer          1    3[BANK0 ] unsigned char 
 23224 ;; Return value:  Size  Location     Type
 23225 ;;                  1    wreg      unsigned char 
 23226 ;; Registers used:
 23227 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23228 ;; Tracked objects:
 23229 ;;		On entry : 0/0
 23230 ;;		On exit  : 0/0
 23231 ;;		Unchanged: 0/0
 23232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 23233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 23234 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 23235 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 23236 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 23237 ;;Total ram usage:        2 bytes
 23238 ;; Hardware stack levels used:    1
 23239 ;; Hardware stack levels required when called:    5
 23240 ;; This function calls:
 23241 ;;		_DimmerPointSelect
 23242 ;; This function is called by:
 23243 ;;		_DimmerLights_Close
 23244 ;; This function uses a non-reentrant model
 23245 ;;
 23246                           psect	text4977
 23247                           	file	"G:\Program\PIC\Source_File\Dimmer_B1.c"
 23248                           	line	541
 23249                           	global	__size_of_getDimmer_Detect
 23250  0012                     	__size_of_getDimmer_Detect	equ	__end_of_getDimmer_Detect-_getDimmer_Detect
 23251                           	
 23252  209E                     _getDimmer_Detect:	
 23253                           	opt	stack 8
 23254                           ; Regs used in _getDimmer_Detect: [wreg+fsr1l-status,0+pclath+cstack]
 23255                           ;getDimmer_Detect@dimmer stored from wreg
 23256  209E  0020               	movlb 0	; select bank0
 23257  209F  00A3               	movwf	(getDimmer_Detect@dimmer)
 23258                           	line	542
 23259                           	
 23260  20A0                     l18922:	
 23261                           ;Dimmer_B1.c: 542: DimmerPointSelect(dimmer);
 23262  20A0  0823               	movf	(getDimmer_Detect@dimmer),w
 23263  20A1  31AE  26D8  31A0   	fcall	_DimmerPointSelect
 23264                           	line	543
 23265                           	
 23266  20A4                     l18924:	
 23267                           ;Dimmer_B1.c: 543: return Dimmer->Detect;
 23268  20A4  0021               	movlb 1	; select bank1
 23269  20A5  0838               	movf	(_Dimmer)^080h,w
 23270  20A6  0086               	movwf	fsr1l
 23271  20A7  0187               	clrf fsr1h	
 23272                           	
 23273  20A8  0C01               	rrf	indf1,w
 23274  20A9  0020               	movlb 0	; select bank0
 23275  20AA  00A2               	movwf	(??_getDimmer_Detect+0)+0
 23276  20AB  0CA2               	rrf	(??_getDimmer_Detect+0)+0,f
 23277  20AC  0C22               	rrf	(??_getDimmer_Detect+0)+0,w
 23278  20AD  3901               	andlw	(1<<1)-1
 23279  20AE  28AF               	goto	l4824
 23280                           	
 23281  20AF                     l18926:	
 23282                           	line	544
 23283                           	
 23284  20AF                     l4824:	
 23285  20AF  0008               	return
 23286                           	opt stack 0
 23287                           GLOBAL	__end_of_getDimmer_Detect
 23288  20B0                     	__end_of_getDimmer_Detect:
 23289 ;; =============== function _getDimmer_Detect ends ============
 23290                           
 23291                           	signat	_getDimmer_Detect,4217
 23292                           	global	_setDelayOff_GO
 23293                           psect	text4978,local,class=CODE,delta=2
 23294                           global __ptext4978
 23295  2774                     __ptext4978:
 23296                           
 23297 ;; *************** function _setDelayOff_GO *****************
 23298 ;; Defined at:
 23299 ;;		line 89 in file "G:\Program\PIC\Source_File\DelayOff_B1.c"
 23300 ;; Parameters:    Size  Location     Type
 23301 ;;  sw              1    wreg     unsigned char 
 23302 ;;  command         1    3[BANK0 ] unsigned char 
 23303 ;;  value           1    4[BANK0 ] unsigned char 
 23304 ;; Auto vars:     Size  Location     Type
 23305 ;;  sw              1    6[BANK0 ] unsigned char 
 23306 ;; Return value:  Size  Location     Type
 23307 ;;		None               void
 23308 ;; Registers used:
 23309 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23310 ;; Tracked objects:
 23311 ;;		On entry : 0/0
 23312 ;;		On exit  : 0/0
 23313 ;;		Unchanged: 0/0
 23314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 23315 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 23316 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 23317 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 23318 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 23319 ;;Total ram usage:        4 bytes
 23320 ;; Hardware stack levels used:    1
 23321 ;; Hardware stack levels required when called:    5
 23322 ;; This function calls:
 23323 ;;		_DelayOffPointSelect
 23324 ;;		_DelayTimejudge
 23325 ;; This function is called by:
 23326 ;;		_setRFSW_Control
 23327 ;;		_Sw_OffFunc
 23328 ;; This function uses a non-reentrant model
 23329 ;;
 23330                           psect	text4978
 23331                           	file	"G:\Program\PIC\Source_File\DelayOff_B1.c"
 23332                           	line	89
 23333                           	global	__size_of_setDelayOff_GO
 23334  0045                     	__size_of_setDelayOff_GO	equ	__end_of_setDelayOff_GO-_setDelayOff_GO
 23335                           	
 23336  2774                     _setDelayOff_GO:	
 23337                           	opt	stack 5
 23338                           ; Regs used in _setDelayOff_GO: [wreg+fsr1l-status,0+pclath+cstack]
 23339                           ;setDelayOff_GO@sw stored from wreg
 23340  2774  0020               	movlb 0	; select bank0
 23341  2775  00A6               	movwf	(setDelayOff_GO@sw)
 23342                           	line	90
 23343                           	
 23344  2776                     l18904:	
 23345                           ;DelayOff_B1.c: 90: DelayOffPointSelect(sw);
 23346  2776  0826               	movf	(setDelayOff_GO@sw),w
 23347  2777  31AE  2676  31A7   	fcall	_DelayOffPointSelect
 23348                           	line	91
 23349                           	
 23350  277A                     l18906:	
 23351                           ;DelayOff_B1.c: 91: if(DelayOff->Enable)
 23352  277A  0879               	movf	(_DelayOff),w
 23353  277B  0086               	movwf	fsr1l
 23354  277C  0187               	clrf fsr1h	
 23355                           	
 23356  277D  1C01               	btfss	indf1,0
 23357  277E  2F80               	goto	u6681
 23358  277F  2F81               	goto	u6680
 23359  2780                     u6681:
 23360  2780  2FB8               	goto	l3517
 23361  2781                     u6680:
 23362                           	line	93
 23363                           	
 23364  2781                     l18908:	
 23365                           ;DelayOff_B1.c: 92: {
 23366                           ;DelayOff_B1.c: 93: DelayOff->GO=command;
 23367  2781  0879               	movf	(_DelayOff),w
 23368  2782  0086               	movwf	fsr1l
 23369  2783  0187               	clrf fsr1h	
 23370                           	
 23371  2784  0020               	movlb 0	; select bank0
 23372  2785  0823               	movf	(setDelayOff_GO@command),w
 23373  2786  1081               	bcf	indf1,1
 23374  2787  1D03               	skipz
 23375  2788  1481               	bsf	indf1,1
 23376                           	line	94
 23377                           	
 23378  2789                     l18910:	
 23379                           ;DelayOff_B1.c: 94: if(command)
 23380  2789  0823               	movf	(setDelayOff_GO@command),w
 23381  278A  1D03               	skipz
 23382  278B  2F8D               	goto	u6690
 23383  278C  2F9A               	goto	l18914
 23384  278D                     u6690:
 23385                           	line	96
 23386                           	
 23387  278D                     l18912:	
 23388                           ;DelayOff_B1.c: 95: {
 23389                           ;DelayOff_B1.c: 96: DelayOff->Value=DelayTimejudge(value);
 23390  278D  0824               	movf	(setDelayOff_GO@value),w
 23391  278E  3199  21C6  31A7   	fcall	_DelayTimejudge
 23392  2791  0020               	movlb 0	; select bank0
 23393  2792  00A5               	movwf	(??_setDelayOff_GO+0)+0
 23394  2793  0879               	movf	(_DelayOff),w
 23395  2794  3E01               	addlw	01h
 23396  2795  0086               	movwf	fsr1l
 23397  2796  0187               	clrf fsr1h	
 23398                           	
 23399  2797  0825               	movf	(??_setDelayOff_GO+0)+0,w
 23400  2798  0081               	movwf	indf1
 23401                           	line	97
 23402                           ;DelayOff_B1.c: 97: }
 23403  2799  2FAA               	goto	l18918
 23404                           	line	98
 23405                           	
 23406  279A                     l3514:	
 23407                           	
 23408  279A                     l18914:	
 23409                           ;DelayOff_B1.c: 98: else if(command == 0)
 23410  279A  08A3               	movf	(setDelayOff_GO@command),f
 23411  279B  1D03               	skipz
 23412  279C  2F9E               	goto	u6701
 23413  279D  2F9F               	goto	u6700
 23414  279E                     u6701:
 23415  279E  2FAA               	goto	l18918
 23416  279F                     u6700:
 23417                           	line	100
 23418                           	
 23419  279F                     l18916:	
 23420                           ;DelayOff_B1.c: 99: {
 23421                           ;DelayOff_B1.c: 100: Product->Data[sw+26]=0;
 23422  279F  0826               	movf	(setDelayOff_GO@sw),w
 23423  27A0  3E1A               	addlw	01Ah
 23424  27A1  076F               	addwf	(_Product),w
 23425  27A2  00A5               	movwf	(??_setDelayOff_GO+0)+0
 23426  27A3  0825               	movf	0+(??_setDelayOff_GO+0)+0,w
 23427  27A4  0086               	movwf	fsr1l
 23428  27A5  3001               	movlw 1	; select bank2/3
 23429  27A6  0087               	movwf fsr1h	
 23430                           	
 23431  27A7  0181               	clrf	indf1
 23432  27A8  2FAA               	goto	l18918
 23433                           	line	101
 23434                           	
 23435  27A9                     l3516:	
 23436  27A9  2FAA               	goto	l18918
 23437                           	line	102
 23438                           	
 23439  27AA                     l3515:	
 23440                           	
 23441  27AA                     l18918:	
 23442                           ;DelayOff_B1.c: 101: }
 23443                           ;DelayOff_B1.c: 102: DelayOff->SecondTime=0;
 23444  27AA  0879               	movf	(_DelayOff),w
 23445  27AB  3E02               	addlw	02h
 23446  27AC  0086               	movwf	fsr1l
 23447  27AD  0187               	clrf fsr1h	
 23448                           	
 23449  27AE  3000               	movlw	low(0)
 23450  27AF  3FC0               	movwi	[0]fsr1
 23451  27B0  3000               	movlw	high(0)
 23452  27B1  3FC1               	movwi	[1]fsr1
 23453                           	line	103
 23454                           	
 23455  27B2                     l18920:	
 23456                           ;DelayOff_B1.c: 103: DelayOff->MinuteTime=0;
 23457  27B2  0879               	movf	(_DelayOff),w
 23458  27B3  3E04               	addlw	04h
 23459  27B4  0086               	movwf	fsr1l
 23460  27B5  0187               	clrf fsr1h	
 23461                           	
 23462  27B6  0181               	clrf	indf1
 23463  27B7  2FB8               	goto	l3517
 23464                           	line	104
 23465                           	
 23466  27B8                     l3513:	
 23467                           	line	105
 23468                           	
 23469  27B8                     l3517:	
 23470  27B8  0008               	return
 23471                           	opt stack 0
 23472                           GLOBAL	__end_of_setDelayOff_GO
 23473  27B9                     	__end_of_setDelayOff_GO:
 23474 ;; =============== function _setDelayOff_GO ends ============
 23475                           
 23476                           	signat	_setDelayOff_GO,12408
 23477                           	global	_setTxData
 23478                           psect	text4979,local,class=CODE,delta=2
 23479                           global __ptext4979
 23480  0B0E                     __ptext4979:
 23481                           
 23482 ;; *************** function _setTxData *****************
 23483 ;; Defined at:
 23484 ;;		line 125 in file "G:\Program\PIC\Source_File\RF_Control_B1.c"
 23485 ;; Parameters:    Size  Location     Type
 23486 ;;  rf              1    wreg     unsigned char 
 23487 ;; Auto vars:     Size  Location     Type
 23488 ;;  rf              1    3[BANK0 ] unsigned char 
 23489 ;; Return value:  Size  Location     Type
 23490 ;;		None               void
 23491 ;; Registers used:
 23492 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23493 ;; Tracked objects:
 23494 ;;		On entry : 0/0
 23495 ;;		On exit  : 0/0
 23496 ;;		Unchanged: 0/0
 23497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 23498 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 23499 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 23500 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 23501 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 23502 ;;Total ram usage:        2 bytes
 23503 ;; Hardware stack levels used:    1
 23504 ;; Hardware stack levels required when called:    5
 23505 ;; This function calls:
 23506 ;;		_RfPointSelect
 23507 ;; This function is called by:
 23508 ;;		_DlyOff_Main
 23509 ;;		_setDimmerLights_Adj
 23510 ;;		_setControl_Lights_Table
 23511 ;;		_setRFSW_Control
 23512 ;;		_setRFSW_AdjControl
 23513 ;;		_Sw_OnFunc
 23514 ;;		_Sw_OffFunc
 23515 ;; This function uses a non-reentrant model
 23516 ;;
 23517                           psect	text4979
 23518                           	file	"G:\Program\PIC\Source_File\RF_Control_B1.c"
 23519                           	line	125
 23520                           	global	__size_of_setTxData
 23521  0101                     	__size_of_setTxData	equ	__end_of_setTxData-_setTxData
 23522                           	
 23523  0B0E                     _setTxData:	
 23524                           	opt	stack 8
 23525                           ; Regs used in _setTxData: [wreg+fsr1l-status,0+pclath+cstack]
 23526                           ;setTxData@rf stored from wreg
 23527  0B0E  0020               	movlb 0	; select bank0
 23528  0B0F  00A3               	movwf	(setTxData@rf)
 23529                           	line	126
 23530                           	
 23531  0B10                     l18896:	
 23532                           ;RF_Control_B1.c: 126: RfPointSelect(rf);
 23533  0B10  0823               	movf	(setTxData@rf),w
 23534  0B11  31AE  26A0  318B   	fcall	_RfPointSelect
 23535                           	line	127
 23536                           	
 23537  0B14                     l18898:	
 23538                           ;RF_Control_B1.c: 127: if(RF->Enable)
 23539  0B14  087B               	movf	(_RF),w
 23540  0B15  0086               	movwf	fsr1l
 23541  0B16  0187               	clrf fsr1h	
 23542                           	
 23543  0B17  1C01               	btfss	indf1,0
 23544  0B18  2B1A               	goto	u6661
 23545  0B19  2B1B               	goto	u6660
 23546  0B1A                     u6661:
 23547  0B1A  2C0E               	goto	l13173
 23548  0B1B                     u6660:
 23549                           	line	129
 23550                           	
 23551  0B1B                     l18900:	
 23552                           ;RF_Control_B1.c: 128: {
 23553                           ;RF_Control_B1.c: 129: if(RF->TransceiveGO == 0 && 1)
 23554  0B1B  087B               	movf	(_RF),w
 23555  0B1C  0086               	movwf	fsr1l
 23556  0B1D  0187               	clrf fsr1h	
 23557                           	
 23558  0B1E  1901               	btfsc	indf1,2
 23559  0B1F  2B21               	goto	u6671
 23560  0B20  2B22               	goto	u6670
 23561  0B21                     u6671:
 23562  0B21  2C0E               	goto	l13173
 23563  0B22                     u6670:
 23564                           	line	131
 23565                           	
 23566  0B22                     l18902:	
 23567                           ;RF_Control_B1.c: 130: {
 23568                           ;RF_Control_B1.c: 131: RF->TransceiveGO=1;
 23569  0B22  087B               	movf	(_RF),w
 23570  0B23  0086               	movwf	fsr1l
 23571  0B24  0187               	clrf fsr1h	
 23572                           	
 23573  0B25  1501               	bsf	indf1,2
 23574                           	line	132
 23575                           ;RF_Control_B1.c: 132: RF_Data[0]=Product->Data[0];
 23576  0B26  0020               	movlb 0	; select bank0
 23577  0B27  086F               	movf	(_Product),w
 23578  0B28  0086               	movwf	fsr1l
 23579  0B29  3001               	movlw 1	; select bank2/3
 23580  0B2A  0087               	movwf fsr1h	
 23581                           	
 23582  0B2B  0801               	movf	indf1,w
 23583  0B2C  00A2               	movwf	(??_setTxData+0)+0
 23584  0B2D  0822               	movf	(??_setTxData+0)+0,w
 23585  0B2E  0021               	movlb 1	; select bank1
 23586  0B2F  00A0               	movwf	(_RF_Data)^080h
 23587                           	line	133
 23588                           ;RF_Control_B1.c: 133: RF_Data[1]=Product->Data[1];
 23589  0B30  0020               	movlb 0	; select bank0
 23590  0B31  086F               	movf	(_Product),w
 23591  0B32  3E01               	addlw	01h
 23592  0B33  0086               	movwf	fsr1l
 23593  0B34  3001               	movlw 1	; select bank2/3
 23594  0B35  0087               	movwf fsr1h	
 23595                           	
 23596  0B36  0801               	movf	indf1,w
 23597  0B37  00A2               	movwf	(??_setTxData+0)+0
 23598  0B38  0822               	movf	(??_setTxData+0)+0,w
 23599  0B39  0021               	movlb 1	; select bank1
 23600  0B3A  00A1               	movwf	0+(_RF_Data)^080h+01h
 23601                           	line	134
 23602                           ;RF_Control_B1.c: 134: RF_Data[2]=Product->Data[24];
 23603  0B3B  0020               	movlb 0	; select bank0
 23604  0B3C  086F               	movf	(_Product),w
 23605  0B3D  3E18               	addlw	018h
 23606  0B3E  0086               	movwf	fsr1l
 23607  0B3F  3001               	movlw 1	; select bank2/3
 23608  0B40  0087               	movwf fsr1h	
 23609                           	
 23610  0B41  0801               	movf	indf1,w
 23611  0B42  00A2               	movwf	(??_setTxData+0)+0
 23612  0B43  0822               	movf	(??_setTxData+0)+0,w
 23613  0B44  0021               	movlb 1	; select bank1
 23614  0B45  00A2               	movwf	0+(_RF_Data)^080h+02h
 23615                           	line	135
 23616                           ;RF_Control_B1.c: 135: RF_Data[3]=Product->Data[25];
 23617  0B46  0020               	movlb 0	; select bank0
 23618  0B47  086F               	movf	(_Product),w
 23619  0B48  3E19               	addlw	019h
 23620  0B49  0086               	movwf	fsr1l
 23621  0B4A  3001               	movlw 1	; select bank2/3
 23622  0B4B  0087               	movwf fsr1h	
 23623                           	
 23624  0B4C  0801               	movf	indf1,w
 23625  0B4D  00A2               	movwf	(??_setTxData+0)+0
 23626  0B4E  0822               	movf	(??_setTxData+0)+0,w
 23627  0B4F  0021               	movlb 1	; select bank1
 23628  0B50  00A3               	movwf	0+(_RF_Data)^080h+03h
 23629                           	line	136
 23630                           ;RF_Control_B1.c: 136: RF_Data[4]=Product->Data[4];
 23631  0B51  0020               	movlb 0	; select bank0
 23632  0B52  086F               	movf	(_Product),w
 23633  0B53  3E04               	addlw	04h
 23634  0B54  0086               	movwf	fsr1l
 23635  0B55  3001               	movlw 1	; select bank2/3
 23636  0B56  0087               	movwf fsr1h	
 23637                           	
 23638  0B57  0801               	movf	indf1,w
 23639  0B58  00A2               	movwf	(??_setTxData+0)+0
 23640  0B59  0822               	movf	(??_setTxData+0)+0,w
 23641  0B5A  0021               	movlb 1	; select bank1
 23642  0B5B  00A4               	movwf	0+(_RF_Data)^080h+04h
 23643                           	line	137
 23644                           ;RF_Control_B1.c: 137: RF_Data[5]=Product->Data[5];
 23645  0B5C  0020               	movlb 0	; select bank0
 23646  0B5D  086F               	movf	(_Product),w
 23647  0B5E  3E05               	addlw	05h
 23648  0B5F  0086               	movwf	fsr1l
 23649  0B60  3001               	movlw 1	; select bank2/3
 23650  0B61  0087               	movwf fsr1h	
 23651                           	
 23652  0B62  0801               	movf	indf1,w
 23653  0B63  00A2               	movwf	(??_setTxData+0)+0
 23654  0B64  0822               	movf	(??_setTxData+0)+0,w
 23655  0B65  0021               	movlb 1	; select bank1
 23656  0B66  00A5               	movwf	0+(_RF_Data)^080h+05h
 23657                           	line	138
 23658                           ;RF_Control_B1.c: 138: RF_Data[6]=Product->Data[6];
 23659  0B67  0020               	movlb 0	; select bank0
 23660  0B68  086F               	movf	(_Product),w
 23661  0B69  3E06               	addlw	06h
 23662  0B6A  0086               	movwf	fsr1l
 23663  0B6B  3001               	movlw 1	; select bank2/3
 23664  0B6C  0087               	movwf fsr1h	
 23665                           	
 23666  0B6D  0801               	movf	indf1,w
 23667  0B6E  00A2               	movwf	(??_setTxData+0)+0
 23668  0B6F  0822               	movf	(??_setTxData+0)+0,w
 23669  0B70  0021               	movlb 1	; select bank1
 23670  0B71  00A6               	movwf	0+(_RF_Data)^080h+06h
 23671                           	line	139
 23672                           ;RF_Control_B1.c: 139: RF_Data[7]=Product->Data[7];
 23673  0B72  0020               	movlb 0	; select bank0
 23674  0B73  086F               	movf	(_Product),w
 23675  0B74  3E07               	addlw	07h
 23676  0B75  0086               	movwf	fsr1l
 23677  0B76  3001               	movlw 1	; select bank2/3
 23678  0B77  0087               	movwf fsr1h	
 23679                           	
 23680  0B78  0801               	movf	indf1,w
 23681  0B79  00A2               	movwf	(??_setTxData+0)+0
 23682  0B7A  0822               	movf	(??_setTxData+0)+0,w
 23683  0B7B  0021               	movlb 1	; select bank1
 23684  0B7C  00A7               	movwf	0+(_RF_Data)^080h+07h
 23685                           	line	140
 23686                           ;RF_Control_B1.c: 140: RF_Data[8]=Product->Data[8];
 23687  0B7D  0020               	movlb 0	; select bank0
 23688  0B7E  086F               	movf	(_Product),w
 23689  0B7F  3E08               	addlw	08h
 23690  0B80  0086               	movwf	fsr1l
 23691  0B81  3001               	movlw 1	; select bank2/3
 23692  0B82  0087               	movwf fsr1h	
 23693                           	
 23694  0B83  0801               	movf	indf1,w
 23695  0B84  00A2               	movwf	(??_setTxData+0)+0
 23696  0B85  0822               	movf	(??_setTxData+0)+0,w
 23697  0B86  0021               	movlb 1	; select bank1
 23698  0B87  00A8               	movwf	0+(_RF_Data)^080h+08h
 23699                           	line	141
 23700                           ;RF_Control_B1.c: 141: RF_Data[9]=Product->Data[9];
 23701  0B88  0020               	movlb 0	; select bank0
 23702  0B89  086F               	movf	(_Product),w
 23703  0B8A  3E09               	addlw	09h
 23704  0B8B  0086               	movwf	fsr1l
 23705  0B8C  3001               	movlw 1	; select bank2/3
 23706  0B8D  0087               	movwf fsr1h	
 23707                           	
 23708  0B8E  0801               	movf	indf1,w
 23709  0B8F  00A2               	movwf	(??_setTxData+0)+0
 23710  0B90  0822               	movf	(??_setTxData+0)+0,w
 23711  0B91  0021               	movlb 1	; select bank1
 23712  0B92  00A9               	movwf	0+(_RF_Data)^080h+09h
 23713                           	line	142
 23714                           ;RF_Control_B1.c: 142: RF_Data[10]=Product->Data[10];
 23715  0B93  0020               	movlb 0	; select bank0
 23716  0B94  086F               	movf	(_Product),w
 23717  0B95  3E0A               	addlw	0Ah
 23718  0B96  0086               	movwf	fsr1l
 23719  0B97  3001               	movlw 1	; select bank2/3
 23720  0B98  0087               	movwf fsr1h	
 23721                           	
 23722  0B99  0801               	movf	indf1,w
 23723  0B9A  00A2               	movwf	(??_setTxData+0)+0
 23724  0B9B  0822               	movf	(??_setTxData+0)+0,w
 23725  0B9C  0021               	movlb 1	; select bank1
 23726  0B9D  00AA               	movwf	0+(_RF_Data)^080h+0Ah
 23727                           	line	143
 23728                           ;RF_Control_B1.c: 143: RF_Data[11]=Product->Data[11];
 23729  0B9E  0020               	movlb 0	; select bank0
 23730  0B9F  086F               	movf	(_Product),w
 23731  0BA0  3E0B               	addlw	0Bh
 23732  0BA1  0086               	movwf	fsr1l
 23733  0BA2  3001               	movlw 1	; select bank2/3
 23734  0BA3  0087               	movwf fsr1h	
 23735                           	
 23736  0BA4  0801               	movf	indf1,w
 23737  0BA5  00A2               	movwf	(??_setTxData+0)+0
 23738  0BA6  0822               	movf	(??_setTxData+0)+0,w
 23739  0BA7  0021               	movlb 1	; select bank1
 23740  0BA8  00AB               	movwf	0+(_RF_Data)^080h+0Bh
 23741                           	line	144
 23742                           ;RF_Control_B1.c: 144: RF_Data[12]=Product->Data[12];
 23743  0BA9  0020               	movlb 0	; select bank0
 23744  0BAA  086F               	movf	(_Product),w
 23745  0BAB  3E0C               	addlw	0Ch
 23746  0BAC  0086               	movwf	fsr1l
 23747  0BAD  3001               	movlw 1	; select bank2/3
 23748  0BAE  0087               	movwf fsr1h	
 23749                           	
 23750  0BAF  0801               	movf	indf1,w
 23751  0BB0  00A2               	movwf	(??_setTxData+0)+0
 23752  0BB1  0822               	movf	(??_setTxData+0)+0,w
 23753  0BB2  0021               	movlb 1	; select bank1
 23754  0BB3  00AC               	movwf	0+(_RF_Data)^080h+0Ch
 23755                           	line	145
 23756                           ;RF_Control_B1.c: 145: RF_Data[13]=Product->Data[13];
 23757  0BB4  0020               	movlb 0	; select bank0
 23758  0BB5  086F               	movf	(_Product),w
 23759  0BB6  3E0D               	addlw	0Dh
 23760  0BB7  0086               	movwf	fsr1l
 23761  0BB8  3001               	movlw 1	; select bank2/3
 23762  0BB9  0087               	movwf fsr1h	
 23763                           	
 23764  0BBA  0801               	movf	indf1,w
 23765  0BBB  00A2               	movwf	(??_setTxData+0)+0
 23766  0BBC  0822               	movf	(??_setTxData+0)+0,w
 23767  0BBD  0021               	movlb 1	; select bank1
 23768  0BBE  00AD               	movwf	0+(_RF_Data)^080h+0Dh
 23769                           	line	146
 23770                           ;RF_Control_B1.c: 146: RF_Data[14]=Product->Data[14];
 23771  0BBF  0020               	movlb 0	; select bank0
 23772  0BC0  086F               	movf	(_Product),w
 23773  0BC1  3E0E               	addlw	0Eh
 23774  0BC2  0086               	movwf	fsr1l
 23775  0BC3  3001               	movlw 1	; select bank2/3
 23776  0BC4  0087               	movwf fsr1h	
 23777                           	
 23778  0BC5  0801               	movf	indf1,w
 23779  0BC6  00A2               	movwf	(??_setTxData+0)+0
 23780  0BC7  0822               	movf	(??_setTxData+0)+0,w
 23781  0BC8  0021               	movlb 1	; select bank1
 23782  0BC9  00AE               	movwf	0+(_RF_Data)^080h+0Eh
 23783                           	line	147
 23784                           ;RF_Control_B1.c: 147: RF_Data[15]=Product->Data[15];
 23785  0BCA  0020               	movlb 0	; select bank0
 23786  0BCB  086F               	movf	(_Product),w
 23787  0BCC  3E0F               	addlw	0Fh
 23788  0BCD  0086               	movwf	fsr1l
 23789  0BCE  3001               	movlw 1	; select bank2/3
 23790  0BCF  0087               	movwf fsr1h	
 23791                           	
 23792  0BD0  0801               	movf	indf1,w
 23793  0BD1  00A2               	movwf	(??_setTxData+0)+0
 23794  0BD2  0822               	movf	(??_setTxData+0)+0,w
 23795  0BD3  0021               	movlb 1	; select bank1
 23796  0BD4  00AF               	movwf	0+(_RF_Data)^080h+0Fh
 23797                           	line	148
 23798                           ;RF_Control_B1.c: 148: RF_Data[16]=Product->Data[16];
 23799  0BD5  0020               	movlb 0	; select bank0
 23800  0BD6  086F               	movf	(_Product),w
 23801  0BD7  3E10               	addlw	010h
 23802  0BD8  0086               	movwf	fsr1l
 23803  0BD9  3001               	movlw 1	; select bank2/3
 23804  0BDA  0087               	movwf fsr1h	
 23805                           	
 23806  0BDB  0801               	movf	indf1,w
 23807  0BDC  00A2               	movwf	(??_setTxData+0)+0
 23808  0BDD  0822               	movf	(??_setTxData+0)+0,w
 23809  0BDE  0021               	movlb 1	; select bank1
 23810  0BDF  00B0               	movwf	0+(_RF_Data)^080h+010h
 23811                           	line	149
 23812                           ;RF_Control_B1.c: 149: RF_Data[17]=Product->Data[17];
 23813  0BE0  0020               	movlb 0	; select bank0
 23814  0BE1  086F               	movf	(_Product),w
 23815  0BE2  3E11               	addlw	011h
 23816  0BE3  0086               	movwf	fsr1l
 23817  0BE4  3001               	movlw 1	; select bank2/3
 23818  0BE5  0087               	movwf fsr1h	
 23819                           	
 23820  0BE6  0801               	movf	indf1,w
 23821  0BE7  00A2               	movwf	(??_setTxData+0)+0
 23822  0BE8  0822               	movf	(??_setTxData+0)+0,w
 23823  0BE9  0021               	movlb 1	; select bank1
 23824  0BEA  00B1               	movwf	0+(_RF_Data)^080h+011h
 23825                           	line	150
 23826                           ;RF_Control_B1.c: 150: RF_Data[18]=Product->Data[18];
 23827  0BEB  0020               	movlb 0	; select bank0
 23828  0BEC  086F               	movf	(_Product),w
 23829  0BED  3E12               	addlw	012h
 23830  0BEE  0086               	movwf	fsr1l
 23831  0BEF  3001               	movlw 1	; select bank2/3
 23832  0BF0  0087               	movwf fsr1h	
 23833                           	
 23834  0BF1  0801               	movf	indf1,w
 23835  0BF2  00A2               	movwf	(??_setTxData+0)+0
 23836  0BF3  0822               	movf	(??_setTxData+0)+0,w
 23837  0BF4  0021               	movlb 1	; select bank1
 23838  0BF5  00B2               	movwf	0+(_RF_Data)^080h+012h
 23839                           	line	151
 23840                           ;RF_Control_B1.c: 151: RF_Data[19]=Product->Data[19];
 23841  0BF6  0020               	movlb 0	; select bank0
 23842  0BF7  086F               	movf	(_Product),w
 23843  0BF8  3E13               	addlw	013h
 23844  0BF9  0086               	movwf	fsr1l
 23845  0BFA  3001               	movlw 1	; select bank2/3
 23846  0BFB  0087               	movwf fsr1h	
 23847                           	
 23848  0BFC  0801               	movf	indf1,w
 23849  0BFD  00A2               	movwf	(??_setTxData+0)+0
 23850  0BFE  0822               	movf	(??_setTxData+0)+0,w
 23851  0BFF  0021               	movlb 1	; select bank1
 23852  0C00  00B3               	movwf	0+(_RF_Data)^080h+013h
 23853                           	line	152
 23854                           ;RF_Control_B1.c: 152: RF_Data[20]=Product->Data[20];
 23855  0C01  0020               	movlb 0	; select bank0
 23856  0C02  086F               	movf	(_Product),w
 23857  0C03  3E14               	addlw	014h
 23858  0C04  0086               	movwf	fsr1l
 23859  0C05  3001               	movlw 1	; select bank2/3
 23860  0C06  0087               	movwf fsr1h	
 23861                           	
 23862  0C07  0801               	movf	indf1,w
 23863  0C08  00A2               	movwf	(??_setTxData+0)+0
 23864  0C09  0822               	movf	(??_setTxData+0)+0,w
 23865  0C0A  0021               	movlb 1	; select bank1
 23866  0C0B  00B4               	movwf	0+(_RF_Data)^080h+014h
 23867  0C0C  2C0E               	goto	l13173
 23868                           	line	153
 23869                           	
 23870  0C0D                     l13172:	
 23871  0C0D  2C0E               	goto	l13173
 23872                           	line	154
 23873                           	
 23874  0C0E                     l13171:	
 23875                           	line	155
 23876                           	
 23877  0C0E                     l13173:	
 23878  0C0E  0008               	return
 23879                           	opt stack 0
 23880                           GLOBAL	__end_of_setTxData
 23881  0C0F                     	__end_of_setTxData:
 23882 ;; =============== function _setTxData ends ============
 23883                           
 23884                           	signat	_setTxData,4216
 23885                           	global	_setDimmerLights_Switch
 23886                           psect	text4980,local,class=CODE,delta=2
 23887                           global __ptext4980
 23888  2027                     __ptext4980:
 23889                           
 23890 ;; *************** function _setDimmerLights_Switch *****************
 23891 ;; Defined at:
 23892 ;;		line 445 in file "G:\Program\PIC\Source_File\Dimmer_B1.c"
 23893 ;; Parameters:    Size  Location     Type
 23894 ;;  lights          1    wreg     unsigned char 
 23895 ;;  command         1    2[BANK0 ] unsigned char 
 23896 ;; Auto vars:     Size  Location     Type
 23897 ;;  lights          1    3[BANK0 ] unsigned char 
 23898 ;; Return value:  Size  Location     Type
 23899 ;;		None               void
 23900 ;; Registers used:
 23901 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23902 ;; Tracked objects:
 23903 ;;		On entry : 0/0
 23904 ;;		On exit  : 0/0
 23905 ;;		Unchanged: 0/0
 23906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 23907 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 23908 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 23909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 23910 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 23911 ;;Total ram usage:        2 bytes
 23912 ;; Hardware stack levels used:    1
 23913 ;; Hardware stack levels required when called:    5
 23914 ;; This function calls:
 23915 ;;		_DimmerLightsPointSelect
 23916 ;; This function is called by:
 23917 ;;		_DlyOff_Main
 23918 ;;		_MainT
 23919 ;;		_setRFSW_Control
 23920 ;;		_Sw_OnFunc
 23921 ;;		_Sw_OffFunc
 23922 ;; This function uses a non-reentrant model
 23923 ;;
 23924                           psect	text4980
 23925                           	file	"G:\Program\PIC\Source_File\Dimmer_B1.c"
 23926                           	line	445
 23927                           	global	__size_of_setDimmerLights_Switch
 23928  0011                     	__size_of_setDimmerLights_Switch	equ	__end_of_setDimmerLights_Switch-_setDimmerLights_S
                                 witch
 23929                           	
 23930  2027                     _setDimmerLights_Switch:	
 23931                           	opt	stack 8
 23932                           ; Regs used in _setDimmerLights_Switch: [wreg+fsr1l-status,0+pclath+cstack]
 23933                           ;setDimmerLights_Switch@lights stored from wreg
 23934  2027  0020               	movlb 0	; select bank0
 23935  2028  00A3               	movwf	(setDimmerLights_Switch@lights)
 23936                           	line	446
 23937                           	
 23938  2029                     l20832:	
 23939                           ;Dimmer_B1.c: 446: DimmerLightsPointSelect(lights);
 23940  2029  0823               	movf	(setDimmerLights_Switch@lights),w
 23941  202A  31AE  2684  31A0   	fcall	_DimmerLightsPointSelect
 23942                           	line	447
 23943                           	
 23944  202D                     l20834:	
 23945                           ;Dimmer_B1.c: 447: DimmerLights->Switch=command;
 23946  202D  0020               	movlb 0	; select bank0
 23947  202E  086A               	movf	(_DimmerLights),w
 23948  202F  3E09               	addlw	09h
 23949  2030  0086               	movwf	fsr1l
 23950  2031  3001               	movlw 1	; select bank2/3
 23951  2032  0087               	movwf fsr1h	
 23952                           	
 23953  2033  0822               	movf	(setDimmerLights_Switch@command),w
 23954  2034  1001               	bcf	indf1,0
 23955  2035  1D03               	skipz
 23956  2036  1401               	bsf	indf1,0
 23957                           	line	448
 23958                           	
 23959  2037                     l4769:	
 23960  2037  0008               	return
 23961                           	opt stack 0
 23962                           GLOBAL	__end_of_setDimmerLights_Switch
 23963  2038                     	__end_of_setDimmerLights_Switch:
 23964 ;; =============== function _setDimmerLights_Switch ends ============
 23965                           
 23966                           	signat	_setDimmerLights_Switch,8312
 23967                           	global	_setDimmerLights_Trigger
 23968                           psect	text4981,local,class=CODE,delta=2
 23969                           global __ptext4981
 23970  2016                     __ptext4981:
 23971                           
 23972 ;; *************** function _setDimmerLights_Trigger *****************
 23973 ;; Defined at:
 23974 ;;		line 455 in file "G:\Program\PIC\Source_File\Dimmer_B1.c"
 23975 ;; Parameters:    Size  Location     Type
 23976 ;;  lights          1    wreg     unsigned char 
 23977 ;;  command         1    2[BANK0 ] unsigned char 
 23978 ;; Auto vars:     Size  Location     Type
 23979 ;;  lights          1    3[BANK0 ] unsigned char 
 23980 ;; Return value:  Size  Location     Type
 23981 ;;		None               void
 23982 ;; Registers used:
 23983 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23984 ;; Tracked objects:
 23985 ;;		On entry : 0/0
 23986 ;;		On exit  : 0/0
 23987 ;;		Unchanged: 0/0
 23988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 23989 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 23990 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 23991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 23992 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 23993 ;;Total ram usage:        2 bytes
 23994 ;; Hardware stack levels used:    1
 23995 ;; Hardware stack levels required when called:    5
 23996 ;; This function calls:
 23997 ;;		_DimmerLightsPointSelect
 23998 ;; This function is called by:
 23999 ;;		_DlyOff_Main
 24000 ;;		_MainT
 24001 ;;		_setRFSW_Control
 24002 ;;		_Sw_OnFunc
 24003 ;;		_Sw_OffFunc
 24004 ;; This function uses a non-reentrant model
 24005 ;;
 24006                           psect	text4981
 24007                           	file	"G:\Program\PIC\Source_File\Dimmer_B1.c"
 24008                           	line	455
 24009                           	global	__size_of_setDimmerLights_Trigger
 24010  0011                     	__size_of_setDimmerLights_Trigger	equ	__end_of_setDimmerLights_Trigger-_setDimmerLights
                                 _Trigger
 24011                           	
 24012  2016                     _setDimmerLights_Trigger:	
 24013                           	opt	stack 8
 24014                           ; Regs used in _setDimmerLights_Trigger: [wreg+fsr1l-status,0+pclath+cstack]
 24015                           ;setDimmerLights_Trigger@lights stored from wreg
 24016  2016  0020               	movlb 0	; select bank0
 24017  2017  00A3               	movwf	(setDimmerLights_Trigger@lights)
 24018                           	line	456
 24019                           	
 24020  2018                     l20828:	
 24021                           ;Dimmer_B1.c: 456: DimmerLightsPointSelect(lights);
 24022  2018  0823               	movf	(setDimmerLights_Trigger@lights),w
 24023  2019  31AE  2684  31A0   	fcall	_DimmerLightsPointSelect
 24024                           	line	457
 24025                           	
 24026  201C                     l20830:	
 24027                           ;Dimmer_B1.c: 457: DimmerLights->Trigger=command;
 24028  201C  0020               	movlb 0	; select bank0
 24029  201D  086A               	movf	(_DimmerLights),w
 24030  201E  3E09               	addlw	09h
 24031  201F  0086               	movwf	fsr1l
 24032  2020  3001               	movlw 1	; select bank2/3
 24033  2021  0087               	movwf fsr1h	
 24034                           	
 24035  2022  0822               	movf	(setDimmerLights_Trigger@command),w
 24036  2023  1081               	bcf	indf1,1
 24037  2024  1D03               	skipz
 24038  2025  1481               	bsf	indf1,1
 24039                           	line	458
 24040                           	
 24041  2026                     l4775:	
 24042  2026  0008               	return
 24043                           	opt stack 0
 24044                           GLOBAL	__end_of_setDimmerLights_Trigger
 24045  2027                     	__end_of_setDimmerLights_Trigger:
 24046 ;; =============== function _setDimmerLights_Trigger ends ============
 24047                           
 24048                           	signat	_setDimmerLights_Trigger,8312
 24049                           	global	_setRFSW_Status
 24050                           psect	text4982,local,class=CODE,delta=2
 24051                           global __ptext4982
 24052  2F70                     __ptext4982:
 24053                           
 24054 ;; *************** function _setRFSW_Status *****************
 24055 ;; Defined at:
 24056 ;;		line 396 in file "G:\Program\PIC\Source_File\RF_Control_B1.c"
 24057 ;; Parameters:    Size  Location     Type
 24058 ;;  sw              1    wreg     unsigned char 
 24059 ;;  command         1    2[BANK0 ] unsigned char 
 24060 ;; Auto vars:     Size  Location     Type
 24061 ;;  sw              1    3[BANK0 ] unsigned char 
 24062 ;; Return value:  Size  Location     Type
 24063 ;;		None               void
 24064 ;; Registers used:
 24065 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24066 ;; Tracked objects:
 24067 ;;		On entry : 0/0
 24068 ;;		On exit  : 0/0
 24069 ;;		Unchanged: 0/0
 24070 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 24071 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 24072 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 24073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 24074 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 24075 ;;Total ram usage:        2 bytes
 24076 ;; Hardware stack levels used:    1
 24077 ;; Hardware stack levels required when called:    5
 24078 ;; This function calls:
 24079 ;;		_RfSWPointSelect
 24080 ;; This function is called by:
 24081 ;;		_DlyOff_Main
 24082 ;;		_setDimmerLights_ERROR
 24083 ;;		_setControl_Lights_Table
 24084 ;;		_Sw_OnFunc
 24085 ;;		_Sw_AdjFunc
 24086 ;; This function uses a non-reentrant model
 24087 ;;
 24088                           psect	text4982
 24089                           	file	"G:\Program\PIC\Source_File\RF_Control_B1.c"
 24090                           	line	396
 24091                           	global	__size_of_setRFSW_Status
 24092  0010                     	__size_of_setRFSW_Status	equ	__end_of_setRFSW_Status-_setRFSW_Status
 24093                           	
 24094  2F70                     _setRFSW_Status:	
 24095                           	opt	stack 8
 24096                           ; Regs used in _setRFSW_Status: [wreg+fsr1l-status,0+pclath+cstack]
 24097                           ;setRFSW_Status@sw stored from wreg
 24098  2F70  0020               	movlb 0	; select bank0
 24099  2F71  00A3               	movwf	(setRFSW_Status@sw)
 24100                           	line	397
 24101                           	
 24102  2F72                     l20824:	
 24103                           ;RF_Control_B1.c: 397: RfSWPointSelect(sw);
 24104  2F72  0823               	movf	(setRFSW_Status@sw),w
 24105  2F73  31AE  26E7  31AF   	fcall	_RfSWPointSelect
 24106                           	line	398
 24107                           	
 24108  2F76                     l20826:	
 24109                           ;RF_Control_B1.c: 398: RFSW->Status=command;
 24110  2F76  0021               	movlb 1	; select bank1
 24111  2F77  083B               	movf	(_RFSW)^080h,w
 24112  2F78  0086               	movwf	fsr1l
 24113  2F79  0187               	clrf fsr1h	
 24114                           	
 24115  2F7A  0020               	movlb 0	; select bank0
 24116  2F7B  0822               	movf	(setRFSW_Status@command),w
 24117  2F7C  1001               	bcf	indf1,0
 24118  2F7D  1D03               	skipz
 24119  2F7E  1401               	bsf	indf1,0
 24120                           	line	399
 24121                           	
 24122  2F7F                     l13234:	
 24123  2F7F  0008               	return
 24124                           	opt stack 0
 24125                           GLOBAL	__end_of_setRFSW_Status
 24126  2F80                     	__end_of_setRFSW_Status:
 24127 ;; =============== function _setRFSW_Status ends ============
 24128                           
 24129                           	signat	_setRFSW_Status,8312
 24130                           	global	_setSw_Status
 24131                           psect	text4983,local,class=CODE,delta=2
 24132                           global __ptext4983
 24133  2F60                     __ptext4983:
 24134                           
 24135 ;; *************** function _setSw_Status *****************
 24136 ;; Defined at:
 24137 ;;		line 85 in file "G:\Program\PIC\Source_File\Switch_B1.c"
 24138 ;; Parameters:    Size  Location     Type
 24139 ;;  sw              1    wreg     unsigned char 
 24140 ;;  command         1    2[BANK0 ] unsigned char 
 24141 ;; Auto vars:     Size  Location     Type
 24142 ;;  sw              1    3[BANK0 ] unsigned char 
 24143 ;; Return value:  Size  Location     Type
 24144 ;;		None               void
 24145 ;; Registers used:
 24146 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24147 ;; Tracked objects:
 24148 ;;		On entry : 0/0
 24149 ;;		On exit  : 0/0
 24150 ;;		Unchanged: 0/0
 24151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 24152 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 24153 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 24154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 24155 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 24156 ;;Total ram usage:        2 bytes
 24157 ;; Hardware stack levels used:    1
 24158 ;; Hardware stack levels required when called:    5
 24159 ;; This function calls:
 24160 ;;		_SwPointSelect
 24161 ;; This function is called by:
 24162 ;;		_DlyOff_Main
 24163 ;;		_setDimmerLights_ERROR
 24164 ;;		_setControl_Lights_Table
 24165 ;;		_setRFSW_Control
 24166 ;; This function uses a non-reentrant model
 24167 ;;
 24168                           psect	text4983
 24169                           	file	"G:\Program\PIC\Source_File\Switch_B1.c"
 24170                           	line	85
 24171                           	global	__size_of_setSw_Status
 24172  0010                     	__size_of_setSw_Status	equ	__end_of_setSw_Status-_setSw_Status
 24173                           	
 24174  2F60                     _setSw_Status:	
 24175                           	opt	stack 8
 24176                           ; Regs used in _setSw_Status: [wreg+fsr1l-status,0+pclath+cstack]
 24177                           ;setSw_Status@sw stored from wreg
 24178  2F60  0020               	movlb 0	; select bank0
 24179  2F61  00A3               	movwf	(setSw_Status@sw)
 24180                           	line	86
 24181                           	
 24182  2F62                     l20820:	
 24183                           ;Switch_B1.c: 86: SwPointSelect(sw);
 24184  2F62  0823               	movf	(setSw_Status@sw),w
 24185  2F63  31AE  26AE  31AF   	fcall	_SwPointSelect
 24186                           	line	87
 24187                           	
 24188  2F66                     l20822:	
 24189                           ;Switch_B1.c: 87: Sw->Status=command;
 24190  2F66  0020               	movlb 0	; select bank0
 24191  2F67  086D               	movf	(_Sw),w
 24192  2F68  0086               	movwf	fsr1l
 24193  2F69  3001               	movlw 1	; select bank2/3
 24194  2F6A  0087               	movwf fsr1h	
 24195                           	
 24196  2F6B  0822               	movf	(setSw_Status@command),w
 24197  2F6C  1301               	bcf	indf1,6
 24198  2F6D  1D03               	skipz
 24199  2F6E  1701               	bsf	indf1,6
 24200                           	line	88
 24201                           	
 24202  2F6F                     l14402:	
 24203  2F6F  0008               	return
 24204                           	opt stack 0
 24205                           GLOBAL	__end_of_setSw_Status
 24206  2F70                     	__end_of_setSw_Status:
 24207 ;; =============== function _setSw_Status ends ============
 24208                           
 24209                           	signat	_setSw_Status,8312
 24210                           	global	_DlyOff_Initialization
 24211                           psect	text4984,local,class=CODE,delta=2
 24212                           global __ptext4984
 24213  2DE8                     __ptext4984:
 24214                           
 24215 ;; *************** function _DlyOff_Initialization *****************
 24216 ;; Defined at:
 24217 ;;		line 57 in file "G:\Program\PIC\Source_File\DelayOff_B1.c"
 24218 ;; Parameters:    Size  Location     Type
 24219 ;;  sw              1    wreg     unsigned char 
 24220 ;; Auto vars:     Size  Location     Type
 24221 ;;  sw              1    2[BANK0 ] unsigned char 
 24222 ;; Return value:  Size  Location     Type
 24223 ;;		None               void
 24224 ;; Registers used:
 24225 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24226 ;; Tracked objects:
 24227 ;;		On entry : 0/0
 24228 ;;		On exit  : 0/0
 24229 ;;		Unchanged: 0/0
 24230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 24231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 24232 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 24233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 24234 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 24235 ;;Total ram usage:        1 bytes
 24236 ;; Hardware stack levels used:    1
 24237 ;; Hardware stack levels required when called:    5
 24238 ;; This function calls:
 24239 ;;		_DelayOffPointSelect
 24240 ;; This function is called by:
 24241 ;;		_DelayOff_Initialization
 24242 ;; This function uses a non-reentrant model
 24243 ;;
 24244                           psect	text4984
 24245                           	file	"G:\Program\PIC\Source_File\DelayOff_B1.c"
 24246                           	line	57
 24247                           	global	__size_of_DlyOff_Initialization
 24248  000B                     	__size_of_DlyOff_Initialization	equ	__end_of_DlyOff_Initialization-_DlyOff_Initializati
                                 on
 24249                           	
 24250  2DE8                     _DlyOff_Initialization:	
 24251                           	opt	stack 9
 24252                           ; Regs used in _DlyOff_Initialization: [wreg+fsr1l-status,0+pclath+cstack]
 24253                           ;DlyOff_Initialization@sw stored from wreg
 24254  2DE8  0020               	movlb 0	; select bank0
 24255  2DE9  00A2               	movwf	(DlyOff_Initialization@sw)
 24256                           	line	58
 24257                           	
 24258  2DEA                     l20816:	
 24259                           ;DelayOff_B1.c: 58: DelayOffPointSelect(sw);
 24260  2DEA  0822               	movf	(DlyOff_Initialization@sw),w
 24261  2DEB  31AE  2676  31AD   	fcall	_DelayOffPointSelect
 24262                           	line	59
 24263                           	
 24264  2DEE                     l20818:	
 24265                           ;DelayOff_B1.c: 59: DelayOff->Enable=1;
 24266  2DEE  0879               	movf	(_DelayOff),w
 24267  2DEF  0086               	movwf	fsr1l
 24268  2DF0  0187               	clrf fsr1h	
 24269                           	
 24270  2DF1  1401               	bsf	indf1,0
 24271                           	line	60
 24272                           	
 24273  2DF2                     l3504:	
 24274  2DF2  0008               	return
 24275                           	opt stack 0
 24276                           GLOBAL	__end_of_DlyOff_Initialization
 24277  2DF3                     	__end_of_DlyOff_Initialization:
 24278 ;; =============== function _DlyOff_Initialization ends ============
 24279                           
 24280                           	signat	_DlyOff_Initialization,4216
 24281                           	global	_CC2500_WriteREG
 24282                           psect	text4985,local,class=CODE,delta=2
 24283                           global __ptext4985
 24284  1000                     __ptext4985:
 24285                           
 24286 ;; *************** function _CC2500_WriteREG *****************
 24287 ;; Defined at:
 24288 ;;		line 228 in file "G:\Program\PIC\Source_File\CC2500_B1.c"
 24289 ;; Parameters:    Size  Location     Type
 24290 ;;  w_addr          1    wreg     unsigned char 
 24291 ;;  value           1    2[BANK0 ] unsigned char 
 24292 ;; Auto vars:     Size  Location     Type
 24293 ;;  w_addr          1    4[BANK0 ] unsigned char 
 24294 ;; Return value:  Size  Location     Type
 24295 ;;		None               void
 24296 ;; Registers used:
 24297 ;;		wreg, status,2, status,0, pclath, cstack
 24298 ;; Tracked objects:
 24299 ;;		On entry : 0/0
 24300 ;;		On exit  : 0/0
 24301 ;;		Unchanged: 0/0
 24302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 24303 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 24304 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 24305 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 24306 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 24307 ;;Total ram usage:        3 bytes
 24308 ;; Hardware stack levels used:    1
 24309 ;; Hardware stack levels required when called:    5
 24310 ;; This function calls:
 24311 ;;		_CC2500_WriteByte
 24312 ;; This function is called by:
 24313 ;;		_CC2500_InitSetREG
 24314 ;;		_CC2500_InitPATable
 24315 ;; This function uses a non-reentrant model
 24316 ;;
 24317                           psect	text4985
 24318                           	file	"G:\Program\PIC\Source_File\CC2500_B1.c"
 24319                           	line	228
 24320                           	global	__size_of_CC2500_WriteREG
 24321  001E                     	__size_of_CC2500_WriteREG	equ	__end_of_CC2500_WriteREG-_CC2500_WriteREG
 24322                           	
 24323  1000                     _CC2500_WriteREG:	
 24324                           	opt	stack 8
 24325                           ; Regs used in _CC2500_WriteREG: [wreg+status,2+status,0+pclath+cstack]
 24326                           ;CC2500_WriteREG@w_addr stored from wreg
 24327  1000  0020               	movlb 0	; select bank0
 24328  1001  00A4               	movwf	(CC2500_WriteREG@w_addr)
 24329                           	line	229
 24330                           	
 24331  1002                     l18864:	
 24332                           ;CC2500_B1.c: 229: RC4=0;
 24333  1002  120E               	bcf	(116/8),(116)&7
 24334                           	line	230
 24335                           	
 24336  1003                     l18866:	
 24337                           ;CC2500_B1.c: 230: SPI0Buffer=w_addr;
 24338  1003  0824               	movf	(CC2500_WriteREG@w_addr),w
 24339  1004  00A3               	movwf	(??_CC2500_WriteREG+0)+0
 24340  1005  0823               	movf	(??_CC2500_WriteREG+0)+0,w
 24341  1006  0021               	movlb 1	; select bank1
 24342  1007  00BE               	movwf	(_SPI0Buffer)^080h
 24343                           	line	231
 24344                           ;CC2500_B1.c: 231: while(RC2==1);
 24345  1008  2809               	goto	l2346
 24346                           	
 24347  1009                     l2347:	
 24348                           	
 24349  1009                     l2346:	
 24350  1009  0020               	movlb 0	; select bank0
 24351  100A  190E               	btfsc	(114/8),(114)&7
 24352  100B  280D               	goto	u6651
 24353  100C  280E               	goto	u6650
 24354  100D                     u6651:
 24355  100D  2809               	goto	l2346
 24356  100E                     u6650:
 24357  100E  280F               	goto	l18868
 24358                           	
 24359  100F                     l2348:	
 24360                           	line	232
 24361                           	
 24362  100F                     l18868:	
 24363                           ;CC2500_B1.c: 232: CC2500_WriteByte();
 24364  100F  31A2  2257  3190   	fcall	_CC2500_WriteByte
 24365                           	line	233
 24366                           	
 24367  1012                     l18870:	
 24368                           ;CC2500_B1.c: 233: SPI0Buffer=value;
 24369  1012  0020               	movlb 0	; select bank0
 24370  1013  0822               	movf	(CC2500_WriteREG@value),w
 24371  1014  00A3               	movwf	(??_CC2500_WriteREG+0)+0
 24372  1015  0823               	movf	(??_CC2500_WriteREG+0)+0,w
 24373  1016  0021               	movlb 1	; select bank1
 24374  1017  00BE               	movwf	(_SPI0Buffer)^080h
 24375                           	line	234
 24376                           	
 24377  1018                     l18872:	
 24378                           ;CC2500_B1.c: 234: CC2500_WriteByte();
 24379  1018  31A2  2257  3190   	fcall	_CC2500_WriteByte
 24380                           	line	235
 24381                           	
 24382  101B                     l18874:	
 24383                           ;CC2500_B1.c: 235: RC4=1;
 24384  101B  0020               	movlb 0	; select bank0
 24385  101C  160E               	bsf	(116/8),(116)&7
 24386                           	line	236
 24387                           	
 24388  101D                     l2349:	
 24389  101D  0008               	return
 24390                           	opt stack 0
 24391                           GLOBAL	__end_of_CC2500_WriteREG
 24392  101E                     	__end_of_CC2500_WriteREG:
 24393 ;; =============== function _CC2500_WriteREG ends ============
 24394                           
 24395                           	signat	_CC2500_WriteREG,8312
 24396                           	global	_CC2500_PowerRST
 24397                           psect	text4986,local,class=CODE,delta=2
 24398                           global __ptext4986
 24399  254F                     __ptext4986:
 24400                           
 24401 ;; *************** function _CC2500_PowerRST *****************
 24402 ;; Defined at:
 24403 ;;		line 111 in file "G:\Program\PIC\Source_File\CC2500_B1.c"
 24404 ;; Parameters:    Size  Location     Type
 24405 ;;		None
 24406 ;; Auto vars:     Size  Location     Type
 24407 ;;		None
 24408 ;; Return value:  Size  Location     Type
 24409 ;;		None               void
 24410 ;; Registers used:
 24411 ;;		wreg, status,2, status,0, pclath, cstack
 24412 ;; Tracked objects:
 24413 ;;		On entry : 0/0
 24414 ;;		On exit  : 0/0
 24415 ;;		Unchanged: 0/0
 24416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 24417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 24418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 24419 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 24420 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 24421 ;;Total ram usage:        1 bytes
 24422 ;; Hardware stack levels used:    1
 24423 ;; Hardware stack levels required when called:    5
 24424 ;; This function calls:
 24425 ;;		_DelayTime_1us
 24426 ;;		_CC2500_WriteByte
 24427 ;; This function is called by:
 24428 ;;		_CC2500_PowerOnInitial
 24429 ;; This function uses a non-reentrant model
 24430 ;;
 24431                           psect	text4986
 24432                           	file	"G:\Program\PIC\Source_File\CC2500_B1.c"
 24433                           	line	111
 24434                           	global	__size_of_CC2500_PowerRST
 24435  0037                     	__size_of_CC2500_PowerRST	equ	__end_of_CC2500_PowerRST-_CC2500_PowerRST
 24436                           	
 24437  254F                     _CC2500_PowerRST:	
 24438                           	opt	stack 9
 24439                           ; Regs used in _CC2500_PowerRST: [wreg+status,2+status,0+pclath+cstack]
 24440                           	line	112
 24441                           	
 24442  254F                     l20802:	
 24443                           ;CC2500_B1.c: 112: RC1=0;
 24444  254F  0020               	movlb 0	; select bank0
 24445  2550  108E               	bcf	(113/8),(113)&7
 24446                           	line	113
 24447                           ;CC2500_B1.c: 113: RC0=0;
 24448  2551  100E               	bcf	(112/8),(112)&7
 24449                           	line	114
 24450                           ;CC2500_B1.c: 114: RC4=1;
 24451  2552  160E               	bsf	(116/8),(116)&7
 24452                           	line	115
 24453                           	
 24454  2553                     l20804:	
 24455                           ;CC2500_B1.c: 115: DelayTime_1us(10);
 24456  2553  300A               	movlw	low(0Ah)
 24457  2554  00A0               	movwf	(?_DelayTime_1us)
 24458  2555  3000               	movlw	high(0Ah)
 24459  2556  00A1               	movwf	((?_DelayTime_1us))+1
 24460  2557  31A4  244C  31A5   	fcall	_DelayTime_1us
 24461                           	line	116
 24462                           	
 24463  255A                     l20806:	
 24464                           ;CC2500_B1.c: 116: RC4=0;
 24465  255A  0020               	movlb 0	; select bank0
 24466  255B  120E               	bcf	(116/8),(116)&7
 24467                           	line	117
 24468                           ;CC2500_B1.c: 117: DelayTime_1us(10);
 24469  255C  300A               	movlw	low(0Ah)
 24470  255D  00A0               	movwf	(?_DelayTime_1us)
 24471  255E  3000               	movlw	high(0Ah)
 24472  255F  00A1               	movwf	((?_DelayTime_1us))+1
 24473  2560  31A4  244C  31A5   	fcall	_DelayTime_1us
 24474                           	line	118
 24475                           	
 24476  2563                     l20808:	
 24477                           ;CC2500_B1.c: 118: RC4=1;
 24478  2563  0020               	movlb 0	; select bank0
 24479  2564  160E               	bsf	(116/8),(116)&7
 24480                           	line	119
 24481                           ;CC2500_B1.c: 119: DelayTime_1us(40);
 24482  2565  3028               	movlw	low(028h)
 24483  2566  00A0               	movwf	(?_DelayTime_1us)
 24484  2567  3000               	movlw	high(028h)
 24485  2568  00A1               	movwf	((?_DelayTime_1us))+1
 24486  2569  31A4  244C  31A5   	fcall	_DelayTime_1us
 24487                           	line	120
 24488                           	
 24489  256C                     l20810:	
 24490                           ;CC2500_B1.c: 120: RC4=0;
 24491  256C  0020               	movlb 0	; select bank0
 24492  256D  120E               	bcf	(116/8),(116)&7
 24493                           	line	121
 24494                           	
 24495  256E                     l20812:	
 24496                           ;CC2500_B1.c: 121: SPI0Buffer=0x30;
 24497  256E  3030               	movlw	(030h)
 24498  256F  00A6               	movwf	(??_CC2500_PowerRST+0)+0
 24499  2570  0826               	movf	(??_CC2500_PowerRST+0)+0,w
 24500  2571  0021               	movlb 1	; select bank1
 24501  2572  00BE               	movwf	(_SPI0Buffer)^080h
 24502                           	line	122
 24503                           ;CC2500_B1.c: 122: while(RC2==1);
 24504  2573  2D74               	goto	l2301
 24505                           	
 24506  2574                     l2302:	
 24507                           	
 24508  2574                     l2301:	
 24509  2574  0020               	movlb 0	; select bank0
 24510  2575  190E               	btfsc	(114/8),(114)&7
 24511  2576  2D78               	goto	u9431
 24512  2577  2D79               	goto	u9430
 24513  2578                     u9431:
 24514  2578  2D74               	goto	l2301
 24515  2579                     u9430:
 24516  2579  2D7A               	goto	l20814
 24517                           	
 24518  257A                     l2303:	
 24519                           	line	123
 24520                           	
 24521  257A                     l20814:	
 24522                           ;CC2500_B1.c: 123: CC2500_WriteByte();
 24523  257A  31A2  2257  31A5   	fcall	_CC2500_WriteByte
 24524                           	line	124
 24525                           ;CC2500_B1.c: 124: while(RC2==1);
 24526  257D  2D7E               	goto	l2304
 24527                           	
 24528  257E                     l2305:	
 24529                           	
 24530  257E                     l2304:	
 24531  257E  0020               	movlb 0	; select bank0
 24532  257F  190E               	btfsc	(114/8),(114)&7
 24533  2580  2D82               	goto	u9441
 24534  2581  2D83               	goto	u9440
 24535  2582                     u9441:
 24536  2582  2D7E               	goto	l2304
 24537  2583                     u9440:
 24538                           	
 24539  2583                     l2306:	
 24540                           	line	125
 24541                           ;CC2500_B1.c: 125: RC0=0;
 24542  2583  100E               	bcf	(112/8),(112)&7
 24543                           	line	126
 24544                           ;CC2500_B1.c: 126: RC4=1;
 24545  2584  160E               	bsf	(116/8),(116)&7
 24546                           	line	127
 24547                           	
 24548  2585                     l2307:	
 24549  2585  0008               	return
 24550                           	opt stack 0
 24551                           GLOBAL	__end_of_CC2500_PowerRST
 24552  2586                     	__end_of_CC2500_PowerRST:
 24553 ;; =============== function _CC2500_PowerRST ends ============
 24554                           
 24555                           	signat	_CC2500_PowerRST,88
 24556                           	global	_setRF_RxStatus
 24557                           psect	text4987,local,class=CODE,delta=2
 24558                           global __ptext4987
 24559  2EF6                     __ptext4987:
 24560                           
 24561 ;; *************** function _setRF_RxStatus *****************
 24562 ;; Defined at:
 24563 ;;		line 44 in file "G:\Program\PIC\Source_File\RF_Control_B1.c"
 24564 ;; Parameters:    Size  Location     Type
 24565 ;;  rf              1    wreg     unsigned char 
 24566 ;;  command         1    2[BANK0 ] unsigned char 
 24567 ;; Auto vars:     Size  Location     Type
 24568 ;;  rf              1    3[BANK0 ] unsigned char 
 24569 ;; Return value:  Size  Location     Type
 24570 ;;		None               void
 24571 ;; Registers used:
 24572 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24573 ;; Tracked objects:
 24574 ;;		On entry : 0/0
 24575 ;;		On exit  : 0/0
 24576 ;;		Unchanged: 0/0
 24577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 24578 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 24579 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 24580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 24581 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 24582 ;;Total ram usage:        2 bytes
 24583 ;; Hardware stack levels used:    1
 24584 ;; Hardware stack levels required when called:    5
 24585 ;; This function calls:
 24586 ;;		_RfPointSelect
 24587 ;; This function is called by:
 24588 ;;		_CC2500_RxData
 24589 ;; This function uses a non-reentrant model
 24590 ;;
 24591                           psect	text4987
 24592                           	file	"G:\Program\PIC\Source_File\RF_Control_B1.c"
 24593                           	line	44
 24594                           	global	__size_of_setRF_RxStatus
 24595  000F                     	__size_of_setRF_RxStatus	equ	__end_of_setRF_RxStatus-_setRF_RxStatus
 24596                           	
 24597  2EF6                     _setRF_RxStatus:	
 24598                           	opt	stack 7
 24599                           ; Regs used in _setRF_RxStatus: [wreg+fsr1l-status,0+pclath+cstack]
 24600                           ;setRF_RxStatus@rf stored from wreg
 24601  2EF6  0020               	movlb 0	; select bank0
 24602  2EF7  00A3               	movwf	(setRF_RxStatus@rf)
 24603                           	line	45
 24604                           	
 24605  2EF8                     l20798:	
 24606                           ;RF_Control_B1.c: 45: RfPointSelect(rf);
 24607  2EF8  0823               	movf	(setRF_RxStatus@rf),w
 24608  2EF9  31AE  26A0  31AE   	fcall	_RfPointSelect
 24609                           	line	46
 24610                           	
 24611  2EFC                     l20800:	
 24612                           ;RF_Control_B1.c: 46: RF->RxStatus=command;
 24613  2EFC  087B               	movf	(_RF),w
 24614  2EFD  0086               	movwf	fsr1l
 24615  2EFE  0187               	clrf fsr1h	
 24616                           	
 24617  2EFF  0020               	movlb 0	; select bank0
 24618  2F00  0822               	movf	(setRF_RxStatus@command),w
 24619  2F01  1181               	bcf	indf1,3
 24620  2F02  1D03               	skipz
 24621  2F03  1581               	bsf	indf1,3
 24622                           	line	47
 24623                           	
 24624  2F04                     l13149:	
 24625  2F04  0008               	return
 24626                           	opt stack 0
 24627                           GLOBAL	__end_of_setRF_RxStatus
 24628  2F05                     	__end_of_setRF_RxStatus:
 24629 ;; =============== function _setRF_RxStatus ends ============
 24630                           
 24631                           	signat	_setRF_RxStatus,8312
 24632                           	global	_CC2500_ReadStatus
 24633                           psect	text4988,local,class=CODE,delta=2
 24634                           global __ptext4988
 24635  21CA                     __ptext4988:
 24636                           
 24637 ;; *************** function _CC2500_ReadStatus *****************
 24638 ;; Defined at:
 24639 ;;		line 268 in file "G:\Program\PIC\Source_File\CC2500_B1.c"
 24640 ;; Parameters:    Size  Location     Type
 24641 ;;  status_addr     1    wreg     unsigned char 
 24642 ;; Auto vars:     Size  Location     Type
 24643 ;;  status_addr     1    3[BANK0 ] unsigned char 
 24644 ;; Return value:  Size  Location     Type
 24645 ;;		None               void
 24646 ;; Registers used:
 24647 ;;		wreg, status,2, status,0, pclath, cstack
 24648 ;; Tracked objects:
 24649 ;;		On entry : 0/0
 24650 ;;		On exit  : 0/0
 24651 ;;		Unchanged: 0/0
 24652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 24653 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 24654 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 24655 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 24656 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 24657 ;;Total ram usage:        2 bytes
 24658 ;; Hardware stack levels used:    1
 24659 ;; Hardware stack levels required when called:    5
 24660 ;; This function calls:
 24661 ;;		_CC2500_WriteByte
 24662 ;;		_CC2500_ReadByte
 24663 ;; This function is called by:
 24664 ;;		_CC2500_RxData
 24665 ;; This function uses a non-reentrant model
 24666 ;;
 24667                           psect	text4988
 24668                           	file	"G:\Program\PIC\Source_File\CC2500_B1.c"
 24669                           	line	268
 24670                           	global	__size_of_CC2500_ReadStatus
 24671  0020                     	__size_of_CC2500_ReadStatus	equ	__end_of_CC2500_ReadStatus-_CC2500_ReadStatus
 24672                           	
 24673  21CA                     _CC2500_ReadStatus:	
 24674                           	opt	stack 7
 24675                           ; Regs used in _CC2500_ReadStatus: [wreg+status,2+status,0+pclath+cstack]
 24676                           ;CC2500_ReadStatus@status_addr stored from wreg
 24677  21CA  0020               	movlb 0	; select bank0
 24678  21CB  00A3               	movwf	(CC2500_ReadStatus@status_addr)
 24679                           	line	269
 24680                           	
 24681  21CC                     l18836:	
 24682                           ;CC2500_B1.c: 269: RC4=0;
 24683  21CC  120E               	bcf	(116/8),(116)&7
 24684                           	line	270
 24685                           	
 24686  21CD                     l18838:	
 24687                           ;CC2500_B1.c: 270: SPI0Buffer=status_addr+0xC0;
 24688  21CD  0823               	movf	(CC2500_ReadStatus@status_addr),w
 24689  21CE  3EC0               	addlw	0C0h
 24690  21CF  00A2               	movwf	(??_CC2500_ReadStatus+0)+0
 24691  21D0  0822               	movf	(??_CC2500_ReadStatus+0)+0,w
 24692  21D1  0021               	movlb 1	; select bank1
 24693  21D2  00BE               	movwf	(_SPI0Buffer)^080h
 24694                           	line	272
 24695                           ;CC2500_B1.c: 272: while(RC2==1);
 24696  21D3  29D4               	goto	l2364
 24697                           	
 24698  21D4                     l2365:	
 24699                           	
 24700  21D4                     l2364:	
 24701  21D4  0020               	movlb 0	; select bank0
 24702  21D5  190E               	btfsc	(114/8),(114)&7
 24703  21D6  29D8               	goto	u6621
 24704  21D7  29D9               	goto	u6620
 24705  21D8                     u6621:
 24706  21D8  29D4               	goto	l2364
 24707  21D9                     u6620:
 24708  21D9  29DA               	goto	l18840
 24709                           	
 24710  21DA                     l2366:	
 24711                           	line	274
 24712                           	
 24713  21DA                     l18840:	
 24714                           ;CC2500_B1.c: 274: CC2500_WriteByte();
 24715  21DA  31A2  2257  31A1   	fcall	_CC2500_WriteByte
 24716                           	line	275
 24717                           ;CC2500_B1.c: 275: CC2500_ReadByte();
 24718  21DD  31A3  2368  31A1   	fcall	_CC2500_ReadByte
 24719                           	line	276
 24720                           	
 24721  21E0                     l18842:	
 24722                           ;CC2500_B1.c: 276: RC4=1;
 24723  21E0  0020               	movlb 0	; select bank0
 24724  21E1  160E               	bsf	(116/8),(116)&7
 24725                           	line	278
 24726                           	
 24727  21E2                     l18844:	
 24728                           ;CC2500_B1.c: 278: s_data=SPI0Buffer;
 24729  21E2  0021               	movlb 1	; select bank1
 24730  21E3  083E               	movf	(_SPI0Buffer)^080h,w
 24731  21E4  0020               	movlb 0	; select bank0
 24732  21E5  00A2               	movwf	(??_CC2500_ReadStatus+0)+0
 24733  21E6  0822               	movf	(??_CC2500_ReadStatus+0)+0,w
 24734  21E7  0021               	movlb 1	; select bank1
 24735  21E8  00C2               	movwf	(_s_data)^080h
 24736                           	line	279
 24737                           	
 24738  21E9                     l2367:	
 24739  21E9  0008               	return
 24740                           	opt stack 0
 24741                           GLOBAL	__end_of_CC2500_ReadStatus
 24742  21EA                     	__end_of_CC2500_ReadStatus:
 24743 ;; =============== function _CC2500_ReadStatus ends ============
 24744                           
 24745                           	signat	_CC2500_ReadStatus,4216
 24746                           	global	_CC2500_WriteCommand
 24747                           psect	text4989,local,class=CODE,delta=2
 24748                           global __ptext4989
 24749  2137                     __ptext4989:
 24750                           
 24751 ;; *************** function _CC2500_WriteCommand *****************
 24752 ;; Defined at:
 24753 ;;		line 254 in file "G:\Program\PIC\Source_File\CC2500_B1.c"
 24754 ;; Parameters:    Size  Location     Type
 24755 ;;  command         1    wreg     unsigned char 
 24756 ;; Auto vars:     Size  Location     Type
 24757 ;;  command         1    3[BANK0 ] unsigned char 
 24758 ;; Return value:  Size  Location     Type
 24759 ;;		None               void
 24760 ;; Registers used:
 24761 ;;		wreg, status,2, status,0, pclath, cstack
 24762 ;; Tracked objects:
 24763 ;;		On entry : 0/0
 24764 ;;		On exit  : 0/0
 24765 ;;		Unchanged: 0/0
 24766 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 24767 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 24768 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 24769 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 24770 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 24771 ;;Total ram usage:        2 bytes
 24772 ;; Hardware stack levels used:    1
 24773 ;; Hardware stack levels required when called:    5
 24774 ;; This function calls:
 24775 ;;		_CC2500_WriteByte
 24776 ;; This function is called by:
 24777 ;;		_CC2500_TxData
 24778 ;;		_CC2500_RxData
 24779 ;;		_CC2500_ClearTXFIFO
 24780 ;;		_CC2500_ClearRXFIFO
 24781 ;;		_CC2500_FrequencyCabr
 24782 ;;		_CC2500_SIDLEMode
 24783 ;;		_setRF_Main
 24784 ;;		_setRF_Enable
 24785 ;;		_RF_RxDisable
 24786 ;; This function uses a non-reentrant model
 24787 ;;
 24788                           psect	text4989
 24789                           	file	"G:\Program\PIC\Source_File\CC2500_B1.c"
 24790                           	line	254
 24791                           	global	__size_of_CC2500_WriteCommand
 24792  0015                     	__size_of_CC2500_WriteCommand	equ	__end_of_CC2500_WriteCommand-_CC2500_WriteCommand
 24793                           	
 24794  2137                     _CC2500_WriteCommand:	
 24795                           	opt	stack 8
 24796                           ; Regs used in _CC2500_WriteCommand: [wreg+status,2+status,0+pclath+cstack]
 24797                           ;CC2500_WriteCommand@command stored from wreg
 24798  2137  0020               	movlb 0	; select bank0
 24799  2138  00A3               	movwf	(CC2500_WriteCommand@command)
 24800                           	line	255
 24801                           	
 24802  2139                     l18828:	
 24803                           ;CC2500_B1.c: 255: RC4=0;
 24804  2139  120E               	bcf	(116/8),(116)&7
 24805                           	line	256
 24806                           	
 24807  213A                     l18830:	
 24808                           ;CC2500_B1.c: 256: SPI0Buffer=command;
 24809  213A  0823               	movf	(CC2500_WriteCommand@command),w
 24810  213B  00A2               	movwf	(??_CC2500_WriteCommand+0)+0
 24811  213C  0822               	movf	(??_CC2500_WriteCommand+0)+0,w
 24812  213D  0021               	movlb 1	; select bank1
 24813  213E  00BE               	movwf	(_SPI0Buffer)^080h
 24814                           	line	258
 24815                           ;CC2500_B1.c: 258: while(RC2==1);
 24816  213F  2940               	goto	l2358
 24817                           	
 24818  2140                     l2359:	
 24819                           	
 24820  2140                     l2358:	
 24821  2140  0020               	movlb 0	; select bank0
 24822  2141  190E               	btfsc	(114/8),(114)&7
 24823  2142  2944               	goto	u6611
 24824  2143  2945               	goto	u6610
 24825  2144                     u6611:
 24826  2144  2940               	goto	l2358
 24827  2145                     u6610:
 24828  2145  2946               	goto	l18832
 24829                           	
 24830  2146                     l2360:	
 24831                           	line	260
 24832                           	
 24833  2146                     l18832:	
 24834                           ;CC2500_B1.c: 260: CC2500_WriteByte();
 24835  2146  31A2  2257  31A1   	fcall	_CC2500_WriteByte
 24836                           	line	261
 24837                           	
 24838  2149                     l18834:	
 24839                           ;CC2500_B1.c: 261: RC4=1;
 24840  2149  0020               	movlb 0	; select bank0
 24841  214A  160E               	bsf	(116/8),(116)&7
 24842                           	line	263
 24843                           	
 24844  214B                     l2361:	
 24845  214B  0008               	return
 24846                           	opt stack 0
 24847                           GLOBAL	__end_of_CC2500_WriteCommand
 24848  214C                     	__end_of_CC2500_WriteCommand:
 24849 ;; =============== function _CC2500_WriteCommand ends ============
 24850                           
 24851                           	signat	_CC2500_WriteCommand,4216
 24852                           	global	_setBuz
 24853                           psect	text4990,local,class=CODE,delta=2
 24854                           global __ptext4990
 24855  1499                     __ptext4990:
 24856                           
 24857 ;; *************** function _setBuz *****************
 24858 ;; Defined at:
 24859 ;;		line 45 in file "G:\Program\PIC\Source_File\Buzzer_B1.c"
 24860 ;; Parameters:    Size  Location     Type
 24861 ;;  buz             1    wreg     unsigned char 
 24862 ;;  count           1    9[BANK0 ] unsigned char 
 24863 ;;  time            2   10[BANK0 ] int 
 24864 ;; Auto vars:     Size  Location     Type
 24865 ;;  buz             1   13[BANK0 ] unsigned char 
 24866 ;; Return value:  Size  Location     Type
 24867 ;;		None               void
 24868 ;; Registers used:
 24869 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24870 ;; Tracked objects:
 24871 ;;		On entry : 0/0
 24872 ;;		On exit  : 0/0
 24873 ;;		Unchanged: 0/0
 24874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 24875 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 24876 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 24877 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 24878 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
       0       0
 24879 ;;Total ram usage:        5 bytes
 24880 ;; Hardware stack levels used:    1
 24881 ;; Hardware stack levels required when called:    5
 24882 ;; This function calls:
 24883 ;;		_BuzPointSelect
 24884 ;;		___awdiv
 24885 ;; This function is called by:
 24886 ;;		_DlyOff_Main
 24887 ;;		_setDimmerLights_Main
 24888 ;;		_DimmerLights_ERROR
 24889 ;;		_MainT
 24890 ;;		_setOverTemp_ERROR
 24891 ;;		_setLog_Code
 24892 ;;		_setControl_Lights_Table
 24893 ;;		_setRFSW_Control
 24894 ;;		_setSw_Main
 24895 ;;		_Sw_OnFunc
 24896 ;; This function uses a non-reentrant model
 24897 ;;
 24898                           psect	text4990
 24899                           	file	"G:\Program\PIC\Source_File\Buzzer_B1.c"
 24900                           	line	45
 24901                           	global	__size_of_setBuz
 24902  00A6                     	__size_of_setBuz	equ	__end_of_setBuz-_setBuz
 24903                           	
 24904  1499                     _setBuz:	
 24905                           	opt	stack 8
 24906                           ; Regs used in _setBuz: [wreg+fsr1l-status,0+pclath+cstack]
 24907                           ;setBuz@buz stored from wreg
 24908  1499  0020               	movlb 0	; select bank0
 24909  149A  00AD               	movwf	(setBuz@buz)
 24910                           	line	46
 24911                           	
 24912  149B                     l18800:	
 24913                           ;Buzzer_B1.c: 46: BuzPointSelect(buz);
 24914  149B  082D               	movf	(setBuz@buz),w
 24915  149C  31AE  2668  3194   	fcall	_BuzPointSelect
 24916                           	line	47
 24917                           ;Buzzer_B1.c: 47: time/=5;
 24918  149F  3005               	movlw	low(05h)
 24919  14A0  0020               	movlb 0	; select bank0
 24920  14A1  00A0               	movwf	(?___awdiv)
 24921  14A2  3000               	movlw	high(05h)
 24922  14A3  00A1               	movwf	((?___awdiv))+1
 24923  14A4  082B               	movf	(setBuz@time+1),w
 24924  14A5  01A3               	clrf	1+(?___awdiv)+02h
 24925  14A6  07A3               	addwf	1+(?___awdiv)+02h
 24926  14A7  082A               	movf	(setBuz@time),w
 24927  14A8  01A2               	clrf	0+(?___awdiv)+02h
 24928  14A9  07A2               	addwf	0+(?___awdiv)+02h
 24929                           
 24930  14AA  319C  2445  3194   	fcall	___awdiv
 24931  14AD  0020               	movlb 0	; select bank0
 24932  14AE  0821               	movf	(1+(?___awdiv)),w
 24933  14AF  01AB               	clrf	(setBuz@time+1)
 24934  14B0  07AB               	addwf	(setBuz@time+1)
 24935  14B1  0820               	movf	(0+(?___awdiv)),w
 24936  14B2  01AA               	clrf	(setBuz@time)
 24937  14B3  07AA               	addwf	(setBuz@time)
 24938                           
 24939                           	line	48
 24940                           	
 24941  14B4                     l18802:	
 24942                           ;Buzzer_B1.c: 48: if(Buz->Enable)
 24943  14B4  0878               	movf	(_Buz),w
 24944  14B5  0086               	movwf	fsr1l
 24945  14B6  3001               	movlw 1	; select bank2/3
 24946  14B7  0087               	movwf fsr1h	
 24947                           	
 24948  14B8  1C01               	btfss	indf1,0
 24949  14B9  2CBB               	goto	u6551
 24950  14BA  2CBC               	goto	u6550
 24951  14BB                     u6551:
 24952  14BB  2D3E               	goto	l1127
 24953  14BC                     u6550:
 24954                           	line	50
 24955                           	
 24956  14BC                     l18804:	
 24957                           ;Buzzer_B1.c: 49: {
 24958                           ;Buzzer_B1.c: 50: if(Buz->GO == 0)
 24959  14BC  0878               	movf	(_Buz),w
 24960  14BD  0086               	movwf	fsr1l
 24961  14BE  3001               	movlw 1	; select bank2/3
 24962  14BF  0087               	movwf fsr1h	
 24963                           	
 24964  14C0  1881               	btfsc	indf1,1
 24965  14C1  2CC3               	goto	u6561
 24966  14C2  2CC4               	goto	u6560
 24967  14C3                     u6561:
 24968  14C3  2CFB               	goto	l18820
 24969  14C4                     u6560:
 24970                           	line	52
 24971                           	
 24972  14C4                     l18806:	
 24973                           ;Buzzer_B1.c: 51: {
 24974                           ;Buzzer_B1.c: 52: Buz->GO=1;
 24975  14C4  0878               	movf	(_Buz),w
 24976  14C5  0086               	movwf	fsr1l
 24977  14C6  3001               	movlw 1	; select bank2/3
 24978  14C7  0087               	movwf fsr1h	
 24979                           	
 24980  14C8  1481               	bsf	indf1,1
 24981                           	line	53
 24982                           	
 24983  14C9                     l18808:	
 24984                           ;Buzzer_B1.c: 53: Buz->Count=(--count);
 24985  14C9  3001               	movlw	low(01h)
 24986  14CA  02A9               	subwf	(setBuz@count),f
 24987  14CB  0829               	movf	((setBuz@count)),w
 24988  14CC  00AC               	movwf	(??_setBuz+0)+0
 24989  14CD  0878               	movf	(_Buz),w
 24990  14CE  3E03               	addlw	03h
 24991  14CF  0086               	movwf	fsr1l
 24992  14D0  3001               	movlw 1	; select bank2/3
 24993  14D1  0087               	movwf fsr1h	
 24994                           	
 24995  14D2  082C               	movf	(??_setBuz+0)+0,w
 24996  14D3  0081               	movwf	indf1
 24997                           	line	54
 24998                           	
 24999  14D4                     l18810:	
 25000                           ;Buzzer_B1.c: 54: Buz->TimeValue=time;
 25001  14D4  0878               	movf	(_Buz),w
 25002  14D5  3E06               	addlw	06h
 25003  14D6  0086               	movwf	fsr1l
 25004  14D7  3001               	movlw 1	; select bank2/3
 25005  14D8  0087               	movwf fsr1h	
 25006                           	
 25007  14D9  082A               	movf	(setBuz@time),w
 25008  14DA  3FC0               	movwi	[0]fsr1
 25009  14DB  082B               	movf	(setBuz@time+1),w
 25010  14DC  3FC1               	movwi	[1]fsr1
 25011                           	line	56
 25012                           	
 25013  14DD                     l18812:	
 25014                           ;Buzzer_B1.c: 56: if(buz ==1)
 25015  14DD  082D               	movf	(setBuz@buz),w
 25016  14DE  3A01               	xorlw	01h&0ffh
 25017  14DF  1D03               	skipz
 25018  14E0  2CE2               	goto	u6571
 25019  14E1  2CE3               	goto	u6570
 25020  14E2                     u6571:
 25021  14E2  2CE5               	goto	l18816
 25022  14E3                     u6570:
 25023                           	line	58
 25024                           	
 25025  14E3                     l18814:	
 25026                           ;Buzzer_B1.c: 57: {
 25027                           ;Buzzer_B1.c: 58: RB3=1;
 25028  14E3  158D               	bsf	(107/8),(107)&7
 25029  14E4  2CE5               	goto	l18816
 25030                           	line	59
 25031                           	
 25032  14E5                     l1121:	
 25033                           	line	61
 25034                           	
 25035  14E5                     l18816:	
 25036                           ;Buzzer_B1.c: 59: }
 25037                           ;Buzzer_B1.c: 61: if(Buz->TimeValue == 0)
 25038  14E5  0878               	movf	(_Buz),w
 25039  14E6  3E06               	addlw	06h
 25040  14E7  0086               	movwf	fsr1l
 25041  14E8  3001               	movlw 1	; select bank2/3
 25042  14E9  0087               	movwf fsr1h	
 25043                           	
 25044  14EA  0016               	moviw	fsr1++
 25045  14EB  0401               	iorwf	indf1,w
 25046  14EC  1D03               	skipz
 25047  14ED  2CEF               	goto	u6581
 25048  14EE  2CF0               	goto	u6580
 25049  14EF                     u6581:
 25050  14EF  2D3E               	goto	l1127
 25051  14F0                     u6580:
 25052                           	line	63
 25053                           	
 25054  14F0                     l18818:	
 25055                           ;Buzzer_B1.c: 62: {
 25056                           ;Buzzer_B1.c: 63: Buz->TimeValue=100/5;
 25057  14F0  0878               	movf	(_Buz),w
 25058  14F1  3E06               	addlw	06h
 25059  14F2  0086               	movwf	fsr1l
 25060  14F3  3001               	movlw 1	; select bank2/3
 25061  14F4  0087               	movwf fsr1h	
 25062                           	
 25063  14F5  3014               	movlw	low(014h)
 25064  14F6  3FC0               	movwi	[0]fsr1
 25065  14F7  3000               	movlw	high(014h)
 25066  14F8  3FC1               	movwi	[1]fsr1
 25067  14F9  2D3E               	goto	l1127
 25068                           	line	64
 25069                           	
 25070  14FA                     l1122:	
 25071                           	line	65
 25072                           ;Buzzer_B1.c: 64: }
 25073                           ;Buzzer_B1.c: 65: }
 25074  14FA  2D3E               	goto	l1127
 25075                           	line	66
 25076                           	
 25077  14FB                     l1120:	
 25078                           	line	68
 25079                           	
 25080  14FB                     l18820:	
 25081                           ;Buzzer_B1.c: 66: else
 25082                           ;Buzzer_B1.c: 67: {
 25083                           ;Buzzer_B1.c: 68: if(Buz->BufferStatus1 == 0)
 25084  14FB  0878               	movf	(_Buz),w
 25085  14FC  0086               	movwf	fsr1l
 25086  14FD  3001               	movlw 1	; select bank2/3
 25087  14FE  0087               	movwf fsr1h	
 25088                           	
 25089  14FF  1981               	btfsc	indf1,3
 25090  1500  2D02               	goto	u6591
 25091  1501  2D03               	goto	u6590
 25092  1502                     u6591:
 25093  1502  2D1B               	goto	l18824
 25094  1503                     u6590:
 25095                           	line	70
 25096                           	
 25097  1503                     l18822:	
 25098                           ;Buzzer_B1.c: 69: {
 25099                           ;Buzzer_B1.c: 70: Buz->BufferStatus1=1;
 25100  1503  0878               	movf	(_Buz),w
 25101  1504  0086               	movwf	fsr1l
 25102  1505  3001               	movlw 1	; select bank2/3
 25103  1506  0087               	movwf fsr1h	
 25104                           	
 25105  1507  1581               	bsf	indf1,3
 25106                           	line	71
 25107                           ;Buzzer_B1.c: 71: Buz->CountBuffer1=count;
 25108  1508  0829               	movf	(setBuz@count),w
 25109  1509  00AC               	movwf	(??_setBuz+0)+0
 25110  150A  0878               	movf	(_Buz),w
 25111  150B  3E04               	addlw	04h
 25112  150C  0086               	movwf	fsr1l
 25113  150D  3001               	movlw 1	; select bank2/3
 25114  150E  0087               	movwf fsr1h	
 25115                           	
 25116  150F  082C               	movf	(??_setBuz+0)+0,w
 25117  1510  0081               	movwf	indf1
 25118                           	line	72
 25119                           ;Buzzer_B1.c: 72: Buz->TimeValueBuffer1=time;
 25120  1511  0878               	movf	(_Buz),w
 25121  1512  3E08               	addlw	08h
 25122  1513  0086               	movwf	fsr1l
 25123  1514  3001               	movlw 1	; select bank2/3
 25124  1515  0087               	movwf fsr1h	
 25125                           	
 25126  1516  082A               	movf	(setBuz@time),w
 25127  1517  3FC0               	movwi	[0]fsr1
 25128  1518  082B               	movf	(setBuz@time+1),w
 25129  1519  3FC1               	movwi	[1]fsr1
 25130                           	line	73
 25131                           ;Buzzer_B1.c: 73: }
 25132  151A  2D3E               	goto	l1127
 25133                           	line	74
 25134                           	
 25135  151B                     l1124:	
 25136                           	
 25137  151B                     l18824:	
 25138                           ;Buzzer_B1.c: 74: else if(Buz->BufferStatus2 == 0)
 25139  151B  0878               	movf	(_Buz),w
 25140  151C  0086               	movwf	fsr1l
 25141  151D  3001               	movlw 1	; select bank2/3
 25142  151E  0087               	movwf fsr1h	
 25143                           	
 25144  151F  1A01               	btfsc	indf1,4
 25145  1520  2D22               	goto	u6601
 25146  1521  2D23               	goto	u6600
 25147  1522                     u6601:
 25148  1522  2D3E               	goto	l1127
 25149  1523                     u6600:
 25150                           	line	76
 25151                           	
 25152  1523                     l18826:	
 25153                           ;Buzzer_B1.c: 75: {
 25154                           ;Buzzer_B1.c: 76: Buz->BufferStatus2=1;
 25155  1523  0878               	movf	(_Buz),w
 25156  1524  0086               	movwf	fsr1l
 25157  1525  3001               	movlw 1	; select bank2/3
 25158  1526  0087               	movwf fsr1h	
 25159                           	
 25160  1527  1601               	bsf	indf1,4
 25161                           	line	77
 25162                           ;Buzzer_B1.c: 77: Buz->CountBuffer2=count;
 25163  1528  0829               	movf	(setBuz@count),w
 25164  1529  00AC               	movwf	(??_setBuz+0)+0
 25165  152A  0878               	movf	(_Buz),w
 25166  152B  3E05               	addlw	05h
 25167  152C  0086               	movwf	fsr1l
 25168  152D  3001               	movlw 1	; select bank2/3
 25169  152E  0087               	movwf fsr1h	
 25170                           	
 25171  152F  082C               	movf	(??_setBuz+0)+0,w
 25172  1530  0081               	movwf	indf1
 25173                           	line	78
 25174                           ;Buzzer_B1.c: 78: Buz->TimeValueBuffer2=time;
 25175  1531  0878               	movf	(_Buz),w
 25176  1532  3E0A               	addlw	0Ah
 25177  1533  0086               	movwf	fsr1l
 25178  1534  3001               	movlw 1	; select bank2/3
 25179  1535  0087               	movwf fsr1h	
 25180                           	
 25181  1536  082A               	movf	(setBuz@time),w
 25182  1537  3FC0               	movwi	[0]fsr1
 25183  1538  082B               	movf	(setBuz@time+1),w
 25184  1539  3FC1               	movwi	[1]fsr1
 25185  153A  2D3E               	goto	l1127
 25186                           	line	79
 25187                           	
 25188  153B                     l1126:	
 25189  153B  2D3E               	goto	l1127
 25190                           	line	80
 25191                           	
 25192  153C                     l1125:	
 25193  153C  2D3E               	goto	l1127
 25194                           	
 25195  153D                     l1123:	
 25196  153D  2D3E               	goto	l1127
 25197                           	line	81
 25198                           	
 25199  153E                     l1119:	
 25200                           	line	82
 25201                           	
 25202  153E                     l1127:	
 25203  153E  0008               	return
 25204                           	opt stack 0
 25205                           GLOBAL	__end_of_setBuz
 25206  153F                     	__end_of_setBuz:
 25207 ;; =============== function _setBuz ends ============
 25208                           
 25209                           	signat	_setBuz,12408
 25210                           	global	_setBuz_Enable
 25211                           psect	text4991,local,class=CODE,delta=2
 25212                           global __ptext4991
 25213  2F50                     __ptext4991:
 25214                           
 25215 ;; *************** function _setBuz_Enable *****************
 25216 ;; Defined at:
 25217 ;;		line 34 in file "G:\Program\PIC\Source_File\Buzzer_B1.c"
 25218 ;; Parameters:    Size  Location     Type
 25219 ;;  buz             1    wreg     unsigned char 
 25220 ;;  command         1    2[BANK0 ] unsigned char 
 25221 ;; Auto vars:     Size  Location     Type
 25222 ;;  buz             1    3[BANK0 ] unsigned char 
 25223 ;; Return value:  Size  Location     Type
 25224 ;;		None               void
 25225 ;; Registers used:
 25226 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 25227 ;; Tracked objects:
 25228 ;;		On entry : 0/0
 25229 ;;		On exit  : 0/0
 25230 ;;		Unchanged: 0/0
 25231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 25232 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 25233 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 25234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 25235 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 25236 ;;Total ram usage:        2 bytes
 25237 ;; Hardware stack levels used:    1
 25238 ;; Hardware stack levels required when called:    5
 25239 ;; This function calls:
 25240 ;;		_BuzPointSelect
 25241 ;; This function is called by:
 25242 ;;		_setBuz_Initialization
 25243 ;; This function uses a non-reentrant model
 25244 ;;
 25245                           psect	text4991
 25246                           	file	"G:\Program\PIC\Source_File\Buzzer_B1.c"
 25247                           	line	34
 25248                           	global	__size_of_setBuz_Enable
 25249  0010                     	__size_of_setBuz_Enable	equ	__end_of_setBuz_Enable-_setBuz_Enable
 25250                           	
 25251  2F50                     _setBuz_Enable:	
 25252                           	opt	stack 8
 25253                           ; Regs used in _setBuz_Enable: [wreg+fsr1l-status,0+pclath+cstack]
 25254                           ;setBuz_Enable@buz stored from wreg
 25255  2F50  0020               	movlb 0	; select bank0
 25256  2F51  00A3               	movwf	(setBuz_Enable@buz)
 25257                           	line	35
 25258                           	
 25259  2F52                     l20794:	
 25260                           ;Buzzer_B1.c: 35: BuzPointSelect(buz);
 25261  2F52  0823               	movf	(setBuz_Enable@buz),w
 25262  2F53  31AE  2668  31AF   	fcall	_BuzPointSelect
 25263                           	line	36
 25264                           	
 25265  2F56                     l20796:	
 25266                           ;Buzzer_B1.c: 36: Buz->Enable=command;
 25267  2F56  0878               	movf	(_Buz),w
 25268  2F57  0086               	movwf	fsr1l
 25269  2F58  3001               	movlw 1	; select bank2/3
 25270  2F59  0087               	movwf fsr1h	
 25271                           	
 25272  2F5A  0020               	movlb 0	; select bank0
 25273  2F5B  0822               	movf	(setBuz_Enable@command),w
 25274  2F5C  1001               	bcf	indf1,0
 25275  2F5D  1D03               	skipz
 25276  2F5E  1401               	bsf	indf1,0
 25277                           	line	37
 25278                           	
 25279  2F5F                     l1113:	
 25280  2F5F  0008               	return
 25281                           	opt stack 0
 25282                           GLOBAL	__end_of_setBuz_Enable
 25283  2F60                     	__end_of_setBuz_Enable:
 25284 ;; =============== function _setBuz_Enable ends ============
 25285                           
 25286                           	signat	_setBuz_Enable,8312
 25287                           	global	_setBuz_Main
 25288                           psect	text4992,local,class=CODE,delta=2
 25289                           global __ptext4992
 25290  0A2B                     __ptext4992:
 25291                           
 25292 ;; *************** function _setBuz_Main *****************
 25293 ;; Defined at:
 25294 ;;		line 85 in file "G:\Program\PIC\Source_File\Buzzer_B1.c"
 25295 ;; Parameters:    Size  Location     Type
 25296 ;;  buz             1    wreg     unsigned char 
 25297 ;; Auto vars:     Size  Location     Type
 25298 ;;  buz             1    4[BANK0 ] unsigned char 
 25299 ;; Return value:  Size  Location     Type
 25300 ;;		None               void
 25301 ;; Registers used:
 25302 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 25303 ;; Tracked objects:
 25304 ;;		On entry : 0/0
 25305 ;;		On exit  : 0/0
 25306 ;;		Unchanged: 0/0
 25307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 25308 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 25309 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 25310 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 25311 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 25312 ;;Total ram usage:        3 bytes
 25313 ;; Hardware stack levels used:    1
 25314 ;; Hardware stack levels required when called:    5
 25315 ;; This function calls:
 25316 ;;		_BuzPointSelect
 25317 ;; This function is called by:
 25318 ;;		_Buzzer_Main
 25319 ;; This function uses a non-reentrant model
 25320 ;;
 25321                           psect	text4992
 25322                           	file	"G:\Program\PIC\Source_File\Buzzer_B1.c"
 25323                           	line	85
 25324                           	global	__size_of_setBuz_Main
 25325  00E3                     	__size_of_setBuz_Main	equ	__end_of_setBuz_Main-_setBuz_Main
 25326                           	
 25327  0A2B                     _setBuz_Main:	
 25328                           	opt	stack 9
 25329                           ; Regs used in _setBuz_Main: [wreg+fsr1l-status,0+pclath+cstack]
 25330                           ;setBuz_Main@buz stored from wreg
 25331  0A2B  0020               	movlb 0	; select bank0
 25332  0A2C  00A4               	movwf	(setBuz_Main@buz)
 25333                           	line	86
 25334                           	
 25335  0A2D                     l18752:	
 25336                           ;Buzzer_B1.c: 86: BuzPointSelect(buz);
 25337  0A2D  0824               	movf	(setBuz_Main@buz),w
 25338  0A2E  31AE  2668  318A   	fcall	_BuzPointSelect
 25339                           	line	88
 25340                           	
 25341  0A31                     l18754:	
 25342                           ;Buzzer_B1.c: 88: if(buz == 1)
 25343  0A31  0020               	movlb 0	; select bank0
 25344  0A32  0824               	movf	(setBuz_Main@buz),w
 25345  0A33  3A01               	xorlw	01h&0ffh
 25346  0A34  1D03               	skipz
 25347  0A35  2A37               	goto	u6481
 25348  0A36  2A38               	goto	u6480
 25349  0A37                     u6481:
 25350  0A37  2A48               	goto	l18758
 25351  0A38                     u6480:
 25352                           	line	90
 25353                           	
 25354  0A38                     l18756:	
 25355                           ;Buzzer_B1.c: 89: {
 25356                           ;Buzzer_B1.c: 90: Buz->Switch=(RB3)?1:0;
 25357  0A38  3000               	movlw	0
 25358  0A39  198D               	btfsc	(107/8),(107)&7
 25359  0A3A  3001               	movlw	1
 25360  0A3B  00A2               	movwf	(??_setBuz_Main+0)+0
 25361  0A3C  0878               	movf	(_Buz),w
 25362  0A3D  0086               	movwf	fsr1l
 25363  0A3E  3001               	movlw 1	; select bank2/3
 25364  0A3F  0087               	movwf fsr1h	
 25365                           	
 25366  0A40  0EA2               	swapf	(??_setBuz_Main+0)+0,f
 25367  0A41  0DA2               	rlf	(??_setBuz_Main+0)+0,f
 25368  0A42  0801               	movf	indf1,w
 25369  0A43  0622               	xorwf	(??_setBuz_Main+0)+0,w
 25370  0A44  39DF               	andlw	not (((1<<1)-1)<<5)
 25371  0A45  0622               	xorwf	(??_setBuz_Main+0)+0,w
 25372  0A46  0081               	movwf	indf1
 25373  0A47  2A48               	goto	l18758
 25374                           	line	91
 25375                           	
 25376  0A48                     l1130:	
 25377                           	line	93
 25378                           	
 25379  0A48                     l18758:	
 25380                           ;Buzzer_B1.c: 91: }
 25381                           ;Buzzer_B1.c: 93: if(Buz->GO)
 25382  0A48  0878               	movf	(_Buz),w
 25383  0A49  0086               	movwf	fsr1l
 25384  0A4A  3001               	movlw 1	; select bank2/3
 25385  0A4B  0087               	movwf fsr1h	
 25386                           	
 25387  0A4C  1C81               	btfss	indf1,1
 25388  0A4D  2A4F               	goto	u6491
 25389  0A4E  2A50               	goto	u6490
 25390  0A4F                     u6491:
 25391  0A4F  2B0D               	goto	l1141
 25392  0A50                     u6490:
 25393                           	line	95
 25394                           	
 25395  0A50                     l18760:	
 25396                           ;Buzzer_B1.c: 94: {
 25397                           ;Buzzer_B1.c: 95: Buz->Time++;
 25398  0A50  0878               	movf	(_Buz),w
 25399  0A51  3E01               	addlw	01h
 25400  0A52  0086               	movwf	fsr1l
 25401  0A53  3001               	movlw 1	; select bank2/3
 25402  0A54  0087               	movwf fsr1h	
 25403                           	
 25404  0A55  3001               	movlw	01h
 25405  0A56  0781               	addwf	indf1,f
 25406  0A57  3141               	addfsr	fsr1,1
 25407  0A58  1803               	skipnc
 25408  0A59  0A81               	incf	indf1,f
 25409                           	line	96
 25410                           	
 25411  0A5A                     l18762:	
 25412                           ;Buzzer_B1.c: 96: if(Buz->Time == Buz->TimeValue)
 25413  0A5A  0878               	movf	(_Buz),w
 25414  0A5B  3E06               	addlw	06h
 25415  0A5C  0086               	movwf	fsr1l
 25416  0A5D  3001               	movlw 1	; select bank2/3
 25417  0A5E  0087               	movwf fsr1h	
 25418                           	
 25419  0A5F  3F40               	moviw	[0]fsr1
 25420  0A60  00A2               	movwf	(??_setBuz_Main+0)+0
 25421  0A61  3F41               	moviw	[1]fsr1
 25422  0A62  00A3               	movwf	(??_setBuz_Main+0)+0+1
 25423  0A63  0878               	movf	(_Buz),w
 25424  0A64  3E01               	addlw	01h
 25425  0A65  0086               	movwf	fsr1l
 25426  0A66  3001               	movlw 1	; select bank2/3
 25427  0A67  0087               	movwf fsr1h	
 25428                           	
 25429  0A68  3F40               	moviw	[0]fsr1
 25430  0A69  0622               	xorwf	0+(??_setBuz_Main+0)+0,w
 25431  0A6A  1D03               	skipz
 25432  0A6B  2A6E               	goto	u6505
 25433  0A6C  3F41               	moviw	[1]fsr1
 25434  0A6D  0623               	xorwf	1+(??_setBuz_Main+0)+0,w
 25435  0A6E                     u6505:
 25436  0A6E  1D03               	skipz
 25437  0A6F  2A71               	goto	u6501
 25438  0A70  2A72               	goto	u6500
 25439  0A71                     u6501:
 25440  0A71  2B0D               	goto	l1141
 25441  0A72                     u6500:
 25442                           	line	98
 25443                           	
 25444  0A72                     l18764:	
 25445                           ;Buzzer_B1.c: 97: {
 25446                           ;Buzzer_B1.c: 98: Buz->Time=0;
 25447  0A72  0878               	movf	(_Buz),w
 25448  0A73  3E01               	addlw	01h
 25449  0A74  0086               	movwf	fsr1l
 25450  0A75  3001               	movlw 1	; select bank2/3
 25451  0A76  0087               	movwf fsr1h	
 25452                           	
 25453  0A77  3000               	movlw	low(0)
 25454  0A78  3FC0               	movwi	[0]fsr1
 25455  0A79  3000               	movlw	high(0)
 25456  0A7A  3FC1               	movwi	[1]fsr1
 25457                           	line	99
 25458                           ;Buzzer_B1.c: 99: if(Buz->Switch == 0)
 25459  0A7B  0878               	movf	(_Buz),w
 25460  0A7C  0086               	movwf	fsr1l
 25461  0A7D  3001               	movlw 1	; select bank2/3
 25462  0A7E  0087               	movwf fsr1h	
 25463                           	
 25464  0A7F  1A81               	btfsc	indf1,5
 25465  0A80  2A82               	goto	u6511
 25466  0A81  2A83               	goto	u6510
 25467  0A82                     u6511:
 25468  0A82  2A8A               	goto	l18770
 25469  0A83                     u6510:
 25470                           	line	101
 25471                           	
 25472  0A83                     l18766:	
 25473                           ;Buzzer_B1.c: 100: {
 25474                           ;Buzzer_B1.c: 101: Buz->Switch=1;
 25475  0A83  0878               	movf	(_Buz),w
 25476  0A84  0086               	movwf	fsr1l
 25477  0A85  3001               	movlw 1	; select bank2/3
 25478  0A86  0087               	movwf fsr1h	
 25479                           	
 25480  0A87  1681               	bsf	indf1,5
 25481                           	line	103
 25482                           	
 25483  0A88                     l18768:	
 25484                           ;Buzzer_B1.c: 103: RB3=1;
 25485  0A88  158D               	bsf	(107/8),(107)&7
 25486                           	line	105
 25487                           ;Buzzer_B1.c: 105: }
 25488  0A89  2B0D               	goto	l1141
 25489                           	line	106
 25490                           	
 25491  0A8A                     l1133:	
 25492                           	line	108
 25493                           	
 25494  0A8A                     l18770:	
 25495                           ;Buzzer_B1.c: 106: else
 25496                           ;Buzzer_B1.c: 107: {
 25497                           ;Buzzer_B1.c: 108: Buz->Switch=0;
 25498  0A8A  0878               	movf	(_Buz),w
 25499  0A8B  0086               	movwf	fsr1l
 25500  0A8C  3001               	movlw 1	; select bank2/3
 25501  0A8D  0087               	movwf fsr1h	
 25502                           	
 25503  0A8E  1281               	bcf	indf1,5
 25504                           	line	110
 25505                           	
 25506  0A8F                     l18772:	
 25507                           ;Buzzer_B1.c: 110: RB3=0;
 25508  0A8F  118D               	bcf	(107/8),(107)&7
 25509                           	line	112
 25510                           	
 25511  0A90                     l18774:	
 25512                           ;Buzzer_B1.c: 112: if(Buz->Count == 0)
 25513  0A90  0878               	movf	(_Buz),w
 25514  0A91  3E03               	addlw	03h
 25515  0A92  0086               	movwf	fsr1l
 25516  0A93  3001               	movlw 1	; select bank2/3
 25517  0A94  0087               	movwf fsr1h	
 25518                           	
 25519  0A95  0881               	movf	indf1,f
 25520  0A96  1D03               	skipz
 25521  0A97  2A99               	goto	u6521
 25522  0A98  2A9A               	goto	u6520
 25523  0A99                     u6521:
 25524  0A99  2B02               	goto	l18794
 25525  0A9A                     u6520:
 25526                           	line	114
 25527                           	
 25528  0A9A                     l18776:	
 25529                           ;Buzzer_B1.c: 113: {
 25530                           ;Buzzer_B1.c: 114: if(Buz->BufferStatus1)
 25531  0A9A  0878               	movf	(_Buz),w
 25532  0A9B  0086               	movwf	fsr1l
 25533  0A9C  3001               	movlw 1	; select bank2/3
 25534  0A9D  0087               	movwf fsr1h	
 25535                           	
 25536  0A9E  1D81               	btfss	indf1,3
 25537  0A9F  2AA1               	goto	u6531
 25538  0AA0  2AA2               	goto	u6530
 25539  0AA1                     u6531:
 25540  0AA1  2ACA               	goto	l18784
 25541  0AA2                     u6530:
 25542                           	line	116
 25543                           	
 25544  0AA2                     l18778:	
 25545                           ;Buzzer_B1.c: 115: {
 25546                           ;Buzzer_B1.c: 116: Buz->BufferStatus1=0;
 25547  0AA2  0878               	movf	(_Buz),w
 25548  0AA3  0086               	movwf	fsr1l
 25549  0AA4  3001               	movlw 1	; select bank2/3
 25550  0AA5  0087               	movwf fsr1h	
 25551                           	
 25552  0AA6  1181               	bcf	indf1,3
 25553                           	line	117
 25554                           	
 25555  0AA7                     l18780:	
 25556                           ;Buzzer_B1.c: 117: Buz->Count=(--Buz->CountBuffer1);
 25557  0AA7  0878               	movf	(_Buz),w
 25558  0AA8  3E04               	addlw	04h
 25559  0AA9  0086               	movwf	fsr1l
 25560  0AAA  3001               	movlw 1	; select bank2/3
 25561  0AAB  0087               	movwf fsr1h	
 25562                           	
 25563  0AAC  3F40               	moviw	[0]fsr1
 25564  0AAD  0309               	decf	wreg,w
 25565  0AAE  3FC0               	movwi	[0]fsr1
 25566  0AAF  00A2               	movwf	(??_setBuz_Main+0)+0
 25567  0AB0  0878               	movf	(_Buz),w
 25568  0AB1  3E03               	addlw	03h
 25569  0AB2  0086               	movwf	fsr1l
 25570  0AB3  3001               	movlw 1	; select bank2/3
 25571  0AB4  0087               	movwf fsr1h	
 25572                           	
 25573  0AB5  0822               	movf	(??_setBuz_Main+0)+0,w
 25574  0AB6  0081               	movwf	indf1
 25575                           	line	118
 25576                           	
 25577  0AB7                     l18782:	
 25578                           ;Buzzer_B1.c: 118: Buz->TimeValue=Buz->TimeValueBuffer1;
 25579  0AB7  0878               	movf	(_Buz),w
 25580  0AB8  3E08               	addlw	08h
 25581  0AB9  0086               	movwf	fsr1l
 25582  0ABA  3001               	movlw 1	; select bank2/3
 25583  0ABB  0087               	movwf fsr1h	
 25584                           	
 25585  0ABC  3F40               	moviw	[0]fsr1
 25586  0ABD  00A2               	movwf	(??_setBuz_Main+0)+0
 25587  0ABE  3F41               	moviw	[1]fsr1
 25588  0ABF  00A3               	movwf	(??_setBuz_Main+0)+0+1
 25589  0AC0  0878               	movf	(_Buz),w
 25590  0AC1  3E06               	addlw	06h
 25591  0AC2  0086               	movwf	fsr1l
 25592  0AC3  3001               	movlw 1	; select bank2/3
 25593  0AC4  0087               	movwf fsr1h	
 25594                           	
 25595  0AC5  0822               	movf	0+(??_setBuz_Main+0)+0,w
 25596  0AC6  3FC0               	movwi	[0]fsr1
 25597  0AC7  0823               	movf	1+(??_setBuz_Main+0)+0,w
 25598  0AC8  3FC1               	movwi	[1]fsr1
 25599                           	line	119
 25600                           ;Buzzer_B1.c: 119: }
 25601  0AC9  2B0D               	goto	l1141
 25602                           	line	120
 25603                           	
 25604  0ACA                     l1136:	
 25605                           	
 25606  0ACA                     l18784:	
 25607                           ;Buzzer_B1.c: 120: else if(Buz->BufferStatus2)
 25608  0ACA  0878               	movf	(_Buz),w
 25609  0ACB  0086               	movwf	fsr1l
 25610  0ACC  3001               	movlw 1	; select bank2/3
 25611  0ACD  0087               	movwf fsr1h	
 25612                           	
 25613  0ACE  1E01               	btfss	indf1,4
 25614  0ACF  2AD1               	goto	u6541
 25615  0AD0  2AD2               	goto	u6540
 25616  0AD1                     u6541:
 25617  0AD1  2AFA               	goto	l18792
 25618  0AD2                     u6540:
 25619                           	line	122
 25620                           	
 25621  0AD2                     l18786:	
 25622                           ;Buzzer_B1.c: 121: {
 25623                           ;Buzzer_B1.c: 122: Buz->BufferStatus2=0;
 25624  0AD2  0878               	movf	(_Buz),w
 25625  0AD3  0086               	movwf	fsr1l
 25626  0AD4  3001               	movlw 1	; select bank2/3
 25627  0AD5  0087               	movwf fsr1h	
 25628                           	
 25629  0AD6  1201               	bcf	indf1,4
 25630                           	line	123
 25631                           	
 25632  0AD7                     l18788:	
 25633                           ;Buzzer_B1.c: 123: Buz->Count=(--Buz->CountBuffer2);
 25634  0AD7  0878               	movf	(_Buz),w
 25635  0AD8  3E05               	addlw	05h
 25636  0AD9  0086               	movwf	fsr1l
 25637  0ADA  3001               	movlw 1	; select bank2/3
 25638  0ADB  0087               	movwf fsr1h	
 25639                           	
 25640  0ADC  3F40               	moviw	[0]fsr1
 25641  0ADD  0309               	decf	wreg,w
 25642  0ADE  3FC0               	movwi	[0]fsr1
 25643  0ADF  00A2               	movwf	(??_setBuz_Main+0)+0
 25644  0AE0  0878               	movf	(_Buz),w
 25645  0AE1  3E03               	addlw	03h
 25646  0AE2  0086               	movwf	fsr1l
 25647  0AE3  3001               	movlw 1	; select bank2/3
 25648  0AE4  0087               	movwf fsr1h	
 25649                           	
 25650  0AE5  0822               	movf	(??_setBuz_Main+0)+0,w
 25651  0AE6  0081               	movwf	indf1
 25652                           	line	124
 25653                           	
 25654  0AE7                     l18790:	
 25655                           ;Buzzer_B1.c: 124: Buz->TimeValue=Buz->TimeValueBuffer2;
 25656  0AE7  0878               	movf	(_Buz),w
 25657  0AE8  3E0A               	addlw	0Ah
 25658  0AE9  0086               	movwf	fsr1l
 25659  0AEA  3001               	movlw 1	; select bank2/3
 25660  0AEB  0087               	movwf fsr1h	
 25661                           	
 25662  0AEC  3F40               	moviw	[0]fsr1
 25663  0AED  00A2               	movwf	(??_setBuz_Main+0)+0
 25664  0AEE  3F41               	moviw	[1]fsr1
 25665  0AEF  00A3               	movwf	(??_setBuz_Main+0)+0+1
 25666  0AF0  0878               	movf	(_Buz),w
 25667  0AF1  3E06               	addlw	06h
 25668  0AF2  0086               	movwf	fsr1l
 25669  0AF3  3001               	movlw 1	; select bank2/3
 25670  0AF4  0087               	movwf fsr1h	
 25671                           	
 25672  0AF5  0822               	movf	0+(??_setBuz_Main+0)+0,w
 25673  0AF6  3FC0               	movwi	[0]fsr1
 25674  0AF7  0823               	movf	1+(??_setBuz_Main+0)+0,w
 25675  0AF8  3FC1               	movwi	[1]fsr1
 25676                           	line	125
 25677                           ;Buzzer_B1.c: 125: }
 25678  0AF9  2B0D               	goto	l1141
 25679                           	line	126
 25680                           	
 25681  0AFA                     l1138:	
 25682                           	line	128
 25683                           	
 25684  0AFA                     l18792:	
 25685                           ;Buzzer_B1.c: 126: else
 25686                           ;Buzzer_B1.c: 127: {
 25687                           ;Buzzer_B1.c: 128: Buz->GO=0;
 25688  0AFA  0878               	movf	(_Buz),w
 25689  0AFB  0086               	movwf	fsr1l
 25690  0AFC  3001               	movlw 1	; select bank2/3
 25691  0AFD  0087               	movwf fsr1h	
 25692                           	
 25693  0AFE  1081               	bcf	indf1,1
 25694  0AFF  2B0D               	goto	l1141
 25695                           	line	129
 25696                           	
 25697  0B00                     l1139:	
 25698  0B00  2B0D               	goto	l1141
 25699                           	
 25700  0B01                     l1137:	
 25701                           	line	130
 25702                           ;Buzzer_B1.c: 129: }
 25703                           ;Buzzer_B1.c: 130: }
 25704  0B01  2B0D               	goto	l1141
 25705                           	line	131
 25706                           	
 25707  0B02                     l1135:	
 25708                           	line	133
 25709                           	
 25710  0B02                     l18794:	
 25711                           ;Buzzer_B1.c: 131: else
 25712                           ;Buzzer_B1.c: 132: {
 25713                           ;Buzzer_B1.c: 133: Buz->Count--;
 25714  0B02  0878               	movf	(_Buz),w
 25715  0B03  3E03               	addlw	03h
 25716  0B04  0086               	movwf	fsr1l
 25717  0B05  3001               	movlw 1	; select bank2/3
 25718  0B06  0087               	movwf fsr1h	
 25719                           	
 25720  0B07  3001               	movlw	low(01h)
 25721  0B08  0281               	subwf	indf1,f
 25722  0B09  2B0D               	goto	l1141
 25723                           	line	134
 25724                           	
 25725  0B0A                     l1140:	
 25726  0B0A  2B0D               	goto	l1141
 25727                           	line	135
 25728                           	
 25729  0B0B                     l1134:	
 25730  0B0B  2B0D               	goto	l1141
 25731                           	line	136
 25732                           	
 25733  0B0C                     l1132:	
 25734  0B0C  2B0D               	goto	l1141
 25735                           	line	137
 25736                           	
 25737  0B0D                     l1131:	
 25738                           	line	138
 25739                           	
 25740  0B0D                     l1141:	
 25741  0B0D  0008               	return
 25742                           	opt stack 0
 25743                           GLOBAL	__end_of_setBuz_Main
 25744  0B0E                     	__end_of_setBuz_Main:
 25745 ;; =============== function _setBuz_Main ends ============
 25746                           
 25747                           	signat	_setBuz_Main,4216
 25748                           	global	___awdiv
 25749                           psect	text4993,local,class=CODE,delta=2
 25750                           global __ptext4993
 25751  1C45                     __ptext4993:
 25752                           
 25753 ;; *************** function ___awdiv *****************
 25754 ;; Defined at:
 25755 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awdiv.c"
 25756 ;; Parameters:    Size  Location     Type
 25757 ;;  divisor         2    0[BANK0 ] int 
 25758 ;;  dividend        2    2[BANK0 ] int 
 25759 ;; Auto vars:     Size  Location     Type
 25760 ;;  quotient        2    7[BANK0 ] int 
 25761 ;;  sign            1    6[BANK0 ] unsigned char 
 25762 ;;  counter         1    5[BANK0 ] unsigned char 
 25763 ;; Return value:  Size  Location     Type
 25764 ;;                  2    0[BANK0 ] int 
 25765 ;; Registers used:
 25766 ;;		wreg, status,2, status,0
 25767 ;; Tracked objects:
 25768 ;;		On entry : 0/0
 25769 ;;		On exit  : 0/0
 25770 ;;		Unchanged: 0/0
 25771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 25772 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 25773 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 25774 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 25775 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
       0       0
 25776 ;;Total ram usage:        9 bytes
 25777 ;; Hardware stack levels used:    1
 25778 ;; Hardware stack levels required when called:    4
 25779 ;; This function calls:
 25780 ;;		Nothing
 25781 ;; This function is called by:
 25782 ;;		_setBuz
 25783 ;; This function uses a non-reentrant model
 25784 ;;
 25785                           psect	text4993
 25786                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awdiv.c"
 25787                           	line	5
 25788                           	global	__size_of___awdiv
 25789  006D                     	__size_of___awdiv	equ	__end_of___awdiv-___awdiv
 25790                           	
 25791  1C45                     ___awdiv:	
 25792                           	opt	stack 8
 25793                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 25794                           	line	9
 25795                           	
 25796  1C45                     l18642:	
 25797  1C45  0020               	movlb 0	; select bank0
 25798  1C46  01A6               	clrf	(___awdiv@sign)
 25799                           	line	10
 25800  1C47  1FA1               	btfss	(___awdiv@divisor+1),7
 25801  1C48  2C4A               	goto	u6271
 25802  1C49  2C4B               	goto	u6270
 25803  1C4A                     u6271:
 25804  1C4A  2C54               	goto	l18646
 25805  1C4B                     u6270:
 25806                           	line	11
 25807                           	
 25808  1C4B                     l18644:	
 25809  1C4B  09A0               	comf	(___awdiv@divisor),f
 25810  1C4C  09A1               	comf	(___awdiv@divisor+1),f
 25811  1C4D  0AA0               	incf	(___awdiv@divisor),f
 25812  1C4E  1903               	skipnz
 25813  1C4F  0AA1               	incf	(___awdiv@divisor+1),f
 25814                           	line	12
 25815  1C50  01A6               	clrf	(___awdiv@sign)
 25816  1C51  1403               	bsf	status,0
 25817  1C52  0DA6               	rlf	(___awdiv@sign),f
 25818  1C53  2C54               	goto	l18646
 25819                           	line	13
 25820                           	
 25821  1C54                     l14594:	
 25822                           	line	14
 25823                           	
 25824  1C54                     l18646:	
 25825  1C54  1FA3               	btfss	(___awdiv@dividend+1),7
 25826  1C55  2C57               	goto	u6281
 25827  1C56  2C58               	goto	u6280
 25828  1C57                     u6281:
 25829  1C57  2C62               	goto	l18652
 25830  1C58                     u6280:
 25831                           	line	15
 25832                           	
 25833  1C58                     l18648:	
 25834  1C58  09A2               	comf	(___awdiv@dividend),f
 25835  1C59  09A3               	comf	(___awdiv@dividend+1),f
 25836  1C5A  0AA2               	incf	(___awdiv@dividend),f
 25837  1C5B  1903               	skipnz
 25838  1C5C  0AA3               	incf	(___awdiv@dividend+1),f
 25839                           	line	16
 25840                           	
 25841  1C5D                     l18650:	
 25842  1C5D  3001               	movlw	(01h)
 25843  1C5E  00A4               	movwf	(??___awdiv+0)+0
 25844  1C5F  0824               	movf	(??___awdiv+0)+0,w
 25845  1C60  06A6               	xorwf	(___awdiv@sign),f
 25846  1C61  2C62               	goto	l18652
 25847                           	line	17
 25848                           	
 25849  1C62                     l14595:	
 25850                           	line	18
 25851                           	
 25852  1C62                     l18652:	
 25853  1C62  01A7               	clrf	(___awdiv@quotient)
 25854  1C63  01A8               	clrf	(___awdiv@quotient+1)
 25855                           	line	19
 25856                           	
 25857  1C64                     l18654:	
 25858  1C64  0821               	movf	(___awdiv@divisor+1),w
 25859  1C65  0420               	iorwf	(___awdiv@divisor),w
 25860  1C66  1903               	skipnz
 25861  1C67  2C69               	goto	u6291
 25862  1C68  2C6A               	goto	u6290
 25863  1C69                     u6291:
 25864  1C69  2CA0               	goto	l18674
 25865  1C6A                     u6290:
 25866                           	line	20
 25867                           	
 25868  1C6A                     l18656:	
 25869  1C6A  01A5               	clrf	(___awdiv@counter)
 25870  1C6B  1403               	bsf	status,0
 25871  1C6C  0DA5               	rlf	(___awdiv@counter),f
 25872                           	line	21
 25873  1C6D  2C78               	goto	l18662
 25874                           	
 25875  1C6E                     l14598:	
 25876                           	line	22
 25877                           	
 25878  1C6E                     l18658:	
 25879  1C6E  3001               	movlw	01h
 25880                           	
 25881  1C6F                     u6305:
 25882  1C6F  35A0               	lslf	(___awdiv@divisor),f
 25883  1C70  0DA1               	rlf	(___awdiv@divisor+1),f
 25884  1C71  0B89               	decfsz	wreg,f
 25885  1C72  2C6F               	goto	u6305
 25886                           	line	23
 25887                           	
 25888  1C73                     l18660:	
 25889  1C73  3001               	movlw	(01h)
 25890  1C74  00A4               	movwf	(??___awdiv+0)+0
 25891  1C75  0824               	movf	(??___awdiv+0)+0,w
 25892  1C76  07A5               	addwf	(___awdiv@counter),f
 25893  1C77  2C78               	goto	l18662
 25894                           	line	24
 25895                           	
 25896  1C78                     l14597:	
 25897                           	line	21
 25898                           	
 25899  1C78                     l18662:	
 25900  1C78  1FA1               	btfss	(___awdiv@divisor+1),(15)&7
 25901  1C79  2C7B               	goto	u6311
 25902  1C7A  2C7C               	goto	u6310
 25903  1C7B                     u6311:
 25904  1C7B  2C6E               	goto	l18658
 25905  1C7C                     u6310:
 25906  1C7C  2C7E               	goto	l18664
 25907                           	
 25908  1C7D                     l14599:	
 25909  1C7D  2C7E               	goto	l18664
 25910                           	line	25
 25911                           	
 25912  1C7E                     l14600:	
 25913                           	line	26
 25914                           	
 25915  1C7E                     l18664:	
 25916  1C7E  3001               	movlw	01h
 25917                           	
 25918  1C7F                     u6325:
 25919  1C7F  35A7               	lslf	(___awdiv@quotient),f
 25920  1C80  0DA8               	rlf	(___awdiv@quotient+1),f
 25921  1C81  0B89               	decfsz	wreg,f
 25922  1C82  2C7F               	goto	u6325
 25923                           	line	27
 25924  1C83  0821               	movf	(___awdiv@divisor+1),w
 25925  1C84  0223               	subwf	(___awdiv@dividend+1),w
 25926  1C85  1D03               	skipz
 25927  1C86  2C89               	goto	u6335
 25928  1C87  0820               	movf	(___awdiv@divisor),w
 25929  1C88  0222               	subwf	(___awdiv@dividend),w
 25930  1C89                     u6335:
 25931  1C89  1C03               	skipc
 25932  1C8A  2C8C               	goto	u6331
 25933  1C8B  2C8D               	goto	u6330
 25934  1C8C                     u6331:
 25935  1C8C  2C93               	goto	l18670
 25936  1C8D                     u6330:
 25937                           	line	28
 25938                           	
 25939  1C8D                     l18666:	
 25940  1C8D  0820               	movf	(___awdiv@divisor),w
 25941  1C8E  02A2               	subwf	(___awdiv@dividend),f
 25942  1C8F  0821               	movf	(___awdiv@divisor+1),w
 25943  1C90  3BA3               	subwfb	(___awdiv@dividend+1),f
 25944                           	line	29
 25945                           	
 25946  1C91                     l18668:	
 25947  1C91  1427               	bsf	(___awdiv@quotient)+(0/8),(0)&7
 25948  1C92  2C93               	goto	l18670
 25949                           	line	30
 25950                           	
 25951  1C93                     l14601:	
 25952                           	line	31
 25953                           	
 25954  1C93                     l18670:	
 25955  1C93  3001               	movlw	01h
 25956                           	
 25957  1C94                     u6345:
 25958  1C94  36A1               	lsrf	(___awdiv@divisor+1),f
 25959  1C95  0CA0               	rrf	(___awdiv@divisor),f
 25960  1C96  0B89               	decfsz	wreg,f
 25961  1C97  2C94               	goto	u6345
 25962                           	line	32
 25963                           	
 25964  1C98                     l18672:	
 25965  1C98  3001               	movlw	low(01h)
 25966  1C99  02A5               	subwf	(___awdiv@counter),f
 25967  1C9A  1D03               	btfss	status,2
 25968  1C9B  2C9D               	goto	u6351
 25969  1C9C  2C9E               	goto	u6350
 25970  1C9D                     u6351:
 25971  1C9D  2C7E               	goto	l18664
 25972  1C9E                     u6350:
 25973  1C9E  2CA0               	goto	l18674
 25974                           	
 25975  1C9F                     l14602:	
 25976  1C9F  2CA0               	goto	l18674
 25977                           	line	33
 25978                           	
 25979  1CA0                     l14596:	
 25980                           	line	34
 25981                           	
 25982  1CA0                     l18674:	
 25983  1CA0  0826               	movf	(___awdiv@sign),w
 25984  1CA1  1D03               	skipz
 25985  1CA2  2CA4               	goto	u6360
 25986  1CA3  2CAA               	goto	l18678
 25987  1CA4                     u6360:
 25988                           	line	35
 25989                           	
 25990  1CA4                     l18676:	
 25991  1CA4  09A7               	comf	(___awdiv@quotient),f
 25992  1CA5  09A8               	comf	(___awdiv@quotient+1),f
 25993  1CA6  0AA7               	incf	(___awdiv@quotient),f
 25994  1CA7  1903               	skipnz
 25995  1CA8  0AA8               	incf	(___awdiv@quotient+1),f
 25996  1CA9  2CAA               	goto	l18678
 25997                           	
 25998  1CAA                     l14603:	
 25999                           	line	36
 26000                           	
 26001  1CAA                     l18678:	
 26002  1CAA  0828               	movf	(___awdiv@quotient+1),w
 26003  1CAB  01A1               	clrf	(?___awdiv+1)
 26004  1CAC  07A1               	addwf	(?___awdiv+1)
 26005  1CAD  0827               	movf	(___awdiv@quotient),w
 26006  1CAE  01A0               	clrf	(?___awdiv)
 26007  1CAF  07A0               	addwf	(?___awdiv)
 26008                           
 26009  1CB0  2CB1               	goto	l14604
 26010                           	
 26011  1CB1                     l18680:	
 26012                           	line	37
 26013                           	
 26014  1CB1                     l14604:	
 26015  1CB1  0008               	return
 26016                           	opt stack 0
 26017                           GLOBAL	__end_of___awdiv
 26018  1CB2                     	__end_of___awdiv:
 26019 ;; =============== function ___awdiv ends ============
 26020                           
 26021                           	signat	___awdiv,8314
 26022                           	global	___fttol
 26023                           psect	text4994,local,class=CODE,delta=2
 26024                           global __ptext4994
 26025  12B2                     __ptext4994:
 26026                           
 26027 ;; *************** function ___fttol *****************
 26028 ;; Defined at:
 26029 ;;		line 45 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\fttol.c"
 26030 ;; Parameters:    Size  Location     Type
 26031 ;;  f1              3    8[BANK0 ] float 
 26032 ;; Auto vars:     Size  Location     Type
 26033 ;;  lval            4   17[BANK0 ] unsigned long 
 26034 ;;  exp1            1   21[BANK0 ] unsigned char 
 26035 ;;  sign1           1   16[BANK0 ] unsigned char 
 26036 ;; Return value:  Size  Location     Type
 26037 ;;                  4    8[BANK0 ] long 
 26038 ;; Registers used:
 26039 ;;		wreg, status,2, status,0
 26040 ;; Tracked objects:
 26041 ;;		On entry : 0/0
 26042 ;;		On exit  : 0/0
 26043 ;;		Unchanged: 0/0
 26044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 26045 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 26046 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0
 26047 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 26048 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
       0       0
 26049 ;;Total ram usage:       14 bytes
 26050 ;; Hardware stack levels used:    1
 26051 ;; Hardware stack levels required when called:    4
 26052 ;; This function calls:
 26053 ;;		Nothing
 26054 ;; This function is called by:
 26055 ;;		_getPercentValue
 26056 ;;		_setPercentValue
 26057 ;; This function uses a non-reentrant model
 26058 ;;
 26059                           psect	text4994
 26060                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\fttol.c"
 26061                           	line	45
 26062                           	global	__size_of___fttol
 26063  009F                     	__size_of___fttol	equ	__end_of___fttol-___fttol
 26064                           	
 26065  12B2                     ___fttol:	
 26066                           	opt	stack 3
 26067                           ; Regs used in ___fttol: [wreg+status,2+status,0]
 26068                           	line	49
 26069                           	
 26070  12B2                     l18582:	
 26071  12B2  0020               	movlb 0	; select bank0
 26072  12B3  0828               	movf	(___fttol@f1),w
 26073  12B4  00AC               	movwf	((??___fttol+0)+0)
 26074  12B5  0829               	movf	(___fttol@f1+1),w
 26075  12B6  00AD               	movwf	((??___fttol+0)+0+1)
 26076  12B7  082A               	movf	(___fttol@f1+2),w
 26077  12B8  00AE               	movwf	((??___fttol+0)+0+2)
 26078  12B9  1003               	clrc
 26079  12BA  0D2D               	rlf	(??___fttol+0)+1,w
 26080  12BB  0D2E               	rlf	(??___fttol+0)+2,w
 26081  12BC  00AF               	movwf	(??___fttol+3)+0
 26082  12BD  082F               	movf	(??___fttol+3)+0,w
 26083  12BE  00B5               	movwf	(___fttol@exp1)
 26084  12BF  08B5               	movf	((___fttol@exp1)),f
 26085  12C0  1D03               	skipz
 26086  12C1  2AC3               	goto	u6161
 26087  12C2  2AC4               	goto	u6160
 26088  12C3                     u6161:
 26089  12C3  2ACE               	goto	l18588
 26090  12C4                     u6160:
 26091                           	line	50
 26092                           	
 26093  12C4                     l18584:	
 26094  12C4  3000               	movlw	0
 26095  12C5  00AB               	movwf	(?___fttol+3)
 26096  12C6  3000               	movlw	0
 26097  12C7  00AA               	movwf	(?___fttol+2)
 26098  12C8  3000               	movlw	0
 26099  12C9  00A9               	movwf	(?___fttol+1)
 26100  12CA  3000               	movlw	0
 26101  12CB  00A8               	movwf	(?___fttol)
 26102                           
 26103  12CC  2B50               	goto	l14564
 26104                           	
 26105  12CD                     l18586:	
 26106  12CD  2B50               	goto	l14564
 26107                           	
 26108  12CE                     l14563:	
 26109                           	line	51
 26110                           	
 26111  12CE                     l18588:	
 26112  12CE  0828               	movf	(___fttol@f1),w
 26113  12CF  00AC               	movwf	((??___fttol+0)+0)
 26114  12D0  0829               	movf	(___fttol@f1+1),w
 26115  12D1  00AD               	movwf	((??___fttol+0)+0+1)
 26116  12D2  082A               	movf	(___fttol@f1+2),w
 26117  12D3  00AE               	movwf	((??___fttol+0)+0+2)
 26118  12D4  3017               	movlw	017h
 26119  12D5                     u6175:
 26120  12D5  36AE               	lsrf	(??___fttol+0)+2,f
 26121  12D6  0CAD               	rrf	(??___fttol+0)+1,f
 26122  12D7  0CAC               	rrf	(??___fttol+0)+0,f
 26123  12D8                     u6170:
 26124  12D8  0B89               	decfsz	wreg,f
 26125  12D9  2AD5               	goto	u6175
 26126  12DA  082C               	movf	0+(??___fttol+0)+0,w
 26127  12DB  00AF               	movwf	(??___fttol+3)+0
 26128  12DC  082F               	movf	(??___fttol+3)+0,w
 26129  12DD  00B0               	movwf	(___fttol@sign1)
 26130                           	line	52
 26131                           	
 26132  12DE                     l18590:	
 26133  12DE  17A9               	bsf	(___fttol@f1)+(15/8),(15)&7
 26134                           	line	53
 26135                           	
 26136  12DF                     l18592:	
 26137  12DF  30FF               	movlw	0FFh
 26138  12E0  05A8               	andwf	(___fttol@f1),f
 26139  12E1  30FF               	movlw	0FFh
 26140  12E2  05A9               	andwf	(___fttol@f1+1),f
 26141  12E3  3000               	movlw	0
 26142  12E4  05AA               	andwf	(___fttol@f1+2),f
 26143                           	line	54
 26144                           	
 26145  12E5                     l18594:	
 26146  12E5  0828               	movf	(___fttol@f1),w
 26147  12E6  00B1               	movwf	(___fttol@lval)
 26148  12E7  0829               	movf	(___fttol@f1+1),w
 26149  12E8  00B2               	movwf	((___fttol@lval))+1
 26150  12E9  082A               	movf	(___fttol@f1+2),w
 26151  12EA  00B3               	movwf	((___fttol@lval))+2
 26152  12EB  01B4               	clrf	((___fttol@lval))+3
 26153                           	line	55
 26154                           	
 26155  12EC                     l18596:	
 26156  12EC  308E               	movlw	low(08Eh)
 26157  12ED  02B5               	subwf	(___fttol@exp1),f
 26158                           	line	56
 26159                           	
 26160  12EE                     l18598:	
 26161  12EE  1FB5               	btfss	(___fttol@exp1),7
 26162  12EF  2AF1               	goto	u6181
 26163  12F0  2AF2               	goto	u6180
 26164  12F1                     u6181:
 26165  12F1  2B15               	goto	l18608
 26166  12F2                     u6180:
 26167                           	line	57
 26168                           	
 26169  12F2                     l18600:	
 26170  12F2  0835               	movf	(___fttol@exp1),w
 26171  12F3  3A80               	xorlw	80h
 26172  12F4  3E8F               	addlw	-((-15)^80h)
 26173  12F5  1803               	skipnc
 26174  12F6  2AF8               	goto	u6191
 26175  12F7  2AF9               	goto	u6190
 26176  12F8                     u6191:
 26177  12F8  2B04               	goto	l18606
 26178  12F9                     u6190:
 26179                           	line	58
 26180                           	
 26181  12F9                     l18602:	
 26182  12F9  3000               	movlw	0
 26183  12FA  00AB               	movwf	(?___fttol+3)
 26184  12FB  3000               	movlw	0
 26185  12FC  00AA               	movwf	(?___fttol+2)
 26186  12FD  3000               	movlw	0
 26187  12FE  00A9               	movwf	(?___fttol+1)
 26188  12FF  3000               	movlw	0
 26189  1300  00A8               	movwf	(?___fttol)
 26190                           
 26191  1301  2B50               	goto	l14564
 26192                           	
 26193  1302                     l18604:	
 26194  1302  2B50               	goto	l14564
 26195                           	
 26196  1303                     l14566:	
 26197  1303  2B04               	goto	l18606
 26198                           	line	59
 26199                           	
 26200  1304                     l14567:	
 26201                           	line	60
 26202                           	
 26203  1304                     l18606:	
 26204  1304  3001               	movlw	01h
 26205  1305                     u6205:
 26206  1305  36B4               	lsrf	(___fttol@lval+3),f
 26207  1306  0CB3               	rrf	(___fttol@lval+2),f
 26208  1307  0CB2               	rrf	(___fttol@lval+1),f
 26209  1308  0CB1               	rrf	(___fttol@lval),f
 26210  1309  0B89               	decfsz	wreg,f
 26211  130A  2B05               	goto	u6205
 26212                           
 26213                           	line	61
 26214  130B  3001               	movlw	(01h)
 26215  130C  00AC               	movwf	(??___fttol+0)+0
 26216  130D  082C               	movf	(??___fttol+0)+0,w
 26217  130E  07B5               	addwf	(___fttol@exp1),f
 26218  130F  1D03               	btfss	status,2
 26219  1310  2B12               	goto	u6211
 26220  1311  2B13               	goto	u6210
 26221  1312                     u6211:
 26222  1312  2B04               	goto	l18606
 26223  1313                     u6210:
 26224  1313  2B37               	goto	l18618
 26225                           	
 26226  1314                     l14568:	
 26227                           	line	62
 26228  1314  2B37               	goto	l18618
 26229                           	
 26230  1315                     l14565:	
 26231                           	line	63
 26232                           	
 26233  1315                     l18608:	
 26234  1315  3018               	movlw	(018h)
 26235  1316  0235               	subwf	(___fttol@exp1),w
 26236  1317  1C03               	skipc
 26237  1318  2B1A               	goto	u6221
 26238  1319  2B1B               	goto	u6220
 26239  131A                     u6221:
 26240  131A  2B30               	goto	l18616
 26241  131B                     u6220:
 26242                           	line	64
 26243                           	
 26244  131B                     l18610:	
 26245  131B  3000               	movlw	0
 26246  131C  00AB               	movwf	(?___fttol+3)
 26247  131D  3000               	movlw	0
 26248  131E  00AA               	movwf	(?___fttol+2)
 26249  131F  3000               	movlw	0
 26250  1320  00A9               	movwf	(?___fttol+1)
 26251  1321  3000               	movlw	0
 26252  1322  00A8               	movwf	(?___fttol)
 26253                           
 26254  1323  2B50               	goto	l14564
 26255                           	
 26256  1324                     l18612:	
 26257  1324  2B50               	goto	l14564
 26258                           	
 26259  1325                     l14570:	
 26260                           	line	65
 26261  1325  2B30               	goto	l18616
 26262                           	
 26263  1326                     l14572:	
 26264                           	line	66
 26265                           	
 26266  1326                     l18614:	
 26267  1326  3001               	movlw	01h
 26268  1327                     u6235:
 26269  1327  35B1               	lslf	(___fttol@lval),f
 26270  1328  0DB2               	rlf	(___fttol@lval+1),f
 26271  1329  0DB3               	rlf	(___fttol@lval+2),f
 26272  132A  0DB4               	rlf	(___fttol@lval+3),f
 26273  132B  0B89               	decfsz	wreg,f
 26274  132C  2B27               	goto	u6235
 26275                           	line	67
 26276  132D  3001               	movlw	low(01h)
 26277  132E  02B5               	subwf	(___fttol@exp1),f
 26278  132F  2B30               	goto	l18616
 26279                           	line	68
 26280                           	
 26281  1330                     l14571:	
 26282                           	line	65
 26283                           	
 26284  1330                     l18616:	
 26285  1330  08B5               	movf	(___fttol@exp1),f
 26286  1331  1D03               	skipz
 26287  1332  2B34               	goto	u6241
 26288  1333  2B35               	goto	u6240
 26289  1334                     u6241:
 26290  1334  2B26               	goto	l18614
 26291  1335                     u6240:
 26292  1335  2B37               	goto	l18618
 26293                           	
 26294  1336                     l14573:	
 26295  1336  2B37               	goto	l18618
 26296                           	line	69
 26297                           	
 26298  1337                     l14569:	
 26299                           	line	70
 26300                           	
 26301  1337                     l18618:	
 26302  1337  0830               	movf	(___fttol@sign1),w
 26303  1338  1D03               	skipz
 26304  1339  2B3B               	goto	u6250
 26305  133A  2B47               	goto	l18622
 26306  133B                     u6250:
 26307                           	line	71
 26308                           	
 26309  133B                     l18620:	
 26310  133B  09B1               	comf	(___fttol@lval),f
 26311  133C  09B2               	comf	(___fttol@lval+1),f
 26312  133D  09B3               	comf	(___fttol@lval+2),f
 26313  133E  09B4               	comf	(___fttol@lval+3),f
 26314  133F  0AB1               	incf	(___fttol@lval),f
 26315  1340  1903               	skipnz
 26316  1341  0AB2               	incf	(___fttol@lval+1),f
 26317  1342  1903               	skipnz
 26318  1343  0AB3               	incf	(___fttol@lval+2),f
 26319  1344  1903               	skipnz
 26320  1345  0AB4               	incf	(___fttol@lval+3),f
 26321  1346  2B47               	goto	l18622
 26322                           	
 26323  1347                     l14574:	
 26324                           	line	72
 26325                           	
 26326  1347                     l18622:	
 26327  1347  0834               	movf	(___fttol@lval+3),w
 26328  1348  00AB               	movwf	(?___fttol+3)
 26329  1349  0833               	movf	(___fttol@lval+2),w
 26330  134A  00AA               	movwf	(?___fttol+2)
 26331  134B  0832               	movf	(___fttol@lval+1),w
 26332  134C  00A9               	movwf	(?___fttol+1)
 26333  134D  0831               	movf	(___fttol@lval),w
 26334  134E  00A8               	movwf	(?___fttol)
 26335                           
 26336  134F  2B50               	goto	l14564
 26337                           	
 26338  1350                     l18624:	
 26339                           	line	73
 26340                           	
 26341  1350                     l14564:	
 26342  1350  0008               	return
 26343                           	opt stack 0
 26344                           GLOBAL	__end_of___fttol
 26345  1351                     	__end_of___fttol:
 26346 ;; =============== function ___fttol ends ============
 26347                           
 26348                           	signat	___fttol,4220
 26349                           	global	___ftpack
 26350                           psect	text4995,local,class=CODE,delta=2
 26351                           global __ptext4995
 26352  1D20                     __ptext4995:
 26353                           
 26354 ;; *************** function ___ftpack *****************
 26355 ;; Defined at:
 26356 ;;		line 63 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\float.c"
 26357 ;; Parameters:    Size  Location     Type
 26358 ;;  arg             3    0[BANK0 ] unsigned um
 26359 ;;  exp             1    3[BANK0 ] unsigned char 
 26360 ;;  sign            1    4[BANK0 ] unsigned char 
 26361 ;; Auto vars:     Size  Location     Type
 26362 ;;		None
 26363 ;; Return value:  Size  Location     Type
 26364 ;;                  3    0[BANK0 ] float 
 26365 ;; Registers used:
 26366 ;;		wreg, status,2, status,0
 26367 ;; Tracked objects:
 26368 ;;		On entry : 0/0
 26369 ;;		On exit  : 0/0
 26370 ;;		Unchanged: 0/0
 26371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 26372 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
       0       0
 26373 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 26374 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 26375 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
       0       0
 26376 ;;Total ram usage:        8 bytes
 26377 ;; Hardware stack levels used:    1
 26378 ;; Hardware stack levels required when called:    4
 26379 ;; This function calls:
 26380 ;;		Nothing
 26381 ;; This function is called by:
 26382 ;;		___ftadd
 26383 ;;		___ftdiv
 26384 ;;		___ftmul
 26385 ;;		___awtoft
 26386 ;;		___lbtoft
 26387 ;;		___abtoft
 26388 ;;		___lwtoft
 26389 ;;		___altoft
 26390 ;;		___lltoft
 26391 ;;		___attoft
 26392 ;;		___lttoft
 26393 ;; This function uses a non-reentrant model
 26394 ;;
 26395                           psect	text4995
 26396                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\float.c"
 26397                           	line	63
 26398                           	global	__size_of___ftpack
 26399  0074                     	__size_of___ftpack	equ	__end_of___ftpack-___ftpack
 26400                           	
 26401  1D20                     ___ftpack:	
 26402                           	opt	stack 2
 26403                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
 26404                           	line	64
 26405                           	
 26406  1D20                     l18546:	
 26407  1D20  0020               	movlb 0	; select bank0
 26408  1D21  0823               	movf	(___ftpack@exp),w
 26409  1D22  1D03               	skipz
 26410  1D23  2D25               	goto	u6050
 26411  1D24  2D2D               	goto	l18550
 26412  1D25                     u6050:
 26413                           	
 26414  1D25                     l18548:	
 26415  1D25  0822               	movf	(___ftpack@arg+2),w
 26416  1D26  0421               	iorwf	(___ftpack@arg+1),w
 26417  1D27  0420               	iorwf	(___ftpack@arg),w
 26418  1D28  1D03               	skipz
 26419  1D29  2D2B               	goto	u6061
 26420  1D2A  2D2C               	goto	u6060
 26421  1D2B                     u6061:
 26422  1D2B  2D41               	goto	l18556
 26423  1D2C                     u6060:
 26424  1D2C  2D2D               	goto	l18550
 26425                           	
 26426  1D2D                     l14788:	
 26427                           	line	65
 26428                           	
 26429  1D2D                     l18550:	
 26430  1D2D  3000               	movlw	0x0
 26431  1D2E  00A0               	movwf	(?___ftpack)
 26432  1D2F  3000               	movlw	0x0
 26433  1D30  00A1               	movwf	(?___ftpack+1)
 26434  1D31  3000               	movlw	0x0
 26435  1D32  00A2               	movwf	(?___ftpack+2)
 26436  1D33  2D93               	goto	l14789
 26437                           	
 26438  1D34                     l18552:	
 26439  1D34  2D93               	goto	l14789
 26440                           	
 26441  1D35                     l14786:	
 26442                           	line	66
 26443  1D35  2D41               	goto	l18556
 26444                           	
 26445  1D36                     l14791:	
 26446                           	line	67
 26447                           	
 26448  1D36                     l18554:	
 26449  1D36  3001               	movlw	(01h)
 26450  1D37  00A5               	movwf	(??___ftpack+0)+0
 26451  1D38  0825               	movf	(??___ftpack+0)+0,w
 26452  1D39  07A3               	addwf	(___ftpack@exp),f
 26453                           	line	68
 26454  1D3A  3001               	movlw	01h
 26455  1D3B                     u6075:
 26456  1D3B  36A2               	lsrf	(___ftpack@arg+2),f
 26457  1D3C  0CA1               	rrf	(___ftpack@arg+1),f
 26458  1D3D  0CA0               	rrf	(___ftpack@arg),f
 26459  1D3E  0B89               	decfsz	wreg,f
 26460  1D3F  2D3B               	goto	u6075
 26461                           
 26462  1D40  2D41               	goto	l18556
 26463                           	line	69
 26464                           	
 26465  1D41                     l14790:	
 26466                           	line	66
 26467                           	
 26468  1D41                     l18556:	
 26469  1D41  30FE               	movlw	low highword(0FE0000h)
 26470  1D42  0522               	andwf	(___ftpack@arg+2),w
 26471  1D43  1D03               	btfss	status,2
 26472  1D44  2D46               	goto	u6081
 26473  1D45  2D47               	goto	u6080
 26474  1D46                     u6081:
 26475  1D46  2D36               	goto	l18554
 26476  1D47                     u6080:
 26477  1D47  2D5D               	goto	l14793
 26478                           	
 26479  1D48                     l14792:	
 26480                           	line	70
 26481  1D48  2D5D               	goto	l14793
 26482                           	
 26483  1D49                     l14794:	
 26484                           	line	71
 26485                           	
 26486  1D49                     l18558:	
 26487  1D49  3001               	movlw	(01h)
 26488  1D4A  00A5               	movwf	(??___ftpack+0)+0
 26489  1D4B  0825               	movf	(??___ftpack+0)+0,w
 26490  1D4C  07A3               	addwf	(___ftpack@exp),f
 26491                           	line	72
 26492                           	
 26493  1D4D                     l18560:	
 26494  1D4D  3001               	movlw	01h
 26495  1D4E  07A0               	addwf	(___ftpack@arg),f
 26496  1D4F  3000               	movlw	0
 26497  1D50  1803               	skipnc
 26498  1D51  3001               movlw 1
 26499  1D52  07A1               	addwf	(___ftpack@arg+1),f
 26500  1D53  3000               	movlw	0
 26501  1D54  1803               	skipnc
 26502  1D55  3001               movlw 1
 26503  1D56  07A2               	addwf	(___ftpack@arg+2),f
 26504                           	line	73
 26505                           	
 26506  1D57                     l18562:	
 26507  1D57  3001               	movlw	01h
 26508  1D58                     u6095:
 26509  1D58  36A2               	lsrf	(___ftpack@arg+2),f
 26510  1D59  0CA1               	rrf	(___ftpack@arg+1),f
 26511  1D5A  0CA0               	rrf	(___ftpack@arg),f
 26512  1D5B  0B89               	decfsz	wreg,f
 26513  1D5C  2D58               	goto	u6095
 26514                           
 26515                           	line	74
 26516                           	
 26517  1D5D                     l14793:	
 26518                           	line	70
 26519  1D5D  30FF               	movlw	low highword(0FF0000h)
 26520  1D5E  0522               	andwf	(___ftpack@arg+2),w
 26521  1D5F  1D03               	btfss	status,2
 26522  1D60  2D62               	goto	u6101
 26523  1D61  2D63               	goto	u6100
 26524  1D62                     u6101:
 26525  1D62  2D49               	goto	l18558
 26526  1D63                     u6100:
 26527  1D63  2D6E               	goto	l18566
 26528                           	
 26529  1D64                     l14795:	
 26530                           	line	75
 26531  1D64  2D6E               	goto	l18566
 26532                           	
 26533  1D65                     l14797:	
 26534                           	line	76
 26535                           	
 26536  1D65                     l18564:	
 26537  1D65  3001               	movlw	low(01h)
 26538  1D66  02A3               	subwf	(___ftpack@exp),f
 26539                           	line	77
 26540  1D67  3001               	movlw	01h
 26541  1D68                     u6115:
 26542  1D68  35A0               	lslf	(___ftpack@arg),f
 26543  1D69  0DA1               	rlf	(___ftpack@arg+1),f
 26544  1D6A  0DA2               	rlf	(___ftpack@arg+2),f
 26545  1D6B  0B89               	decfsz	wreg,f
 26546  1D6C  2D68               	goto	u6115
 26547  1D6D  2D6E               	goto	l18566
 26548                           	line	78
 26549                           	
 26550  1D6E                     l14796:	
 26551                           	line	75
 26552                           	
 26553  1D6E                     l18566:	
 26554  1D6E  1FA1               	btfss	(___ftpack@arg+1),(15)&7
 26555  1D6F  2D71               	goto	u6121
 26556  1D70  2D72               	goto	u6120
 26557  1D71                     u6121:
 26558  1D71  2D65               	goto	l18564
 26559  1D72                     u6120:
 26560                           	
 26561  1D72                     l14798:	
 26562                           	line	79
 26563  1D72  1823               	btfsc	(___ftpack@exp),(0)&7
 26564  1D73  2D75               	goto	u6131
 26565  1D74  2D76               	goto	u6130
 26566  1D75                     u6131:
 26567  1D75  2D7C               	goto	l14799
 26568  1D76                     u6130:
 26569                           	line	80
 26570                           	
 26571  1D76                     l18568:	
 26572  1D76  30FF               	movlw	0FFh
 26573  1D77  05A0               	andwf	(___ftpack@arg),f
 26574  1D78  307F               	movlw	07Fh
 26575  1D79  05A1               	andwf	(___ftpack@arg+1),f
 26576  1D7A  30FF               	movlw	0FFh
 26577  1D7B  05A2               	andwf	(___ftpack@arg+2),f
 26578                           	
 26579  1D7C                     l14799:	
 26580                           	line	81
 26581  1D7C  1003               	clrc
 26582  1D7D  0CA3               	rrf	(___ftpack@exp),f
 26583                           
 26584                           	line	82
 26585                           	
 26586  1D7E                     l18570:	
 26587  1D7E  0823               	movf	(___ftpack@exp),w
 26588  1D7F  00A5               	movwf	((??___ftpack+0)+0)
 26589  1D80  01A6               	clrf	((??___ftpack+0)+0+1)
 26590  1D81  01A7               	clrf	((??___ftpack+0)+0+2)
 26591  1D82  3010               	movlw	010h
 26592  1D83                     u6145:
 26593  1D83  35A5               	lslf	(??___ftpack+0)+0,f
 26594  1D84  0DA6               	rlf	(??___ftpack+0)+1,f
 26595  1D85  0DA7               	rlf	(??___ftpack+0)+2,f
 26596  1D86                     u6140:
 26597  1D86  0B89               	decfsz	wreg,f
 26598  1D87  2D83               	goto	u6145
 26599  1D88  0825               	movf	0+(??___ftpack+0)+0,w
 26600  1D89  04A0               	iorwf	(___ftpack@arg),f
 26601  1D8A  0826               	movf	1+(??___ftpack+0)+0,w
 26602  1D8B  04A1               	iorwf	(___ftpack@arg+1),f
 26603  1D8C  0827               	movf	2+(??___ftpack+0)+0,w
 26604  1D8D  04A2               	iorwf	(___ftpack@arg+2),f
 26605                           	line	83
 26606                           	
 26607  1D8E                     l18572:	
 26608  1D8E  0824               	movf	(___ftpack@sign),w
 26609  1D8F  1D03               	skipz
 26610  1D90  2D92               	goto	u6150
 26611  1D91  2D93               	goto	l14800
 26612  1D92                     u6150:
 26613                           	line	84
 26614                           	
 26615  1D92                     l18574:	
 26616  1D92  17A2               	bsf	(___ftpack@arg)+(23/8),(23)&7
 26617                           	
 26618  1D93                     l14800:	
 26619                           	line	85
 26620                           	line	86
 26621                           	
 26622  1D93                     l14789:	
 26623  1D93  0008               	return
 26624                           	opt stack 0
 26625                           GLOBAL	__end_of___ftpack
 26626  1D94                     	__end_of___ftpack:
 26627 ;; =============== function ___ftpack ends ============
 26628                           
 26629                           	signat	___ftpack,12411
 26630                           	global	___lwdiv
 26631                           psect	text4996,local,class=CODE,delta=2
 26632                           global __ptext4996
 26633  27B9                     __ptext4996:
 26634                           
 26635 ;; *************** function ___lwdiv *****************
 26636 ;; Defined at:
 26637 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lwdiv.c"
 26638 ;; Parameters:    Size  Location     Type
 26639 ;;  divisor         2    0[BANK0 ] unsigned int 
 26640 ;;  dividend        2    2[BANK0 ] unsigned int 
 26641 ;; Auto vars:     Size  Location     Type
 26642 ;;  quotient        2    5[BANK0 ] unsigned int 
 26643 ;;  counter         1    7[BANK0 ] unsigned char 
 26644 ;; Return value:  Size  Location     Type
 26645 ;;                  2    0[BANK0 ] unsigned int 
 26646 ;; Registers used:
 26647 ;;		wreg, status,2, status,0
 26648 ;; Tracked objects:
 26649 ;;		On entry : 0/0
 26650 ;;		On exit  : 0/0
 26651 ;;		Unchanged: 0/0
 26652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 26653 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 26654 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 26655 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 26656 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
       0       0
 26657 ;;Total ram usage:        8 bytes
 26658 ;; Hardware stack levels used:    1
 26659 ;; Hardware stack levels required when called:    4
 26660 ;; This function calls:
 26661 ;;		Nothing
 26662 ;; This function is called by:
 26663 ;;		_setLoad_Main
 26664 ;; This function uses a non-reentrant model
 26665 ;;
 26666                           psect	text4996
 26667                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lwdiv.c"
 26668                           	line	5
 26669                           	global	__size_of___lwdiv
 26670  0047                     	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
 26671                           	
 26672  27B9                     ___lwdiv:	
 26673                           	opt	stack 9
 26674                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 26675                           	line	9
 26676                           	
 26677  27B9                     l18520:	
 26678  27B9  0020               	movlb 0	; select bank0
 26679  27BA  01A5               	clrf	(___lwdiv@quotient)
 26680  27BB  01A6               	clrf	(___lwdiv@quotient+1)
 26681                           	line	10
 26682                           	
 26683  27BC                     l18522:	
 26684  27BC  0821               	movf	(___lwdiv@divisor+1),w
 26685  27BD  0420               	iorwf	(___lwdiv@divisor),w
 26686  27BE  1903               	skipnz
 26687  27BF  2FC1               	goto	u5981
 26688  27C0  2FC2               	goto	u5980
 26689  27C1                     u5981:
 26690  27C1  2FF8               	goto	l18542
 26691  27C2                     u5980:
 26692                           	line	11
 26693                           	
 26694  27C2                     l18524:	
 26695  27C2  01A7               	clrf	(___lwdiv@counter)
 26696  27C3  1403               	bsf	status,0
 26697  27C4  0DA7               	rlf	(___lwdiv@counter),f
 26698                           	line	12
 26699  27C5  2FD0               	goto	l18530
 26700                           	
 26701  27C6                     l14462:	
 26702                           	line	13
 26703                           	
 26704  27C6                     l18526:	
 26705  27C6  3001               	movlw	01h
 26706                           	
 26707  27C7                     u5995:
 26708  27C7  35A0               	lslf	(___lwdiv@divisor),f
 26709  27C8  0DA1               	rlf	(___lwdiv@divisor+1),f
 26710  27C9  0B89               	decfsz	wreg,f
 26711  27CA  2FC7               	goto	u5995
 26712                           	line	14
 26713                           	
 26714  27CB                     l18528:	
 26715  27CB  3001               	movlw	(01h)
 26716  27CC  00A4               	movwf	(??___lwdiv+0)+0
 26717  27CD  0824               	movf	(??___lwdiv+0)+0,w
 26718  27CE  07A7               	addwf	(___lwdiv@counter),f
 26719  27CF  2FD0               	goto	l18530
 26720                           	line	15
 26721                           	
 26722  27D0                     l14461:	
 26723                           	line	12
 26724                           	
 26725  27D0                     l18530:	
 26726  27D0  1FA1               	btfss	(___lwdiv@divisor+1),(15)&7
 26727  27D1  2FD3               	goto	u6001
 26728  27D2  2FD4               	goto	u6000
 26729  27D3                     u6001:
 26730  27D3  2FC6               	goto	l18526
 26731  27D4                     u6000:
 26732  27D4  2FD6               	goto	l18532
 26733                           	
 26734  27D5                     l14463:	
 26735  27D5  2FD6               	goto	l18532
 26736                           	line	16
 26737                           	
 26738  27D6                     l14464:	
 26739                           	line	17
 26740                           	
 26741  27D6                     l18532:	
 26742  27D6  3001               	movlw	01h
 26743                           	
 26744  27D7                     u6015:
 26745  27D7  35A5               	lslf	(___lwdiv@quotient),f
 26746  27D8  0DA6               	rlf	(___lwdiv@quotient+1),f
 26747  27D9  0B89               	decfsz	wreg,f
 26748  27DA  2FD7               	goto	u6015
 26749                           	line	18
 26750  27DB  0821               	movf	(___lwdiv@divisor+1),w
 26751  27DC  0223               	subwf	(___lwdiv@dividend+1),w
 26752  27DD  1D03               	skipz
 26753  27DE  2FE1               	goto	u6025
 26754  27DF  0820               	movf	(___lwdiv@divisor),w
 26755  27E0  0222               	subwf	(___lwdiv@dividend),w
 26756  27E1                     u6025:
 26757  27E1  1C03               	skipc
 26758  27E2  2FE4               	goto	u6021
 26759  27E3  2FE5               	goto	u6020
 26760  27E4                     u6021:
 26761  27E4  2FEB               	goto	l18538
 26762  27E5                     u6020:
 26763                           	line	19
 26764                           	
 26765  27E5                     l18534:	
 26766  27E5  0820               	movf	(___lwdiv@divisor),w
 26767  27E6  02A2               	subwf	(___lwdiv@dividend),f
 26768  27E7  0821               	movf	(___lwdiv@divisor+1),w
 26769  27E8  3BA3               	subwfb	(___lwdiv@dividend+1),f
 26770                           	line	20
 26771                           	
 26772  27E9                     l18536:	
 26773  27E9  1425               	bsf	(___lwdiv@quotient)+(0/8),(0)&7
 26774  27EA  2FEB               	goto	l18538
 26775                           	line	21
 26776                           	
 26777  27EB                     l14465:	
 26778                           	line	22
 26779                           	
 26780  27EB                     l18538:	
 26781  27EB  3001               	movlw	01h
 26782                           	
 26783  27EC                     u6035:
 26784  27EC  36A1               	lsrf	(___lwdiv@divisor+1),f
 26785  27ED  0CA0               	rrf	(___lwdiv@divisor),f
 26786  27EE  0B89               	decfsz	wreg,f
 26787  27EF  2FEC               	goto	u6035
 26788                           	line	23
 26789                           	
 26790  27F0                     l18540:	
 26791  27F0  3001               	movlw	low(01h)
 26792  27F1  02A7               	subwf	(___lwdiv@counter),f
 26793  27F2  1D03               	btfss	status,2
 26794  27F3  2FF5               	goto	u6041
 26795  27F4  2FF6               	goto	u6040
 26796  27F5                     u6041:
 26797  27F5  2FD6               	goto	l18532
 26798  27F6                     u6040:
 26799  27F6  2FF8               	goto	l18542
 26800                           	
 26801  27F7                     l14466:	
 26802  27F7  2FF8               	goto	l18542
 26803                           	line	24
 26804                           	
 26805  27F8                     l14460:	
 26806                           	line	25
 26807                           	
 26808  27F8                     l18542:	
 26809  27F8  0826               	movf	(___lwdiv@quotient+1),w
 26810  27F9  01A1               	clrf	(?___lwdiv+1)
 26811  27FA  07A1               	addwf	(?___lwdiv+1)
 26812  27FB  0825               	movf	(___lwdiv@quotient),w
 26813  27FC  01A0               	clrf	(?___lwdiv)
 26814  27FD  07A0               	addwf	(?___lwdiv)
 26815                           
 26816  27FE  2FFF               	goto	l14467
 26817                           	
 26818  27FF                     l18544:	
 26819                           	line	26
 26820                           	
 26821  27FF                     l14467:	
 26822  27FF  0008               	return
 26823                           	opt stack 0
 26824                           GLOBAL	__end_of___lwdiv
 26825  2800                     	__end_of___lwdiv:
 26826 ;; =============== function ___lwdiv ends ============
 26827                           
 26828                           	signat	___lwdiv,8314
 26829                           	global	___wmul
 26830                           psect	text4997,local,class=CODE,delta=2
 26831                           global __ptext4997
 26832  2232                     __ptext4997:
 26833                           
 26834 ;; *************** function ___wmul *****************
 26835 ;; Defined at:
 26836 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\wmul.c"
 26837 ;; Parameters:    Size  Location     Type
 26838 ;;  multiplier      2    0[BANK0 ] unsigned int 
 26839 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 26840 ;; Auto vars:     Size  Location     Type
 26841 ;;  product         2    4[BANK0 ] unsigned int 
 26842 ;; Return value:  Size  Location     Type
 26843 ;;                  2    0[BANK0 ] unsigned int 
 26844 ;; Registers used:
 26845 ;;		wreg, status,2, status,0
 26846 ;; Tracked objects:
 26847 ;;		On entry : 0/0
 26848 ;;		On exit  : 0/0
 26849 ;;		Unchanged: 0/0
 26850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 26851 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 26852 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 26853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 26854 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0
 26855 ;;Total ram usage:        6 bytes
 26856 ;; Hardware stack levels used:    1
 26857 ;; Hardware stack levels required when called:    4
 26858 ;; This function calls:
 26859 ;;		Nothing
 26860 ;; This function is called by:
 26861 ;;		_setLoad_Main
 26862 ;; This function uses a non-reentrant model
 26863 ;;
 26864                           psect	text4997
 26865                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\wmul.c"
 26866                           	line	3
 26867                           	global	__size_of___wmul
 26868  0025                     	__size_of___wmul	equ	__end_of___wmul-___wmul
 26869                           	
 26870  2232                     ___wmul:	
 26871                           	opt	stack 9
 26872                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 26873                           	line	4
 26874                           	
 26875  2232                     l20782:	
 26876  2232  0020               	movlb 0	; select bank0
 26877  2233  01A4               	clrf	(___wmul@product)
 26878  2234  01A5               	clrf	(___wmul@product+1)
 26879  2235  2A36               	goto	l20784
 26880                           	line	6
 26881                           	
 26882  2236                     l14454:	
 26883                           	line	7
 26884                           	
 26885  2236                     l20784:	
 26886  2236  1C20               	btfss	(___wmul@multiplier),(0)&7
 26887  2237  2A39               	goto	u9391
 26888  2238  2A3A               	goto	u9390
 26889  2239                     u9391:
 26890  2239  2A3E               	goto	l14455
 26891  223A                     u9390:
 26892                           	line	8
 26893                           	
 26894  223A                     l20786:	
 26895  223A  0822               	movf	(___wmul@multiplicand),w
 26896  223B  07A4               	addwf	(___wmul@product),f
 26897  223C  0823               	movf	(___wmul@multiplicand+1),w
 26898  223D  3DA5               	addwfc	(___wmul@product+1),f
 26899                           	
 26900  223E                     l14455:	
 26901                           	line	9
 26902  223E  3001               	movlw	01h
 26903                           	
 26904  223F                     u9405:
 26905  223F  35A2               	lslf	(___wmul@multiplicand),f
 26906  2240  0DA3               	rlf	(___wmul@multiplicand+1),f
 26907  2241  0B89               	decfsz	wreg,f
 26908  2242  2A3F               	goto	u9405
 26909                           	line	10
 26910                           	
 26911  2243                     l20788:	
 26912  2243  3001               	movlw	01h
 26913                           	
 26914  2244                     u9415:
 26915  2244  36A1               	lsrf	(___wmul@multiplier+1),f
 26916  2245  0CA0               	rrf	(___wmul@multiplier),f
 26917  2246  0B89               	decfsz	wreg,f
 26918  2247  2A44               	goto	u9415
 26919                           	line	11
 26920  2248  0821               	movf	((___wmul@multiplier+1)),w
 26921  2249  0420               	iorwf	((___wmul@multiplier)),w
 26922  224A  1D03               	skipz
 26923  224B  2A4D               	goto	u9421
 26924  224C  2A4E               	goto	u9420
 26925  224D                     u9421:
 26926  224D  2A36               	goto	l20784
 26927  224E                     u9420:
 26928  224E  2A4F               	goto	l20790
 26929                           	
 26930  224F                     l14456:	
 26931                           	line	12
 26932                           	
 26933  224F                     l20790:	
 26934  224F  0825               	movf	(___wmul@product+1),w
 26935  2250  01A1               	clrf	(?___wmul+1)
 26936  2251  07A1               	addwf	(?___wmul+1)
 26937  2252  0824               	movf	(___wmul@product),w
 26938  2253  01A0               	clrf	(?___wmul)
 26939  2254  07A0               	addwf	(?___wmul)
 26940                           
 26941  2255  2A56               	goto	l14457
 26942                           	
 26943  2256                     l20792:	
 26944                           	line	13
 26945                           	
 26946  2256                     l14457:	
 26947  2256  0008               	return
 26948                           	opt stack 0
 26949                           GLOBAL	__end_of___wmul
 26950  2257                     	__end_of___wmul:
 26951 ;; =============== function ___wmul ends ============
 26952                           
 26953                           	signat	___wmul,8314
 26954                           	global	_SwPointSelect
 26955                           psect	text4998,local,class=CODE,delta=2
 26956                           global __ptext4998
 26957  2EAE                     __ptext4998:
 26958                           
 26959 ;; *************** function _SwPointSelect *****************
 26960 ;; Defined at:
 26961 ;;		line 17 in file "G:\Program\PIC\Source_File\Switch_B1.c"
 26962 ;; Parameters:    Size  Location     Type
 26963 ;;  sw              1    wreg     unsigned char 
 26964 ;; Auto vars:     Size  Location     Type
 26965 ;;  sw              1    1[BANK0 ] unsigned char 
 26966 ;; Return value:  Size  Location     Type
 26967 ;;		None               void
 26968 ;; Registers used:
 26969 ;;		wreg
 26970 ;; Tracked objects:
 26971 ;;		On entry : 0/0
 26972 ;;		On exit  : 0/0
 26973 ;;		Unchanged: 0/0
 26974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 26975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 26976 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 26977 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 26978 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 26979 ;;Total ram usage:        2 bytes
 26980 ;; Hardware stack levels used:    1
 26981 ;; Hardware stack levels required when called:    4
 26982 ;; This function calls:
 26983 ;;		Nothing
 26984 ;; This function is called by:
 26985 ;;		_setSw_Enable
 26986 ;;		_setSw_Status
 26987 ;;		_setSw_Main
 26988 ;;		_Sw_Detect
 26989 ;; This function uses a non-reentrant model
 26990 ;;
 26991                           psect	text4998
 26992                           	file	"G:\Program\PIC\Source_File\Switch_B1.c"
 26993                           	line	17
 26994                           	global	__size_of_SwPointSelect
 26995  000E                     	__size_of_SwPointSelect	equ	__end_of_SwPointSelect-_SwPointSelect
 26996                           	
 26997  2EAE                     _SwPointSelect:	
 26998                           	opt	stack 8
 26999                           ; Regs used in _SwPointSelect: [wreg]
 27000                           ;SwPointSelect@sw stored from wreg
 27001                           	line	19
 27002  2EAE  0020               	movlb 0	; select bank0
 27003  2EAF  00A1               	movwf	(SwPointSelect@sw)
 27004                           	
 27005  2EB0                     l18490:	
 27006                           ;Switch_B1.c: 19: if(sw == 1)
 27007  2EB0  0821               	movf	(SwPointSelect@sw),w
 27008  2EB1  3A01               	xorlw	01h&0ffh
 27009  2EB2  1D03               	skipz
 27010  2EB3  2EB5               	goto	u5881
 27011  2EB4  2EB6               	goto	u5880
 27012  2EB5                     u5881:
 27013  2EB5  2EBB               	goto	l14387
 27014  2EB6                     u5880:
 27015                           	line	21
 27016                           	
 27017  2EB6                     l18492:	
 27018                           ;Switch_B1.c: 20: {
 27019                           ;Switch_B1.c: 21: Sw=&Sw1;
 27020  2EB6  3054               	movlw	(_Sw1)&0ffh
 27021  2EB7  00A0               	movwf	(??_SwPointSelect+0)+0
 27022  2EB8  0820               	movf	(??_SwPointSelect+0)+0,w
 27023  2EB9  00ED               	movwf	(_Sw)
 27024  2EBA  2EBB               	goto	l14387
 27025                           	line	22
 27026                           	
 27027  2EBB                     l14386:	
 27028                           	line	36
 27029                           	
 27030  2EBB                     l14387:	
 27031  2EBB  0008               	return
 27032                           	opt stack 0
 27033                           GLOBAL	__end_of_SwPointSelect
 27034  2EBC                     	__end_of_SwPointSelect:
 27035 ;; =============== function _SwPointSelect ends ============
 27036                           
 27037                           	signat	_SwPointSelect,4216
 27038                           	global	_TouchPower
 27039                           psect	text4999,local,class=CODE,delta=2
 27040                           global __ptext4999
 27041  2DAF                     __ptext4999:
 27042                           
 27043 ;; *************** function _TouchPower *****************
 27044 ;; Defined at:
 27045 ;;		line 10 in file "G:\Program\PIC\Source_File\Switch_B1.c"
 27046 ;; Parameters:    Size  Location     Type
 27047 ;;		None
 27048 ;; Auto vars:     Size  Location     Type
 27049 ;;		None
 27050 ;; Return value:  Size  Location     Type
 27051 ;;		None               void
 27052 ;; Registers used:
 27053 ;;		None
 27054 ;; Tracked objects:
 27055 ;;		On entry : 0/0
 27056 ;;		On exit  : 0/0
 27057 ;;		Unchanged: 0/0
 27058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 27059 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 27060 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 27061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 27062 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 27063 ;;Total ram usage:        0 bytes
 27064 ;; Hardware stack levels used:    1
 27065 ;; Hardware stack levels required when called:    4
 27066 ;; This function calls:
 27067 ;;		Nothing
 27068 ;; This function is called by:
 27069 ;;		_Switch_Initialization
 27070 ;; This function uses a non-reentrant model
 27071 ;;
 27072                           psect	text4999
 27073                           	file	"G:\Program\PIC\Source_File\Switch_B1.c"
 27074                           	line	10
 27075                           	global	__size_of_TouchPower
 27076  0009                     	__size_of_TouchPower	equ	__end_of_TouchPower-_TouchPower
 27077                           	
 27078  2DAF                     _TouchPower:	
 27079                           	opt	stack 10
 27080                           ; Regs used in _TouchPower: []
 27081                           	line	11
 27082                           	
 27083  2DAF                     l20766:	
 27084                           ;Switch_B1.c: 11: while(RC5 == 0)
 27085  2DAF  2DB1               	goto	l14380
 27086                           	
 27087  2DB0                     l14381:	
 27088                           	line	12
 27089                           ;Switch_B1.c: 12: RC5=1;
 27090  2DB0  168E               	bsf	(117/8),(117)&7
 27091                           	
 27092  2DB1                     l14380:	
 27093                           	line	11
 27094  2DB1  0020               	movlb 0	; select bank0
 27095  2DB2  1E8E               	btfss	(117/8),(117)&7
 27096  2DB3  2DB5               	goto	u9331
 27097  2DB4  2DB6               	goto	u9330
 27098  2DB5                     u9331:
 27099  2DB5  2DB0               	goto	l14381
 27100  2DB6                     u9330:
 27101  2DB6  2DB7               	goto	l14383
 27102                           	
 27103  2DB7                     l14382:	
 27104                           	line	13
 27105                           	
 27106  2DB7                     l14383:	
 27107  2DB7  0008               	return
 27108                           	opt stack 0
 27109                           GLOBAL	__end_of_TouchPower
 27110  2DB8                     	__end_of_TouchPower:
 27111 ;; =============== function _TouchPower ends ============
 27112                           
 27113                           	signat	_TouchPower,88
 27114                           	global	_RfSWPointSelect
 27115                           psect	text5000,local,class=CODE,delta=2
 27116                           global __ptext5000
 27117  2EE7                     __ptext5000:
 27118                           
 27119 ;; *************** function _RfSWPointSelect *****************
 27120 ;; Defined at:
 27121 ;;		line 321 in file "G:\Program\PIC\Source_File\RF_Control_B1.c"
 27122 ;; Parameters:    Size  Location     Type
 27123 ;;  sw              1    wreg     unsigned char 
 27124 ;; Auto vars:     Size  Location     Type
 27125 ;;  sw              1    1[BANK0 ] unsigned char 
 27126 ;; Return value:  Size  Location     Type
 27127 ;;		None               void
 27128 ;; Registers used:
 27129 ;;		wreg
 27130 ;; Tracked objects:
 27131 ;;		On entry : 0/0
 27132 ;;		On exit  : 0/0
 27133 ;;		Unchanged: 0/0
 27134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 27135 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 27136 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 27137 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 27138 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 27139 ;;Total ram usage:        2 bytes
 27140 ;; Hardware stack levels used:    1
 27141 ;; Hardware stack levels required when called:    4
 27142 ;; This function calls:
 27143 ;;		Nothing
 27144 ;; This function is called by:
 27145 ;;		_setRFSW_Control
 27146 ;;		_setRFSW_AdjControl
 27147 ;;		_setRFSW_Status
 27148 ;; This function uses a non-reentrant model
 27149 ;;
 27150                           psect	text5000
 27151                           	file	"G:\Program\PIC\Source_File\RF_Control_B1.c"
 27152                           	line	321
 27153                           	global	__size_of_RfSWPointSelect
 27154  000F                     	__size_of_RfSWPointSelect	equ	__end_of_RfSWPointSelect-_RfSWPointSelect
 27155                           	
 27156  2EE7                     _RfSWPointSelect:	
 27157                           	opt	stack 8
 27158                           ; Regs used in _RfSWPointSelect: [wreg]
 27159                           ;RfSWPointSelect@sw stored from wreg
 27160                           	line	323
 27161  2EE7  0020               	movlb 0	; select bank0
 27162  2EE8  00A1               	movwf	(RfSWPointSelect@sw)
 27163                           	
 27164  2EE9                     l18484:	
 27165                           ;RF_Control_B1.c: 323: if(sw == 1)
 27166  2EE9  0821               	movf	(RfSWPointSelect@sw),w
 27167  2EEA  3A01               	xorlw	01h&0ffh
 27168  2EEB  1D03               	skipz
 27169  2EEC  2EEE               	goto	u5861
 27170  2EED  2EEF               	goto	u5860
 27171  2EEE                     u5861:
 27172  2EEE  2EF5               	goto	l13218
 27173  2EEF                     u5860:
 27174                           	line	325
 27175                           	
 27176  2EEF                     l18486:	
 27177                           ;RF_Control_B1.c: 324: {
 27178                           ;RF_Control_B1.c: 325: RFSW=&RFSW1;
 27179  2EEF  30E7               	movlw	(_RFSW1)&0ffh
 27180  2EF0  00A0               	movwf	(??_RfSWPointSelect+0)+0
 27181  2EF1  0820               	movf	(??_RfSWPointSelect+0)+0,w
 27182  2EF2  0021               	movlb 1	; select bank1
 27183  2EF3  00BB               	movwf	(_RFSW)^080h
 27184  2EF4  2EF5               	goto	l13218
 27185                           	line	326
 27186                           	
 27187  2EF5                     l13217:	
 27188                           	line	340
 27189                           	
 27190  2EF5                     l13218:	
 27191  2EF5  0008               	return
 27192                           	opt stack 0
 27193                           GLOBAL	__end_of_RfSWPointSelect
 27194  2EF6                     	__end_of_RfSWPointSelect:
 27195 ;; =============== function _RfSWPointSelect ends ============
 27196                           
 27197                           	signat	_RfSWPointSelect,4216
 27198                           	global	_setRF_Initialization
 27199                           psect	text5001,local,class=CODE,delta=2
 27200                           global __ptext5001
 27201  2D97                     __ptext5001:
 27202                           
 27203 ;; *************** function _setRF_Initialization *****************
 27204 ;; Defined at:
 27205 ;;		line 51 in file "G:\Program\PIC\Source_File\RF_Control_B1.c"
 27206 ;; Parameters:    Size  Location     Type
 27207 ;;  rf              1    wreg     unsigned char 
 27208 ;; Auto vars:     Size  Location     Type
 27209 ;;  rf              1    0[COMMON] unsigned char 
 27210 ;; Return value:  Size  Location     Type
 27211 ;;		None               void
 27212 ;; Registers used:
 27213 ;;		wreg
 27214 ;; Tracked objects:
 27215 ;;		On entry : 0/0
 27216 ;;		On exit  : 0/0
 27217 ;;		Unchanged: 0/0
 27218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 27219 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 27220 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 27221 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 27222 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 27223 ;;Total ram usage:        1 bytes
 27224 ;; Hardware stack levels used:    1
 27225 ;; Hardware stack levels required when called:    4
 27226 ;; This function calls:
 27227 ;;		Nothing
 27228 ;; This function is called by:
 27229 ;;		_RF_Initialization
 27230 ;; This function uses a non-reentrant model
 27231 ;;
 27232                           psect	text5001
 27233                           	file	"G:\Program\PIC\Source_File\RF_Control_B1.c"
 27234                           	line	51
 27235                           	global	__size_of_setRF_Initialization
 27236  0007                     	__size_of_setRF_Initialization	equ	__end_of_setRF_Initialization-_setRF_Initialization
 27237                           	
 27238  2D97                     _setRF_Initialization:	
 27239                           	opt	stack 10
 27240                           ; Regs used in _setRF_Initialization: [wreg]
 27241                           	line	54
 27242                           	
 27243  2D97                     l18482:	
 27244                           ;RF_Control_B1.c: 54: Tx_Length=21;
 27245  2D97  3015               	movlw	(015h)
 27246  2D98  0020               	movlb 0	; select bank0
 27247  2D99  00A0               	movwf	(??_setRF_Initialization+0)+0
 27248  2D9A  0820               	movf	(??_setRF_Initialization+0)+0,w
 27249  2D9B  0021               	movlb 1	; select bank1
 27250  2D9C  00BF               	movwf	(_Tx_Length)^080h
 27251                           	line	56
 27252                           	
 27253  2D9D                     l13152:	
 27254  2D9D  0008               	return
 27255                           	opt stack 0
 27256                           GLOBAL	__end_of_setRF_Initialization
 27257  2D9E                     	__end_of_setRF_Initialization:
 27258 ;; =============== function _setRF_Initialization ends ============
 27259                           
 27260                           	signat	_setRF_Initialization,4216
 27261                           	global	_RfPointSelect
 27262                           psect	text5002,local,class=CODE,delta=2
 27263                           global __ptext5002
 27264  2EA0                     __ptext5002:
 27265                           
 27266 ;; *************** function _RfPointSelect *****************
 27267 ;; Defined at:
 27268 ;;		line 8 in file "G:\Program\PIC\Source_File\RF_Control_B1.c"
 27269 ;; Parameters:    Size  Location     Type
 27270 ;;  rf              1    wreg     unsigned char 
 27271 ;; Auto vars:     Size  Location     Type
 27272 ;;  rf              1    1[BANK0 ] unsigned char 
 27273 ;; Return value:  Size  Location     Type
 27274 ;;		None               void
 27275 ;; Registers used:
 27276 ;;		wreg
 27277 ;; Tracked objects:
 27278 ;;		On entry : 0/0
 27279 ;;		On exit  : 0/0
 27280 ;;		Unchanged: 0/0
 27281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 27282 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 27283 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 27284 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 27285 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 27286 ;;Total ram usage:        2 bytes
 27287 ;; Hardware stack levels used:    1
 27288 ;; Hardware stack levels required when called:    4
 27289 ;; This function calls:
 27290 ;;		Nothing
 27291 ;; This function is called by:
 27292 ;;		_setRF_Learn
 27293 ;;		_setRF_RxStatus
 27294 ;;		_setRF_Main
 27295 ;;		_setTxData
 27296 ;;		_getRxData
 27297 ;;		_setLog_Code
 27298 ;;		_setControl_Lights_Table
 27299 ;;		_setRF_Enable
 27300 ;;		_RF_RxDisable
 27301 ;; This function uses a non-reentrant model
 27302 ;;
 27303                           psect	text5002
 27304                           	file	"G:\Program\PIC\Source_File\RF_Control_B1.c"
 27305                           	line	8
 27306                           	global	__size_of_RfPointSelect
 27307  000E                     	__size_of_RfPointSelect	equ	__end_of_RfPointSelect-_RfPointSelect
 27308                           	
 27309  2EA0                     _RfPointSelect:	
 27310                           	opt	stack 8
 27311                           ; Regs used in _RfPointSelect: [wreg]
 27312                           ;RfPointSelect@rf stored from wreg
 27313                           	line	10
 27314  2EA0  0020               	movlb 0	; select bank0
 27315  2EA1  00A1               	movwf	(RfPointSelect@rf)
 27316                           	
 27317  2EA2                     l18478:	
 27318                           ;RF_Control_B1.c: 10: if(rf == 1)
 27319  2EA2  0821               	movf	(RfPointSelect@rf),w
 27320  2EA3  3A01               	xorlw	01h&0ffh
 27321  2EA4  1D03               	skipz
 27322  2EA5  2EA7               	goto	u5851
 27323  2EA6  2EA8               	goto	u5850
 27324  2EA7                     u5851:
 27325  2EA7  2EAD               	goto	l13134
 27326  2EA8                     u5850:
 27327                           	line	12
 27328                           	
 27329  2EA8                     l18480:	
 27330                           ;RF_Control_B1.c: 11: {
 27331                           ;RF_Control_B1.c: 12: RF=&RF1;
 27332  2EA8  30E5               	movlw	(_RF1)&0ffh
 27333  2EA9  00A0               	movwf	(??_RfPointSelect+0)+0
 27334  2EAA  0820               	movf	(??_RfPointSelect+0)+0,w
 27335  2EAB  00FB               	movwf	(_RF)
 27336  2EAC  2EAD               	goto	l13134
 27337                           	line	13
 27338                           	
 27339  2EAD                     l13133:	
 27340                           	line	15
 27341                           	
 27342  2EAD                     l13134:	
 27343  2EAD  0008               	return
 27344                           	opt stack 0
 27345                           GLOBAL	__end_of_RfPointSelect
 27346  2EAE                     	__end_of_RfPointSelect:
 27347 ;; =============== function _RfPointSelect ends ============
 27348                           
 27349                           	signat	_RfPointSelect,4216
 27350                           	global	_PowerFaultPointSelect
 27351                           psect	text5003,local,class=CODE,delta=2
 27352                           global __ptext5003
 27353  2D84                     __ptext5003:
 27354                           
 27355 ;; *************** function _PowerFaultPointSelect *****************
 27356 ;; Defined at:
 27357 ;;		line 9 in file "G:\Program\PIC\Source_File\PowerFault_B1.c"
 27358 ;; Parameters:    Size  Location     Type
 27359 ;;  pf              1    wreg     unsigned char 
 27360 ;; Auto vars:     Size  Location     Type
 27361 ;;  pf              1    0[COMMON] unsigned char 
 27362 ;; Return value:  Size  Location     Type
 27363 ;;		None               void
 27364 ;; Registers used:
 27365 ;;		wreg
 27366 ;; Tracked objects:
 27367 ;;		On entry : 0/0
 27368 ;;		On exit  : 0/0
 27369 ;;		Unchanged: 0/0
 27370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 27371 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 27372 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 27373 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 27374 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 27375 ;;Total ram usage:        1 bytes
 27376 ;; Hardware stack levels used:    1
 27377 ;; Hardware stack levels required when called:    4
 27378 ;; This function calls:
 27379 ;;		Nothing
 27380 ;; This function is called by:
 27381 ;;		_setPowerFault_Initialization
 27382 ;;		_getPF_Safe
 27383 ;;		_getPF_ERROR
 27384 ;;		_getPowerFault_AD
 27385 ;;		_setPowerFault_Main
 27386 ;;		_setPowerFault_ERROR
 27387 ;;		_setPF_Enable
 27388 ;; This function uses a non-reentrant model
 27389 ;;
 27390                           psect	text5003
 27391                           	file	"G:\Program\PIC\Source_File\PowerFault_B1.c"
 27392                           	line	9
 27393                           	global	__size_of_PowerFaultPointSelect
 27394  0006                     	__size_of_PowerFaultPointSelect	equ	__end_of_PowerFaultPointSelect-_PowerFaultPointSele
                                 ct
 27395                           	
 27396  2D84                     _PowerFaultPointSelect:	
 27397                           	opt	stack 8
 27398                           ; Regs used in _PowerFaultPointSelect: [wreg]
 27399                           	line	11
 27400                           	
 27401  2D84                     l18472:	
 27402                           ;PowerFault_B1.c: 11: PF=&PF1;
 27403  2D84  30C3               	movlw	(_PF1)&0ffh
 27404  2D85  0020               	movlb 0	; select bank0
 27405  2D86  00A0               	movwf	(??_PowerFaultPointSelect+0)+0
 27406  2D87  0820               	movf	(??_PowerFaultPointSelect+0)+0,w
 27407  2D88  00EC               	movwf	(_PF)
 27408                           	line	13
 27409                           	
 27410  2D89                     l11939:	
 27411  2D89  0008               	return
 27412                           	opt stack 0
 27413                           GLOBAL	__end_of_PowerFaultPointSelect
 27414  2D8A                     	__end_of_PowerFaultPointSelect:
 27415 ;; =============== function _PowerFaultPointSelect ends ============
 27416                           
 27417                           	signat	_PowerFaultPointSelect,4216
 27418                           	global	_TempPointSelect
 27419                           psect	text5004,local,class=CODE,delta=2
 27420                           global __ptext5004
 27421  2D7E                     __ptext5004:
 27422                           
 27423 ;; *************** function _TempPointSelect *****************
 27424 ;; Defined at:
 27425 ;;		line 9 in file "G:\Program\PIC\Source_File\OverTemperature_B1.c"
 27426 ;; Parameters:    Size  Location     Type
 27427 ;;  temp            1    wreg     unsigned char 
 27428 ;; Auto vars:     Size  Location     Type
 27429 ;;  temp            1    0[COMMON] unsigned char 
 27430 ;; Return value:  Size  Location     Type
 27431 ;;		None               void
 27432 ;; Registers used:
 27433 ;;		wreg
 27434 ;; Tracked objects:
 27435 ;;		On entry : 0/0
 27436 ;;		On exit  : 0/0
 27437 ;;		Unchanged: 0/0
 27438 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 27439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 27440 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 27441 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 27442 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 27443 ;;Total ram usage:        1 bytes
 27444 ;; Hardware stack levels used:    1
 27445 ;; Hardware stack levels required when called:    4
 27446 ;; This function calls:
 27447 ;;		Nothing
 27448 ;; This function is called by:
 27449 ;;		_setTemp_Enable
 27450 ;;		_getTemp_Safe
 27451 ;;		_getTemp_ERROR
 27452 ;;		_getTemp_AD
 27453 ;;		_setTemp_Initialization
 27454 ;;		_setTemp_Main
 27455 ;;		_setOverTemp_ERROR
 27456 ;; This function uses a non-reentrant model
 27457 ;;
 27458                           psect	text5004
 27459                           	file	"G:\Program\PIC\Source_File\OverTemperature_B1.c"
 27460                           	line	9
 27461                           	global	__size_of_TempPointSelect
 27462  0006                     	__size_of_TempPointSelect	equ	__end_of_TempPointSelect-_TempPointSelect
 27463                           	
 27464  2D7E                     _TempPointSelect:	
 27465                           	opt	stack 8
 27466                           ; Regs used in _TempPointSelect: [wreg]
 27467                           	line	11
 27468                           	
 27469  2D7E                     l18470:	
 27470                           ;OverTemperature_B1.c: 11: Temp=&Temp1;
 27471  2D7E  3030               	movlw	(_Temp1)&0ffh
 27472  2D7F  0020               	movlb 0	; select bank0
 27473  2D80  00A0               	movwf	(??_TempPointSelect+0)+0
 27474  2D81  0820               	movf	(??_TempPointSelect+0)+0,w
 27475  2D82  00EE               	movwf	(_Temp)
 27476                           	line	13
 27477                           	
 27478  2D83                     l10768:	
 27479  2D83  0008               	return
 27480                           	opt stack 0
 27481                           GLOBAL	__end_of_TempPointSelect
 27482  2D84                     	__end_of_TempPointSelect:
 27483 ;; =============== function _TempPointSelect ends ============
 27484                           
 27485                           	signat	_TempPointSelect,4216
 27486                           	global	_setLoad_AH_AL_Restore
 27487                           psect	text5005,local,class=CODE,delta=2
 27488                           global __ptext5005
 27489  241C                     __ptext5005:
 27490                           
 27491 ;; *************** function _setLoad_AH_AL_Restore *****************
 27492 ;; Defined at:
 27493 ;;		line 376 in file "G:\Program\PIC\Source_File\OverLoad_B1.c"
 27494 ;; Parameters:    Size  Location     Type
 27495 ;;  load            1    wreg     unsigned char 
 27496 ;; Auto vars:     Size  Location     Type
 27497 ;;  load            1    0[COMMON] unsigned char 
 27498 ;;  i               1    1[BANK0 ] unsigned char 
 27499 ;; Return value:  Size  Location     Type
 27500 ;;		None               void
 27501 ;; Registers used:
 27502 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 27503 ;; Tracked objects:
 27504 ;;		On entry : 0/0
 27505 ;;		On exit  : 0/0
 27506 ;;		Unchanged: 0/0
 27507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 27508 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 27509 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 27510 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 27511 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 27512 ;;Total ram usage:        2 bytes
 27513 ;; Hardware stack levels used:    1
 27514 ;; Hardware stack levels required when called:    4
 27515 ;; This function calls:
 27516 ;;		Nothing
 27517 ;; This function is called by:
 27518 ;;		_setLoad_Initialization
 27519 ;;		_setLoad_Main
 27520 ;; This function uses a non-reentrant model
 27521 ;;
 27522                           psect	text5005
 27523                           	file	"G:\Program\PIC\Source_File\OverLoad_B1.c"
 27524                           	line	376
 27525                           	global	__size_of_setLoad_AH_AL_Restore
 27526  0030                     	__size_of_setLoad_AH_AL_Restore	equ	__end_of_setLoad_AH_AL_Restore-_setLoad_AH_AL_Resto
                                 re
 27527                           	
 27528  241C                     _setLoad_AH_AL_Restore:	
 27529                           	opt	stack 9
 27530                           ; Regs used in _setLoad_AH_AL_Restore: [wreg+fsr1l-status,0]
 27531                           	line	379
 27532                           	
 27533  241C                     l18446:	
 27534                           ;OverLoad_B1.c: 378: char i;
 27535                           ;OverLoad_B1.c: 379: for(i=0 ; i<5 ;i++)
 27536  241C  0020               	movlb 0	; select bank0
 27537  241D  01A1               	clrf	(setLoad_AH_AL_Restore@i)
 27538                           	
 27539  241E                     l18448:	
 27540  241E  3005               	movlw	(05h)
 27541  241F  0221               	subwf	(setLoad_AH_AL_Restore@i),w
 27542  2420  1C03               	skipc
 27543  2421  2C23               	goto	u5811
 27544  2422  2C24               	goto	u5810
 27545  2423                     u5811:
 27546  2423  2C26               	goto	l18452
 27547  2424                     u5810:
 27548  2424  2C4B               	goto	l9645
 27549                           	
 27550  2425                     l18450:	
 27551  2425  2C4B               	goto	l9645
 27552                           	line	380
 27553                           	
 27554  2426                     l9643:	
 27555                           	line	381
 27556                           	
 27557  2426                     l18452:	
 27558                           ;OverLoad_B1.c: 380: {
 27559                           ;OverLoad_B1.c: 381: Load->AH[i]=0;
 27560  2426  0821               	movf	(setLoad_AH_AL_Restore@i),w
 27561  2427  0709               	addwf	wreg,w
 27562  2428  3E08               	addlw	08h
 27563  2429  076B               	addwf	(_Load),w
 27564  242A  00A0               	movwf	(??_setLoad_AH_AL_Restore+0)+0
 27565  242B  0820               	movf	0+(??_setLoad_AH_AL_Restore+0)+0,w
 27566  242C  0086               	movwf	fsr1l
 27567  242D  3002               	movlw 2	; select bank4/5
 27568  242E  0087               	movwf fsr1h	
 27569                           	
 27570  242F  3000               	movlw	low(0)
 27571  2430  3FC0               	movwi	[0]fsr1
 27572  2431  3000               	movlw	high(0)
 27573  2432  3FC1               	movwi	[1]fsr1
 27574                           	line	382
 27575                           ;OverLoad_B1.c: 382: Load->AL[i]=0xffff;
 27576  2433  0821               	movf	(setLoad_AH_AL_Restore@i),w
 27577  2434  0709               	addwf	wreg,w
 27578  2435  3E1A               	addlw	01Ah
 27579  2436  076B               	addwf	(_Load),w
 27580  2437  00A0               	movwf	(??_setLoad_AH_AL_Restore+0)+0
 27581  2438  0820               	movf	0+(??_setLoad_AH_AL_Restore+0)+0,w
 27582  2439  0086               	movwf	fsr1l
 27583  243A  3002               	movlw 2	; select bank4/5
 27584  243B  0087               	movwf fsr1h	
 27585                           	
 27586  243C  30FF               	movlw	low(0FFFFh)
 27587  243D  3FC0               	movwi	[0]fsr1
 27588  243E  30FF               	movlw	high(0FFFFh)
 27589  243F  3FC1               	movwi	[1]fsr1
 27590                           	line	379
 27591                           	
 27592  2440                     l18454:	
 27593  2440  3001               	movlw	(01h)
 27594  2441  00A0               	movwf	(??_setLoad_AH_AL_Restore+0)+0
 27595  2442  0820               	movf	(??_setLoad_AH_AL_Restore+0)+0,w
 27596  2443  07A1               	addwf	(setLoad_AH_AL_Restore@i),f
 27597                           	
 27598  2444                     l18456:	
 27599  2444  3005               	movlw	(05h)
 27600  2445  0221               	subwf	(setLoad_AH_AL_Restore@i),w
 27601  2446  1C03               	skipc
 27602  2447  2C49               	goto	u5821
 27603  2448  2C4A               	goto	u5820
 27604  2449                     u5821:
 27605  2449  2C26               	goto	l18452
 27606  244A                     u5820:
 27607  244A  2C4B               	goto	l9645
 27608                           	
 27609  244B                     l9644:	
 27610                           	line	384
 27611                           	
 27612  244B                     l9645:	
 27613  244B  0008               	return
 27614                           	opt stack 0
 27615                           GLOBAL	__end_of_setLoad_AH_AL_Restore
 27616  244C                     	__end_of_setLoad_AH_AL_Restore:
 27617 ;; =============== function _setLoad_AH_AL_Restore ends ============
 27618                           
 27619                           	signat	_setLoad_AH_AL_Restore,4216
 27620                           	global	_LoadPointSelect
 27621                           psect	text5006,local,class=CODE,delta=2
 27622                           global __ptext5006
 27623  2E92                     __ptext5006:
 27624                           
 27625 ;; *************** function _LoadPointSelect *****************
 27626 ;; Defined at:
 27627 ;;		line 8 in file "G:\Program\PIC\Source_File\OverLoad_B1.c"
 27628 ;; Parameters:    Size  Location     Type
 27629 ;;  load            1    wreg     unsigned char 
 27630 ;; Auto vars:     Size  Location     Type
 27631 ;;  load            1    1[BANK0 ] unsigned char 
 27632 ;; Return value:  Size  Location     Type
 27633 ;;		None               void
 27634 ;; Registers used:
 27635 ;;		wreg
 27636 ;; Tracked objects:
 27637 ;;		On entry : 0/0
 27638 ;;		On exit  : 0/0
 27639 ;;		Unchanged: 0/0
 27640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 27641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 27642 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 27643 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 27644 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 27645 ;;Total ram usage:        2 bytes
 27646 ;; Hardware stack levels used:    1
 27647 ;; Hardware stack levels required when called:    4
 27648 ;; This function calls:
 27649 ;;		Nothing
 27650 ;; This function is called by:
 27651 ;;		_setLoad_Initialization
 27652 ;;		_getLoad_AD
 27653 ;;		_setLoad_Main
 27654 ;;		_setLoad_ERROR
 27655 ;;		_setLoad_LightsStatus
 27656 ;;		_setLoad_Enable
 27657 ;;		_setLoad_GO
 27658 ;;		_setLoad_StatusOn
 27659 ;;		_setLoad_StatusOff
 27660 ;;		_getLoad_Safe
 27661 ;;		_getLoad_ERROR
 27662 ;;		_setLoad_LightsCount
 27663 ;; This function uses a non-reentrant model
 27664 ;;
 27665                           psect	text5006
 27666                           	file	"G:\Program\PIC\Source_File\OverLoad_B1.c"
 27667                           	line	8
 27668                           	global	__size_of_LoadPointSelect
 27669  000E                     	__size_of_LoadPointSelect	equ	__end_of_LoadPointSelect-_LoadPointSelect
 27670                           	
 27671  2E92                     _LoadPointSelect:	
 27672                           	opt	stack 5
 27673                           ; Regs used in _LoadPointSelect: [wreg]
 27674                           ;LoadPointSelect@load stored from wreg
 27675                           	line	10
 27676  2E92  0020               	movlb 0	; select bank0
 27677  2E93  00A1               	movwf	(LoadPointSelect@load)
 27678                           	
 27679  2E94                     l18442:	
 27680                           ;OverLoad_B1.c: 10: if(load == 1)
 27681  2E94  0821               	movf	(LoadPointSelect@load),w
 27682  2E95  3A01               	xorlw	01h&0ffh
 27683  2E96  1D03               	skipz
 27684  2E97  2E99               	goto	u5801
 27685  2E98  2E9A               	goto	u5800
 27686  2E99                     u5801:
 27687  2E99  2E9F               	goto	l9550
 27688  2E9A                     u5800:
 27689                           	line	12
 27690                           	
 27691  2E9A                     l18444:	
 27692                           ;OverLoad_B1.c: 11: {
 27693                           ;OverLoad_B1.c: 12: Load=&Load1;
 27694  2E9A  3020               	movlw	(_Load1)&0ffh
 27695  2E9B  00A0               	movwf	(??_LoadPointSelect+0)+0
 27696  2E9C  0820               	movf	(??_LoadPointSelect+0)+0,w
 27697  2E9D  00EB               	movwf	(_Load)
 27698  2E9E  2E9F               	goto	l9550
 27699                           	line	13
 27700                           	
 27701  2E9F                     l9549:	
 27702                           	line	15
 27703                           	
 27704  2E9F                     l9550:	
 27705  2E9F  0008               	return
 27706                           	opt stack 0
 27707                           GLOBAL	__end_of_LoadPointSelect
 27708  2EA0                     	__end_of_LoadPointSelect:
 27709 ;; =============== function _LoadPointSelect ends ============
 27710                           
 27711                           	signat	_LoadPointSelect,4216
 27712                           	global	_Flash_Memory_Read
 27713                           psect	text5007,local,class=CODE,delta=2
 27714                           global __ptext5007
 27715  2193                     __ptext5007:
 27716                           
 27717 ;; *************** function _Flash_Memory_Read *****************
 27718 ;; Defined at:
 27719 ;;		line 421 in file "G:\Program\PIC\Source_File\MCU_16f1518_B1.c"
 27720 ;; Parameters:    Size  Location     Type
 27721 ;;  address         1    wreg     unsigned char 
 27722 ;; Auto vars:     Size  Location     Type
 27723 ;;  address         1    2[BANK0 ] unsigned char 
 27724 ;;  ret             1    3[BANK0 ] unsigned char 
 27725 ;;  i               1    1[BANK0 ] unsigned char 
 27726 ;; Return value:  Size  Location     Type
 27727 ;;                  1    wreg      unsigned char 
 27728 ;; Registers used:
 27729 ;;		wreg
 27730 ;; Tracked objects:
 27731 ;;		On entry : 0/0
 27732 ;;		On exit  : 0/0
 27733 ;;		Unchanged: 0/0
 27734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 27735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 27736 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 27737 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 27738 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 27739 ;;Total ram usage:        4 bytes
 27740 ;; Hardware stack levels used:    1
 27741 ;; Hardware stack levels required when called:    4
 27742 ;; This function calls:
 27743 ;;		Nothing
 27744 ;; This function is called by:
 27745 ;;		_Flash_Memory_Initialization
 27746 ;;		_Flash_Memory_Modify
 27747 ;; This function uses a non-reentrant model
 27748 ;;
 27749                           psect	text5007
 27750                           	file	"G:\Program\PIC\Source_File\MCU_16f1518_B1.c"
 27751                           	line	421
 27752                           	global	__size_of_Flash_Memory_Read
 27753  001A                     	__size_of_Flash_Memory_Read	equ	__end_of_Flash_Memory_Read-_Flash_Memory_Read
 27754                           	
 27755  2193                     _Flash_Memory_Read:	
 27756                           	opt	stack 9
 27757                           ; Regs used in _Flash_Memory_Read: [wreg]
 27758                           ;Flash_Memory_Read@address stored from wreg
 27759  2193  0020               	movlb 0	; select bank0
 27760  2194  00A2               	movwf	(Flash_Memory_Read@address)
 27761                           	line	422
 27762                           	
 27763  2195                     l18432:	
 27764                           ;MCU_16f1518_B1.c: 422: char i,ret=0;
 27765  2195  01A3               	clrf	(Flash_Memory_Read@ret)
 27766                           	line	423
 27767                           	
 27768  2196                     l18434:	
 27769                           ;MCU_16f1518_B1.c: 423: PMADRH=0x30;
 27770  2196  3030               	movlw	(030h)
 27771  2197  0023               	movlb 3	; select bank3
 27772  2198  0092               	movwf	(402)^0180h	;volatile
 27773                           	line	424
 27774                           ;MCU_16f1518_B1.c: 424: PMADRL=address;
 27775  2199  0020               	movlb 0	; select bank0
 27776  219A  0822               	movf	(Flash_Memory_Read@address),w
 27777  219B  0023               	movlb 3	; select bank3
 27778  219C  0091               	movwf	(401)^0180h	;volatile
 27779                           	line	425
 27780                           	
 27781  219D                     l18436:	
 27782                           ;MCU_16f1518_B1.c: 425: CFGS=0;
 27783  219D  1315               	bcf	(3246/8)^0180h,(3246)&7
 27784                           	line	426
 27785                           	
 27786  219E                     l18438:	
 27787                           ;MCU_16f1518_B1.c: 426: RD=1;
 27788  219E  1415               	bsf	(3240/8)^0180h,(3240)&7
 27789                           	line	427
 27790                           ;MCU_16f1518_B1.c: 427: i=PMDATH;
 27791  219F  0814               	movf	(404)^0180h,w	;volatile
 27792  21A0  0020               	movlb 0	; select bank0
 27793  21A1  00A0               	movwf	(??_Flash_Memory_Read+0)+0
 27794  21A2  0820               	movf	(??_Flash_Memory_Read+0)+0,w
 27795  21A3  00A1               	movwf	(Flash_Memory_Read@i)
 27796                           	line	428
 27797                           ;MCU_16f1518_B1.c: 428: ret=PMDATL;
 27798  21A4  0023               	movlb 3	; select bank3
 27799  21A5  0813               	movf	(403)^0180h,w	;volatile
 27800  21A6  0020               	movlb 0	; select bank0
 27801  21A7  00A0               	movwf	(??_Flash_Memory_Read+0)+0
 27802  21A8  0820               	movf	(??_Flash_Memory_Read+0)+0,w
 27803  21A9  00A3               	movwf	(Flash_Memory_Read@ret)
 27804                           	line	429
 27805                           ;MCU_16f1518_B1.c: 429: return ret;
 27806  21AA  0823               	movf	(Flash_Memory_Read@ret),w
 27807  21AB  29AC               	goto	l8410
 27808                           	
 27809  21AC                     l18440:	
 27810                           	line	430
 27811                           	
 27812  21AC                     l8410:	
 27813  21AC  0008               	return
 27814                           	opt stack 0
 27815                           GLOBAL	__end_of_Flash_Memory_Read
 27816  21AD                     	__end_of_Flash_Memory_Read:
 27817 ;; =============== function _Flash_Memory_Read ends ============
 27818                           
 27819                           	signat	_Flash_Memory_Read,4217
 27820                           	global	_getAD
 27821                           psect	text5008,local,class=CODE,delta=2
 27822                           global __ptext5008
 27823  21EA                     __ptext5008:
 27824                           
 27825 ;; *************** function _getAD *****************
 27826 ;; Defined at:
 27827 ;;		line 238 in file "G:\Program\PIC\Source_File\MCU_16f1518_B1.c"
 27828 ;; Parameters:    Size  Location     Type
 27829 ;;  adcon0          1    wreg     unsigned char 
 27830 ;;  adcon1          1    0[BANK0 ] unsigned char 
 27831 ;; Auto vars:     Size  Location     Type
 27832 ;;  adcon0          1    6[BANK0 ] unsigned char 
 27833 ;; Return value:  Size  Location     Type
 27834 ;;                  2    0[BANK0 ] int 
 27835 ;; Registers used:
 27836 ;;		wreg, status,2, status,0, btemp+1
 27837 ;; Tracked objects:
 27838 ;;		On entry : 0/0
 27839 ;;		On exit  : 0/0
 27840 ;;		Unchanged: 0/0
 27841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 27842 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 27843 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 27844 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 27845 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
       0       0
 27846 ;;Total ram usage:        7 bytes
 27847 ;; Hardware stack levels used:    1
 27848 ;; Hardware stack levels required when called:    4
 27849 ;; This function calls:
 27850 ;;		Nothing
 27851 ;; This function is called by:
 27852 ;;		_getLoad_AD
 27853 ;;		_getTemp_AD
 27854 ;;		_getPowerFault_AD
 27855 ;; This function uses a non-reentrant model
 27856 ;;
 27857                           psect	text5008
 27858                           	file	"G:\Program\PIC\Source_File\MCU_16f1518_B1.c"
 27859                           	line	238
 27860                           	global	__size_of_getAD
 27861  0024                     	__size_of_getAD	equ	__end_of_getAD-_getAD
 27862                           	
 27863  21EA                     _getAD:	
 27864                           	opt	stack 10
 27865                           ; Regs used in _getAD: [wreg+status,2+status,0+btemp+1]
 27866                           ;getAD@adcon0 stored from wreg
 27867  21EA  0020               	movlb 0	; select bank0
 27868  21EB  00A6               	movwf	(getAD@adcon0)
 27869                           	line	239
 27870                           	
 27871  21EC                     l18424:	
 27872                           ;MCU_16f1518_B1.c: 239: ADCON0=adcon0;
 27873  21EC  0826               	movf	(getAD@adcon0),w
 27874  21ED  0021               	movlb 1	; select bank1
 27875  21EE  009D               	movwf	(157)^080h	;volatile
 27876                           	line	240
 27877                           ;MCU_16f1518_B1.c: 240: ADCON1=adcon1;
 27878  21EF  0020               	movlb 0	; select bank0
 27879  21F0  0820               	movf	(getAD@adcon1),w
 27880  21F1  0021               	movlb 1	; select bank1
 27881  21F2  009E               	movwf	(158)^080h	;volatile
 27882                           	line	241
 27883                           	
 27884  21F3                     l18426:	
 27885                           ;MCU_16f1518_B1.c: 241: GO_nDONE=1;
 27886  21F3  149D               	bsf	(1257/8)^080h,(1257)&7
 27887                           	line	242
 27888                           ;MCU_16f1518_B1.c: 242: while(GO_nDONE);
 27889  21F4  29F5               	goto	l8382
 27890                           	
 27891  21F5                     l8383:	
 27892                           	
 27893  21F5                     l8382:	
 27894  21F5  189D               	btfsc	(1257/8)^080h,(1257)&7
 27895  21F6  29F8               	goto	u5791
 27896  21F7  29F9               	goto	u5790
 27897  21F8                     u5791:
 27898  21F8  29F5               	goto	l8382
 27899  21F9                     u5790:
 27900  21F9  29FA               	goto	l18428
 27901                           	
 27902  21FA                     l8384:	
 27903                           	line	243
 27904                           	
 27905  21FA                     l18428:	
 27906                           ;MCU_16f1518_B1.c: 243: return ((ADRESH*256)+ADRESL);
 27907  21FA  081B               	movf	(155)^080h,w	;volatile
 27908  21FB  0020               	movlb 0	; select bank0
 27909  21FC  00A2               	movwf	(??_getAD+0)+0
 27910  21FD  01A3               	clrf	(??_getAD+0)+0+1
 27911  21FE  0021               	movlb 1	; select bank1
 27912  21FF  081C               	movf	(156)^080h,w	;volatile
 27913  2200  0020               	movlb 0	; select bank0
 27914  2201  00A4               	movwf	(??_getAD+2)+0
 27915  2202  01A5               	clrf	(??_getAD+2)+0+1
 27916  2203  0824               	movf	(??_getAD+2)+0,w
 27917  2204  00A5               	movwf	(??_getAD+2)+1
 27918  2205  01A4               	clrf	(??_getAD+2)+0
 27919  2206  0822               	movf	0+(??_getAD+0)+0,w
 27920  2207  0724               	addwf	0+(??_getAD+2)+0,w
 27921  2208  00A0               	movwf	(?_getAD)
 27922  2209  0823               	movf	1+(??_getAD+0)+0,w
 27923  220A  3D25               	addwfc	1+(??_getAD+2)+0,w
 27924  220B  00A1               	movwf	1+(?_getAD)
 27925  220C  2A0D               	goto	l8385
 27926                           	
 27927  220D                     l18430:	
 27928                           	line	244
 27929                           	
 27930  220D                     l8385:	
 27931  220D  0008               	return
 27932                           	opt stack 0
 27933                           GLOBAL	__end_of_getAD
 27934  220E                     	__end_of_getAD:
 27935 ;; =============== function _getAD ends ============
 27936                           
 27937                           	signat	_getAD,8314
 27938                           	global	_setINT_GO
 27939                           psect	text5009,local,class=CODE,delta=2
 27940                           global __ptext5009
 27941  2DCA                     __ptext5009:
 27942                           
 27943 ;; *************** function _setINT_GO *****************
 27944 ;; Defined at:
 27945 ;;		line 191 in file "G:\Program\PIC\Source_File\MCU_16f1518_B1.c"
 27946 ;; Parameters:    Size  Location     Type
 27947 ;;  command         1    wreg     unsigned char 
 27948 ;; Auto vars:     Size  Location     Type
 27949 ;;  command         1    0[BANK0 ] unsigned char 
 27950 ;; Return value:  Size  Location     Type
 27951 ;;		None               void
 27952 ;; Registers used:
 27953 ;;		wreg
 27954 ;; Tracked objects:
 27955 ;;		On entry : 0/0
 27956 ;;		On exit  : 0/0
 27957 ;;		Unchanged: 0/0
 27958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 27959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 27960 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 27961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 27962 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 27963 ;;Total ram usage:        1 bytes
 27964 ;; Hardware stack levels used:    1
 27965 ;; Hardware stack levels required when called:    4
 27966 ;; This function calls:
 27967 ;;		Nothing
 27968 ;; This function is called by:
 27969 ;;		_setRF_Main
 27970 ;;		_RF_RxDisable
 27971 ;; This function uses a non-reentrant model
 27972 ;;
 27973                           psect	text5009
 27974                           	file	"G:\Program\PIC\Source_File\MCU_16f1518_B1.c"
 27975                           	line	191
 27976                           	global	__size_of_setINT_GO
 27977  000A                     	__size_of_setINT_GO	equ	__end_of_setINT_GO-_setINT_GO
 27978                           	
 27979  2DCA                     _setINT_GO:	
 27980                           	opt	stack 9
 27981                           ; Regs used in _setINT_GO: [wreg]
 27982                           ;setINT_GO@command stored from wreg
 27983  2DCA  0020               	movlb 0	; select bank0
 27984  2DCB  00A0               	movwf	(setINT_GO@command)
 27985                           	line	192
 27986                           	
 27987  2DCC                     l20762:	
 27988                           ;MCU_16f1518_B1.c: 192: INTF=0;
 27989  2DCC  108B               	bcf	(89/8),(89)&7
 27990                           	line	193
 27991                           	
 27992  2DCD                     l20764:	
 27993                           ;MCU_16f1518_B1.c: 193: INTE=command;
 27994  2DCD  1820               	btfsc	(setINT_GO@command),0
 27995  2DCE  2DD0               	goto	u9311
 27996  2DCF  2DD2               	goto	u9310
 27997                           	
 27998  2DD0                     u9311:
 27999  2DD0  160B               	bsf	(92/8),(92)&7
 28000  2DD1  2DD3               	goto	u9324
 28001  2DD2                     u9310:
 28002  2DD2  120B               	bcf	(92/8),(92)&7
 28003  2DD3                     u9324:
 28004                           	line	194
 28005                           	
 28006  2DD3                     l8368:	
 28007  2DD3  0008               	return
 28008                           	opt stack 0
 28009                           GLOBAL	__end_of_setINT_GO
 28010  2DD4                     	__end_of_setINT_GO:
 28011 ;; =============== function _setINT_GO ends ============
 28012                           
 28013                           	signat	_setINT_GO,4216
 28014                           	global	_IOC_Set
 28015                           psect	text5010,local,class=CODE,delta=2
 28016                           global __ptext5010
 28017  2DF3                     __ptext5010:
 28018                           
 28019 ;; *************** function _IOC_Set *****************
 28020 ;; Defined at:
 28021 ;;		line 202 in file "G:\Program\PIC\Source_File\MCU_16f1518_B1.c"
 28022 ;; Parameters:    Size  Location     Type
 28023 ;;		None
 28024 ;; Auto vars:     Size  Location     Type
 28025 ;;		None
 28026 ;; Return value:  Size  Location     Type
 28027 ;;		None               void
 28028 ;; Registers used:
 28029 ;;		wreg, status,2
 28030 ;; Tracked objects:
 28031 ;;		On entry : 0/0
 28032 ;;		On exit  : 0/0
 28033 ;;		Unchanged: 0/0
 28034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 28035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 28036 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 28037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 28038 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 28039 ;;Total ram usage:        0 bytes
 28040 ;; Hardware stack levels used:    1
 28041 ;; Hardware stack levels required when called:    4
 28042 ;; This function calls:
 28043 ;;		Nothing
 28044 ;; This function is called by:
 28045 ;;		_Mcu_Initialization
 28046 ;; This function uses a non-reentrant model
 28047 ;;
 28048                           psect	text5010
 28049                           	file	"G:\Program\PIC\Source_File\MCU_16f1518_B1.c"
 28050                           	line	202
 28051                           	global	__size_of_IOC_Set
 28052  000C                     	__size_of_IOC_Set	equ	__end_of_IOC_Set-_IOC_Set
 28053                           	
 28054  2DF3                     _IOC_Set:	
 28055                           	opt	stack 10
 28056                           ; Regs used in _IOC_Set: [wreg+status,2]
 28057                           	line	203
 28058                           	
 28059  2DF3                     l20750:	
 28060                           ;MCU_16f1518_B1.c: 203: WPUB2=0;
 28061  2DF3  0024               	movlb 4	; select bank4
 28062  2DF4  110D               	bcf	(4202/8)^0200h,(4202)&7
 28063                           	line	204
 28064                           	
 28065  2DF5                     l20752:	
 28066                           ;MCU_16f1518_B1.c: 204: IOCBP=0b00000100;
 28067  2DF5  3004               	movlw	(04h)
 28068  2DF6  0027               	movlb 7	; select bank7
 28069  2DF7  0094               	movwf	(916)^0380h	;volatile
 28070                           	line	205
 28071                           ;MCU_16f1518_B1.c: 205: IOCBN=0b00000100;
 28072  2DF8  3004               	movlw	(04h)
 28073  2DF9  0095               	movwf	(917)^0380h	;volatile
 28074                           	line	206
 28075                           	
 28076  2DFA                     l20754:	
 28077                           ;MCU_16f1518_B1.c: 206: IOCBF=0b00000000;
 28078  2DFA  0196               	clrf	(918)^0380h	;volatile
 28079                           	line	207
 28080                           	
 28081  2DFB                     l20756:	
 28082                           ;MCU_16f1518_B1.c: 207: IOCIE=1;
 28083  2DFB  158B               	bsf	(91/8),(91)&7
 28084                           	line	208
 28085                           	
 28086  2DFC                     l20758:	
 28087                           ;MCU_16f1518_B1.c: 208: IOCIF=0;
 28088  2DFC  100B               	bcf	(88/8),(88)&7
 28089                           	line	209
 28090                           	
 28091  2DFD                     l20760:	
 28092                           ;MCU_16f1518_B1.c: 209: GIE=1;
 28093  2DFD  178B               	bsf	(95/8),(95)&7
 28094                           	line	210
 28095                           	
 28096  2DFE                     l8371:	
 28097  2DFE  0008               	return
 28098                           	opt stack 0
 28099                           GLOBAL	__end_of_IOC_Set
 28100  2DFF                     	__end_of_IOC_Set:
 28101 ;; =============== function _IOC_Set ends ============
 28102                           
 28103                           	signat	_IOC_Set,88
 28104                           	global	_INT_Set
 28105                           psect	text5011,local,class=CODE,delta=2
 28106                           global __ptext5011
 28107  2D29                     __ptext5011:
 28108                           
 28109 ;; *************** function _INT_Set *****************
 28110 ;; Defined at:
 28111 ;;		line 173 in file "G:\Program\PIC\Source_File\MCU_16f1518_B1.c"
 28112 ;; Parameters:    Size  Location     Type
 28113 ;;		None
 28114 ;; Auto vars:     Size  Location     Type
 28115 ;;		None
 28116 ;; Return value:  Size  Location     Type
 28117 ;;		None               void
 28118 ;; Registers used:
 28119 ;;		None
 28120 ;; Tracked objects:
 28121 ;;		On entry : 0/0
 28122 ;;		On exit  : 0/0
 28123 ;;		Unchanged: 0/0
 28124 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 28125 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 28126 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 28127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 28128 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 28129 ;;Total ram usage:        0 bytes
 28130 ;; Hardware stack levels used:    1
 28131 ;; Hardware stack levels required when called:    4
 28132 ;; This function calls:
 28133 ;;		Nothing
 28134 ;; This function is called by:
 28135 ;;		_Mcu_Initialization
 28136 ;; This function uses a non-reentrant model
 28137 ;;
 28138                           psect	text5011
 28139                           	file	"G:\Program\PIC\Source_File\MCU_16f1518_B1.c"
 28140                           	line	173
 28141                           	global	__size_of_INT_Set
 28142  0005                     	__size_of_INT_Set	equ	__end_of_INT_Set-_INT_Set
 28143                           	
 28144  2D29                     _INT_Set:	
 28145                           	opt	stack 10
 28146                           ; Regs used in _INT_Set: []
 28147                           	line	174
 28148                           	
 28149  2D29                     l20748:	
 28150                           ;MCU_16f1518_B1.c: 174: WPUB0=0;
 28151  2D29  0024               	movlb 4	; select bank4
 28152  2D2A  100D               	bcf	(4200/8)^0200h,(4200)&7
 28153                           	line	176
 28154                           ;MCU_16f1518_B1.c: 176: PEIE=1;
 28155  2D2B  170B               	bsf	(94/8),(94)&7
 28156                           	line	177
 28157                           ;MCU_16f1518_B1.c: 177: GIE=1;
 28158  2D2C  178B               	bsf	(95/8),(95)&7
 28159                           	line	178
 28160                           	
 28161  2D2D                     l8361:	
 28162  2D2D  0008               	return
 28163                           	opt stack 0
 28164                           GLOBAL	__end_of_INT_Set
 28165  2D2E                     	__end_of_INT_Set:
 28166 ;; =============== function _INT_Set ends ============
 28167                           
 28168                           	signat	_INT_Set,88
 28169                           	global	_ADC_Set
 28170                           psect	text5012,local,class=CODE,delta=2
 28171                           global __ptext5012
 28172  2D90                     __ptext5012:
 28173                           
 28174 ;; *************** function _ADC_Set *****************
 28175 ;; Defined at:
 28176 ;;		line 232 in file "G:\Program\PIC\Source_File\MCU_16f1518_B1.c"
 28177 ;; Parameters:    Size  Location     Type
 28178 ;;		None
 28179 ;; Auto vars:     Size  Location     Type
 28180 ;;		None
 28181 ;; Return value:  Size  Location     Type
 28182 ;;		None               void
 28183 ;; Registers used:
 28184 ;;		wreg
 28185 ;; Tracked objects:
 28186 ;;		On entry : 0/0
 28187 ;;		On exit  : 0/0
 28188 ;;		Unchanged: 0/0
 28189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 28190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 28191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 28192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 28193 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 28194 ;;Total ram usage:        0 bytes
 28195 ;; Hardware stack levels used:    1
 28196 ;; Hardware stack levels required when called:    4
 28197 ;; This function calls:
 28198 ;;		Nothing
 28199 ;; This function is called by:
 28200 ;;		_Mcu_Initialization
 28201 ;; This function uses a non-reentrant model
 28202 ;;
 28203                           psect	text5012
 28204                           	file	"G:\Program\PIC\Source_File\MCU_16f1518_B1.c"
 28205                           	line	232
 28206                           	global	__size_of_ADC_Set
 28207  0007                     	__size_of_ADC_Set	equ	__end_of_ADC_Set-_ADC_Set
 28208                           	
 28209  2D90                     _ADC_Set:	
 28210                           	opt	stack 10
 28211                           ; Regs used in _ADC_Set: [wreg]
 28212                           	line	233
 28213                           	
 28214  2D90                     l20746:	
 28215                           ;MCU_16f1518_B1.c: 233: ADCON1=0xf2;
 28216  2D90  30F2               	movlw	(0F2h)
 28217  2D91  0021               	movlb 1	; select bank1
 28218  2D92  009E               	movwf	(158)^080h	;volatile
 28219                           	line	234
 28220                           ;MCU_16f1518_B1.c: 234: FVRCON=0xc0;
 28221  2D93  30C0               	movlw	(0C0h)
 28222  2D94  0022               	movlb 2	; select bank2
 28223  2D95  0097               	movwf	(279)^0100h	;volatile
 28224                           	line	235
 28225                           	
 28226  2D96                     l8379:	
 28227  2D96  0008               	return
 28228                           	opt stack 0
 28229                           GLOBAL	__end_of_ADC_Set
 28230  2D97                     	__end_of_ADC_Set:
 28231 ;; =============== function _ADC_Set ends ============
 28232                           
 28233                           	signat	_ADC_Set,88
 28234                           	global	_TMR0_Set
 28235                           psect	text5013,local,class=CODE,delta=2
 28236                           global __ptext5013
 28237  2122                     __ptext5013:
 28238                           
 28239 ;; *************** function _TMR0_Set *****************
 28240 ;; Defined at:
 28241 ;;		line 74 in file "G:\Program\PIC\Source_File\MCU_16f1518_B1.c"
 28242 ;; Parameters:    Size  Location     Type
 28243 ;;		None
 28244 ;; Auto vars:     Size  Location     Type
 28245 ;;		None
 28246 ;; Return value:  Size  Location     Type
 28247 ;;		None               void
 28248 ;; Registers used:
 28249 ;;		wreg, fsr1l, fsr1h, status,2
 28250 ;; Tracked objects:
 28251 ;;		On entry : 0/0
 28252 ;;		On exit  : 0/0
 28253 ;;		Unchanged: 0/0
 28254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 28255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 28256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 28257 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 28258 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 28259 ;;Total ram usage:        1 bytes
 28260 ;; Hardware stack levels used:    1
 28261 ;; Hardware stack levels required when called:    4
 28262 ;; This function calls:
 28263 ;;		Nothing
 28264 ;; This function is called by:
 28265 ;;		_Mcu_Initialization
 28266 ;; This function uses a non-reentrant model
 28267 ;;
 28268                           psect	text5013
 28269                           	file	"G:\Program\PIC\Source_File\MCU_16f1518_B1.c"
 28270                           	line	74
 28271                           	global	__size_of_TMR0_Set
 28272  0015                     	__size_of_TMR0_Set	equ	__end_of_TMR0_Set-_TMR0_Set
 28273                           	
 28274  2122                     _TMR0_Set:	
 28275                           	opt	stack 10
 28276                           ; Regs used in _TMR0_Set: [wreg+fsr1l-status,2]
 28277                           	line	75
 28278                           	
 28279  2122                     l18264:	
 28280                           ;MCU_16f1518_B1.c: 75: Timer0=&VarTimer0;
 28281  2122  30CB               	movlw	(_VarTimer0)&0ffh
 28282  2123  0020               	movlb 0	; select bank0
 28283  2124  00A0               	movwf	(??_TMR0_Set+0)+0
 28284  2125  0820               	movf	(??_TMR0_Set+0)+0,w
 28285  2126  0021               	movlb 1	; select bank1
 28286  2127  00E8               	movwf	(_Timer0)^080h
 28287                           	line	76
 28288                           	
 28289  2128                     l18266:	
 28290                           ;MCU_16f1518_B1.c: 76: Timer0->DimmerCountValue=158;
 28291  2128  0868               	movf	(_Timer0)^080h,w
 28292  2129  3E05               	addlw	05h
 28293  212A  0086               	movwf	fsr1l
 28294  212B  0187               	clrf fsr1h	
 28295                           	
 28296  212C  309E               	movlw	low(09Eh)
 28297  212D  3FC0               	movwi	[0]fsr1
 28298  212E  3000               	movlw	high(09Eh)
 28299  212F  3FC1               	movwi	[1]fsr1
 28300                           	line	77
 28301                           	
 28302  2130                     l18268:	
 28303                           ;MCU_16f1518_B1.c: 77: OPTION_REG=0x00;
 28304  2130  0195               	clrf	(149)^080h	;volatile
 28305                           	line	78
 28306                           	
 28307  2131                     l18270:	
 28308                           ;MCU_16f1518_B1.c: 78: TMR0=(256-90);
 28309  2131  30A6               	movlw	(0A6h)
 28310  2132  0020               	movlb 0	; select bank0
 28311  2133  0095               	movwf	(21)	;volatile
 28312                           	line	79
 28313                           	
 28314  2134                     l18272:	
 28315                           ;MCU_16f1518_B1.c: 79: TMR0IE=1;
 28316  2134  168B               	bsf	(93/8),(93)&7
 28317                           	line	80
 28318                           	
 28319  2135                     l18274:	
 28320                           ;MCU_16f1518_B1.c: 80: GIE=1;
 28321  2135  178B               	bsf	(95/8),(95)&7
 28322                           	line	81
 28323                           	
 28324  2136                     l8323:	
 28325  2136  0008               	return
 28326                           	opt stack 0
 28327                           GLOBAL	__end_of_TMR0_Set
 28328  2137                     	__end_of_TMR0_Set:
 28329 ;; =============== function _TMR0_Set ends ============
 28330                           
 28331                           	signat	_TMR0_Set,88
 28332                           	global	_IO_Set
 28333                           psect	text5014,local,class=CODE,delta=2
 28334                           global __ptext5014
 28335  217A                     __ptext5014:
 28336                           
 28337 ;; *************** function _IO_Set *****************
 28338 ;; Defined at:
 28339 ;;		line 38 in file "G:\Program\PIC\Source_File\MCU_16f1518_B1.c"
 28340 ;; Parameters:    Size  Location     Type
 28341 ;;		None
 28342 ;; Auto vars:     Size  Location     Type
 28343 ;;		None
 28344 ;; Return value:  Size  Location     Type
 28345 ;;		None               void
 28346 ;; Registers used:
 28347 ;;		wreg, status,2
 28348 ;; Tracked objects:
 28349 ;;		On entry : 0/0
 28350 ;;		On exit  : 0/0
 28351 ;;		Unchanged: 0/0
 28352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 28353 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 28354 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 28355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 28356 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 28357 ;;Total ram usage:        0 bytes
 28358 ;; Hardware stack levels used:    1
 28359 ;; Hardware stack levels required when called:    4
 28360 ;; This function calls:
 28361 ;;		Nothing
 28362 ;; This function is called by:
 28363 ;;		_Mcu_Initialization
 28364 ;; This function uses a non-reentrant model
 28365 ;;
 28366                           psect	text5014
 28367                           	file	"G:\Program\PIC\Source_File\MCU_16f1518_B1.c"
 28368                           	line	38
 28369                           	global	__size_of_IO_Set
 28370  0019                     	__size_of_IO_Set	equ	__end_of_IO_Set-_IO_Set
 28371                           	
 28372  217A                     _IO_Set:	
 28373                           	opt	stack 10
 28374                           ; Regs used in _IO_Set: [wreg+status,2]
 28375                           	line	39
 28376                           	
 28377  217A                     l20728:	
 28378                           ;MCU_16f1518_B1.c: 39: TRISA=0b01110111;;
 28379  217A  3077               	movlw	(077h)
 28380  217B  0021               	movlb 1	; select bank1
 28381  217C  008C               	movwf	(140)^080h	;volatile
 28382                           	line	40
 28383                           ;MCU_16f1518_B1.c: 40: TRISB=0b00000111;;
 28384  217D  3007               	movlw	(07h)
 28385  217E  008D               	movwf	(141)^080h	;volatile
 28386                           	line	41
 28387                           ;MCU_16f1518_B1.c: 41: TRISC=0b00001100;;
 28388  217F  300C               	movlw	(0Ch)
 28389  2180  008E               	movwf	(142)^080h	;volatile
 28390                           	line	42
 28391                           	
 28392  2181                     l20730:	
 28393                           ;MCU_16f1518_B1.c: 42: LATA=0b00000000;;
 28394  2181  0022               	movlb 2	; select bank2
 28395  2182  018C               	clrf	(268)^0100h	;volatile
 28396                           	line	43
 28397                           	
 28398  2183                     l20732:	
 28399                           ;MCU_16f1518_B1.c: 43: LATB=0b00000010;;
 28400  2183  3002               	movlw	(02h)
 28401  2184  008D               	movwf	(269)^0100h	;volatile
 28402                           	line	44
 28403                           ;MCU_16f1518_B1.c: 44: LATC=0b00000000;;
 28404  2185  018E               	clrf	(270)^0100h	;volatile
 28405                           	line	45
 28406                           	
 28407  2186                     l20734:	
 28408                           ;MCU_16f1518_B1.c: 45: ANSELA=0b00100010;;
 28409  2186  3022               	movlw	(022h)
 28410  2187  0023               	movlb 3	; select bank3
 28411  2188  008C               	movwf	(396)^0180h	;volatile
 28412                           	line	46
 28413                           	
 28414  2189                     l20736:	
 28415                           ;MCU_16f1518_B1.c: 46: ANSELB=0b00000000;;
 28416  2189  018D               	clrf	(397)^0180h	;volatile
 28417                           	line	47
 28418                           	
 28419  218A                     l20738:	
 28420                           ;MCU_16f1518_B1.c: 47: ANSELC=0b00000000;;
 28421  218A  018E               	clrf	(398)^0180h	;volatile
 28422                           	line	48
 28423                           	
 28424  218B                     l20740:	
 28425                           ;MCU_16f1518_B1.c: 48: PORTA=0b01110111;;
 28426  218B  3077               	movlw	(077h)
 28427  218C  0020               	movlb 0	; select bank0
 28428  218D  008C               	movwf	(12)	;volatile
 28429                           	line	49
 28430                           	
 28431  218E                     l20742:	
 28432                           ;MCU_16f1518_B1.c: 49: PORTB=0b00000111;;
 28433  218E  3007               	movlw	(07h)
 28434  218F  008D               	movwf	(13)	;volatile
 28435                           	line	50
 28436                           	
 28437  2190                     l20744:	
 28438                           ;MCU_16f1518_B1.c: 50: PORTC=0b00001100;;
 28439  2190  300C               	movlw	(0Ch)
 28440  2191  008E               	movwf	(14)	;volatile
 28441                           	line	51
 28442                           	
 28443  2192                     l8317:	
 28444  2192  0008               	return
 28445                           	opt stack 0
 28446                           GLOBAL	__end_of_IO_Set
 28447  2193                     	__end_of_IO_Set:
 28448 ;; =============== function _IO_Set ends ============
 28449                           
 28450                           	signat	_IO_Set,88
 28451                           	global	_MainT_Initialization
 28452                           psect	text5015,local,class=CODE,delta=2
 28453                           global __ptext5015
 28454  210D                     __ptext5015:
 28455                           
 28456 ;; *************** function _MainT_Initialization *****************
 28457 ;; Defined at:
 28458 ;;		line 70 in file "G:\Program\PIC\Source_File\main.c"
 28459 ;; Parameters:    Size  Location     Type
 28460 ;;		None
 28461 ;; Auto vars:     Size  Location     Type
 28462 ;;		None
 28463 ;; Return value:  Size  Location     Type
 28464 ;;		None               void
 28465 ;; Registers used:
 28466 ;;		wreg, fsr1l, fsr1h
 28467 ;; Tracked objects:
 28468 ;;		On entry : 0/0
 28469 ;;		On exit  : 0/0
 28470 ;;		Unchanged: 0/0
 28471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 28472 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 28473 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 28474 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 28475 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 28476 ;;Total ram usage:        1 bytes
 28477 ;; Hardware stack levels used:    1
 28478 ;; Hardware stack levels required when called:    4
 28479 ;; This function calls:
 28480 ;;		Nothing
 28481 ;; This function is called by:
 28482 ;;		_main
 28483 ;; This function uses a non-reentrant model
 28484 ;;
 28485                           psect	text5015
 28486                           	file	"G:\Program\PIC\Source_File\main.c"
 28487                           	line	70
 28488                           	global	__size_of_MainT_Initialization
 28489  0015                     	__size_of_MainT_Initialization	equ	__end_of_MainT_Initialization-_MainT_Initialization
 28490                           	
 28491  210D                     _MainT_Initialization:	
 28492                           	opt	stack 11
 28493                           ; Regs used in _MainT_Initialization: [wregfsr1]
 28494                           	line	71
 28495                           	
 28496  210D                     l18240:	
 28497                           ;main.c: 71: Product=&VarProduct;
 28498  210D  30C5               	movlw	(_VarProduct)&0ffh
 28499  210E  0020               	movlb 0	; select bank0
 28500  210F  00A0               	movwf	(??_MainT_Initialization+0)+0
 28501  2110  0820               	movf	(??_MainT_Initialization+0)+0,w
 28502  2111  00EF               	movwf	(_Product)
 28503                           	line	72
 28504                           ;main.c: 72: TMain=&VarTMain;
 28505  2112  3020               	movlw	(_VarTMain)&0ffh
 28506  2113  00A0               	movwf	(??_MainT_Initialization+0)+0
 28507  2114  0820               	movf	(??_MainT_Initialization+0)+0,w
 28508  2115  00FD               	movwf	(_TMain)
 28509                           	line	73
 28510                           	
 28511  2116                     l18242:	
 28512                           ;main.c: 73: TMain->FirstOpen=1;
 28513  2116  087D               	movf	(_TMain),w
 28514  2117  0086               	movwf	fsr1l
 28515  2118  3001               	movlw 1	; select bank2/3
 28516  2119  0087               	movwf fsr1h	
 28517                           	
 28518  211A  1681               	bsf	indf1,5
 28519                           	line	74
 28520                           	
 28521  211B                     l18244:	
 28522                           ;main.c: 74: TMain->First=1;
 28523  211B  087D               	movf	(_TMain),w
 28524  211C  3E03               	addlw	03h
 28525  211D  0086               	movwf	fsr1l
 28526  211E  3001               	movlw 1	; select bank2/3
 28527  211F  0087               	movwf fsr1h	
 28528                           	
 28529  2120  1481               	bsf	indf1,1
 28530                           	line	75
 28531                           	
 28532  2121                     l7170:	
 28533  2121  0008               	return
 28534                           	opt stack 0
 28535                           GLOBAL	__end_of_MainT_Initialization
 28536  2122                     	__end_of_MainT_Initialization:
 28537 ;; =============== function _MainT_Initialization ends ============
 28538                           
 28539                           	signat	_MainT_Initialization,88
 28540                           	global	_LedPointSelect
 28541                           psect	text5016,local,class=CODE,delta=2
 28542                           global __ptext5016
 28543  1867                     __ptext5016:
 28544                           
 28545 ;; *************** function _LedPointSelect *****************
 28546 ;; Defined at:
 28547 ;;		line 8 in file "G:\Program\PIC\Source_File\LED_B1.c"
 28548 ;; Parameters:    Size  Location     Type
 28549 ;;  led             1    wreg     unsigned char 
 28550 ;; Auto vars:     Size  Location     Type
 28551 ;;  led             1    1[BANK0 ] unsigned char 
 28552 ;; Return value:  Size  Location     Type
 28553 ;;		None               void
 28554 ;; Registers used:
 28555 ;;		wreg
 28556 ;; Tracked objects:
 28557 ;;		On entry : 0/0
 28558 ;;		On exit  : 0/0
 28559 ;;		Unchanged: 0/0
 28560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 28561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 28562 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 28563 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 28564 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 28565 ;;Total ram usage:        2 bytes
 28566 ;; Hardware stack levels used:    1
 28567 ;; Hardware stack levels required when called:    4
 28568 ;; This function calls:
 28569 ;;		Nothing
 28570 ;; This function is called by:
 28571 ;;		_setLED_Initialization
 28572 ;;		_setLED
 28573 ;;		_setLED_Main
 28574 ;; This function uses a non-reentrant model
 28575 ;;
 28576                           psect	text5016
 28577                           	file	"G:\Program\PIC\Source_File\LED_B1.c"
 28578                           	line	8
 28579                           	global	__size_of_LedPointSelect
 28580  002B                     	__size_of_LedPointSelect	equ	__end_of_LedPointSelect-_LedPointSelect
 28581                           	
 28582  1867                     _LedPointSelect:	
 28583                           	opt	stack 5
 28584                           ; Regs used in _LedPointSelect: [wreg]
 28585                           ;LedPointSelect@led stored from wreg
 28586                           	line	10
 28587  1867  0020               	movlb 0	; select bank0
 28588  1868  00A1               	movwf	(LedPointSelect@led)
 28589                           	
 28590  1869                     l18228:	
 28591                           ;LED_B1.c: 10: if(led == 1)
 28592  1869  0821               	movf	(LedPointSelect@led),w
 28593  186A  3A01               	xorlw	01h&0ffh
 28594  186B  1D03               	skipz
 28595  186C  286E               	goto	u5461
 28596  186D  286F               	goto	u5460
 28597  186E                     u5461:
 28598  186E  2875               	goto	l18232
 28599  186F                     u5460:
 28600                           	line	12
 28601                           	
 28602  186F                     l18230:	
 28603                           ;LED_B1.c: 11: {
 28604                           ;LED_B1.c: 12: LED=&VarLED1;
 28605  186F  30DB               	movlw	(_VarLED1)&0ffh
 28606  1870  00A0               	movwf	(??_LedPointSelect+0)+0
 28607  1871  0820               	movf	(??_LedPointSelect+0)+0,w
 28608  1872  0021               	movlb 1	; select bank1
 28609  1873  00BA               	movwf	(_LED)^080h
 28610                           	line	13
 28611                           ;LED_B1.c: 13: }
 28612  1874  2891               	goto	l5934
 28613                           	line	16
 28614                           	
 28615  1875                     l5929:	
 28616                           	
 28617  1875                     l18232:	
 28618                           ;LED_B1.c: 16: else if(led == 2)
 28619  1875  0020               	movlb 0	; select bank0
 28620  1876  0821               	movf	(LedPointSelect@led),w
 28621  1877  3A02               	xorlw	02h&0ffh
 28622  1878  1D03               	skipz
 28623  1879  287B               	goto	u5471
 28624  187A  287C               	goto	u5470
 28625  187B                     u5471:
 28626  187B  2882               	goto	l18236
 28627  187C                     u5470:
 28628                           	line	18
 28629                           	
 28630  187C                     l18234:	
 28631                           ;LED_B1.c: 17: {
 28632                           ;LED_B1.c: 18: LED=&VarLED2;
 28633  187C  30DF               	movlw	(_VarLED2)&0ffh
 28634  187D  00A0               	movwf	(??_LedPointSelect+0)+0
 28635  187E  0820               	movf	(??_LedPointSelect+0)+0,w
 28636  187F  0021               	movlb 1	; select bank1
 28637  1880  00BA               	movwf	(_LED)^080h
 28638                           	line	19
 28639                           ;LED_B1.c: 19: }
 28640  1881  2891               	goto	l5934
 28641                           	line	28
 28642                           	
 28643  1882                     l5931:	
 28644                           	
 28645  1882                     l18236:	
 28646                           ;LED_B1.c: 28: else if(led == 99)
 28647  1882  0020               	movlb 0	; select bank0
 28648  1883  0821               	movf	(LedPointSelect@led),w
 28649  1884  3A63               	xorlw	063h&0ffh
 28650  1885  1D03               	skipz
 28651  1886  2888               	goto	u5481
 28652  1887  2889               	goto	u5480
 28653  1888                     u5481:
 28654  1888  2891               	goto	l5934
 28655  1889                     u5480:
 28656                           	line	30
 28657                           	
 28658  1889                     l18238:	
 28659                           ;LED_B1.c: 29: {
 28660                           ;LED_B1.c: 30: LED=&VarErrLED;
 28661  1889  30D7               	movlw	(_VarErrLED)&0ffh
 28662  188A  00A0               	movwf	(??_LedPointSelect+0)+0
 28663  188B  0820               	movf	(??_LedPointSelect+0)+0,w
 28664  188C  0021               	movlb 1	; select bank1
 28665  188D  00BA               	movwf	(_LED)^080h
 28666  188E  2891               	goto	l5934
 28667                           	line	31
 28668                           	
 28669  188F                     l5933:	
 28670  188F  2891               	goto	l5934
 28671                           	line	33
 28672                           	
 28673  1890                     l5932:	
 28674  1890  2891               	goto	l5934
 28675                           	
 28676  1891                     l5930:	
 28677                           	
 28678  1891                     l5934:	
 28679  1891  0008               	return
 28680                           	opt stack 0
 28681                           GLOBAL	__end_of_LedPointSelect
 28682  1892                     	__end_of_LedPointSelect:
 28683 ;; =============== function _LedPointSelect ends ============
 28684                           
 28685                           	signat	_LedPointSelect,4216
 28686                           	global	_DimmerPointSelect
 28687                           psect	text5017,local,class=CODE,delta=2
 28688                           global __ptext5017
 28689  2ED8                     __ptext5017:
 28690                           
 28691 ;; *************** function _DimmerPointSelect *****************
 28692 ;; Defined at:
 28693 ;;		line 496 in file "G:\Program\PIC\Source_File\Dimmer_B1.c"
 28694 ;; Parameters:    Size  Location     Type
 28695 ;;  dimmer          1    wreg     unsigned char 
 28696 ;; Auto vars:     Size  Location     Type
 28697 ;;  dimmer          1    1[BANK0 ] unsigned char 
 28698 ;; Return value:  Size  Location     Type
 28699 ;;		None               void
 28700 ;; Registers used:
 28701 ;;		wreg
 28702 ;; Tracked objects:
 28703 ;;		On entry : 0/0
 28704 ;;		On exit  : 0/0
 28705 ;;		Unchanged: 0/0
 28706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 28707 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 28708 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 28709 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 28710 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 28711 ;;Total ram usage:        2 bytes
 28712 ;; Hardware stack levels used:    1
 28713 ;; Hardware stack levels required when called:    4
 28714 ;; This function calls:
 28715 ;;		Nothing
 28716 ;; This function is called by:
 28717 ;;		_setDimmer_TempERROR
 28718 ;;		_setDimmer_LoadERROR
 28719 ;;		_setDimmer_PFERROR
 28720 ;;		_setDimmer_Detect
 28721 ;;		_getDimmer_TempERROR
 28722 ;;		_getDimmer_LoadERROR
 28723 ;;		_getDimmer_PFERROR
 28724 ;;		_getDimmer_Detect
 28725 ;; This function uses a non-reentrant model
 28726 ;;
 28727                           psect	text5017
 28728                           	file	"G:\Program\PIC\Source_File\Dimmer_B1.c"
 28729                           	line	496
 28730                           	global	__size_of_DimmerPointSelect
 28731  000F                     	__size_of_DimmerPointSelect	equ	__end_of_DimmerPointSelect-_DimmerPointSelect
 28732                           	
 28733  2ED8                     _DimmerPointSelect:	
 28734                           	opt	stack 5
 28735                           ; Regs used in _DimmerPointSelect: [wreg]
 28736                           ;DimmerPointSelect@dimmer stored from wreg
 28737                           	line	499
 28738  2ED8  0020               	movlb 0	; select bank0
 28739  2ED9  00A1               	movwf	(DimmerPointSelect@dimmer)
 28740                           	
 28741  2EDA                     l18224:	
 28742                           ;Dimmer_B1.c: 499: if(dimmer == 1)
 28743  2EDA  0821               	movf	(DimmerPointSelect@dimmer),w
 28744  2EDB  3A01               	xorlw	01h&0ffh
 28745  2EDC  1D03               	skipz
 28746  2EDD  2EDF               	goto	u5451
 28747  2EDE  2EE0               	goto	u5450
 28748  2EDF                     u5451:
 28749  2EDF  2EE6               	goto	l4800
 28750  2EE0                     u5450:
 28751                           	line	501
 28752                           	
 28753  2EE0                     l18226:	
 28754                           ;Dimmer_B1.c: 500: {
 28755                           ;Dimmer_B1.c: 501: Dimmer=&Dimmer1;
 28756  2EE0  30E3               	movlw	(_Dimmer1)&0ffh
 28757  2EE1  00A0               	movwf	(??_DimmerPointSelect+0)+0
 28758  2EE2  0820               	movf	(??_DimmerPointSelect+0)+0,w
 28759  2EE3  0021               	movlb 1	; select bank1
 28760  2EE4  00B8               	movwf	(_Dimmer)^080h
 28761  2EE5  2EE6               	goto	l4800
 28762                           	line	502
 28763                           	
 28764  2EE6                     l4799:	
 28765                           	line	504
 28766                           	
 28767  2EE6                     l4800:	
 28768  2EE6  0008               	return
 28769                           	opt stack 0
 28770                           GLOBAL	__end_of_DimmerPointSelect
 28771  2EE7                     	__end_of_DimmerPointSelect:
 28772 ;; =============== function _DimmerPointSelect ends ============
 28773                           
 28774                           	signat	_DimmerPointSelect,4216
 28775                           	global	_setLoad_Count
 28776                           psect	text5018,local,class=CODE,delta=2
 28777                           global __ptext5018
 28778  20F9                     __ptext5018:
 28779                           
 28780 ;; *************** function _setLoad_Count *****************
 28781 ;; Defined at:
 28782 ;;		line 325 in file "G:\Program\PIC\Source_File\OverLoad_B1.c"
 28783 ;; Parameters:    Size  Location     Type
 28784 ;;  load            1    wreg     unsigned char 
 28785 ;;  command         1    0[BANK0 ] unsigned char 
 28786 ;; Auto vars:     Size  Location     Type
 28787 ;;  load            1    0[COMMON] unsigned char 
 28788 ;; Return value:  Size  Location     Type
 28789 ;;		None               void
 28790 ;; Registers used:
 28791 ;;		wreg, fsr1l, fsr1h
 28792 ;; Tracked objects:
 28793 ;;		On entry : 0/0
 28794 ;;		On exit  : 0/0
 28795 ;;		Unchanged: 0/0
 28796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 28797 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 28798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 28799 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 28800 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 28801 ;;Total ram usage:        2 bytes
 28802 ;; Hardware stack levels used:    1
 28803 ;; Hardware stack levels required when called:    4
 28804 ;; This function calls:
 28805 ;;		Nothing
 28806 ;; This function is called by:
 28807 ;;		_setDimmerLights
 28808 ;; This function uses a non-reentrant model
 28809 ;;
 28810                           psect	text5018
 28811                           	file	"G:\Program\PIC\Source_File\OverLoad_B1.c"
 28812                           	line	325
 28813                           	global	__size_of_setLoad_Count
 28814  0014                     	__size_of_setLoad_Count	equ	__end_of_setLoad_Count-_setLoad_Count
 28815                           	
 28816  20F9                     _setLoad_Count:	
 28817                           	opt	stack 6
 28818                           ; Regs used in _setLoad_Count: [wregfsr1]
 28819                           	line	326
 28820                           	
 28821  20F9                     l18206:	
 28822                           ;OverLoad_B1.c: 326: Load->Count=command;
 28823  20F9  0020               	movlb 0	; select bank0
 28824  20FA  0820               	movf	(setLoad_Count@command),w
 28825  20FB  00A1               	movwf	(??_setLoad_Count+0)+0
 28826  20FC  086B               	movf	(_Load),w
 28827  20FD  3E3A               	addlw	03Ah
 28828  20FE  0086               	movwf	fsr1l
 28829  20FF  3002               	movlw 2	; select bank4/5
 28830  2100  0087               	movwf fsr1h	
 28831                           	
 28832  2101  0821               	movf	(??_setLoad_Count+0)+0,w
 28833  2102  0081               	movwf	indf1
 28834                           	line	327
 28835                           ;OverLoad_B1.c: 327: Load->SafeCount=command;
 28836  2103  0820               	movf	(setLoad_Count@command),w
 28837  2104  00A1               	movwf	(??_setLoad_Count+0)+0
 28838  2105  086B               	movf	(_Load),w
 28839  2106  3E42               	addlw	042h
 28840  2107  0086               	movwf	fsr1l
 28841  2108  3002               	movlw 2	; select bank4/5
 28842  2109  0087               	movwf fsr1h	
 28843                           	
 28844  210A  0821               	movf	(??_setLoad_Count+0)+0,w
 28845  210B  0081               	movwf	indf1
 28846                           	line	328
 28847                           	
 28848  210C                     l9619:	
 28849  210C  0008               	return
 28850                           	opt stack 0
 28851                           GLOBAL	__end_of_setLoad_Count
 28852  210D                     	__end_of_setLoad_Count:
 28853 ;; =============== function _setLoad_Count ends ============
 28854                           
 28855                           	signat	_setLoad_Count,8312
 28856                           	global	_DimmerLightsPointSelect
 28857                           psect	text5019,local,class=CODE,delta=2
 28858                           global __ptext5019
 28859  2E84                     __ptext5019:
 28860                           
 28861 ;; *************** function _DimmerLightsPointSelect *****************
 28862 ;; Defined at:
 28863 ;;		line 8 in file "G:\Program\PIC\Source_File\Dimmer_B1.c"
 28864 ;; Parameters:    Size  Location     Type
 28865 ;;  lights          1    wreg     unsigned char 
 28866 ;; Auto vars:     Size  Location     Type
 28867 ;;  lights          1    1[BANK0 ] unsigned char 
 28868 ;; Return value:  Size  Location     Type
 28869 ;;		None               void
 28870 ;; Registers used:
 28871 ;;		wreg
 28872 ;; Tracked objects:
 28873 ;;		On entry : 0/0
 28874 ;;		On exit  : 0/0
 28875 ;;		Unchanged: 0/0
 28876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 28877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 28878 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 28879 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 28880 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 28881 ;;Total ram usage:        2 bytes
 28882 ;; Hardware stack levels used:    1
 28883 ;; Hardware stack levels required when called:    4
 28884 ;; This function calls:
 28885 ;;		Nothing
 28886 ;; This function is called by:
 28887 ;;		_setDimmerLights_Initialization
 28888 ;;		_setDimmerLights_Main
 28889 ;;		_getDimmerLights_StatusFlag
 28890 ;;		_getDimmerLights_Trigger
 28891 ;;		_setDimmerLights_ERROR
 28892 ;;		_setDimmerLights_TriggerERROR
 28893 ;;		_setDimmerLights
 28894 ;;		_setDimmerLights_Adj
 28895 ;;		_setDimmerLights_AdjRF
 28896 ;;		_setDimmerLights_Switch
 28897 ;;		_setDimmerLights_AdjGo
 28898 ;;		_setDimmerLights_Trigger
 28899 ;;		_setDimmerLights_TriggerAdj
 28900 ;;		_setDimmerLights_Open
 28901 ;;		_setDimmerLights_Close
 28902 ;;		_MainT
 28903 ;;		_setDimmerLights_GO
 28904 ;;		_setDimmerLights_MaxmumValue
 28905 ;;		_getDimmerLights_Open
 28906 ;;		_getDimmerLights_Close
 28907 ;; This function uses a non-reentrant model
 28908 ;;
 28909                           psect	text5019
 28910                           	file	"G:\Program\PIC\Source_File\Dimmer_B1.c"
 28911                           	line	8
 28912                           	global	__size_of_DimmerLightsPointSelect
 28913  000E                     	__size_of_DimmerLightsPointSelect	equ	__end_of_DimmerLightsPointSelect-_DimmerLightsPoi
                                 ntSelect
 28914                           	
 28915  2E84                     _DimmerLightsPointSelect:	
 28916                           	opt	stack 8
 28917                           ; Regs used in _DimmerLightsPointSelect: [wreg]
 28918                           ;DimmerLightsPointSelect@lights stored from wreg
 28919                           	line	10
 28920  2E84  0020               	movlb 0	; select bank0
 28921  2E85  00A1               	movwf	(DimmerLightsPointSelect@lights)
 28922                           	
 28923  2E86                     l18202:	
 28924                           ;Dimmer_B1.c: 10: if(lights == 1)
 28925  2E86  0821               	movf	(DimmerLightsPointSelect@lights),w
 28926  2E87  3A01               	xorlw	01h&0ffh
 28927  2E88  1D03               	skipz
 28928  2E89  2E8B               	goto	u5441
 28929  2E8A  2E8C               	goto	u5440
 28930  2E8B                     u5441:
 28931  2E8B  2E91               	goto	l4687
 28932  2E8C                     u5440:
 28933                           	line	12
 28934                           	
 28935  2E8C                     l18204:	
 28936                           ;Dimmer_B1.c: 11: {
 28937                           ;Dimmer_B1.c: 12: DimmerLights=&DimmerLights1;
 28938  2E8C  304A               	movlw	(_DimmerLights1)&0ffh
 28939  2E8D  00A0               	movwf	(??_DimmerLightsPointSelect+0)+0
 28940  2E8E  0820               	movf	(??_DimmerLightsPointSelect+0)+0,w
 28941  2E8F  00EA               	movwf	(_DimmerLights)
 28942  2E90  2E91               	goto	l4687
 28943                           	line	13
 28944                           	
 28945  2E91                     l4686:	
 28946                           	line	29
 28947                           	
 28948  2E91                     l4687:	
 28949  2E91  0008               	return
 28950                           	opt stack 0
 28951                           GLOBAL	__end_of_DimmerLightsPointSelect
 28952  2E92                     	__end_of_DimmerLightsPointSelect:
 28953 ;; =============== function _DimmerLightsPointSelect ends ============
 28954                           
 28955                           	signat	_DimmerLightsPointSelect,4216
 28956                           	global	_DelayTimejudge
 28957                           psect	text5020,local,class=CODE,delta=2
 28958                           global __ptext5020
 28959  19C6                     __ptext5020:
 28960                           
 28961 ;; *************** function _DelayTimejudge *****************
 28962 ;; Defined at:
 28963 ;;		line 108 in file "G:\Program\PIC\Source_File\DelayOff_B1.c"
 28964 ;; Parameters:    Size  Location     Type
 28965 ;;  value           1    wreg     unsigned char 
 28966 ;; Auto vars:     Size  Location     Type
 28967 ;;  value           1    2[BANK0 ] unsigned char 
 28968 ;;  i               1    1[BANK0 ] unsigned char 
 28969 ;; Return value:  Size  Location     Type
 28970 ;;                  1    wreg      unsigned char 
 28971 ;; Registers used:
 28972 ;;		wreg
 28973 ;; Tracked objects:
 28974 ;;		On entry : 0/0
 28975 ;;		On exit  : 0/0
 28976 ;;		Unchanged: 0/0
 28977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 28978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 28979 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 28980 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 28981 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 28982 ;;Total ram usage:        3 bytes
 28983 ;; Hardware stack levels used:    1
 28984 ;; Hardware stack levels required when called:    4
 28985 ;; This function calls:
 28986 ;;		Nothing
 28987 ;; This function is called by:
 28988 ;;		_setDelayOff_GO
 28989 ;; This function uses a non-reentrant model
 28990 ;;
 28991                           psect	text5020
 28992                           	file	"G:\Program\PIC\Source_File\DelayOff_B1.c"
 28993                           	line	108
 28994                           	global	__size_of_DelayTimejudge
 28995  004F                     	__size_of_DelayTimejudge	equ	__end_of_DelayTimejudge-_DelayTimejudge
 28996                           	
 28997  19C6                     _DelayTimejudge:	
 28998                           	opt	stack 5
 28999                           ; Regs used in _DelayTimejudge: [wreg]
 29000                           ;DelayTimejudge@value stored from wreg
 29001  19C6  0020               	movlb 0	; select bank0
 29002  19C7  00A2               	movwf	(DelayTimejudge@value)
 29003                           	line	109
 29004                           	
 29005  19C8                     l18176:	
 29006                           ;DelayOff_B1.c: 109: char i=5;
 29007  19C8  3005               	movlw	(05h)
 29008  19C9  00A0               	movwf	(??_DelayTimejudge+0)+0
 29009  19CA  0820               	movf	(??_DelayTimejudge+0)+0,w
 29010  19CB  00A1               	movwf	(DelayTimejudge@i)
 29011                           	line	110
 29012                           ;DelayOff_B1.c: 110: if(value == 0x05)
 29013  19CC  0822               	movf	(DelayTimejudge@value),w
 29014  19CD  3A05               	xorlw	05h&0ffh
 29015  19CE  1D03               	skipz
 29016  19CF  29D1               	goto	u5381
 29017  19D0  29D2               	goto	u5380
 29018  19D1                     u5381:
 29019  19D1  29D7               	goto	l18180
 29020  19D2                     u5380:
 29021                           	line	112
 29022                           	
 29023  19D2                     l18178:	
 29024                           ;DelayOff_B1.c: 111: {
 29025                           ;DelayOff_B1.c: 112: i=5;
 29026  19D2  3005               	movlw	(05h)
 29027  19D3  00A0               	movwf	(??_DelayTimejudge+0)+0
 29028  19D4  0820               	movf	(??_DelayTimejudge+0)+0,w
 29029  19D5  00A1               	movwf	(DelayTimejudge@i)
 29030                           	line	113
 29031                           ;DelayOff_B1.c: 113: }
 29032  19D6  2A12               	goto	l3521
 29033                           	line	114
 29034                           	
 29035  19D7                     l3520:	
 29036                           	
 29037  19D7                     l18180:	
 29038                           ;DelayOff_B1.c: 114: else if(value == 0x10)
 29039  19D7  0822               	movf	(DelayTimejudge@value),w
 29040  19D8  3A10               	xorlw	010h&0ffh
 29041  19D9  1D03               	skipz
 29042  19DA  29DC               	goto	u5391
 29043  19DB  29DD               	goto	u5390
 29044  19DC                     u5391:
 29045  19DC  29E2               	goto	l18184
 29046  19DD                     u5390:
 29047                           	line	116
 29048                           	
 29049  19DD                     l18182:	
 29050                           ;DelayOff_B1.c: 115: {
 29051                           ;DelayOff_B1.c: 116: i=10;
 29052  19DD  300A               	movlw	(0Ah)
 29053  19DE  00A0               	movwf	(??_DelayTimejudge+0)+0
 29054  19DF  0820               	movf	(??_DelayTimejudge+0)+0,w
 29055  19E0  00A1               	movwf	(DelayTimejudge@i)
 29056                           	line	117
 29057                           ;DelayOff_B1.c: 117: }
 29058  19E1  2A12               	goto	l3521
 29059                           	line	118
 29060                           	
 29061  19E2                     l3522:	
 29062                           	
 29063  19E2                     l18184:	
 29064                           ;DelayOff_B1.c: 118: else if(value == 0x15)
 29065  19E2  0822               	movf	(DelayTimejudge@value),w
 29066  19E3  3A15               	xorlw	015h&0ffh
 29067  19E4  1D03               	skipz
 29068  19E5  29E7               	goto	u5401
 29069  19E6  29E8               	goto	u5400
 29070  19E7                     u5401:
 29071  19E7  29ED               	goto	l18188
 29072  19E8                     u5400:
 29073                           	line	120
 29074                           	
 29075  19E8                     l18186:	
 29076                           ;DelayOff_B1.c: 119: {
 29077                           ;DelayOff_B1.c: 120: i=15;
 29078  19E8  300F               	movlw	(0Fh)
 29079  19E9  00A0               	movwf	(??_DelayTimejudge+0)+0
 29080  19EA  0820               	movf	(??_DelayTimejudge+0)+0,w
 29081  19EB  00A1               	movwf	(DelayTimejudge@i)
 29082                           	line	121
 29083                           ;DelayOff_B1.c: 121: }
 29084  19EC  2A12               	goto	l3521
 29085                           	line	122
 29086                           	
 29087  19ED                     l3524:	
 29088                           	
 29089  19ED                     l18188:	
 29090                           ;DelayOff_B1.c: 122: else if(value == 0x20)
 29091  19ED  0822               	movf	(DelayTimejudge@value),w
 29092  19EE  3A20               	xorlw	020h&0ffh
 29093  19EF  1D03               	skipz
 29094  19F0  29F2               	goto	u5411
 29095  19F1  29F3               	goto	u5410
 29096  19F2                     u5411:
 29097  19F2  29F8               	goto	l18192
 29098  19F3                     u5410:
 29099                           	line	124
 29100                           	
 29101  19F3                     l18190:	
 29102                           ;DelayOff_B1.c: 123: {
 29103                           ;DelayOff_B1.c: 124: i=20;
 29104  19F3  3014               	movlw	(014h)
 29105  19F4  00A0               	movwf	(??_DelayTimejudge+0)+0
 29106  19F5  0820               	movf	(??_DelayTimejudge+0)+0,w
 29107  19F6  00A1               	movwf	(DelayTimejudge@i)
 29108                           	line	125
 29109                           ;DelayOff_B1.c: 125: }
 29110  19F7  2A12               	goto	l3521
 29111                           	line	126
 29112                           	
 29113  19F8                     l3526:	
 29114                           	
 29115  19F8                     l18192:	
 29116                           ;DelayOff_B1.c: 126: else if(value == 0x25)
 29117  19F8  0822               	movf	(DelayTimejudge@value),w
 29118  19F9  3A25               	xorlw	025h&0ffh
 29119  19FA  1D03               	skipz
 29120  19FB  29FD               	goto	u5421
 29121  19FC  29FE               	goto	u5420
 29122  19FD                     u5421:
 29123  19FD  2A03               	goto	l18196
 29124  19FE                     u5420:
 29125                           	line	128
 29126                           	
 29127  19FE                     l18194:	
 29128                           ;DelayOff_B1.c: 127: {
 29129                           ;DelayOff_B1.c: 128: i=25;
 29130  19FE  3019               	movlw	(019h)
 29131  19FF  00A0               	movwf	(??_DelayTimejudge+0)+0
 29132  1A00  0820               	movf	(??_DelayTimejudge+0)+0,w
 29133  1A01  00A1               	movwf	(DelayTimejudge@i)
 29134                           	line	129
 29135                           ;DelayOff_B1.c: 129: }
 29136  1A02  2A12               	goto	l3521
 29137                           	line	130
 29138                           	
 29139  1A03                     l3528:	
 29140                           	
 29141  1A03                     l18196:	
 29142                           ;DelayOff_B1.c: 130: else if(value == 0x30)
 29143  1A03  0822               	movf	(DelayTimejudge@value),w
 29144  1A04  3A30               	xorlw	030h&0ffh
 29145  1A05  1D03               	skipz
 29146  1A06  2A08               	goto	u5431
 29147  1A07  2A09               	goto	u5430
 29148  1A08                     u5431:
 29149  1A08  2A12               	goto	l3521
 29150  1A09                     u5430:
 29151                           	line	132
 29152                           	
 29153  1A09                     l18198:	
 29154                           ;DelayOff_B1.c: 131: {
 29155                           ;DelayOff_B1.c: 132: i=30;
 29156  1A09  301E               	movlw	(01Eh)
 29157  1A0A  00A0               	movwf	(??_DelayTimejudge+0)+0
 29158  1A0B  0820               	movf	(??_DelayTimejudge+0)+0,w
 29159  1A0C  00A1               	movwf	(DelayTimejudge@i)
 29160  1A0D  2A12               	goto	l3521
 29161                           	line	133
 29162                           	
 29163  1A0E                     l3530:	
 29164  1A0E  2A12               	goto	l3521
 29165                           	line	134
 29166                           	
 29167  1A0F                     l3529:	
 29168  1A0F  2A12               	goto	l3521
 29169                           	
 29170  1A10                     l3527:	
 29171  1A10  2A12               	goto	l3521
 29172                           	
 29173  1A11                     l3525:	
 29174  1A11  2A12               	goto	l3521
 29175                           	
 29176  1A12                     l3523:	
 29177                           	
 29178  1A12                     l3521:	
 29179                           ;DelayOff_B1.c: 133: }
 29180                           ;DelayOff_B1.c: 134: return i;
 29181  1A12  0821               	movf	(DelayTimejudge@i),w
 29182  1A13  2A14               	goto	l3531
 29183                           	
 29184  1A14                     l18200:	
 29185                           	line	135
 29186                           	
 29187  1A14                     l3531:	
 29188  1A14  0008               	return
 29189                           	opt stack 0
 29190                           GLOBAL	__end_of_DelayTimejudge
 29191  1A15                     	__end_of_DelayTimejudge:
 29192 ;; =============== function _DelayTimejudge ends ============
 29193                           
 29194                           	signat	_DelayTimejudge,4217
 29195                           	global	_setRF_DimmerLights
 29196                           psect	text5021,local,class=CODE,delta=2
 29197                           global __ptext5021
 29198  1B7E                     __ptext5021:
 29199                           
 29200 ;; *************** function _setRF_DimmerLights *****************
 29201 ;; Defined at:
 29202 ;;		line 416 in file "G:\Program\PIC\Source_File\RF_Control_B1.c"
 29203 ;; Parameters:    Size  Location     Type
 29204 ;;  lights          1    wreg     unsigned char 
 29205 ;;  on              1    0[BANK0 ] unsigned char 
 29206 ;; Auto vars:     Size  Location     Type
 29207 ;;  lights          1    4[BANK0 ] unsigned char 
 29208 ;;  status          1    3[BANK0 ] unsigned char 
 29209 ;; Return value:  Size  Location     Type
 29210 ;;		None               void
 29211 ;; Registers used:
 29212 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 29213 ;; Tracked objects:
 29214 ;;		On entry : 0/0
 29215 ;;		On exit  : 0/0
 29216 ;;		Unchanged: 0/0
 29217 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 29218 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 29219 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 29220 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 29221 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
       0       0
 29222 ;;Total ram usage:        5 bytes
 29223 ;; Hardware stack levels used:    1
 29224 ;; Hardware stack levels required when called:    4
 29225 ;; This function calls:
 29226 ;;		Nothing
 29227 ;; This function is called by:
 29228 ;;		_DlyOff_Main
 29229 ;;		_setDimmerLights_Adj
 29230 ;;		_setRFSW_Control
 29231 ;;		_Sw_OnFunc
 29232 ;;		_Sw_OffFunc
 29233 ;; This function uses a non-reentrant model
 29234 ;;
 29235                           psect	text5021
 29236                           	file	"G:\Program\PIC\Source_File\RF_Control_B1.c"
 29237                           	line	416
 29238                           	global	__size_of_setRF_DimmerLights
 29239  005E                     	__size_of_setRF_DimmerLights	equ	__end_of_setRF_DimmerLights-_setRF_DimmerLights
 29240                           	
 29241  1B7E                     _setRF_DimmerLights:	
 29242                           	opt	stack 9
 29243                           ; Regs used in _setRF_DimmerLights: [wreg+fsr1l-status,0]
 29244                           ;setRF_DimmerLights@lights stored from wreg
 29245                           	line	418
 29246  1B7E  0020               	movlb 0	; select bank0
 29247  1B7F  00A4               	movwf	(setRF_DimmerLights@lights)
 29248                           	
 29249  1B80                     l18160:	
 29250                           ;RF_Control_B1.c: 417: char status;
 29251                           ;RF_Control_B1.c: 418: status=1;
 29252  1B80  01A3               	clrf	(setRF_DimmerLights@status)
 29253  1B81  1403               	bsf	status,0
 29254  1B82  0DA3               	rlf	(setRF_DimmerLights@status),f
 29255                           	line	419
 29256                           	
 29257  1B83                     l18162:	
 29258                           ;RF_Control_B1.c: 419: status<<=(lights-1);
 29259  1B83  0824               	movf	(setRF_DimmerLights@lights),w
 29260  1B84  3EFF               	addlw	-1
 29261  1B85  0A89               	incf	wreg,f
 29262                           	
 29263  1B86  2B89               	goto	u5360
 29264  1B87                     u5365:
 29265  1B87  1003               	clrc
 29266  1B88  0DA3               	rlf	(setRF_DimmerLights@status),f
 29267  1B89                     u5360:
 29268  1B89  3EFF               	addlw	-1
 29269  1B8A  1D03               	skipz
 29270  1B8B  2B87               	goto	u5365
 29271                           	line	420
 29272                           	
 29273  1B8C                     l18164:	
 29274                           ;RF_Control_B1.c: 420: Product->Data[11]=lights;
 29275  1B8C  0824               	movf	(setRF_DimmerLights@lights),w
 29276  1B8D  00A1               	movwf	(??_setRF_DimmerLights+0)+0
 29277  1B8E  086F               	movf	(_Product),w
 29278  1B8F  3E0B               	addlw	0Bh
 29279  1B90  0086               	movwf	fsr1l
 29280  1B91  3001               	movlw 1	; select bank2/3
 29281  1B92  0087               	movwf fsr1h	
 29282                           	
 29283  1B93  0821               	movf	(??_setRF_DimmerLights+0)+0,w
 29284  1B94  0081               	movwf	indf1
 29285                           	line	421
 29286                           	
 29287  1B95                     l18166:	
 29288                           ;RF_Control_B1.c: 421: Product->Data[9]=Product->Data[20+lights];
 29289  1B95  0824               	movf	(setRF_DimmerLights@lights),w
 29290  1B96  3E14               	addlw	014h
 29291  1B97  076F               	addwf	(_Product),w
 29292  1B98  00A1               	movwf	(??_setRF_DimmerLights+0)+0
 29293  1B99  0821               	movf	0+(??_setRF_DimmerLights+0)+0,w
 29294  1B9A  0086               	movwf	fsr1l
 29295  1B9B  3001               	movlw 1	; select bank2/3
 29296  1B9C  0087               	movwf fsr1h	
 29297                           	
 29298  1B9D  0801               	movf	indf1,w
 29299  1B9E  00A2               	movwf	(??_setRF_DimmerLights+1)+0
 29300  1B9F  086F               	movf	(_Product),w
 29301  1BA0  3E09               	addlw	09h
 29302  1BA1  0086               	movwf	fsr1l
 29303  1BA2  3001               	movlw 1	; select bank2/3
 29304  1BA3  0087               	movwf fsr1h	
 29305                           	
 29306  1BA4  0822               	movf	(??_setRF_DimmerLights+1)+0,w
 29307  1BA5  0081               	movwf	indf1
 29308                           	line	422
 29309                           	
 29310  1BA6                     l18168:	
 29311                           ;RF_Control_B1.c: 422: Product->Data[17]=Product->Data[26+lights];
 29312  1BA6  0824               	movf	(setRF_DimmerLights@lights),w
 29313  1BA7  3E1A               	addlw	01Ah
 29314  1BA8  076F               	addwf	(_Product),w
 29315  1BA9  00A1               	movwf	(??_setRF_DimmerLights+0)+0
 29316  1BAA  0821               	movf	0+(??_setRF_DimmerLights+0)+0,w
 29317  1BAB  0086               	movwf	fsr1l
 29318  1BAC  3001               	movlw 1	; select bank2/3
 29319  1BAD  0087               	movwf fsr1h	
 29320                           	
 29321  1BAE  0801               	movf	indf1,w
 29322  1BAF  00A2               	movwf	(??_setRF_DimmerLights+1)+0
 29323  1BB0  086F               	movf	(_Product),w
 29324  1BB1  3E11               	addlw	011h
 29325  1BB2  0086               	movwf	fsr1l
 29326  1BB3  3001               	movlw 1	; select bank2/3
 29327  1BB4  0087               	movwf fsr1h	
 29328                           	
 29329  1BB5  0822               	movf	(??_setRF_DimmerLights+1)+0,w
 29330  1BB6  0081               	movwf	indf1
 29331                           	line	423
 29332                           	
 29333  1BB7                     l18170:	
 29334                           ;RF_Control_B1.c: 423: if(on)
 29335  1BB7  0820               	movf	(setRF_DimmerLights@on),w
 29336  1BB8  1D03               	skipz
 29337  1BB9  2BBB               	goto	u5370
 29338  1BBA  2BCB               	goto	l18174
 29339  1BBB                     u5370:
 29340                           	line	425
 29341                           	
 29342  1BBB                     l18172:	
 29343                           ;RF_Control_B1.c: 424: {
 29344                           ;RF_Control_B1.c: 425: Product->Data[15]=(Product->Data[15]|status);
 29345  1BBB  086F               	movf	(_Product),w
 29346  1BBC  3E0F               	addlw	0Fh
 29347  1BBD  0086               	movwf	fsr1l
 29348  1BBE  3001               	movlw 1	; select bank2/3
 29349  1BBF  0087               	movwf fsr1h	
 29350                           	
 29351  1BC0  0801               	movf	indf1,w
 29352  1BC1  0423               	iorwf	(setRF_DimmerLights@status),w
 29353  1BC2  00A1               	movwf	(??_setRF_DimmerLights+0)+0
 29354  1BC3  086F               	movf	(_Product),w
 29355  1BC4  3E0F               	addlw	0Fh
 29356  1BC5  0086               	movwf	fsr1l
 29357  1BC6  3001               	movlw 1	; select bank2/3
 29358  1BC7  0087               	movwf fsr1h	
 29359                           	
 29360  1BC8  0821               	movf	(??_setRF_DimmerLights+0)+0,w
 29361  1BC9  0081               	movwf	indf1
 29362                           	line	426
 29363                           ;RF_Control_B1.c: 426: }
 29364  1BCA  2BDB               	goto	l13243
 29365                           	line	427
 29366                           	
 29367  1BCB                     l13241:	
 29368                           	line	429
 29369                           	
 29370  1BCB                     l18174:	
 29371                           ;RF_Control_B1.c: 427: else
 29372                           ;RF_Control_B1.c: 428: {
 29373                           ;RF_Control_B1.c: 429: Product->Data[15]=(Product->Data[15]&(~status));
 29374  1BCB  086F               	movf	(_Product),w
 29375  1BCC  3E0F               	addlw	0Fh
 29376  1BCD  0086               	movwf	fsr1l
 29377  1BCE  3001               	movlw 1	; select bank2/3
 29378  1BCF  0087               	movwf fsr1h	
 29379                           	
 29380  1BD0  0923               	comf	(setRF_DimmerLights@status),w
 29381  1BD1  0501               	andwf	indf1,w
 29382  1BD2  00A1               	movwf	(??_setRF_DimmerLights+0)+0
 29383  1BD3  086F               	movf	(_Product),w
 29384  1BD4  3E0F               	addlw	0Fh
 29385  1BD5  0086               	movwf	fsr1l
 29386  1BD6  3001               	movlw 1	; select bank2/3
 29387  1BD7  0087               	movwf fsr1h	
 29388                           	
 29389  1BD8  0821               	movf	(??_setRF_DimmerLights+0)+0,w
 29390  1BD9  0081               	movwf	indf1
 29391  1BDA  2BDB               	goto	l13243
 29392                           	line	430
 29393                           	
 29394  1BDB                     l13242:	
 29395                           	line	431
 29396                           	
 29397  1BDB                     l13243:	
 29398  1BDB  0008               	return
 29399                           	opt stack 0
 29400                           GLOBAL	__end_of_setRF_DimmerLights
 29401  1BDC                     	__end_of_setRF_DimmerLights:
 29402 ;; =============== function _setRF_DimmerLights ends ============
 29403                           
 29404                           	signat	_setRF_DimmerLights,8312
 29405                           	global	_DelayOffPointSelect
 29406                           psect	text5022,local,class=CODE,delta=2
 29407                           global __ptext5022
 29408  2E76                     __ptext5022:
 29409                           
 29410 ;; *************** function _DelayOffPointSelect *****************
 29411 ;; Defined at:
 29412 ;;		line 9 in file "G:\Program\PIC\Source_File\DelayOff_B1.c"
 29413 ;; Parameters:    Size  Location     Type
 29414 ;;  sw              1    wreg     unsigned char 
 29415 ;; Auto vars:     Size  Location     Type
 29416 ;;  sw              1    1[BANK0 ] unsigned char 
 29417 ;; Return value:  Size  Location     Type
 29418 ;;		None               void
 29419 ;; Registers used:
 29420 ;;		wreg
 29421 ;; Tracked objects:
 29422 ;;		On entry : 0/0
 29423 ;;		On exit  : 0/0
 29424 ;;		Unchanged: 0/0
 29425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 29426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 29427 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 29428 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 29429 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 29430 ;;Total ram usage:        2 bytes
 29431 ;; Hardware stack levels used:    1
 29432 ;; Hardware stack levels required when called:    4
 29433 ;; This function calls:
 29434 ;;		Nothing
 29435 ;; This function is called by:
 29436 ;;		_DlyOff_Initialization
 29437 ;;		_DlyOff_Main
 29438 ;;		_setDelayOff_GO
 29439 ;; This function uses a non-reentrant model
 29440 ;;
 29441                           psect	text5022
 29442                           	file	"G:\Program\PIC\Source_File\DelayOff_B1.c"
 29443                           	line	9
 29444                           	global	__size_of_DelayOffPointSelect
 29445  000E                     	__size_of_DelayOffPointSelect	equ	__end_of_DelayOffPointSelect-_DelayOffPointSelect
 29446                           	
 29447  2E76                     _DelayOffPointSelect:	
 29448                           	opt	stack 9
 29449                           ; Regs used in _DelayOffPointSelect: [wreg]
 29450                           ;DelayOffPointSelect@sw stored from wreg
 29451                           	line	11
 29452  2E76  0020               	movlb 0	; select bank0
 29453  2E77  00A1               	movwf	(DelayOffPointSelect@sw)
 29454                           	
 29455  2E78                     l18156:	
 29456                           ;DelayOff_B1.c: 11: if(sw == 1)
 29457  2E78  0821               	movf	(DelayOffPointSelect@sw),w
 29458  2E79  3A01               	xorlw	01h&0ffh
 29459  2E7A  1D03               	skipz
 29460  2E7B  2E7D               	goto	u5351
 29461  2E7C  2E7E               	goto	u5350
 29462  2E7D                     u5351:
 29463  2E7D  2E83               	goto	l3495
 29464  2E7E                     u5350:
 29465                           	line	13
 29466                           	
 29467  2E7E                     l18158:	
 29468                           ;DelayOff_B1.c: 12: {
 29469                           ;DelayOff_B1.c: 13: DelayOff=&DlySw1;
 29470  2E7E  30D2               	movlw	(_DlySw1)&0ffh
 29471  2E7F  00A0               	movwf	(??_DelayOffPointSelect+0)+0
 29472  2E80  0820               	movf	(??_DelayOffPointSelect+0)+0,w
 29473  2E81  00F9               	movwf	(_DelayOff)
 29474  2E82  2E83               	goto	l3495
 29475                           	line	14
 29476                           	
 29477  2E83                     l3494:	
 29478                           	line	28
 29479                           	
 29480  2E83                     l3495:	
 29481  2E83  0008               	return
 29482                           	opt stack 0
 29483                           GLOBAL	__end_of_DelayOffPointSelect
 29484  2E84                     	__end_of_DelayOffPointSelect:
 29485 ;; =============== function _DelayOffPointSelect ends ============
 29486                           
 29487                           	signat	_DelayOffPointSelect,4216
 29488                           	global	_DelayTime_1us
 29489                           psect	text5023,local,class=CODE,delta=2
 29490                           global __ptext5023
 29491  244C                     __ptext5023:
 29492                           
 29493 ;; *************** function _DelayTime_1us *****************
 29494 ;; Defined at:
 29495 ;;		line 284 in file "G:\Program\PIC\Source_File\CC2500_B1.c"
 29496 ;; Parameters:    Size  Location     Type
 29497 ;;  count           2    0[BANK0 ] int 
 29498 ;; Auto vars:     Size  Location     Type
 29499 ;;  j               2    4[BANK0 ] unsigned int 
 29500 ;;  i               2    2[BANK0 ] unsigned int 
 29501 ;; Return value:  Size  Location     Type
 29502 ;;		None               void
 29503 ;; Registers used:
 29504 ;;		wreg, status,2
 29505 ;; Tracked objects:
 29506 ;;		On entry : 0/0
 29507 ;;		On exit  : 0/0
 29508 ;;		Unchanged: 0/0
 29509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 29510 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 29511 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 29512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 29513 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0
 29514 ;;Total ram usage:        6 bytes
 29515 ;; Hardware stack levels used:    1
 29516 ;; Hardware stack levels required when called:    4
 29517 ;; This function calls:
 29518 ;;		Nothing
 29519 ;; This function is called by:
 29520 ;;		_CC2500_PowerRST
 29521 ;;		_CC2500_FrequencyCabr
 29522 ;; This function uses a non-reentrant model
 29523 ;;
 29524                           psect	text5023
 29525                           	file	"G:\Program\PIC\Source_File\CC2500_B1.c"
 29526                           	line	284
 29527                           	global	__size_of_DelayTime_1us
 29528  0031                     	__size_of_DelayTime_1us	equ	__end_of_DelayTime_1us-_DelayTime_1us
 29529                           	
 29530  244C                     _DelayTime_1us:	
 29531                           	opt	stack 9
 29532                           ; Regs used in _DelayTime_1us: [wreg+status,2]
 29533                           	line	286
 29534                           	
 29535  244C                     l20716:	
 29536                           ;CC2500_B1.c: 285: unsigned int i,j;
 29537                           ;CC2500_B1.c: 286: for(i=1;i<count;i++)
 29538  244C  3001               	movlw	low(01h)
 29539  244D  0020               	movlb 0	; select bank0
 29540  244E  00A2               	movwf	(DelayTime_1us@i)
 29541  244F  3000               	movlw	high(01h)
 29542  2450  00A3               	movwf	((DelayTime_1us@i))+1
 29543  2451  2C71               	goto	l2370
 29544                           	line	287
 29545                           	
 29546  2452                     l2371:	
 29547                           	
 29548  2452                     l20718:	
 29549                           ;CC2500_B1.c: 287: for(j=0;j<=1;j++);
 29550  2452  01A4               	clrf	(DelayTime_1us@j)
 29551  2453  01A5               	clrf	(DelayTime_1us@j+1)
 29552                           	
 29553  2454                     l20720:	
 29554  2454  3000               	movlw	high(02h)
 29555  2455  0225               	subwf	(DelayTime_1us@j+1),w
 29556  2456  3002               	movlw	low(02h)
 29557  2457  1903               	skipnz
 29558  2458  0224               	subwf	(DelayTime_1us@j),w
 29559  2459  1C03               	skipc
 29560  245A  2C5C               	goto	u9281
 29561  245B  2C5D               	goto	u9280
 29562  245C                     u9281:
 29563  245C  2C5F               	goto	l20724
 29564  245D                     u9280:
 29565  245D  2C6D               	goto	l20726
 29566                           	
 29567  245E                     l20722:	
 29568  245E  2C6D               	goto	l20726
 29569                           	
 29570  245F                     l2372:	
 29571                           	
 29572  245F                     l20724:	
 29573  245F  3001               	movlw	low(01h)
 29574  2460  07A4               	addwf	(DelayTime_1us@j),f
 29575  2461  3000               	movlw	high(01h)
 29576  2462  3DA5               	addwfc	(DelayTime_1us@j+1),f
 29577  2463  3000               	movlw	high(02h)
 29578  2464  0225               	subwf	(DelayTime_1us@j+1),w
 29579  2465  3002               	movlw	low(02h)
 29580  2466  1903               	skipnz
 29581  2467  0224               	subwf	(DelayTime_1us@j),w
 29582  2468  1C03               	skipc
 29583  2469  2C6B               	goto	u9291
 29584  246A  2C6C               	goto	u9290
 29585  246B                     u9291:
 29586  246B  2C5F               	goto	l20724
 29587  246C                     u9290:
 29588  246C  2C6D               	goto	l20726
 29589                           	
 29590  246D                     l2373:	
 29591                           	line	286
 29592                           	
 29593  246D                     l20726:	
 29594  246D  3001               	movlw	low(01h)
 29595  246E  07A2               	addwf	(DelayTime_1us@i),f
 29596  246F  3000               	movlw	high(01h)
 29597  2470  3DA3               	addwfc	(DelayTime_1us@i+1),f
 29598                           	
 29599  2471                     l2370:	
 29600  2471  0821               	movf	(DelayTime_1us@count+1),w
 29601  2472  0223               	subwf	(DelayTime_1us@i+1),w
 29602  2473  1D03               	skipz
 29603  2474  2C77               	goto	u9305
 29604  2475  0820               	movf	(DelayTime_1us@count),w
 29605  2476  0222               	subwf	(DelayTime_1us@i),w
 29606  2477                     u9305:
 29607  2477  1C03               	skipc
 29608  2478  2C7A               	goto	u9301
 29609  2479  2C7B               	goto	u9300
 29610  247A                     u9301:
 29611  247A  2C52               	goto	l20718
 29612  247B                     u9300:
 29613  247B  2C7C               	goto	l2375
 29614                           	
 29615  247C                     l2374:	
 29616                           	line	288
 29617                           	
 29618  247C                     l2375:	
 29619  247C  0008               	return
 29620                           	opt stack 0
 29621                           GLOBAL	__end_of_DelayTime_1us
 29622  247D                     	__end_of_DelayTime_1us:
 29623 ;; =============== function _DelayTime_1us ends ============
 29624                           
 29625                           	signat	_DelayTime_1us,4216
 29626                           	global	_CC2500_ReadByte
 29627                           psect	text5024,local,class=CODE,delta=2
 29628                           global __ptext5024
 29629  2368                     __ptext5024:
 29630                           
 29631 ;; *************** function _CC2500_ReadByte *****************
 29632 ;; Defined at:
 29633 ;;		line 211 in file "G:\Program\PIC\Source_File\CC2500_B1.c"
 29634 ;; Parameters:    Size  Location     Type
 29635 ;;		None
 29636 ;; Auto vars:     Size  Location     Type
 29637 ;;  loop_b          1    1[BANK0 ] unsigned char 
 29638 ;; Return value:  Size  Location     Type
 29639 ;;		None               void
 29640 ;; Registers used:
 29641 ;;		wreg, status,2, status,0
 29642 ;; Tracked objects:
 29643 ;;		On entry : 0/0
 29644 ;;		On exit  : 0/0
 29645 ;;		Unchanged: 0/0
 29646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 29647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 29648 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 29649 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 29650 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 29651 ;;Total ram usage:        2 bytes
 29652 ;; Hardware stack levels used:    1
 29653 ;; Hardware stack levels required when called:    4
 29654 ;; This function calls:
 29655 ;;		Nothing
 29656 ;; This function is called by:
 29657 ;;		_CC2500_RxData
 29658 ;;		_CC2500_ReadStatus
 29659 ;;		_CC2500_ReadREG
 29660 ;; This function uses a non-reentrant model
 29661 ;;
 29662                           psect	text5024
 29663                           	file	"G:\Program\PIC\Source_File\CC2500_B1.c"
 29664                           	line	211
 29665                           	global	__size_of_CC2500_ReadByte
 29666  002B                     	__size_of_CC2500_ReadByte	equ	__end_of_CC2500_ReadByte-_CC2500_ReadByte
 29667                           	
 29668  2368                     _CC2500_ReadByte:	
 29669                           	opt	stack 8
 29670                           ; Regs used in _CC2500_ReadByte: [wreg+status,2+status,0]
 29671                           	line	213
 29672                           	
 29673  2368                     l18116:	
 29674                           ;CC2500_B1.c: 212: unsigned char loop_b;
 29675                           ;CC2500_B1.c: 213: for(loop_b=0;loop_b<8;loop_b++)
 29676  2368  0020               	movlb 0	; select bank0
 29677  2369  01A1               	clrf	(CC2500_ReadByte@loop_b)
 29678                           	
 29679  236A                     l18118:	
 29680  236A  3008               	movlw	(08h)
 29681  236B  0221               	subwf	(CC2500_ReadByte@loop_b),w
 29682  236C  1C03               	skipc
 29683  236D  2B6F               	goto	u5281
 29684  236E  2B70               	goto	u5280
 29685  236F                     u5281:
 29686  236F  2B72               	goto	l2339
 29687  2370                     u5280:
 29688  2370  2B92               	goto	l2343
 29689                           	
 29690  2371                     l18120:	
 29691  2371  2B92               	goto	l2343
 29692                           	line	214
 29693                           	
 29694  2372                     l2339:	
 29695                           	line	215
 29696                           ;CC2500_B1.c: 214: {
 29697                           ;CC2500_B1.c: 215: RC1=1;
 29698  2372  148E               	bsf	(113/8),(113)&7
 29699                           	line	216
 29700                           	
 29701  2373                     l18122:	
 29702                           ;CC2500_B1.c: 216: SPI0Buffer<<=1;
 29703  2373  1003               	clrc
 29704  2374  0021               	movlb 1	; select bank1
 29705  2375  0DBE               	rlf	(_SPI0Buffer)^080h,f
 29706                           
 29707                           	line	217
 29708                           	
 29709  2376                     l18124:	
 29710                           ;CC2500_B1.c: 217: if(RC2 == 1)
 29711  2376  0020               	movlb 0	; select bank0
 29712  2377  1D0E               	btfss	(114/8),(114)&7
 29713  2378  2B7A               	goto	u5291
 29714  2379  2B7B               	goto	u5290
 29715  237A                     u5291:
 29716  237A  2B7E               	goto	l18128
 29717  237B                     u5290:
 29718                           	line	218
 29719                           	
 29720  237B                     l18126:	
 29721                           ;CC2500_B1.c: 218: SPI0Buffer |= 0x01;
 29722  237B  0021               	movlb 1	; select bank1
 29723  237C  143E               	bsf	(_SPI0Buffer)^080h+(0/8),(0)&7
 29724  237D  2B85               	goto	l18130
 29725                           	line	219
 29726                           	
 29727  237E                     l2341:	
 29728                           	line	220
 29729                           	
 29730  237E                     l18128:	
 29731                           ;CC2500_B1.c: 219: else
 29732                           ;CC2500_B1.c: 220: SPI0Buffer &= 0xFE;
 29733  237E  30FE               	movlw	(0FEh)
 29734  237F  0020               	movlb 0	; select bank0
 29735  2380  00A0               	movwf	(??_CC2500_ReadByte+0)+0
 29736  2381  0820               	movf	(??_CC2500_ReadByte+0)+0,w
 29737  2382  0021               	movlb 1	; select bank1
 29738  2383  05BE               	andwf	(_SPI0Buffer)^080h,f
 29739  2384  2B85               	goto	l18130
 29740                           	
 29741  2385                     l2342:	
 29742                           	line	221
 29743                           	
 29744  2385                     l18130:	
 29745                           ;CC2500_B1.c: 221: RC1=0;
 29746  2385  0020               	movlb 0	; select bank0
 29747  2386  108E               	bcf	(113/8),(113)&7
 29748                           	line	213
 29749  2387  3001               	movlw	(01h)
 29750  2388  00A0               	movwf	(??_CC2500_ReadByte+0)+0
 29751  2389  0820               	movf	(??_CC2500_ReadByte+0)+0,w
 29752  238A  07A1               	addwf	(CC2500_ReadByte@loop_b),f
 29753                           	
 29754  238B                     l18132:	
 29755  238B  3008               	movlw	(08h)
 29756  238C  0221               	subwf	(CC2500_ReadByte@loop_b),w
 29757  238D  1C03               	skipc
 29758  238E  2B90               	goto	u5301
 29759  238F  2B91               	goto	u5300
 29760  2390                     u5301:
 29761  2390  2B72               	goto	l2339
 29762  2391                     u5300:
 29763  2391  2B92               	goto	l2343
 29764                           	
 29765  2392                     l2340:	
 29766                           	line	223
 29767                           	
 29768  2392                     l2343:	
 29769  2392  0008               	return
 29770                           	opt stack 0
 29771                           GLOBAL	__end_of_CC2500_ReadByte
 29772  2393                     	__end_of_CC2500_ReadByte:
 29773 ;; =============== function _CC2500_ReadByte ends ============
 29774                           
 29775                           	signat	_CC2500_ReadByte,88
 29776                           	global	_CC2500_WriteByte
 29777                           psect	text5025,local,class=CODE,delta=2
 29778                           global __ptext5025
 29779  2257                     __ptext5025:
 29780                           
 29781 ;; *************** function _CC2500_WriteByte *****************
 29782 ;; Defined at:
 29783 ;;		line 194 in file "G:\Program\PIC\Source_File\CC2500_B1.c"
 29784 ;; Parameters:    Size  Location     Type
 29785 ;;		None
 29786 ;; Auto vars:     Size  Location     Type
 29787 ;;  loop_a          1    1[BANK0 ] unsigned char 
 29788 ;; Return value:  Size  Location     Type
 29789 ;;		None               void
 29790 ;; Registers used:
 29791 ;;		wreg, status,2, status,0
 29792 ;; Tracked objects:
 29793 ;;		On entry : 0/0
 29794 ;;		On exit  : 0/0
 29795 ;;		Unchanged: 0/0
 29796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 29797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 29798 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 29799 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 29800 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 29801 ;;Total ram usage:        2 bytes
 29802 ;; Hardware stack levels used:    1
 29803 ;; Hardware stack levels required when called:    4
 29804 ;; This function calls:
 29805 ;;		Nothing
 29806 ;; This function is called by:
 29807 ;;		_CC2500_TxData
 29808 ;;		_CC2500_RxData
 29809 ;;		_CC2500_PowerRST
 29810 ;;		_CC2500_WriteREG
 29811 ;;		_CC2500_WriteCommand
 29812 ;;		_CC2500_ReadStatus
 29813 ;;		_CC2500_ReadREG
 29814 ;; This function uses a non-reentrant model
 29815 ;;
 29816                           psect	text5025
 29817                           	file	"G:\Program\PIC\Source_File\CC2500_B1.c"
 29818                           	line	194
 29819                           	global	__size_of_CC2500_WriteByte
 29820  0026                     	__size_of_CC2500_WriteByte	equ	__end_of_CC2500_WriteByte-_CC2500_WriteByte
 29821                           	
 29822  2257                     _CC2500_WriteByte:	
 29823                           	opt	stack 8
 29824                           ; Regs used in _CC2500_WriteByte: [wreg+status,2+status,0]
 29825                           	line	196
 29826                           	
 29827  2257                     l18100:	
 29828                           ;CC2500_B1.c: 195: unsigned char loop_a;
 29829                           ;CC2500_B1.c: 196: for(loop_a=0;loop_a<8;loop_a++)
 29830  2257  0020               	movlb 0	; select bank0
 29831  2258  01A1               	clrf	(CC2500_WriteByte@loop_a)
 29832                           	
 29833  2259                     l18102:	
 29834  2259  3008               	movlw	(08h)
 29835  225A  0221               	subwf	(CC2500_WriteByte@loop_a),w
 29836  225B  1C03               	skipc
 29837  225C  2A5E               	goto	u5251
 29838  225D  2A5F               	goto	u5250
 29839  225E                     u5251:
 29840  225E  2A61               	goto	l2332
 29841  225F                     u5250:
 29842  225F  2A7C               	goto	l2336
 29843                           	
 29844  2260                     l18104:	
 29845  2260  2A7C               	goto	l2336
 29846                           	line	197
 29847                           	
 29848  2261                     l2332:	
 29849                           	line	198
 29850                           ;CC2500_B1.c: 197: {
 29851                           ;CC2500_B1.c: 198: if(SPI0Buffer&0x80)
 29852  2261  0021               	movlb 1	; select bank1
 29853  2262  1FBE               	btfss	(_SPI0Buffer)^080h,(7)&7
 29854  2263  2A65               	goto	u5261
 29855  2264  2A66               	goto	u5260
 29856  2265                     u5261:
 29857  2265  2A69               	goto	l2334
 29858  2266                     u5260:
 29859                           	line	199
 29860                           	
 29861  2266                     l18106:	
 29862                           ;CC2500_B1.c: 199: RC0=1;
 29863  2266  0020               	movlb 0	; select bank0
 29864  2267  140E               	bsf	(112/8),(112)&7
 29865  2268  2A6B               	goto	l2335
 29866                           	line	200
 29867                           	
 29868  2269                     l2334:	
 29869                           	line	201
 29870                           ;CC2500_B1.c: 200: else
 29871                           ;CC2500_B1.c: 201: RC0=0;
 29872  2269  0020               	movlb 0	; select bank0
 29873  226A  100E               	bcf	(112/8),(112)&7
 29874                           	
 29875  226B                     l2335:	
 29876                           	line	202
 29877                           ;CC2500_B1.c: 202: RC1=1;
 29878  226B  148E               	bsf	(113/8),(113)&7
 29879                           	line	203
 29880                           	
 29881  226C                     l18108:	
 29882                           ;CC2500_B1.c: 203: SPI0Buffer<<=1;
 29883  226C  1003               	clrc
 29884  226D  0021               	movlb 1	; select bank1
 29885  226E  0DBE               	rlf	(_SPI0Buffer)^080h,f
 29886                           
 29887                           	line	204
 29888                           	
 29889  226F                     l18110:	
 29890                           ;CC2500_B1.c: 204: RC1=0;
 29891  226F  0020               	movlb 0	; select bank0
 29892  2270  108E               	bcf	(113/8),(113)&7
 29893                           	line	196
 29894                           	
 29895  2271                     l18112:	
 29896  2271  3001               	movlw	(01h)
 29897  2272  00A0               	movwf	(??_CC2500_WriteByte+0)+0
 29898  2273  0820               	movf	(??_CC2500_WriteByte+0)+0,w
 29899  2274  07A1               	addwf	(CC2500_WriteByte@loop_a),f
 29900                           	
 29901  2275                     l18114:	
 29902  2275  3008               	movlw	(08h)
 29903  2276  0221               	subwf	(CC2500_WriteByte@loop_a),w
 29904  2277  1C03               	skipc
 29905  2278  2A7A               	goto	u5271
 29906  2279  2A7B               	goto	u5270
 29907  227A                     u5271:
 29908  227A  2A61               	goto	l2332
 29909  227B                     u5270:
 29910  227B  2A7C               	goto	l2336
 29911                           	
 29912  227C                     l2333:	
 29913                           	line	206
 29914                           	
 29915  227C                     l2336:	
 29916  227C  0008               	return
 29917                           	opt stack 0
 29918                           GLOBAL	__end_of_CC2500_WriteByte
 29919  227D                     	__end_of_CC2500_WriteByte:
 29920 ;; =============== function _CC2500_WriteByte ends ============
 29921                           
 29922                           	signat	_CC2500_WriteByte,88
 29923                           	global	_BuzPointSelect
 29924                           psect	text5026,local,class=CODE,delta=2
 29925                           global __ptext5026
 29926  2E68                     __ptext5026:
 29927                           
 29928 ;; *************** function _BuzPointSelect *****************
 29929 ;; Defined at:
 29930 ;;		line 10 in file "G:\Program\PIC\Source_File\Buzzer_B1.c"
 29931 ;; Parameters:    Size  Location     Type
 29932 ;;  buz             1    wreg     unsigned char 
 29933 ;; Auto vars:     Size  Location     Type
 29934 ;;  buz             1    1[BANK0 ] unsigned char 
 29935 ;; Return value:  Size  Location     Type
 29936 ;;		None               void
 29937 ;; Registers used:
 29938 ;;		wreg
 29939 ;; Tracked objects:
 29940 ;;		On entry : 0/0
 29941 ;;		On exit  : 0/0
 29942 ;;		Unchanged: 0/0
 29943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 29944 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 29945 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 29946 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 29947 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 29948 ;;Total ram usage:        2 bytes
 29949 ;; Hardware stack levels used:    1
 29950 ;; Hardware stack levels required when called:    4
 29951 ;; This function calls:
 29952 ;;		Nothing
 29953 ;; This function is called by:
 29954 ;;		_setBuz_Enable
 29955 ;;		_setBuz
 29956 ;;		_setBuz_Main
 29957 ;; This function uses a non-reentrant model
 29958 ;;
 29959                           psect	text5026
 29960                           	file	"G:\Program\PIC\Source_File\Buzzer_B1.c"
 29961                           	line	10
 29962                           	global	__size_of_BuzPointSelect
 29963  000E                     	__size_of_BuzPointSelect	equ	__end_of_BuzPointSelect-_BuzPointSelect
 29964                           	
 29965  2E68                     _BuzPointSelect:	
 29966                           	opt	stack 8
 29967                           ; Regs used in _BuzPointSelect: [wreg]
 29968                           ;BuzPointSelect@buz stored from wreg
 29969                           	line	12
 29970  2E68  0020               	movlb 0	; select bank0
 29971  2E69  00A1               	movwf	(BuzPointSelect@buz)
 29972                           	
 29973  2E6A                     l18096:	
 29974                           ;Buzzer_B1.c: 12: if(buz == 1)
 29975  2E6A  0821               	movf	(BuzPointSelect@buz),w
 29976  2E6B  3A01               	xorlw	01h&0ffh
 29977  2E6C  1D03               	skipz
 29978  2E6D  2E6F               	goto	u5241
 29979  2E6E  2E70               	goto	u5240
 29980  2E6F                     u5241:
 29981  2E6F  2E75               	goto	l1104
 29982  2E70                     u5240:
 29983                           	line	14
 29984                           	
 29985  2E70                     l18098:	
 29986                           ;Buzzer_B1.c: 13: {
 29987                           ;Buzzer_B1.c: 14: Buz=&Buz1;
 29988  2E70  303E               	movlw	(_Buz1)&0ffh
 29989  2E71  00A0               	movwf	(??_BuzPointSelect+0)+0
 29990  2E72  0820               	movf	(??_BuzPointSelect+0)+0,w
 29991  2E73  00F8               	movwf	(_Buz)
 29992  2E74  2E75               	goto	l1104
 29993                           	line	15
 29994                           	
 29995  2E75                     l1103:	
 29996                           	line	17
 29997                           	
 29998  2E75                     l1104:	
 29999  2E75  0008               	return
 30000                           	opt stack 0
 30001                           GLOBAL	__end_of_BuzPointSelect
 30002  2E76                     	__end_of_BuzPointSelect:
 30003 ;; =============== function _BuzPointSelect ends ============
 30004                           
 30005                           	signat	_BuzPointSelect,4216
 30006                           	global	_ISR
 30007                           psect	intentry,class=CODE,delta=2
 30008                           global __pintentry
 30009  0004                     __pintentry:
 30010                           
 30011 ;; *************** function _ISR *****************
 30012 ;; Defined at:
 30013 ;;		line 57 in file "G:\Program\PIC\Source_File\MCU_16f1518_B1.c"
 30014 ;; Parameters:    Size  Location     Type
 30015 ;;		None
 30016 ;; Auto vars:     Size  Location     Type
 30017 ;;		None
 30018 ;; Return value:  Size  Location     Type
 30019 ;;		None               void
 30020 ;; Registers used:
 30021 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
 30022 ;; Tracked objects:
 30023 ;;		On entry : 0/0
 30024 ;;		On exit  : 0/0
 30025 ;;		Unchanged: 0/0
 30026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 30027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 30028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 30029 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 30030 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 30031 ;;Total ram usage:        1 bytes
 30032 ;; Hardware stack levels used:    1
 30033 ;; Hardware stack levels required when called:    3
 30034 ;; This function calls:
 30035 ;;		_IOC_ISR
 30036 ;;		_TMR0_ISR
 30037 ;;		_INT_ISR
 30038 ;; This function is called by:
 30039 ;;		Interrupt level 1
 30040 ;; This function uses a non-reentrant model
 30041 ;;
 30042                           psect	intentry
 30043                           	file	"G:\Program\PIC\Source_File\MCU_16f1518_B1.c"
 30044                           	line	57
 30045                           	global	__size_of_ISR
 30046  0011                     	__size_of_ISR	equ	__end_of_ISR-_ISR
 30047                           	
 30048  0004                     _ISR:	
 30049                           	opt	stack 2
 30050                           ; Regs used in _ISR: [allreg]
 30051                           psect	intentry
 30052  0004  3180               	pagesel	$
 30053  0005  0020               	movlb 0	; select bank0
 30054  0006  087F               	movf	btemp+1,w
 30055  0007  00F7               	movwf	(??_ISR+0)
 30056                           	line	58
 30057                           	
 30058  0008                     i1l18292:	
 30059                           ;MCU_16f1518_B1.c: 58: IOC_ISR();
 30060  0008  31A1  21AD  3180   	fcall	_IOC_ISR
 30061                           	line	60
 30062                           	
 30063  000B                     i1l18294:	
 30064                           ;MCU_16f1518_B1.c: 60: TMR0_ISR();
 30065  000B  3183  232A  3180   	fcall	_TMR0_ISR
 30066                           	line	66
 30067                           	
 30068  000E                     i1l18296:	
 30069                           ;MCU_16f1518_B1.c: 62: ;;
 30070                           ;MCU_16f1518_B1.c: 66: INT_ISR();
 30071  000E  31A0  20E6  3180   	fcall	_INT_ISR
 30072                           	line	69
 30073                           	
 30074  0011                     i1l8320:	
 30075  0011  0877               	movf	(??_ISR+0),w
 30076  0012  0020               	movlb 0	; select bank0
 30077  0013  00FF               	movwf	btemp+1
 30078  0014  0009               	retfie
 30079                           	opt stack 0
 30080                           GLOBAL	__end_of_ISR
 30081  0015                     	__end_of_ISR:
 30082 ;; =============== function _ISR ends ============
 30083                           
 30084                           	signat	_ISR,88
 30085                           	global	_INT_ISR
 30086                           psect	text5028,local,class=CODE,delta=2
 30087                           global __ptext5028
 30088  20E6                     __ptext5028:
 30089                           
 30090 ;; *************** function _INT_ISR *****************
 30091 ;; Defined at:
 30092 ;;		line 181 in file "G:\Program\PIC\Source_File\MCU_16f1518_B1.c"
 30093 ;; Parameters:    Size  Location     Type
 30094 ;;		None
 30095 ;; Auto vars:     Size  Location     Type
 30096 ;;		None
 30097 ;; Return value:  Size  Location     Type
 30098 ;;		None               void
 30099 ;; Registers used:
 30100 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 30101 ;; Tracked objects:
 30102 ;;		On entry : 0/0
 30103 ;;		On exit  : 0/0
 30104 ;;		Unchanged: 0/0
 30105 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 30106 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 30107 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 30108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 30109 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 30110 ;;Total ram usage:        0 bytes
 30111 ;; Hardware stack levels used:    1
 30112 ;; Hardware stack levels required when called:    2
 30113 ;; This function calls:
 30114 ;;		_setRF_ReceiveGO
 30115 ;; This function is called by:
 30116 ;;		_ISR
 30117 ;; This function uses a non-reentrant model
 30118 ;;
 30119                           psect	text5028
 30120                           	file	"G:\Program\PIC\Source_File\MCU_16f1518_B1.c"
 30121                           	line	181
 30122                           	global	__size_of_INT_ISR
 30123  0013                     	__size_of_INT_ISR	equ	__end_of_INT_ISR-_INT_ISR
 30124                           	
 30125  20E6                     _INT_ISR:	
 30126                           	opt	stack 2
 30127                           ; Regs used in _INT_ISR: [wreg+fsr1l-status,0+pclath+cstack]
 30128                           	line	182
 30129                           	
 30130  20E6                     i1l18404:	
 30131                           ;MCU_16f1518_B1.c: 182: if(INTE && INTF)
 30132  20E6  1E0B               	btfss	(92/8),(92)&7
 30133  20E7  28E9               	goto	u575_21
 30134  20E8  28EA               	goto	u575_20
 30135  20E9                     u575_21:
 30136  20E9  28F8               	goto	i1l8365
 30137  20EA                     u575_20:
 30138                           	
 30139  20EA                     i1l18406:	
 30140  20EA  1C8B               	btfss	(89/8),(89)&7
 30141  20EB  28ED               	goto	u576_21
 30142  20EC  28EE               	goto	u576_20
 30143  20ED                     u576_21:
 30144  20ED  28F8               	goto	i1l8365
 30145  20EE                     u576_20:
 30146                           	line	184
 30147                           	
 30148  20EE                     i1l18408:	
 30149                           ;MCU_16f1518_B1.c: 183: {
 30150                           ;MCU_16f1518_B1.c: 184: INTF=0;
 30151  20EE  108B               	bcf	(89/8),(89)&7
 30152                           	line	185
 30153                           ;MCU_16f1518_B1.c: 185: INTE=0;
 30154  20EF  120B               	bcf	(92/8),(92)&7
 30155                           	line	186
 30156                           	
 30157  20F0                     i1l18410:	
 30158                           ;MCU_16f1518_B1.c: 186: setRF_ReceiveGO(1,1);
 30159  20F0  01F3               	clrf	(?_setRF_ReceiveGO)
 30160  20F1  1403               	bsf	status,0
 30161  20F2  0DF3               	rlf	(?_setRF_ReceiveGO),f
 30162  20F3  3001               	movlw	(01h)
 30163  20F4  31AE  260C  31A0   	fcall	_setRF_ReceiveGO
 30164  20F7  28F8               	goto	i1l8365
 30165                           	line	187
 30166                           	
 30167  20F8                     i1l8364:	
 30168                           	line	188
 30169                           	
 30170  20F8                     i1l8365:	
 30171  20F8  0008               	return
 30172                           	opt stack 0
 30173                           GLOBAL	__end_of_INT_ISR
 30174  20F9                     	__end_of_INT_ISR:
 30175 ;; =============== function _INT_ISR ends ============
 30176                           
 30177                           	signat	_INT_ISR,88
 30178                           	global	_TMR0_ISR
 30179                           psect	text5029,local,class=CODE,delta=2
 30180                           global __ptext5029
 30181  032A                     __ptext5029:
 30182                           
 30183 ;; *************** function _TMR0_ISR *****************
 30184 ;; Defined at:
 30185 ;;		line 84 in file "G:\Program\PIC\Source_File\MCU_16f1518_B1.c"
 30186 ;; Parameters:    Size  Location     Type
 30187 ;;		None
 30188 ;; Auto vars:     Size  Location     Type
 30189 ;;		None
 30190 ;; Return value:  Size  Location     Type
 30191 ;;		None               void
 30192 ;; Registers used:
 30193 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 30194 ;; Tracked objects:
 30195 ;;		On entry : 0/0
 30196 ;;		On exit  : 0/0
 30197 ;;		Unchanged: 0/0
 30198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 30199 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 30200 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 30201 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 30202 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 30203 ;;Total ram usage:        1 bytes
 30204 ;; Hardware stack levels used:    1
 30205 ;; Hardware stack levels required when called:    2
 30206 ;; This function calls:
 30207 ;;		i1_setLoad_StatusOff
 30208 ;; This function is called by:
 30209 ;;		_ISR
 30210 ;; This function uses a non-reentrant model
 30211 ;;
 30212                           psect	text5029
 30213                           	file	"G:\Program\PIC\Source_File\MCU_16f1518_B1.c"
 30214                           	line	84
 30215                           	global	__size_of_TMR0_ISR
 30216  01D3                     	__size_of_TMR0_ISR	equ	__end_of_TMR0_ISR-_TMR0_ISR
 30217                           	
 30218  032A                     _TMR0_ISR:	
 30219                           	opt	stack 2
 30220                           ; Regs used in _TMR0_ISR: [wreg-status,0+pclath+cstack]
 30221                           	line	85
 30222                           	
 30223  032A                     i1l18310:	
 30224                           ;MCU_16f1518_B1.c: 85: if(TMR0IE && TMR0IF)
 30225  032A  1E8B               	btfss	(93/8),(93)&7
 30226  032B  2B2D               	goto	u553_21
 30227  032C  2B2E               	goto	u553_20
 30228  032D                     u553_21:
 30229  032D  2CFC               	goto	i1l8355
 30230  032E                     u553_20:
 30231                           	
 30232  032E                     i1l18312:	
 30233  032E  1D0B               	btfss	(90/8),(90)&7
 30234  032F  2B31               	goto	u554_21
 30235  0330  2B32               	goto	u554_20
 30236  0331                     u554_21:
 30237  0331  2CFC               	goto	i1l8355
 30238  0332                     u554_20:
 30239                           	line	87
 30240                           	
 30241  0332                     i1l18314:	
 30242                           ;MCU_16f1518_B1.c: 86: {
 30243                           ;MCU_16f1518_B1.c: 87: TMR0=(256-90);
 30244  0332  30A6               	movlw	(0A6h)
 30245  0333  0020               	movlb 0	; select bank0
 30246  0334  0095               	movwf	(21)	;volatile
 30247                           	line	88
 30248                           	
 30249  0335                     i1l18316:	
 30250                           ;MCU_16f1518_B1.c: 88: TMR0IF=0;
 30251  0335  110B               	bcf	(90/8),(90)&7
 30252                           	line	93
 30253                           	
 30254  0336                     i1l18318:	
 30255                           ;MCU_16f1518_B1.c: 93: if(DimmerLights11->GO) { DimmerLights11->Count++; if(DimmerLights
                                 11->Count >= DimmerLights11->DimmingValue) { DimmerLights11->Count=0; DimmerLights11->GO
                                 =0; DimmerLights11->Flag=1; if(DimmerLights11->StatusFlag) { RB4=1; RA7=1; } } } else { 
                                 if(Dimmer
 30256  0336  087A               	movf	(_DimmerLights11),w
 30257  0337  0086               	movwf	fsr1l
 30258  0338  3001               	movlw 1	; select bank2/3
 30259  0339  0087               	movwf fsr1h	
 30260                           	
 30261  033A  1C01               	btfss	indf1,0
 30262  033B  2B3D               	goto	u555_21
 30263  033C  2B3E               	goto	u555_20
 30264  033D                     u555_21:
 30265  033D  2B75               	goto	i1l18328
 30266  033E                     u555_20:
 30267                           	
 30268  033E                     i1l18320:	
 30269  033E  3001               	movlw	(01h)
 30270  033F  00F6               	movwf	(??_TMR0_ISR+0)+0
 30271  0340  087A               	movf	(_DimmerLights11),w
 30272  0341  3E03               	addlw	03h
 30273  0342  0086               	movwf	fsr1l
 30274  0343  3001               	movlw 1	; select bank2/3
 30275  0344  0087               	movwf fsr1h	
 30276                           	
 30277  0345  0876               	movf	(??_TMR0_ISR+0)+0,w
 30278  0346  0781               	addwf	indf1,f
 30279                           	
 30280  0347                     i1l18322:	
 30281  0347  087A               	movf	(_DimmerLights11),w
 30282  0348  3E03               	addlw	03h
 30283  0349  0086               	movwf	fsr1l
 30284  034A  3001               	movlw 1	; select bank2/3
 30285  034B  0087               	movwf fsr1h	
 30286                           	
 30287  034C  087A               	movf	(_DimmerLights11),w
 30288  034D  3E04               	addlw	04h
 30289  034E  0084               	movwf	fsr0l
 30290  034F  3001               	movlw 1	; select bank2/3
 30291  0350  0085               	movwf fsr0h	
 30292                           	
 30293  0351  0800               	movf	indf0,w
 30294  0352  0201               	subwf	indf1,w
 30295  0353  1C03               	skipc
 30296  0354  2B56               	goto	u556_21
 30297  0355  2B57               	goto	u556_20
 30298  0356                     u556_21:
 30299  0356  2CD5               	goto	i1l18398
 30300  0357                     u556_20:
 30301                           	
 30302  0357                     i1l18324:	
 30303  0357  087A               	movf	(_DimmerLights11),w
 30304  0358  3E03               	addlw	03h
 30305  0359  0086               	movwf	fsr1l
 30306  035A  3001               	movlw 1	; select bank2/3
 30307  035B  0087               	movwf fsr1h	
 30308                           	
 30309  035C  0181               	clrf	indf1
 30310  035D  087A               	movf	(_DimmerLights11),w
 30311  035E  0086               	movwf	fsr1l
 30312  035F  3001               	movlw 1	; select bank2/3
 30313  0360  0087               	movwf fsr1h	
 30314                           	
 30315  0361  1001               	bcf	indf1,0
 30316  0362  087A               	movf	(_DimmerLights11),w
 30317  0363  3E07               	addlw	07h
 30318  0364  0086               	movwf	fsr1l
 30319  0365  3001               	movlw 1	; select bank2/3
 30320  0366  0087               	movwf fsr1h	
 30321                           	
 30322  0367  1401               	bsf	indf1,0
 30323  0368  087A               	movf	(_DimmerLights11),w
 30324  0369  0086               	movwf	fsr1l
 30325  036A  3001               	movlw 1	; select bank2/3
 30326  036B  0087               	movwf fsr1h	
 30327                           	
 30328  036C  1F01               	btfss	indf1,6
 30329  036D  2B6F               	goto	u557_21
 30330  036E  2B70               	goto	u557_20
 30331  036F                     u557_21:
 30332  036F  2CD5               	goto	i1l18398
 30333  0370                     u557_20:
 30334                           	
 30335  0370                     i1l18326:	
 30336  0370  160D               	bsf	(108/8),(108)&7
 30337  0371  178C               	bsf	(103/8),(103)&7
 30338  0372  2CD5               	goto	i1l18398
 30339                           	
 30340  0373                     i1l8329:	
 30341  0373  2CD5               	goto	i1l18398
 30342                           	
 30343  0374                     i1l8328:	
 30344  0374  2CD5               	goto	i1l18398
 30345                           	
 30346  0375                     i1l8327:	
 30347                           	
 30348  0375                     i1l18328:	
 30349  0375  087A               	movf	(_DimmerLights11),w
 30350  0376  3E07               	addlw	07h
 30351  0377  0086               	movwf	fsr1l
 30352  0378  3001               	movlw 1	; select bank2/3
 30353  0379  0087               	movwf fsr1h	
 30354                           	
 30355  037A  1C01               	btfss	indf1,0
 30356  037B  2B7D               	goto	u558_21
 30357  037C  2B7E               	goto	u558_20
 30358  037D                     u558_21:
 30359  037D  2CB1               	goto	i1l18386
 30360  037E                     u558_20:
 30361                           	
 30362  037E                     i1l18330:	
 30363  037E  087A               	movf	(_DimmerLights11),w
 30364  037F  3E07               	addlw	07h
 30365  0380  0086               	movwf	fsr1l
 30366  0381  3001               	movlw 1	; select bank2/3
 30367  0382  0087               	movwf fsr1h	
 30368                           	
 30369  0383  1001               	bcf	indf1,0
 30370  0384  087A               	movf	(_DimmerLights11),w
 30371  0385  0086               	movwf	fsr1l
 30372  0386  3001               	movlw 1	; select bank2/3
 30373  0387  0087               	movwf fsr1h	
 30374                           	
 30375  0388  1C81               	btfss	indf1,1
 30376  0389  2B8B               	goto	u559_21
 30377  038A  2B8C               	goto	u559_20
 30378  038B                     u559_21:
 30379  038B  2CB1               	goto	i1l18386
 30380  038C                     u559_20:
 30381                           	
 30382  038C                     i1l18332:	
 30383  038C  3001               	movlw	(01h)
 30384  038D  00F6               	movwf	(??_TMR0_ISR+0)+0
 30385  038E  087A               	movf	(_DimmerLights11),w
 30386  038F  3E01               	addlw	01h
 30387  0390  0086               	movwf	fsr1l
 30388  0391  3001               	movlw 1	; select bank2/3
 30389  0392  0087               	movwf fsr1h	
 30390                           	
 30391  0393  0876               	movf	(??_TMR0_ISR+0)+0,w
 30392  0394  0781               	addwf	indf1,f
 30393                           	
 30394  0395                     i1l18334:	
 30395  0395  087A               	movf	(_DimmerLights11),w
 30396  0396  3E01               	addlw	01h
 30397  0397  0086               	movwf	fsr1l
 30398  0398  3001               	movlw 1	; select bank2/3
 30399  0399  0087               	movwf fsr1h	
 30400                           	
 30401  039A  087A               	movf	(_DimmerLights11),w
 30402  039B  3E02               	addlw	02h
 30403  039C  0084               	movwf	fsr0l
 30404  039D  3001               	movlw 1	; select bank2/3
 30405  039E  0085               	movwf fsr0h	
 30406                           	
 30407  039F  0800               	movf	indf0,w
 30408  03A0  0201               	subwf	indf1,w
 30409  03A1  1C03               	skipc
 30410  03A2  2BA4               	goto	u560_21
 30411  03A3  2BA5               	goto	u560_20
 30412  03A4                     u560_21:
 30413  03A4  2CB1               	goto	i1l18386
 30414  03A5                     u560_20:
 30415                           	
 30416  03A5                     i1l18336:	
 30417  03A5  087A               	movf	(_DimmerLights11),w
 30418  03A6  3E01               	addlw	01h
 30419  03A7  0086               	movwf	fsr1l
 30420  03A8  3001               	movlw 1	; select bank2/3
 30421  03A9  0087               	movwf fsr1h	
 30422                           	
 30423  03AA  0181               	clrf	indf1
 30424  03AB  087A               	movf	(_DimmerLights11),w
 30425  03AC  0086               	movwf	fsr1l
 30426  03AD  3001               	movlw 1	; select bank2/3
 30427  03AE  0087               	movwf fsr1h	
 30428                           	
 30429  03AF  1D81               	btfss	indf1,3
 30430  03B0  2BB2               	goto	u561_21
 30431  03B1  2BB3               	goto	u561_20
 30432  03B2                     u561_21:
 30433  03B2  2BF2               	goto	i1l18352
 30434  03B3                     u561_20:
 30435                           	
 30436  03B3                     i1l18338:	
 30437  03B3  087A               	movf	(_DimmerLights11),w
 30438  03B4  0086               	movwf	fsr1l
 30439  03B5  3001               	movlw 1	; select bank2/3
 30440  03B6  0087               	movwf fsr1h	
 30441                           	
 30442  03B7  1A01               	btfsc	indf1,4
 30443  03B8  2BBA               	goto	u562_21
 30444  03B9  2BBB               	goto	u562_20
 30445  03BA                     u562_21:
 30446  03BA  2BD5               	goto	i1l18346
 30447  03BB                     u562_20:
 30448                           	
 30449  03BB                     i1l18340:	
 30450  03BB  087A               	movf	(_DimmerLights11),w
 30451  03BC  3E04               	addlw	04h
 30452  03BD  0086               	movwf	fsr1l
 30453  03BE  3001               	movlw 1	; select bank2/3
 30454  03BF  0087               	movwf fsr1h	
 30455                           	
 30456  03C0  3026               	movlw	(026h)
 30457  03C1  0201               	subwf	indf1,w
 30458  03C2  1C03               	skipc
 30459  03C3  2BC5               	goto	u563_21
 30460  03C4  2BC6               	goto	u563_20
 30461  03C5                     u563_21:
 30462  03C5  2BCE               	goto	i1l18344
 30463  03C6                     u563_20:
 30464                           	
 30465  03C6                     i1l18342:	
 30466  03C6  087A               	movf	(_DimmerLights11),w
 30467  03C7  3E04               	addlw	04h
 30468  03C8  0086               	movwf	fsr1l
 30469  03C9  3001               	movlw 1	; select bank2/3
 30470  03CA  0087               	movwf fsr1h	
 30471                           	
 30472  03CB  3001               	movlw	low(01h)
 30473  03CC  0281               	subwf	indf1,f
 30474  03CD  2CB1               	goto	i1l18386
 30475                           	
 30476  03CE                     i1l8336:	
 30477                           	
 30478  03CE                     i1l18344:	
 30479  03CE  087A               	movf	(_DimmerLights11),w
 30480  03CF  0086               	movwf	fsr1l
 30481  03D0  3001               	movlw 1	; select bank2/3
 30482  03D1  0087               	movwf fsr1h	
 30483                           	
 30484  03D2  1601               	bsf	indf1,4
 30485  03D3  2CB1               	goto	i1l18386
 30486                           	
 30487  03D4                     i1l8337:	
 30488  03D4  2CB1               	goto	i1l18386
 30489                           	
 30490  03D5                     i1l8335:	
 30491                           	
 30492  03D5                     i1l18346:	
 30493  03D5  087A               	movf	(_DimmerLights11),w
 30494  03D6  3E04               	addlw	04h
 30495  03D7  0086               	movwf	fsr1l
 30496  03D8  3001               	movlw 1	; select bank2/3
 30497  03D9  0087               	movwf fsr1h	
 30498                           	
 30499  03DA  3078               	movlw	(078h)
 30500  03DB  0201               	subwf	indf1,w
 30501  03DC  1803               	skipnc
 30502  03DD  2BDF               	goto	u564_21
 30503  03DE  2BE0               	goto	u564_20
 30504  03DF                     u564_21:
 30505  03DF  2BEA               	goto	i1l18350
 30506  03E0                     u564_20:
 30507                           	
 30508  03E0                     i1l18348:	
 30509  03E0  3001               	movlw	(01h)
 30510  03E1  00F6               	movwf	(??_TMR0_ISR+0)+0
 30511  03E2  087A               	movf	(_DimmerLights11),w
 30512  03E3  3E04               	addlw	04h
 30513  03E4  0086               	movwf	fsr1l
 30514  03E5  3001               	movlw 1	; select bank2/3
 30515  03E6  0087               	movwf fsr1h	
 30516                           	
 30517  03E7  0876               	movf	(??_TMR0_ISR+0)+0,w
 30518  03E8  0781               	addwf	indf1,f
 30519  03E9  2CB1               	goto	i1l18386
 30520                           	
 30521  03EA                     i1l8339:	
 30522                           	
 30523  03EA                     i1l18350:	
 30524  03EA  087A               	movf	(_DimmerLights11),w
 30525  03EB  0086               	movwf	fsr1l
 30526  03EC  3001               	movlw 1	; select bank2/3
 30527  03ED  0087               	movwf fsr1h	
 30528                           	
 30529  03EE  1201               	bcf	indf1,4
 30530  03EF  2CB1               	goto	i1l18386
 30531                           	
 30532  03F0                     i1l8340:	
 30533  03F0  2CB1               	goto	i1l18386
 30534                           	
 30535  03F1                     i1l8338:	
 30536  03F1  2CB1               	goto	i1l18386
 30537                           	
 30538  03F2                     i1l8334:	
 30539                           	
 30540  03F2                     i1l18352:	
 30541  03F2  087A               	movf	(_DimmerLights11),w
 30542  03F3  0086               	movwf	fsr1l
 30543  03F4  3001               	movlw 1	; select bank2/3
 30544  03F5  0087               	movwf fsr1h	
 30545                           	
 30546  03F6  1D01               	btfss	indf1,2
 30547  03F7  2BF9               	goto	u565_21
 30548  03F8  2BFA               	goto	u565_20
 30549  03F9                     u565_21:
 30550  03F9  2C49               	goto	i1l18366
 30551  03FA                     u565_20:
 30552                           	
 30553  03FA                     i1l18354:	
 30554  03FA  087A               	movf	(_DimmerLights11),w
 30555  03FB  3E05               	addlw	05h
 30556  03FC  0086               	movwf	fsr1l
 30557  03FD  3001               	movlw 1	; select bank2/3
 30558  03FE  0087               	movwf fsr1h	
 30559                           	
 30560  03FF  087A               	movf	(_DimmerLights11),w
 30561  0400  3E04               	addlw	04h
 30562  0401  0084               	movwf	fsr0l
 30563  0402  3001               	movlw 1	; select bank2/3
 30564  0403  0085               	movwf fsr0h	
 30565                           	
 30566  0404  0800               	movf	indf0,w
 30567  0405  0201               	subwf	indf1,w
 30568  0406  1803               	skipnc
 30569  0407  2C09               	goto	u566_21
 30570  0408  2C0A               	goto	u566_20
 30571  0409                     u566_21:
 30572  0409  2C12               	goto	i1l18358
 30573  040A                     u566_20:
 30574                           	
 30575  040A                     i1l18356:	
 30576  040A  087A               	movf	(_DimmerLights11),w
 30577  040B  3E04               	addlw	04h
 30578  040C  0086               	movwf	fsr1l
 30579  040D  3001               	movlw 1	; select bank2/3
 30580  040E  0087               	movwf fsr1h	
 30581                           	
 30582  040F  3001               	movlw	low(01h)
 30583  0410  0281               	subwf	indf1,f
 30584  0411  2C2D               	goto	i1l18362
 30585                           	
 30586  0412                     i1l8343:	
 30587                           	
 30588  0412                     i1l18358:	
 30589  0412  087A               	movf	(_DimmerLights11),w
 30590  0413  3E04               	addlw	04h
 30591  0414  0086               	movwf	fsr1l
 30592  0415  3001               	movlw 1	; select bank2/3
 30593  0416  0087               	movwf fsr1h	
 30594                           	
 30595  0417  087A               	movf	(_DimmerLights11),w
 30596  0418  3E05               	addlw	05h
 30597  0419  0084               	movwf	fsr0l
 30598  041A  3001               	movlw 1	; select bank2/3
 30599  041B  0085               	movwf fsr0h	
 30600                           	
 30601  041C  0800               	movf	indf0,w
 30602  041D  0201               	subwf	indf1,w
 30603  041E  1803               	skipnc
 30604  041F  2C21               	goto	u567_21
 30605  0420  2C22               	goto	u567_20
 30606  0421                     u567_21:
 30607  0421  2C2D               	goto	i1l18362
 30608  0422                     u567_20:
 30609                           	
 30610  0422                     i1l18360:	
 30611  0422  3001               	movlw	(01h)
 30612  0423  00F6               	movwf	(??_TMR0_ISR+0)+0
 30613  0424  087A               	movf	(_DimmerLights11),w
 30614  0425  3E04               	addlw	04h
 30615  0426  0086               	movwf	fsr1l
 30616  0427  3001               	movlw 1	; select bank2/3
 30617  0428  0087               	movwf fsr1h	
 30618                           	
 30619  0429  0876               	movf	(??_TMR0_ISR+0)+0,w
 30620  042A  0781               	addwf	indf1,f
 30621  042B  2C2D               	goto	i1l18362
 30622                           	
 30623  042C                     i1l8345:	
 30624  042C  2C2D               	goto	i1l18362
 30625                           	
 30626  042D                     i1l8344:	
 30627                           	
 30628  042D                     i1l18362:	
 30629  042D  087A               	movf	(_DimmerLights11),w
 30630  042E  3E05               	addlw	05h
 30631  042F  0086               	movwf	fsr1l
 30632  0430  3001               	movlw 1	; select bank2/3
 30633  0431  0087               	movwf fsr1h	
 30634                           	
 30635  0432  087A               	movf	(_DimmerLights11),w
 30636  0433  3E04               	addlw	04h
 30637  0434  0084               	movwf	fsr0l
 30638  0435  3001               	movlw 1	; select bank2/3
 30639  0436  0085               	movwf fsr0h	
 30640                           	
 30641  0437  0800               	movf	indf0,w
 30642  0438  0601               	xorwf	indf1,w
 30643  0439  1D03               	skipz
 30644  043A  2C3C               	goto	u568_21
 30645  043B  2C3D               	goto	u568_20
 30646  043C                     u568_21:
 30647  043C  2CB1               	goto	i1l18386
 30648  043D                     u568_20:
 30649                           	
 30650  043D                     i1l18364:	
 30651  043D  087A               	movf	(_DimmerLights11),w
 30652  043E  0086               	movwf	fsr1l
 30653  043F  3001               	movlw 1	; select bank2/3
 30654  0440  0087               	movwf fsr1h	
 30655                           	
 30656  0441  1101               	bcf	indf1,2
 30657  0442  087A               	movf	(_DimmerLights11),w
 30658  0443  0086               	movwf	fsr1l
 30659  0444  3001               	movlw 1	; select bank2/3
 30660  0445  0087               	movwf fsr1h	
 30661                           	
 30662  0446  1081               	bcf	indf1,1
 30663  0447  2CB1               	goto	i1l18386
 30664                           	
 30665  0448                     i1l8346:	
 30666  0448  2CB1               	goto	i1l18386
 30667                           	
 30668  0449                     i1l8342:	
 30669                           	
 30670  0449                     i1l18366:	
 30671  0449  087A               	movf	(_DimmerLights11),w
 30672  044A  0086               	movwf	fsr1l
 30673  044B  3001               	movlw 1	; select bank2/3
 30674  044C  0087               	movwf fsr1h	
 30675                           	
 30676  044D  1E81               	btfss	indf1,5
 30677  044E  2C50               	goto	u569_21
 30678  044F  2C51               	goto	u569_20
 30679  0450                     u569_21:
 30680  0450  2C6F               	goto	i1l18374
 30681  0451                     u569_20:
 30682                           	
 30683  0451                     i1l18368:	
 30684  0451  087A               	movf	(_DimmerLights11),w
 30685  0452  3E04               	addlw	04h
 30686  0453  0086               	movwf	fsr1l
 30687  0454  3001               	movlw 1	; select bank2/3
 30688  0455  0087               	movwf fsr1h	
 30689                           	
 30690  0456  3001               	movlw	low(01h)
 30691  0457  0281               	subwf	indf1,f
 30692                           	
 30693  0458                     i1l18370:	
 30694  0458  087A               	movf	(_DimmerLights11),w
 30695  0459  3E05               	addlw	05h
 30696  045A  0086               	movwf	fsr1l
 30697  045B  3001               	movlw 1	; select bank2/3
 30698  045C  0087               	movwf fsr1h	
 30699                           	
 30700  045D  087A               	movf	(_DimmerLights11),w
 30701  045E  3E04               	addlw	04h
 30702  045F  0084               	movwf	fsr0l
 30703  0460  3001               	movlw 1	; select bank2/3
 30704  0461  0085               	movwf fsr0h	
 30705                           	
 30706  0462  0800               	movf	indf0,w
 30707  0463  0201               	subwf	indf1,w
 30708  0464  1C03               	skipc
 30709  0465  2C67               	goto	u570_21
 30710  0466  2C68               	goto	u570_20
 30711  0467                     u570_21:
 30712  0467  2CB1               	goto	i1l18386
 30713  0468                     u570_20:
 30714                           	
 30715  0468                     i1l18372:	
 30716  0468  087A               	movf	(_DimmerLights11),w
 30717  0469  0086               	movwf	fsr1l
 30718  046A  3001               	movlw 1	; select bank2/3
 30719  046B  0087               	movwf fsr1h	
 30720                           	
 30721  046C  1081               	bcf	indf1,1
 30722  046D  2CB1               	goto	i1l18386
 30723                           	
 30724  046E                     i1l8349:	
 30725  046E  2CB1               	goto	i1l18386
 30726                           	
 30727  046F                     i1l8348:	
 30728                           	
 30729  046F                     i1l18374:	
 30730  046F  3001               	movlw	(01h)
 30731  0470  00F6               	movwf	(??_TMR0_ISR+0)+0
 30732  0471  087A               	movf	(_DimmerLights11),w
 30733  0472  3E04               	addlw	04h
 30734  0473  0086               	movwf	fsr1l
 30735  0474  3001               	movlw 1	; select bank2/3
 30736  0475  0087               	movwf fsr1h	
 30737                           	
 30738  0476  0876               	movf	(??_TMR0_ISR+0)+0,w
 30739  0477  0781               	addwf	indf1,f
 30740                           	
 30741  0478                     i1l18376:	
 30742  0478  087A               	movf	(_DimmerLights11),w
 30743  0479  3E04               	addlw	04h
 30744  047A  0086               	movwf	fsr1l
 30745  047B  3001               	movlw 1	; select bank2/3
 30746  047C  0087               	movwf fsr1h	
 30747                           	
 30748  047D  087A               	movf	(_DimmerLights11),w
 30749  047E  3E06               	addlw	06h
 30750  047F  0084               	movwf	fsr0l
 30751  0480  3001               	movlw 1	; select bank2/3
 30752  0481  0085               	movwf fsr0h	
 30753                           	
 30754  0482  0800               	movf	indf0,w
 30755  0483  0201               	subwf	indf1,w
 30756  0484  1C03               	skipc
 30757  0485  2C87               	goto	u571_21
 30758  0486  2C88               	goto	u571_20
 30759  0487                     u571_21:
 30760  0487  2CB1               	goto	i1l18386
 30761  0488                     u571_20:
 30762                           	
 30763  0488                     i1l18378:	
 30764  0488  087A               	movf	(_DimmerLights11),w
 30765  0489  0086               	movwf	fsr1l
 30766  048A  3001               	movlw 1	; select bank2/3
 30767  048B  0087               	movwf fsr1h	
 30768                           	
 30769  048C  1081               	bcf	indf1,1
 30770  048D  087A               	movf	(_DimmerLights11),w
 30771  048E  0086               	movwf	fsr1l
 30772  048F  3001               	movlw 1	; select bank2/3
 30773  0490  0087               	movwf fsr1h	
 30774                           	
 30775  0491  1301               	bcf	indf1,6
 30776  0492  087A               	movf	(_DimmerLights11),w
 30777  0493  3E09               	addlw	09h
 30778  0494  0086               	movwf	fsr1l
 30779  0495  3001               	movlw 1	; select bank2/3
 30780  0496  0087               	movwf fsr1h	
 30781                           	
 30782  0497  1701               	bsf	indf1,6
 30783  0498  0021               	movlb 1	; select bank1
 30784  0499  0838               	movf	(_Dimmer)^080h,w
 30785  049A  0086               	movwf	fsr1l
 30786  049B  0187               	clrf fsr1h	
 30787                           	
 30788  049C  1581               	bsf	indf1,3
 30789                           	
 30790  049D                     i1l18380:	
 30791  049D  0020               	movlb 0	; select bank0
 30792  049E  138E               	bcf	(119/8),(119)&7
 30793                           	
 30794  049F                     i1l18382:	
 30795  049F  118C               	bcf	(99/8),(99)&7
 30796                           	
 30797  04A0                     i1l18384:	
 30798  04A0  01F3               	clrf	(?i1_setLoad_StatusOff)
 30799  04A1  1403               	bsf	status,0
 30800  04A2  0DF3               	rlf	(?i1_setLoad_StatusOff),f
 30801  04A3  01F4               	clrf	0+(?i1_setLoad_StatusOff)+01h
 30802  04A4  1403               	bsf	status,0
 30803  04A5  0DF4               	rlf	0+(?i1_setLoad_StatusOff)+01h,f
 30804  04A6  3001               	movlw	(01h)
 30805  04A7  31A5  2518  3183   	fcall	i1_setLoad_StatusOff
 30806  04AA  2CB1               	goto	i1l18386
 30807                           	
 30808  04AB                     i1l8351:	
 30809  04AB  2CB1               	goto	i1l18386
 30810                           	
 30811  04AC                     i1l8350:	
 30812  04AC  2CB1               	goto	i1l18386
 30813                           	
 30814  04AD                     i1l8347:	
 30815  04AD  2CB1               	goto	i1l18386
 30816                           	
 30817  04AE                     i1l8341:	
 30818  04AE  2CB1               	goto	i1l18386
 30819                           	
 30820  04AF                     i1l8333:	
 30821  04AF  2CB1               	goto	i1l18386
 30822                           	
 30823  04B0                     i1l8332:	
 30824  04B0  2CB1               	goto	i1l18386
 30825                           	
 30826  04B1                     i1l8331:	
 30827                           	
 30828  04B1                     i1l18386:	
 30829  04B1  0020               	movlb 0	; select bank0
 30830  04B2  1E0D               	btfss	(108/8),(108)&7
 30831  04B3  2CB5               	goto	u572_21
 30832  04B4  2CB6               	goto	u572_20
 30833  04B5                     u572_21:
 30834  04B5  2CD5               	goto	i1l18398
 30835  04B6                     u572_20:
 30836                           	
 30837  04B6                     i1l18388:	
 30838  04B6  3001               	movlw	(01h)
 30839  04B7  00F6               	movwf	(??_TMR0_ISR+0)+0
 30840  04B8  087A               	movf	(_DimmerLights11),w
 30841  04B9  3E08               	addlw	08h
 30842  04BA  0086               	movwf	fsr1l
 30843  04BB  3001               	movlw 1	; select bank2/3
 30844  04BC  0087               	movwf fsr1h	
 30845                           	
 30846  04BD  0876               	movf	(??_TMR0_ISR+0)+0,w
 30847  04BE  0781               	addwf	indf1,f
 30848                           	
 30849  04BF                     i1l18390:	
 30850  04BF  087A               	movf	(_DimmerLights11),w
 30851  04C0  3E08               	addlw	08h
 30852  04C1  0086               	movwf	fsr1l
 30853  04C2  3001               	movlw 1	; select bank2/3
 30854  04C3  0087               	movwf fsr1h	
 30855                           	
 30856  04C4  0801               	movf	indf1,w
 30857  04C5  3A00               	xorlw	0&0ffh
 30858  04C6  1903               	skipnz
 30859  04C7  2CC9               	goto	u573_21
 30860  04C8  2CCA               	goto	u573_20
 30861  04C9                     u573_21:
 30862  04C9  2CD5               	goto	i1l18398
 30863  04CA                     u573_20:
 30864                           	
 30865  04CA                     i1l18392:	
 30866  04CA  087A               	movf	(_DimmerLights11),w
 30867  04CB  3E08               	addlw	08h
 30868  04CC  0086               	movwf	fsr1l
 30869  04CD  3001               	movlw 1	; select bank2/3
 30870  04CE  0087               	movwf fsr1h	
 30871                           	
 30872  04CF  0181               	clrf	indf1
 30873                           	
 30874  04D0                     i1l18394:	
 30875  04D0  120D               	bcf	(108/8),(108)&7
 30876                           	
 30877  04D1                     i1l18396:	
 30878  04D1  138C               	bcf	(103/8),(103)&7
 30879  04D2  2CD5               	goto	i1l18398
 30880                           	
 30881  04D3                     i1l8353:	
 30882  04D3  2CD5               	goto	i1l18398
 30883                           	
 30884  04D4                     i1l8352:	
 30885  04D4  2CD5               	goto	i1l18398
 30886                           	
 30887  04D5                     i1l8330:	
 30888                           	line	106
 30889                           	
 30890  04D5                     i1l18398:	
 30891                           ;MCU_16f1518_B1.c: 106: Timer0->Count++;
 30892  04D5  0021               	movlb 1	; select bank1
 30893  04D6  0868               	movf	(_Timer0)^080h,w
 30894  04D7  3E01               	addlw	01h
 30895  04D8  0086               	movwf	fsr1l
 30896  04D9  0187               	clrf fsr1h	
 30897                           	
 30898  04DA  3001               	movlw	01h
 30899  04DB  0781               	addwf	indf1,f
 30900  04DC  3141               	addfsr	fsr1,1
 30901  04DD  1803               	skipnc
 30902  04DE  0A81               	incf	indf1,f
 30903                           	line	107
 30904                           	
 30905  04DF                     i1l18400:	
 30906                           ;MCU_16f1518_B1.c: 107: if(Timer0->Count == 100)
 30907  04DF  0868               	movf	(_Timer0)^080h,w
 30908  04E0  3E01               	addlw	01h
 30909  04E1  0086               	movwf	fsr1l
 30910  04E2  0187               	clrf fsr1h	
 30911                           	
 30912  04E3  3F40               	moviw	[0]fsr1
 30913  04E4  3A64               	xorlw	low(064h)
 30914  04E5  1D03               	skipz
 30915  04E6  2CE9               	goto	u574_25
 30916  04E7  3F41               	moviw	[1]fsr1
 30917  04E8  3A00               	xorlw	high(064h)
 30918  04E9                     u574_25:
 30919  04E9  1D03               	skipz
 30920  04EA  2CEC               	goto	u574_21
 30921  04EB  2CED               	goto	u574_20
 30922  04EC                     u574_21:
 30923  04EC  2CFC               	goto	i1l8355
 30924  04ED                     u574_20:
 30925                           	line	109
 30926                           	
 30927  04ED                     i1l18402:	
 30928                           ;MCU_16f1518_B1.c: 108: {
 30929                           ;MCU_16f1518_B1.c: 109: Timer0->Count=0;
 30930  04ED  0868               	movf	(_Timer0)^080h,w
 30931  04EE  3E01               	addlw	01h
 30932  04EF  0086               	movwf	fsr1l
 30933  04F0  0187               	clrf fsr1h	
 30934                           	
 30935  04F1  3000               	movlw	low(0)
 30936  04F2  3FC0               	movwi	[0]fsr1
 30937  04F3  3000               	movlw	high(0)
 30938  04F4  3FC1               	movwi	[1]fsr1
 30939                           	line	110
 30940                           ;MCU_16f1518_B1.c: 110: TMain->T0_Timerout=1;
 30941  04F5  087D               	movf	(_TMain),w
 30942  04F6  0086               	movwf	fsr1l
 30943  04F7  3001               	movlw 1	; select bank2/3
 30944  04F8  0087               	movwf fsr1h	
 30945                           	
 30946  04F9  1481               	bsf	indf1,1
 30947  04FA  2CFC               	goto	i1l8355
 30948                           	line	111
 30949                           	
 30950  04FB                     i1l8354:	
 30951  04FB  2CFC               	goto	i1l8355
 30952                           	line	112
 30953                           	
 30954  04FC                     i1l8326:	
 30955                           	line	113
 30956                           	
 30957  04FC                     i1l8355:	
 30958  04FC  0008               	return
 30959                           	opt stack 0
 30960                           GLOBAL	__end_of_TMR0_ISR
 30961  04FD                     	__end_of_TMR0_ISR:
 30962 ;; =============== function _TMR0_ISR ends ============
 30963                           
 30964                           	signat	_TMR0_ISR,88
 30965                           	global	i1_setLoad_StatusOff
 30966                           psect	text5030,local,class=CODE,delta=2
 30967                           global __ptext5030
 30968  2518                     __ptext5030:
 30969                           
 30970 ;; *************** function i1_setLoad_StatusOff *****************
 30971 ;; Defined at:
 30972 ;;		line 347 in file "G:\Program\PIC\Source_File\OverLoad_B1.c"
 30973 ;; Parameters:    Size  Location     Type
 30974 ;;  setLoad_Stat    1    wreg     unsigned char 
 30975 ;;  setLoad_Stat    1    2[COMMON] unsigned char 
 30976 ;;  setLoad_Stat    1    3[COMMON] unsigned char 
 30977 ;; Auto vars:     Size  Location     Type
 30978 ;;  setLoad_Stat    1    4[COMMON] unsigned char 
 30979 ;; Return value:  Size  Location     Type
 30980 ;;		None               void
 30981 ;; Registers used:
 30982 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 30983 ;; Tracked objects:
 30984 ;;		On entry : 0/0
 30985 ;;		On exit  : 0/0
 30986 ;;		Unchanged: 0/0
 30987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 30988 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 30989 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 30990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 30991 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 30992 ;;Total ram usage:        3 bytes
 30993 ;; Hardware stack levels used:    1
 30994 ;; Hardware stack levels required when called:    1
 30995 ;; This function calls:
 30996 ;;		i1_LoadPointSelect
 30997 ;; This function is called by:
 30998 ;;		_TMR0_ISR
 30999 ;; This function uses a non-reentrant model
 31000 ;;
 31001                           psect	text5030
 31002                           	file	"G:\Program\PIC\Source_File\OverLoad_B1.c"
 31003                           	line	347
 31004                           	global	__size_ofi1_setLoad_StatusOff
 31005  0037                     	__size_ofi1_setLoad_StatusOff	equ	__end_ofi1_setLoad_StatusOff-i1_setLoad_StatusOff
 31006                           	
 31007  2518                     i1_setLoad_StatusOff:	
 31008                           	opt	stack 2
 31009                           ; Regs used in i1_setLoad_StatusOff: [wreg+fsr1l-status,0+pclath+cstack]
 31010                           ;i1setLoad_StatusOff@load stored from wreg
 31011  2518  00F5               	movwf	(i1setLoad_StatusOff@load)
 31012                           	line	348
 31013                           	
 31014  2519                     i1l18732:	
 31015                           ;OverLoad_B1.c: 348: LoadPointSelect(load);
 31016  2519  0875               	movf	(i1setLoad_StatusOff@load),w
 31017  251A  31AE  265A  31A5   	fcall	i1_LoadPointSelect
 31018                           	line	349
 31019                           	
 31020  251D                     i1l18734:	
 31021                           ;OverLoad_B1.c: 349: Load->StatusOff=command;
 31022  251D  0020               	movlb 0	; select bank0
 31023  251E  086B               	movf	(_Load),w
 31024  251F  3E46               	addlw	046h
 31025  2520  0086               	movwf	fsr1l
 31026  2521  3002               	movlw 2	; select bank4/5
 31027  2522  0087               	movwf fsr1h	
 31028                           	
 31029  2523  0874               	movf	(i1setLoad_StatusOff@command),w
 31030  2524  1081               	bcf	indf1,1
 31031  2525  1D03               	skipz
 31032  2526  1481               	bsf	indf1,1
 31033                           	line	351
 31034                           	
 31035  2527                     i1l18736:	
 31036                           ;OverLoad_B1.c: 351: if(lights == 1)
 31037  2527  0873               	movf	(i1setLoad_StatusOff@lights),w
 31038  2528  3A01               	xorlw	01h&0ffh
 31039  2529  1D03               	skipz
 31040  252A  2D2C               	goto	u644_21
 31041  252B  2D2D               	goto	u644_20
 31042  252C                     u644_21:
 31043  252C  2D34               	goto	i1l18740
 31044  252D                     u644_20:
 31045                           	line	353
 31046                           	
 31047  252D                     i1l18738:	
 31048                           ;OverLoad_B1.c: 352: {
 31049                           ;OverLoad_B1.c: 353: Load->Lights1Status=0;
 31050  252D  086B               	movf	(_Load),w
 31051  252E  3E43               	addlw	043h
 31052  252F  0086               	movwf	fsr1l
 31053  2530  3002               	movlw 2	; select bank4/5
 31054  2531  0087               	movwf fsr1h	
 31055                           	
 31056  2532  0181               	clrf	indf1
 31057  2533  2D34               	goto	i1l18740
 31058                           	line	354
 31059                           	
 31060  2534                     i1l9631:	
 31061                           	line	355
 31062                           	
 31063  2534                     i1l18740:	
 31064                           ;OverLoad_B1.c: 354: }
 31065                           ;OverLoad_B1.c: 355: if(lights == 2)
 31066  2534  0873               	movf	(i1setLoad_StatusOff@lights),w
 31067  2535  3A02               	xorlw	02h&0ffh
 31068  2536  1D03               	skipz
 31069  2537  2D39               	goto	u645_21
 31070  2538  2D3A               	goto	u645_20
 31071  2539                     u645_21:
 31072  2539  2D41               	goto	i1l18744
 31073  253A                     u645_20:
 31074                           	line	357
 31075                           	
 31076  253A                     i1l18742:	
 31077                           ;OverLoad_B1.c: 356: {
 31078                           ;OverLoad_B1.c: 357: Load->Lights2Status=0;
 31079  253A  086B               	movf	(_Load),w
 31080  253B  3E44               	addlw	044h
 31081  253C  0086               	movwf	fsr1l
 31082  253D  3002               	movlw 2	; select bank4/5
 31083  253E  0087               	movwf fsr1h	
 31084                           	
 31085  253F  0181               	clrf	indf1
 31086  2540  2D41               	goto	i1l18744
 31087                           	line	358
 31088                           	
 31089  2541                     i1l9632:	
 31090                           	line	359
 31091                           	
 31092  2541                     i1l18744:	
 31093                           ;OverLoad_B1.c: 358: }
 31094                           ;OverLoad_B1.c: 359: if(lights == 3)
 31095  2541  0873               	movf	(i1setLoad_StatusOff@lights),w
 31096  2542  3A03               	xorlw	03h&0ffh
 31097  2543  1D03               	skipz
 31098  2544  2D46               	goto	u646_21
 31099  2545  2D47               	goto	u646_20
 31100  2546                     u646_21:
 31101  2546  2D4E               	goto	i1l9634
 31102  2547                     u646_20:
 31103                           	line	361
 31104                           	
 31105  2547                     i1l18746:	
 31106                           ;OverLoad_B1.c: 360: {
 31107                           ;OverLoad_B1.c: 361: Load->Lights3Status=0;
 31108  2547  086B               	movf	(_Load),w
 31109  2548  3E45               	addlw	045h
 31110  2549  0086               	movwf	fsr1l
 31111  254A  3002               	movlw 2	; select bank4/5
 31112  254B  0087               	movwf fsr1h	
 31113                           	
 31114  254C  0181               	clrf	indf1
 31115  254D  2D4E               	goto	i1l9634
 31116                           	line	362
 31117                           	
 31118  254E                     i1l9633:	
 31119                           	line	363
 31120                           	
 31121  254E                     i1l9634:	
 31122  254E  0008               	return
 31123                           	opt stack 0
 31124                           GLOBAL	__end_ofi1_setLoad_StatusOff
 31125  254F                     	__end_ofi1_setLoad_StatusOff:
 31126 ;; =============== function i1_setLoad_StatusOff ends ============
 31127                           
 31128                           	signat	i1_setLoad_StatusOff,88
 31129                           	global	_setRF_ReceiveGO
 31130                           psect	text5031,local,class=CODE,delta=2
 31131                           global __ptext5031
 31132  2E0C                     __ptext5031:
 31133                           
 31134 ;; *************** function _setRF_ReceiveGO *****************
 31135 ;; Defined at:
 31136 ;;		line 38 in file "G:\Program\PIC\Source_File\RF_Control_B1.c"
 31137 ;; Parameters:    Size  Location     Type
 31138 ;;  rf              1    wreg     unsigned char 
 31139 ;;  command         1    2[COMMON] unsigned char 
 31140 ;; Auto vars:     Size  Location     Type
 31141 ;;  rf              1    3[COMMON] unsigned char 
 31142 ;; Return value:  Size  Location     Type
 31143 ;;		None               void
 31144 ;; Registers used:
 31145 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 31146 ;; Tracked objects:
 31147 ;;		On entry : 0/0
 31148 ;;		On exit  : 0/0
 31149 ;;		Unchanged: 0/0
 31150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 31151 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 31152 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 31153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 31154 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 31155 ;;Total ram usage:        2 bytes
 31156 ;; Hardware stack levels used:    1
 31157 ;; Hardware stack levels required when called:    1
 31158 ;; This function calls:
 31159 ;;		i1_RfPointSelect
 31160 ;; This function is called by:
 31161 ;;		_INT_ISR
 31162 ;; This function uses a non-reentrant model
 31163 ;;
 31164                           psect	text5031
 31165                           	file	"G:\Program\PIC\Source_File\RF_Control_B1.c"
 31166                           	line	38
 31167                           	global	__size_of_setRF_ReceiveGO
 31168  000D                     	__size_of_setRF_ReceiveGO	equ	__end_of_setRF_ReceiveGO-_setRF_ReceiveGO
 31169                           	
 31170  2E0C                     _setRF_ReceiveGO:	
 31171                           	opt	stack 2
 31172                           ; Regs used in _setRF_ReceiveGO: [wreg+fsr1l-status,0+pclath+cstack]
 31173                           ;setRF_ReceiveGO@rf stored from wreg
 31174  2E0C  00F4               	movwf	(setRF_ReceiveGO@rf)
 31175                           	line	39
 31176                           	
 31177  2E0D                     i1l18416:	
 31178                           ;RF_Control_B1.c: 39: RfPointSelect(rf);
 31179  2E0D  0874               	movf	(setRF_ReceiveGO@rf),w
 31180  2E0E  31AD  25FF  31AE   	fcall	i1_RfPointSelect
 31181                           	line	40
 31182                           	
 31183  2E11                     i1l18418:	
 31184                           ;RF_Control_B1.c: 40: RF->ReceiveGO=command;
 31185  2E11  087B               	movf	(_RF),w
 31186  2E12  0086               	movwf	fsr1l
 31187  2E13  0187               	clrf fsr1h	
 31188                           	
 31189  2E14  0873               	movf	(setRF_ReceiveGO@command),w
 31190  2E15  1081               	bcf	indf1,1
 31191  2E16  1D03               	skipz
 31192  2E17  1481               	bsf	indf1,1
 31193                           	line	41
 31194                           	
 31195  2E18                     i1l13146:	
 31196  2E18  0008               	return
 31197                           	opt stack 0
 31198                           GLOBAL	__end_of_setRF_ReceiveGO
 31199  2E19                     	__end_of_setRF_ReceiveGO:
 31200 ;; =============== function _setRF_ReceiveGO ends ============
 31201                           
 31202                           	signat	_setRF_ReceiveGO,8312
 31203                           	global	_IOC_ISR
 31204                           psect	text5032,local,class=CODE,delta=2
 31205                           global __ptext5032
 31206  21AD                     __ptext5032:
 31207                           
 31208 ;; *************** function _IOC_ISR *****************
 31209 ;; Defined at:
 31210 ;;		line 213 in file "G:\Program\PIC\Source_File\MCU_16f1518_B1.c"
 31211 ;; Parameters:    Size  Location     Type
 31212 ;;		None
 31213 ;; Auto vars:     Size  Location     Type
 31214 ;;		None
 31215 ;; Return value:  Size  Location     Type
 31216 ;;		None               void
 31217 ;; Registers used:
 31218 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 31219 ;; Tracked objects:
 31220 ;;		On entry : 0/0
 31221 ;;		On exit  : 0/0
 31222 ;;		Unchanged: 0/0
 31223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 31224 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 31225 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 31226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 31227 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 31228 ;;Total ram usage:        0 bytes
 31229 ;; Hardware stack levels used:    1
 31230 ;; Hardware stack levels required when called:    1
 31231 ;; This function calls:
 31232 ;;		_setDimmerReClock
 31233 ;; This function is called by:
 31234 ;;		_ISR
 31235 ;; This function uses a non-reentrant model
 31236 ;;
 31237                           psect	text5032
 31238                           	file	"G:\Program\PIC\Source_File\MCU_16f1518_B1.c"
 31239                           	line	213
 31240                           	global	__size_of_IOC_ISR
 31241  001D                     	__size_of_IOC_ISR	equ	__end_of_IOC_ISR-_IOC_ISR
 31242                           	
 31243  21AD                     _IOC_ISR:	
 31244                           	opt	stack 3
 31245                           ; Regs used in _IOC_ISR: [wreg+fsr1l-status,0+pclath+cstack]
 31246                           	line	214
 31247                           	
 31248  21AD                     i1l18298:	
 31249                           ;MCU_16f1518_B1.c: 214: if(IOCIE && IOCIF && IOCBF2)
 31250  21AD  1D8B               	btfss	(91/8),(91)&7
 31251  21AE  29B0               	goto	u549_21
 31252  21AF  29B1               	goto	u549_20
 31253  21B0                     u549_21:
 31254  21B0  29C9               	goto	i1l8376
 31255  21B1                     u549_20:
 31256                           	
 31257  21B1                     i1l18300:	
 31258  21B1  1C0B               	btfss	(88/8),(88)&7
 31259  21B2  29B4               	goto	u550_21
 31260  21B3  29B5               	goto	u550_20
 31261  21B4                     u550_21:
 31262  21B4  29C9               	goto	i1l8376
 31263  21B5                     u550_20:
 31264                           	
 31265  21B5                     i1l18302:	
 31266  21B5  0027               	movlb 7	; select bank7
 31267  21B6  1D16               	btfss	(7346/8)^0380h,(7346)&7
 31268  21B7  29B9               	goto	u551_21
 31269  21B8  29BA               	goto	u551_20
 31270  21B9                     u551_21:
 31271  21B9  29C9               	goto	i1l8376
 31272  21BA                     u551_20:
 31273                           	line	216
 31274                           	
 31275  21BA                     i1l18304:	
 31276                           ;MCU_16f1518_B1.c: 215: {
 31277                           ;MCU_16f1518_B1.c: 216: IOCBF2=0;
 31278  21BA  1116               	bcf	(7346/8)^0380h,(7346)&7
 31279                           	line	217
 31280                           ;MCU_16f1518_B1.c: 217: IOCIF=0;
 31281  21BB  100B               	bcf	(88/8),(88)&7
 31282                           	line	218
 31283                           	
 31284  21BC                     i1l18306:	
 31285                           ;MCU_16f1518_B1.c: 218: if(TMain->PowerON == 1)
 31286  21BC  087D               	movf	(_TMain),w
 31287  21BD  0086               	movwf	fsr1l
 31288  21BE  3001               	movlw 1	; select bank2/3
 31289  21BF  0087               	movwf fsr1h	
 31290                           	
 31291  21C0  1C01               	btfss	indf1,0
 31292  21C1  29C3               	goto	u552_21
 31293  21C2  29C4               	goto	u552_20
 31294  21C3                     u552_21:
 31295  21C3  29C9               	goto	i1l8376
 31296  21C4                     u552_20:
 31297                           	line	220
 31298                           	
 31299  21C4                     i1l18308:	
 31300                           ;MCU_16f1518_B1.c: 219: {
 31301                           ;MCU_16f1518_B1.c: 220: setDimmerReClock();
 31302  21C4  31AD  25A6  31A1   	fcall	_setDimmerReClock
 31303  21C7  29C9               	goto	i1l8376
 31304                           	line	221
 31305                           	
 31306  21C8                     i1l8375:	
 31307  21C8  29C9               	goto	i1l8376
 31308                           	line	222
 31309                           	
 31310  21C9                     i1l8374:	
 31311                           	line	223
 31312                           	
 31313  21C9                     i1l8376:	
 31314  21C9  0008               	return
 31315                           	opt stack 0
 31316                           GLOBAL	__end_of_IOC_ISR
 31317  21CA                     	__end_of_IOC_ISR:
 31318 ;; =============== function _IOC_ISR ends ============
 31319                           
 31320                           	signat	_IOC_ISR,88
 31321                           	global	i1_RfPointSelect
 31322                           psect	text5033,local,class=CODE,delta=2
 31323                           global __ptext5033
 31324  2DFF                     __ptext5033:
 31325                           
 31326 ;; *************** function i1_RfPointSelect *****************
 31327 ;; Defined at:
 31328 ;;		line 8 in file "G:\Program\PIC\Source_File\RF_Control_B1.c"
 31329 ;; Parameters:    Size  Location     Type
 31330 ;;  RfPointSelec    1    wreg     unsigned char 
 31331 ;; Auto vars:     Size  Location     Type
 31332 ;;  RfPointSelec    1    1[COMMON] unsigned char 
 31333 ;; Return value:  Size  Location     Type
 31334 ;;		None               void
 31335 ;; Registers used:
 31336 ;;		wreg
 31337 ;; Tracked objects:
 31338 ;;		On entry : 0/0
 31339 ;;		On exit  : 0/0
 31340 ;;		Unchanged: 0/0
 31341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 31342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 31343 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 31344 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 31345 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 31346 ;;Total ram usage:        2 bytes
 31347 ;; Hardware stack levels used:    1
 31348 ;; This function calls:
 31349 ;;		Nothing
 31350 ;; This function is called by:
 31351 ;;		_setRF_ReceiveGO
 31352 ;; This function uses a non-reentrant model
 31353 ;;
 31354                           psect	text5033
 31355                           	file	"G:\Program\PIC\Source_File\RF_Control_B1.c"
 31356                           	line	8
 31357                           	global	__size_ofi1_RfPointSelect
 31358  000D                     	__size_ofi1_RfPointSelect	equ	__end_ofi1_RfPointSelect-i1_RfPointSelect
 31359                           	
 31360  2DFF                     i1_RfPointSelect:	
 31361                           	opt	stack 2
 31362                           ; Regs used in i1_RfPointSelect: [wreg]
 31363                           ;i1RfPointSelect@rf stored from wreg
 31364                           	line	10
 31365  2DFF  00F2               	movwf	(i1RfPointSelect@rf)
 31366                           	
 31367  2E00                     i1l18748:	
 31368                           ;RF_Control_B1.c: 10: if(rf == 1)
 31369  2E00  0872               	movf	(i1RfPointSelect@rf),w
 31370  2E01  3A01               	xorlw	01h&0ffh
 31371  2E02  1D03               	skipz
 31372  2E03  2E05               	goto	u647_21
 31373  2E04  2E06               	goto	u647_20
 31374  2E05                     u647_21:
 31375  2E05  2E0B               	goto	i1l13134
 31376  2E06                     u647_20:
 31377                           	line	12
 31378                           	
 31379  2E06                     i1l18750:	
 31380                           ;RF_Control_B1.c: 11: {
 31381                           ;RF_Control_B1.c: 12: RF=&RF1;
 31382  2E06  30E5               	movlw	(_RF1)&0ffh
 31383  2E07  00F1               	movwf	(??i1_RfPointSelect+0)+0
 31384  2E08  0871               	movf	(??i1_RfPointSelect+0)+0,w
 31385  2E09  00FB               	movwf	(_RF)
 31386  2E0A  2E0B               	goto	i1l13134
 31387                           	line	13
 31388                           	
 31389  2E0B                     i1l13133:	
 31390                           	line	15
 31391                           	
 31392  2E0B                     i1l13134:	
 31393  2E0B  0008               	return
 31394                           	opt stack 0
 31395                           GLOBAL	__end_ofi1_RfPointSelect
 31396  2E0C                     	__end_ofi1_RfPointSelect:
 31397 ;; =============== function i1_RfPointSelect ends ============
 31398                           
 31399                           	signat	i1_RfPointSelect,88
 31400                           	global	i1_LoadPointSelect
 31401                           psect	text5034,local,class=CODE,delta=2
 31402                           global __ptext5034
 31403  2E5A                     __ptext5034:
 31404                           
 31405 ;; *************** function i1_LoadPointSelect *****************
 31406 ;; Defined at:
 31407 ;;		line 8 in file "G:\Program\PIC\Source_File\OverLoad_B1.c"
 31408 ;; Parameters:    Size  Location     Type
 31409 ;;  LoadPointSel    1    wreg     unsigned char 
 31410 ;; Auto vars:     Size  Location     Type
 31411 ;;  LoadPointSel    1    1[COMMON] unsigned char 
 31412 ;; Return value:  Size  Location     Type
 31413 ;;		None               void
 31414 ;; Registers used:
 31415 ;;		wreg
 31416 ;; Tracked objects:
 31417 ;;		On entry : 0/0
 31418 ;;		On exit  : 0/0
 31419 ;;		Unchanged: 0/0
 31420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 31421 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 31422 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 31423 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 31424 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 31425 ;;Total ram usage:        2 bytes
 31426 ;; Hardware stack levels used:    1
 31427 ;; This function calls:
 31428 ;;		Nothing
 31429 ;; This function is called by:
 31430 ;;		i1_setLoad_StatusOff
 31431 ;; This function uses a non-reentrant model
 31432 ;;
 31433                           psect	text5034
 31434                           	file	"G:\Program\PIC\Source_File\OverLoad_B1.c"
 31435                           	line	8
 31436                           	global	__size_ofi1_LoadPointSelect
 31437  000E                     	__size_ofi1_LoadPointSelect	equ	__end_ofi1_LoadPointSelect-i1_LoadPointSelect
 31438                           	
 31439  2E5A                     i1_LoadPointSelect:	
 31440                           	opt	stack 2
 31441                           ; Regs used in i1_LoadPointSelect: [wreg]
 31442                           ;i1LoadPointSelect@load stored from wreg
 31443                           	line	10
 31444  2E5A  00F2               	movwf	(i1LoadPointSelect@load)
 31445                           	
 31446  2E5B                     i1l18728:	
 31447                           ;OverLoad_B1.c: 10: if(load == 1)
 31448  2E5B  0872               	movf	(i1LoadPointSelect@load),w
 31449  2E5C  3A01               	xorlw	01h&0ffh
 31450  2E5D  1D03               	skipz
 31451  2E5E  2E60               	goto	u643_21
 31452  2E5F  2E61               	goto	u643_20
 31453  2E60                     u643_21:
 31454  2E60  2E67               	goto	i1l9550
 31455  2E61                     u643_20:
 31456                           	line	12
 31457                           	
 31458  2E61                     i1l18730:	
 31459                           ;OverLoad_B1.c: 11: {
 31460                           ;OverLoad_B1.c: 12: Load=&Load1;
 31461  2E61  3020               	movlw	(_Load1)&0ffh
 31462  2E62  00F1               	movwf	(??i1_LoadPointSelect+0)+0
 31463  2E63  0871               	movf	(??i1_LoadPointSelect+0)+0,w
 31464  2E64  0020               	movlb 0	; select bank0
 31465  2E65  00EB               	movwf	(_Load)
 31466  2E66  2E67               	goto	i1l9550
 31467                           	line	13
 31468                           	
 31469  2E67                     i1l9549:	
 31470                           	line	15
 31471                           	
 31472  2E67                     i1l9550:	
 31473  2E67  0008               	return
 31474                           	opt stack 0
 31475                           GLOBAL	__end_ofi1_LoadPointSelect
 31476  2E68                     	__end_ofi1_LoadPointSelect:
 31477 ;; =============== function i1_LoadPointSelect ends ============
 31478                           
 31479                           	signat	i1_LoadPointSelect,88
 31480                           	global	_setDimmerReClock
 31481                           psect	text5035,local,class=CODE,delta=2
 31482                           global __ptext5035
 31483  2DA6                     __ptext5035:
 31484                           
 31485 ;; *************** function _setDimmerReClock *****************
 31486 ;; Defined at:
 31487 ;;		line 116 in file "G:\Program\PIC\Source_File\MCU_16f1518_B1.c"
 31488 ;; Parameters:    Size  Location     Type
 31489 ;;		None
 31490 ;; Auto vars:     Size  Location     Type
 31491 ;;		None
 31492 ;; Return value:  Size  Location     Type
 31493 ;;		None               void
 31494 ;; Registers used:
 31495 ;;		wreg, fsr1l, fsr1h
 31496 ;; Tracked objects:
 31497 ;;		On entry : 0/0
 31498 ;;		On exit  : 0/0
 31499 ;;		Unchanged: 0/0
 31500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 31501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 31502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 31503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 31504 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 31505 ;;Total ram usage:        0 bytes
 31506 ;; Hardware stack levels used:    1
 31507 ;; This function calls:
 31508 ;;		Nothing
 31509 ;; This function is called by:
 31510 ;;		_IOC_ISR
 31511 ;; This function uses a non-reentrant model
 31512 ;;
 31513                           psect	text5035
 31514                           	file	"G:\Program\PIC\Source_File\MCU_16f1518_B1.c"
 31515                           	line	116
 31516                           	global	__size_of_setDimmerReClock
 31517  0009                     	__size_of_setDimmerReClock	equ	__end_of_setDimmerReClock-_setDimmerReClock
 31518                           	
 31519  2DA6                     _setDimmerReClock:	
 31520                           	opt	stack 3
 31521                           ; Regs used in _setDimmerReClock: [wregfsr1]
 31522                           	line	117
 31523                           	
 31524  2DA6                     i1l18412:	
 31525                           ;MCU_16f1518_B1.c: 117: TMR0=255;
 31526  2DA6  30FF               	movlw	(0FFh)
 31527  2DA7  0020               	movlb 0	; select bank0
 31528  2DA8  0095               	movwf	(21)	;volatile
 31529                           	line	120
 31530                           	
 31531  2DA9                     i1l18414:	
 31532                           ;MCU_16f1518_B1.c: 120: DimmerLights11->GO=1;
 31533  2DA9  087A               	movf	(_DimmerLights11),w
 31534  2DAA  0086               	movwf	fsr1l
 31535  2DAB  3001               	movlw 1	; select bank2/3
 31536  2DAC  0087               	movwf fsr1h	
 31537                           	
 31538  2DAD  1401               	bsf	indf1,0
 31539                           	line	129
 31540                           	
 31541  2DAE                     i1l8358:	
 31542  2DAE  0008               	return
 31543                           	opt stack 0
 31544                           GLOBAL	__end_of_setDimmerReClock
 31545  2DAF                     	__end_of_setDimmerReClock:
 31546 ;; =============== function _setDimmerReClock ends ============
 31547                           
 31548                           	signat	_setDimmerReClock,88
 31549                           psect	text5036,local,class=CODE,delta=2
 31550                           global __ptext5036
 31551  0000                     __ptext5036:
 31552                           	global	btemp
 31553  007E                     	btemp set 07Eh
 31554                           
 31555                           	DABS	1,126,2	;btemp
 31556                           	global	wtemp0
 31557  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Wed Aug 20 17:34:27 2014

                   __size_of_Switch_Main 0005                    ?_Flash_Memory_Erasing 0071  
             __size_ofi1_LoadPointSelect 000E                       getPowerFault_AD@pf 002C  
           ??_setDimmerLights_TriggerAdj 0023                        ??_TempPointSelect 0020  
                                     _PF 006C                                       _RD 0CA8  
                                     _RF 007B                  __end_of_CC2500_WriteREG 101E  
                                     _WR 0CA9                             ___awdiv@sign 0026  
                                     _Sw 006D       __end_of_getDimmerLights_StatusFlag 22CA  
             _getDimmerLights_StatusFlag 22A3                      ___wmul@multiplicand 0022  
                 __end_of_setDelayOff_GO 27B9                             ___ftadd@exp1 0058  
                           ___ftadd@exp2 0057                setDimmerLights_Adj@lights 0050  
              __end_of_setLoad_StatusOff 25BE                     _setDimmerLights_Main 13F4  
                           ___ftadd@sign 0056                     _setDimmerLights_Open 2038  
                                    _GIE 005F                                      _CRC 00B7  
                                    _RA0 0060                                      _RB0 0068  
   __size_of_DimmerLights_Initialization 000A                                      _RB1 0069  
                                    _RA3 0063                                      _PF1 00C3  
                                    _RC0 0070                                      _RA4 0064  
                                    _LED 00BA                                      _RC1 0071  
                                    _RB3 006B                                      _RC2 0072  
                                    _RB4 006C                                      _RA6 0066  
                                    _RB5 006D                                      _RA7 0067  
                                    _RC4 0074                                      _RC5 0075  
                                    _RC7 0077                                      _RF1 00E5  
                                    _ISR 0004                                      _Sw1 0154  
                                    _Buz 0078                setDimmerLights_Adj@status 004D  
               __end_of_CC2500_WriteByte 227D           ??_setDimmerLights_TriggerERROR 0023  
                  _Buzzer_Initialization 2D5B                          __end_of_ADC_Set 2D97  
                        ?_DelayTimejudge 0071                                      wreg 0009  
   setDimmerLights_Initialization@lights 005E                          _setDimmerLights 122B  
                  _setDimmerLights_ERROR 1A69                    _setDimmerLights_AdjRF 220E  
                  _setDimmerLights_AdjGo 206B                          ?_BuzPointSelect 0071  
                ??_PowerFaultPointSelect 0020                  __size_of_setTemp_Enable 0010  
                                   ?_ISR 0071                           setSw_Enable@sw 0023  
                  _setDimmerLights_Close 2049                          _PowerFault_Main 2D74  
                           ___ftdiv@cntr 0046                          __end_of_IOC_ISR 21CA  
                           ___ftdiv@sign 004B                                     l1110 2D37  
                                   l1103 2E75                                     l1104 2E75  
                                   l1120 14FB                                     l1113 2F5F  
                                   l1121 14E5                                     l1130 0A48  
                                   l1122 14FA                                     l1131 0B0D  
                                   l1123 153D                                     l1107 2D5F  
                                   l1132 0B0C                                     l1140 0B0A  
                                   l1124 151B                                     l1116 2DC9  
                                   l1133 0A8A                                     l1141 0B0D  
                                   l1125 153C                                     l1134 0B0B  
                                   l1126 153B                                     l1135 0B02  
                                   l1119 153E                                     l1127 153E  
                                   l1136 0ACA                                     l1137 0B01  
                                   l1138 0AFA                                     l1139 0B00  
                                   l2301 2574                                     l2302 2574  
                                   l2310 23F7                                     l2303 257A  
                                   l2311 241B                                     l2304 257E  
                                   l2312 241B                                     l2320 2D3C  
                                   l2305 257E                                     l2306 2583  
               ?_DimmerLightsPointSelect 0071                                     l2307 2585  
                                   l2315 22D4                                     l2323 2D41  
                                   l2332 2261                                     l2340 2392  
                                   l2316 22F0                                     l2333 227C  
                                   l2341 237E                                     l2317 22F0  
                                   l2334 2269                                     l2342 2385  
                                   l2270 1A23                                     l2326 2E32  
                                   l2335 226B                                     l2343 2392  
                                   l2271 1A45                                     l2336 227C  
                                   l2360 2146                                     l2280 1A68  
                                   l2272 1A33                                     l2361 214B  
                                   l2273 1A4D                                     l2329 2D46  
                                   l2370 2471                                     l2346 1009  
                                   l2274 1A53                                     l2290 1E2D  
                                   l2339 2372                                     l2371 2452  
                                   l2347 1009                                     l2275 1A53  
                                   l2291 1E4F                                     l2283 1E16  
                                   l2372 245F                                     l2364 21D4  
                                   l2348 100F                                     l2276 1A59  
                                   l2268 1A1D                                     l2292 1E3D  
                                   l2284 1E10                                     l2373 246D  
                        __end_of_IOC_Set 2DFF                                     l2365 21D4  
                                   l2349 101D                                     l2277 1A5A  
                                   l2269 1A1D                                     l2293 1E58  
                                   l2285 1E10                                     l3501 2D64  
                                   l2374 247C                                     l2358 2140  
                                   l2366 21DA                                     l2278 1A5A  
                                   l2294 1E75                                     l2286 1E15  
                                   l3510 1121                                     l2375 247C  
                                   l2359 2140                                     l2367 21E9  
                                   l2279 1A5F                                     l2295 1E84  
                                   l2287 1E76                                     l3520 19D7  
                                   l3504 2DF2                                     l2288 1E27  
                                   l3521 1A12                                     l3513 27B8  
                                   l2289 1E27                                     l3530 1A0E  
                                   l3522 19E2                                     l3514 279A  
                                   l2298 2161                                     l3531 1A14  
                                   l3523 1A12                                     l3515 27AA  
                                   l3507 1121                                     l3524 19ED  
                                   l3516 27A9                                     l3508 1120  
                                   l3525 1A11                                     l3517 27B8  
                                   l3509 111F                                     l3526 19F8  
                                   l3527 1A10                                     l3528 1A03  
                                   l3529 1A0F                                     l4701 2DA5  
                                   l3494 2E83                                     l4710 1497  
                                   l3495 2E83                                     l4711 1496  
                                   l4800 2EE6                                     l4720 22C7  
                                   l4712 148E                                     l4704 1453  
                                   l4721 22C9                                     l4713 1495  
                                   l4705 1452                                     l3498 2D4B  
                                   l4706 1438                                     l4714 1498  
                                   l4803 2FAF                                     l4731 1F25  
                                   l4707 1437                                     l4812 2F8F  
                                   l4724 2336                                     l4732 1F20  
                                   l4708 1451                                     l4717 22C0  
                                   l4725 231F                                     l4821 2F13  
                                   l4741 1AC3                                     l4733 1F54  
                                   l4709 1498                                     l4718 22AA  
                                   l4726 2332                                     l4806 2FBF  
                                   l4750 12B1                                     l4742 1AC3  
                                   l4734 1F45                                     l4719 22BC  
                                   l4727 233D                                     l4815 2EC9  
                                   l4751 12B1                                     l4735 1F54  
                                   l4824 20AF                                     l4728 233F  
                                   l4736 1F53                                     l4745 266C  
                                   l4809 2FCF                                     l4737 1F7F  
                                   l7161 083D                                     l7170 2121  
                                   l4818 2ED7                                     l4754 1BF2  
                                   l4738 1F7F                                     l4690 2DE7  
                                   l7162 0861                                     l4755 1C44  
                                   l4763 2231                                     l7163 0899  
                                   l4772 207B                                     l4748 1292  
                                   l4756 1C43                                     l7180 0F9D  
                                   l7164 0898                                     l4781 2048  
                                   l4749 1291                                     l4693 26AC  
                                   l4757 1C44                                     l7181 0F92  
                                   l7173 0EBC                                     l7165 089A  
                                   l4686 2E91                                     l7182 0F9C  
                                   l7174 0EBB                                     l7166 089B  
                                   l4687 2E91                                     l4775 2026  
                                   l7175 0FFF                                     l7183 0FFB  
                                   l7167 089B                                     l4696 22A2  
                                   l7176 0FFE                                     l7184 0FFA  
                                   l8400 19C5                                     l4769 2037  
                                   l4793 26ED                                     l4697 22A1  
                                   l7177 0FFD                                     l7185 0FFF  
                                   l8401 19BD                                     l5930 1891  
                                   l8410 21AC                                     l4778 208C  
                                   l8314 2179                                     l4698 22A2  
                                   l7178 0F22                                     l8402 19BC  
                                   l5931 1882                                     l8323 2136  
                                   l4787 2059                                     l7179 0FFC  
                                   l8403 19C4                                     l5932 1890  
                                   l4796 23BE                                     l5940 2E3F  
                                   l8404 19C5                                     l5933 188F  
                                   l8317 2192                                     l8413 24F4  
                                   l8421 135B                                     l5934 1891  
                                   l5950 11C9                                     l8414 2510  
                                   l8422 1375                                     l4799 2EE6  
                                   l5951 11C8                                     l8407 2DC0  
                                   l5943 20D3                                     l8415 2517  
                                   l8423 13EB                                     l5952 122A  
                                   l5960 121B                                     l8424 13F3  
                                   l5929 1875                                     l8361 2D2D  
                                   l5961 1208                                     l5953 11EC  
                                   l5937 2E59                                     l5962 121A  
                                   l5954 11D9                                     l5946 11CB  
                                   l8418 2E4C                                     l8371 2DFE  
                                   l5963 1210                                     l5955 11EB  
                                   l5947 11B8                                     l5971 1977  
                                   l5964 1219                                     l5956 11E1  
                                   l5948 11CA                                     l5972 1976  
                                   l5965 1218                                     l5957 11EA  
                                   l5949 11C0                                     l5973 1961  
                                   l8382 21F5                                     l5966 1228  
                                   l5958 11E9                                     l5974 1975  
                                   l8383 21F5                                     l5959 1229  
                                   l5967 1227                                     l5975 196A  
                                   l8368 2DD3                                     l8384 21FA  
                                   l5968 122A                                     l5976 1974  
                                   l8385 220D                                     l5977 1973  
                                   l9601 1DD2                                     l5978 1977  
                                   l8394 1703                                     l9602 1E08  
                                   l8379 2D96                                     l8395 1702  
                                   l9603 1E07                                     l8396 1747  
                                   l9604 1E08                                     l9613 25D5  
                                   l8397 1747                                     l9550 2E9F  
                                   l9614 25E5                                     l9622 0814  
                                   l9631 25A3                                     l9615 25F5  
                                   l9632 25B0                                     l9616 25F5  
                                   l9640 2FEF                                     l9625 2F9F  
                                   l9633 25BD                                     l9553 2D55  
                                   l9634 25BD                                     l9562 0960  
                                   l9570 0960                                     l9619 210C  
                                   l9643 2426                                     l9563 08C9  
                                   l9644 244B                                     l9628 206A  
                                   l9564 090E                                     l9580 0168  
                                   l9556 2D73                                     l9549 2E9F  
                                   l9645 244B                                     l9565 0903  
                                   l9637 20C1                                     l9581 01A2  
                                   l9573 0053                                     l9566 095F  
                                   l9590 0253                                     l9582 0188  
                                   l9574 0052                                     l9567 091C  
                                   l9559 209D                                     l9575 0329  
                                   l9591 02A0                                     l9583 01A1  
                                   l9568 095E                                     l9592 0328  
                                   l9576 02AA                                     l9584 01E2  
                                   l9569 0953                                     l9593 02E0  
                                   l9577 02A9                                     l9585 01E1  
                                   _CFGS 0CAE                                     l9594 02C6  
                                   l9578 02A3                                     l9586 02A2  
                                   l9595 02DF                                     l9587 02A1  
                                   l9579 01A3                                     l9596 0327  
                                   l9588 0209                                     l9597 0326  
                                   l9589 0260                                     l9598 0329  
                                   _FREE 0CAC                                     _LATA 010C  
                                   _LATB 010D                          __end_of_INT_ISR 20F9  
                                   _LATC 010E                                     u6000 27D4  
                                   u6001 27D3                    _setBuz_Initialization 2DC1  
                                   u5300 2391                                     u6020 27E5  
                                   u6100 1D63                                     u5301 2390  
                                   u6021 27E4                                     u6101 1D62  
                                   u6015 27D7                                     u5240 2E70  
                                   u5400 19E8                                     u6040 27F6  
                                   u6120 1D72                                     u7000 08C7  
                                   u5241 2E6F                                     u5401 19E7  
                                   u6041 27F5                                     u6025 27E1  
                                   u6121 1D71                                     u7001 08C6  
                                   u5250 225F                                     u5410 19F3  
                                   u6130 1D76                                     u6050 1D25  
                                   u6210 1313                                     u7010 08E9  
                                   u5251 225E                                     u5411 19F2  
                                   u6035 27EC                                     u6131 1D75  
                                   u6115 1D68                                     u6211 1312  
                                   u7011 08E8                                     _PEIE 005E  
                                   u5260 2266                                     u5420 19FE  
                                   u6140 1D86                                     u6060 1D2C  
                                   u6220 131B                                     u7020 090D  
                                   u7100 18A0                                     u5261 2265  
                                   u5421 19FD                                     u6061 1D2B  
                                   u6221 131A                                     u6205 1305  
                                   u7021 090C                                     u7101 189F  
                                   _INTE 005C                                     u5270 227B  
                                   u5350 2E7E                                     u5430 1A09  
                                   u6150 1D92                                     u6310 1C7C  
                                   u7030 0913                                     u7110 18CB  
                                   _INTF 0059                                     u5271 227A  
                                   u5351 2E7D                                     u5431 1A08  
                                   u6311 1C7B                                     u7031 0912  
                                   u7015 08E5                                     u7111 18CA  
                                   u5280 2370                                     u5360 1B89  
                                   u5440 2E8C                                     u6080 1D47  
                                   u6240 1335                                     u6160 12C4  
                                   u7040 091A                                     u7200 0C7C  
                                   u7120 0C2C                                     u5281 236F  
                                   u5441 2E8B                                     u6145 1D83  
                                   u6081 1D46                                     u6241 1334  
                                   u6161 12C3                                     u6305 1C6F  
                                   u7041 0919                                     u7201 0C7B  
                                   u5290 237B                                     u5370 1BBB  
                                   u5450 2EE0                                     u6250 133B  
                                   u6170 12D8                                     u6330 1C8D  
                                   u7050 093C                                     u7130 0C32  
                                   u5291 237A                                     u5451 2EDF  
                                   u6075 1D3B                                     u6235 1327  
                                   u6331 1C8C                                     u7051 093B  
                                   u7115 18C7                                     u7131 0C31  
                                   u5380 19D2                                     u5460 186F  
                                   u6180 12F2                                     u6500 0A72  
                                   u7060 095D                                     u7220 0C8B  
                                   u7140 0C3C                                     u5365 1B87  
                                   u5381 19D1                                     u5461 186E  
                                   u6181 12F1                                     u6325 1C7F  
                                   u6501 0A71                                     u7061 095C  
                                   u7221 0C8A                                     u7141 0C3B  
                                   u5390 19DD                                     u5470 187C  
                                   u6190 12F9                                     u6350 1C9E  
                                   u6270 1C4B                                     u6510 0A83  
                                   u7070 102D                                     u7310 0CDA  
                                   u7230 0C93                                     u7150 0C49  
                                   u5391 19DC                                     u5471 187B  
                                   u6095 1D58                                     u6191 12F8  
                                   u6175 12D5                                     u6351 1C9D  
                                   u6335 1C89                                     u6271 1C4A  
                                   u6511 0A82                                     u7055 0938  
                                   u7071 102C                                     u7311 0CD9  
                                   u7231 0C92                                     u7215 0C7E  
                                   u5480 1889                                     u5800 2E9A  
                                   u6360 1CA4                                     u6280 1C58  
                                   u6520 0A9A                                     u6600 1523  
                                   u7080 105B                                     u7320 0CE0  
                                   u7160 0C4F                                     u7400 17D1  
                                   u5481 1888                                     u5801 2E99  
                                   u6345 1C94                                     u6281 1C57  
                                   u6521 0A99                                     u6505 0A6E  
                                   u6601 1522                                     u7081 105A  
                                   u7321 0CDF                                     u7305 0CCA  
                                   u7161 0C4E                                     u7401 17D0  
                                   u5810 2424                                     u6290 1C6A  
                                   u6530 0AA2                                     u6610 2145  
                                   u7090 108A                                     u7330 0CF5  
                                   u7250 0CA7                                     u7170 0C59  
                                   u5811 2423                                     u6291 1C69  
                                   u6531 0AA1                                     u6611 2144  
                                   u7091 1089                                     u7331 0CF4  
                                   u7251 0CA6                                     u7171 0C58  
                                   u5820 244A                                     u6540 0AD2  
                                   u6620 21D9                                     u6700 279F  
                                   u7340 0D11                                     u7260 0CAF  
                                   u7180 0C62                                     u7420 17E5  
                                   u7500 09ED                                     u5821 2449  
                                   u6541 0AD1                                     u6621 21D8  
                                   u6701 279E                                     u7085 1057  
                                   u7341 0D10                                     u7261 0CAE  
                                   u7245 0C97                                     u7181 0C61  
                                   u7421 17E4                                     u7405 17CD  
                                   u7501 09EC                                     u6550 14BC  
                                   u6710 22B8                                     u7190 0C67  
                                   u7350 175A                                     u7510 09F7  
                                   u7430 0973                                     u6551 14BB  
                                   u6711 22B7                                     u7095 1086  
                                   u7191 0C66                                     u7415 17DA  
                                   u7351 1759                                     u7511 09F6  
                                   u7431 0972                                     u6480 0A38  
                                   u6560 14C4                                     u6720 22C6  
                                   u7280 0CBE                                     u7360 1773  
                                   u7440 098C                                     u6481 0A37  
                                   u6561 14C3                                     u6721 22C5  
                                   u7281 0CBD                                     u7361 1772  
                                   u7441 098B                                     u5850 2EA8  
                                   u6490 0A50                                     u6570 14E3  
                                   u6650 100E                                     u6730 232E  
                                   u7290 0CC6                                     u7370 1790  
                                   u7450 09A3                                     u5851 2EA7  
                                   u6491 0A4F                                     u6571 14E2  
                                   u6651 100D                                     u6731 232D  
                                   u7291 0CC5                                     u7275 0CB1  
                                   u9300 247B                                     u5860 2EEF  
                                   u6580 14F0                                     u6660 0B1B  
                                   u6740 233C                                     u7380 17A0  
                                   u7540 0A10                                     u7460 09B3  
                                   u9301 247A                                     u5861 2EEE  
                                   u6581 14EF                                     u6661 0B1A  
                                   u6741 233B                                     u7541 0A0F  
                                   u7525 09FF                                     u9310 2DD2  
                                   u5790 21F9                                     u6590 1503  
                                   u6670 0B22                                     u6910 25CB  
                                   u7470 09D4                                     u7550 2346  
                                   u9311 2DD0                                     u5791 21F8  
                                   u6591 1502                                     u6671 0B21  
                                   u6911 25CA                                     u7375 178D  
                                   u7535 0A05                                     u7471 09D3  
                                   u7455 09A0                                     u7551 2345  
                                   u5880 2EB6                                     u6680 2781  
                                   u6920 25DB                                     u7560 1A22  
                                   u9305 2477                                     u5881 2EB5  
                                   u6681 2780                                     u6921 25DA  
                                   u7385 179D                                     u7465 09B0  
                                   u7561 1A21                                     u9330 2DB6  
                                   u6690 278D                                     u6930 25EB  
                                   u7570 1A4D                                     u9331 2DB5  
                                   u6931 25EA                                     u7395 17BE  
                                   u7571 1A4C                                     u9324 2DD3  
                                   u9420 224E                                     u5980 27C2  
                                   u9500 11BE                                     u7580 1A58  
                                   u7660 23F5                                     u7820 191D  
                                   u9421 224D                                     u9405 223F  
                                   u5981 27C1                                     u9501 11BD  
                                   u7485 09DC                                     u7581 1A57  
                                   u7661 23F4                                     u7821 191C  
                                   u9430 2579                                     u9510 11C6  
                                   u7590 1A5E                                     u7670 241A  
                                   u9415 2244                                     u9431 2578  
                                   u9511 11C5                                     u7495 09E2  
                                   u7591 1A5D                                     u7671 2419  
                                   u9280 245D                                     u9440 2583  
                                   u9600 1221                                     u9520 11D1  
                                   u7680 22D2                                     u9281 245C  
                                   u9441 2582                                     u9601 1220  
                                   u9521 11D0                                     u7681 22D1  
                                   u9290 246C                                     u9450 259C  
                                   u9530 11D7                                     u9610 1938  
                                   u7690 22EF                                     u8490 25FF  
                                   u9291 246B                                     u5995 27C7  
                                   u9451 259B                                     u9531 11D6  
                                   u9611 1937                                     u7691 22EE  
                                   u8491 25FE                                     u9460 25A9  
                                   u9540 11DF                                     u9620 194F  
                                   u9700 1E57                                     u9461 25A8  
                                   u9541 11DE                                     u9621 194E  
                                   u9701 1E56                                     u9390 223A  
                                   u9470 25B6                                     u9550 11E7  
                                   u9630 195E                                     u6990 08AE  
                                   u9710 1E73                                     u9391 2239  
                                   u9471 25B5                                     u9551 11E6  
                                   u9631 195D                                     u6991 08AD  
                                   u9711 1E72                                     u9560 11F2  
                                   u9480 11B0                                     u9640 1967  
                                   u9720 10AD                                     u9800 24F2  
                                   u9561 11F1                                     u9481 11AF  
                                   u9641 1966                                     u9625 194B  
                                   u9721 10AC                                     u9801 24F1  
                                   u9570 1206                                     u9490 11B6  
                                   u9650 1970                                     u9730 10C8  
                                   u9810 2510                                     u9571 1205  
                                   u9491 11B5                                     u9651 196F  
                                   u9731 10C7                                     u9811 250F  
                                   u9580 120E                                     u9660 1E0E  
                                   u9740 10E6                                     u9820 24BB  
                                   u9900 1F97                                     u9581 120D  
                                   u9661 1E0D                                     u9741 10E5  
                                   u9821 24BA                                     u9901 1F96  
                                   u9590 1216                                     u9670 1E14  
                                   u9750 2286                                     u9830 24C2  
                                   u9910 1FA0                                     u9591 1215  
                                   u9671 1E13                                     u9751 2285  
                                   u9831 24C1                                     u9911 1F9F  
                                   u9680 1E1F                                     u9760 2294  
                                   u9840 15F7                                     u9920 1BE7  
                                   u9761 2293                                     u9841 15F6  
                                   u9690 1E2C                                     u9770 1240  
                                   u9850 161C                                     u9930 1BFA  
                                   u8970 26FC                                     u9691 1E2B  
                                   u9851 161B                                     u9931 1BF9  
                                   u8971 26FB                                     _LWLO 0CAD  
                                   u9780 1270                                     u9860 164D  
                                   u9940 1F0B                                     u9781 126F  
                                   u9861 164C                                     u9941 1F0A  
                                   _RFSW 00BB                                     u9790 1A78  
                                   u9870 1ADF                                     u9950 1F13  
                                   u9791 1A77                                     u9871 1ADE  
                                   u9951 1F12                                     u9880 23C9  
                                   u9960 1F2E                                     _TMR0 0015  
                                   u9881 23C8                                     u9961 1F2D  
                                   u9890 1F8A                                     u9970 1F4E  
                                   u9891 1F89                                     u9971 1F4D  
                                   u9980 1F63                                     u9981 1F62  
                                   u9990 169F                                     u9991 169E  
                        __end_of_INT_Set 2D2E                                     _RSSI 00BC  
                                   _WREN 0CAA                                     _Buz1 013E  
                       setLoad_Main@load 0036                                     _Load 006B  
                                   _Temp 006E                                     _main 0815  
                           ___ftpack@arg 0020        __end_of_PowerFault_Initialization 2D5B  
                    __end_of_DlyOff_Main 1122                          __end_of_RF_Main 2D7E  
                           ___ftpack@exp 0023                                     fsr0h 0005  
                                   fsr1h 0007                                     fsr0l 0004  
                                   indf0 0000                                     indf1 0001  
                                   fsr1l 0006      __size_of_setDimmerLights_TriggerAdj 0011  
                                   btemp 007E                     setLoad_ERROR@command 002F  
          __size_of_setRF_Initialization 0007                         _setDimmerReClock 2DA6  
              getDimmer_LoadERROR@dimmer 0022                                     start 0015  
                    DelayTimejudge@value 0022                            _RfPointSelect 2EA0  
             __end_of_setRFSW_AdjControl 2731                         _setDimmer_Detect 2F80  
                       setTemp_Main@temp 0035                         getLoad_Safe@load 0023  
                           ___ftmul@cntr 004A                    __end_of_setBuz_Enable 2F60  
                      ?_getDimmer_Detect 0071                             ___ftmul@sign 004B  
           __size_of_Temp_Initialization 0005          __size_of_setLoad_Initialization 0011  
            __size_of_setPowerFault_Main 0136                                    ??_ISR 0077  
                   setPowerFault_Main@pf 0034                             ___fttol@exp1 0035  
                     ??_getDimmer_Detect 0022                             ___fttol@lval 0031  
                  __end_of_setLoad_ERROR 1E09                         __end_of_LED_Main 2E40  
                       getTemp_Safe@temp 0021                                    l21000 2FD6  
                                  l21002 0802                                    l21010 2F1A  
                                  l21004 0806                                    l21012 2F22  
                                  l21020 2FE2                                    l21100 1E58  
                                  l20300 2606                                    l21006 080F  
                                  l21014 07F4                                    l21022 2FE6  
                                  l21030 2F31                                    l21110 1E73  
                                  l21102 1E5B                                    l20302 2610  
                                  l21008 2F16                                    l21016 07F8  
                                  l21024 2FEF                                    l21032 2F34  
                                  l21040 2FF6                                    l21104 1E62  
                                  l21112 1E76                                    l21120 2E26  
                                  l21200 1A78                                    l20304 2619  
                                  l10800 06EE                                    l22000 0E24  
                                  l13200 1194                                    l10801 07F0  
                                  l13201 11A1                                    l21018 07FF  
                                  l21026 2F25                                    l21034 2F38  
                                  l21042 2DB8                                    l21050 208F  
                                  l21114 1E7E                                    l21106 1E6C  
                                  l21122 2D42                                    l21130 10AD  
                                  l21202 1AA3                                    l21210 2395  
                                  l20066 2DDE                                    l20306 262A  
                                  l10802 07EF                                    l10810 07AD  
                                  l22010 0E56                                    l22002 0E36  
                                  l13202 11A0                                    l13211 24E1  
                                  l10811 07BC                                    l10803 0770  
                                  l13203 11A3                                    l21028 2F29  
                                  l21036 2F40                                    l21044 2DBD  
                                  l21052 2093                                    l21060 2008  
                                  l21108 1E6E                                    l21116 2D38  
                                  l21124 2D47                                    l21140 10E6  
                                  l21132 10B6                                    l21204 1AAE  
                                  l21212 23BE                                    l21220 2E33  
                                  l21300 1620                                    l20068 2DE3  
                                  l10804 0767                                    l10812 07F1  
                                  l22012 0E65                                    l22004 0E3E  
                                  l22020 1124                                    l22100 1552  
                                  l13140 2D7D                                    l13133 2EAD  
                                  l13213 24C3                                    l13221 1614  
                                  l10805 0766                                    l13134 2EAD  
                                  l21038 2FF2                                    l21046 2DBE  
                                  l21054 2099                                    l21062 200C  
                                  l21070 2DC1                                    l21118 2D3D  
                                  l21150 1108                                    l21142 10EF  
                                  l21134 10C8                                    l21126 10A2  
                                  l21206 1AB6                                    l21214 20C4  
                                  l21222 2D4C                                    l21230 24E4  
                                  l13214 24E1                                    l21310 164D  
                                  l13222 1646                                    l21302 1628  
                                  l13206 2301                                    l10806 076F  
                                  l22006 0E48                                    l13230 271A  
                                  l22014 2D6A                                    l22030 114D  
                                  l22022 1128                                    l22110 156A  
                                  l22102 1556                                    l13143 2F4F  
                                  l13223 1685                                    l13207 2317  
                                  l10815 1CE2                                    l10807 07AD  
                                  l13231 2730                    ?_setDimmerLights_Main 0071  
                                  l13152 2D9D                                    l21048 2DBF  
                                  l21056 2E1B                                    l21064 2011  
                                  l21072 2D33                                    l21080 1E1A  
                                  l21152 110E                                    l21144 10F4  
                                  l21136 10D0                                    l21128 10A6  
                                  l21160 2294                                    l21208 1ABC  
                                  l21216 20C8                                    l21224 2D51  
                                  l21240 24EA                                    l21232 24E6  
                                  l21320 166E                                    l13224 1656  
                                  l21312 1656                                    l21304 1630  
                                  l21400 1C0C                                    l13208 2317  
                                  l10816 1D1F                                    l10808 07A5  
                                  l22008 0E4D                                    l20520 26F4  
                                  l22016 2D6F                                    l22040 1188  
                                  l22032 1153                                    l22024 112E  
                                  l13160 1590                                    l22120 1587  
                                  l22112 1571                                    l22104 155A  
                                  l13241 1BCB                                    l13217 2EF5  
                                  l13137 2D32                                    l13225 1684  
                                  l10817 1D1E                                    l10809 07A4  
                                  l13161 15E7                                    l13242 1BDB  
                                  l13218 2EF5                                    l13234 2F7F  
                                  l21058 2E1F                                    l21066 2F43  
                                  l21090 1E3A                                    l21082 1E1F  
                                  l21074 1E09                                    l21154 1112  
                                  l21146 10FA                                    l21138 10D8  
                                  l21162 229A                                    l21170 1240  
                                  l21218 20CD                                    l21226 2D56  
                                  l21250 2502                                    l21242 24EC  
                                  l21234 24E7                                    l13226 1695  
                                  l21322 1676                                    l21314 165B  
                                  l21306 1638                                    l21330 1AC6  
                                  l21402 1C26                                    l21410 1F13  
                                  l10818 1D1F                                    l20522 26FC  
                                  l22018 2D74                                    l22042 118F  
                                  l22026 1140                                    l22034 1169  
                                  l22050 1E8B                                    l13162 15CD  
                                  l22130 15A2                                    l22122 158B  
                                  l22114 1578                                    l22106 155F  
                                  l13243 1BDB                                    l13171 0C0E  
                                  l10771 2D6E                                    l13155 15E9  
                                  l13163 15C0                                    l13172 0C0D  
                                  l10780 2F31                                    l21068 2F47  
                                  l21092 1E3D                                    l21084 1E21  
                                  l21076 1E0F                                    l21148 1100  
                                  l21156 227D                                    l21180 1259  
                                  l21172 1245                                    l21164 122D  
                                  l21252 2505                                    l21244 24F3  
                                  l21236 24E8                                    l21228 24E2  
                                  l21260 2E40                                    l21316 1662  
                                  l21324 1685                                    l21308 1646  
                                  l21340 1AEB                                    l21332 1ACB  
                                  l21404 1C2C                                    l21420 1F5A  
                                  l21412 1F25                                    l21500 13EF  
                                  l20524 2702                                    l22044 1194  
                                  l22036 1170                                    l22028 1147  
                                  l13180 1EC4                                    l22060 1EAA  
                                  l22052 1E92                                    l13164 15BF  
                                  l22132 15AB                                    l22140 15CD  
                                  l22124 1590                                    l22116 157D  
                                  l22108 1566                                    l20700 155F  
                                  l13149 2F04                                    l13173 0C0E  
                                  l13237 2606                                    l13229 2708  
                                  l13181 1EF1                                    l13165 15CC  
                                  l13157 156A                                    l10790 109F  
                                  l21094 1E40                                    l21086 1E2D  
                                  l21078 1E16                                    l21158 2286  
                                  l21190 127C                                    l21182 125F  
                                  l21174 124A                                    l21166 1231  
                                  l10774 2D50                                    l21254 250A  
                                  l21246 24F4                                    l21238 24E9  
                                  l21270 2E47                                    l21262 2E42  
                                  l21326 1691                                    l21318 1668  
                                  l21350 1B13                                    l21342 1AF3  
                                  l21334 1AD6                                    l21422 1F63  
                                  l21414 1F2E                                    l21406 1F02  
                                  l21430 16ED                                    l21502 13F2  
                                  l21510 050B                                    l13238 262E  
                                  l20526 2708                                    l20518 26F0  
                                  l22046 119B                                    l22038 1183  
                                  l13182 1EF0                                    l22070 1EC4  
                                  l22062 1EB0                                    l22054 1E98  
                                  l13166 15E6                                    l22142 15D4  
                                  l22134 15B5                                    l22126 1597  
                                  l22118 1584                                    l13158 157D  
                                  l22150 2D79                                    l10783 2F22  
                                  l13183 1F00                                    l13159 15E8  
                                  l13167 15E5                                    l20720 2454  
                                  l10768 2D83                                    l20800 2EFC  
                                  l21096 1E4A                                    l21088 1E33  
                                  l21192 1284                                    l21184 1268  
                                  l21176 124C                                    l21168 123C  
                                  l21256 2512                                    l21248 24F7  
                                  l21272 2E4A                                    l21264 2E44  
                                  l21280 24C3                                    l13192 1923  
                                  l21328 2DD6                                    l21344 1AFB  
                                  l21336 1ADF                                    l21360 23E3  
                                  l21352 23C1                                    l21416 1F45  
                                  l21408 1F0B                                    l21424 2E4D  
                                  l21440 171D                                    l21432 16F6  
                                  l21520 0529                                    l21512 050F  
                                  l21504 04FF                                    l21600 143F  
                                  l20296 25F8                                    l20528 272C  
                                  l13184 1EF6                                    l22080 1EF4  
                                  l22072 1ED1                                    l22064 1EB6  
                                  l13176 1EA4                                    l22056 1E9E  
                                  l22048 1E87                                    l22144 15D8  
                                  l22136 15C0                                    l22128 159B  
                                  l13168 15E9                                    l22160 0845  
                                  l22152 0815                                    l10777 2FDF  
                                  l10793 2E25                                    l13193 1929  
                                  l13185 1EFF                                    l13177 1EA3  
                                  l20722 245E                                    l20730 2181  
                                  l20810 256C                                    l20802 254F  
                                  l14402 2F6F                                    l10786 109F  
                                  l21098 1E4F                                    l21186 1270  
                                  l21178 1253                                    l21194 1292  
                                  l21258 2515                                    l21266 2E45  
                                  l21282 24D4                                    l21274 24B0  
                                  l21290 15F0                                    l21346 1B08  
                                  l21338 1AE4                                    l21354 23C9  
                                  l21370 1FA6                                    l21362 1F82  
                                  l21418 1F4E                                    l21450 1742  
                                  l21442 1726                                    l21434 1703  
                                  l21426 1696                                    l14410 055D  
                                  l21530 0558                                    l21522 0531  
                                  l21514 0513                                    l21506 0503  
                                  l21610 1465                                    l21602 1444  
                                  l20298 25FF                                    l13178 1F01  
                                  l22090 1EFB                                    l13186 1EFA  
                                  l22082 1EF5                                    l22074 1EDE  
                                  l22066 1EBC                                    l22058 1EA4  
                                  l22146 15DC                                    l22138 15C8  
                                  l22170 0879                                    l22162 0861  
                                  l22154 0836                                    l10787 106E  
                                  l14411 0627                                    l13187 1EFE  
                                  l13179 1EF2                                    l20724 245F  
                                  l20716 244C                                    l20740 218B  
                                  l20732 2183                                    l20812 256E  
                                  l20804 2553                                    l20820 2F62  
                                  l20900 11C6                                    l10788 109E  
                                  l14500 0C3D                                    l21188 1275  
                                  l21196 1A6B                                    l21268 2E46  
                                  l21284 24D8                                    l21276 24B4  
                                  l21292 15F7                                    l21348 1B0D  
                                  l21356 23D4                                    l21372 1FAD  
                                  l21380 1FD7                                    l21364 1F8A  
                                  l21452 1745                                    l21444 172F  
                                  l21436 170B                                    l21428 169F  
                                  l21460 20DD                                    l14420 0623  
                                  l14412 0597                                    l21540 0591  
                                  l21524 0539                                    l21532 055E  
                                  l21516 0517                                    l21508 0507  
                                  l21612 146A                                    l21604 144A  
                                  l21620 0E75                                    l21700 1978  
                                  l10796 07F1                                    l13196 1169  
                                  l13188 1EFD                                    l22092 1EFC  
                                  l22084 1EF7                                    l22076 1EEB  
                                  l22068 1EC2                                    l22148 15E0  
                                  l22180 0891                                    l22172 0885  
                                  l22164 0869                                    l22156 0839  
                                  l10789 109D                                    l14501 0D3E  
                                  l14421 0687                                    l14413 0596  
                                  l10797 06F0                                    l13197 11A3  
                                  l13189 1F01                                    l20726 246D  
                                  l20718 2452                                    l20742 218E  
                                  l20734 2186                                    l20750 2DF3  
                                  l20814 257A                                    l20806 255A  
                                  l20822 2F66                                    l20830 201C  
                                  l20910 11DF                                    l20902 11CB  
                                  l14510 0C94                                    l14502 0C5A  
                                  l21198 1A6F                                    l11942 2D5A  
                                  l21286 24DC                                    l21278 24BB  
                                  l21294 1605                                    l21358 23DB  
                                  l21374 1FB3                                    l21366 1F97  
                                  l21382 2D5B                                    l21390 1BE2  
                                  l21446 1738                                    l21438 1714  
                                  l21454 20D4                                    l21470 2309  
                                  l21462 22F3                                    l14422 0686  
                                  l14414 0626                                    l21550 05CA  
                                  l21534 0567                                    l21542 0597  
                                  l21526 0542                                    l14406 0519  
                                  l21518 0519                                    l21614 1471  
                                  l21606 1453                                    l21630 0EAC  
                                  l21622 0E7D                                    l21710 19B8  
                                  l21702 1981                                    l10798 06EF  
                                  l13198 1188                                    l22086 1EF8  
                                  l22078 1EF3                                    l22094 1541  
                                  l22182 0894                                    l22174 0888  
                                  l22166 086E                                    l22158 083D  
                                  l14511 0C95                                    l14407 0688  
                                  l14423 0685                                    l14415 05EA  
                                  l10799 06E3                                    l13199 11A2  
                                  l20744 2190                                    l20736 2189  
                                  l20728 217A                                    l20760 2DFD  
                                  l20752 2DF5                                    l14600 1C7E  
                                  l20808 2563                                    l20816 2DEA  
                                  l20824 2F72                                    l20832 2029  
                                  l20840 2F92                                    l20920 11FF  
                                  l20912 11E1                                    l20904 11D1  
                                  l11960 18DD                                    l14520 0CC8  
                                  l14512 0CA1                                    l14504 0C59  
                                  l21296 1614                                    l21288 15EC  
                                  l14440 23EC                                    l14432 1FFF  
                                  l21376 1FC5                                    l21368 1FA0  
                                  l21384 214C                                    l21392 1BE7  
                                  l21448 1741                                    l21456 20D7  
                                  l21472 230A                                    l21464 22F7  
                                  l21480 1353                                    l14408 0628  
                                  l21560 05FD                                    l14416 05E9  
                                  l21552 05D1                                    l21544 05A0  
                                  l21536 0571                                    l21528 054D  
                                  l14424 0688                                    l21616 147A  
                                  l21608 145D                                    l21640 0EE0  
                                  l21624 0E87                                    l21632 0EBC  
                                  l21704 198A                                    l21712 19BD  
                                  l21720 1D9F                                    l21800 1B6C  
                                  l22088 1EF9                                    l22096 1545  
                                  l22176 088B                                    l22168 0871  
                                  l14601 1C93                                    l11961 18DC  
                                  l14521 0CD4                                    l14513 0C96  
                                  l14505 0C63                                    l14433 1FD7  
                                  l14417 05E8                                    l14409 055E  
                                  l11945 2D78                                    l20738 218A  
                                  l20746 2D90                                    l20754 2DFA  
                                  l20762 2DCC                                    l14602 1C9F  
                                  l20818 2DEE                                    l20826 2F76  
                                  l20834 202D                                    l20842 2F96  
                                  l20850 204F                                    l20930 1216  
                                  l20922 1206                                    l20914 11E7  
                                  l20906 11D7                                    l11962 18DD  
                                  l11954 2F40                                    l14522 0CC9  
                                  l14514 0CA8                                    l14506 0C68  
                                  l21298 161C                                    l14434 1FD6  
                                  l21378 1FD1                                    l21386 2D60  
                                  l21394 1BF2                                    l21458 20D9  
                                  l21474 230E                                    l21466 22FC  
                                  l21482 135A                                    l21490 1375  
                                  l21570 063A                                    l14418 0625  
                                  l21562 060F                                    l21554 05DA  
                                  l21546 05AA                                    l21538 0583  
                                  l21618 148E                                    l21650 0F06  
                                  l21642 0EE9                                    l21634 0EC5  
                                  l21626 0E96                                    l21706 1994  
                                  l21714 2D65                                    l21730 1DBC  
                                  l21722 1DA6                                    l21802 1B74  
                                  l21810 0027                                    l11970 0E73  
                                  l22098 154C                                    l22178 088E  
                                  l11939 2D89                                    l14603 1CAA  
                                  l14523 0CDB                                    l14507 0CA9  
                                  l14515 0CDC                                    l14427 1B0D  
                                  l14435 1FFE                                    l14419 0624  
                                  l11971 0E72                                    l20748 2D29  
                                  l20756 2DFB                                    l20764 2DCD  
                                  l14380 2DB1                                    l14460 27F8  
                                  l14604 1CB1                                    l20828 2018  
                                  l20836 2F82                                    l20844 203A  
                                  l20852 2EBE                                    l20860 2ED0  
                                  l20924 1208                                    l20932 121B  
                                  l20908 11D9                                    l20916 11EC  
                                  l20940 206D                                    l11948 2015  
                                  l14524 0CF1                                    l14516 0CDC  
                                  l14508 0C7D                                    l14428 1B20  
                                  l14436 1FFF                                    l21396 1BFA  
                                  l21388 1BDE                                    l21476 2312  
                                  l21468 2301                                    l21492 13D1  
                                  l21484 135B                                    l21572 0645  
                                  l21564 061D                                    l21548 05BC  
                                  l21556 05EA                                    l21580 13FC  
                                  l21660 0F3B                                    l21652 0F0D  
                                  l21644 0EEF                                    l21636 0ECE  
                                  l21628 0EA4                                    l21708 19A3  
                                  l21740 1DDD                                    l21732 1DC5  
                                  l21724 1DAC                                    l21716 1D96  
                                  l21804 2D9E                                    l21900 031D  
                                  l21820 005C                                    l21812 0031  
                                  l11980 0E55                                    l11972 0E13  
                                  l14381 2DB0                                    l14461 27D0  
                                  l11957 07FF                                    l14525 0D06  
                                  l14517 0CB0                                    l14429 1B20  
                                  l11965 0E74                                    l11981 0E5D  
                                  l11973 0E0B                                    l20758 2DFC  
                                  l14382 2DB7                                    l20766 2DAF  
                                  l20790 224F                                    l14454 2236  
                                  l20782 2232                                    l14462 27C6  
                                  l20838 2F86                                    l20846 203E  
                                  l20854 2EC2                                    l20862 2ED7  
                                  l20870 2588                                    l20934 1221  
                                  l20926 120E                                    l20918 11F2  
                                  l20942 2071                                    l20950 2FA6  
                                  l14526 0D25                                    l14542 1762  
                                  l21398 1C04                                    l14390 20E5  
                                  l21494 13E2                                    l21486 136A  
                                  l21478 1351                                    l21574 067A  
                                  l21558 05F3                                    l21566 0628  
                                  l21590 141B                                    l21582 1400  
                                  l21670 0F6E                                    l21662 0F4D  
                                  l21654 0F15                                    l21646 0EF3  
                                  l21638 0ED7                                    l21750 1DFE  
                                  l21742 1DE3                                    l21734 1DCB  
                                  l21726 1DB4                                    l21718 1D9A  
                                  l21830 00D2                                    l21822 0078  
                                  l21814 0043                                    l21806 001A  
                                  l21910 06AA                                    l21902 068B  
                                  l11982 0E69                                    l11974 0E0A  
                                  l11966 0D9E                                    l14383 2DB7  
                                  l14455 223E                                    l14463 27D5  
                                  l14519 0CC7                                    l14543 17FF  
                                  l14439 23EC                                    l11975 0E12  
                                  l11967 0D9D                                    l11983 0E74  
                                  l20792 2256                                    l14456 224F  
                                  l20784 2236                                    l14464 27D6  
                                  l14800 1D93                                    l20848 204B  
                                  l20856 2EC9                                    l20864 2F07  
                                  l20880 25A9                                    l20872 258C  
                                  l20928 1210                                    l20936 205C  
                                  l20944 207E                                    l20952 2FB2  
                                  l20960 192C                                    l14544 177B  
                                  l14560 0A11                                    l14552 097B  
                                  l21496 13EB                                    l21488 136E  
                                  l21576 067F                                    l21568 0631  
                                  l21592 1421                                    l21584 140A  
                                  l21672 0F72                                    l21664 0F56  
                                  l21680 0F92                                    l21648 0EFD  
                                  l21656 0F22                                    l21744 1DE9  
                                  l21728 1DB9                                    l21736 1DD2  
                                  l21760 1CC9                                    l21752 1CB4  
                                  l21840 015F                                    l21832 011E  
                                  l21824 0082                                    l21816 004C  
                                  l21808 001E                                    l21912 06BC  
                                  l21920 06F0                                    l21904 068F  
                                  l11976 0E5D                                    l11968 0D92  
                                  l14457 2256                                    l14465 27EB  
                                  l14545 17BD                                    l14553 0A2A  
                                  l14393 2D69                                    l11977 0E56  
                                  l11969 0D9C                                    l14386 2EBB  
                                  l20786 223A                                    l14466 27F7  
                                  l14570 1325                                    l20794 2F52  
                                  l20858 2ECC                                    l20866 2F0B  
                                  l20882 25B0                                    l20874 2596  
                                  l20890 11B0                                    l20938 2060  
                                  l20946 2082                                    l20954 2FB6  
                                  l20970 1957                                    l20962 1930  
                                  l14546 17D9                                    l14554 0994  
                                  l21498 13EC                                    l21594 1426  
                                  l21586 140E                                    l21578 13F6  
                                  l21690 0FC4                                    l21674 0F78  
                                  l21666 0F5F                                    l21682 0F9D  
                                  l21658 0F2C                                    l21746 1DEE  
                                  l21738 1DD8                                    l21770 1CE8  
                                  l21762 1CCC                                    l21754 1CB8  
                                  l11986 1B52                                    l21850 01BF  
                                  l21842 0173                                    l21834 0140  
                                  l21826 0094                                    l21818 0053  
                                  l21930 074F                                    l21922 06FA  
                                  l21914 06C5                                    l21906 0698  
                                  l14387 2EBB                                    l14467 27FF  
                                  l14571 1330                                    l14563 12CE  
                                  l14547 17E6                                    l14555 09D0  
                                  l11987 1B7D                                    l11979 0E36  
                                  l18100 2257                                    l20788 2243  
                                  l14572 1326                                    l14564 1350  
                                  l20796 2F56                                    l20868 2F13  
                                  l20884 25B6                                    l20876 259C  
                                  l20892 11B6                                    l20948 2FA2  
                                  l20956 2FC2                                    l20980 1970  
                                  l20972 195E                                    l20964 1938  
                                  l14556 09DB                                    l14396 2DDD  
                                  l21596 142E                                    l21588 1417  
                                  l21692 0FCA                                    l21684 0FA6  
                                  l21676 0F7D                                    l21668 0F68  
                                  l21748 1DF6                                    l21772 1CED  
                                  l21764 1CD5                                    l21756 1CBD  
                                  l11988 1B7D                                    l21780 1B2E  
                                  l21860 01F4                                    l21852 01C8  
                                  l21844 017E                                    l21836 014B  
                                  l21828 00A2                                    l21940 0782  
                                  l21932 075A                                    l21924 070C  
                                  l21916 06CE                                    l21908 06A0  
                                  l14573 1336                                    l14565 1315  
                                  l14557 09EE                                    l18110 226F  
                                  l18102 2259                                    l14574 1347  
                                  l14566 1303                                    l20798 2EF8  
                                  l20878 25A3                                    l20894 11B8  
                                  l20886 11A6                                    l20958 2FC6  
                                  l20974 1961                                    l20966 1941  
                                  l20990 216E                                    l20982 2162  
                                  l14558 09F3                                    l14590 234F  
                                  l21598 1438                                    l21694 0FDD  
                                  l21686 0FB8                                    l21678 0F86  
                                  l21774 1CF2                                    l21766 1CDB  
                                  l21758 1CC2                                    l21790 1B4B  
                                  l21782 1B32                                    l21870 0235  
                                  l21862 01FF                                    l21854 01D3  
                                  l21846 0188                                    l21838 0154  
                                  l21950 07B6                                    l21942 078B  
                                  l21934 0760                                    l21926 0734  
                                  l21918 06E3                                    l14567 1304  
                                  l14399 2FFF                                    l14559 09FE  
                                  l14591 2367                                    l18112 2271  
                                  l18104 2260                                    l18120 2371  
                                  l18200 1A14                                    l14568 1314  
                                  l19000 2635                                    l20896 11BE  
                                  l20888 11AA                                    l20976 1967  
                                  l20968 194F                                    l20992 2171  
                                  l20984 2165                                    l21696 0FE9  
                                  l21688 0FBC                                    l21768 1CE2  
                                  l21784 1B39                                    l21792 1B52  
                                  l21776 1B23                                    l21872 0253  
                                  l21864 0209                                    l21856 01D9  
                                  l21848 01A3                                    l21880 02A3  
                                  l21952 07BC                                    l21944 0796  
                                  l21928 0746                                    l21936 0767  
                                  l21960 0D41                                    l14569 1337  
                                  l18114 2275                                    l18106 2266  
                                  l18130 2385                                    l18122 2373  
                                  l18202 2E86                                    l14594 1C54  
                                  l19002 263F                                    l20898 11C0  
                                  l20978 196A                                    l20994 2174  
                                  l20986 2168                                    l14498 0C45  
                                  l21698 0FF1                                    l21794 1B5B  
                                  l21786 1B3C                                    l21778 1B27  
                                  l21890 02CF                                    l21866 0214  
                                  l21874 0260                                    l21858 01E2  
                                  l21882 02AA                                    l21954 07CE  
                                  l21946 079C                                    l21938 0770  
                                  l21970 0D6E                                    l21962 0D45  
                                  l14595 1C62                                    l18108 226C  
                                  l18132 238B                                    l18124 2376  
                                  l18116 2368                                    l18204 2E8C  
                                  l14596 1CA0                                    l19004 2648  
                                  l20988 216B                                    l20996 2D2E  
                                  l21796 1B60                                    l21788 1B45  
                                  l21892 02D8                                    l21884 02B3  
                                  l21876 026A                                    l21868 021D  
                                  l21956 07DC                                    l21948 07A5  
                                  l21980 0DA7                                    l21972 0D77  
                                  l21964 0D4D                                    l14597 1C78  
                                  l18126 237B                                    l18118 236A  
                                  l18206 20F9                                    l18230 186F  
                                  l14790 1D41                                    l14598 1C6E  
                                  l19006 2651                                    l20998 2FD2  
                                  l21798 1B63                                    l21886 02BB  
                                  l21894 02E0                                    l21878 0282  
                                  l21958 07E5                                    l21990 0DF5  
                                  l21982 0DB8                                    l21974 0D80  
                                  l21966 0D54                                    l14791 1D36  
                                  l14599 1C7D                                    l18128 237E  
                                  l18160 1B80                                    l18224 2EDA  
                                  l18232 1875                                    l18240 210D  
                                  l14792 1D48                                    l19008 265A  
                                  l19200 105B                                    l21896 02E8  
                                  l21888 02C6                                    l21992 0DFF  
                                  l21984 0DCB                                    l21976 0D92  
                                  l21968 0D5D                                    l14793 1D5D  
                                  l18170 1BB7                                    l18162 1B83  
                                  l18226 2EE0                                    l18234 187C  
                                  l18242 2116                                    l14794 1D49  
                                  l14786 1D35                                    l19202 106E  
                                  l19210 18A0                                    l21898 0319  
                                  l21994 0E04                                    l21986 0DDC  
                                  l21978 0D9E                                    l14795 1D64  
                                  l18156 2E78                                    l18172 1BBB  
                                  l18164 1B8C                                    l18180 19D7  
                                  l18236 1882                                    l18228 1869  
                                  l18244 211B                                    l14796 1D6E  
                                  l14788 1D2D                                    l19204 108A  
                                  l19212 18B1                                    l19300 0C32  
                                  l21988 0DED                                    l21996 0E0B  
                                  l14797 1D65                                    l14789 1D93  
                                  l18158 2E7E                                    l18174 1BCB  
                                  l18166 1B95                                    l18190 19F3  
                                  l18182 19DD                                    l18238 1889  
                                  l18270 2131                                    l18430 220D  
                                  l14798 1D72                                    l19214 18CB  
                                  l19206 1894                                    l19310 0C4F  
                                  l19302 0C3D                                    l21998 0E13  
                                  l14799 1D7C                                    l18096 2E6A  
                                  l18168 1BA6                                    l18192 19F8  
                                  l18184 19E2                                    l18176 19C8  
                                  l18272 2134                                    l18264 2122  
                                  l18424 21EC                                    l18440 21AC  
                                  l18432 2195                                    l18520 27B9  
                                  l18600 12F2                                    l19080 25C0  
                                  l19160 08C0                                    l19152 089F  
                                  l19208 1898                                    l19320 0C69  
                                  l19312 0C5A                                    l19304 0C44  
                                  l19400 17DF                                    l18098 2E70  
                                  l18194 19FE                                    l18186 19E8  
                                  l18178 19D2                                    l18274 2135  
                                  l18266 2128                                    l18426 21F3  
                                  l18434 2196                                    l18442 2E94  
                                  l18450 2425                                    l18530 27D0  
                                  l18522 27BC                                    l18610 131B  
                                  l18602 12F9                                    l19090 25E5  
                                  l19082 25C4                                    l19170 08FF  
                                  l19162 08C1                                    l19154 08A1  
                                  l19330 0C96                                    l19322 0C6F  
                                  l19314 0C5E                                    l19306 0C45  
                                  l19402 17E6                                    l19410 097A  
                                  l18196 1A03                                    l18188 19ED  
                                  l18268 2130                                    l18428 21FA  
                                  l18436 219D                                    l18444 2E9A  
                                  l18452 2426                                    l18540 27F0  
                                  l18532 27D6                                    l18524 27C2  
                                  l18620 133B                                    l18612 1324  
                                  l18604 1302                                    l19092 25EB  
                                  l19084 25CB                                    l19180 0914  
                                  l19172 0903                                    l19164 08C8  
                                  l19156 08A5                                    l19260 20C1  
                                  l19340 0CBE                                    l19332 0CA1  
                                  l19324 0C7D                                    l19316 0C62  
                                  l19308 0C49                                    l19404 17FF  
                                  l19420 09BD                                    l19412 097B  
                                  l18198 1A09                                    l18438 219E  
                                  l18454 2440                                    l18446 241C  
                                  l18470 2D7E                                    l18534 27E5  
                                  l18526 27C6                                    l18542 27F8  
                                  l18550 1D2D                                    l18622 1347  
                                  l18614 1326                                    l18606 1304  
                                  l19086 25D5                                    l19190 0957  
                                  l19182 091B                                    l19174 0907  
                                  l19166 08C9                                    l19158 08AE  
                                  l19350 0CF5                                    l19342 0CC9  
                                  l19326 0C85                                    l19334 0CA9  
                                  l19318 0C67                                    l19430 09D0  
                                  l19422 09BE                                    l19414 098C  
                                  l19406 0961                                    l18456 2444  
                                  l18448 241E                                    l18472 2D84  
                                  l18480 2EA8                                    l18544 27FF  
                                  l18536 27E9                                    l18528 27CB  
                                  l18560 1D4D                                    l18552 1D34  
                                  l18624 1350                                    l18616 1330  
                                  l18608 1315                                    l18800 149B  
                                  l19088 25DB                                    l19184 091C  
                                  l19168 08E9                                    l19176 090E  
                                  l19192 1020                                    l19256 20B2  
                                  l19360 0D25                                    l19352 0D06  
                                  l19344 0CD4                                    l19336 0CB0  
                                  l19328 0C8B                                    l19440 09EE  
                                  l19432 09D4                                    l19424 09BF  
                                  l19416 0993                                    l19408 0973  
                                  l18482 2D97                                    l18490 2EB0  
                                  l18538 27EB                                    l18570 1D7E  
                                  l18562 1D57                                    l18554 1D36  
                                  l18546 1D20                                    l18618 1337  
                                  l18650 1C5D                                    l18642 1C45  
                                  l18810 14D4                                    l18802 14B4  
                                  l19186 093C                                    l19178 0913  
                                  l19194 1024                                    l19258 20B6  
                                  l19362 0D3E                                    l19354 0D0D  
                                  l19346 0CE0                                    l19338 0CB8  
                                  l19370 1762                                    l19450 0A0A  
                                  l19442 09F3                                    l19434 09DB  
                                  l19426 09C5                                    l19418 0994  
                                  l18484 2EE9                                    l18492 2EB6  
                                  l18572 1D8E                                    l18564 1D65  
                                  l18556 1D41                                    l18548 1D25  
                                  l18660 1C73                                    l18652 1C62  
                                  l18644 1C4B                                    l18812 14DD  
                                  l18820 14FB                                    l18804 14BC  
                                  l18900 0B1B                                    l19188 0953  
                                  l19196 102D                                    l19356 0D11  
                                  l19348 0CF1                                    l19380 1786  
                                  l19372 1773                                    l19364 1748  
                                  l19452 0A11                                    l19444 09F7  
                                  l19436 09E1                                    l19428 09CB  
                                  l19460 234F                                    l19540 23F6  
                                  l19604 26AF                          ?_setDelayOff_GO 0023  
                                  l18478 2EA2                                    l18486 2EEF  
                                  l18574 1D92                                    l18566 1D6E  
                                  l18558 1D49                                    l18590 12DE  
                                  l18582 12B2                                    l18670 1C93  
                                  l18662 1C78                                    l18654 1C64  
                                  l18646 1C54                                    l18822 1503  
                                  l18814 14E3                                    l18806 14C4  
                                  l18830 213A                                    l18902 0B22  
                                  l18910 2789                                    l19198 103F  
                                  l19358 0D21                                    l19294 0C0F  
                                  l19390 17BD                                    l19382 1796  
                                  l19374 177A                                    l19366 175A  
                                  l19454 0A2A                                    l19446 09FE  
                                  l19438 09E7                                    l19462 2367  
                                  l19470 1A17                                    l19542 23F7  
                                  l19550 22CA                                    l19606 26ED  
                                  l18568 1D76                                    l18592 12DF  
                                  l18584 12C4                                    l18680 1CB1  
                                  l18672 1C98                                    l18664 1C7E  
                                  l18656 1C6A                                    l18648 1C58  
                                  l18760 0A50                                    l18752 0A2D  
                                  l18824 151B                                    l18816 14E5  
                                  l18808 14C9                                    l18832 2146  
                                  l18840 21DA                                    l18920 27B2  
                                  l18912 278D                                    l18904 2776  
                                  l19296 0C28                                    l19392 17C3  
                                  l19384 17A6                                    l19376 177B  
                                  l19368 1761                                    l19448 0A04  
                                  l19456 2340                                    l19480 1A33  
                                  l19472 1A23                                    l19544 2407  
                                  l19536 23ED                                    l19560 22E4  
                                  l19552 22CC                                    l18594 12E5  
                                  l18586 12CD                                    l18666 1C8D  
                                  l18658 1C6E                                    l18674 1CA0  
                                  l18770 0A8A                                    l18762 0A5A  
                                  l18754 0A31                                    l18826 1523  
                                  l18818 14F0                                    l18834 2149  
                                  l18842 21E0                                    l18914 279A  
                                  l18906 277A                                    l18922 20A0  
                                  l19298 0C2C                                    l19394 17D1  
                                  l19386 17AA                                    l19378 1781  
                                  l19458 2346                                    l19490 1A5F  
                                  l19482 1A3C                                    l19474 1A26  
                                  l19546 240F                                    l19538 23EF  
                                  l19562 22E9                                    l19554 22D3  
                  ?_setDimmerLights_Open 0022                                    l18596 12EC  
                                  l18588 12CE                                    l18676 1CA4  
                                  l18668 1C91                                    l18780 0AA7  
                                  l18772 0A8F                                    l18764 0A72  
                                  l18756 0A38                                    l18828 2139  
                                  l18844 21E2                                    l18836 21CC  
                                  l18916 279F                                    l18908 2781  
                                  l18924 20A4                                    l18940 22AF  
                                  l18932 22A3                                    l19396 17D7  
                                  l19388 17B1                                    l19492 1A67  
                                  l19484 1A3F                                    l19476 1A2D  
                                  l19468 1A15                                    l19548 2414  
                                  l19556 22D4                                    l19740 18E0  
                                  l18598 12EE                                    l18678 1CAA  
                                  l18790 0AE7                                    l18782 0AB7  
                                  l18774 0A90                                    l18766 0A83  
                                  l18758 0A48                                    l18838 21CD  
                                  l18870 1012                                    l18918 27AA  
                                  l18926 20AF                                    l18942 22B8  
                                  l18934 22A5                                    l19398 17D9  
                                  l19486 1A45                                    l19478 1A30  
                                  l19558 22DC                                    l19750 1910  
                                  l19742 18E4                                    l19910 221F  
                                  l18792 0AFA                                    l18784 0ACA  
                                  l18776 0A9A                                    l18768 0A88  
                                  l18872 1018                                    l18864 1002  
                                  l18944 22BC                                    l18936 22A8  
                                  l19488 1A4E                                    l19752 1914  
                                  l19744 18EF                                    l19904 2210  
                  __end_of_setLoad_Count 210D                                    l18786 0AD2  
                                  l18778 0AA2                                    l18794 0B02  
                                  l18874 101B                                    l18866 1003  
                                  l18946 22C7                                    l18938 22AA  
                                  l18970 2324                                    l18962 2318  
                                  l19754 191D                                    l19746 18FA  
                                  l19906 2214                                    l18788 0AD7  
                                  l18868 100F                                    l18948 22C9  
                                  l18972 232E                                    l18964 231A  
                                  l19748 1905                                    l19860 267D  
                                  l19908 221A                                    l18974 2332  
                                  l18966 231D                                    l19862 2683  
                                  l18896 0B10                                    l18976 233D  
                                  l18968 231F                                    l19864 2689  
                                  l19856 266F                                    l18898 0B14  
                                  l18978 233F                                    l19866 2697  
                                  l19858 2673                                    l18998 2631  
                                  ?_main 0071                setControl_Lights_Table@rf 0064  
                        __end_of___awdiv 1CB2                          __end_of___ftadd 0D3F  
                        __end_of___ftdiv 1800                                    u10000 16F6  
                                  u10001 16F5                                    u10010 22FC  
                                  u10020 1359                                    u10100 0531  
                                  u10021 1358                                    u10101 0530  
                                  u10030 1374                                    u10110 0539  
                                  u10031 1373                                    u10111 0538  
                                  u10040 13D1                                    u10200 0631  
                                  u10120 054D                                    u11000 119B  
                                  u10041 13D0                                    u10201 0630  
                                  u10121 054C                                    u11001 119A  
                                  u10210 0645                                    u10130 0567  
                                  u10050 050B                                    u11010 1E92  
                                  u10211 0644                                    u10131 0566  
                                  u10051 050A                                    u11011 1E91  
                                  u10140 0583                                    u10060 050F  
                                  u10220 140A                                    u10300 0E96  
                                  u11100 1EDE                                    u11020 1E98  
                                  u10141 0582                                    u10061 050E  
                                  u10221 1409                                    u10301 0E95  
                                  u11101 1EDD                                    u11021 1E97  
                                  u10150 05A0                                    u10070 0513  
                                  u10230 140E                                    u10310 0EC5  
                                  u11110 1EEB                                    u11030 1E9E  
                                  u10151 059F                                    u10071 0512  
                                  u10311 0EC4                                    u11111 1EEA  
                                  u11031 1E9D                                    u10160 05BC  
                                  u10080 0517                                    u10240 1417  
                                  u10400 0F68                                    u10320 0ECE  
                                  u11040 1EAA                                    u11200 1597  
                                  u11120 154C                                    u10161 05BB  
                                  u10081 0516                                    u10241 1416  
                                  u10401 0F67                                    u10321 0ECD  
                                  u10305 0E92                                    u11041 1EA9  
                                  u11201 1596                                    u11121 154B  
                                  u10170 05DA                                    u10090 0529  
                                  u10250 141B                                    u10410 0FA6  
                                  u10330 0ED7                                    u11050 1EB0  
                                  u11210 15A2                                    u11130 1552  
                                  u10171 05D9                                    u10091 0528  
                                  u10411 0FA5                                    u10331 0ED6  
                                  u11051 1EAF                                    u11211 15A1  
                                  u11131 1551                                    u10180 05F3  
                                  u10260 145D                                    u10340 0EE0  
                                  u10420 1981                                    u10500 0027  
                                  u11060 1EB6                                    u11220 15B5  
                                  u11140 1556                          __end_of___ftmul 0A2B  
                                  u10181 05F2                                    u10261 145C  
                                  u10341 0EDF                                    u10421 1980  
                                  u10501 0026                                    u11061 1EB5  
                                  u11221 15B4                                    u11141 1555  
                                  u10190 060F                                    u10270 1465  
                                  u10350 0EE9                                    u10430 198A  
                                  u10510 0043                                    u11070 1EBC  
                                  u11230 15D4                                    u11150 155A  
                                  u10191 060E                                    u10271 1464  
                                  u10351 0EE8                                    u10431 1989  
                                  u10511 0042                                    u11071 1EBB  
                                  u11231 15D3                                    u11151 1559  
                                  u10280 147A                                    u10360 0F3B  
                                  u10440 19A3                                    u10600 01D3  
                                  u10520 005C                                    u11080 1EC2  
                                  u11160 155E                                    u11240 0845  
                                  u10281 1479                                    u10361 0F3A  
                                  u10441 19A2                                    u10601 01D2  
                                  u10521 005B                                    u11081 1EC1  
                                  u11161 155D                                    u11241 0844  
                                  u10370 0F4D                                    u10290 0E7D  
                                  u10450 1D9F                                    u10610 01F4  
                                  u10530 0094                                    u11090 1ED1  
                                  u11170 1566                                    u11250 0869  
                                  u10371 0F4C                                    u10291 0E7C  
                                  u10611 01F3                                    u10531 0093  
                                  u11091 1ED0                                    u11171 1565  
                                  u11251 0868                                    u10380 0F56  
                                  u10460 1DD8                                    u10700 02E8  
                                  u10620 01FF                                    u10540 011E  
                                  u11180 1578                                    u11260 0879  
                        ___awdiv@divisor 0020                                    u10381 0F55  
                                  u10365 0F37                                    u10445 199F  
                                  u10461 1DD7                                    u10701 02E7  
                                  u10621 01FE                                    u10541 011D  
                                  u11181 1577                                    u11261 0878  
                                  u10390 0F5F                                    u10470 1CBD  
                                  u10630 0214                                    u10550 014B  
                                  u10710 0698                                    u11190 1584  
                                  u10391 0F5E                                    u10631 0213  
                                  u10551 014A                                    u10711 0697  
                                  u11191 1583                                    u10480 1CE8  
                                  u10640 021D                                    u10560 015F  
                                  u10800 0782                                    u10720 06A0  
                                  u10481 1CE7                                    u10641 021C  
                                  u10561 015E                                    u10545 011A  
                                  u10801 0781                                    u10721 069F  
                                  u10490 1B2E                                    u10650 026A  
                                  u10570 0173                                    u10810 0796  
                                  u10730 06BC                                    u10491 1B2D  
                                  u10651 0269                                    u10571 0172  
                                  u10811 0795                                    u10731 06BB  
                                  u10660 02B3                                    u10580 017E  
                                  u10820 07B6                                    u10740 06C5  
                                  u10900 0DDC                          __end_of___fttol 1351  
                                  u10661 02B2                                    u10581 017D  
                                  u10821 07B5                                    u10741 06C4  
                                  u10901 0DDB                                    u10670 02BB  
                                  u10590 01BF                                    u10750 06CE  
                                  u10910 0DED                                    u10830 0D4D  
                                  u10671 02BA                                    u10591 01BE  
                                  u10751 06CD                                    u10911 0DEC  
                                  u10831 0D4C                                    u10680 02CF  
                                  u10760 070C                                    u10920 0DFF  
                                  u10840 0D54                                    u10681 02CE  
                                  u10761 070B                                    u10921 0DFE  
                                  u10841 0D53                                    u10690 02D8  
                                  u10770 0734                                    u10930 0E24  
                                  u10850 0D6E                                    u10691 02D7  
                                  u10595 01BB                                    u10771 0733  
                                  u10931 0E23                                    u10851 0D6D  
                                  u10780 0746                                    u10940 0E35  
                                  u10860 0D77                                    u10781 0745  
                                  u10941 0E34                                    u10861 0D76  
           setDimmerLights_AdjGo@command 0022                                    u10790 075A  
                                  u10950 0E48                                    u10870 0D80  
                                  u10791 0759                                    u10951 0E47  
                                  u10871 0D7F                                    u10960 0E65  
                                  u10880 0DB8                                    u10961 0E64  
                                  u10881 0DB7                                    u10890 0DCB  
                                  u10970 112E                                    u10891 0DCA  
                                  u10971 112D                                    u10980 1170  
                                  u10981 116F                                    u10990 118F  
                                  u10991 118E                                    _IOCBF 0396  
                                  _IOCBN 0395                                    _IOCBP 0394  
                                  _IOCIE 005B                                    _IOCIF 0058  
                        __end_of___lwdiv 2800                   _setDimmerLights_Switch 2027  
                        ___awdiv@counter 0025            __size_of_CC2500_FrequencyCabr 000D  
                                  _RFSW1 00E7                                    _PORTA 000C  
                                  _PORTB 000D                                    _PORTC 000E  
                           ?_setLED_Main 0071                       setRF_Learn@command 0022  
                  setPowerFault_ERROR@pf 0031                                    _TRISA 008C  
                                  _TRISB 008D                                    _TRISC 008E  
           __size_ofi1_setLoad_StatusOff 0037                                    _WPUB0 1068  
                                  _WPUB1 1069                                    _WPUB2 106A  
                                  _TMain 007D                            setRF_Learn@rf 0023  
                                  _MainT 0E75                                    _Load1 0220  
             setDimmer_LoadERROR@command 0022                                    _Temp1 0130  
           __end_of_setLoad_LightsStatus 25F6                         __end_of_TMR0_ISR 04FD  
           __size_of_CC2500_WriteCommand 0015                         __end_of_TMR0_Set 2137  
                                  _getAD 21EA                            ___awtoft@sign 003B  
                      _getDimmer_PFERROR 2F05                        _setDimmer_PFERROR 2FC0  
                          ___ftpack@sign 0024                           _setLoad_Enable 0800  
            __size_of_CC2500_ClearRXFIFO 0005                            ??_Buzzer_Main 0025  
            __size_of_CC2500_ClearTXFIFO 0005                      CC2500_RxData@loop_f 0025  
                         __pbitbssCOMMON 0380                       Flash_Memory_Read@i 0021  
                      setLoad_Count@load 0071                         ?_CC2500_ReadByte 0071  
                   __size_of_getPF_ERROR 000E                       ?_getDimmer_PFERROR 0071  
                     ?_setDimmer_PFERROR 0022           __size_of_setLED_Initialization 0012  
          __end_of_setLED_Initialization 20D4                             ?_setRF_Learn 0022  
                                  status 0003                                    wtemp0 007E  
              getDimmer_TempERROR@dimmer 0022                       _setRF_DimmerLights 1B7E  
            __size_of_Flash_Memory_Write 0036                   ??_MainT_Initialization 0020  
                      ?_CC2500_SIDLEMode 0071               __size_of_RF_Initialization 0005  
                         ?_RfPointSelect 0071                           setSw_Status@sw 0023  
               setLoad_StatusOff@command 0023         __size_of_DelayOff_Initialization 0005  
                 ?_setLoad_AH_AL_Restore 0071                    setLoad_Enable@command 0022  
                 ??_Flash_Memory_Erasing 0020                setDimmerLights_Main@close 0052  
                    ??_getDimmer_PFERROR 0022                      ??_setDimmer_PFERROR 0023  
                        _getPercentValue 26AD                       ??_CC2500_SIDLEMode 0024  
                       ?_CC2500_PowerRST 0071             __size_of_setPowerFault_ERROR 005D  
                   __end_of_getLoad_Safe 20C2                        ??_setPercentValue 004C  
                           __end_of_main 089D                      ?_setRF_DimmerLights 0020  
                     setLoad_Enable@load 0023                         ?_CC2500_WriteREG 0022  
                              ??_ADC_Set 0020                  __end_of_setDimmerLights 12B2  
                   _setSw_Initialization 2DD4                             ?_setBuz_Main 0071  
             __size_of_setLoad_StatusOff 0038                                   ??_main 0069  
                          ___fttol@sign1 0030                  _getDimmerLights_Trigger 2318  
                           ?_setLog_Code 0071                  _setControl_Lights_Table 1122  
                 ?_Buzzer_Initialization 0071                  ??_DlyOff_Initialization 0022  
                __end_of_PowerFault_Main 2D79                               _Receive_GO 0381  
                             _Receive_OK 0382                                ??_IOC_ISR 0071  
                 ?_setDimmerLights_ERROR 0071                                ??_IOC_Set 0020  
        __end_of_DimmerLightsPointSelect 2E92                                   ?_MainT 0071  
                 ?_setDimmerLights_AdjRF 0071                                ??_INT_ISR 0075  
                 ?_setDimmerLights_AdjGo 0022                 __size_of_setRFSW_Control 00AC  
              __end_of_getDimmer_PFERROR 2F14                __end_of_setDimmer_PFERROR 2FD0  
                       ??_setRFSW_Status 0023                                ??_INT_Set 0020  
                ??_Switch_Initialization 0025                   ?_setDimmerLights_Close 0022  
                 __end_of_setLoad_Enable 0815                   _setLoad_Initialization 208D  
                   __end_of_getTemp_Safe 2F32                        _setOverTemp_ERROR 1CB2  
                      i1RfPointSelect@rf 0072                     ??_setRF_DimmerLights 0021  
                                 ?_getAD 0020                              _DlyOff_Main 10A0  
                                 _ADCON0 009D                                   _ADCON1 009E  
                 ?_setBuz_Initialization 0071                                ??_RF_Main 0069  
                                 _ADRESH 009C                                   _ADRESL 009B  
             i1setLoad_StatusOff@command 0074                        ?_getPowerFault_AD 0027  
                       ___awdiv@dividend 0022                           setRF_Enable@rf 0026  
                       __end_of___awtoft 2368                                   _ANSELA 018C  
                                 _ANSELB 018D                                   _ANSELC 018E  
                       __end_of___ftpack 1D94                       ?_setOverTemp_ERROR 002F  
                                 _IOCBF2 1CB2                  _setDimmerLights_Trigger 2016  
                                 i1l8320 0011                                   i1l8330 04D5  
                                 i1l8331 04B1                                   i1l8332 04B0  
                                 i1l8340 03F0                                   i1l8333 04AF  
                                 i1l8341 04AE                                   i1l8326 04FC  
                                 i1l8350 04AC                                   i1l8342 0449  
                                 i1l8334 03F2                                   i1l8351 04AB  
                                 i1l8343 0412                                   i1l8335 03D5  
                                 i1l8327 0375                                   i1l8352 04D4  
                                 i1l8344 042D                                   i1l8336 03CE  
                                 i1l8328 0374                                   i1l8353 04D3  
                                 i1l8345 042C                                   i1l8337 03D4  
                                 i1l8329 0373                                   i1l8354 04FB  
                                 i1l8346 0448                                   i1l8338 03F1  
                                 i1l8347 04AD                                   i1l8339 03EA  
                                 i1l8355 04FC                                   i1l8348 046F  
                                 i1l8364 20F8                                   i1l8349 046E  
                                 i1l8365 20F8                                   i1l8358 2DAE  
                                 i1l8374 21C9                                   i1l8375 21C8  
                                 i1l8376 21C9                                   i1l9550 2E67  
                                 i1l9631 2534                                   i1l9632 2541  
                                 i1l9633 254E                                   i1l9634 254E  
                                 i1l9549 2E67                                   _FVRCON 0117  
                                 _PMADRH 0192                                   _PMADRL 0191  
                                 _PMDATH 0194                                   _PMDATL 0193  
                                 _PMCON2 0196                                   u550_20 21B5  
                                 u550_21 21B4                                   u551_20 21BA  
                                 u551_21 21B9                                   u552_20 21C4  
                                 u560_20 03A5                                   u552_21 21C3  
                                 u560_21 03A4                       ??_getPowerFault_AD 0028  
                                 u561_20 03B3                                   u553_20 032E  
                                 u561_21 03B2                                   u553_21 032D  
                                 u570_20 0468                                   u562_20 03BB  
                                 u554_20 0332                                   _OSCCON 0099  
                                 u570_21 0467                                   u562_21 03BA  
                                 u554_21 0331                                   u643_20 2E61  
                                 u571_20 0488                                   u563_20 03C6  
                                 u555_20 033E                                   u643_21 2E60  
                                 u571_21 0487                                   u563_21 03C5  
                                 u555_21 033D                                   u644_20 252D  
                                 u572_20 04B6                                   u564_20 03E0  
                                 u556_20 0357                                   u644_21 252C  
                                 u572_21 04B5                                   u564_21 03DF  
                                 u556_21 0356                                   u549_20 21B1  
                                 u645_20 253A                                   u573_20 04CA  
                                 u565_20 03FA                                   u557_20 0370  
                                 u549_21 21B0                                   u645_21 2539  
                                 u573_21 04C9                                   u565_21 03F9  
                                 u557_21 036F                       __size_of_Load_Main 0005  
                                 u646_20 2547                                   u574_20 04ED  
                                 u566_20 040A                                   u558_20 037E  
                                 u646_21 2546                                   u574_21 04EC  
                                 u566_21 0409                                   u558_21 037D  
                                 u574_25 04E9                                   u647_20 2E06  
                                 u567_20 0422                                   u559_20 038C  
                                 u575_20 20EA                                   u647_21 2E05  
                                 u567_21 0421                                   u559_21 038B  
                                 u575_21 20E9                                   u568_20 043D  
                                 u576_20 20EE                                   u568_21 043C  
                                 u576_21 20ED                                   u569_20 0451  
                                 u569_21 0450                                   _TMR0IE 005D  
                                 _TMR0IF 005A                                   _IO_Set 217A  
                     DelayTime_1us@count 0020                               _Sw_AdjFunc 23BF  
                             _VarProduct 01C5           __size_of_CC2500_PowerOnInitial 0016  
          __end_of_CC2500_PowerOnInitial 2162                                   _Dimmer 00B8  
                    ??_setOverTemp_ERROR 0030                                   _DlySw1 00D2  
             __end_of_Mcu_Initialization 217A                      __end_of_Buzzer_Main 2D38  
                                 _Memory 007C                                   _Timer0 00E8  
     __end_of_setDimmerLights_TriggerAdj 208D               _setDimmerLights_TriggerAdj 207C  
          setDimmerLights_Switch@command 0022                               _Sw_OffFunc 1F80  
                     setTemp_Enable@temp 0022                                   ___wmul 2232  
                              ??___awdiv 0024                                ??___ftadd 0052  
           __size_of_DelayOffPointSelect 000E                                ??___ftdiv 0042  
                  setDimmerLights@lights 0028                                ??___ftmul 0042  
                              ??___fttol 002C             ?_Flash_Memory_Initialization 0071  
                              ??___lwdiv 0024                          i1_RfPointSelect 2DFF  
            setDimmerLights_AdjRF@lights 005D                   ??_setDimmerLights_Main 0051  
                                 _r_data 00C1                   ??_setDimmerLights_Open 0023  
                                 _s_data 00C2                                   _setLED 11A4  
                       _DimmerLightsIntr 00B9                    ?_setSw_Initialization 0071  
                  setDimmerLights@status 0026                         ___awdiv@quotient 0027  
                                 _setBuz 1499                       __size_of_Temp_Main 0005  
            __end_of_Load_Initialization 2D56         ??_setDimmerLights_Initialization 005C  
        ?_setDimmerLights_Initialization 0071                                   clrloop 2001  
                        _LoadPointSelect 2E92                       __size_of_Sw_OnFunc 005D  
                  ___ftmul@f3_as_product 0047               setDimmer_TempERROR@command 0022  
              __end_of_setOverTemp_ERROR 1D20             ??_getDimmerLights_StatusFlag 0022  
               Flash_Memory_Read@address 0022                        RfSWPointSelect@sw 0021  
                       ??_setRF_RxStatus 0023                  getDimmer_PFERROR@dimmer 0022  
            __size_of_DimmerLights_ERROR 007E                    __end_of_SwPointSelect 2EBC  
                        ?_setLoad_Enable 0022                  getPowerFault_AD@channel 0027  
                          ?_setRF_Enable 0025                           _setTemp_Enable 2FD0  
                        _RfSWPointSelect 2EE7             __size_of_Flash_Memory_Modify 00A3  
            __size_of_DimmerLights_Close 0026                  __size_of_LedPointSelect 002B  
         setPowerFault_Initialization@pf 0021                      Flash_Memory_Write@i 0021  
           __size_of_Flash_Memory_Unlock 0009                               _TouchPower 2DAF  
            __size_of_CC2500_InitPATable 0027                      CC2500_TxData@loop_e 0025  
                __end_of_getPercentValue 26EE     __end_of_setPowerFault_Initialization 2016  
  __size_of_setPowerFault_Initialization 0010             _setPowerFault_Initialization 2006  
            ??_PowerFault_Initialization 0022                          ??_RfPointSelect 0020  
                        _TempPointSelect 2D7E              setDimmerLights_AdjGo@lights 0023  
              setDimmer_LoadERROR@dimmer 0023                                ?_LED_Main 0071  
                             ___ftadd@f1 004C                               ___ftadd@f2 004F  
                       _setRF_Main$16648 0068                      setSw_Enable@command 0022  
                             ___ftdiv@f1 003F                               ___ftdiv@f2 003C  
                             ___ftdiv@f3 0047                               ___awtoft@c 0036  
           ?_DimmerLights_Initialization 0071                               ___ftmul@f1 003C  
                             ___ftmul@f2 003F                    __end_of_getLoad_ERROR 2FF0  
                          __end_of_MainT 1000                               ___fttol@f1 0028  
                         __pcstackCOMMON 0071                     _setLoad_LightsStatus 25BE  
                           __pidataBANK3 2731                            __end_of_getAD 220E  
                              ?_TMR0_ISR 0071                                ?_TMR0_Set 0071  
                 setLoad_AH_AL_Restore@i 0021             __size_of_setDimmerLights_Adj 0069  
                     _LED_Initialization 2E4D                ??_getDimmerLights_Trigger 0022  
              ??_setControl_Lights_Table 0064                         ??_DelayTimejudge 0020  
            ?_getDimmerLights_StatusFlag 0071                __size_of_setLoad_StatusOn 0011  
                setDimmer_PFERROR@dimmer 0023            ??_Flash_Memory_Initialization 004D  
               __size_of_setRF_ReceiveGO 000D                         ?_setDimmerLights 0026  
                      __end_of_Load_Main 2D74                         ??_BuzPointSelect 0020  
                       ?_PowerFault_Main 0071                 __end_of_setDimmerReClock 2DAF  
                     __size_of_getRxData 007D                      ?_LED_Initialization 0071  
                 __end_of_setTemp_Enable 2FE0                        ?_CC2500_WriteByte 0071  
                                ??_MainT 005C                 __end_of_setDimmer_Detect 2F90  
             __size_of_getDimmer_PFERROR 000F               __size_of_setDimmer_PFERROR 0010  
                         ??_setRF_Enable 0026                 setOverTemp_ERROR@command 002F  
           __size_of_getDimmer_LoadERROR 000E             __size_of_setDimmer_LoadERROR 0010  
                         _DimmerLights11 007A                     __size_of_setLED_Main 004E  
              ??_setDimmerLights_Trigger 0023                                  ??_getAD 0022  
                    _Temp_Initialization 2D4C                       ??_CC2500_WriteByte 0020  
           setDimmerLights_Switch@lights 0023                            ?_setLoad_Main 0071  
         __size_of_PowerFaultPointSelect 0006                               __pbssBANK0 006A  
                             __pbssBANK1 00A0                               __pbssBANK2 0120  
                             __pbssBANK4 0220            __end_of_PowerFaultPointSelect 2D8A  
                            _Buzzer_Main 2D33                        ??_setRFSW_Control 002E  
              setDimmer_TempERROR@dimmer 0023                        __end_of_Temp_Main 2D6F  
                                ?_IO_Set 0071                               ??_LED_Main 0023  
                _DelayOff_Initialization 2D47                               __pnvCOMMON 007C  
                            ?_Sw_AdjFunc 0071                    __size_of_getLoad_Safe 0012  
                      __end_of_Sw_OnFunc 1B21            ?_setPowerFault_Initialization 0071  
                             _getPF_Safe 2F32                            ??_Switch_Main 0033  
                         DelayTime_1us@i 0022                           DelayTime_1us@j 0024  
                   ??_LED_Initialization 0025                             _DimmerLights 006A  
                      LedPointSelect@led 0021                  __end_ofi1_RfPointSelect 2E0C  
                    i1_setLoad_StatusOff 2518                       __size_of_setINT_GO 000A  
                 __size_of_DelayOff_Main 0005                     __size_of_setRF_Learn 000F  
                  __end_of_getTemp_ERROR 2F23                              setBuz@count 0029  
           __size_of_getDimmer_TempERROR 000E             __size_of_setDimmer_TempERROR 0010  
                             __pmaintext 0815                    ?_setLoad_LightsStatus 0022  
                    _CC2500_WriteCommand 2137                     ?_Temp_Initialization 0071  
                            ?_Sw_OffFunc 0071         __size_of_DimmerLightsPointSelect 000E  
                       ??_setDelayOff_GO 0025                  __end_of_LoadPointSelect 2EA0  
          ??_DimmerLights_Initialization 005F                                  ?___wmul 0020  
                             ??_TMR0_ISR 0076                            ?_setTemp_Main 0071  
                             ??_TMR0_Set 0020                               _getLoad_AD 089D  
                             __pintentry 0004                   ??_setSw_Initialization 0024  
                    LoadPointSelect@load 0021                            ?_setSw_Enable 0022  
                     __size_of_setTxData 0101                      TempPointSelect@temp 0071  
                ?_setDimmerLights_Switch 0022                                  ?_setLED 0022  
                             __ptext5000 2EE7                               __ptext5001 2D97  
                             __ptext5010 2DF3                               __ptext5002 2EA0  
                             __ptext5011 2D29                               __ptext5003 2D84  
                             __ptext5020 19C6                               __ptext5012 2D90  
                             __ptext5004 2D7E                               __ptext5021 1B7E  
                             __ptext5013 2122                               __ptext5005 241C  
                             __ptext5030 2518                               __ptext5022 2E76  
                             __ptext5014 217A                               __ptext5006 2E92  
                             __ptext5031 2E0C                               __ptext5023 244C  
                             __ptext5015 210D                               __ptext5007 2193  
                             __ptext5032 21AD                               __ptext5024 2368  
                             __ptext5016 1867                               __ptext5008 21EA  
                             __ptext5033 2DFF                               __ptext5025 2257  
                             __ptext5017 2ED8                               __ptext5009 2DCA  
                             __ptext5034 2E5A                               __ptext5026 2E68  
                             __ptext5018 20F9                               __ptext5035 2DA6  
                             __ptext5019 2E84                               __ptext5036 0000  
                             __ptext5028 20E6                               __ptext5029 032A  
                             __ptext4900 2D60                               __ptext4901 214C  
                             __ptext4910 2E40                               __ptext4902 2D5B  
                             __ptext4911 24E2                               __ptext4903 1F80  
                             __ptext4920 227D                               __ptext4912 2D56  
                             __ptext4904 23BF                               __ptext4921 26AD  
                             __ptext4913 2D51                               __ptext4905 1AC4  
                             __ptext4930 1E09                               __ptext4922 10A0  
                             __ptext4914 2D4C                               __ptext4906 2DD4  
                             __ptext4931 1A15                               __ptext4923 2D47  
                             __ptext4915 2E33                               __ptext4907 15EA  
                             __ptext4940 2E19                               __ptext4932 2D33  
                             __ptext4924 2D42                               __ptext4916 20C2  
                             __ptext4908 18DE                               __ptext4941 208D  
                             __ptext4933 2DC1                               __ptext4925 2E26  
                             __ptext4917 2393                               __ptext4909 24AE  
                             __ptext4950 0800                               __ptext4942 2DB8  
                             __ptext4934 2340                               __ptext4926 2D3D  
                             __ptext4918 1A69                               __ptext4870 153F  
                             __ptext4951 2FD0                               __ptext4943 2FF0  
                             __ptext4935 0961                               __ptext4927 2D38  
                             __ptext4919 122B                               __ptext4871 1E85  
                             __ptext4960 2FA0                               __ptext4952 1892  
                             __ptext4944 20B0                               __ptext4936 1748  
                             __ptext4928 22CA                               __ptext4880 2D9E  
                             __ptext4872 1122                               __ptext4961 207C  
                             __ptext4953 101E                               __ptext4945 2F32  
                             __ptext4937 0C0F                               __ptext4929 23ED  
                             __ptext4881 25F6                               __ptext4873 2D74  
                             __ptext4970 2EBC                               __ptext4962 206B  
                             __ptext4954 089D                               __ptext4946 2F23  
                             __ptext4938 2F41                               __ptext4890 04FD  
                             __ptext4882 1B21                               __ptext4874 2D6F  
                             __ptext4971 2318                               __ptext4963 25BE  
                             __ptext4955 2D2E                               __ptext4947 2FE0  
                             __ptext4939 2006                               __ptext4891 1351  
                             __ptext4883 1CB2                               __ptext4875 2D6A  
                             __ptext4980 2027                               __ptext4972 2049  
                             __ptext4964 205A                               __ptext4956 2162  
                             __ptext4948 07F2                               __ptext4892 22F1  
                             __ptext4884 1D94                               __ptext4876 26EE  
                             __ptext4981 2016                               __ptext4973 2038  
                             __ptext4965 11A4                               __ptext4957 192A  
                             __ptext4949 2F14                               __ptext4893 20D4  
                             __ptext4885 2D65                               __ptext4877 0D3F  
                             __ptext4869 2D79                   __size_of_DelayTime_1us 0031  
                             __ptext4990 1499                               __ptext4982 2F70  
                             __ptext4974 2F90                               __ptext4966 2586  
                             __ptext4958 2FC0                               __ptext4894 1696  
                             __ptext4886 1978                               __ptext4878 0689  
                             __ptext4991 2F50                               __ptext4983 2F60  
                             __ptext4975 22A3                               __ptext4967 262F  
                             __ptext4959 2FB0                               __ptext4895 2E4D  
                             __ptext4887 0E75                               __ptext4879 0018  
                             __ptext4992 0A2B                               __ptext4984 2DE8  
                             __ptext4976 2F80                               __ptext4968 2F05  
                             __ptext4896 220E                               __ptext4888 13F4  
                             __ptext4993 1C45                               __ptext4985 1000  
                             __ptext4977 209E                               __ptext4969 2ECA  
                             __ptext4897 1F02                               __ptext4889 2DDE  
                             __ptext4994 12B2                               __ptext4986 254F  
                             __ptext4978 2774                               __ptext4898 1BDC  
                             __ptext4995 1D20                               __ptext4987 2EF6  
                             __ptext4979 0B0E                               __ptext4899 266D  
                             __ptext4996 27B9                               __ptext4988 21CA  
                             __ptext4997 2232                               __ptext4989 2137  
                             __ptext4998 2EAE                               __ptext4999 2DAF  
                                _ADC_Set 2D90                _PowerFault_Initialization 2D56  
                                ?_setBuz 0029                                ?___awtoft 0036  
                              ?___ftpack 0020                               _getTemp_AD 101E  
           __end_of_setRF_Initialization 2D9E                    __size_of_getTemp_Safe 000F  
                          ?_setSw_Status 0022                       _setRFSW_AdjControl 26EE  
                __end_of_RfSWPointSelect 2EF6                                  i1l13133 2E0B  
                                i1l13134 2E0B                                  i1l13146 2E18  
                                i1l18300 21B1                                  i1l18302 21B5  
                                i1l18310 032A                                  i1l18304 21BA  
                                i1l18400 04DF                                  i1l18320 033E  
                                i1l18312 032E                                  i1l18306 21BC  
                                i1l18402 04ED                                  i1l18330 037E  
                                i1l18322 0347                                  i1l18314 0332  
                                i1l18410 20F0                                  i1l18412 2DA6  
                                i1l18308 21C4                                  i1l18340 03BB  
                                i1l18332 038C                                  i1l18324 0357  
                                i1l18316 0335                                  i1l18404 20E6  
                                i1l18414 2DA9                                  i1l18350 03EA  
                                i1l18342 03C6                                  i1l18334 0395  
                                i1l18326 0370                                  i1l18318 0336  
                                i1l18406 20EA                                  i1l18416 2E0D  
                                i1l18360 0422                                  i1l18344 03CE  
                                i1l18352 03F2                                  i1l18336 03A5  
                                i1l18328 0375                                  i1l18408 20EE  
                                i1l18418 2E11                                  i1l18370 0458  
                                i1l18362 042D                                  i1l18354 03FA  
                                i1l18346 03D5                                  i1l18338 03B3  
                                i1l18380 049D                                  i1l18372 0468  
                                i1l18364 043D                                  i1l18356 040A  
                                i1l18348 03E0                                  i1l18292 0008  
                                i1l18390 04BF                                  i1l18382 049F  
                                i1l18374 046F                                  i1l18358 0412  
                                i1l18366 0449                                  i1l18294 000B  
                                i1l18392 04CA                                  i1l18384 04A0  
                                i1l18376 0478                                  i1l18368 0451  
                                i1l18296 000E                                  i1l18730 2E61  
                                i1l18298 21AD                                  i1l18394 04D0  
                                i1l18378 0488                                  i1l18386 04B1  
                   ?i1_setLoad_StatusOff 0073                                  i1l18740 2534  
                                i1l18732 2519                                  i1l18396 04D1  
                                i1l18388 04B6                                  i1l18750 2E06  
                                i1l18742 253A                                  i1l18734 251D  
                                i1l18398 04D5                                  i1l18728 2E5B  
                                i1l18744 2541                                  i1l18736 2527  
                                i1l18746 2547                                  i1l18738 252D  
                                i1l18748 2E00               __size_of_setOverTemp_ERROR 006E  
                   __size_of_setBuz_Main 00E3                                  _IOC_ISR 21AD  
                        ?_setTemp_Enable 0021                                  _IOC_Set 2DF3  
                   __size_of_setLog_Code 004C                                  _INT_ISR 20E6  
              __size_of_getDimmer_Detect 0012                                  _INT_Set 2D29  
                   ?_CC2500_WriteCommand 0071                        _Flash_Memory_Main 1978  
                      _Flash_Memory_Read 2193                   __size_of_CC2500_RxData 007C  
                __end_of_TempPointSelect 2D84                      _setPowerFault_ERROR 1B21  
                 __size_of_CC2500_TxData 0054                      ?_setRFSW_AdjControl 0071  
    setDimmerLights_TriggerERROR@command 0022                             _getLoad_Safe 20B0  
                            setTxData@rf 0023                                  _RF_Data 00A0  
                         ??_setLoad_Main 0032                                  _RF_Main 2D79  
                     ?_Flash_Memory_Main 0071                       ?_Flash_Memory_Read 0071  
        __end_of_getDimmerLights_Trigger 2340          __end_of_setControl_Lights_Table 11A4  
                             __stringtab 1800                              ?_TouchPower 0071  
                        _setPercentValue 2393                            getPF_ERROR@pf 0021  
                ??_setLoad_AH_AL_Restore 0020                            setLog_Code@rf 002F  
                       ?_getPercentValue 0071                                  _Dimmer1 00E3  
                            Sw_OnFunc@sw 002E             __end_of_CC2500_FrequencyCabr 2E33  
                        __size_of_IO_Set 0019                      ??_Flash_Memory_Main 0027  
                    ??_Flash_Memory_Read 0020                                  _VarLED1 00DB  
                                _VarLED2 00DF                        __end_of_getRxData 1F02  
             __end_of_setPowerFault_Main 0E75                 _CC2500_registers_address 1801  
                         RF_RxDisable@rf 0024                    ??_Temp_Initialization 0022  
        __end_of_setDimmerLights_Trigger 2027                     ?_setPowerFault_ERROR 002F  
                                _Product 006F                     ??_setRFSW_AdjControl 0061  
                           _getTemp_Safe 2F23                           ??_setTemp_Main 0032  
         __end_of_setDimmerLights_Switch 2038                                  ___awdiv 1C45  
                                ___ftadd 0C0F                           ??_setSw_Enable 0023  
                                ___ftdiv 1748                          __size_of___wmul 0025  
                                ___ftmul 0961                                  ___fttol 12B2  
                    __end_of_Switch_Main 2D6A                                  ___lwdiv 27B9  
                ??_Buzzer_Initialization 0024                               ??___awtoft 0039  
                             ??___ftpack 0025                          __size_of_setLED 0087  
                   setRFSW_AdjControl@sw 0063                  ??_setDimmerLights_ERROR 0025  
                        __size_of_setBuz 00A6                           ??_setSw_Status 0023  
                ??_setDimmerLights_AdjRF 005C                  ??_setDimmerLights_AdjGo 0023  
              __size_of_CC2500_SIDLEMode 0005                    ??i1_setLoad_StatusOff 0075  
                           __size_of_ISR 0011                  ??_setDimmerLights_Close 0023  
                ?_setLoad_Initialization 0071                __end_of_Flash_Memory_Main 19C6  
              __end_of_Flash_Memory_Read 21AD                      __size_of_Sw_AdjFunc 002E  
                             _setRF_Main 153F                            _DelayOff_Main 2D60  
                ??_setBuz_Initialization 0024                        _DimmerLights_Main 2D9E  
                      __end_of_setINT_GO 2DD4           __size_of_DlyOff_Initialization 000B  
                  ??_CC2500_WriteCommand 0022            __end_of_DlyOff_Initialization 2DF3  
                      ??_setRF_ReceiveGO 0074               __end_of_CC2500_ClearRXFIFO 2D42  
               ??_setTemp_Initialization 0021               __end_of_CC2500_ClearTXFIFO 2D3D  
          DimmerLightsPointSelect@lights 0021                            ??_getPF_ERROR 0021  
                           ?_DlyOff_Main 0071                       ?_DimmerLights_Main 0071  
                   setBuz_Enable@command 0022                           _LedPointSelect 1867  
                 __size_of_setBuz_Enable 0010                      _DelayOffPointSelect 2E76  
         __size_of_Switch_Initialization 0012                      __size_of_Sw_OffFunc 0080  
          __end_of_Switch_Initialization 20E6                     end_of_initialization 24AB  
              ??_DelayOff_Initialization 0023                               _setLoad_GO 2F90  
                      _CC2500_InitSetREG 23ED                            _DelayTime_1us 244C  
                      __end_of_setTxData 0C0F               __end_of_Flash_Memory_Write 2518  
                 __size_of_setLoad_ERROR 0075                                  init_ram 2D8A  
                     ?_CC2500_InitSetREG 0071                      ??_DimmerLights_Main 0054  
                   Flash_Memory_Read@ret 0023                                  initloop 2D8B  
                             _setSw_Main 04FD                    CC2500_ReadByte@loop_b 0021  
                      _CC2500_ReadStatus 21CA                              ?_getPF_Safe 0071  
                 __size_of_setLoad_Count 0014                     Flash_Memory_Modify@i 0026  
                  _setLED_Initialization 20C2                            _CC2500_Enable 0380  
                 getDimmer_Detect@dimmer 0023                         ?i1_RfPointSelect 0071  
                 ??_setLoad_LightsStatus 0024                       ?_CC2500_ReadStatus 0071  
                       setRFSW_Status@sw 0023            __size_of_MainT_Initialization 0015  
                  ??_setPowerFault_ERROR 0030                 __size_of_CC2500_ReadByte 002B  
                          _CC2500_RxData 1E09                            _CC2500_TxData 1A15  
                    ??_CC2500_InitSetREG 0025                     __end_of_setRF_Enable 2318  
         ??_setPowerFault_Initialization 0021              ?_setDimmerLights_TriggerAdj 0022  
              __size_of_getPowerFault_AD 004C            __size_of_Flash_Memory_Erasing 000D  
                   ?_DelayOffPointSelect 0071                      _Flash_Memory_Modify 1351  
                       ?_LoadPointSelect 0071                              ?_getLoad_AD 0027  
                         getLoad_AD@load 002D                      _Flash_Memory_Unlock 2DB8  
                    ??_CC2500_ReadStatus 0022                   setRF_Initialization@rf 0071  
                       _setLoad_StatusOn 205A         getDimmerLights_StatusFlag@Status 0024  
                CC2500_InitSetREG@loop_c 0028                              ?_getTemp_AD 0027  
         __end_of_setLoad_Initialization 209E                      __size_of_TouchPower 0009  
               setLED_Initialization@led 0024                   setDimmer_Detect@dimmer 0023  
                 setSw_Initialization@sw 0024                __end_of_DimmerLights_Main 2DA6  
                     _Mcu_Initialization 2162                         ??_setLoad_Enable 0023  
               __size_of_CC2500_PowerRST 0037                           ?_DelayOff_Main 0071  
                       ?_RfSWPointSelect 0071         getDimmerLights_StatusFlag@length 0023  
                 __end_of_LedPointSelect 1892                  __end_of_setPercentValue 23BF  
               __size_of_CC2500_WriteREG 001E                __end_of_CC2500_InitSetREG 241C  
                    ?_Mcu_Initialization 0071                         ?_TempPointSelect 0071  
                   ?_Flash_Memory_Modify 0071              __size_of_setRF_DimmerLights 005E  
                         ?_DelayTime_1us 0020                      _setDimmerLights_Adj 1BDC  
                   ?_Flash_Memory_Unlock 0071              getDimmerLights_StatusFlag@i 0025  
              __end_of_CC2500_ReadStatus 21EA                            ?_RF_RxDisable 0071  
                            ___ftdiv@exp 004A                      __end_of_getPF_ERROR 0800  
                         __end_of_IO_Set 2193                     _setRF_Initialization 2D97  
                            _Switch_Main 2D65                        __size_of_LED_Main 000D  
                         ?_CC2500_RxData 0071                           ?_CC2500_TxData 0071  
                _DimmerLightsPointSelect 2E84                      _getDimmer_LoadERROR 2ECA  
                            ___ftmul@exp 0046                    _CC2500_PowerOnInitial 214C  
                    _setDimmer_LoadERROR 2FB0                     ??_Mcu_Initialization 0021  
                  ??_DelayOffPointSelect 0020                            _setBuz_Enable 2F50  
                  setOverTemp_ERROR@temp 0031                     ?_setDimmerLights_Adj 004D  
                   __end_of_setLoad_Main 032A                     setRF_DimmerLights@on 0020  
                         __end_of___wmul 2257                             setRF_Main@rf 0067  
                          _setLoad_ERROR 1D94                        __size_of_TMR0_ISR 01D3  
                      __size_of_TMR0_Set 0015            __size_of_setDimmerLights_Main 00A5  
                         __end_of_setLED 122B            __size_of_setDimmerLights_Open 0011  
                         __end_of_setBuz 153F                            _setLoad_Count 20F9  
                      _DimmerPointSelect 2ED8                     _CC2500_FrequencyCabr 2E26  
             __end_of_DimmerLights_ERROR 1F80                  setLoad_StatusOn@command 0022  
             __size_of_Flash_Memory_Main 004E               __size_of_Flash_Memory_Read 001A  
                            ?_setRF_Main 0071                          _setRFSW_Control 15EA  
                    __size_of_getPF_Safe 000F            getDimmerLights_Trigger@Status 0024  
                      ?_setDimmerReClock 0071                      start_initialization 247D  
                      _setRF_DimmerValue 25F6                          ?_LedPointSelect 0071  
                       _getDimmer_Detect 209E               __end_of_DimmerLights_Close 22A3  
                              _Load_Main 2D6F                      _getDimmer_TempERROR 2EBC  
               setDimmer_PFERROR@command 0022                     ?_getDimmer_LoadERROR 0071  
                     ?_DimmerPointSelect 0071                  setLoad_StatusOff@lights 0022  
                            __end_of_ISR 0015                      _setDimmer_TempERROR 2FA0  
                   ?_setDimmer_LoadERROR 0022                        ?_setDimmer_Detect 0022  
                  ??_Flash_Memory_Modify 0024             __size_of_Load_Initialization 0005  
     __size_of_PowerFault_Initialization 0005                       ??_setDimmerReClock 0071  
                     ?_setRF_DimmerValue 0071               __end_of_CC2500_InitPATable 22F1  
        __size_of_setTemp_Initialization 000D            getDimmerLights_Trigger@length 0023  
                  ??_Flash_Memory_Unlock 0020                     __end_of_setTemp_Main 07F2  
                     ??_setDimmer_Detect 0023                              ?_setLoad_GO 0022  
                         ??_RF_RxDisable 0024                     __end_of_setSw_Enable 3000  
                        RfPointSelect@rf 0021                      __size_of_getLoad_AD 00C4  
                           ?_Buzzer_Main 0071                      ??_DimmerPointSelect 0020  
                               ??_IO_Set 0020                                _VarErrLED 00D7  
                            ?_setSw_Main 0071                      ??_setRF_DimmerValue 005E  
                           ??_Sw_AdjFunc 0024                      __size_of_getTemp_AD 0082  
                 ?_setLED_Initialization 0071                     __end_of_setSw_Status 2F70  
                  ?_setRF_Initialization 0071                i1setLoad_StatusOff@lights 0073  
                              _VarMemory 01A0                  __size_of_setRFSW_Status 0010  
                  __end_of_RfPointSelect 2EAE                __size_of_CC2500_WriteByte 0026  
                              _VarTimer0 00CB                                _Temp_Main 2D6A  
                   ?_getDimmer_TempERROR 0071                     ?_setDimmer_TempERROR 0022  
                              _Rx_Length 00BD                           ?_setBuz_Enable 0022  
                           ??_Sw_OffFunc 0027                                _Sw_OnFunc 1AC4  
                setRF_DimmerValue@lights 0060                    ??_setDimmerLights_Adj 004E  
                               ??___wmul 0024                   __size_of_SwPointSelect 000E  
                              _Tx_Length 00BF                              __pdataBANK3 01A0  
                         ?_setLoad_ERROR 002F                                 ??_setLED 0023  
                       ??_setTemp_Enable 0022                                 ?_ADC_Set 0071  
                               ??_setBuz 002C                __end_of_DimmerPointSelect 2EE7  
                        ??_DelayOff_Main 0031                        ??_CC2500_ReadByte 0020  
                         ?_setLoad_Count 0020                         _CC2500_SIDLEMode 2D42  
             __size_of_DimmerLights_Main 0008                __end_of_setRF_DimmerValue 262F  
                  ?_CC2500_FrequencyCabr 0071                         setINT_GO@command 0020  
                          ??_setLED_Main 0022                        __size_of___awtoft 0028  
                      __size_of___ftpack 0074                                 ?_IOC_ISR 0071  
                  ??_getDimmer_LoadERROR 0022                              __pbssCOMMON 0078  
                               ?_IOC_Set 0071                       __end_of_Sw_AdjFunc 23ED  
                  ??_setDimmer_LoadERROR 0023                               ?_Load_Main 0071  
                  setTemp_Enable@command 0021                                 ?_INT_ISR 0071  
                    setRF_Enable@command 0025                            __pcstackBANK0 0020  
                               ?_INT_Set 0071                         ?_setPercentValue 0071  
                        ??_DelayTime_1us 0022               __size_of_CC2500_InitSetREG 002F  
               __size_of_setDimmerLights 0087                            DlyOff_Main@sw 0030  
                 __size_of_getLoad_ERROR 0010                        ??_CC2500_PowerRST 0026  
                            _getPF_ERROR 07F2                                 ?_RF_Main 0071  
                           Sw_AdjFunc@sw 0024                       __end_of_Sw_OffFunc 2000  
                           ??_TouchPower 0020                 __size_of_PowerFault_Main 0005  
                   __size_of_DlyOff_Main 0082               __size_of_CC2500_ReadStatus 0020  
                          ??_setRF_Learn 0023                        ??_CC2500_WriteREG 0023  
                          _DimmerLights1 014A                    CC2500_WriteREG@w_addr 0024  
             setLoad_Initialization@load 0022                    setDelayOff_GO@command 0023  
              ??_DimmerLightsPointSelect 0020           __size_of_setLoad_AH_AL_Restore 0030  
                  __size_of_setRF_Enable 0027                    _PowerFaultPointSelect 2D84  
                        ??_CC2500_RxData 0024            __end_of_setLoad_AH_AL_Restore 244C  
                __size_of_setRF_RxStatus 000F                          ??_CC2500_TxData 0024  
                              __pnvBANK0 006F                                __pnvBANK1 00E8  
            __size_of_LED_Initialization 000D                    ??_getDimmer_TempERROR 0022  
                 ?_CC2500_PowerOnInitial 0071                    ??_setDimmer_TempERROR 0023  
            setDimmerLights_Close@lights 0023                               ?_Temp_Main 0071  
                    __size_of_setRF_Main 00AB                         ___lwdiv@dividend 0022  
                  DelayOffPointSelect@sw 0021                 ?_getDimmerLights_Trigger 0071  
                             setBuz@time 002A                      setDelayOff_GO@value 0024  
               ?_setControl_Lights_Table 0071                               ?_Sw_OnFunc 0071  
                 _setTemp_Initialization 2E19                         _getPowerFault_AD 1892  
    __end_of_Flash_Memory_Initialization 1748              _Flash_Memory_Initialization 1696  
                               ?___awdiv 0020                                 ?___ftadd 004C  
                              _getRxData 1E85                                 ?___ftdiv 003C  
                               ?___ftmul 003C                                 ?___fttol 0028  
                               ?___lwdiv 0020                  __end_of_setRFSW_Control 1696  
                        _setRF_ReceiveGO 2E0C                      __size_of_setLoad_GO 0010  
                          ??_setBuz_Main 0022            __size_of_setSw_Initialization 000A  
                              __pstrings 1800           __size_of_Buzzer_Initialization 0005  
             setTemp_Initialization@temp 0021            __end_of_Buzzer_Initialization 2D60  
                          ??_setLog_Code 002E                       __end_of_TouchPower 2DB8  
                     _setPowerFault_Main 0D3F       setDimmerLights_TriggerERROR@lights 0024  
         __size_of_setDimmerLights_ERROR 005B                 ?_setDimmerLights_Trigger 0022  
                        DelayTimejudge@i 0021                      __size_of_setSw_Main 018C  
          __end_of_setDimmerLights_ERROR 1AC4             CC2500_ReadStatus@status_addr 0023  
         __size_of_setDimmerLights_AdjRF 0024           __size_of_setDimmerLights_AdjGo 0011  
          __end_of_setDimmerLights_AdjRF 2232            __end_of_setDimmerLights_AdjGo 207C  
                 CC2500_WriteByte@loop_a 0021           __size_of_setDimmerLights_Close 0011  
          __end_of_setDimmerLights_Close 205A                           __size_of_MainT 018B  
                              _r_address 00C0                           setBuz_Main@buz 0024  
                 __size_of_getTemp_ERROR 000F           __size_of_setBuz_Initialization 0009  
          __end_of_setBuz_Initialization 2DCA                      ?_setPowerFault_Main 0071  
                         __size_of_getAD 0024                             _setRF_Enable 22F1  
                       ___lwdiv@quotient 0025                  __size_of_DelayTimejudge 004F  
                          _SwPointSelect 2EAE                                _setINT_GO 2DCA  
                    __end_of_setLED_Main 1978                  __size_of_BuzPointSelect 000E  
               __end_of_setLoad_StatusOn 206B                   ??_setRF_Initialization 0020  
            __end_of_Temp_Initialization 2D51                        _CC2500_rfSettings 1830  
                         ___wmul@product 0024                                 _LED_Main 2E33  
                           getPF_Safe@pf 0021                             ??_getPF_Safe 0021  
                        SwPointSelect@sw 0021                 CC2500_InitPATable@loop_d 0027  
                              _setTxData 0B0E      __end_of_DimmerLights_Initialization 2DE8  
            _DimmerLights_Initialization 2DDE                          ??_setBuz_Enable 0023  
                     _CC2500_ClearRXFIFO 2D3D                    __size_of_setLoad_Main 0312  
                     _CC2500_ClearTXFIFO 2D38           setDimmerLights_Trigger@command 0022  
                         getTemp_AD@temp 002C                 setRF_DimmerLights@lights 0024  
                               _GO_nDONE 04E9                      __end_of_setRF_Learn 2F50  
                   ??_setPowerFault_Main 0032                            _getLoad_ERROR 2FE0  
               __size_of_getPercentValue 0041                           setLoad_GO@load 0023  
               setRF_DimmerLights@status 0023                          ??_setLoad_ERROR 0030  
                 setRF_ReceiveGO@command 0073              __size_of_setRFSW_AdjControl 0043  
                     _Flash_Memory_Write 24E2                               ?_getRxData 0071  
                               _TMR0_ISR 032A                             ??_getLoad_AD 0028  
                 CC2500_InitSetREG@temp1 0026                   CC2500_InitSetREG@temp2 0027  
            __end_ofi1_setLoad_StatusOff 254F                        setRF_ReceiveGO@rf 0074  
                               _TMR0_Set 2122                      ?_CC2500_ClearRXFIFO 0071  
               getDimmerLights_Trigger@i 0025                      ?_CC2500_ClearTXFIFO 0071  
                        ??_setLoad_Count 0021        setDimmerLights_TriggerAdj@command 0022  
                               _RF_Count 00B5                     __end_of_RF_RxDisable 24E2  
                           ??_getTemp_AD 0028               __size_of_DimmerPointSelect 000F  
            __end_of_CC2500_WriteCommand 214C                   ??_CC2500_FrequencyCabr 0026  
                i1setLoad_StatusOff@load 0075                  DlyOff_Initialization@sw 0022  
                       __size_of_ADC_Set 0007                        ___wmul@multiplier 0020  
             __size_of_setRF_DimmerValue 0039                      ?_Flash_Memory_Write 0071  
             setPowerFault_ERROR@command 002F                    __size_of_setTemp_Main 0169  
           __end_of_MainT_Initialization 2122                  __size_of_setDelayOff_GO 0045  
                           Sw_OffFunc@sw 0029                    __size_of_setSw_Enable 0010  
                               _DelayOff 0079                             setSw_Main@sw 0032  
                            ??_Load_Main 0037                       __end_of_getPF_Safe 2F41  
                       __size_of_IOC_ISR 001D                         __size_of_IOC_Set 000C  
                    __end_of_setBuz_Main 0B0E             __end_of_Flash_Memory_Erasing 2E4D  
                         ?_SwPointSelect 0071                              getAD@adcon0 0026  
                            getAD@adcon1 0020                         __size_of_INT_ISR 0013  
                         setLED_Main@led 0022                         __size_of_INT_Set 0005  
                    __end_of_setLog_Code 192A                 setDimmerLights_Main@open 0051  
                  _DlyOff_Initialization 2DE8                    __size_of_setSw_Status 0010  
                             ?_setINT_GO 0071                     ??_CC2500_ClearRXFIFO 0024  
                   ??_CC2500_ClearTXFIFO 0024                         setBuz_Enable@buz 0023  
                           _setLoad_Main 0018                         __size_of_RF_Main 0005  
                     __end_of_getLoad_AD 0961                   ?_PowerFaultPointSelect 0071  
            __end_of_setPowerFault_ERROR 1B7E                    _Switch_Initialization 20D4  
                   ??_Flash_Memory_Write 0020                        ??_setDimmerLights 0027  
                         _setRFSW_Status 2F70                     __size_of_Buzzer_Main 0005  
                     __end_of_getTemp_AD 10A0                               ?_setTxData 0071  
                           ?_Switch_Main 0071                         _CC2500_WriteByte 2257  
                               _VarTMain 0120                        getLoad_AD@channel 0027  
           Flash_Memory_Initialization@i 004E                  __end_of_setRF_ReceiveGO 2E19  
                            ??_Temp_Main 0036                        ??_PowerFault_Main 0035  
              setLoad_AH_AL_Restore@load 0071                 __end_of_getDimmer_Detect 20B0  
                      setRFSW_Control@sw 0030                           ?_getLoad_ERROR 0071  
                          _getTemp_ERROR 2F14                 setLoad_LightsStatus@load 0025  
                            ??_Sw_OnFunc 002E                      _Load_Initialization 2D51  
                              setLED@led 0023            __size_of_setLoad_LightsStatus 0038  
                               _RxStatus 0383                  PowerFaultPointSelect@pf 0071  
   __end_of_setDimmerLights_TriggerERROR 266D    __size_of_setDimmerLights_TriggerERROR 003E  
           _setDimmerLights_TriggerERROR 262F                    i1LoadPointSelect@load 0072  
                               _TxStatus 0386                             _setTemp_Main 0689  
                       __size_of___awdiv 006D                         __size_of___ftadd 0130  
                       ?_setRFSW_Control 0071                        i1_LoadPointSelect 2E5A  
                       __size_of___ftdiv 00B8                             _setSw_Enable 2FF0  
                       __size_of___ftmul 00CA                         __size_of___fttol 009F  
                       __size_of___lwdiv 0047                 __size_ofi1_RfPointSelect 000D  
                               ___awtoft 2340                         ??_LedPointSelect 0020  
                               ___ftpack 1D20                       ?i1_LoadPointSelect 0071  
                           _setSw_Status 2F60                        getTemp_AD@channel 0027  
                           ??_setRF_Main 0066                 __size_of_LoadPointSelect 000E  
                   CC2500_WriteREG@value 0022                              _setLED_Main 192A  
                  setRFSW_Status@command 0022               __end_of_setRF_DimmerLights 1BDC  
               ?_DelayOff_Initialization 0071                                setBuz@buz 002D  
                       setDelayOff_GO@sw 0026                          ___lwdiv@divisor 0020  
                   ?_Load_Initialization 0071                          ___lwdiv@counter 0027  
                    ??i1_LoadPointSelect 0071                             ??_setLoad_GO 0023  
                ??_setLED_Initialization 0024                 __size_of_RfSWPointSelect 000F  
               setBuz_Initialization@buz 0071                   __end_of_setRFSW_Status 2F80  
           __end_of_setDimmerLights_Main 1499             __end_of_setDimmerLights_Open 2049  
                     _DimmerLights_ERROR 1F02              setDimmerLights_ERROR@lights 0026  
                           ??_setSw_Main 002F                            setLED@command 0022  
                          __size_of_main 0088                              _setRF_Learn 2F41  
               __end_of_CC2500_SIDLEMode 2D47                           _setRF_RxStatus 2EF6  
             setDimmerLights_Main@lights 0053              __end_of_DelayOffPointSelect 2E84  
             CC2500_WriteCommand@command 0023                       _DimmerLights_Close 227D  
               __size_of_TempPointSelect 0006                 ??_setDimmerLights_Switch 0023  
              __size_of_setDimmerReClock 0009                          _CC2500_ReadByte 2368  
                               clear_ram 2000                           ?_getTemp_ERROR 0071  
                     _CC2500_InitPATable 22CA                __size_of_setDimmer_Detect 0010  
    __size_of_getDimmerLights_StatusFlag 0027                      ?_DimmerLights_ERROR 0071  
          setDimmerLights_Trigger@lights 0023                       __end_of_setRF_Main 15EA  
            __size_of_Mcu_Initialization 0018                __end_ofi1_LoadPointSelect 2E68  
                   _CC2500_patable_vaule 185F                              ??_getRxData 0065  
                    ?_DimmerLights_Close 0071         setDimmerLights_TriggerAdj@lights 0023  
          ?_setDimmerLights_TriggerERROR 0022                      ?_CC2500_InitPATable 0071  
                      getLoad_ERROR@load 0022                        setLoad_ERROR@load 0031  
                        _CC2500_PowerRST 254F                       __end_of_setLoad_GO 2FA0  
                            _setBuz_Main 0A2B              __end_of_Flash_Memory_Modify 13F4  
                      ??_getPercentValue 0059                              _setLog_Code 18DE  
                  setLoad_StatusOff@load 0024                    setRF_RxStatus@command 0022  
            __end_of_Flash_Memory_Unlock 2DC1                          ??_SwPointSelect 0020  
                DimmerPointSelect@dimmer 0021                          _CC2500_WriteREG 1000  
                     __end_of_setSw_Main 0689                        setLoad_GO@command 0022  
                  ??_Load_Initialization 0023                     ??_DimmerLights_ERROR 002E  
                          _Transceive_GO 0384                            _Transceive_OK 0385  
                   setLoad_Count@command 0020                   ?_DlyOff_Initialization 0071  
                         _DelayTimejudge 19C6                            ?_getLoad_Safe 0071  
                           ?_getPF_ERROR 0071                 __end_of_getPowerFault_AD 18DE  
                   ??_DimmerLights_Close 0026                              ??_setINT_GO 0020  
           setDimmerLights_Close@command 0022                        BuzPointSelect@buz 0021  
                               intlevel1 0000                           _BuzPointSelect 2E68  
                   ??_CC2500_InitPATable 0025                  __size_of_setLoad_Enable 0015  
                 ?_Switch_Initialization 0071                   __end_of_setRF_RxStatus 2F05  
                        ?_setRFSW_Status 0022                        getTemp_ERROR@temp 0021  
                ??_CC2500_PowerOnInitial 0029   __end_of_setDimmerLights_Initialization 26AD  
__size_of_setDimmerLights_Initialization 0040           _setDimmerLights_Initialization 266D  
            __end_of_setDimmerLights_Adj 1C45                  ?_setTemp_Initialization 0071  
                            ??_setTxData 0022                          ??_getLoad_ERROR 0022  
                       ?_setRF_ReceiveGO 0073                   CC2500_InitPATable@temp 0026  
                   _MainT_Initialization 210D                    __size_of_RF_RxDisable 0034  
                      _RF_Initialization 2D2E                              getLoad_AD@i 002F  
                            getLoad_AD@j 002E                 ??_setLoad_Initialization 0022  
                          ?_getTemp_Safe 0071                     _Flash_Memory_Erasing 2E40  
            setLoad_LightsStatus@command 0023                       ?_RF_Initialization 0071  
                   setLoad_StatusOn@load 0023                               _SPI0Buffer 00BE  
            __end_of_getDimmer_LoadERROR 2ED8              __end_of_setDimmer_LoadERROR 2FC0  
        __end_of_DelayOff_Initialization 2D4C                               _OPTION_REG 0095  
                  __end_of_DelayOff_Main 2D65                      ??_RF_Initialization 0021  
                            getRxData@rf 0065                           _setDelayOff_GO 2774  
       __size_of_getDimmerLights_Trigger 0028         __size_of_setControl_Lights_Table 0082  
                      _setLoad_StatusOff 2586                   __end_of_DelayTimejudge 1A15  
                 __size_of_RfPointSelect 000E                        ??i1_RfPointSelect 0071  
                         ??_getLoad_Safe 0022     __size_of_Flash_Memory_Initialization 00B2  
                          ??_DlyOff_Main 002E                       ?_setLoad_StatusOff 0022  
                 __end_of_BuzPointSelect 2E76               setLoad_LightsStatus@lights 0022  
                setDimmer_Detect@command 0022                    __end_of_DelayTime_1us 247D  
                      ??_LoadPointSelect 0020                  __end_of_CC2500_ReadByte 2393  
            __end_of_getDimmer_TempERROR 2ECA             __end_of_setSw_Initialization 2DDE  
                        ?_setRF_RxStatus 0022              __end_of_setDimmer_TempERROR 2FB0  
                       _setSw_Main$18099 0031                     getPercentValue@value 005B  
                           _RF_RxDisable 24AE               ?_PowerFault_Initialization 0071  
             __end_of_LED_Initialization 2E5A         __size_of_setDimmerLights_Trigger 0011  
                      ?_setLoad_StatusOn 0022           __end_of_setTemp_Initialization 2E26  
                    ??_setLoad_StatusOff 0024                 __size_of_setPercentValue 002C  
                   setPercentValue@value 004C                          ??_getTemp_ERROR 0021  
              __end_of_RF_Initialization 2D33              setDimmerLights_Open@command 0022  
                     ??_setLoad_StatusOn 0023          __size_of_setDimmerLights_Switch 0011  
                      ??_RfSWPointSelect 0020                    ?_MainT_Initialization 0071  
                       setRF_RxStatus@rf 0023                    __end_of_CC2500_RxData 1E85  
                  __end_of_CC2500_TxData 1A69                           ??_getTemp_Safe 0021  
             setDimmerLights_Open@lights 0023                    _setLoad_AH_AL_Restore 241C  
                    setSw_Status@command 0022                  __end_of_CC2500_PowerRST 2586  
